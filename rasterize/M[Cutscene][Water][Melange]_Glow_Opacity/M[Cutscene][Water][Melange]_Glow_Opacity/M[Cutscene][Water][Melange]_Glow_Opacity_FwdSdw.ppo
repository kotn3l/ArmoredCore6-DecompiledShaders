#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[39];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_8;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1559;
uint _3247;
uint _3248;
uint _3249;
uint _3507;
uint _3508;
uint _3509;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _220 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _221 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _222 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _228 = inversesqrt(dot(vec3(_220, _221, _222), vec3(_220, _221, _222)));
    float _229 = _228 * _220;
    float _230 = _228 * _221;
    float _231 = _228 * _222;
    float _235 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _236 = _235 * NORMAL.x;
    float _237 = _235 * NORMAL.y;
    float _238 = _235 * NORMAL.z;
    float _242 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _243 = _242 * TANGENT.x;
    float _244 = _242 * TANGENT.y;
    float _245 = _242 * TANGENT.z;
    float _289 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _299 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _289);
    float _300 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _289);
    float _301 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _289);
    float _317 = cbMtdParam._m0[18u].z - cbMtdParam._m0[18u].y;
    float _319 = (sqrt(((_299 * _299) + (_300 * _300)) + (_301 * _301)) - cbMtdParam._m0[18u].y) / (isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0)));
    float _321 = cbMtdParam._m0[18u].w + _319;
    float _326 = _321 * cbMtdParam._m0[19u].y;
    float _3763 = isnan(0.0) ? _326 : (isnan(_326) ? 0.0 : max(_326, 0.0));
    float _329 = (isnan(1.0) ? _3763 : (isnan(_3763) ? 1.0 : min(_3763, 1.0))) * cbMtdParam._m0[23u].y;
    float _3774 = isnan(0.0) ? _329 : (isnan(_329) ? 0.0 : max(_329, 0.0));
    float _330 = isnan(1.0) ? _3774 : (isnan(_3774) ? 1.0 : min(_3774, 1.0));
    float _3785 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
    float _335 = isnan(1.0) ? _3785 : (isnan(_3785) ? 1.0 : min(_3785, 1.0));
    float _338 = ((cbMtdParam._m0[17u].w - cbMtdParam._m0[17u].x) * _335) + cbMtdParam._m0[17u].x;
    float _359 = cbMtdParam._m0[20u].z * _321;
    float _3796 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    vec4 _377 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _380 = _377.x;
    float _404 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _380)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _380))) - POSITION_1.w) / cbMtdParam._m0[17u].z;
    float _3807 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
    float _405 = isnan(1.0) ? _3807 : (isnan(_3807) ? 1.0 : min(_3807, 1.0));
    float _410 = 1.0 - (isnan(cbMtdParam._m0[21u].w) ? _405 : (isnan(_405) ? cbMtdParam._m0[21u].w : max(_405, cbMtdParam._m0[21u].w)));
    float _429 = (cbMtdParam._m0[24u].w + cbPerFrame._m0[22u].x) * cbMtdParam._m0[17u].y;
    float _437 = cbMtdParam._m0[30u].w * TEXCOORD.x;
    float _438 = cbMtdParam._m0[31u].x * TEXCOORD.y;
    vec4 _452 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_2, SS_BumpMap), vec2((((_429 * cbMtdParam._m0[31u].w) + _437) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_438 + (_429 * cbMtdParam._m0[32u].x)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _454 = _452.x;
    float _455 = _452.y;
    float _458 = _452.z - _335;
    float _3823 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0));
    float _459 = isnan(1.0) ? _3823 : (isnan(_3823) ? 1.0 : min(_3823, 1.0));
    float _471 = (_459 * 0.00999999977648258209228515625) + TEXCOORD.x;
    float _473 = (_459 * (-0.00999999977648258209228515625)) + TEXCOORD.y;
    vec4 _486 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(((_471 + (cbMtdParam._m0[27u].y * _429)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_473 + (cbMtdParam._m0[27u].z * _429)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _490 = _486.z;
    vec4 _503 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(((_471 + (cbMtdParam._m0[26u].w * _429)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_473 + (cbMtdParam._m0[27u].x * _429)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _507 = _503.z;
    float _510 = (_410 - _452.w) + (isnan(_507) ? _490 : (isnan(_490) ? _507 : max(_490, _507)));
    float _3839 = isnan(0.0) ? _510 : (isnan(_510) ? 0.0 : max(_510, 0.0));
    float _512 = (((cbMtdParam._m0[21u].z + TEXCOORD_3.x) - (_410 * cbMtdParam._m0[18u].x)) * (isnan(1.0) ? _3796 : (isnan(_3796) ? 1.0 : min(_3796, 1.0)))) * (isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0)));
    float _514 = _512 - (_512 * TEXCOORD_7.w);
    float _522 = (POSITION_1.w - cbMtdParam._m0[24u].y) * (1.0 / cbMtdParam._m0[24u].x);
    float _3850 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _523 = isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0));
    float _537 = (cbMtdParam._m0[29u].w * _429) + _437;
    float _538 = (cbMtdParam._m0[30u].x * _429) + _438;
    float _545 = cbMtdParam._m0[29u].y * _429;
    float _546 = cbMtdParam._m0[29u].z * _429;
    vec4 _566 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * (_545 + (_437 * cbMtdParam._m0[31u].y))) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * (_546 + (_438 * cbMtdParam._m0[31u].z))) + cbTextureTilingScale._m0[3u].w));
    float _573 = (_566.x * 2.0) + (-1.0);
    float _575 = (_566.y * 2.0) + (-1.0);
    float _579 = 1.0 - dot(vec2(_573, _575), vec2(_573, _575));
    float _3861 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _581 = sqrt(isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0)));
    float _584 = fma(_581, _236, fma(_575, _243, _573 * _229));
    float _587 = fma(_581, _237, fma(_575, _244, _573 * _230));
    float _590 = fma(_581, _238, fma(_575, _245, _573 * _231));
    float _594 = inversesqrt(dot(vec3(_584, _587, _590), vec3(_584, _587, _590)));
    float _595 = cbPerFrame._m0[22u].x * 2.0;
    float _596 = _595 * cbMtdParam._m0[22u].w;
    float _600 = ((_584 * 0.5) * _594) + (-0.25);
    float _604 = ((_587 * 0.5) * _594) + (-0.25);
    float _605 = _604 * cbMtdParam._m0[23u].x;
    float _607 = (-0.0) - (cbMtdParam._m0[23u].x * _600);
    float _608 = fract(_596);
    float _610 = fract(_596 + 0.5);
    float _621 = abs((_608 * 2.0) + (-1.0));
    vec4 _638 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_608 * _607) + _537) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_605 * _608) + _538) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _640 = _638.x;
    float _641 = _638.y;
    float _642 = _638.z;
    vec4 _643 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_610 * _607) + _537) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_605 * _610) + _538) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _654 = ((_643.x - _640) * _621) + _640;
    float _655 = ((_643.y - _641) * _621) + _641;
    float _656 = ((_643.z - _642) * _621) + _642;
    float _672 = (cbMtdParam._m0[28u].w * _429) + _437;
    float _673 = (cbMtdParam._m0[29u].x * _429) + _438;
    float _676 = _595 * cbMtdParam._m0[22u].z;
    float _677 = _604 * cbMtdParam._m0[22u].y;
    float _679 = (-0.0) - (cbMtdParam._m0[22u].y * _600);
    float _680 = fract(_676);
    float _682 = fract(_676 + 0.5);
    float _693 = abs((_680 * 2.0) + (-1.0));
    vec4 _710 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_680 * _679) + _672) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_677 * _680) + _673) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _712 = _710.x;
    float _713 = _710.y;
    float _714 = _710.z;
    vec4 _715 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_682 * _679) + _672) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_677 * _682) + _673) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _749 = (((((cbMtdParam._m0[14u].x - cbMtdParam._m0[16u].x) * _654) * cbMtdParam._m0[25u].x) + cbMtdParam._m0[16u].x) * (((_715.x - _712) * _693) + _712)) + (_654 * cbMtdParam._m0[15u].x);
    float _752 = (((((cbMtdParam._m0[14u].y - cbMtdParam._m0[16u].y) * _655) * cbMtdParam._m0[25u].x) + cbMtdParam._m0[16u].y) * (((_715.y - _713) * _693) + _713)) + (_655 * cbMtdParam._m0[15u].y);
    float _755 = ((((cbMtdParam._m0[25u].x * _656) * (cbMtdParam._m0[14u].z - cbMtdParam._m0[16u].z)) + cbMtdParam._m0[16u].z) * (((_715.z - _714) * _693) + _714)) + (_656 * cbMtdParam._m0[15u].z);
    float _759 = _749 - (_749 * _523);
    float _760 = _752 - (_752 * _523);
    float _761 = _755 - (_755 * _523);
    float _766 = (POSITION_1.w - cbMtdParam._m0[23u].w) * (1.0 / cbMtdParam._m0[23u].z);
    float _3872 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    float _767 = isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0));
    float _777 = (cbMtdParam._m0[30u].y * _429) + _437;
    float _778 = (cbMtdParam._m0[30u].z * _429) + _438;
    vec4 _791 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * ((_437 * cbMtdParam._m0[32u].y) + _545)) + cbTextureTilingScale._m0[3u].z, (((_438 * cbMtdParam._m0[32u].z) + _546) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _797 = (_791.x * 2.0) + (-1.0);
    float _798 = (_791.y * 2.0) + (-1.0);
    float _802 = 1.0 - dot(vec2(_797, _798), vec2(_797, _798));
    float _3883 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
    float _804 = sqrt(isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0)));
    float _807 = fma(_804, _236, fma(_798, _243, _797 * _229));
    float _810 = fma(_804, _237, fma(_798, _244, _797 * _230));
    float _813 = fma(_804, _238, fma(_798, _245, _797 * _231));
    float _817 = inversesqrt(dot(vec3(_807, _810, _813), vec3(_807, _810, _813)));
    float _818 = _595 * cbMtdParam._m0[25u].w;
    float _825 = (((_810 * 0.5) * _817) + (-0.25)) * cbMtdParam._m0[25u].z;
    float _827 = (-0.0) - (cbMtdParam._m0[25u].z * (((_807 * 0.5) * _817) + (-0.25)));
    float _828 = fract(_818);
    float _830 = fract(_818 + 0.5);
    float _833 = (_828 * _827) + _777;
    float _834 = (_825 * _828) + _778;
    float _837 = (_830 * _827) + _777;
    float _838 = (_825 * _830) + _778;
    float _841 = abs((_828 * 2.0) + (-1.0));
    vec4 _858 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_833 * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (_834 * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _860 = _858.x;
    float _861 = _858.y;
    float _862 = _858.z;
    vec4 _863 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_837 * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (_838 * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _874 = ((_863.x - _860) * _841) + _860;
    float _875 = ((_863.y - _861) * _841) + _861;
    float _876 = ((_863.z - _862) * _841) + _862;
    vec4 _901 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_9, SS_DiffuseMap), vec2((_833 * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (_834 * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _903 = _901.x;
    float _904 = _901.y;
    float _905 = _901.z;
    vec4 _906 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_9, SS_DiffuseMap), vec2((_837 * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (_838 * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _957 = (cbMtdParam._m0[24u].z * cbMtdParam._m0[13u].x) * ((_759 + (_514 * cbMtdParam._m0[12u].x)) + ((((_874 * cbMtdParam._m0[9u].x) - _759) + (((((cbMtdParam._m0[11u].x - cbMtdParam._m0[10u].x) * _874) * cbMtdParam._m0[25u].y) + cbMtdParam._m0[10u].x) * (((_906.x - _903) * _841) + _903))) * _767));
    float _959 = (cbMtdParam._m0[24u].z * cbMtdParam._m0[13u].y) * ((_760 + (_514 * cbMtdParam._m0[12u].y)) + ((((_875 * cbMtdParam._m0[9u].y) - _760) + (((((cbMtdParam._m0[11u].y - cbMtdParam._m0[10u].y) * _875) * cbMtdParam._m0[25u].y) + cbMtdParam._m0[10u].y) * (((_906.y - _904) * _841) + _904))) * _767));
    float _961 = (cbMtdParam._m0[24u].z * cbMtdParam._m0[13u].z) * ((_761 + (_514 * cbMtdParam._m0[12u].z)) + ((((_876 * cbMtdParam._m0[9u].z) - _761) + ((((cbMtdParam._m0[25u].y * _876) * (cbMtdParam._m0[11u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z) * (((_906.z - _905) * _841) + _905))) * _767));
    float _3894 = isnan(0.0) ? TEXCOORD_3.y : (isnan(TEXCOORD_3.y) ? 0.0 : max(TEXCOORD_3.y, 0.0));
    float _968 = isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0));
    float _978 = _319 / cbMtdParam._m0[20u].x;
    float _3905 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _979 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
    float _1007 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1011 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    vec4 _1027 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * ((_1007 / cbMtdParam._m0[19u].x) + (cbMtdParam._m0[32u].w * _429))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((_1011 / cbMtdParam._m0[19u].x) + (cbMtdParam._m0[33u].x * _429))) + cbTextureTilingScale._m0[1u].w));
    float _1031 = _459 * 0.23999999463558197021484375;
    float _1033 = _459 * (-0.20000000298023223876953125);
    float _1044 = cbMtdParam._m0[33u].w * TEXCOORD.x;
    float _1045 = cbMtdParam._m0[34u].x * TEXCOORD.y;
    vec4 _1060 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[33u].y * _429) + _1031) + _1044) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[33u].z * _429) + _1033) + _1045) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1076 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1044 + _1031) + (cbMtdParam._m0[34u].y * _429)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1045 + _1033) + (cbMtdParam._m0[34u].z * _429)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1096 = (((_503.x + (-0.5)) * 0.5) + _486.x) + (((_1060.x + (-1.0)) + _1076.x) * cbMtdParam._m0[21u].y);
    float _1097 = (((_503.y + (-0.5)) * 0.5) + _486.y) + (((_1060.y + (-1.0)) + _1076.y) * cbMtdParam._m0[21u].y);
    float _1102 = ((_1027.x - _1096) * _979) + _1096;
    float _1103 = ((_1027.y - _1097) * _979) + _1097;
    float _1105 = _319 / cbMtdParam._m0[19u].w;
    float _3916 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
    float _1106 = isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0));
    float _1122 = ((((_968 * (0.5 - _454)) + _454) + (((_1102 + (-0.5)) + ((0.5 - _1102) * _1106)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1123 = ((((_968 * (0.5 - _455)) + _455) + (((_1103 + (-0.5)) + ((0.5 - _1103) * _1106)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1124 = dot(vec2(_1122, _1123), vec2(_1122, _1123));
    float _3927 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
    float _1129 = sqrt(1.0 - (isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0))));
    float _1131 = cbMtdParam._m0[20u].w * _321;
    float _3938 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
    float _1137 = ((cbMtdParam._m0[21u].x - cbMtdParam._m0[19u].z) * (isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0)))) + cbMtdParam._m0[19u].z;
    float _1142 = _1122 - (_1137 * _1122);
    float _1143 = _1123 - (_1137 * _1123);
    float _1144 = (_1137 * (1.0 - _1129)) + _1129;
    float _1154 = fma(_1129, _236, fma(_1123, _243, _1122 * _229));
    float _1157 = fma(_1129, _237, fma(_1123, _244, _1122 * _230));
    float _1160 = fma(_1129, _238, fma(_1123, _245, _1122 * _231));
    float _1164 = inversesqrt(dot(vec3(_1154, _1157, _1160), vec3(_1154, _1157, _1160)));
    float _1165 = _1164 * _1154;
    float _1166 = _1164 * _1157;
    float _1167 = _1164 * _1160;
    float _1170 = fma(_1144, _236, fma(_1143, _243, _1142 * _229));
    float _1173 = fma(_1144, _237, fma(_1143, _244, _1142 * _230));
    float _1176 = fma(_1144, _238, fma(_1143, _245, _1142 * _231));
    float _1180 = inversesqrt(dot(vec3(_1170, _1173, _1176), vec3(_1170, _1173, _1176)));
    float _1181 = _1180 * _1170;
    float _1182 = _1180 * _1173;
    float _1183 = _1180 * _1176;
    float _3949 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
    float _3960 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
    float _1185 = isnan(1.0) ? _3960 : (isnan(_3960) ? 1.0 : min(_3960, 1.0));
    float _1199 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1219 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1228 = cbSceneParam._m0[71u].x - (_1007 / _1219);
    float _1229 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1219);
    float _1230 = cbSceneParam._m0[71u].z - (_1011 / _1219);
    float _1234 = inversesqrt(dot(vec3(_1228, _1229, _1230), vec3(_1228, _1229, _1230)));
    float _1235 = _1228 * _1234;
    float _1236 = _1229 * _1234;
    float _1237 = _1230 * _1234;
    float _1242 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1243 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1245 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1254 = (_1245.x * 2.0) + (-1.0);
    float _1255 = (_1245.y * 2.0) + (-1.0);
    float _1256 = (_1245.z * 2.0) + (-1.0);
    float _1260 = inversesqrt(dot(vec3(_1254, _1255, _1256), vec3(_1254, _1255, _1256)));
    float _1271 = ((TEXCOORD.w >= 1.0) || (((TEXCOORD.z <= 0.0) || (TEXCOORD.z >= 1.0)) || (TEXCOORD.w <= 0.0))) ? 0.0 : _1245.w;
    float _1278 = (((_1254 * _1260) - _1165) * _1271) + _1165;
    float _1279 = (((_1255 * _1260) - _1166) * _1271) + _1166;
    float _1280 = (((_1256 * _1260) - _1167) * _1271) + _1167;
    float _1298 = fma(_1280, cbSceneParam._m0[5u].z, fma(_1279, cbSceneParam._m0[5u].y, _1278 * cbSceneParam._m0[5u].x));
    float _1301 = fma(_1280, cbSceneParam._m0[6u].z, fma(_1279, cbSceneParam._m0[6u].y, _1278 * cbSceneParam._m0[6u].x));
    float _1304 = fma(_1280, cbSceneParam._m0[7u].z, fma(_1279, cbSceneParam._m0[7u].y, _1278 * cbSceneParam._m0[7u].x));
    vec4 _1313 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1242, cbSceneParam._m0[86u].y * _1243));
    float _1316 = _1313.x * TEXCOORD_3.w;
    float _1320 = abs(dot(vec3(_1235, _1236, _1237), vec3(_1278, _1279, _1280)));
    float _3971 = isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0));
    float _1332 = dot(vec3(_1181, _1182, _1183), vec3(_1235, _1236, _1237)) * 2.0;
    float _1336 = (_1332 * _1181) - _1235;
    float _1337 = (_1332 * _1182) - _1236;
    float _1338 = (_1332 * _1183) - _1237;
    float _1342 = abs(dot(vec3(_1235, _1236, _1237), vec3(_1181, _1182, _1183)));
    float _3982 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
    float _1344 = sqrt(_1185);
    float _1356 = exp2((_1344 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1344 * 3.0));
    float _1387 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1391 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1395 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1558;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1421 = fma(_1395, cbModelParam._m0[26u].z, fma(_1391, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1387));
        float _1425 = fma(_1395, cbModelParam._m0[27u].z, fma(_1391, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1387));
        float _1429 = fma(_1395, cbModelParam._m0[28u].z, fma(_1391, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1387));
        float _1452 = _1387 + _1181;
        float _1453 = _1391 + _1182;
        float _1454 = _1395 + _1183;
        float _1464 = fma(_1454, cbModelParam._m0[26u].z, fma(_1453, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1452)) - _1421;
        float _1465 = fma(_1454, cbModelParam._m0[27u].z, fma(_1453, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1452)) - _1425;
        float _1466 = fma(_1454, cbModelParam._m0[28u].z, fma(_1453, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1452)) - _1429;
        float _1470 = inversesqrt(dot(vec3(_1464, _1465, _1466), vec3(_1464, _1465, _1466)));
        float _1482 = ((_1470 * _1464) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1421 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1483 = ((_1470 * _1465) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1425 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1484 = ((_1470 * _1466) / cbModelParam._m0[34u].z) + ((((((_1429 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1487 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1482, _1483, _1484), 0.0);
        vec4 _1494 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1482, _1483, _1484), 0.0);
        vec4 _1501 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1482, _1483, _1484), 0.0);
        vec4 _1508 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1482, _1483, _1484), 0.0);
        float _1521 = exp2((_1487.w + (-0.5)) * 20.0) * 2.0;
        float _1531 = exp2((_1494.w + (-0.5)) * 20.0) * 2.0;
        float _1541 = exp2((_1501.w + (-0.5)) * 20.0) * 2.0;
        float _1551 = exp2((_1508.w + (-0.5)) * 20.0) * 2.0;
        float _1552 = _1551 * (_1508.x + (-0.5));
        float _1553 = _1551 * (_1508.y + (-0.5));
        float _1554 = _1551 * (_1508.z + (-0.5));
        _1558 = _1521 * (_1487.z + (-0.5));
        _1560 = _1521 * (_1487.y + (-0.5));
        _1561 = _1521 * (_1487.x + (-0.5));
        _1562 = _1531 * (_1494.z + (-0.5));
        _1563 = _1531 * (_1494.y + (-0.5));
        _1564 = _1531 * (_1494.x + (-0.5));
        _1565 = _1541 * (_1501.z + (-0.5));
        _1566 = _1541 * (_1501.y + (-0.5));
        _1567 = _1541 * (_1501.x + (-0.5));
        _1568 = isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0));
        _1569 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
        _1570 = isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0));
    }
    else
    {
        _1558 = _1559;
        _1560 = _1559;
        _1561 = _1559;
        _1562 = _1559;
        _1563 = _1559;
        _1564 = _1559;
        _1565 = _1559;
        _1566 = _1559;
        _1567 = _1559;
        _1568 = _1559;
        _1569 = _1559;
        _1570 = _1559;
    }
    float _1728;
    float _1729;
    float _1730;
    float _1731;
    float _1732;
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    float _1738;
    float _1739;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1593 = fma(_1395, cbModelParam._m0[30u].z, fma(_1391, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1387));
        float _1597 = fma(_1395, cbModelParam._m0[31u].z, fma(_1391, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1387));
        float _1601 = fma(_1395, cbModelParam._m0[32u].z, fma(_1391, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1387));
        float _1624 = _1387 + _1181;
        float _1625 = _1391 + _1182;
        float _1626 = _1395 + _1183;
        float _1636 = fma(_1626, cbModelParam._m0[30u].z, fma(_1625, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1624)) - _1593;
        float _1637 = fma(_1626, cbModelParam._m0[31u].z, fma(_1625, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1624)) - _1597;
        float _1638 = fma(_1626, cbModelParam._m0[32u].z, fma(_1625, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1624)) - _1601;
        float _1642 = inversesqrt(dot(vec3(_1636, _1637, _1638), vec3(_1636, _1637, _1638)));
        float _1654 = ((_1642 * _1636) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1593 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1655 = ((_1642 * _1637) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1597 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1656 = ((_1642 * _1638) / cbModelParam._m0[35u].z) + ((((((_1601 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1658 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1654, _1655, _1656), 0.0);
        vec4 _1665 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1654, _1655, _1656), 0.0);
        vec4 _1672 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1654, _1655, _1656), 0.0);
        vec4 _1679 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1654, _1655, _1656), 0.0);
        float _1691 = exp2((_1658.w + (-0.5)) * 20.0) * 2.0;
        float _1701 = exp2((_1665.w + (-0.5)) * 20.0) * 2.0;
        float _1711 = exp2((_1672.w + (-0.5)) * 20.0) * 2.0;
        float _1721 = exp2((_1679.w + (-0.5)) * 20.0) * 2.0;
        float _1722 = _1721 * (_1679.x + (-0.5));
        float _1723 = _1721 * (_1679.y + (-0.5));
        float _1724 = _1721 * (_1679.z + (-0.5));
        _1728 = _1691 * (_1658.z + (-0.5));
        _1729 = _1691 * (_1658.y + (-0.5));
        _1730 = _1691 * (_1658.x + (-0.5));
        _1731 = _1701 * (_1665.z + (-0.5));
        _1732 = _1701 * (_1665.y + (-0.5));
        _1733 = _1701 * (_1665.x + (-0.5));
        _1734 = _1711 * (_1672.z + (-0.5));
        _1735 = _1711 * (_1672.y + (-0.5));
        _1736 = _1711 * (_1672.x + (-0.5));
        _1737 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0));
        _1738 = isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0));
        _1739 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
    }
    else
    {
        _1728 = _1559;
        _1729 = _1559;
        _1730 = _1559;
        _1731 = _1559;
        _1732 = _1559;
        _1733 = _1559;
        _1734 = _1559;
        _1735 = _1559;
        _1736 = _1559;
        _1737 = _1559;
        _1738 = _1559;
        _1739 = _1559;
    }
    float _1753 = _1336 * 0.5;
    float _1754 = _1337 * 0.5;
    float _1755 = _1338 * 0.5;
    float _1756 = dot(vec4(_1753, _1754, _1755, 1.0), vec4(_1730, _1733, _1736, _1739));
    float _1759 = dot(vec4(_1753, _1754, _1755, 1.0), vec4(_1729, _1732, _1735, _1738));
    float _1762 = dot(vec4(_1753, _1754, _1755, 1.0), vec4(_1728, _1731, _1734, _1737));
    float _1797;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1769 = dot(vec4(_1753, _1754, _1755, 1.0), vec4(_1558, _1562, _1565, _1568));
        float _1773 = dot(vec4(_1753, _1754, _1755, 1.0), vec4(_1560, _1563, _1566, _1569));
        float _1777 = dot(vec4(_1753, _1754, _1755, 1.0), vec4(_1561, _1564, _1567, _1570));
        float _1784 = dot(vec4(cbModelParam._m0[39u]), vec4(_1753, _1754, _1755, 1.0));
        _1797 = dot(vec3(isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0)), isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0)), isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1784) ? 0.0 : (isnan(0.0) ? _1784 : max(0.0, _1784))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1797 = 1.0;
    }
    float _1808;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1799 = dot(vec4(cbModelParam._m0[40u]), vec4(_1753, _1754, _1755, 1.0));
        _1808 = dot(vec3(isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0)), isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0)), isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1799) ? 0.0 : (isnan(0.0) ? _1799 : max(0.0, _1799))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1808 = 1.0;
    }
    float _1812 = (_1808 * cbModelParam._m0[1u].x) + (_1797 * (1.0 - cbModelParam._m0[1u].x));
    float _1819 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1185);
    float _1820 = isnan(_1819) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1819 : min(cbModelParam._m0[25u].z, _1819));
    float _1900;
    float _1902;
    float _1904;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1867 = fma(_1395, cbModelParam._m0[13u].z, fma(_1391, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1387)) + cbModelParam._m0[13u].w;
        float _1871 = fma(_1395, cbModelParam._m0[14u].z, fma(_1391, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1387)) + cbModelParam._m0[14u].w;
        float _1875 = fma(_1395, cbModelParam._m0[15u].z, fma(_1391, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1387)) + cbModelParam._m0[15u].w;
        float _1878 = fma(_1338, cbModelParam._m0[13u].z, fma(_1337, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1336));
        float _1881 = fma(_1338, cbModelParam._m0[14u].z, fma(_1337, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1336));
        float _1884 = fma(_1338, cbModelParam._m0[15u].z, fma(_1337, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1336));
        float _1912;
        if (_1878 > 0.0)
        {
            _1912 = abs((1.0 - _1867) / _1878);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1878 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1867 + 1.0) / _1878);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1912 = frontier_phi_14_12_ladder;
        }
        float _2099;
        if (_1881 > 0.0)
        {
            _2099 = abs((1.0 - _1871) / _1881);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1881 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1871 + 1.0) / _1881);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2099 = frontier_phi_23_19_ladder;
        }
        float _2505;
        if (_1884 > 0.0)
        {
            _2505 = abs((1.0 - _1875) / _1884);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1884 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1875 + 1.0) / _1884);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2505 = frontier_phi_35_30_ladder;
        }
        float _2507 = isnan(_2099) ? _1912 : (isnan(_1912) ? _2099 : min(_1912, _2099));
        float _2508 = isnan(_2505) ? _2507 : (isnan(_2507) ? _2505 : min(_2507, _2505));
        float _2512 = (_2508 * _1878) + _1867;
        float _2513 = (_2508 * _1881) + _1871;
        float _2514 = (_2508 * _1884) + _1875;
        float _2515 = _2508 * 9.9999997473787516355514526367188e-05;
        float _2517 = (-1.0) - _2515;
        float _2519 = _2515 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2514 > _2519) || ((_2514 < _2517) || ((_2513 > _2519) || ((_2513 < _2517) || ((_2512 < _2517) || (_2512 > _2519))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2874 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2514, cbModelParam._m0[9u].z, fma(_2513, cbModelParam._m0[9u].y, _2512 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2514, cbModelParam._m0[10u].z, fma(_2513, cbModelParam._m0[10u].y, _2512 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2514, cbModelParam._m0[11u].z, fma(_2513, cbModelParam._m0[11u].y, _2512 * cbModelParam._m0[11u].x))), _1820);
            frontier_phi_13_35_ladder = _2874.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2874.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2874.x * cbModelParam._m0[1u].y;
        }
        _1900 = frontier_phi_13_35_ladder_2;
        _1902 = frontier_phi_13_35_ladder_1;
        _1904 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1888 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1336, _1337, _1338), _1820);
        _1900 = _1888.x * cbModelParam._m0[1u].y;
        _1902 = _1888.y * cbModelParam._m0[1u].y;
        _1904 = _1888.z * cbModelParam._m0[1u].y;
    }
    float _1908 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1185);
    float _1909 = isnan(_1908) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1908 : min(cbModelParam._m0[25u].w, _1908));
    float _1998;
    float _2000;
    float _2002;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1962 = fma(_1395, cbModelParam._m0[21u].z, fma(_1391, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1387)) + cbModelParam._m0[21u].w;
        float _1966 = fma(_1395, cbModelParam._m0[22u].z, fma(_1391, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1387)) + cbModelParam._m0[22u].w;
        float _1970 = fma(_1395, cbModelParam._m0[23u].z, fma(_1391, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1387)) + cbModelParam._m0[23u].w;
        float _1973 = fma(_1338, cbModelParam._m0[21u].z, fma(_1337, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1336));
        float _1976 = fma(_1338, cbModelParam._m0[22u].z, fma(_1337, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1336));
        float _1979 = fma(_1338, cbModelParam._m0[23u].z, fma(_1337, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1336));
        float _2104;
        if (_1973 > 0.0)
        {
            _2104 = abs((1.0 - _1962) / _1973);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1973 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1962 + 1.0) / _1973);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2104 = frontier_phi_25_21_ladder;
        }
        float _2532;
        if (_1976 > 0.0)
        {
            _2532 = abs((1.0 - _1966) / _1976);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1976 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1966 + 1.0) / _1976);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2532 = frontier_phi_37_32_ladder;
        }
        float _3032;
        if (_1979 > 0.0)
        {
            _3032 = abs((1.0 - _1970) / _1979);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1979 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1970 + 1.0) / _1979);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _3032 = frontier_phi_49_44_ladder;
        }
        float _3034 = isnan(_2532) ? _2104 : (isnan(_2104) ? _2532 : min(_2104, _2532));
        float _3035 = isnan(_3032) ? _3034 : (isnan(_3034) ? _3032 : min(_3034, _3032));
        float _3039 = (_3035 * _1973) + _1962;
        float _3040 = (_3035 * _1976) + _1966;
        float _3041 = (_3035 * _1979) + _1970;
        float _3042 = _3035 * 9.9999997473787516355514526367188e-05;
        float _3043 = (-1.0) - _3042;
        float _3045 = _3042 + 1.0;
        float frontier_phi_22_49_ladder;
        float frontier_phi_22_49_ladder_1;
        float frontier_phi_22_49_ladder_2;
        if ((_3041 > _3045) || ((_3041 < _3043) || ((_3040 > _3045) || ((_3040 < _3043) || ((_3039 < _3043) || (_3039 > _3045))))))
        {
            frontier_phi_22_49_ladder = 0.0;
            frontier_phi_22_49_ladder_1 = 0.0;
            frontier_phi_22_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3150 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3041, cbModelParam._m0[17u].z, fma(_3040, cbModelParam._m0[17u].y, _3039 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3041, cbModelParam._m0[18u].z, fma(_3040, cbModelParam._m0[18u].y, _3039 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3041, cbModelParam._m0[19u].z, fma(_3040, cbModelParam._m0[19u].y, _3039 * cbModelParam._m0[19u].x))), _1909);
            frontier_phi_22_49_ladder = _3150.z * cbModelParam._m0[1u].z;
            frontier_phi_22_49_ladder_1 = _3150.y * cbModelParam._m0[1u].z;
            frontier_phi_22_49_ladder_2 = _3150.x * cbModelParam._m0[1u].z;
        }
        _1998 = frontier_phi_22_49_ladder_2;
        _2000 = frontier_phi_22_49_ladder_1;
        _2002 = frontier_phi_22_49_ladder;
    }
    else
    {
        vec4 _1982 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1336, _1337, _1338), _1909);
        _1998 = _1982.x * cbModelParam._m0[1u].z;
        _2000 = _1982.y * cbModelParam._m0[1u].z;
        _2002 = _1982.z * cbModelParam._m0[1u].z;
    }
    float _2014 = ((((1.0 - _1356) * ((_1344 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1356 * _1344)) * _1316;
    float _2015 = _2014 * ((cbModelParam._m0[1u].w * (_1998 - _1900)) + _1900);
    float _2016 = _2014 * ((cbModelParam._m0[1u].w * (_2000 - _1902)) + _1902);
    float _2017 = _2014 * ((cbModelParam._m0[1u].w * (_2002 - _1904)) + _1904);
    float _2038 = fma(_2017, cbSceneParam._m0[89u].z, fma(_2016, cbSceneParam._m0[89u].y, _2015 * cbSceneParam._m0[89u].x));
    float _2041 = fma(_2017, cbSceneParam._m0[90u].z, fma(_2016, cbSceneParam._m0[90u].y, _2015 * cbSceneParam._m0[90u].x));
    float _2044 = fma(_2017, cbSceneParam._m0[91u].z, fma(_2016, cbSceneParam._m0[91u].y, _2015 * cbSceneParam._m0[91u].x));
    float _2078 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2082 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2086 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2090 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2091 = _2078 / _2090;
    float _2092 = _2082 / _2090;
    float _2093 = _2086 / _2090;
    float _2239;
    float _2240;
    float _2241;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2120 = ((uint(_2093 > cbSceneParam._m0[59u].y) + uint(_2093 > cbSceneParam._m0[59u].x)) + uint(_2093 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2121 = _2120 + 43u;
        uint _2129 = _2120 + 44u;
        uint _2137 = _2120 + 45u;
        uint _2145 = _2120 + 46u;
        float _2156 = fma(_2090, cbSceneParam._m0[_2121].w, fma(_2086, cbSceneParam._m0[_2121].z, fma(_2082, cbSceneParam._m0[_2121].y, _2078 * cbSceneParam._m0[_2121].x)));
        float _2160 = fma(_2090, cbSceneParam._m0[_2129].w, fma(_2086, cbSceneParam._m0[_2129].z, fma(_2082, cbSceneParam._m0[_2129].y, _2078 * cbSceneParam._m0[_2129].x)));
        float _2168 = fma(_2090, cbSceneParam._m0[_2145].w, fma(_2086, cbSceneParam._m0[_2145].z, fma(_2082, cbSceneParam._m0[_2145].y, _2078 * cbSceneParam._m0[_2145].x)));
        float _2172 = cbSceneParam._m0[33u].z * _2168;
        float _2174 = cbSceneParam._m0[33u].w * _2168;
        float _2177 = fma(_2090, cbSceneParam._m0[_2137].w, fma(_2086, cbSceneParam._m0[_2137].z, fma(_2082, cbSceneParam._m0[_2137].y, _2078 * cbSceneParam._m0[_2137].x))) / _2168;
        float _2225 = (cbSceneParam._m0[33u].x - sqrt(((_2092 * _2092) + (_2091 * _2091)) + (_2093 * _2093))) * cbSceneParam._m0[33u].y;
        float _4108 = isnan(0.0) ? _2225 : (isnan(_2225) ? 0.0 : max(_2225, 0.0));
        float _2232 = (isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2172 + _2156) / _2168, (_2174 + _2160) / _2168), _2177), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2174 + _2156) / _2168, (_2160 - _2172) / _2168), _2177), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2156 - _2172) / _2168, (_2160 - _2174) / _2168), _2177), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2156 - _2174) / _2168, (_2172 + _2160) / _2168), _2177), 0.0)).x), vec4(0.25)));
        _2239 = 1.0 - (_2232 * cbSceneParam._m0[34u].x);
        _2240 = 1.0 - (_2232 * cbSceneParam._m0[34u].y);
        _2241 = 1.0 - (_2232 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2239 = 1.0;
        _2240 = 1.0;
        _2241 = 1.0;
    }
    float _2305;
    float _2307;
    float _2309;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2293 = fma(_2090, cbSceneParam._m0[63u].w, fma(_2086, cbSceneParam._m0[63u].z, fma(_2082, cbSceneParam._m0[63u].y, _2078 * cbSceneParam._m0[63u].x)));
        float _2294 = fma(_2090, cbSceneParam._m0[60u].w, fma(_2086, cbSceneParam._m0[60u].z, fma(_2082, cbSceneParam._m0[60u].y, _2078 * cbSceneParam._m0[60u].x))) / _2293;
        float _2295 = fma(_2090, cbSceneParam._m0[61u].w, fma(_2086, cbSceneParam._m0[61u].z, fma(_2082, cbSceneParam._m0[61u].y, _2078 * cbSceneParam._m0[61u].x))) / _2293;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2294 >= cbSceneParam._m0[64u].x) && (_2295 >= cbSceneParam._m0[64u].y)) && (_2294 <= cbSceneParam._m0[64u].z)) && (_2295 <= cbSceneParam._m0[64u].w))
        {
            float _2545 = fma(_2090, cbSceneParam._m0[62u].w, fma(_2086, cbSceneParam._m0[62u].z, fma(_2082, cbSceneParam._m0[62u].y, _2078 * cbSceneParam._m0[62u].x))) / _2293;
            float _2549 = isnan(cbSceneParam._m0[41u].w) ? _2545 : (isnan(_2545) ? cbSceneParam._m0[41u].w : max(_2545, cbSceneParam._m0[41u].w));
            float _2592 = (cbSceneParam._m0[33u].x - sqrt(((_2092 * _2092) + (_2091 * _2091)) + (_2093 * _2093))) * cbSceneParam._m0[33u].y;
            float _4124 = isnan(0.0) ? _2592 : (isnan(_2592) ? 0.0 : max(_2592, 0.0));
            float _2599 = (isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2294, cbSceneParam._m0[33u].w + _2295), _2549), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2294, _2295 - cbSceneParam._m0[33u].z), _2549), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2294 - cbSceneParam._m0[33u].z, _2295 - cbSceneParam._m0[33u].w), _2549), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2294 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2295), _2549), 0.0)).x), vec4(0.25)));
            float _2603 = 1.0 - (_2599 * cbSceneParam._m0[34u].x);
            float _2604 = 1.0 - (_2599 * cbSceneParam._m0[34u].y);
            float _2605 = 1.0 - (_2599 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2605) ? _2241 : (isnan(_2241) ? _2605 : min(_2241, _2605));
            frontier_phi_34_33_ladder_1 = isnan(_2603) ? _2239 : (isnan(_2239) ? _2603 : min(_2239, _2603));
            frontier_phi_34_33_ladder_2 = isnan(_2604) ? _2240 : (isnan(_2240) ? _2604 : min(_2240, _2604));
        }
        else
        {
            frontier_phi_34_33_ladder = _2241;
            frontier_phi_34_33_ladder_1 = _2239;
            frontier_phi_34_33_ladder_2 = _2240;
        }
        _2305 = frontier_phi_34_33_ladder_1;
        _2307 = frontier_phi_34_33_ladder_2;
        _2309 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2305 = _2239;
        _2307 = _2240;
        _2309 = _2241;
    }
    uint _2311 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _2315 = floatBitsToUint(cbInstanceData._m0[_2311 + 5u]);
    uint _2317 = _2315.x * 14u;
    uint _2318 = _2317 + 13u;
    float _2323 = _1316 + (-1.0);
    float _2326 = (cbLight._m0[_2318].x * _2323) + 1.0;
    float _2327 = (cbLight._m0[_2318].y * _2323) + 1.0;
    uint _2331 = _2317 + 8u;
    float _2347 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2317].w)) * _1185) * 0.949999988079071044921875);
    float _2348 = _2347 * _2347;
    float _2349 = cbLight._m0[_2317].x + _1235;
    float _2350 = cbLight._m0[_2317].y + _1236;
    float _2351 = cbLight._m0[_2317].z + _1237;
    float _2355 = inversesqrt(dot(vec3(_2349, _2350, _2351), vec3(_2349, _2350, _2351)));
    float _2356 = _2355 * _2349;
    float _2357 = _2355 * _2350;
    float _2358 = _2355 * _2351;
    float _2359 = dot(vec3(_1278, _1279, _1280), vec3(cbLight._m0[_2317].xyz));
    float _4150 = isnan(0.0) ? _2359 : (isnan(_2359) ? 0.0 : max(_2359, 0.0));
    float _2362 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
    float _2363 = dot(vec3(_1278, _1279, _1280), vec3(_1235, _1236, _1237));
    float _4161 = isnan(0.0) ? _2363 : (isnan(_2363) ? 0.0 : max(_2363, 0.0));
    float _2366 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
    float _2367 = dot(vec3(_1278, _1279, _1280), vec3(_2356, _2357, _2358));
    float _4172 = isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0));
    float _2370 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
    float _2371 = dot(vec3(cbLight._m0[_2317].xyz), vec3(_2356, _2357, _2358));
    float _4183 = isnan(0.0) ? _2371 : (isnan(_2371) ? 0.0 : max(_2371, 0.0));
    float _2375 = _2348 * _2348;
    float _2379 = ((_2370 * _2370) * (_2375 + (-1.0))) + 1.0;
    float _2390 = (exp2(log2(1.0 - (isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2391 = 1.0 - _2348;
    float _2402 = (0.5 / (((_2366 * ((_2362 * _2391) + _2348)) + 9.9999999392252902907785028219223e-09) + (((_2366 * _2391) + _2348) * _2362))) * _2362;
    float _4194 = isnan(0.0) ? _2402 : (isnan(_2402) ? 0.0 : max(_2402, 0.0));
    float _2404 = (isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0))) * (_2375 / ((_2379 * _2379) * 3.141590118408203125));
    float _2405 = isnan(1.0) ? _2326 : (isnan(_2326) ? 1.0 : min(_2326, 1.0));
    uint _2418 = _2317 | 1u;
    uint _2422 = _2317 + 9u;
    float _2436 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2418].w)) * _1185) * 0.949999988079071044921875);
    float _2437 = _2436 * _2436;
    float _2438 = cbLight._m0[_2418].x + _1235;
    float _2439 = cbLight._m0[_2418].y + _1236;
    float _2440 = cbLight._m0[_2418].z + _1237;
    float _2444 = inversesqrt(dot(vec3(_2438, _2439, _2440), vec3(_2438, _2439, _2440)));
    float _2445 = _2444 * _2438;
    float _2446 = _2444 * _2439;
    float _2447 = _2444 * _2440;
    float _2448 = dot(vec3(_1278, _1279, _1280), vec3(cbLight._m0[_2418].xyz));
    float _4210 = isnan(0.0) ? _2448 : (isnan(_2448) ? 0.0 : max(_2448, 0.0));
    float _2451 = isnan(1.0) ? _4210 : (isnan(_4210) ? 1.0 : min(_4210, 1.0));
    float _2452 = dot(vec3(_1278, _1279, _1280), vec3(_2445, _2446, _2447));
    float _4221 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
    float _2455 = isnan(1.0) ? _4221 : (isnan(_4221) ? 1.0 : min(_4221, 1.0));
    float _2456 = dot(vec3(cbLight._m0[_2418].xyz), vec3(_2445, _2446, _2447));
    float _4232 = isnan(0.0) ? _2456 : (isnan(_2456) ? 0.0 : max(_2456, 0.0));
    float _2460 = _2437 * _2437;
    float _2464 = ((_2455 * _2455) * (_2460 + (-1.0))) + 1.0;
    float _2473 = (exp2(log2(1.0 - (isnan(1.0) ? _4232 : (isnan(_4232) ? 1.0 : min(_4232, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2474 = 1.0 - _2437;
    float _2484 = (0.5 / (((_2366 * ((_2451 * _2474) + _2437)) + 9.9999999392252902907785028219223e-09) + (((_2366 * _2474) + _2437) * _2451))) * _2451;
    float _4243 = isnan(0.0) ? _2484 : (isnan(_2484) ? 0.0 : max(_2484, 0.0));
    float _2486 = (isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0))) * (_2460 / ((_2464 * _2464) * 3.141590118408203125));
    float _2487 = isnan(1.0) ? _2327 : (isnan(_2327) ? 1.0 : min(_2327, 1.0));
    float _2497 = (((_2473 * cbLight._m0[_2422].x) * _2486) * _2487) + ((((cbLight._m0[_2331].x * _2305) * _2390) * _2404) * _2405);
    float _2498 = (((_2473 * cbLight._m0[_2422].y) * _2486) * _2487) + ((((cbLight._m0[_2331].y * _2307) * _2390) * _2404) * _2405);
    float _2499 = (((_2473 * cbLight._m0[_2422].z) * _2486) * _2487) + ((((cbLight._m0[_2331].z * _2309) * _2390) * _2404) * _2405);
    float _2662;
    float _2664;
    float _2666;
    if (_2315.y == 0u)
    {
        uvec4 _2617 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2618 = _2617.x;
        uint _2629 = uint((float(_2617.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1243) / _2618))) + floor(float(uint(cbSceneParam._m0[85u].x * _1242) / _2618)));
        float _2639 = (log2(_2093 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2640 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
        uint _2643 = uint(isnan(14.0) ? _2640 : (isnan(_2640) ? 14.0 : min(_2640, 14.0)));
        uvec4 _2648 = texelFetch(g_lightClusterGridBuffer, int(((_2643 << 2u) + (_2629 << 6u)) >> 2u));
        uint _2649 = _2648.x;
        uint _2650 = _2617.z;
        float _2883;
        float _2885;
        float _2887;
        if (((((1u << ((_2650 >> 4u) & 15u)) + 4294967295u) & _2649) == 0u) || ((_2650 & 240u) == 0u))
        {
            _2883 = 0.0;
            _2885 = 0.0;
            _2887 = 0.0;
        }
        else
        {
            float _2884;
            float _2886;
            float _2888;
            float _3081 = 0.0;
            float _3082 = 0.0;
            float _3083 = 0.0;
            uint _3084 = 0u;
            uint _3093;
            bool _3094;
            for (;;)
            {
                _3093 = texelFetch(g_lightClassification, int((((_2643 << 5u) + (_2629 << 9u)) + (_3084 << 2u)) >> 2u)).x;
                _3094 = _3093 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                if (_3094)
                {
                    frontier_phi_58_pred = _3083;
                    frontier_phi_58_pred_1 = _3082;
                    frontier_phi_58_pred_2 = _3081;
                }
                else
                {
                    float _3217;
                    float _3218;
                    float _3219;
                    uint _3220;
                    _3217 = _3081;
                    _3218 = _3082;
                    _3219 = _3083;
                    _3220 = _3093;
                    float _3155;
                    float _3156;
                    float _3157;
                    for (;;)
                    {
                        uint _3224 = uint(findLSB(_3220)) + (_3084 << 5u);
                        uint _3221 = (_3220 + 4294967295u) & _3220;
                        uint _3226 = _3224 * 48u;
                        vec4 _3240 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3226)).x, texelFetch(g_PointLightRenderingBuffer, int(_3226 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3226 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3226 + 3u)).x));
                        uint _3257 = (_3224 * 48u) + 8u;
                        vec3 _3268 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3257)).x, texelFetch(g_PointLightRenderingBuffer, int(_3257 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3257 + 2u)).x));
                        float _3272 = _3240.x - _2091;
                        float _3273 = _3240.y - _2092;
                        float _3274 = _3240.z - _2093;
                        float _3275 = dot(vec3(_3272, _3273, _3274), vec3(_3272, _3273, _3274));
                        float _3278 = inversesqrt(_3275);
                        float _3279 = _3278 * _3272;
                        float _3280 = _3278 * _3273;
                        float _3281 = _3278 * _3274;
                        float _3287 = 1.0 - (_3275 * _3240.w);
                        float _4269 = isnan(0.0) ? _3287 : (isnan(_3287) ? 0.0 : max(_3287, 0.0));
                        float _3289 = sqrt(_3275) * uintBitsToFloat(uvec4(_3247, _3248, _3249, texelFetch(g_PointLightRenderingBuffer, int(((_3224 * 48u) + 4u) + 3u)).x)).w;
                        float _3293 = _3289 * _3289;
                        float _3294 = (-0.0) - _2091;
                        float _3295 = (-0.0) - _2092;
                        float _3296 = (-0.0) - _2093;
                        float _3300 = inversesqrt(dot(vec3(_3294, _3295, _3296), vec3(_3294, _3295, _3296)));
                        float _3301 = _3300 * _3294;
                        float _3302 = _3300 * _3295;
                        float _3303 = _3300 * _3296;
                        float _3310 = exp2(log2(1.0 / ((_3293 * 3.5) + 5.0)) * 0.25);
                        float _3311 = 1.0 - _1344;
                        float _3318 = sqrt(1.0 - ((1.0 - (_3311 * _3311)) * (1.0 - (_3310 * _3310))));
                        float _3319 = _3318 * _3318;
                        float _3320 = _3319 * _3319;
                        float _3321 = _3301 + _3279;
                        float _3322 = _3302 + _3280;
                        float _3323 = _3303 + _3281;
                        float _3327 = inversesqrt(dot(vec3(_3321, _3322, _3323), vec3(_3321, _3322, _3323)));
                        float _3331 = dot(vec3(_1298, _1301, _1304), vec3(_3301, _3302, _3303));
                        float _4280 = isnan(0.0) ? _3331 : (isnan(_3331) ? 0.0 : max(_3331, 0.0));
                        float _3334 = isnan(1.0) ? _4280 : (isnan(_4280) ? 1.0 : min(_4280, 1.0));
                        float _3335 = dot(vec3(_1298, _1301, _1304), vec3(_3327 * _3321, _3327 * _3322, _3327 * _3323));
                        float _4291 = isnan(0.0) ? _3335 : (isnan(_3335) ? 0.0 : max(_3335, 0.0));
                        float _3338 = isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0));
                        float _3342 = ((_3338 * _3338) * (_3320 + (-1.0))) + 1.0;
                        float _3343 = (1.39999997615814208984375 / (_3289 + 1.39999997615814208984375)) * _3319;
                        float _3344 = _3343 * _3343;
                        float _3347 = ((1.0 - _3344) * dot(vec3(_1298, _1301, _1304), vec3(_3279, _3280, _3281))) + _3344;
                        float _4302 = isnan(0.0) ? _3347 : (isnan(_3347) ? 0.0 : max(_3347, 0.0));
                        float _3348 = isnan(1.0) ? _4302 : (isnan(_4302) ? 1.0 : min(_4302, 1.0));
                        float _3349 = 1.0 - _3319;
                        float _3359 = (0.5 / (((_3348 * ((_3334 * _3349) + _3319)) + 9.9999999392252902907785028219223e-09) + (((_3348 * _3349) + _3319) * _3334))) * _3348;
                        float _4313 = isnan(0.0) ? _3359 : (isnan(_3359) ? 0.0 : max(_3359, 0.0));
                        float _3370 = (((_3320 * 3.1415927410125732421875) * (isnan(1.0) ? _4313 : (isnan(_4313) ? 1.0 : min(_4313, 1.0)))) / ((_3342 * _3342) * ((_3293 * 2.1991131305694580078125) + 3.141590118408203125))) * (isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0)));
                        _3155 = (_3370 * _3268.x) + _3217;
                        _3156 = (_3370 * _3268.y) + _3218;
                        _3157 = (_3370 * _3268.z) + _3219;
                        if (_3221 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3217 = _3155;
                            _3218 = _3156;
                            _3219 = _3157;
                            _3220 = _3221;
                        }
                    }
                    frontier_phi_58_pred = _3157;
                    frontier_phi_58_pred_1 = _3156;
                    frontier_phi_58_pred_2 = _3155;
                }
                _2888 = frontier_phi_58_pred;
                _2886 = frontier_phi_58_pred_1;
                _2884 = frontier_phi_58_pred_2;
                uint _3085 = _3084 + 1u;
                if (_3085 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3081 = _2884;
                    _3082 = _2886;
                    _3083 = _2888;
                    _3084 = _3085;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2883 = _2884;
            _2885 = _2886;
            _2887 = _2888;
        }
        uvec4 _2891 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2892 = _2891.z;
        uint _2894 = (_2892 >> 8u) & 15u;
        float _3058;
        float _3060;
        float _3062;
        if (((4294967295u << _2894) & _2649) == 0u)
        {
            _3058 = _2883;
            _3060 = _2885;
            _3062 = _2887;
        }
        else
        {
            float _3074 = inversesqrt(dot(vec3(_2091, _2092, _2093), vec3(_2091, _2092, _2093)));
            float _3075 = _3074 * _2091;
            float _3076 = _3074 * _2092;
            float _3077 = _3074 * _2093;
            float frontier_phi_51_52_ladder;
            float frontier_phi_51_52_ladder_1;
            float frontier_phi_51_52_ladder_2;
            if (_2894 < ((_2892 >> 12u) & 15u))
            {
                float _3059;
                float _3061;
                float _3063;
                float _3203 = _2883;
                float _3204 = _2885;
                float _3205 = _2887;
                uint _3206 = _2894;
                uint _3215;
                bool _3216;
                for (;;)
                {
                    _3215 = texelFetch(g_lightClassification, int((((_2643 << 5u) + (_2629 << 9u)) + (_3206 << 2u)) >> 2u)).x;
                    _3216 = _3215 == 0u;
                    float frontier_phi_64_pred;
                    float frontier_phi_64_pred_1;
                    float frontier_phi_64_pred_2;
                    if (_3216)
                    {
                        frontier_phi_64_pred = _3205;
                        frontier_phi_64_pred_1 = _3204;
                        frontier_phi_64_pred_2 = _3203;
                    }
                    else
                    {
                        float _3375;
                        float _3376;
                        float _3377;
                        float _3638;
                        float _3639;
                        float _3640;
                        float _3385 = _3203;
                        float _3386 = _3204;
                        float _3387 = _3205;
                        uint _3388 = _3215;
                        uint _3389;
                        uint _3399;
                        vec4 _3414;
                        float _3415;
                        vec3 _3427;
                        vec4 _3442;
                        vec4 _3457;
                        float _3503;
                        bool _3504;
                        for (;;)
                        {
                            _3399 = ((_3206 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3388));
                            _3389 = (_3388 + 4294967295u) & _3388;
                            uint _3401 = _3399 * 40u;
                            _3414 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3401)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3401 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3401 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3401 + 3u)).x));
                            _3415 = _3414.w;
                            uint _3417 = (_3399 * 40u) + 8u;
                            _3427 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3417)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3417 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3417 + 2u)).x));
                            uint _3429 = (_3399 * 40u) + 16u;
                            _3442 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3429)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 3u)).x));
                            uint _3444 = (_3399 * 40u) + 20u;
                            _3457 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3444)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3444 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3444 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3444 + 3u)).x));
                            uint _3459 = (_3399 * 40u) + 24u;
                            vec4 _3472 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3459)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 3u)).x));
                            uint _3478 = (_3399 * 40u) + 28u;
                            vec4 _3491 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3478)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3478 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3478 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3478 + 3u)).x));
                            _3503 = fma(_2093, _3491.z, fma(_2092, _3491.y, _3491.x * _2091)) + _3491.w;
                            _3504 = !((fma(_2093, _3472.z, fma(_2092, _3472.y, _3472.x * _2091)) + _3472.w) <= 0.0);
                            float frontier_phi_70_pred;
                            float frontier_phi_70_pred_1;
                            float frontier_phi_70_pred_2;
                            if (_3504)
                            {
                                float _3538 = _3414.x - _2091;
                                float _3539 = _3414.y - _2092;
                                float _3540 = _3414.z - _2093;
                                float _3541 = dot(vec3(_3538, _3539, _3540), vec3(_3538, _3539, _3540));
                                float _3544 = inversesqrt(_3541);
                                float _3545 = _3544 * _3538;
                                float _3546 = _3544 * _3539;
                                float _3547 = _3544 * _3540;
                                float _3551 = 1.0 - (_3541 / (_3415 * _3415));
                                float _4324 = isnan(0.0) ? _3551 : (isnan(_3551) ? 0.0 : max(_3551, 0.0));
                                float _3553 = sqrt(_3541) * uintBitsToFloat(uvec4(_3507, _3508, _3509, texelFetch(g_SpotLightRenderingBuffer, int(((_3399 * 40u) + 4u) + 3u)).x)).w;
                                float _3556 = _3553 * _3553;
                                float _3557 = (fma(_2093, _3442.z, fma(_2092, _3442.y, _3442.x * _2091)) + _3442.w) / _3503;
                                float _3558 = (fma(_2093, _3457.z, fma(_2092, _3457.y, _3457.x * _2091)) + _3457.w) / _3503;
                                float _3562 = 1.0 - dot(vec2(_3557, _3558), vec2(_3557, _3558));
                                float _4335 = isnan(0.0) ? _3562 : (isnan(_3562) ? 0.0 : max(_3562, 0.0));
                                float _3572 = exp2(log2(1.0 / ((_3556 * 3.5) + 5.0)) * 0.25);
                                float _3573 = 1.0 - _1344;
                                float _3580 = sqrt(1.0 - ((1.0 - (_3573 * _3573)) * (1.0 - (_3572 * _3572))));
                                float _3581 = _3580 * _3580;
                                float _3582 = _3581 * _3581;
                                float _3583 = _3545 - _3075;
                                float _3584 = _3546 - _3076;
                                float _3585 = _3547 - _3077;
                                float _3589 = inversesqrt(dot(vec3(_3583, _3584, _3585), vec3(_3583, _3584, _3585)));
                                float _3593 = dot(vec3(_1298, _1301, _1304), vec3((-0.0) - _3075, (-0.0) - _3076, (-0.0) - _3077));
                                float _4346 = isnan(0.0) ? _3593 : (isnan(_3593) ? 0.0 : max(_3593, 0.0));
                                float _3596 = isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0));
                                float _3597 = dot(vec3(_1298, _1301, _1304), vec3(_3589 * _3583, _3589 * _3584, _3589 * _3585));
                                float _4357 = isnan(0.0) ? _3597 : (isnan(_3597) ? 0.0 : max(_3597, 0.0));
                                float _3600 = isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0));
                                float _3604 = ((_3600 * _3600) * (_3582 + (-1.0))) + 1.0;
                                float _3605 = (1.39999997615814208984375 / (_3553 + 1.39999997615814208984375)) * _3581;
                                float _3606 = _3605 * _3605;
                                float _3612 = ((1.0 - _3606) * dot(vec3(_1298, _1301, _1304), vec3(_3545, _3546, _3547))) + _3606;
                                float _4368 = isnan(0.0) ? _3612 : (isnan(_3612) ? 0.0 : max(_3612, 0.0));
                                float _3613 = isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0));
                                float _3614 = 1.0 - _3581;
                                float _3624 = (0.5 / (((_3613 * ((_3596 * _3614) + _3581)) + 9.9999999392252902907785028219223e-09) + (((_3613 * _3614) + _3581) * _3596))) * _3613;
                                float _4379 = isnan(0.0) ? _3624 : (isnan(_3624) ? 0.0 : max(_3624, 0.0));
                                float _3634 = ((isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0))) * (isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0)))) * (((_3582 * 3.1415927410125732421875) * (isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0)))) / ((_3604 * _3604) * ((_3556 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_70_pred = _3634 * _3427.x;
                                frontier_phi_70_pred_1 = _3634 * _3427.z;
                                frontier_phi_70_pred_2 = _3634 * _3427.y;
                            }
                            else
                            {
                                frontier_phi_70_pred = 0.0;
                                frontier_phi_70_pred_1 = 0.0;
                                frontier_phi_70_pred_2 = 0.0;
                            }
                            _3638 = frontier_phi_70_pred;
                            _3640 = frontier_phi_70_pred_1;
                            _3639 = frontier_phi_70_pred_2;
                            _3375 = _3638 + _3385;
                            _3376 = _3639 + _3386;
                            _3377 = _3640 + _3387;
                            if (_3389 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3385 = _3375;
                                _3386 = _3376;
                                _3387 = _3377;
                                _3388 = _3389;
                                continue;
                            }
                        }
                        frontier_phi_64_pred = _3377;
                        frontier_phi_64_pred_1 = _3376;
                        frontier_phi_64_pred_2 = _3375;
                    }
                    _3063 = frontier_phi_64_pred;
                    _3061 = frontier_phi_64_pred_1;
                    _3059 = frontier_phi_64_pred_2;
                    uint _3207 = _3206 + 1u;
                    if (_3207 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3203 = _3059;
                        _3204 = _3061;
                        _3205 = _3063;
                        _3206 = _3207;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_51_52_ladder = _3061;
                frontier_phi_51_52_ladder_1 = _3059;
                frontier_phi_51_52_ladder_2 = _3063;
            }
            else
            {
                frontier_phi_51_52_ladder = _2885;
                frontier_phi_51_52_ladder_1 = _2883;
                frontier_phi_51_52_ladder_2 = _2887;
            }
            _3058 = frontier_phi_51_52_ladder_1;
            _3060 = frontier_phi_51_52_ladder;
            _3062 = frontier_phi_51_52_ladder_2;
        }
        float _3067 = isnan(1.0) ? _1316 : (isnan(_1316) ? 1.0 : min(_1316, 1.0));
        _2662 = ((_3058 * 0.039999999105930328369140625) * _3067) + _2497;
        _2664 = ((_3060 * 0.039999999105930328369140625) * _3067) + _2498;
        _2666 = ((_3062 * 0.039999999105930328369140625) * _3067) + _2499;
    }
    else
    {
        _2662 = _2497;
        _2664 = _2498;
        _2666 = _2499;
    }
    uint _2673 = (_2311 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _2679 = cbInstanceData._m0[_2673].x * (_957 - (_957 * TEXCOORD_7.x));
    float _2680 = cbInstanceData._m0[_2673].y * (_959 - (_959 * TEXCOORD_7.y));
    float _2681 = cbInstanceData._m0[_2673].z * (_961 - (_961 * TEXCOORD_7.z));
    float _2701 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2702 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2703 = cbSceneParam._m0[86u].x * ((_1242 / cbSceneParam._m0[86u].x) + ((0.0999999940395355224609375 / (_1199 + 10.0)) * dot(vec3(_1278, _1279, _1280), vec3(_229, _230, _231))));
    float _2704 = isnan(_2701) ? _2703 : (isnan(_2703) ? _2701 : min(_2703, _2701));
    float _2705 = isnan(_2702) ? _1243 : (isnan(_1243) ? _2702 : min(_1243, _2702));
    vec4 _2707 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2704, _2705), 0.0);
    float _2709 = _2707.x;
    bool _2729 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2709)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2709))) > _1199;
    float _2730 = _2729 ? _2704 : _1242;
    float _2731 = _2729 ? _2705 : _1243;
    vec4 _2733 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2730, _2731));
    vec4 _2738 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2730, _2731));
    float _2740 = _2738.x;
    float _2760 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2740)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2740))) - _1199;
    bool _2767 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2771 = (isnan(_2760) ? 0.0 : (isnan(0.0) ? _2760 : max(0.0, _2760))) * (-1.44269502162933349609375);
    float _2791 = 0.4799999892711639404296875 - (exp2(log2(1.0 - (isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0)))) * 5.0) * 0.4799999892711639404296875);
    float _2802 = (_2679 + ((_2662 + ((isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0))) * _1812)) * cbPerFrame._m0[3u].x)) + (((_2791 * _2733.x) * exp2(_2771 * (_2767 ? 0.0 : cbMtdParam._m0[35u].y))) * cbSceneParam._m0[72u].w);
    float _2804 = (_2680 + ((_2664 + ((isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0))) * _1812)) * cbPerFrame._m0[3u].x)) + (((_2791 * _2733.y) * exp2(_2771 * (_2767 ? 0.0 : cbMtdParam._m0[35u].z))) * cbSceneParam._m0[72u].w);
    float _2806 = (_2681 + ((_2666 + ((isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0))) * _1812)) * cbPerFrame._m0[3u].x)) + (((_2791 * _2733.z) * exp2(_2771 * (_2767 ? 0.0 : cbMtdParam._m0[35u].w))) * cbSceneParam._m0[72u].w);
    float _4425 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2819 = isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0));
    float _2829 = _1242 / cbSceneParam._m0[86u].x;
    float _2830 = _1243 / cbSceneParam._m0[86u].y;
    vec4 _2844 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2829, _2830, (log2((isnan(cbSceneParam._m0[77u].w) ? _1199 : (isnan(_1199) ? cbSceneParam._m0[77u].w : min(_1199, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2846 = _2844.x;
    float _2847 = _2844.y;
    float _2848 = _2844.z;
    float _2849 = _2844.w;
    float _2938;
    float _2940;
    float _2942;
    float _2944;
    if (_1199 > cbSceneParam._m0[78u].w)
    {
        float _2902 = isnan(_1199) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1199 : min(cbSceneParam._m0[80u].w, _1199));
        float _2903 = _2902 / _1199;
        float _2914 = _2903 * _1228;
        float _2915 = _1229 * _2903;
        float _2916 = (-0.0) - _2915;
        float _2917 = _2903 * _1230;
        float _2919 = (cbSceneParam._m0[77u].w * _2916) / _2902;
        float _2920 = _2919 + cbSceneParam._m0[79u].w;
        float _2921 = cbSceneParam._m0[79u].w - _2915;
        float _2927 = sqrt(((_2914 * _2914) + (_2915 * _2915)) + (_2917 * _2917));
        float _2930 = (1.0 - (cbSceneParam._m0[77u].w / _2902)) * _2927;
        float _2935 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2936 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3165;
        if (abs((_2916 - _2919) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3165 = ((((_2920 > 0.0) ? exp2(_2935 * _2920) : (2.0 - exp2(_2936 * _2920))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2930;
        }
        else
        {
            float _3107 = 1.0 / cbSceneParam._m0[80u].x;
            float _3108 = isnan(_2921) ? _2920 : (isnan(_2920) ? _2921 : max(_2920, _2921));
            float _3109 = isnan(_2921) ? _2920 : (isnan(_2920) ? _2921 : min(_2920, _2921));
            float _3118 = isnan(0.0) ? _3108 : (isnan(_3108) ? 0.0 : min(_3108, 0.0));
            float _3119 = isnan(0.0) ? _3109 : (isnan(_3109) ? 0.0 : min(_3109, 0.0));
            _3165 = ((abs(_2927 / _2916) * cbSceneParam._m0[80u].y) * ((((_3118 - _3119) * 2.0) - ((exp2(_2935 * (isnan(0.0) ? _3108 : (isnan(_3108) ? 0.0 : max(_3108, 0.0)))) - exp2(_2935 * (isnan(0.0) ? _3109 : (isnan(_3109) ? 0.0 : max(_3109, 0.0))))) * _3107)) - ((exp2(_2936 * _3118) - exp2(_2936 * _3119)) * _3107))) + (_2930 * cbSceneParam._m0[80u].z);
        }
        vec4 _3167 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2829, _2830, 1.0), 0.0);
        float _3176 = exp2((_3165 * (-1.44269502162933349609375)) * (1.0 - _3167.w));
        float _3177 = log2(_3176);
        float _3193 = log2(_2849);
        _2938 = (exp2(_3193 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3177 * cbSceneParam._m0[78u].x)) * _3167.x) / cbSceneParam._m0[78u].x)) + _2846;
        _2940 = (exp2(_3193 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3177 * cbSceneParam._m0[78u].y)) * _3167.y) / cbSceneParam._m0[78u].y)) + _2847;
        _2942 = (exp2(_3193 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3177 * cbSceneParam._m0[78u].z)) * _3167.z) / cbSceneParam._m0[78u].z)) + _2848;
        _2944 = _3176 * _2849;
    }
    else
    {
        _2938 = _2846;
        _2940 = _2847;
        _2942 = _2848;
        _2944 = _2849;
    }
    bool _2956 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2957 = log2(_2944);
    float _2961 = exp2(_2957 * cbSceneParam._m0[78u].x);
    float _2962 = exp2(_2957 * cbSceneParam._m0[78u].y);
    float _2963 = exp2(_2957 * cbSceneParam._m0[78u].z);
    float _2964 = _2961 * (isnan(0.0) ? _2802 : (isnan(_2802) ? 0.0 : max(_2802, 0.0)));
    float _2965 = _2962 * (isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0)));
    float _2966 = _2963 * (isnan(0.0) ? _2806 : (isnan(_2806) ? 0.0 : max(_2806, 0.0)));
    vec4 _2974 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1242, _1243));
    float _2976 = _2974.x;
    float _2997 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2976)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2976))) - _1199) * cbMtdParam._m0[20u].y;
    float _4476 = isnan(0.0) ? _2997 : (isnan(_2997) ? 0.0 : max(_2997, 0.0));
    float _2998 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
    float _2999 = (cbInstanceData._m0[_2311 + 6u].w * (isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0)))) * _2998;
    float _3008 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3008 * (_2956 ? _2964 : (_2964 + (cbSceneParam._m0[72u].w * _2938)));
    SV_Target.y = _3008 * (_2956 ? _2965 : (_2965 + (cbSceneParam._m0[72u].w * _2940)));
    SV_Target.z = _3008 * (_2956 ? _2966 : (_2966 + (cbSceneParam._m0[72u].w * _2942)));
    SV_Target.w = _2999;
    SV_Target_1.x = ((((cbMtdParam._m0[2u].x * _2679) * _2819) * _2961) * _2998) * _3008;
    SV_Target_1.y = ((((cbMtdParam._m0[2u].y * _2680) * _2819) * _2962) * _2998) * _3008;
    SV_Target_1.z = ((((cbMtdParam._m0[2u].z * _2681) * _2819) * _2963) * _2998) * _3008;
    SV_Target_1.w = _2999;
}


