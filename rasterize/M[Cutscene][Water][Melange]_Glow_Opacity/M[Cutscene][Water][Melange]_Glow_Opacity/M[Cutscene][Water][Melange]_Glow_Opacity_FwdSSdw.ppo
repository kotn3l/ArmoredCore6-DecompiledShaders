#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[39];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_8;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1557;
uint _2974;
uint _2975;
uint _2976;
uint _3256;
uint _3257;
uint _3258;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _218 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _219 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _220 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _226 = inversesqrt(dot(vec3(_218, _219, _220), vec3(_218, _219, _220)));
    float _227 = _226 * _218;
    float _228 = _226 * _219;
    float _229 = _226 * _220;
    float _233 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _234 = _233 * NORMAL.x;
    float _235 = _233 * NORMAL.y;
    float _236 = _233 * NORMAL.z;
    float _240 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _241 = _240 * TANGENT.x;
    float _242 = _240 * TANGENT.y;
    float _243 = _240 * TANGENT.z;
    float _287 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _297 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _287);
    float _298 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _287);
    float _299 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _287);
    float _315 = cbMtdParam._m0[18u].z - cbMtdParam._m0[18u].y;
    float _317 = (sqrt(((_297 * _297) + (_298 * _298)) + (_299 * _299)) - cbMtdParam._m0[18u].y) / (isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0)));
    float _319 = cbMtdParam._m0[18u].w + _317;
    float _324 = _319 * cbMtdParam._m0[19u].y;
    float _3503 = isnan(0.0) ? _324 : (isnan(_324) ? 0.0 : max(_324, 0.0));
    float _327 = (isnan(1.0) ? _3503 : (isnan(_3503) ? 1.0 : min(_3503, 1.0))) * cbMtdParam._m0[23u].y;
    float _3514 = isnan(0.0) ? _327 : (isnan(_327) ? 0.0 : max(_327, 0.0));
    float _328 = isnan(1.0) ? _3514 : (isnan(_3514) ? 1.0 : min(_3514, 1.0));
    float _3525 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _333 = isnan(1.0) ? _3525 : (isnan(_3525) ? 1.0 : min(_3525, 1.0));
    float _336 = ((cbMtdParam._m0[17u].w - cbMtdParam._m0[17u].x) * _333) + cbMtdParam._m0[17u].x;
    float _357 = cbMtdParam._m0[20u].z * _319;
    float _3536 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    vec4 _375 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _378 = _375.x;
    float _402 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _378)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _378))) - POSITION_1.w) / cbMtdParam._m0[17u].z;
    float _3547 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
    float _403 = isnan(1.0) ? _3547 : (isnan(_3547) ? 1.0 : min(_3547, 1.0));
    float _408 = 1.0 - (isnan(cbMtdParam._m0[21u].w) ? _403 : (isnan(_403) ? cbMtdParam._m0[21u].w : max(_403, cbMtdParam._m0[21u].w)));
    float _427 = (cbMtdParam._m0[24u].w + cbPerFrame._m0[22u].x) * cbMtdParam._m0[17u].y;
    float _435 = cbMtdParam._m0[30u].w * TEXCOORD.x;
    float _436 = cbMtdParam._m0[31u].x * TEXCOORD.y;
    vec4 _450 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_2, SS_BumpMap), vec2((((_427 * cbMtdParam._m0[31u].w) + _435) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_436 + (_427 * cbMtdParam._m0[32u].x)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _452 = _450.x;
    float _453 = _450.y;
    float _456 = _450.z - _333;
    float _3563 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
    float _457 = isnan(1.0) ? _3563 : (isnan(_3563) ? 1.0 : min(_3563, 1.0));
    float _469 = (_457 * 0.00999999977648258209228515625) + TEXCOORD.x;
    float _471 = (_457 * (-0.00999999977648258209228515625)) + TEXCOORD.y;
    vec4 _484 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(((_469 + (cbMtdParam._m0[27u].y * _427)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_471 + (cbMtdParam._m0[27u].z * _427)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _488 = _484.z;
    vec4 _501 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(((_469 + (cbMtdParam._m0[26u].w * _427)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_471 + (cbMtdParam._m0[27u].x * _427)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _505 = _501.z;
    float _508 = (_408 - _450.w) + (isnan(_505) ? _488 : (isnan(_488) ? _505 : max(_488, _505)));
    float _3579 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0));
    float _510 = (((cbMtdParam._m0[21u].z + TEXCOORD_3.x) - (_408 * cbMtdParam._m0[18u].x)) * (isnan(1.0) ? _3536 : (isnan(_3536) ? 1.0 : min(_3536, 1.0)))) * (isnan(1.0) ? _3579 : (isnan(_3579) ? 1.0 : min(_3579, 1.0)));
    float _512 = _510 - (_510 * TEXCOORD_7.w);
    float _520 = (POSITION_1.w - cbMtdParam._m0[24u].y) * (1.0 / cbMtdParam._m0[24u].x);
    float _3590 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _521 = isnan(1.0) ? _3590 : (isnan(_3590) ? 1.0 : min(_3590, 1.0));
    float _535 = (cbMtdParam._m0[29u].w * _427) + _435;
    float _536 = (cbMtdParam._m0[30u].x * _427) + _436;
    float _543 = cbMtdParam._m0[29u].y * _427;
    float _544 = cbMtdParam._m0[29u].z * _427;
    vec4 _564 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * (_543 + (_435 * cbMtdParam._m0[31u].y))) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * (_544 + (_436 * cbMtdParam._m0[31u].z))) + cbTextureTilingScale._m0[3u].w));
    float _571 = (_564.x * 2.0) + (-1.0);
    float _573 = (_564.y * 2.0) + (-1.0);
    float _577 = 1.0 - dot(vec2(_571, _573), vec2(_571, _573));
    float _3601 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _579 = sqrt(isnan(1.0) ? _3601 : (isnan(_3601) ? 1.0 : min(_3601, 1.0)));
    float _582 = fma(_579, _234, fma(_573, _241, _571 * _227));
    float _585 = fma(_579, _235, fma(_573, _242, _571 * _228));
    float _588 = fma(_579, _236, fma(_573, _243, _571 * _229));
    float _592 = inversesqrt(dot(vec3(_582, _585, _588), vec3(_582, _585, _588)));
    float _593 = cbPerFrame._m0[22u].x * 2.0;
    float _594 = _593 * cbMtdParam._m0[22u].w;
    float _598 = ((_582 * 0.5) * _592) + (-0.25);
    float _602 = ((_585 * 0.5) * _592) + (-0.25);
    float _603 = _602 * cbMtdParam._m0[23u].x;
    float _605 = (-0.0) - (cbMtdParam._m0[23u].x * _598);
    float _606 = fract(_594);
    float _608 = fract(_594 + 0.5);
    float _619 = abs((_606 * 2.0) + (-1.0));
    vec4 _636 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_606 * _605) + _535) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_603 * _606) + _536) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _638 = _636.x;
    float _639 = _636.y;
    float _640 = _636.z;
    vec4 _641 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_608 * _605) + _535) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_603 * _608) + _536) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _652 = ((_641.x - _638) * _619) + _638;
    float _653 = ((_641.y - _639) * _619) + _639;
    float _654 = ((_641.z - _640) * _619) + _640;
    float _670 = (cbMtdParam._m0[28u].w * _427) + _435;
    float _671 = (cbMtdParam._m0[29u].x * _427) + _436;
    float _674 = _593 * cbMtdParam._m0[22u].z;
    float _675 = _602 * cbMtdParam._m0[22u].y;
    float _677 = (-0.0) - (cbMtdParam._m0[22u].y * _598);
    float _678 = fract(_674);
    float _680 = fract(_674 + 0.5);
    float _691 = abs((_678 * 2.0) + (-1.0));
    vec4 _708 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_678 * _677) + _670) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_675 * _678) + _671) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _710 = _708.x;
    float _711 = _708.y;
    float _712 = _708.z;
    vec4 _713 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_680 * _677) + _670) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_675 * _680) + _671) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _747 = (((((cbMtdParam._m0[14u].x - cbMtdParam._m0[16u].x) * _652) * cbMtdParam._m0[25u].x) + cbMtdParam._m0[16u].x) * (((_713.x - _710) * _691) + _710)) + (_652 * cbMtdParam._m0[15u].x);
    float _750 = (((((cbMtdParam._m0[14u].y - cbMtdParam._m0[16u].y) * _653) * cbMtdParam._m0[25u].x) + cbMtdParam._m0[16u].y) * (((_713.y - _711) * _691) + _711)) + (_653 * cbMtdParam._m0[15u].y);
    float _753 = ((((cbMtdParam._m0[25u].x * _654) * (cbMtdParam._m0[14u].z - cbMtdParam._m0[16u].z)) + cbMtdParam._m0[16u].z) * (((_713.z - _712) * _691) + _712)) + (_654 * cbMtdParam._m0[15u].z);
    float _757 = _747 - (_747 * _521);
    float _758 = _750 - (_750 * _521);
    float _759 = _753 - (_753 * _521);
    float _764 = (POSITION_1.w - cbMtdParam._m0[23u].w) * (1.0 / cbMtdParam._m0[23u].z);
    float _3612 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _765 = isnan(1.0) ? _3612 : (isnan(_3612) ? 1.0 : min(_3612, 1.0));
    float _775 = (cbMtdParam._m0[30u].y * _427) + _435;
    float _776 = (cbMtdParam._m0[30u].z * _427) + _436;
    vec4 _789 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * ((_435 * cbMtdParam._m0[32u].y) + _543)) + cbTextureTilingScale._m0[3u].z, (((_436 * cbMtdParam._m0[32u].z) + _544) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _795 = (_789.x * 2.0) + (-1.0);
    float _796 = (_789.y * 2.0) + (-1.0);
    float _800 = 1.0 - dot(vec2(_795, _796), vec2(_795, _796));
    float _3623 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    float _802 = sqrt(isnan(1.0) ? _3623 : (isnan(_3623) ? 1.0 : min(_3623, 1.0)));
    float _805 = fma(_802, _234, fma(_796, _241, _795 * _227));
    float _808 = fma(_802, _235, fma(_796, _242, _795 * _228));
    float _811 = fma(_802, _236, fma(_796, _243, _795 * _229));
    float _815 = inversesqrt(dot(vec3(_805, _808, _811), vec3(_805, _808, _811)));
    float _816 = _593 * cbMtdParam._m0[25u].w;
    float _823 = (((_808 * 0.5) * _815) + (-0.25)) * cbMtdParam._m0[25u].z;
    float _825 = (-0.0) - (cbMtdParam._m0[25u].z * (((_805 * 0.5) * _815) + (-0.25)));
    float _826 = fract(_816);
    float _828 = fract(_816 + 0.5);
    float _831 = (_826 * _825) + _775;
    float _832 = (_823 * _826) + _776;
    float _835 = (_828 * _825) + _775;
    float _836 = (_823 * _828) + _776;
    float _839 = abs((_826 * 2.0) + (-1.0));
    vec4 _856 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_831 * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (_832 * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _858 = _856.x;
    float _859 = _856.y;
    float _860 = _856.z;
    vec4 _861 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_835 * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (_836 * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _872 = ((_861.x - _858) * _839) + _858;
    float _873 = ((_861.y - _859) * _839) + _859;
    float _874 = ((_861.z - _860) * _839) + _860;
    vec4 _899 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_9, SS_DiffuseMap), vec2((_831 * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (_832 * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _901 = _899.x;
    float _902 = _899.y;
    float _903 = _899.z;
    vec4 _904 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_9, SS_DiffuseMap), vec2((_835 * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (_836 * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _955 = (cbMtdParam._m0[24u].z * cbMtdParam._m0[13u].x) * ((_757 + (_512 * cbMtdParam._m0[12u].x)) + ((((_872 * cbMtdParam._m0[9u].x) - _757) + (((((cbMtdParam._m0[11u].x - cbMtdParam._m0[10u].x) * _872) * cbMtdParam._m0[25u].y) + cbMtdParam._m0[10u].x) * (((_904.x - _901) * _839) + _901))) * _765));
    float _957 = (cbMtdParam._m0[24u].z * cbMtdParam._m0[13u].y) * ((_758 + (_512 * cbMtdParam._m0[12u].y)) + ((((_873 * cbMtdParam._m0[9u].y) - _758) + (((((cbMtdParam._m0[11u].y - cbMtdParam._m0[10u].y) * _873) * cbMtdParam._m0[25u].y) + cbMtdParam._m0[10u].y) * (((_904.y - _902) * _839) + _902))) * _765));
    float _959 = (cbMtdParam._m0[24u].z * cbMtdParam._m0[13u].z) * ((_759 + (_512 * cbMtdParam._m0[12u].z)) + ((((_874 * cbMtdParam._m0[9u].z) - _759) + ((((cbMtdParam._m0[25u].y * _874) * (cbMtdParam._m0[11u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z) * (((_904.z - _903) * _839) + _903))) * _765));
    float _3634 = isnan(0.0) ? TEXCOORD_3.y : (isnan(TEXCOORD_3.y) ? 0.0 : max(TEXCOORD_3.y, 0.0));
    float _966 = isnan(1.0) ? _3634 : (isnan(_3634) ? 1.0 : min(_3634, 1.0));
    float _976 = _317 / cbMtdParam._m0[20u].x;
    float _3645 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
    float _977 = isnan(1.0) ? _3645 : (isnan(_3645) ? 1.0 : min(_3645, 1.0));
    float _1005 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1009 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    vec4 _1025 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * ((_1005 / cbMtdParam._m0[19u].x) + (cbMtdParam._m0[32u].w * _427))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((_1009 / cbMtdParam._m0[19u].x) + (cbMtdParam._m0[33u].x * _427))) + cbTextureTilingScale._m0[1u].w));
    float _1029 = _457 * 0.23999999463558197021484375;
    float _1031 = _457 * (-0.20000000298023223876953125);
    float _1042 = cbMtdParam._m0[33u].w * TEXCOORD.x;
    float _1043 = cbMtdParam._m0[34u].x * TEXCOORD.y;
    vec4 _1058 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[33u].y * _427) + _1029) + _1042) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[33u].z * _427) + _1031) + _1043) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1074 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1042 + _1029) + (cbMtdParam._m0[34u].y * _427)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1043 + _1031) + (cbMtdParam._m0[34u].z * _427)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1094 = (((_501.x + (-0.5)) * 0.5) + _484.x) + (((_1058.x + (-1.0)) + _1074.x) * cbMtdParam._m0[21u].y);
    float _1095 = (((_501.y + (-0.5)) * 0.5) + _484.y) + (((_1058.y + (-1.0)) + _1074.y) * cbMtdParam._m0[21u].y);
    float _1100 = ((_1025.x - _1094) * _977) + _1094;
    float _1101 = ((_1025.y - _1095) * _977) + _1095;
    float _1103 = _317 / cbMtdParam._m0[19u].w;
    float _3656 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
    float _1104 = isnan(1.0) ? _3656 : (isnan(_3656) ? 1.0 : min(_3656, 1.0));
    float _1120 = ((((_966 * (0.5 - _452)) + _452) + (((_1100 + (-0.5)) + ((0.5 - _1100) * _1104)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1121 = ((((_966 * (0.5 - _453)) + _453) + (((_1101 + (-0.5)) + ((0.5 - _1101) * _1104)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1122 = dot(vec2(_1120, _1121), vec2(_1120, _1121));
    float _3667 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
    float _1127 = sqrt(1.0 - (isnan(1.0) ? _3667 : (isnan(_3667) ? 1.0 : min(_3667, 1.0))));
    float _1129 = cbMtdParam._m0[20u].w * _319;
    float _3678 = isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0));
    float _1135 = ((cbMtdParam._m0[21u].x - cbMtdParam._m0[19u].z) * (isnan(1.0) ? _3678 : (isnan(_3678) ? 1.0 : min(_3678, 1.0)))) + cbMtdParam._m0[19u].z;
    float _1140 = _1120 - (_1135 * _1120);
    float _1141 = _1121 - (_1135 * _1121);
    float _1142 = (_1135 * (1.0 - _1127)) + _1127;
    float _1152 = fma(_1127, _234, fma(_1121, _241, _1120 * _227));
    float _1155 = fma(_1127, _235, fma(_1121, _242, _1120 * _228));
    float _1158 = fma(_1127, _236, fma(_1121, _243, _1120 * _229));
    float _1162 = inversesqrt(dot(vec3(_1152, _1155, _1158), vec3(_1152, _1155, _1158)));
    float _1163 = _1162 * _1152;
    float _1164 = _1162 * _1155;
    float _1165 = _1162 * _1158;
    float _1168 = fma(_1142, _234, fma(_1141, _241, _1140 * _227));
    float _1171 = fma(_1142, _235, fma(_1141, _242, _1140 * _228));
    float _1174 = fma(_1142, _236, fma(_1141, _243, _1140 * _229));
    float _1178 = inversesqrt(dot(vec3(_1168, _1171, _1174), vec3(_1168, _1171, _1174)));
    float _1179 = _1178 * _1168;
    float _1180 = _1178 * _1171;
    float _1181 = _1178 * _1174;
    float _3689 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _3700 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
    float _1183 = isnan(1.0) ? _3700 : (isnan(_3700) ? 1.0 : min(_3700, 1.0));
    float _1197 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1217 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1226 = cbSceneParam._m0[71u].x - (_1005 / _1217);
    float _1227 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1217);
    float _1228 = cbSceneParam._m0[71u].z - (_1009 / _1217);
    float _1232 = inversesqrt(dot(vec3(_1226, _1227, _1228), vec3(_1226, _1227, _1228)));
    float _1233 = _1226 * _1232;
    float _1234 = _1227 * _1232;
    float _1235 = _1228 * _1232;
    float _1240 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1241 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1243 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1252 = (_1243.x * 2.0) + (-1.0);
    float _1253 = (_1243.y * 2.0) + (-1.0);
    float _1254 = (_1243.z * 2.0) + (-1.0);
    float _1258 = inversesqrt(dot(vec3(_1252, _1253, _1254), vec3(_1252, _1253, _1254)));
    float _1269 = ((TEXCOORD.w >= 1.0) || (((TEXCOORD.z <= 0.0) || (TEXCOORD.z >= 1.0)) || (TEXCOORD.w <= 0.0))) ? 0.0 : _1243.w;
    float _1276 = (((_1252 * _1258) - _1163) * _1269) + _1163;
    float _1277 = (((_1253 * _1258) - _1164) * _1269) + _1164;
    float _1278 = (((_1254 * _1258) - _1165) * _1269) + _1165;
    float _1296 = fma(_1278, cbSceneParam._m0[5u].z, fma(_1277, cbSceneParam._m0[5u].y, _1276 * cbSceneParam._m0[5u].x));
    float _1299 = fma(_1278, cbSceneParam._m0[6u].z, fma(_1277, cbSceneParam._m0[6u].y, _1276 * cbSceneParam._m0[6u].x));
    float _1302 = fma(_1278, cbSceneParam._m0[7u].z, fma(_1277, cbSceneParam._m0[7u].y, _1276 * cbSceneParam._m0[7u].x));
    vec4 _1311 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1240, cbSceneParam._m0[86u].y * _1241));
    float _1314 = _1311.x * TEXCOORD_3.w;
    float _1318 = abs(dot(vec3(_1233, _1234, _1235), vec3(_1276, _1277, _1278)));
    float _3711 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
    float _1330 = dot(vec3(_1179, _1180, _1181), vec3(_1233, _1234, _1235)) * 2.0;
    float _1334 = (_1330 * _1179) - _1233;
    float _1335 = (_1330 * _1180) - _1234;
    float _1336 = (_1330 * _1181) - _1235;
    float _1340 = abs(dot(vec3(_1233, _1234, _1235), vec3(_1179, _1180, _1181)));
    float _3722 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
    float _1342 = sqrt(_1183);
    float _1354 = exp2((_1342 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3722 : (isnan(_3722) ? 1.0 : min(_3722, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1342 * 3.0));
    float _1385 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1389 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1393 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1556;
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1419 = fma(_1393, cbModelParam._m0[26u].z, fma(_1389, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1385));
        float _1423 = fma(_1393, cbModelParam._m0[27u].z, fma(_1389, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1385));
        float _1427 = fma(_1393, cbModelParam._m0[28u].z, fma(_1389, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1385));
        float _1450 = _1385 + _1179;
        float _1451 = _1389 + _1180;
        float _1452 = _1393 + _1181;
        float _1462 = fma(_1452, cbModelParam._m0[26u].z, fma(_1451, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1450)) - _1419;
        float _1463 = fma(_1452, cbModelParam._m0[27u].z, fma(_1451, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1450)) - _1423;
        float _1464 = fma(_1452, cbModelParam._m0[28u].z, fma(_1451, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1450)) - _1427;
        float _1468 = inversesqrt(dot(vec3(_1462, _1463, _1464), vec3(_1462, _1463, _1464)));
        float _1480 = ((_1468 * _1462) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1419 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1481 = ((_1468 * _1463) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1423 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1482 = ((_1468 * _1464) / cbModelParam._m0[34u].z) + ((((((_1427 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1485 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1480, _1481, _1482), 0.0);
        vec4 _1492 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1480, _1481, _1482), 0.0);
        vec4 _1499 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1480, _1481, _1482), 0.0);
        vec4 _1506 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1480, _1481, _1482), 0.0);
        float _1519 = exp2((_1485.w + (-0.5)) * 20.0) * 2.0;
        float _1529 = exp2((_1492.w + (-0.5)) * 20.0) * 2.0;
        float _1539 = exp2((_1499.w + (-0.5)) * 20.0) * 2.0;
        float _1549 = exp2((_1506.w + (-0.5)) * 20.0) * 2.0;
        float _1550 = _1549 * (_1506.x + (-0.5));
        float _1551 = _1549 * (_1506.y + (-0.5));
        float _1552 = _1549 * (_1506.z + (-0.5));
        _1556 = _1519 * (_1485.z + (-0.5));
        _1558 = _1519 * (_1485.y + (-0.5));
        _1559 = _1519 * (_1485.x + (-0.5));
        _1560 = _1529 * (_1492.z + (-0.5));
        _1561 = _1529 * (_1492.y + (-0.5));
        _1562 = _1529 * (_1492.x + (-0.5));
        _1563 = _1539 * (_1499.z + (-0.5));
        _1564 = _1539 * (_1499.y + (-0.5));
        _1565 = _1539 * (_1499.x + (-0.5));
        _1566 = isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0));
        _1567 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
        _1568 = isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0));
    }
    else
    {
        _1556 = _1557;
        _1558 = _1557;
        _1559 = _1557;
        _1560 = _1557;
        _1561 = _1557;
        _1562 = _1557;
        _1563 = _1557;
        _1564 = _1557;
        _1565 = _1557;
        _1566 = _1557;
        _1567 = _1557;
        _1568 = _1557;
    }
    float _1726;
    float _1727;
    float _1728;
    float _1729;
    float _1730;
    float _1731;
    float _1732;
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1591 = fma(_1393, cbModelParam._m0[30u].z, fma(_1389, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1385));
        float _1595 = fma(_1393, cbModelParam._m0[31u].z, fma(_1389, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1385));
        float _1599 = fma(_1393, cbModelParam._m0[32u].z, fma(_1389, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1385));
        float _1622 = _1385 + _1179;
        float _1623 = _1389 + _1180;
        float _1624 = _1393 + _1181;
        float _1634 = fma(_1624, cbModelParam._m0[30u].z, fma(_1623, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1622)) - _1591;
        float _1635 = fma(_1624, cbModelParam._m0[31u].z, fma(_1623, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1622)) - _1595;
        float _1636 = fma(_1624, cbModelParam._m0[32u].z, fma(_1623, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1622)) - _1599;
        float _1640 = inversesqrt(dot(vec3(_1634, _1635, _1636), vec3(_1634, _1635, _1636)));
        float _1652 = ((_1640 * _1634) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1591 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1653 = ((_1640 * _1635) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1595 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1654 = ((_1640 * _1636) / cbModelParam._m0[35u].z) + ((((((_1599 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1656 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1652, _1653, _1654), 0.0);
        vec4 _1663 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1652, _1653, _1654), 0.0);
        vec4 _1670 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1652, _1653, _1654), 0.0);
        vec4 _1677 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1652, _1653, _1654), 0.0);
        float _1689 = exp2((_1656.w + (-0.5)) * 20.0) * 2.0;
        float _1699 = exp2((_1663.w + (-0.5)) * 20.0) * 2.0;
        float _1709 = exp2((_1670.w + (-0.5)) * 20.0) * 2.0;
        float _1719 = exp2((_1677.w + (-0.5)) * 20.0) * 2.0;
        float _1720 = _1719 * (_1677.x + (-0.5));
        float _1721 = _1719 * (_1677.y + (-0.5));
        float _1722 = _1719 * (_1677.z + (-0.5));
        _1726 = _1689 * (_1656.z + (-0.5));
        _1727 = _1689 * (_1656.y + (-0.5));
        _1728 = _1689 * (_1656.x + (-0.5));
        _1729 = _1699 * (_1663.z + (-0.5));
        _1730 = _1699 * (_1663.y + (-0.5));
        _1731 = _1699 * (_1663.x + (-0.5));
        _1732 = _1709 * (_1670.z + (-0.5));
        _1733 = _1709 * (_1670.y + (-0.5));
        _1734 = _1709 * (_1670.x + (-0.5));
        _1735 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
        _1736 = isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0));
        _1737 = isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0));
    }
    else
    {
        _1726 = _1557;
        _1727 = _1557;
        _1728 = _1557;
        _1729 = _1557;
        _1730 = _1557;
        _1731 = _1557;
        _1732 = _1557;
        _1733 = _1557;
        _1734 = _1557;
        _1735 = _1557;
        _1736 = _1557;
        _1737 = _1557;
    }
    float _1751 = _1334 * 0.5;
    float _1752 = _1335 * 0.5;
    float _1753 = _1336 * 0.5;
    float _1754 = dot(vec4(_1751, _1752, _1753, 1.0), vec4(_1728, _1731, _1734, _1737));
    float _1757 = dot(vec4(_1751, _1752, _1753, 1.0), vec4(_1727, _1730, _1733, _1736));
    float _1760 = dot(vec4(_1751, _1752, _1753, 1.0), vec4(_1726, _1729, _1732, _1735));
    float _1795;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1767 = dot(vec4(_1751, _1752, _1753, 1.0), vec4(_1556, _1560, _1563, _1566));
        float _1771 = dot(vec4(_1751, _1752, _1753, 1.0), vec4(_1558, _1561, _1564, _1567));
        float _1775 = dot(vec4(_1751, _1752, _1753, 1.0), vec4(_1559, _1562, _1565, _1568));
        float _1782 = dot(vec4(cbModelParam._m0[39u]), vec4(_1751, _1752, _1753, 1.0));
        _1795 = dot(vec3(isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0)), isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0)), isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1782) ? 0.0 : (isnan(0.0) ? _1782 : max(0.0, _1782))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1795 = 1.0;
    }
    float _1806;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1797 = dot(vec4(cbModelParam._m0[40u]), vec4(_1751, _1752, _1753, 1.0));
        _1806 = dot(vec3(isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0)), isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0)), isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1797) ? 0.0 : (isnan(0.0) ? _1797 : max(0.0, _1797))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1806 = 1.0;
    }
    float _1810 = (_1806 * cbModelParam._m0[1u].x) + (_1795 * (1.0 - cbModelParam._m0[1u].x));
    float _1817 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1183);
    float _1818 = isnan(_1817) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1817 : min(cbModelParam._m0[25u].z, _1817));
    float _1898;
    float _1900;
    float _1902;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1865 = fma(_1393, cbModelParam._m0[13u].z, fma(_1389, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1385)) + cbModelParam._m0[13u].w;
        float _1869 = fma(_1393, cbModelParam._m0[14u].z, fma(_1389, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1385)) + cbModelParam._m0[14u].w;
        float _1873 = fma(_1393, cbModelParam._m0[15u].z, fma(_1389, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1385)) + cbModelParam._m0[15u].w;
        float _1876 = fma(_1336, cbModelParam._m0[13u].z, fma(_1335, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1334));
        float _1879 = fma(_1336, cbModelParam._m0[14u].z, fma(_1335, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1334));
        float _1882 = fma(_1336, cbModelParam._m0[15u].z, fma(_1335, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1334));
        float _1910;
        if (_1876 > 0.0)
        {
            _1910 = abs((1.0 - _1865) / _1876);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1876 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1865 + 1.0) / _1876);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1910 = frontier_phi_14_12_ladder;
        }
        float _2261;
        if (_1879 > 0.0)
        {
            _2261 = abs((1.0 - _1869) / _1879);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1879 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1869 + 1.0) / _1879);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2261 = frontier_phi_23_19_ladder;
        }
        float _2724;
        if (_1882 > 0.0)
        {
            _2724 = abs((1.0 - _1873) / _1882);
        }
        else
        {
            float frontier_phi_37_30_ladder;
            if (_1882 < 0.0)
            {
                frontier_phi_37_30_ladder = abs((_1873 + 1.0) / _1882);
            }
            else
            {
                frontier_phi_37_30_ladder = 5000.0;
            }
            _2724 = frontier_phi_37_30_ladder;
        }
        float _2726 = isnan(_2261) ? _1910 : (isnan(_1910) ? _2261 : min(_1910, _2261));
        float _2727 = isnan(_2724) ? _2726 : (isnan(_2726) ? _2724 : min(_2726, _2724));
        float _2731 = (_2727 * _1876) + _1865;
        float _2732 = (_2727 * _1879) + _1869;
        float _2733 = (_2727 * _1882) + _1873;
        float _2734 = _2727 * 9.9999997473787516355514526367188e-05;
        float _2735 = (-1.0) - _2734;
        float _2737 = _2734 + 1.0;
        float frontier_phi_13_37_ladder;
        float frontier_phi_13_37_ladder_1;
        float frontier_phi_13_37_ladder_2;
        if ((_2733 > _2737) || ((_2733 < _2735) || ((_2732 > _2737) || ((_2732 < _2735) || ((_2731 < _2735) || (_2731 > _2737))))))
        {
            frontier_phi_13_37_ladder = 0.0;
            frontier_phi_13_37_ladder_1 = 0.0;
            frontier_phi_13_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2847 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2733, cbModelParam._m0[9u].z, fma(_2732, cbModelParam._m0[9u].y, _2731 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2733, cbModelParam._m0[10u].z, fma(_2732, cbModelParam._m0[10u].y, _2731 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2733, cbModelParam._m0[11u].z, fma(_2732, cbModelParam._m0[11u].y, _2731 * cbModelParam._m0[11u].x))), _1818);
            frontier_phi_13_37_ladder = _2847.y * cbModelParam._m0[1u].y;
            frontier_phi_13_37_ladder_1 = _2847.x * cbModelParam._m0[1u].y;
            frontier_phi_13_37_ladder_2 = _2847.z * cbModelParam._m0[1u].y;
        }
        _1898 = frontier_phi_13_37_ladder_1;
        _1900 = frontier_phi_13_37_ladder;
        _1902 = frontier_phi_13_37_ladder_2;
    }
    else
    {
        vec4 _1886 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1334, _1335, _1336), _1818);
        _1898 = _1886.x * cbModelParam._m0[1u].y;
        _1900 = _1886.y * cbModelParam._m0[1u].y;
        _1902 = _1886.z * cbModelParam._m0[1u].y;
    }
    float _1906 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1183);
    float _1907 = isnan(_1906) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1906 : min(cbModelParam._m0[25u].w, _1906));
    float _1996;
    float _1998;
    float _2000;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1960 = fma(_1393, cbModelParam._m0[21u].z, fma(_1389, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1385)) + cbModelParam._m0[21u].w;
        float _1964 = fma(_1393, cbModelParam._m0[22u].z, fma(_1389, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1385)) + cbModelParam._m0[22u].w;
        float _1968 = fma(_1393, cbModelParam._m0[23u].z, fma(_1389, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1385)) + cbModelParam._m0[23u].w;
        float _1971 = fma(_1336, cbModelParam._m0[21u].z, fma(_1335, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1334));
        float _1974 = fma(_1336, cbModelParam._m0[22u].z, fma(_1335, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1334));
        float _1977 = fma(_1336, cbModelParam._m0[23u].z, fma(_1335, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1334));
        float _2266;
        if (_1971 > 0.0)
        {
            _2266 = abs((1.0 - _1960) / _1971);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1971 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1960 + 1.0) / _1971);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2266 = frontier_phi_25_21_ladder;
        }
        float _2750;
        if (_1974 > 0.0)
        {
            _2750 = abs((1.0 - _1964) / _1974);
        }
        else
        {
            float frontier_phi_39_32_ladder;
            if (_1974 < 0.0)
            {
                frontier_phi_39_32_ladder = abs((_1964 + 1.0) / _1974);
            }
            else
            {
                frontier_phi_39_32_ladder = 5000.0;
            }
            _2750 = frontier_phi_39_32_ladder;
        }
        float _2904;
        if (_1977 > 0.0)
        {
            _2904 = abs((1.0 - _1968) / _1977);
        }
        else
        {
            float frontier_phi_53_48_ladder;
            if (_1977 < 0.0)
            {
                frontier_phi_53_48_ladder = abs((_1968 + 1.0) / _1977);
            }
            else
            {
                frontier_phi_53_48_ladder = 5000.0;
            }
            _2904 = frontier_phi_53_48_ladder;
        }
        float _2906 = isnan(_2750) ? _2266 : (isnan(_2266) ? _2750 : min(_2266, _2750));
        float _2907 = isnan(_2904) ? _2906 : (isnan(_2906) ? _2904 : min(_2906, _2904));
        float _2911 = (_2907 * _1971) + _1960;
        float _2912 = (_2907 * _1974) + _1964;
        float _2913 = (_2907 * _1977) + _1968;
        float _2914 = _2907 * 9.9999997473787516355514526367188e-05;
        float _2915 = (-1.0) - _2914;
        float _2917 = _2914 + 1.0;
        float frontier_phi_22_53_ladder;
        float frontier_phi_22_53_ladder_1;
        float frontier_phi_22_53_ladder_2;
        if ((_2913 > _2917) || ((_2913 < _2915) || ((_2912 > _2917) || ((_2912 < _2915) || ((_2911 < _2915) || (_2911 > _2917))))))
        {
            frontier_phi_22_53_ladder = 0.0;
            frontier_phi_22_53_ladder_1 = 0.0;
            frontier_phi_22_53_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3119 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2913, cbModelParam._m0[17u].z, fma(_2912, cbModelParam._m0[17u].y, _2911 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2913, cbModelParam._m0[18u].z, fma(_2912, cbModelParam._m0[18u].y, _2911 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2913, cbModelParam._m0[19u].z, fma(_2912, cbModelParam._m0[19u].y, _2911 * cbModelParam._m0[19u].x))), _1907);
            frontier_phi_22_53_ladder = _3119.z * cbModelParam._m0[1u].z;
            frontier_phi_22_53_ladder_1 = _3119.y * cbModelParam._m0[1u].z;
            frontier_phi_22_53_ladder_2 = _3119.x * cbModelParam._m0[1u].z;
        }
        _1996 = frontier_phi_22_53_ladder_2;
        _1998 = frontier_phi_22_53_ladder_1;
        _2000 = frontier_phi_22_53_ladder;
    }
    else
    {
        vec4 _1980 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1334, _1335, _1336), _1907);
        _1996 = _1980.x * cbModelParam._m0[1u].z;
        _1998 = _1980.y * cbModelParam._m0[1u].z;
        _2000 = _1980.z * cbModelParam._m0[1u].z;
    }
    float _2012 = ((((1.0 - _1354) * ((_1342 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1354 * _1342)) * _1314;
    float _2013 = _2012 * ((cbModelParam._m0[1u].w * (_1996 - _1898)) + _1898);
    float _2014 = _2012 * ((cbModelParam._m0[1u].w * (_1998 - _1900)) + _1900);
    float _2015 = _2012 * ((cbModelParam._m0[1u].w * (_2000 - _1902)) + _1902);
    float _2036 = fma(_2015, cbSceneParam._m0[89u].z, fma(_2014, cbSceneParam._m0[89u].y, _2013 * cbSceneParam._m0[89u].x));
    float _2039 = fma(_2015, cbSceneParam._m0[90u].z, fma(_2014, cbSceneParam._m0[90u].y, _2013 * cbSceneParam._m0[90u].x));
    float _2042 = fma(_2015, cbSceneParam._m0[91u].z, fma(_2014, cbSceneParam._m0[91u].y, _2013 * cbSceneParam._m0[91u].x));
    vec4 _2050 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1240, _1241));
    float _2052 = _2050.w;
    uint _2067 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _2071 = floatBitsToUint(cbInstanceData._m0[_2067 + 5u]);
    uint _2073 = _2071.x * 14u;
    uint _2074 = _2073 + 13u;
    float _2079 = _1314 + (-1.0);
    float _2082 = (cbLight._m0[_2074].x * _2079) + 1.0;
    float _2083 = (cbLight._m0[_2074].y * _2079) + 1.0;
    uint _2087 = _2073 + 8u;
    float _2103 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2073].w)) * _1183) * 0.949999988079071044921875);
    float _2104 = _2103 * _2103;
    float _2105 = cbLight._m0[_2073].x + _1233;
    float _2106 = cbLight._m0[_2073].y + _1234;
    float _2107 = cbLight._m0[_2073].z + _1235;
    float _2111 = inversesqrt(dot(vec3(_2105, _2106, _2107), vec3(_2105, _2106, _2107)));
    float _2112 = _2111 * _2105;
    float _2113 = _2111 * _2106;
    float _2114 = _2111 * _2107;
    float _2115 = dot(vec3(_1276, _1277, _1278), vec3(cbLight._m0[_2073].xyz));
    float _3848 = isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0));
    float _2118 = isnan(1.0) ? _3848 : (isnan(_3848) ? 1.0 : min(_3848, 1.0));
    float _2119 = dot(vec3(_1276, _1277, _1278), vec3(_1233, _1234, _1235));
    float _3859 = isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0));
    float _2122 = isnan(1.0) ? _3859 : (isnan(_3859) ? 1.0 : min(_3859, 1.0));
    float _2123 = dot(vec3(_1276, _1277, _1278), vec3(_2112, _2113, _2114));
    float _3870 = isnan(0.0) ? _2123 : (isnan(_2123) ? 0.0 : max(_2123, 0.0));
    float _2126 = isnan(1.0) ? _3870 : (isnan(_3870) ? 1.0 : min(_3870, 1.0));
    float _2127 = dot(vec3(cbLight._m0[_2073].xyz), vec3(_2112, _2113, _2114));
    float _3881 = isnan(0.0) ? _2127 : (isnan(_2127) ? 0.0 : max(_2127, 0.0));
    float _2131 = _2104 * _2104;
    float _2135 = ((_2126 * _2126) * (_2131 + (-1.0))) + 1.0;
    float _2146 = (exp2(log2(1.0 - (isnan(1.0) ? _3881 : (isnan(_3881) ? 1.0 : min(_3881, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2147 = 1.0 - _2104;
    float _2158 = (0.5 / (((_2122 * ((_2118 * _2147) + _2104)) + 9.9999999392252902907785028219223e-09) + (((_2122 * _2147) + _2104) * _2118))) * _2118;
    float _3892 = isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0));
    float _2160 = (isnan(1.0) ? _3892 : (isnan(_3892) ? 1.0 : min(_3892, 1.0))) * (_2131 / ((_2135 * _2135) * 3.141590118408203125));
    float _2161 = isnan(1.0) ? _2082 : (isnan(_2082) ? 1.0 : min(_2082, 1.0));
    uint _2174 = _2073 | 1u;
    uint _2178 = _2073 + 9u;
    float _2192 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2174].w)) * _1183) * 0.949999988079071044921875);
    float _2193 = _2192 * _2192;
    float _2194 = cbLight._m0[_2174].x + _1233;
    float _2195 = cbLight._m0[_2174].y + _1234;
    float _2196 = cbLight._m0[_2174].z + _1235;
    float _2200 = inversesqrt(dot(vec3(_2194, _2195, _2196), vec3(_2194, _2195, _2196)));
    float _2201 = _2200 * _2194;
    float _2202 = _2200 * _2195;
    float _2203 = _2200 * _2196;
    float _2204 = dot(vec3(_1276, _1277, _1278), vec3(cbLight._m0[_2174].xyz));
    float _3908 = isnan(0.0) ? _2204 : (isnan(_2204) ? 0.0 : max(_2204, 0.0));
    float _2207 = isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0));
    float _2208 = dot(vec3(_1276, _1277, _1278), vec3(_2201, _2202, _2203));
    float _3919 = isnan(0.0) ? _2208 : (isnan(_2208) ? 0.0 : max(_2208, 0.0));
    float _2211 = isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0));
    float _2212 = dot(vec3(cbLight._m0[_2174].xyz), vec3(_2201, _2202, _2203));
    float _3930 = isnan(0.0) ? _2212 : (isnan(_2212) ? 0.0 : max(_2212, 0.0));
    float _2216 = _2193 * _2193;
    float _2220 = ((_2211 * _2211) * (_2216 + (-1.0))) + 1.0;
    float _2229 = (exp2(log2(1.0 - (isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2230 = 1.0 - _2193;
    float _2240 = (0.5 / (((_2122 * ((_2207 * _2230) + _2193)) + 9.9999999392252902907785028219223e-09) + (((_2122 * _2230) + _2193) * _2207))) * _2207;
    float _3941 = isnan(0.0) ? _2240 : (isnan(_2240) ? 0.0 : max(_2240, 0.0));
    float _2242 = (isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0))) * (_2216 / ((_2220 * _2220) * 3.141590118408203125));
    float _2243 = isnan(1.0) ? _2083 : (isnan(_2083) ? 1.0 : min(_2083, 1.0));
    float _2253 = (((_2229 * cbLight._m0[_2178].x) * _2242) * _2243) + ((((cbLight._m0[_2087].x * ((1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2052))) * _2146) * _2160) * _2161);
    float _2254 = (((_2229 * cbLight._m0[_2178].y) * _2242) * _2243) + ((((cbLight._m0[_2087].y * ((1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2052))) * _2146) * _2160) * _2161);
    float _2255 = (((_2229 * cbLight._m0[_2178].z) * _2242) * _2243) + ((((cbLight._m0[_2087].z * ((1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2052))) * _2146) * _2160) * _2161);
    float _2370;
    float _2372;
    float _2374;
    if (_2071.y == 0u)
    {
        float _2310 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2311 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2310;
        float _2312 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2310;
        float _2313 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2310;
        uvec4 _2325 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2326 = _2325.x;
        uint _2337 = uint((float(_2325.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1241) / _2326))) + floor(float(uint(cbSceneParam._m0[85u].x * _1240) / _2326)));
        float _2347 = (log2(_2313 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2348 = isnan(0.0) ? _2347 : (isnan(_2347) ? 0.0 : max(_2347, 0.0));
        uint _2351 = uint(isnan(14.0) ? _2348 : (isnan(_2348) ? 14.0 : min(_2348, 14.0)));
        uvec4 _2356 = texelFetch(g_lightClusterGridBuffer, int(((_2351 << 2u) + (_2337 << 6u)) >> 2u));
        uint _2357 = _2356.x;
        uint _2358 = _2325.z;
        float _2574;
        float _2576;
        float _2578;
        if (((((1u << ((_2358 >> 4u) & 15u)) + 4294967295u) & _2357) == 0u) || ((_2358 & 240u) == 0u))
        {
            _2574 = 0.0;
            _2576 = 0.0;
            _2578 = 0.0;
        }
        else
        {
            float _2575;
            float _2577;
            float _2579;
            float _2778 = 0.0;
            float _2779 = 0.0;
            float _2780 = 0.0;
            uint _2781 = 0u;
            uint _2790;
            bool _2791;
            for (;;)
            {
                _2790 = texelFetch(g_lightClassification, int((((_2351 << 5u) + (_2337 << 9u)) + (_2781 << 2u)) >> 2u)).x;
                _2791 = _2790 == 0u;
                float frontier_phi_50_pred;
                float frontier_phi_50_pred_1;
                float frontier_phi_50_pred_2;
                if (_2791)
                {
                    frontier_phi_50_pred = _2780;
                    frontier_phi_50_pred_1 = _2778;
                    frontier_phi_50_pred_2 = _2779;
                }
                else
                {
                    float _2944;
                    float _2945;
                    float _2946;
                    uint _2947;
                    _2944 = _2778;
                    _2945 = _2779;
                    _2946 = _2780;
                    _2947 = _2790;
                    float _2856;
                    float _2857;
                    float _2858;
                    for (;;)
                    {
                        uint _2951 = uint(findLSB(_2947)) + (_2781 << 5u);
                        uint _2948 = (_2947 + 4294967295u) & _2947;
                        uint _2953 = _2951 * 48u;
                        vec4 _2967 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2953)).x, texelFetch(g_PointLightRenderingBuffer, int(_2953 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2953 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2953 + 3u)).x));
                        uint _2984 = (_2951 * 48u) + 8u;
                        vec3 _2995 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2984)).x, texelFetch(g_PointLightRenderingBuffer, int(_2984 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2984 + 2u)).x));
                        float _2999 = _2967.x - _2311;
                        float _3000 = _2967.y - _2312;
                        float _3001 = _2967.z - _2313;
                        float _3002 = dot(vec3(_2999, _3000, _3001), vec3(_2999, _3000, _3001));
                        float _3005 = inversesqrt(_3002);
                        float _3006 = _3005 * _2999;
                        float _3007 = _3005 * _3000;
                        float _3008 = _3005 * _3001;
                        float _3014 = 1.0 - (_3002 * _2967.w);
                        float _3967 = isnan(0.0) ? _3014 : (isnan(_3014) ? 0.0 : max(_3014, 0.0));
                        float _3016 = sqrt(_3002) * uintBitsToFloat(uvec4(_2974, _2975, _2976, texelFetch(g_PointLightRenderingBuffer, int(((_2951 * 48u) + 4u) + 3u)).x)).w;
                        float _3020 = _3016 * _3016;
                        float _3021 = (-0.0) - _2311;
                        float _3022 = (-0.0) - _2312;
                        float _3023 = (-0.0) - _2313;
                        float _3027 = inversesqrt(dot(vec3(_3021, _3022, _3023), vec3(_3021, _3022, _3023)));
                        float _3028 = _3027 * _3021;
                        float _3029 = _3027 * _3022;
                        float _3030 = _3027 * _3023;
                        float _3038 = exp2(log2(1.0 / ((_3020 * 3.5) + 5.0)) * 0.25);
                        float _3039 = 1.0 - _1342;
                        float _3046 = sqrt(1.0 - ((1.0 - (_3039 * _3039)) * (1.0 - (_3038 * _3038))));
                        float _3047 = _3046 * _3046;
                        float _3048 = _3047 * _3047;
                        float _3049 = _3028 + _3006;
                        float _3050 = _3029 + _3007;
                        float _3051 = _3030 + _3008;
                        float _3055 = inversesqrt(dot(vec3(_3049, _3050, _3051), vec3(_3049, _3050, _3051)));
                        float _3059 = dot(vec3(_1296, _1299, _1302), vec3(_3028, _3029, _3030));
                        float _3978 = isnan(0.0) ? _3059 : (isnan(_3059) ? 0.0 : max(_3059, 0.0));
                        float _3062 = isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0));
                        float _3063 = dot(vec3(_1296, _1299, _1302), vec3(_3055 * _3049, _3055 * _3050, _3055 * _3051));
                        float _3989 = isnan(0.0) ? _3063 : (isnan(_3063) ? 0.0 : max(_3063, 0.0));
                        float _3066 = isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0));
                        float _3070 = ((_3066 * _3066) * (_3048 + (-1.0))) + 1.0;
                        float _3071 = (1.39999997615814208984375 / (_3016 + 1.39999997615814208984375)) * _3047;
                        float _3072 = _3071 * _3071;
                        float _3075 = ((1.0 - _3072) * dot(vec3(_1296, _1299, _1302), vec3(_3006, _3007, _3008))) + _3072;
                        float _4000 = isnan(0.0) ? _3075 : (isnan(_3075) ? 0.0 : max(_3075, 0.0));
                        float _3076 = isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0));
                        float _3077 = 1.0 - _3047;
                        float _3087 = (0.5 / (((_3076 * ((_3062 * _3077) + _3047)) + 9.9999999392252902907785028219223e-09) + (((_3076 * _3077) + _3047) * _3062))) * _3076;
                        float _4011 = isnan(0.0) ? _3087 : (isnan(_3087) ? 0.0 : max(_3087, 0.0));
                        float _3098 = (((_3048 * 3.1415927410125732421875) * (isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0)))) / ((_3070 * _3070) * ((_3020 * 2.1991131305694580078125) + 3.141590118408203125))) * (isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0)));
                        _2856 = (_3098 * _2995.x) + _2944;
                        _2857 = (_3098 * _2995.y) + _2945;
                        _2858 = (_3098 * _2995.z) + _2946;
                        if (_2948 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2944 = _2856;
                            _2945 = _2857;
                            _2946 = _2858;
                            _2947 = _2948;
                        }
                    }
                    frontier_phi_50_pred = _2858;
                    frontier_phi_50_pred_1 = _2856;
                    frontier_phi_50_pred_2 = _2857;
                }
                _2579 = frontier_phi_50_pred;
                _2575 = frontier_phi_50_pred_1;
                _2577 = frontier_phi_50_pred_2;
                uint _2782 = _2781 + 1u;
                if (_2782 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2778 = _2575;
                    _2779 = _2577;
                    _2780 = _2579;
                    _2781 = _2782;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2574 = _2575;
            _2576 = _2577;
            _2578 = _2579;
        }
        uvec4 _2582 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2583 = _2582.z;
        uint _2585 = (_2583 >> 8u) & 15u;
        float _2755;
        float _2757;
        float _2759;
        if (((4294967295u << _2585) & _2357) == 0u)
        {
            _2755 = _2574;
            _2757 = _2576;
            _2759 = _2578;
        }
        else
        {
            float _2771 = inversesqrt(dot(vec3(_2311, _2312, _2313), vec3(_2311, _2312, _2313)));
            float _2772 = _2771 * _2311;
            float _2773 = _2771 * _2312;
            float _2774 = _2771 * _2313;
            float frontier_phi_41_42_ladder;
            float frontier_phi_41_42_ladder_1;
            float frontier_phi_41_42_ladder_2;
            if (_2585 < ((_2583 >> 12u) & 15u))
            {
                float _2756;
                float _2758;
                float _2760;
                float _2930 = _2574;
                float _2931 = _2576;
                float _2932 = _2578;
                uint _2933 = _2585;
                uint _2942;
                bool _2943;
                for (;;)
                {
                    _2942 = texelFetch(g_lightClassification, int((((_2351 << 5u) + (_2337 << 9u)) + (_2933 << 2u)) >> 2u)).x;
                    _2943 = _2942 == 0u;
                    float frontier_phi_59_pred;
                    float frontier_phi_59_pred_1;
                    float frontier_phi_59_pred_2;
                    if (_2943)
                    {
                        frontier_phi_59_pred = _2930;
                        frontier_phi_59_pred_1 = _2932;
                        frontier_phi_59_pred_2 = _2931;
                    }
                    else
                    {
                        float _3124;
                        float _3125;
                        float _3126;
                        float _3387;
                        float _3388;
                        float _3389;
                        float _3134 = _2930;
                        float _3135 = _2931;
                        float _3136 = _2932;
                        uint _3137 = _2942;
                        uint _3138;
                        uint _3148;
                        vec4 _3163;
                        float _3164;
                        vec3 _3176;
                        vec4 _3191;
                        vec4 _3206;
                        float _3252;
                        bool _3253;
                        for (;;)
                        {
                            _3148 = ((_2933 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3137));
                            _3138 = (_3137 + 4294967295u) & _3137;
                            uint _3150 = _3148 * 40u;
                            _3163 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3150)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3150 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3150 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3150 + 3u)).x));
                            _3164 = _3163.w;
                            uint _3166 = (_3148 * 40u) + 8u;
                            _3176 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3166)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3166 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3166 + 2u)).x));
                            uint _3178 = (_3148 * 40u) + 16u;
                            _3191 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3178)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3178 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3178 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3178 + 3u)).x));
                            uint _3193 = (_3148 * 40u) + 20u;
                            _3206 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3193)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3193 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3193 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3193 + 3u)).x));
                            uint _3208 = (_3148 * 40u) + 24u;
                            vec4 _3221 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3208)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3208 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3208 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3208 + 3u)).x));
                            uint _3227 = (_3148 * 40u) + 28u;
                            vec4 _3240 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3227)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3227 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3227 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3227 + 3u)).x));
                            _3252 = fma(_2313, _3240.z, fma(_2312, _3240.y, _3240.x * _2311)) + _3240.w;
                            _3253 = !((fma(_2313, _3221.z, fma(_2312, _3221.y, _3221.x * _2311)) + _3221.w) <= 0.0);
                            float frontier_phi_65_pred;
                            float frontier_phi_65_pred_1;
                            float frontier_phi_65_pred_2;
                            if (_3253)
                            {
                                float _3287 = _3163.x - _2311;
                                float _3288 = _3163.y - _2312;
                                float _3289 = _3163.z - _2313;
                                float _3290 = dot(vec3(_3287, _3288, _3289), vec3(_3287, _3288, _3289));
                                float _3293 = inversesqrt(_3290);
                                float _3294 = _3293 * _3287;
                                float _3295 = _3293 * _3288;
                                float _3296 = _3293 * _3289;
                                float _3300 = 1.0 - (_3290 / (_3164 * _3164));
                                float _4022 = isnan(0.0) ? _3300 : (isnan(_3300) ? 0.0 : max(_3300, 0.0));
                                float _3302 = sqrt(_3290) * uintBitsToFloat(uvec4(_3256, _3257, _3258, texelFetch(g_SpotLightRenderingBuffer, int(((_3148 * 40u) + 4u) + 3u)).x)).w;
                                float _3305 = _3302 * _3302;
                                float _3306 = (fma(_2313, _3191.z, fma(_2312, _3191.y, _3191.x * _2311)) + _3191.w) / _3252;
                                float _3307 = (fma(_2313, _3206.z, fma(_2312, _3206.y, _3206.x * _2311)) + _3206.w) / _3252;
                                float _3311 = 1.0 - dot(vec2(_3306, _3307), vec2(_3306, _3307));
                                float _4033 = isnan(0.0) ? _3311 : (isnan(_3311) ? 0.0 : max(_3311, 0.0));
                                float _3321 = exp2(log2(1.0 / ((_3305 * 3.5) + 5.0)) * 0.25);
                                float _3322 = 1.0 - _1342;
                                float _3329 = sqrt(1.0 - ((1.0 - (_3322 * _3322)) * (1.0 - (_3321 * _3321))));
                                float _3330 = _3329 * _3329;
                                float _3331 = _3330 * _3330;
                                float _3332 = _3294 - _2772;
                                float _3333 = _3295 - _2773;
                                float _3334 = _3296 - _2774;
                                float _3338 = inversesqrt(dot(vec3(_3332, _3333, _3334), vec3(_3332, _3333, _3334)));
                                float _3342 = dot(vec3(_1296, _1299, _1302), vec3((-0.0) - _2772, (-0.0) - _2773, (-0.0) - _2774));
                                float _4044 = isnan(0.0) ? _3342 : (isnan(_3342) ? 0.0 : max(_3342, 0.0));
                                float _3345 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
                                float _3346 = dot(vec3(_1296, _1299, _1302), vec3(_3338 * _3332, _3338 * _3333, _3338 * _3334));
                                float _4055 = isnan(0.0) ? _3346 : (isnan(_3346) ? 0.0 : max(_3346, 0.0));
                                float _3349 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
                                float _3353 = ((_3349 * _3349) * (_3331 + (-1.0))) + 1.0;
                                float _3354 = (1.39999997615814208984375 / (_3302 + 1.39999997615814208984375)) * _3330;
                                float _3355 = _3354 * _3354;
                                float _3361 = ((1.0 - _3355) * dot(vec3(_1296, _1299, _1302), vec3(_3294, _3295, _3296))) + _3355;
                                float _4066 = isnan(0.0) ? _3361 : (isnan(_3361) ? 0.0 : max(_3361, 0.0));
                                float _3362 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
                                float _3363 = 1.0 - _3330;
                                float _3373 = (0.5 / (((_3362 * ((_3345 * _3363) + _3330)) + 9.9999999392252902907785028219223e-09) + (((_3362 * _3363) + _3330) * _3345))) * _3362;
                                float _4077 = isnan(0.0) ? _3373 : (isnan(_3373) ? 0.0 : max(_3373, 0.0));
                                float _3383 = ((isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0))) * (isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0)))) * (((_3331 * 3.1415927410125732421875) * (isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0)))) / ((_3353 * _3353) * ((_3305 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_65_pred = _3383 * _3176.z;
                                frontier_phi_65_pred_1 = _3383 * _3176.y;
                                frontier_phi_65_pred_2 = _3383 * _3176.x;
                            }
                            else
                            {
                                frontier_phi_65_pred = 0.0;
                                frontier_phi_65_pred_1 = 0.0;
                                frontier_phi_65_pred_2 = 0.0;
                            }
                            _3389 = frontier_phi_65_pred;
                            _3388 = frontier_phi_65_pred_1;
                            _3387 = frontier_phi_65_pred_2;
                            _3124 = _3387 + _3134;
                            _3125 = _3388 + _3135;
                            _3126 = _3389 + _3136;
                            if (_3138 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3134 = _3124;
                                _3135 = _3125;
                                _3136 = _3126;
                                _3137 = _3138;
                                continue;
                            }
                        }
                        frontier_phi_59_pred = _3124;
                        frontier_phi_59_pred_1 = _3126;
                        frontier_phi_59_pred_2 = _3125;
                    }
                    _2756 = frontier_phi_59_pred;
                    _2760 = frontier_phi_59_pred_1;
                    _2758 = frontier_phi_59_pred_2;
                    uint _2934 = _2933 + 1u;
                    if (_2934 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2930 = _2756;
                        _2931 = _2758;
                        _2932 = _2760;
                        _2933 = _2934;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_41_42_ladder = _2760;
                frontier_phi_41_42_ladder_1 = _2756;
                frontier_phi_41_42_ladder_2 = _2758;
            }
            else
            {
                frontier_phi_41_42_ladder = _2578;
                frontier_phi_41_42_ladder_1 = _2574;
                frontier_phi_41_42_ladder_2 = _2576;
            }
            _2755 = frontier_phi_41_42_ladder_1;
            _2757 = frontier_phi_41_42_ladder_2;
            _2759 = frontier_phi_41_42_ladder;
        }
        float _2764 = isnan(1.0) ? _1314 : (isnan(_1314) ? 1.0 : min(_1314, 1.0));
        _2370 = ((_2755 * 0.039999999105930328369140625) * _2764) + _2253;
        _2372 = ((_2757 * 0.039999999105930328369140625) * _2764) + _2254;
        _2374 = ((_2759 * 0.039999999105930328369140625) * _2764) + _2255;
    }
    else
    {
        _2370 = _2253;
        _2372 = _2254;
        _2374 = _2255;
    }
    uint _2381 = (_2067 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _2387 = cbInstanceData._m0[_2381].x * (_955 - (_955 * TEXCOORD_7.x));
    float _2388 = cbInstanceData._m0[_2381].y * (_957 - (_957 * TEXCOORD_7.y));
    float _2389 = cbInstanceData._m0[_2381].z * (_959 - (_959 * TEXCOORD_7.z));
    float _2409 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2410 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2411 = cbSceneParam._m0[86u].x * ((_1240 / cbSceneParam._m0[86u].x) + ((0.0999999940395355224609375 / (_1197 + 10.0)) * dot(vec3(_1276, _1277, _1278), vec3(_227, _228, _229))));
    float _2412 = isnan(_2409) ? _2411 : (isnan(_2411) ? _2409 : min(_2411, _2409));
    float _2413 = isnan(_2410) ? _1241 : (isnan(_1241) ? _2410 : min(_1241, _2410));
    vec4 _2415 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2412, _2413), 0.0);
    float _2417 = _2415.x;
    bool _2437 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2417)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2417))) > _1197;
    float _2438 = _2437 ? _2412 : _1240;
    float _2439 = _2437 ? _2413 : _1241;
    vec4 _2441 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2438, _2439));
    vec4 _2446 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2438, _2439));
    float _2448 = _2446.x;
    float _2468 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2448)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2448))) - _1197;
    bool _2475 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2479 = (isnan(_2468) ? 0.0 : (isnan(0.0) ? _2468 : max(0.0, _2468))) * (-1.44269502162933349609375);
    float _2499 = 0.4799999892711639404296875 - (exp2(log2(1.0 - (isnan(1.0) ? _3711 : (isnan(_3711) ? 1.0 : min(_3711, 1.0)))) * 5.0) * 0.4799999892711639404296875);
    float _2510 = (_2387 + ((_2370 + ((isnan(0.0) ? _2036 : (isnan(_2036) ? 0.0 : max(_2036, 0.0))) * _1810)) * cbPerFrame._m0[3u].x)) + (((_2499 * _2441.x) * exp2(_2479 * (_2475 ? 0.0 : cbMtdParam._m0[35u].y))) * cbSceneParam._m0[72u].w);
    float _2512 = (_2388 + ((_2372 + ((isnan(0.0) ? _2039 : (isnan(_2039) ? 0.0 : max(_2039, 0.0))) * _1810)) * cbPerFrame._m0[3u].x)) + (((_2499 * _2441.y) * exp2(_2479 * (_2475 ? 0.0 : cbMtdParam._m0[35u].z))) * cbSceneParam._m0[72u].w);
    float _2514 = (_2389 + ((_2374 + ((isnan(0.0) ? _2042 : (isnan(_2042) ? 0.0 : max(_2042, 0.0))) * _1810)) * cbPerFrame._m0[3u].x)) + (((_2499 * _2441.z) * exp2(_2479 * (_2475 ? 0.0 : cbMtdParam._m0[35u].w))) * cbSceneParam._m0[72u].w);
    float _4123 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2527 = isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0));
    float _2537 = _1240 / cbSceneParam._m0[86u].x;
    float _2538 = _1241 / cbSceneParam._m0[86u].y;
    vec4 _2552 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2537, _2538, (log2((isnan(cbSceneParam._m0[77u].w) ? _1197 : (isnan(_1197) ? cbSceneParam._m0[77u].w : min(_1197, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2554 = _2552.x;
    float _2555 = _2552.y;
    float _2556 = _2552.z;
    float _2557 = _2552.w;
    float _2630;
    float _2632;
    float _2634;
    float _2636;
    if (_1197 > cbSceneParam._m0[78u].w)
    {
        float _2593 = isnan(_1197) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1197 : min(cbSceneParam._m0[80u].w, _1197));
        float _2594 = _2593 / _1197;
        float _2605 = _2594 * _1226;
        float _2606 = _1227 * _2594;
        float _2607 = (-0.0) - _2606;
        float _2608 = _2594 * _1228;
        float _2610 = (cbSceneParam._m0[77u].w * _2607) / _2593;
        float _2611 = _2610 + cbSceneParam._m0[79u].w;
        float _2612 = cbSceneParam._m0[79u].w - _2606;
        float _2618 = sqrt(((_2605 * _2605) + (_2606 * _2606)) + (_2608 * _2608));
        float _2621 = (1.0 - (cbSceneParam._m0[77u].w / _2593)) * _2618;
        float _2627 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2628 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2866;
        if (abs((_2607 - _2610) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2866 = ((((_2611 > 0.0) ? exp2(_2627 * _2611) : (2.0 - exp2(_2628 * _2611))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2621;
        }
        else
        {
            float _2804 = 1.0 / cbSceneParam._m0[80u].x;
            float _2805 = isnan(_2612) ? _2611 : (isnan(_2611) ? _2612 : max(_2611, _2612));
            float _2806 = isnan(_2612) ? _2611 : (isnan(_2611) ? _2612 : min(_2611, _2612));
            float _2815 = isnan(0.0) ? _2805 : (isnan(_2805) ? 0.0 : min(_2805, 0.0));
            float _2816 = isnan(0.0) ? _2806 : (isnan(_2806) ? 0.0 : min(_2806, 0.0));
            _2866 = ((abs(_2618 / _2607) * cbSceneParam._m0[80u].y) * ((((_2815 - _2816) * 2.0) - ((exp2(_2627 * (isnan(0.0) ? _2805 : (isnan(_2805) ? 0.0 : max(_2805, 0.0)))) - exp2(_2627 * (isnan(0.0) ? _2806 : (isnan(_2806) ? 0.0 : max(_2806, 0.0))))) * _2804)) - ((exp2(_2628 * _2815) - exp2(_2628 * _2816)) * _2804))) + (_2621 * cbSceneParam._m0[80u].z);
        }
        vec4 _2868 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2537, _2538, 1.0), 0.0);
        float _2877 = exp2((_2866 * (-1.44269502162933349609375)) * (1.0 - _2868.w));
        float _2878 = log2(_2877);
        float _2894 = log2(_2557);
        _2630 = (exp2(_2894 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2878 * cbSceneParam._m0[78u].x)) * _2868.x) / cbSceneParam._m0[78u].x)) + _2554;
        _2632 = (exp2(_2894 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2878 * cbSceneParam._m0[78u].y)) * _2868.y) / cbSceneParam._m0[78u].y)) + _2555;
        _2634 = (exp2(_2894 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2878 * cbSceneParam._m0[78u].z)) * _2868.z) / cbSceneParam._m0[78u].z)) + _2556;
        _2636 = _2877 * _2557;
    }
    else
    {
        _2630 = _2554;
        _2632 = _2555;
        _2634 = _2556;
        _2636 = _2557;
    }
    bool _2648 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2649 = log2(_2636);
    float _2653 = exp2(_2649 * cbSceneParam._m0[78u].x);
    float _2654 = exp2(_2649 * cbSceneParam._m0[78u].y);
    float _2655 = exp2(_2649 * cbSceneParam._m0[78u].z);
    float _2656 = _2653 * (isnan(0.0) ? _2510 : (isnan(_2510) ? 0.0 : max(_2510, 0.0)));
    float _2657 = _2654 * (isnan(0.0) ? _2512 : (isnan(_2512) ? 0.0 : max(_2512, 0.0)));
    float _2658 = _2655 * (isnan(0.0) ? _2514 : (isnan(_2514) ? 0.0 : max(_2514, 0.0)));
    vec4 _2666 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1240, _1241));
    float _2668 = _2666.x;
    float _2689 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2668)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2668))) - _1197) * cbMtdParam._m0[20u].y;
    float _4174 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
    float _2690 = isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0));
    float _2691 = (cbInstanceData._m0[_2067 + 6u].w * (isnan(1.0) ? _3689 : (isnan(_3689) ? 1.0 : min(_3689, 1.0)))) * _2690;
    float _2700 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2700 * (_2648 ? _2656 : (_2656 + (cbSceneParam._m0[72u].w * _2630)));
    SV_Target.y = _2700 * (_2648 ? _2657 : (_2657 + (cbSceneParam._m0[72u].w * _2632)));
    SV_Target.z = _2700 * (_2648 ? _2658 : (_2658 + (cbSceneParam._m0[72u].w * _2634)));
    SV_Target.w = _2691;
    SV_Target_1.x = ((((cbMtdParam._m0[2u].x * _2387) * _2527) * _2653) * _2690) * _2700;
    SV_Target_1.y = ((((cbMtdParam._m0[2u].y * _2388) * _2527) * _2654) * _2690) * _2700;
    SV_Target_1.z = ((((cbMtdParam._m0[2u].z * _2389) * _2527) * _2655) * _2690) * _2700;
    SV_Target_1.w = _2691;
}


