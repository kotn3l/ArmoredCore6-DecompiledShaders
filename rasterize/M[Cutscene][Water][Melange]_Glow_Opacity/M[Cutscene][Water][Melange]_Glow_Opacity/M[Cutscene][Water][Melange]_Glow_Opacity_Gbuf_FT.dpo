#version 460
layout(triangles) in;

out float gl_ClipDistance[2];
out float gl_CullDistance[1];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[39];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 58) uniform texture2D g_WaterSimulationHeightTexture;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 0) in vec4 POSITION[];
layout(location = 1) in vec4 NORMAL[];
layout(location = 2) in vec4 TANGENT[];
layout(location = 3) in float TEXCOORD[];
layout(location = 3, component = 1) in float TEXCOORD_1[];
layout(location = 4) in vec4 TEXCOORD_5[];
layout(location = 5) in vec4 TEXCOORD_9[];
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 7) out float TEXCOORD_12;

void main()
{
    precise float _105 = gl_TessCoord.z * POSITION[0u].x;
    precise float _106 = gl_TessCoord.z * POSITION[0u].y;
    precise float _107 = gl_TessCoord.z * POSITION[0u].z;
    precise float _114 = gl_TessCoord.x * POSITION[1u].x;
    precise float _115 = gl_TessCoord.x * POSITION[1u].y;
    precise float _116 = gl_TessCoord.x * POSITION[1u].z;
    precise float _117 = _105 + _114;
    precise float _118 = _106 + _115;
    precise float _119 = _107 + _116;
    precise float _126 = gl_TessCoord.y * POSITION[2u].x;
    precise float _127 = gl_TessCoord.y * POSITION[2u].y;
    precise float _128 = gl_TessCoord.y * POSITION[2u].z;
    precise float _129 = _117 + _126;
    precise float _130 = _118 + _127;
    precise float _131 = _119 + _128;
    precise float _222 = gl_TessCoord.z * TEXCOORD[0u];
    precise float _225 = gl_TessCoord.x * TEXCOORD[1u];
    precise float _226 = _222 + _225;
    precise float _229 = gl_TessCoord.y * TEXCOORD[2u];
    precise float _230 = _226 + _229;
    precise float _233 = gl_TessCoord.z * TEXCOORD_1[0u];
    precise float _236 = gl_TessCoord.x * TEXCOORD_1[1u];
    precise float _237 = _233 + _236;
    precise float _240 = gl_TessCoord.y * TEXCOORD_1[2u];
    precise float _241 = _237 + _240;
    precise float _250 = gl_TessCoord.z * TEXCOORD_5[0u].x;
    precise float _251 = gl_TessCoord.z * TEXCOORD_5[0u].y;
    precise float _252 = gl_TessCoord.z * TEXCOORD_5[0u].z;
    precise float _253 = gl_TessCoord.z * TEXCOORD_5[0u].w;
    precise float _262 = gl_TessCoord.x * TEXCOORD_5[1u].x;
    precise float _263 = gl_TessCoord.x * TEXCOORD_5[1u].y;
    precise float _264 = gl_TessCoord.x * TEXCOORD_5[1u].z;
    precise float _265 = gl_TessCoord.x * TEXCOORD_5[1u].w;
    precise float _266 = _250 + _262;
    precise float _267 = _251 + _263;
    precise float _268 = _252 + _264;
    precise float _269 = _253 + _265;
    precise float _278 = gl_TessCoord.y * TEXCOORD_5[2u].x;
    precise float _279 = gl_TessCoord.y * TEXCOORD_5[2u].y;
    precise float _280 = gl_TessCoord.y * TEXCOORD_5[2u].z;
    precise float _281 = gl_TessCoord.y * TEXCOORD_5[2u].w;
    precise float _282 = _266 + _278;
    precise float _283 = _267 + _279;
    precise float _284 = _268 + _280;
    precise float _285 = _269 + _281;
    precise float _340 = cbMtdParam._m0[36u].w - cbMtdParam._m0[36u].x;
    precise float _341 = cbMtdParam._m0[37u].y - cbMtdParam._m0[36u].z;
    precise float _342 = _283 * _340;
    precise float _343 = _283 * _341;
    precise float _344 = cbMtdParam._m0[36u].x + _342;
    precise float _345 = cbMtdParam._m0[36u].z + _343;
    precise float _362 = cbPerFrame._m0[22u].x + cbMtdParam._m0[24u].w;
    precise float _363 = cbMtdParam._m0[17u].y * _362;
    precise float _364 = cbMtdParam._m0[31u].w * _363;
    precise float _365 = cbMtdParam._m0[32u].x * _363;
    precise float _371 = _230 * cbMtdParam._m0[30u].w;
    precise float _372 = _241 * cbMtdParam._m0[31u].x;
    precise float _373 = _371 + _364;
    precise float _374 = _372 + _365;
    precise float _381 = cbTextureTilingScale._m0[2u].x * _373;
    precise float _382 = cbTextureTilingScale._m0[2u].y * _374;
    precise float _383 = cbTextureTilingScale._m0[2u].z + _381;
    precise float _384 = cbTextureTilingScale._m0[2u].w + _382;
    vec4 _388 = textureLod(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_2, SS_BumpMap), vec2(_383, _384), 0.0);
    float _391 = _388.z;
    precise float _392 = _344 * _391;
    precise float _393 = _345 * _391;
    precise float _402 = cbMtdParam._m0[37u].z * cbMtdParam._m0[22u].x;
    precise float _403 = cbMtdParam._m0[38u].x * cbMtdParam._m0[22u].x;
    precise float _404 = _402 - cbMtdParam._m0[37u].z;
    precise float _405 = _403 - cbMtdParam._m0[38u].x;
    precise float _406 = _283 * _404;
    precise float _407 = _283 * _405;
    precise float _408 = cbMtdParam._m0[37u].z + _406;
    precise float _409 = cbMtdParam._m0[38u].x + _407;
    precise float _418 = _363 * cbMtdParam._m0[27u].w;
    precise float _419 = _363 * cbMtdParam._m0[28u].x;
    precise float _428 = _230 * cbMtdParam._m0[34u].w;
    precise float _429 = _241 * cbMtdParam._m0[35u].x;
    precise float _430 = _418 + _428;
    precise float _431 = _419 + _429;
    precise float _438 = _430 * cbTextureTilingScale._m0[0u].x;
    precise float _439 = cbTextureTilingScale._m0[0u].y * _431;
    precise float _440 = cbTextureTilingScale._m0[0u].z + _438;
    precise float _441 = cbTextureTilingScale._m0[0u].w + _439;
    precise float _448 = _363 * cbMtdParam._m0[28u].y;
    precise float _449 = _363 * cbMtdParam._m0[28u].z;
    precise float _450 = _428 + _448;
    precise float _451 = _429 + _449;
    precise float _452 = _450 * cbTextureTilingScale._m0[0u].x;
    precise float _453 = cbTextureTilingScale._m0[0u].y * _451;
    precise float _454 = cbTextureTilingScale._m0[0u].z + _452;
    precise float _455 = cbTextureTilingScale._m0[0u].w + _453;
    precise float _459 = textureLod(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(_440, _441), 0.0).w * textureLod(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(_454, _455), 0.0).w;
    precise float _460 = _408 * _459;
    precise float _461 = _409 * _459;
    precise float _462 = _392 + _460;
    precise float _463 = _393 + _461;
    precise float _478 = (-0.0) - cbMtdParam._m0[4u].y;
    precise float _519 = _129 + _462;
    precise float _520 = _131 + _463;
    precise float _526 = _519 - cbvModelParam._m0[8u].x;
    precise float _527 = _520 - cbvModelParam._m0[8u].y;
    precise float _543 = dot(vec2(_526, _527), vec2(cbvModelParam._m0[9u].xy)) * cbvModelParam._m0[8u].z;
    precise float _544 = dot(vec2(_526, _527), vec2(cbvModelParam._m0[9u].zw)) * cbvModelParam._m0[8u].w;
    precise float _547 = cbMtdParam._m0[37u].x - cbMtdParam._m0[36u].y;
    precise float _548 = _283 * _547;
    precise float _549 = cbMtdParam._m0[36u].y + _548;
    precise float _550 = _549 * _391;
    precise float _552 = cbMtdParam._m0[37u].w * cbMtdParam._m0[22u].x;
    precise float _553 = _552 - cbMtdParam._m0[37u].w;
    precise float _554 = _283 * _553;
    precise float _555 = cbMtdParam._m0[37u].w + _554;
    precise float _556 = _555 * _459;
    precise float _557 = _550 + _556;
    precise float _558 = _130 + _557;
    vec4 _560 = textureLod(sampler2D(g_WaterSimulationHeightTexture, SS_ClampLinear), vec2(_543, _544), 0.0);
    float _562 = _560.x;
    precise float _563 = _562 * 0.0;
    precise float _564 = _519 + _563;
    precise float _565 = _558 + _562;
    precise float _566 = _520 + _563;
    float _604;
    float _605;
    float _606;
    if (((((dot(vec4(_564, _565, _566, 1.0), vec4(cbSceneParam._m0[73u])) > (-0.0)) && (dot(vec4(_564, _565, _566, 1.0), vec4(cbSceneParam._m0[74u])) > (-0.0))) && (dot(vec4(_564, _565, _566, 1.0), vec4(cbSceneParam._m0[75u])) > (-0.0))) && (dot(vec4(_564, _565, _566, 1.0), vec4(cbSceneParam._m0[76u])) > (-0.0))) && (!((((dot(vec4(_129, _130, _131, 1.0), vec4(cbSceneParam._m0[73u])) > _478) && (dot(vec4(_129, _130, _131, 1.0), vec4(cbSceneParam._m0[74u])) > _478)) && (dot(vec4(_129, _130, _131, 1.0), vec4(cbSceneParam._m0[75u])) > _478)) && (dot(vec4(_129, _130, _131, 1.0), vec4(cbSceneParam._m0[76u])) > _478))))
    {
        precise float _587 = _564 - _129;
        precise float _588 = _565 - _130;
        precise float _589 = _566 - _131;
        float _594 = inversesqrt(dot(vec3(_587, _588, _589), vec3(_587, _588, _589)));
        precise float _595 = _587 * _594;
        precise float _596 = _588 * _594;
        precise float _597 = _589 * _594;
        precise float _598 = _595 * cbMtdParam._m0[4u].y;
        precise float _599 = _596 * cbMtdParam._m0[4u].y;
        precise float _600 = _597 * cbMtdParam._m0[4u].y;
        precise float _601 = _129 + _598;
        precise float _602 = _130 + _599;
        precise float _603 = _131 + _600;
        _604 = _601;
        _605 = _602;
        _606 = _603;
    }
    else
    {
        _604 = _564;
        _605 = _565;
        _606 = _566;
    }
    precise float _612 = _604 - cbSceneParam._m0[3u].x;
    precise float _613 = _605 - cbSceneParam._m0[3u].y;
    precise float _614 = _606 - cbSceneParam._m0[3u].z;
    precise float _640 = _612 * cbSceneParam._m0[24u].x;
    precise float _641 = _613 * cbSceneParam._m0[24u].y;
    precise float _642 = _641 + _640;
    precise float _643 = _614 * cbSceneParam._m0[24u].z;
    precise float _644 = _643 + _642;
    precise float _645 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _646 = _645 + _644;
    precise float _647 = _612 * cbSceneParam._m0[25u].x;
    precise float _648 = _613 * cbSceneParam._m0[25u].y;
    precise float _649 = _648 + _647;
    precise float _650 = _614 * cbSceneParam._m0[25u].z;
    precise float _651 = _650 + _649;
    precise float _652 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _653 = _652 + _651;
    precise float _654 = _612 * cbSceneParam._m0[26u].x;
    precise float _655 = _613 * cbSceneParam._m0[26u].y;
    precise float _656 = _655 + _654;
    precise float _657 = _614 * cbSceneParam._m0[26u].z;
    precise float _658 = _657 + _656;
    precise float _659 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _660 = _659 + _658;
    precise float _661 = _612 * cbSceneParam._m0[27u].x;
    precise float _662 = _613 * cbSceneParam._m0[27u].y;
    precise float _663 = _662 + _661;
    precise float _664 = _614 * cbSceneParam._m0[27u].z;
    precise float _665 = _664 + _663;
    precise float _666 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _667 = _666 + _665;
    gl_Position.x = _646;
    gl_Position.y = _653;
    gl_Position.z = _660;
    gl_Position.w = _667;
    POSITION_1.x = _646;
    POSITION_1.y = _653;
    POSITION_1.z = _660;
    POSITION_1.w = _667;
    NORMAL_1.x = ((NORMAL[1u].x * gl_TessCoord.x) + (NORMAL[0u].x * gl_TessCoord.z)) + (NORMAL[2u].x * gl_TessCoord.y);
    NORMAL_1.y = ((NORMAL[1u].y * gl_TessCoord.x) + (NORMAL[0u].y * gl_TessCoord.z)) + (NORMAL[2u].y * gl_TessCoord.y);
    NORMAL_1.z = ((NORMAL[1u].z * gl_TessCoord.x) + (NORMAL[0u].z * gl_TessCoord.z)) + (NORMAL[2u].z * gl_TessCoord.y);
    NORMAL_1.w = ((NORMAL[1u].w * gl_TessCoord.x) + (NORMAL[0u].w * gl_TessCoord.z)) + (NORMAL[2u].w * gl_TessCoord.y);
    TANGENT_1.x = ((TANGENT[1u].x * gl_TessCoord.x) + (TANGENT[0u].x * gl_TessCoord.z)) + (TANGENT[2u].x * gl_TessCoord.y);
    TANGENT_1.y = ((TANGENT[1u].y * gl_TessCoord.x) + (TANGENT[0u].y * gl_TessCoord.z)) + (TANGENT[2u].y * gl_TessCoord.y);
    TANGENT_1.z = ((TANGENT[1u].z * gl_TessCoord.x) + (TANGENT[0u].z * gl_TessCoord.z)) + (TANGENT[2u].z * gl_TessCoord.y);
    TANGENT_1.w = ((TANGENT[1u].w * gl_TessCoord.x) + (TANGENT[0u].w * gl_TessCoord.z)) + (TANGENT[2u].w * gl_TessCoord.y);
    TEXCOORD_2.x = _230;
    TEXCOORD_2.y = _241;
    TEXCOORD_2.z = _543;
    TEXCOORD_2.w = _544;
    TEXCOORD_3.x = _282;
    TEXCOORD_3.y = _283;
    TEXCOORD_3.z = _284;
    TEXCOORD_3.w = _285;
    TEXCOORD_7.x = ((TEXCOORD_9[1u].x * gl_TessCoord.x) + (TEXCOORD_9[0u].x * gl_TessCoord.z)) + (TEXCOORD_9[2u].x * gl_TessCoord.y);
    TEXCOORD_7.y = ((TEXCOORD_9[1u].y * gl_TessCoord.x) + (TEXCOORD_9[0u].y * gl_TessCoord.z)) + (TEXCOORD_9[2u].y * gl_TessCoord.y);
    TEXCOORD_7.z = ((TEXCOORD_9[1u].z * gl_TessCoord.x) + (TEXCOORD_9[0u].z * gl_TessCoord.z)) + (TEXCOORD_9[2u].z * gl_TessCoord.y);
    TEXCOORD_7.w = ((TEXCOORD_9[1u].w * gl_TessCoord.x) + (TEXCOORD_9[0u].w * gl_TessCoord.z)) + (TEXCOORD_9[2u].w * gl_TessCoord.y);
    TEXCOORD_12 = 0.0;
    gl_ClipDistance[0u] = dot(vec4(_646, _653, _660, _667), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_646, _653, _660, _667), vec4(0.0));
    gl_CullDistance[0u] = 0.0;
}


