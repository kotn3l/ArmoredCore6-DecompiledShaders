#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_M0_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_M0_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D S_AMSN_M0_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _134 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _135 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _140 = inversesqrt(dot(vec3(_133, _134, _135), vec3(_133, _134, _135)));
    float _147 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _154 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _177 = texture(sampler2D(S_AMSN_M0_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _183 = _177.x * cbMtdParam._m0[9u].x;
    float _184 = _177.y * cbMtdParam._m0[9u].y;
    float _185 = _177.z * cbMtdParam._m0[9u].z;
    vec4 _197 = texture(sampler2D(S_AMSN_M0_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _199 = _197.x;
    vec4 _211 = texture(sampler2D(S_AMSN_M0_M1_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _215 = _211.z;
    float _219 = (_211.x * 2.0) + (-1.0);
    float _221 = (_211.y * 2.0) + (-1.0);
    float _222 = dot(vec2(_219, _221), vec2(_219, _221));
    float _425 = isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0));
    float _228 = sqrt(1.0 - (isnan(1.0) ? _425 : (isnan(_425) ? 1.0 : min(_425, 1.0))));
    float _231 = fma(_228, _147 * NORMAL.x, fma(_221, _154 * TANGENT.x, (_140 * _133) * _219));
    float _234 = fma(_228, _147 * NORMAL.y, fma(_221, _154 * TANGENT.y, (_140 * _134) * _219));
    float _237 = fma(_228, _147 * NORMAL.z, fma(_221, _154 * TANGENT.z, (_140 * _135) * _219));
    float _241 = inversesqrt(dot(vec3(_231, _234, _237), vec3(_231, _234, _237)));
    float _436 = isnan(0.0) ? _215 : (isnan(_215) ? 0.0 : max(_215, 0.0));
    float _447 = isnan(0.0) ? _183 : (isnan(_183) ? 0.0 : max(_183, 0.0));
    float _243 = isnan(1.0) ? _447 : (isnan(_447) ? 1.0 : min(_447, 1.0));
    float _458 = isnan(0.0) ? _184 : (isnan(_184) ? 0.0 : max(_184, 0.0));
    float _244 = isnan(1.0) ? _458 : (isnan(_458) ? 1.0 : min(_458, 1.0));
    float _469 = isnan(0.0) ? _185 : (isnan(_185) ? 0.0 : max(_185, 0.0));
    float _245 = isnan(1.0) ? _469 : (isnan(_469) ? 1.0 : min(_469, 1.0));
    float _480 = isnan(0.0) ? _199 : (isnan(_199) ? 0.0 : max(_199, 0.0));
    uint _248 = uint(roundEven(NORMAL.w));
    vec4 _253 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _255 = _253.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _318 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _491 = isnan(0.0) ? _318 : (isnan(_318) ? 0.0 : max(_318, 0.0));
        float _319 = isnan(1.0) ? _491 : (isnan(_491) ? 1.0 : min(_491, 1.0));
        float _323 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _502 = isnan(0.0) ? _323 : (isnan(_323) ? 0.0 : max(_323, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _502 : (isnan(_502) ? 1.0 : min(_502, 1.0))) - _319)) + _319) < ((_255 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _352;
    uint _275;
    vec4 _280;
    float _287;
    float _288;
    float _289;
    float _293;
    vec4 _297;
    float _299;
    float _300;
    bool _311;
    for (;;)
    {
        _275 = _248 * 13u;
        _280 = cbInstanceData._m0[(_275 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _284 = (cbMtdParam._m0[0u].x * _243) * _280.x;
        float _285 = (cbMtdParam._m0[0u].y * _244) * _280.y;
        float _286 = (cbMtdParam._m0[0u].z * _245) * _280.z;
        float _513 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
        _287 = isnan(1.0) ? _513 : (isnan(_513) ? 1.0 : min(_513, 1.0));
        float _524 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
        _288 = isnan(1.0) ? _524 : (isnan(_524) ? 1.0 : min(_524, 1.0));
        float _535 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
        _289 = isnan(1.0) ? _535 : (isnan(_535) ? 1.0 : min(_535, 1.0));
        _293 = cbInstanceData._m0[_275 + 6u].w;
        float _294 = _255 + (-0.5);
        _297 = cbMtdParam._m0[1u];
        _299 = _297.y * _294;
        _300 = _294 * 0.999000012874603271484375;
        _311 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_311)
        {
            if ((cbInstanceData._m0[_275 + 7u].x + _300) < 0.5)
            {
                _352 = true;
                break;
            }
        }
        if ((_280.w < 1.0) && ((_280.w + _300) < 0.5))
        {
            _352 = true;
            break;
        }
        if ((_299 + 1.0) < _297.x)
        {
            _352 = true;
            break;
        }
        _352 = false;
        break;
    }
    if (_352)
    {
        discard_state = true;
    }
    bool _378 = cbMtdParam._m0[1u].z != 0.0;
    float _379 = _378 ? _293 : 0.0;
    SV_Target.x = ((_231 * 0.5) * _241) + 0.500488758087158203125;
    SV_Target.y = ((_234 * 0.5) * _241) + 0.500488758087158203125;
    SV_Target.z = ((_237 * 0.5) * _241) + 0.500488758087158203125;
    SV_Target.w = _379;
    SV_Target_1.x = isnan(1.0) ? _480 : (isnan(_480) ? 1.0 : min(_480, 1.0));
    SV_Target_1.y = isnan(1.0) ? _436 : (isnan(_436) ? 1.0 : min(_436, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _378 ? _293 : TEXCOORD.z;
    SV_Target_2.x = _287;
    SV_Target_2.y = _288;
    SV_Target_2.z = _289;
    SV_Target_2.w = _378 ? _293 : (float(floatBitsToUint(cbInstanceData._m0[_275 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _379;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _379;
    discard_exit();
}


