#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_M0_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_M0_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _129 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _130 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _131 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _136 = inversesqrt(dot(vec3(_129, _130, _131), vec3(_129, _130, _131)));
    float _143 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _150 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _173 = texture(sampler2D(S_AMSN_M0_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _179 = _173.x * cbMtdParam._m0[9u].x;
    float _180 = _173.y * cbMtdParam._m0[9u].y;
    float _181 = _173.z * cbMtdParam._m0[9u].z;
    vec4 _193 = texture(sampler2D(S_AMSN_M0_M1_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _197 = _193.z;
    float _201 = (_193.x * 2.0) + (-1.0);
    float _203 = (_193.y * 2.0) + (-1.0);
    float _204 = dot(vec2(_201, _203), vec2(_201, _203));
    float _406 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _210 = sqrt(1.0 - (isnan(1.0) ? _406 : (isnan(_406) ? 1.0 : min(_406, 1.0))));
    float _213 = fma(_210, _143 * NORMAL.x, fma(_203, _150 * TANGENT.x, (_136 * _129) * _201));
    float _216 = fma(_210, _143 * NORMAL.y, fma(_203, _150 * TANGENT.y, (_136 * _130) * _201));
    float _219 = fma(_210, _143 * NORMAL.z, fma(_203, _150 * TANGENT.z, (_136 * _131) * _201));
    float _223 = inversesqrt(dot(vec3(_213, _216, _219), vec3(_213, _216, _219)));
    float _417 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    float _428 = isnan(0.0) ? _179 : (isnan(_179) ? 0.0 : max(_179, 0.0));
    float _225 = isnan(1.0) ? _428 : (isnan(_428) ? 1.0 : min(_428, 1.0));
    float _439 = isnan(0.0) ? _180 : (isnan(_180) ? 0.0 : max(_180, 0.0));
    float _226 = isnan(1.0) ? _439 : (isnan(_439) ? 1.0 : min(_439, 1.0));
    float _450 = isnan(0.0) ? _181 : (isnan(_181) ? 0.0 : max(_181, 0.0));
    float _227 = isnan(1.0) ? _450 : (isnan(_450) ? 1.0 : min(_450, 1.0));
    uint _229 = uint(roundEven(NORMAL.w));
    vec4 _234 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _236 = _234.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _299 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _461 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
        float _300 = isnan(1.0) ? _461 : (isnan(_461) ? 1.0 : min(_461, 1.0));
        float _304 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _472 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _472 : (isnan(_472) ? 1.0 : min(_472, 1.0))) - _300)) + _300) < ((_236 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _333;
    uint _256;
    vec4 _261;
    float _268;
    float _269;
    float _270;
    float _274;
    vec4 _278;
    float _280;
    float _281;
    bool _292;
    for (;;)
    {
        _256 = _229 * 13u;
        _261 = cbInstanceData._m0[(_256 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _265 = (cbMtdParam._m0[0u].x * _225) * _261.x;
        float _266 = (cbMtdParam._m0[0u].y * _226) * _261.y;
        float _267 = (cbMtdParam._m0[0u].z * _227) * _261.z;
        float _483 = isnan(0.0) ? _265 : (isnan(_265) ? 0.0 : max(_265, 0.0));
        _268 = isnan(1.0) ? _483 : (isnan(_483) ? 1.0 : min(_483, 1.0));
        float _494 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
        _269 = isnan(1.0) ? _494 : (isnan(_494) ? 1.0 : min(_494, 1.0));
        float _505 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
        _270 = isnan(1.0) ? _505 : (isnan(_505) ? 1.0 : min(_505, 1.0));
        _274 = cbInstanceData._m0[_256 + 6u].w;
        float _275 = _236 + (-0.5);
        _278 = cbMtdParam._m0[1u];
        _280 = _278.y * _275;
        _281 = _275 * 0.999000012874603271484375;
        _292 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_292)
        {
            if ((cbInstanceData._m0[_256 + 7u].x + _281) < 0.5)
            {
                _333 = true;
                break;
            }
        }
        if ((_261.w < 1.0) && ((_261.w + _281) < 0.5))
        {
            _333 = true;
            break;
        }
        if ((_280 + 1.0) < _278.x)
        {
            _333 = true;
            break;
        }
        _333 = false;
        break;
    }
    if (_333)
    {
        discard_state = true;
    }
    bool _359 = cbMtdParam._m0[1u].z != 0.0;
    float _360 = _359 ? _274 : 0.0;
    SV_Target.x = ((_213 * 0.5) * _223) + 0.500488758087158203125;
    SV_Target.y = ((_216 * 0.5) * _223) + 0.500488758087158203125;
    SV_Target.z = ((_219 * 0.5) * _223) + 0.500488758087158203125;
    SV_Target.w = _360;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _417 : (isnan(_417) ? 1.0 : min(_417, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _359 ? _274 : TEXCOORD.z;
    SV_Target_2.x = _268;
    SV_Target_2.y = _269;
    SV_Target_2.z = _270;
    SV_Target_2.w = _359 ? _274 : (float(floatBitsToUint(cbInstanceData._m0[_256 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _360;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _360;
    discard_exit();
}


