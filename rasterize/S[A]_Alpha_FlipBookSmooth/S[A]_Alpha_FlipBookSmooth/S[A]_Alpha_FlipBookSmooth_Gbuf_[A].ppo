#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_A_Alpha_FlipBookSmooth_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _134 = _133 * NORMAL.x;
    float _135 = _133 * NORMAL.y;
    float _136 = _133 * NORMAL.z;
    float _141;
    float _142;
    float _143;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _141 = (-0.0) - _134;
        _142 = (-0.0) - _135;
        _143 = (-0.0) - _136;
    }
    else
    {
        _141 = _134;
        _142 = _135;
        _143 = _136;
    }
    uint _160 = uint(int(floor(cbMtdParam._m0[10u].y)));
    float _161 = fract(cbMtdParam._m0[10u].y);
    uint _162 = _160 + 1u;
    uint _163 = uint(int(cbMtdParam._m0[10u].w * cbMtdParam._m0[10u].z));
    float _166 = float(int(_160 - _163 * (_160 / _163)));
    float _170 = float(int(_162 - _163 * (_162 / _163)));
    float _174 = 1.0 / cbMtdParam._m0[10u].z;
    float _176 = 1.0 / cbMtdParam._m0[10u].w;
    float _177 = fract(TEXCOORD_1.x);
    float _178 = fract(TEXCOORD_1.y);
    vec4 _199 = texture(sampler2D(S_A_Alpha_FlipBookSmooth_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_177 + (_170 - cbMtdParam._m0[10u].z * trunc(_170 / cbMtdParam._m0[10u].z))) * _174) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_178 + floor(_170 / cbMtdParam._m0[10u].z)) * _176) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _210 = texture(sampler2D(S_A_Alpha_FlipBookSmooth_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_177 + (_166 - cbMtdParam._m0[10u].z * trunc(_166 / cbMtdParam._m0[10u].z))) * _174) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_178 + floor(_166 / cbMtdParam._m0[10u].z)) * _176) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _212 = _210.x;
    float _213 = _210.y;
    float _214 = _210.z;
    float _215 = _210.w;
    float _228 = (((_199.x - _212) * _161) + _212) * cbMtdParam._m0[9u].x;
    float _229 = (((_199.y - _213) * _161) + _213) * cbMtdParam._m0[9u].y;
    float _230 = (((_199.z - _214) * _161) + _214) * cbMtdParam._m0[9u].z;
    vec4 _240 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _242 = _240.x;
    float _265 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _242)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _242))) - POSITION_1.w) / cbMtdParam._m0[10u].x;
    float _531 = isnan(0.0) ? _265 : (isnan(_265) ? 0.0 : max(_265, 0.0));
    float _268 = (cbMtdParam._m0[9u].w * TEXCOORD_1.z) * (((_199.w - _215) * _161) + _215);
    float _269 = (isnan(1.0) ? _531 : (isnan(_531) ? 1.0 : min(_531, 1.0))) * _268;
    float _270 = gl_FragCoord.x * 0.125;
    float _272 = gl_FragCoord.y * 0.125;
    float _282 = float(_268 >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_270, _272)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    float _286 = inversesqrt(dot(vec3(_141, _142, _143), vec3(_141, _142, _143)));
    float _542 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    float _287 = isnan(1.0) ? _542 : (isnan(_542) ? 1.0 : min(_542, 1.0));
    float _553 = isnan(0.0) ? _228 : (isnan(_228) ? 0.0 : max(_228, 0.0));
    float _288 = isnan(1.0) ? _553 : (isnan(_553) ? 1.0 : min(_553, 1.0));
    float _564 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
    float _289 = isnan(1.0) ? _564 : (isnan(_564) ? 1.0 : min(_564, 1.0));
    float _575 = isnan(0.0) ? _230 : (isnan(_230) ? 0.0 : max(_230, 0.0));
    float _290 = isnan(1.0) ? _575 : (isnan(_575) ? 1.0 : min(_575, 1.0));
    uint _292 = uint(roundEven(NORMAL.w));
    float _333 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _343 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _333);
    float _344 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _333);
    float _345 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _333);
    vec4 _346 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_270, _272));
    float _348 = _346.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _414 = sqrt(((_343 * _343) + (_344 * _344)) + (_345 * _345));
        float _421 = (cbMatDynParam._m0[5u].x * _414) + cbMatDynParam._m0[5u].y;
        float _586 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
        float _422 = isnan(1.0) ? _586 : (isnan(_586) ? 1.0 : min(_586, 1.0));
        float _426 = (cbMatDynParam._m0[5u].z * _414) + cbMatDynParam._m0[5u].w;
        float _597 = isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _597 : (isnan(_597) ? 1.0 : min(_597, 1.0))) - _422)) + _422) < ((_348 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _453;
    uint _367;
    vec4 _372;
    float _379;
    float _380;
    float _381;
    float _385;
    float _390;
    vec4 _394;
    float _396;
    float _397;
    bool _408;
    for (;;)
    {
        _367 = _292 * 13u;
        _372 = cbInstanceData._m0[(_367 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _376 = (cbMtdParam._m0[0u].x * _288) * _372.x;
        float _377 = (cbMtdParam._m0[0u].y * _289) * _372.y;
        float _378 = (cbMtdParam._m0[0u].z * _290) * _372.z;
        float _608 = isnan(0.0) ? _376 : (isnan(_376) ? 0.0 : max(_376, 0.0));
        _379 = isnan(1.0) ? _608 : (isnan(_608) ? 1.0 : min(_608, 1.0));
        float _619 = isnan(0.0) ? _377 : (isnan(_377) ? 0.0 : max(_377, 0.0));
        _380 = isnan(1.0) ? _619 : (isnan(_619) ? 1.0 : min(_619, 1.0));
        float _630 = isnan(0.0) ? _378 : (isnan(_378) ? 0.0 : max(_378, 0.0));
        _381 = isnan(1.0) ? _630 : (isnan(_630) ? 1.0 : min(_630, 1.0));
        float _641 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
        _385 = cbMtdParam._m0[2u].w;
        _390 = cbInstanceData._m0[_367 + 6u].w * (isnan(1.0) ? _641 : (isnan(_641) ? 1.0 : min(_641, 1.0)));
        float _391 = _348 + (-0.5);
        _394 = cbMtdParam._m0[1u];
        _396 = _394.y * _391;
        _397 = _391 * 0.999000012874603271484375;
        _408 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_408)
        {
            if ((cbInstanceData._m0[_367 + 7u].x + _397) < 0.5)
            {
                _453 = true;
                break;
            }
        }
        if ((_372.w < 1.0) && ((_372.w + _397) < 0.5))
        {
            _453 = true;
            break;
        }
        if ((_396 + _282) < _394.x)
        {
            _453 = true;
            break;
        }
        _453 = false;
        break;
    }
    if (_453)
    {
        discard_state = true;
    }
    float _480;
    float _481;
    float _482;
    float _483;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _480 = _390;
        _481 = _390;
        _482 = _390;
        _483 = _390;
    }
    else
    {
        _480 = _385;
        _481 = 0.0;
        _482 = float(floatBitsToUint(cbInstanceData._m0[_367 + 5u]).x) * 0.0039215688593685626983642578125;
        _483 = TEXCOORD_1.w;
    }
    SV_Target.x = ((_141 * 0.5) * _286) + 0.500488758087158203125;
    SV_Target.y = ((_142 * 0.5) * _286) + 0.500488758087158203125;
    SV_Target.z = ((_143 * 0.5) * _286) + 0.500488758087158203125;
    SV_Target.w = _481;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _483;
    SV_Target_2.x = _379;
    SV_Target_2.y = _380;
    SV_Target_2.z = _381;
    SV_Target_2.w = _482;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _481;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _480;
    discard_exit();
}


