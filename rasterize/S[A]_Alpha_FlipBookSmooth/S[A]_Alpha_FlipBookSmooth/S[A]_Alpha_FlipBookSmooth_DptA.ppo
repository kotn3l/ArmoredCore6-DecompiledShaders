#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_A_Alpha_FlipBookSmooth_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in vec2 TEXCOORD_5;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    uint _101 = uint(int(floor(cbMtdParam._m0[10u].y)));
    uint _103 = _101 + 1u;
    uint _104 = uint(int(cbMtdParam._m0[10u].w * cbMtdParam._m0[10u].z));
    float _107 = float(int(_101 - _104 * (_101 / _104)));
    float _111 = float(int(_103 - _104 * (_103 / _104)));
    float _115 = 1.0 / cbMtdParam._m0[10u].z;
    float _117 = 1.0 / cbMtdParam._m0[10u].w;
    float _118 = fract(TEXCOORD_1.x);
    float _119 = fract(TEXCOORD_1.y);
    vec4 _148 = texture(sampler2D(S_A_Alpha_FlipBookSmooth_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_118 + (_107 - cbMtdParam._m0[10u].z * trunc(_107 / cbMtdParam._m0[10u].z))) * _115) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_119 + floor(_107 / cbMtdParam._m0[10u].z)) * _117) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _150 = _148.w;
    float _156 = gl_FragCoord.x * 0.125;
    float _158 = gl_FragCoord.y * 0.125;
    float _168 = float(((cbMtdParam._m0[9u].w * TEXCOORD_1.z) * (((texture(sampler2D(S_A_Alpha_FlipBookSmooth_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_118 + (_111 - cbMtdParam._m0[10u].z * trunc(_111 / cbMtdParam._m0[10u].z))) * _115) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_119 + floor(_111 / cbMtdParam._m0[10u].z)) * _117) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w - _150) * fract(cbMtdParam._m0[10u].y)) + _150)) >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_156, _158)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    uint _170 = uint(roundEven(NORMAL.w));
    float _211 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _221 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _211);
    float _222 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _211);
    float _223 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _211);
    vec4 _224 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_156, _158));
    float _226 = _224.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _259 = sqrt(((_221 * _221) + (_222 * _222)) + (_223 * _223));
        float _266 = (cbMatDynParam._m0[5u].x * _259) + cbMatDynParam._m0[5u].y;
        float _334 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
        float _267 = isnan(1.0) ? _334 : (isnan(_334) ? 1.0 : min(_334, 1.0));
        float _271 = (cbMatDynParam._m0[5u].z * _259) + cbMatDynParam._m0[5u].w;
        float _345 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _345 : (isnan(_345) ? 1.0 : min(_345, 1.0))) - _267)) + _267) < ((_226 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _306;
    vec4 _237;
    float _239;
    float _240;
    bool _251;
    uint _252;
    for (;;)
    {
        float _234 = _226 + (-0.5);
        _237 = cbMtdParam._m0[1u];
        _239 = _237.y * _234;
        _240 = _234 * 0.999000012874603271484375;
        _251 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        _252 = _170 * 13u;
        if (_251)
        {
            if ((cbInstanceData._m0[_252 + 7u].x + _240) < 0.5)
            {
                _306 = true;
                break;
            }
        }
        uint _295 = (_252 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_295].w < 1.0) && ((cbInstanceData._m0[_295].w + _240) < 0.5))
        {
            _306 = true;
            break;
        }
        if ((_239 + _168) < _237.x)
        {
            _306 = true;
            break;
        }
        _306 = false;
        break;
    }
    if (_306)
    {
        discard_state = true;
    }
    discard_exit();
}


