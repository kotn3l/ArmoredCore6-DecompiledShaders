#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_Ov_N_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Ov_N_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Ov_N_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _121 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _122 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _123 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _128 = inversesqrt(dot(vec3(_121, _122, _123), vec3(_121, _122, _123)));
    float _135 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _136 = _135 * NORMAL.x;
    float _137 = _135 * NORMAL.y;
    float _138 = _135 * NORMAL.z;
    float _142 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _150;
    float _151;
    float _152;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _150 = (-0.0) - _136;
        _151 = (-0.0) - _137;
        _152 = (-0.0) - _138;
    }
    else
    {
        _150 = _136;
        _151 = _137;
        _152 = _138;
    }
    vec4 _166 = texture(sampler2D(M_AMSN_Ov_N_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _169 = _166.x;
    float _170 = _166.y;
    float _171 = _166.z;
    float _172 = _166.w;
    vec4 _189 = texture(sampler2D(M_AMSN_Ov_N_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    vec4 _211 = texture(sampler2D(M_AMSN_Ov_N_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _215 = _211.z;
    float _218 = (_211.x * 2.0) + (-1.0);
    float _219 = (_211.y * 2.0) + (-1.0);
    float _220 = dot(vec2(_218, _219), vec2(_218, _219));
    float _342 = isnan(0.0) ? _220 : (isnan(_220) ? 0.0 : max(_220, 0.0));
    float _226 = sqrt(1.0 - (isnan(1.0) ? _342 : (isnan(_342) ? 1.0 : min(_342, 1.0))));
    float _229 = ((_189.z - _215) * cbMtdParam._m0[9u].y) + _215;
    float _353 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
    float _230 = isnan(1.0) ? _353 : (isnan(_353) ? 1.0 : min(_353, 1.0));
    float _233 = _218 + (((_189.x * 2.0) + (-1.0)) * cbMtdParam._m0[9u].y);
    float _234 = _219 + (((_189.y * 2.0) + (-1.0)) * cbMtdParam._m0[9u].y);
    float _237 = fma(_226, _150, fma(_234, _142 * TANGENT.x, (_128 * _121) * _233));
    float _240 = fma(_226, _151, fma(_234, _142 * TANGENT.y, (_128 * _122) * _233));
    float _243 = fma(_226, _152, fma(_234, _142 * TANGENT.z, (_128 * _123) * _233));
    float _247 = inversesqrt(dot(vec3(_237, _240, _243), vec3(_237, _240, _243)));
    float _364 = isnan(0.0) ? _172 : (isnan(_172) ? 0.0 : max(_172, 0.0));
    float _248 = isnan(1.0) ? _364 : (isnan(_364) ? 1.0 : min(_364, 1.0));
    float _375 = isnan(0.0) ? _230 : (isnan(_230) ? 0.0 : max(_230, 0.0));
    float _386 = isnan(0.0) ? _169 : (isnan(_169) ? 0.0 : max(_169, 0.0));
    float _397 = isnan(0.0) ? _170 : (isnan(_170) ? 0.0 : max(_170, 0.0));
    float _408 = isnan(0.0) ? _171 : (isnan(_171) ? 0.0 : max(_171, 0.0));
    float _419 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    uint _268 = uint(roundEven(NORMAL.w)) * 13u;
    uint _271 = (_268 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _277 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _386 : (isnan(_386) ? 1.0 : min(_386, 1.0)))) * cbInstanceData._m0[_271].x;
    float _278 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _397 : (isnan(_397) ? 1.0 : min(_397, 1.0)))) * cbInstanceData._m0[_271].y;
    float _279 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _408 : (isnan(_408) ? 1.0 : min(_408, 1.0)))) * cbInstanceData._m0[_271].z;
    float _430 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    float _441 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _452 = isnan(0.0) ? _279 : (isnan(_279) ? 0.0 : max(_279, 0.0));
    float _463 = isnan(0.0) ? _248 : (isnan(_248) ? 0.0 : max(_248, 0.0));
    float _289 = cbInstanceData._m0[_268 + 6u].w * (isnan(1.0) ? _463 : (isnan(_463) ? 1.0 : min(_463, 1.0)));
    bool _314 = cbMtdParam._m0[1u].z != 0.0;
    float _315 = _314 ? _289 : 0.0;
    SV_Target.x = ((_237 * 0.5) * _247) + 0.500488758087158203125;
    SV_Target.y = ((_240 * 0.5) * _247) + 0.500488758087158203125;
    SV_Target.z = ((_243 * 0.5) * _247) + 0.500488758087158203125;
    SV_Target.w = _315;
    SV_Target_1.x = isnan(1.0) ? _419 : (isnan(_419) ? 1.0 : min(_419, 1.0));
    SV_Target_1.y = isnan(1.0) ? _375 : (isnan(_375) ? 1.0 : min(_375, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _314 ? _289 : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _430 : (isnan(_430) ? 1.0 : min(_430, 1.0));
    SV_Target_2.y = isnan(1.0) ? _441 : (isnan(_441) ? 1.0 : min(_441, 1.0));
    SV_Target_2.z = isnan(1.0) ? _452 : (isnan(_452) ? 1.0 : min(_452, 1.0));
    SV_Target_2.w = _314 ? _289 : (float(floatBitsToUint(cbInstanceData._m0[_268 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _315;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _315;
}


