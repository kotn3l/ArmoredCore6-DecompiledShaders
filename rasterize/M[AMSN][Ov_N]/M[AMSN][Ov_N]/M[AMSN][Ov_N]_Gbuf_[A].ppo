#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_Ov_N_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Ov_N_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Ov_N_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _135 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _136 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _137 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _142 = inversesqrt(dot(vec3(_135, _136, _137), vec3(_135, _136, _137)));
    float _149 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _150 = _149 * NORMAL.x;
    float _151 = _149 * NORMAL.y;
    float _152 = _149 * NORMAL.z;
    float _156 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _164;
    float _165;
    float _166;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _164 = (-0.0) - _150;
        _165 = (-0.0) - _151;
        _166 = (-0.0) - _152;
    }
    else
    {
        _164 = _150;
        _165 = _151;
        _166 = _152;
    }
    vec4 _180 = texture(sampler2D(M_AMSN_Ov_N_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _183 = _180.x;
    float _184 = _180.y;
    float _185 = _180.z;
    float _186 = _180.w;
    vec4 _203 = texture(sampler2D(M_AMSN_Ov_N_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    vec4 _225 = texture(sampler2D(M_AMSN_Ov_N_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _229 = _225.z;
    float _232 = (_225.x * 2.0) + (-1.0);
    float _233 = (_225.y * 2.0) + (-1.0);
    float _234 = dot(vec2(_232, _233), vec2(_232, _233));
    float _450 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
    float _240 = sqrt(1.0 - (isnan(1.0) ? _450 : (isnan(_450) ? 1.0 : min(_450, 1.0))));
    float _243 = ((_203.z - _229) * cbMtdParam._m0[9u].y) + _229;
    float _461 = isnan(0.0) ? _243 : (isnan(_243) ? 0.0 : max(_243, 0.0));
    float _244 = isnan(1.0) ? _461 : (isnan(_461) ? 1.0 : min(_461, 1.0));
    float _247 = _232 + (((_203.x * 2.0) + (-1.0)) * cbMtdParam._m0[9u].y);
    float _248 = _233 + (((_203.y * 2.0) + (-1.0)) * cbMtdParam._m0[9u].y);
    float _251 = fma(_240, _164, fma(_248, _156 * TANGENT.x, (_142 * _135) * _247));
    float _254 = fma(_240, _165, fma(_248, _156 * TANGENT.y, (_142 * _136) * _247));
    float _257 = fma(_240, _166, fma(_248, _156 * TANGENT.z, (_142 * _137) * _247));
    float _261 = inversesqrt(dot(vec3(_251, _254, _257), vec3(_251, _254, _257)));
    float _472 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
    float _262 = isnan(1.0) ? _472 : (isnan(_472) ? 1.0 : min(_472, 1.0));
    float _483 = isnan(0.0) ? _244 : (isnan(_244) ? 0.0 : max(_244, 0.0));
    float _494 = isnan(0.0) ? _183 : (isnan(_183) ? 0.0 : max(_183, 0.0));
    float _264 = isnan(1.0) ? _494 : (isnan(_494) ? 1.0 : min(_494, 1.0));
    float _505 = isnan(0.0) ? _184 : (isnan(_184) ? 0.0 : max(_184, 0.0));
    float _265 = isnan(1.0) ? _505 : (isnan(_505) ? 1.0 : min(_505, 1.0));
    float _516 = isnan(0.0) ? _185 : (isnan(_185) ? 0.0 : max(_185, 0.0));
    float _266 = isnan(1.0) ? _516 : (isnan(_516) ? 1.0 : min(_516, 1.0));
    float _527 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    uint _269 = uint(roundEven(NORMAL.w));
    vec4 _274 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _276 = _274.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _341 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _538 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
        float _342 = isnan(1.0) ? _538 : (isnan(_538) ? 1.0 : min(_538, 1.0));
        float _346 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _549 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _549 : (isnan(_549) ? 1.0 : min(_549, 1.0))) - _342)) + _342) < ((_276 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _375;
    uint _296;
    vec4 _301;
    float _308;
    float _309;
    float _310;
    float _316;
    vec4 _320;
    float _322;
    float _323;
    bool _334;
    for (;;)
    {
        _296 = _269 * 13u;
        _301 = cbInstanceData._m0[(_296 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _305 = (cbMtdParam._m0[0u].x * _264) * _301.x;
        float _306 = (cbMtdParam._m0[0u].y * _265) * _301.y;
        float _307 = (cbMtdParam._m0[0u].z * _266) * _301.z;
        float _560 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
        _308 = isnan(1.0) ? _560 : (isnan(_560) ? 1.0 : min(_560, 1.0));
        float _571 = isnan(0.0) ? _306 : (isnan(_306) ? 0.0 : max(_306, 0.0));
        _309 = isnan(1.0) ? _571 : (isnan(_571) ? 1.0 : min(_571, 1.0));
        float _582 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
        _310 = isnan(1.0) ? _582 : (isnan(_582) ? 1.0 : min(_582, 1.0));
        float _593 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
        _316 = cbInstanceData._m0[_296 + 6u].w * (isnan(1.0) ? _593 : (isnan(_593) ? 1.0 : min(_593, 1.0)));
        float _317 = _276 + (-0.5);
        _320 = cbMtdParam._m0[1u];
        _322 = _320.y * _317;
        _323 = _317 * 0.999000012874603271484375;
        _334 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_334)
        {
            if ((cbInstanceData._m0[_296 + 7u].x + _323) < 0.5)
            {
                _375 = true;
                break;
            }
        }
        if ((_301.w < 1.0) && ((_301.w + _323) < 0.5))
        {
            _375 = true;
            break;
        }
        if ((_322 + _186) < _320.x)
        {
            _375 = true;
            break;
        }
        _375 = false;
        break;
    }
    if (_375)
    {
        discard_state = true;
    }
    bool _401 = cbMtdParam._m0[1u].z != 0.0;
    float _402 = _401 ? _316 : 0.0;
    SV_Target.x = ((_251 * 0.5) * _261) + 0.500488758087158203125;
    SV_Target.y = ((_254 * 0.5) * _261) + 0.500488758087158203125;
    SV_Target.z = ((_257 * 0.5) * _261) + 0.500488758087158203125;
    SV_Target.w = _402;
    SV_Target_1.x = isnan(1.0) ? _527 : (isnan(_527) ? 1.0 : min(_527, 1.0));
    SV_Target_1.y = isnan(1.0) ? _483 : (isnan(_483) ? 1.0 : min(_483, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _401 ? _316 : TEXCOORD.z;
    SV_Target_2.x = _308;
    SV_Target_2.y = _309;
    SV_Target_2.z = _310;
    SV_Target_2.w = _401 ? _316 : (float(floatBitsToUint(cbInstanceData._m0[_296 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _402;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _402;
    discard_exit();
}


