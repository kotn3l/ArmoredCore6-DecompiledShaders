#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_A_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_A_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _724;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _167 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _168 = _167 * NORMAL.x;
    float _169 = _167 * NORMAL.y;
    float _170 = _167 * NORMAL.z;
    float _175;
    float _176;
    float _177;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _175 = (-0.0) - _168;
        _176 = (-0.0) - _169;
        _177 = (-0.0) - _170;
    }
    else
    {
        _175 = _168;
        _176 = _169;
        _177 = _170;
    }
    vec4 _191 = texture(sampler2D(M_A_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _194 = _191.x;
    float _195 = _191.y;
    float _196 = _191.z;
    vec4 _212 = texture(sampler2D(M_A_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _223 = inversesqrt(dot(vec3(_175, _176, _177), vec3(_175, _176, _177)));
    float _224 = _223 * _175;
    float _225 = _223 * _176;
    float _226 = _223 * _177;
    float _3156 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _3167 = isnan(0.0) ? _195 : (isnan(_195) ? 0.0 : max(_195, 0.0));
    float _3178 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _246 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _288 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _298 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _288);
    float _299 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _288);
    float _300 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _288);
    float _304 = inversesqrt(dot(vec3(_298, _299, _300), vec3(_298, _299, _300)));
    float _305 = _298 * _304;
    float _306 = _299 * _304;
    float _307 = _300 * _304;
    float _313 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _314 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _335 = fma(_226, cbSceneParam._m0[5u].z, fma(_225, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _224));
    float _338 = fma(_226, cbSceneParam._m0[6u].z, fma(_225, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _224));
    float _341 = fma(_226, cbSceneParam._m0[7u].z, fma(_225, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _224));
    uint _354 = uint(roundEven(NORMAL.w)) * 13u;
    uint _356 = _354 + 9u;
    uint _357 = _356 + uint(cbMatDynParam._m0[0u].w);
    float _363 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3156 : (isnan(_3156) ? 1.0 : min(_3156, 1.0)))) * cbInstanceData._m0[_357].x;
    float _364 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3167 : (isnan(_3167) ? 1.0 : min(_3167, 1.0)))) * cbInstanceData._m0[_357].y;
    float _365 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3178 : (isnan(_3178) ? 1.0 : min(_3178, 1.0)))) * cbInstanceData._m0[_357].z;
    float _3189 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _366 = isnan(1.0) ? _3189 : (isnan(_3189) ? 1.0 : min(_3189, 1.0));
    float _3200 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    float _367 = isnan(1.0) ? _3200 : (isnan(_3200) ? 1.0 : min(_3200, 1.0));
    float _3211 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
    float _368 = isnan(1.0) ? _3211 : (isnan(_3211) ? 1.0 : min(_3211, 1.0));
    vec4 _377 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _313, cbSceneParam._m0[86u].y * _314));
    float _380 = _377.x * TEXCOORD.z;
    float _381 = dot(vec3(_224, _225, _226), vec3(_305, _306, _307));
    float _384 = _381 * 2.0;
    float _389 = (_384 * _224) - _305;
    float _390 = (_384 * _225) - _306;
    float _391 = (_384 * _226) - _307;
    float _413 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _417 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _421 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _723;
    float _725;
    float _726;
    float _727;
    float _728;
    float _729;
    float _730;
    float _731;
    float _732;
    float _733;
    float _734;
    float _735;
    float _736;
    float _737;
    float _738;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _448 = fma(_421, cbModelParam._m0[26u].z, fma(_417, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _413));
        float _452 = fma(_421, cbModelParam._m0[27u].z, fma(_417, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _413));
        float _456 = fma(_421, cbModelParam._m0[28u].z, fma(_417, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _413));
        float _481 = _413 + _224;
        float _482 = _417 + _225;
        float _483 = _421 + _226;
        float _493 = fma(_483, cbModelParam._m0[26u].z, fma(_482, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _481)) - _448;
        float _494 = fma(_483, cbModelParam._m0[27u].z, fma(_482, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _481)) - _452;
        float _495 = fma(_483, cbModelParam._m0[28u].z, fma(_482, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _481)) - _456;
        float _499 = inversesqrt(dot(vec3(_493, _494, _495), vec3(_493, _494, _495)));
        float _512 = ((_499 * _493) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_448 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _513 = ((_499 * _494) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_452 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _514 = ((_499 * _495) / cbModelParam._m0[34u].z) + ((((((_456 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _517 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_512, _513, _514), 0.0);
        vec4 _524 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_512, _513, _514), 0.0);
        vec4 _531 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_512, _513, _514), 0.0);
        vec4 _538 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_512, _513, _514), 0.0);
        float _551 = exp2((_517.w + (-0.5)) * 20.0) * 2.0;
        float _552 = _551 * (_517.x + (-0.5));
        float _553 = _551 * (_517.y + (-0.5));
        float _554 = _551 * (_517.z + (-0.5));
        float _561 = exp2((_524.w + (-0.5)) * 20.0) * 2.0;
        float _562 = _561 * (_524.x + (-0.5));
        float _563 = _561 * (_524.y + (-0.5));
        float _564 = _561 * (_524.z + (-0.5));
        float _571 = exp2((_531.w + (-0.5)) * 20.0) * 2.0;
        float _572 = _571 * (_531.x + (-0.5));
        float _573 = _571 * (_531.y + (-0.5));
        float _574 = _571 * (_531.z + (-0.5));
        float _581 = exp2((_538.w + (-0.5)) * 20.0) * 2.0;
        float _582 = _581 * (_538.x + (-0.5));
        float _583 = _581 * (_538.y + (-0.5));
        float _584 = _581 * (_538.z + (-0.5));
        float _585 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
        float _586 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
        float _587 = isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : max(_584, 0.0));
        float _588 = _552 * 0.5;
        float _589 = _562 * 0.5;
        float _590 = _572 * 0.5;
        float _591 = dot(vec3(_588, _589, _590), vec3(_588, _589, _590));
        float _596 = (_591 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_591);
        float _605 = (dot(vec3(_224, _225, _226), vec3(_596 * _588, _596 * _589, _596 * _590)) + 1.0) * 0.5;
        float _3237 = isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : max(_605, 0.0));
        float _615 = sqrt(((_589 * _589) + (_588 * _588)) + (_590 * _590)) / (_585 + 9.9999997473787516355514526367188e-06);
        float _3248 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
        float _616 = isnan(1.0) ? _3248 : (isnan(_3248) ? 1.0 : min(_3248, 1.0));
        float _617 = _616 * 2.0;
        float _621 = (1.0 - _616) / (_616 + 1.0);
        float _3259 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
        float _622 = isnan(1.0) ? _3259 : (isnan(_3259) ? 1.0 : min(_3259, 1.0));
        float _631 = ((((1.0 - _622) * (_617 + 2.0)) * exp2(log2(isnan(1.0) ? _3237 : (isnan(_3237) ? 1.0 : min(_3237, 1.0))) * (_617 + 1.0))) + _622) * _585;
        float _632 = _553 * 0.5;
        float _633 = _563 * 0.5;
        float _634 = _573 * 0.5;
        float _635 = dot(vec3(_632, _633, _634), vec3(_632, _633, _634));
        float _640 = (_635 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_635);
        float _648 = (dot(vec3(_224, _225, _226), vec3(_640 * _632, _640 * _633, _640 * _634)) + 1.0) * 0.5;
        float _3270 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
        float _657 = sqrt(((_633 * _633) + (_632 * _632)) + (_634 * _634)) / (_586 + 9.9999997473787516355514526367188e-06);
        float _3281 = isnan(0.0) ? _657 : (isnan(_657) ? 0.0 : max(_657, 0.0));
        float _658 = isnan(1.0) ? _3281 : (isnan(_3281) ? 1.0 : min(_3281, 1.0));
        float _659 = _658 * 2.0;
        float _663 = (1.0 - _658) / (_658 + 1.0);
        float _3292 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
        float _664 = isnan(1.0) ? _3292 : (isnan(_3292) ? 1.0 : min(_3292, 1.0));
        float _673 = ((((1.0 - _664) * (_659 + 2.0)) * exp2(log2(isnan(1.0) ? _3270 : (isnan(_3270) ? 1.0 : min(_3270, 1.0))) * (_659 + 1.0))) + _664) * _586;
        float _674 = _554 * 0.5;
        float _675 = _564 * 0.5;
        float _676 = _574 * 0.5;
        float _677 = dot(vec3(_674, _675, _676), vec3(_674, _675, _676));
        float _682 = (_677 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_677);
        float _690 = (dot(vec3(_224, _225, _226), vec3(_682 * _674, _682 * _675, _682 * _676)) + 1.0) * 0.5;
        float _3303 = isnan(0.0) ? _690 : (isnan(_690) ? 0.0 : max(_690, 0.0));
        float _699 = sqrt(((_675 * _675) + (_674 * _674)) + (_676 * _676)) / (_587 + 9.9999997473787516355514526367188e-06);
        float _3314 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
        float _700 = isnan(1.0) ? _3314 : (isnan(_3314) ? 1.0 : min(_3314, 1.0));
        float _701 = _700 * 2.0;
        float _705 = (1.0 - _700) / (_700 + 1.0);
        float _3325 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
        float _706 = isnan(1.0) ? _3325 : (isnan(_3325) ? 1.0 : min(_3325, 1.0));
        float _715 = ((((1.0 - _706) * (_701 + 2.0)) * exp2(log2(isnan(1.0) ? _3303 : (isnan(_3303) ? 1.0 : min(_3303, 1.0))) * (_701 + 1.0))) + _706) * _587;
        _723 = _554;
        _725 = _553;
        _726 = _552;
        _727 = _564;
        _728 = _563;
        _729 = _562;
        _730 = _574;
        _731 = _573;
        _732 = _572;
        _733 = _587;
        _734 = _586;
        _735 = _585;
        _736 = cbModelParam._m0[36u].z * (isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0)));
        _737 = cbModelParam._m0[36u].z * (isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0)));
        _738 = cbModelParam._m0[36u].z * (isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0)));
    }
    else
    {
        _723 = _724;
        _725 = _724;
        _726 = _724;
        _727 = _724;
        _728 = _724;
        _729 = _724;
        _730 = _724;
        _731 = _724;
        _732 = _724;
        _733 = _724;
        _734 = _724;
        _735 = _724;
        _736 = 0.0;
        _737 = 0.0;
        _738 = 0.0;
    }
    float _1033;
    float _1034;
    float _1035;
    float _1036;
    float _1037;
    float _1038;
    float _1039;
    float _1040;
    float _1041;
    float _1042;
    float _1043;
    float _1044;
    float _1045;
    float _1046;
    float _1047;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _764 = fma(_421, cbModelParam._m0[30u].z, fma(_417, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _413));
        float _768 = fma(_421, cbModelParam._m0[31u].z, fma(_417, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _413));
        float _772 = fma(_421, cbModelParam._m0[32u].z, fma(_417, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _413));
        float _795 = _413 + _224;
        float _796 = _417 + _225;
        float _797 = _421 + _226;
        float _807 = fma(_797, cbModelParam._m0[30u].z, fma(_796, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _795)) - _764;
        float _808 = fma(_797, cbModelParam._m0[31u].z, fma(_796, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _795)) - _768;
        float _809 = fma(_797, cbModelParam._m0[32u].z, fma(_796, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _795)) - _772;
        float _813 = inversesqrt(dot(vec3(_807, _808, _809), vec3(_807, _808, _809)));
        float _826 = ((_813 * _807) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_764 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _827 = ((_813 * _808) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_768 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _828 = ((_813 * _809) / cbModelParam._m0[35u].z) + ((((((_772 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _830 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_826, _827, _828), 0.0);
        vec4 _837 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_826, _827, _828), 0.0);
        vec4 _844 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_826, _827, _828), 0.0);
        vec4 _851 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_826, _827, _828), 0.0);
        float _863 = exp2((_830.w + (-0.5)) * 20.0) * 2.0;
        float _864 = _863 * (_830.x + (-0.5));
        float _865 = _863 * (_830.y + (-0.5));
        float _866 = _863 * (_830.z + (-0.5));
        float _873 = exp2((_837.w + (-0.5)) * 20.0) * 2.0;
        float _874 = _873 * (_837.x + (-0.5));
        float _875 = _873 * (_837.y + (-0.5));
        float _876 = _873 * (_837.z + (-0.5));
        float _883 = exp2((_844.w + (-0.5)) * 20.0) * 2.0;
        float _884 = _883 * (_844.x + (-0.5));
        float _885 = _883 * (_844.y + (-0.5));
        float _886 = _883 * (_844.z + (-0.5));
        float _893 = exp2((_851.w + (-0.5)) * 20.0) * 2.0;
        float _894 = _893 * (_851.x + (-0.5));
        float _895 = _893 * (_851.y + (-0.5));
        float _896 = _893 * (_851.z + (-0.5));
        float _897 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
        float _898 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
        float _899 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
        float _900 = _864 * 0.5;
        float _901 = _874 * 0.5;
        float _902 = _884 * 0.5;
        float _903 = dot(vec3(_900, _901, _902), vec3(_900, _901, _902));
        float _908 = (_903 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_903);
        float _916 = (dot(vec3(_224, _225, _226), vec3(_908 * _900, _908 * _901, _908 * _902)) + 1.0) * 0.5;
        float _3366 = isnan(0.0) ? _916 : (isnan(_916) ? 0.0 : max(_916, 0.0));
        float _925 = sqrt(((_901 * _901) + (_900 * _900)) + (_902 * _902)) / (_897 + 9.9999997473787516355514526367188e-06);
        float _3377 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
        float _926 = isnan(1.0) ? _3377 : (isnan(_3377) ? 1.0 : min(_3377, 1.0));
        float _927 = _926 * 2.0;
        float _931 = (1.0 - _926) / (_926 + 1.0);
        float _3388 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
        float _932 = isnan(1.0) ? _3388 : (isnan(_3388) ? 1.0 : min(_3388, 1.0));
        float _941 = ((((1.0 - _932) * (_927 + 2.0)) * exp2(log2(isnan(1.0) ? _3366 : (isnan(_3366) ? 1.0 : min(_3366, 1.0))) * (_927 + 1.0))) + _932) * _897;
        float _942 = _865 * 0.5;
        float _943 = _875 * 0.5;
        float _944 = _885 * 0.5;
        float _945 = dot(vec3(_942, _943, _944), vec3(_942, _943, _944));
        float _950 = (_945 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_945);
        float _958 = (dot(vec3(_224, _225, _226), vec3(_950 * _942, _950 * _943, _950 * _944)) + 1.0) * 0.5;
        float _3399 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
        float _967 = sqrt(((_943 * _943) + (_942 * _942)) + (_944 * _944)) / (_898 + 9.9999997473787516355514526367188e-06);
        float _3410 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
        float _968 = isnan(1.0) ? _3410 : (isnan(_3410) ? 1.0 : min(_3410, 1.0));
        float _969 = _968 * 2.0;
        float _973 = (1.0 - _968) / (_968 + 1.0);
        float _3421 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
        float _974 = isnan(1.0) ? _3421 : (isnan(_3421) ? 1.0 : min(_3421, 1.0));
        float _983 = ((((1.0 - _974) * (_969 + 2.0)) * exp2(log2(isnan(1.0) ? _3399 : (isnan(_3399) ? 1.0 : min(_3399, 1.0))) * (_969 + 1.0))) + _974) * _898;
        float _984 = _866 * 0.5;
        float _985 = _876 * 0.5;
        float _986 = _886 * 0.5;
        float _987 = dot(vec3(_984, _985, _986), vec3(_984, _985, _986));
        float _992 = (_987 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_987);
        float _1000 = (dot(vec3(_224, _225, _226), vec3(_992 * _984, _992 * _985, _992 * _986)) + 1.0) * 0.5;
        float _3432 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
        float _1009 = sqrt(((_985 * _985) + (_984 * _984)) + (_986 * _986)) / (_899 + 9.9999997473787516355514526367188e-06);
        float _3443 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
        float _1010 = isnan(1.0) ? _3443 : (isnan(_3443) ? 1.0 : min(_3443, 1.0));
        float _1011 = _1010 * 2.0;
        float _1015 = (1.0 - _1010) / (_1010 + 1.0);
        float _3454 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
        float _1016 = isnan(1.0) ? _3454 : (isnan(_3454) ? 1.0 : min(_3454, 1.0));
        float _1025 = ((((1.0 - _1016) * (_1011 + 2.0)) * exp2(log2(isnan(1.0) ? _3432 : (isnan(_3432) ? 1.0 : min(_3432, 1.0))) * (_1011 + 1.0))) + _1016) * _899;
        _1033 = _866;
        _1034 = _865;
        _1035 = _864;
        _1036 = _876;
        _1037 = _875;
        _1038 = _874;
        _1039 = _886;
        _1040 = _885;
        _1041 = _884;
        _1042 = _899;
        _1043 = _898;
        _1044 = _897;
        _1045 = cbModelParam._m0[36u].w * (isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0)));
        _1046 = cbModelParam._m0[36u].w * (isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0)));
        _1047 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0)));
    }
    else
    {
        _1033 = _724;
        _1034 = _724;
        _1035 = _724;
        _1036 = _724;
        _1037 = _724;
        _1038 = _724;
        _1039 = _724;
        _1040 = _724;
        _1041 = _724;
        _1042 = _724;
        _1043 = _724;
        _1044 = _724;
        _1045 = 0.0;
        _1046 = 0.0;
        _1047 = 0.0;
    }
    float _1057 = (cbModelParam._m0[1u].x * (_1045 - _736)) + _736;
    float _1058 = (cbModelParam._m0[1u].x * (_1046 - _737)) + _737;
    float _1059 = (cbModelParam._m0[1u].x * (_1047 - _738)) + _738;
    float _1080 = fma(_1059, cbSceneParam._m0[89u].z, fma(_1058, cbSceneParam._m0[89u].y, _1057 * cbSceneParam._m0[89u].x));
    float _1083 = fma(_1059, cbSceneParam._m0[90u].z, fma(_1058, cbSceneParam._m0[90u].y, _1057 * cbSceneParam._m0[90u].x));
    float _1086 = fma(_1059, cbSceneParam._m0[91u].z, fma(_1058, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1057));
    float _1101 = _389 * 0.5;
    float _1102 = _390 * 0.5;
    float _1103 = _391 * 0.5;
    float _1104 = dot(vec4(_1101, _1102, _1103, 1.0), vec4(_1035, _1038, _1041, _1044));
    float _1107 = dot(vec4(_1101, _1102, _1103, 1.0), vec4(_1034, _1037, _1040, _1043));
    float _1110 = dot(vec4(_1101, _1102, _1103, 1.0), vec4(_1033, _1036, _1039, _1042));
    float _1144;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1117 = dot(vec4(_1101, _1102, _1103, 1.0), vec4(_723, _727, _730, _733));
        float _1121 = dot(vec4(_1101, _1102, _1103, 1.0), vec4(_725, _728, _731, _734));
        float _1125 = dot(vec4(_1101, _1102, _1103, 1.0), vec4(_726, _729, _732, _735));
        float _1132 = dot(vec4(cbModelParam._m0[39u]), vec4(_1101, _1102, _1103, 1.0));
        _1144 = dot(vec3(isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0)), isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0)), isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1132) ? 0.0 : (isnan(0.0) ? _1132 : max(0.0, _1132))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1144 = 1.0;
    }
    float _1155;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1146 = dot(vec4(cbModelParam._m0[40u]), vec4(_1101, _1102, _1103, 1.0));
        _1155 = dot(vec3(isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0)), isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0)), isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1146) ? 0.0 : (isnan(0.0) ? _1146 : max(0.0, _1146))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1155 = 1.0;
    }
    float _1159 = (_1155 * cbModelParam._m0[1u].x) + (_1144 * (1.0 - cbModelParam._m0[1u].x));
    float _1168 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1250;
    float _1252;
    float _1254;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1217 = fma(_421, cbModelParam._m0[13u].z, fma(_417, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _413)) + cbModelParam._m0[13u].w;
        float _1221 = fma(_421, cbModelParam._m0[14u].z, fma(_417, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _413)) + cbModelParam._m0[14u].w;
        float _1225 = fma(_421, cbModelParam._m0[15u].z, fma(_417, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _413)) + cbModelParam._m0[15u].w;
        float _1228 = fma(_391, cbModelParam._m0[13u].z, fma(_390, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _389));
        float _1231 = fma(_391, cbModelParam._m0[14u].z, fma(_390, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _389));
        float _1234 = fma(_391, cbModelParam._m0[15u].z, fma(_390, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _389));
        float _1260;
        if (_1228 > 0.0)
        {
            _1260 = abs((1.0 - _1217) / _1228);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1228 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1217 + 1.0) / _1228);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1260 = frontier_phi_16_14_ladder;
        }
        float _1435;
        if (_1231 > 0.0)
        {
            _1435 = abs((1.0 - _1221) / _1231);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1231 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1221 + 1.0) / _1231);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1435 = frontier_phi_25_21_ladder;
        }
        float _1732;
        if (_1234 > 0.0)
        {
            _1732 = abs((1.0 - _1225) / _1234);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1234 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1225 + 1.0) / _1234);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1732 = frontier_phi_37_32_ladder;
        }
        float _1734 = isnan(_1435) ? _1260 : (isnan(_1260) ? _1435 : min(_1260, _1435));
        float _1735 = isnan(_1732) ? _1734 : (isnan(_1734) ? _1732 : min(_1734, _1732));
        float _1739 = (_1735 * _1228) + _1217;
        float _1740 = (_1735 * _1231) + _1221;
        float _1741 = (_1735 * _1234) + _1225;
        float _1742 = _1735 * 9.9999997473787516355514526367188e-05;
        float _1744 = (-1.0) - _1742;
        float _1746 = _1742 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1741 > _1746) || ((_1741 < _1744) || ((_1740 > _1746) || ((_1740 < _1744) || ((_1739 < _1744) || (_1739 > _1746))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1886 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1741, cbModelParam._m0[9u].z, fma(_1740, cbModelParam._m0[9u].y, _1739 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1741, cbModelParam._m0[10u].z, fma(_1740, cbModelParam._m0[10u].y, _1739 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1741, cbModelParam._m0[11u].z, fma(_1740, cbModelParam._m0[11u].y, _1739 * cbModelParam._m0[11u].x))), _1168);
            frontier_phi_15_37_ladder = _1886.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1886.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1886.z * cbModelParam._m0[1u].y;
        }
        _1250 = frontier_phi_15_37_ladder_1;
        _1252 = frontier_phi_15_37_ladder;
        _1254 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1238 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_389, _390, _391), _1168);
        _1250 = _1238.x * cbModelParam._m0[1u].y;
        _1252 = _1238.y * cbModelParam._m0[1u].y;
        _1254 = _1238.z * cbModelParam._m0[1u].y;
    }
    float _1257 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1350;
    float _1352;
    float _1354;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1314 = fma(_421, cbModelParam._m0[21u].z, fma(_417, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _413)) + cbModelParam._m0[21u].w;
        float _1318 = fma(_421, cbModelParam._m0[22u].z, fma(_417, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _413)) + cbModelParam._m0[22u].w;
        float _1322 = fma(_421, cbModelParam._m0[23u].z, fma(_417, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _413)) + cbModelParam._m0[23u].w;
        float _1325 = fma(_391, cbModelParam._m0[21u].z, fma(_390, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _389));
        float _1328 = fma(_391, cbModelParam._m0[22u].z, fma(_390, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _389));
        float _1331 = fma(_391, cbModelParam._m0[23u].z, fma(_390, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _389));
        float _1440;
        if (_1325 > 0.0)
        {
            _1440 = abs((1.0 - _1314) / _1325);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1325 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1314 + 1.0) / _1325);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1440 = frontier_phi_27_23_ladder;
        }
        float _1759;
        if (_1328 > 0.0)
        {
            _1759 = abs((1.0 - _1318) / _1328);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1328 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1318 + 1.0) / _1328);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1759 = frontier_phi_39_34_ladder;
        }
        float _2032;
        if (_1331 > 0.0)
        {
            _2032 = abs((1.0 - _1322) / _1331);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1331 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1322 + 1.0) / _1331);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2032 = frontier_phi_49_46_ladder;
        }
        float _2034 = isnan(_1759) ? _1440 : (isnan(_1440) ? _1759 : min(_1440, _1759));
        float _2035 = isnan(_2032) ? _2034 : (isnan(_2034) ? _2032 : min(_2034, _2032));
        float _2039 = (_2035 * _1325) + _1314;
        float _2040 = (_2035 * _1328) + _1318;
        float _2041 = (_2035 * _1331) + _1322;
        float _2042 = _2035 * 9.9999997473787516355514526367188e-05;
        float _2043 = (-1.0) - _2042;
        float _2045 = _2042 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2041 > _2045) || ((_2041 < _2043) || ((_2040 > _2045) || ((_2040 < _2043) || ((_2039 < _2043) || (_2039 > _2045))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2132 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2041, cbModelParam._m0[17u].z, fma(_2040, cbModelParam._m0[17u].y, _2039 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2041, cbModelParam._m0[18u].z, fma(_2040, cbModelParam._m0[18u].y, _2039 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2041, cbModelParam._m0[19u].z, fma(_2040, cbModelParam._m0[19u].y, _2039 * cbModelParam._m0[19u].x))), _1257);
            frontier_phi_24_49_ladder = _2132.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2132.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2132.x * cbModelParam._m0[1u].z;
        }
        _1350 = frontier_phi_24_49_ladder_2;
        _1352 = frontier_phi_24_49_ladder_1;
        _1354 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1334 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_389, _390, _391), _1257);
        _1350 = _1334.x * cbModelParam._m0[1u].z;
        _1352 = _1334.y * cbModelParam._m0[1u].z;
        _1354 = _1334.z * cbModelParam._m0[1u].z;
    }
    float _1366 = _380 * 0.01200000010430812835693359375;
    float _1368 = _1366 * ((cbModelParam._m0[1u].w * (_1350 - _1250)) + _1250);
    float _1369 = _1366 * ((cbModelParam._m0[1u].w * (_1352 - _1252)) + _1252);
    float _1370 = _1366 * ((cbModelParam._m0[1u].w * (_1354 - _1254)) + _1254);
    float _1373 = fma(_1370, cbSceneParam._m0[89u].z, fma(_1369, cbSceneParam._m0[89u].y, _1368 * cbSceneParam._m0[89u].x));
    float _1376 = fma(_1370, cbSceneParam._m0[90u].z, fma(_1369, cbSceneParam._m0[90u].y, _1368 * cbSceneParam._m0[90u].x));
    float _1379 = fma(_1370, cbSceneParam._m0[91u].z, fma(_1369, cbSceneParam._m0[91u].y, _1368 * cbSceneParam._m0[91u].x));
    float _1414 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1418 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1422 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1426 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1427 = _1414 / _1426;
    float _1428 = _1418 / _1426;
    float _1429 = _1422 / _1426;
    float _1576;
    float _1577;
    float _1578;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1456 = ((uint(_1429 > cbSceneParam._m0[59u].y) + uint(_1429 > cbSceneParam._m0[59u].x)) + uint(_1429 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1457 = _1456 + 43u;
        uint _1465 = _1456 + 44u;
        uint _1473 = _1456 + 45u;
        uint _1481 = _1456 + 46u;
        float _1492 = fma(_1426, cbSceneParam._m0[_1457].w, fma(_1422, cbSceneParam._m0[_1457].z, fma(_1418, cbSceneParam._m0[_1457].y, _1414 * cbSceneParam._m0[_1457].x)));
        float _1496 = fma(_1426, cbSceneParam._m0[_1465].w, fma(_1422, cbSceneParam._m0[_1465].z, fma(_1418, cbSceneParam._m0[_1465].y, _1414 * cbSceneParam._m0[_1465].x)));
        float _1504 = fma(_1426, cbSceneParam._m0[_1481].w, fma(_1422, cbSceneParam._m0[_1481].z, fma(_1418, cbSceneParam._m0[_1481].y, _1414 * cbSceneParam._m0[_1481].x)));
        float _1509 = cbSceneParam._m0[33u].z * _1504;
        float _1511 = cbSceneParam._m0[33u].w * _1504;
        float _1514 = fma(_1426, cbSceneParam._m0[_1473].w, fma(_1422, cbSceneParam._m0[_1473].z, fma(_1418, cbSceneParam._m0[_1473].y, _1414 * cbSceneParam._m0[_1473].x))) / _1504;
        float _1562 = (cbSceneParam._m0[33u].x - sqrt(((_1428 * _1428) + (_1427 * _1427)) + (_1429 * _1429))) * cbSceneParam._m0[33u].y;
        float _3580 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
        float _1569 = (isnan(1.0) ? _3580 : (isnan(_3580) ? 1.0 : min(_3580, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1509 + _1492) / _1504, (_1511 + _1496) / _1504), _1514), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1511 + _1492) / _1504, (_1496 - _1509) / _1504), _1514), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1492 - _1509) / _1504, (_1496 - _1511) / _1504), _1514), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1492 - _1511) / _1504, (_1509 + _1496) / _1504), _1514), 0.0)).x), vec4(0.25)));
        _1576 = 1.0 - (_1569 * cbSceneParam._m0[34u].x);
        _1577 = 1.0 - (_1569 * cbSceneParam._m0[34u].y);
        _1578 = 1.0 - (_1569 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1576 = 1.0;
        _1577 = 1.0;
        _1578 = 1.0;
    }
    float _1642;
    float _1644;
    float _1646;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1630 = fma(_1426, cbSceneParam._m0[63u].w, fma(_1422, cbSceneParam._m0[63u].z, fma(_1418, cbSceneParam._m0[63u].y, _1414 * cbSceneParam._m0[63u].x)));
        float _1631 = fma(_1426, cbSceneParam._m0[60u].w, fma(_1422, cbSceneParam._m0[60u].z, fma(_1418, cbSceneParam._m0[60u].y, _1414 * cbSceneParam._m0[60u].x))) / _1630;
        float _1632 = fma(_1426, cbSceneParam._m0[61u].w, fma(_1422, cbSceneParam._m0[61u].z, fma(_1418, cbSceneParam._m0[61u].y, _1414 * cbSceneParam._m0[61u].x))) / _1630;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1631 >= cbSceneParam._m0[64u].x) && (_1632 >= cbSceneParam._m0[64u].y)) && (_1631 <= cbSceneParam._m0[64u].z)) && (_1632 <= cbSceneParam._m0[64u].w))
        {
            float _1772 = fma(_1426, cbSceneParam._m0[62u].w, fma(_1422, cbSceneParam._m0[62u].z, fma(_1418, cbSceneParam._m0[62u].y, _1414 * cbSceneParam._m0[62u].x))) / _1630;
            float _1776 = isnan(cbSceneParam._m0[41u].w) ? _1772 : (isnan(_1772) ? cbSceneParam._m0[41u].w : max(_1772, cbSceneParam._m0[41u].w));
            float _1819 = (cbSceneParam._m0[33u].x - sqrt(((_1428 * _1428) + (_1427 * _1427)) + (_1429 * _1429))) * cbSceneParam._m0[33u].y;
            float _3596 = isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0));
            float _1826 = (isnan(1.0) ? _3596 : (isnan(_3596) ? 1.0 : min(_3596, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1631, cbSceneParam._m0[33u].w + _1632), _1776), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1631, _1632 - cbSceneParam._m0[33u].z), _1776), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1631 - cbSceneParam._m0[33u].z, _1632 - cbSceneParam._m0[33u].w), _1776), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1631 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1632), _1776), 0.0)).x), vec4(0.25)));
            float _1830 = 1.0 - (_1826 * cbSceneParam._m0[34u].x);
            float _1831 = 1.0 - (_1826 * cbSceneParam._m0[34u].y);
            float _1832 = 1.0 - (_1826 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_1831) ? _1577 : (isnan(_1577) ? _1831 : min(_1577, _1831));
            frontier_phi_36_35_ladder_1 = isnan(_1832) ? _1578 : (isnan(_1578) ? _1832 : min(_1578, _1832));
            frontier_phi_36_35_ladder_2 = isnan(_1830) ? _1576 : (isnan(_1576) ? _1830 : min(_1576, _1830));
        }
        else
        {
            frontier_phi_36_35_ladder = _1577;
            frontier_phi_36_35_ladder_1 = _1578;
            frontier_phi_36_35_ladder_2 = _1576;
        }
        _1642 = frontier_phi_36_35_ladder_2;
        _1644 = frontier_phi_36_35_ladder;
        _1646 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _1642 = _1576;
        _1644 = _1577;
        _1646 = _1578;
    }
    uvec4 _1651 = floatBitsToUint(cbInstanceData._m0[_354 + 5u]);
    uint _1653 = _1651.x * 14u;
    uint _1654 = _1653 + 13u;
    float _1661 = _380 + (-1.0);
    float _1667 = (cbLight._m0[_1654].x * _1661) + 1.0;
    float _1668 = (cbLight._m0[_1654].y * _1661) + 1.0;
    float _1669 = (cbLight._m0[_1654].z * _1661) + 1.0;
    float _1670 = (cbLight._m0[_1654].w * _1661) + 1.0;
    uint _1671 = _1653 + 5u;
    float _1677 = isnan(1.0) ? _1668 : (isnan(_1668) ? 1.0 : min(_1668, 1.0));
    uint _1681 = _1653 + 4u;
    float _1691 = isnan(1.0) ? _1667 : (isnan(_1667) ? 1.0 : min(_1667, 1.0));
    uint _1695 = _1653 | 1u;
    float _1706 = dot(vec3(cbLight._m0[_1653].xyz), vec3(_224, _225, _226));
    float _1709 = dot(vec3(cbLight._m0[_1695].xyz), vec3(_224, _225, _226));
    float _3632 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
    float _3643 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
    float _1714 = (isnan(1.0) ? _3632 : (isnan(_3632) ? 1.0 : min(_3632, 1.0))) * 0.3183098733425140380859375;
    float _1716 = (isnan(1.0) ? _3643 : (isnan(_3643) ? 1.0 : min(_3643, 1.0))) * 0.3183098733425140380859375;
    float _1723 = ((cbLight._m0[_1671].x * _1677) * _1716) + (((cbLight._m0[_1681].x * _1642) * _1691) * _1714);
    float _1724 = ((_1677 * cbLight._m0[_1671].y) * _1716) + (((cbLight._m0[_1681].y * _1644) * _1691) * _1714);
    float _1725 = ((_1677 * cbLight._m0[_1671].z) * _1716) + (((cbLight._m0[_1681].z * _1646) * _1691) * _1714);
    uvec4 _1729 = floatBitsToUint(cbLight._m0[_1653 + 12u]);
    bool _1731 = _1729.x == 0u;
    float _1833;
    float _1835;
    float _1837;
    if (_1731)
    {
        _1833 = _1723;
        _1835 = _1724;
        _1837 = _1725;
    }
    else
    {
        uint _1841 = _1653 + 6u;
        float _1857 = (dot(vec3(cbLight._m0[_1653 + 2u].xyz), vec3(_224, _225, _226)) * 0.5) + 0.5;
        float _1858 = _1857 * _1857;
        float _3654 = isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0));
        float _1859 = isnan(1.0) ? _3654 : (isnan(_3654) ? 1.0 : min(_3654, 1.0));
        float _1860 = isnan(1.0) ? _1669 : (isnan(_1669) ? 1.0 : min(_1669, 1.0));
        _1833 = (((cbLight._m0[_1841].x * 0.3183098733425140380859375) * _1859) * _1860) + _1723;
        _1835 = (((cbLight._m0[_1841].y * 0.3183098733425140380859375) * _1859) * _1860) + _1724;
        _1837 = (((cbLight._m0[_1841].z * 0.3183098733425140380859375) * _1859) * _1860) + _1725;
    }
    bool _1840 = _1729.y == 0u;
    float _1895;
    float _1897;
    float _1899;
    if (_1840)
    {
        _1895 = _1833;
        _1897 = _1835;
        _1899 = _1837;
    }
    else
    {
        uint _2003 = _1653 + 7u;
        float _2019 = (dot(vec3(cbLight._m0[_1653 + 3u].xyz), vec3(_224, _225, _226)) * 0.5) + 0.5;
        float _2020 = _2019 * _2019;
        float _3670 = isnan(0.0) ? _2020 : (isnan(_2020) ? 0.0 : max(_2020, 0.0));
        float _2021 = isnan(1.0) ? _3670 : (isnan(_3670) ? 1.0 : min(_3670, 1.0));
        float _2022 = isnan(1.0) ? _1670 : (isnan(_1670) ? 1.0 : min(_1670, 1.0));
        _1895 = (((cbLight._m0[_2003].x * 0.3183098733425140380859375) * _2021) * _2022) + _1833;
        _1897 = (((cbLight._m0[_2003].y * 0.3183098733425140380859375) * _2021) * _2022) + _1835;
        _1899 = (((cbLight._m0[_2003].z * 0.3183098733425140380859375) * _2021) * _2022) + _1837;
    }
    uint _1901 = _1653 + 8u;
    float _1907 = cbLight._m0[_1653].x + _305;
    float _1908 = cbLight._m0[_1653].y + _306;
    float _1909 = cbLight._m0[_1653].z + _307;
    float _1913 = inversesqrt(dot(vec3(_1907, _1908, _1909), vec3(_1907, _1908, _1909)));
    float _1917 = dot(vec3(_224, _225, _226), vec3(cbLight._m0[_1653].xyz));
    float _3686 = isnan(0.0) ? _1917 : (isnan(_1917) ? 0.0 : max(_1917, 0.0));
    float _1920 = isnan(1.0) ? _3686 : (isnan(_3686) ? 1.0 : min(_3686, 1.0));
    float _3697 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _1921 = isnan(1.0) ? _3697 : (isnan(_3697) ? 1.0 : min(_3697, 1.0));
    float _1922 = dot(vec3(cbLight._m0[_1653].xyz), vec3(_1907 * _1913, _1908 * _1913, _1909 * _1913));
    float _3708 = isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0));
    float _1933 = (exp2(log2(1.0 - (isnan(1.0) ? _3708 : (isnan(_3708) ? 1.0 : min(_3708, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1939 = (0.5 / ((_1920 + 9.9999999392252902907785028219223e-09) + _1921)) * _1920;
    float _3719 = isnan(0.0) ? _1939 : (isnan(_1939) ? 0.0 : max(_1939, 0.0));
    float _1941 = (isnan(1.0) ? _3719 : (isnan(_3719) ? 1.0 : min(_3719, 1.0))) * 0.31831014156341552734375;
    uint _1955 = _1653 + 9u;
    float _1961 = cbLight._m0[_1695].x + _305;
    float _1962 = cbLight._m0[_1695].y + _306;
    float _1963 = cbLight._m0[_1695].z + _307;
    float _1967 = inversesqrt(dot(vec3(_1961, _1962, _1963), vec3(_1961, _1962, _1963)));
    float _1971 = dot(vec3(_224, _225, _226), vec3(cbLight._m0[_1695].xyz));
    float _3730 = isnan(0.0) ? _1971 : (isnan(_1971) ? 0.0 : max(_1971, 0.0));
    float _1974 = isnan(1.0) ? _3730 : (isnan(_3730) ? 1.0 : min(_3730, 1.0));
    float _1975 = dot(vec3(cbLight._m0[_1695].xyz), vec3(_1961 * _1967, _1962 * _1967, _1963 * _1967));
    float _3741 = isnan(0.0) ? _1975 : (isnan(_1975) ? 0.0 : max(_1975, 0.0));
    float _1984 = (exp2(log2(1.0 - (isnan(1.0) ? _3741 : (isnan(_3741) ? 1.0 : min(_3741, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1988 = (0.5 / ((_1974 + 9.9999999392252902907785028219223e-09) + _1921)) * _1974;
    float _3752 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
    float _1990 = (isnan(1.0) ? _3752 : (isnan(_3752) ? 1.0 : min(_3752, 1.0))) * 0.31831014156341552734375;
    float _2000 = (((_1984 * cbLight._m0[_1955].x) * _1990) * _1677) + ((((cbLight._m0[_1901].x * _1642) * _1933) * _1941) * _1691);
    float _2001 = (((_1984 * cbLight._m0[_1955].y) * _1990) * _1677) + ((((cbLight._m0[_1901].y * _1644) * _1933) * _1941) * _1691);
    float _2002 = (((_1984 * cbLight._m0[_1955].z) * _1990) * _1677) + ((((cbLight._m0[_1901].z * _1646) * _1933) * _1941) * _1691);
    float _2058;
    float _2060;
    float _2062;
    if (_1731)
    {
        _2058 = _2000;
        _2060 = _2001;
        _2062 = _2002;
    }
    else
    {
        uint _2064 = _1653 + 10u;
        uint _2070 = _1653 + 2u;
        float _2076 = cbLight._m0[_2070].x + _305;
        float _2077 = cbLight._m0[_2070].y + _306;
        float _2078 = cbLight._m0[_2070].z + _307;
        float _2082 = inversesqrt(dot(vec3(_2076, _2077, _2078), vec3(_2076, _2077, _2078)));
        float _2086 = dot(vec3(_224, _225, _226), vec3(cbLight._m0[_2070].xyz));
        float _3763 = isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0));
        float _2089 = isnan(1.0) ? _3763 : (isnan(_3763) ? 1.0 : min(_3763, 1.0));
        float _2090 = dot(vec3(cbLight._m0[_2070].xyz), vec3(_2076 * _2082, _2077 * _2082, _2078 * _2082));
        float _3774 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
        float _2099 = (exp2(log2(1.0 - (isnan(1.0) ? _3774 : (isnan(_3774) ? 1.0 : min(_3774, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2103 = (0.5 / ((_2089 + 9.9999999392252902907785028219223e-09) + _1921)) * _2089;
        float _3785 = isnan(0.0) ? _2103 : (isnan(_2103) ? 0.0 : max(_2103, 0.0));
        float _2105 = (isnan(1.0) ? _3785 : (isnan(_3785) ? 1.0 : min(_3785, 1.0))) * 0.31831014156341552734375;
        float _2106 = isnan(1.0) ? _1669 : (isnan(_1669) ? 1.0 : min(_1669, 1.0));
        _2058 = (((_2099 * cbLight._m0[_2064].x) * _2105) * _2106) + _2000;
        _2060 = (((_2099 * cbLight._m0[_2064].y) * _2105) * _2106) + _2001;
        _2062 = (((_2099 * cbLight._m0[_2064].z) * _2105) * _2106) + _2002;
    }
    float _2137;
    float _2139;
    float _2141;
    if (_1840)
    {
        _2137 = _2058;
        _2139 = _2060;
        _2141 = _2062;
    }
    else
    {
        uint _2148 = _1653 + 11u;
        uint _2154 = _1653 + 3u;
        float _2160 = cbLight._m0[_2154].x + _305;
        float _2161 = cbLight._m0[_2154].y + _306;
        float _2162 = cbLight._m0[_2154].z + _307;
        float _2166 = inversesqrt(dot(vec3(_2160, _2161, _2162), vec3(_2160, _2161, _2162)));
        float _2170 = dot(vec3(_224, _225, _226), vec3(cbLight._m0[_2154].xyz));
        float _3801 = isnan(0.0) ? _2170 : (isnan(_2170) ? 0.0 : max(_2170, 0.0));
        float _2173 = isnan(1.0) ? _3801 : (isnan(_3801) ? 1.0 : min(_3801, 1.0));
        float _2174 = dot(vec3(cbLight._m0[_2154].xyz), vec3(_2160 * _2166, _2161 * _2166, _2162 * _2166));
        float _3812 = isnan(0.0) ? _2174 : (isnan(_2174) ? 0.0 : max(_2174, 0.0));
        float _2183 = (exp2(log2(1.0 - (isnan(1.0) ? _3812 : (isnan(_3812) ? 1.0 : min(_3812, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2187 = (0.5 / ((_2173 + 9.9999999392252902907785028219223e-09) + _1921)) * _2173;
        float _3823 = isnan(0.0) ? _2187 : (isnan(_2187) ? 0.0 : max(_2187, 0.0));
        float _2189 = (isnan(1.0) ? _3823 : (isnan(_3823) ? 1.0 : min(_3823, 1.0))) * 0.31831014156341552734375;
        float _2190 = isnan(1.0) ? _1670 : (isnan(_1670) ? 1.0 : min(_1670, 1.0));
        _2137 = (((_2183 * cbLight._m0[_2148].x) * _2189) * _2190) + _2058;
        _2139 = (((_2183 * cbLight._m0[_2148].y) * _2189) * _2190) + _2060;
        _2141 = (((_2183 * cbLight._m0[_2148].z) * _2189) * _2190) + _2062;
    }
    float _2255;
    float _2257;
    float _2259;
    float _2261;
    float _2263;
    float _2265;
    if (_1651.y == 0u)
    {
        uvec4 _2211 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2212 = _2211.x;
        uint _2223 = uint((float(_2211.y) * floor(float(uint(cbSceneParam._m0[85u].y * _314) / _2212))) + floor(float(uint(cbSceneParam._m0[85u].x * _313) / _2212)));
        float _2233 = (log2(_1429 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2234 = isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0));
        uint _2237 = uint(isnan(14.0) ? _2234 : (isnan(_2234) ? 14.0 : min(_2234, 14.0)));
        uvec4 _2242 = texelFetch(g_lightClusterGridBuffer, int(((_2237 << 2u) + (_2223 << 6u)) >> 2u));
        uint _2243 = _2242.x;
        uint _2244 = _2211.z;
        float _2351;
        float _2353;
        float _2355;
        float _2357;
        float _2359;
        float _2361;
        if (((((1u << ((_2244 >> 4u) & 15u)) + 4294967295u) & _2243) == 0u) || ((_2244 & 240u) == 0u))
        {
            _2351 = 0.0;
            _2353 = 0.0;
            _2355 = 0.0;
            _2357 = 0.0;
            _2359 = 0.0;
            _2361 = 0.0;
        }
        else
        {
            float _2352;
            float _2354;
            float _2356;
            float _2358;
            float _2360;
            float _2362;
            float _2502 = 0.0;
            float _2503 = 0.0;
            float _2504 = 0.0;
            float _2505 = 0.0;
            float _2506 = 0.0;
            float _2507 = 0.0;
            uint _2508 = 0u;
            uint _2517;
            bool _2518;
            for (;;)
            {
                _2517 = texelFetch(g_lightClassification, int((((_2237 << 5u) + (_2223 << 9u)) + (_2508 << 2u)) >> 2u)).x;
                _2518 = _2517 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_2518)
                {
                    frontier_phi_68_pred = _2507;
                    frontier_phi_68_pred_1 = _2506;
                    frontier_phi_68_pred_2 = _2505;
                    frontier_phi_68_pred_3 = _2503;
                    frontier_phi_68_pred_4 = _2502;
                    frontier_phi_68_pred_5 = _2504;
                }
                else
                {
                    float _2626;
                    float _2627;
                    float _2628;
                    float _2629;
                    float _2630;
                    float _2631;
                    uint _2632;
                    _2626 = _2502;
                    _2627 = _2503;
                    _2628 = _2504;
                    _2629 = _2505;
                    _2630 = _2506;
                    _2631 = _2507;
                    _2632 = _2517;
                    float _2558;
                    float _2559;
                    float _2560;
                    float _2561;
                    float _2562;
                    float _2563;
                    for (;;)
                    {
                        uint _2636 = uint(findLSB(_2632)) + (_2508 << 5u);
                        uint _2633 = (_2632 + 4294967295u) & _2632;
                        uint _2638 = _2636 * 48u;
                        vec4 _2652 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2638)).x, texelFetch(g_PointLightRenderingBuffer, int(_2638 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2638 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2638 + 3u)).x));
                        uint _2658 = (_2636 * 48u) + 4u;
                        vec4 _2671 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2658)).x, texelFetch(g_PointLightRenderingBuffer, int(_2658 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2658 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2658 + 3u)).x));
                        uint _2677 = (_2636 * 48u) + 8u;
                        vec3 _2688 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2677)).x, texelFetch(g_PointLightRenderingBuffer, int(_2677 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2677 + 2u)).x));
                        float _2692 = _2652.x - _1427;
                        float _2693 = _2652.y - _1428;
                        float _2694 = _2652.z - _1429;
                        float _2695 = dot(vec3(_2692, _2693, _2694), vec3(_2692, _2693, _2694));
                        float _2698 = inversesqrt(_2695);
                        float _2707 = 1.0 - (_2695 * _2652.w);
                        float _3849 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
                        float _2708 = isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0));
                        float _2709 = sqrt(_2695) * _2671.w;
                        float _2712 = 1.39999997615814208984375 / (_2709 + 1.39999997615814208984375);
                        float _2713 = _2712 * _2712;
                        float _2716 = ((1.0 - _2713) * dot(vec3(_335, _338, _341), vec3(_2698 * _2692, _2698 * _2693, _2698 * _2694))) + _2713;
                        float _2719 = _2709 * _2709;
                        float _2723 = ((isnan(0.0) ? _2716 : (isnan(_2716) ? 0.0 : max(_2716, 0.0))) * _2708) / ((_2719 * 0.699999988079071044921875) + 1.0);
                        float _2727 = (-0.0) - _1427;
                        float _2728 = (-0.0) - _1428;
                        float _2729 = (-0.0) - _1429;
                        float _2733 = inversesqrt(dot(vec3(_2727, _2728, _2729), vec3(_2727, _2728, _2729)));
                        float _2737 = dot(vec3(_335, _338, _341), vec3(_2733 * _2727, _2733 * _2728, _2733 * _2729));
                        float _3865 = isnan(0.0) ? _2737 : (isnan(_2737) ? 0.0 : max(_2737, 0.0));
                        float _3876 = isnan(0.0) ? _2716 : (isnan(_2716) ? 0.0 : max(_2716, 0.0));
                        float _2741 = isnan(1.0) ? _3876 : (isnan(_3876) ? 1.0 : min(_3876, 1.0));
                        float _2745 = (0.5 / (((isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0))) + 9.9999999392252902907785028219223e-09) + _2741)) * _2741;
                        float _3887 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0));
                        float _2754 = (((isnan(1.0) ? _3887 : (isnan(_3887) ? 1.0 : min(_3887, 1.0))) * 3.1415927410125732421875) / ((_2719 * 2.1991131305694580078125) + 3.141590118408203125)) * _2708;
                        _2561 = (_2723 * _2671.x) + _2629;
                        _2562 = (_2723 * _2671.y) + _2630;
                        _2563 = (_2723 * _2671.z) + _2631;
                        _2558 = (_2754 * _2688.x) + _2626;
                        _2559 = (_2754 * _2688.y) + _2627;
                        _2560 = (_2754 * _2688.z) + _2628;
                        if (_2633 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2626 = _2558;
                            _2627 = _2559;
                            _2628 = _2560;
                            _2629 = _2561;
                            _2630 = _2562;
                            _2631 = _2563;
                            _2632 = _2633;
                        }
                    }
                    frontier_phi_68_pred = _2563;
                    frontier_phi_68_pred_1 = _2562;
                    frontier_phi_68_pred_2 = _2561;
                    frontier_phi_68_pred_3 = _2559;
                    frontier_phi_68_pred_4 = _2558;
                    frontier_phi_68_pred_5 = _2560;
                }
                _2362 = frontier_phi_68_pred;
                _2360 = frontier_phi_68_pred_1;
                _2358 = frontier_phi_68_pred_2;
                _2354 = frontier_phi_68_pred_3;
                _2352 = frontier_phi_68_pred_4;
                _2356 = frontier_phi_68_pred_5;
                uint _2509 = _2508 + 1u;
                if (_2509 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2502 = _2352;
                    _2503 = _2354;
                    _2504 = _2356;
                    _2505 = _2358;
                    _2506 = _2360;
                    _2507 = _2362;
                    _2508 = _2509;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2351 = _2352;
            _2353 = _2354;
            _2355 = _2356;
            _2357 = _2358;
            _2359 = _2360;
            _2361 = _2362;
        }
        uvec4 _2365 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2366 = _2365.z;
        uint _2368 = (_2366 >> 8u) & 15u;
        float _2473;
        float _2475;
        float _2477;
        float _2479;
        float _2481;
        float _2483;
        if (((4294967295u << _2368) & _2243) == 0u)
        {
            _2473 = _2351;
            _2475 = _2353;
            _2477 = _2355;
            _2479 = _2357;
            _2481 = _2359;
            _2483 = _2361;
        }
        else
        {
            float _2498 = inversesqrt(dot(vec3(_1427, _1428, _1429), vec3(_1427, _1428, _1429)));
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2368 < ((_2366 >> 12u) & 15u))
            {
                float _2474;
                float _2476;
                float _2478;
                float _2480;
                float _2482;
                float _2484;
                float _2609 = _2351;
                float _2610 = _2353;
                float _2611 = _2355;
                float _2612 = _2357;
                float _2613 = _2359;
                float _2614 = _2361;
                uint _2615 = _2368;
                uint _2624;
                bool _2625;
                for (;;)
                {
                    _2624 = texelFetch(g_lightClassification, int((((_2237 << 5u) + (_2223 << 9u)) + (_2615 << 2u)) >> 2u)).x;
                    _2625 = _2624 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_2625)
                    {
                        frontier_phi_74_pred = _2611;
                        frontier_phi_74_pred_1 = _2610;
                        frontier_phi_74_pred_2 = _2609;
                        frontier_phi_74_pred_3 = _2614;
                        frontier_phi_74_pred_4 = _2613;
                        frontier_phi_74_pred_5 = _2612;
                    }
                    else
                    {
                        float _2759;
                        float _2760;
                        float _2761;
                        float _2762;
                        float _2763;
                        float _2764;
                        float _3011;
                        float _3012;
                        float _3013;
                        float _3014;
                        float _3015;
                        float _3016;
                        float _2772 = _2609;
                        float _2773 = _2610;
                        float _2774 = _2611;
                        float _2775 = _2612;
                        float _2776 = _2613;
                        float _2777 = _2614;
                        uint _2778 = _2624;
                        uint _2779;
                        vec4 _2804;
                        float _2805;
                        vec4 _2820;
                        vec3 _2832;
                        vec4 _2848;
                        vec4 _2864;
                        float _2911;
                        bool _2912;
                        for (;;)
                        {
                            uint _2789 = ((_2615 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2778));
                            _2779 = (_2778 + 4294967295u) & _2778;
                            uint _2791 = _2789 * 40u;
                            _2804 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2791)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2791 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2791 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2791 + 3u)).x));
                            _2805 = _2804.w;
                            uint _2807 = (_2789 * 40u) + 4u;
                            _2820 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2807)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2807 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2807 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2807 + 3u)).x));
                            uint _2822 = (_2789 * 40u) + 8u;
                            _2832 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2822)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2822 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2822 + 2u)).x));
                            uint _2835 = (_2789 * 40u) + 16u;
                            _2848 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2835)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2835 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2835 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2835 + 3u)).x));
                            uint _2851 = (_2789 * 40u) + 20u;
                            _2864 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2851)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2851 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2851 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2851 + 3u)).x));
                            uint _2867 = (_2789 * 40u) + 24u;
                            vec4 _2880 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2867)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2867 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2867 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2867 + 3u)).x));
                            uint _2886 = (_2789 * 40u) + 28u;
                            vec4 _2899 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2886)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2886 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2886 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2886 + 3u)).x));
                            _2911 = fma(_1429, _2899.z, fma(_1428, _2899.y, _2899.x * _1427)) + _2899.w;
                            _2912 = !((fma(_1429, _2880.z, fma(_1428, _2880.y, _2880.x * _1427)) + _2880.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_2912)
                            {
                                float _2939 = _2804.x - _1427;
                                float _2940 = _2804.y - _1428;
                                float _2941 = _2804.z - _1429;
                                float _2942 = dot(vec3(_2939, _2940, _2941), vec3(_2939, _2940, _2941));
                                float _2945 = inversesqrt(_2942);
                                float _2946 = _2945 * _2939;
                                float _2947 = _2945 * _2940;
                                float _2948 = _2945 * _2941;
                                float _2952 = 1.0 - (_2942 / (_2805 * _2805));
                                float _3898 = isnan(0.0) ? _2952 : (isnan(_2952) ? 0.0 : max(_2952, 0.0));
                                float _2953 = isnan(1.0) ? _3898 : (isnan(_3898) ? 1.0 : min(_3898, 1.0));
                                float _2957 = sqrt(_2942) * _2820.w;
                                float _2959 = 1.39999997615814208984375 / (_2957 + 1.39999997615814208984375);
                                float _2960 = _2959 * _2959;
                                float _2961 = 1.0 - _2960;
                                float _2963 = (_2961 * dot(vec3(_2946, _2947, _2948), vec3(_335, _338, _341))) + _2960;
                                float _2966 = _2957 * _2957;
                                float _2970 = (fma(_1429, _2848.z, fma(_1428, _2848.y, _2848.x * _1427)) + _2848.w) / _2911;
                                float _2971 = (fma(_1429, _2864.z, fma(_1428, _2864.y, _2864.x * _1427)) + _2864.w) / _2911;
                                float _2975 = 1.0 - dot(vec2(_2970, _2971), vec2(_2970, _2971));
                                float _3914 = isnan(0.0) ? _2975 : (isnan(_2975) ? 0.0 : max(_2975, 0.0));
                                float _2976 = isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0));
                                float _2977 = _2976 * (((isnan(0.0) ? _2963 : (isnan(_2963) ? 0.0 : max(_2963, 0.0))) * _2953) / ((_2966 * 0.699999988079071044921875) + 1.0));
                                float _2987 = dot(vec3(_335, _338, _341), vec3((-0.0) - (_1427 * _2498), (-0.0) - (_1428 * _2498), (-0.0) - (_1429 * _2498)));
                                float _3925 = isnan(0.0) ? _2987 : (isnan(_2987) ? 0.0 : max(_2987, 0.0));
                                float _2995 = (_2961 * dot(vec3(_335, _338, _341), vec3(_2946, _2947, _2948))) + _2960;
                                float _3936 = isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : max(_2995, 0.0));
                                float _2996 = isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0));
                                float _3000 = (0.5 / (((isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0))) + 9.9999999392252902907785028219223e-09) + _2996)) * _2996;
                                float _3947 = isnan(0.0) ? _3000 : (isnan(_3000) ? 0.0 : max(_3000, 0.0));
                                float _3007 = (_2976 * _2953) * (((isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0))) * 3.1415927410125732421875) / ((_2966 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_80_pred = _3007 * _2832.z;
                                frontier_phi_80_pred_1 = _3007 * _2832.y;
                                frontier_phi_80_pred_2 = _3007 * _2832.x;
                                frontier_phi_80_pred_3 = _2977 * _2820.z;
                                frontier_phi_80_pred_4 = _2977 * _2820.y;
                                frontier_phi_80_pred_5 = _2977 * _2820.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3013 = frontier_phi_80_pred;
                            _3012 = frontier_phi_80_pred_1;
                            _3011 = frontier_phi_80_pred_2;
                            _3016 = frontier_phi_80_pred_3;
                            _3015 = frontier_phi_80_pred_4;
                            _3014 = frontier_phi_80_pred_5;
                            _2762 = _3014 + _2775;
                            _2763 = _3015 + _2776;
                            _2764 = _3016 + _2777;
                            _2759 = _3011 + _2772;
                            _2760 = _3012 + _2773;
                            _2761 = _3013 + _2774;
                            if (_2779 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2772 = _2759;
                                _2773 = _2760;
                                _2774 = _2761;
                                _2775 = _2762;
                                _2776 = _2763;
                                _2777 = _2764;
                                _2778 = _2779;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _2761;
                        frontier_phi_74_pred_1 = _2760;
                        frontier_phi_74_pred_2 = _2759;
                        frontier_phi_74_pred_3 = _2764;
                        frontier_phi_74_pred_4 = _2763;
                        frontier_phi_74_pred_5 = _2762;
                    }
                    _2478 = frontier_phi_74_pred;
                    _2476 = frontier_phi_74_pred_1;
                    _2474 = frontier_phi_74_pred_2;
                    _2484 = frontier_phi_74_pred_3;
                    _2482 = frontier_phi_74_pred_4;
                    _2480 = frontier_phi_74_pred_5;
                    uint _2616 = _2615 + 1u;
                    if (_2616 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2609 = _2474;
                        _2610 = _2476;
                        _2611 = _2478;
                        _2612 = _2480;
                        _2613 = _2482;
                        _2614 = _2484;
                        _2615 = _2616;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _2482;
                frontier_phi_62_63_ladder_1 = _2480;
                frontier_phi_62_63_ladder_2 = _2478;
                frontier_phi_62_63_ladder_3 = _2484;
                frontier_phi_62_63_ladder_4 = _2476;
                frontier_phi_62_63_ladder_5 = _2474;
            }
            else
            {
                frontier_phi_62_63_ladder = _2359;
                frontier_phi_62_63_ladder_1 = _2357;
                frontier_phi_62_63_ladder_2 = _2355;
                frontier_phi_62_63_ladder_3 = _2361;
                frontier_phi_62_63_ladder_4 = _2353;
                frontier_phi_62_63_ladder_5 = _2351;
            }
            _2473 = frontier_phi_62_63_ladder_5;
            _2475 = frontier_phi_62_63_ladder_4;
            _2477 = frontier_phi_62_63_ladder_2;
            _2479 = frontier_phi_62_63_ladder_1;
            _2481 = frontier_phi_62_63_ladder;
            _2483 = frontier_phi_62_63_ladder_3;
        }
        float _2488 = isnan(1.0) ? _380 : (isnan(_380) ? 1.0 : min(_380, 1.0));
        _2255 = (_2488 * _2479) + _1895;
        _2257 = (_2488 * _2481) + _1897;
        _2259 = (_2488 * _2483) + _1899;
        _2261 = ((_2473 * 0.039999999105930328369140625) * _2488) + _2137;
        _2263 = ((_2475 * 0.039999999105930328369140625) * _2488) + _2139;
        _2265 = ((_2477 * 0.039999999105930328369140625) * _2488) + _2141;
    }
    else
    {
        _2255 = _1895;
        _2257 = _1897;
        _2259 = _1899;
        _2261 = _2137;
        _2263 = _2139;
        _2265 = _2141;
    }
    uint _2271 = _356 + uint(cbMatDynParam._m0[0u].w);
    float _2277 = (_212.x * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_2271].x;
    float _2278 = (_212.y * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_2271].y;
    float _2279 = (_212.z * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_2271].z;
    float _3963 = isnan(0.0) ? _366 : (isnan(_366) ? 0.0 : max(_366, 0.0));
    float _3974 = isnan(0.0) ? _367 : (isnan(_367) ? 0.0 : max(_367, 0.0));
    float _3985 = isnan(0.0) ? _368 : (isnan(_368) ? 0.0 : max(_368, 0.0));
    float _2296 = (((isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0))) * (_2255 + ((isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0))) * _380))) + ((_2261 + ((isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0))) * _1159)) * cbPerFrame._m0[3u].x)) + _2277;
    float _2298 = (_2278 + ((_2263 + ((isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0))) * _1159)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0))) * (_2257 + ((isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0))) * _380)));
    float _2300 = (_2279 + ((_2265 + ((isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0))) * _1159)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0))) * (_2259 + ((isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0))) * _380)));
    float _4011 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2313 = isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0));
    uint _2314 = _354 + 6u;
    float _2322 = _313 / cbSceneParam._m0[86u].x;
    float _2323 = _314 / cbSceneParam._m0[86u].y;
    vec4 _2337 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2322, _2323, (log2((isnan(cbSceneParam._m0[77u].w) ? _246 : (isnan(_246) ? cbSceneParam._m0[77u].w : min(_246, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2339 = _2337.x;
    float _2340 = _2337.y;
    float _2341 = _2337.z;
    float _2342 = _2337.w;
    float _2413;
    float _2415;
    float _2417;
    float _2419;
    if (_246 > cbSceneParam._m0[78u].w)
    {
        float _2376 = isnan(_246) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _246 : min(cbSceneParam._m0[80u].w, _246));
        float _2377 = _2376 / _246;
        float _2388 = _2377 * _298;
        float _2389 = _299 * _2377;
        float _2390 = (-0.0) - _2389;
        float _2391 = _2377 * _300;
        float _2393 = (cbSceneParam._m0[77u].w * _2390) / _2376;
        float _2394 = _2393 + cbSceneParam._m0[79u].w;
        float _2395 = cbSceneParam._m0[79u].w - _2389;
        float _2401 = sqrt(((_2388 * _2388) + (_2389 * _2389)) + (_2391 * _2391));
        float _2404 = (1.0 - (cbSceneParam._m0[77u].w / _2376)) * _2401;
        float _2409 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2411 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2571;
        if (abs((_2390 - _2393) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2571 = ((((_2394 > 0.0) ? exp2(_2409 * _2394) : (2.0 - exp2(_2411 * _2394))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2404;
        }
        else
        {
            float _2531 = 1.0 / cbSceneParam._m0[80u].x;
            float _2532 = isnan(_2395) ? _2394 : (isnan(_2394) ? _2395 : max(_2394, _2395));
            float _2533 = isnan(_2395) ? _2394 : (isnan(_2394) ? _2395 : min(_2394, _2395));
            float _2542 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : min(_2532, 0.0));
            float _2543 = isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : min(_2533, 0.0));
            _2571 = ((abs(_2401 / _2390) * cbSceneParam._m0[80u].y) * ((((_2542 - _2543) * 2.0) - ((exp2(_2409 * (isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0)))) - exp2(_2409 * (isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0))))) * _2531)) - ((exp2(_2411 * _2542) - exp2(_2411 * _2543)) * _2531))) + (_2404 * cbSceneParam._m0[80u].z);
        }
        vec4 _2573 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2322, _2323, 1.0), 0.0);
        float _2582 = exp2((_2571 * (-1.44269502162933349609375)) * (1.0 - _2573.w));
        float _2583 = log2(_2582);
        float _2599 = log2(_2342);
        _2413 = (exp2(_2599 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2583 * cbSceneParam._m0[78u].x)) * _2573.x) / cbSceneParam._m0[78u].x)) + _2339;
        _2415 = (exp2(_2599 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2583 * cbSceneParam._m0[78u].y)) * _2573.y) / cbSceneParam._m0[78u].y)) + _2340;
        _2417 = (exp2(_2599 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2583 * cbSceneParam._m0[78u].z)) * _2573.z) / cbSceneParam._m0[78u].z)) + _2341;
        _2419 = _2582 * _2342;
    }
    else
    {
        _2413 = _2339;
        _2415 = _2340;
        _2417 = _2341;
        _2419 = _2342;
    }
    float _2431 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2432 = _2431 == 3.0;
    float _2434 = log2(_2419);
    float _2438 = exp2(_2434 * cbSceneParam._m0[78u].x);
    float _2439 = exp2(_2434 * cbSceneParam._m0[78u].y);
    float _2440 = exp2(_2434 * cbSceneParam._m0[78u].z);
    float _2441 = _2438 * (isnan(0.0) ? _2296 : (isnan(_2296) ? 0.0 : max(_2296, 0.0)));
    float _2442 = _2439 * (isnan(0.0) ? _2298 : (isnan(_2298) ? 0.0 : max(_2298, 0.0)));
    float _2443 = _2440 * (isnan(0.0) ? _2300 : (isnan(_2300) ? 0.0 : max(_2300, 0.0)));
    float _2452 = (_2431 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2452 * (_2432 ? _2441 : (_2441 + (cbSceneParam._m0[72u].w * _2413)));
    SV_Target.y = _2452 * (_2432 ? _2442 : (_2442 + (cbSceneParam._m0[72u].w * _2415)));
    SV_Target.z = _2452 * (_2432 ? _2443 : (_2443 + (cbSceneParam._m0[72u].w * _2417)));
    SV_Target.w = cbInstanceData._m0[_2314].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2277) * _2313) * _2438) * _2452;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2278) * _2313) * _2439) * _2452;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2279) * _2313) * _2440) * _2452;
    SV_Target_1.w = cbInstanceData._m0[_2314].w;
}


