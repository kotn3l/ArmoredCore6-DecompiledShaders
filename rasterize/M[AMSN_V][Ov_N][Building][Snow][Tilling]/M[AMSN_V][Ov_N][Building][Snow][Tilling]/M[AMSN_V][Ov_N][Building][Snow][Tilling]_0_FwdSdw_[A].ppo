#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_13;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_5;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_6;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in float TEXCOORD_4;
layout(location = 7) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1295;
float _3966;
float _3967;
float _3968;
float _3969;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _211 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _212 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _213 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _219 = inversesqrt(dot(vec3(_211, _212, _213), vec3(_211, _212, _213)));
    float _220 = _219 * _211;
    float _221 = _219 * _212;
    float _222 = _219 * _213;
    float _232 = ((NORMAL.y * TANGENT_2.z) - (NORMAL.z * TANGENT_2.y)) * TANGENT_2.w;
    float _233 = ((NORMAL.z * TANGENT_2.x) - (NORMAL.x * TANGENT_2.z)) * TANGENT_2.w;
    float _234 = ((NORMAL.x * TANGENT_2.y) - (NORMAL.y * TANGENT_2.x)) * TANGENT_2.w;
    float _238 = inversesqrt(dot(vec3(_232, _233, _234), vec3(_232, _233, _234)));
    float _239 = _238 * _232;
    float _240 = _238 * _233;
    float _241 = _238 * _234;
    float _245 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _246 = _245 * NORMAL.x;
    float _247 = _245 * NORMAL.y;
    float _248 = _245 * NORMAL.z;
    float _252 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _253 = _252 * TANGENT.x;
    float _254 = _252 * TANGENT.y;
    float _255 = _252 * TANGENT.z;
    float _259 = inversesqrt(dot(vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z), vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z)));
    float _260 = _259 * TANGENT_2.x;
    float _261 = _259 * TANGENT_2.y;
    float _262 = _259 * TANGENT_2.z;
    float _267;
    float _268;
    float _269;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _267 = (-0.0) - _246;
        _268 = (-0.0) - _247;
        _269 = (-0.0) - _248;
    }
    else
    {
        _267 = _246;
        _268 = _247;
        _269 = _248;
    }
    float _286 = (((1.0 - TEXCOORD_5.y) * (-2.7999999523162841796875)) * cbMtdParam._m0[15u].z) + 1.0;
    float _3978 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
    vec4 _302 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _305 = _302.x;
    float _315 = ((cbMtdParam._m0[15u].w * (-1.39999997615814208984375)) * ((_305 + (-1.0)) + ((1.0 - TEXCOORD_5.x) * 2.0))) + 1.0;
    float _3989 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    vec4 _331 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    float _335 = _331.z;
    float _338 = (_331.x * 2.0) + (-1.0);
    float _339 = (_331.y * 2.0) + (-1.0);
    float _340 = dot(vec2(_338, _339), vec2(_338, _339));
    float _4000 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    float _345 = sqrt(1.0 - (isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0))));
    float _348 = fma(_345, _267, fma(_339, _260, _338 * _239));
    float _351 = fma(_345, _268, fma(_339, _261, _338 * _240));
    float _354 = fma(_345, _269, fma(_339, _262, _338 * _241));
    float _358 = inversesqrt(dot(vec3(_348, _351, _354), vec3(_348, _351, _354)));
    float _359 = _358 * _348;
    float _360 = _358 * _351;
    float _361 = _358 * _354;
    float _365 = exp2(log2(_360) * cbMtdParam._m0[15u].y) * cbMtdParam._m0[15u].x;
    float _4011 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
    float _368 = ((isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0))) + (isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0)))) * (1.0 - (isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0))));
    float _373 = cbMtdParam._m0[13u].y * _305;
    float _384 = ((cbMtdParam._m0[14u].y * (-1.39999997615814208984375)) * ((TEXCOORD_5.w - _373) + (cbMtdParam._m0[13u].w * TEXCOORD_5.w))) + 1.0;
    float _4022 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0));
    float _386 = 1.0 - (isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0)));
    float _387 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
    float _388 = isnan(1.0) ? _387 : (isnan(_387) ? 1.0 : min(_387, 1.0));
    float _396 = ((cbMtdParam._m0[14u].x * (-1.39999997615814208984375)) * ((TEXCOORD_5.z - _373) + (cbMtdParam._m0[13u].z * TEXCOORD_5.z))) + 1.0;
    float _4043 = isnan(0.0) ? _396 : (isnan(_396) ? 0.0 : max(_396, 0.0));
    float _398 = 1.0 - (isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0)));
    float _399 = isnan(0.0) ? _398 : (isnan(_398) ? 0.0 : max(_398, 0.0));
    float _400 = isnan(1.0) ? _399 : (isnan(_399) ? 1.0 : min(_399, 1.0));
    vec4 _418 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.z) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.w) + cbTextureTilingScale._m0[1u].w));
    float _420 = _418.x;
    float _421 = _418.y;
    float _422 = _418.z;
    float _423 = cbMtdParam._m0[11u].x * _400;
    float _425 = cbMtdParam._m0[11u].y * _400;
    float _427 = cbMtdParam._m0[11u].z * _400;
    float _447 = _398 + _386;
    float _448 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0));
    float _449 = isnan(1.0) ? _448 : (isnan(_448) ? 1.0 : min(_448, 1.0));
    vec4 _467 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _472 = _467.w;
    float _473 = _467.x * cbMtdParam._m0[10u].x;
    float _474 = _467.y * cbMtdParam._m0[10u].y;
    float _475 = _467.z * cbMtdParam._m0[10u].z;
    float _492 = (_473 - (_449 * _473)) + ((((((_420 * (cbMtdParam._m0[9u].x - _423)) * _388) + (_423 * _420)) * 4.55000019073486328125) * _449) * _473);
    float _493 = (_474 - (_449 * _474)) + ((((((_421 * (cbMtdParam._m0[9u].y - _425)) * _388) + (_425 * _421)) * 4.55000019073486328125) * _449) * _474);
    float _494 = (_475 - (_449 * _475)) + ((((((_422 * (cbMtdParam._m0[9u].z - _427)) * _388) + (_427 * _422)) * 4.55000019073486328125) * _449) * _475);
    float _4074 = isnan(0.0) ? _368 : (isnan(_368) ? 0.0 : max(_368, 0.0));
    float _495 = isnan(1.0) ? _4074 : (isnan(_4074) ? 1.0 : min(_4074, 1.0));
    float _497 = 3.0 - (_495 * 2.0);
    float _499 = _495 * _495;
    float _509 = ((_499 * (cbMtdParam._m0[12u].x - _492)) * _497) + _492;
    float _510 = ((_499 * (cbMtdParam._m0[12u].y - _493)) * _497) + _493;
    float _511 = ((_499 * (cbMtdParam._m0[12u].z - _494)) * _497) + _494;
    vec4 _528 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w));
    float _535 = (_528.x * 2.0) + (-1.0);
    float _536 = (_528.y * 2.0) + (-1.0);
    float _537 = dot(vec2(_535, _536), vec2(_535, _536));
    float _4085 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _545 = ((_528.z - _335) * _368) + _335;
    vec4 _557 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _563 = (_557.x * 2.0) + (-1.0);
    float _564 = (_557.y * 2.0) + (-1.0);
    float _565 = dot(vec2(_563, _564), vec2(_563, _564));
    float _4096 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _570 = sqrt(1.0 - (isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0))));
    float _573 = fma(_570, _267, fma(_564, _260, _563 * _239));
    float _576 = fma(_570, _268, fma(_564, _261, _563 * _240));
    float _579 = fma(_570, _269, fma(_564, _262, _563 * _241));
    float _583 = inversesqrt(dot(vec3(_573, _576, _579), vec3(_573, _576, _579)));
    float _584 = _583 * _573;
    float _585 = _583 * _576;
    float _586 = _583 * _579;
    float _589 = fma(_586, _222, fma(_585, _221, _584 * _220));
    float _592 = fma(_586, _255, fma(_585, _254, _584 * _253));
    float _595 = fma(_586, _269, fma(_585, _268, _584 * _267));
    float _599 = inversesqrt(dot(vec3(_589, _592, _595), vec3(_589, _592, _595)));
    float _603 = fma(_361, _222, fma(_360, _221, _359 * _220));
    float _606 = fma(_361, _255, fma(_360, _254, _359 * _253));
    float _609 = fma(_361, _269, fma(_360, _268, _359 * _267));
    float _613 = inversesqrt(dot(vec3(_603, _606, _609), vec3(_603, _606, _609)));
    float _616 = _613 * _609;
    vec4 _629 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Snow_Tilling_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w));
    float _635 = (_629.x * 2.0) + (-1.0);
    float _636 = (_629.y * 2.0) + (-1.0);
    float _637 = dot(vec2(_635, _636), vec2(_635, _636));
    float _4107 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _642 = sqrt(1.0 - (isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0))));
    float _645 = fma(_642, _267, fma(_636, _260, _635 * _239));
    float _648 = fma(_642, _268, fma(_636, _261, _635 * _240));
    float _651 = fma(_642, _269, fma(_636, _262, _635 * _241));
    float _655 = inversesqrt(dot(vec3(_645, _648, _651), vec3(_645, _648, _651)));
    float _656 = _655 * _645;
    float _657 = _655 * _648;
    float _658 = _655 * _651;
    float _661 = fma(_658, _222, fma(_657, _221, _656 * _220));
    float _664 = fma(_658, _255, fma(_657, _254, _656 * _253));
    float _667 = fma(_658, _269, fma(_657, _268, _656 * _267));
    float _671 = inversesqrt(dot(vec3(_661, _664, _667), vec3(_661, _664, _667)));
    float _686 = ((_613 * _603) + (((_589 * _388) * _599) * cbMtdParam._m0[14u].w)) + (((_661 * _400) * _671) * cbMtdParam._m0[14u].z);
    float _688 = ((_613 * _606) + (((_592 * _388) * _599) * cbMtdParam._m0[14u].w)) + (((_664 * _400) * _671) * cbMtdParam._m0[14u].z);
    float _695 = ((_535 - _686) * _368) + _686;
    float _696 = (_368 * (_536 - _688)) + _688;
    float _697 = (_368 * (sqrt(1.0 - (isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0)))) - _616)) + _616;
    float _700 = fma(_697, _267, fma(_696, _253, _695 * _220));
    float _703 = fma(_697, _268, fma(_696, _254, _695 * _221));
    float _706 = fma(_697, _269, fma(_696, _255, _695 * _222));
    float _710 = inversesqrt(dot(vec3(_700, _703, _706), vec3(_700, _703, _706)));
    float _711 = _710 * _700;
    float _712 = _710 * _703;
    float _713 = _710 * _706;
    float _4118 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _714 = isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0));
    float _4129 = isnan(0.0) ? _545 : (isnan(_545) ? 0.0 : max(_545, 0.0));
    float _715 = isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0));
    float _4140 = isnan(0.0) ? _509 : (isnan(_509) ? 0.0 : max(_509, 0.0));
    float _4151 = isnan(0.0) ? _510 : (isnan(_510) ? 0.0 : max(_510, 0.0));
    float _4162 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    float _4173 = isnan(0.0) ? cbMtdParam._m0[16u].x : (isnan(cbMtdParam._m0[16u].x) ? 0.0 : max(cbMtdParam._m0[16u].x, 0.0));
    float _719 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
    float _735 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _776 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _786 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _776);
    float _787 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _776);
    float _788 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _776);
    float _792 = inversesqrt(dot(vec3(_786, _787, _788), vec3(_786, _787, _788)));
    float _793 = _786 * _792;
    float _794 = _787 * _792;
    float _795 = _788 * _792;
    vec4 _800 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _802 = _800.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _974 = sqrt(((_786 * _786) + (_787 * _787)) + (_788 * _788));
        float _980 = (cbMatDynParam._m0[5u].x * _974) + cbMatDynParam._m0[5u].y;
        float _4184 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
        float _981 = isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0));
        float _985 = (cbMatDynParam._m0[5u].z * _974) + cbMatDynParam._m0[5u].w;
        float _4195 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0))) - _981)) + _981) < ((_802 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _813 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _814 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _833 = fma(_713, cbSceneParam._m0[5u].z, fma(_712, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _711));
    float _836 = fma(_713, cbSceneParam._m0[6u].z, fma(_712, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _711));
    float _839 = fma(_713, cbSceneParam._m0[7u].z, fma(_712, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _711));
    uint _852 = uint(roundEven(NORMAL.w)) * 13u;
    uint _853 = _852 + 9u;
    uint _854 = _853 + uint(cbMatDynParam._m0[0u].w);
    float _860 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0)))) * cbInstanceData._m0[_854].x;
    float _861 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0)))) * cbInstanceData._m0[_854].y;
    float _862 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0)))) * cbInstanceData._m0[_854].z;
    float _4206 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
    float _863 = isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0));
    float _4217 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
    float _864 = isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0));
    float _4228 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _865 = isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0));
    float _866 = 1.0 - _719;
    float _867 = _863 * _866;
    float _868 = _864 * _866;
    float _869 = _865 * _866;
    float _874 = (_863 + (-0.039999999105930328369140625)) * _719;
    float _875 = (_864 + (-0.039999999105930328369140625)) * _719;
    float _876 = (_865 + (-0.039999999105930328369140625)) * _719;
    float _877 = _874 + 0.039999999105930328369140625;
    float _879 = _875 + 0.039999999105930328369140625;
    float _880 = _876 + 0.039999999105930328369140625;
    vec4 _889 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _813, cbSceneParam._m0[86u].y * _814));
    float _892 = _889.x * TEXCOORD_4;
    float _893 = dot(vec3(_711, _712, _713), vec3(_793, _794, _795));
    float _896 = _893 * 2.0;
    float _900 = (_896 * _711) - _793;
    float _901 = (_896 * _712) - _794;
    float _902 = (_896 * _713) - _795;
    float _906 = abs(dot(vec3(_793, _794, _795), vec3(_711, _712, _713)));
    float _4239 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _908 = sqrt(_715);
    float _920 = exp2((_908 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_908 * 3.0));
    float _926 = (1.0 - _920) * ((_908 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _927 = _920 * _908;
    float _955 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _959 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _963 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1294;
    float _1296;
    float _1297;
    float _1298;
    float _1299;
    float _1300;
    float _1301;
    float _1302;
    float _1303;
    float _1304;
    float _1305;
    float _1306;
    float _1307;
    float _1308;
    float _1309;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1019 = fma(_963, cbModelParam._m0[26u].z, fma(_959, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _955));
        float _1023 = fma(_963, cbModelParam._m0[27u].z, fma(_959, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _955));
        float _1027 = fma(_963, cbModelParam._m0[28u].z, fma(_959, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _955));
        float _1052 = _955 + _711;
        float _1053 = _959 + _712;
        float _1054 = _963 + _713;
        float _1064 = fma(_1054, cbModelParam._m0[26u].z, fma(_1053, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1052)) - _1019;
        float _1065 = fma(_1054, cbModelParam._m0[27u].z, fma(_1053, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1052)) - _1023;
        float _1066 = fma(_1054, cbModelParam._m0[28u].z, fma(_1053, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1052)) - _1027;
        float _1070 = inversesqrt(dot(vec3(_1064, _1065, _1066), vec3(_1064, _1065, _1066)));
        float _1083 = ((_1070 * _1064) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1019 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1084 = ((_1070 * _1065) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1023 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1085 = ((_1070 * _1066) / cbModelParam._m0[34u].z) + ((((((_1027 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1088 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1083, _1084, _1085), 0.0);
        vec4 _1095 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1083, _1084, _1085), 0.0);
        vec4 _1102 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1083, _1084, _1085), 0.0);
        vec4 _1109 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1083, _1084, _1085), 0.0);
        float _1122 = exp2((_1088.w + (-0.5)) * 20.0) * 2.0;
        float _1123 = _1122 * (_1088.x + (-0.5));
        float _1124 = _1122 * (_1088.y + (-0.5));
        float _1125 = _1122 * (_1088.z + (-0.5));
        float _1132 = exp2((_1095.w + (-0.5)) * 20.0) * 2.0;
        float _1133 = _1132 * (_1095.x + (-0.5));
        float _1134 = _1132 * (_1095.y + (-0.5));
        float _1135 = _1132 * (_1095.z + (-0.5));
        float _1142 = exp2((_1102.w + (-0.5)) * 20.0) * 2.0;
        float _1143 = _1142 * (_1102.x + (-0.5));
        float _1144 = _1142 * (_1102.y + (-0.5));
        float _1145 = _1142 * (_1102.z + (-0.5));
        float _1152 = exp2((_1109.w + (-0.5)) * 20.0) * 2.0;
        float _1153 = _1152 * (_1109.x + (-0.5));
        float _1154 = _1152 * (_1109.y + (-0.5));
        float _1155 = _1152 * (_1109.z + (-0.5));
        float _1156 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1157 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
        float _1158 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
        float _1159 = _1123 * 0.5;
        float _1160 = _1133 * 0.5;
        float _1161 = _1143 * 0.5;
        float _1162 = dot(vec3(_1159, _1160, _1161), vec3(_1159, _1160, _1161));
        float _1167 = (_1162 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1162);
        float _1176 = (dot(vec3(_711, _712, _713), vec3(_1167 * _1159, _1167 * _1160, _1167 * _1161)) + 1.0) * 0.5;
        float _4265 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
        float _1186 = sqrt(((_1160 * _1160) + (_1159 * _1159)) + (_1161 * _1161)) / (_1156 + 9.9999997473787516355514526367188e-06);
        float _4276 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1187 = isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0));
        float _1188 = _1187 * 2.0;
        float _1192 = (1.0 - _1187) / (_1187 + 1.0);
        float _4287 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
        float _1193 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
        float _1202 = ((((1.0 - _1193) * (_1188 + 2.0)) * exp2(log2(isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0))) * (_1188 + 1.0))) + _1193) * _1156;
        float _1203 = _1124 * 0.5;
        float _1204 = _1134 * 0.5;
        float _1205 = _1144 * 0.5;
        float _1206 = dot(vec3(_1203, _1204, _1205), vec3(_1203, _1204, _1205));
        float _1211 = (_1206 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1206);
        float _1219 = (dot(vec3(_711, _712, _713), vec3(_1211 * _1203, _1211 * _1204, _1211 * _1205)) + 1.0) * 0.5;
        float _4298 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
        float _1228 = sqrt(((_1204 * _1204) + (_1203 * _1203)) + (_1205 * _1205)) / (_1157 + 9.9999997473787516355514526367188e-06);
        float _4309 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1229 = isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0));
        float _1230 = _1229 * 2.0;
        float _1234 = (1.0 - _1229) / (_1229 + 1.0);
        float _4320 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
        float _1235 = isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0));
        float _1244 = ((((1.0 - _1235) * (_1230 + 2.0)) * exp2(log2(isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0))) * (_1230 + 1.0))) + _1235) * _1157;
        float _1245 = _1125 * 0.5;
        float _1246 = _1135 * 0.5;
        float _1247 = _1145 * 0.5;
        float _1248 = dot(vec3(_1245, _1246, _1247), vec3(_1245, _1246, _1247));
        float _1253 = (_1248 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1248);
        float _1261 = (dot(vec3(_711, _712, _713), vec3(_1253 * _1245, _1253 * _1246, _1253 * _1247)) + 1.0) * 0.5;
        float _4331 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
        float _1270 = sqrt(((_1246 * _1246) + (_1245 * _1245)) + (_1247 * _1247)) / (_1158 + 9.9999997473787516355514526367188e-06);
        float _4342 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
        float _1271 = isnan(1.0) ? _4342 : (isnan(_4342) ? 1.0 : min(_4342, 1.0));
        float _1272 = _1271 * 2.0;
        float _1276 = (1.0 - _1271) / (_1271 + 1.0);
        float _4353 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1277 = isnan(1.0) ? _4353 : (isnan(_4353) ? 1.0 : min(_4353, 1.0));
        float _1286 = ((((1.0 - _1277) * (_1272 + 2.0)) * exp2(log2(isnan(1.0) ? _4331 : (isnan(_4331) ? 1.0 : min(_4331, 1.0))) * (_1272 + 1.0))) + _1277) * _1158;
        _1294 = _1125;
        _1296 = _1124;
        _1297 = _1123;
        _1298 = _1135;
        _1299 = _1134;
        _1300 = _1133;
        _1301 = _1145;
        _1302 = _1144;
        _1303 = _1143;
        _1304 = _1158;
        _1305 = _1157;
        _1306 = _1156;
        _1307 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0)));
        _1308 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0)));
        _1309 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0)));
    }
    else
    {
        _1294 = _1295;
        _1296 = _1295;
        _1297 = _1295;
        _1298 = _1295;
        _1299 = _1295;
        _1300 = _1295;
        _1301 = _1295;
        _1302 = _1295;
        _1303 = _1295;
        _1304 = _1295;
        _1305 = _1295;
        _1306 = _1295;
        _1307 = 0.0;
        _1308 = 0.0;
        _1309 = 0.0;
    }
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1338 = fma(_963, cbModelParam._m0[30u].z, fma(_959, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _955));
        float _1342 = fma(_963, cbModelParam._m0[31u].z, fma(_959, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _955));
        float _1346 = fma(_963, cbModelParam._m0[32u].z, fma(_959, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _955));
        float _1369 = _955 + _711;
        float _1370 = _959 + _712;
        float _1371 = _963 + _713;
        float _1381 = fma(_1371, cbModelParam._m0[30u].z, fma(_1370, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1369)) - _1338;
        float _1382 = fma(_1371, cbModelParam._m0[31u].z, fma(_1370, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1369)) - _1342;
        float _1383 = fma(_1371, cbModelParam._m0[32u].z, fma(_1370, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1369)) - _1346;
        float _1387 = inversesqrt(dot(vec3(_1381, _1382, _1383), vec3(_1381, _1382, _1383)));
        float _1400 = ((_1387 * _1381) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1338 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1401 = ((_1387 * _1382) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1342 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1402 = ((_1387 * _1383) / cbModelParam._m0[35u].z) + ((((((_1346 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1404 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1400, _1401, _1402), 0.0);
        vec4 _1411 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1400, _1401, _1402), 0.0);
        vec4 _1418 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1400, _1401, _1402), 0.0);
        vec4 _1425 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1400, _1401, _1402), 0.0);
        float _1437 = exp2((_1404.w + (-0.5)) * 20.0) * 2.0;
        float _1438 = _1437 * (_1404.x + (-0.5));
        float _1439 = _1437 * (_1404.y + (-0.5));
        float _1440 = _1437 * (_1404.z + (-0.5));
        float _1447 = exp2((_1411.w + (-0.5)) * 20.0) * 2.0;
        float _1448 = _1447 * (_1411.x + (-0.5));
        float _1449 = _1447 * (_1411.y + (-0.5));
        float _1450 = _1447 * (_1411.z + (-0.5));
        float _1457 = exp2((_1418.w + (-0.5)) * 20.0) * 2.0;
        float _1458 = _1457 * (_1418.x + (-0.5));
        float _1459 = _1457 * (_1418.y + (-0.5));
        float _1460 = _1457 * (_1418.z + (-0.5));
        float _1467 = exp2((_1425.w + (-0.5)) * 20.0) * 2.0;
        float _1468 = _1467 * (_1425.x + (-0.5));
        float _1469 = _1467 * (_1425.y + (-0.5));
        float _1470 = _1467 * (_1425.z + (-0.5));
        float _1471 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
        float _1472 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
        float _1473 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1474 = _1438 * 0.5;
        float _1475 = _1448 * 0.5;
        float _1476 = _1458 * 0.5;
        float _1477 = dot(vec3(_1474, _1475, _1476), vec3(_1474, _1475, _1476));
        float _1482 = (_1477 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1477);
        float _1490 = (dot(vec3(_711, _712, _713), vec3(_1482 * _1474, _1482 * _1475, _1482 * _1476)) + 1.0) * 0.5;
        float _4394 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
        float _1499 = sqrt(((_1475 * _1475) + (_1474 * _1474)) + (_1476 * _1476)) / (_1471 + 9.9999997473787516355514526367188e-06);
        float _4405 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
        float _1500 = isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0));
        float _1501 = _1500 * 2.0;
        float _1505 = (1.0 - _1500) / (_1500 + 1.0);
        float _4416 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1506 = isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0));
        float _1515 = ((((1.0 - _1506) * (_1501 + 2.0)) * exp2(log2(isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0))) * (_1501 + 1.0))) + _1506) * _1471;
        float _1516 = _1439 * 0.5;
        float _1517 = _1449 * 0.5;
        float _1518 = _1459 * 0.5;
        float _1519 = dot(vec3(_1516, _1517, _1518), vec3(_1516, _1517, _1518));
        float _1524 = (_1519 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1519);
        float _1532 = (dot(vec3(_711, _712, _713), vec3(_1524 * _1516, _1524 * _1517, _1524 * _1518)) + 1.0) * 0.5;
        float _4427 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
        float _1541 = sqrt(((_1517 * _1517) + (_1516 * _1516)) + (_1518 * _1518)) / (_1472 + 9.9999997473787516355514526367188e-06);
        float _4438 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
        float _1542 = isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0));
        float _1543 = _1542 * 2.0;
        float _1547 = (1.0 - _1542) / (_1542 + 1.0);
        float _4449 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
        float _1548 = isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0));
        float _1557 = ((((1.0 - _1548) * (_1543 + 2.0)) * exp2(log2(isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0))) * (_1543 + 1.0))) + _1548) * _1472;
        float _1558 = _1440 * 0.5;
        float _1559 = _1450 * 0.5;
        float _1560 = _1460 * 0.5;
        float _1561 = dot(vec3(_1558, _1559, _1560), vec3(_1558, _1559, _1560));
        float _1566 = (_1561 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1561);
        float _1574 = (dot(vec3(_711, _712, _713), vec3(_1566 * _1558, _1566 * _1559, _1566 * _1560)) + 1.0) * 0.5;
        float _4460 = isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0));
        float _1583 = sqrt(((_1559 * _1559) + (_1558 * _1558)) + (_1560 * _1560)) / (_1473 + 9.9999997473787516355514526367188e-06);
        float _4471 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
        float _1584 = isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0));
        float _1585 = _1584 * 2.0;
        float _1589 = (1.0 - _1584) / (_1584 + 1.0);
        float _4482 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1590 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
        float _1599 = ((((1.0 - _1590) * (_1585 + 2.0)) * exp2(log2(isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0))) * (_1585 + 1.0))) + _1590) * _1473;
        _1607 = _1440;
        _1608 = _1439;
        _1609 = _1438;
        _1610 = _1450;
        _1611 = _1449;
        _1612 = _1448;
        _1613 = _1460;
        _1614 = _1459;
        _1615 = _1458;
        _1616 = _1473;
        _1617 = _1472;
        _1618 = _1471;
        _1619 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0)));
        _1620 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0)));
        _1621 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0)));
    }
    else
    {
        _1607 = _1295;
        _1608 = _1295;
        _1609 = _1295;
        _1610 = _1295;
        _1611 = _1295;
        _1612 = _1295;
        _1613 = _1295;
        _1614 = _1295;
        _1615 = _1295;
        _1616 = _1295;
        _1617 = _1295;
        _1618 = _1295;
        _1619 = 0.0;
        _1620 = 0.0;
        _1621 = 0.0;
    }
    float _1631 = (cbModelParam._m0[1u].x * (_1619 - _1307)) + _1307;
    float _1632 = (cbModelParam._m0[1u].x * (_1620 - _1308)) + _1308;
    float _1633 = (cbModelParam._m0[1u].x * (_1621 - _1309)) + _1309;
    float _1654 = fma(_1633, cbSceneParam._m0[89u].z, fma(_1632, cbSceneParam._m0[89u].y, _1631 * cbSceneParam._m0[89u].x));
    float _1657 = fma(_1633, cbSceneParam._m0[90u].z, fma(_1632, cbSceneParam._m0[90u].y, _1631 * cbSceneParam._m0[90u].x));
    float _1660 = fma(_1633, cbSceneParam._m0[91u].z, fma(_1632, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1631));
    float _1675 = _900 * 0.5;
    float _1676 = _901 * 0.5;
    float _1677 = _902 * 0.5;
    float _1678 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1609, _1612, _1615, _1618));
    float _1681 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1608, _1611, _1614, _1617));
    float _1684 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1607, _1610, _1613, _1616));
    float _1718;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1691 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1294, _1298, _1301, _1304));
        float _1695 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1296, _1299, _1302, _1305));
        float _1699 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1297, _1300, _1303, _1306));
        float _1706 = dot(vec4(cbModelParam._m0[39u]), vec4(_1675, _1676, _1677, 1.0));
        _1718 = dot(vec3(isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0)), isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0)), isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1706) ? 0.0 : (isnan(0.0) ? _1706 : max(0.0, _1706))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1718 = 1.0;
    }
    float _1729;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1720 = dot(vec4(cbModelParam._m0[40u]), vec4(_1675, _1676, _1677, 1.0));
        _1729 = dot(vec3(isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0)), isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0)), isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1720) ? 0.0 : (isnan(0.0) ? _1720 : max(0.0, _1720))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1729 = 1.0;
    }
    float _1733 = (_1729 * cbModelParam._m0[1u].x) + (_1718 * (1.0 - cbModelParam._m0[1u].x));
    float _1743 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _715);
    float _1744 = isnan(_1743) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1743 : min(cbModelParam._m0[25u].z, _1743));
    float _1824;
    float _1826;
    float _1828;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1791 = fma(_963, cbModelParam._m0[13u].z, fma(_959, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _955)) + cbModelParam._m0[13u].w;
        float _1795 = fma(_963, cbModelParam._m0[14u].z, fma(_959, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _955)) + cbModelParam._m0[14u].w;
        float _1799 = fma(_963, cbModelParam._m0[15u].z, fma(_959, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _955)) + cbModelParam._m0[15u].w;
        float _1802 = fma(_902, cbModelParam._m0[13u].z, fma(_901, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _900));
        float _1805 = fma(_902, cbModelParam._m0[14u].z, fma(_901, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _900));
        float _1808 = fma(_902, cbModelParam._m0[15u].z, fma(_901, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _900));
        float _1836;
        if (_1802 > 0.0)
        {
            _1836 = abs((1.0 - _1791) / _1802);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1802 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1791 + 1.0) / _1802);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1836 = frontier_phi_19_17_ladder;
        }
        float _2011;
        if (_1805 > 0.0)
        {
            _2011 = abs((1.0 - _1795) / _1805);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1805 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1795 + 1.0) / _1805);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2011 = frontier_phi_28_24_ladder;
        }
        float _2306;
        if (_1808 > 0.0)
        {
            _2306 = abs((1.0 - _1799) / _1808);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1808 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1799 + 1.0) / _1808);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2306 = frontier_phi_40_35_ladder;
        }
        float _2308 = isnan(_2011) ? _1836 : (isnan(_1836) ? _2011 : min(_1836, _2011));
        float _2309 = isnan(_2306) ? _2308 : (isnan(_2308) ? _2306 : min(_2308, _2306));
        float _2313 = (_2309 * _1802) + _1791;
        float _2314 = (_2309 * _1805) + _1795;
        float _2315 = (_2309 * _1808) + _1799;
        float _2316 = _2309 * 9.9999997473787516355514526367188e-05;
        float _2318 = (-1.0) - _2316;
        float _2320 = _2316 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2315 > _2320) || ((_2315 < _2318) || ((_2314 > _2320) || ((_2314 < _2318) || ((_2313 < _2318) || (_2313 > _2320))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2460 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2315, cbModelParam._m0[9u].z, fma(_2314, cbModelParam._m0[9u].y, _2313 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2315, cbModelParam._m0[10u].z, fma(_2314, cbModelParam._m0[10u].y, _2313 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2315, cbModelParam._m0[11u].z, fma(_2314, cbModelParam._m0[11u].y, _2313 * cbModelParam._m0[11u].x))), _1744);
            frontier_phi_18_40_ladder = _2460.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2460.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2460.x * cbModelParam._m0[1u].y;
        }
        _1824 = frontier_phi_18_40_ladder_2;
        _1826 = frontier_phi_18_40_ladder_1;
        _1828 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1812 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_900, _901, _902), _1744);
        _1824 = _1812.x * cbModelParam._m0[1u].y;
        _1826 = _1812.y * cbModelParam._m0[1u].y;
        _1828 = _1812.z * cbModelParam._m0[1u].y;
    }
    float _1832 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _715);
    float _1833 = isnan(_1832) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1832 : min(cbModelParam._m0[25u].w, _1832));
    float _1926;
    float _1928;
    float _1930;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1890 = fma(_963, cbModelParam._m0[21u].z, fma(_959, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _955)) + cbModelParam._m0[21u].w;
        float _1894 = fma(_963, cbModelParam._m0[22u].z, fma(_959, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _955)) + cbModelParam._m0[22u].w;
        float _1898 = fma(_963, cbModelParam._m0[23u].z, fma(_959, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _955)) + cbModelParam._m0[23u].w;
        float _1901 = fma(_902, cbModelParam._m0[21u].z, fma(_901, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _900));
        float _1904 = fma(_902, cbModelParam._m0[22u].z, fma(_901, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _900));
        float _1907 = fma(_902, cbModelParam._m0[23u].z, fma(_901, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _900));
        float _2016;
        if (_1901 > 0.0)
        {
            _2016 = abs((1.0 - _1890) / _1901);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1901 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1890 + 1.0) / _1901);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2016 = frontier_phi_30_26_ladder;
        }
        float _2333;
        if (_1904 > 0.0)
        {
            _2333 = abs((1.0 - _1894) / _1904);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1904 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1894 + 1.0) / _1904);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2333 = frontier_phi_42_37_ladder;
        }
        float _2671;
        if (_1907 > 0.0)
        {
            _2671 = abs((1.0 - _1898) / _1907);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_1907 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_1898 + 1.0) / _1907);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2671 = frontier_phi_52_49_ladder;
        }
        float _2673 = isnan(_2333) ? _2016 : (isnan(_2016) ? _2333 : min(_2016, _2333));
        float _2674 = isnan(_2671) ? _2673 : (isnan(_2673) ? _2671 : min(_2673, _2671));
        float _2678 = (_2674 * _1901) + _1890;
        float _2679 = (_2674 * _1904) + _1894;
        float _2680 = (_2674 * _1907) + _1898;
        float _2681 = _2674 * 9.9999997473787516355514526367188e-05;
        float _2682 = (-1.0) - _2681;
        float _2684 = _2681 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2680 > _2684) || ((_2680 < _2682) || ((_2679 > _2684) || ((_2679 < _2682) || ((_2678 < _2682) || (_2678 > _2684))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2802 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2680, cbModelParam._m0[17u].z, fma(_2679, cbModelParam._m0[17u].y, _2678 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2680, cbModelParam._m0[18u].z, fma(_2679, cbModelParam._m0[18u].y, _2678 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2680, cbModelParam._m0[19u].z, fma(_2679, cbModelParam._m0[19u].y, _2678 * cbModelParam._m0[19u].x))), _1833);
            frontier_phi_27_52_ladder = _2802.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2802.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2802.x * cbModelParam._m0[1u].z;
        }
        _1926 = frontier_phi_27_52_ladder_2;
        _1928 = frontier_phi_27_52_ladder_1;
        _1930 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1910 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_900, _901, _902), _1833);
        _1926 = _1910.x * cbModelParam._m0[1u].z;
        _1928 = _1910.y * cbModelParam._m0[1u].z;
        _1930 = _1910.z * cbModelParam._m0[1u].z;
    }
    float _1943 = (((_926 * _877) + _927) * _892) * ((cbModelParam._m0[1u].w * (_1926 - _1824)) + _1824);
    float _1945 = (((_926 * _879) + _927) * _892) * ((cbModelParam._m0[1u].w * (_1928 - _1826)) + _1826);
    float _1947 = (((_926 * _880) + _927) * _892) * ((cbModelParam._m0[1u].w * (_1930 - _1828)) + _1828);
    float _1950 = fma(_1947, cbSceneParam._m0[89u].z, fma(_1945, cbSceneParam._m0[89u].y, _1943 * cbSceneParam._m0[89u].x));
    float _1953 = fma(_1947, cbSceneParam._m0[90u].z, fma(_1945, cbSceneParam._m0[90u].y, _1943 * cbSceneParam._m0[90u].x));
    float _1956 = fma(_1947, cbSceneParam._m0[91u].z, fma(_1945, cbSceneParam._m0[91u].y, _1943 * cbSceneParam._m0[91u].x));
    float _1990 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1994 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1998 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2002 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2003 = _1990 / _2002;
    float _2004 = _1994 / _2002;
    float _2005 = _1998 / _2002;
    float _2152;
    float _2153;
    float _2154;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2032 = ((uint(_2005 > cbSceneParam._m0[59u].y) + uint(_2005 > cbSceneParam._m0[59u].x)) + uint(_2005 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2033 = _2032 + 43u;
        uint _2041 = _2032 + 44u;
        uint _2049 = _2032 + 45u;
        uint _2057 = _2032 + 46u;
        float _2068 = fma(_2002, cbSceneParam._m0[_2033].w, fma(_1998, cbSceneParam._m0[_2033].z, fma(_1994, cbSceneParam._m0[_2033].y, _1990 * cbSceneParam._m0[_2033].x)));
        float _2072 = fma(_2002, cbSceneParam._m0[_2041].w, fma(_1998, cbSceneParam._m0[_2041].z, fma(_1994, cbSceneParam._m0[_2041].y, _1990 * cbSceneParam._m0[_2041].x)));
        float _2080 = fma(_2002, cbSceneParam._m0[_2057].w, fma(_1998, cbSceneParam._m0[_2057].z, fma(_1994, cbSceneParam._m0[_2057].y, _1990 * cbSceneParam._m0[_2057].x)));
        float _2085 = cbSceneParam._m0[33u].z * _2080;
        float _2087 = cbSceneParam._m0[33u].w * _2080;
        float _2090 = fma(_2002, cbSceneParam._m0[_2049].w, fma(_1998, cbSceneParam._m0[_2049].z, fma(_1994, cbSceneParam._m0[_2049].y, _1990 * cbSceneParam._m0[_2049].x))) / _2080;
        float _2138 = (cbSceneParam._m0[33u].x - sqrt(((_2004 * _2004) + (_2003 * _2003)) + (_2005 * _2005))) * cbSceneParam._m0[33u].y;
        float _4608 = isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0));
        float _2145 = (isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2085 + _2068) / _2080, (_2087 + _2072) / _2080), _2090), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2087 + _2068) / _2080, (_2072 - _2085) / _2080), _2090), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2068 - _2085) / _2080, (_2072 - _2087) / _2080), _2090), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2068 - _2087) / _2080, (_2085 + _2072) / _2080), _2090), 0.0)).x), vec4(0.25)));
        _2152 = 1.0 - (_2145 * cbSceneParam._m0[34u].x);
        _2153 = 1.0 - (_2145 * cbSceneParam._m0[34u].y);
        _2154 = 1.0 - (_2145 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2152 = 1.0;
        _2153 = 1.0;
        _2154 = 1.0;
    }
    float _2218;
    float _2220;
    float _2222;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2206 = fma(_2002, cbSceneParam._m0[63u].w, fma(_1998, cbSceneParam._m0[63u].z, fma(_1994, cbSceneParam._m0[63u].y, _1990 * cbSceneParam._m0[63u].x)));
        float _2207 = fma(_2002, cbSceneParam._m0[60u].w, fma(_1998, cbSceneParam._m0[60u].z, fma(_1994, cbSceneParam._m0[60u].y, _1990 * cbSceneParam._m0[60u].x))) / _2206;
        float _2208 = fma(_2002, cbSceneParam._m0[61u].w, fma(_1998, cbSceneParam._m0[61u].z, fma(_1994, cbSceneParam._m0[61u].y, _1990 * cbSceneParam._m0[61u].x))) / _2206;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2207 >= cbSceneParam._m0[64u].x) && (_2208 >= cbSceneParam._m0[64u].y)) && (_2207 <= cbSceneParam._m0[64u].z)) && (_2208 <= cbSceneParam._m0[64u].w))
        {
            float _2346 = fma(_2002, cbSceneParam._m0[62u].w, fma(_1998, cbSceneParam._m0[62u].z, fma(_1994, cbSceneParam._m0[62u].y, _1990 * cbSceneParam._m0[62u].x))) / _2206;
            float _2350 = isnan(cbSceneParam._m0[41u].w) ? _2346 : (isnan(_2346) ? cbSceneParam._m0[41u].w : max(_2346, cbSceneParam._m0[41u].w));
            float _2393 = (cbSceneParam._m0[33u].x - sqrt(((_2004 * _2004) + (_2003 * _2003)) + (_2005 * _2005))) * cbSceneParam._m0[33u].y;
            float _4624 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
            float _2400 = (isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2207, cbSceneParam._m0[33u].w + _2208), _2350), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2207, _2208 - cbSceneParam._m0[33u].z), _2350), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2207 - cbSceneParam._m0[33u].z, _2208 - cbSceneParam._m0[33u].w), _2350), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2207 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2208), _2350), 0.0)).x), vec4(0.25)));
            float _2404 = 1.0 - (_2400 * cbSceneParam._m0[34u].x);
            float _2405 = 1.0 - (_2400 * cbSceneParam._m0[34u].y);
            float _2406 = 1.0 - (_2400 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2405) ? _2153 : (isnan(_2153) ? _2405 : min(_2153, _2405));
            frontier_phi_39_38_ladder_1 = isnan(_2404) ? _2152 : (isnan(_2152) ? _2404 : min(_2152, _2404));
            frontier_phi_39_38_ladder_2 = isnan(_2406) ? _2154 : (isnan(_2154) ? _2406 : min(_2154, _2406));
        }
        else
        {
            frontier_phi_39_38_ladder = _2153;
            frontier_phi_39_38_ladder_1 = _2152;
            frontier_phi_39_38_ladder_2 = _2154;
        }
        _2218 = frontier_phi_39_38_ladder_1;
        _2220 = frontier_phi_39_38_ladder;
        _2222 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _2218 = _2152;
        _2220 = _2153;
        _2222 = _2154;
    }
    uvec4 _2227 = floatBitsToUint(cbInstanceData._m0[_852 + 5u]);
    uint _2229 = _2227.x * 14u;
    uint _2230 = _2229 + 13u;
    float _2237 = _892 + (-1.0);
    float _2242 = (cbLight._m0[_2230].x * _2237) + 1.0;
    float _2243 = (cbLight._m0[_2230].y * _2237) + 1.0;
    float _2244 = (cbLight._m0[_2230].z * _2237) + 1.0;
    float _2245 = (cbLight._m0[_2230].w * _2237) + 1.0;
    uint _2246 = _2229 + 5u;
    float _2252 = isnan(1.0) ? _2243 : (isnan(_2243) ? 1.0 : min(_2243, 1.0));
    uint _2256 = _2229 + 4u;
    float _2265 = isnan(1.0) ? _2242 : (isnan(_2242) ? 1.0 : min(_2242, 1.0));
    uint _2269 = _2229 | 1u;
    float _2280 = dot(vec3(cbLight._m0[_2229].xyz), vec3(_711, _712, _713));
    float _2283 = dot(vec3(cbLight._m0[_2269].xyz), vec3(_711, _712, _713));
    float _4660 = isnan(0.0) ? _2280 : (isnan(_2280) ? 0.0 : max(_2280, 0.0));
    float _4671 = isnan(0.0) ? _2283 : (isnan(_2283) ? 0.0 : max(_2283, 0.0));
    float _2288 = (isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0))) * 0.3183098733425140380859375;
    float _2290 = (isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0))) * 0.3183098733425140380859375;
    float _2297 = ((cbLight._m0[_2246].x * _2252) * _2290) + (((cbLight._m0[_2256].x * _2218) * _2265) * _2288);
    float _2298 = ((_2252 * cbLight._m0[_2246].y) * _2290) + (((cbLight._m0[_2256].y * _2220) * _2265) * _2288);
    float _2299 = ((_2252 * cbLight._m0[_2246].z) * _2290) + (((cbLight._m0[_2256].z * _2222) * _2265) * _2288);
    uvec4 _2303 = floatBitsToUint(cbLight._m0[_2229 + 12u]);
    bool _2305 = _2303.x == 0u;
    float _2407;
    float _2409;
    float _2411;
    if (_2305)
    {
        _2407 = _2297;
        _2409 = _2298;
        _2411 = _2299;
    }
    else
    {
        uint _2415 = _2229 + 6u;
        float _2431 = (dot(vec3(cbLight._m0[_2229 + 2u].xyz), vec3(_711, _712, _713)) * 0.5) + 0.5;
        float _2432 = _2431 * _2431;
        float _4682 = isnan(0.0) ? _2432 : (isnan(_2432) ? 0.0 : max(_2432, 0.0));
        float _2433 = isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0));
        float _2434 = isnan(1.0) ? _2244 : (isnan(_2244) ? 1.0 : min(_2244, 1.0));
        _2407 = (((cbLight._m0[_2415].x * 0.3183098733425140380859375) * _2433) * _2434) + _2297;
        _2409 = (((cbLight._m0[_2415].y * 0.3183098733425140380859375) * _2433) * _2434) + _2298;
        _2411 = (((cbLight._m0[_2415].z * 0.3183098733425140380859375) * _2433) * _2434) + _2299;
    }
    bool _2414 = _2303.y == 0u;
    float _2469;
    float _2471;
    float _2473;
    if (_2414)
    {
        _2469 = _2407;
        _2471 = _2409;
        _2473 = _2411;
    }
    else
    {
        uint _2642 = _2229 + 7u;
        float _2658 = (dot(vec3(cbLight._m0[_2229 + 3u].xyz), vec3(_711, _712, _713)) * 0.5) + 0.5;
        float _2659 = _2658 * _2658;
        float _4698 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
        float _2660 = isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0));
        float _2661 = isnan(1.0) ? _2245 : (isnan(_2245) ? 1.0 : min(_2245, 1.0));
        _2469 = (((cbLight._m0[_2642].x * 0.3183098733425140380859375) * _2660) * _2661) + _2407;
        _2471 = (((cbLight._m0[_2642].y * 0.3183098733425140380859375) * _2660) * _2661) + _2409;
        _2473 = (((cbLight._m0[_2642].z * 0.3183098733425140380859375) * _2660) * _2661) + _2411;
    }
    uint _2476 = _2229 + 8u;
    float _2489 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2229].w)) * _715) * 0.949999988079071044921875);
    float _2490 = _2489 * _2489;
    float _2491 = cbLight._m0[_2229].x + _793;
    float _2492 = cbLight._m0[_2229].y + _794;
    float _2493 = cbLight._m0[_2229].z + _795;
    float _2497 = inversesqrt(dot(vec3(_2491, _2492, _2493), vec3(_2491, _2492, _2493)));
    float _2498 = _2497 * _2491;
    float _2499 = _2497 * _2492;
    float _2500 = _2497 * _2493;
    float _2501 = dot(vec3(_711, _712, _713), vec3(cbLight._m0[_2229].xyz));
    float _4714 = isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0));
    float _2504 = isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0));
    float _4725 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    float _2505 = isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0));
    float _2506 = dot(vec3(_711, _712, _713), vec3(_2498, _2499, _2500));
    float _4736 = isnan(0.0) ? _2506 : (isnan(_2506) ? 0.0 : max(_2506, 0.0));
    float _2509 = isnan(1.0) ? _4736 : (isnan(_4736) ? 1.0 : min(_4736, 1.0));
    float _2510 = dot(vec3(cbLight._m0[_2229].xyz), vec3(_2498, _2499, _2500));
    float _4747 = isnan(0.0) ? _2510 : (isnan(_2510) ? 0.0 : max(_2510, 0.0));
    float _2514 = _2490 * _2490;
    float _2518 = ((_2509 * _2509) * (_2514 + (-1.0))) + 1.0;
    float _2526 = exp2(log2(1.0 - (isnan(1.0) ? _4747 : (isnan(_4747) ? 1.0 : min(_4747, 1.0)))) * 5.0);
    float _2527 = 0.959999978542327880859375 - _874;
    float _2529 = 0.959999978542327880859375 - _875;
    float _2530 = 0.959999978542327880859375 - _876;
    float _2537 = 1.0 - _2490;
    float _2548 = (0.5 / (((_2505 * ((_2504 * _2537) + _2490)) + 9.9999999392252902907785028219223e-09) + (((_2505 * _2537) + _2490) * _2504))) * _2504;
    float _4758 = isnan(0.0) ? _2548 : (isnan(_2548) ? 0.0 : max(_2548, 0.0));
    float _2550 = (isnan(1.0) ? _4758 : (isnan(_4758) ? 1.0 : min(_4758, 1.0))) * (_2514 / ((_2518 * _2518) * 3.141590118408203125));
    uint _2564 = _2229 + 9u;
    float _2575 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2269].w)) * _715) * 0.949999988079071044921875);
    float _2576 = _2575 * _2575;
    float _2577 = cbLight._m0[_2269].x + _793;
    float _2578 = cbLight._m0[_2269].y + _794;
    float _2579 = cbLight._m0[_2269].z + _795;
    float _2583 = inversesqrt(dot(vec3(_2577, _2578, _2579), vec3(_2577, _2578, _2579)));
    float _2584 = _2583 * _2577;
    float _2585 = _2583 * _2578;
    float _2586 = _2583 * _2579;
    float _2587 = dot(vec3(_711, _712, _713), vec3(cbLight._m0[_2269].xyz));
    float _4769 = isnan(0.0) ? _2587 : (isnan(_2587) ? 0.0 : max(_2587, 0.0));
    float _2590 = isnan(1.0) ? _4769 : (isnan(_4769) ? 1.0 : min(_4769, 1.0));
    float _2591 = dot(vec3(_711, _712, _713), vec3(_2584, _2585, _2586));
    float _4780 = isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : max(_2591, 0.0));
    float _2594 = isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0));
    float _2595 = dot(vec3(cbLight._m0[_2269].xyz), vec3(_2584, _2585, _2586));
    float _4791 = isnan(0.0) ? _2595 : (isnan(_2595) ? 0.0 : max(_2595, 0.0));
    float _2599 = _2576 * _2576;
    float _2603 = ((_2594 * _2594) * (_2599 + (-1.0))) + 1.0;
    float _2610 = exp2(log2(1.0 - (isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0)))) * 5.0);
    float _2617 = 1.0 - _2576;
    float _2627 = (0.5 / (((_2505 * ((_2590 * _2617) + _2576)) + 9.9999999392252902907785028219223e-09) + (((_2505 * _2617) + _2576) * _2590))) * _2590;
    float _4802 = isnan(0.0) ? _2627 : (isnan(_2627) ? 0.0 : max(_2627, 0.0));
    float _2629 = (isnan(1.0) ? _4802 : (isnan(_4802) ? 1.0 : min(_4802, 1.0))) * (_2599 / ((_2603 * _2603) * 3.141590118408203125));
    float _2639 = (((((_2610 * _2527) + _877) * cbLight._m0[_2564].x) * _2629) * _2252) + ((((cbLight._m0[_2476].x * _2218) * ((_2526 * _2527) + _877)) * _2550) * _2265);
    float _2640 = (((((_2610 * _2529) + _879) * cbLight._m0[_2564].y) * _2629) * _2252) + ((((cbLight._m0[_2476].y * _2220) * ((_2526 * _2529) + _879)) * _2550) * _2265);
    float _2641 = (((((_2610 * _2530) + _880) * cbLight._m0[_2564].z) * _2629) * _2252) + ((((cbLight._m0[_2476].z * _2222) * ((_2526 * _2530) + _880)) * _2550) * _2265);
    float _2697;
    float _2699;
    float _2701;
    if (_2305)
    {
        _2697 = _2639;
        _2699 = _2640;
        _2701 = _2641;
    }
    else
    {
        uint _2703 = _2229 + 2u;
        uint _2707 = _2229 + 10u;
        float _2721 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2703].w)) * _715) * 0.949999988079071044921875);
        float _2722 = _2721 * _2721;
        float _2723 = cbLight._m0[_2703].x + _793;
        float _2724 = cbLight._m0[_2703].y + _794;
        float _2725 = cbLight._m0[_2703].z + _795;
        float _2729 = inversesqrt(dot(vec3(_2723, _2724, _2725), vec3(_2723, _2724, _2725)));
        float _2730 = _2729 * _2723;
        float _2731 = _2729 * _2724;
        float _2732 = _2729 * _2725;
        float _2733 = dot(vec3(_711, _712, _713), vec3(cbLight._m0[_2703].xyz));
        float _4813 = isnan(0.0) ? _2733 : (isnan(_2733) ? 0.0 : max(_2733, 0.0));
        float _2736 = isnan(1.0) ? _4813 : (isnan(_4813) ? 1.0 : min(_4813, 1.0));
        float _2737 = dot(vec3(_711, _712, _713), vec3(_2730, _2731, _2732));
        float _4824 = isnan(0.0) ? _2737 : (isnan(_2737) ? 0.0 : max(_2737, 0.0));
        float _2740 = isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0));
        float _2741 = dot(vec3(cbLight._m0[_2703].xyz), vec3(_2730, _2731, _2732));
        float _4835 = isnan(0.0) ? _2741 : (isnan(_2741) ? 0.0 : max(_2741, 0.0));
        float _2745 = _2722 * _2722;
        float _2749 = ((_2740 * _2740) * (_2745 + (-1.0))) + 1.0;
        float _2756 = exp2(log2(1.0 - (isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0)))) * 5.0);
        float _2763 = 1.0 - _2722;
        float _2773 = (0.5 / (((_2505 * ((_2736 * _2763) + _2722)) + 9.9999999392252902907785028219223e-09) + (((_2505 * _2763) + _2722) * _2736))) * _2736;
        float _4846 = isnan(0.0) ? _2773 : (isnan(_2773) ? 0.0 : max(_2773, 0.0));
        float _2775 = (isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0))) * (_2745 / ((_2749 * _2749) * 3.141590118408203125));
        float _2776 = isnan(1.0) ? _2244 : (isnan(_2244) ? 1.0 : min(_2244, 1.0));
        _2697 = (((((_2756 * _2527) + _877) * cbLight._m0[_2707].x) * _2775) * _2776) + _2639;
        _2699 = (((((_2756 * _2529) + _879) * cbLight._m0[_2707].y) * _2775) * _2776) + _2640;
        _2701 = (((((_2756 * _2530) + _880) * cbLight._m0[_2707].z) * _2775) * _2776) + _2641;
    }
    float _2807;
    float _2809;
    float _2811;
    if (_2414)
    {
        _2807 = _2697;
        _2809 = _2699;
        _2811 = _2701;
    }
    else
    {
        uint _2818 = _2229 + 3u;
        uint _2822 = _2229 + 11u;
        float _2836 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2818].w)) * _715) * 0.949999988079071044921875);
        float _2837 = _2836 * _2836;
        float _2838 = cbLight._m0[_2818].x + _793;
        float _2839 = cbLight._m0[_2818].y + _794;
        float _2840 = cbLight._m0[_2818].z + _795;
        float _2844 = inversesqrt(dot(vec3(_2838, _2839, _2840), vec3(_2838, _2839, _2840)));
        float _2845 = _2844 * _2838;
        float _2846 = _2844 * _2839;
        float _2847 = _2844 * _2840;
        float _2848 = dot(vec3(_711, _712, _713), vec3(cbLight._m0[_2818].xyz));
        float _4862 = isnan(0.0) ? _2848 : (isnan(_2848) ? 0.0 : max(_2848, 0.0));
        float _2851 = isnan(1.0) ? _4862 : (isnan(_4862) ? 1.0 : min(_4862, 1.0));
        float _2852 = dot(vec3(_711, _712, _713), vec3(_2845, _2846, _2847));
        float _4873 = isnan(0.0) ? _2852 : (isnan(_2852) ? 0.0 : max(_2852, 0.0));
        float _2855 = isnan(1.0) ? _4873 : (isnan(_4873) ? 1.0 : min(_4873, 1.0));
        float _2856 = dot(vec3(cbLight._m0[_2818].xyz), vec3(_2845, _2846, _2847));
        float _4884 = isnan(0.0) ? _2856 : (isnan(_2856) ? 0.0 : max(_2856, 0.0));
        float _2860 = _2837 * _2837;
        float _2864 = ((_2855 * _2855) * (_2860 + (-1.0))) + 1.0;
        float _2871 = exp2(log2(1.0 - (isnan(1.0) ? _4884 : (isnan(_4884) ? 1.0 : min(_4884, 1.0)))) * 5.0);
        float _2878 = 1.0 - _2837;
        float _2888 = (0.5 / (((_2505 * ((_2851 * _2878) + _2837)) + 9.9999999392252902907785028219223e-09) + (((_2505 * _2878) + _2837) * _2851))) * _2851;
        float _4895 = isnan(0.0) ? _2888 : (isnan(_2888) ? 0.0 : max(_2888, 0.0));
        float _2890 = (isnan(1.0) ? _4895 : (isnan(_4895) ? 1.0 : min(_4895, 1.0))) * (_2860 / ((_2864 * _2864) * 3.141590118408203125));
        float _2891 = isnan(1.0) ? _2245 : (isnan(_2245) ? 1.0 : min(_2245, 1.0));
        _2807 = (((((_2871 * _2527) + _877) * cbLight._m0[_2822].x) * _2890) * _2891) + _2697;
        _2809 = (((((_2871 * _2529) + _879) * cbLight._m0[_2822].y) * _2890) * _2891) + _2699;
        _2811 = (((((_2871 * _2530) + _880) * cbLight._m0[_2822].z) * _2890) * _2891) + _2701;
    }
    float _2956;
    float _2958;
    float _2960;
    float _2962;
    float _2964;
    float _2966;
    if (_2227.y == 0u)
    {
        uvec4 _2912 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2913 = _2912.x;
        uint _2924 = uint((float(_2912.y) * floor(float(uint(cbSceneParam._m0[85u].y * _814) / _2913))) + floor(float(uint(cbSceneParam._m0[85u].x * _813) / _2913)));
        float _2934 = (log2(_2005 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2935 = isnan(0.0) ? _2934 : (isnan(_2934) ? 0.0 : max(_2934, 0.0));
        uint _2938 = uint(isnan(14.0) ? _2935 : (isnan(_2935) ? 14.0 : min(_2935, 14.0)));
        uvec4 _2943 = texelFetch(g_lightClusterGridBuffer, int(((_2938 << 2u) + (_2924 << 6u)) >> 2u));
        uint _2944 = _2943.x;
        uint _2945 = _2912.z;
        float _3025;
        float _3027;
        float _3029;
        float _3031;
        float _3033;
        float _3035;
        if (((((1u << ((_2945 >> 4u) & 15u)) + 4294967295u) & _2944) == 0u) || ((_2945 & 240u) == 0u))
        {
            _3025 = 0.0;
            _3027 = 0.0;
            _3029 = 0.0;
            _3031 = 0.0;
            _3033 = 0.0;
            _3035 = 0.0;
        }
        else
        {
            float _3026;
            float _3028;
            float _3030;
            float _3032;
            float _3034;
            float _3036;
            float _3177 = 0.0;
            float _3178 = 0.0;
            float _3179 = 0.0;
            float _3180 = 0.0;
            float _3181 = 0.0;
            float _3182 = 0.0;
            uint _3183 = 0u;
            uint _3192;
            bool _3193;
            for (;;)
            {
                _3192 = texelFetch(g_lightClassification, int((((_2938 << 5u) + (_2924 << 9u)) + (_3183 << 2u)) >> 2u)).x;
                _3193 = _3192 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_3193)
                {
                    frontier_phi_73_pred = _3182;
                    frontier_phi_73_pred_1 = _3181;
                    frontier_phi_73_pred_2 = _3180;
                    frontier_phi_73_pred_3 = _3179;
                    frontier_phi_73_pred_4 = _3178;
                    frontier_phi_73_pred_5 = _3177;
                }
                else
                {
                    float _3322;
                    float _3323;
                    float _3324;
                    float _3325;
                    float _3326;
                    float _3327;
                    uint _3328;
                    _3322 = _3177;
                    _3323 = _3178;
                    _3324 = _3179;
                    _3325 = _3180;
                    _3326 = _3181;
                    _3327 = _3182;
                    _3328 = _3192;
                    float _3249;
                    float _3250;
                    float _3251;
                    float _3252;
                    float _3253;
                    float _3254;
                    for (;;)
                    {
                        uint _3332 = uint(findLSB(_3328)) + (_3183 << 5u);
                        uint _3329 = (_3328 + 4294967295u) & _3328;
                        uint _3334 = _3332 * 48u;
                        vec4 _3348 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3334)).x, texelFetch(g_PointLightRenderingBuffer, int(_3334 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3334 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3334 + 3u)).x));
                        uint _3354 = (_3332 * 48u) + 4u;
                        vec4 _3367 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3354)).x, texelFetch(g_PointLightRenderingBuffer, int(_3354 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3354 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3354 + 3u)).x));
                        uint _3373 = (_3332 * 48u) + 8u;
                        vec3 _3384 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3373)).x, texelFetch(g_PointLightRenderingBuffer, int(_3373 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3373 + 2u)).x));
                        float _3388 = _3348.x - _2003;
                        float _3389 = _3348.y - _2004;
                        float _3390 = _3348.z - _2005;
                        float _3391 = dot(vec3(_3388, _3389, _3390), vec3(_3388, _3389, _3390));
                        float _3394 = inversesqrt(_3391);
                        float _3395 = _3394 * _3388;
                        float _3396 = _3394 * _3389;
                        float _3397 = _3394 * _3390;
                        float _3398 = dot(vec3(_833, _836, _839), vec3(_3395, _3396, _3397));
                        float _3403 = 1.0 - (_3391 * _3348.w);
                        float _4921 = isnan(0.0) ? _3403 : (isnan(_3403) ? 0.0 : max(_3403, 0.0));
                        float _3404 = isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0));
                        float _3405 = sqrt(_3391) * _3367.w;
                        float _3408 = 1.39999997615814208984375 / (_3405 + 1.39999997615814208984375);
                        float _3409 = _3408 * _3408;
                        float _3412 = ((1.0 - _3409) * _3398) + _3409;
                        float _3415 = _3405 * _3405;
                        float _3419 = ((isnan(0.0) ? _3412 : (isnan(_3412) ? 0.0 : max(_3412, 0.0))) * _3404) / ((_3415 * 0.699999988079071044921875) + 1.0);
                        float _3423 = (-0.0) - _2003;
                        float _3424 = (-0.0) - _2004;
                        float _3425 = (-0.0) - _2005;
                        float _3429 = inversesqrt(dot(vec3(_3423, _3424, _3425), vec3(_3423, _3424, _3425)));
                        float _3430 = _3429 * _3423;
                        float _3431 = _3429 * _3424;
                        float _3432 = _3429 * _3425;
                        float _3439 = exp2(log2(1.0 / ((_3415 * 3.5) + 5.0)) * 0.25);
                        float _3440 = 1.0 - _908;
                        float _3447 = sqrt(1.0 - ((1.0 - (_3440 * _3440)) * (1.0 - (_3439 * _3439))));
                        float _3448 = _3447 * _3447;
                        float _3449 = _3448 * _3448;
                        float _3450 = _3430 + _3395;
                        float _3451 = _3431 + _3396;
                        float _3452 = _3432 + _3397;
                        float _3456 = inversesqrt(dot(vec3(_3450, _3451, _3452), vec3(_3450, _3451, _3452)));
                        float _3460 = dot(vec3(_833, _836, _839), vec3(_3430, _3431, _3432));
                        float _4937 = isnan(0.0) ? _3460 : (isnan(_3460) ? 0.0 : max(_3460, 0.0));
                        float _3463 = isnan(1.0) ? _4937 : (isnan(_4937) ? 1.0 : min(_4937, 1.0));
                        float _3464 = dot(vec3(_833, _836, _839), vec3(_3456 * _3450, _3456 * _3451, _3456 * _3452));
                        float _4948 = isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : max(_3464, 0.0));
                        float _3467 = isnan(1.0) ? _4948 : (isnan(_4948) ? 1.0 : min(_4948, 1.0));
                        float _3471 = ((_3467 * _3467) * (_3449 + (-1.0))) + 1.0;
                        float _3472 = _3408 * _3448;
                        float _3473 = _3472 * _3472;
                        float _3476 = ((1.0 - _3473) * _3398) + _3473;
                        float _4959 = isnan(0.0) ? _3476 : (isnan(_3476) ? 0.0 : max(_3476, 0.0));
                        float _3477 = isnan(1.0) ? _4959 : (isnan(_4959) ? 1.0 : min(_4959, 1.0));
                        float _3478 = 1.0 - _3448;
                        float _3488 = (0.5 / (((_3477 * ((_3463 * _3478) + _3448)) + 9.9999999392252902907785028219223e-09) + (((_3477 * _3478) + _3448) * _3463))) * _3477;
                        float _4970 = isnan(0.0) ? _3488 : (isnan(_3488) ? 0.0 : max(_3488, 0.0));
                        float _3499 = (((_3449 * 3.1415927410125732421875) * (isnan(1.0) ? _4970 : (isnan(_4970) ? 1.0 : min(_4970, 1.0)))) / ((_3471 * _3471) * ((_3415 * 2.1991131305694580078125) + 3.141590118408203125))) * _3404;
                        _3252 = (_3419 * _3367.x) + _3325;
                        _3253 = (_3419 * _3367.y) + _3326;
                        _3254 = (_3419 * _3367.z) + _3327;
                        _3249 = (_3499 * _3384.x) + _3322;
                        _3250 = (_3499 * _3384.y) + _3323;
                        _3251 = (_3499 * _3384.z) + _3324;
                        if (_3329 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3322 = _3249;
                            _3323 = _3250;
                            _3324 = _3251;
                            _3325 = _3252;
                            _3326 = _3253;
                            _3327 = _3254;
                            _3328 = _3329;
                        }
                    }
                    frontier_phi_73_pred = _3254;
                    frontier_phi_73_pred_1 = _3253;
                    frontier_phi_73_pred_2 = _3252;
                    frontier_phi_73_pred_3 = _3251;
                    frontier_phi_73_pred_4 = _3250;
                    frontier_phi_73_pred_5 = _3249;
                }
                _3036 = frontier_phi_73_pred;
                _3034 = frontier_phi_73_pred_1;
                _3032 = frontier_phi_73_pred_2;
                _3030 = frontier_phi_73_pred_3;
                _3028 = frontier_phi_73_pred_4;
                _3026 = frontier_phi_73_pred_5;
                uint _3184 = _3183 + 1u;
                if (_3184 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3177 = _3026;
                    _3178 = _3028;
                    _3179 = _3030;
                    _3180 = _3032;
                    _3181 = _3034;
                    _3182 = _3036;
                    _3183 = _3184;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3025 = _3026;
            _3027 = _3028;
            _3029 = _3030;
            _3031 = _3032;
            _3033 = _3034;
            _3035 = _3036;
        }
        uvec4 _3039 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3040 = _3039.z;
        uint _3042 = (_3040 >> 8u) & 15u;
        float _3145;
        float _3147;
        float _3149;
        float _3151;
        float _3153;
        float _3155;
        if (((4294967295u << _3042) & _2944) == 0u)
        {
            _3145 = _3025;
            _3147 = _3027;
            _3149 = _3029;
            _3151 = _3031;
            _3153 = _3033;
            _3155 = _3035;
        }
        else
        {
            float _3170 = inversesqrt(dot(vec3(_2003, _2004, _2005), vec3(_2003, _2004, _2005)));
            float _3171 = _3170 * _2003;
            float _3172 = _3170 * _2004;
            float _3173 = _3170 * _2005;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_3042 < ((_3040 >> 12u) & 15u))
            {
                float _3146;
                float _3148;
                float _3150;
                float _3152;
                float _3154;
                float _3156;
                float _3305 = _3025;
                float _3306 = _3027;
                float _3307 = _3029;
                float _3308 = _3031;
                float _3309 = _3033;
                float _3310 = _3035;
                uint _3311 = _3042;
                uint _3320;
                bool _3321;
                for (;;)
                {
                    _3320 = texelFetch(g_lightClassification, int((((_2938 << 5u) + (_2924 << 9u)) + (_3311 << 2u)) >> 2u)).x;
                    _3321 = _3320 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3321)
                    {
                        frontier_phi_84_pred = _3309;
                        frontier_phi_84_pred_1 = _3308;
                        frontier_phi_84_pred_2 = _3307;
                        frontier_phi_84_pred_3 = _3306;
                        frontier_phi_84_pred_4 = _3305;
                        frontier_phi_84_pred_5 = _3310;
                    }
                    else
                    {
                        float _3513;
                        float _3514;
                        float _3515;
                        float _3516;
                        float _3517;
                        float _3518;
                        float _3808;
                        float _3809;
                        float _3810;
                        float _3811;
                        float _3812;
                        float _3813;
                        float _3526 = _3305;
                        float _3527 = _3306;
                        float _3528 = _3307;
                        float _3529 = _3308;
                        float _3530 = _3309;
                        float _3531 = _3310;
                        uint _3532 = _3320;
                        uint _3533;
                        vec4 _3558;
                        float _3559;
                        vec4 _3574;
                        vec3 _3586;
                        vec4 _3601;
                        vec4 _3617;
                        float _3664;
                        bool _3665;
                        for (;;)
                        {
                            uint _3543 = ((_3311 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3532));
                            _3533 = (_3532 + 4294967295u) & _3532;
                            uint _3545 = _3543 * 40u;
                            _3558 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3545)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 3u)).x));
                            _3559 = _3558.w;
                            uint _3561 = (_3543 * 40u) + 4u;
                            _3574 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3561)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 3u)).x));
                            uint _3576 = (_3543 * 40u) + 8u;
                            _3586 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3576)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 2u)).x));
                            uint _3588 = (_3543 * 40u) + 16u;
                            _3601 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3588)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3588 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3588 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3588 + 3u)).x));
                            uint _3604 = (_3543 * 40u) + 20u;
                            _3617 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3604)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3604 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3604 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3604 + 3u)).x));
                            uint _3620 = (_3543 * 40u) + 24u;
                            vec4 _3633 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3620)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3620 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3620 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3620 + 3u)).x));
                            uint _3639 = (_3543 * 40u) + 28u;
                            vec4 _3652 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3639)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3639 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3639 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3639 + 3u)).x));
                            _3664 = fma(_2005, _3652.z, fma(_2004, _3652.y, _3652.x * _2003)) + _3652.w;
                            _3665 = !((fma(_2005, _3633.z, fma(_2004, _3633.y, _3633.x * _2003)) + _3633.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_3665)
                            {
                                float _3692 = _3558.x - _2003;
                                float _3693 = _3558.y - _2004;
                                float _3694 = _3558.z - _2005;
                                float _3695 = dot(vec3(_3692, _3693, _3694), vec3(_3692, _3693, _3694));
                                float _3698 = inversesqrt(_3695);
                                float _3699 = _3698 * _3692;
                                float _3700 = _3698 * _3693;
                                float _3701 = _3698 * _3694;
                                float _3705 = 1.0 - (_3695 / (_3559 * _3559));
                                float _4981 = isnan(0.0) ? _3705 : (isnan(_3705) ? 0.0 : max(_3705, 0.0));
                                float _3706 = isnan(1.0) ? _4981 : (isnan(_4981) ? 1.0 : min(_4981, 1.0));
                                float _3710 = sqrt(_3695) * _3574.w;
                                float _3712 = 1.39999997615814208984375 / (_3710 + 1.39999997615814208984375);
                                float _3713 = _3712 * _3712;
                                float _3716 = ((1.0 - _3713) * dot(vec3(_3699, _3700, _3701), vec3(_833, _836, _839))) + _3713;
                                float _3719 = _3710 * _3710;
                                float _3723 = (fma(_2005, _3601.z, fma(_2004, _3601.y, _3601.x * _2003)) + _3601.w) / _3664;
                                float _3724 = (fma(_2005, _3617.z, fma(_2004, _3617.y, _3617.x * _2003)) + _3617.w) / _3664;
                                float _3728 = 1.0 - dot(vec2(_3723, _3724), vec2(_3723, _3724));
                                float _4997 = isnan(0.0) ? _3728 : (isnan(_3728) ? 0.0 : max(_3728, 0.0));
                                float _3729 = isnan(1.0) ? _4997 : (isnan(_4997) ? 1.0 : min(_4997, 1.0));
                                float _3730 = _3729 * (((isnan(0.0) ? _3716 : (isnan(_3716) ? 0.0 : max(_3716, 0.0))) * _3706) / ((_3719 * 0.699999988079071044921875) + 1.0));
                                float _3742 = exp2(log2(1.0 / ((_3719 * 3.5) + 5.0)) * 0.25);
                                float _3743 = 1.0 - _908;
                                float _3750 = sqrt(1.0 - ((1.0 - (_3743 * _3743)) * (1.0 - (_3742 * _3742))));
                                float _3751 = _3750 * _3750;
                                float _3752 = _3751 * _3751;
                                float _3753 = _3699 - _3171;
                                float _3754 = _3700 - _3172;
                                float _3755 = _3701 - _3173;
                                float _3759 = inversesqrt(dot(vec3(_3753, _3754, _3755), vec3(_3753, _3754, _3755)));
                                float _3763 = dot(vec3(_833, _836, _839), vec3((-0.0) - _3171, (-0.0) - _3172, (-0.0) - _3173));
                                float _5008 = isnan(0.0) ? _3763 : (isnan(_3763) ? 0.0 : max(_3763, 0.0));
                                float _3766 = isnan(1.0) ? _5008 : (isnan(_5008) ? 1.0 : min(_5008, 1.0));
                                float _3767 = dot(vec3(_833, _836, _839), vec3(_3759 * _3753, _3759 * _3754, _3759 * _3755));
                                float _5019 = isnan(0.0) ? _3767 : (isnan(_3767) ? 0.0 : max(_3767, 0.0));
                                float _3770 = isnan(1.0) ? _5019 : (isnan(_5019) ? 1.0 : min(_5019, 1.0));
                                float _3774 = ((_3770 * _3770) * (_3752 + (-1.0))) + 1.0;
                                float _3775 = _3712 * _3751;
                                float _3776 = _3775 * _3775;
                                float _3782 = ((1.0 - _3776) * dot(vec3(_833, _836, _839), vec3(_3699, _3700, _3701))) + _3776;
                                float _5030 = isnan(0.0) ? _3782 : (isnan(_3782) ? 0.0 : max(_3782, 0.0));
                                float _3783 = isnan(1.0) ? _5030 : (isnan(_5030) ? 1.0 : min(_5030, 1.0));
                                float _3784 = 1.0 - _3751;
                                float _3794 = (0.5 / (((_3783 * ((_3766 * _3784) + _3751)) + 9.9999999392252902907785028219223e-09) + (((_3783 * _3784) + _3751) * _3766))) * _3783;
                                float _5041 = isnan(0.0) ? _3794 : (isnan(_3794) ? 0.0 : max(_3794, 0.0));
                                float _3804 = (_3729 * _3706) * (((_3752 * 3.1415927410125732421875) * (isnan(1.0) ? _5041 : (isnan(_5041) ? 1.0 : min(_5041, 1.0)))) / ((_3774 * _3774) * ((_3719 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _3730 * _3574.y;
                                frontier_phi_90_pred_1 = _3730 * _3574.x;
                                frontier_phi_90_pred_2 = _3804 * _3586.z;
                                frontier_phi_90_pred_3 = _3804 * _3586.y;
                                frontier_phi_90_pred_4 = _3804 * _3586.x;
                                frontier_phi_90_pred_5 = _3730 * _3574.z;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _3812 = frontier_phi_90_pred;
                            _3811 = frontier_phi_90_pred_1;
                            _3810 = frontier_phi_90_pred_2;
                            _3809 = frontier_phi_90_pred_3;
                            _3808 = frontier_phi_90_pred_4;
                            _3813 = frontier_phi_90_pred_5;
                            _3516 = _3811 + _3529;
                            _3517 = _3812 + _3530;
                            _3518 = _3813 + _3531;
                            _3513 = _3808 + _3526;
                            _3514 = _3809 + _3527;
                            _3515 = _3810 + _3528;
                            if (_3533 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3526 = _3513;
                                _3527 = _3514;
                                _3528 = _3515;
                                _3529 = _3516;
                                _3530 = _3517;
                                _3531 = _3518;
                                _3532 = _3533;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _3517;
                        frontier_phi_84_pred_1 = _3516;
                        frontier_phi_84_pred_2 = _3515;
                        frontier_phi_84_pred_3 = _3514;
                        frontier_phi_84_pred_4 = _3513;
                        frontier_phi_84_pred_5 = _3518;
                    }
                    _3154 = frontier_phi_84_pred;
                    _3152 = frontier_phi_84_pred_1;
                    _3150 = frontier_phi_84_pred_2;
                    _3148 = frontier_phi_84_pred_3;
                    _3146 = frontier_phi_84_pred_4;
                    _3156 = frontier_phi_84_pred_5;
                    uint _3312 = _3311 + 1u;
                    if (_3312 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3305 = _3146;
                        _3306 = _3148;
                        _3307 = _3150;
                        _3308 = _3152;
                        _3309 = _3154;
                        _3310 = _3156;
                        _3311 = _3312;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _3156;
                frontier_phi_65_66_ladder_1 = _3152;
                frontier_phi_65_66_ladder_2 = _3154;
                frontier_phi_65_66_ladder_3 = _3148;
                frontier_phi_65_66_ladder_4 = _3146;
                frontier_phi_65_66_ladder_5 = _3150;
            }
            else
            {
                frontier_phi_65_66_ladder = _3035;
                frontier_phi_65_66_ladder_1 = _3031;
                frontier_phi_65_66_ladder_2 = _3033;
                frontier_phi_65_66_ladder_3 = _3027;
                frontier_phi_65_66_ladder_4 = _3025;
                frontier_phi_65_66_ladder_5 = _3029;
            }
            _3145 = frontier_phi_65_66_ladder_4;
            _3147 = frontier_phi_65_66_ladder_3;
            _3149 = frontier_phi_65_66_ladder_5;
            _3151 = frontier_phi_65_66_ladder_1;
            _3153 = frontier_phi_65_66_ladder_2;
            _3155 = frontier_phi_65_66_ladder;
        }
        float _3160 = isnan(1.0) ? _892 : (isnan(_892) ? 1.0 : min(_892, 1.0));
        _2956 = (_3160 * _3151) + _2469;
        _2958 = (_3160 * _3153) + _2471;
        _2960 = (_3160 * _3155) + _2473;
        _2962 = ((_3145 * _877) * _3160) + _2807;
        _2964 = ((_3147 * _879) * _3160) + _2809;
        _2966 = ((_3149 * _880) * _3160) + _2811;
    }
    else
    {
        _2956 = _2469;
        _2958 = _2471;
        _2960 = _2473;
        _2962 = _2807;
        _2964 = _2809;
        _2966 = _2811;
    }
    float _5057 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    float _5068 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    float _5079 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    float _5090 = isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0));
    float _2984 = ((isnan(1.0) ? _5057 : (isnan(_5057) ? 1.0 : min(_5057, 1.0))) * (_2956 + ((isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0))) * _892))) + ((_2962 + ((isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0))) * _1733)) * cbPerFrame._m0[3u].x);
    float _2985 = ((isnan(1.0) ? _5068 : (isnan(_5068) ? 1.0 : min(_5068, 1.0))) * (_2958 + ((isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0))) * _892))) + ((_2964 + ((isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0))) * _1733)) * cbPerFrame._m0[3u].x);
    float _2986 = ((isnan(1.0) ? _5079 : (isnan(_5079) ? 1.0 : min(_5079, 1.0))) * (_2960 + ((isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0))) * _892))) + ((_2966 + ((isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0))) * _1733)) * cbPerFrame._m0[3u].x);
    float _2991 = cbInstanceData._m0[_852 + 6u].w * (isnan(1.0) ? _5090 : (isnan(_5090) ? 1.0 : min(_5090, 1.0)));
    float _2996 = _813 / cbSceneParam._m0[86u].x;
    float _2997 = _814 / cbSceneParam._m0[86u].y;
    vec4 _3011 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2996, _2997, (log2((isnan(cbSceneParam._m0[77u].w) ? _735 : (isnan(_735) ? cbSceneParam._m0[77u].w : min(_735, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3013 = _3011.x;
    float _3014 = _3011.y;
    float _3015 = _3011.z;
    float _3016 = _3011.w;
    float _3087;
    float _3089;
    float _3091;
    float _3093;
    if (_735 > cbSceneParam._m0[78u].w)
    {
        float _3050 = isnan(_735) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _735 : min(cbSceneParam._m0[80u].w, _735));
        float _3051 = _3050 / _735;
        float _3062 = _3051 * _786;
        float _3063 = _787 * _3051;
        float _3064 = (-0.0) - _3063;
        float _3065 = _3051 * _788;
        float _3067 = (cbSceneParam._m0[77u].w * _3064) / _3050;
        float _3068 = _3067 + cbSceneParam._m0[79u].w;
        float _3069 = cbSceneParam._m0[79u].w - _3063;
        float _3075 = sqrt(((_3062 * _3062) + (_3063 * _3063)) + (_3065 * _3065));
        float _3078 = (1.0 - (cbSceneParam._m0[77u].w / _3050)) * _3075;
        float _3083 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3085 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3262;
        if (abs((_3064 - _3067) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3262 = ((((_3068 > 0.0) ? exp2(_3083 * _3068) : (2.0 - exp2(_3085 * _3068))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3078;
        }
        else
        {
            float _3206 = 1.0 / cbSceneParam._m0[80u].x;
            float _3207 = isnan(_3069) ? _3068 : (isnan(_3068) ? _3069 : max(_3068, _3069));
            float _3208 = isnan(_3069) ? _3068 : (isnan(_3068) ? _3069 : min(_3068, _3069));
            float _3217 = isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : min(_3207, 0.0));
            float _3218 = isnan(0.0) ? _3208 : (isnan(_3208) ? 0.0 : min(_3208, 0.0));
            _3262 = ((abs(_3075 / _3064) * cbSceneParam._m0[80u].y) * ((((_3217 - _3218) * 2.0) - ((exp2(_3083 * (isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : max(_3207, 0.0)))) - exp2(_3083 * (isnan(0.0) ? _3208 : (isnan(_3208) ? 0.0 : max(_3208, 0.0))))) * _3206)) - ((exp2(_3085 * _3217) - exp2(_3085 * _3218)) * _3206))) + (_3078 * cbSceneParam._m0[80u].z);
        }
        vec4 _3264 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2996, _2997, 1.0), 0.0);
        float _3273 = exp2((_3262 * (-1.44269502162933349609375)) * (1.0 - _3264.w));
        float _3274 = log2(_3273);
        float _3290 = log2(_3016);
        _3087 = (exp2(_3290 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3274 * cbSceneParam._m0[78u].x)) * _3264.x) / cbSceneParam._m0[78u].x)) + _3013;
        _3089 = (exp2(_3290 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3274 * cbSceneParam._m0[78u].y)) * _3264.y) / cbSceneParam._m0[78u].y)) + _3014;
        _3091 = (exp2(_3290 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3274 * cbSceneParam._m0[78u].z)) * _3264.z) / cbSceneParam._m0[78u].z)) + _3015;
        _3093 = _3273 * _3016;
    }
    else
    {
        _3087 = _3013;
        _3089 = _3014;
        _3091 = _3015;
        _3093 = _3016;
    }
    bool _3300;
    vec4 _3103;
    vec4 _3125;
    float _3127;
    float _3131;
    float _3132;
    float _3133;
    float _3134;
    bool _3144;
    for (;;)
    {
        _3103 = cbMatDynParam._m0[0u];
        float _3105 = roundEven(_3103.y);
        bool _3106 = _3105 == 3.0;
        float _3107 = log2(_3093);
        float _3114 = exp2(_3107 * cbSceneParam._m0[78u].x) * _2984;
        float _3115 = exp2(_3107 * cbSceneParam._m0[78u].y) * _2985;
        float _3116 = exp2(_3107 * cbSceneParam._m0[78u].z) * _2986;
        float _3123 = _802 + (-0.5);
        _3125 = cbMtdParam._m0[1u];
        _3127 = _3125.y * _3123;
        float _3130 = (_3105 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3131 = _3130 * (_3106 ? _3114 : (_3114 + (cbSceneParam._m0[72u].w * _3087)));
        _3132 = _3130 * (_3106 ? _3115 : (_3115 + (cbSceneParam._m0[72u].w * _3089)));
        _3133 = _3130 * (_3106 ? _3116 : (_3116 + (cbSceneParam._m0[72u].w * _3091)));
        _3134 = _3123 * 0.999000012874603271484375;
        _3144 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3144)
        {
            if ((cbInstanceData._m0[_852 + 7u].x + _3134) < 0.5)
            {
                _3300 = true;
                break;
            }
        }
        uint _3241 = _853 + uint(_3103.w);
        if ((cbInstanceData._m0[_3241].w < 1.0) && ((cbInstanceData._m0[_3241].w + _3134) < 0.5))
        {
            _3300 = true;
            break;
        }
        if ((_3127 + _472) < _3125.x)
        {
            _3300 = true;
            break;
        }
        _3300 = false;
        break;
    }
    float _3504;
    if (_3300)
    {
        discard_state = true;
        _3504 = 0.0;
    }
    else
    {
        _3504 = _2991;
    }
    SV_Target.x = _3131;
    SV_Target.y = _3132;
    SV_Target.z = _3133;
    SV_Target.w = _3504;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2991;
    discard_exit();
}


