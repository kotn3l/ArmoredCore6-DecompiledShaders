#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Grass_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Grass_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _119 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _120 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _121 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _126 = inversesqrt(dot(vec3(_119, _120, _121), vec3(_119, _120, _121)));
    float _133 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _134 = _133 * NORMAL.x;
    float _135 = _133 * NORMAL.y;
    float _136 = _133 * NORMAL.z;
    float _140 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _148;
    float _149;
    float _150;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _148 = (-0.0) - _134;
        _149 = (-0.0) - _135;
        _150 = (-0.0) - _136;
    }
    else
    {
        _148 = _134;
        _149 = _135;
        _150 = _136;
    }
    vec4 _164 = texture(sampler2D(M_AMSN_V_Grass_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _167 = _164.x;
    float _168 = _164.y;
    float _169 = _164.z;
    vec4 _185 = texture(sampler2D(M_AMSN_V_Grass_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _189 = _185.z;
    float _193 = (_185.x * 2.0) + (-1.0);
    float _195 = (_185.y * 2.0) + (-1.0);
    float _196 = dot(vec2(_193, _195), vec2(_193, _195));
    float _307 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _202 = sqrt(1.0 - (isnan(1.0) ? _307 : (isnan(_307) ? 1.0 : min(_307, 1.0))));
    float _205 = fma(_202, _148, fma(_195, _140 * TANGENT.x, (_126 * _119) * _193));
    float _208 = fma(_202, _149, fma(_195, _140 * TANGENT.y, (_126 * _120) * _193));
    float _211 = fma(_202, _150, fma(_195, _140 * TANGENT.z, (_126 * _121) * _193));
    float _215 = inversesqrt(dot(vec3(_205, _208, _211), vec3(_205, _208, _211)));
    float _318 = isnan(0.0) ? _189 : (isnan(_189) ? 0.0 : max(_189, 0.0));
    float _329 = isnan(0.0) ? _167 : (isnan(_167) ? 0.0 : max(_167, 0.0));
    float _340 = isnan(0.0) ? _168 : (isnan(_168) ? 0.0 : max(_168, 0.0));
    float _351 = isnan(0.0) ? _169 : (isnan(_169) ? 0.0 : max(_169, 0.0));
    float _362 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    uint _235 = uint(roundEven(NORMAL.w)) * 13u;
    uint _238 = (_235 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _244 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _329 : (isnan(_329) ? 1.0 : min(_329, 1.0)))) * cbInstanceData._m0[_238].x;
    float _245 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _340 : (isnan(_340) ? 1.0 : min(_340, 1.0)))) * cbInstanceData._m0[_238].y;
    float _246 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _351 : (isnan(_351) ? 1.0 : min(_351, 1.0)))) * cbInstanceData._m0[_238].z;
    float _373 = isnan(0.0) ? _244 : (isnan(_244) ? 0.0 : max(_244, 0.0));
    float _384 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _395 = isnan(0.0) ? _246 : (isnan(_246) ? 0.0 : max(_246, 0.0));
    uint _250 = _235 + 6u;
    bool _279 = cbMtdParam._m0[1u].z != 0.0;
    float _280 = _279 ? cbInstanceData._m0[_250].w : 0.0;
    SV_Target.x = ((_205 * 0.5) * _215) + 0.500488758087158203125;
    SV_Target.y = ((_208 * 0.5) * _215) + 0.500488758087158203125;
    SV_Target.z = ((_211 * 0.5) * _215) + 0.500488758087158203125;
    SV_Target.w = _280;
    SV_Target_1.x = isnan(1.0) ? _362 : (isnan(_362) ? 1.0 : min(_362, 1.0));
    SV_Target_1.y = isnan(1.0) ? _318 : (isnan(_318) ? 1.0 : min(_318, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _279 ? cbInstanceData._m0[_250].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _373 : (isnan(_373) ? 1.0 : min(_373, 1.0));
    SV_Target_2.y = isnan(1.0) ? _384 : (isnan(_384) ? 1.0 : min(_384, 1.0));
    SV_Target_2.z = isnan(1.0) ? _395 : (isnan(_395) ? 1.0 : min(_395, 1.0));
    SV_Target_2.w = _279 ? cbInstanceData._m0[_250].w : (float(floatBitsToUint(cbInstanceData._m0[_235 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _280;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _280;
}


