#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1280;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _206 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _207 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _208 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _214 = inversesqrt(dot(vec3(_206, _207, _208), vec3(_206, _207, _208)));
    float _221 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _222 = _221 * NORMAL.x;
    float _223 = _221 * NORMAL.y;
    float _224 = _221 * NORMAL.z;
    float _228 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _236;
    float _237;
    float _238;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _236 = (-0.0) - _222;
        _237 = (-0.0) - _223;
        _238 = (-0.0) - _224;
    }
    else
    {
        _236 = _222;
        _237 = _223;
        _238 = _224;
    }
    vec4 _252 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _257 = _252.z;
    float _258 = _252.w;
    float _264 = exp2(log2(_257 * 22.0) * 260.0);
    float _265 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _266 = isnan(1.0) ? _265 : (isnan(_265) ? 1.0 : min(_265, 1.0));
    vec4 _280 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _291 = cbMtdParam._m0[10u].x * _280.x;
    float _292 = cbMtdParam._m0[10u].y * _280.y;
    float _293 = cbMtdParam._m0[10u].z * _280.z;
    vec4 _305 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _321 = exp2(log2(1.0 - _258) * 8.0);
    vec4 _333 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _349 = exp2(log2(_258) * 8.0);
    vec4 _362 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    vec4 _387 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _409 = (((((_305.x * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _387.x) - _291) * _266) + _291;
    float _410 = (((((_305.y * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _387.y) - _292) * _266) + _292;
    float _411 = (((((_305.z * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _387.z) - _293) * _266) + _293;
    float _418 = (((cbMtdParam._m0[12u].x * _333.x) - _409) * _321) + _409;
    float _419 = (((cbMtdParam._m0[12u].y * _333.y) - _410) * _321) + _410;
    float _420 = (((cbMtdParam._m0[12u].z * _333.z) - _411) * _321) + _411;
    float _427 = (((cbMtdParam._m0[11u].x * _362.x) - _418) * _349) + _418;
    float _428 = (((cbMtdParam._m0[11u].y * _362.y) - _419) * _349) + _419;
    float _429 = (((cbMtdParam._m0[11u].z * _362.z) - _420) * _349) + _420;
    float _430 = _387.w * _305.w;
    float _459 = (((texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w)).x - cbMtdParam._m0[15u].y) + cbMtdParam._m0[14u].z) * _266) + cbMtdParam._m0[15u].y;
    float _462 = ((cbMtdParam._m0[14u].y - _459) * _321) + _459;
    float _465 = ((cbMtdParam._m0[15u].x - _462) * _349) + _462;
    vec4 _478 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _480 = _478.x;
    float _481 = _478.y;
    float _487 = cbMtdParam._m0[13u].y + _478.z;
    vec4 _499 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    vec4 _518 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    vec4 _535 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _546 = ((((_257 * 2.0) * (cbMtdParam._m0[13u].x + _499.z)) - _487) * _266) + _487;
    float _550 = (((_518.z - _546) + cbMtdParam._m0[14u].x) * _321) + _546;
    float _554 = (((_535.z - _550) + cbMtdParam._m0[13u].w) * _349) + _550;
    float _558 = (_252.x * 2.0) + (-1.0);
    float _560 = (_252.y * 2.0) + (-1.0);
    float _561 = dot(vec2(_558, _560), vec2(_558, _560));
    float _3648 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0));
    float _566 = sqrt(1.0 - (isnan(1.0) ? _3648 : (isnan(_3648) ? 1.0 : min(_3648, 1.0))));
    float _571 = ((_499.x - _480) * _266) + _480;
    float _572 = ((_499.y - _481) * _266) + _481;
    float _577 = ((_518.x - _571) * _321) + _571;
    float _578 = ((_518.y - _572) * _321) + _572;
    float _591 = ((((((_535.x - _577) * _349) + _577) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _558;
    float _592 = ((((((_535.y - _578) * _349) + _578) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _560;
    float _595 = fma(_566, _236, fma(_592, _228 * TANGENT.x, (_214 * _206) * _591));
    float _598 = fma(_566, _237, fma(_592, _228 * TANGENT.y, (_214 * _207) * _591));
    float _601 = fma(_566, _238, fma(_592, _228 * TANGENT.z, (_214 * _208) * _591));
    float _605 = inversesqrt(dot(vec3(_595, _598, _601), vec3(_595, _598, _601)));
    float _606 = _605 * _595;
    float _607 = _605 * _598;
    float _608 = _605 * _601;
    float _3659 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _609 = isnan(1.0) ? _3659 : (isnan(_3659) ? 1.0 : min(_3659, 1.0));
    float _3670 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0));
    float _610 = isnan(1.0) ? _3670 : (isnan(_3670) ? 1.0 : min(_3670, 1.0));
    float _3681 = isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0));
    float _611 = isnan(1.0) ? _3681 : (isnan(_3681) ? 1.0 : min(_3681, 1.0));
    float _3692 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _612 = isnan(1.0) ? _3692 : (isnan(_3692) ? 1.0 : min(_3692, 1.0));
    float _3703 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _613 = isnan(1.0) ? _3703 : (isnan(_3703) ? 1.0 : min(_3703, 1.0));
    float _3714 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
    float _614 = isnan(1.0) ? _3714 : (isnan(_3714) ? 1.0 : min(_3714, 1.0));
    float _630 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _670 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _680 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _670);
    float _681 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _670);
    float _682 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _670);
    float _686 = inversesqrt(dot(vec3(_680, _681, _682), vec3(_680, _681, _682)));
    float _687 = _680 * _686;
    float _688 = _681 * _686;
    float _689 = _682 * _686;
    float _695 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _696 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _698 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _700 = _698.w;
    float _718 = fma(_608, cbSceneParam._m0[5u].z, fma(_607, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _606));
    float _721 = fma(_608, cbSceneParam._m0[6u].z, fma(_607, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _606));
    float _724 = fma(_608, cbSceneParam._m0[7u].z, fma(_607, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _606));
    vec4 _726 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _728 = _726.x;
    float _740 = (((_726.y - _610) + (_726.w * _610)) * cbMtdParam._m0[3u].x) + _610;
    vec4 _741 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _757 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_728 * _728)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _741.z;
    float _765 = (((cbMatDynParam._m0[15u].x - _614) * cbMatDynParam._m0[15u].w) * _757) + _614;
    float _773 = ((_757 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _740)) + _740;
    uint _797 = uint(roundEven(NORMAL.w)) * 13u;
    uint _799 = (_797 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _805 = (cbMtdParam._m0[0u].x * _611) * cbInstanceData._m0[_799].x;
    float _806 = (cbMtdParam._m0[0u].y * _612) * cbInstanceData._m0[_799].y;
    float _807 = (cbMtdParam._m0[0u].z * _613) * cbInstanceData._m0[_799].z;
    float _3725 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _808 = isnan(1.0) ? _3725 : (isnan(_3725) ? 1.0 : min(_3725, 1.0));
    float _3736 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _809 = isnan(1.0) ? _3736 : (isnan(_3736) ? 1.0 : min(_3736, 1.0));
    float _3747 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
    float _810 = isnan(1.0) ? _3747 : (isnan(_3747) ? 1.0 : min(_3747, 1.0));
    vec4 _811 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _816 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _827 = (((_816.x - _765) + (_816.w * _765)) * cbMtdParam._m0[3u].x) + _765;
    float _840 = (cbMtdParam._m0[3u].x * (((_808 * _700) - _808) + _811.x)) + _808;
    float _841 = (cbMtdParam._m0[3u].x * (((_809 * _700) - _809) + _811.y)) + _809;
    float _842 = (cbMtdParam._m0[3u].x * (((_810 * _700) - _810) + _811.z)) + _810;
    float _856 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_765 * (_611 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_765 * (_612 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_765 * (_613 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _860 = _856 * cbMatDynParam._m0[13u].w;
    float _870 = (_860 * (cbMatDynParam._m0[13u].x - _840)) + _840;
    float _871 = (_860 * (cbMatDynParam._m0[13u].y - _841)) + _841;
    float _872 = (_860 * (cbMatDynParam._m0[13u].z - _842)) + _842;
    float _880 = ((_856 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _827)) + _827;
    float _881 = 1.0 - _880;
    float _882 = _881 * _870;
    float _883 = _881 * _871;
    float _884 = _881 * _872;
    float _888 = (_870 + (-0.039999999105930328369140625)) * _880;
    float _889 = (_871 + (-0.039999999105930328369140625)) * _880;
    float _890 = (_872 + (-0.039999999105930328369140625)) * _880;
    float _891 = _888 + 0.039999999105930328369140625;
    float _892 = _889 + 0.039999999105930328369140625;
    float _893 = _890 + 0.039999999105930328369140625;
    vec4 _902 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _695, cbSceneParam._m0[86u].y * _696));
    float _905 = _902.x * TEXCOORD_4;
    float _906 = dot(vec3(_606, _607, _608), vec3(_687, _688, _689));
    float _909 = _906 * 2.0;
    float _913 = (_909 * _606) - _687;
    float _914 = (_909 * _607) - _688;
    float _915 = (_909 * _608) - _689;
    float _919 = abs(dot(vec3(_687, _688, _689), vec3(_606, _607, _608)));
    float _3758 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
    float _921 = sqrt(_773);
    float _934 = exp2((_921 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3758 : (isnan(_3758) ? 1.0 : min(_3758, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_921 * 3.0));
    float _940 = (1.0 - _934) * ((_921 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _941 = _934 * _921;
    float _969 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _973 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _977 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1279;
    float _1281;
    float _1282;
    float _1283;
    float _1284;
    float _1285;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1004 = fma(_977, cbModelParam._m0[26u].z, fma(_973, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _969));
        float _1008 = fma(_977, cbModelParam._m0[27u].z, fma(_973, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _969));
        float _1012 = fma(_977, cbModelParam._m0[28u].z, fma(_973, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _969));
        float _1037 = _969 + _606;
        float _1038 = _973 + _607;
        float _1039 = _977 + _608;
        float _1049 = fma(_1039, cbModelParam._m0[26u].z, fma(_1038, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1037)) - _1004;
        float _1050 = fma(_1039, cbModelParam._m0[27u].z, fma(_1038, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1037)) - _1008;
        float _1051 = fma(_1039, cbModelParam._m0[28u].z, fma(_1038, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1037)) - _1012;
        float _1055 = inversesqrt(dot(vec3(_1049, _1050, _1051), vec3(_1049, _1050, _1051)));
        float _1068 = ((_1055 * _1049) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1004 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1069 = ((_1055 * _1050) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1008 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1070 = ((_1055 * _1051) / cbModelParam._m0[34u].z) + ((((((_1012 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1073 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1068, _1069, _1070), 0.0);
        vec4 _1080 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1068, _1069, _1070), 0.0);
        vec4 _1087 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1068, _1069, _1070), 0.0);
        vec4 _1094 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1068, _1069, _1070), 0.0);
        float _1107 = exp2((_1073.w + (-0.5)) * 20.0) * 2.0;
        float _1108 = _1107 * (_1073.x + (-0.5));
        float _1109 = _1107 * (_1073.y + (-0.5));
        float _1110 = _1107 * (_1073.z + (-0.5));
        float _1117 = exp2((_1080.w + (-0.5)) * 20.0) * 2.0;
        float _1118 = _1117 * (_1080.x + (-0.5));
        float _1119 = _1117 * (_1080.y + (-0.5));
        float _1120 = _1117 * (_1080.z + (-0.5));
        float _1127 = exp2((_1087.w + (-0.5)) * 20.0) * 2.0;
        float _1128 = _1127 * (_1087.x + (-0.5));
        float _1129 = _1127 * (_1087.y + (-0.5));
        float _1130 = _1127 * (_1087.z + (-0.5));
        float _1137 = exp2((_1094.w + (-0.5)) * 20.0) * 2.0;
        float _1138 = _1137 * (_1094.x + (-0.5));
        float _1139 = _1137 * (_1094.y + (-0.5));
        float _1140 = _1137 * (_1094.z + (-0.5));
        float _1141 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
        float _1142 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1143 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1144 = _1108 * 0.5;
        float _1145 = _1118 * 0.5;
        float _1146 = _1128 * 0.5;
        float _1147 = dot(vec3(_1144, _1145, _1146), vec3(_1144, _1145, _1146));
        float _1152 = (_1147 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1147);
        float _1161 = (dot(vec3(_606, _607, _608), vec3(_1152 * _1144, _1152 * _1145, _1152 * _1146)) + 1.0) * 0.5;
        float _3784 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
        float _1171 = sqrt(((_1145 * _1145) + (_1144 * _1144)) + (_1146 * _1146)) / (_1141 + 9.9999997473787516355514526367188e-06);
        float _3795 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
        float _1172 = isnan(1.0) ? _3795 : (isnan(_3795) ? 1.0 : min(_3795, 1.0));
        float _1173 = _1172 * 2.0;
        float _1177 = (1.0 - _1172) / (_1172 + 1.0);
        float _3806 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
        float _1178 = isnan(1.0) ? _3806 : (isnan(_3806) ? 1.0 : min(_3806, 1.0));
        float _1187 = ((((1.0 - _1178) * (_1173 + 2.0)) * exp2(log2(isnan(1.0) ? _3784 : (isnan(_3784) ? 1.0 : min(_3784, 1.0))) * (_1173 + 1.0))) + _1178) * _1141;
        float _1188 = _1109 * 0.5;
        float _1189 = _1119 * 0.5;
        float _1190 = _1129 * 0.5;
        float _1191 = dot(vec3(_1188, _1189, _1190), vec3(_1188, _1189, _1190));
        float _1196 = (_1191 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1191);
        float _1204 = (dot(vec3(_606, _607, _608), vec3(_1196 * _1188, _1196 * _1189, _1196 * _1190)) + 1.0) * 0.5;
        float _3817 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        float _1213 = sqrt(((_1189 * _1189) + (_1188 * _1188)) + (_1190 * _1190)) / (_1142 + 9.9999997473787516355514526367188e-06);
        float _3828 = isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0));
        float _1214 = isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0));
        float _1215 = _1214 * 2.0;
        float _1219 = (1.0 - _1214) / (_1214 + 1.0);
        float _3839 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
        float _1220 = isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0));
        float _1229 = ((((1.0 - _1220) * (_1215 + 2.0)) * exp2(log2(isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0))) * (_1215 + 1.0))) + _1220) * _1142;
        float _1230 = _1110 * 0.5;
        float _1231 = _1120 * 0.5;
        float _1232 = _1130 * 0.5;
        float _1233 = dot(vec3(_1230, _1231, _1232), vec3(_1230, _1231, _1232));
        float _1238 = (_1233 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1233);
        float _1246 = (dot(vec3(_606, _607, _608), vec3(_1238 * _1230, _1238 * _1231, _1238 * _1232)) + 1.0) * 0.5;
        float _3850 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
        float _1255 = sqrt(((_1231 * _1231) + (_1230 * _1230)) + (_1232 * _1232)) / (_1143 + 9.9999997473787516355514526367188e-06);
        float _3861 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
        float _1256 = isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0));
        float _1257 = _1256 * 2.0;
        float _1261 = (1.0 - _1256) / (_1256 + 1.0);
        float _3872 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
        float _1262 = isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0));
        float _1271 = ((((1.0 - _1262) * (_1257 + 2.0)) * exp2(log2(isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0))) * (_1257 + 1.0))) + _1262) * _1143;
        _1279 = _1110;
        _1281 = _1109;
        _1282 = _1108;
        _1283 = _1120;
        _1284 = _1119;
        _1285 = _1118;
        _1286 = _1130;
        _1287 = _1129;
        _1288 = _1128;
        _1289 = _1143;
        _1290 = _1142;
        _1291 = _1141;
        _1292 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0)));
        _1293 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0)));
        _1294 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0)));
    }
    else
    {
        _1279 = _1280;
        _1281 = _1280;
        _1282 = _1280;
        _1283 = _1280;
        _1284 = _1280;
        _1285 = _1280;
        _1286 = _1280;
        _1287 = _1280;
        _1288 = _1280;
        _1289 = _1280;
        _1290 = _1280;
        _1291 = _1280;
        _1292 = 0.0;
        _1293 = 0.0;
        _1294 = 0.0;
    }
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1320 = fma(_977, cbModelParam._m0[30u].z, fma(_973, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _969));
        float _1324 = fma(_977, cbModelParam._m0[31u].z, fma(_973, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _969));
        float _1328 = fma(_977, cbModelParam._m0[32u].z, fma(_973, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _969));
        float _1351 = _969 + _606;
        float _1352 = _973 + _607;
        float _1353 = _977 + _608;
        float _1363 = fma(_1353, cbModelParam._m0[30u].z, fma(_1352, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1351)) - _1320;
        float _1364 = fma(_1353, cbModelParam._m0[31u].z, fma(_1352, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1351)) - _1324;
        float _1365 = fma(_1353, cbModelParam._m0[32u].z, fma(_1352, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1351)) - _1328;
        float _1369 = inversesqrt(dot(vec3(_1363, _1364, _1365), vec3(_1363, _1364, _1365)));
        float _1382 = ((_1369 * _1363) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1320 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1383 = ((_1369 * _1364) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1324 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1384 = ((_1369 * _1365) / cbModelParam._m0[35u].z) + ((((((_1328 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1386 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1382, _1383, _1384), 0.0);
        vec4 _1393 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1382, _1383, _1384), 0.0);
        vec4 _1400 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1382, _1383, _1384), 0.0);
        vec4 _1407 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1382, _1383, _1384), 0.0);
        float _1419 = exp2((_1386.w + (-0.5)) * 20.0) * 2.0;
        float _1420 = _1419 * (_1386.x + (-0.5));
        float _1421 = _1419 * (_1386.y + (-0.5));
        float _1422 = _1419 * (_1386.z + (-0.5));
        float _1429 = exp2((_1393.w + (-0.5)) * 20.0) * 2.0;
        float _1430 = _1429 * (_1393.x + (-0.5));
        float _1431 = _1429 * (_1393.y + (-0.5));
        float _1432 = _1429 * (_1393.z + (-0.5));
        float _1439 = exp2((_1400.w + (-0.5)) * 20.0) * 2.0;
        float _1440 = _1439 * (_1400.x + (-0.5));
        float _1441 = _1439 * (_1400.y + (-0.5));
        float _1442 = _1439 * (_1400.z + (-0.5));
        float _1449 = exp2((_1407.w + (-0.5)) * 20.0) * 2.0;
        float _1450 = _1449 * (_1407.x + (-0.5));
        float _1451 = _1449 * (_1407.y + (-0.5));
        float _1452 = _1449 * (_1407.z + (-0.5));
        float _1453 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1454 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1455 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
        float _1456 = _1420 * 0.5;
        float _1457 = _1430 * 0.5;
        float _1458 = _1440 * 0.5;
        float _1459 = dot(vec3(_1456, _1457, _1458), vec3(_1456, _1457, _1458));
        float _1464 = (_1459 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1459);
        float _1472 = (dot(vec3(_606, _607, _608), vec3(_1464 * _1456, _1464 * _1457, _1464 * _1458)) + 1.0) * 0.5;
        float _3913 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
        float _1481 = sqrt(((_1457 * _1457) + (_1456 * _1456)) + (_1458 * _1458)) / (_1453 + 9.9999997473787516355514526367188e-06);
        float _3924 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1482 = isnan(1.0) ? _3924 : (isnan(_3924) ? 1.0 : min(_3924, 1.0));
        float _1483 = _1482 * 2.0;
        float _1487 = (1.0 - _1482) / (_1482 + 1.0);
        float _3935 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1488 = isnan(1.0) ? _3935 : (isnan(_3935) ? 1.0 : min(_3935, 1.0));
        float _1497 = ((((1.0 - _1488) * (_1483 + 2.0)) * exp2(log2(isnan(1.0) ? _3913 : (isnan(_3913) ? 1.0 : min(_3913, 1.0))) * (_1483 + 1.0))) + _1488) * _1453;
        float _1498 = _1421 * 0.5;
        float _1499 = _1431 * 0.5;
        float _1500 = _1441 * 0.5;
        float _1501 = dot(vec3(_1498, _1499, _1500), vec3(_1498, _1499, _1500));
        float _1506 = (_1501 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1501);
        float _1514 = (dot(vec3(_606, _607, _608), vec3(_1506 * _1498, _1506 * _1499, _1506 * _1500)) + 1.0) * 0.5;
        float _3946 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1523 = sqrt(((_1499 * _1499) + (_1498 * _1498)) + (_1500 * _1500)) / (_1454 + 9.9999997473787516355514526367188e-06);
        float _3957 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1524 = isnan(1.0) ? _3957 : (isnan(_3957) ? 1.0 : min(_3957, 1.0));
        float _1525 = _1524 * 2.0;
        float _1529 = (1.0 - _1524) / (_1524 + 1.0);
        float _3968 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1530 = isnan(1.0) ? _3968 : (isnan(_3968) ? 1.0 : min(_3968, 1.0));
        float _1539 = ((((1.0 - _1530) * (_1525 + 2.0)) * exp2(log2(isnan(1.0) ? _3946 : (isnan(_3946) ? 1.0 : min(_3946, 1.0))) * (_1525 + 1.0))) + _1530) * _1454;
        float _1540 = _1422 * 0.5;
        float _1541 = _1432 * 0.5;
        float _1542 = _1442 * 0.5;
        float _1543 = dot(vec3(_1540, _1541, _1542), vec3(_1540, _1541, _1542));
        float _1548 = (_1543 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1543);
        float _1556 = (dot(vec3(_606, _607, _608), vec3(_1548 * _1540, _1548 * _1541, _1548 * _1542)) + 1.0) * 0.5;
        float _3979 = isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0));
        float _1565 = sqrt(((_1541 * _1541) + (_1540 * _1540)) + (_1542 * _1542)) / (_1455 + 9.9999997473787516355514526367188e-06);
        float _3990 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
        float _1566 = isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0));
        float _1567 = _1566 * 2.0;
        float _1571 = (1.0 - _1566) / (_1566 + 1.0);
        float _4001 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
        float _1572 = isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0));
        float _1581 = ((((1.0 - _1572) * (_1567 + 2.0)) * exp2(log2(isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0))) * (_1567 + 1.0))) + _1572) * _1455;
        _1589 = _1422;
        _1590 = _1421;
        _1591 = _1420;
        _1592 = _1432;
        _1593 = _1431;
        _1594 = _1430;
        _1595 = _1442;
        _1596 = _1441;
        _1597 = _1440;
        _1598 = _1455;
        _1599 = _1454;
        _1600 = _1453;
        _1601 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0)));
        _1602 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0)));
        _1603 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0)));
    }
    else
    {
        _1589 = _1280;
        _1590 = _1280;
        _1591 = _1280;
        _1592 = _1280;
        _1593 = _1280;
        _1594 = _1280;
        _1595 = _1280;
        _1596 = _1280;
        _1597 = _1280;
        _1598 = _1280;
        _1599 = _1280;
        _1600 = _1280;
        _1601 = 0.0;
        _1602 = 0.0;
        _1603 = 0.0;
    }
    float _1613 = (cbModelParam._m0[1u].x * (_1601 - _1292)) + _1292;
    float _1614 = (cbModelParam._m0[1u].x * (_1602 - _1293)) + _1293;
    float _1615 = (cbModelParam._m0[1u].x * (_1603 - _1294)) + _1294;
    float _1636 = fma(_1615, cbSceneParam._m0[89u].z, fma(_1614, cbSceneParam._m0[89u].y, _1613 * cbSceneParam._m0[89u].x));
    float _1639 = fma(_1615, cbSceneParam._m0[90u].z, fma(_1614, cbSceneParam._m0[90u].y, _1613 * cbSceneParam._m0[90u].x));
    float _1642 = fma(_1615, cbSceneParam._m0[91u].z, fma(_1614, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1613));
    float _1657 = _913 * 0.5;
    float _1658 = _914 * 0.5;
    float _1659 = _915 * 0.5;
    float _1660 = dot(vec4(_1657, _1658, _1659, 1.0), vec4(_1591, _1594, _1597, _1600));
    float _1663 = dot(vec4(_1657, _1658, _1659, 1.0), vec4(_1590, _1593, _1596, _1599));
    float _1666 = dot(vec4(_1657, _1658, _1659, 1.0), vec4(_1589, _1592, _1595, _1598));
    float _1697;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1673 = dot(vec4(_1657, _1658, _1659, 1.0), vec4(_1279, _1283, _1286, _1289));
        float _1677 = dot(vec4(_1657, _1658, _1659, 1.0), vec4(_1281, _1284, _1287, _1290));
        float _1681 = dot(vec4(_1657, _1658, _1659, 1.0), vec4(_1282, _1285, _1288, _1291));
        float _1688 = dot(vec4(cbModelParam._m0[39u]), vec4(_1657, _1658, _1659, 1.0));
        _1697 = dot(vec3(isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0)), isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0)), isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1688) ? 0.0 : (isnan(0.0) ? _1688 : max(0.0, _1688))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1697 = 1.0;
    }
    float _1708;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1699 = dot(vec4(cbModelParam._m0[40u]), vec4(_1657, _1658, _1659, 1.0));
        _1708 = dot(vec3(isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0)), isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0)), isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1699) ? 0.0 : (isnan(0.0) ? _1699 : max(0.0, _1699))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1708 = 1.0;
    }
    float _1712 = (_1708 * cbModelParam._m0[1u].x) + (_1697 * (1.0 - cbModelParam._m0[1u].x));
    float _1722 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _773);
    float _1723 = isnan(_1722) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1722 : min(cbModelParam._m0[25u].z, _1722));
    float _1803;
    float _1805;
    float _1807;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1770 = fma(_977, cbModelParam._m0[13u].z, fma(_973, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _969)) + cbModelParam._m0[13u].w;
        float _1774 = fma(_977, cbModelParam._m0[14u].z, fma(_973, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _969)) + cbModelParam._m0[14u].w;
        float _1778 = fma(_977, cbModelParam._m0[15u].z, fma(_973, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _969)) + cbModelParam._m0[15u].w;
        float _1781 = fma(_915, cbModelParam._m0[13u].z, fma(_914, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _913));
        float _1784 = fma(_915, cbModelParam._m0[14u].z, fma(_914, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _913));
        float _1787 = fma(_915, cbModelParam._m0[15u].z, fma(_914, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _913));
        float _1815;
        if (_1781 > 0.0)
        {
            _1815 = abs((1.0 - _1770) / _1781);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1781 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1770 + 1.0) / _1781);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1815 = frontier_phi_16_14_ladder;
        }
        float _2042;
        if (_1784 > 0.0)
        {
            _2042 = abs((1.0 - _1774) / _1784);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1784 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1774 + 1.0) / _1784);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2042 = frontier_phi_25_21_ladder;
        }
        float _2299;
        if (_1787 > 0.0)
        {
            _2299 = abs((1.0 - _1778) / _1787);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1787 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1778 + 1.0) / _1787);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2299 = frontier_phi_37_32_ladder;
        }
        float _2301 = isnan(_2042) ? _1815 : (isnan(_1815) ? _2042 : min(_1815, _2042));
        float _2302 = isnan(_2299) ? _2301 : (isnan(_2301) ? _2299 : min(_2301, _2299));
        float _2306 = (_2302 * _1781) + _1770;
        float _2307 = (_2302 * _1784) + _1774;
        float _2308 = (_2302 * _1787) + _1778;
        float _2309 = _2302 * 9.9999997473787516355514526367188e-05;
        float _2311 = (-1.0) - _2309;
        float _2313 = _2309 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2308 > _2313) || ((_2308 < _2311) || ((_2307 > _2313) || ((_2307 < _2311) || ((_2306 < _2311) || (_2306 > _2313))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2436 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2308, cbModelParam._m0[9u].z, fma(_2307, cbModelParam._m0[9u].y, _2306 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2308, cbModelParam._m0[10u].z, fma(_2307, cbModelParam._m0[10u].y, _2306 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2308, cbModelParam._m0[11u].z, fma(_2307, cbModelParam._m0[11u].y, _2306 * cbModelParam._m0[11u].x))), _1723);
            frontier_phi_15_37_ladder = _2436.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2436.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2436.x * cbModelParam._m0[1u].y;
        }
        _1803 = frontier_phi_15_37_ladder_2;
        _1805 = frontier_phi_15_37_ladder_1;
        _1807 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1791 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_913, _914, _915), _1723);
        _1803 = _1791.x * cbModelParam._m0[1u].y;
        _1805 = _1791.y * cbModelParam._m0[1u].y;
        _1807 = _1791.z * cbModelParam._m0[1u].y;
    }
    float _1811 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _773);
    float _1812 = isnan(_1811) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1811 : min(cbModelParam._m0[25u].w, _1811));
    float _1905;
    float _1907;
    float _1909;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1869 = fma(_977, cbModelParam._m0[21u].z, fma(_973, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _969)) + cbModelParam._m0[21u].w;
        float _1873 = fma(_977, cbModelParam._m0[22u].z, fma(_973, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _969)) + cbModelParam._m0[22u].w;
        float _1877 = fma(_977, cbModelParam._m0[23u].z, fma(_973, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _969)) + cbModelParam._m0[23u].w;
        float _1880 = fma(_915, cbModelParam._m0[21u].z, fma(_914, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _913));
        float _1883 = fma(_915, cbModelParam._m0[22u].z, fma(_914, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _913));
        float _1886 = fma(_915, cbModelParam._m0[23u].z, fma(_914, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _913));
        float _2047;
        if (_1880 > 0.0)
        {
            _2047 = abs((1.0 - _1869) / _1880);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1880 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1869 + 1.0) / _1880);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2047 = frontier_phi_27_23_ladder;
        }
        float _2326;
        if (_1883 > 0.0)
        {
            _2326 = abs((1.0 - _1873) / _1883);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1883 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1873 + 1.0) / _1883);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2326 = frontier_phi_39_34_ladder;
        }
        float _2539;
        if (_1886 > 0.0)
        {
            _2539 = abs((1.0 - _1877) / _1886);
        }
        else
        {
            float frontier_phi_48_45_ladder;
            if (_1886 < 0.0)
            {
                frontier_phi_48_45_ladder = abs((_1877 + 1.0) / _1886);
            }
            else
            {
                frontier_phi_48_45_ladder = 5000.0;
            }
            _2539 = frontier_phi_48_45_ladder;
        }
        float _2541 = isnan(_2326) ? _2047 : (isnan(_2047) ? _2326 : min(_2047, _2326));
        float _2542 = isnan(_2539) ? _2541 : (isnan(_2541) ? _2539 : min(_2541, _2539));
        float _2546 = (_2542 * _1880) + _1869;
        float _2547 = (_2542 * _1883) + _1873;
        float _2548 = (_2542 * _1886) + _1877;
        float _2549 = _2542 * 9.9999997473787516355514526367188e-05;
        float _2550 = (-1.0) - _2549;
        float _2552 = _2549 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2548 > _2552) || ((_2548 < _2550) || ((_2547 > _2552) || ((_2547 < _2550) || ((_2546 < _2550) || (_2546 > _2552))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2751 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2548, cbModelParam._m0[17u].z, fma(_2547, cbModelParam._m0[17u].y, _2546 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2548, cbModelParam._m0[18u].z, fma(_2547, cbModelParam._m0[18u].y, _2546 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2548, cbModelParam._m0[19u].z, fma(_2547, cbModelParam._m0[19u].y, _2546 * cbModelParam._m0[19u].x))), _1812);
            frontier_phi_24_48_ladder = _2751.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2751.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2751.x * cbModelParam._m0[1u].z;
        }
        _1905 = frontier_phi_24_48_ladder_2;
        _1907 = frontier_phi_24_48_ladder_1;
        _1909 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1889 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_913, _914, _915), _1812);
        _1905 = _1889.x * cbModelParam._m0[1u].z;
        _1907 = _1889.y * cbModelParam._m0[1u].z;
        _1909 = _1889.z * cbModelParam._m0[1u].z;
    }
    float _1922 = (((_940 * _891) + _941) * _905) * ((cbModelParam._m0[1u].w * (_1905 - _1803)) + _1803);
    float _1924 = (((_940 * _892) + _941) * _905) * ((cbModelParam._m0[1u].w * (_1907 - _1805)) + _1805);
    float _1926 = (((_940 * _893) + _941) * _905) * ((cbModelParam._m0[1u].w * (_1909 - _1807)) + _1807);
    float _1929 = fma(_1926, cbSceneParam._m0[89u].z, fma(_1924, cbSceneParam._m0[89u].y, _1922 * cbSceneParam._m0[89u].x));
    float _1932 = fma(_1926, cbSceneParam._m0[90u].z, fma(_1924, cbSceneParam._m0[90u].y, _1922 * cbSceneParam._m0[90u].x));
    float _1935 = fma(_1926, cbSceneParam._m0[91u].z, fma(_1924, cbSceneParam._m0[91u].y, _1922 * cbSceneParam._m0[91u].x));
    vec4 _1943 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_695, _696));
    float _1945 = _1943.w;
    float _1957 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1945);
    float _1958 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1945);
    float _1959 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1945);
    uvec4 _1963 = floatBitsToUint(cbInstanceData._m0[_797 + 5u]);
    uint _1965 = _1963.x * 14u;
    uint _1966 = _1965 + 13u;
    float _1973 = _905 + (-1.0);
    float _1978 = (cbLight._m0[_1966].x * _1973) + 1.0;
    float _1979 = (cbLight._m0[_1966].y * _1973) + 1.0;
    float _1980 = (cbLight._m0[_1966].z * _1973) + 1.0;
    float _1981 = (cbLight._m0[_1966].w * _1973) + 1.0;
    uint _1982 = _1965 + 5u;
    float _1988 = isnan(1.0) ? _1979 : (isnan(_1979) ? 1.0 : min(_1979, 1.0));
    uint _1992 = _1965 + 4u;
    float _2001 = isnan(1.0) ? _1978 : (isnan(_1978) ? 1.0 : min(_1978, 1.0));
    uint _2005 = _1965 | 1u;
    float _2016 = dot(vec3(cbLight._m0[_1965].xyz), vec3(_606, _607, _608));
    float _2019 = dot(vec3(cbLight._m0[_2005].xyz), vec3(_606, _607, _608));
    float _4137 = isnan(0.0) ? _2016 : (isnan(_2016) ? 0.0 : max(_2016, 0.0));
    float _4148 = isnan(0.0) ? _2019 : (isnan(_2019) ? 0.0 : max(_2019, 0.0));
    float _2024 = (isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0))) * 0.3183098733425140380859375;
    float _2026 = (isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0))) * 0.3183098733425140380859375;
    float _2033 = ((cbLight._m0[_1982].x * _1988) * _2026) + (((cbLight._m0[_1992].x * _1957) * _2001) * _2024);
    float _2034 = ((_1988 * cbLight._m0[_1982].y) * _2026) + (((cbLight._m0[_1992].y * _1958) * _2001) * _2024);
    float _2035 = ((_1988 * cbLight._m0[_1982].z) * _2026) + (((cbLight._m0[_1992].z * _1959) * _2001) * _2024);
    uvec4 _2039 = floatBitsToUint(cbLight._m0[_1965 + 12u]);
    bool _2041 = _2039.x == 0u;
    float _2052;
    float _2054;
    float _2056;
    if (_2041)
    {
        _2052 = _2033;
        _2054 = _2034;
        _2056 = _2035;
    }
    else
    {
        uint _2060 = _1965 + 6u;
        float _2076 = (dot(vec3(cbLight._m0[_1965 + 2u].xyz), vec3(_606, _607, _608)) * 0.5) + 0.5;
        float _2077 = _2076 * _2076;
        float _4159 = isnan(0.0) ? _2077 : (isnan(_2077) ? 0.0 : max(_2077, 0.0));
        float _2078 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
        float _2079 = isnan(1.0) ? _1980 : (isnan(_1980) ? 1.0 : min(_1980, 1.0));
        _2052 = (((cbLight._m0[_2060].x * 0.3183098733425140380859375) * _2078) * _2079) + _2033;
        _2054 = (((cbLight._m0[_2060].y * 0.3183098733425140380859375) * _2078) * _2079) + _2034;
        _2056 = (((cbLight._m0[_2060].z * 0.3183098733425140380859375) * _2078) * _2079) + _2035;
    }
    bool _2059 = _2039.y == 0u;
    float _2097;
    float _2099;
    float _2101;
    if (_2059)
    {
        _2097 = _2052;
        _2099 = _2054;
        _2101 = _2056;
    }
    else
    {
        uint _2270 = _1965 + 7u;
        float _2286 = (dot(vec3(cbLight._m0[_1965 + 3u].xyz), vec3(_606, _607, _608)) * 0.5) + 0.5;
        float _2287 = _2286 * _2286;
        float _4175 = isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0));
        float _2288 = isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0));
        float _2289 = isnan(1.0) ? _1981 : (isnan(_1981) ? 1.0 : min(_1981, 1.0));
        _2097 = (((cbLight._m0[_2270].x * 0.3183098733425140380859375) * _2288) * _2289) + _2052;
        _2099 = (((cbLight._m0[_2270].y * 0.3183098733425140380859375) * _2288) * _2289) + _2054;
        _2101 = (((cbLight._m0[_2270].z * 0.3183098733425140380859375) * _2288) * _2289) + _2056;
    }
    uint _2104 = _1965 + 8u;
    float _2117 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1965].w)) * _773) * 0.949999988079071044921875);
    float _2118 = _2117 * _2117;
    float _2119 = cbLight._m0[_1965].x + _687;
    float _2120 = cbLight._m0[_1965].y + _688;
    float _2121 = cbLight._m0[_1965].z + _689;
    float _2125 = inversesqrt(dot(vec3(_2119, _2120, _2121), vec3(_2119, _2120, _2121)));
    float _2126 = _2125 * _2119;
    float _2127 = _2125 * _2120;
    float _2128 = _2125 * _2121;
    float _2129 = dot(vec3(_606, _607, _608), vec3(cbLight._m0[_1965].xyz));
    float _4191 = isnan(0.0) ? _2129 : (isnan(_2129) ? 0.0 : max(_2129, 0.0));
    float _2132 = isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0));
    float _4202 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _2133 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
    float _2134 = dot(vec3(_606, _607, _608), vec3(_2126, _2127, _2128));
    float _4213 = isnan(0.0) ? _2134 : (isnan(_2134) ? 0.0 : max(_2134, 0.0));
    float _2137 = isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0));
    float _2138 = dot(vec3(cbLight._m0[_1965].xyz), vec3(_2126, _2127, _2128));
    float _4224 = isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0));
    float _2142 = _2118 * _2118;
    float _2146 = ((_2137 * _2137) * (_2142 + (-1.0))) + 1.0;
    float _2154 = exp2(log2(1.0 - (isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0)))) * 5.0);
    float _2155 = 0.959999978542327880859375 - _888;
    float _2157 = 0.959999978542327880859375 - _889;
    float _2158 = 0.959999978542327880859375 - _890;
    float _2165 = 1.0 - _2118;
    float _2176 = (0.5 / (((_2133 * ((_2132 * _2165) + _2118)) + 9.9999999392252902907785028219223e-09) + (((_2133 * _2165) + _2118) * _2132))) * _2132;
    float _4235 = isnan(0.0) ? _2176 : (isnan(_2176) ? 0.0 : max(_2176, 0.0));
    float _2178 = (isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0))) * (_2142 / ((_2146 * _2146) * 3.141590118408203125));
    uint _2192 = _1965 + 9u;
    float _2203 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2005].w)) * _773) * 0.949999988079071044921875);
    float _2204 = _2203 * _2203;
    float _2205 = cbLight._m0[_2005].x + _687;
    float _2206 = cbLight._m0[_2005].y + _688;
    float _2207 = cbLight._m0[_2005].z + _689;
    float _2211 = inversesqrt(dot(vec3(_2205, _2206, _2207), vec3(_2205, _2206, _2207)));
    float _2212 = _2211 * _2205;
    float _2213 = _2211 * _2206;
    float _2214 = _2211 * _2207;
    float _2215 = dot(vec3(_606, _607, _608), vec3(cbLight._m0[_2005].xyz));
    float _4246 = isnan(0.0) ? _2215 : (isnan(_2215) ? 0.0 : max(_2215, 0.0));
    float _2218 = isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0));
    float _2219 = dot(vec3(_606, _607, _608), vec3(_2212, _2213, _2214));
    float _4257 = isnan(0.0) ? _2219 : (isnan(_2219) ? 0.0 : max(_2219, 0.0));
    float _2222 = isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0));
    float _2223 = dot(vec3(cbLight._m0[_2005].xyz), vec3(_2212, _2213, _2214));
    float _4268 = isnan(0.0) ? _2223 : (isnan(_2223) ? 0.0 : max(_2223, 0.0));
    float _2227 = _2204 * _2204;
    float _2231 = ((_2222 * _2222) * (_2227 + (-1.0))) + 1.0;
    float _2238 = exp2(log2(1.0 - (isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0)))) * 5.0);
    float _2245 = 1.0 - _2204;
    float _2255 = (0.5 / (((_2133 * ((_2218 * _2245) + _2204)) + 9.9999999392252902907785028219223e-09) + (((_2133 * _2245) + _2204) * _2218))) * _2218;
    float _4279 = isnan(0.0) ? _2255 : (isnan(_2255) ? 0.0 : max(_2255, 0.0));
    float _2257 = (isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0))) * (_2227 / ((_2231 * _2231) * 3.141590118408203125));
    float _2267 = (((((_2238 * _2155) + _891) * cbLight._m0[_2192].x) * _2257) * _1988) + ((((cbLight._m0[_2104].x * _1957) * ((_2154 * _2155) + _891)) * _2178) * _2001);
    float _2268 = (((((_2238 * _2157) + _892) * cbLight._m0[_2192].y) * _2257) * _1988) + ((((cbLight._m0[_2104].y * _1958) * ((_2154 * _2157) + _892)) * _2178) * _2001);
    float _2269 = (((((_2238 * _2158) + _893) * cbLight._m0[_2192].z) * _2257) * _1988) + ((((cbLight._m0[_2104].z * _1959) * ((_2154 * _2158) + _893)) * _2178) * _2001);
    float _2331;
    float _2333;
    float _2335;
    if (_2041)
    {
        _2331 = _2267;
        _2333 = _2268;
        _2335 = _2269;
    }
    else
    {
        uint _2337 = _1965 + 2u;
        uint _2341 = _1965 + 10u;
        float _2355 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2337].w)) * _773) * 0.949999988079071044921875);
        float _2356 = _2355 * _2355;
        float _2357 = cbLight._m0[_2337].x + _687;
        float _2358 = cbLight._m0[_2337].y + _688;
        float _2359 = cbLight._m0[_2337].z + _689;
        float _2363 = inversesqrt(dot(vec3(_2357, _2358, _2359), vec3(_2357, _2358, _2359)));
        float _2364 = _2363 * _2357;
        float _2365 = _2363 * _2358;
        float _2366 = _2363 * _2359;
        float _2367 = dot(vec3(_606, _607, _608), vec3(cbLight._m0[_2337].xyz));
        float _4290 = isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0));
        float _2370 = isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0));
        float _2371 = dot(vec3(_606, _607, _608), vec3(_2364, _2365, _2366));
        float _4301 = isnan(0.0) ? _2371 : (isnan(_2371) ? 0.0 : max(_2371, 0.0));
        float _2374 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
        float _2375 = dot(vec3(cbLight._m0[_2337].xyz), vec3(_2364, _2365, _2366));
        float _4312 = isnan(0.0) ? _2375 : (isnan(_2375) ? 0.0 : max(_2375, 0.0));
        float _2379 = _2356 * _2356;
        float _2383 = ((_2374 * _2374) * (_2379 + (-1.0))) + 1.0;
        float _2390 = exp2(log2(1.0 - (isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0)))) * 5.0);
        float _2397 = 1.0 - _2356;
        float _2407 = (0.5 / (((_2133 * ((_2370 * _2397) + _2356)) + 9.9999999392252902907785028219223e-09) + (((_2133 * _2397) + _2356) * _2370))) * _2370;
        float _4323 = isnan(0.0) ? _2407 : (isnan(_2407) ? 0.0 : max(_2407, 0.0));
        float _2409 = (isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0))) * (_2379 / ((_2383 * _2383) * 3.141590118408203125));
        float _2410 = isnan(1.0) ? _1980 : (isnan(_1980) ? 1.0 : min(_1980, 1.0));
        _2331 = (((((_2390 * _2155) + _891) * cbLight._m0[_2341].x) * _2409) * _2410) + _2267;
        _2333 = (((((_2390 * _2157) + _892) * cbLight._m0[_2341].y) * _2409) * _2410) + _2268;
        _2335 = (((((_2390 * _2158) + _893) * cbLight._m0[_2341].z) * _2409) * _2410) + _2269;
    }
    float _2445;
    float _2447;
    float _2449;
    if (_2059)
    {
        _2445 = _2331;
        _2447 = _2333;
        _2449 = _2335;
    }
    else
    {
        uint _2456 = _1965 + 3u;
        uint _2460 = _1965 + 11u;
        float _2474 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2456].w)) * _773) * 0.949999988079071044921875);
        float _2475 = _2474 * _2474;
        float _2476 = cbLight._m0[_2456].x + _687;
        float _2477 = cbLight._m0[_2456].y + _688;
        float _2478 = cbLight._m0[_2456].z + _689;
        float _2482 = inversesqrt(dot(vec3(_2476, _2477, _2478), vec3(_2476, _2477, _2478)));
        float _2483 = _2482 * _2476;
        float _2484 = _2482 * _2477;
        float _2485 = _2482 * _2478;
        float _2486 = dot(vec3(_606, _607, _608), vec3(cbLight._m0[_2456].xyz));
        float _4339 = isnan(0.0) ? _2486 : (isnan(_2486) ? 0.0 : max(_2486, 0.0));
        float _2489 = isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0));
        float _2490 = dot(vec3(_606, _607, _608), vec3(_2483, _2484, _2485));
        float _4350 = isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : max(_2490, 0.0));
        float _2493 = isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0));
        float _2494 = dot(vec3(cbLight._m0[_2456].xyz), vec3(_2483, _2484, _2485));
        float _4361 = isnan(0.0) ? _2494 : (isnan(_2494) ? 0.0 : max(_2494, 0.0));
        float _2498 = _2475 * _2475;
        float _2502 = ((_2493 * _2493) * (_2498 + (-1.0))) + 1.0;
        float _2509 = exp2(log2(1.0 - (isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0)))) * 5.0);
        float _2516 = 1.0 - _2475;
        float _2526 = (0.5 / (((_2133 * ((_2489 * _2516) + _2475)) + 9.9999999392252902907785028219223e-09) + (((_2133 * _2516) + _2475) * _2489))) * _2489;
        float _4372 = isnan(0.0) ? _2526 : (isnan(_2526) ? 0.0 : max(_2526, 0.0));
        float _2528 = (isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0))) * (_2498 / ((_2502 * _2502) * 3.141590118408203125));
        float _2529 = isnan(1.0) ? _1981 : (isnan(_1981) ? 1.0 : min(_1981, 1.0));
        _2445 = (((((_2509 * _2155) + _891) * cbLight._m0[_2460].x) * _2528) * _2529) + _2331;
        _2447 = (((((_2509 * _2157) + _892) * cbLight._m0[_2460].y) * _2528) * _2529) + _2333;
        _2449 = (((((_2509 * _2158) + _893) * cbLight._m0[_2460].z) * _2528) * _2529) + _2335;
    }
    float _2663;
    float _2665;
    float _2667;
    float _2669;
    float _2671;
    float _2673;
    if (_1963.y == 0u)
    {
        float _2604 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2605 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2604;
        float _2606 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2604;
        float _2607 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2604;
        uvec4 _2619 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2620 = _2619.x;
        uint _2631 = uint((float(_2619.y) * floor(float(uint(cbSceneParam._m0[85u].y * _696) / _2620))) + floor(float(uint(cbSceneParam._m0[85u].x * _695) / _2620)));
        float _2641 = (log2(_2607 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2642 = isnan(0.0) ? _2641 : (isnan(_2641) ? 0.0 : max(_2641, 0.0));
        uint _2645 = uint(isnan(14.0) ? _2642 : (isnan(_2642) ? 14.0 : min(_2642, 14.0)));
        uvec4 _2650 = texelFetch(g_lightClusterGridBuffer, int(((_2645 << 2u) + (_2631 << 6u)) >> 2u));
        uint _2651 = _2650.x;
        uint _2652 = _2619.z;
        float _2756;
        float _2758;
        float _2760;
        float _2762;
        float _2764;
        float _2766;
        if (((((1u << ((_2652 >> 4u) & 15u)) + 4294967295u) & _2651) == 0u) || ((_2652 & 240u) == 0u))
        {
            _2756 = 0.0;
            _2758 = 0.0;
            _2760 = 0.0;
            _2762 = 0.0;
            _2764 = 0.0;
            _2766 = 0.0;
        }
        else
        {
            float _2757;
            float _2759;
            float _2761;
            float _2763;
            float _2765;
            float _2767;
            float _2900 = 0.0;
            float _2901 = 0.0;
            float _2902 = 0.0;
            float _2903 = 0.0;
            float _2904 = 0.0;
            float _2905 = 0.0;
            uint _2906 = 0u;
            uint _2915;
            bool _2916;
            for (;;)
            {
                _2915 = texelFetch(g_lightClassification, int((((_2645 << 5u) + (_2631 << 9u)) + (_2906 << 2u)) >> 2u)).x;
                _2916 = _2915 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2916)
                {
                    frontier_phi_63_pred = _2905;
                    frontier_phi_63_pred_1 = _2904;
                    frontier_phi_63_pred_2 = _2903;
                    frontier_phi_63_pred_3 = _2902;
                    frontier_phi_63_pred_4 = _2901;
                    frontier_phi_63_pred_5 = _2900;
                }
                else
                {
                    float _3024;
                    float _3025;
                    float _3026;
                    float _3027;
                    float _3028;
                    float _3029;
                    uint _3030;
                    _3024 = _2900;
                    _3025 = _2901;
                    _3026 = _2902;
                    _3027 = _2903;
                    _3028 = _2904;
                    _3029 = _2905;
                    _3030 = _2915;
                    float _2956;
                    float _2957;
                    float _2958;
                    float _2959;
                    float _2960;
                    float _2961;
                    for (;;)
                    {
                        uint _3034 = uint(findLSB(_3030)) + (_2906 << 5u);
                        uint _3031 = (_3030 + 4294967295u) & _3030;
                        uint _3036 = _3034 * 48u;
                        vec4 _3050 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3036)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 3u)).x));
                        uint _3056 = (_3034 * 48u) + 4u;
                        vec4 _3069 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3056)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 3u)).x));
                        uint _3075 = (_3034 * 48u) + 8u;
                        vec3 _3086 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3075)).x, texelFetch(g_PointLightRenderingBuffer, int(_3075 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3075 + 2u)).x));
                        float _3090 = _3050.x - _2605;
                        float _3091 = _3050.y - _2606;
                        float _3092 = _3050.z - _2607;
                        float _3093 = dot(vec3(_3090, _3091, _3092), vec3(_3090, _3091, _3092));
                        float _3096 = inversesqrt(_3093);
                        float _3097 = _3096 * _3090;
                        float _3098 = _3096 * _3091;
                        float _3099 = _3096 * _3092;
                        float _3100 = dot(vec3(_718, _721, _724), vec3(_3097, _3098, _3099));
                        float _3105 = 1.0 - (_3093 * _3050.w);
                        float _4398 = isnan(0.0) ? _3105 : (isnan(_3105) ? 0.0 : max(_3105, 0.0));
                        float _3106 = isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0));
                        float _3107 = sqrt(_3093) * _3069.w;
                        float _3110 = 1.39999997615814208984375 / (_3107 + 1.39999997615814208984375);
                        float _3111 = _3110 * _3110;
                        float _3114 = ((1.0 - _3111) * _3100) + _3111;
                        float _3117 = _3107 * _3107;
                        float _3121 = ((isnan(0.0) ? _3114 : (isnan(_3114) ? 0.0 : max(_3114, 0.0))) * _3106) / ((_3117 * 0.699999988079071044921875) + 1.0);
                        float _3125 = (-0.0) - _2605;
                        float _3126 = (-0.0) - _2606;
                        float _3127 = (-0.0) - _2607;
                        float _3131 = inversesqrt(dot(vec3(_3125, _3126, _3127), vec3(_3125, _3126, _3127)));
                        float _3132 = _3131 * _3125;
                        float _3133 = _3131 * _3126;
                        float _3134 = _3131 * _3127;
                        float _3142 = exp2(log2(1.0 / ((_3117 * 3.5) + 5.0)) * 0.25);
                        float _3143 = 1.0 - _921;
                        float _3150 = sqrt(1.0 - ((1.0 - (_3143 * _3143)) * (1.0 - (_3142 * _3142))));
                        float _3151 = _3150 * _3150;
                        float _3152 = _3151 * _3151;
                        float _3153 = _3132 + _3097;
                        float _3154 = _3133 + _3098;
                        float _3155 = _3134 + _3099;
                        float _3159 = inversesqrt(dot(vec3(_3153, _3154, _3155), vec3(_3153, _3154, _3155)));
                        float _3163 = dot(vec3(_718, _721, _724), vec3(_3132, _3133, _3134));
                        float _4414 = isnan(0.0) ? _3163 : (isnan(_3163) ? 0.0 : max(_3163, 0.0));
                        float _3166 = isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0));
                        float _3167 = dot(vec3(_718, _721, _724), vec3(_3159 * _3153, _3159 * _3154, _3159 * _3155));
                        float _4425 = isnan(0.0) ? _3167 : (isnan(_3167) ? 0.0 : max(_3167, 0.0));
                        float _3170 = isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0));
                        float _3174 = ((_3170 * _3170) * (_3152 + (-1.0))) + 1.0;
                        float _3175 = _3110 * _3151;
                        float _3176 = _3175 * _3175;
                        float _3179 = ((1.0 - _3176) * _3100) + _3176;
                        float _4436 = isnan(0.0) ? _3179 : (isnan(_3179) ? 0.0 : max(_3179, 0.0));
                        float _3180 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
                        float _3181 = 1.0 - _3151;
                        float _3191 = (0.5 / (((_3180 * ((_3166 * _3181) + _3151)) + 9.9999999392252902907785028219223e-09) + (((_3180 * _3181) + _3151) * _3166))) * _3180;
                        float _4447 = isnan(0.0) ? _3191 : (isnan(_3191) ? 0.0 : max(_3191, 0.0));
                        float _3202 = (((_3152 * 3.1415927410125732421875) * (isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0)))) / ((_3174 * _3174) * ((_3117 * 2.1991131305694580078125) + 3.141590118408203125))) * _3106;
                        _2959 = (_3121 * _3069.x) + _3027;
                        _2960 = (_3121 * _3069.y) + _3028;
                        _2961 = (_3121 * _3069.z) + _3029;
                        _2956 = (_3202 * _3086.x) + _3024;
                        _2957 = (_3202 * _3086.y) + _3025;
                        _2958 = (_3202 * _3086.z) + _3026;
                        if (_3031 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3024 = _2956;
                            _3025 = _2957;
                            _3026 = _2958;
                            _3027 = _2959;
                            _3028 = _2960;
                            _3029 = _2961;
                            _3030 = _3031;
                        }
                    }
                    frontier_phi_63_pred = _2961;
                    frontier_phi_63_pred_1 = _2960;
                    frontier_phi_63_pred_2 = _2959;
                    frontier_phi_63_pred_3 = _2958;
                    frontier_phi_63_pred_4 = _2957;
                    frontier_phi_63_pred_5 = _2956;
                }
                _2767 = frontier_phi_63_pred;
                _2765 = frontier_phi_63_pred_1;
                _2763 = frontier_phi_63_pred_2;
                _2761 = frontier_phi_63_pred_3;
                _2759 = frontier_phi_63_pred_4;
                _2757 = frontier_phi_63_pred_5;
                uint _2907 = _2906 + 1u;
                if (_2907 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2900 = _2757;
                    _2901 = _2759;
                    _2902 = _2761;
                    _2903 = _2763;
                    _2904 = _2765;
                    _2905 = _2767;
                    _2906 = _2907;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2756 = _2757;
            _2758 = _2759;
            _2760 = _2761;
            _2762 = _2763;
            _2764 = _2765;
            _2766 = _2767;
        }
        uvec4 _2770 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2771 = _2770.z;
        uint _2773 = (_2771 >> 8u) & 15u;
        float _2868;
        float _2870;
        float _2872;
        float _2874;
        float _2876;
        float _2878;
        if (((4294967295u << _2773) & _2651) == 0u)
        {
            _2868 = _2756;
            _2870 = _2758;
            _2872 = _2760;
            _2874 = _2762;
            _2876 = _2764;
            _2878 = _2766;
        }
        else
        {
            float _2893 = inversesqrt(dot(vec3(_2605, _2606, _2607), vec3(_2605, _2606, _2607)));
            float _2894 = _2893 * _2605;
            float _2895 = _2893 * _2606;
            float _2896 = _2893 * _2607;
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_2773 < ((_2771 >> 12u) & 15u))
            {
                float _2869;
                float _2871;
                float _2873;
                float _2875;
                float _2877;
                float _2879;
                float _3007 = _2756;
                float _3008 = _2758;
                float _3009 = _2760;
                float _3010 = _2762;
                float _3011 = _2764;
                float _3012 = _2766;
                uint _3013 = _2773;
                uint _3022;
                bool _3023;
                for (;;)
                {
                    _3022 = texelFetch(g_lightClassification, int((((_2645 << 5u) + (_2631 << 9u)) + (_3013 << 2u)) >> 2u)).x;
                    _3023 = _3022 == 0u;
                    float frontier_phi_69_pred;
                    float frontier_phi_69_pred_1;
                    float frontier_phi_69_pred_2;
                    float frontier_phi_69_pred_3;
                    float frontier_phi_69_pred_4;
                    float frontier_phi_69_pred_5;
                    if (_3023)
                    {
                        frontier_phi_69_pred = _3012;
                        frontier_phi_69_pred_1 = _3011;
                        frontier_phi_69_pred_2 = _3010;
                        frontier_phi_69_pred_3 = _3009;
                        frontier_phi_69_pred_4 = _3008;
                        frontier_phi_69_pred_5 = _3007;
                    }
                    else
                    {
                        float _3207;
                        float _3208;
                        float _3209;
                        float _3210;
                        float _3211;
                        float _3212;
                        float _3502;
                        float _3503;
                        float _3504;
                        float _3505;
                        float _3506;
                        float _3507;
                        float _3220 = _3007;
                        float _3221 = _3008;
                        float _3222 = _3009;
                        float _3223 = _3010;
                        float _3224 = _3011;
                        float _3225 = _3012;
                        uint _3226 = _3022;
                        uint _3227;
                        vec4 _3252;
                        float _3253;
                        vec4 _3268;
                        vec3 _3280;
                        vec4 _3295;
                        vec4 _3311;
                        float _3358;
                        bool _3359;
                        for (;;)
                        {
                            uint _3237 = ((_3013 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3226));
                            _3227 = (_3226 + 4294967295u) & _3226;
                            uint _3239 = _3237 * 40u;
                            _3252 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3239)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 3u)).x));
                            _3253 = _3252.w;
                            uint _3255 = (_3237 * 40u) + 4u;
                            _3268 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3255)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 3u)).x));
                            uint _3270 = (_3237 * 40u) + 8u;
                            _3280 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3270)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3270 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3270 + 2u)).x));
                            uint _3282 = (_3237 * 40u) + 16u;
                            _3295 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3282)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3282 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3282 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3282 + 3u)).x));
                            uint _3298 = (_3237 * 40u) + 20u;
                            _3311 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3298)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 3u)).x));
                            uint _3314 = (_3237 * 40u) + 24u;
                            vec4 _3327 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3314)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3314 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3314 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3314 + 3u)).x));
                            uint _3333 = (_3237 * 40u) + 28u;
                            vec4 _3346 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3333)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3333 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3333 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3333 + 3u)).x));
                            _3358 = fma(_2607, _3346.z, fma(_2606, _3346.y, _3346.x * _2605)) + _3346.w;
                            _3359 = !((fma(_2607, _3327.z, fma(_2606, _3327.y, _3327.x * _2605)) + _3327.w) <= 0.0);
                            float frontier_phi_75_pred;
                            float frontier_phi_75_pred_1;
                            float frontier_phi_75_pred_2;
                            float frontier_phi_75_pred_3;
                            float frontier_phi_75_pred_4;
                            float frontier_phi_75_pred_5;
                            if (_3359)
                            {
                                float _3386 = _3252.x - _2605;
                                float _3387 = _3252.y - _2606;
                                float _3388 = _3252.z - _2607;
                                float _3389 = dot(vec3(_3386, _3387, _3388), vec3(_3386, _3387, _3388));
                                float _3392 = inversesqrt(_3389);
                                float _3393 = _3392 * _3386;
                                float _3394 = _3392 * _3387;
                                float _3395 = _3392 * _3388;
                                float _3399 = 1.0 - (_3389 / (_3253 * _3253));
                                float _4458 = isnan(0.0) ? _3399 : (isnan(_3399) ? 0.0 : max(_3399, 0.0));
                                float _3400 = isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0));
                                float _3404 = sqrt(_3389) * _3268.w;
                                float _3406 = 1.39999997615814208984375 / (_3404 + 1.39999997615814208984375);
                                float _3407 = _3406 * _3406;
                                float _3410 = ((1.0 - _3407) * dot(vec3(_3393, _3394, _3395), vec3(_718, _721, _724))) + _3407;
                                float _3413 = _3404 * _3404;
                                float _3417 = (fma(_2607, _3295.z, fma(_2606, _3295.y, _3295.x * _2605)) + _3295.w) / _3358;
                                float _3418 = (fma(_2607, _3311.z, fma(_2606, _3311.y, _3311.x * _2605)) + _3311.w) / _3358;
                                float _3422 = 1.0 - dot(vec2(_3417, _3418), vec2(_3417, _3418));
                                float _4474 = isnan(0.0) ? _3422 : (isnan(_3422) ? 0.0 : max(_3422, 0.0));
                                float _3423 = isnan(1.0) ? _4474 : (isnan(_4474) ? 1.0 : min(_4474, 1.0));
                                float _3424 = _3423 * (((isnan(0.0) ? _3410 : (isnan(_3410) ? 0.0 : max(_3410, 0.0))) * _3400) / ((_3413 * 0.699999988079071044921875) + 1.0));
                                float _3436 = exp2(log2(1.0 / ((_3413 * 3.5) + 5.0)) * 0.25);
                                float _3437 = 1.0 - _921;
                                float _3444 = sqrt(1.0 - ((1.0 - (_3437 * _3437)) * (1.0 - (_3436 * _3436))));
                                float _3445 = _3444 * _3444;
                                float _3446 = _3445 * _3445;
                                float _3447 = _3393 - _2894;
                                float _3448 = _3394 - _2895;
                                float _3449 = _3395 - _2896;
                                float _3453 = inversesqrt(dot(vec3(_3447, _3448, _3449), vec3(_3447, _3448, _3449)));
                                float _3457 = dot(vec3(_718, _721, _724), vec3((-0.0) - _2894, (-0.0) - _2895, (-0.0) - _2896));
                                float _4485 = isnan(0.0) ? _3457 : (isnan(_3457) ? 0.0 : max(_3457, 0.0));
                                float _3460 = isnan(1.0) ? _4485 : (isnan(_4485) ? 1.0 : min(_4485, 1.0));
                                float _3461 = dot(vec3(_718, _721, _724), vec3(_3453 * _3447, _3453 * _3448, _3453 * _3449));
                                float _4496 = isnan(0.0) ? _3461 : (isnan(_3461) ? 0.0 : max(_3461, 0.0));
                                float _3464 = isnan(1.0) ? _4496 : (isnan(_4496) ? 1.0 : min(_4496, 1.0));
                                float _3468 = ((_3464 * _3464) * (_3446 + (-1.0))) + 1.0;
                                float _3469 = _3406 * _3445;
                                float _3470 = _3469 * _3469;
                                float _3476 = ((1.0 - _3470) * dot(vec3(_718, _721, _724), vec3(_3393, _3394, _3395))) + _3470;
                                float _4507 = isnan(0.0) ? _3476 : (isnan(_3476) ? 0.0 : max(_3476, 0.0));
                                float _3477 = isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0));
                                float _3478 = 1.0 - _3445;
                                float _3488 = (0.5 / (((_3477 * ((_3460 * _3478) + _3445)) + 9.9999999392252902907785028219223e-09) + (((_3477 * _3478) + _3445) * _3460))) * _3477;
                                float _4518 = isnan(0.0) ? _3488 : (isnan(_3488) ? 0.0 : max(_3488, 0.0));
                                float _3498 = (_3423 * _3400) * (((_3446 * 3.1415927410125732421875) * (isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0)))) / ((_3468 * _3468) * ((_3413 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_75_pred = _3424 * _3268.z;
                                frontier_phi_75_pred_1 = _3424 * _3268.y;
                                frontier_phi_75_pred_2 = _3424 * _3268.x;
                                frontier_phi_75_pred_3 = _3498 * _3280.z;
                                frontier_phi_75_pred_4 = _3498 * _3280.y;
                                frontier_phi_75_pred_5 = _3498 * _3280.x;
                            }
                            else
                            {
                                frontier_phi_75_pred = 0.0;
                                frontier_phi_75_pred_1 = 0.0;
                                frontier_phi_75_pred_2 = 0.0;
                                frontier_phi_75_pred_3 = 0.0;
                                frontier_phi_75_pred_4 = 0.0;
                                frontier_phi_75_pred_5 = 0.0;
                            }
                            _3507 = frontier_phi_75_pred;
                            _3506 = frontier_phi_75_pred_1;
                            _3505 = frontier_phi_75_pred_2;
                            _3504 = frontier_phi_75_pred_3;
                            _3503 = frontier_phi_75_pred_4;
                            _3502 = frontier_phi_75_pred_5;
                            _3210 = _3505 + _3223;
                            _3211 = _3506 + _3224;
                            _3212 = _3507 + _3225;
                            _3207 = _3502 + _3220;
                            _3208 = _3503 + _3221;
                            _3209 = _3504 + _3222;
                            if (_3227 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3220 = _3207;
                                _3221 = _3208;
                                _3222 = _3209;
                                _3223 = _3210;
                                _3224 = _3211;
                                _3225 = _3212;
                                _3226 = _3227;
                                continue;
                            }
                        }
                        frontier_phi_69_pred = _3212;
                        frontier_phi_69_pred_1 = _3211;
                        frontier_phi_69_pred_2 = _3210;
                        frontier_phi_69_pred_3 = _3209;
                        frontier_phi_69_pred_4 = _3208;
                        frontier_phi_69_pred_5 = _3207;
                    }
                    _2879 = frontier_phi_69_pred;
                    _2877 = frontier_phi_69_pred_1;
                    _2875 = frontier_phi_69_pred_2;
                    _2873 = frontier_phi_69_pred_3;
                    _2871 = frontier_phi_69_pred_4;
                    _2869 = frontier_phi_69_pred_5;
                    uint _3014 = _3013 + 1u;
                    if (_3014 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3007 = _2869;
                        _3008 = _2871;
                        _3009 = _2873;
                        _3010 = _2875;
                        _3011 = _2877;
                        _3012 = _2879;
                        _3013 = _3014;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _2879;
                frontier_phi_57_58_ladder_1 = _2877;
                frontier_phi_57_58_ladder_2 = _2875;
                frontier_phi_57_58_ladder_3 = _2873;
                frontier_phi_57_58_ladder_4 = _2871;
                frontier_phi_57_58_ladder_5 = _2869;
            }
            else
            {
                frontier_phi_57_58_ladder = _2766;
                frontier_phi_57_58_ladder_1 = _2764;
                frontier_phi_57_58_ladder_2 = _2762;
                frontier_phi_57_58_ladder_3 = _2760;
                frontier_phi_57_58_ladder_4 = _2758;
                frontier_phi_57_58_ladder_5 = _2756;
            }
            _2868 = frontier_phi_57_58_ladder_5;
            _2870 = frontier_phi_57_58_ladder_4;
            _2872 = frontier_phi_57_58_ladder_3;
            _2874 = frontier_phi_57_58_ladder_2;
            _2876 = frontier_phi_57_58_ladder_1;
            _2878 = frontier_phi_57_58_ladder;
        }
        float _2883 = isnan(1.0) ? _905 : (isnan(_905) ? 1.0 : min(_905, 1.0));
        _2663 = (_2883 * _2874) + _2097;
        _2665 = (_2883 * _2876) + _2099;
        _2667 = (_2883 * _2878) + _2101;
        _2669 = ((_2868 * _891) * _2883) + _2445;
        _2671 = ((_2870 * _892) * _2883) + _2447;
        _2673 = ((_2872 * _893) * _2883) + _2449;
    }
    else
    {
        _2663 = _2097;
        _2665 = _2099;
        _2667 = _2101;
        _2669 = _2445;
        _2671 = _2447;
        _2673 = _2449;
    }
    float _4534 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    float _4545 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    float _4556 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    float _4567 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _2691 = ((isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0))) * (_2663 + ((isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0))) * _905))) + ((_2669 + ((isnan(0.0) ? _1929 : (isnan(_1929) ? 0.0 : max(_1929, 0.0))) * _1712)) * cbPerFrame._m0[3u].x);
    float _2692 = ((isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0))) * (_2665 + ((isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0))) * _905))) + ((_2671 + ((isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0))) * _1712)) * cbPerFrame._m0[3u].x);
    float _2693 = ((isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0))) * (_2667 + ((isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0))) * _905))) + ((_2673 + ((isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0))) * _1712)) * cbPerFrame._m0[3u].x);
    float _2701 = cbInstanceData._m0[_797 + 6u].w * (isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0)));
    float _2706 = _695 / cbSceneParam._m0[86u].x;
    float _2707 = _696 / cbSceneParam._m0[86u].y;
    vec4 _2721 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2706, _2707, (log2((isnan(cbSceneParam._m0[77u].w) ? _630 : (isnan(_630) ? cbSceneParam._m0[77u].w : min(_630, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2723 = _2721.x;
    float _2724 = _2721.y;
    float _2725 = _2721.z;
    float _2726 = _2721.w;
    float _2818;
    float _2820;
    float _2822;
    float _2824;
    if (_630 > cbSceneParam._m0[78u].w)
    {
        float _2781 = isnan(_630) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _630 : min(cbSceneParam._m0[80u].w, _630));
        float _2782 = _2781 / _630;
        float _2793 = _2782 * _680;
        float _2794 = _681 * _2782;
        float _2795 = (-0.0) - _2794;
        float _2796 = _2782 * _682;
        float _2798 = (cbSceneParam._m0[77u].w * _2795) / _2781;
        float _2799 = _2798 + cbSceneParam._m0[79u].w;
        float _2800 = cbSceneParam._m0[79u].w - _2794;
        float _2806 = sqrt(((_2793 * _2793) + (_2794 * _2794)) + (_2796 * _2796));
        float _2809 = (1.0 - (cbSceneParam._m0[77u].w / _2781)) * _2806;
        float _2814 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2816 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2969;
        if (abs((_2795 - _2798) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2969 = ((((_2799 > 0.0) ? exp2(_2814 * _2799) : (2.0 - exp2(_2816 * _2799))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2809;
        }
        else
        {
            float _2929 = 1.0 / cbSceneParam._m0[80u].x;
            float _2930 = isnan(_2800) ? _2799 : (isnan(_2799) ? _2800 : max(_2799, _2800));
            float _2931 = isnan(_2800) ? _2799 : (isnan(_2799) ? _2800 : min(_2799, _2800));
            float _2940 = isnan(0.0) ? _2930 : (isnan(_2930) ? 0.0 : min(_2930, 0.0));
            float _2941 = isnan(0.0) ? _2931 : (isnan(_2931) ? 0.0 : min(_2931, 0.0));
            _2969 = ((abs(_2806 / _2795) * cbSceneParam._m0[80u].y) * ((((_2940 - _2941) * 2.0) - ((exp2(_2814 * (isnan(0.0) ? _2930 : (isnan(_2930) ? 0.0 : max(_2930, 0.0)))) - exp2(_2814 * (isnan(0.0) ? _2931 : (isnan(_2931) ? 0.0 : max(_2931, 0.0))))) * _2929)) - ((exp2(_2816 * _2940) - exp2(_2816 * _2941)) * _2929))) + (_2809 * cbSceneParam._m0[80u].z);
        }
        vec4 _2971 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2706, _2707, 1.0), 0.0);
        float _2980 = exp2((_2969 * (-1.44269502162933349609375)) * (1.0 - _2971.w));
        float _2981 = log2(_2980);
        float _2997 = log2(_2726);
        _2818 = (exp2(_2997 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2981 * cbSceneParam._m0[78u].x)) * _2971.x) / cbSceneParam._m0[78u].x)) + _2723;
        _2820 = (exp2(_2997 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2981 * cbSceneParam._m0[78u].y)) * _2971.y) / cbSceneParam._m0[78u].y)) + _2724;
        _2822 = (exp2(_2997 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2981 * cbSceneParam._m0[78u].z)) * _2971.z) / cbSceneParam._m0[78u].z)) + _2725;
        _2824 = _2980 * _2726;
    }
    else
    {
        _2818 = _2723;
        _2820 = _2724;
        _2822 = _2725;
        _2824 = _2726;
    }
    float _2836 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2837 = _2836 == 3.0;
    float _2838 = log2(_2824);
    float _2845 = exp2(_2838 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2691 : (isnan(_2691) ? 0.0 : max(_2691, 0.0)));
    float _2846 = exp2(_2838 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2692 : (isnan(_2692) ? 0.0 : max(_2692, 0.0)));
    float _2847 = exp2(_2838 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : max(_2693, 0.0)));
    float _2856 = (_2836 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2856 * (_2837 ? _2845 : (_2845 + (cbSceneParam._m0[72u].w * _2818)));
    SV_Target.y = _2856 * (_2837 ? _2846 : (_2846 + (cbSceneParam._m0[72u].w * _2820)));
    SV_Target.z = _2856 * (_2837 ? _2847 : (_2847 + (cbSceneParam._m0[72u].w * _2822)));
    SV_Target.w = _2701;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2701;
}


