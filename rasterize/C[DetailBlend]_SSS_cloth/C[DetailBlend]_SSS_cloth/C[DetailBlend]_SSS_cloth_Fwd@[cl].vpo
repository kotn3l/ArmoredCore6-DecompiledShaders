#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in vec3 POSITION_1;
layout(location = 2) in uvec4 NORMAL;
layout(location = 3) in uvec4 NORMAL_1;
layout(location = 4) in uvec4 TANGENT;
layout(location = 5) in uvec4 TANGENT_1;
layout(location = 6) in uint BINORMAL;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1_1;
layout(location = 2) out vec4 NORMAL_2;
layout(location = 3) out vec4 TANGENT_2;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;

void main()
{
    uint _77 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1_1.x = 0.0;
    POSITION_1_1.y = 0.0;
    POSITION_1_1.z = 0.0;
    POSITION_1_1.w = 0.0;
    NORMAL_2.x = 0.0;
    NORMAL_2.y = 0.0;
    NORMAL_2.z = 0.0;
    NORMAL_2.w = 0.0;
    TANGENT_2.x = 0.0;
    TANGENT_2.y = 0.0;
    TANGENT_2.z = 0.0;
    TANGENT_2.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    float _174 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _176 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _177 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _184 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _185 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _186 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _253;
    float _254;
    float _255;
    float _256;
    float _257;
    float _258;
    float _259;
    float _260;
    float _261;
    float _262;
    float _263;
    float _264;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _201 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _77;
        uint _214 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_201)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _221 = _214 + 1u;
        uint _228 = _214 + 2u;
        _253 = cbObjMatrix._m0[_214].x;
        _254 = cbObjMatrix._m0[_214].y;
        _255 = cbObjMatrix._m0[_214].z;
        _256 = cbObjMatrix._m0[_214].w;
        _257 = cbObjMatrix._m0[_221].x;
        _258 = cbObjMatrix._m0[_221].y;
        _259 = cbObjMatrix._m0[_221].z;
        _260 = cbObjMatrix._m0[_221].w;
        _261 = cbObjMatrix._m0[_228].x;
        _262 = cbObjMatrix._m0[_228].y;
        _263 = cbObjMatrix._m0[_228].z;
        _264 = cbObjMatrix._m0[_228].w;
    }
    else
    {
        _253 = cbvModelParam._m0[0u].x;
        _254 = cbvModelParam._m0[0u].y;
        _255 = cbvModelParam._m0[0u].z;
        _256 = cbvModelParam._m0[0u].w;
        _257 = cbvModelParam._m0[1u].x;
        _258 = cbvModelParam._m0[1u].y;
        _259 = cbvModelParam._m0[1u].z;
        _260 = cbvModelParam._m0[1u].w;
        _261 = cbvModelParam._m0[2u].x;
        _262 = cbvModelParam._m0[2u].y;
        _263 = cbvModelParam._m0[2u].z;
        _264 = cbvModelParam._m0[2u].w;
    }
    precise float _265 = POSITION.x * _253;
    precise float _266 = POSITION.y * _254;
    precise float _267 = _266 + _265;
    precise float _268 = POSITION.z * _255;
    precise float _269 = _268 + _267;
    precise float _270 = 1.0 * _256;
    precise float _272 = _270 + _269;
    precise float _273 = POSITION.x * _257;
    precise float _274 = POSITION.y * _258;
    precise float _275 = _274 + _273;
    precise float _276 = POSITION.z * _259;
    precise float _277 = _276 + _275;
    precise float _278 = 1.0 * _260;
    precise float _279 = _278 + _277;
    precise float _280 = POSITION.x * _261;
    precise float _281 = POSITION.y * _262;
    precise float _282 = _281 + _280;
    precise float _283 = POSITION.z * _263;
    precise float _284 = _283 + _282;
    precise float _285 = 1.0 * _264;
    precise float _286 = _285 + _284;
    uint _301 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _77;
    precise float _320 = _272 - cbSceneParam._m0[3u].x;
    precise float _321 = _279 - cbSceneParam._m0[3u].y;
    precise float _322 = _286 - cbSceneParam._m0[3u].z;
    precise float _350 = _320 * cbSceneParam._m0[24u].x;
    precise float _351 = _321 * cbSceneParam._m0[24u].y;
    precise float _352 = _351 + _350;
    precise float _353 = _322 * cbSceneParam._m0[24u].z;
    precise float _354 = _353 + _352;
    precise float _355 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _356 = _355 + _354;
    precise float _357 = _320 * cbSceneParam._m0[25u].x;
    precise float _358 = _321 * cbSceneParam._m0[25u].y;
    precise float _359 = _358 + _357;
    precise float _360 = _322 * cbSceneParam._m0[25u].z;
    precise float _361 = _360 + _359;
    precise float _362 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _363 = _362 + _361;
    precise float _364 = _320 * cbSceneParam._m0[26u].x;
    precise float _365 = _321 * cbSceneParam._m0[26u].y;
    precise float _366 = _365 + _364;
    precise float _367 = _322 * cbSceneParam._m0[26u].z;
    precise float _368 = _367 + _366;
    precise float _369 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _370 = _369 + _368;
    precise float _371 = _320 * cbSceneParam._m0[27u].x;
    precise float _372 = _321 * cbSceneParam._m0[27u].y;
    precise float _373 = _372 + _371;
    precise float _374 = _322 * cbSceneParam._m0[27u].z;
    precise float _375 = _374 + _373;
    precise float _376 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _377 = _376 + _375;
    gl_Position.x = _356;
    gl_Position.y = _363;
    gl_Position.z = _370;
    gl_Position.w = _377;
    POSITION_1_1.x = _356;
    POSITION_1_1.y = _363;
    POSITION_1_1.z = _370;
    POSITION_1_1.w = _377;
    NORMAL_2.x = fma(_177, _255, fma(_176, _254, _253 * _174));
    NORMAL_2.y = fma(_177, _259, fma(_176, _258, _257 * _174));
    NORMAL_2.z = fma(_177, _263, fma(_176, _262, _261 * _174));
    NORMAL_2.w = float(texelFetch(g_InstanceIndexBuffer, int(_301)).x);
    TANGENT_2.x = fma(_186, _255, fma(_185, _254, _253 * _184));
    TANGENT_2.y = fma(_186, _259, fma(_185, _258, _257 * _184));
    TANGENT_2.z = fma(_186, _263, fma(_185, _262, _261 * _184));
    TANGENT_2.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
}


