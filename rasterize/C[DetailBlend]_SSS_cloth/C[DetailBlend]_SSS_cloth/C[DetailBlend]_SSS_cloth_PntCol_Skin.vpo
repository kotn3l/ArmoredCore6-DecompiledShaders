#version 460

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in vec3 POSITION_1;
layout(location = 2) in uvec4 NORMAL;
layout(location = 3) in uvec4 NORMAL_1;
layout(location = 4) in uvec4 TANGENT;
layout(location = 5) in uvec4 TANGENT_1;
layout(location = 6) in uint BINORMAL;
layout(location = 7) in uvec4 BLENDINDICES;
layout(location = 8) in vec4 BLENDWEIGHT;
layout(location = 9) in vec4 COLOR_1;
layout(location = 10) in ivec4 TEXCOORD;
layout(location = 1) out vec4 COLOR;
layout(location = 2) out vec3 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    precise float _103 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _105 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _106 = _103 + 0.0;
    precise float _107 = _105 + 0.0;
    float _352;
    float _353;
    float _354;
    float _355;
    float _356;
    float _357;
    float _358;
    float _359;
    float _360;
    float _361;
    float _362;
    float _363;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _135 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
        precise float _139 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _144 = isnan(_139) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _139 : max(0.001000000047497451305389404296875, _139));
        precise float _146 = BLENDWEIGHT.x / _144;
        precise float _147 = BLENDWEIGHT.y / _144;
        precise float _148 = BLENDWEIGHT.z / _144;
        precise float _149 = BLENDWEIGHT.w / _144;
        uvec4 _157 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_135)).x * 13u) + 4u]);
        uint _158 = _157.x;
        uint _160 = (_158 + uint(float(BLENDINDICES.x))) * 3u;
        uint _167 = _160 + 1u;
        uint _174 = _160 + 2u;
        precise float _181 = _146 * cbObjMatrix._m0[_160].x;
        precise float _182 = _146 * cbObjMatrix._m0[_167].x;
        precise float _183 = _146 * cbObjMatrix._m0[_174].x;
        precise float _184 = _146 * cbObjMatrix._m0[_160].y;
        precise float _185 = _146 * cbObjMatrix._m0[_167].y;
        precise float _186 = _146 * cbObjMatrix._m0[_174].y;
        precise float _187 = _146 * cbObjMatrix._m0[_160].z;
        precise float _188 = _146 * cbObjMatrix._m0[_167].z;
        precise float _189 = _146 * cbObjMatrix._m0[_174].z;
        precise float _190 = _146 * cbObjMatrix._m0[_160].w;
        precise float _191 = _146 * cbObjMatrix._m0[_167].w;
        precise float _192 = _146 * cbObjMatrix._m0[_174].w;
        uint _195 = (_158 + uint(float(BLENDINDICES.y))) * 3u;
        uint _202 = _195 + 1u;
        uint _209 = _195 + 2u;
        precise float _216 = _147 * cbObjMatrix._m0[_195].x;
        precise float _217 = _147 * cbObjMatrix._m0[_202].x;
        precise float _218 = _147 * cbObjMatrix._m0[_209].x;
        precise float _219 = _147 * cbObjMatrix._m0[_195].y;
        precise float _220 = _147 * cbObjMatrix._m0[_202].y;
        precise float _221 = _147 * cbObjMatrix._m0[_209].y;
        precise float _222 = _147 * cbObjMatrix._m0[_195].z;
        precise float _223 = _147 * cbObjMatrix._m0[_202].z;
        precise float _224 = _147 * cbObjMatrix._m0[_209].z;
        precise float _225 = _147 * cbObjMatrix._m0[_195].w;
        precise float _226 = _147 * cbObjMatrix._m0[_202].w;
        precise float _227 = _147 * cbObjMatrix._m0[_209].w;
        precise float _228 = _181 + _216;
        precise float _229 = _182 + _217;
        precise float _230 = _183 + _218;
        precise float _231 = _184 + _219;
        precise float _232 = _185 + _220;
        precise float _233 = _186 + _221;
        precise float _234 = _187 + _222;
        precise float _235 = _188 + _223;
        precise float _236 = _189 + _224;
        precise float _237 = _190 + _225;
        precise float _238 = _191 + _226;
        precise float _239 = _192 + _227;
        uint _242 = (_158 + uint(float(BLENDINDICES.z))) * 3u;
        uint _249 = _242 + 1u;
        uint _256 = _242 + 2u;
        precise float _263 = _148 * cbObjMatrix._m0[_242].x;
        precise float _264 = _148 * cbObjMatrix._m0[_249].x;
        precise float _265 = _148 * cbObjMatrix._m0[_256].x;
        precise float _266 = _148 * cbObjMatrix._m0[_242].y;
        precise float _267 = _148 * cbObjMatrix._m0[_249].y;
        precise float _268 = _148 * cbObjMatrix._m0[_256].y;
        precise float _269 = _148 * cbObjMatrix._m0[_242].z;
        precise float _270 = _148 * cbObjMatrix._m0[_249].z;
        precise float _271 = _148 * cbObjMatrix._m0[_256].z;
        precise float _272 = _148 * cbObjMatrix._m0[_242].w;
        precise float _273 = _148 * cbObjMatrix._m0[_249].w;
        precise float _274 = _148 * cbObjMatrix._m0[_256].w;
        precise float _275 = _228 + _263;
        precise float _276 = _229 + _264;
        precise float _277 = _230 + _265;
        precise float _278 = _231 + _266;
        precise float _279 = _232 + _267;
        precise float _280 = _233 + _268;
        precise float _281 = _234 + _269;
        precise float _282 = _235 + _270;
        precise float _283 = _236 + _271;
        precise float _284 = _237 + _272;
        precise float _285 = _238 + _273;
        precise float _286 = _239 + _274;
        uint _289 = (_158 + uint(float(BLENDINDICES.w))) * 3u;
        uint _296 = _289 + 1u;
        uint _303 = _289 + 2u;
        precise float _310 = _149 * cbObjMatrix._m0[_289].x;
        precise float _311 = _149 * cbObjMatrix._m0[_296].x;
        precise float _312 = _149 * cbObjMatrix._m0[_303].x;
        precise float _313 = _149 * cbObjMatrix._m0[_289].y;
        precise float _314 = _149 * cbObjMatrix._m0[_296].y;
        precise float _315 = _149 * cbObjMatrix._m0[_303].y;
        precise float _316 = _149 * cbObjMatrix._m0[_289].z;
        precise float _317 = _149 * cbObjMatrix._m0[_296].z;
        precise float _318 = _149 * cbObjMatrix._m0[_303].z;
        precise float _319 = _149 * cbObjMatrix._m0[_289].w;
        precise float _320 = _149 * cbObjMatrix._m0[_296].w;
        precise float _321 = _149 * cbObjMatrix._m0[_303].w;
        precise float _322 = _275 + _310;
        precise float _323 = _276 + _311;
        precise float _324 = _277 + _312;
        precise float _325 = _278 + _313;
        precise float _326 = _279 + _314;
        precise float _327 = _280 + _315;
        precise float _328 = _281 + _316;
        precise float _329 = _282 + _317;
        precise float _330 = _283 + _318;
        precise float _331 = _284 + _319;
        precise float _332 = _285 + _320;
        precise float _333 = _286 + _321;
        _352 = _322;
        _353 = _325;
        _354 = _328;
        _355 = _331;
        _356 = _323;
        _357 = _326;
        _358 = _329;
        _359 = _332;
        _360 = _324;
        _361 = _327;
        _362 = _330;
        _363 = _333;
    }
    else
    {
        _352 = cbvModelParam._m0[0u].x;
        _353 = cbvModelParam._m0[0u].y;
        _354 = cbvModelParam._m0[0u].z;
        _355 = cbvModelParam._m0[0u].w;
        _356 = cbvModelParam._m0[1u].x;
        _357 = cbvModelParam._m0[1u].y;
        _358 = cbvModelParam._m0[1u].z;
        _359 = cbvModelParam._m0[1u].w;
        _360 = cbvModelParam._m0[2u].x;
        _361 = cbvModelParam._m0[2u].y;
        _362 = cbvModelParam._m0[2u].z;
        _363 = cbvModelParam._m0[2u].w;
    }
    precise float _364 = POSITION.x * _352;
    precise float _365 = POSITION.y * _353;
    precise float _366 = _365 + _364;
    precise float _367 = POSITION.z * _354;
    precise float _368 = _367 + _366;
    precise float _369 = 1.0 * _355;
    precise float _370 = _369 + _368;
    precise float _371 = POSITION.x * _356;
    precise float _372 = POSITION.y * _357;
    precise float _373 = _372 + _371;
    precise float _374 = POSITION.z * _358;
    precise float _375 = _374 + _373;
    precise float _376 = 1.0 * _359;
    precise float _377 = _376 + _375;
    precise float _378 = POSITION.x * _360;
    precise float _379 = POSITION.y * _361;
    precise float _380 = _379 + _378;
    precise float _381 = POSITION.z * _362;
    precise float _382 = _381 + _380;
    precise float _383 = 1.0 * _363;
    precise float _384 = _383 + _382;
    precise float _385 = _106 * 2.0;
    precise float _387 = _107 * 2.0;
    precise float _388 = _385 + (-1.0);
    precise float _390 = 1.0 - _387;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    gl_Position.x = _388;
    gl_Position.y = _390;
    gl_Position.z = 0.0;
    gl_Position.w = 1.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_1.x = _370;
    TEXCOORD_1.y = _377;
    TEXCOORD_1.z = _384;
}


