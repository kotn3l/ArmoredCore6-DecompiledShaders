#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in vec3 POSITION_1;
layout(location = 2) in uvec4 NORMAL;
layout(location = 3) in uvec4 NORMAL_1;
layout(location = 4) in uvec4 TANGENT;
layout(location = 5) in uvec4 TANGENT_1;
layout(location = 6) in uint BINORMAL;
layout(location = 7) in uvec4 BLENDINDICES;
layout(location = 8) in vec4 BLENDWEIGHT;
layout(location = 9) in vec4 COLOR_1;
layout(location = 10) in ivec4 TEXCOORD;

void main()
{
    uint _72 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _338;
    float _339;
    float _340;
    float _341;
    float _342;
    float _343;
    float _344;
    float _345;
    float _346;
    float _347;
    float _348;
    float _349;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _121 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _72;
        precise float _125 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _130 = isnan(_125) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _125 : max(0.001000000047497451305389404296875, _125));
        precise float _132 = BLENDWEIGHT.x / _130;
        precise float _133 = BLENDWEIGHT.y / _130;
        precise float _134 = BLENDWEIGHT.z / _130;
        precise float _135 = BLENDWEIGHT.w / _130;
        uvec4 _143 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_121)).x * 13u) + 4u]);
        uint _144 = _143.x;
        uint _146 = (_144 + uint(float(BLENDINDICES.x))) * 3u;
        uint _153 = _146 + 1u;
        uint _160 = _146 + 2u;
        precise float _167 = _132 * cbObjMatrix._m0[_146].x;
        precise float _168 = _132 * cbObjMatrix._m0[_153].x;
        precise float _169 = _132 * cbObjMatrix._m0[_160].x;
        precise float _170 = _132 * cbObjMatrix._m0[_146].y;
        precise float _171 = _132 * cbObjMatrix._m0[_153].y;
        precise float _172 = _132 * cbObjMatrix._m0[_160].y;
        precise float _173 = _132 * cbObjMatrix._m0[_146].z;
        precise float _174 = _132 * cbObjMatrix._m0[_153].z;
        precise float _175 = _132 * cbObjMatrix._m0[_160].z;
        precise float _176 = _132 * cbObjMatrix._m0[_146].w;
        precise float _177 = _132 * cbObjMatrix._m0[_153].w;
        precise float _178 = _132 * cbObjMatrix._m0[_160].w;
        uint _181 = (_144 + uint(float(BLENDINDICES.y))) * 3u;
        uint _188 = _181 + 1u;
        uint _195 = _181 + 2u;
        precise float _202 = _133 * cbObjMatrix._m0[_181].x;
        precise float _203 = _133 * cbObjMatrix._m0[_188].x;
        precise float _204 = _133 * cbObjMatrix._m0[_195].x;
        precise float _205 = _133 * cbObjMatrix._m0[_181].y;
        precise float _206 = _133 * cbObjMatrix._m0[_188].y;
        precise float _207 = _133 * cbObjMatrix._m0[_195].y;
        precise float _208 = _133 * cbObjMatrix._m0[_181].z;
        precise float _209 = _133 * cbObjMatrix._m0[_188].z;
        precise float _210 = _133 * cbObjMatrix._m0[_195].z;
        precise float _211 = _133 * cbObjMatrix._m0[_181].w;
        precise float _212 = _133 * cbObjMatrix._m0[_188].w;
        precise float _213 = _133 * cbObjMatrix._m0[_195].w;
        precise float _214 = _167 + _202;
        precise float _215 = _168 + _203;
        precise float _216 = _169 + _204;
        precise float _217 = _170 + _205;
        precise float _218 = _171 + _206;
        precise float _219 = _172 + _207;
        precise float _220 = _173 + _208;
        precise float _221 = _174 + _209;
        precise float _222 = _175 + _210;
        precise float _223 = _176 + _211;
        precise float _224 = _177 + _212;
        precise float _225 = _178 + _213;
        uint _228 = (_144 + uint(float(BLENDINDICES.z))) * 3u;
        uint _235 = _228 + 1u;
        uint _242 = _228 + 2u;
        precise float _249 = _134 * cbObjMatrix._m0[_228].x;
        precise float _250 = _134 * cbObjMatrix._m0[_235].x;
        precise float _251 = _134 * cbObjMatrix._m0[_242].x;
        precise float _252 = _134 * cbObjMatrix._m0[_228].y;
        precise float _253 = _134 * cbObjMatrix._m0[_235].y;
        precise float _254 = _134 * cbObjMatrix._m0[_242].y;
        precise float _255 = _134 * cbObjMatrix._m0[_228].z;
        precise float _256 = _134 * cbObjMatrix._m0[_235].z;
        precise float _257 = _134 * cbObjMatrix._m0[_242].z;
        precise float _258 = _134 * cbObjMatrix._m0[_228].w;
        precise float _259 = _134 * cbObjMatrix._m0[_235].w;
        precise float _260 = _134 * cbObjMatrix._m0[_242].w;
        precise float _261 = _214 + _249;
        precise float _262 = _215 + _250;
        precise float _263 = _216 + _251;
        precise float _264 = _217 + _252;
        precise float _265 = _218 + _253;
        precise float _266 = _219 + _254;
        precise float _267 = _220 + _255;
        precise float _268 = _221 + _256;
        precise float _269 = _222 + _257;
        precise float _270 = _223 + _258;
        precise float _271 = _224 + _259;
        precise float _272 = _225 + _260;
        uint _275 = (_144 + uint(float(BLENDINDICES.w))) * 3u;
        uint _282 = _275 + 1u;
        uint _289 = _275 + 2u;
        precise float _296 = _135 * cbObjMatrix._m0[_275].x;
        precise float _297 = _135 * cbObjMatrix._m0[_282].x;
        precise float _298 = _135 * cbObjMatrix._m0[_289].x;
        precise float _299 = _135 * cbObjMatrix._m0[_275].y;
        precise float _300 = _135 * cbObjMatrix._m0[_282].y;
        precise float _301 = _135 * cbObjMatrix._m0[_289].y;
        precise float _302 = _135 * cbObjMatrix._m0[_275].z;
        precise float _303 = _135 * cbObjMatrix._m0[_282].z;
        precise float _304 = _135 * cbObjMatrix._m0[_289].z;
        precise float _305 = _135 * cbObjMatrix._m0[_275].w;
        precise float _306 = _135 * cbObjMatrix._m0[_282].w;
        precise float _307 = _135 * cbObjMatrix._m0[_289].w;
        precise float _308 = _261 + _296;
        precise float _309 = _262 + _297;
        precise float _310 = _263 + _298;
        precise float _311 = _264 + _299;
        precise float _312 = _265 + _300;
        precise float _313 = _266 + _301;
        precise float _314 = _267 + _302;
        precise float _315 = _268 + _303;
        precise float _316 = _269 + _304;
        precise float _317 = _270 + _305;
        precise float _318 = _271 + _306;
        precise float _319 = _272 + _307;
        _338 = _308;
        _339 = _311;
        _340 = _314;
        _341 = _317;
        _342 = _309;
        _343 = _312;
        _344 = _315;
        _345 = _318;
        _346 = _310;
        _347 = _313;
        _348 = _316;
        _349 = _319;
    }
    else
    {
        _338 = cbvModelParam._m0[0u].x;
        _339 = cbvModelParam._m0[0u].y;
        _340 = cbvModelParam._m0[0u].z;
        _341 = cbvModelParam._m0[0u].w;
        _342 = cbvModelParam._m0[1u].x;
        _343 = cbvModelParam._m0[1u].y;
        _344 = cbvModelParam._m0[1u].z;
        _345 = cbvModelParam._m0[1u].w;
        _346 = cbvModelParam._m0[2u].x;
        _347 = cbvModelParam._m0[2u].y;
        _348 = cbvModelParam._m0[2u].z;
        _349 = cbvModelParam._m0[2u].w;
    }
    precise float _350 = POSITION.x * _338;
    precise float _351 = POSITION.y * _339;
    precise float _352 = _351 + _350;
    precise float _353 = POSITION.z * _340;
    precise float _354 = _353 + _352;
    precise float _355 = 1.0 * _341;
    precise float _356 = _355 + _354;
    precise float _357 = POSITION.x * _342;
    precise float _358 = POSITION.y * _343;
    precise float _359 = _358 + _357;
    precise float _360 = POSITION.z * _344;
    precise float _361 = _360 + _359;
    precise float _362 = 1.0 * _345;
    precise float _363 = _362 + _361;
    precise float _364 = POSITION.x * _346;
    precise float _365 = POSITION.y * _347;
    precise float _366 = _365 + _364;
    precise float _367 = POSITION.z * _348;
    precise float _368 = _367 + _366;
    precise float _369 = 1.0 * _349;
    precise float _370 = _369 + _368;
    precise float _376 = _356 - cbSceneParam._m0[3u].x;
    precise float _377 = _363 - cbSceneParam._m0[3u].y;
    precise float _378 = _370 - cbSceneParam._m0[3u].z;
    precise float _406 = _376 * cbSceneParam._m0[24u].x;
    precise float _407 = _377 * cbSceneParam._m0[24u].y;
    precise float _408 = _407 + _406;
    precise float _409 = _378 * cbSceneParam._m0[24u].z;
    precise float _410 = _409 + _408;
    precise float _411 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _412 = _411 + _410;
    precise float _413 = _376 * cbSceneParam._m0[25u].x;
    precise float _414 = _377 * cbSceneParam._m0[25u].y;
    precise float _415 = _414 + _413;
    precise float _416 = _378 * cbSceneParam._m0[25u].z;
    precise float _417 = _416 + _415;
    precise float _418 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _419 = _418 + _417;
    precise float _420 = _376 * cbSceneParam._m0[26u].x;
    precise float _421 = _377 * cbSceneParam._m0[26u].y;
    precise float _422 = _421 + _420;
    precise float _423 = _378 * cbSceneParam._m0[26u].z;
    precise float _424 = _423 + _422;
    precise float _425 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _426 = _425 + _424;
    precise float _427 = _376 * cbSceneParam._m0[27u].x;
    precise float _428 = _377 * cbSceneParam._m0[27u].y;
    precise float _429 = _428 + _427;
    precise float _430 = _378 * cbSceneParam._m0[27u].z;
    precise float _431 = _430 + _429;
    precise float _432 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _433 = _432 + _431;
    uint _438 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _72;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _412;
    gl_Position.y = _419;
    gl_Position.z = _426;
    gl_Position.w = _433;
    gl_ClipDistance[0u] = dot(vec4(_412, _419, _426, _433), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_412, _419, _426, _433), vec4(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_438)).x * 13u) + 3u]));
}


