#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1211;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _204 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _205 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _206 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _212 = inversesqrt(dot(vec3(_204, _205, _206), vec3(_204, _205, _206)));
    float _219 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _220 = _219 * NORMAL.x;
    float _221 = _219 * NORMAL.y;
    float _222 = _219 * NORMAL.z;
    float _226 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _234;
    float _235;
    float _236;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _234 = (-0.0) - _220;
        _235 = (-0.0) - _221;
        _236 = (-0.0) - _222;
    }
    else
    {
        _234 = _220;
        _235 = _221;
        _236 = _222;
    }
    vec4 _250 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _255 = _250.z;
    float _262 = exp2(log2(_255 * 22.0) * 260.0);
    float _263 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
    float _264 = isnan(1.0) ? _263 : (isnan(_263) ? 1.0 : min(_263, 1.0));
    vec4 _278 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _289 = cbMtdParam._m0[10u].x * _278.x;
    float _290 = cbMtdParam._m0[10u].y * _278.y;
    float _291 = cbMtdParam._m0[10u].z * _278.z;
    vec4 _303 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _319 = exp2(log2(1.0 - _250.w) * 8.0);
    vec4 _331 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    vec4 _356 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _378 = (((((_303.x * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _356.x) - _289) * _264) + _289;
    float _379 = (((((_303.y * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _356.y) - _290) * _264) + _290;
    float _380 = (((((_303.z * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _356.z) - _291) * _264) + _291;
    float _387 = (((cbMtdParam._m0[12u].x * _331.x) - _378) * _319) + _378;
    float _388 = (((cbMtdParam._m0[12u].y * _331.y) - _379) * _319) + _379;
    float _389 = (((cbMtdParam._m0[12u].z * _331.z) - _380) * _319) + _380;
    float _390 = _356.w * _303.w;
    float _418 = (((texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w)).x - cbMtdParam._m0[15u].y) + cbMtdParam._m0[14u].z) * _264) + cbMtdParam._m0[15u].y;
    float _421 = ((cbMtdParam._m0[14u].y - _418) * _319) + _418;
    vec4 _434 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _436 = _434.x;
    float _437 = _434.y;
    float _443 = cbMtdParam._m0[13u].y + _434.z;
    vec4 _455 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    vec4 _474 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _485 = ((((_255 * 2.0) * (cbMtdParam._m0[13u].x + _455.z)) - _443) * _264) + _443;
    float _489 = (((_474.z - _485) + cbMtdParam._m0[14u].x) * _319) + _485;
    float _493 = (_250.x * 2.0) + (-1.0);
    float _495 = (_250.y * 2.0) + (-1.0);
    float _496 = dot(vec2(_493, _495), vec2(_493, _495));
    float _3838 = isnan(0.0) ? _496 : (isnan(_496) ? 0.0 : max(_496, 0.0));
    float _501 = sqrt(1.0 - (isnan(1.0) ? _3838 : (isnan(_3838) ? 1.0 : min(_3838, 1.0))));
    float _506 = ((_455.x - _436) * _264) + _436;
    float _507 = ((_455.y - _437) * _264) + _437;
    float _520 = ((((((_474.x - _506) * _319) + _506) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _493;
    float _521 = ((((((_474.y - _507) * _319) + _507) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _495;
    float _524 = fma(_501, _234, fma(_521, _226 * TANGENT.x, (_212 * _204) * _520));
    float _527 = fma(_501, _235, fma(_521, _226 * TANGENT.y, (_212 * _205) * _520));
    float _530 = fma(_501, _236, fma(_521, _226 * TANGENT.z, (_212 * _206) * _520));
    float _534 = inversesqrt(dot(vec3(_524, _527, _530), vec3(_524, _527, _530)));
    float _535 = _534 * _524;
    float _536 = _534 * _527;
    float _537 = _534 * _530;
    float _3849 = isnan(0.0) ? _390 : (isnan(_390) ? 0.0 : max(_390, 0.0));
    float _538 = isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0));
    float _3860 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _539 = isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0));
    float _3871 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _540 = isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0));
    float _3882 = isnan(0.0) ? _388 : (isnan(_388) ? 0.0 : max(_388, 0.0));
    float _541 = isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0));
    float _3893 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _542 = isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0));
    float _3904 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _543 = isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0));
    float _559 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _600 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _610 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _600);
    float _611 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _600);
    float _612 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _600);
    float _616 = inversesqrt(dot(vec3(_610, _611, _612), vec3(_610, _611, _612)));
    float _617 = _610 * _616;
    float _618 = _611 * _616;
    float _619 = _612 * _616;
    float _625 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _626 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _628 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _630 = _628.w;
    float _649 = fma(_537, cbSceneParam._m0[5u].z, fma(_536, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _535));
    float _652 = fma(_537, cbSceneParam._m0[6u].z, fma(_536, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _535));
    float _655 = fma(_537, cbSceneParam._m0[7u].z, fma(_536, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _535));
    vec4 _657 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _659 = _657.x;
    float _671 = (((_657.y - _539) + (_657.w * _539)) * cbMtdParam._m0[3u].x) + _539;
    vec4 _672 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _688 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_659 * _659)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _672.z;
    float _696 = (((cbMatDynParam._m0[15u].x - _543) * cbMatDynParam._m0[15u].w) * _688) + _543;
    float _704 = ((_688 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _671)) + _671;
    uint _728 = uint(roundEven(NORMAL.w)) * 13u;
    uint _730 = (_728 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _736 = (cbMtdParam._m0[0u].x * _540) * cbInstanceData._m0[_730].x;
    float _737 = (cbMtdParam._m0[0u].y * _541) * cbInstanceData._m0[_730].y;
    float _738 = (cbMtdParam._m0[0u].z * _542) * cbInstanceData._m0[_730].z;
    float _3915 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
    float _739 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
    float _3926 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
    float _740 = isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0));
    float _3937 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _741 = isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0));
    vec4 _742 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _747 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _758 = (((_747.x - _696) + (_747.w * _696)) * cbMtdParam._m0[3u].x) + _696;
    float _771 = (cbMtdParam._m0[3u].x * (((_739 * _630) - _739) + _742.x)) + _739;
    float _772 = (cbMtdParam._m0[3u].x * (((_740 * _630) - _740) + _742.y)) + _740;
    float _773 = (cbMtdParam._m0[3u].x * (((_741 * _630) - _741) + _742.z)) + _741;
    vec4 _774 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _787 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_696 * (_540 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_696 * (_541 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_696 * (_542 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _774.z;
    float _791 = _787 * cbMatDynParam._m0[13u].w;
    float _801 = (_791 * (cbMatDynParam._m0[13u].x - _771)) + _771;
    float _802 = (_791 * (cbMatDynParam._m0[13u].y - _772)) + _772;
    float _803 = (_791 * (cbMatDynParam._m0[13u].z - _773)) + _773;
    float _811 = ((_787 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _758)) + _758;
    float _812 = 1.0 - _811;
    float _813 = _812 * _801;
    float _814 = _812 * _802;
    float _815 = _812 * _803;
    float _819 = (_801 + (-0.039999999105930328369140625)) * _811;
    float _820 = (_802 + (-0.039999999105930328369140625)) * _811;
    float _821 = (_803 + (-0.039999999105930328369140625)) * _811;
    float _822 = _819 + 0.039999999105930328369140625;
    float _823 = _820 + 0.039999999105930328369140625;
    float _824 = _821 + 0.039999999105930328369140625;
    vec4 _833 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _625, cbSceneParam._m0[86u].y * _626));
    float _836 = _833.x * TEXCOORD_4;
    float _837 = dot(vec3(_535, _536, _537), vec3(_617, _618, _619));
    float _840 = _837 * 2.0;
    float _844 = (_840 * _535) - _617;
    float _845 = (_840 * _536) - _618;
    float _846 = (_840 * _537) - _619;
    float _850 = abs(dot(vec3(_617, _618, _619), vec3(_535, _536, _537)));
    float _3948 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    float _852 = sqrt(_704);
    float _865 = exp2((_852 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_852 * 3.0));
    float _871 = (1.0 - _865) * ((_852 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _872 = _865 * _852;
    float _900 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _904 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _908 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1210;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _935 = fma(_908, cbModelParam._m0[26u].z, fma(_904, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _900));
        float _939 = fma(_908, cbModelParam._m0[27u].z, fma(_904, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _900));
        float _943 = fma(_908, cbModelParam._m0[28u].z, fma(_904, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _900));
        float _968 = _900 + _535;
        float _969 = _904 + _536;
        float _970 = _908 + _537;
        float _980 = fma(_970, cbModelParam._m0[26u].z, fma(_969, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _968)) - _935;
        float _981 = fma(_970, cbModelParam._m0[27u].z, fma(_969, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _968)) - _939;
        float _982 = fma(_970, cbModelParam._m0[28u].z, fma(_969, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _968)) - _943;
        float _986 = inversesqrt(dot(vec3(_980, _981, _982), vec3(_980, _981, _982)));
        float _999 = ((_986 * _980) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_935 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1000 = ((_986 * _981) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_939 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1001 = ((_986 * _982) / cbModelParam._m0[34u].z) + ((((((_943 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1004 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_999, _1000, _1001), 0.0);
        vec4 _1011 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_999, _1000, _1001), 0.0);
        vec4 _1018 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_999, _1000, _1001), 0.0);
        vec4 _1025 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_999, _1000, _1001), 0.0);
        float _1038 = exp2((_1004.w + (-0.5)) * 20.0) * 2.0;
        float _1039 = _1038 * (_1004.x + (-0.5));
        float _1040 = _1038 * (_1004.y + (-0.5));
        float _1041 = _1038 * (_1004.z + (-0.5));
        float _1048 = exp2((_1011.w + (-0.5)) * 20.0) * 2.0;
        float _1049 = _1048 * (_1011.x + (-0.5));
        float _1050 = _1048 * (_1011.y + (-0.5));
        float _1051 = _1048 * (_1011.z + (-0.5));
        float _1058 = exp2((_1018.w + (-0.5)) * 20.0) * 2.0;
        float _1059 = _1058 * (_1018.x + (-0.5));
        float _1060 = _1058 * (_1018.y + (-0.5));
        float _1061 = _1058 * (_1018.z + (-0.5));
        float _1068 = exp2((_1025.w + (-0.5)) * 20.0) * 2.0;
        float _1069 = _1068 * (_1025.x + (-0.5));
        float _1070 = _1068 * (_1025.y + (-0.5));
        float _1071 = _1068 * (_1025.z + (-0.5));
        float _1072 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
        float _1073 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1074 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
        float _1075 = _1039 * 0.5;
        float _1076 = _1049 * 0.5;
        float _1077 = _1059 * 0.5;
        float _1078 = dot(vec3(_1075, _1076, _1077), vec3(_1075, _1076, _1077));
        float _1083 = (_1078 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1078);
        float _1092 = (dot(vec3(_535, _536, _537), vec3(_1083 * _1075, _1083 * _1076, _1083 * _1077)) + 1.0) * 0.5;
        float _3974 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
        float _1102 = sqrt(((_1076 * _1076) + (_1075 * _1075)) + (_1077 * _1077)) / (_1072 + 9.9999997473787516355514526367188e-06);
        float _3985 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1103 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
        float _1104 = _1103 * 2.0;
        float _1108 = (1.0 - _1103) / (_1103 + 1.0);
        float _3996 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1109 = isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0));
        float _1118 = ((((1.0 - _1109) * (_1104 + 2.0)) * exp2(log2(isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0))) * (_1104 + 1.0))) + _1109) * _1072;
        float _1119 = _1040 * 0.5;
        float _1120 = _1050 * 0.5;
        float _1121 = _1060 * 0.5;
        float _1122 = dot(vec3(_1119, _1120, _1121), vec3(_1119, _1120, _1121));
        float _1127 = (_1122 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1122);
        float _1135 = (dot(vec3(_535, _536, _537), vec3(_1127 * _1119, _1127 * _1120, _1127 * _1121)) + 1.0) * 0.5;
        float _4007 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
        float _1144 = sqrt(((_1120 * _1120) + (_1119 * _1119)) + (_1121 * _1121)) / (_1073 + 9.9999997473787516355514526367188e-06);
        float _4018 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1145 = isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0));
        float _1146 = _1145 * 2.0;
        float _1150 = (1.0 - _1145) / (_1145 + 1.0);
        float _4029 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        float _1151 = isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0));
        float _1160 = ((((1.0 - _1151) * (_1146 + 2.0)) * exp2(log2(isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0))) * (_1146 + 1.0))) + _1151) * _1073;
        float _1161 = _1041 * 0.5;
        float _1162 = _1051 * 0.5;
        float _1163 = _1061 * 0.5;
        float _1164 = dot(vec3(_1161, _1162, _1163), vec3(_1161, _1162, _1163));
        float _1169 = (_1164 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1164);
        float _1177 = (dot(vec3(_535, _536, _537), vec3(_1169 * _1161, _1169 * _1162, _1169 * _1163)) + 1.0) * 0.5;
        float _4040 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
        float _1186 = sqrt(((_1162 * _1162) + (_1161 * _1161)) + (_1163 * _1163)) / (_1074 + 9.9999997473787516355514526367188e-06);
        float _4051 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1187 = isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0));
        float _1188 = _1187 * 2.0;
        float _1192 = (1.0 - _1187) / (_1187 + 1.0);
        float _4062 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
        float _1193 = isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0));
        float _1202 = ((((1.0 - _1193) * (_1188 + 2.0)) * exp2(log2(isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0))) * (_1188 + 1.0))) + _1193) * _1074;
        _1210 = _1041;
        _1212 = _1040;
        _1213 = _1039;
        _1214 = _1051;
        _1215 = _1050;
        _1216 = _1049;
        _1217 = _1061;
        _1218 = _1060;
        _1219 = _1059;
        _1220 = _1074;
        _1221 = _1073;
        _1222 = _1072;
        _1223 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0)));
        _1224 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0)));
        _1225 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0)));
    }
    else
    {
        _1210 = _1211;
        _1212 = _1211;
        _1213 = _1211;
        _1214 = _1211;
        _1215 = _1211;
        _1216 = _1211;
        _1217 = _1211;
        _1218 = _1211;
        _1219 = _1211;
        _1220 = _1211;
        _1221 = _1211;
        _1222 = _1211;
        _1223 = 0.0;
        _1224 = 0.0;
        _1225 = 0.0;
    }
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    float _1534;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1251 = fma(_908, cbModelParam._m0[30u].z, fma(_904, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _900));
        float _1255 = fma(_908, cbModelParam._m0[31u].z, fma(_904, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _900));
        float _1259 = fma(_908, cbModelParam._m0[32u].z, fma(_904, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _900));
        float _1282 = _900 + _535;
        float _1283 = _904 + _536;
        float _1284 = _908 + _537;
        float _1294 = fma(_1284, cbModelParam._m0[30u].z, fma(_1283, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1282)) - _1251;
        float _1295 = fma(_1284, cbModelParam._m0[31u].z, fma(_1283, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1282)) - _1255;
        float _1296 = fma(_1284, cbModelParam._m0[32u].z, fma(_1283, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1282)) - _1259;
        float _1300 = inversesqrt(dot(vec3(_1294, _1295, _1296), vec3(_1294, _1295, _1296)));
        float _1313 = ((_1300 * _1294) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1251 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1314 = ((_1300 * _1295) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1255 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1315 = ((_1300 * _1296) / cbModelParam._m0[35u].z) + ((((((_1259 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1317 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        vec4 _1324 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        vec4 _1331 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        vec4 _1338 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        float _1350 = exp2((_1317.w + (-0.5)) * 20.0) * 2.0;
        float _1351 = _1350 * (_1317.x + (-0.5));
        float _1352 = _1350 * (_1317.y + (-0.5));
        float _1353 = _1350 * (_1317.z + (-0.5));
        float _1360 = exp2((_1324.w + (-0.5)) * 20.0) * 2.0;
        float _1361 = _1360 * (_1324.x + (-0.5));
        float _1362 = _1360 * (_1324.y + (-0.5));
        float _1363 = _1360 * (_1324.z + (-0.5));
        float _1370 = exp2((_1331.w + (-0.5)) * 20.0) * 2.0;
        float _1371 = _1370 * (_1331.x + (-0.5));
        float _1372 = _1370 * (_1331.y + (-0.5));
        float _1373 = _1370 * (_1331.z + (-0.5));
        float _1380 = exp2((_1338.w + (-0.5)) * 20.0) * 2.0;
        float _1381 = _1380 * (_1338.x + (-0.5));
        float _1382 = _1380 * (_1338.y + (-0.5));
        float _1383 = _1380 * (_1338.z + (-0.5));
        float _1384 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1385 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1386 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1387 = _1351 * 0.5;
        float _1388 = _1361 * 0.5;
        float _1389 = _1371 * 0.5;
        float _1390 = dot(vec3(_1387, _1388, _1389), vec3(_1387, _1388, _1389));
        float _1395 = (_1390 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1390);
        float _1403 = (dot(vec3(_535, _536, _537), vec3(_1395 * _1387, _1395 * _1388, _1395 * _1389)) + 1.0) * 0.5;
        float _4103 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
        float _1412 = sqrt(((_1388 * _1388) + (_1387 * _1387)) + (_1389 * _1389)) / (_1384 + 9.9999997473787516355514526367188e-06);
        float _4114 = isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0));
        float _1413 = isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0));
        float _1414 = _1413 * 2.0;
        float _1418 = (1.0 - _1413) / (_1413 + 1.0);
        float _4125 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1419 = isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0));
        float _1428 = ((((1.0 - _1419) * (_1414 + 2.0)) * exp2(log2(isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0))) * (_1414 + 1.0))) + _1419) * _1384;
        float _1429 = _1352 * 0.5;
        float _1430 = _1362 * 0.5;
        float _1431 = _1372 * 0.5;
        float _1432 = dot(vec3(_1429, _1430, _1431), vec3(_1429, _1430, _1431));
        float _1437 = (_1432 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1432);
        float _1445 = (dot(vec3(_535, _536, _537), vec3(_1437 * _1429, _1437 * _1430, _1437 * _1431)) + 1.0) * 0.5;
        float _4136 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1454 = sqrt(((_1430 * _1430) + (_1429 * _1429)) + (_1431 * _1431)) / (_1385 + 9.9999997473787516355514526367188e-06);
        float _4147 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1455 = isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0));
        float _1456 = _1455 * 2.0;
        float _1460 = (1.0 - _1455) / (_1455 + 1.0);
        float _4158 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1461 = isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0));
        float _1470 = ((((1.0 - _1461) * (_1456 + 2.0)) * exp2(log2(isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0))) * (_1456 + 1.0))) + _1461) * _1385;
        float _1471 = _1353 * 0.5;
        float _1472 = _1363 * 0.5;
        float _1473 = _1373 * 0.5;
        float _1474 = dot(vec3(_1471, _1472, _1473), vec3(_1471, _1472, _1473));
        float _1479 = (_1474 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1474);
        float _1487 = (dot(vec3(_535, _536, _537), vec3(_1479 * _1471, _1479 * _1472, _1479 * _1473)) + 1.0) * 0.5;
        float _4169 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1496 = sqrt(((_1472 * _1472) + (_1471 * _1471)) + (_1473 * _1473)) / (_1386 + 9.9999997473787516355514526367188e-06);
        float _4180 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1497 = isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0));
        float _1498 = _1497 * 2.0;
        float _1502 = (1.0 - _1497) / (_1497 + 1.0);
        float _4191 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1503 = isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0));
        float _1512 = ((((1.0 - _1503) * (_1498 + 2.0)) * exp2(log2(isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0))) * (_1498 + 1.0))) + _1503) * _1386;
        _1520 = _1353;
        _1521 = _1352;
        _1522 = _1351;
        _1523 = _1363;
        _1524 = _1362;
        _1525 = _1361;
        _1526 = _1373;
        _1527 = _1372;
        _1528 = _1371;
        _1529 = _1386;
        _1530 = _1385;
        _1531 = _1384;
        _1532 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0)));
        _1533 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0)));
        _1534 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0)));
    }
    else
    {
        _1520 = _1211;
        _1521 = _1211;
        _1522 = _1211;
        _1523 = _1211;
        _1524 = _1211;
        _1525 = _1211;
        _1526 = _1211;
        _1527 = _1211;
        _1528 = _1211;
        _1529 = _1211;
        _1530 = _1211;
        _1531 = _1211;
        _1532 = 0.0;
        _1533 = 0.0;
        _1534 = 0.0;
    }
    float _1544 = (cbModelParam._m0[1u].x * (_1532 - _1223)) + _1223;
    float _1545 = (cbModelParam._m0[1u].x * (_1533 - _1224)) + _1224;
    float _1546 = (cbModelParam._m0[1u].x * (_1534 - _1225)) + _1225;
    float _1567 = fma(_1546, cbSceneParam._m0[89u].z, fma(_1545, cbSceneParam._m0[89u].y, _1544 * cbSceneParam._m0[89u].x));
    float _1570 = fma(_1546, cbSceneParam._m0[90u].z, fma(_1545, cbSceneParam._m0[90u].y, _1544 * cbSceneParam._m0[90u].x));
    float _1573 = fma(_1546, cbSceneParam._m0[91u].z, fma(_1545, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1544));
    float _1588 = _844 * 0.5;
    float _1589 = _845 * 0.5;
    float _1590 = _846 * 0.5;
    float _1591 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1522, _1525, _1528, _1531));
    float _1594 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1521, _1524, _1527, _1530));
    float _1597 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1520, _1523, _1526, _1529));
    float _1628;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1604 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1210, _1214, _1217, _1220));
        float _1608 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1212, _1215, _1218, _1221));
        float _1612 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1213, _1216, _1219, _1222));
        float _1619 = dot(vec4(cbModelParam._m0[39u]), vec4(_1588, _1589, _1590, 1.0));
        _1628 = dot(vec3(isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0)), isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0)), isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1619) ? 0.0 : (isnan(0.0) ? _1619 : max(0.0, _1619))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1628 = 1.0;
    }
    float _1639;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1630 = dot(vec4(cbModelParam._m0[40u]), vec4(_1588, _1589, _1590, 1.0));
        _1639 = dot(vec3(isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0)), isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0)), isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1630) ? 0.0 : (isnan(0.0) ? _1630 : max(0.0, _1630))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1639 = 1.0;
    }
    float _1643 = (_1639 * cbModelParam._m0[1u].x) + (_1628 * (1.0 - cbModelParam._m0[1u].x));
    float _1653 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _704);
    float _1654 = isnan(_1653) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1653 : min(cbModelParam._m0[25u].z, _1653));
    float _1734;
    float _1736;
    float _1738;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1701 = fma(_908, cbModelParam._m0[13u].z, fma(_904, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _900)) + cbModelParam._m0[13u].w;
        float _1705 = fma(_908, cbModelParam._m0[14u].z, fma(_904, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _900)) + cbModelParam._m0[14u].w;
        float _1709 = fma(_908, cbModelParam._m0[15u].z, fma(_904, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _900)) + cbModelParam._m0[15u].w;
        float _1712 = fma(_846, cbModelParam._m0[13u].z, fma(_845, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _844));
        float _1715 = fma(_846, cbModelParam._m0[14u].z, fma(_845, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _844));
        float _1718 = fma(_846, cbModelParam._m0[15u].z, fma(_845, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _844));
        float _1746;
        if (_1712 > 0.0)
        {
            _1746 = abs((1.0 - _1701) / _1712);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1712 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1701 + 1.0) / _1712);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1746 = frontier_phi_16_14_ladder;
        }
        float _1921;
        if (_1715 > 0.0)
        {
            _1921 = abs((1.0 - _1705) / _1715);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1715 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1705 + 1.0) / _1715);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1921 = frontier_phi_25_21_ladder;
        }
        float _2216;
        if (_1718 > 0.0)
        {
            _2216 = abs((1.0 - _1709) / _1718);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1718 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1709 + 1.0) / _1718);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2216 = frontier_phi_37_32_ladder;
        }
        float _2218 = isnan(_1921) ? _1746 : (isnan(_1746) ? _1921 : min(_1746, _1921));
        float _2219 = isnan(_2216) ? _2218 : (isnan(_2218) ? _2216 : min(_2218, _2216));
        float _2223 = (_2219 * _1712) + _1701;
        float _2224 = (_2219 * _1715) + _1705;
        float _2225 = (_2219 * _1718) + _1709;
        float _2226 = _2219 * 9.9999997473787516355514526367188e-05;
        float _2228 = (-1.0) - _2226;
        float _2230 = _2226 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2225 > _2230) || ((_2225 < _2228) || ((_2224 > _2230) || ((_2224 < _2228) || ((_2223 < _2228) || (_2223 > _2230))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2370 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2225, cbModelParam._m0[9u].z, fma(_2224, cbModelParam._m0[9u].y, _2223 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2225, cbModelParam._m0[10u].z, fma(_2224, cbModelParam._m0[10u].y, _2223 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2225, cbModelParam._m0[11u].z, fma(_2224, cbModelParam._m0[11u].y, _2223 * cbModelParam._m0[11u].x))), _1654);
            frontier_phi_15_37_ladder = _2370.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2370.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2370.z * cbModelParam._m0[1u].y;
        }
        _1734 = frontier_phi_15_37_ladder_1;
        _1736 = frontier_phi_15_37_ladder;
        _1738 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1722 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_844, _845, _846), _1654);
        _1734 = _1722.x * cbModelParam._m0[1u].y;
        _1736 = _1722.y * cbModelParam._m0[1u].y;
        _1738 = _1722.z * cbModelParam._m0[1u].y;
    }
    float _1742 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _704);
    float _1743 = isnan(_1742) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1742 : min(cbModelParam._m0[25u].w, _1742));
    float _1836;
    float _1838;
    float _1840;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1800 = fma(_908, cbModelParam._m0[21u].z, fma(_904, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _900)) + cbModelParam._m0[21u].w;
        float _1804 = fma(_908, cbModelParam._m0[22u].z, fma(_904, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _900)) + cbModelParam._m0[22u].w;
        float _1808 = fma(_908, cbModelParam._m0[23u].z, fma(_904, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _900)) + cbModelParam._m0[23u].w;
        float _1811 = fma(_846, cbModelParam._m0[21u].z, fma(_845, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _844));
        float _1814 = fma(_846, cbModelParam._m0[22u].z, fma(_845, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _844));
        float _1817 = fma(_846, cbModelParam._m0[23u].z, fma(_845, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _844));
        float _1926;
        if (_1811 > 0.0)
        {
            _1926 = abs((1.0 - _1800) / _1811);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1811 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1800 + 1.0) / _1811);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1926 = frontier_phi_27_23_ladder;
        }
        float _2243;
        if (_1814 > 0.0)
        {
            _2243 = abs((1.0 - _1804) / _1814);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1814 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1804 + 1.0) / _1814);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2243 = frontier_phi_39_34_ladder;
        }
        float _2581;
        if (_1817 > 0.0)
        {
            _2581 = abs((1.0 - _1808) / _1817);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1817 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1808 + 1.0) / _1817);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2581 = frontier_phi_49_46_ladder;
        }
        float _2583 = isnan(_2243) ? _1926 : (isnan(_1926) ? _2243 : min(_1926, _2243));
        float _2584 = isnan(_2581) ? _2583 : (isnan(_2583) ? _2581 : min(_2583, _2581));
        float _2588 = (_2584 * _1811) + _1800;
        float _2589 = (_2584 * _1814) + _1804;
        float _2590 = (_2584 * _1817) + _1808;
        float _2591 = _2584 * 9.9999997473787516355514526367188e-05;
        float _2592 = (-1.0) - _2591;
        float _2594 = _2591 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2590 > _2594) || ((_2590 < _2592) || ((_2589 > _2594) || ((_2589 < _2592) || ((_2588 < _2592) || (_2588 > _2594))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2712 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2590, cbModelParam._m0[17u].z, fma(_2589, cbModelParam._m0[17u].y, _2588 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2590, cbModelParam._m0[18u].z, fma(_2589, cbModelParam._m0[18u].y, _2588 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2590, cbModelParam._m0[19u].z, fma(_2589, cbModelParam._m0[19u].y, _2588 * cbModelParam._m0[19u].x))), _1743);
            frontier_phi_24_49_ladder = _2712.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2712.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2712.x * cbModelParam._m0[1u].z;
        }
        _1836 = frontier_phi_24_49_ladder_2;
        _1838 = frontier_phi_24_49_ladder_1;
        _1840 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1820 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_844, _845, _846), _1743);
        _1836 = _1820.x * cbModelParam._m0[1u].z;
        _1838 = _1820.y * cbModelParam._m0[1u].z;
        _1840 = _1820.z * cbModelParam._m0[1u].z;
    }
    float _1853 = (((_871 * _822) + _872) * _836) * ((cbModelParam._m0[1u].w * (_1836 - _1734)) + _1734);
    float _1855 = (((_871 * _823) + _872) * _836) * ((cbModelParam._m0[1u].w * (_1838 - _1736)) + _1736);
    float _1857 = (((_871 * _824) + _872) * _836) * ((cbModelParam._m0[1u].w * (_1840 - _1738)) + _1738);
    float _1860 = fma(_1857, cbSceneParam._m0[89u].z, fma(_1855, cbSceneParam._m0[89u].y, _1853 * cbSceneParam._m0[89u].x));
    float _1863 = fma(_1857, cbSceneParam._m0[90u].z, fma(_1855, cbSceneParam._m0[90u].y, _1853 * cbSceneParam._m0[90u].x));
    float _1866 = fma(_1857, cbSceneParam._m0[91u].z, fma(_1855, cbSceneParam._m0[91u].y, _1853 * cbSceneParam._m0[91u].x));
    float _1900 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1904 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1908 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1912 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1913 = _1900 / _1912;
    float _1914 = _1904 / _1912;
    float _1915 = _1908 / _1912;
    float _2062;
    float _2063;
    float _2064;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1942 = ((uint(_1915 > cbSceneParam._m0[59u].y) + uint(_1915 > cbSceneParam._m0[59u].x)) + uint(_1915 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1943 = _1942 + 43u;
        uint _1951 = _1942 + 44u;
        uint _1959 = _1942 + 45u;
        uint _1967 = _1942 + 46u;
        float _1978 = fma(_1912, cbSceneParam._m0[_1943].w, fma(_1908, cbSceneParam._m0[_1943].z, fma(_1904, cbSceneParam._m0[_1943].y, _1900 * cbSceneParam._m0[_1943].x)));
        float _1982 = fma(_1912, cbSceneParam._m0[_1951].w, fma(_1908, cbSceneParam._m0[_1951].z, fma(_1904, cbSceneParam._m0[_1951].y, _1900 * cbSceneParam._m0[_1951].x)));
        float _1990 = fma(_1912, cbSceneParam._m0[_1967].w, fma(_1908, cbSceneParam._m0[_1967].z, fma(_1904, cbSceneParam._m0[_1967].y, _1900 * cbSceneParam._m0[_1967].x)));
        float _1995 = cbSceneParam._m0[33u].z * _1990;
        float _1997 = cbSceneParam._m0[33u].w * _1990;
        float _2000 = fma(_1912, cbSceneParam._m0[_1959].w, fma(_1908, cbSceneParam._m0[_1959].z, fma(_1904, cbSceneParam._m0[_1959].y, _1900 * cbSceneParam._m0[_1959].x))) / _1990;
        float _2048 = (cbSceneParam._m0[33u].x - sqrt(((_1914 * _1914) + (_1913 * _1913)) + (_1915 * _1915))) * cbSceneParam._m0[33u].y;
        float _4317 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
        float _2055 = (isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1995 + _1978) / _1990, (_1997 + _1982) / _1990), _2000), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1997 + _1978) / _1990, (_1982 - _1995) / _1990), _2000), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1978 - _1995) / _1990, (_1982 - _1997) / _1990), _2000), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1978 - _1997) / _1990, (_1995 + _1982) / _1990), _2000), 0.0)).x), vec4(0.25)));
        _2062 = 1.0 - (_2055 * cbSceneParam._m0[34u].x);
        _2063 = 1.0 - (_2055 * cbSceneParam._m0[34u].y);
        _2064 = 1.0 - (_2055 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2062 = 1.0;
        _2063 = 1.0;
        _2064 = 1.0;
    }
    float _2128;
    float _2130;
    float _2132;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2116 = fma(_1912, cbSceneParam._m0[63u].w, fma(_1908, cbSceneParam._m0[63u].z, fma(_1904, cbSceneParam._m0[63u].y, _1900 * cbSceneParam._m0[63u].x)));
        float _2117 = fma(_1912, cbSceneParam._m0[60u].w, fma(_1908, cbSceneParam._m0[60u].z, fma(_1904, cbSceneParam._m0[60u].y, _1900 * cbSceneParam._m0[60u].x))) / _2116;
        float _2118 = fma(_1912, cbSceneParam._m0[61u].w, fma(_1908, cbSceneParam._m0[61u].z, fma(_1904, cbSceneParam._m0[61u].y, _1900 * cbSceneParam._m0[61u].x))) / _2116;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2117 >= cbSceneParam._m0[64u].x) && (_2118 >= cbSceneParam._m0[64u].y)) && (_2117 <= cbSceneParam._m0[64u].z)) && (_2118 <= cbSceneParam._m0[64u].w))
        {
            float _2256 = fma(_1912, cbSceneParam._m0[62u].w, fma(_1908, cbSceneParam._m0[62u].z, fma(_1904, cbSceneParam._m0[62u].y, _1900 * cbSceneParam._m0[62u].x))) / _2116;
            float _2260 = isnan(cbSceneParam._m0[41u].w) ? _2256 : (isnan(_2256) ? cbSceneParam._m0[41u].w : max(_2256, cbSceneParam._m0[41u].w));
            float _2303 = (cbSceneParam._m0[33u].x - sqrt(((_1914 * _1914) + (_1913 * _1913)) + (_1915 * _1915))) * cbSceneParam._m0[33u].y;
            float _4333 = isnan(0.0) ? _2303 : (isnan(_2303) ? 0.0 : max(_2303, 0.0));
            float _2310 = (isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2117, cbSceneParam._m0[33u].w + _2118), _2260), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2117, _2118 - cbSceneParam._m0[33u].z), _2260), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2117 - cbSceneParam._m0[33u].z, _2118 - cbSceneParam._m0[33u].w), _2260), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2117 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2118), _2260), 0.0)).x), vec4(0.25)));
            float _2314 = 1.0 - (_2310 * cbSceneParam._m0[34u].x);
            float _2315 = 1.0 - (_2310 * cbSceneParam._m0[34u].y);
            float _2316 = 1.0 - (_2310 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2315) ? _2063 : (isnan(_2063) ? _2315 : min(_2063, _2315));
            frontier_phi_36_35_ladder_1 = isnan(_2316) ? _2064 : (isnan(_2064) ? _2316 : min(_2064, _2316));
            frontier_phi_36_35_ladder_2 = isnan(_2314) ? _2062 : (isnan(_2062) ? _2314 : min(_2062, _2314));
        }
        else
        {
            frontier_phi_36_35_ladder = _2063;
            frontier_phi_36_35_ladder_1 = _2064;
            frontier_phi_36_35_ladder_2 = _2062;
        }
        _2128 = frontier_phi_36_35_ladder_2;
        _2130 = frontier_phi_36_35_ladder;
        _2132 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2128 = _2062;
        _2130 = _2063;
        _2132 = _2064;
    }
    uvec4 _2137 = floatBitsToUint(cbInstanceData._m0[_728 + 5u]);
    uint _2139 = _2137.x * 14u;
    uint _2140 = _2139 + 13u;
    float _2147 = _836 + (-1.0);
    float _2152 = (cbLight._m0[_2140].x * _2147) + 1.0;
    float _2153 = (cbLight._m0[_2140].y * _2147) + 1.0;
    float _2154 = (cbLight._m0[_2140].z * _2147) + 1.0;
    float _2155 = (cbLight._m0[_2140].w * _2147) + 1.0;
    uint _2156 = _2139 + 5u;
    float _2162 = isnan(1.0) ? _2153 : (isnan(_2153) ? 1.0 : min(_2153, 1.0));
    uint _2166 = _2139 + 4u;
    float _2175 = isnan(1.0) ? _2152 : (isnan(_2152) ? 1.0 : min(_2152, 1.0));
    uint _2179 = _2139 | 1u;
    float _2190 = dot(vec3(cbLight._m0[_2139].xyz), vec3(_535, _536, _537));
    float _2193 = dot(vec3(cbLight._m0[_2179].xyz), vec3(_535, _536, _537));
    float _4369 = isnan(0.0) ? _2190 : (isnan(_2190) ? 0.0 : max(_2190, 0.0));
    float _4380 = isnan(0.0) ? _2193 : (isnan(_2193) ? 0.0 : max(_2193, 0.0));
    float _2198 = (isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0))) * 0.3183098733425140380859375;
    float _2200 = (isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0))) * 0.3183098733425140380859375;
    float _2207 = ((cbLight._m0[_2156].x * _2162) * _2200) + (((cbLight._m0[_2166].x * _2128) * _2175) * _2198);
    float _2208 = ((_2162 * cbLight._m0[_2156].y) * _2200) + (((cbLight._m0[_2166].y * _2130) * _2175) * _2198);
    float _2209 = ((_2162 * cbLight._m0[_2156].z) * _2200) + (((cbLight._m0[_2166].z * _2132) * _2175) * _2198);
    uvec4 _2213 = floatBitsToUint(cbLight._m0[_2139 + 12u]);
    bool _2215 = _2213.x == 0u;
    float _2317;
    float _2319;
    float _2321;
    if (_2215)
    {
        _2317 = _2207;
        _2319 = _2208;
        _2321 = _2209;
    }
    else
    {
        uint _2325 = _2139 + 6u;
        float _2341 = (dot(vec3(cbLight._m0[_2139 + 2u].xyz), vec3(_535, _536, _537)) * 0.5) + 0.5;
        float _2342 = _2341 * _2341;
        float _4391 = isnan(0.0) ? _2342 : (isnan(_2342) ? 0.0 : max(_2342, 0.0));
        float _2343 = isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0));
        float _2344 = isnan(1.0) ? _2154 : (isnan(_2154) ? 1.0 : min(_2154, 1.0));
        _2317 = (((cbLight._m0[_2325].x * 0.3183098733425140380859375) * _2343) * _2344) + _2207;
        _2319 = (((cbLight._m0[_2325].y * 0.3183098733425140380859375) * _2343) * _2344) + _2208;
        _2321 = (((cbLight._m0[_2325].z * 0.3183098733425140380859375) * _2343) * _2344) + _2209;
    }
    bool _2324 = _2213.y == 0u;
    float _2379;
    float _2381;
    float _2383;
    if (_2324)
    {
        _2379 = _2317;
        _2381 = _2319;
        _2383 = _2321;
    }
    else
    {
        uint _2552 = _2139 + 7u;
        float _2568 = (dot(vec3(cbLight._m0[_2139 + 3u].xyz), vec3(_535, _536, _537)) * 0.5) + 0.5;
        float _2569 = _2568 * _2568;
        float _4407 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
        float _2570 = isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0));
        float _2571 = isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0));
        _2379 = (((cbLight._m0[_2552].x * 0.3183098733425140380859375) * _2570) * _2571) + _2317;
        _2381 = (((cbLight._m0[_2552].y * 0.3183098733425140380859375) * _2570) * _2571) + _2319;
        _2383 = (((cbLight._m0[_2552].z * 0.3183098733425140380859375) * _2570) * _2571) + _2321;
    }
    uint _2386 = _2139 + 8u;
    float _2399 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2139].w)) * _704) * 0.949999988079071044921875);
    float _2400 = _2399 * _2399;
    float _2401 = cbLight._m0[_2139].x + _617;
    float _2402 = cbLight._m0[_2139].y + _618;
    float _2403 = cbLight._m0[_2139].z + _619;
    float _2407 = inversesqrt(dot(vec3(_2401, _2402, _2403), vec3(_2401, _2402, _2403)));
    float _2408 = _2407 * _2401;
    float _2409 = _2407 * _2402;
    float _2410 = _2407 * _2403;
    float _2411 = dot(vec3(_535, _536, _537), vec3(cbLight._m0[_2139].xyz));
    float _4423 = isnan(0.0) ? _2411 : (isnan(_2411) ? 0.0 : max(_2411, 0.0));
    float _2414 = isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0));
    float _4434 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    float _2415 = isnan(1.0) ? _4434 : (isnan(_4434) ? 1.0 : min(_4434, 1.0));
    float _2416 = dot(vec3(_535, _536, _537), vec3(_2408, _2409, _2410));
    float _4445 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
    float _2419 = isnan(1.0) ? _4445 : (isnan(_4445) ? 1.0 : min(_4445, 1.0));
    float _2420 = dot(vec3(cbLight._m0[_2139].xyz), vec3(_2408, _2409, _2410));
    float _4456 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
    float _2424 = _2400 * _2400;
    float _2428 = ((_2419 * _2419) * (_2424 + (-1.0))) + 1.0;
    float _2436 = exp2(log2(1.0 - (isnan(1.0) ? _4456 : (isnan(_4456) ? 1.0 : min(_4456, 1.0)))) * 5.0);
    float _2437 = 0.959999978542327880859375 - _819;
    float _2439 = 0.959999978542327880859375 - _820;
    float _2440 = 0.959999978542327880859375 - _821;
    float _2447 = 1.0 - _2400;
    float _2458 = (0.5 / (((_2415 * ((_2414 * _2447) + _2400)) + 9.9999999392252902907785028219223e-09) + (((_2415 * _2447) + _2400) * _2414))) * _2414;
    float _4467 = isnan(0.0) ? _2458 : (isnan(_2458) ? 0.0 : max(_2458, 0.0));
    float _2460 = (isnan(1.0) ? _4467 : (isnan(_4467) ? 1.0 : min(_4467, 1.0))) * (_2424 / ((_2428 * _2428) * 3.141590118408203125));
    uint _2474 = _2139 + 9u;
    float _2485 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2179].w)) * _704) * 0.949999988079071044921875);
    float _2486 = _2485 * _2485;
    float _2487 = cbLight._m0[_2179].x + _617;
    float _2488 = cbLight._m0[_2179].y + _618;
    float _2489 = cbLight._m0[_2179].z + _619;
    float _2493 = inversesqrt(dot(vec3(_2487, _2488, _2489), vec3(_2487, _2488, _2489)));
    float _2494 = _2493 * _2487;
    float _2495 = _2493 * _2488;
    float _2496 = _2493 * _2489;
    float _2497 = dot(vec3(_535, _536, _537), vec3(cbLight._m0[_2179].xyz));
    float _4478 = isnan(0.0) ? _2497 : (isnan(_2497) ? 0.0 : max(_2497, 0.0));
    float _2500 = isnan(1.0) ? _4478 : (isnan(_4478) ? 1.0 : min(_4478, 1.0));
    float _2501 = dot(vec3(_535, _536, _537), vec3(_2494, _2495, _2496));
    float _4489 = isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0));
    float _2504 = isnan(1.0) ? _4489 : (isnan(_4489) ? 1.0 : min(_4489, 1.0));
    float _2505 = dot(vec3(cbLight._m0[_2179].xyz), vec3(_2494, _2495, _2496));
    float _4500 = isnan(0.0) ? _2505 : (isnan(_2505) ? 0.0 : max(_2505, 0.0));
    float _2509 = _2486 * _2486;
    float _2513 = ((_2504 * _2504) * (_2509 + (-1.0))) + 1.0;
    float _2520 = exp2(log2(1.0 - (isnan(1.0) ? _4500 : (isnan(_4500) ? 1.0 : min(_4500, 1.0)))) * 5.0);
    float _2527 = 1.0 - _2486;
    float _2537 = (0.5 / (((_2415 * ((_2500 * _2527) + _2486)) + 9.9999999392252902907785028219223e-09) + (((_2415 * _2527) + _2486) * _2500))) * _2500;
    float _4511 = isnan(0.0) ? _2537 : (isnan(_2537) ? 0.0 : max(_2537, 0.0));
    float _2539 = (isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0))) * (_2509 / ((_2513 * _2513) * 3.141590118408203125));
    float _2549 = (((((_2520 * _2437) + _822) * cbLight._m0[_2474].x) * _2539) * _2162) + ((((cbLight._m0[_2386].x * _2128) * ((_2436 * _2437) + _822)) * _2460) * _2175);
    float _2550 = (((((_2520 * _2439) + _823) * cbLight._m0[_2474].y) * _2539) * _2162) + ((((cbLight._m0[_2386].y * _2130) * ((_2436 * _2439) + _823)) * _2460) * _2175);
    float _2551 = (((((_2520 * _2440) + _824) * cbLight._m0[_2474].z) * _2539) * _2162) + ((((cbLight._m0[_2386].z * _2132) * ((_2436 * _2440) + _824)) * _2460) * _2175);
    float _2607;
    float _2609;
    float _2611;
    if (_2215)
    {
        _2607 = _2549;
        _2609 = _2550;
        _2611 = _2551;
    }
    else
    {
        uint _2613 = _2139 + 2u;
        uint _2617 = _2139 + 10u;
        float _2631 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2613].w)) * _704) * 0.949999988079071044921875);
        float _2632 = _2631 * _2631;
        float _2633 = cbLight._m0[_2613].x + _617;
        float _2634 = cbLight._m0[_2613].y + _618;
        float _2635 = cbLight._m0[_2613].z + _619;
        float _2639 = inversesqrt(dot(vec3(_2633, _2634, _2635), vec3(_2633, _2634, _2635)));
        float _2640 = _2639 * _2633;
        float _2641 = _2639 * _2634;
        float _2642 = _2639 * _2635;
        float _2643 = dot(vec3(_535, _536, _537), vec3(cbLight._m0[_2613].xyz));
        float _4522 = isnan(0.0) ? _2643 : (isnan(_2643) ? 0.0 : max(_2643, 0.0));
        float _2646 = isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0));
        float _2647 = dot(vec3(_535, _536, _537), vec3(_2640, _2641, _2642));
        float _4533 = isnan(0.0) ? _2647 : (isnan(_2647) ? 0.0 : max(_2647, 0.0));
        float _2650 = isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0));
        float _2651 = dot(vec3(cbLight._m0[_2613].xyz), vec3(_2640, _2641, _2642));
        float _4544 = isnan(0.0) ? _2651 : (isnan(_2651) ? 0.0 : max(_2651, 0.0));
        float _2655 = _2632 * _2632;
        float _2659 = ((_2650 * _2650) * (_2655 + (-1.0))) + 1.0;
        float _2666 = exp2(log2(1.0 - (isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0)))) * 5.0);
        float _2673 = 1.0 - _2632;
        float _2683 = (0.5 / (((_2415 * ((_2646 * _2673) + _2632)) + 9.9999999392252902907785028219223e-09) + (((_2415 * _2673) + _2632) * _2646))) * _2646;
        float _4555 = isnan(0.0) ? _2683 : (isnan(_2683) ? 0.0 : max(_2683, 0.0));
        float _2685 = (isnan(1.0) ? _4555 : (isnan(_4555) ? 1.0 : min(_4555, 1.0))) * (_2655 / ((_2659 * _2659) * 3.141590118408203125));
        float _2686 = isnan(1.0) ? _2154 : (isnan(_2154) ? 1.0 : min(_2154, 1.0));
        _2607 = (((((_2666 * _2437) + _822) * cbLight._m0[_2617].x) * _2685) * _2686) + _2549;
        _2609 = (((((_2666 * _2439) + _823) * cbLight._m0[_2617].y) * _2685) * _2686) + _2550;
        _2611 = (((((_2666 * _2440) + _824) * cbLight._m0[_2617].z) * _2685) * _2686) + _2551;
    }
    float _2717;
    float _2719;
    float _2721;
    if (_2324)
    {
        _2717 = _2607;
        _2719 = _2609;
        _2721 = _2611;
    }
    else
    {
        uint _2728 = _2139 + 3u;
        uint _2732 = _2139 + 11u;
        float _2746 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2728].w)) * _704) * 0.949999988079071044921875);
        float _2747 = _2746 * _2746;
        float _2748 = cbLight._m0[_2728].x + _617;
        float _2749 = cbLight._m0[_2728].y + _618;
        float _2750 = cbLight._m0[_2728].z + _619;
        float _2754 = inversesqrt(dot(vec3(_2748, _2749, _2750), vec3(_2748, _2749, _2750)));
        float _2755 = _2754 * _2748;
        float _2756 = _2754 * _2749;
        float _2757 = _2754 * _2750;
        float _2758 = dot(vec3(_535, _536, _537), vec3(cbLight._m0[_2728].xyz));
        float _4571 = isnan(0.0) ? _2758 : (isnan(_2758) ? 0.0 : max(_2758, 0.0));
        float _2761 = isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0));
        float _2762 = dot(vec3(_535, _536, _537), vec3(_2755, _2756, _2757));
        float _4582 = isnan(0.0) ? _2762 : (isnan(_2762) ? 0.0 : max(_2762, 0.0));
        float _2765 = isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0));
        float _2766 = dot(vec3(cbLight._m0[_2728].xyz), vec3(_2755, _2756, _2757));
        float _4593 = isnan(0.0) ? _2766 : (isnan(_2766) ? 0.0 : max(_2766, 0.0));
        float _2770 = _2747 * _2747;
        float _2774 = ((_2765 * _2765) * (_2770 + (-1.0))) + 1.0;
        float _2781 = exp2(log2(1.0 - (isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0)))) * 5.0);
        float _2788 = 1.0 - _2747;
        float _2798 = (0.5 / (((_2415 * ((_2761 * _2788) + _2747)) + 9.9999999392252902907785028219223e-09) + (((_2415 * _2788) + _2747) * _2761))) * _2761;
        float _4604 = isnan(0.0) ? _2798 : (isnan(_2798) ? 0.0 : max(_2798, 0.0));
        float _2800 = (isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0))) * (_2770 / ((_2774 * _2774) * 3.141590118408203125));
        float _2801 = isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0));
        _2717 = (((((_2781 * _2437) + _822) * cbLight._m0[_2732].x) * _2800) * _2801) + _2607;
        _2719 = (((((_2781 * _2439) + _823) * cbLight._m0[_2732].y) * _2800) * _2801) + _2609;
        _2721 = (((((_2781 * _2440) + _824) * cbLight._m0[_2732].z) * _2800) * _2801) + _2611;
    }
    float _2866;
    float _2868;
    float _2870;
    float _2872;
    float _2874;
    float _2876;
    if (_2137.y == 0u)
    {
        uvec4 _2822 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2823 = _2822.x;
        uint _2834 = uint((float(_2822.y) * floor(float(uint(cbSceneParam._m0[85u].y * _626) / _2823))) + floor(float(uint(cbSceneParam._m0[85u].x * _625) / _2823)));
        float _2844 = (log2(_1915 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2845 = isnan(0.0) ? _2844 : (isnan(_2844) ? 0.0 : max(_2844, 0.0));
        uint _2848 = uint(isnan(14.0) ? _2845 : (isnan(_2845) ? 14.0 : min(_2845, 14.0)));
        uvec4 _2853 = texelFetch(g_lightClusterGridBuffer, int(((_2848 << 2u) + (_2834 << 6u)) >> 2u));
        uint _2854 = _2853.x;
        uint _2855 = _2822.z;
        float _2938;
        float _2940;
        float _2942;
        float _2944;
        float _2946;
        float _2948;
        if (((((1u << ((_2855 >> 4u) & 15u)) + 4294967295u) & _2854) == 0u) || ((_2855 & 240u) == 0u))
        {
            _2938 = 0.0;
            _2940 = 0.0;
            _2942 = 0.0;
            _2944 = 0.0;
            _2946 = 0.0;
            _2948 = 0.0;
        }
        else
        {
            float _2939;
            float _2941;
            float _2943;
            float _2945;
            float _2947;
            float _2949;
            float _3082 = 0.0;
            float _3083 = 0.0;
            float _3084 = 0.0;
            float _3085 = 0.0;
            float _3086 = 0.0;
            float _3087 = 0.0;
            uint _3088 = 0u;
            uint _3097;
            bool _3098;
            for (;;)
            {
                _3097 = texelFetch(g_lightClassification, int((((_2848 << 5u) + (_2834 << 9u)) + (_3088 << 2u)) >> 2u)).x;
                _3098 = _3097 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3098)
                {
                    frontier_phi_68_pred = _3087;
                    frontier_phi_68_pred_1 = _3086;
                    frontier_phi_68_pred_2 = _3085;
                    frontier_phi_68_pred_3 = _3083;
                    frontier_phi_68_pred_4 = _3082;
                    frontier_phi_68_pred_5 = _3084;
                }
                else
                {
                    float _3206;
                    float _3207;
                    float _3208;
                    float _3209;
                    float _3210;
                    float _3211;
                    uint _3212;
                    _3206 = _3082;
                    _3207 = _3083;
                    _3208 = _3084;
                    _3209 = _3085;
                    _3210 = _3086;
                    _3211 = _3087;
                    _3212 = _3097;
                    float _3138;
                    float _3139;
                    float _3140;
                    float _3141;
                    float _3142;
                    float _3143;
                    for (;;)
                    {
                        uint _3216 = uint(findLSB(_3212)) + (_3088 << 5u);
                        uint _3213 = (_3212 + 4294967295u) & _3212;
                        uint _3218 = _3216 * 48u;
                        vec4 _3232 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3218)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 3u)).x));
                        uint _3238 = (_3216 * 48u) + 4u;
                        vec4 _3251 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3238)).x, texelFetch(g_PointLightRenderingBuffer, int(_3238 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3238 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3238 + 3u)).x));
                        uint _3257 = (_3216 * 48u) + 8u;
                        vec3 _3268 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3257)).x, texelFetch(g_PointLightRenderingBuffer, int(_3257 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3257 + 2u)).x));
                        float _3272 = _3232.x - _1913;
                        float _3273 = _3232.y - _1914;
                        float _3274 = _3232.z - _1915;
                        float _3275 = dot(vec3(_3272, _3273, _3274), vec3(_3272, _3273, _3274));
                        float _3278 = inversesqrt(_3275);
                        float _3279 = _3278 * _3272;
                        float _3280 = _3278 * _3273;
                        float _3281 = _3278 * _3274;
                        float _3282 = dot(vec3(_649, _652, _655), vec3(_3279, _3280, _3281));
                        float _3287 = 1.0 - (_3275 * _3232.w);
                        float _4630 = isnan(0.0) ? _3287 : (isnan(_3287) ? 0.0 : max(_3287, 0.0));
                        float _3288 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
                        float _3289 = sqrt(_3275) * _3251.w;
                        float _3292 = 1.39999997615814208984375 / (_3289 + 1.39999997615814208984375);
                        float _3293 = _3292 * _3292;
                        float _3296 = ((1.0 - _3293) * _3282) + _3293;
                        float _3299 = _3289 * _3289;
                        float _3303 = ((isnan(0.0) ? _3296 : (isnan(_3296) ? 0.0 : max(_3296, 0.0))) * _3288) / ((_3299 * 0.699999988079071044921875) + 1.0);
                        float _3307 = (-0.0) - _1913;
                        float _3308 = (-0.0) - _1914;
                        float _3309 = (-0.0) - _1915;
                        float _3313 = inversesqrt(dot(vec3(_3307, _3308, _3309), vec3(_3307, _3308, _3309)));
                        float _3314 = _3313 * _3307;
                        float _3315 = _3313 * _3308;
                        float _3316 = _3313 * _3309;
                        float _3323 = exp2(log2(1.0 / ((_3299 * 3.5) + 5.0)) * 0.25);
                        float _3324 = 1.0 - _852;
                        float _3331 = sqrt(1.0 - ((1.0 - (_3324 * _3324)) * (1.0 - (_3323 * _3323))));
                        float _3332 = _3331 * _3331;
                        float _3333 = _3332 * _3332;
                        float _3334 = _3314 + _3279;
                        float _3335 = _3315 + _3280;
                        float _3336 = _3316 + _3281;
                        float _3340 = inversesqrt(dot(vec3(_3334, _3335, _3336), vec3(_3334, _3335, _3336)));
                        float _3344 = dot(vec3(_649, _652, _655), vec3(_3314, _3315, _3316));
                        float _4646 = isnan(0.0) ? _3344 : (isnan(_3344) ? 0.0 : max(_3344, 0.0));
                        float _3347 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
                        float _3348 = dot(vec3(_649, _652, _655), vec3(_3340 * _3334, _3340 * _3335, _3340 * _3336));
                        float _4657 = isnan(0.0) ? _3348 : (isnan(_3348) ? 0.0 : max(_3348, 0.0));
                        float _3351 = isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0));
                        float _3355 = ((_3351 * _3351) * (_3333 + (-1.0))) + 1.0;
                        float _3356 = _3292 * _3332;
                        float _3357 = _3356 * _3356;
                        float _3360 = ((1.0 - _3357) * _3282) + _3357;
                        float _4668 = isnan(0.0) ? _3360 : (isnan(_3360) ? 0.0 : max(_3360, 0.0));
                        float _3361 = isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0));
                        float _3362 = 1.0 - _3332;
                        float _3372 = (0.5 / (((_3361 * ((_3347 * _3362) + _3332)) + 9.9999999392252902907785028219223e-09) + (((_3361 * _3362) + _3332) * _3347))) * _3361;
                        float _4679 = isnan(0.0) ? _3372 : (isnan(_3372) ? 0.0 : max(_3372, 0.0));
                        float _3383 = (((_3333 * 3.1415927410125732421875) * (isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0)))) / ((_3355 * _3355) * ((_3299 * 2.1991131305694580078125) + 3.141590118408203125))) * _3288;
                        _3141 = (_3303 * _3251.x) + _3209;
                        _3142 = (_3303 * _3251.y) + _3210;
                        _3143 = (_3303 * _3251.z) + _3211;
                        _3138 = (_3383 * _3268.x) + _3206;
                        _3139 = (_3383 * _3268.y) + _3207;
                        _3140 = (_3383 * _3268.z) + _3208;
                        if (_3213 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3206 = _3138;
                            _3207 = _3139;
                            _3208 = _3140;
                            _3209 = _3141;
                            _3210 = _3142;
                            _3211 = _3143;
                            _3212 = _3213;
                        }
                    }
                    frontier_phi_68_pred = _3143;
                    frontier_phi_68_pred_1 = _3142;
                    frontier_phi_68_pred_2 = _3141;
                    frontier_phi_68_pred_3 = _3139;
                    frontier_phi_68_pred_4 = _3138;
                    frontier_phi_68_pred_5 = _3140;
                }
                _2949 = frontier_phi_68_pred;
                _2947 = frontier_phi_68_pred_1;
                _2945 = frontier_phi_68_pred_2;
                _2941 = frontier_phi_68_pred_3;
                _2939 = frontier_phi_68_pred_4;
                _2943 = frontier_phi_68_pred_5;
                uint _3089 = _3088 + 1u;
                if (_3089 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3082 = _2939;
                    _3083 = _2941;
                    _3084 = _2943;
                    _3085 = _2945;
                    _3086 = _2947;
                    _3087 = _2949;
                    _3088 = _3089;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2938 = _2939;
            _2940 = _2941;
            _2942 = _2943;
            _2944 = _2945;
            _2946 = _2947;
            _2948 = _2949;
        }
        uvec4 _2952 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2953 = _2952.z;
        uint _2955 = (_2953 >> 8u) & 15u;
        float _3050;
        float _3052;
        float _3054;
        float _3056;
        float _3058;
        float _3060;
        if (((4294967295u << _2955) & _2854) == 0u)
        {
            _3050 = _2938;
            _3052 = _2940;
            _3054 = _2942;
            _3056 = _2944;
            _3058 = _2946;
            _3060 = _2948;
        }
        else
        {
            float _3075 = inversesqrt(dot(vec3(_1913, _1914, _1915), vec3(_1913, _1914, _1915)));
            float _3076 = _3075 * _1913;
            float _3077 = _3075 * _1914;
            float _3078 = _3075 * _1915;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2955 < ((_2953 >> 12u) & 15u))
            {
                float _3051;
                float _3053;
                float _3055;
                float _3057;
                float _3059;
                float _3061;
                float _3189 = _2938;
                float _3190 = _2940;
                float _3191 = _2942;
                float _3192 = _2944;
                float _3193 = _2946;
                float _3194 = _2948;
                uint _3195 = _2955;
                uint _3204;
                bool _3205;
                for (;;)
                {
                    _3204 = texelFetch(g_lightClassification, int((((_2848 << 5u) + (_2834 << 9u)) + (_3195 << 2u)) >> 2u)).x;
                    _3205 = _3204 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3205)
                    {
                        frontier_phi_74_pred = _3191;
                        frontier_phi_74_pred_1 = _3190;
                        frontier_phi_74_pred_2 = _3189;
                        frontier_phi_74_pred_3 = _3194;
                        frontier_phi_74_pred_4 = _3193;
                        frontier_phi_74_pred_5 = _3192;
                    }
                    else
                    {
                        float _3388;
                        float _3389;
                        float _3390;
                        float _3391;
                        float _3392;
                        float _3393;
                        float _3683;
                        float _3684;
                        float _3685;
                        float _3686;
                        float _3687;
                        float _3688;
                        float _3401 = _3189;
                        float _3402 = _3190;
                        float _3403 = _3191;
                        float _3404 = _3192;
                        float _3405 = _3193;
                        float _3406 = _3194;
                        uint _3407 = _3204;
                        uint _3408;
                        vec4 _3433;
                        float _3434;
                        vec4 _3449;
                        vec3 _3461;
                        vec4 _3476;
                        vec4 _3492;
                        float _3539;
                        bool _3540;
                        for (;;)
                        {
                            uint _3418 = ((_3195 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3407));
                            _3408 = (_3407 + 4294967295u) & _3407;
                            uint _3420 = _3418 * 40u;
                            _3433 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3420)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3420 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3420 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3420 + 3u)).x));
                            _3434 = _3433.w;
                            uint _3436 = (_3418 * 40u) + 4u;
                            _3449 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3436)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3436 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3436 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3436 + 3u)).x));
                            uint _3451 = (_3418 * 40u) + 8u;
                            _3461 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3451)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3451 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3451 + 2u)).x));
                            uint _3463 = (_3418 * 40u) + 16u;
                            _3476 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3463)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 3u)).x));
                            uint _3479 = (_3418 * 40u) + 20u;
                            _3492 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3479)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 3u)).x));
                            uint _3495 = (_3418 * 40u) + 24u;
                            vec4 _3508 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3495)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 3u)).x));
                            uint _3514 = (_3418 * 40u) + 28u;
                            vec4 _3527 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3514)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 3u)).x));
                            _3539 = fma(_1915, _3527.z, fma(_1914, _3527.y, _3527.x * _1913)) + _3527.w;
                            _3540 = !((fma(_1915, _3508.z, fma(_1914, _3508.y, _3508.x * _1913)) + _3508.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3540)
                            {
                                float _3567 = _3433.x - _1913;
                                float _3568 = _3433.y - _1914;
                                float _3569 = _3433.z - _1915;
                                float _3570 = dot(vec3(_3567, _3568, _3569), vec3(_3567, _3568, _3569));
                                float _3573 = inversesqrt(_3570);
                                float _3574 = _3573 * _3567;
                                float _3575 = _3573 * _3568;
                                float _3576 = _3573 * _3569;
                                float _3580 = 1.0 - (_3570 / (_3434 * _3434));
                                float _4690 = isnan(0.0) ? _3580 : (isnan(_3580) ? 0.0 : max(_3580, 0.0));
                                float _3581 = isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0));
                                float _3585 = sqrt(_3570) * _3449.w;
                                float _3587 = 1.39999997615814208984375 / (_3585 + 1.39999997615814208984375);
                                float _3588 = _3587 * _3587;
                                float _3591 = ((1.0 - _3588) * dot(vec3(_3574, _3575, _3576), vec3(_649, _652, _655))) + _3588;
                                float _3594 = _3585 * _3585;
                                float _3598 = (fma(_1915, _3476.z, fma(_1914, _3476.y, _3476.x * _1913)) + _3476.w) / _3539;
                                float _3599 = (fma(_1915, _3492.z, fma(_1914, _3492.y, _3492.x * _1913)) + _3492.w) / _3539;
                                float _3603 = 1.0 - dot(vec2(_3598, _3599), vec2(_3598, _3599));
                                float _4706 = isnan(0.0) ? _3603 : (isnan(_3603) ? 0.0 : max(_3603, 0.0));
                                float _3604 = isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0));
                                float _3605 = _3604 * (((isnan(0.0) ? _3591 : (isnan(_3591) ? 0.0 : max(_3591, 0.0))) * _3581) / ((_3594 * 0.699999988079071044921875) + 1.0));
                                float _3617 = exp2(log2(1.0 / ((_3594 * 3.5) + 5.0)) * 0.25);
                                float _3618 = 1.0 - _852;
                                float _3625 = sqrt(1.0 - ((1.0 - (_3618 * _3618)) * (1.0 - (_3617 * _3617))));
                                float _3626 = _3625 * _3625;
                                float _3627 = _3626 * _3626;
                                float _3628 = _3574 - _3076;
                                float _3629 = _3575 - _3077;
                                float _3630 = _3576 - _3078;
                                float _3634 = inversesqrt(dot(vec3(_3628, _3629, _3630), vec3(_3628, _3629, _3630)));
                                float _3638 = dot(vec3(_649, _652, _655), vec3((-0.0) - _3076, (-0.0) - _3077, (-0.0) - _3078));
                                float _4717 = isnan(0.0) ? _3638 : (isnan(_3638) ? 0.0 : max(_3638, 0.0));
                                float _3641 = isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0));
                                float _3642 = dot(vec3(_649, _652, _655), vec3(_3634 * _3628, _3634 * _3629, _3634 * _3630));
                                float _4728 = isnan(0.0) ? _3642 : (isnan(_3642) ? 0.0 : max(_3642, 0.0));
                                float _3645 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
                                float _3649 = ((_3645 * _3645) * (_3627 + (-1.0))) + 1.0;
                                float _3650 = _3587 * _3626;
                                float _3651 = _3650 * _3650;
                                float _3657 = ((1.0 - _3651) * dot(vec3(_649, _652, _655), vec3(_3574, _3575, _3576))) + _3651;
                                float _4739 = isnan(0.0) ? _3657 : (isnan(_3657) ? 0.0 : max(_3657, 0.0));
                                float _3658 = isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0));
                                float _3659 = 1.0 - _3626;
                                float _3669 = (0.5 / (((_3658 * ((_3641 * _3659) + _3626)) + 9.9999999392252902907785028219223e-09) + (((_3658 * _3659) + _3626) * _3641))) * _3658;
                                float _4750 = isnan(0.0) ? _3669 : (isnan(_3669) ? 0.0 : max(_3669, 0.0));
                                float _3679 = (_3604 * _3581) * (((_3627 * 3.1415927410125732421875) * (isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0)))) / ((_3649 * _3649) * ((_3594 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3679 * _3461.z;
                                frontier_phi_80_pred_1 = _3679 * _3461.y;
                                frontier_phi_80_pred_2 = _3679 * _3461.x;
                                frontier_phi_80_pred_3 = _3605 * _3449.z;
                                frontier_phi_80_pred_4 = _3605 * _3449.y;
                                frontier_phi_80_pred_5 = _3605 * _3449.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3685 = frontier_phi_80_pred;
                            _3684 = frontier_phi_80_pred_1;
                            _3683 = frontier_phi_80_pred_2;
                            _3688 = frontier_phi_80_pred_3;
                            _3687 = frontier_phi_80_pred_4;
                            _3686 = frontier_phi_80_pred_5;
                            _3391 = _3686 + _3404;
                            _3392 = _3687 + _3405;
                            _3393 = _3688 + _3406;
                            _3388 = _3683 + _3401;
                            _3389 = _3684 + _3402;
                            _3390 = _3685 + _3403;
                            if (_3408 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3401 = _3388;
                                _3402 = _3389;
                                _3403 = _3390;
                                _3404 = _3391;
                                _3405 = _3392;
                                _3406 = _3393;
                                _3407 = _3408;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3390;
                        frontier_phi_74_pred_1 = _3389;
                        frontier_phi_74_pred_2 = _3388;
                        frontier_phi_74_pred_3 = _3393;
                        frontier_phi_74_pred_4 = _3392;
                        frontier_phi_74_pred_5 = _3391;
                    }
                    _3055 = frontier_phi_74_pred;
                    _3053 = frontier_phi_74_pred_1;
                    _3051 = frontier_phi_74_pred_2;
                    _3061 = frontier_phi_74_pred_3;
                    _3059 = frontier_phi_74_pred_4;
                    _3057 = frontier_phi_74_pred_5;
                    uint _3196 = _3195 + 1u;
                    if (_3196 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3189 = _3051;
                        _3190 = _3053;
                        _3191 = _3055;
                        _3192 = _3057;
                        _3193 = _3059;
                        _3194 = _3061;
                        _3195 = _3196;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3059;
                frontier_phi_62_63_ladder_1 = _3057;
                frontier_phi_62_63_ladder_2 = _3055;
                frontier_phi_62_63_ladder_3 = _3061;
                frontier_phi_62_63_ladder_4 = _3053;
                frontier_phi_62_63_ladder_5 = _3051;
            }
            else
            {
                frontier_phi_62_63_ladder = _2946;
                frontier_phi_62_63_ladder_1 = _2944;
                frontier_phi_62_63_ladder_2 = _2942;
                frontier_phi_62_63_ladder_3 = _2948;
                frontier_phi_62_63_ladder_4 = _2940;
                frontier_phi_62_63_ladder_5 = _2938;
            }
            _3050 = frontier_phi_62_63_ladder_5;
            _3052 = frontier_phi_62_63_ladder_4;
            _3054 = frontier_phi_62_63_ladder_2;
            _3056 = frontier_phi_62_63_ladder_1;
            _3058 = frontier_phi_62_63_ladder;
            _3060 = frontier_phi_62_63_ladder_3;
        }
        float _3065 = isnan(1.0) ? _836 : (isnan(_836) ? 1.0 : min(_836, 1.0));
        _2866 = (_3065 * _3056) + _2379;
        _2868 = (_3065 * _3058) + _2381;
        _2870 = (_3065 * _3060) + _2383;
        _2872 = ((_3050 * _822) * _3065) + _2717;
        _2874 = ((_3052 * _823) * _3065) + _2719;
        _2876 = ((_3054 * _824) * _3065) + _2721;
    }
    else
    {
        _2866 = _2379;
        _2868 = _2381;
        _2870 = _2383;
        _2872 = _2717;
        _2874 = _2719;
        _2876 = _2721;
    }
    float _4766 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _4777 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _4788 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
    float _4799 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _2894 = ((isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0))) * (_2866 + ((isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0))) * _836))) + ((_2872 + ((isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0))) * _1643)) * cbPerFrame._m0[3u].x);
    float _2895 = ((isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0))) * (_2868 + ((isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0))) * _836))) + ((_2874 + ((isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0))) * _1643)) * cbPerFrame._m0[3u].x);
    float _2896 = ((isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0))) * (_2870 + ((isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0))) * _836))) + ((_2876 + ((isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0))) * _1643)) * cbPerFrame._m0[3u].x);
    float _2904 = cbInstanceData._m0[_728 + 6u].w * (isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0)));
    float _2909 = _625 / cbSceneParam._m0[86u].x;
    float _2910 = _626 / cbSceneParam._m0[86u].y;
    vec4 _2924 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2909, _2910, (log2((isnan(cbSceneParam._m0[77u].w) ? _559 : (isnan(_559) ? cbSceneParam._m0[77u].w : min(_559, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2926 = _2924.x;
    float _2927 = _2924.y;
    float _2928 = _2924.z;
    float _2929 = _2924.w;
    float _3000;
    float _3002;
    float _3004;
    float _3006;
    if (_559 > cbSceneParam._m0[78u].w)
    {
        float _2963 = isnan(_559) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _559 : min(cbSceneParam._m0[80u].w, _559));
        float _2964 = _2963 / _559;
        float _2975 = _2964 * _610;
        float _2976 = _611 * _2964;
        float _2977 = (-0.0) - _2976;
        float _2978 = _2964 * _612;
        float _2980 = (cbSceneParam._m0[77u].w * _2977) / _2963;
        float _2981 = _2980 + cbSceneParam._m0[79u].w;
        float _2982 = cbSceneParam._m0[79u].w - _2976;
        float _2988 = sqrt(((_2975 * _2975) + (_2976 * _2976)) + (_2978 * _2978));
        float _2991 = (1.0 - (cbSceneParam._m0[77u].w / _2963)) * _2988;
        float _2996 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2998 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3151;
        if (abs((_2977 - _2980) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3151 = ((((_2981 > 0.0) ? exp2(_2996 * _2981) : (2.0 - exp2(_2998 * _2981))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2991;
        }
        else
        {
            float _3111 = 1.0 / cbSceneParam._m0[80u].x;
            float _3112 = isnan(_2982) ? _2981 : (isnan(_2981) ? _2982 : max(_2981, _2982));
            float _3113 = isnan(_2982) ? _2981 : (isnan(_2981) ? _2982 : min(_2981, _2982));
            float _3122 = isnan(0.0) ? _3112 : (isnan(_3112) ? 0.0 : min(_3112, 0.0));
            float _3123 = isnan(0.0) ? _3113 : (isnan(_3113) ? 0.0 : min(_3113, 0.0));
            _3151 = ((abs(_2988 / _2977) * cbSceneParam._m0[80u].y) * ((((_3122 - _3123) * 2.0) - ((exp2(_2996 * (isnan(0.0) ? _3112 : (isnan(_3112) ? 0.0 : max(_3112, 0.0)))) - exp2(_2996 * (isnan(0.0) ? _3113 : (isnan(_3113) ? 0.0 : max(_3113, 0.0))))) * _3111)) - ((exp2(_2998 * _3122) - exp2(_2998 * _3123)) * _3111))) + (_2991 * cbSceneParam._m0[80u].z);
        }
        vec4 _3153 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2909, _2910, 1.0), 0.0);
        float _3162 = exp2((_3151 * (-1.44269502162933349609375)) * (1.0 - _3153.w));
        float _3163 = log2(_3162);
        float _3179 = log2(_2929);
        _3000 = (exp2(_3179 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3163 * cbSceneParam._m0[78u].x)) * _3153.x) / cbSceneParam._m0[78u].x)) + _2926;
        _3002 = (exp2(_3179 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3163 * cbSceneParam._m0[78u].y)) * _3153.y) / cbSceneParam._m0[78u].y)) + _2927;
        _3004 = (exp2(_3179 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3163 * cbSceneParam._m0[78u].z)) * _3153.z) / cbSceneParam._m0[78u].z)) + _2928;
        _3006 = _3162 * _2929;
    }
    else
    {
        _3000 = _2926;
        _3002 = _2927;
        _3004 = _2928;
        _3006 = _2929;
    }
    float _3018 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3019 = _3018 == 3.0;
    float _3020 = log2(_3006);
    float _3027 = exp2(_3020 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2894 : (isnan(_2894) ? 0.0 : max(_2894, 0.0)));
    float _3028 = exp2(_3020 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0)));
    float _3029 = exp2(_3020 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2896 : (isnan(_2896) ? 0.0 : max(_2896, 0.0)));
    float _3038 = (_3018 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3038 * (_3019 ? _3027 : (_3027 + (cbSceneParam._m0[72u].w * _3000)));
    SV_Target.y = _3038 * (_3019 ? _3028 : (_3028 + (cbSceneParam._m0[72u].w * _3002)));
    SV_Target.z = _3038 * (_3019 ? _3029 : (_3029 + (cbSceneParam._m0[72u].w * _3004)));
    SV_Target.w = _2904;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2904;
}


