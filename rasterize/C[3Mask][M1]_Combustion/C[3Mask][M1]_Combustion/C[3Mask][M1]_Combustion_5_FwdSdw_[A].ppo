#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_7;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1385;
float _4103;
float _4104;
float _4105;
float _4106;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _226 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _227 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _228 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _234 = inversesqrt(dot(vec3(_226, _227, _228), vec3(_226, _227, _228)));
    float _241 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _248 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _270 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _276 = _270.x * cbMtdParam._m0[10u].x;
    float _277 = _270.y * cbMtdParam._m0[10u].y;
    float _278 = _270.z * cbMtdParam._m0[10u].z;
    vec4 _297 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _316 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _344 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w)).x;
    float _354 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _316.x) * 2.0) - _344)) + 1.0;
    float _4115 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _355 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
    float _362 = (_355 * ((_297.x * cbMtdParam._m0[11u].x) - _276)) + _276;
    float _363 = (_355 * ((_297.y * cbMtdParam._m0[11u].y) - _277)) + _277;
    float _364 = (_355 * ((_297.z * cbMtdParam._m0[11u].z) - _278)) + _278;
    vec4 _382 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _395 = (((((1.0 - _316.y) * 2.0) - _344) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _4126 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _396 = isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0));
    float _403 = (((_382.x * cbMtdParam._m0[12u].x) - _362) * _396) + _362;
    float _404 = (_396 * ((_382.y * cbMtdParam._m0[12u].y) - _363)) + _363;
    float _405 = (_396 * ((_382.z * cbMtdParam._m0[12u].z) - _364)) + _364;
    vec4 _423 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _436 = (((((1.0 - _316.z) * 2.0) - _344) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _4137 = isnan(0.0) ? _436 : (isnan(_436) ? 0.0 : max(_436, 0.0));
    float _437 = isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0));
    float _444 = (((_423.x * cbMtdParam._m0[13u].x) - _403) * _437) + _403;
    float _445 = (_437 * ((_423.y * cbMtdParam._m0[13u].y) - _404)) + _404;
    float _446 = (_437 * ((_423.z * cbMtdParam._m0[13u].z) - _405)) + _405;
    vec4 _459 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.z) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.w) + cbTextureTilingScale._m0[20u].w));
    vec4 _474 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _476 = _474.x;
    float _494 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _476) * _355) + _476;
    float _511 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _494) * _396) + _494;
    float _528 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x - _511) * _437) + _511;
    vec4 _541 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _543 = _541.x;
    float _544 = _541.y;
    float _545 = _541.z;
    vec4 _557 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _568 = ((_557.x - _543) * _355) + _543;
    float _569 = ((_557.y - _544) * _355) + _544;
    float _570 = ((_557.z - _545) * _355) + _545;
    vec4 _583 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _594 = ((_583.x - _568) * _396) + _568;
    float _595 = ((_583.y - _569) * _396) + _569;
    float _596 = ((_583.z - _570) * _396) + _570;
    vec4 _609 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _622 = ((_609.z - _596) * _437) + _596;
    float _625 = ((((_609.x - _594) * _437) + _594) * 2.0) + (-1.0);
    float _627 = ((((_609.y - _595) * _437) + _595) * 2.0) + (-1.0);
    float _628 = dot(vec2(_625, _627), vec2(_625, _627));
    float _4148 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
    float _633 = sqrt(1.0 - (isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0))));
    vec4 _665 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[15u].x) + cbTextureTilingScale._m0[15u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[15u].y) + cbTextureTilingScale._m0[15u].w));
    float _679 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4159 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _680 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
    float _688 = (((_680 * _680) * (3.0 - (_680 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _696 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _704 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4170 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _705 = isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0));
    float _709 = (_705 * _705) * (3.0 - (_705 * 2.0));
    float _710 = _709 * cbMtdParam._m0[22u].x;
    float _711 = _709 * cbMtdParam._m0[22u].y;
    float _712 = sin(_696);
    float _713 = cos(_696);
    float _714 = TEXCOORD.z - _710;
    float _715 = TEXCOORD.w - _711;
    vec4 _735 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_710 + fma(_715, (-0.0) - _712, _714 * _713))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_715, _713, _714 * _712) + _711)) + cbTextureTilingScale._m0[2u].w));
    float _741 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _735.x;
    float _743 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _735.y;
    float _745 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _735.z;
    float _765 = (TEXCOORD_5.x - (((_459.x + 0.00999999977648258209228515625) * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _4181 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
    float _766 = isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0));
    vec4 _779 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _789 = (((_779.x * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z) + _625;
    float _790 = (((_779.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z) + _627;
    float _793 = fma(_633, _241 * NORMAL.x, fma(_790, _248 * TANGENT.x, (_234 * _226) * _789));
    float _796 = fma(_633, _241 * NORMAL.y, fma(_790, _248 * TANGENT.y, (_234 * _227) * _789));
    float _799 = fma(_633, _241 * NORMAL.z, fma(_790, _248 * TANGENT.z, (_234 * _228) * _789));
    float _803 = inversesqrt(dot(vec3(_793, _796, _799), vec3(_793, _796, _799)));
    float _804 = _803 * _793;
    float _805 = _803 * _796;
    float _806 = _803 * _799;
    float _4192 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _807 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
    float _4203 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _4214 = isnan(0.0) ? _445 : (isnan(_445) ? 0.0 : max(_445, 0.0));
    float _4225 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _4236 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
    float _811 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
    float _827 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _867 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _877 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _867);
    float _878 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _867);
    float _879 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _867);
    float _883 = inversesqrt(dot(vec3(_877, _878, _879), vec3(_877, _878, _879)));
    float _884 = _877 * _883;
    float _885 = _878 * _883;
    float _886 = _879 * _883;
    vec4 _891 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _893 = _891.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1065 = sqrt(((_877 * _877) + (_878 * _878)) + (_879 * _879));
        float _1071 = (cbMatDynParam._m0[5u].x * _1065) + cbMatDynParam._m0[5u].y;
        float _4247 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
        float _1072 = isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0));
        float _1076 = (cbMatDynParam._m0[5u].z * _1065) + cbMatDynParam._m0[5u].w;
        float _4258 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0))) - _1072)) + _1072) < ((_893 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _904 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _905 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _924 = fma(_806, cbSceneParam._m0[5u].z, fma(_805, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _804));
    float _927 = fma(_806, cbSceneParam._m0[6u].z, fma(_805, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _804));
    float _930 = fma(_806, cbSceneParam._m0[7u].z, fma(_805, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _804));
    uint _943 = uint(roundEven(NORMAL.w)) * 13u;
    uint _944 = _943 + 9u;
    uint _945 = _944 + uint(cbMatDynParam._m0[0u].w);
    float _951 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0)))) * cbInstanceData._m0[_945].x;
    float _952 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0)))) * cbInstanceData._m0[_945].y;
    float _953 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0)))) * cbInstanceData._m0[_945].z;
    float _4269 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
    float _954 = isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0));
    float _4280 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
    float _955 = isnan(1.0) ? _4280 : (isnan(_4280) ? 1.0 : min(_4280, 1.0));
    float _4291 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    float _956 = isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0));
    float _957 = 1.0 - _811;
    float _958 = _954 * _957;
    float _959 = _955 * _957;
    float _960 = _956 * _957;
    float _965 = (_954 + (-0.039999999105930328369140625)) * _811;
    float _966 = (_955 + (-0.039999999105930328369140625)) * _811;
    float _967 = (_956 + (-0.039999999105930328369140625)) * _811;
    float _968 = _965 + 0.039999999105930328369140625;
    float _970 = _966 + 0.039999999105930328369140625;
    float _971 = _967 + 0.039999999105930328369140625;
    vec4 _980 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _904, cbSceneParam._m0[86u].y * _905));
    float _983 = _980.x * TEXCOORD_5.w;
    float _984 = dot(vec3(_804, _805, _806), vec3(_884, _885, _886));
    float _987 = _984 * 2.0;
    float _991 = (_987 * _804) - _884;
    float _992 = (_987 * _805) - _885;
    float _993 = (_987 * _806) - _886;
    float _997 = abs(dot(vec3(_884, _885, _886), vec3(_804, _805, _806)));
    float _4302 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
    float _999 = sqrt(_807);
    float _1011 = exp2((_999 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4302 : (isnan(_4302) ? 1.0 : min(_4302, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_999 * 3.0));
    float _1017 = (1.0 - _1011) * ((_999 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1018 = _1011 * _999;
    float _1046 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1050 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1054 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1384;
    float _1386;
    float _1387;
    float _1388;
    float _1389;
    float _1390;
    float _1391;
    float _1392;
    float _1393;
    float _1394;
    float _1395;
    float _1396;
    float _1397;
    float _1398;
    float _1399;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1109 = fma(_1054, cbModelParam._m0[26u].z, fma(_1050, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1046));
        float _1113 = fma(_1054, cbModelParam._m0[27u].z, fma(_1050, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1046));
        float _1117 = fma(_1054, cbModelParam._m0[28u].z, fma(_1050, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1046));
        float _1142 = _1046 + _804;
        float _1143 = _1050 + _805;
        float _1144 = _1054 + _806;
        float _1154 = fma(_1144, cbModelParam._m0[26u].z, fma(_1143, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1142)) - _1109;
        float _1155 = fma(_1144, cbModelParam._m0[27u].z, fma(_1143, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1142)) - _1113;
        float _1156 = fma(_1144, cbModelParam._m0[28u].z, fma(_1143, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1142)) - _1117;
        float _1160 = inversesqrt(dot(vec3(_1154, _1155, _1156), vec3(_1154, _1155, _1156)));
        float _1173 = ((_1160 * _1154) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1109 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1174 = ((_1160 * _1155) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1113 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1175 = ((_1160 * _1156) / cbModelParam._m0[34u].z) + ((((((_1117 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1178 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1173, _1174, _1175), 0.0);
        vec4 _1185 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1173, _1174, _1175), 0.0);
        vec4 _1192 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1173, _1174, _1175), 0.0);
        vec4 _1199 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1173, _1174, _1175), 0.0);
        float _1212 = exp2((_1178.w + (-0.5)) * 20.0) * 2.0;
        float _1213 = _1212 * (_1178.x + (-0.5));
        float _1214 = _1212 * (_1178.y + (-0.5));
        float _1215 = _1212 * (_1178.z + (-0.5));
        float _1222 = exp2((_1185.w + (-0.5)) * 20.0) * 2.0;
        float _1223 = _1222 * (_1185.x + (-0.5));
        float _1224 = _1222 * (_1185.y + (-0.5));
        float _1225 = _1222 * (_1185.z + (-0.5));
        float _1232 = exp2((_1192.w + (-0.5)) * 20.0) * 2.0;
        float _1233 = _1232 * (_1192.x + (-0.5));
        float _1234 = _1232 * (_1192.y + (-0.5));
        float _1235 = _1232 * (_1192.z + (-0.5));
        float _1242 = exp2((_1199.w + (-0.5)) * 20.0) * 2.0;
        float _1243 = _1242 * (_1199.x + (-0.5));
        float _1244 = _1242 * (_1199.y + (-0.5));
        float _1245 = _1242 * (_1199.z + (-0.5));
        float _1246 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
        float _1247 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1248 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1249 = _1213 * 0.5;
        float _1250 = _1223 * 0.5;
        float _1251 = _1233 * 0.5;
        float _1252 = dot(vec3(_1249, _1250, _1251), vec3(_1249, _1250, _1251));
        float _1257 = (_1252 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1252);
        float _1266 = (dot(vec3(_804, _805, _806), vec3(_1257 * _1249, _1257 * _1250, _1257 * _1251)) + 1.0) * 0.5;
        float _4328 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
        float _1276 = sqrt(((_1250 * _1250) + (_1249 * _1249)) + (_1251 * _1251)) / (_1246 + 9.9999997473787516355514526367188e-06);
        float _4339 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1277 = isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0));
        float _1278 = _1277 * 2.0;
        float _1282 = (1.0 - _1277) / (_1277 + 1.0);
        float _4350 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
        float _1283 = isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0));
        float _1292 = ((((1.0 - _1283) * (_1278 + 2.0)) * exp2(log2(isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0))) * (_1278 + 1.0))) + _1283) * _1246;
        float _1293 = _1214 * 0.5;
        float _1294 = _1224 * 0.5;
        float _1295 = _1234 * 0.5;
        float _1296 = dot(vec3(_1293, _1294, _1295), vec3(_1293, _1294, _1295));
        float _1301 = (_1296 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1296);
        float _1309 = (dot(vec3(_804, _805, _806), vec3(_1301 * _1293, _1301 * _1294, _1301 * _1295)) + 1.0) * 0.5;
        float _4361 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
        float _1318 = sqrt(((_1294 * _1294) + (_1293 * _1293)) + (_1295 * _1295)) / (_1247 + 9.9999997473787516355514526367188e-06);
        float _4372 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1319 = isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0));
        float _1320 = _1319 * 2.0;
        float _1324 = (1.0 - _1319) / (_1319 + 1.0);
        float _4383 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1325 = isnan(1.0) ? _4383 : (isnan(_4383) ? 1.0 : min(_4383, 1.0));
        float _1334 = ((((1.0 - _1325) * (_1320 + 2.0)) * exp2(log2(isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0))) * (_1320 + 1.0))) + _1325) * _1247;
        float _1335 = _1215 * 0.5;
        float _1336 = _1225 * 0.5;
        float _1337 = _1235 * 0.5;
        float _1338 = dot(vec3(_1335, _1336, _1337), vec3(_1335, _1336, _1337));
        float _1343 = (_1338 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1338);
        float _1351 = (dot(vec3(_804, _805, _806), vec3(_1343 * _1335, _1343 * _1336, _1343 * _1337)) + 1.0) * 0.5;
        float _4394 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1360 = sqrt(((_1336 * _1336) + (_1335 * _1335)) + (_1337 * _1337)) / (_1248 + 9.9999997473787516355514526367188e-06);
        float _4405 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1361 = isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0));
        float _1362 = _1361 * 2.0;
        float _1366 = (1.0 - _1361) / (_1361 + 1.0);
        float _4416 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
        float _1367 = isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0));
        float _1376 = ((((1.0 - _1367) * (_1362 + 2.0)) * exp2(log2(isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0))) * (_1362 + 1.0))) + _1367) * _1248;
        _1384 = _1215;
        _1386 = _1214;
        _1387 = _1213;
        _1388 = _1225;
        _1389 = _1224;
        _1390 = _1223;
        _1391 = _1235;
        _1392 = _1234;
        _1393 = _1233;
        _1394 = _1248;
        _1395 = _1247;
        _1396 = _1246;
        _1397 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0)));
        _1398 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0)));
        _1399 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0)));
    }
    else
    {
        _1384 = _1385;
        _1386 = _1385;
        _1387 = _1385;
        _1388 = _1385;
        _1389 = _1385;
        _1390 = _1385;
        _1391 = _1385;
        _1392 = _1385;
        _1393 = _1385;
        _1394 = _1385;
        _1395 = _1385;
        _1396 = _1385;
        _1397 = 0.0;
        _1398 = 0.0;
        _1399 = 0.0;
    }
    float _1697;
    float _1698;
    float _1699;
    float _1700;
    float _1701;
    float _1702;
    float _1703;
    float _1704;
    float _1705;
    float _1706;
    float _1707;
    float _1708;
    float _1709;
    float _1710;
    float _1711;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1428 = fma(_1054, cbModelParam._m0[30u].z, fma(_1050, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1046));
        float _1432 = fma(_1054, cbModelParam._m0[31u].z, fma(_1050, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1046));
        float _1436 = fma(_1054, cbModelParam._m0[32u].z, fma(_1050, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1046));
        float _1459 = _1046 + _804;
        float _1460 = _1050 + _805;
        float _1461 = _1054 + _806;
        float _1471 = fma(_1461, cbModelParam._m0[30u].z, fma(_1460, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1459)) - _1428;
        float _1472 = fma(_1461, cbModelParam._m0[31u].z, fma(_1460, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1459)) - _1432;
        float _1473 = fma(_1461, cbModelParam._m0[32u].z, fma(_1460, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1459)) - _1436;
        float _1477 = inversesqrt(dot(vec3(_1471, _1472, _1473), vec3(_1471, _1472, _1473)));
        float _1490 = ((_1477 * _1471) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1428 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1491 = ((_1477 * _1472) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1432 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1492 = ((_1477 * _1473) / cbModelParam._m0[35u].z) + ((((((_1436 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1494 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1490, _1491, _1492), 0.0);
        vec4 _1501 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1490, _1491, _1492), 0.0);
        vec4 _1508 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1490, _1491, _1492), 0.0);
        vec4 _1515 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1490, _1491, _1492), 0.0);
        float _1527 = exp2((_1494.w + (-0.5)) * 20.0) * 2.0;
        float _1528 = _1527 * (_1494.x + (-0.5));
        float _1529 = _1527 * (_1494.y + (-0.5));
        float _1530 = _1527 * (_1494.z + (-0.5));
        float _1537 = exp2((_1501.w + (-0.5)) * 20.0) * 2.0;
        float _1538 = _1537 * (_1501.x + (-0.5));
        float _1539 = _1537 * (_1501.y + (-0.5));
        float _1540 = _1537 * (_1501.z + (-0.5));
        float _1547 = exp2((_1508.w + (-0.5)) * 20.0) * 2.0;
        float _1548 = _1547 * (_1508.x + (-0.5));
        float _1549 = _1547 * (_1508.y + (-0.5));
        float _1550 = _1547 * (_1508.z + (-0.5));
        float _1557 = exp2((_1515.w + (-0.5)) * 20.0) * 2.0;
        float _1558 = _1557 * (_1515.x + (-0.5));
        float _1559 = _1557 * (_1515.y + (-0.5));
        float _1560 = _1557 * (_1515.z + (-0.5));
        float _1561 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1562 = isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0));
        float _1563 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
        float _1564 = _1528 * 0.5;
        float _1565 = _1538 * 0.5;
        float _1566 = _1548 * 0.5;
        float _1567 = dot(vec3(_1564, _1565, _1566), vec3(_1564, _1565, _1566));
        float _1572 = (_1567 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1567);
        float _1580 = (dot(vec3(_804, _805, _806), vec3(_1572 * _1564, _1572 * _1565, _1572 * _1566)) + 1.0) * 0.5;
        float _4457 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
        float _1589 = sqrt(((_1565 * _1565) + (_1564 * _1564)) + (_1566 * _1566)) / (_1561 + 9.9999997473787516355514526367188e-06);
        float _4468 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1590 = isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0));
        float _1591 = _1590 * 2.0;
        float _1595 = (1.0 - _1590) / (_1590 + 1.0);
        float _4479 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
        float _1596 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
        float _1605 = ((((1.0 - _1596) * (_1591 + 2.0)) * exp2(log2(isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0))) * (_1591 + 1.0))) + _1596) * _1561;
        float _1606 = _1529 * 0.5;
        float _1607 = _1539 * 0.5;
        float _1608 = _1549 * 0.5;
        float _1609 = dot(vec3(_1606, _1607, _1608), vec3(_1606, _1607, _1608));
        float _1614 = (_1609 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1609);
        float _1622 = (dot(vec3(_804, _805, _806), vec3(_1614 * _1606, _1614 * _1607, _1614 * _1608)) + 1.0) * 0.5;
        float _4490 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1631 = sqrt(((_1607 * _1607) + (_1606 * _1606)) + (_1608 * _1608)) / (_1562 + 9.9999997473787516355514526367188e-06);
        float _4501 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1632 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
        float _1633 = _1632 * 2.0;
        float _1637 = (1.0 - _1632) / (_1632 + 1.0);
        float _4512 = isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0));
        float _1638 = isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0));
        float _1647 = ((((1.0 - _1638) * (_1633 + 2.0)) * exp2(log2(isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0))) * (_1633 + 1.0))) + _1638) * _1562;
        float _1648 = _1530 * 0.5;
        float _1649 = _1540 * 0.5;
        float _1650 = _1550 * 0.5;
        float _1651 = dot(vec3(_1648, _1649, _1650), vec3(_1648, _1649, _1650));
        float _1656 = (_1651 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1651);
        float _1664 = (dot(vec3(_804, _805, _806), vec3(_1656 * _1648, _1656 * _1649, _1656 * _1650)) + 1.0) * 0.5;
        float _4523 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
        float _1673 = sqrt(((_1649 * _1649) + (_1648 * _1648)) + (_1650 * _1650)) / (_1563 + 9.9999997473787516355514526367188e-06);
        float _4534 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1674 = isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0));
        float _1675 = _1674 * 2.0;
        float _1679 = (1.0 - _1674) / (_1674 + 1.0);
        float _4545 = isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0));
        float _1680 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
        float _1689 = ((((1.0 - _1680) * (_1675 + 2.0)) * exp2(log2(isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0))) * (_1675 + 1.0))) + _1680) * _1563;
        _1697 = _1530;
        _1698 = _1529;
        _1699 = _1528;
        _1700 = _1540;
        _1701 = _1539;
        _1702 = _1538;
        _1703 = _1550;
        _1704 = _1549;
        _1705 = _1548;
        _1706 = _1563;
        _1707 = _1562;
        _1708 = _1561;
        _1709 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0)));
        _1710 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0)));
        _1711 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0)));
    }
    else
    {
        _1697 = _1385;
        _1698 = _1385;
        _1699 = _1385;
        _1700 = _1385;
        _1701 = _1385;
        _1702 = _1385;
        _1703 = _1385;
        _1704 = _1385;
        _1705 = _1385;
        _1706 = _1385;
        _1707 = _1385;
        _1708 = _1385;
        _1709 = 0.0;
        _1710 = 0.0;
        _1711 = 0.0;
    }
    float _1721 = (cbModelParam._m0[1u].x * (_1709 - _1397)) + _1397;
    float _1722 = (cbModelParam._m0[1u].x * (_1710 - _1398)) + _1398;
    float _1723 = (cbModelParam._m0[1u].x * (_1711 - _1399)) + _1399;
    float _1744 = fma(_1723, cbSceneParam._m0[89u].z, fma(_1722, cbSceneParam._m0[89u].y, _1721 * cbSceneParam._m0[89u].x));
    float _1747 = fma(_1723, cbSceneParam._m0[90u].z, fma(_1722, cbSceneParam._m0[90u].y, _1721 * cbSceneParam._m0[90u].x));
    float _1750 = fma(_1723, cbSceneParam._m0[91u].z, fma(_1722, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1721));
    float _1765 = _991 * 0.5;
    float _1766 = _992 * 0.5;
    float _1767 = _993 * 0.5;
    float _1768 = dot(vec4(_1765, _1766, _1767, 1.0), vec4(_1699, _1702, _1705, _1708));
    float _1771 = dot(vec4(_1765, _1766, _1767, 1.0), vec4(_1698, _1701, _1704, _1707));
    float _1774 = dot(vec4(_1765, _1766, _1767, 1.0), vec4(_1697, _1700, _1703, _1706));
    float _1808;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1781 = dot(vec4(_1765, _1766, _1767, 1.0), vec4(_1384, _1388, _1391, _1394));
        float _1785 = dot(vec4(_1765, _1766, _1767, 1.0), vec4(_1386, _1389, _1392, _1395));
        float _1789 = dot(vec4(_1765, _1766, _1767, 1.0), vec4(_1387, _1390, _1393, _1396));
        float _1796 = dot(vec4(cbModelParam._m0[39u]), vec4(_1765, _1766, _1767, 1.0));
        _1808 = dot(vec3(isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0)), isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0)), isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1796) ? 0.0 : (isnan(0.0) ? _1796 : max(0.0, _1796))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1808 = 1.0;
    }
    float _1819;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1810 = dot(vec4(cbModelParam._m0[40u]), vec4(_1765, _1766, _1767, 1.0));
        _1819 = dot(vec3(isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0)), isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0)), isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1810) ? 0.0 : (isnan(0.0) ? _1810 : max(0.0, _1810))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1819 = 1.0;
    }
    float _1823 = (_1819 * cbModelParam._m0[1u].x) + (_1808 * (1.0 - cbModelParam._m0[1u].x));
    float _1833 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _807);
    float _1834 = isnan(_1833) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1833 : min(cbModelParam._m0[25u].z, _1833));
    float _1914;
    float _1916;
    float _1918;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1881 = fma(_1054, cbModelParam._m0[13u].z, fma(_1050, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1046)) + cbModelParam._m0[13u].w;
        float _1885 = fma(_1054, cbModelParam._m0[14u].z, fma(_1050, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1046)) + cbModelParam._m0[14u].w;
        float _1889 = fma(_1054, cbModelParam._m0[15u].z, fma(_1050, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1046)) + cbModelParam._m0[15u].w;
        float _1892 = fma(_993, cbModelParam._m0[13u].z, fma(_992, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _991));
        float _1895 = fma(_993, cbModelParam._m0[14u].z, fma(_992, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _991));
        float _1898 = fma(_993, cbModelParam._m0[15u].z, fma(_992, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _991));
        float _1926;
        if (_1892 > 0.0)
        {
            _1926 = abs((1.0 - _1881) / _1892);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1892 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1881 + 1.0) / _1892);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1926 = frontier_phi_17_15_ladder;
        }
        float _2097;
        if (_1895 > 0.0)
        {
            _2097 = abs((1.0 - _1885) / _1895);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1895 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1885 + 1.0) / _1895);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2097 = frontier_phi_26_22_ladder;
        }
        float _2393;
        if (_1898 > 0.0)
        {
            _2393 = abs((1.0 - _1889) / _1898);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1898 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1889 + 1.0) / _1898);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2393 = frontier_phi_38_33_ladder;
        }
        float _2395 = isnan(_2097) ? _1926 : (isnan(_1926) ? _2097 : min(_1926, _2097));
        float _2396 = isnan(_2393) ? _2395 : (isnan(_2395) ? _2393 : min(_2395, _2393));
        float _2400 = (_2396 * _1892) + _1881;
        float _2401 = (_2396 * _1895) + _1885;
        float _2402 = (_2396 * _1898) + _1889;
        float _2403 = _2396 * 9.9999997473787516355514526367188e-05;
        float _2405 = (-1.0) - _2403;
        float _2407 = _2403 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2402 > _2407) || ((_2402 < _2405) || ((_2401 > _2407) || ((_2401 < _2405) || ((_2400 < _2405) || (_2400 > _2407))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2547 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2402, cbModelParam._m0[9u].z, fma(_2401, cbModelParam._m0[9u].y, _2400 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2402, cbModelParam._m0[10u].z, fma(_2401, cbModelParam._m0[10u].y, _2400 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2402, cbModelParam._m0[11u].z, fma(_2401, cbModelParam._m0[11u].y, _2400 * cbModelParam._m0[11u].x))), _1834);
            frontier_phi_16_38_ladder = _2547.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2547.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2547.x * cbModelParam._m0[1u].y;
        }
        _1914 = frontier_phi_16_38_ladder_2;
        _1916 = frontier_phi_16_38_ladder_1;
        _1918 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1902 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_991, _992, _993), _1834);
        _1914 = _1902.x * cbModelParam._m0[1u].y;
        _1916 = _1902.y * cbModelParam._m0[1u].y;
        _1918 = _1902.z * cbModelParam._m0[1u].y;
    }
    float _1922 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _807);
    float _1923 = isnan(_1922) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1922 : min(cbModelParam._m0[25u].w, _1922));
    float _2012;
    float _2014;
    float _2016;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1976 = fma(_1054, cbModelParam._m0[21u].z, fma(_1050, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1046)) + cbModelParam._m0[21u].w;
        float _1980 = fma(_1054, cbModelParam._m0[22u].z, fma(_1050, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1046)) + cbModelParam._m0[22u].w;
        float _1984 = fma(_1054, cbModelParam._m0[23u].z, fma(_1050, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1046)) + cbModelParam._m0[23u].w;
        float _1987 = fma(_993, cbModelParam._m0[21u].z, fma(_992, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _991));
        float _1990 = fma(_993, cbModelParam._m0[22u].z, fma(_992, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _991));
        float _1993 = fma(_993, cbModelParam._m0[23u].z, fma(_992, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _991));
        float _2102;
        if (_1987 > 0.0)
        {
            _2102 = abs((1.0 - _1976) / _1987);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1987 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1976 + 1.0) / _1987);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2102 = frontier_phi_28_24_ladder;
        }
        float _2420;
        if (_1990 > 0.0)
        {
            _2420 = abs((1.0 - _1980) / _1990);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1990 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1980 + 1.0) / _1990);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2420 = frontier_phi_40_35_ladder;
        }
        float _2758;
        if (_1993 > 0.0)
        {
            _2758 = abs((1.0 - _1984) / _1993);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1993 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1984 + 1.0) / _1993);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2758 = frontier_phi_50_47_ladder;
        }
        float _2760 = isnan(_2420) ? _2102 : (isnan(_2102) ? _2420 : min(_2102, _2420));
        float _2761 = isnan(_2758) ? _2760 : (isnan(_2760) ? _2758 : min(_2760, _2758));
        float _2765 = (_2761 * _1987) + _1976;
        float _2766 = (_2761 * _1990) + _1980;
        float _2767 = (_2761 * _1993) + _1984;
        float _2768 = _2761 * 9.9999997473787516355514526367188e-05;
        float _2769 = (-1.0) - _2768;
        float _2771 = _2768 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2767 > _2771) || ((_2767 < _2769) || ((_2766 > _2771) || ((_2766 < _2769) || ((_2765 < _2769) || (_2765 > _2771))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2889 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2767, cbModelParam._m0[17u].z, fma(_2766, cbModelParam._m0[17u].y, _2765 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2767, cbModelParam._m0[18u].z, fma(_2766, cbModelParam._m0[18u].y, _2765 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2767, cbModelParam._m0[19u].z, fma(_2766, cbModelParam._m0[19u].y, _2765 * cbModelParam._m0[19u].x))), _1923);
            frontier_phi_25_50_ladder = _2889.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2889.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2889.x * cbModelParam._m0[1u].z;
        }
        _2012 = frontier_phi_25_50_ladder_2;
        _2014 = frontier_phi_25_50_ladder_1;
        _2016 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1996 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_991, _992, _993), _1923);
        _2012 = _1996.x * cbModelParam._m0[1u].z;
        _2014 = _1996.y * cbModelParam._m0[1u].z;
        _2016 = _1996.z * cbModelParam._m0[1u].z;
    }
    float _2029 = (((_1017 * _968) + _1018) * _983) * ((cbModelParam._m0[1u].w * (_2012 - _1914)) + _1914);
    float _2031 = (((_1017 * _970) + _1018) * _983) * ((cbModelParam._m0[1u].w * (_2014 - _1916)) + _1916);
    float _2033 = (((_1017 * _971) + _1018) * _983) * ((cbModelParam._m0[1u].w * (_2016 - _1918)) + _1918);
    float _2036 = fma(_2033, cbSceneParam._m0[89u].z, fma(_2031, cbSceneParam._m0[89u].y, _2029 * cbSceneParam._m0[89u].x));
    float _2039 = fma(_2033, cbSceneParam._m0[90u].z, fma(_2031, cbSceneParam._m0[90u].y, _2029 * cbSceneParam._m0[90u].x));
    float _2042 = fma(_2033, cbSceneParam._m0[91u].z, fma(_2031, cbSceneParam._m0[91u].y, _2029 * cbSceneParam._m0[91u].x));
    float _2076 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2080 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2084 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2088 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2089 = _2076 / _2088;
    float _2090 = _2080 / _2088;
    float _2091 = _2084 / _2088;
    float _2238;
    float _2239;
    float _2240;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2118 = ((uint(_2091 > cbSceneParam._m0[59u].y) + uint(_2091 > cbSceneParam._m0[59u].x)) + uint(_2091 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2119 = _2118 + 43u;
        uint _2127 = _2118 + 44u;
        uint _2135 = _2118 + 45u;
        uint _2143 = _2118 + 46u;
        float _2154 = fma(_2088, cbSceneParam._m0[_2119].w, fma(_2084, cbSceneParam._m0[_2119].z, fma(_2080, cbSceneParam._m0[_2119].y, _2076 * cbSceneParam._m0[_2119].x)));
        float _2158 = fma(_2088, cbSceneParam._m0[_2127].w, fma(_2084, cbSceneParam._m0[_2127].z, fma(_2080, cbSceneParam._m0[_2127].y, _2076 * cbSceneParam._m0[_2127].x)));
        float _2166 = fma(_2088, cbSceneParam._m0[_2143].w, fma(_2084, cbSceneParam._m0[_2143].z, fma(_2080, cbSceneParam._m0[_2143].y, _2076 * cbSceneParam._m0[_2143].x)));
        float _2171 = cbSceneParam._m0[33u].z * _2166;
        float _2173 = cbSceneParam._m0[33u].w * _2166;
        float _2176 = fma(_2088, cbSceneParam._m0[_2135].w, fma(_2084, cbSceneParam._m0[_2135].z, fma(_2080, cbSceneParam._m0[_2135].y, _2076 * cbSceneParam._m0[_2135].x))) / _2166;
        float _2224 = (cbSceneParam._m0[33u].x - sqrt(((_2090 * _2090) + (_2089 * _2089)) + (_2091 * _2091))) * cbSceneParam._m0[33u].y;
        float _4671 = isnan(0.0) ? _2224 : (isnan(_2224) ? 0.0 : max(_2224, 0.0));
        float _2231 = (isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2171 + _2154) / _2166, (_2173 + _2158) / _2166), _2176), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2173 + _2154) / _2166, (_2158 - _2171) / _2166), _2176), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2154 - _2171) / _2166, (_2158 - _2173) / _2166), _2176), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2154 - _2173) / _2166, (_2171 + _2158) / _2166), _2176), 0.0)).x), vec4(0.25)));
        _2238 = 1.0 - (_2231 * cbSceneParam._m0[34u].x);
        _2239 = 1.0 - (_2231 * cbSceneParam._m0[34u].y);
        _2240 = 1.0 - (_2231 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2238 = 1.0;
        _2239 = 1.0;
        _2240 = 1.0;
    }
    float _2304;
    float _2306;
    float _2308;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2292 = fma(_2088, cbSceneParam._m0[63u].w, fma(_2084, cbSceneParam._m0[63u].z, fma(_2080, cbSceneParam._m0[63u].y, _2076 * cbSceneParam._m0[63u].x)));
        float _2293 = fma(_2088, cbSceneParam._m0[60u].w, fma(_2084, cbSceneParam._m0[60u].z, fma(_2080, cbSceneParam._m0[60u].y, _2076 * cbSceneParam._m0[60u].x))) / _2292;
        float _2294 = fma(_2088, cbSceneParam._m0[61u].w, fma(_2084, cbSceneParam._m0[61u].z, fma(_2080, cbSceneParam._m0[61u].y, _2076 * cbSceneParam._m0[61u].x))) / _2292;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2293 >= cbSceneParam._m0[64u].x) && (_2294 >= cbSceneParam._m0[64u].y)) && (_2293 <= cbSceneParam._m0[64u].z)) && (_2294 <= cbSceneParam._m0[64u].w))
        {
            float _2433 = fma(_2088, cbSceneParam._m0[62u].w, fma(_2084, cbSceneParam._m0[62u].z, fma(_2080, cbSceneParam._m0[62u].y, _2076 * cbSceneParam._m0[62u].x))) / _2292;
            float _2437 = isnan(cbSceneParam._m0[41u].w) ? _2433 : (isnan(_2433) ? cbSceneParam._m0[41u].w : max(_2433, cbSceneParam._m0[41u].w));
            float _2480 = (cbSceneParam._m0[33u].x - sqrt(((_2090 * _2090) + (_2089 * _2089)) + (_2091 * _2091))) * cbSceneParam._m0[33u].y;
            float _4687 = isnan(0.0) ? _2480 : (isnan(_2480) ? 0.0 : max(_2480, 0.0));
            float _2487 = (isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2293, cbSceneParam._m0[33u].w + _2294), _2437), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2293, _2294 - cbSceneParam._m0[33u].z), _2437), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2293 - cbSceneParam._m0[33u].z, _2294 - cbSceneParam._m0[33u].w), _2437), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2293 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2294), _2437), 0.0)).x), vec4(0.25)));
            float _2491 = 1.0 - (_2487 * cbSceneParam._m0[34u].x);
            float _2492 = 1.0 - (_2487 * cbSceneParam._m0[34u].y);
            float _2493 = 1.0 - (_2487 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2493) ? _2240 : (isnan(_2240) ? _2493 : min(_2240, _2493));
            frontier_phi_37_36_ladder_1 = isnan(_2492) ? _2239 : (isnan(_2239) ? _2492 : min(_2239, _2492));
            frontier_phi_37_36_ladder_2 = isnan(_2491) ? _2238 : (isnan(_2238) ? _2491 : min(_2238, _2491));
        }
        else
        {
            frontier_phi_37_36_ladder = _2240;
            frontier_phi_37_36_ladder_1 = _2239;
            frontier_phi_37_36_ladder_2 = _2238;
        }
        _2304 = frontier_phi_37_36_ladder_2;
        _2306 = frontier_phi_37_36_ladder_1;
        _2308 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2304 = _2238;
        _2306 = _2239;
        _2308 = _2240;
    }
    uvec4 _2313 = floatBitsToUint(cbInstanceData._m0[_943 + 5u]);
    uint _2315 = _2313.x * 14u;
    uint _2316 = _2315 + 13u;
    float _2323 = _983 + (-1.0);
    float _2328 = (cbLight._m0[_2316].x * _2323) + 1.0;
    float _2329 = (cbLight._m0[_2316].y * _2323) + 1.0;
    float _2330 = (cbLight._m0[_2316].z * _2323) + 1.0;
    float _2331 = (cbLight._m0[_2316].w * _2323) + 1.0;
    uint _2332 = _2315 + 5u;
    float _2338 = isnan(1.0) ? _2329 : (isnan(_2329) ? 1.0 : min(_2329, 1.0));
    uint _2342 = _2315 + 4u;
    float _2352 = isnan(1.0) ? _2328 : (isnan(_2328) ? 1.0 : min(_2328, 1.0));
    uint _2356 = _2315 | 1u;
    float _2367 = dot(vec3(cbLight._m0[_2315].xyz), vec3(_804, _805, _806));
    float _2370 = dot(vec3(cbLight._m0[_2356].xyz), vec3(_804, _805, _806));
    float _4723 = isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0));
    float _4734 = isnan(0.0) ? _2370 : (isnan(_2370) ? 0.0 : max(_2370, 0.0));
    float _2375 = (isnan(1.0) ? _4723 : (isnan(_4723) ? 1.0 : min(_4723, 1.0))) * 0.3183098733425140380859375;
    float _2377 = (isnan(1.0) ? _4734 : (isnan(_4734) ? 1.0 : min(_4734, 1.0))) * 0.3183098733425140380859375;
    float _2384 = ((cbLight._m0[_2332].x * _2338) * _2377) + (((cbLight._m0[_2342].x * _2304) * _2352) * _2375);
    float _2385 = ((_2338 * cbLight._m0[_2332].y) * _2377) + (((cbLight._m0[_2342].y * _2306) * _2352) * _2375);
    float _2386 = ((_2338 * cbLight._m0[_2332].z) * _2377) + (((cbLight._m0[_2342].z * _2308) * _2352) * _2375);
    uvec4 _2390 = floatBitsToUint(cbLight._m0[_2315 + 12u]);
    bool _2392 = _2390.x == 0u;
    float _2494;
    float _2496;
    float _2498;
    if (_2392)
    {
        _2494 = _2384;
        _2496 = _2385;
        _2498 = _2386;
    }
    else
    {
        uint _2502 = _2315 + 6u;
        float _2518 = (dot(vec3(cbLight._m0[_2315 + 2u].xyz), vec3(_804, _805, _806)) * 0.5) + 0.5;
        float _2519 = _2518 * _2518;
        float _4745 = isnan(0.0) ? _2519 : (isnan(_2519) ? 0.0 : max(_2519, 0.0));
        float _2520 = isnan(1.0) ? _4745 : (isnan(_4745) ? 1.0 : min(_4745, 1.0));
        float _2521 = isnan(1.0) ? _2330 : (isnan(_2330) ? 1.0 : min(_2330, 1.0));
        _2494 = (((cbLight._m0[_2502].x * 0.3183098733425140380859375) * _2520) * _2521) + _2384;
        _2496 = (((cbLight._m0[_2502].y * 0.3183098733425140380859375) * _2520) * _2521) + _2385;
        _2498 = (((cbLight._m0[_2502].z * 0.3183098733425140380859375) * _2520) * _2521) + _2386;
    }
    bool _2501 = _2390.y == 0u;
    float _2556;
    float _2558;
    float _2560;
    if (_2501)
    {
        _2556 = _2494;
        _2558 = _2496;
        _2560 = _2498;
    }
    else
    {
        uint _2729 = _2315 + 7u;
        float _2745 = (dot(vec3(cbLight._m0[_2315 + 3u].xyz), vec3(_804, _805, _806)) * 0.5) + 0.5;
        float _2746 = _2745 * _2745;
        float _4761 = isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0));
        float _2747 = isnan(1.0) ? _4761 : (isnan(_4761) ? 1.0 : min(_4761, 1.0));
        float _2748 = isnan(1.0) ? _2331 : (isnan(_2331) ? 1.0 : min(_2331, 1.0));
        _2556 = (((cbLight._m0[_2729].x * 0.3183098733425140380859375) * _2747) * _2748) + _2494;
        _2558 = (((cbLight._m0[_2729].y * 0.3183098733425140380859375) * _2747) * _2748) + _2496;
        _2560 = (((cbLight._m0[_2729].z * 0.3183098733425140380859375) * _2747) * _2748) + _2498;
    }
    uint _2563 = _2315 + 8u;
    float _2576 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2315].w)) * _807) * 0.949999988079071044921875);
    float _2577 = _2576 * _2576;
    float _2578 = cbLight._m0[_2315].x + _884;
    float _2579 = cbLight._m0[_2315].y + _885;
    float _2580 = cbLight._m0[_2315].z + _886;
    float _2584 = inversesqrt(dot(vec3(_2578, _2579, _2580), vec3(_2578, _2579, _2580)));
    float _2585 = _2584 * _2578;
    float _2586 = _2584 * _2579;
    float _2587 = _2584 * _2580;
    float _2588 = dot(vec3(_804, _805, _806), vec3(cbLight._m0[_2315].xyz));
    float _4777 = isnan(0.0) ? _2588 : (isnan(_2588) ? 0.0 : max(_2588, 0.0));
    float _2591 = isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0));
    float _4788 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _2592 = isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0));
    float _2593 = dot(vec3(_804, _805, _806), vec3(_2585, _2586, _2587));
    float _4799 = isnan(0.0) ? _2593 : (isnan(_2593) ? 0.0 : max(_2593, 0.0));
    float _2596 = isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0));
    float _2597 = dot(vec3(cbLight._m0[_2315].xyz), vec3(_2585, _2586, _2587));
    float _4810 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
    float _2601 = _2577 * _2577;
    float _2605 = ((_2596 * _2596) * (_2601 + (-1.0))) + 1.0;
    float _2613 = exp2(log2(1.0 - (isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0)))) * 5.0);
    float _2614 = 0.959999978542327880859375 - _965;
    float _2616 = 0.959999978542327880859375 - _966;
    float _2617 = 0.959999978542327880859375 - _967;
    float _2624 = 1.0 - _2577;
    float _2635 = (0.5 / (((_2592 * ((_2591 * _2624) + _2577)) + 9.9999999392252902907785028219223e-09) + (((_2592 * _2624) + _2577) * _2591))) * _2591;
    float _4821 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
    float _2637 = (isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0))) * (_2601 / ((_2605 * _2605) * 3.141590118408203125));
    uint _2651 = _2315 + 9u;
    float _2662 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2356].w)) * _807) * 0.949999988079071044921875);
    float _2663 = _2662 * _2662;
    float _2664 = cbLight._m0[_2356].x + _884;
    float _2665 = cbLight._m0[_2356].y + _885;
    float _2666 = cbLight._m0[_2356].z + _886;
    float _2670 = inversesqrt(dot(vec3(_2664, _2665, _2666), vec3(_2664, _2665, _2666)));
    float _2671 = _2670 * _2664;
    float _2672 = _2670 * _2665;
    float _2673 = _2670 * _2666;
    float _2674 = dot(vec3(_804, _805, _806), vec3(cbLight._m0[_2356].xyz));
    float _4832 = isnan(0.0) ? _2674 : (isnan(_2674) ? 0.0 : max(_2674, 0.0));
    float _2677 = isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0));
    float _2678 = dot(vec3(_804, _805, _806), vec3(_2671, _2672, _2673));
    float _4843 = isnan(0.0) ? _2678 : (isnan(_2678) ? 0.0 : max(_2678, 0.0));
    float _2681 = isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0));
    float _2682 = dot(vec3(cbLight._m0[_2356].xyz), vec3(_2671, _2672, _2673));
    float _4854 = isnan(0.0) ? _2682 : (isnan(_2682) ? 0.0 : max(_2682, 0.0));
    float _2686 = _2663 * _2663;
    float _2690 = ((_2681 * _2681) * (_2686 + (-1.0))) + 1.0;
    float _2697 = exp2(log2(1.0 - (isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0)))) * 5.0);
    float _2704 = 1.0 - _2663;
    float _2714 = (0.5 / (((_2592 * ((_2677 * _2704) + _2663)) + 9.9999999392252902907785028219223e-09) + (((_2592 * _2704) + _2663) * _2677))) * _2677;
    float _4865 = isnan(0.0) ? _2714 : (isnan(_2714) ? 0.0 : max(_2714, 0.0));
    float _2716 = (isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0))) * (_2686 / ((_2690 * _2690) * 3.141590118408203125));
    float _2726 = (((((_2697 * _2614) + _968) * cbLight._m0[_2651].x) * _2716) * _2338) + ((((cbLight._m0[_2563].x * _2304) * ((_2613 * _2614) + _968)) * _2637) * _2352);
    float _2727 = (((((_2697 * _2616) + _970) * cbLight._m0[_2651].y) * _2716) * _2338) + ((((cbLight._m0[_2563].y * _2306) * ((_2613 * _2616) + _970)) * _2637) * _2352);
    float _2728 = (((((_2697 * _2617) + _971) * cbLight._m0[_2651].z) * _2716) * _2338) + ((((cbLight._m0[_2563].z * _2308) * ((_2613 * _2617) + _971)) * _2637) * _2352);
    float _2784;
    float _2786;
    float _2788;
    if (_2392)
    {
        _2784 = _2726;
        _2786 = _2727;
        _2788 = _2728;
    }
    else
    {
        uint _2790 = _2315 + 2u;
        uint _2794 = _2315 + 10u;
        float _2808 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2790].w)) * _807) * 0.949999988079071044921875);
        float _2809 = _2808 * _2808;
        float _2810 = cbLight._m0[_2790].x + _884;
        float _2811 = cbLight._m0[_2790].y + _885;
        float _2812 = cbLight._m0[_2790].z + _886;
        float _2816 = inversesqrt(dot(vec3(_2810, _2811, _2812), vec3(_2810, _2811, _2812)));
        float _2817 = _2816 * _2810;
        float _2818 = _2816 * _2811;
        float _2819 = _2816 * _2812;
        float _2820 = dot(vec3(_804, _805, _806), vec3(cbLight._m0[_2790].xyz));
        float _4876 = isnan(0.0) ? _2820 : (isnan(_2820) ? 0.0 : max(_2820, 0.0));
        float _2823 = isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0));
        float _2824 = dot(vec3(_804, _805, _806), vec3(_2817, _2818, _2819));
        float _4887 = isnan(0.0) ? _2824 : (isnan(_2824) ? 0.0 : max(_2824, 0.0));
        float _2827 = isnan(1.0) ? _4887 : (isnan(_4887) ? 1.0 : min(_4887, 1.0));
        float _2828 = dot(vec3(cbLight._m0[_2790].xyz), vec3(_2817, _2818, _2819));
        float _4898 = isnan(0.0) ? _2828 : (isnan(_2828) ? 0.0 : max(_2828, 0.0));
        float _2832 = _2809 * _2809;
        float _2836 = ((_2827 * _2827) * (_2832 + (-1.0))) + 1.0;
        float _2843 = exp2(log2(1.0 - (isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0)))) * 5.0);
        float _2850 = 1.0 - _2809;
        float _2860 = (0.5 / (((_2592 * ((_2823 * _2850) + _2809)) + 9.9999999392252902907785028219223e-09) + (((_2592 * _2850) + _2809) * _2823))) * _2823;
        float _4909 = isnan(0.0) ? _2860 : (isnan(_2860) ? 0.0 : max(_2860, 0.0));
        float _2862 = (isnan(1.0) ? _4909 : (isnan(_4909) ? 1.0 : min(_4909, 1.0))) * (_2832 / ((_2836 * _2836) * 3.141590118408203125));
        float _2863 = isnan(1.0) ? _2330 : (isnan(_2330) ? 1.0 : min(_2330, 1.0));
        _2784 = (((((_2843 * _2614) + _968) * cbLight._m0[_2794].x) * _2862) * _2863) + _2726;
        _2786 = (((((_2843 * _2616) + _970) * cbLight._m0[_2794].y) * _2862) * _2863) + _2727;
        _2788 = (((((_2843 * _2617) + _971) * cbLight._m0[_2794].z) * _2862) * _2863) + _2728;
    }
    float _2894;
    float _2896;
    float _2898;
    if (_2501)
    {
        _2894 = _2784;
        _2896 = _2786;
        _2898 = _2788;
    }
    else
    {
        uint _2905 = _2315 + 3u;
        uint _2909 = _2315 + 11u;
        float _2923 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2905].w)) * _807) * 0.949999988079071044921875);
        float _2924 = _2923 * _2923;
        float _2925 = cbLight._m0[_2905].x + _884;
        float _2926 = cbLight._m0[_2905].y + _885;
        float _2927 = cbLight._m0[_2905].z + _886;
        float _2931 = inversesqrt(dot(vec3(_2925, _2926, _2927), vec3(_2925, _2926, _2927)));
        float _2932 = _2931 * _2925;
        float _2933 = _2931 * _2926;
        float _2934 = _2931 * _2927;
        float _2935 = dot(vec3(_804, _805, _806), vec3(cbLight._m0[_2905].xyz));
        float _4925 = isnan(0.0) ? _2935 : (isnan(_2935) ? 0.0 : max(_2935, 0.0));
        float _2938 = isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0));
        float _2939 = dot(vec3(_804, _805, _806), vec3(_2932, _2933, _2934));
        float _4936 = isnan(0.0) ? _2939 : (isnan(_2939) ? 0.0 : max(_2939, 0.0));
        float _2942 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
        float _2943 = dot(vec3(cbLight._m0[_2905].xyz), vec3(_2932, _2933, _2934));
        float _4947 = isnan(0.0) ? _2943 : (isnan(_2943) ? 0.0 : max(_2943, 0.0));
        float _2947 = _2924 * _2924;
        float _2951 = ((_2942 * _2942) * (_2947 + (-1.0))) + 1.0;
        float _2958 = exp2(log2(1.0 - (isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0)))) * 5.0);
        float _2965 = 1.0 - _2924;
        float _2975 = (0.5 / (((_2592 * ((_2938 * _2965) + _2924)) + 9.9999999392252902907785028219223e-09) + (((_2592 * _2965) + _2924) * _2938))) * _2938;
        float _4958 = isnan(0.0) ? _2975 : (isnan(_2975) ? 0.0 : max(_2975, 0.0));
        float _2977 = (isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0))) * (_2947 / ((_2951 * _2951) * 3.141590118408203125));
        float _2978 = isnan(1.0) ? _2331 : (isnan(_2331) ? 1.0 : min(_2331, 1.0));
        _2894 = (((((_2958 * _2614) + _968) * cbLight._m0[_2909].x) * _2977) * _2978) + _2784;
        _2896 = (((((_2958 * _2616) + _970) * cbLight._m0[_2909].y) * _2977) * _2978) + _2786;
        _2898 = (((((_2958 * _2617) + _971) * cbLight._m0[_2909].z) * _2977) * _2978) + _2788;
    }
    float _3044;
    float _3046;
    float _3048;
    float _3050;
    float _3052;
    float _3054;
    if (_2313.y == 0u)
    {
        uvec4 _2999 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3000 = _2999.x;
        uint _3011 = uint((float(_2999.y) * floor(float(uint(cbSceneParam._m0[85u].y * _905) / _3000))) + floor(float(uint(cbSceneParam._m0[85u].x * _904) / _3000)));
        float _3021 = (log2(_2091 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3022 = isnan(0.0) ? _3021 : (isnan(_3021) ? 0.0 : max(_3021, 0.0));
        uint _3025 = uint(isnan(14.0) ? _3022 : (isnan(_3022) ? 14.0 : min(_3022, 14.0)));
        uvec4 _3030 = texelFetch(g_lightClusterGridBuffer, int(((_3025 << 2u) + (_3011 << 6u)) >> 2u));
        uint _3031 = _3030.x;
        uint _3032 = _2999.z;
        float _3156;
        float _3158;
        float _3160;
        float _3162;
        float _3164;
        float _3166;
        if (((((1u << ((_3032 >> 4u) & 15u)) + 4294967295u) & _3031) == 0u) || ((_3032 & 240u) == 0u))
        {
            _3156 = 0.0;
            _3158 = 0.0;
            _3160 = 0.0;
            _3162 = 0.0;
            _3164 = 0.0;
            _3166 = 0.0;
        }
        else
        {
            float _3157;
            float _3159;
            float _3161;
            float _3163;
            float _3165;
            float _3167;
            float _3317 = 0.0;
            float _3318 = 0.0;
            float _3319 = 0.0;
            float _3320 = 0.0;
            float _3321 = 0.0;
            float _3322 = 0.0;
            uint _3323 = 0u;
            uint _3332;
            bool _3333;
            for (;;)
            {
                _3332 = texelFetch(g_lightClassification, int((((_3025 << 5u) + (_3011 << 9u)) + (_3323 << 2u)) >> 2u)).x;
                _3333 = _3332 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3333)
                {
                    frontier_phi_71_pred = _3322;
                    frontier_phi_71_pred_1 = _3321;
                    frontier_phi_71_pred_2 = _3320;
                    frontier_phi_71_pred_3 = _3319;
                    frontier_phi_71_pred_4 = _3318;
                    frontier_phi_71_pred_5 = _3317;
                }
                else
                {
                    float _3462;
                    float _3463;
                    float _3464;
                    float _3465;
                    float _3466;
                    float _3467;
                    uint _3468;
                    _3462 = _3317;
                    _3463 = _3318;
                    _3464 = _3319;
                    _3465 = _3320;
                    _3466 = _3321;
                    _3467 = _3322;
                    _3468 = _3332;
                    float _3389;
                    float _3390;
                    float _3391;
                    float _3392;
                    float _3393;
                    float _3394;
                    for (;;)
                    {
                        uint _3472 = uint(findLSB(_3468)) + (_3323 << 5u);
                        uint _3469 = (_3468 + 4294967295u) & _3468;
                        uint _3474 = _3472 * 48u;
                        vec4 _3488 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3474)).x, texelFetch(g_PointLightRenderingBuffer, int(_3474 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3474 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3474 + 3u)).x));
                        uint _3494 = (_3472 * 48u) + 4u;
                        vec4 _3507 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3494)).x, texelFetch(g_PointLightRenderingBuffer, int(_3494 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3494 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3494 + 3u)).x));
                        uint _3513 = (_3472 * 48u) + 8u;
                        vec3 _3524 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3513)).x, texelFetch(g_PointLightRenderingBuffer, int(_3513 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3513 + 2u)).x));
                        float _3528 = _3488.x - _2089;
                        float _3529 = _3488.y - _2090;
                        float _3530 = _3488.z - _2091;
                        float _3531 = dot(vec3(_3528, _3529, _3530), vec3(_3528, _3529, _3530));
                        float _3534 = inversesqrt(_3531);
                        float _3535 = _3534 * _3528;
                        float _3536 = _3534 * _3529;
                        float _3537 = _3534 * _3530;
                        float _3538 = dot(vec3(_924, _927, _930), vec3(_3535, _3536, _3537));
                        float _3543 = 1.0 - (_3531 * _3488.w);
                        float _4984 = isnan(0.0) ? _3543 : (isnan(_3543) ? 0.0 : max(_3543, 0.0));
                        float _3544 = isnan(1.0) ? _4984 : (isnan(_4984) ? 1.0 : min(_4984, 1.0));
                        float _3545 = sqrt(_3531) * _3507.w;
                        float _3548 = 1.39999997615814208984375 / (_3545 + 1.39999997615814208984375);
                        float _3549 = _3548 * _3548;
                        float _3552 = ((1.0 - _3549) * _3538) + _3549;
                        float _3555 = _3545 * _3545;
                        float _3559 = ((isnan(0.0) ? _3552 : (isnan(_3552) ? 0.0 : max(_3552, 0.0))) * _3544) / ((_3555 * 0.699999988079071044921875) + 1.0);
                        float _3563 = (-0.0) - _2089;
                        float _3564 = (-0.0) - _2090;
                        float _3565 = (-0.0) - _2091;
                        float _3569 = inversesqrt(dot(vec3(_3563, _3564, _3565), vec3(_3563, _3564, _3565)));
                        float _3570 = _3569 * _3563;
                        float _3571 = _3569 * _3564;
                        float _3572 = _3569 * _3565;
                        float _3579 = exp2(log2(1.0 / ((_3555 * 3.5) + 5.0)) * 0.25);
                        float _3580 = 1.0 - _999;
                        float _3587 = sqrt(1.0 - ((1.0 - (_3580 * _3580)) * (1.0 - (_3579 * _3579))));
                        float _3588 = _3587 * _3587;
                        float _3589 = _3588 * _3588;
                        float _3590 = _3570 + _3535;
                        float _3591 = _3571 + _3536;
                        float _3592 = _3572 + _3537;
                        float _3596 = inversesqrt(dot(vec3(_3590, _3591, _3592), vec3(_3590, _3591, _3592)));
                        float _3600 = dot(vec3(_924, _927, _930), vec3(_3570, _3571, _3572));
                        float _5000 = isnan(0.0) ? _3600 : (isnan(_3600) ? 0.0 : max(_3600, 0.0));
                        float _3603 = isnan(1.0) ? _5000 : (isnan(_5000) ? 1.0 : min(_5000, 1.0));
                        float _3604 = dot(vec3(_924, _927, _930), vec3(_3596 * _3590, _3596 * _3591, _3596 * _3592));
                        float _5011 = isnan(0.0) ? _3604 : (isnan(_3604) ? 0.0 : max(_3604, 0.0));
                        float _3607 = isnan(1.0) ? _5011 : (isnan(_5011) ? 1.0 : min(_5011, 1.0));
                        float _3611 = ((_3607 * _3607) * (_3589 + (-1.0))) + 1.0;
                        float _3612 = _3548 * _3588;
                        float _3613 = _3612 * _3612;
                        float _3616 = ((1.0 - _3613) * _3538) + _3613;
                        float _5022 = isnan(0.0) ? _3616 : (isnan(_3616) ? 0.0 : max(_3616, 0.0));
                        float _3617 = isnan(1.0) ? _5022 : (isnan(_5022) ? 1.0 : min(_5022, 1.0));
                        float _3618 = 1.0 - _3588;
                        float _3628 = (0.5 / (((_3617 * ((_3603 * _3618) + _3588)) + 9.9999999392252902907785028219223e-09) + (((_3617 * _3618) + _3588) * _3603))) * _3617;
                        float _5033 = isnan(0.0) ? _3628 : (isnan(_3628) ? 0.0 : max(_3628, 0.0));
                        float _3639 = (((_3589 * 3.1415927410125732421875) * (isnan(1.0) ? _5033 : (isnan(_5033) ? 1.0 : min(_5033, 1.0)))) / ((_3611 * _3611) * ((_3555 * 2.1991131305694580078125) + 3.141590118408203125))) * _3544;
                        _3392 = (_3559 * _3507.x) + _3465;
                        _3393 = (_3559 * _3507.y) + _3466;
                        _3394 = (_3559 * _3507.z) + _3467;
                        _3389 = (_3639 * _3524.x) + _3462;
                        _3390 = (_3639 * _3524.y) + _3463;
                        _3391 = (_3639 * _3524.z) + _3464;
                        if (_3469 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3462 = _3389;
                            _3463 = _3390;
                            _3464 = _3391;
                            _3465 = _3392;
                            _3466 = _3393;
                            _3467 = _3394;
                            _3468 = _3469;
                        }
                    }
                    frontier_phi_71_pred = _3394;
                    frontier_phi_71_pred_1 = _3393;
                    frontier_phi_71_pred_2 = _3392;
                    frontier_phi_71_pred_3 = _3391;
                    frontier_phi_71_pred_4 = _3390;
                    frontier_phi_71_pred_5 = _3389;
                }
                _3167 = frontier_phi_71_pred;
                _3165 = frontier_phi_71_pred_1;
                _3163 = frontier_phi_71_pred_2;
                _3161 = frontier_phi_71_pred_3;
                _3159 = frontier_phi_71_pred_4;
                _3157 = frontier_phi_71_pred_5;
                uint _3324 = _3323 + 1u;
                if (_3324 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3317 = _3157;
                    _3318 = _3159;
                    _3319 = _3161;
                    _3320 = _3163;
                    _3321 = _3165;
                    _3322 = _3167;
                    _3323 = _3324;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3156 = _3157;
            _3158 = _3159;
            _3160 = _3161;
            _3162 = _3163;
            _3164 = _3165;
            _3166 = _3167;
        }
        uvec4 _3170 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3171 = _3170.z;
        uint _3173 = (_3171 >> 8u) & 15u;
        float _3285;
        float _3287;
        float _3289;
        float _3291;
        float _3293;
        float _3295;
        if (((4294967295u << _3173) & _3031) == 0u)
        {
            _3285 = _3156;
            _3287 = _3158;
            _3289 = _3160;
            _3291 = _3162;
            _3293 = _3164;
            _3295 = _3166;
        }
        else
        {
            float _3310 = inversesqrt(dot(vec3(_2089, _2090, _2091), vec3(_2089, _2090, _2091)));
            float _3311 = _3310 * _2089;
            float _3312 = _3310 * _2090;
            float _3313 = _3310 * _2091;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3173 < ((_3171 >> 12u) & 15u))
            {
                float _3286;
                float _3288;
                float _3290;
                float _3292;
                float _3294;
                float _3296;
                float _3445 = _3156;
                float _3446 = _3158;
                float _3447 = _3160;
                float _3448 = _3162;
                float _3449 = _3164;
                float _3450 = _3166;
                uint _3451 = _3173;
                uint _3460;
                bool _3461;
                for (;;)
                {
                    _3460 = texelFetch(g_lightClassification, int((((_3025 << 5u) + (_3011 << 9u)) + (_3451 << 2u)) >> 2u)).x;
                    _3461 = _3460 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3461)
                    {
                        frontier_phi_82_pred = _3450;
                        frontier_phi_82_pred_1 = _3449;
                        frontier_phi_82_pred_2 = _3448;
                        frontier_phi_82_pred_3 = _3447;
                        frontier_phi_82_pred_4 = _3446;
                        frontier_phi_82_pred_5 = _3445;
                    }
                    else
                    {
                        float _3653;
                        float _3654;
                        float _3655;
                        float _3656;
                        float _3657;
                        float _3658;
                        float _3947;
                        float _3948;
                        float _3949;
                        float _3950;
                        float _3951;
                        float _3952;
                        float _3666 = _3445;
                        float _3667 = _3446;
                        float _3668 = _3447;
                        float _3669 = _3448;
                        float _3670 = _3449;
                        float _3671 = _3450;
                        uint _3672 = _3460;
                        uint _3673;
                        vec4 _3698;
                        float _3699;
                        vec4 _3714;
                        vec3 _3726;
                        vec4 _3741;
                        vec4 _3756;
                        float _3803;
                        bool _3804;
                        for (;;)
                        {
                            uint _3683 = ((_3451 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3672));
                            _3673 = (_3672 + 4294967295u) & _3672;
                            uint _3685 = _3683 * 40u;
                            _3698 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3685)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3685 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3685 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3685 + 3u)).x));
                            _3699 = _3698.w;
                            uint _3701 = (_3683 * 40u) + 4u;
                            _3714 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3701)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3701 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3701 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3701 + 3u)).x));
                            uint _3716 = (_3683 * 40u) + 8u;
                            _3726 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3716)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 2u)).x));
                            uint _3728 = (_3683 * 40u) + 16u;
                            _3741 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3728)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3728 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3728 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3728 + 3u)).x));
                            uint _3743 = (_3683 * 40u) + 20u;
                            _3756 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3743)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3743 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3743 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3743 + 3u)).x));
                            uint _3759 = (_3683 * 40u) + 24u;
                            vec4 _3772 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3759)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3759 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3759 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3759 + 3u)).x));
                            uint _3778 = (_3683 * 40u) + 28u;
                            vec4 _3791 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3778)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3778 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3778 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3778 + 3u)).x));
                            _3803 = fma(_2091, _3791.z, fma(_2090, _3791.y, _3791.x * _2089)) + _3791.w;
                            _3804 = !((fma(_2091, _3772.z, fma(_2090, _3772.y, _3772.x * _2089)) + _3772.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3804)
                            {
                                float _3831 = _3698.x - _2089;
                                float _3832 = _3698.y - _2090;
                                float _3833 = _3698.z - _2091;
                                float _3834 = dot(vec3(_3831, _3832, _3833), vec3(_3831, _3832, _3833));
                                float _3837 = inversesqrt(_3834);
                                float _3838 = _3837 * _3831;
                                float _3839 = _3837 * _3832;
                                float _3840 = _3837 * _3833;
                                float _3844 = 1.0 - (_3834 / (_3699 * _3699));
                                float _5044 = isnan(0.0) ? _3844 : (isnan(_3844) ? 0.0 : max(_3844, 0.0));
                                float _3845 = isnan(1.0) ? _5044 : (isnan(_5044) ? 1.0 : min(_5044, 1.0));
                                float _3849 = sqrt(_3834) * _3714.w;
                                float _3851 = 1.39999997615814208984375 / (_3849 + 1.39999997615814208984375);
                                float _3852 = _3851 * _3851;
                                float _3855 = ((1.0 - _3852) * dot(vec3(_3838, _3839, _3840), vec3(_924, _927, _930))) + _3852;
                                float _3858 = _3849 * _3849;
                                float _3862 = (fma(_2091, _3741.z, fma(_2090, _3741.y, _3741.x * _2089)) + _3741.w) / _3803;
                                float _3863 = (fma(_2091, _3756.z, fma(_2090, _3756.y, _3756.x * _2089)) + _3756.w) / _3803;
                                float _3867 = 1.0 - dot(vec2(_3862, _3863), vec2(_3862, _3863));
                                float _5060 = isnan(0.0) ? _3867 : (isnan(_3867) ? 0.0 : max(_3867, 0.0));
                                float _3868 = isnan(1.0) ? _5060 : (isnan(_5060) ? 1.0 : min(_5060, 1.0));
                                float _3869 = _3868 * (((isnan(0.0) ? _3855 : (isnan(_3855) ? 0.0 : max(_3855, 0.0))) * _3845) / ((_3858 * 0.699999988079071044921875) + 1.0));
                                float _3881 = exp2(log2(1.0 / ((_3858 * 3.5) + 5.0)) * 0.25);
                                float _3882 = 1.0 - _999;
                                float _3889 = sqrt(1.0 - ((1.0 - (_3882 * _3882)) * (1.0 - (_3881 * _3881))));
                                float _3890 = _3889 * _3889;
                                float _3891 = _3890 * _3890;
                                float _3892 = _3838 - _3311;
                                float _3893 = _3839 - _3312;
                                float _3894 = _3840 - _3313;
                                float _3898 = inversesqrt(dot(vec3(_3892, _3893, _3894), vec3(_3892, _3893, _3894)));
                                float _3902 = dot(vec3(_924, _927, _930), vec3((-0.0) - _3311, (-0.0) - _3312, (-0.0) - _3313));
                                float _5071 = isnan(0.0) ? _3902 : (isnan(_3902) ? 0.0 : max(_3902, 0.0));
                                float _3905 = isnan(1.0) ? _5071 : (isnan(_5071) ? 1.0 : min(_5071, 1.0));
                                float _3906 = dot(vec3(_924, _927, _930), vec3(_3898 * _3892, _3898 * _3893, _3898 * _3894));
                                float _5082 = isnan(0.0) ? _3906 : (isnan(_3906) ? 0.0 : max(_3906, 0.0));
                                float _3909 = isnan(1.0) ? _5082 : (isnan(_5082) ? 1.0 : min(_5082, 1.0));
                                float _3913 = ((_3909 * _3909) * (_3891 + (-1.0))) + 1.0;
                                float _3914 = _3851 * _3890;
                                float _3915 = _3914 * _3914;
                                float _3921 = ((1.0 - _3915) * dot(vec3(_924, _927, _930), vec3(_3838, _3839, _3840))) + _3915;
                                float _5093 = isnan(0.0) ? _3921 : (isnan(_3921) ? 0.0 : max(_3921, 0.0));
                                float _3922 = isnan(1.0) ? _5093 : (isnan(_5093) ? 1.0 : min(_5093, 1.0));
                                float _3923 = 1.0 - _3890;
                                float _3933 = (0.5 / (((_3922 * ((_3905 * _3923) + _3890)) + 9.9999999392252902907785028219223e-09) + (((_3922 * _3923) + _3890) * _3905))) * _3922;
                                float _5104 = isnan(0.0) ? _3933 : (isnan(_3933) ? 0.0 : max(_3933, 0.0));
                                float _3943 = (_3868 * _3845) * (((_3891 * 3.1415927410125732421875) * (isnan(1.0) ? _5104 : (isnan(_5104) ? 1.0 : min(_5104, 1.0)))) / ((_3913 * _3913) * ((_3858 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3869 * _3714.z;
                                frontier_phi_88_pred_1 = _3869 * _3714.y;
                                frontier_phi_88_pred_2 = _3869 * _3714.x;
                                frontier_phi_88_pred_3 = _3943 * _3726.z;
                                frontier_phi_88_pred_4 = _3943 * _3726.y;
                                frontier_phi_88_pred_5 = _3943 * _3726.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3952 = frontier_phi_88_pred;
                            _3951 = frontier_phi_88_pred_1;
                            _3950 = frontier_phi_88_pred_2;
                            _3949 = frontier_phi_88_pred_3;
                            _3948 = frontier_phi_88_pred_4;
                            _3947 = frontier_phi_88_pred_5;
                            _3656 = _3950 + _3669;
                            _3657 = _3951 + _3670;
                            _3658 = _3952 + _3671;
                            _3653 = _3947 + _3666;
                            _3654 = _3948 + _3667;
                            _3655 = _3949 + _3668;
                            if (_3673 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3666 = _3653;
                                _3667 = _3654;
                                _3668 = _3655;
                                _3669 = _3656;
                                _3670 = _3657;
                                _3671 = _3658;
                                _3672 = _3673;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3658;
                        frontier_phi_82_pred_1 = _3657;
                        frontier_phi_82_pred_2 = _3656;
                        frontier_phi_82_pred_3 = _3655;
                        frontier_phi_82_pred_4 = _3654;
                        frontier_phi_82_pred_5 = _3653;
                    }
                    _3296 = frontier_phi_82_pred;
                    _3294 = frontier_phi_82_pred_1;
                    _3292 = frontier_phi_82_pred_2;
                    _3290 = frontier_phi_82_pred_3;
                    _3288 = frontier_phi_82_pred_4;
                    _3286 = frontier_phi_82_pred_5;
                    uint _3452 = _3451 + 1u;
                    if (_3452 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3445 = _3286;
                        _3446 = _3288;
                        _3447 = _3290;
                        _3448 = _3292;
                        _3449 = _3294;
                        _3450 = _3296;
                        _3451 = _3452;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3292;
                frontier_phi_63_64_ladder_1 = _3296;
                frontier_phi_63_64_ladder_2 = _3294;
                frontier_phi_63_64_ladder_3 = _3290;
                frontier_phi_63_64_ladder_4 = _3288;
                frontier_phi_63_64_ladder_5 = _3286;
            }
            else
            {
                frontier_phi_63_64_ladder = _3162;
                frontier_phi_63_64_ladder_1 = _3166;
                frontier_phi_63_64_ladder_2 = _3164;
                frontier_phi_63_64_ladder_3 = _3160;
                frontier_phi_63_64_ladder_4 = _3158;
                frontier_phi_63_64_ladder_5 = _3156;
            }
            _3285 = frontier_phi_63_64_ladder_5;
            _3287 = frontier_phi_63_64_ladder_4;
            _3289 = frontier_phi_63_64_ladder_3;
            _3291 = frontier_phi_63_64_ladder;
            _3293 = frontier_phi_63_64_ladder_2;
            _3295 = frontier_phi_63_64_ladder_1;
        }
        float _3300 = isnan(1.0) ? _983 : (isnan(_983) ? 1.0 : min(_983, 1.0));
        _3044 = (_3300 * _3291) + _2556;
        _3046 = (_3300 * _3293) + _2558;
        _3048 = (_3300 * _3295) + _2560;
        _3050 = ((_3285 * _968) * _3300) + _2894;
        _3052 = ((_3287 * _970) * _3300) + _2896;
        _3054 = ((_3289 * _971) * _3300) + _2898;
    }
    else
    {
        _3044 = _2556;
        _3046 = _2558;
        _3048 = _2560;
        _3050 = _2894;
        _3052 = _2896;
        _3054 = _2898;
    }
    uint _3060 = _944 + uint(cbMatDynParam._m0[0u].w);
    float _3066 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _3072 = (((((_3066 * cbMtdParam._m0[14u].x) * _665.x) * _688) * _766) * (((1.0 - _741) * cbMtdParam._m0[20u].w) + _741)) * cbInstanceData._m0[_3060].x;
    float _3078 = (((((_3066 * cbMtdParam._m0[14u].y) * _665.y) * _688) * _766) * (((1.0 - _743) * cbMtdParam._m0[20u].w) + _743)) * cbInstanceData._m0[_3060].y;
    float _3084 = (((((_3066 * cbMtdParam._m0[14u].z) * _665.z) * _688) * _766) * (((1.0 - _745) * cbMtdParam._m0[20u].w) + _745)) * cbInstanceData._m0[_3060].z;
    float _5120 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
    float _5131 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
    float _5142 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    float _3101 = (((isnan(1.0) ? _5120 : (isnan(_5120) ? 1.0 : min(_5120, 1.0))) * (_3044 + ((isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0))) * _983))) + ((_3050 + ((isnan(0.0) ? _2036 : (isnan(_2036) ? 0.0 : max(_2036, 0.0))) * _1823)) * cbPerFrame._m0[3u].x)) + _3072;
    float _3103 = (_3078 + ((_3052 + ((isnan(0.0) ? _2039 : (isnan(_2039) ? 0.0 : max(_2039, 0.0))) * _1823)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5131 : (isnan(_5131) ? 1.0 : min(_5131, 1.0))) * (_3046 + ((isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0))) * _983)));
    float _3105 = (_3084 + ((_3054 + ((isnan(0.0) ? _2042 : (isnan(_2042) ? 0.0 : max(_2042, 0.0))) * _1823)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5142 : (isnan(_5142) ? 1.0 : min(_5142, 1.0))) * (_3048 + ((isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0))) * _983)));
    float _3106 = isnan(0.0) ? _3101 : (isnan(_3101) ? 0.0 : max(_3101, 0.0));
    float _3107 = isnan(0.0) ? _3103 : (isnan(_3103) ? 0.0 : max(_3103, 0.0));
    float _3108 = isnan(0.0) ? _3105 : (isnan(_3105) ? 0.0 : max(_3105, 0.0));
    float _3114 = cbMtdParam._m0[2u].x * _3072;
    float _3115 = cbMtdParam._m0[2u].y * _3078;
    float _3116 = cbMtdParam._m0[2u].z * _3084;
    float _5168 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3118 = isnan(1.0) ? _5168 : (isnan(_5168) ? 1.0 : min(_5168, 1.0));
    uint _3119 = _943 + 6u;
    float _3127 = _904 / cbSceneParam._m0[86u].x;
    float _3128 = _905 / cbSceneParam._m0[86u].y;
    vec4 _3142 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3127, _3128, (log2((isnan(cbSceneParam._m0[77u].w) ? _827 : (isnan(_827) ? cbSceneParam._m0[77u].w : min(_827, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3144 = _3142.x;
    float _3145 = _3142.y;
    float _3146 = _3142.z;
    float _3147 = _3142.w;
    float _3218;
    float _3220;
    float _3222;
    float _3224;
    if (_827 > cbSceneParam._m0[78u].w)
    {
        float _3181 = isnan(_827) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _827 : min(cbSceneParam._m0[80u].w, _827));
        float _3182 = _3181 / _827;
        float _3193 = _3182 * _877;
        float _3194 = _878 * _3182;
        float _3195 = (-0.0) - _3194;
        float _3196 = _3182 * _879;
        float _3198 = (cbSceneParam._m0[77u].w * _3195) / _3181;
        float _3199 = _3198 + cbSceneParam._m0[79u].w;
        float _3200 = cbSceneParam._m0[79u].w - _3194;
        float _3206 = sqrt(((_3193 * _3193) + (_3194 * _3194)) + (_3196 * _3196));
        float _3209 = (1.0 - (cbSceneParam._m0[77u].w / _3181)) * _3206;
        float _3214 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3216 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3402;
        if (abs((_3195 - _3198) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3402 = ((((_3199 > 0.0) ? exp2(_3214 * _3199) : (2.0 - exp2(_3216 * _3199))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3209;
        }
        else
        {
            float _3346 = 1.0 / cbSceneParam._m0[80u].x;
            float _3347 = isnan(_3200) ? _3199 : (isnan(_3199) ? _3200 : max(_3199, _3200));
            float _3348 = isnan(_3200) ? _3199 : (isnan(_3199) ? _3200 : min(_3199, _3200));
            float _3357 = isnan(0.0) ? _3347 : (isnan(_3347) ? 0.0 : min(_3347, 0.0));
            float _3358 = isnan(0.0) ? _3348 : (isnan(_3348) ? 0.0 : min(_3348, 0.0));
            _3402 = ((abs(_3206 / _3195) * cbSceneParam._m0[80u].y) * ((((_3357 - _3358) * 2.0) - ((exp2(_3214 * (isnan(0.0) ? _3347 : (isnan(_3347) ? 0.0 : max(_3347, 0.0)))) - exp2(_3214 * (isnan(0.0) ? _3348 : (isnan(_3348) ? 0.0 : max(_3348, 0.0))))) * _3346)) - ((exp2(_3216 * _3357) - exp2(_3216 * _3358)) * _3346))) + (_3209 * cbSceneParam._m0[80u].z);
        }
        vec4 _3404 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3127, _3128, 1.0), 0.0);
        float _3413 = exp2((_3402 * (-1.44269502162933349609375)) * (1.0 - _3404.w));
        float _3414 = log2(_3413);
        float _3430 = log2(_3147);
        _3218 = (exp2(_3430 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3414 * cbSceneParam._m0[78u].x)) * _3404.x) / cbSceneParam._m0[78u].x)) + _3144;
        _3220 = (exp2(_3430 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3414 * cbSceneParam._m0[78u].y)) * _3404.y) / cbSceneParam._m0[78u].y)) + _3145;
        _3222 = (exp2(_3430 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3414 * cbSceneParam._m0[78u].z)) * _3404.z) / cbSceneParam._m0[78u].z)) + _3146;
        _3224 = _3413 * _3147;
    }
    else
    {
        _3218 = _3144;
        _3220 = _3145;
        _3222 = _3146;
        _3224 = _3147;
    }
    bool _3440;
    vec4 _3234;
    vec4 _3256;
    float _3258;
    float _3262;
    float _3263;
    float _3264;
    float _3267;
    float _3270;
    float _3273;
    float _3274;
    bool _3284;
    for (;;)
    {
        _3234 = cbMatDynParam._m0[0u];
        float _3236 = roundEven(_3234.y);
        bool _3237 = _3236 == 3.0;
        float _3238 = log2(_3224);
        float _3242 = exp2(_3238 * cbSceneParam._m0[78u].x);
        float _3243 = exp2(_3238 * cbSceneParam._m0[78u].y);
        float _3244 = exp2(_3238 * cbSceneParam._m0[78u].z);
        float _3245 = _3242 * _3106;
        float _3246 = _3243 * _3107;
        float _3247 = _3244 * _3108;
        float _3254 = _893 + (-0.5);
        _3256 = cbMtdParam._m0[1u];
        _3258 = _3256.y * _3254;
        float _3261 = (_3236 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3262 = _3261 * (_3237 ? _3245 : (_3245 + (cbSceneParam._m0[72u].w * _3218)));
        _3263 = _3261 * (_3237 ? _3246 : (_3246 + (cbSceneParam._m0[72u].w * _3220)));
        _3264 = _3261 * (_3237 ? _3247 : (_3247 + (cbSceneParam._m0[72u].w * _3222)));
        _3267 = ((_3114 * _3118) * _3242) * _3261;
        _3270 = ((_3115 * _3118) * _3243) * _3261;
        _3273 = ((_3116 * _3118) * _3244) * _3261;
        _3274 = _3254 * 0.999000012874603271484375;
        _3284 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3284)
        {
            if ((cbInstanceData._m0[_943 + 7u].x + _3274) < 0.5)
            {
                _3440 = true;
                break;
            }
        }
        uint _3381 = _944 + uint(_3234.w);
        if ((cbInstanceData._m0[_3381].w < 1.0) && ((cbInstanceData._m0[_3381].w + _3274) < 0.5))
        {
            _3440 = true;
            break;
        }
        if ((_3258 + 1.0) < _3256.x)
        {
            _3440 = true;
            break;
        }
        _3440 = false;
        break;
    }
    float _3644;
    if (_3440)
    {
        discard_state = true;
        _3644 = 0.0;
    }
    else
    {
        _3644 = cbInstanceData._m0[_3119].w;
    }
    SV_Target.x = _3262;
    SV_Target.y = _3263;
    SV_Target.z = _3264;
    SV_Target.w = _3644;
    SV_Target_1.x = _3267;
    SV_Target_1.y = _3270;
    SV_Target_1.z = _3273;
    SV_Target_1.w = cbInstanceData._m0[_3119].w;
    discard_exit();
}


