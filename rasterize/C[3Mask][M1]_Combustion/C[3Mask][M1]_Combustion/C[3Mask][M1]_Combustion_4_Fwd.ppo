#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_7;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1370;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _220 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _221 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _222 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _228 = inversesqrt(dot(vec3(_220, _221, _222), vec3(_220, _221, _222)));
    float _235 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _242 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _264 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _270 = _264.x * cbMtdParam._m0[10u].x;
    float _271 = _264.y * cbMtdParam._m0[10u].y;
    float _272 = _264.z * cbMtdParam._m0[10u].z;
    vec4 _291 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _310 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _338 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w)).x;
    float _348 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _310.x) * 2.0) - _338)) + 1.0;
    float _3751 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _349 = isnan(1.0) ? _3751 : (isnan(_3751) ? 1.0 : min(_3751, 1.0));
    float _356 = (_349 * ((_291.x * cbMtdParam._m0[11u].x) - _270)) + _270;
    float _357 = (_349 * ((_291.y * cbMtdParam._m0[11u].y) - _271)) + _271;
    float _358 = (_349 * ((_291.z * cbMtdParam._m0[11u].z) - _272)) + _272;
    vec4 _376 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _389 = (((((1.0 - _310.y) * 2.0) - _338) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _3762 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _390 = isnan(1.0) ? _3762 : (isnan(_3762) ? 1.0 : min(_3762, 1.0));
    float _397 = (((_376.x * cbMtdParam._m0[12u].x) - _356) * _390) + _356;
    float _398 = (_390 * ((_376.y * cbMtdParam._m0[12u].y) - _357)) + _357;
    float _399 = (_390 * ((_376.z * cbMtdParam._m0[12u].z) - _358)) + _358;
    vec4 _417 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _430 = (((((1.0 - _310.z) * 2.0) - _338) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _3773 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _431 = isnan(1.0) ? _3773 : (isnan(_3773) ? 1.0 : min(_3773, 1.0));
    vec4 _459 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _467 = ((((((_417.x * cbMtdParam._m0[13u].x) - _397) * _431) + _397) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _459.x;
    float _470 = ((((_431 * ((_417.y * cbMtdParam._m0[13u].y) - _398)) + _398) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _459.y;
    float _473 = ((((_431 * ((_417.z * cbMtdParam._m0[13u].z) - _399)) + _399) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _459.z;
    vec4 _486 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.z) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.w) + cbTextureTilingScale._m0[20u].w));
    vec4 _501 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _503 = _501.x;
    float _520 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _503) * _349) + _503;
    float _537 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _520) * _390) + _520;
    float _554 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x - _537) * _431) + _537;
    vec4 _567 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _569 = _567.x;
    float _570 = _567.y;
    float _571 = _567.z;
    vec4 _583 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _594 = ((_583.x - _569) * _349) + _569;
    float _595 = ((_583.y - _570) * _349) + _570;
    float _596 = ((_583.z - _571) * _349) + _571;
    vec4 _609 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _620 = ((_609.x - _594) * _390) + _594;
    float _621 = ((_609.y - _595) * _390) + _595;
    float _622 = ((_609.z - _596) * _390) + _596;
    vec4 _635 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _648 = ((_635.z - _622) * _431) + _622;
    float _651 = ((((_635.x - _620) * _431) + _620) * 2.0) + (-1.0);
    float _653 = ((((_635.y - _621) * _431) + _621) * 2.0) + (-1.0);
    float _654 = dot(vec2(_651, _653), vec2(_651, _653));
    float _3784 = isnan(0.0) ? _654 : (isnan(_654) ? 0.0 : max(_654, 0.0));
    float _659 = sqrt(1.0 - (isnan(1.0) ? _3784 : (isnan(_3784) ? 1.0 : min(_3784, 1.0))));
    vec4 _691 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[15u].x) + cbTextureTilingScale._m0[15u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[15u].y) + cbTextureTilingScale._m0[15u].w));
    float _705 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3795 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    float _706 = isnan(1.0) ? _3795 : (isnan(_3795) ? 1.0 : min(_3795, 1.0));
    float _714 = (((_706 * _706) * (3.0 - (_706 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _722 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _730 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3806 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _731 = isnan(1.0) ? _3806 : (isnan(_3806) ? 1.0 : min(_3806, 1.0));
    float _735 = (_731 * _731) * (3.0 - (_731 * 2.0));
    float _736 = _735 * cbMtdParam._m0[22u].x;
    float _737 = _735 * cbMtdParam._m0[22u].y;
    float _738 = sin(_722);
    float _739 = cos(_722);
    float _740 = TEXCOORD.z - _736;
    float _741 = TEXCOORD.w - _737;
    vec4 _761 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_736 + fma(_741, (-0.0) - _738, _740 * _739))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_741, _739, _740 * _738) + _737)) + cbTextureTilingScale._m0[2u].w));
    float _767 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _761.x;
    float _769 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _761.y;
    float _771 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _761.z;
    float _791 = (TEXCOORD_5.x - (((_486.x + 0.00999999977648258209228515625) * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _3817 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
    float _792 = isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0));
    vec4 _805 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _815 = (((_805.x * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z) + _651;
    float _816 = (((_805.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z) + _653;
    float _819 = fma(_659, _235 * NORMAL.x, fma(_816, _242 * TANGENT.x, (_228 * _220) * _815));
    float _822 = fma(_659, _235 * NORMAL.y, fma(_816, _242 * TANGENT.y, (_228 * _221) * _815));
    float _825 = fma(_659, _235 * NORMAL.z, fma(_816, _242 * TANGENT.z, (_228 * _222) * _815));
    float _829 = inversesqrt(dot(vec3(_819, _822, _825), vec3(_819, _822, _825)));
    float _830 = _829 * _819;
    float _831 = _829 * _822;
    float _832 = _829 * _825;
    float _3828 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _833 = isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0));
    float _3839 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _3850 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _3861 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _3872 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0));
    float _837 = isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0));
    float _853 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _893 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _903 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _893);
    float _904 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _893);
    float _905 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _893);
    float _909 = inversesqrt(dot(vec3(_903, _904, _905), vec3(_903, _904, _905)));
    float _910 = _903 * _909;
    float _911 = _904 * _909;
    float _912 = _905 * _909;
    float _918 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _919 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _937 = fma(_832, cbSceneParam._m0[5u].z, fma(_831, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _830));
    float _940 = fma(_832, cbSceneParam._m0[6u].z, fma(_831, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _830));
    float _943 = fma(_832, cbSceneParam._m0[7u].z, fma(_831, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _830));
    uint _956 = uint(roundEven(NORMAL.w)) * 13u;
    uint _957 = _956 + 9u;
    uint _958 = _957 + uint(cbMatDynParam._m0[0u].w);
    float _964 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0)))) * cbInstanceData._m0[_958].x;
    float _965 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0)))) * cbInstanceData._m0[_958].y;
    float _966 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0)))) * cbInstanceData._m0[_958].z;
    float _3883 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
    float _967 = isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0));
    float _3894 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
    float _968 = isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0));
    float _3905 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
    float _969 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
    float _970 = 1.0 - _837;
    float _971 = _967 * _970;
    float _972 = _968 * _970;
    float _973 = _969 * _970;
    float _978 = (_967 + (-0.039999999105930328369140625)) * _837;
    float _979 = (_968 + (-0.039999999105930328369140625)) * _837;
    float _980 = (_969 + (-0.039999999105930328369140625)) * _837;
    float _981 = _978 + 0.039999999105930328369140625;
    float _983 = _979 + 0.039999999105930328369140625;
    float _984 = _980 + 0.039999999105930328369140625;
    vec4 _993 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _918, cbSceneParam._m0[86u].y * _919));
    float _996 = _993.x * TEXCOORD_5.w;
    float _997 = dot(vec3(_830, _831, _832), vec3(_910, _911, _912));
    float _1000 = _997 * 2.0;
    float _1004 = (_1000 * _830) - _910;
    float _1005 = (_1000 * _831) - _911;
    float _1006 = (_1000 * _832) - _912;
    float _1010 = abs(dot(vec3(_910, _911, _912), vec3(_830, _831, _832)));
    float _3916 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
    float _1012 = sqrt(_833);
    float _1024 = exp2((_1012 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1012 * 3.0));
    float _1030 = (1.0 - _1024) * ((_1012 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1031 = _1024 * _1012;
    float _1059 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1063 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1067 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1369;
    float _1371;
    float _1372;
    float _1373;
    float _1374;
    float _1375;
    float _1376;
    float _1377;
    float _1378;
    float _1379;
    float _1380;
    float _1381;
    float _1382;
    float _1383;
    float _1384;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1094 = fma(_1067, cbModelParam._m0[26u].z, fma(_1063, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1059));
        float _1098 = fma(_1067, cbModelParam._m0[27u].z, fma(_1063, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1059));
        float _1102 = fma(_1067, cbModelParam._m0[28u].z, fma(_1063, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1059));
        float _1127 = _1059 + _830;
        float _1128 = _1063 + _831;
        float _1129 = _1067 + _832;
        float _1139 = fma(_1129, cbModelParam._m0[26u].z, fma(_1128, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1127)) - _1094;
        float _1140 = fma(_1129, cbModelParam._m0[27u].z, fma(_1128, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1127)) - _1098;
        float _1141 = fma(_1129, cbModelParam._m0[28u].z, fma(_1128, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1127)) - _1102;
        float _1145 = inversesqrt(dot(vec3(_1139, _1140, _1141), vec3(_1139, _1140, _1141)));
        float _1158 = ((_1145 * _1139) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1094 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1159 = ((_1145 * _1140) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1098 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1160 = ((_1145 * _1141) / cbModelParam._m0[34u].z) + ((((((_1102 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1163 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1158, _1159, _1160), 0.0);
        vec4 _1170 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1158, _1159, _1160), 0.0);
        vec4 _1177 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1158, _1159, _1160), 0.0);
        vec4 _1184 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1158, _1159, _1160), 0.0);
        float _1197 = exp2((_1163.w + (-0.5)) * 20.0) * 2.0;
        float _1198 = _1197 * (_1163.x + (-0.5));
        float _1199 = _1197 * (_1163.y + (-0.5));
        float _1200 = _1197 * (_1163.z + (-0.5));
        float _1207 = exp2((_1170.w + (-0.5)) * 20.0) * 2.0;
        float _1208 = _1207 * (_1170.x + (-0.5));
        float _1209 = _1207 * (_1170.y + (-0.5));
        float _1210 = _1207 * (_1170.z + (-0.5));
        float _1217 = exp2((_1177.w + (-0.5)) * 20.0) * 2.0;
        float _1218 = _1217 * (_1177.x + (-0.5));
        float _1219 = _1217 * (_1177.y + (-0.5));
        float _1220 = _1217 * (_1177.z + (-0.5));
        float _1227 = exp2((_1184.w + (-0.5)) * 20.0) * 2.0;
        float _1228 = _1227 * (_1184.x + (-0.5));
        float _1229 = _1227 * (_1184.y + (-0.5));
        float _1230 = _1227 * (_1184.z + (-0.5));
        float _1231 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1232 = isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0));
        float _1233 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
        float _1234 = _1198 * 0.5;
        float _1235 = _1208 * 0.5;
        float _1236 = _1218 * 0.5;
        float _1237 = dot(vec3(_1234, _1235, _1236), vec3(_1234, _1235, _1236));
        float _1242 = (_1237 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1237);
        float _1251 = (dot(vec3(_830, _831, _832), vec3(_1242 * _1234, _1242 * _1235, _1242 * _1236)) + 1.0) * 0.5;
        float _3942 = isnan(0.0) ? _1251 : (isnan(_1251) ? 0.0 : max(_1251, 0.0));
        float _1261 = sqrt(((_1235 * _1235) + (_1234 * _1234)) + (_1236 * _1236)) / (_1231 + 9.9999997473787516355514526367188e-06);
        float _3953 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
        float _1262 = isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0));
        float _1263 = _1262 * 2.0;
        float _1267 = (1.0 - _1262) / (_1262 + 1.0);
        float _3964 = isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0));
        float _1268 = isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0));
        float _1277 = ((((1.0 - _1268) * (_1263 + 2.0)) * exp2(log2(isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0))) * (_1263 + 1.0))) + _1268) * _1231;
        float _1278 = _1199 * 0.5;
        float _1279 = _1209 * 0.5;
        float _1280 = _1219 * 0.5;
        float _1281 = dot(vec3(_1278, _1279, _1280), vec3(_1278, _1279, _1280));
        float _1286 = (_1281 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1281);
        float _1294 = (dot(vec3(_830, _831, _832), vec3(_1286 * _1278, _1286 * _1279, _1286 * _1280)) + 1.0) * 0.5;
        float _3975 = isnan(0.0) ? _1294 : (isnan(_1294) ? 0.0 : max(_1294, 0.0));
        float _1303 = sqrt(((_1279 * _1279) + (_1278 * _1278)) + (_1280 * _1280)) / (_1232 + 9.9999997473787516355514526367188e-06);
        float _3986 = isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0));
        float _1304 = isnan(1.0) ? _3986 : (isnan(_3986) ? 1.0 : min(_3986, 1.0));
        float _1305 = _1304 * 2.0;
        float _1309 = (1.0 - _1304) / (_1304 + 1.0);
        float _3997 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
        float _1310 = isnan(1.0) ? _3997 : (isnan(_3997) ? 1.0 : min(_3997, 1.0));
        float _1319 = ((((1.0 - _1310) * (_1305 + 2.0)) * exp2(log2(isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0))) * (_1305 + 1.0))) + _1310) * _1232;
        float _1320 = _1200 * 0.5;
        float _1321 = _1210 * 0.5;
        float _1322 = _1220 * 0.5;
        float _1323 = dot(vec3(_1320, _1321, _1322), vec3(_1320, _1321, _1322));
        float _1328 = (_1323 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1323);
        float _1336 = (dot(vec3(_830, _831, _832), vec3(_1328 * _1320, _1328 * _1321, _1328 * _1322)) + 1.0) * 0.5;
        float _4008 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1345 = sqrt(((_1321 * _1321) + (_1320 * _1320)) + (_1322 * _1322)) / (_1233 + 9.9999997473787516355514526367188e-06);
        float _4019 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1346 = isnan(1.0) ? _4019 : (isnan(_4019) ? 1.0 : min(_4019, 1.0));
        float _1347 = _1346 * 2.0;
        float _1351 = (1.0 - _1346) / (_1346 + 1.0);
        float _4030 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1352 = isnan(1.0) ? _4030 : (isnan(_4030) ? 1.0 : min(_4030, 1.0));
        float _1361 = ((((1.0 - _1352) * (_1347 + 2.0)) * exp2(log2(isnan(1.0) ? _4008 : (isnan(_4008) ? 1.0 : min(_4008, 1.0))) * (_1347 + 1.0))) + _1352) * _1233;
        _1369 = _1200;
        _1371 = _1199;
        _1372 = _1198;
        _1373 = _1210;
        _1374 = _1209;
        _1375 = _1208;
        _1376 = _1220;
        _1377 = _1219;
        _1378 = _1218;
        _1379 = _1233;
        _1380 = _1232;
        _1381 = _1231;
        _1382 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0)));
        _1383 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0)));
        _1384 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1361 : (isnan(_1361) ? 0.0 : max(_1361, 0.0)));
    }
    else
    {
        _1369 = _1370;
        _1371 = _1370;
        _1372 = _1370;
        _1373 = _1370;
        _1374 = _1370;
        _1375 = _1370;
        _1376 = _1370;
        _1377 = _1370;
        _1378 = _1370;
        _1379 = _1370;
        _1380 = _1370;
        _1381 = _1370;
        _1382 = 0.0;
        _1383 = 0.0;
        _1384 = 0.0;
    }
    float _1679;
    float _1680;
    float _1681;
    float _1682;
    float _1683;
    float _1684;
    float _1685;
    float _1686;
    float _1687;
    float _1688;
    float _1689;
    float _1690;
    float _1691;
    float _1692;
    float _1693;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1410 = fma(_1067, cbModelParam._m0[30u].z, fma(_1063, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1059));
        float _1414 = fma(_1067, cbModelParam._m0[31u].z, fma(_1063, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1059));
        float _1418 = fma(_1067, cbModelParam._m0[32u].z, fma(_1063, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1059));
        float _1441 = _1059 + _830;
        float _1442 = _1063 + _831;
        float _1443 = _1067 + _832;
        float _1453 = fma(_1443, cbModelParam._m0[30u].z, fma(_1442, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1441)) - _1410;
        float _1454 = fma(_1443, cbModelParam._m0[31u].z, fma(_1442, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1441)) - _1414;
        float _1455 = fma(_1443, cbModelParam._m0[32u].z, fma(_1442, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1441)) - _1418;
        float _1459 = inversesqrt(dot(vec3(_1453, _1454, _1455), vec3(_1453, _1454, _1455)));
        float _1472 = ((_1459 * _1453) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1410 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1473 = ((_1459 * _1454) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1414 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1474 = ((_1459 * _1455) / cbModelParam._m0[35u].z) + ((((((_1418 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1476 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1472, _1473, _1474), 0.0);
        vec4 _1483 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1472, _1473, _1474), 0.0);
        vec4 _1490 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1472, _1473, _1474), 0.0);
        vec4 _1497 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1472, _1473, _1474), 0.0);
        float _1509 = exp2((_1476.w + (-0.5)) * 20.0) * 2.0;
        float _1510 = _1509 * (_1476.x + (-0.5));
        float _1511 = _1509 * (_1476.y + (-0.5));
        float _1512 = _1509 * (_1476.z + (-0.5));
        float _1519 = exp2((_1483.w + (-0.5)) * 20.0) * 2.0;
        float _1520 = _1519 * (_1483.x + (-0.5));
        float _1521 = _1519 * (_1483.y + (-0.5));
        float _1522 = _1519 * (_1483.z + (-0.5));
        float _1529 = exp2((_1490.w + (-0.5)) * 20.0) * 2.0;
        float _1530 = _1529 * (_1490.x + (-0.5));
        float _1531 = _1529 * (_1490.y + (-0.5));
        float _1532 = _1529 * (_1490.z + (-0.5));
        float _1539 = exp2((_1497.w + (-0.5)) * 20.0) * 2.0;
        float _1540 = _1539 * (_1497.x + (-0.5));
        float _1541 = _1539 * (_1497.y + (-0.5));
        float _1542 = _1539 * (_1497.z + (-0.5));
        float _1543 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0));
        float _1544 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
        float _1545 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1546 = _1510 * 0.5;
        float _1547 = _1520 * 0.5;
        float _1548 = _1530 * 0.5;
        float _1549 = dot(vec3(_1546, _1547, _1548), vec3(_1546, _1547, _1548));
        float _1554 = (_1549 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1549);
        float _1562 = (dot(vec3(_830, _831, _832), vec3(_1554 * _1546, _1554 * _1547, _1554 * _1548)) + 1.0) * 0.5;
        float _4071 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
        float _1571 = sqrt(((_1547 * _1547) + (_1546 * _1546)) + (_1548 * _1548)) / (_1543 + 9.9999997473787516355514526367188e-06);
        float _4082 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
        float _1572 = isnan(1.0) ? _4082 : (isnan(_4082) ? 1.0 : min(_4082, 1.0));
        float _1573 = _1572 * 2.0;
        float _1577 = (1.0 - _1572) / (_1572 + 1.0);
        float _4093 = isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0));
        float _1578 = isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0));
        float _1587 = ((((1.0 - _1578) * (_1573 + 2.0)) * exp2(log2(isnan(1.0) ? _4071 : (isnan(_4071) ? 1.0 : min(_4071, 1.0))) * (_1573 + 1.0))) + _1578) * _1543;
        float _1588 = _1511 * 0.5;
        float _1589 = _1521 * 0.5;
        float _1590 = _1531 * 0.5;
        float _1591 = dot(vec3(_1588, _1589, _1590), vec3(_1588, _1589, _1590));
        float _1596 = (_1591 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1591);
        float _1604 = (dot(vec3(_830, _831, _832), vec3(_1596 * _1588, _1596 * _1589, _1596 * _1590)) + 1.0) * 0.5;
        float _4104 = isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0));
        float _1613 = sqrt(((_1589 * _1589) + (_1588 * _1588)) + (_1590 * _1590)) / (_1544 + 9.9999997473787516355514526367188e-06);
        float _4115 = isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0));
        float _1614 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
        float _1615 = _1614 * 2.0;
        float _1619 = (1.0 - _1614) / (_1614 + 1.0);
        float _4126 = isnan(0.0) ? _1619 : (isnan(_1619) ? 0.0 : max(_1619, 0.0));
        float _1620 = isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0));
        float _1629 = ((((1.0 - _1620) * (_1615 + 2.0)) * exp2(log2(isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0))) * (_1615 + 1.0))) + _1620) * _1544;
        float _1630 = _1512 * 0.5;
        float _1631 = _1522 * 0.5;
        float _1632 = _1532 * 0.5;
        float _1633 = dot(vec3(_1630, _1631, _1632), vec3(_1630, _1631, _1632));
        float _1638 = (_1633 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1633);
        float _1646 = (dot(vec3(_830, _831, _832), vec3(_1638 * _1630, _1638 * _1631, _1638 * _1632)) + 1.0) * 0.5;
        float _4137 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
        float _1655 = sqrt(((_1631 * _1631) + (_1630 * _1630)) + (_1632 * _1632)) / (_1545 + 9.9999997473787516355514526367188e-06);
        float _4148 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
        float _1656 = isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0));
        float _1657 = _1656 * 2.0;
        float _1661 = (1.0 - _1656) / (_1656 + 1.0);
        float _4159 = isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0));
        float _1662 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
        float _1671 = ((((1.0 - _1662) * (_1657 + 2.0)) * exp2(log2(isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0))) * (_1657 + 1.0))) + _1662) * _1545;
        _1679 = _1512;
        _1680 = _1511;
        _1681 = _1510;
        _1682 = _1522;
        _1683 = _1521;
        _1684 = _1520;
        _1685 = _1532;
        _1686 = _1531;
        _1687 = _1530;
        _1688 = _1545;
        _1689 = _1544;
        _1690 = _1543;
        _1691 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0)));
        _1692 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0)));
        _1693 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0)));
    }
    else
    {
        _1679 = _1370;
        _1680 = _1370;
        _1681 = _1370;
        _1682 = _1370;
        _1683 = _1370;
        _1684 = _1370;
        _1685 = _1370;
        _1686 = _1370;
        _1687 = _1370;
        _1688 = _1370;
        _1689 = _1370;
        _1690 = _1370;
        _1691 = 0.0;
        _1692 = 0.0;
        _1693 = 0.0;
    }
    float _1703 = (cbModelParam._m0[1u].x * (_1691 - _1382)) + _1382;
    float _1704 = (cbModelParam._m0[1u].x * (_1692 - _1383)) + _1383;
    float _1705 = (cbModelParam._m0[1u].x * (_1693 - _1384)) + _1384;
    float _1726 = fma(_1705, cbSceneParam._m0[89u].z, fma(_1704, cbSceneParam._m0[89u].y, _1703 * cbSceneParam._m0[89u].x));
    float _1729 = fma(_1705, cbSceneParam._m0[90u].z, fma(_1704, cbSceneParam._m0[90u].y, _1703 * cbSceneParam._m0[90u].x));
    float _1732 = fma(_1705, cbSceneParam._m0[91u].z, fma(_1704, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1703));
    float _1747 = _1004 * 0.5;
    float _1748 = _1005 * 0.5;
    float _1749 = _1006 * 0.5;
    float _1750 = dot(vec4(_1747, _1748, _1749, 1.0), vec4(_1681, _1684, _1687, _1690));
    float _1753 = dot(vec4(_1747, _1748, _1749, 1.0), vec4(_1680, _1683, _1686, _1689));
    float _1756 = dot(vec4(_1747, _1748, _1749, 1.0), vec4(_1679, _1682, _1685, _1688));
    float _1790;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1763 = dot(vec4(_1747, _1748, _1749, 1.0), vec4(_1369, _1373, _1376, _1379));
        float _1767 = dot(vec4(_1747, _1748, _1749, 1.0), vec4(_1371, _1374, _1377, _1380));
        float _1771 = dot(vec4(_1747, _1748, _1749, 1.0), vec4(_1372, _1375, _1378, _1381));
        float _1778 = dot(vec4(cbModelParam._m0[39u]), vec4(_1747, _1748, _1749, 1.0));
        _1790 = dot(vec3(isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0)), isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0)), isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1778) ? 0.0 : (isnan(0.0) ? _1778 : max(0.0, _1778))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1790 = 1.0;
    }
    float _1801;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1792 = dot(vec4(cbModelParam._m0[40u]), vec4(_1747, _1748, _1749, 1.0));
        _1801 = dot(vec3(isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0)), isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0)), isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1792) ? 0.0 : (isnan(0.0) ? _1792 : max(0.0, _1792))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1801 = 1.0;
    }
    float _1805 = (_1801 * cbModelParam._m0[1u].x) + (_1790 * (1.0 - cbModelParam._m0[1u].x));
    float _1815 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _833);
    float _1816 = isnan(_1815) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1815 : min(cbModelParam._m0[25u].z, _1815));
    float _1896;
    float _1898;
    float _1900;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1863 = fma(_1067, cbModelParam._m0[13u].z, fma(_1063, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1059)) + cbModelParam._m0[13u].w;
        float _1867 = fma(_1067, cbModelParam._m0[14u].z, fma(_1063, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1059)) + cbModelParam._m0[14u].w;
        float _1871 = fma(_1067, cbModelParam._m0[15u].z, fma(_1063, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1059)) + cbModelParam._m0[15u].w;
        float _1874 = fma(_1006, cbModelParam._m0[13u].z, fma(_1005, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1004));
        float _1877 = fma(_1006, cbModelParam._m0[14u].z, fma(_1005, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1004));
        float _1880 = fma(_1006, cbModelParam._m0[15u].z, fma(_1005, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1004));
        float _1908;
        if (_1874 > 0.0)
        {
            _1908 = abs((1.0 - _1863) / _1874);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1874 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1863 + 1.0) / _1874);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1908 = frontier_phi_14_12_ladder;
        }
        float _2111;
        if (_1877 > 0.0)
        {
            _2111 = abs((1.0 - _1867) / _1877);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1877 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1867 + 1.0) / _1877);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2111 = frontier_phi_23_19_ladder;
        }
        float _2365;
        if (_1880 > 0.0)
        {
            _2365 = abs((1.0 - _1871) / _1880);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1880 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1871 + 1.0) / _1880);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2365 = frontier_phi_35_30_ladder;
        }
        float _2367 = isnan(_2111) ? _1908 : (isnan(_1908) ? _2111 : min(_1908, _2111));
        float _2368 = isnan(_2365) ? _2367 : (isnan(_2367) ? _2365 : min(_2367, _2365));
        float _2372 = (_2368 * _1874) + _1863;
        float _2373 = (_2368 * _1877) + _1867;
        float _2374 = (_2368 * _1880) + _1871;
        float _2375 = _2368 * 9.9999997473787516355514526367188e-05;
        float _2377 = (-1.0) - _2375;
        float _2379 = _2375 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2374 > _2379) || ((_2374 < _2377) || ((_2373 > _2379) || ((_2373 < _2377) || ((_2372 < _2377) || (_2372 > _2379))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2502 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2374, cbModelParam._m0[9u].z, fma(_2373, cbModelParam._m0[9u].y, _2372 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2374, cbModelParam._m0[10u].z, fma(_2373, cbModelParam._m0[10u].y, _2372 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2374, cbModelParam._m0[11u].z, fma(_2373, cbModelParam._m0[11u].y, _2372 * cbModelParam._m0[11u].x))), _1816);
            frontier_phi_13_35_ladder = _2502.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2502.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2502.x * cbModelParam._m0[1u].y;
        }
        _1896 = frontier_phi_13_35_ladder_2;
        _1898 = frontier_phi_13_35_ladder_1;
        _1900 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1884 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1004, _1005, _1006), _1816);
        _1896 = _1884.x * cbModelParam._m0[1u].y;
        _1898 = _1884.y * cbModelParam._m0[1u].y;
        _1900 = _1884.z * cbModelParam._m0[1u].y;
    }
    float _1904 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _833);
    float _1905 = isnan(_1904) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1904 : min(cbModelParam._m0[25u].w, _1904));
    float _1994;
    float _1996;
    float _1998;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1958 = fma(_1067, cbModelParam._m0[21u].z, fma(_1063, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1059)) + cbModelParam._m0[21u].w;
        float _1962 = fma(_1067, cbModelParam._m0[22u].z, fma(_1063, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1059)) + cbModelParam._m0[22u].w;
        float _1966 = fma(_1067, cbModelParam._m0[23u].z, fma(_1063, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1059)) + cbModelParam._m0[23u].w;
        float _1969 = fma(_1006, cbModelParam._m0[21u].z, fma(_1005, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1004));
        float _1972 = fma(_1006, cbModelParam._m0[22u].z, fma(_1005, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1004));
        float _1975 = fma(_1006, cbModelParam._m0[23u].z, fma(_1005, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1004));
        float _2116;
        if (_1969 > 0.0)
        {
            _2116 = abs((1.0 - _1958) / _1969);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1969 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1958 + 1.0) / _1969);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2116 = frontier_phi_25_21_ladder;
        }
        float _2392;
        if (_1972 > 0.0)
        {
            _2392 = abs((1.0 - _1962) / _1972);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1972 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1962 + 1.0) / _1972);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2392 = frontier_phi_37_32_ladder;
        }
        float _2605;
        if (_1975 > 0.0)
        {
            _2605 = abs((1.0 - _1966) / _1975);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1975 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1966 + 1.0) / _1975);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2605 = frontier_phi_46_43_ladder;
        }
        float _2607 = isnan(_2392) ? _2116 : (isnan(_2116) ? _2392 : min(_2116, _2392));
        float _2608 = isnan(_2605) ? _2607 : (isnan(_2607) ? _2605 : min(_2607, _2605));
        float _2612 = (_2608 * _1969) + _1958;
        float _2613 = (_2608 * _1972) + _1962;
        float _2614 = (_2608 * _1975) + _1966;
        float _2615 = _2608 * 9.9999997473787516355514526367188e-05;
        float _2616 = (-1.0) - _2615;
        float _2618 = _2615 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2614 > _2618) || ((_2614 < _2616) || ((_2613 > _2618) || ((_2613 < _2616) || ((_2612 < _2616) || (_2612 > _2618))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2858 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2614, cbModelParam._m0[17u].z, fma(_2613, cbModelParam._m0[17u].y, _2612 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2614, cbModelParam._m0[18u].z, fma(_2613, cbModelParam._m0[18u].y, _2612 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2614, cbModelParam._m0[19u].z, fma(_2613, cbModelParam._m0[19u].y, _2612 * cbModelParam._m0[19u].x))), _1905);
            frontier_phi_22_46_ladder = _2858.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2858.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2858.x * cbModelParam._m0[1u].z;
        }
        _1994 = frontier_phi_22_46_ladder_2;
        _1996 = frontier_phi_22_46_ladder_1;
        _1998 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1978 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1004, _1005, _1006), _1905);
        _1994 = _1978.x * cbModelParam._m0[1u].z;
        _1996 = _1978.y * cbModelParam._m0[1u].z;
        _1998 = _1978.z * cbModelParam._m0[1u].z;
    }
    float _2011 = (((_1030 * _981) + _1031) * _996) * ((cbModelParam._m0[1u].w * (_1994 - _1896)) + _1896);
    float _2013 = (((_1030 * _983) + _1031) * _996) * ((cbModelParam._m0[1u].w * (_1996 - _1898)) + _1898);
    float _2015 = (((_1030 * _984) + _1031) * _996) * ((cbModelParam._m0[1u].w * (_1998 - _1900)) + _1900);
    float _2018 = fma(_2015, cbSceneParam._m0[89u].z, fma(_2013, cbSceneParam._m0[89u].y, _2011 * cbSceneParam._m0[89u].x));
    float _2021 = fma(_2015, cbSceneParam._m0[90u].z, fma(_2013, cbSceneParam._m0[90u].y, _2011 * cbSceneParam._m0[90u].x));
    float _2024 = fma(_2015, cbSceneParam._m0[91u].z, fma(_2013, cbSceneParam._m0[91u].y, _2011 * cbSceneParam._m0[91u].x));
    uvec4 _2034 = floatBitsToUint(cbInstanceData._m0[_956 + 5u]);
    uint _2036 = _2034.x * 14u;
    uint _2037 = _2036 + 13u;
    float _2044 = _996 + (-1.0);
    float _2049 = (cbLight._m0[_2037].x * _2044) + 1.0;
    float _2050 = (cbLight._m0[_2037].y * _2044) + 1.0;
    float _2051 = (cbLight._m0[_2037].z * _2044) + 1.0;
    float _2052 = (cbLight._m0[_2037].w * _2044) + 1.0;
    uint _2053 = _2036 + 5u;
    float _2059 = isnan(1.0) ? _2050 : (isnan(_2050) ? 1.0 : min(_2050, 1.0));
    uint _2063 = _2036 + 4u;
    float _2070 = isnan(1.0) ? _2049 : (isnan(_2049) ? 1.0 : min(_2049, 1.0));
    uint _2074 = _2036 | 1u;
    float _2085 = dot(vec3(cbLight._m0[_2036].xyz), vec3(_830, _831, _832));
    float _2088 = dot(vec3(cbLight._m0[_2074].xyz), vec3(_830, _831, _832));
    float _4295 = isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0));
    float _4306 = isnan(0.0) ? _2088 : (isnan(_2088) ? 0.0 : max(_2088, 0.0));
    float _2093 = (isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0))) * 0.3183098733425140380859375;
    float _2095 = (isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0))) * 0.3183098733425140380859375;
    float _2102 = ((cbLight._m0[_2053].x * _2059) * _2095) + ((cbLight._m0[_2063].x * _2070) * _2093);
    float _2103 = ((_2059 * cbLight._m0[_2053].y) * _2095) + ((_2070 * cbLight._m0[_2063].y) * _2093);
    float _2104 = ((_2059 * cbLight._m0[_2053].z) * _2095) + ((_2070 * cbLight._m0[_2063].z) * _2093);
    uvec4 _2108 = floatBitsToUint(cbLight._m0[_2036 + 12u]);
    bool _2110 = _2108.x == 0u;
    float _2121;
    float _2123;
    float _2125;
    if (_2110)
    {
        _2121 = _2102;
        _2123 = _2103;
        _2125 = _2104;
    }
    else
    {
        uint _2129 = _2036 + 6u;
        float _2145 = (dot(vec3(cbLight._m0[_2036 + 2u].xyz), vec3(_830, _831, _832)) * 0.5) + 0.5;
        float _2146 = _2145 * _2145;
        float _4317 = isnan(0.0) ? _2146 : (isnan(_2146) ? 0.0 : max(_2146, 0.0));
        float _2147 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
        float _2148 = isnan(1.0) ? _2051 : (isnan(_2051) ? 1.0 : min(_2051, 1.0));
        _2121 = (((cbLight._m0[_2129].x * 0.3183098733425140380859375) * _2147) * _2148) + _2102;
        _2123 = (((cbLight._m0[_2129].y * 0.3183098733425140380859375) * _2147) * _2148) + _2103;
        _2125 = (((cbLight._m0[_2129].z * 0.3183098733425140380859375) * _2147) * _2148) + _2104;
    }
    bool _2128 = _2108.y == 0u;
    float _2166;
    float _2168;
    float _2170;
    if (_2128)
    {
        _2166 = _2121;
        _2168 = _2123;
        _2170 = _2125;
    }
    else
    {
        uint _2336 = _2036 + 7u;
        float _2352 = (dot(vec3(cbLight._m0[_2036 + 3u].xyz), vec3(_830, _831, _832)) * 0.5) + 0.5;
        float _2353 = _2352 * _2352;
        float _4333 = isnan(0.0) ? _2353 : (isnan(_2353) ? 0.0 : max(_2353, 0.0));
        float _2354 = isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0));
        float _2355 = isnan(1.0) ? _2052 : (isnan(_2052) ? 1.0 : min(_2052, 1.0));
        _2166 = (((cbLight._m0[_2336].x * 0.3183098733425140380859375) * _2354) * _2355) + _2121;
        _2168 = (((cbLight._m0[_2336].y * 0.3183098733425140380859375) * _2354) * _2355) + _2123;
        _2170 = (((cbLight._m0[_2336].z * 0.3183098733425140380859375) * _2354) * _2355) + _2125;
    }
    uint _2173 = _2036 + 8u;
    float _2186 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2036].w)) * _833) * 0.949999988079071044921875);
    float _2187 = _2186 * _2186;
    float _2188 = cbLight._m0[_2036].x + _910;
    float _2189 = cbLight._m0[_2036].y + _911;
    float _2190 = cbLight._m0[_2036].z + _912;
    float _2194 = inversesqrt(dot(vec3(_2188, _2189, _2190), vec3(_2188, _2189, _2190)));
    float _2195 = _2194 * _2188;
    float _2196 = _2194 * _2189;
    float _2197 = _2194 * _2190;
    float _2198 = dot(vec3(_830, _831, _832), vec3(cbLight._m0[_2036].xyz));
    float _4349 = isnan(0.0) ? _2198 : (isnan(_2198) ? 0.0 : max(_2198, 0.0));
    float _2201 = isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0));
    float _4360 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
    float _2202 = isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0));
    float _2203 = dot(vec3(_830, _831, _832), vec3(_2195, _2196, _2197));
    float _4371 = isnan(0.0) ? _2203 : (isnan(_2203) ? 0.0 : max(_2203, 0.0));
    float _2206 = isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0));
    float _2207 = dot(vec3(cbLight._m0[_2036].xyz), vec3(_2195, _2196, _2197));
    float _4382 = isnan(0.0) ? _2207 : (isnan(_2207) ? 0.0 : max(_2207, 0.0));
    float _2211 = _2187 * _2187;
    float _2215 = ((_2206 * _2206) * (_2211 + (-1.0))) + 1.0;
    float _2223 = exp2(log2(1.0 - (isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0)))) * 5.0);
    float _2224 = 0.959999978542327880859375 - _978;
    float _2226 = 0.959999978542327880859375 - _979;
    float _2227 = 0.959999978542327880859375 - _980;
    float _2234 = 1.0 - _2187;
    float _2245 = (0.5 / (((_2202 * ((_2201 * _2234) + _2187)) + 9.9999999392252902907785028219223e-09) + (((_2202 * _2234) + _2187) * _2201))) * _2201;
    float _4393 = isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0));
    float _2247 = (isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0))) * (_2211 / ((_2215 * _2215) * 3.141590118408203125));
    uint _2258 = _2036 + 9u;
    float _2269 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2074].w)) * _833) * 0.949999988079071044921875);
    float _2270 = _2269 * _2269;
    float _2271 = cbLight._m0[_2074].x + _910;
    float _2272 = cbLight._m0[_2074].y + _911;
    float _2273 = cbLight._m0[_2074].z + _912;
    float _2277 = inversesqrt(dot(vec3(_2271, _2272, _2273), vec3(_2271, _2272, _2273)));
    float _2278 = _2277 * _2271;
    float _2279 = _2277 * _2272;
    float _2280 = _2277 * _2273;
    float _2281 = dot(vec3(_830, _831, _832), vec3(cbLight._m0[_2074].xyz));
    float _4404 = isnan(0.0) ? _2281 : (isnan(_2281) ? 0.0 : max(_2281, 0.0));
    float _2284 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
    float _2285 = dot(vec3(_830, _831, _832), vec3(_2278, _2279, _2280));
    float _4415 = isnan(0.0) ? _2285 : (isnan(_2285) ? 0.0 : max(_2285, 0.0));
    float _2288 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
    float _2289 = dot(vec3(cbLight._m0[_2074].xyz), vec3(_2278, _2279, _2280));
    float _4426 = isnan(0.0) ? _2289 : (isnan(_2289) ? 0.0 : max(_2289, 0.0));
    float _2293 = _2270 * _2270;
    float _2297 = ((_2288 * _2288) * (_2293 + (-1.0))) + 1.0;
    float _2304 = exp2(log2(1.0 - (isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0)))) * 5.0);
    float _2311 = 1.0 - _2270;
    float _2321 = (0.5 / (((_2202 * ((_2284 * _2311) + _2270)) + 9.9999999392252902907785028219223e-09) + (((_2202 * _2311) + _2270) * _2284))) * _2284;
    float _4437 = isnan(0.0) ? _2321 : (isnan(_2321) ? 0.0 : max(_2321, 0.0));
    float _2323 = (isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0))) * (_2293 / ((_2297 * _2297) * 3.141590118408203125));
    float _2333 = (((((_2304 * _2224) + _981) * cbLight._m0[_2258].x) * _2323) * _2059) + (((((_2223 * _2224) + _981) * cbLight._m0[_2173].x) * _2247) * _2070);
    float _2334 = (((((_2304 * _2226) + _983) * cbLight._m0[_2258].y) * _2323) * _2059) + (((((_2223 * _2226) + _983) * cbLight._m0[_2173].y) * _2247) * _2070);
    float _2335 = (((((_2304 * _2227) + _984) * cbLight._m0[_2258].z) * _2323) * _2059) + (((((_2223 * _2227) + _984) * cbLight._m0[_2173].z) * _2247) * _2070);
    float _2397;
    float _2399;
    float _2401;
    if (_2110)
    {
        _2397 = _2333;
        _2399 = _2334;
        _2401 = _2335;
    }
    else
    {
        uint _2403 = _2036 + 2u;
        uint _2407 = _2036 + 10u;
        float _2421 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2403].w)) * _833) * 0.949999988079071044921875);
        float _2422 = _2421 * _2421;
        float _2423 = cbLight._m0[_2403].x + _910;
        float _2424 = cbLight._m0[_2403].y + _911;
        float _2425 = cbLight._m0[_2403].z + _912;
        float _2429 = inversesqrt(dot(vec3(_2423, _2424, _2425), vec3(_2423, _2424, _2425)));
        float _2430 = _2429 * _2423;
        float _2431 = _2429 * _2424;
        float _2432 = _2429 * _2425;
        float _2433 = dot(vec3(_830, _831, _832), vec3(cbLight._m0[_2403].xyz));
        float _4448 = isnan(0.0) ? _2433 : (isnan(_2433) ? 0.0 : max(_2433, 0.0));
        float _2436 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
        float _2437 = dot(vec3(_830, _831, _832), vec3(_2430, _2431, _2432));
        float _4459 = isnan(0.0) ? _2437 : (isnan(_2437) ? 0.0 : max(_2437, 0.0));
        float _2440 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
        float _2441 = dot(vec3(cbLight._m0[_2403].xyz), vec3(_2430, _2431, _2432));
        float _4470 = isnan(0.0) ? _2441 : (isnan(_2441) ? 0.0 : max(_2441, 0.0));
        float _2445 = _2422 * _2422;
        float _2449 = ((_2440 * _2440) * (_2445 + (-1.0))) + 1.0;
        float _2456 = exp2(log2(1.0 - (isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0)))) * 5.0);
        float _2463 = 1.0 - _2422;
        float _2473 = (0.5 / (((_2202 * ((_2436 * _2463) + _2422)) + 9.9999999392252902907785028219223e-09) + (((_2202 * _2463) + _2422) * _2436))) * _2436;
        float _4481 = isnan(0.0) ? _2473 : (isnan(_2473) ? 0.0 : max(_2473, 0.0));
        float _2475 = (isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0))) * (_2445 / ((_2449 * _2449) * 3.141590118408203125));
        float _2476 = isnan(1.0) ? _2051 : (isnan(_2051) ? 1.0 : min(_2051, 1.0));
        _2397 = (((((_2456 * _2224) + _981) * cbLight._m0[_2407].x) * _2475) * _2476) + _2333;
        _2399 = (((((_2456 * _2226) + _983) * cbLight._m0[_2407].y) * _2475) * _2476) + _2334;
        _2401 = (((((_2456 * _2227) + _984) * cbLight._m0[_2407].z) * _2475) * _2476) + _2335;
    }
    float _2511;
    float _2513;
    float _2515;
    if (_2128)
    {
        _2511 = _2397;
        _2513 = _2399;
        _2515 = _2401;
    }
    else
    {
        uint _2522 = _2036 + 3u;
        uint _2526 = _2036 + 11u;
        float _2540 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2522].w)) * _833) * 0.949999988079071044921875);
        float _2541 = _2540 * _2540;
        float _2542 = cbLight._m0[_2522].x + _910;
        float _2543 = cbLight._m0[_2522].y + _911;
        float _2544 = cbLight._m0[_2522].z + _912;
        float _2548 = inversesqrt(dot(vec3(_2542, _2543, _2544), vec3(_2542, _2543, _2544)));
        float _2549 = _2548 * _2542;
        float _2550 = _2548 * _2543;
        float _2551 = _2548 * _2544;
        float _2552 = dot(vec3(_830, _831, _832), vec3(cbLight._m0[_2522].xyz));
        float _4497 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
        float _2555 = isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0));
        float _2556 = dot(vec3(_830, _831, _832), vec3(_2549, _2550, _2551));
        float _4508 = isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : max(_2556, 0.0));
        float _2559 = isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0));
        float _2560 = dot(vec3(cbLight._m0[_2522].xyz), vec3(_2549, _2550, _2551));
        float _4519 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
        float _2564 = _2541 * _2541;
        float _2568 = ((_2559 * _2559) * (_2564 + (-1.0))) + 1.0;
        float _2575 = exp2(log2(1.0 - (isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0)))) * 5.0);
        float _2582 = 1.0 - _2541;
        float _2592 = (0.5 / (((_2202 * ((_2555 * _2582) + _2541)) + 9.9999999392252902907785028219223e-09) + (((_2202 * _2582) + _2541) * _2555))) * _2555;
        float _4530 = isnan(0.0) ? _2592 : (isnan(_2592) ? 0.0 : max(_2592, 0.0));
        float _2594 = (isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0))) * (_2564 / ((_2568 * _2568) * 3.141590118408203125));
        float _2595 = isnan(1.0) ? _2052 : (isnan(_2052) ? 1.0 : min(_2052, 1.0));
        _2511 = (((((_2575 * _2224) + _981) * cbLight._m0[_2526].x) * _2594) * _2595) + _2397;
        _2513 = (((((_2575 * _2226) + _983) * cbLight._m0[_2526].y) * _2594) * _2595) + _2399;
        _2515 = (((((_2575 * _2227) + _984) * cbLight._m0[_2526].z) * _2594) * _2595) + _2401;
    }
    float _2730;
    float _2732;
    float _2734;
    float _2736;
    float _2738;
    float _2740;
    if (_2034.y == 0u)
    {
        float _2670 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2671 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2670;
        float _2672 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2670;
        float _2673 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2670;
        uvec4 _2685 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2686 = _2685.x;
        uint _2697 = uint((float(_2685.y) * floor(float(uint(cbSceneParam._m0[85u].y * _919) / _2686))) + floor(float(uint(cbSceneParam._m0[85u].x * _918) / _2686)));
        float _2707 = (log2(_2673 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2708 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
        uint _2711 = uint(isnan(14.0) ? _2708 : (isnan(_2708) ? 14.0 : min(_2708, 14.0)));
        uvec4 _2716 = texelFetch(g_lightClusterGridBuffer, int(((_2711 << 2u) + (_2697 << 6u)) >> 2u));
        uint _2717 = _2716.x;
        uint _2718 = _2685.z;
        float _2863;
        float _2865;
        float _2867;
        float _2869;
        float _2871;
        float _2873;
        if (((((1u << ((_2718 >> 4u) & 15u)) + 4294967295u) & _2717) == 0u) || ((_2718 & 240u) == 0u))
        {
            _2863 = 0.0;
            _2865 = 0.0;
            _2867 = 0.0;
            _2869 = 0.0;
            _2871 = 0.0;
            _2873 = 0.0;
        }
        else
        {
            float _2864;
            float _2866;
            float _2868;
            float _2870;
            float _2872;
            float _2874;
            float _3016 = 0.0;
            float _3017 = 0.0;
            float _3018 = 0.0;
            float _3019 = 0.0;
            float _3020 = 0.0;
            float _3021 = 0.0;
            uint _3022 = 0u;
            uint _3031;
            bool _3032;
            for (;;)
            {
                _3031 = texelFetch(g_lightClassification, int((((_2711 << 5u) + (_2697 << 9u)) + (_3022 << 2u)) >> 2u)).x;
                _3032 = _3031 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3032)
                {
                    frontier_phi_61_pred = _3016;
                    frontier_phi_61_pred_1 = _3021;
                    frontier_phi_61_pred_2 = _3020;
                    frontier_phi_61_pred_3 = _3019;
                    frontier_phi_61_pred_4 = _3018;
                    frontier_phi_61_pred_5 = _3017;
                }
                else
                {
                    float _3140;
                    float _3141;
                    float _3142;
                    float _3143;
                    float _3144;
                    float _3145;
                    uint _3146;
                    _3140 = _3016;
                    _3141 = _3017;
                    _3142 = _3018;
                    _3143 = _3019;
                    _3144 = _3020;
                    _3145 = _3021;
                    _3146 = _3031;
                    float _3072;
                    float _3073;
                    float _3074;
                    float _3075;
                    float _3076;
                    float _3077;
                    for (;;)
                    {
                        uint _3150 = uint(findLSB(_3146)) + (_3022 << 5u);
                        uint _3147 = (_3146 + 4294967295u) & _3146;
                        uint _3152 = _3150 * 48u;
                        vec4 _3166 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3152)).x, texelFetch(g_PointLightRenderingBuffer, int(_3152 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3152 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3152 + 3u)).x));
                        uint _3172 = (_3150 * 48u) + 4u;
                        vec4 _3185 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3172)).x, texelFetch(g_PointLightRenderingBuffer, int(_3172 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3172 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3172 + 3u)).x));
                        uint _3191 = (_3150 * 48u) + 8u;
                        vec3 _3202 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3191)).x, texelFetch(g_PointLightRenderingBuffer, int(_3191 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3191 + 2u)).x));
                        float _3206 = _3166.x - _2671;
                        float _3207 = _3166.y - _2672;
                        float _3208 = _3166.z - _2673;
                        float _3209 = dot(vec3(_3206, _3207, _3208), vec3(_3206, _3207, _3208));
                        float _3212 = inversesqrt(_3209);
                        float _3213 = _3212 * _3206;
                        float _3214 = _3212 * _3207;
                        float _3215 = _3212 * _3208;
                        float _3216 = dot(vec3(_937, _940, _943), vec3(_3213, _3214, _3215));
                        float _3221 = 1.0 - (_3209 * _3166.w);
                        float _4556 = isnan(0.0) ? _3221 : (isnan(_3221) ? 0.0 : max(_3221, 0.0));
                        float _3222 = isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0));
                        float _3223 = sqrt(_3209) * _3185.w;
                        float _3226 = 1.39999997615814208984375 / (_3223 + 1.39999997615814208984375);
                        float _3227 = _3226 * _3226;
                        float _3230 = ((1.0 - _3227) * _3216) + _3227;
                        float _3233 = _3223 * _3223;
                        float _3237 = ((isnan(0.0) ? _3230 : (isnan(_3230) ? 0.0 : max(_3230, 0.0))) * _3222) / ((_3233 * 0.699999988079071044921875) + 1.0);
                        float _3241 = (-0.0) - _2671;
                        float _3242 = (-0.0) - _2672;
                        float _3243 = (-0.0) - _2673;
                        float _3247 = inversesqrt(dot(vec3(_3241, _3242, _3243), vec3(_3241, _3242, _3243)));
                        float _3248 = _3247 * _3241;
                        float _3249 = _3247 * _3242;
                        float _3250 = _3247 * _3243;
                        float _3258 = exp2(log2(1.0 / ((_3233 * 3.5) + 5.0)) * 0.25);
                        float _3259 = 1.0 - _1012;
                        float _3266 = sqrt(1.0 - ((1.0 - (_3259 * _3259)) * (1.0 - (_3258 * _3258))));
                        float _3267 = _3266 * _3266;
                        float _3268 = _3267 * _3267;
                        float _3269 = _3248 + _3213;
                        float _3270 = _3249 + _3214;
                        float _3271 = _3250 + _3215;
                        float _3275 = inversesqrt(dot(vec3(_3269, _3270, _3271), vec3(_3269, _3270, _3271)));
                        float _3279 = dot(vec3(_937, _940, _943), vec3(_3248, _3249, _3250));
                        float _4572 = isnan(0.0) ? _3279 : (isnan(_3279) ? 0.0 : max(_3279, 0.0));
                        float _3282 = isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0));
                        float _3283 = dot(vec3(_937, _940, _943), vec3(_3275 * _3269, _3275 * _3270, _3275 * _3271));
                        float _4583 = isnan(0.0) ? _3283 : (isnan(_3283) ? 0.0 : max(_3283, 0.0));
                        float _3286 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
                        float _3290 = ((_3286 * _3286) * (_3268 + (-1.0))) + 1.0;
                        float _3291 = _3226 * _3267;
                        float _3292 = _3291 * _3291;
                        float _3295 = ((1.0 - _3292) * _3216) + _3292;
                        float _4594 = isnan(0.0) ? _3295 : (isnan(_3295) ? 0.0 : max(_3295, 0.0));
                        float _3296 = isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0));
                        float _3297 = 1.0 - _3267;
                        float _3307 = (0.5 / (((_3296 * ((_3282 * _3297) + _3267)) + 9.9999999392252902907785028219223e-09) + (((_3296 * _3297) + _3267) * _3282))) * _3296;
                        float _4605 = isnan(0.0) ? _3307 : (isnan(_3307) ? 0.0 : max(_3307, 0.0));
                        float _3318 = (((_3268 * 3.1415927410125732421875) * (isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0)))) / ((_3290 * _3290) * ((_3233 * 2.1991131305694580078125) + 3.141590118408203125))) * _3222;
                        _3075 = (_3237 * _3185.x) + _3143;
                        _3076 = (_3237 * _3185.y) + _3144;
                        _3077 = (_3237 * _3185.z) + _3145;
                        _3072 = (_3318 * _3202.x) + _3140;
                        _3073 = (_3318 * _3202.y) + _3141;
                        _3074 = (_3318 * _3202.z) + _3142;
                        if (_3147 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3140 = _3072;
                            _3141 = _3073;
                            _3142 = _3074;
                            _3143 = _3075;
                            _3144 = _3076;
                            _3145 = _3077;
                            _3146 = _3147;
                        }
                    }
                    frontier_phi_61_pred = _3072;
                    frontier_phi_61_pred_1 = _3077;
                    frontier_phi_61_pred_2 = _3076;
                    frontier_phi_61_pred_3 = _3075;
                    frontier_phi_61_pred_4 = _3074;
                    frontier_phi_61_pred_5 = _3073;
                }
                _2864 = frontier_phi_61_pred;
                _2874 = frontier_phi_61_pred_1;
                _2872 = frontier_phi_61_pred_2;
                _2870 = frontier_phi_61_pred_3;
                _2868 = frontier_phi_61_pred_4;
                _2866 = frontier_phi_61_pred_5;
                uint _3023 = _3022 + 1u;
                if (_3023 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3016 = _2864;
                    _3017 = _2866;
                    _3018 = _2868;
                    _3019 = _2870;
                    _3020 = _2872;
                    _3021 = _2874;
                    _3022 = _3023;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2863 = _2864;
            _2865 = _2866;
            _2867 = _2868;
            _2869 = _2870;
            _2871 = _2872;
            _2873 = _2874;
        }
        uvec4 _2877 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2878 = _2877.z;
        uint _2880 = (_2878 >> 8u) & 15u;
        float _2984;
        float _2986;
        float _2988;
        float _2990;
        float _2992;
        float _2994;
        if (((4294967295u << _2880) & _2717) == 0u)
        {
            _2984 = _2863;
            _2986 = _2865;
            _2988 = _2867;
            _2990 = _2869;
            _2992 = _2871;
            _2994 = _2873;
        }
        else
        {
            float _3009 = inversesqrt(dot(vec3(_2671, _2672, _2673), vec3(_2671, _2672, _2673)));
            float _3010 = _3009 * _2671;
            float _3011 = _3009 * _2672;
            float _3012 = _3009 * _2673;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2880 < ((_2878 >> 12u) & 15u))
            {
                float _2985;
                float _2987;
                float _2989;
                float _2991;
                float _2993;
                float _2995;
                float _3123 = _2863;
                float _3124 = _2865;
                float _3125 = _2867;
                float _3126 = _2869;
                float _3127 = _2871;
                float _3128 = _2873;
                uint _3129 = _2880;
                uint _3138;
                bool _3139;
                for (;;)
                {
                    _3138 = texelFetch(g_lightClassification, int((((_2711 << 5u) + (_2697 << 9u)) + (_3129 << 2u)) >> 2u)).x;
                    _3139 = _3138 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3139)
                    {
                        frontier_phi_67_pred = _3126;
                        frontier_phi_67_pred_1 = _3127;
                        frontier_phi_67_pred_2 = _3128;
                        frontier_phi_67_pred_3 = _3125;
                        frontier_phi_67_pred_4 = _3124;
                        frontier_phi_67_pred_5 = _3123;
                    }
                    else
                    {
                        float _3323;
                        float _3324;
                        float _3325;
                        float _3326;
                        float _3327;
                        float _3328;
                        float _3617;
                        float _3618;
                        float _3619;
                        float _3620;
                        float _3621;
                        float _3622;
                        float _3336 = _3123;
                        float _3337 = _3124;
                        float _3338 = _3125;
                        float _3339 = _3126;
                        float _3340 = _3127;
                        float _3341 = _3128;
                        uint _3342 = _3138;
                        uint _3343;
                        vec4 _3368;
                        float _3369;
                        vec4 _3384;
                        vec3 _3396;
                        vec4 _3411;
                        vec4 _3426;
                        float _3473;
                        bool _3474;
                        for (;;)
                        {
                            uint _3353 = ((_3129 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3342));
                            _3343 = (_3342 + 4294967295u) & _3342;
                            uint _3355 = _3353 * 40u;
                            _3368 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3355)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3355 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3355 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3355 + 3u)).x));
                            _3369 = _3368.w;
                            uint _3371 = (_3353 * 40u) + 4u;
                            _3384 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3371)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3371 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3371 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3371 + 3u)).x));
                            uint _3386 = (_3353 * 40u) + 8u;
                            _3396 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3386)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3386 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3386 + 2u)).x));
                            uint _3398 = (_3353 * 40u) + 16u;
                            _3411 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3398)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3398 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3398 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3398 + 3u)).x));
                            uint _3413 = (_3353 * 40u) + 20u;
                            _3426 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3413)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 3u)).x));
                            uint _3429 = (_3353 * 40u) + 24u;
                            vec4 _3442 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3429)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 3u)).x));
                            uint _3448 = (_3353 * 40u) + 28u;
                            vec4 _3461 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3448)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 3u)).x));
                            _3473 = fma(_2673, _3461.z, fma(_2672, _3461.y, _3461.x * _2671)) + _3461.w;
                            _3474 = !((fma(_2673, _3442.z, fma(_2672, _3442.y, _3442.x * _2671)) + _3442.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3474)
                            {
                                float _3501 = _3368.x - _2671;
                                float _3502 = _3368.y - _2672;
                                float _3503 = _3368.z - _2673;
                                float _3504 = dot(vec3(_3501, _3502, _3503), vec3(_3501, _3502, _3503));
                                float _3507 = inversesqrt(_3504);
                                float _3508 = _3507 * _3501;
                                float _3509 = _3507 * _3502;
                                float _3510 = _3507 * _3503;
                                float _3514 = 1.0 - (_3504 / (_3369 * _3369));
                                float _4616 = isnan(0.0) ? _3514 : (isnan(_3514) ? 0.0 : max(_3514, 0.0));
                                float _3515 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
                                float _3519 = sqrt(_3504) * _3384.w;
                                float _3521 = 1.39999997615814208984375 / (_3519 + 1.39999997615814208984375);
                                float _3522 = _3521 * _3521;
                                float _3525 = ((1.0 - _3522) * dot(vec3(_3508, _3509, _3510), vec3(_937, _940, _943))) + _3522;
                                float _3528 = _3519 * _3519;
                                float _3532 = (fma(_2673, _3411.z, fma(_2672, _3411.y, _3411.x * _2671)) + _3411.w) / _3473;
                                float _3533 = (fma(_2673, _3426.z, fma(_2672, _3426.y, _3426.x * _2671)) + _3426.w) / _3473;
                                float _3537 = 1.0 - dot(vec2(_3532, _3533), vec2(_3532, _3533));
                                float _4632 = isnan(0.0) ? _3537 : (isnan(_3537) ? 0.0 : max(_3537, 0.0));
                                float _3538 = isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0));
                                float _3539 = _3538 * (((isnan(0.0) ? _3525 : (isnan(_3525) ? 0.0 : max(_3525, 0.0))) * _3515) / ((_3528 * 0.699999988079071044921875) + 1.0));
                                float _3551 = exp2(log2(1.0 / ((_3528 * 3.5) + 5.0)) * 0.25);
                                float _3552 = 1.0 - _1012;
                                float _3559 = sqrt(1.0 - ((1.0 - (_3552 * _3552)) * (1.0 - (_3551 * _3551))));
                                float _3560 = _3559 * _3559;
                                float _3561 = _3560 * _3560;
                                float _3562 = _3508 - _3010;
                                float _3563 = _3509 - _3011;
                                float _3564 = _3510 - _3012;
                                float _3568 = inversesqrt(dot(vec3(_3562, _3563, _3564), vec3(_3562, _3563, _3564)));
                                float _3572 = dot(vec3(_937, _940, _943), vec3((-0.0) - _3010, (-0.0) - _3011, (-0.0) - _3012));
                                float _4643 = isnan(0.0) ? _3572 : (isnan(_3572) ? 0.0 : max(_3572, 0.0));
                                float _3575 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
                                float _3576 = dot(vec3(_937, _940, _943), vec3(_3568 * _3562, _3568 * _3563, _3568 * _3564));
                                float _4654 = isnan(0.0) ? _3576 : (isnan(_3576) ? 0.0 : max(_3576, 0.0));
                                float _3579 = isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0));
                                float _3583 = ((_3579 * _3579) * (_3561 + (-1.0))) + 1.0;
                                float _3584 = _3521 * _3560;
                                float _3585 = _3584 * _3584;
                                float _3591 = ((1.0 - _3585) * dot(vec3(_937, _940, _943), vec3(_3508, _3509, _3510))) + _3585;
                                float _4665 = isnan(0.0) ? _3591 : (isnan(_3591) ? 0.0 : max(_3591, 0.0));
                                float _3592 = isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0));
                                float _3593 = 1.0 - _3560;
                                float _3603 = (0.5 / (((_3592 * ((_3575 * _3593) + _3560)) + 9.9999999392252902907785028219223e-09) + (((_3592 * _3593) + _3560) * _3575))) * _3592;
                                float _4676 = isnan(0.0) ? _3603 : (isnan(_3603) ? 0.0 : max(_3603, 0.0));
                                float _3613 = (_3538 * _3515) * (((_3561 * 3.1415927410125732421875) * (isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0)))) / ((_3583 * _3583) * ((_3528 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3613 * _3396.x;
                                frontier_phi_73_pred_1 = _3613 * _3396.y;
                                frontier_phi_73_pred_2 = _3539 * _3384.z;
                                frontier_phi_73_pred_3 = _3539 * _3384.y;
                                frontier_phi_73_pred_4 = _3539 * _3384.x;
                                frontier_phi_73_pred_5 = _3613 * _3396.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3617 = frontier_phi_73_pred;
                            _3618 = frontier_phi_73_pred_1;
                            _3622 = frontier_phi_73_pred_2;
                            _3621 = frontier_phi_73_pred_3;
                            _3620 = frontier_phi_73_pred_4;
                            _3619 = frontier_phi_73_pred_5;
                            _3326 = _3620 + _3339;
                            _3327 = _3621 + _3340;
                            _3328 = _3622 + _3341;
                            _3323 = _3617 + _3336;
                            _3324 = _3618 + _3337;
                            _3325 = _3619 + _3338;
                            if (_3343 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3336 = _3323;
                                _3337 = _3324;
                                _3338 = _3325;
                                _3339 = _3326;
                                _3340 = _3327;
                                _3341 = _3328;
                                _3342 = _3343;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3326;
                        frontier_phi_67_pred_1 = _3327;
                        frontier_phi_67_pred_2 = _3328;
                        frontier_phi_67_pred_3 = _3325;
                        frontier_phi_67_pred_4 = _3324;
                        frontier_phi_67_pred_5 = _3323;
                    }
                    _2991 = frontier_phi_67_pred;
                    _2993 = frontier_phi_67_pred_1;
                    _2995 = frontier_phi_67_pred_2;
                    _2989 = frontier_phi_67_pred_3;
                    _2987 = frontier_phi_67_pred_4;
                    _2985 = frontier_phi_67_pred_5;
                    uint _3130 = _3129 + 1u;
                    if (_3130 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3123 = _2985;
                        _3124 = _2987;
                        _3125 = _2989;
                        _3126 = _2991;
                        _3127 = _2993;
                        _3128 = _2995;
                        _3129 = _3130;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2993;
                frontier_phi_55_56_ladder_1 = _2995;
                frontier_phi_55_56_ladder_2 = _2991;
                frontier_phi_55_56_ladder_3 = _2989;
                frontier_phi_55_56_ladder_4 = _2987;
                frontier_phi_55_56_ladder_5 = _2985;
            }
            else
            {
                frontier_phi_55_56_ladder = _2871;
                frontier_phi_55_56_ladder_1 = _2873;
                frontier_phi_55_56_ladder_2 = _2869;
                frontier_phi_55_56_ladder_3 = _2867;
                frontier_phi_55_56_ladder_4 = _2865;
                frontier_phi_55_56_ladder_5 = _2863;
            }
            _2984 = frontier_phi_55_56_ladder_5;
            _2986 = frontier_phi_55_56_ladder_4;
            _2988 = frontier_phi_55_56_ladder_3;
            _2990 = frontier_phi_55_56_ladder_2;
            _2992 = frontier_phi_55_56_ladder;
            _2994 = frontier_phi_55_56_ladder_1;
        }
        float _2999 = isnan(1.0) ? _996 : (isnan(_996) ? 1.0 : min(_996, 1.0));
        _2730 = (_2999 * _2990) + _2166;
        _2732 = (_2999 * _2992) + _2168;
        _2734 = (_2999 * _2994) + _2170;
        _2736 = ((_2984 * _981) * _2999) + _2511;
        _2738 = ((_2986 * _983) * _2999) + _2513;
        _2740 = ((_2988 * _984) * _2999) + _2515;
    }
    else
    {
        _2730 = _2166;
        _2732 = _2168;
        _2734 = _2170;
        _2736 = _2511;
        _2738 = _2513;
        _2740 = _2515;
    }
    uint _2746 = _957 + uint(cbMatDynParam._m0[0u].w);
    float _2752 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _2758 = (((((_2752 * cbMtdParam._m0[14u].x) * _691.x) * _714) * _792) * (((1.0 - _767) * cbMtdParam._m0[20u].w) + _767)) * cbInstanceData._m0[_2746].x;
    float _2764 = (((((_2752 * cbMtdParam._m0[14u].y) * _691.y) * _714) * _792) * (((1.0 - _769) * cbMtdParam._m0[20u].w) + _769)) * cbInstanceData._m0[_2746].y;
    float _2770 = (((((_2752 * cbMtdParam._m0[14u].z) * _691.z) * _714) * _792) * (((1.0 - _771) * cbMtdParam._m0[20u].w) + _771)) * cbInstanceData._m0[_2746].z;
    float _4692 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
    float _4703 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    float _4714 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
    float _2787 = (((isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0))) * (_2730 + ((isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0))) * _996))) + ((_2736 + ((isnan(0.0) ? _2018 : (isnan(_2018) ? 0.0 : max(_2018, 0.0))) * _1805)) * cbPerFrame._m0[3u].x)) + _2758;
    float _2789 = (_2764 + ((_2738 + ((isnan(0.0) ? _2021 : (isnan(_2021) ? 0.0 : max(_2021, 0.0))) * _1805)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0))) * (_2732 + ((isnan(0.0) ? _1729 : (isnan(_1729) ? 0.0 : max(_1729, 0.0))) * _996)));
    float _2791 = (_2770 + ((_2740 + ((isnan(0.0) ? _2024 : (isnan(_2024) ? 0.0 : max(_2024, 0.0))) * _1805)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0))) * (_2734 + ((isnan(0.0) ? _1732 : (isnan(_1732) ? 0.0 : max(_1732, 0.0))) * _996)));
    float _4740 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2804 = isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0));
    uint _2805 = _956 + 6u;
    float _2813 = _918 / cbSceneParam._m0[86u].x;
    float _2814 = _919 / cbSceneParam._m0[86u].y;
    vec4 _2828 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2813, _2814, (log2((isnan(cbSceneParam._m0[77u].w) ? _853 : (isnan(_853) ? cbSceneParam._m0[77u].w : min(_853, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2830 = _2828.x;
    float _2831 = _2828.y;
    float _2832 = _2828.z;
    float _2833 = _2828.w;
    float _2925;
    float _2927;
    float _2929;
    float _2931;
    if (_853 > cbSceneParam._m0[78u].w)
    {
        float _2888 = isnan(_853) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _853 : min(cbSceneParam._m0[80u].w, _853));
        float _2889 = _2888 / _853;
        float _2900 = _2889 * _903;
        float _2901 = _904 * _2889;
        float _2902 = (-0.0) - _2901;
        float _2903 = _2889 * _905;
        float _2905 = (cbSceneParam._m0[77u].w * _2902) / _2888;
        float _2906 = _2905 + cbSceneParam._m0[79u].w;
        float _2907 = cbSceneParam._m0[79u].w - _2901;
        float _2913 = sqrt(((_2900 * _2900) + (_2901 * _2901)) + (_2903 * _2903));
        float _2916 = (1.0 - (cbSceneParam._m0[77u].w / _2888)) * _2913;
        float _2921 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2923 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3085;
        if (abs((_2902 - _2905) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3085 = ((((_2906 > 0.0) ? exp2(_2921 * _2906) : (2.0 - exp2(_2923 * _2906))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2916;
        }
        else
        {
            float _3045 = 1.0 / cbSceneParam._m0[80u].x;
            float _3046 = isnan(_2907) ? _2906 : (isnan(_2906) ? _2907 : max(_2906, _2907));
            float _3047 = isnan(_2907) ? _2906 : (isnan(_2906) ? _2907 : min(_2906, _2907));
            float _3056 = isnan(0.0) ? _3046 : (isnan(_3046) ? 0.0 : min(_3046, 0.0));
            float _3057 = isnan(0.0) ? _3047 : (isnan(_3047) ? 0.0 : min(_3047, 0.0));
            _3085 = ((abs(_2913 / _2902) * cbSceneParam._m0[80u].y) * ((((_3056 - _3057) * 2.0) - ((exp2(_2921 * (isnan(0.0) ? _3046 : (isnan(_3046) ? 0.0 : max(_3046, 0.0)))) - exp2(_2921 * (isnan(0.0) ? _3047 : (isnan(_3047) ? 0.0 : max(_3047, 0.0))))) * _3045)) - ((exp2(_2923 * _3056) - exp2(_2923 * _3057)) * _3045))) + (_2916 * cbSceneParam._m0[80u].z);
        }
        vec4 _3087 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2813, _2814, 1.0), 0.0);
        float _3096 = exp2((_3085 * (-1.44269502162933349609375)) * (1.0 - _3087.w));
        float _3097 = log2(_3096);
        float _3113 = log2(_2833);
        _2925 = (exp2(_3113 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3097 * cbSceneParam._m0[78u].x)) * _3087.x) / cbSceneParam._m0[78u].x)) + _2830;
        _2927 = (exp2(_3113 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3097 * cbSceneParam._m0[78u].y)) * _3087.y) / cbSceneParam._m0[78u].y)) + _2831;
        _2929 = (exp2(_3113 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3097 * cbSceneParam._m0[78u].z)) * _3087.z) / cbSceneParam._m0[78u].z)) + _2832;
        _2931 = _3096 * _2833;
    }
    else
    {
        _2925 = _2830;
        _2927 = _2831;
        _2929 = _2832;
        _2931 = _2833;
    }
    float _2943 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2944 = _2943 == 3.0;
    float _2945 = log2(_2931);
    float _2949 = exp2(_2945 * cbSceneParam._m0[78u].x);
    float _2950 = exp2(_2945 * cbSceneParam._m0[78u].y);
    float _2951 = exp2(_2945 * cbSceneParam._m0[78u].z);
    float _2952 = _2949 * (isnan(0.0) ? _2787 : (isnan(_2787) ? 0.0 : max(_2787, 0.0)));
    float _2953 = _2950 * (isnan(0.0) ? _2789 : (isnan(_2789) ? 0.0 : max(_2789, 0.0)));
    float _2954 = _2951 * (isnan(0.0) ? _2791 : (isnan(_2791) ? 0.0 : max(_2791, 0.0)));
    float _2963 = (_2943 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2963 * (_2944 ? _2952 : (_2952 + (cbSceneParam._m0[72u].w * _2925)));
    SV_Target.y = _2963 * (_2944 ? _2953 : (_2953 + (cbSceneParam._m0[72u].w * _2927)));
    SV_Target.z = _2963 * (_2944 ? _2954 : (_2954 + (cbSceneParam._m0[72u].w * _2929)));
    SV_Target.w = cbInstanceData._m0[_2805].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2758) * _2804) * _2949) * _2963;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2764) * _2804) * _2950) * _2963;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2770) * _2804) * _2951) * _2963;
    SV_Target_1.w = cbInstanceData._m0[_2805].w;
}


