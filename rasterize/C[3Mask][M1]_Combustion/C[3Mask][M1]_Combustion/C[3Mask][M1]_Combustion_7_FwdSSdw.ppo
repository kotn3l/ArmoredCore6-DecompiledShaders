#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1313;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _218 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _219 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _220 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _226 = inversesqrt(dot(vec3(_218, _219, _220), vec3(_218, _219, _220)));
    float _233 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _240 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _262 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _268 = _262.x * cbMtdParam._m0[10u].x;
    float _269 = _262.y * cbMtdParam._m0[10u].y;
    float _270 = _262.z * cbMtdParam._m0[10u].z;
    vec4 _289 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _308 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _336 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w)).x;
    float _346 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _308.x) * 2.0) - _336)) + 1.0;
    float _3718 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
    float _347 = isnan(1.0) ? _3718 : (isnan(_3718) ? 1.0 : min(_3718, 1.0));
    float _354 = (_347 * ((_289.x * cbMtdParam._m0[11u].x) - _268)) + _268;
    float _355 = (_347 * ((_289.y * cbMtdParam._m0[11u].y) - _269)) + _269;
    float _356 = (_347 * ((_289.z * cbMtdParam._m0[11u].z) - _270)) + _270;
    vec4 _374 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _387 = (((((1.0 - _308.y) * 2.0) - _336) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _3729 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _388 = isnan(1.0) ? _3729 : (isnan(_3729) ? 1.0 : min(_3729, 1.0));
    float _395 = (((_374.x * cbMtdParam._m0[12u].x) - _354) * _388) + _354;
    float _396 = (_388 * ((_374.y * cbMtdParam._m0[12u].y) - _355)) + _355;
    float _397 = (_388 * ((_374.z * cbMtdParam._m0[12u].z) - _356)) + _356;
    vec4 _415 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _428 = (((((1.0 - _308.z) * 2.0) - _336) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _3740 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _429 = isnan(1.0) ? _3740 : (isnan(_3740) ? 1.0 : min(_3740, 1.0));
    float _436 = (((_415.x * cbMtdParam._m0[13u].x) - _395) * _429) + _395;
    float _437 = (_429 * ((_415.y * cbMtdParam._m0[13u].y) - _396)) + _396;
    float _438 = (_429 * ((_415.z * cbMtdParam._m0[13u].z) - _397)) + _397;
    vec4 _451 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.z) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.w) + cbTextureTilingScale._m0[20u].w));
    vec4 _466 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _468 = _466.x;
    float _486 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _468) * _347) + _468;
    float _503 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _486) * _388) + _486;
    float _520 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x - _503) * _429) + _503;
    vec4 _533 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _535 = _533.x;
    float _536 = _533.y;
    float _537 = _533.z;
    vec4 _549 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _560 = ((_549.x - _535) * _347) + _535;
    float _561 = ((_549.y - _536) * _347) + _536;
    float _562 = ((_549.z - _537) * _347) + _537;
    vec4 _575 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _586 = ((_575.x - _560) * _388) + _560;
    float _587 = ((_575.y - _561) * _388) + _561;
    float _588 = ((_575.z - _562) * _388) + _562;
    vec4 _601 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _614 = ((_601.z - _588) * _429) + _588;
    float _617 = ((((_601.x - _586) * _429) + _586) * 2.0) + (-1.0);
    float _619 = ((((_601.y - _587) * _429) + _587) * 2.0) + (-1.0);
    float _620 = dot(vec2(_617, _619), vec2(_617, _619));
    float _3751 = isnan(0.0) ? _620 : (isnan(_620) ? 0.0 : max(_620, 0.0));
    float _625 = sqrt(1.0 - (isnan(1.0) ? _3751 : (isnan(_3751) ? 1.0 : min(_3751, 1.0))));
    vec4 _657 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[15u].x) + cbTextureTilingScale._m0[15u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[15u].y) + cbTextureTilingScale._m0[15u].w));
    float _671 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3762 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
    float _672 = isnan(1.0) ? _3762 : (isnan(_3762) ? 1.0 : min(_3762, 1.0));
    float _680 = (((_672 * _672) * (3.0 - (_672 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _688 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _696 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3773 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
    float _697 = isnan(1.0) ? _3773 : (isnan(_3773) ? 1.0 : min(_3773, 1.0));
    float _701 = (_697 * _697) * (3.0 - (_697 * 2.0));
    float _702 = _701 * cbMtdParam._m0[22u].x;
    float _703 = _701 * cbMtdParam._m0[22u].y;
    float _704 = sin(_688);
    float _705 = cos(_688);
    float _706 = TEXCOORD.z - _702;
    float _707 = TEXCOORD.w - _703;
    vec4 _727 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_702 + fma(_707, (-0.0) - _704, _706 * _705))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_707, _705, _706 * _704) + _703)) + cbTextureTilingScale._m0[2u].w));
    float _733 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _727.x;
    float _735 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _727.y;
    float _737 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _727.z;
    float _757 = (TEXCOORD_5.x - (((_451.x + 0.00999999977648258209228515625) * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _3784 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    float _758 = isnan(1.0) ? _3784 : (isnan(_3784) ? 1.0 : min(_3784, 1.0));
    float _761 = fma(_625, _233 * NORMAL.x, fma(_619, _240 * TANGENT.x, (_226 * _218) * _617));
    float _764 = fma(_625, _233 * NORMAL.y, fma(_619, _240 * TANGENT.y, (_226 * _219) * _617));
    float _767 = fma(_625, _233 * NORMAL.z, fma(_619, _240 * TANGENT.z, (_226 * _220) * _617));
    float _771 = inversesqrt(dot(vec3(_761, _764, _767), vec3(_761, _764, _767)));
    float _772 = _771 * _761;
    float _773 = _771 * _764;
    float _774 = _771 * _767;
    float _3795 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _775 = isnan(1.0) ? _3795 : (isnan(_3795) ? 1.0 : min(_3795, 1.0));
    float _3806 = isnan(0.0) ? _436 : (isnan(_436) ? 0.0 : max(_436, 0.0));
    float _3817 = isnan(0.0) ? _437 : (isnan(_437) ? 0.0 : max(_437, 0.0));
    float _3828 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _3839 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _779 = isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0));
    float _795 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _835 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _845 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _835);
    float _846 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _835);
    float _847 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _835);
    float _851 = inversesqrt(dot(vec3(_845, _846, _847), vec3(_845, _846, _847)));
    float _852 = _845 * _851;
    float _853 = _846 * _851;
    float _854 = _847 * _851;
    float _860 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _861 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _880 = fma(_774, cbSceneParam._m0[5u].z, fma(_773, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _772));
    float _883 = fma(_774, cbSceneParam._m0[6u].z, fma(_773, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _772));
    float _886 = fma(_774, cbSceneParam._m0[7u].z, fma(_773, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _772));
    uint _899 = uint(roundEven(NORMAL.w)) * 13u;
    uint _900 = _899 + 9u;
    uint _901 = _900 + uint(cbMatDynParam._m0[0u].w);
    float _907 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3806 : (isnan(_3806) ? 1.0 : min(_3806, 1.0)))) * cbInstanceData._m0[_901].x;
    float _908 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0)))) * cbInstanceData._m0[_901].y;
    float _909 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0)))) * cbInstanceData._m0[_901].z;
    float _3850 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
    float _910 = isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0));
    float _3861 = isnan(0.0) ? _908 : (isnan(_908) ? 0.0 : max(_908, 0.0));
    float _911 = isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0));
    float _3872 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
    float _912 = isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0));
    float _913 = 1.0 - _779;
    float _914 = _910 * _913;
    float _915 = _911 * _913;
    float _916 = _912 * _913;
    float _921 = (_910 + (-0.039999999105930328369140625)) * _779;
    float _922 = (_911 + (-0.039999999105930328369140625)) * _779;
    float _923 = (_912 + (-0.039999999105930328369140625)) * _779;
    float _924 = _921 + 0.039999999105930328369140625;
    float _926 = _922 + 0.039999999105930328369140625;
    float _927 = _923 + 0.039999999105930328369140625;
    vec4 _936 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _860, cbSceneParam._m0[86u].y * _861));
    float _939 = _936.x * TEXCOORD_5.w;
    float _940 = dot(vec3(_772, _773, _774), vec3(_852, _853, _854));
    float _943 = _940 * 2.0;
    float _947 = (_943 * _772) - _852;
    float _948 = (_943 * _773) - _853;
    float _949 = (_943 * _774) - _854;
    float _953 = abs(dot(vec3(_852, _853, _854), vec3(_772, _773, _774)));
    float _3883 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    float _955 = sqrt(_775);
    float _967 = exp2((_955 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_955 * 3.0));
    float _973 = (1.0 - _967) * ((_955 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _974 = _967 * _955;
    float _1002 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1006 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1010 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1312;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    float _1320;
    float _1321;
    float _1322;
    float _1323;
    float _1324;
    float _1325;
    float _1326;
    float _1327;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1037 = fma(_1010, cbModelParam._m0[26u].z, fma(_1006, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1002));
        float _1041 = fma(_1010, cbModelParam._m0[27u].z, fma(_1006, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1002));
        float _1045 = fma(_1010, cbModelParam._m0[28u].z, fma(_1006, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1002));
        float _1070 = _1002 + _772;
        float _1071 = _1006 + _773;
        float _1072 = _1010 + _774;
        float _1082 = fma(_1072, cbModelParam._m0[26u].z, fma(_1071, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1070)) - _1037;
        float _1083 = fma(_1072, cbModelParam._m0[27u].z, fma(_1071, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1070)) - _1041;
        float _1084 = fma(_1072, cbModelParam._m0[28u].z, fma(_1071, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1070)) - _1045;
        float _1088 = inversesqrt(dot(vec3(_1082, _1083, _1084), vec3(_1082, _1083, _1084)));
        float _1101 = ((_1088 * _1082) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1037 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1102 = ((_1088 * _1083) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1041 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1103 = ((_1088 * _1084) / cbModelParam._m0[34u].z) + ((((((_1045 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1106 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1101, _1102, _1103), 0.0);
        vec4 _1113 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1101, _1102, _1103), 0.0);
        vec4 _1120 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1101, _1102, _1103), 0.0);
        vec4 _1127 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1101, _1102, _1103), 0.0);
        float _1140 = exp2((_1106.w + (-0.5)) * 20.0) * 2.0;
        float _1141 = _1140 * (_1106.x + (-0.5));
        float _1142 = _1140 * (_1106.y + (-0.5));
        float _1143 = _1140 * (_1106.z + (-0.5));
        float _1150 = exp2((_1113.w + (-0.5)) * 20.0) * 2.0;
        float _1151 = _1150 * (_1113.x + (-0.5));
        float _1152 = _1150 * (_1113.y + (-0.5));
        float _1153 = _1150 * (_1113.z + (-0.5));
        float _1160 = exp2((_1120.w + (-0.5)) * 20.0) * 2.0;
        float _1161 = _1160 * (_1120.x + (-0.5));
        float _1162 = _1160 * (_1120.y + (-0.5));
        float _1163 = _1160 * (_1120.z + (-0.5));
        float _1170 = exp2((_1127.w + (-0.5)) * 20.0) * 2.0;
        float _1171 = _1170 * (_1127.x + (-0.5));
        float _1172 = _1170 * (_1127.y + (-0.5));
        float _1173 = _1170 * (_1127.z + (-0.5));
        float _1174 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
        float _1175 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1176 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
        float _1177 = _1141 * 0.5;
        float _1178 = _1151 * 0.5;
        float _1179 = _1161 * 0.5;
        float _1180 = dot(vec3(_1177, _1178, _1179), vec3(_1177, _1178, _1179));
        float _1185 = (_1180 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1180);
        float _1194 = (dot(vec3(_772, _773, _774), vec3(_1185 * _1177, _1185 * _1178, _1185 * _1179)) + 1.0) * 0.5;
        float _3909 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
        float _1204 = sqrt(((_1178 * _1178) + (_1177 * _1177)) + (_1179 * _1179)) / (_1174 + 9.9999997473787516355514526367188e-06);
        float _3920 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        float _1205 = isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0));
        float _1206 = _1205 * 2.0;
        float _1210 = (1.0 - _1205) / (_1205 + 1.0);
        float _3931 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
        float _1211 = isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0));
        float _1220 = ((((1.0 - _1211) * (_1206 + 2.0)) * exp2(log2(isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0))) * (_1206 + 1.0))) + _1211) * _1174;
        float _1221 = _1142 * 0.5;
        float _1222 = _1152 * 0.5;
        float _1223 = _1162 * 0.5;
        float _1224 = dot(vec3(_1221, _1222, _1223), vec3(_1221, _1222, _1223));
        float _1229 = (_1224 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1224);
        float _1237 = (dot(vec3(_772, _773, _774), vec3(_1229 * _1221, _1229 * _1222, _1229 * _1223)) + 1.0) * 0.5;
        float _3942 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
        float _1246 = sqrt(((_1222 * _1222) + (_1221 * _1221)) + (_1223 * _1223)) / (_1175 + 9.9999997473787516355514526367188e-06);
        float _3953 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
        float _1247 = isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0));
        float _1248 = _1247 * 2.0;
        float _1252 = (1.0 - _1247) / (_1247 + 1.0);
        float _3964 = isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0));
        float _1253 = isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0));
        float _1262 = ((((1.0 - _1253) * (_1248 + 2.0)) * exp2(log2(isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0))) * (_1248 + 1.0))) + _1253) * _1175;
        float _1263 = _1143 * 0.5;
        float _1264 = _1153 * 0.5;
        float _1265 = _1163 * 0.5;
        float _1266 = dot(vec3(_1263, _1264, _1265), vec3(_1263, _1264, _1265));
        float _1271 = (_1266 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1266);
        float _1279 = (dot(vec3(_772, _773, _774), vec3(_1271 * _1263, _1271 * _1264, _1271 * _1265)) + 1.0) * 0.5;
        float _3975 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
        float _1288 = sqrt(((_1264 * _1264) + (_1263 * _1263)) + (_1265 * _1265)) / (_1176 + 9.9999997473787516355514526367188e-06);
        float _3986 = isnan(0.0) ? _1288 : (isnan(_1288) ? 0.0 : max(_1288, 0.0));
        float _1289 = isnan(1.0) ? _3986 : (isnan(_3986) ? 1.0 : min(_3986, 1.0));
        float _1290 = _1289 * 2.0;
        float _1294 = (1.0 - _1289) / (_1289 + 1.0);
        float _3997 = isnan(0.0) ? _1294 : (isnan(_1294) ? 0.0 : max(_1294, 0.0));
        float _1295 = isnan(1.0) ? _3997 : (isnan(_3997) ? 1.0 : min(_3997, 1.0));
        float _1304 = ((((1.0 - _1295) * (_1290 + 2.0)) * exp2(log2(isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0))) * (_1290 + 1.0))) + _1295) * _1176;
        _1312 = _1143;
        _1314 = _1142;
        _1315 = _1141;
        _1316 = _1153;
        _1317 = _1152;
        _1318 = _1151;
        _1319 = _1163;
        _1320 = _1162;
        _1321 = _1161;
        _1322 = _1176;
        _1323 = _1175;
        _1324 = _1174;
        _1325 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0)));
        _1326 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0)));
        _1327 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0)));
    }
    else
    {
        _1312 = _1313;
        _1314 = _1313;
        _1315 = _1313;
        _1316 = _1313;
        _1317 = _1313;
        _1318 = _1313;
        _1319 = _1313;
        _1320 = _1313;
        _1321 = _1313;
        _1322 = _1313;
        _1323 = _1313;
        _1324 = _1313;
        _1325 = 0.0;
        _1326 = 0.0;
        _1327 = 0.0;
    }
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    float _1628;
    float _1629;
    float _1630;
    float _1631;
    float _1632;
    float _1633;
    float _1634;
    float _1635;
    float _1636;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1353 = fma(_1010, cbModelParam._m0[30u].z, fma(_1006, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1002));
        float _1357 = fma(_1010, cbModelParam._m0[31u].z, fma(_1006, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1002));
        float _1361 = fma(_1010, cbModelParam._m0[32u].z, fma(_1006, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1002));
        float _1384 = _1002 + _772;
        float _1385 = _1006 + _773;
        float _1386 = _1010 + _774;
        float _1396 = fma(_1386, cbModelParam._m0[30u].z, fma(_1385, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1384)) - _1353;
        float _1397 = fma(_1386, cbModelParam._m0[31u].z, fma(_1385, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1384)) - _1357;
        float _1398 = fma(_1386, cbModelParam._m0[32u].z, fma(_1385, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1384)) - _1361;
        float _1402 = inversesqrt(dot(vec3(_1396, _1397, _1398), vec3(_1396, _1397, _1398)));
        float _1415 = ((_1402 * _1396) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1353 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1416 = ((_1402 * _1397) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1357 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1417 = ((_1402 * _1398) / cbModelParam._m0[35u].z) + ((((((_1361 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1419 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1415, _1416, _1417), 0.0);
        vec4 _1426 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1415, _1416, _1417), 0.0);
        vec4 _1433 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1415, _1416, _1417), 0.0);
        vec4 _1440 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1415, _1416, _1417), 0.0);
        float _1452 = exp2((_1419.w + (-0.5)) * 20.0) * 2.0;
        float _1453 = _1452 * (_1419.x + (-0.5));
        float _1454 = _1452 * (_1419.y + (-0.5));
        float _1455 = _1452 * (_1419.z + (-0.5));
        float _1462 = exp2((_1426.w + (-0.5)) * 20.0) * 2.0;
        float _1463 = _1462 * (_1426.x + (-0.5));
        float _1464 = _1462 * (_1426.y + (-0.5));
        float _1465 = _1462 * (_1426.z + (-0.5));
        float _1472 = exp2((_1433.w + (-0.5)) * 20.0) * 2.0;
        float _1473 = _1472 * (_1433.x + (-0.5));
        float _1474 = _1472 * (_1433.y + (-0.5));
        float _1475 = _1472 * (_1433.z + (-0.5));
        float _1482 = exp2((_1440.w + (-0.5)) * 20.0) * 2.0;
        float _1483 = _1482 * (_1440.x + (-0.5));
        float _1484 = _1482 * (_1440.y + (-0.5));
        float _1485 = _1482 * (_1440.z + (-0.5));
        float _1486 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1487 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1488 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1489 = _1453 * 0.5;
        float _1490 = _1463 * 0.5;
        float _1491 = _1473 * 0.5;
        float _1492 = dot(vec3(_1489, _1490, _1491), vec3(_1489, _1490, _1491));
        float _1497 = (_1492 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1492);
        float _1505 = (dot(vec3(_772, _773, _774), vec3(_1497 * _1489, _1497 * _1490, _1497 * _1491)) + 1.0) * 0.5;
        float _4038 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1514 = sqrt(((_1490 * _1490) + (_1489 * _1489)) + (_1491 * _1491)) / (_1486 + 9.9999997473787516355514526367188e-06);
        float _4049 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1515 = isnan(1.0) ? _4049 : (isnan(_4049) ? 1.0 : min(_4049, 1.0));
        float _1516 = _1515 * 2.0;
        float _1520 = (1.0 - _1515) / (_1515 + 1.0);
        float _4060 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
        float _1521 = isnan(1.0) ? _4060 : (isnan(_4060) ? 1.0 : min(_4060, 1.0));
        float _1530 = ((((1.0 - _1521) * (_1516 + 2.0)) * exp2(log2(isnan(1.0) ? _4038 : (isnan(_4038) ? 1.0 : min(_4038, 1.0))) * (_1516 + 1.0))) + _1521) * _1486;
        float _1531 = _1454 * 0.5;
        float _1532 = _1464 * 0.5;
        float _1533 = _1474 * 0.5;
        float _1534 = dot(vec3(_1531, _1532, _1533), vec3(_1531, _1532, _1533));
        float _1539 = (_1534 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1534);
        float _1547 = (dot(vec3(_772, _773, _774), vec3(_1539 * _1531, _1539 * _1532, _1539 * _1533)) + 1.0) * 0.5;
        float _4071 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
        float _1556 = sqrt(((_1532 * _1532) + (_1531 * _1531)) + (_1533 * _1533)) / (_1487 + 9.9999997473787516355514526367188e-06);
        float _4082 = isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0));
        float _1557 = isnan(1.0) ? _4082 : (isnan(_4082) ? 1.0 : min(_4082, 1.0));
        float _1558 = _1557 * 2.0;
        float _1562 = (1.0 - _1557) / (_1557 + 1.0);
        float _4093 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
        float _1563 = isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0));
        float _1572 = ((((1.0 - _1563) * (_1558 + 2.0)) * exp2(log2(isnan(1.0) ? _4071 : (isnan(_4071) ? 1.0 : min(_4071, 1.0))) * (_1558 + 1.0))) + _1563) * _1487;
        float _1573 = _1455 * 0.5;
        float _1574 = _1465 * 0.5;
        float _1575 = _1475 * 0.5;
        float _1576 = dot(vec3(_1573, _1574, _1575), vec3(_1573, _1574, _1575));
        float _1581 = (_1576 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1576);
        float _1589 = (dot(vec3(_772, _773, _774), vec3(_1581 * _1573, _1581 * _1574, _1581 * _1575)) + 1.0) * 0.5;
        float _4104 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1598 = sqrt(((_1574 * _1574) + (_1573 * _1573)) + (_1575 * _1575)) / (_1488 + 9.9999997473787516355514526367188e-06);
        float _4115 = isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0));
        float _1599 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
        float _1600 = _1599 * 2.0;
        float _1604 = (1.0 - _1599) / (_1599 + 1.0);
        float _4126 = isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0));
        float _1605 = isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0));
        float _1614 = ((((1.0 - _1605) * (_1600 + 2.0)) * exp2(log2(isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0))) * (_1600 + 1.0))) + _1605) * _1488;
        _1622 = _1455;
        _1623 = _1454;
        _1624 = _1453;
        _1625 = _1465;
        _1626 = _1464;
        _1627 = _1463;
        _1628 = _1475;
        _1629 = _1474;
        _1630 = _1473;
        _1631 = _1488;
        _1632 = _1487;
        _1633 = _1486;
        _1634 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0)));
        _1635 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0)));
        _1636 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0)));
    }
    else
    {
        _1622 = _1313;
        _1623 = _1313;
        _1624 = _1313;
        _1625 = _1313;
        _1626 = _1313;
        _1627 = _1313;
        _1628 = _1313;
        _1629 = _1313;
        _1630 = _1313;
        _1631 = _1313;
        _1632 = _1313;
        _1633 = _1313;
        _1634 = 0.0;
        _1635 = 0.0;
        _1636 = 0.0;
    }
    float _1646 = (cbModelParam._m0[1u].x * (_1634 - _1325)) + _1325;
    float _1647 = (cbModelParam._m0[1u].x * (_1635 - _1326)) + _1326;
    float _1648 = (cbModelParam._m0[1u].x * (_1636 - _1327)) + _1327;
    float _1669 = fma(_1648, cbSceneParam._m0[89u].z, fma(_1647, cbSceneParam._m0[89u].y, _1646 * cbSceneParam._m0[89u].x));
    float _1672 = fma(_1648, cbSceneParam._m0[90u].z, fma(_1647, cbSceneParam._m0[90u].y, _1646 * cbSceneParam._m0[90u].x));
    float _1675 = fma(_1648, cbSceneParam._m0[91u].z, fma(_1647, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1646));
    float _1690 = _947 * 0.5;
    float _1691 = _948 * 0.5;
    float _1692 = _949 * 0.5;
    float _1693 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1624, _1627, _1630, _1633));
    float _1696 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1623, _1626, _1629, _1632));
    float _1699 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1622, _1625, _1628, _1631));
    float _1733;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1706 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1312, _1316, _1319, _1322));
        float _1710 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1314, _1317, _1320, _1323));
        float _1714 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1315, _1318, _1321, _1324));
        float _1721 = dot(vec4(cbModelParam._m0[39u]), vec4(_1690, _1691, _1692, 1.0));
        _1733 = dot(vec3(isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0)), isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0)), isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1721) ? 0.0 : (isnan(0.0) ? _1721 : max(0.0, _1721))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1733 = 1.0;
    }
    float _1744;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1735 = dot(vec4(cbModelParam._m0[40u]), vec4(_1690, _1691, _1692, 1.0));
        _1744 = dot(vec3(isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0)), isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0)), isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1735) ? 0.0 : (isnan(0.0) ? _1735 : max(0.0, _1735))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1744 = 1.0;
    }
    float _1748 = (_1744 * cbModelParam._m0[1u].x) + (_1733 * (1.0 - cbModelParam._m0[1u].x));
    float _1758 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _775);
    float _1759 = isnan(_1758) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1758 : min(cbModelParam._m0[25u].z, _1758));
    float _1839;
    float _1841;
    float _1843;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1806 = fma(_1010, cbModelParam._m0[13u].z, fma(_1006, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1002)) + cbModelParam._m0[13u].w;
        float _1810 = fma(_1010, cbModelParam._m0[14u].z, fma(_1006, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1002)) + cbModelParam._m0[14u].w;
        float _1814 = fma(_1010, cbModelParam._m0[15u].z, fma(_1006, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1002)) + cbModelParam._m0[15u].w;
        float _1817 = fma(_949, cbModelParam._m0[13u].z, fma(_948, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _947));
        float _1820 = fma(_949, cbModelParam._m0[14u].z, fma(_948, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _947));
        float _1823 = fma(_949, cbModelParam._m0[15u].z, fma(_948, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _947));
        float _1851;
        if (_1817 > 0.0)
        {
            _1851 = abs((1.0 - _1806) / _1817);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1817 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1806 + 1.0) / _1817);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1851 = frontier_phi_14_12_ladder;
        }
        float _2075;
        if (_1820 > 0.0)
        {
            _2075 = abs((1.0 - _1810) / _1820);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1820 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1810 + 1.0) / _1820);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2075 = frontier_phi_23_19_ladder;
        }
        float _2332;
        if (_1823 > 0.0)
        {
            _2332 = abs((1.0 - _1814) / _1823);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1823 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1814 + 1.0) / _1823);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2332 = frontier_phi_35_30_ladder;
        }
        float _2334 = isnan(_2075) ? _1851 : (isnan(_1851) ? _2075 : min(_1851, _2075));
        float _2335 = isnan(_2332) ? _2334 : (isnan(_2334) ? _2332 : min(_2334, _2332));
        float _2339 = (_2335 * _1817) + _1806;
        float _2340 = (_2335 * _1820) + _1810;
        float _2341 = (_2335 * _1823) + _1814;
        float _2342 = _2335 * 9.9999997473787516355514526367188e-05;
        float _2344 = (-1.0) - _2342;
        float _2346 = _2342 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2341 > _2346) || ((_2341 < _2344) || ((_2340 > _2346) || ((_2340 < _2344) || ((_2339 < _2344) || (_2339 > _2346))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2469 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2341, cbModelParam._m0[9u].z, fma(_2340, cbModelParam._m0[9u].y, _2339 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2341, cbModelParam._m0[10u].z, fma(_2340, cbModelParam._m0[10u].y, _2339 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2341, cbModelParam._m0[11u].z, fma(_2340, cbModelParam._m0[11u].y, _2339 * cbModelParam._m0[11u].x))), _1759);
            frontier_phi_13_35_ladder = _2469.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2469.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2469.x * cbModelParam._m0[1u].y;
        }
        _1839 = frontier_phi_13_35_ladder_2;
        _1841 = frontier_phi_13_35_ladder_1;
        _1843 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1827 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_947, _948, _949), _1759);
        _1839 = _1827.x * cbModelParam._m0[1u].y;
        _1841 = _1827.y * cbModelParam._m0[1u].y;
        _1843 = _1827.z * cbModelParam._m0[1u].y;
    }
    float _1847 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _775);
    float _1848 = isnan(_1847) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1847 : min(cbModelParam._m0[25u].w, _1847));
    float _1937;
    float _1939;
    float _1941;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1901 = fma(_1010, cbModelParam._m0[21u].z, fma(_1006, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1002)) + cbModelParam._m0[21u].w;
        float _1905 = fma(_1010, cbModelParam._m0[22u].z, fma(_1006, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1002)) + cbModelParam._m0[22u].w;
        float _1909 = fma(_1010, cbModelParam._m0[23u].z, fma(_1006, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1002)) + cbModelParam._m0[23u].w;
        float _1912 = fma(_949, cbModelParam._m0[21u].z, fma(_948, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _947));
        float _1915 = fma(_949, cbModelParam._m0[22u].z, fma(_948, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _947));
        float _1918 = fma(_949, cbModelParam._m0[23u].z, fma(_948, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _947));
        float _2080;
        if (_1912 > 0.0)
        {
            _2080 = abs((1.0 - _1901) / _1912);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1912 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1901 + 1.0) / _1912);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2080 = frontier_phi_25_21_ladder;
        }
        float _2359;
        if (_1915 > 0.0)
        {
            _2359 = abs((1.0 - _1905) / _1915);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1915 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1905 + 1.0) / _1915);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2359 = frontier_phi_37_32_ladder;
        }
        float _2572;
        if (_1918 > 0.0)
        {
            _2572 = abs((1.0 - _1909) / _1918);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1918 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1909 + 1.0) / _1918);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2572 = frontier_phi_46_43_ladder;
        }
        float _2574 = isnan(_2359) ? _2080 : (isnan(_2080) ? _2359 : min(_2080, _2359));
        float _2575 = isnan(_2572) ? _2574 : (isnan(_2574) ? _2572 : min(_2574, _2572));
        float _2579 = (_2575 * _1912) + _1901;
        float _2580 = (_2575 * _1915) + _1905;
        float _2581 = (_2575 * _1918) + _1909;
        float _2582 = _2575 * 9.9999997473787516355514526367188e-05;
        float _2583 = (-1.0) - _2582;
        float _2585 = _2582 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2581 > _2585) || ((_2581 < _2583) || ((_2580 > _2585) || ((_2580 < _2583) || ((_2579 < _2583) || (_2579 > _2585))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2825 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2581, cbModelParam._m0[17u].z, fma(_2580, cbModelParam._m0[17u].y, _2579 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2581, cbModelParam._m0[18u].z, fma(_2580, cbModelParam._m0[18u].y, _2579 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2581, cbModelParam._m0[19u].z, fma(_2580, cbModelParam._m0[19u].y, _2579 * cbModelParam._m0[19u].x))), _1848);
            frontier_phi_22_46_ladder = _2825.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2825.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2825.x * cbModelParam._m0[1u].z;
        }
        _1937 = frontier_phi_22_46_ladder_2;
        _1939 = frontier_phi_22_46_ladder_1;
        _1941 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1921 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_947, _948, _949), _1848);
        _1937 = _1921.x * cbModelParam._m0[1u].z;
        _1939 = _1921.y * cbModelParam._m0[1u].z;
        _1941 = _1921.z * cbModelParam._m0[1u].z;
    }
    float _1954 = (((_973 * _924) + _974) * _939) * ((cbModelParam._m0[1u].w * (_1937 - _1839)) + _1839);
    float _1956 = (((_973 * _926) + _974) * _939) * ((cbModelParam._m0[1u].w * (_1939 - _1841)) + _1841);
    float _1958 = (((_973 * _927) + _974) * _939) * ((cbModelParam._m0[1u].w * (_1941 - _1843)) + _1843);
    float _1961 = fma(_1958, cbSceneParam._m0[89u].z, fma(_1956, cbSceneParam._m0[89u].y, _1954 * cbSceneParam._m0[89u].x));
    float _1964 = fma(_1958, cbSceneParam._m0[90u].z, fma(_1956, cbSceneParam._m0[90u].y, _1954 * cbSceneParam._m0[90u].x));
    float _1967 = fma(_1958, cbSceneParam._m0[91u].z, fma(_1956, cbSceneParam._m0[91u].y, _1954 * cbSceneParam._m0[91u].x));
    vec4 _1975 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_860, _861));
    float _1977 = _1975.w;
    float _1989 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1977);
    float _1990 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1977);
    float _1991 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1977);
    uvec4 _1995 = floatBitsToUint(cbInstanceData._m0[_899 + 5u]);
    uint _1997 = _1995.x * 14u;
    uint _1998 = _1997 + 13u;
    float _2005 = _939 + (-1.0);
    float _2010 = (cbLight._m0[_1998].x * _2005) + 1.0;
    float _2011 = (cbLight._m0[_1998].y * _2005) + 1.0;
    float _2012 = (cbLight._m0[_1998].z * _2005) + 1.0;
    float _2013 = (cbLight._m0[_1998].w * _2005) + 1.0;
    uint _2014 = _1997 + 5u;
    float _2020 = isnan(1.0) ? _2011 : (isnan(_2011) ? 1.0 : min(_2011, 1.0));
    uint _2024 = _1997 + 4u;
    float _2034 = isnan(1.0) ? _2010 : (isnan(_2010) ? 1.0 : min(_2010, 1.0));
    uint _2038 = _1997 | 1u;
    float _2049 = dot(vec3(cbLight._m0[_1997].xyz), vec3(_772, _773, _774));
    float _2052 = dot(vec3(cbLight._m0[_2038].xyz), vec3(_772, _773, _774));
    float _4262 = isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0));
    float _4273 = isnan(0.0) ? _2052 : (isnan(_2052) ? 0.0 : max(_2052, 0.0));
    float _2057 = (isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0))) * 0.3183098733425140380859375;
    float _2059 = (isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0))) * 0.3183098733425140380859375;
    float _2066 = ((cbLight._m0[_2014].x * _2020) * _2059) + (((cbLight._m0[_2024].x * _1989) * _2034) * _2057);
    float _2067 = ((_2020 * cbLight._m0[_2014].y) * _2059) + (((cbLight._m0[_2024].y * _1990) * _2034) * _2057);
    float _2068 = ((_2020 * cbLight._m0[_2014].z) * _2059) + (((cbLight._m0[_2024].z * _1991) * _2034) * _2057);
    uvec4 _2072 = floatBitsToUint(cbLight._m0[_1997 + 12u]);
    bool _2074 = _2072.x == 0u;
    float _2085;
    float _2087;
    float _2089;
    if (_2074)
    {
        _2085 = _2066;
        _2087 = _2067;
        _2089 = _2068;
    }
    else
    {
        uint _2093 = _1997 + 6u;
        float _2109 = (dot(vec3(cbLight._m0[_1997 + 2u].xyz), vec3(_772, _773, _774)) * 0.5) + 0.5;
        float _2110 = _2109 * _2109;
        float _4284 = isnan(0.0) ? _2110 : (isnan(_2110) ? 0.0 : max(_2110, 0.0));
        float _2111 = isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0));
        float _2112 = isnan(1.0) ? _2012 : (isnan(_2012) ? 1.0 : min(_2012, 1.0));
        _2085 = (((cbLight._m0[_2093].x * 0.3183098733425140380859375) * _2111) * _2112) + _2066;
        _2087 = (((cbLight._m0[_2093].y * 0.3183098733425140380859375) * _2111) * _2112) + _2067;
        _2089 = (((cbLight._m0[_2093].z * 0.3183098733425140380859375) * _2111) * _2112) + _2068;
    }
    bool _2092 = _2072.y == 0u;
    float _2130;
    float _2132;
    float _2134;
    if (_2092)
    {
        _2130 = _2085;
        _2132 = _2087;
        _2134 = _2089;
    }
    else
    {
        uint _2303 = _1997 + 7u;
        float _2319 = (dot(vec3(cbLight._m0[_1997 + 3u].xyz), vec3(_772, _773, _774)) * 0.5) + 0.5;
        float _2320 = _2319 * _2319;
        float _4300 = isnan(0.0) ? _2320 : (isnan(_2320) ? 0.0 : max(_2320, 0.0));
        float _2321 = isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0));
        float _2322 = isnan(1.0) ? _2013 : (isnan(_2013) ? 1.0 : min(_2013, 1.0));
        _2130 = (((cbLight._m0[_2303].x * 0.3183098733425140380859375) * _2321) * _2322) + _2085;
        _2132 = (((cbLight._m0[_2303].y * 0.3183098733425140380859375) * _2321) * _2322) + _2087;
        _2134 = (((cbLight._m0[_2303].z * 0.3183098733425140380859375) * _2321) * _2322) + _2089;
    }
    uint _2137 = _1997 + 8u;
    float _2150 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1997].w)) * _775) * 0.949999988079071044921875);
    float _2151 = _2150 * _2150;
    float _2152 = cbLight._m0[_1997].x + _852;
    float _2153 = cbLight._m0[_1997].y + _853;
    float _2154 = cbLight._m0[_1997].z + _854;
    float _2158 = inversesqrt(dot(vec3(_2152, _2153, _2154), vec3(_2152, _2153, _2154)));
    float _2159 = _2158 * _2152;
    float _2160 = _2158 * _2153;
    float _2161 = _2158 * _2154;
    float _2162 = dot(vec3(_772, _773, _774), vec3(cbLight._m0[_1997].xyz));
    float _4316 = isnan(0.0) ? _2162 : (isnan(_2162) ? 0.0 : max(_2162, 0.0));
    float _2165 = isnan(1.0) ? _4316 : (isnan(_4316) ? 1.0 : min(_4316, 1.0));
    float _4327 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
    float _2166 = isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0));
    float _2167 = dot(vec3(_772, _773, _774), vec3(_2159, _2160, _2161));
    float _4338 = isnan(0.0) ? _2167 : (isnan(_2167) ? 0.0 : max(_2167, 0.0));
    float _2170 = isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0));
    float _2171 = dot(vec3(cbLight._m0[_1997].xyz), vec3(_2159, _2160, _2161));
    float _4349 = isnan(0.0) ? _2171 : (isnan(_2171) ? 0.0 : max(_2171, 0.0));
    float _2175 = _2151 * _2151;
    float _2179 = ((_2170 * _2170) * (_2175 + (-1.0))) + 1.0;
    float _2187 = exp2(log2(1.0 - (isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0)))) * 5.0);
    float _2188 = 0.959999978542327880859375 - _921;
    float _2190 = 0.959999978542327880859375 - _922;
    float _2191 = 0.959999978542327880859375 - _923;
    float _2198 = 1.0 - _2151;
    float _2209 = (0.5 / (((_2166 * ((_2165 * _2198) + _2151)) + 9.9999999392252902907785028219223e-09) + (((_2166 * _2198) + _2151) * _2165))) * _2165;
    float _4360 = isnan(0.0) ? _2209 : (isnan(_2209) ? 0.0 : max(_2209, 0.0));
    float _2211 = (isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0))) * (_2175 / ((_2179 * _2179) * 3.141590118408203125));
    uint _2225 = _1997 + 9u;
    float _2236 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2038].w)) * _775) * 0.949999988079071044921875);
    float _2237 = _2236 * _2236;
    float _2238 = cbLight._m0[_2038].x + _852;
    float _2239 = cbLight._m0[_2038].y + _853;
    float _2240 = cbLight._m0[_2038].z + _854;
    float _2244 = inversesqrt(dot(vec3(_2238, _2239, _2240), vec3(_2238, _2239, _2240)));
    float _2245 = _2244 * _2238;
    float _2246 = _2244 * _2239;
    float _2247 = _2244 * _2240;
    float _2248 = dot(vec3(_772, _773, _774), vec3(cbLight._m0[_2038].xyz));
    float _4371 = isnan(0.0) ? _2248 : (isnan(_2248) ? 0.0 : max(_2248, 0.0));
    float _2251 = isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0));
    float _2252 = dot(vec3(_772, _773, _774), vec3(_2245, _2246, _2247));
    float _4382 = isnan(0.0) ? _2252 : (isnan(_2252) ? 0.0 : max(_2252, 0.0));
    float _2255 = isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0));
    float _2256 = dot(vec3(cbLight._m0[_2038].xyz), vec3(_2245, _2246, _2247));
    float _4393 = isnan(0.0) ? _2256 : (isnan(_2256) ? 0.0 : max(_2256, 0.0));
    float _2260 = _2237 * _2237;
    float _2264 = ((_2255 * _2255) * (_2260 + (-1.0))) + 1.0;
    float _2271 = exp2(log2(1.0 - (isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0)))) * 5.0);
    float _2278 = 1.0 - _2237;
    float _2288 = (0.5 / (((_2166 * ((_2251 * _2278) + _2237)) + 9.9999999392252902907785028219223e-09) + (((_2166 * _2278) + _2237) * _2251))) * _2251;
    float _4404 = isnan(0.0) ? _2288 : (isnan(_2288) ? 0.0 : max(_2288, 0.0));
    float _2290 = (isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0))) * (_2260 / ((_2264 * _2264) * 3.141590118408203125));
    float _2300 = (((((_2271 * _2188) + _924) * cbLight._m0[_2225].x) * _2290) * _2020) + ((((cbLight._m0[_2137].x * _1989) * ((_2187 * _2188) + _924)) * _2211) * _2034);
    float _2301 = (((((_2271 * _2190) + _926) * cbLight._m0[_2225].y) * _2290) * _2020) + ((((cbLight._m0[_2137].y * _1990) * ((_2187 * _2190) + _926)) * _2211) * _2034);
    float _2302 = (((((_2271 * _2191) + _927) * cbLight._m0[_2225].z) * _2290) * _2020) + ((((cbLight._m0[_2137].z * _1991) * ((_2187 * _2191) + _927)) * _2211) * _2034);
    float _2364;
    float _2366;
    float _2368;
    if (_2074)
    {
        _2364 = _2300;
        _2366 = _2301;
        _2368 = _2302;
    }
    else
    {
        uint _2370 = _1997 + 2u;
        uint _2374 = _1997 + 10u;
        float _2388 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2370].w)) * _775) * 0.949999988079071044921875);
        float _2389 = _2388 * _2388;
        float _2390 = cbLight._m0[_2370].x + _852;
        float _2391 = cbLight._m0[_2370].y + _853;
        float _2392 = cbLight._m0[_2370].z + _854;
        float _2396 = inversesqrt(dot(vec3(_2390, _2391, _2392), vec3(_2390, _2391, _2392)));
        float _2397 = _2396 * _2390;
        float _2398 = _2396 * _2391;
        float _2399 = _2396 * _2392;
        float _2400 = dot(vec3(_772, _773, _774), vec3(cbLight._m0[_2370].xyz));
        float _4415 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
        float _2403 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
        float _2404 = dot(vec3(_772, _773, _774), vec3(_2397, _2398, _2399));
        float _4426 = isnan(0.0) ? _2404 : (isnan(_2404) ? 0.0 : max(_2404, 0.0));
        float _2407 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
        float _2408 = dot(vec3(cbLight._m0[_2370].xyz), vec3(_2397, _2398, _2399));
        float _4437 = isnan(0.0) ? _2408 : (isnan(_2408) ? 0.0 : max(_2408, 0.0));
        float _2412 = _2389 * _2389;
        float _2416 = ((_2407 * _2407) * (_2412 + (-1.0))) + 1.0;
        float _2423 = exp2(log2(1.0 - (isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0)))) * 5.0);
        float _2430 = 1.0 - _2389;
        float _2440 = (0.5 / (((_2166 * ((_2403 * _2430) + _2389)) + 9.9999999392252902907785028219223e-09) + (((_2166 * _2430) + _2389) * _2403))) * _2403;
        float _4448 = isnan(0.0) ? _2440 : (isnan(_2440) ? 0.0 : max(_2440, 0.0));
        float _2442 = (isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0))) * (_2412 / ((_2416 * _2416) * 3.141590118408203125));
        float _2443 = isnan(1.0) ? _2012 : (isnan(_2012) ? 1.0 : min(_2012, 1.0));
        _2364 = (((((_2423 * _2188) + _924) * cbLight._m0[_2374].x) * _2442) * _2443) + _2300;
        _2366 = (((((_2423 * _2190) + _926) * cbLight._m0[_2374].y) * _2442) * _2443) + _2301;
        _2368 = (((((_2423 * _2191) + _927) * cbLight._m0[_2374].z) * _2442) * _2443) + _2302;
    }
    float _2478;
    float _2480;
    float _2482;
    if (_2092)
    {
        _2478 = _2364;
        _2480 = _2366;
        _2482 = _2368;
    }
    else
    {
        uint _2489 = _1997 + 3u;
        uint _2493 = _1997 + 11u;
        float _2507 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2489].w)) * _775) * 0.949999988079071044921875);
        float _2508 = _2507 * _2507;
        float _2509 = cbLight._m0[_2489].x + _852;
        float _2510 = cbLight._m0[_2489].y + _853;
        float _2511 = cbLight._m0[_2489].z + _854;
        float _2515 = inversesqrt(dot(vec3(_2509, _2510, _2511), vec3(_2509, _2510, _2511)));
        float _2516 = _2515 * _2509;
        float _2517 = _2515 * _2510;
        float _2518 = _2515 * _2511;
        float _2519 = dot(vec3(_772, _773, _774), vec3(cbLight._m0[_2489].xyz));
        float _4464 = isnan(0.0) ? _2519 : (isnan(_2519) ? 0.0 : max(_2519, 0.0));
        float _2522 = isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0));
        float _2523 = dot(vec3(_772, _773, _774), vec3(_2516, _2517, _2518));
        float _4475 = isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : max(_2523, 0.0));
        float _2526 = isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0));
        float _2527 = dot(vec3(cbLight._m0[_2489].xyz), vec3(_2516, _2517, _2518));
        float _4486 = isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : max(_2527, 0.0));
        float _2531 = _2508 * _2508;
        float _2535 = ((_2526 * _2526) * (_2531 + (-1.0))) + 1.0;
        float _2542 = exp2(log2(1.0 - (isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0)))) * 5.0);
        float _2549 = 1.0 - _2508;
        float _2559 = (0.5 / (((_2166 * ((_2522 * _2549) + _2508)) + 9.9999999392252902907785028219223e-09) + (((_2166 * _2549) + _2508) * _2522))) * _2522;
        float _4497 = isnan(0.0) ? _2559 : (isnan(_2559) ? 0.0 : max(_2559, 0.0));
        float _2561 = (isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0))) * (_2531 / ((_2535 * _2535) * 3.141590118408203125));
        float _2562 = isnan(1.0) ? _2013 : (isnan(_2013) ? 1.0 : min(_2013, 1.0));
        _2478 = (((((_2542 * _2188) + _924) * cbLight._m0[_2493].x) * _2561) * _2562) + _2364;
        _2480 = (((((_2542 * _2190) + _926) * cbLight._m0[_2493].y) * _2561) * _2562) + _2366;
        _2482 = (((((_2542 * _2191) + _927) * cbLight._m0[_2493].z) * _2561) * _2562) + _2368;
    }
    float _2697;
    float _2699;
    float _2701;
    float _2703;
    float _2705;
    float _2707;
    if (_1995.y == 0u)
    {
        float _2637 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2638 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2637;
        float _2639 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2637;
        float _2640 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2637;
        uvec4 _2652 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2653 = _2652.x;
        uint _2664 = uint((float(_2652.y) * floor(float(uint(cbSceneParam._m0[85u].y * _861) / _2653))) + floor(float(uint(cbSceneParam._m0[85u].x * _860) / _2653)));
        float _2674 = (log2(_2640 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2675 = isnan(0.0) ? _2674 : (isnan(_2674) ? 0.0 : max(_2674, 0.0));
        uint _2678 = uint(isnan(14.0) ? _2675 : (isnan(_2675) ? 14.0 : min(_2675, 14.0)));
        uvec4 _2683 = texelFetch(g_lightClusterGridBuffer, int(((_2678 << 2u) + (_2664 << 6u)) >> 2u));
        uint _2684 = _2683.x;
        uint _2685 = _2652.z;
        float _2830;
        float _2832;
        float _2834;
        float _2836;
        float _2838;
        float _2840;
        if (((((1u << ((_2685 >> 4u) & 15u)) + 4294967295u) & _2684) == 0u) || ((_2685 & 240u) == 0u))
        {
            _2830 = 0.0;
            _2832 = 0.0;
            _2834 = 0.0;
            _2836 = 0.0;
            _2838 = 0.0;
            _2840 = 0.0;
        }
        else
        {
            float _2831;
            float _2833;
            float _2835;
            float _2837;
            float _2839;
            float _2841;
            float _2983 = 0.0;
            float _2984 = 0.0;
            float _2985 = 0.0;
            float _2986 = 0.0;
            float _2987 = 0.0;
            float _2988 = 0.0;
            uint _2989 = 0u;
            uint _2998;
            bool _2999;
            for (;;)
            {
                _2998 = texelFetch(g_lightClassification, int((((_2678 << 5u) + (_2664 << 9u)) + (_2989 << 2u)) >> 2u)).x;
                _2999 = _2998 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2999)
                {
                    frontier_phi_61_pred = _2983;
                    frontier_phi_61_pred_1 = _2988;
                    frontier_phi_61_pred_2 = _2987;
                    frontier_phi_61_pred_3 = _2986;
                    frontier_phi_61_pred_4 = _2985;
                    frontier_phi_61_pred_5 = _2984;
                }
                else
                {
                    float _3107;
                    float _3108;
                    float _3109;
                    float _3110;
                    float _3111;
                    float _3112;
                    uint _3113;
                    _3107 = _2983;
                    _3108 = _2984;
                    _3109 = _2985;
                    _3110 = _2986;
                    _3111 = _2987;
                    _3112 = _2988;
                    _3113 = _2998;
                    float _3039;
                    float _3040;
                    float _3041;
                    float _3042;
                    float _3043;
                    float _3044;
                    for (;;)
                    {
                        uint _3117 = uint(findLSB(_3113)) + (_2989 << 5u);
                        uint _3114 = (_3113 + 4294967295u) & _3113;
                        uint _3119 = _3117 * 48u;
                        vec4 _3133 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3119)).x, texelFetch(g_PointLightRenderingBuffer, int(_3119 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3119 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3119 + 3u)).x));
                        uint _3139 = (_3117 * 48u) + 4u;
                        vec4 _3152 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3139)).x, texelFetch(g_PointLightRenderingBuffer, int(_3139 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3139 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3139 + 3u)).x));
                        uint _3158 = (_3117 * 48u) + 8u;
                        vec3 _3169 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3158)).x, texelFetch(g_PointLightRenderingBuffer, int(_3158 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3158 + 2u)).x));
                        float _3173 = _3133.x - _2638;
                        float _3174 = _3133.y - _2639;
                        float _3175 = _3133.z - _2640;
                        float _3176 = dot(vec3(_3173, _3174, _3175), vec3(_3173, _3174, _3175));
                        float _3179 = inversesqrt(_3176);
                        float _3180 = _3179 * _3173;
                        float _3181 = _3179 * _3174;
                        float _3182 = _3179 * _3175;
                        float _3183 = dot(vec3(_880, _883, _886), vec3(_3180, _3181, _3182));
                        float _3188 = 1.0 - (_3176 * _3133.w);
                        float _4523 = isnan(0.0) ? _3188 : (isnan(_3188) ? 0.0 : max(_3188, 0.0));
                        float _3189 = isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0));
                        float _3190 = sqrt(_3176) * _3152.w;
                        float _3193 = 1.39999997615814208984375 / (_3190 + 1.39999997615814208984375);
                        float _3194 = _3193 * _3193;
                        float _3197 = ((1.0 - _3194) * _3183) + _3194;
                        float _3200 = _3190 * _3190;
                        float _3204 = ((isnan(0.0) ? _3197 : (isnan(_3197) ? 0.0 : max(_3197, 0.0))) * _3189) / ((_3200 * 0.699999988079071044921875) + 1.0);
                        float _3208 = (-0.0) - _2638;
                        float _3209 = (-0.0) - _2639;
                        float _3210 = (-0.0) - _2640;
                        float _3214 = inversesqrt(dot(vec3(_3208, _3209, _3210), vec3(_3208, _3209, _3210)));
                        float _3215 = _3214 * _3208;
                        float _3216 = _3214 * _3209;
                        float _3217 = _3214 * _3210;
                        float _3225 = exp2(log2(1.0 / ((_3200 * 3.5) + 5.0)) * 0.25);
                        float _3226 = 1.0 - _955;
                        float _3233 = sqrt(1.0 - ((1.0 - (_3226 * _3226)) * (1.0 - (_3225 * _3225))));
                        float _3234 = _3233 * _3233;
                        float _3235 = _3234 * _3234;
                        float _3236 = _3215 + _3180;
                        float _3237 = _3216 + _3181;
                        float _3238 = _3217 + _3182;
                        float _3242 = inversesqrt(dot(vec3(_3236, _3237, _3238), vec3(_3236, _3237, _3238)));
                        float _3246 = dot(vec3(_880, _883, _886), vec3(_3215, _3216, _3217));
                        float _4539 = isnan(0.0) ? _3246 : (isnan(_3246) ? 0.0 : max(_3246, 0.0));
                        float _3249 = isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0));
                        float _3250 = dot(vec3(_880, _883, _886), vec3(_3242 * _3236, _3242 * _3237, _3242 * _3238));
                        float _4550 = isnan(0.0) ? _3250 : (isnan(_3250) ? 0.0 : max(_3250, 0.0));
                        float _3253 = isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0));
                        float _3257 = ((_3253 * _3253) * (_3235 + (-1.0))) + 1.0;
                        float _3258 = _3193 * _3234;
                        float _3259 = _3258 * _3258;
                        float _3262 = ((1.0 - _3259) * _3183) + _3259;
                        float _4561 = isnan(0.0) ? _3262 : (isnan(_3262) ? 0.0 : max(_3262, 0.0));
                        float _3263 = isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0));
                        float _3264 = 1.0 - _3234;
                        float _3274 = (0.5 / (((_3263 * ((_3249 * _3264) + _3234)) + 9.9999999392252902907785028219223e-09) + (((_3263 * _3264) + _3234) * _3249))) * _3263;
                        float _4572 = isnan(0.0) ? _3274 : (isnan(_3274) ? 0.0 : max(_3274, 0.0));
                        float _3285 = (((_3235 * 3.1415927410125732421875) * (isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0)))) / ((_3257 * _3257) * ((_3200 * 2.1991131305694580078125) + 3.141590118408203125))) * _3189;
                        _3042 = (_3204 * _3152.x) + _3110;
                        _3043 = (_3204 * _3152.y) + _3111;
                        _3044 = (_3204 * _3152.z) + _3112;
                        _3039 = (_3285 * _3169.x) + _3107;
                        _3040 = (_3285 * _3169.y) + _3108;
                        _3041 = (_3285 * _3169.z) + _3109;
                        if (_3114 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3107 = _3039;
                            _3108 = _3040;
                            _3109 = _3041;
                            _3110 = _3042;
                            _3111 = _3043;
                            _3112 = _3044;
                            _3113 = _3114;
                        }
                    }
                    frontier_phi_61_pred = _3039;
                    frontier_phi_61_pred_1 = _3044;
                    frontier_phi_61_pred_2 = _3043;
                    frontier_phi_61_pred_3 = _3042;
                    frontier_phi_61_pred_4 = _3041;
                    frontier_phi_61_pred_5 = _3040;
                }
                _2831 = frontier_phi_61_pred;
                _2841 = frontier_phi_61_pred_1;
                _2839 = frontier_phi_61_pred_2;
                _2837 = frontier_phi_61_pred_3;
                _2835 = frontier_phi_61_pred_4;
                _2833 = frontier_phi_61_pred_5;
                uint _2990 = _2989 + 1u;
                if (_2990 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2983 = _2831;
                    _2984 = _2833;
                    _2985 = _2835;
                    _2986 = _2837;
                    _2987 = _2839;
                    _2988 = _2841;
                    _2989 = _2990;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2830 = _2831;
            _2832 = _2833;
            _2834 = _2835;
            _2836 = _2837;
            _2838 = _2839;
            _2840 = _2841;
        }
        uvec4 _2844 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2845 = _2844.z;
        uint _2847 = (_2845 >> 8u) & 15u;
        float _2951;
        float _2953;
        float _2955;
        float _2957;
        float _2959;
        float _2961;
        if (((4294967295u << _2847) & _2684) == 0u)
        {
            _2951 = _2830;
            _2953 = _2832;
            _2955 = _2834;
            _2957 = _2836;
            _2959 = _2838;
            _2961 = _2840;
        }
        else
        {
            float _2976 = inversesqrt(dot(vec3(_2638, _2639, _2640), vec3(_2638, _2639, _2640)));
            float _2977 = _2976 * _2638;
            float _2978 = _2976 * _2639;
            float _2979 = _2976 * _2640;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2847 < ((_2845 >> 12u) & 15u))
            {
                float _2952;
                float _2954;
                float _2956;
                float _2958;
                float _2960;
                float _2962;
                float _3090 = _2830;
                float _3091 = _2832;
                float _3092 = _2834;
                float _3093 = _2836;
                float _3094 = _2838;
                float _3095 = _2840;
                uint _3096 = _2847;
                uint _3105;
                bool _3106;
                for (;;)
                {
                    _3105 = texelFetch(g_lightClassification, int((((_2678 << 5u) + (_2664 << 9u)) + (_3096 << 2u)) >> 2u)).x;
                    _3106 = _3105 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3106)
                    {
                        frontier_phi_67_pred = _3093;
                        frontier_phi_67_pred_1 = _3094;
                        frontier_phi_67_pred_2 = _3095;
                        frontier_phi_67_pred_3 = _3092;
                        frontier_phi_67_pred_4 = _3091;
                        frontier_phi_67_pred_5 = _3090;
                    }
                    else
                    {
                        float _3290;
                        float _3291;
                        float _3292;
                        float _3293;
                        float _3294;
                        float _3295;
                        float _3584;
                        float _3585;
                        float _3586;
                        float _3587;
                        float _3588;
                        float _3589;
                        float _3303 = _3090;
                        float _3304 = _3091;
                        float _3305 = _3092;
                        float _3306 = _3093;
                        float _3307 = _3094;
                        float _3308 = _3095;
                        uint _3309 = _3105;
                        uint _3310;
                        vec4 _3335;
                        float _3336;
                        vec4 _3351;
                        vec3 _3363;
                        vec4 _3378;
                        vec4 _3393;
                        float _3440;
                        bool _3441;
                        for (;;)
                        {
                            uint _3320 = ((_3096 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3309));
                            _3310 = (_3309 + 4294967295u) & _3309;
                            uint _3322 = _3320 * 40u;
                            _3335 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3322)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3322 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3322 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3322 + 3u)).x));
                            _3336 = _3335.w;
                            uint _3338 = (_3320 * 40u) + 4u;
                            _3351 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3338)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3338 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3338 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3338 + 3u)).x));
                            uint _3353 = (_3320 * 40u) + 8u;
                            _3363 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3353)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3353 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3353 + 2u)).x));
                            uint _3365 = (_3320 * 40u) + 16u;
                            _3378 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3365)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3365 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3365 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3365 + 3u)).x));
                            uint _3380 = (_3320 * 40u) + 20u;
                            _3393 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3380)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3380 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3380 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3380 + 3u)).x));
                            uint _3396 = (_3320 * 40u) + 24u;
                            vec4 _3409 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3396)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3396 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3396 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3396 + 3u)).x));
                            uint _3415 = (_3320 * 40u) + 28u;
                            vec4 _3428 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3415)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3415 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3415 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3415 + 3u)).x));
                            _3440 = fma(_2640, _3428.z, fma(_2639, _3428.y, _3428.x * _2638)) + _3428.w;
                            _3441 = !((fma(_2640, _3409.z, fma(_2639, _3409.y, _3409.x * _2638)) + _3409.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3441)
                            {
                                float _3468 = _3335.x - _2638;
                                float _3469 = _3335.y - _2639;
                                float _3470 = _3335.z - _2640;
                                float _3471 = dot(vec3(_3468, _3469, _3470), vec3(_3468, _3469, _3470));
                                float _3474 = inversesqrt(_3471);
                                float _3475 = _3474 * _3468;
                                float _3476 = _3474 * _3469;
                                float _3477 = _3474 * _3470;
                                float _3481 = 1.0 - (_3471 / (_3336 * _3336));
                                float _4583 = isnan(0.0) ? _3481 : (isnan(_3481) ? 0.0 : max(_3481, 0.0));
                                float _3482 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
                                float _3486 = sqrt(_3471) * _3351.w;
                                float _3488 = 1.39999997615814208984375 / (_3486 + 1.39999997615814208984375);
                                float _3489 = _3488 * _3488;
                                float _3492 = ((1.0 - _3489) * dot(vec3(_3475, _3476, _3477), vec3(_880, _883, _886))) + _3489;
                                float _3495 = _3486 * _3486;
                                float _3499 = (fma(_2640, _3378.z, fma(_2639, _3378.y, _3378.x * _2638)) + _3378.w) / _3440;
                                float _3500 = (fma(_2640, _3393.z, fma(_2639, _3393.y, _3393.x * _2638)) + _3393.w) / _3440;
                                float _3504 = 1.0 - dot(vec2(_3499, _3500), vec2(_3499, _3500));
                                float _4599 = isnan(0.0) ? _3504 : (isnan(_3504) ? 0.0 : max(_3504, 0.0));
                                float _3505 = isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0));
                                float _3506 = _3505 * (((isnan(0.0) ? _3492 : (isnan(_3492) ? 0.0 : max(_3492, 0.0))) * _3482) / ((_3495 * 0.699999988079071044921875) + 1.0));
                                float _3518 = exp2(log2(1.0 / ((_3495 * 3.5) + 5.0)) * 0.25);
                                float _3519 = 1.0 - _955;
                                float _3526 = sqrt(1.0 - ((1.0 - (_3519 * _3519)) * (1.0 - (_3518 * _3518))));
                                float _3527 = _3526 * _3526;
                                float _3528 = _3527 * _3527;
                                float _3529 = _3475 - _2977;
                                float _3530 = _3476 - _2978;
                                float _3531 = _3477 - _2979;
                                float _3535 = inversesqrt(dot(vec3(_3529, _3530, _3531), vec3(_3529, _3530, _3531)));
                                float _3539 = dot(vec3(_880, _883, _886), vec3((-0.0) - _2977, (-0.0) - _2978, (-0.0) - _2979));
                                float _4610 = isnan(0.0) ? _3539 : (isnan(_3539) ? 0.0 : max(_3539, 0.0));
                                float _3542 = isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0));
                                float _3543 = dot(vec3(_880, _883, _886), vec3(_3535 * _3529, _3535 * _3530, _3535 * _3531));
                                float _4621 = isnan(0.0) ? _3543 : (isnan(_3543) ? 0.0 : max(_3543, 0.0));
                                float _3546 = isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0));
                                float _3550 = ((_3546 * _3546) * (_3528 + (-1.0))) + 1.0;
                                float _3551 = _3488 * _3527;
                                float _3552 = _3551 * _3551;
                                float _3558 = ((1.0 - _3552) * dot(vec3(_880, _883, _886), vec3(_3475, _3476, _3477))) + _3552;
                                float _4632 = isnan(0.0) ? _3558 : (isnan(_3558) ? 0.0 : max(_3558, 0.0));
                                float _3559 = isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0));
                                float _3560 = 1.0 - _3527;
                                float _3570 = (0.5 / (((_3559 * ((_3542 * _3560) + _3527)) + 9.9999999392252902907785028219223e-09) + (((_3559 * _3560) + _3527) * _3542))) * _3559;
                                float _4643 = isnan(0.0) ? _3570 : (isnan(_3570) ? 0.0 : max(_3570, 0.0));
                                float _3580 = (_3505 * _3482) * (((_3528 * 3.1415927410125732421875) * (isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0)))) / ((_3550 * _3550) * ((_3495 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3580 * _3363.x;
                                frontier_phi_73_pred_1 = _3580 * _3363.y;
                                frontier_phi_73_pred_2 = _3506 * _3351.z;
                                frontier_phi_73_pred_3 = _3506 * _3351.y;
                                frontier_phi_73_pred_4 = _3506 * _3351.x;
                                frontier_phi_73_pred_5 = _3580 * _3363.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3584 = frontier_phi_73_pred;
                            _3585 = frontier_phi_73_pred_1;
                            _3589 = frontier_phi_73_pred_2;
                            _3588 = frontier_phi_73_pred_3;
                            _3587 = frontier_phi_73_pred_4;
                            _3586 = frontier_phi_73_pred_5;
                            _3293 = _3587 + _3306;
                            _3294 = _3588 + _3307;
                            _3295 = _3589 + _3308;
                            _3290 = _3584 + _3303;
                            _3291 = _3585 + _3304;
                            _3292 = _3586 + _3305;
                            if (_3310 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3303 = _3290;
                                _3304 = _3291;
                                _3305 = _3292;
                                _3306 = _3293;
                                _3307 = _3294;
                                _3308 = _3295;
                                _3309 = _3310;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3293;
                        frontier_phi_67_pred_1 = _3294;
                        frontier_phi_67_pred_2 = _3295;
                        frontier_phi_67_pred_3 = _3292;
                        frontier_phi_67_pred_4 = _3291;
                        frontier_phi_67_pred_5 = _3290;
                    }
                    _2958 = frontier_phi_67_pred;
                    _2960 = frontier_phi_67_pred_1;
                    _2962 = frontier_phi_67_pred_2;
                    _2956 = frontier_phi_67_pred_3;
                    _2954 = frontier_phi_67_pred_4;
                    _2952 = frontier_phi_67_pred_5;
                    uint _3097 = _3096 + 1u;
                    if (_3097 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3090 = _2952;
                        _3091 = _2954;
                        _3092 = _2956;
                        _3093 = _2958;
                        _3094 = _2960;
                        _3095 = _2962;
                        _3096 = _3097;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2960;
                frontier_phi_55_56_ladder_1 = _2962;
                frontier_phi_55_56_ladder_2 = _2958;
                frontier_phi_55_56_ladder_3 = _2956;
                frontier_phi_55_56_ladder_4 = _2954;
                frontier_phi_55_56_ladder_5 = _2952;
            }
            else
            {
                frontier_phi_55_56_ladder = _2838;
                frontier_phi_55_56_ladder_1 = _2840;
                frontier_phi_55_56_ladder_2 = _2836;
                frontier_phi_55_56_ladder_3 = _2834;
                frontier_phi_55_56_ladder_4 = _2832;
                frontier_phi_55_56_ladder_5 = _2830;
            }
            _2951 = frontier_phi_55_56_ladder_5;
            _2953 = frontier_phi_55_56_ladder_4;
            _2955 = frontier_phi_55_56_ladder_3;
            _2957 = frontier_phi_55_56_ladder_2;
            _2959 = frontier_phi_55_56_ladder;
            _2961 = frontier_phi_55_56_ladder_1;
        }
        float _2966 = isnan(1.0) ? _939 : (isnan(_939) ? 1.0 : min(_939, 1.0));
        _2697 = (_2966 * _2957) + _2130;
        _2699 = (_2966 * _2959) + _2132;
        _2701 = (_2966 * _2961) + _2134;
        _2703 = ((_2951 * _924) * _2966) + _2478;
        _2705 = ((_2953 * _926) * _2966) + _2480;
        _2707 = ((_2955 * _927) * _2966) + _2482;
    }
    else
    {
        _2697 = _2130;
        _2699 = _2132;
        _2701 = _2134;
        _2703 = _2478;
        _2705 = _2480;
        _2707 = _2482;
    }
    uint _2713 = _900 + uint(cbMatDynParam._m0[0u].w);
    float _2719 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _2725 = (((((_2719 * cbMtdParam._m0[14u].x) * _657.x) * _680) * _758) * (((1.0 - _733) * cbMtdParam._m0[20u].w) + _733)) * cbInstanceData._m0[_2713].x;
    float _2731 = (((((_2719 * cbMtdParam._m0[14u].y) * _657.y) * _680) * _758) * (((1.0 - _735) * cbMtdParam._m0[20u].w) + _735)) * cbInstanceData._m0[_2713].y;
    float _2737 = (((((_2719 * cbMtdParam._m0[14u].z) * _657.z) * _680) * _758) * (((1.0 - _737) * cbMtdParam._m0[20u].w) + _737)) * cbInstanceData._m0[_2713].z;
    float _4659 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
    float _4670 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
    float _4681 = isnan(0.0) ? _916 : (isnan(_916) ? 0.0 : max(_916, 0.0));
    float _2754 = (((isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0))) * (_2697 + ((isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0))) * _939))) + ((_2703 + ((isnan(0.0) ? _1961 : (isnan(_1961) ? 0.0 : max(_1961, 0.0))) * _1748)) * cbPerFrame._m0[3u].x)) + _2725;
    float _2756 = (_2731 + ((_2705 + ((isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0))) * _1748)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0))) * (_2699 + ((isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0))) * _939)));
    float _2758 = (_2737 + ((_2707 + ((isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0))) * _1748)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0))) * (_2701 + ((isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0))) * _939)));
    float _4707 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2771 = isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0));
    uint _2772 = _899 + 6u;
    float _2780 = _860 / cbSceneParam._m0[86u].x;
    float _2781 = _861 / cbSceneParam._m0[86u].y;
    vec4 _2795 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2780, _2781, (log2((isnan(cbSceneParam._m0[77u].w) ? _795 : (isnan(_795) ? cbSceneParam._m0[77u].w : min(_795, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2797 = _2795.x;
    float _2798 = _2795.y;
    float _2799 = _2795.z;
    float _2800 = _2795.w;
    float _2892;
    float _2894;
    float _2896;
    float _2898;
    if (_795 > cbSceneParam._m0[78u].w)
    {
        float _2855 = isnan(_795) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _795 : min(cbSceneParam._m0[80u].w, _795));
        float _2856 = _2855 / _795;
        float _2867 = _2856 * _845;
        float _2868 = _846 * _2856;
        float _2869 = (-0.0) - _2868;
        float _2870 = _2856 * _847;
        float _2872 = (cbSceneParam._m0[77u].w * _2869) / _2855;
        float _2873 = _2872 + cbSceneParam._m0[79u].w;
        float _2874 = cbSceneParam._m0[79u].w - _2868;
        float _2880 = sqrt(((_2867 * _2867) + (_2868 * _2868)) + (_2870 * _2870));
        float _2883 = (1.0 - (cbSceneParam._m0[77u].w / _2855)) * _2880;
        float _2888 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2890 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3052;
        if (abs((_2869 - _2872) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3052 = ((((_2873 > 0.0) ? exp2(_2888 * _2873) : (2.0 - exp2(_2890 * _2873))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2883;
        }
        else
        {
            float _3012 = 1.0 / cbSceneParam._m0[80u].x;
            float _3013 = isnan(_2874) ? _2873 : (isnan(_2873) ? _2874 : max(_2873, _2874));
            float _3014 = isnan(_2874) ? _2873 : (isnan(_2873) ? _2874 : min(_2873, _2874));
            float _3023 = isnan(0.0) ? _3013 : (isnan(_3013) ? 0.0 : min(_3013, 0.0));
            float _3024 = isnan(0.0) ? _3014 : (isnan(_3014) ? 0.0 : min(_3014, 0.0));
            _3052 = ((abs(_2880 / _2869) * cbSceneParam._m0[80u].y) * ((((_3023 - _3024) * 2.0) - ((exp2(_2888 * (isnan(0.0) ? _3013 : (isnan(_3013) ? 0.0 : max(_3013, 0.0)))) - exp2(_2888 * (isnan(0.0) ? _3014 : (isnan(_3014) ? 0.0 : max(_3014, 0.0))))) * _3012)) - ((exp2(_2890 * _3023) - exp2(_2890 * _3024)) * _3012))) + (_2883 * cbSceneParam._m0[80u].z);
        }
        vec4 _3054 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2780, _2781, 1.0), 0.0);
        float _3063 = exp2((_3052 * (-1.44269502162933349609375)) * (1.0 - _3054.w));
        float _3064 = log2(_3063);
        float _3080 = log2(_2800);
        _2892 = (exp2(_3080 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3064 * cbSceneParam._m0[78u].x)) * _3054.x) / cbSceneParam._m0[78u].x)) + _2797;
        _2894 = (exp2(_3080 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3064 * cbSceneParam._m0[78u].y)) * _3054.y) / cbSceneParam._m0[78u].y)) + _2798;
        _2896 = (exp2(_3080 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3064 * cbSceneParam._m0[78u].z)) * _3054.z) / cbSceneParam._m0[78u].z)) + _2799;
        _2898 = _3063 * _2800;
    }
    else
    {
        _2892 = _2797;
        _2894 = _2798;
        _2896 = _2799;
        _2898 = _2800;
    }
    float _2910 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2911 = _2910 == 3.0;
    float _2912 = log2(_2898);
    float _2916 = exp2(_2912 * cbSceneParam._m0[78u].x);
    float _2917 = exp2(_2912 * cbSceneParam._m0[78u].y);
    float _2918 = exp2(_2912 * cbSceneParam._m0[78u].z);
    float _2919 = _2916 * (isnan(0.0) ? _2754 : (isnan(_2754) ? 0.0 : max(_2754, 0.0)));
    float _2920 = _2917 * (isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0)));
    float _2921 = _2918 * (isnan(0.0) ? _2758 : (isnan(_2758) ? 0.0 : max(_2758, 0.0)));
    float _2930 = (_2910 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2930 * (_2911 ? _2919 : (_2919 + (cbSceneParam._m0[72u].w * _2892)));
    SV_Target.y = _2930 * (_2911 ? _2920 : (_2920 + (cbSceneParam._m0[72u].w * _2894)));
    SV_Target.z = _2930 * (_2911 ? _2921 : (_2921 + (cbSceneParam._m0[72u].w * _2896)));
    SV_Target.w = cbInstanceData._m0[_2772].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2725) * _2771) * _2916) * _2930;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2731) * _2771) * _2917) * _2930;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2737) * _2771) * _2918) * _2930;
    SV_Target_1.w = cbInstanceData._m0[_2772].w;
}


