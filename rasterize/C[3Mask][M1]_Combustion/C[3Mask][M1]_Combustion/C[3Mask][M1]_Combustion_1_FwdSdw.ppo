#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_20;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_7;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_12;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1424;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _228 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _229 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _230 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _236 = inversesqrt(dot(vec3(_228, _229, _230), vec3(_228, _229, _230)));
    float _243 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _272 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _278 = _272.x * cbMtdParam._m0[10u].x;
    float _279 = _272.y * cbMtdParam._m0[10u].y;
    float _280 = _272.z * cbMtdParam._m0[10u].z;
    vec4 _299 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _318 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _346 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w)).x;
    float _356 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _318.x) * 2.0) - _346)) + 1.0;
    float _4087 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _357 = isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0));
    float _364 = (_357 * ((_299.x * cbMtdParam._m0[11u].x) - _278)) + _278;
    float _365 = (_357 * ((_299.y * cbMtdParam._m0[11u].y) - _279)) + _279;
    float _366 = (_357 * ((_299.z * cbMtdParam._m0[11u].z) - _280)) + _280;
    vec4 _384 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _397 = (((((1.0 - _318.y) * 2.0) - _346) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _4098 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    float _398 = isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0));
    float _405 = (((_384.x * cbMtdParam._m0[12u].x) - _364) * _398) + _364;
    float _406 = (_398 * ((_384.y * cbMtdParam._m0[12u].y) - _365)) + _365;
    float _407 = (_398 * ((_384.z * cbMtdParam._m0[12u].z) - _366)) + _366;
    vec4 _425 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _438 = (((((1.0 - _318.z) * 2.0) - _346) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _4109 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _439 = isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0));
    float _446 = (((_425.x * cbMtdParam._m0[13u].x) - _405) * _439) + _405;
    float _447 = (_439 * ((_425.y * cbMtdParam._m0[13u].y) - _406)) + _406;
    float _448 = (_439 * ((_425.z * cbMtdParam._m0[13u].z) - _407)) + _407;
    vec4 _473 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    vec4 _492 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.z) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.w) + cbTextureTilingScale._m0[20u].w));
    float _495 = _492.x + 0.00999999977648258209228515625;
    float _502 = (TEXCOORD_8 - ((cbMtdParam._m0[20u].x * (1.0 - TEXCOORD_8)) * _495)) * (cbMtdParam._m0[19u].w + 1.0);
    float _4120 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _503 = isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0));
    float _510 = (_503 * ((_473.x * cbMtdParam._m0[16u].x) - _446)) + _446;
    float _511 = (_503 * ((_473.y * cbMtdParam._m0[16u].y) - _447)) + _447;
    float _512 = (_503 * ((_473.z * cbMtdParam._m0[16u].z) - _448)) + _448;
    vec4 _525 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _527 = _525.x;
    float _545 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _527) * _357) + _527;
    float _562 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _545) * _398) + _545;
    float _579 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x - _562) * _439) + _562;
    float _581 = _579 - (_579 * TEXCOORD_8);
    vec4 _594 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    vec4 _615 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _617 = _615.x;
    float _618 = _615.y;
    float _619 = _615.z;
    vec4 _631 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _642 = ((_631.x - _617) * _357) + _617;
    float _643 = ((_631.y - _618) * _357) + _618;
    float _644 = ((_631.z - _619) * _357) + _619;
    vec4 _657 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _668 = ((_657.x - _642) * _398) + _642;
    float _669 = ((_657.y - _643) * _398) + _643;
    float _670 = ((_657.z - _644) * _398) + _644;
    vec4 _683 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _696 = ((_683.z - _670) * _439) + _670;
    float _699 = ((((_683.x - _668) * _439) + _668) * 2.0) + (-1.0);
    float _700 = ((((_683.y - _669) * _439) + _669) * 2.0) + (-1.0);
    float _701 = dot(vec2(_699, _700), vec2(_699, _700));
    float _4131 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
    float _706 = sqrt(1.0 - (isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0))));
    float _711 = (((_594.z - _696) * TEXCOORD_8) * cbMtdParam._m0[20u].y) + _696;
    vec4 _741 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[15u].x) + cbTextureTilingScale._m0[15u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[15u].y) + cbTextureTilingScale._m0[15u].w));
    float _755 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4142 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    float _756 = isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0));
    float _764 = (((_756 * _756) * (3.0 - (_756 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _772 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _780 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4153 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _781 = isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0));
    float _785 = (_781 * _781) * (3.0 - (_781 * 2.0));
    float _786 = _785 * cbMtdParam._m0[22u].x;
    float _787 = _785 * cbMtdParam._m0[22u].y;
    float _788 = sin(_772);
    float _789 = cos(_772);
    float _790 = TEXCOORD.z - _786;
    float _791 = TEXCOORD.w - _787;
    vec4 _811 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_786 + fma(_791, (-0.0) - _788, _790 * _789))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_791, _789, _790 * _788) + _787)) + cbTextureTilingScale._m0[2u].w));
    float _817 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _811.x;
    float _819 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _811.y;
    float _821 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _811.z;
    float _837 = (TEXCOORD_5.x - ((_495 * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _4164 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    float _838 = isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0));
    vec4 _851 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _867 = (((((_594.x * 2.0) + (-1.0)) * TEXCOORD_8) * cbMtdParam._m0[19u].y) + _699) + (((_851.x * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z);
    float _869 = (((((_594.y * 2.0) + (-1.0)) * TEXCOORD_9) * cbMtdParam._m0[19u].y) + _700) + (((_851.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z);
    float _872 = fma(_706, _243 * NORMAL.x, fma(_869, _250 * TANGENT.x, (_236 * _228) * _867));
    float _875 = fma(_706, _243 * NORMAL.y, fma(_869, _250 * TANGENT.y, (_236 * _229) * _867));
    float _878 = fma(_706, _243 * NORMAL.z, fma(_869, _250 * TANGENT.z, (_236 * _230) * _867));
    float _882 = inversesqrt(dot(vec3(_872, _875, _878), vec3(_872, _875, _878)));
    float _883 = _882 * _872;
    float _884 = _882 * _875;
    float _885 = _882 * _878;
    float _4175 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _886 = isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0));
    float _4186 = isnan(0.0) ? _510 : (isnan(_510) ? 0.0 : max(_510, 0.0));
    float _4197 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    float _4208 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    float _4219 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _890 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
    float _906 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _946 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _956 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _946);
    float _957 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _946);
    float _958 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _946);
    float _962 = inversesqrt(dot(vec3(_956, _957, _958), vec3(_956, _957, _958)));
    float _963 = _956 * _962;
    float _964 = _957 * _962;
    float _965 = _958 * _962;
    float _971 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _972 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _991 = fma(_885, cbSceneParam._m0[5u].z, fma(_884, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _883));
    float _994 = fma(_885, cbSceneParam._m0[6u].z, fma(_884, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _883));
    float _997 = fma(_885, cbSceneParam._m0[7u].z, fma(_884, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _883));
    uint _1010 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1011 = _1010 + 9u;
    uint _1012 = _1011 + uint(cbMatDynParam._m0[0u].w);
    float _1018 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0)))) * cbInstanceData._m0[_1012].x;
    float _1019 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0)))) * cbInstanceData._m0[_1012].y;
    float _1020 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0)))) * cbInstanceData._m0[_1012].z;
    float _4230 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
    float _1021 = isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0));
    float _4241 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
    float _1022 = isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0));
    float _4252 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
    float _1023 = isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0));
    float _1024 = 1.0 - _890;
    float _1025 = _1021 * _1024;
    float _1026 = _1022 * _1024;
    float _1027 = _1023 * _1024;
    float _1032 = (_1021 + (-0.039999999105930328369140625)) * _890;
    float _1033 = (_1022 + (-0.039999999105930328369140625)) * _890;
    float _1034 = (_1023 + (-0.039999999105930328369140625)) * _890;
    float _1035 = _1032 + 0.039999999105930328369140625;
    float _1037 = _1033 + 0.039999999105930328369140625;
    float _1038 = _1034 + 0.039999999105930328369140625;
    vec4 _1047 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _971, cbSceneParam._m0[86u].y * _972));
    float _1050 = _1047.x * TEXCOORD_5.w;
    float _1051 = dot(vec3(_883, _884, _885), vec3(_963, _964, _965));
    float _1054 = _1051 * 2.0;
    float _1058 = (_1054 * _883) - _963;
    float _1059 = (_1054 * _884) - _964;
    float _1060 = (_1054 * _885) - _965;
    float _1064 = abs(dot(vec3(_963, _964, _965), vec3(_883, _884, _885)));
    float _4263 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
    float _1066 = sqrt(_886);
    float _1078 = exp2((_1066 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4263 : (isnan(_4263) ? 1.0 : min(_4263, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1066 * 3.0));
    float _1084 = (1.0 - _1078) * ((_1066 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1085 = _1078 * _1066;
    float _1113 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1117 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1121 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1423;
    float _1425;
    float _1426;
    float _1427;
    float _1428;
    float _1429;
    float _1430;
    float _1431;
    float _1432;
    float _1433;
    float _1434;
    float _1435;
    float _1436;
    float _1437;
    float _1438;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1148 = fma(_1121, cbModelParam._m0[26u].z, fma(_1117, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1113));
        float _1152 = fma(_1121, cbModelParam._m0[27u].z, fma(_1117, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1113));
        float _1156 = fma(_1121, cbModelParam._m0[28u].z, fma(_1117, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1113));
        float _1181 = _1113 + _883;
        float _1182 = _1117 + _884;
        float _1183 = _1121 + _885;
        float _1193 = fma(_1183, cbModelParam._m0[26u].z, fma(_1182, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1181)) - _1148;
        float _1194 = fma(_1183, cbModelParam._m0[27u].z, fma(_1182, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1181)) - _1152;
        float _1195 = fma(_1183, cbModelParam._m0[28u].z, fma(_1182, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1181)) - _1156;
        float _1199 = inversesqrt(dot(vec3(_1193, _1194, _1195), vec3(_1193, _1194, _1195)));
        float _1212 = ((_1199 * _1193) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1148 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1213 = ((_1199 * _1194) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1152 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1214 = ((_1199 * _1195) / cbModelParam._m0[34u].z) + ((((((_1156 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1217 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1212, _1213, _1214), 0.0);
        vec4 _1224 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1212, _1213, _1214), 0.0);
        vec4 _1231 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1212, _1213, _1214), 0.0);
        vec4 _1238 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1212, _1213, _1214), 0.0);
        float _1251 = exp2((_1217.w + (-0.5)) * 20.0) * 2.0;
        float _1252 = _1251 * (_1217.x + (-0.5));
        float _1253 = _1251 * (_1217.y + (-0.5));
        float _1254 = _1251 * (_1217.z + (-0.5));
        float _1261 = exp2((_1224.w + (-0.5)) * 20.0) * 2.0;
        float _1262 = _1261 * (_1224.x + (-0.5));
        float _1263 = _1261 * (_1224.y + (-0.5));
        float _1264 = _1261 * (_1224.z + (-0.5));
        float _1271 = exp2((_1231.w + (-0.5)) * 20.0) * 2.0;
        float _1272 = _1271 * (_1231.x + (-0.5));
        float _1273 = _1271 * (_1231.y + (-0.5));
        float _1274 = _1271 * (_1231.z + (-0.5));
        float _1281 = exp2((_1238.w + (-0.5)) * 20.0) * 2.0;
        float _1282 = _1281 * (_1238.x + (-0.5));
        float _1283 = _1281 * (_1238.y + (-0.5));
        float _1284 = _1281 * (_1238.z + (-0.5));
        float _1285 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
        float _1286 = isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0));
        float _1287 = isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0));
        float _1288 = _1252 * 0.5;
        float _1289 = _1262 * 0.5;
        float _1290 = _1272 * 0.5;
        float _1291 = dot(vec3(_1288, _1289, _1290), vec3(_1288, _1289, _1290));
        float _1296 = (_1291 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1291);
        float _1305 = (dot(vec3(_883, _884, _885), vec3(_1296 * _1288, _1296 * _1289, _1296 * _1290)) + 1.0) * 0.5;
        float _4289 = isnan(0.0) ? _1305 : (isnan(_1305) ? 0.0 : max(_1305, 0.0));
        float _1315 = sqrt(((_1289 * _1289) + (_1288 * _1288)) + (_1290 * _1290)) / (_1285 + 9.9999997473787516355514526367188e-06);
        float _4300 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1316 = isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0));
        float _1317 = _1316 * 2.0;
        float _1321 = (1.0 - _1316) / (_1316 + 1.0);
        float _4311 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
        float _1322 = isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0));
        float _1331 = ((((1.0 - _1322) * (_1317 + 2.0)) * exp2(log2(isnan(1.0) ? _4289 : (isnan(_4289) ? 1.0 : min(_4289, 1.0))) * (_1317 + 1.0))) + _1322) * _1285;
        float _1332 = _1253 * 0.5;
        float _1333 = _1263 * 0.5;
        float _1334 = _1273 * 0.5;
        float _1335 = dot(vec3(_1332, _1333, _1334), vec3(_1332, _1333, _1334));
        float _1340 = (_1335 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1335);
        float _1348 = (dot(vec3(_883, _884, _885), vec3(_1340 * _1332, _1340 * _1333, _1340 * _1334)) + 1.0) * 0.5;
        float _4322 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1357 = sqrt(((_1333 * _1333) + (_1332 * _1332)) + (_1334 * _1334)) / (_1286 + 9.9999997473787516355514526367188e-06);
        float _4333 = isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0));
        float _1358 = isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0));
        float _1359 = _1358 * 2.0;
        float _1363 = (1.0 - _1358) / (_1358 + 1.0);
        float _4344 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
        float _1364 = isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0));
        float _1373 = ((((1.0 - _1364) * (_1359 + 2.0)) * exp2(log2(isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0))) * (_1359 + 1.0))) + _1364) * _1286;
        float _1374 = _1254 * 0.5;
        float _1375 = _1264 * 0.5;
        float _1376 = _1274 * 0.5;
        float _1377 = dot(vec3(_1374, _1375, _1376), vec3(_1374, _1375, _1376));
        float _1382 = (_1377 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1377);
        float _1390 = (dot(vec3(_883, _884, _885), vec3(_1382 * _1374, _1382 * _1375, _1382 * _1376)) + 1.0) * 0.5;
        float _4355 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
        float _1399 = sqrt(((_1375 * _1375) + (_1374 * _1374)) + (_1376 * _1376)) / (_1287 + 9.9999997473787516355514526367188e-06);
        float _4366 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1400 = isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0));
        float _1401 = _1400 * 2.0;
        float _1405 = (1.0 - _1400) / (_1400 + 1.0);
        float _4377 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1406 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
        float _1415 = ((((1.0 - _1406) * (_1401 + 2.0)) * exp2(log2(isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0))) * (_1401 + 1.0))) + _1406) * _1287;
        _1423 = _1254;
        _1425 = _1253;
        _1426 = _1252;
        _1427 = _1264;
        _1428 = _1263;
        _1429 = _1262;
        _1430 = _1274;
        _1431 = _1273;
        _1432 = _1272;
        _1433 = _1287;
        _1434 = _1286;
        _1435 = _1285;
        _1436 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0)));
        _1437 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0)));
        _1438 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0)));
    }
    else
    {
        _1423 = _1424;
        _1425 = _1424;
        _1426 = _1424;
        _1427 = _1424;
        _1428 = _1424;
        _1429 = _1424;
        _1430 = _1424;
        _1431 = _1424;
        _1432 = _1424;
        _1433 = _1424;
        _1434 = _1424;
        _1435 = _1424;
        _1436 = 0.0;
        _1437 = 0.0;
        _1438 = 0.0;
    }
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    float _1738;
    float _1739;
    float _1740;
    float _1741;
    float _1742;
    float _1743;
    float _1744;
    float _1745;
    float _1746;
    float _1747;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1464 = fma(_1121, cbModelParam._m0[30u].z, fma(_1117, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1113));
        float _1468 = fma(_1121, cbModelParam._m0[31u].z, fma(_1117, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1113));
        float _1472 = fma(_1121, cbModelParam._m0[32u].z, fma(_1117, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1113));
        float _1495 = _1113 + _883;
        float _1496 = _1117 + _884;
        float _1497 = _1121 + _885;
        float _1507 = fma(_1497, cbModelParam._m0[30u].z, fma(_1496, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1495)) - _1464;
        float _1508 = fma(_1497, cbModelParam._m0[31u].z, fma(_1496, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1495)) - _1468;
        float _1509 = fma(_1497, cbModelParam._m0[32u].z, fma(_1496, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1495)) - _1472;
        float _1513 = inversesqrt(dot(vec3(_1507, _1508, _1509), vec3(_1507, _1508, _1509)));
        float _1526 = ((_1513 * _1507) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1464 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1527 = ((_1513 * _1508) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1468 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1528 = ((_1513 * _1509) / cbModelParam._m0[35u].z) + ((((((_1472 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1530 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1526, _1527, _1528), 0.0);
        vec4 _1537 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1526, _1527, _1528), 0.0);
        vec4 _1544 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1526, _1527, _1528), 0.0);
        vec4 _1551 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1526, _1527, _1528), 0.0);
        float _1563 = exp2((_1530.w + (-0.5)) * 20.0) * 2.0;
        float _1564 = _1563 * (_1530.x + (-0.5));
        float _1565 = _1563 * (_1530.y + (-0.5));
        float _1566 = _1563 * (_1530.z + (-0.5));
        float _1573 = exp2((_1537.w + (-0.5)) * 20.0) * 2.0;
        float _1574 = _1573 * (_1537.x + (-0.5));
        float _1575 = _1573 * (_1537.y + (-0.5));
        float _1576 = _1573 * (_1537.z + (-0.5));
        float _1583 = exp2((_1544.w + (-0.5)) * 20.0) * 2.0;
        float _1584 = _1583 * (_1544.x + (-0.5));
        float _1585 = _1583 * (_1544.y + (-0.5));
        float _1586 = _1583 * (_1544.z + (-0.5));
        float _1593 = exp2((_1551.w + (-0.5)) * 20.0) * 2.0;
        float _1594 = _1593 * (_1551.x + (-0.5));
        float _1595 = _1593 * (_1551.y + (-0.5));
        float _1596 = _1593 * (_1551.z + (-0.5));
        float _1597 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
        float _1598 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
        float _1599 = isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0));
        float _1600 = _1564 * 0.5;
        float _1601 = _1574 * 0.5;
        float _1602 = _1584 * 0.5;
        float _1603 = dot(vec3(_1600, _1601, _1602), vec3(_1600, _1601, _1602));
        float _1608 = (_1603 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1603);
        float _1616 = (dot(vec3(_883, _884, _885), vec3(_1608 * _1600, _1608 * _1601, _1608 * _1602)) + 1.0) * 0.5;
        float _4418 = isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0));
        float _1625 = sqrt(((_1601 * _1601) + (_1600 * _1600)) + (_1602 * _1602)) / (_1597 + 9.9999997473787516355514526367188e-06);
        float _4429 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1626 = isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0));
        float _1627 = _1626 * 2.0;
        float _1631 = (1.0 - _1626) / (_1626 + 1.0);
        float _4440 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1632 = isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0));
        float _1641 = ((((1.0 - _1632) * (_1627 + 2.0)) * exp2(log2(isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0))) * (_1627 + 1.0))) + _1632) * _1597;
        float _1642 = _1565 * 0.5;
        float _1643 = _1575 * 0.5;
        float _1644 = _1585 * 0.5;
        float _1645 = dot(vec3(_1642, _1643, _1644), vec3(_1642, _1643, _1644));
        float _1650 = (_1645 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1645);
        float _1658 = (dot(vec3(_883, _884, _885), vec3(_1650 * _1642, _1650 * _1643, _1650 * _1644)) + 1.0) * 0.5;
        float _4451 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1667 = sqrt(((_1643 * _1643) + (_1642 * _1642)) + (_1644 * _1644)) / (_1598 + 9.9999997473787516355514526367188e-06);
        float _4462 = isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0));
        float _1668 = isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0));
        float _1669 = _1668 * 2.0;
        float _1673 = (1.0 - _1668) / (_1668 + 1.0);
        float _4473 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1674 = isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0));
        float _1683 = ((((1.0 - _1674) * (_1669 + 2.0)) * exp2(log2(isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0))) * (_1669 + 1.0))) + _1674) * _1598;
        float _1684 = _1566 * 0.5;
        float _1685 = _1576 * 0.5;
        float _1686 = _1586 * 0.5;
        float _1687 = dot(vec3(_1684, _1685, _1686), vec3(_1684, _1685, _1686));
        float _1692 = (_1687 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1687);
        float _1700 = (dot(vec3(_883, _884, _885), vec3(_1692 * _1684, _1692 * _1685, _1692 * _1686)) + 1.0) * 0.5;
        float _4484 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
        float _1709 = sqrt(((_1685 * _1685) + (_1684 * _1684)) + (_1686 * _1686)) / (_1599 + 9.9999997473787516355514526367188e-06);
        float _4495 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
        float _1710 = isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0));
        float _1711 = _1710 * 2.0;
        float _1715 = (1.0 - _1710) / (_1710 + 1.0);
        float _4506 = isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0));
        float _1716 = isnan(1.0) ? _4506 : (isnan(_4506) ? 1.0 : min(_4506, 1.0));
        float _1725 = ((((1.0 - _1716) * (_1711 + 2.0)) * exp2(log2(isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0))) * (_1711 + 1.0))) + _1716) * _1599;
        _1733 = _1566;
        _1734 = _1565;
        _1735 = _1564;
        _1736 = _1576;
        _1737 = _1575;
        _1738 = _1574;
        _1739 = _1586;
        _1740 = _1585;
        _1741 = _1584;
        _1742 = _1599;
        _1743 = _1598;
        _1744 = _1597;
        _1745 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0)));
        _1746 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0)));
        _1747 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0)));
    }
    else
    {
        _1733 = _1424;
        _1734 = _1424;
        _1735 = _1424;
        _1736 = _1424;
        _1737 = _1424;
        _1738 = _1424;
        _1739 = _1424;
        _1740 = _1424;
        _1741 = _1424;
        _1742 = _1424;
        _1743 = _1424;
        _1744 = _1424;
        _1745 = 0.0;
        _1746 = 0.0;
        _1747 = 0.0;
    }
    float _1757 = (cbModelParam._m0[1u].x * (_1745 - _1436)) + _1436;
    float _1758 = (cbModelParam._m0[1u].x * (_1746 - _1437)) + _1437;
    float _1759 = (cbModelParam._m0[1u].x * (_1747 - _1438)) + _1438;
    float _1780 = fma(_1759, cbSceneParam._m0[89u].z, fma(_1758, cbSceneParam._m0[89u].y, _1757 * cbSceneParam._m0[89u].x));
    float _1783 = fma(_1759, cbSceneParam._m0[90u].z, fma(_1758, cbSceneParam._m0[90u].y, _1757 * cbSceneParam._m0[90u].x));
    float _1786 = fma(_1759, cbSceneParam._m0[91u].z, fma(_1758, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1757));
    float _1801 = _1058 * 0.5;
    float _1802 = _1059 * 0.5;
    float _1803 = _1060 * 0.5;
    float _1804 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1735, _1738, _1741, _1744));
    float _1807 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1734, _1737, _1740, _1743));
    float _1810 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1733, _1736, _1739, _1742));
    float _1844;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1817 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1423, _1427, _1430, _1433));
        float _1821 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1425, _1428, _1431, _1434));
        float _1825 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1426, _1429, _1432, _1435));
        float _1832 = dot(vec4(cbModelParam._m0[39u]), vec4(_1801, _1802, _1803, 1.0));
        _1844 = dot(vec3(isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0)), isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0)), isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1832) ? 0.0 : (isnan(0.0) ? _1832 : max(0.0, _1832))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1844 = 1.0;
    }
    float _1855;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1846 = dot(vec4(cbModelParam._m0[40u]), vec4(_1801, _1802, _1803, 1.0));
        _1855 = dot(vec3(isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0)), isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0)), isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1846) ? 0.0 : (isnan(0.0) ? _1846 : max(0.0, _1846))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1855 = 1.0;
    }
    float _1859 = (_1855 * cbModelParam._m0[1u].x) + (_1844 * (1.0 - cbModelParam._m0[1u].x));
    float _1869 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _886);
    float _1870 = isnan(_1869) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1869 : min(cbModelParam._m0[25u].z, _1869));
    float _1950;
    float _1952;
    float _1954;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1917 = fma(_1121, cbModelParam._m0[13u].z, fma(_1117, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1113)) + cbModelParam._m0[13u].w;
        float _1921 = fma(_1121, cbModelParam._m0[14u].z, fma(_1117, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1113)) + cbModelParam._m0[14u].w;
        float _1925 = fma(_1121, cbModelParam._m0[15u].z, fma(_1117, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1113)) + cbModelParam._m0[15u].w;
        float _1928 = fma(_1060, cbModelParam._m0[13u].z, fma(_1059, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1058));
        float _1931 = fma(_1060, cbModelParam._m0[14u].z, fma(_1059, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1058));
        float _1934 = fma(_1060, cbModelParam._m0[15u].z, fma(_1059, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1058));
        float _1962;
        if (_1928 > 0.0)
        {
            _1962 = abs((1.0 - _1917) / _1928);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1928 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1917 + 1.0) / _1928);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1962 = frontier_phi_14_12_ladder;
        }
        float _2133;
        if (_1931 > 0.0)
        {
            _2133 = abs((1.0 - _1921) / _1931);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1931 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1921 + 1.0) / _1931);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2133 = frontier_phi_23_19_ladder;
        }
        float _2428;
        if (_1934 > 0.0)
        {
            _2428 = abs((1.0 - _1925) / _1934);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1934 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1925 + 1.0) / _1934);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2428 = frontier_phi_35_30_ladder;
        }
        float _2430 = isnan(_2133) ? _1962 : (isnan(_1962) ? _2133 : min(_1962, _2133));
        float _2431 = isnan(_2428) ? _2430 : (isnan(_2430) ? _2428 : min(_2430, _2428));
        float _2435 = (_2431 * _1928) + _1917;
        float _2436 = (_2431 * _1931) + _1921;
        float _2437 = (_2431 * _1934) + _1925;
        float _2438 = _2431 * 9.9999997473787516355514526367188e-05;
        float _2440 = (-1.0) - _2438;
        float _2442 = _2438 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2437 > _2442) || ((_2437 < _2440) || ((_2436 > _2442) || ((_2436 < _2440) || ((_2435 < _2440) || (_2435 > _2442))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2582 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2437, cbModelParam._m0[9u].z, fma(_2436, cbModelParam._m0[9u].y, _2435 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2437, cbModelParam._m0[10u].z, fma(_2436, cbModelParam._m0[10u].y, _2435 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2437, cbModelParam._m0[11u].z, fma(_2436, cbModelParam._m0[11u].y, _2435 * cbModelParam._m0[11u].x))), _1870);
            frontier_phi_13_35_ladder = _2582.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2582.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2582.x * cbModelParam._m0[1u].y;
        }
        _1950 = frontier_phi_13_35_ladder_2;
        _1952 = frontier_phi_13_35_ladder_1;
        _1954 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1938 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1058, _1059, _1060), _1870);
        _1950 = _1938.x * cbModelParam._m0[1u].y;
        _1952 = _1938.y * cbModelParam._m0[1u].y;
        _1954 = _1938.z * cbModelParam._m0[1u].y;
    }
    float _1958 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _886);
    float _1959 = isnan(_1958) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1958 : min(cbModelParam._m0[25u].w, _1958));
    float _2048;
    float _2050;
    float _2052;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2012 = fma(_1121, cbModelParam._m0[21u].z, fma(_1117, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1113)) + cbModelParam._m0[21u].w;
        float _2016 = fma(_1121, cbModelParam._m0[22u].z, fma(_1117, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1113)) + cbModelParam._m0[22u].w;
        float _2020 = fma(_1121, cbModelParam._m0[23u].z, fma(_1117, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1113)) + cbModelParam._m0[23u].w;
        float _2023 = fma(_1060, cbModelParam._m0[21u].z, fma(_1059, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1058));
        float _2026 = fma(_1060, cbModelParam._m0[22u].z, fma(_1059, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1058));
        float _2029 = fma(_1060, cbModelParam._m0[23u].z, fma(_1059, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1058));
        float _2138;
        if (_2023 > 0.0)
        {
            _2138 = abs((1.0 - _2012) / _2023);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2023 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2012 + 1.0) / _2023);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2138 = frontier_phi_25_21_ladder;
        }
        float _2455;
        if (_2026 > 0.0)
        {
            _2455 = abs((1.0 - _2016) / _2026);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2026 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2016 + 1.0) / _2026);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2455 = frontier_phi_37_32_ladder;
        }
        float _2793;
        if (_2029 > 0.0)
        {
            _2793 = abs((1.0 - _2020) / _2029);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2029 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2020 + 1.0) / _2029);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2793 = frontier_phi_47_44_ladder;
        }
        float _2795 = isnan(_2455) ? _2138 : (isnan(_2138) ? _2455 : min(_2138, _2455));
        float _2796 = isnan(_2793) ? _2795 : (isnan(_2795) ? _2793 : min(_2795, _2793));
        float _2800 = (_2796 * _2023) + _2012;
        float _2801 = (_2796 * _2026) + _2016;
        float _2802 = (_2796 * _2029) + _2020;
        float _2803 = _2796 * 9.9999997473787516355514526367188e-05;
        float _2804 = (-1.0) - _2803;
        float _2806 = _2803 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2802 > _2806) || ((_2802 < _2804) || ((_2801 > _2806) || ((_2801 < _2804) || ((_2800 < _2804) || (_2800 > _2806))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2924 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2802, cbModelParam._m0[17u].z, fma(_2801, cbModelParam._m0[17u].y, _2800 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2802, cbModelParam._m0[18u].z, fma(_2801, cbModelParam._m0[18u].y, _2800 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2802, cbModelParam._m0[19u].z, fma(_2801, cbModelParam._m0[19u].y, _2800 * cbModelParam._m0[19u].x))), _1959);
            frontier_phi_22_47_ladder = _2924.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2924.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2924.x * cbModelParam._m0[1u].z;
        }
        _2048 = frontier_phi_22_47_ladder_2;
        _2050 = frontier_phi_22_47_ladder_1;
        _2052 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2032 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1058, _1059, _1060), _1959);
        _2048 = _2032.x * cbModelParam._m0[1u].z;
        _2050 = _2032.y * cbModelParam._m0[1u].z;
        _2052 = _2032.z * cbModelParam._m0[1u].z;
    }
    float _2065 = (((_1084 * _1035) + _1085) * _1050) * ((cbModelParam._m0[1u].w * (_2048 - _1950)) + _1950);
    float _2067 = (((_1084 * _1037) + _1085) * _1050) * ((cbModelParam._m0[1u].w * (_2050 - _1952)) + _1952);
    float _2069 = (((_1084 * _1038) + _1085) * _1050) * ((cbModelParam._m0[1u].w * (_2052 - _1954)) + _1954);
    float _2072 = fma(_2069, cbSceneParam._m0[89u].z, fma(_2067, cbSceneParam._m0[89u].y, _2065 * cbSceneParam._m0[89u].x));
    float _2075 = fma(_2069, cbSceneParam._m0[90u].z, fma(_2067, cbSceneParam._m0[90u].y, _2065 * cbSceneParam._m0[90u].x));
    float _2078 = fma(_2069, cbSceneParam._m0[91u].z, fma(_2067, cbSceneParam._m0[91u].y, _2065 * cbSceneParam._m0[91u].x));
    float _2112 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2116 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2120 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2124 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2125 = _2112 / _2124;
    float _2126 = _2116 / _2124;
    float _2127 = _2120 / _2124;
    float _2274;
    float _2275;
    float _2276;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2154 = ((uint(_2127 > cbSceneParam._m0[59u].y) + uint(_2127 > cbSceneParam._m0[59u].x)) + uint(_2127 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2155 = _2154 + 43u;
        uint _2163 = _2154 + 44u;
        uint _2171 = _2154 + 45u;
        uint _2179 = _2154 + 46u;
        float _2190 = fma(_2124, cbSceneParam._m0[_2155].w, fma(_2120, cbSceneParam._m0[_2155].z, fma(_2116, cbSceneParam._m0[_2155].y, _2112 * cbSceneParam._m0[_2155].x)));
        float _2194 = fma(_2124, cbSceneParam._m0[_2163].w, fma(_2120, cbSceneParam._m0[_2163].z, fma(_2116, cbSceneParam._m0[_2163].y, _2112 * cbSceneParam._m0[_2163].x)));
        float _2202 = fma(_2124, cbSceneParam._m0[_2179].w, fma(_2120, cbSceneParam._m0[_2179].z, fma(_2116, cbSceneParam._m0[_2179].y, _2112 * cbSceneParam._m0[_2179].x)));
        float _2207 = cbSceneParam._m0[33u].z * _2202;
        float _2209 = cbSceneParam._m0[33u].w * _2202;
        float _2212 = fma(_2124, cbSceneParam._m0[_2171].w, fma(_2120, cbSceneParam._m0[_2171].z, fma(_2116, cbSceneParam._m0[_2171].y, _2112 * cbSceneParam._m0[_2171].x))) / _2202;
        float _2260 = (cbSceneParam._m0[33u].x - sqrt(((_2126 * _2126) + (_2125 * _2125)) + (_2127 * _2127))) * cbSceneParam._m0[33u].y;
        float _4632 = isnan(0.0) ? _2260 : (isnan(_2260) ? 0.0 : max(_2260, 0.0));
        float _2267 = (isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2207 + _2190) / _2202, (_2209 + _2194) / _2202), _2212), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2209 + _2190) / _2202, (_2194 - _2207) / _2202), _2212), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2190 - _2207) / _2202, (_2194 - _2209) / _2202), _2212), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2190 - _2209) / _2202, (_2207 + _2194) / _2202), _2212), 0.0)).x), vec4(0.25)));
        _2274 = 1.0 - (_2267 * cbSceneParam._m0[34u].x);
        _2275 = 1.0 - (_2267 * cbSceneParam._m0[34u].y);
        _2276 = 1.0 - (_2267 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2274 = 1.0;
        _2275 = 1.0;
        _2276 = 1.0;
    }
    float _2340;
    float _2342;
    float _2344;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2328 = fma(_2124, cbSceneParam._m0[63u].w, fma(_2120, cbSceneParam._m0[63u].z, fma(_2116, cbSceneParam._m0[63u].y, _2112 * cbSceneParam._m0[63u].x)));
        float _2329 = fma(_2124, cbSceneParam._m0[60u].w, fma(_2120, cbSceneParam._m0[60u].z, fma(_2116, cbSceneParam._m0[60u].y, _2112 * cbSceneParam._m0[60u].x))) / _2328;
        float _2330 = fma(_2124, cbSceneParam._m0[61u].w, fma(_2120, cbSceneParam._m0[61u].z, fma(_2116, cbSceneParam._m0[61u].y, _2112 * cbSceneParam._m0[61u].x))) / _2328;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2329 >= cbSceneParam._m0[64u].x) && (_2330 >= cbSceneParam._m0[64u].y)) && (_2329 <= cbSceneParam._m0[64u].z)) && (_2330 <= cbSceneParam._m0[64u].w))
        {
            float _2468 = fma(_2124, cbSceneParam._m0[62u].w, fma(_2120, cbSceneParam._m0[62u].z, fma(_2116, cbSceneParam._m0[62u].y, _2112 * cbSceneParam._m0[62u].x))) / _2328;
            float _2472 = isnan(cbSceneParam._m0[41u].w) ? _2468 : (isnan(_2468) ? cbSceneParam._m0[41u].w : max(_2468, cbSceneParam._m0[41u].w));
            float _2515 = (cbSceneParam._m0[33u].x - sqrt(((_2126 * _2126) + (_2125 * _2125)) + (_2127 * _2127))) * cbSceneParam._m0[33u].y;
            float _4648 = isnan(0.0) ? _2515 : (isnan(_2515) ? 0.0 : max(_2515, 0.0));
            float _2522 = (isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2329, cbSceneParam._m0[33u].w + _2330), _2472), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2329, _2330 - cbSceneParam._m0[33u].z), _2472), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2329 - cbSceneParam._m0[33u].z, _2330 - cbSceneParam._m0[33u].w), _2472), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2329 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2330), _2472), 0.0)).x), vec4(0.25)));
            float _2526 = 1.0 - (_2522 * cbSceneParam._m0[34u].x);
            float _2527 = 1.0 - (_2522 * cbSceneParam._m0[34u].y);
            float _2528 = 1.0 - (_2522 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2528) ? _2276 : (isnan(_2276) ? _2528 : min(_2276, _2528));
            frontier_phi_34_33_ladder_1 = isnan(_2527) ? _2275 : (isnan(_2275) ? _2527 : min(_2275, _2527));
            frontier_phi_34_33_ladder_2 = isnan(_2526) ? _2274 : (isnan(_2274) ? _2526 : min(_2274, _2526));
        }
        else
        {
            frontier_phi_34_33_ladder = _2276;
            frontier_phi_34_33_ladder_1 = _2275;
            frontier_phi_34_33_ladder_2 = _2274;
        }
        _2340 = frontier_phi_34_33_ladder_2;
        _2342 = frontier_phi_34_33_ladder_1;
        _2344 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2340 = _2274;
        _2342 = _2275;
        _2344 = _2276;
    }
    uvec4 _2349 = floatBitsToUint(cbInstanceData._m0[_1010 + 5u]);
    uint _2351 = _2349.x * 14u;
    uint _2352 = _2351 + 13u;
    float _2359 = _1050 + (-1.0);
    float _2364 = (cbLight._m0[_2352].x * _2359) + 1.0;
    float _2365 = (cbLight._m0[_2352].y * _2359) + 1.0;
    float _2366 = (cbLight._m0[_2352].z * _2359) + 1.0;
    float _2367 = (cbLight._m0[_2352].w * _2359) + 1.0;
    uint _2368 = _2351 + 5u;
    float _2374 = isnan(1.0) ? _2365 : (isnan(_2365) ? 1.0 : min(_2365, 1.0));
    uint _2378 = _2351 + 4u;
    float _2387 = isnan(1.0) ? _2364 : (isnan(_2364) ? 1.0 : min(_2364, 1.0));
    uint _2391 = _2351 | 1u;
    float _2402 = dot(vec3(cbLight._m0[_2351].xyz), vec3(_883, _884, _885));
    float _2405 = dot(vec3(cbLight._m0[_2391].xyz), vec3(_883, _884, _885));
    float _4684 = isnan(0.0) ? _2402 : (isnan(_2402) ? 0.0 : max(_2402, 0.0));
    float _4695 = isnan(0.0) ? _2405 : (isnan(_2405) ? 0.0 : max(_2405, 0.0));
    float _2410 = (isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0))) * 0.3183098733425140380859375;
    float _2412 = (isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0))) * 0.3183098733425140380859375;
    float _2419 = ((cbLight._m0[_2368].x * _2374) * _2412) + (((cbLight._m0[_2378].x * _2340) * _2387) * _2410);
    float _2420 = ((_2374 * cbLight._m0[_2368].y) * _2412) + (((cbLight._m0[_2378].y * _2342) * _2387) * _2410);
    float _2421 = ((_2374 * cbLight._m0[_2368].z) * _2412) + (((cbLight._m0[_2378].z * _2344) * _2387) * _2410);
    uvec4 _2425 = floatBitsToUint(cbLight._m0[_2351 + 12u]);
    bool _2427 = _2425.x == 0u;
    float _2529;
    float _2531;
    float _2533;
    if (_2427)
    {
        _2529 = _2419;
        _2531 = _2420;
        _2533 = _2421;
    }
    else
    {
        uint _2537 = _2351 + 6u;
        float _2553 = (dot(vec3(cbLight._m0[_2351 + 2u].xyz), vec3(_883, _884, _885)) * 0.5) + 0.5;
        float _2554 = _2553 * _2553;
        float _4706 = isnan(0.0) ? _2554 : (isnan(_2554) ? 0.0 : max(_2554, 0.0));
        float _2555 = isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0));
        float _2556 = isnan(1.0) ? _2366 : (isnan(_2366) ? 1.0 : min(_2366, 1.0));
        _2529 = (((cbLight._m0[_2537].x * 0.3183098733425140380859375) * _2555) * _2556) + _2419;
        _2531 = (((cbLight._m0[_2537].y * 0.3183098733425140380859375) * _2555) * _2556) + _2420;
        _2533 = (((cbLight._m0[_2537].z * 0.3183098733425140380859375) * _2555) * _2556) + _2421;
    }
    bool _2536 = _2425.y == 0u;
    float _2591;
    float _2593;
    float _2595;
    if (_2536)
    {
        _2591 = _2529;
        _2593 = _2531;
        _2595 = _2533;
    }
    else
    {
        uint _2764 = _2351 + 7u;
        float _2780 = (dot(vec3(cbLight._m0[_2351 + 3u].xyz), vec3(_883, _884, _885)) * 0.5) + 0.5;
        float _2781 = _2780 * _2780;
        float _4722 = isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : max(_2781, 0.0));
        float _2782 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
        float _2783 = isnan(1.0) ? _2367 : (isnan(_2367) ? 1.0 : min(_2367, 1.0));
        _2591 = (((cbLight._m0[_2764].x * 0.3183098733425140380859375) * _2782) * _2783) + _2529;
        _2593 = (((cbLight._m0[_2764].y * 0.3183098733425140380859375) * _2782) * _2783) + _2531;
        _2595 = (((cbLight._m0[_2764].z * 0.3183098733425140380859375) * _2782) * _2783) + _2533;
    }
    uint _2598 = _2351 + 8u;
    float _2611 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2351].w)) * _886) * 0.949999988079071044921875);
    float _2612 = _2611 * _2611;
    float _2613 = cbLight._m0[_2351].x + _963;
    float _2614 = cbLight._m0[_2351].y + _964;
    float _2615 = cbLight._m0[_2351].z + _965;
    float _2619 = inversesqrt(dot(vec3(_2613, _2614, _2615), vec3(_2613, _2614, _2615)));
    float _2620 = _2619 * _2613;
    float _2621 = _2619 * _2614;
    float _2622 = _2619 * _2615;
    float _2623 = dot(vec3(_883, _884, _885), vec3(cbLight._m0[_2351].xyz));
    float _4738 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
    float _2626 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
    float _4749 = isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0));
    float _2627 = isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0));
    float _2628 = dot(vec3(_883, _884, _885), vec3(_2620, _2621, _2622));
    float _4760 = isnan(0.0) ? _2628 : (isnan(_2628) ? 0.0 : max(_2628, 0.0));
    float _2631 = isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0));
    float _2632 = dot(vec3(cbLight._m0[_2351].xyz), vec3(_2620, _2621, _2622));
    float _4771 = isnan(0.0) ? _2632 : (isnan(_2632) ? 0.0 : max(_2632, 0.0));
    float _2636 = _2612 * _2612;
    float _2640 = ((_2631 * _2631) * (_2636 + (-1.0))) + 1.0;
    float _2648 = exp2(log2(1.0 - (isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0)))) * 5.0);
    float _2649 = 0.959999978542327880859375 - _1032;
    float _2651 = 0.959999978542327880859375 - _1033;
    float _2652 = 0.959999978542327880859375 - _1034;
    float _2659 = 1.0 - _2612;
    float _2670 = (0.5 / (((_2627 * ((_2626 * _2659) + _2612)) + 9.9999999392252902907785028219223e-09) + (((_2627 * _2659) + _2612) * _2626))) * _2626;
    float _4782 = isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0));
    float _2672 = (isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0))) * (_2636 / ((_2640 * _2640) * 3.141590118408203125));
    uint _2686 = _2351 + 9u;
    float _2697 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2391].w)) * _886) * 0.949999988079071044921875);
    float _2698 = _2697 * _2697;
    float _2699 = cbLight._m0[_2391].x + _963;
    float _2700 = cbLight._m0[_2391].y + _964;
    float _2701 = cbLight._m0[_2391].z + _965;
    float _2705 = inversesqrt(dot(vec3(_2699, _2700, _2701), vec3(_2699, _2700, _2701)));
    float _2706 = _2705 * _2699;
    float _2707 = _2705 * _2700;
    float _2708 = _2705 * _2701;
    float _2709 = dot(vec3(_883, _884, _885), vec3(cbLight._m0[_2391].xyz));
    float _4793 = isnan(0.0) ? _2709 : (isnan(_2709) ? 0.0 : max(_2709, 0.0));
    float _2712 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
    float _2713 = dot(vec3(_883, _884, _885), vec3(_2706, _2707, _2708));
    float _4804 = isnan(0.0) ? _2713 : (isnan(_2713) ? 0.0 : max(_2713, 0.0));
    float _2716 = isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0));
    float _2717 = dot(vec3(cbLight._m0[_2391].xyz), vec3(_2706, _2707, _2708));
    float _4815 = isnan(0.0) ? _2717 : (isnan(_2717) ? 0.0 : max(_2717, 0.0));
    float _2721 = _2698 * _2698;
    float _2725 = ((_2716 * _2716) * (_2721 + (-1.0))) + 1.0;
    float _2732 = exp2(log2(1.0 - (isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0)))) * 5.0);
    float _2739 = 1.0 - _2698;
    float _2749 = (0.5 / (((_2627 * ((_2712 * _2739) + _2698)) + 9.9999999392252902907785028219223e-09) + (((_2627 * _2739) + _2698) * _2712))) * _2712;
    float _4826 = isnan(0.0) ? _2749 : (isnan(_2749) ? 0.0 : max(_2749, 0.0));
    float _2751 = (isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0))) * (_2721 / ((_2725 * _2725) * 3.141590118408203125));
    float _2761 = (((((_2732 * _2649) + _1035) * cbLight._m0[_2686].x) * _2751) * _2374) + ((((cbLight._m0[_2598].x * _2340) * ((_2648 * _2649) + _1035)) * _2672) * _2387);
    float _2762 = (((((_2732 * _2651) + _1037) * cbLight._m0[_2686].y) * _2751) * _2374) + ((((cbLight._m0[_2598].y * _2342) * ((_2648 * _2651) + _1037)) * _2672) * _2387);
    float _2763 = (((((_2732 * _2652) + _1038) * cbLight._m0[_2686].z) * _2751) * _2374) + ((((cbLight._m0[_2598].z * _2344) * ((_2648 * _2652) + _1038)) * _2672) * _2387);
    float _2819;
    float _2821;
    float _2823;
    if (_2427)
    {
        _2819 = _2761;
        _2821 = _2762;
        _2823 = _2763;
    }
    else
    {
        uint _2825 = _2351 + 2u;
        uint _2829 = _2351 + 10u;
        float _2843 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2825].w)) * _886) * 0.949999988079071044921875);
        float _2844 = _2843 * _2843;
        float _2845 = cbLight._m0[_2825].x + _963;
        float _2846 = cbLight._m0[_2825].y + _964;
        float _2847 = cbLight._m0[_2825].z + _965;
        float _2851 = inversesqrt(dot(vec3(_2845, _2846, _2847), vec3(_2845, _2846, _2847)));
        float _2852 = _2851 * _2845;
        float _2853 = _2851 * _2846;
        float _2854 = _2851 * _2847;
        float _2855 = dot(vec3(_883, _884, _885), vec3(cbLight._m0[_2825].xyz));
        float _4837 = isnan(0.0) ? _2855 : (isnan(_2855) ? 0.0 : max(_2855, 0.0));
        float _2858 = isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0));
        float _2859 = dot(vec3(_883, _884, _885), vec3(_2852, _2853, _2854));
        float _4848 = isnan(0.0) ? _2859 : (isnan(_2859) ? 0.0 : max(_2859, 0.0));
        float _2862 = isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0));
        float _2863 = dot(vec3(cbLight._m0[_2825].xyz), vec3(_2852, _2853, _2854));
        float _4859 = isnan(0.0) ? _2863 : (isnan(_2863) ? 0.0 : max(_2863, 0.0));
        float _2867 = _2844 * _2844;
        float _2871 = ((_2862 * _2862) * (_2867 + (-1.0))) + 1.0;
        float _2878 = exp2(log2(1.0 - (isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0)))) * 5.0);
        float _2885 = 1.0 - _2844;
        float _2895 = (0.5 / (((_2627 * ((_2858 * _2885) + _2844)) + 9.9999999392252902907785028219223e-09) + (((_2627 * _2885) + _2844) * _2858))) * _2858;
        float _4870 = isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0));
        float _2897 = (isnan(1.0) ? _4870 : (isnan(_4870) ? 1.0 : min(_4870, 1.0))) * (_2867 / ((_2871 * _2871) * 3.141590118408203125));
        float _2898 = isnan(1.0) ? _2366 : (isnan(_2366) ? 1.0 : min(_2366, 1.0));
        _2819 = (((((_2878 * _2649) + _1035) * cbLight._m0[_2829].x) * _2897) * _2898) + _2761;
        _2821 = (((((_2878 * _2651) + _1037) * cbLight._m0[_2829].y) * _2897) * _2898) + _2762;
        _2823 = (((((_2878 * _2652) + _1038) * cbLight._m0[_2829].z) * _2897) * _2898) + _2763;
    }
    float _2929;
    float _2931;
    float _2933;
    if (_2536)
    {
        _2929 = _2819;
        _2931 = _2821;
        _2933 = _2823;
    }
    else
    {
        uint _2940 = _2351 + 3u;
        uint _2944 = _2351 + 11u;
        float _2958 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2940].w)) * _886) * 0.949999988079071044921875);
        float _2959 = _2958 * _2958;
        float _2960 = cbLight._m0[_2940].x + _963;
        float _2961 = cbLight._m0[_2940].y + _964;
        float _2962 = cbLight._m0[_2940].z + _965;
        float _2966 = inversesqrt(dot(vec3(_2960, _2961, _2962), vec3(_2960, _2961, _2962)));
        float _2967 = _2966 * _2960;
        float _2968 = _2966 * _2961;
        float _2969 = _2966 * _2962;
        float _2970 = dot(vec3(_883, _884, _885), vec3(cbLight._m0[_2940].xyz));
        float _4886 = isnan(0.0) ? _2970 : (isnan(_2970) ? 0.0 : max(_2970, 0.0));
        float _2973 = isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0));
        float _2974 = dot(vec3(_883, _884, _885), vec3(_2967, _2968, _2969));
        float _4897 = isnan(0.0) ? _2974 : (isnan(_2974) ? 0.0 : max(_2974, 0.0));
        float _2977 = isnan(1.0) ? _4897 : (isnan(_4897) ? 1.0 : min(_4897, 1.0));
        float _2978 = dot(vec3(cbLight._m0[_2940].xyz), vec3(_2967, _2968, _2969));
        float _4908 = isnan(0.0) ? _2978 : (isnan(_2978) ? 0.0 : max(_2978, 0.0));
        float _2982 = _2959 * _2959;
        float _2986 = ((_2977 * _2977) * (_2982 + (-1.0))) + 1.0;
        float _2993 = exp2(log2(1.0 - (isnan(1.0) ? _4908 : (isnan(_4908) ? 1.0 : min(_4908, 1.0)))) * 5.0);
        float _3000 = 1.0 - _2959;
        float _3010 = (0.5 / (((_2627 * ((_2973 * _3000) + _2959)) + 9.9999999392252902907785028219223e-09) + (((_2627 * _3000) + _2959) * _2973))) * _2973;
        float _4919 = isnan(0.0) ? _3010 : (isnan(_3010) ? 0.0 : max(_3010, 0.0));
        float _3012 = (isnan(1.0) ? _4919 : (isnan(_4919) ? 1.0 : min(_4919, 1.0))) * (_2982 / ((_2986 * _2986) * 3.141590118408203125));
        float _3013 = isnan(1.0) ? _2367 : (isnan(_2367) ? 1.0 : min(_2367, 1.0));
        _2929 = (((((_2993 * _2649) + _1035) * cbLight._m0[_2944].x) * _3012) * _3013) + _2819;
        _2931 = (((((_2993 * _2651) + _1037) * cbLight._m0[_2944].y) * _3012) * _3013) + _2821;
        _2933 = (((((_2993 * _2652) + _1038) * cbLight._m0[_2944].z) * _3012) * _3013) + _2823;
    }
    float _3079;
    float _3081;
    float _3083;
    float _3085;
    float _3087;
    float _3089;
    if (_2349.y == 0u)
    {
        uvec4 _3034 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3035 = _3034.x;
        uint _3046 = uint((float(_3034.y) * floor(float(uint(cbSceneParam._m0[85u].y * _972) / _3035))) + floor(float(uint(cbSceneParam._m0[85u].x * _971) / _3035)));
        float _3056 = (log2(_2127 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3057 = isnan(0.0) ? _3056 : (isnan(_3056) ? 0.0 : max(_3056, 0.0));
        uint _3060 = uint(isnan(14.0) ? _3057 : (isnan(_3057) ? 14.0 : min(_3057, 14.0)));
        uvec4 _3065 = texelFetch(g_lightClusterGridBuffer, int(((_3060 << 2u) + (_3046 << 6u)) >> 2u));
        uint _3066 = _3065.x;
        uint _3067 = _3034.z;
        float _3191;
        float _3193;
        float _3195;
        float _3197;
        float _3199;
        float _3201;
        if (((((1u << ((_3067 >> 4u) & 15u)) + 4294967295u) & _3066) == 0u) || ((_3067 & 240u) == 0u))
        {
            _3191 = 0.0;
            _3193 = 0.0;
            _3195 = 0.0;
            _3197 = 0.0;
            _3199 = 0.0;
            _3201 = 0.0;
        }
        else
        {
            float _3192;
            float _3194;
            float _3196;
            float _3198;
            float _3200;
            float _3202;
            float _3344 = 0.0;
            float _3345 = 0.0;
            float _3346 = 0.0;
            float _3347 = 0.0;
            float _3348 = 0.0;
            float _3349 = 0.0;
            uint _3350 = 0u;
            uint _3359;
            bool _3360;
            for (;;)
            {
                _3359 = texelFetch(g_lightClassification, int((((_3060 << 5u) + (_3046 << 9u)) + (_3350 << 2u)) >> 2u)).x;
                _3360 = _3359 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3360)
                {
                    frontier_phi_66_pred = _3349;
                    frontier_phi_66_pred_1 = _3348;
                    frontier_phi_66_pred_2 = _3347;
                    frontier_phi_66_pred_3 = _3346;
                    frontier_phi_66_pred_4 = _3345;
                    frontier_phi_66_pred_5 = _3344;
                }
                else
                {
                    float _3468;
                    float _3469;
                    float _3470;
                    float _3471;
                    float _3472;
                    float _3473;
                    uint _3474;
                    _3468 = _3344;
                    _3469 = _3345;
                    _3470 = _3346;
                    _3471 = _3347;
                    _3472 = _3348;
                    _3473 = _3349;
                    _3474 = _3359;
                    float _3400;
                    float _3401;
                    float _3402;
                    float _3403;
                    float _3404;
                    float _3405;
                    for (;;)
                    {
                        uint _3478 = uint(findLSB(_3474)) + (_3350 << 5u);
                        uint _3475 = (_3474 + 4294967295u) & _3474;
                        uint _3480 = _3478 * 48u;
                        vec4 _3494 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3480)).x, texelFetch(g_PointLightRenderingBuffer, int(_3480 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3480 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3480 + 3u)).x));
                        uint _3500 = (_3478 * 48u) + 4u;
                        vec4 _3513 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3500)).x, texelFetch(g_PointLightRenderingBuffer, int(_3500 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3500 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3500 + 3u)).x));
                        uint _3519 = (_3478 * 48u) + 8u;
                        vec3 _3530 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3519)).x, texelFetch(g_PointLightRenderingBuffer, int(_3519 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3519 + 2u)).x));
                        float _3534 = _3494.x - _2125;
                        float _3535 = _3494.y - _2126;
                        float _3536 = _3494.z - _2127;
                        float _3537 = dot(vec3(_3534, _3535, _3536), vec3(_3534, _3535, _3536));
                        float _3540 = inversesqrt(_3537);
                        float _3541 = _3540 * _3534;
                        float _3542 = _3540 * _3535;
                        float _3543 = _3540 * _3536;
                        float _3544 = dot(vec3(_991, _994, _997), vec3(_3541, _3542, _3543));
                        float _3549 = 1.0 - (_3537 * _3494.w);
                        float _4945 = isnan(0.0) ? _3549 : (isnan(_3549) ? 0.0 : max(_3549, 0.0));
                        float _3550 = isnan(1.0) ? _4945 : (isnan(_4945) ? 1.0 : min(_4945, 1.0));
                        float _3551 = sqrt(_3537) * _3513.w;
                        float _3554 = 1.39999997615814208984375 / (_3551 + 1.39999997615814208984375);
                        float _3555 = _3554 * _3554;
                        float _3558 = ((1.0 - _3555) * _3544) + _3555;
                        float _3561 = _3551 * _3551;
                        float _3565 = ((isnan(0.0) ? _3558 : (isnan(_3558) ? 0.0 : max(_3558, 0.0))) * _3550) / ((_3561 * 0.699999988079071044921875) + 1.0);
                        float _3569 = (-0.0) - _2125;
                        float _3570 = (-0.0) - _2126;
                        float _3571 = (-0.0) - _2127;
                        float _3575 = inversesqrt(dot(vec3(_3569, _3570, _3571), vec3(_3569, _3570, _3571)));
                        float _3576 = _3575 * _3569;
                        float _3577 = _3575 * _3570;
                        float _3578 = _3575 * _3571;
                        float _3585 = exp2(log2(1.0 / ((_3561 * 3.5) + 5.0)) * 0.25);
                        float _3586 = 1.0 - _1066;
                        float _3593 = sqrt(1.0 - ((1.0 - (_3586 * _3586)) * (1.0 - (_3585 * _3585))));
                        float _3594 = _3593 * _3593;
                        float _3595 = _3594 * _3594;
                        float _3596 = _3576 + _3541;
                        float _3597 = _3577 + _3542;
                        float _3598 = _3578 + _3543;
                        float _3602 = inversesqrt(dot(vec3(_3596, _3597, _3598), vec3(_3596, _3597, _3598)));
                        float _3606 = dot(vec3(_991, _994, _997), vec3(_3576, _3577, _3578));
                        float _4961 = isnan(0.0) ? _3606 : (isnan(_3606) ? 0.0 : max(_3606, 0.0));
                        float _3609 = isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0));
                        float _3610 = dot(vec3(_991, _994, _997), vec3(_3602 * _3596, _3602 * _3597, _3602 * _3598));
                        float _4972 = isnan(0.0) ? _3610 : (isnan(_3610) ? 0.0 : max(_3610, 0.0));
                        float _3613 = isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0));
                        float _3617 = ((_3613 * _3613) * (_3595 + (-1.0))) + 1.0;
                        float _3618 = _3554 * _3594;
                        float _3619 = _3618 * _3618;
                        float _3622 = ((1.0 - _3619) * _3544) + _3619;
                        float _4983 = isnan(0.0) ? _3622 : (isnan(_3622) ? 0.0 : max(_3622, 0.0));
                        float _3623 = isnan(1.0) ? _4983 : (isnan(_4983) ? 1.0 : min(_4983, 1.0));
                        float _3624 = 1.0 - _3594;
                        float _3634 = (0.5 / (((_3623 * ((_3609 * _3624) + _3594)) + 9.9999999392252902907785028219223e-09) + (((_3623 * _3624) + _3594) * _3609))) * _3623;
                        float _4994 = isnan(0.0) ? _3634 : (isnan(_3634) ? 0.0 : max(_3634, 0.0));
                        float _3645 = (((_3595 * 3.1415927410125732421875) * (isnan(1.0) ? _4994 : (isnan(_4994) ? 1.0 : min(_4994, 1.0)))) / ((_3617 * _3617) * ((_3561 * 2.1991131305694580078125) + 3.141590118408203125))) * _3550;
                        _3403 = (_3565 * _3513.x) + _3471;
                        _3404 = (_3565 * _3513.y) + _3472;
                        _3405 = (_3565 * _3513.z) + _3473;
                        _3400 = (_3645 * _3530.x) + _3468;
                        _3401 = (_3645 * _3530.y) + _3469;
                        _3402 = (_3645 * _3530.z) + _3470;
                        if (_3475 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3468 = _3400;
                            _3469 = _3401;
                            _3470 = _3402;
                            _3471 = _3403;
                            _3472 = _3404;
                            _3473 = _3405;
                            _3474 = _3475;
                        }
                    }
                    frontier_phi_66_pred = _3405;
                    frontier_phi_66_pred_1 = _3404;
                    frontier_phi_66_pred_2 = _3403;
                    frontier_phi_66_pred_3 = _3402;
                    frontier_phi_66_pred_4 = _3401;
                    frontier_phi_66_pred_5 = _3400;
                }
                _3202 = frontier_phi_66_pred;
                _3200 = frontier_phi_66_pred_1;
                _3198 = frontier_phi_66_pred_2;
                _3196 = frontier_phi_66_pred_3;
                _3194 = frontier_phi_66_pred_4;
                _3192 = frontier_phi_66_pred_5;
                uint _3351 = _3350 + 1u;
                if (_3351 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3344 = _3192;
                    _3345 = _3194;
                    _3346 = _3196;
                    _3347 = _3198;
                    _3348 = _3200;
                    _3349 = _3202;
                    _3350 = _3351;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3191 = _3192;
            _3193 = _3194;
            _3195 = _3196;
            _3197 = _3198;
            _3199 = _3200;
            _3201 = _3202;
        }
        uvec4 _3205 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3206 = _3205.z;
        uint _3208 = (_3206 >> 8u) & 15u;
        float _3312;
        float _3314;
        float _3316;
        float _3318;
        float _3320;
        float _3322;
        if (((4294967295u << _3208) & _3066) == 0u)
        {
            _3312 = _3191;
            _3314 = _3193;
            _3316 = _3195;
            _3318 = _3197;
            _3320 = _3199;
            _3322 = _3201;
        }
        else
        {
            float _3337 = inversesqrt(dot(vec3(_2125, _2126, _2127), vec3(_2125, _2126, _2127)));
            float _3338 = _3337 * _2125;
            float _3339 = _3337 * _2126;
            float _3340 = _3337 * _2127;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3208 < ((_3206 >> 12u) & 15u))
            {
                float _3313;
                float _3315;
                float _3317;
                float _3319;
                float _3321;
                float _3323;
                float _3451 = _3191;
                float _3452 = _3193;
                float _3453 = _3195;
                float _3454 = _3197;
                float _3455 = _3199;
                float _3456 = _3201;
                uint _3457 = _3208;
                uint _3466;
                bool _3467;
                for (;;)
                {
                    _3466 = texelFetch(g_lightClassification, int((((_3060 << 5u) + (_3046 << 9u)) + (_3457 << 2u)) >> 2u)).x;
                    _3467 = _3466 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3467)
                    {
                        frontier_phi_72_pred = _3456;
                        frontier_phi_72_pred_1 = _3455;
                        frontier_phi_72_pred_2 = _3454;
                        frontier_phi_72_pred_3 = _3453;
                        frontier_phi_72_pred_4 = _3452;
                        frontier_phi_72_pred_5 = _3451;
                    }
                    else
                    {
                        float _3650;
                        float _3651;
                        float _3652;
                        float _3653;
                        float _3654;
                        float _3655;
                        float _3944;
                        float _3945;
                        float _3946;
                        float _3947;
                        float _3948;
                        float _3949;
                        float _3663 = _3451;
                        float _3664 = _3452;
                        float _3665 = _3453;
                        float _3666 = _3454;
                        float _3667 = _3455;
                        float _3668 = _3456;
                        uint _3669 = _3466;
                        uint _3670;
                        vec4 _3695;
                        float _3696;
                        vec4 _3711;
                        vec3 _3723;
                        vec4 _3738;
                        vec4 _3753;
                        float _3800;
                        bool _3801;
                        for (;;)
                        {
                            uint _3680 = ((_3457 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3669));
                            _3670 = (_3669 + 4294967295u) & _3669;
                            uint _3682 = _3680 * 40u;
                            _3695 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3682)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3682 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3682 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3682 + 3u)).x));
                            _3696 = _3695.w;
                            uint _3698 = (_3680 * 40u) + 4u;
                            _3711 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3698)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 3u)).x));
                            uint _3713 = (_3680 * 40u) + 8u;
                            _3723 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3713)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 2u)).x));
                            uint _3725 = (_3680 * 40u) + 16u;
                            _3738 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3725)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3725 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3725 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3725 + 3u)).x));
                            uint _3740 = (_3680 * 40u) + 20u;
                            _3753 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3740)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3740 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3740 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3740 + 3u)).x));
                            uint _3756 = (_3680 * 40u) + 24u;
                            vec4 _3769 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3756)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3756 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3756 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3756 + 3u)).x));
                            uint _3775 = (_3680 * 40u) + 28u;
                            vec4 _3788 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3775)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3775 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3775 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3775 + 3u)).x));
                            _3800 = fma(_2127, _3788.z, fma(_2126, _3788.y, _3788.x * _2125)) + _3788.w;
                            _3801 = !((fma(_2127, _3769.z, fma(_2126, _3769.y, _3769.x * _2125)) + _3769.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3801)
                            {
                                float _3828 = _3695.x - _2125;
                                float _3829 = _3695.y - _2126;
                                float _3830 = _3695.z - _2127;
                                float _3831 = dot(vec3(_3828, _3829, _3830), vec3(_3828, _3829, _3830));
                                float _3834 = inversesqrt(_3831);
                                float _3835 = _3834 * _3828;
                                float _3836 = _3834 * _3829;
                                float _3837 = _3834 * _3830;
                                float _3841 = 1.0 - (_3831 / (_3696 * _3696));
                                float _5005 = isnan(0.0) ? _3841 : (isnan(_3841) ? 0.0 : max(_3841, 0.0));
                                float _3842 = isnan(1.0) ? _5005 : (isnan(_5005) ? 1.0 : min(_5005, 1.0));
                                float _3846 = sqrt(_3831) * _3711.w;
                                float _3848 = 1.39999997615814208984375 / (_3846 + 1.39999997615814208984375);
                                float _3849 = _3848 * _3848;
                                float _3852 = ((1.0 - _3849) * dot(vec3(_3835, _3836, _3837), vec3(_991, _994, _997))) + _3849;
                                float _3855 = _3846 * _3846;
                                float _3859 = (fma(_2127, _3738.z, fma(_2126, _3738.y, _3738.x * _2125)) + _3738.w) / _3800;
                                float _3860 = (fma(_2127, _3753.z, fma(_2126, _3753.y, _3753.x * _2125)) + _3753.w) / _3800;
                                float _3864 = 1.0 - dot(vec2(_3859, _3860), vec2(_3859, _3860));
                                float _5021 = isnan(0.0) ? _3864 : (isnan(_3864) ? 0.0 : max(_3864, 0.0));
                                float _3865 = isnan(1.0) ? _5021 : (isnan(_5021) ? 1.0 : min(_5021, 1.0));
                                float _3866 = _3865 * (((isnan(0.0) ? _3852 : (isnan(_3852) ? 0.0 : max(_3852, 0.0))) * _3842) / ((_3855 * 0.699999988079071044921875) + 1.0));
                                float _3878 = exp2(log2(1.0 / ((_3855 * 3.5) + 5.0)) * 0.25);
                                float _3879 = 1.0 - _1066;
                                float _3886 = sqrt(1.0 - ((1.0 - (_3879 * _3879)) * (1.0 - (_3878 * _3878))));
                                float _3887 = _3886 * _3886;
                                float _3888 = _3887 * _3887;
                                float _3889 = _3835 - _3338;
                                float _3890 = _3836 - _3339;
                                float _3891 = _3837 - _3340;
                                float _3895 = inversesqrt(dot(vec3(_3889, _3890, _3891), vec3(_3889, _3890, _3891)));
                                float _3899 = dot(vec3(_991, _994, _997), vec3((-0.0) - _3338, (-0.0) - _3339, (-0.0) - _3340));
                                float _5032 = isnan(0.0) ? _3899 : (isnan(_3899) ? 0.0 : max(_3899, 0.0));
                                float _3902 = isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0));
                                float _3903 = dot(vec3(_991, _994, _997), vec3(_3895 * _3889, _3895 * _3890, _3895 * _3891));
                                float _5043 = isnan(0.0) ? _3903 : (isnan(_3903) ? 0.0 : max(_3903, 0.0));
                                float _3906 = isnan(1.0) ? _5043 : (isnan(_5043) ? 1.0 : min(_5043, 1.0));
                                float _3910 = ((_3906 * _3906) * (_3888 + (-1.0))) + 1.0;
                                float _3911 = _3848 * _3887;
                                float _3912 = _3911 * _3911;
                                float _3918 = ((1.0 - _3912) * dot(vec3(_991, _994, _997), vec3(_3835, _3836, _3837))) + _3912;
                                float _5054 = isnan(0.0) ? _3918 : (isnan(_3918) ? 0.0 : max(_3918, 0.0));
                                float _3919 = isnan(1.0) ? _5054 : (isnan(_5054) ? 1.0 : min(_5054, 1.0));
                                float _3920 = 1.0 - _3887;
                                float _3930 = (0.5 / (((_3919 * ((_3902 * _3920) + _3887)) + 9.9999999392252902907785028219223e-09) + (((_3919 * _3920) + _3887) * _3902))) * _3919;
                                float _5065 = isnan(0.0) ? _3930 : (isnan(_3930) ? 0.0 : max(_3930, 0.0));
                                float _3940 = (_3865 * _3842) * (((_3888 * 3.1415927410125732421875) * (isnan(1.0) ? _5065 : (isnan(_5065) ? 1.0 : min(_5065, 1.0)))) / ((_3910 * _3910) * ((_3855 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3866 * _3711.y;
                                frontier_phi_78_pred_1 = _3866 * _3711.x;
                                frontier_phi_78_pred_2 = _3940 * _3723.z;
                                frontier_phi_78_pred_3 = _3940 * _3723.y;
                                frontier_phi_78_pred_4 = _3940 * _3723.x;
                                frontier_phi_78_pred_5 = _3866 * _3711.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3948 = frontier_phi_78_pred;
                            _3947 = frontier_phi_78_pred_1;
                            _3946 = frontier_phi_78_pred_2;
                            _3945 = frontier_phi_78_pred_3;
                            _3944 = frontier_phi_78_pred_4;
                            _3949 = frontier_phi_78_pred_5;
                            _3653 = _3947 + _3666;
                            _3654 = _3948 + _3667;
                            _3655 = _3949 + _3668;
                            _3650 = _3944 + _3663;
                            _3651 = _3945 + _3664;
                            _3652 = _3946 + _3665;
                            if (_3670 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3663 = _3650;
                                _3664 = _3651;
                                _3665 = _3652;
                                _3666 = _3653;
                                _3667 = _3654;
                                _3668 = _3655;
                                _3669 = _3670;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3655;
                        frontier_phi_72_pred_1 = _3654;
                        frontier_phi_72_pred_2 = _3653;
                        frontier_phi_72_pred_3 = _3652;
                        frontier_phi_72_pred_4 = _3651;
                        frontier_phi_72_pred_5 = _3650;
                    }
                    _3323 = frontier_phi_72_pred;
                    _3321 = frontier_phi_72_pred_1;
                    _3319 = frontier_phi_72_pred_2;
                    _3317 = frontier_phi_72_pred_3;
                    _3315 = frontier_phi_72_pred_4;
                    _3313 = frontier_phi_72_pred_5;
                    uint _3458 = _3457 + 1u;
                    if (_3458 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3451 = _3313;
                        _3452 = _3315;
                        _3453 = _3317;
                        _3454 = _3319;
                        _3455 = _3321;
                        _3456 = _3323;
                        _3457 = _3458;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3323;
                frontier_phi_60_61_ladder_1 = _3321;
                frontier_phi_60_61_ladder_2 = _3317;
                frontier_phi_60_61_ladder_3 = _3315;
                frontier_phi_60_61_ladder_4 = _3313;
                frontier_phi_60_61_ladder_5 = _3319;
            }
            else
            {
                frontier_phi_60_61_ladder = _3201;
                frontier_phi_60_61_ladder_1 = _3199;
                frontier_phi_60_61_ladder_2 = _3195;
                frontier_phi_60_61_ladder_3 = _3193;
                frontier_phi_60_61_ladder_4 = _3191;
                frontier_phi_60_61_ladder_5 = _3197;
            }
            _3312 = frontier_phi_60_61_ladder_4;
            _3314 = frontier_phi_60_61_ladder_3;
            _3316 = frontier_phi_60_61_ladder_2;
            _3318 = frontier_phi_60_61_ladder_5;
            _3320 = frontier_phi_60_61_ladder_1;
            _3322 = frontier_phi_60_61_ladder;
        }
        float _3327 = isnan(1.0) ? _1050 : (isnan(_1050) ? 1.0 : min(_1050, 1.0));
        _3079 = (_3327 * _3318) + _2591;
        _3081 = (_3327 * _3320) + _2593;
        _3083 = (_3327 * _3322) + _2595;
        _3085 = ((_3312 * _1035) * _3327) + _2929;
        _3087 = ((_3314 * _1037) * _3327) + _2931;
        _3089 = ((_3316 * _1038) * _3327) + _2933;
    }
    else
    {
        _3079 = _2591;
        _3081 = _2593;
        _3083 = _2595;
        _3085 = _2929;
        _3087 = _2931;
        _3089 = _2933;
    }
    uint _3095 = _1011 + uint(cbMatDynParam._m0[0u].w);
    float _3101 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _3107 = (((((_3101 * cbMtdParam._m0[14u].x) * _741.x) * _764) * _838) * (((1.0 - _817) * cbMtdParam._m0[20u].w) + _817)) * cbInstanceData._m0[_3095].x;
    float _3113 = (((((_3101 * cbMtdParam._m0[14u].y) * _741.y) * _764) * _838) * (((1.0 - _819) * cbMtdParam._m0[20u].w) + _819)) * cbInstanceData._m0[_3095].y;
    float _3119 = (((((_3101 * cbMtdParam._m0[14u].z) * _741.z) * _764) * _838) * (((1.0 - _821) * cbMtdParam._m0[20u].w) + _821)) * cbInstanceData._m0[_3095].z;
    float _5081 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
    float _5092 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    float _5103 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
    float _3136 = (((isnan(1.0) ? _5081 : (isnan(_5081) ? 1.0 : min(_5081, 1.0))) * (_3079 + ((isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0))) * _1050))) + ((_3085 + ((isnan(0.0) ? _2072 : (isnan(_2072) ? 0.0 : max(_2072, 0.0))) * _1859)) * cbPerFrame._m0[3u].x)) + _3107;
    float _3138 = (_3113 + ((_3087 + ((isnan(0.0) ? _2075 : (isnan(_2075) ? 0.0 : max(_2075, 0.0))) * _1859)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5092 : (isnan(_5092) ? 1.0 : min(_5092, 1.0))) * (_3081 + ((isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0))) * _1050)));
    float _3140 = (_3119 + ((_3089 + ((isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0))) * _1859)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5103 : (isnan(_5103) ? 1.0 : min(_5103, 1.0))) * (_3083 + ((isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0))) * _1050)));
    float _5129 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3153 = isnan(1.0) ? _5129 : (isnan(_5129) ? 1.0 : min(_5129, 1.0));
    uint _3154 = _1010 + 6u;
    float _3162 = _971 / cbSceneParam._m0[86u].x;
    float _3163 = _972 / cbSceneParam._m0[86u].y;
    vec4 _3177 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3162, _3163, (log2((isnan(cbSceneParam._m0[77u].w) ? _906 : (isnan(_906) ? cbSceneParam._m0[77u].w : min(_906, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3179 = _3177.x;
    float _3180 = _3177.y;
    float _3181 = _3177.z;
    float _3182 = _3177.w;
    float _3253;
    float _3255;
    float _3257;
    float _3259;
    if (_906 > cbSceneParam._m0[78u].w)
    {
        float _3216 = isnan(_906) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _906 : min(cbSceneParam._m0[80u].w, _906));
        float _3217 = _3216 / _906;
        float _3228 = _3217 * _956;
        float _3229 = _957 * _3217;
        float _3230 = (-0.0) - _3229;
        float _3231 = _3217 * _958;
        float _3233 = (cbSceneParam._m0[77u].w * _3230) / _3216;
        float _3234 = _3233 + cbSceneParam._m0[79u].w;
        float _3235 = cbSceneParam._m0[79u].w - _3229;
        float _3241 = sqrt(((_3228 * _3228) + (_3229 * _3229)) + (_3231 * _3231));
        float _3244 = (1.0 - (cbSceneParam._m0[77u].w / _3216)) * _3241;
        float _3249 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3251 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3413;
        if (abs((_3230 - _3233) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3413 = ((((_3234 > 0.0) ? exp2(_3249 * _3234) : (2.0 - exp2(_3251 * _3234))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3244;
        }
        else
        {
            float _3373 = 1.0 / cbSceneParam._m0[80u].x;
            float _3374 = isnan(_3235) ? _3234 : (isnan(_3234) ? _3235 : max(_3234, _3235));
            float _3375 = isnan(_3235) ? _3234 : (isnan(_3234) ? _3235 : min(_3234, _3235));
            float _3384 = isnan(0.0) ? _3374 : (isnan(_3374) ? 0.0 : min(_3374, 0.0));
            float _3385 = isnan(0.0) ? _3375 : (isnan(_3375) ? 0.0 : min(_3375, 0.0));
            _3413 = ((abs(_3241 / _3230) * cbSceneParam._m0[80u].y) * ((((_3384 - _3385) * 2.0) - ((exp2(_3249 * (isnan(0.0) ? _3374 : (isnan(_3374) ? 0.0 : max(_3374, 0.0)))) - exp2(_3249 * (isnan(0.0) ? _3375 : (isnan(_3375) ? 0.0 : max(_3375, 0.0))))) * _3373)) - ((exp2(_3251 * _3384) - exp2(_3251 * _3385)) * _3373))) + (_3244 * cbSceneParam._m0[80u].z);
        }
        vec4 _3415 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3162, _3163, 1.0), 0.0);
        float _3424 = exp2((_3413 * (-1.44269502162933349609375)) * (1.0 - _3415.w));
        float _3425 = log2(_3424);
        float _3441 = log2(_3182);
        _3253 = (exp2(_3441 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3425 * cbSceneParam._m0[78u].x)) * _3415.x) / cbSceneParam._m0[78u].x)) + _3179;
        _3255 = (exp2(_3441 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3425 * cbSceneParam._m0[78u].y)) * _3415.y) / cbSceneParam._m0[78u].y)) + _3180;
        _3257 = (exp2(_3441 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3425 * cbSceneParam._m0[78u].z)) * _3415.z) / cbSceneParam._m0[78u].z)) + _3181;
        _3259 = _3424 * _3182;
    }
    else
    {
        _3253 = _3179;
        _3255 = _3180;
        _3257 = _3181;
        _3259 = _3182;
    }
    float _3271 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3272 = _3271 == 3.0;
    float _3273 = log2(_3259);
    float _3277 = exp2(_3273 * cbSceneParam._m0[78u].x);
    float _3278 = exp2(_3273 * cbSceneParam._m0[78u].y);
    float _3279 = exp2(_3273 * cbSceneParam._m0[78u].z);
    float _3280 = _3277 * (isnan(0.0) ? _3136 : (isnan(_3136) ? 0.0 : max(_3136, 0.0)));
    float _3281 = _3278 * (isnan(0.0) ? _3138 : (isnan(_3138) ? 0.0 : max(_3138, 0.0)));
    float _3282 = _3279 * (isnan(0.0) ? _3140 : (isnan(_3140) ? 0.0 : max(_3140, 0.0)));
    float _3291 = (_3271 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3291 * (_3272 ? _3280 : (_3280 + (cbSceneParam._m0[72u].w * _3253)));
    SV_Target.y = _3291 * (_3272 ? _3281 : (_3281 + (cbSceneParam._m0[72u].w * _3255)));
    SV_Target.z = _3291 * (_3272 ? _3282 : (_3282 + (cbSceneParam._m0[72u].w * _3257)));
    SV_Target.w = cbInstanceData._m0[_3154].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _3107) * _3153) * _3277) * _3291;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3113) * _3153) * _3278) * _3291;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3119) * _3153) * _3279) * _3291;
    SV_Target_1.w = cbInstanceData._m0[_3154].w;
}


