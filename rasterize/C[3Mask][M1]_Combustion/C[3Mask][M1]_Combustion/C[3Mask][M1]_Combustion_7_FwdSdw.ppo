#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1315;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _220 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _221 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _222 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _228 = inversesqrt(dot(vec3(_220, _221, _222), vec3(_220, _221, _222)));
    float _235 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _242 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _264 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _270 = _264.x * cbMtdParam._m0[10u].x;
    float _271 = _264.y * cbMtdParam._m0[10u].y;
    float _272 = _264.z * cbMtdParam._m0[10u].z;
    vec4 _291 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _310 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _338 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w)).x;
    float _348 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _310.x) * 2.0) - _338)) + 1.0;
    float _3979 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _349 = isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0));
    float _356 = (_349 * ((_291.x * cbMtdParam._m0[11u].x) - _270)) + _270;
    float _357 = (_349 * ((_291.y * cbMtdParam._m0[11u].y) - _271)) + _271;
    float _358 = (_349 * ((_291.z * cbMtdParam._m0[11u].z) - _272)) + _272;
    vec4 _376 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _389 = (((((1.0 - _310.y) * 2.0) - _338) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _3990 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _390 = isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0));
    float _397 = (((_376.x * cbMtdParam._m0[12u].x) - _356) * _390) + _356;
    float _398 = (_390 * ((_376.y * cbMtdParam._m0[12u].y) - _357)) + _357;
    float _399 = (_390 * ((_376.z * cbMtdParam._m0[12u].z) - _358)) + _358;
    vec4 _417 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _430 = (((((1.0 - _310.z) * 2.0) - _338) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _4001 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _431 = isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0));
    float _438 = (((_417.x * cbMtdParam._m0[13u].x) - _397) * _431) + _397;
    float _439 = (_431 * ((_417.y * cbMtdParam._m0[13u].y) - _398)) + _398;
    float _440 = (_431 * ((_417.z * cbMtdParam._m0[13u].z) - _399)) + _399;
    vec4 _453 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.z) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.w) + cbTextureTilingScale._m0[20u].w));
    vec4 _468 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _470 = _468.x;
    float _488 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _470) * _349) + _470;
    float _505 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _488) * _390) + _488;
    float _522 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x - _505) * _431) + _505;
    vec4 _535 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _537 = _535.x;
    float _538 = _535.y;
    float _539 = _535.z;
    vec4 _551 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _562 = ((_551.x - _537) * _349) + _537;
    float _563 = ((_551.y - _538) * _349) + _538;
    float _564 = ((_551.z - _539) * _349) + _539;
    vec4 _577 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _588 = ((_577.x - _562) * _390) + _562;
    float _589 = ((_577.y - _563) * _390) + _563;
    float _590 = ((_577.z - _564) * _390) + _564;
    vec4 _603 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _616 = ((_603.z - _590) * _431) + _590;
    float _619 = ((((_603.x - _588) * _431) + _588) * 2.0) + (-1.0);
    float _621 = ((((_603.y - _589) * _431) + _589) * 2.0) + (-1.0);
    float _622 = dot(vec2(_619, _621), vec2(_619, _621));
    float _4012 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _627 = sqrt(1.0 - (isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0))));
    vec4 _659 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[15u].x) + cbTextureTilingScale._m0[15u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[15u].y) + cbTextureTilingScale._m0[15u].w));
    float _673 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4023 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
    float _674 = isnan(1.0) ? _4023 : (isnan(_4023) ? 1.0 : min(_4023, 1.0));
    float _682 = (((_674 * _674) * (3.0 - (_674 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _690 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _698 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4034 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    float _699 = isnan(1.0) ? _4034 : (isnan(_4034) ? 1.0 : min(_4034, 1.0));
    float _703 = (_699 * _699) * (3.0 - (_699 * 2.0));
    float _704 = _703 * cbMtdParam._m0[22u].x;
    float _705 = _703 * cbMtdParam._m0[22u].y;
    float _706 = sin(_690);
    float _707 = cos(_690);
    float _708 = TEXCOORD.z - _704;
    float _709 = TEXCOORD.w - _705;
    vec4 _729 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_704 + fma(_709, (-0.0) - _706, _708 * _707))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_709, _707, _708 * _706) + _705)) + cbTextureTilingScale._m0[2u].w));
    float _735 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _729.x;
    float _737 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _729.y;
    float _739 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _729.z;
    float _759 = (TEXCOORD_5.x - (((_453.x + 0.00999999977648258209228515625) * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _4045 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _760 = isnan(1.0) ? _4045 : (isnan(_4045) ? 1.0 : min(_4045, 1.0));
    float _763 = fma(_627, _235 * NORMAL.x, fma(_621, _242 * TANGENT.x, (_228 * _220) * _619));
    float _766 = fma(_627, _235 * NORMAL.y, fma(_621, _242 * TANGENT.y, (_228 * _221) * _619));
    float _769 = fma(_627, _235 * NORMAL.z, fma(_621, _242 * TANGENT.z, (_228 * _222) * _619));
    float _773 = inversesqrt(dot(vec3(_763, _766, _769), vec3(_763, _766, _769)));
    float _774 = _773 * _763;
    float _775 = _773 * _766;
    float _776 = _773 * _769;
    float _4056 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _777 = isnan(1.0) ? _4056 : (isnan(_4056) ? 1.0 : min(_4056, 1.0));
    float _4067 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _4078 = isnan(0.0) ? _439 : (isnan(_439) ? 0.0 : max(_439, 0.0));
    float _4089 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
    float _4100 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _781 = isnan(1.0) ? _4100 : (isnan(_4100) ? 1.0 : min(_4100, 1.0));
    float _797 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _837 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _847 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _837);
    float _848 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _837);
    float _849 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _837);
    float _853 = inversesqrt(dot(vec3(_847, _848, _849), vec3(_847, _848, _849)));
    float _854 = _847 * _853;
    float _855 = _848 * _853;
    float _856 = _849 * _853;
    float _862 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _863 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _882 = fma(_776, cbSceneParam._m0[5u].z, fma(_775, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _774));
    float _885 = fma(_776, cbSceneParam._m0[6u].z, fma(_775, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _774));
    float _888 = fma(_776, cbSceneParam._m0[7u].z, fma(_775, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _774));
    uint _901 = uint(roundEven(NORMAL.w)) * 13u;
    uint _902 = _901 + 9u;
    uint _903 = _902 + uint(cbMatDynParam._m0[0u].w);
    float _909 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4067 : (isnan(_4067) ? 1.0 : min(_4067, 1.0)))) * cbInstanceData._m0[_903].x;
    float _910 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4078 : (isnan(_4078) ? 1.0 : min(_4078, 1.0)))) * cbInstanceData._m0[_903].y;
    float _911 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4089 : (isnan(_4089) ? 1.0 : min(_4089, 1.0)))) * cbInstanceData._m0[_903].z;
    float _4111 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
    float _912 = isnan(1.0) ? _4111 : (isnan(_4111) ? 1.0 : min(_4111, 1.0));
    float _4122 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    float _913 = isnan(1.0) ? _4122 : (isnan(_4122) ? 1.0 : min(_4122, 1.0));
    float _4133 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
    float _914 = isnan(1.0) ? _4133 : (isnan(_4133) ? 1.0 : min(_4133, 1.0));
    float _915 = 1.0 - _781;
    float _916 = _912 * _915;
    float _917 = _913 * _915;
    float _918 = _914 * _915;
    float _923 = (_912 + (-0.039999999105930328369140625)) * _781;
    float _924 = (_913 + (-0.039999999105930328369140625)) * _781;
    float _925 = (_914 + (-0.039999999105930328369140625)) * _781;
    float _926 = _923 + 0.039999999105930328369140625;
    float _928 = _924 + 0.039999999105930328369140625;
    float _929 = _925 + 0.039999999105930328369140625;
    vec4 _938 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _862, cbSceneParam._m0[86u].y * _863));
    float _941 = _938.x * TEXCOORD_5.w;
    float _942 = dot(vec3(_774, _775, _776), vec3(_854, _855, _856));
    float _945 = _942 * 2.0;
    float _949 = (_945 * _774) - _854;
    float _950 = (_945 * _775) - _855;
    float _951 = (_945 * _776) - _856;
    float _955 = abs(dot(vec3(_854, _855, _856), vec3(_774, _775, _776)));
    float _4144 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
    float _957 = sqrt(_777);
    float _969 = exp2((_957 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4144 : (isnan(_4144) ? 1.0 : min(_4144, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_957 * 3.0));
    float _975 = (1.0 - _969) * ((_957 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _976 = _969 * _957;
    float _1004 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1008 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1012 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1314;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    float _1320;
    float _1321;
    float _1322;
    float _1323;
    float _1324;
    float _1325;
    float _1326;
    float _1327;
    float _1328;
    float _1329;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1039 = fma(_1012, cbModelParam._m0[26u].z, fma(_1008, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1004));
        float _1043 = fma(_1012, cbModelParam._m0[27u].z, fma(_1008, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1004));
        float _1047 = fma(_1012, cbModelParam._m0[28u].z, fma(_1008, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1004));
        float _1072 = _1004 + _774;
        float _1073 = _1008 + _775;
        float _1074 = _1012 + _776;
        float _1084 = fma(_1074, cbModelParam._m0[26u].z, fma(_1073, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1072)) - _1039;
        float _1085 = fma(_1074, cbModelParam._m0[27u].z, fma(_1073, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1072)) - _1043;
        float _1086 = fma(_1074, cbModelParam._m0[28u].z, fma(_1073, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1072)) - _1047;
        float _1090 = inversesqrt(dot(vec3(_1084, _1085, _1086), vec3(_1084, _1085, _1086)));
        float _1103 = ((_1090 * _1084) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1039 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1104 = ((_1090 * _1085) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1043 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1105 = ((_1090 * _1086) / cbModelParam._m0[34u].z) + ((((((_1047 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1108 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1103, _1104, _1105), 0.0);
        vec4 _1115 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1103, _1104, _1105), 0.0);
        vec4 _1122 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1103, _1104, _1105), 0.0);
        vec4 _1129 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1103, _1104, _1105), 0.0);
        float _1142 = exp2((_1108.w + (-0.5)) * 20.0) * 2.0;
        float _1143 = _1142 * (_1108.x + (-0.5));
        float _1144 = _1142 * (_1108.y + (-0.5));
        float _1145 = _1142 * (_1108.z + (-0.5));
        float _1152 = exp2((_1115.w + (-0.5)) * 20.0) * 2.0;
        float _1153 = _1152 * (_1115.x + (-0.5));
        float _1154 = _1152 * (_1115.y + (-0.5));
        float _1155 = _1152 * (_1115.z + (-0.5));
        float _1162 = exp2((_1122.w + (-0.5)) * 20.0) * 2.0;
        float _1163 = _1162 * (_1122.x + (-0.5));
        float _1164 = _1162 * (_1122.y + (-0.5));
        float _1165 = _1162 * (_1122.z + (-0.5));
        float _1172 = exp2((_1129.w + (-0.5)) * 20.0) * 2.0;
        float _1173 = _1172 * (_1129.x + (-0.5));
        float _1174 = _1172 * (_1129.y + (-0.5));
        float _1175 = _1172 * (_1129.z + (-0.5));
        float _1176 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
        float _1177 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
        float _1178 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
        float _1179 = _1143 * 0.5;
        float _1180 = _1153 * 0.5;
        float _1181 = _1163 * 0.5;
        float _1182 = dot(vec3(_1179, _1180, _1181), vec3(_1179, _1180, _1181));
        float _1187 = (_1182 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1182);
        float _1196 = (dot(vec3(_774, _775, _776), vec3(_1187 * _1179, _1187 * _1180, _1187 * _1181)) + 1.0) * 0.5;
        float _4170 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1206 = sqrt(((_1180 * _1180) + (_1179 * _1179)) + (_1181 * _1181)) / (_1176 + 9.9999997473787516355514526367188e-06);
        float _4181 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
        float _1207 = isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0));
        float _1208 = _1207 * 2.0;
        float _1212 = (1.0 - _1207) / (_1207 + 1.0);
        float _4192 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
        float _1213 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
        float _1222 = ((((1.0 - _1213) * (_1208 + 2.0)) * exp2(log2(isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0))) * (_1208 + 1.0))) + _1213) * _1176;
        float _1223 = _1144 * 0.5;
        float _1224 = _1154 * 0.5;
        float _1225 = _1164 * 0.5;
        float _1226 = dot(vec3(_1223, _1224, _1225), vec3(_1223, _1224, _1225));
        float _1231 = (_1226 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1226);
        float _1239 = (dot(vec3(_774, _775, _776), vec3(_1231 * _1223, _1231 * _1224, _1231 * _1225)) + 1.0) * 0.5;
        float _4203 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
        float _1248 = sqrt(((_1224 * _1224) + (_1223 * _1223)) + (_1225 * _1225)) / (_1177 + 9.9999997473787516355514526367188e-06);
        float _4214 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
        float _1249 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
        float _1250 = _1249 * 2.0;
        float _1254 = (1.0 - _1249) / (_1249 + 1.0);
        float _4225 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
        float _1255 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
        float _1264 = ((((1.0 - _1255) * (_1250 + 2.0)) * exp2(log2(isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0))) * (_1250 + 1.0))) + _1255) * _1177;
        float _1265 = _1145 * 0.5;
        float _1266 = _1155 * 0.5;
        float _1267 = _1165 * 0.5;
        float _1268 = dot(vec3(_1265, _1266, _1267), vec3(_1265, _1266, _1267));
        float _1273 = (_1268 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1268);
        float _1281 = (dot(vec3(_774, _775, _776), vec3(_1273 * _1265, _1273 * _1266, _1273 * _1267)) + 1.0) * 0.5;
        float _4236 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
        float _1290 = sqrt(((_1266 * _1266) + (_1265 * _1265)) + (_1267 * _1267)) / (_1178 + 9.9999997473787516355514526367188e-06);
        float _4247 = isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0));
        float _1291 = isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0));
        float _1292 = _1291 * 2.0;
        float _1296 = (1.0 - _1291) / (_1291 + 1.0);
        float _4258 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
        float _1297 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
        float _1306 = ((((1.0 - _1297) * (_1292 + 2.0)) * exp2(log2(isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0))) * (_1292 + 1.0))) + _1297) * _1178;
        _1314 = _1145;
        _1316 = _1144;
        _1317 = _1143;
        _1318 = _1155;
        _1319 = _1154;
        _1320 = _1153;
        _1321 = _1165;
        _1322 = _1164;
        _1323 = _1163;
        _1324 = _1178;
        _1325 = _1177;
        _1326 = _1176;
        _1327 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0)));
        _1328 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0)));
        _1329 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0)));
    }
    else
    {
        _1314 = _1315;
        _1316 = _1315;
        _1317 = _1315;
        _1318 = _1315;
        _1319 = _1315;
        _1320 = _1315;
        _1321 = _1315;
        _1322 = _1315;
        _1323 = _1315;
        _1324 = _1315;
        _1325 = _1315;
        _1326 = _1315;
        _1327 = 0.0;
        _1328 = 0.0;
        _1329 = 0.0;
    }
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    float _1628;
    float _1629;
    float _1630;
    float _1631;
    float _1632;
    float _1633;
    float _1634;
    float _1635;
    float _1636;
    float _1637;
    float _1638;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1355 = fma(_1012, cbModelParam._m0[30u].z, fma(_1008, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1004));
        float _1359 = fma(_1012, cbModelParam._m0[31u].z, fma(_1008, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1004));
        float _1363 = fma(_1012, cbModelParam._m0[32u].z, fma(_1008, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1004));
        float _1386 = _1004 + _774;
        float _1387 = _1008 + _775;
        float _1388 = _1012 + _776;
        float _1398 = fma(_1388, cbModelParam._m0[30u].z, fma(_1387, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1386)) - _1355;
        float _1399 = fma(_1388, cbModelParam._m0[31u].z, fma(_1387, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1386)) - _1359;
        float _1400 = fma(_1388, cbModelParam._m0[32u].z, fma(_1387, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1386)) - _1363;
        float _1404 = inversesqrt(dot(vec3(_1398, _1399, _1400), vec3(_1398, _1399, _1400)));
        float _1417 = ((_1404 * _1398) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1355 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1418 = ((_1404 * _1399) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1359 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1419 = ((_1404 * _1400) / cbModelParam._m0[35u].z) + ((((((_1363 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1421 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1417, _1418, _1419), 0.0);
        vec4 _1428 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1417, _1418, _1419), 0.0);
        vec4 _1435 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1417, _1418, _1419), 0.0);
        vec4 _1442 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1417, _1418, _1419), 0.0);
        float _1454 = exp2((_1421.w + (-0.5)) * 20.0) * 2.0;
        float _1455 = _1454 * (_1421.x + (-0.5));
        float _1456 = _1454 * (_1421.y + (-0.5));
        float _1457 = _1454 * (_1421.z + (-0.5));
        float _1464 = exp2((_1428.w + (-0.5)) * 20.0) * 2.0;
        float _1465 = _1464 * (_1428.x + (-0.5));
        float _1466 = _1464 * (_1428.y + (-0.5));
        float _1467 = _1464 * (_1428.z + (-0.5));
        float _1474 = exp2((_1435.w + (-0.5)) * 20.0) * 2.0;
        float _1475 = _1474 * (_1435.x + (-0.5));
        float _1476 = _1474 * (_1435.y + (-0.5));
        float _1477 = _1474 * (_1435.z + (-0.5));
        float _1484 = exp2((_1442.w + (-0.5)) * 20.0) * 2.0;
        float _1485 = _1484 * (_1442.x + (-0.5));
        float _1486 = _1484 * (_1442.y + (-0.5));
        float _1487 = _1484 * (_1442.z + (-0.5));
        float _1488 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1489 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
        float _1490 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1491 = _1455 * 0.5;
        float _1492 = _1465 * 0.5;
        float _1493 = _1475 * 0.5;
        float _1494 = dot(vec3(_1491, _1492, _1493), vec3(_1491, _1492, _1493));
        float _1499 = (_1494 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1494);
        float _1507 = (dot(vec3(_774, _775, _776), vec3(_1499 * _1491, _1499 * _1492, _1499 * _1493)) + 1.0) * 0.5;
        float _4299 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
        float _1516 = sqrt(((_1492 * _1492) + (_1491 * _1491)) + (_1493 * _1493)) / (_1488 + 9.9999997473787516355514526367188e-06);
        float _4310 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
        float _1517 = isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0));
        float _1518 = _1517 * 2.0;
        float _1522 = (1.0 - _1517) / (_1517 + 1.0);
        float _4321 = isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0));
        float _1523 = isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0));
        float _1532 = ((((1.0 - _1523) * (_1518 + 2.0)) * exp2(log2(isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0))) * (_1518 + 1.0))) + _1523) * _1488;
        float _1533 = _1456 * 0.5;
        float _1534 = _1466 * 0.5;
        float _1535 = _1476 * 0.5;
        float _1536 = dot(vec3(_1533, _1534, _1535), vec3(_1533, _1534, _1535));
        float _1541 = (_1536 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1536);
        float _1549 = (dot(vec3(_774, _775, _776), vec3(_1541 * _1533, _1541 * _1534, _1541 * _1535)) + 1.0) * 0.5;
        float _4332 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
        float _1558 = sqrt(((_1534 * _1534) + (_1533 * _1533)) + (_1535 * _1535)) / (_1489 + 9.9999997473787516355514526367188e-06);
        float _4343 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1559 = isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0));
        float _1560 = _1559 * 2.0;
        float _1564 = (1.0 - _1559) / (_1559 + 1.0);
        float _4354 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
        float _1565 = isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0));
        float _1574 = ((((1.0 - _1565) * (_1560 + 2.0)) * exp2(log2(isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0))) * (_1560 + 1.0))) + _1565) * _1489;
        float _1575 = _1457 * 0.5;
        float _1576 = _1467 * 0.5;
        float _1577 = _1477 * 0.5;
        float _1578 = dot(vec3(_1575, _1576, _1577), vec3(_1575, _1576, _1577));
        float _1583 = (_1578 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1578);
        float _1591 = (dot(vec3(_774, _775, _776), vec3(_1583 * _1575, _1583 * _1576, _1583 * _1577)) + 1.0) * 0.5;
        float _4365 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1600 = sqrt(((_1576 * _1576) + (_1575 * _1575)) + (_1577 * _1577)) / (_1490 + 9.9999997473787516355514526367188e-06);
        float _4376 = isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0));
        float _1601 = isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0));
        float _1602 = _1601 * 2.0;
        float _1606 = (1.0 - _1601) / (_1601 + 1.0);
        float _4387 = isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0));
        float _1607 = isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0));
        float _1616 = ((((1.0 - _1607) * (_1602 + 2.0)) * exp2(log2(isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0))) * (_1602 + 1.0))) + _1607) * _1490;
        _1624 = _1457;
        _1625 = _1456;
        _1626 = _1455;
        _1627 = _1467;
        _1628 = _1466;
        _1629 = _1465;
        _1630 = _1477;
        _1631 = _1476;
        _1632 = _1475;
        _1633 = _1490;
        _1634 = _1489;
        _1635 = _1488;
        _1636 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0)));
        _1637 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0)));
        _1638 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0)));
    }
    else
    {
        _1624 = _1315;
        _1625 = _1315;
        _1626 = _1315;
        _1627 = _1315;
        _1628 = _1315;
        _1629 = _1315;
        _1630 = _1315;
        _1631 = _1315;
        _1632 = _1315;
        _1633 = _1315;
        _1634 = _1315;
        _1635 = _1315;
        _1636 = 0.0;
        _1637 = 0.0;
        _1638 = 0.0;
    }
    float _1648 = (cbModelParam._m0[1u].x * (_1636 - _1327)) + _1327;
    float _1649 = (cbModelParam._m0[1u].x * (_1637 - _1328)) + _1328;
    float _1650 = (cbModelParam._m0[1u].x * (_1638 - _1329)) + _1329;
    float _1671 = fma(_1650, cbSceneParam._m0[89u].z, fma(_1649, cbSceneParam._m0[89u].y, _1648 * cbSceneParam._m0[89u].x));
    float _1674 = fma(_1650, cbSceneParam._m0[90u].z, fma(_1649, cbSceneParam._m0[90u].y, _1648 * cbSceneParam._m0[90u].x));
    float _1677 = fma(_1650, cbSceneParam._m0[91u].z, fma(_1649, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1648));
    float _1692 = _949 * 0.5;
    float _1693 = _950 * 0.5;
    float _1694 = _951 * 0.5;
    float _1695 = dot(vec4(_1692, _1693, _1694, 1.0), vec4(_1626, _1629, _1632, _1635));
    float _1698 = dot(vec4(_1692, _1693, _1694, 1.0), vec4(_1625, _1628, _1631, _1634));
    float _1701 = dot(vec4(_1692, _1693, _1694, 1.0), vec4(_1624, _1627, _1630, _1633));
    float _1735;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1708 = dot(vec4(_1692, _1693, _1694, 1.0), vec4(_1314, _1318, _1321, _1324));
        float _1712 = dot(vec4(_1692, _1693, _1694, 1.0), vec4(_1316, _1319, _1322, _1325));
        float _1716 = dot(vec4(_1692, _1693, _1694, 1.0), vec4(_1317, _1320, _1323, _1326));
        float _1723 = dot(vec4(cbModelParam._m0[39u]), vec4(_1692, _1693, _1694, 1.0));
        _1735 = dot(vec3(isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0)), isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0)), isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1723) ? 0.0 : (isnan(0.0) ? _1723 : max(0.0, _1723))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1735 = 1.0;
    }
    float _1746;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1737 = dot(vec4(cbModelParam._m0[40u]), vec4(_1692, _1693, _1694, 1.0));
        _1746 = dot(vec3(isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0)), isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0)), isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1737) ? 0.0 : (isnan(0.0) ? _1737 : max(0.0, _1737))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1746 = 1.0;
    }
    float _1750 = (_1746 * cbModelParam._m0[1u].x) + (_1735 * (1.0 - cbModelParam._m0[1u].x));
    float _1760 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _777);
    float _1761 = isnan(_1760) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1760 : min(cbModelParam._m0[25u].z, _1760));
    float _1841;
    float _1843;
    float _1845;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1808 = fma(_1012, cbModelParam._m0[13u].z, fma(_1008, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1004)) + cbModelParam._m0[13u].w;
        float _1812 = fma(_1012, cbModelParam._m0[14u].z, fma(_1008, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1004)) + cbModelParam._m0[14u].w;
        float _1816 = fma(_1012, cbModelParam._m0[15u].z, fma(_1008, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1004)) + cbModelParam._m0[15u].w;
        float _1819 = fma(_951, cbModelParam._m0[13u].z, fma(_950, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _949));
        float _1822 = fma(_951, cbModelParam._m0[14u].z, fma(_950, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _949));
        float _1825 = fma(_951, cbModelParam._m0[15u].z, fma(_950, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _949));
        float _1853;
        if (_1819 > 0.0)
        {
            _1853 = abs((1.0 - _1808) / _1819);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1819 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1808 + 1.0) / _1819);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1853 = frontier_phi_14_12_ladder;
        }
        float _2024;
        if (_1822 > 0.0)
        {
            _2024 = abs((1.0 - _1812) / _1822);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1822 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1812 + 1.0) / _1822);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2024 = frontier_phi_23_19_ladder;
        }
        float _2320;
        if (_1825 > 0.0)
        {
            _2320 = abs((1.0 - _1816) / _1825);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1825 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1816 + 1.0) / _1825);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2320 = frontier_phi_35_30_ladder;
        }
        float _2322 = isnan(_2024) ? _1853 : (isnan(_1853) ? _2024 : min(_1853, _2024));
        float _2323 = isnan(_2320) ? _2322 : (isnan(_2322) ? _2320 : min(_2322, _2320));
        float _2327 = (_2323 * _1819) + _1808;
        float _2328 = (_2323 * _1822) + _1812;
        float _2329 = (_2323 * _1825) + _1816;
        float _2330 = _2323 * 9.9999997473787516355514526367188e-05;
        float _2332 = (-1.0) - _2330;
        float _2334 = _2330 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2329 > _2334) || ((_2329 < _2332) || ((_2328 > _2334) || ((_2328 < _2332) || ((_2327 < _2332) || (_2327 > _2334))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2474 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2329, cbModelParam._m0[9u].z, fma(_2328, cbModelParam._m0[9u].y, _2327 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2329, cbModelParam._m0[10u].z, fma(_2328, cbModelParam._m0[10u].y, _2327 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2329, cbModelParam._m0[11u].z, fma(_2328, cbModelParam._m0[11u].y, _2327 * cbModelParam._m0[11u].x))), _1761);
            frontier_phi_13_35_ladder = _2474.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2474.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2474.x * cbModelParam._m0[1u].y;
        }
        _1841 = frontier_phi_13_35_ladder_2;
        _1843 = frontier_phi_13_35_ladder_1;
        _1845 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1829 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_949, _950, _951), _1761);
        _1841 = _1829.x * cbModelParam._m0[1u].y;
        _1843 = _1829.y * cbModelParam._m0[1u].y;
        _1845 = _1829.z * cbModelParam._m0[1u].y;
    }
    float _1849 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _777);
    float _1850 = isnan(_1849) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1849 : min(cbModelParam._m0[25u].w, _1849));
    float _1939;
    float _1941;
    float _1943;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1903 = fma(_1012, cbModelParam._m0[21u].z, fma(_1008, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1004)) + cbModelParam._m0[21u].w;
        float _1907 = fma(_1012, cbModelParam._m0[22u].z, fma(_1008, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1004)) + cbModelParam._m0[22u].w;
        float _1911 = fma(_1012, cbModelParam._m0[23u].z, fma(_1008, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1004)) + cbModelParam._m0[23u].w;
        float _1914 = fma(_951, cbModelParam._m0[21u].z, fma(_950, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _949));
        float _1917 = fma(_951, cbModelParam._m0[22u].z, fma(_950, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _949));
        float _1920 = fma(_951, cbModelParam._m0[23u].z, fma(_950, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _949));
        float _2029;
        if (_1914 > 0.0)
        {
            _2029 = abs((1.0 - _1903) / _1914);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1914 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1903 + 1.0) / _1914);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2029 = frontier_phi_25_21_ladder;
        }
        float _2347;
        if (_1917 > 0.0)
        {
            _2347 = abs((1.0 - _1907) / _1917);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1917 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1907 + 1.0) / _1917);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2347 = frontier_phi_37_32_ladder;
        }
        float _2685;
        if (_1920 > 0.0)
        {
            _2685 = abs((1.0 - _1911) / _1920);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1920 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1911 + 1.0) / _1920);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2685 = frontier_phi_47_44_ladder;
        }
        float _2687 = isnan(_2347) ? _2029 : (isnan(_2029) ? _2347 : min(_2029, _2347));
        float _2688 = isnan(_2685) ? _2687 : (isnan(_2687) ? _2685 : min(_2687, _2685));
        float _2692 = (_2688 * _1914) + _1903;
        float _2693 = (_2688 * _1917) + _1907;
        float _2694 = (_2688 * _1920) + _1911;
        float _2695 = _2688 * 9.9999997473787516355514526367188e-05;
        float _2696 = (-1.0) - _2695;
        float _2698 = _2695 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2694 > _2698) || ((_2694 < _2696) || ((_2693 > _2698) || ((_2693 < _2696) || ((_2692 < _2696) || (_2692 > _2698))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2816 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2694, cbModelParam._m0[17u].z, fma(_2693, cbModelParam._m0[17u].y, _2692 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2694, cbModelParam._m0[18u].z, fma(_2693, cbModelParam._m0[18u].y, _2692 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2694, cbModelParam._m0[19u].z, fma(_2693, cbModelParam._m0[19u].y, _2692 * cbModelParam._m0[19u].x))), _1850);
            frontier_phi_22_47_ladder = _2816.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2816.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2816.x * cbModelParam._m0[1u].z;
        }
        _1939 = frontier_phi_22_47_ladder_2;
        _1941 = frontier_phi_22_47_ladder_1;
        _1943 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1923 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_949, _950, _951), _1850);
        _1939 = _1923.x * cbModelParam._m0[1u].z;
        _1941 = _1923.y * cbModelParam._m0[1u].z;
        _1943 = _1923.z * cbModelParam._m0[1u].z;
    }
    float _1956 = (((_975 * _926) + _976) * _941) * ((cbModelParam._m0[1u].w * (_1939 - _1841)) + _1841);
    float _1958 = (((_975 * _928) + _976) * _941) * ((cbModelParam._m0[1u].w * (_1941 - _1843)) + _1843);
    float _1960 = (((_975 * _929) + _976) * _941) * ((cbModelParam._m0[1u].w * (_1943 - _1845)) + _1845);
    float _1963 = fma(_1960, cbSceneParam._m0[89u].z, fma(_1958, cbSceneParam._m0[89u].y, _1956 * cbSceneParam._m0[89u].x));
    float _1966 = fma(_1960, cbSceneParam._m0[90u].z, fma(_1958, cbSceneParam._m0[90u].y, _1956 * cbSceneParam._m0[90u].x));
    float _1969 = fma(_1960, cbSceneParam._m0[91u].z, fma(_1958, cbSceneParam._m0[91u].y, _1956 * cbSceneParam._m0[91u].x));
    float _2003 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2007 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2011 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2015 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2016 = _2003 / _2015;
    float _2017 = _2007 / _2015;
    float _2018 = _2011 / _2015;
    float _2165;
    float _2166;
    float _2167;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2045 = ((uint(_2018 > cbSceneParam._m0[59u].y) + uint(_2018 > cbSceneParam._m0[59u].x)) + uint(_2018 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2046 = _2045 + 43u;
        uint _2054 = _2045 + 44u;
        uint _2062 = _2045 + 45u;
        uint _2070 = _2045 + 46u;
        float _2081 = fma(_2015, cbSceneParam._m0[_2046].w, fma(_2011, cbSceneParam._m0[_2046].z, fma(_2007, cbSceneParam._m0[_2046].y, _2003 * cbSceneParam._m0[_2046].x)));
        float _2085 = fma(_2015, cbSceneParam._m0[_2054].w, fma(_2011, cbSceneParam._m0[_2054].z, fma(_2007, cbSceneParam._m0[_2054].y, _2003 * cbSceneParam._m0[_2054].x)));
        float _2093 = fma(_2015, cbSceneParam._m0[_2070].w, fma(_2011, cbSceneParam._m0[_2070].z, fma(_2007, cbSceneParam._m0[_2070].y, _2003 * cbSceneParam._m0[_2070].x)));
        float _2098 = cbSceneParam._m0[33u].z * _2093;
        float _2100 = cbSceneParam._m0[33u].w * _2093;
        float _2103 = fma(_2015, cbSceneParam._m0[_2062].w, fma(_2011, cbSceneParam._m0[_2062].z, fma(_2007, cbSceneParam._m0[_2062].y, _2003 * cbSceneParam._m0[_2062].x))) / _2093;
        float _2151 = (cbSceneParam._m0[33u].x - sqrt(((_2017 * _2017) + (_2016 * _2016)) + (_2018 * _2018))) * cbSceneParam._m0[33u].y;
        float _4513 = isnan(0.0) ? _2151 : (isnan(_2151) ? 0.0 : max(_2151, 0.0));
        float _2158 = (isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2098 + _2081) / _2093, (_2100 + _2085) / _2093), _2103), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2100 + _2081) / _2093, (_2085 - _2098) / _2093), _2103), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2081 - _2098) / _2093, (_2085 - _2100) / _2093), _2103), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2081 - _2100) / _2093, (_2098 + _2085) / _2093), _2103), 0.0)).x), vec4(0.25)));
        _2165 = 1.0 - (_2158 * cbSceneParam._m0[34u].x);
        _2166 = 1.0 - (_2158 * cbSceneParam._m0[34u].y);
        _2167 = 1.0 - (_2158 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2165 = 1.0;
        _2166 = 1.0;
        _2167 = 1.0;
    }
    float _2231;
    float _2233;
    float _2235;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2219 = fma(_2015, cbSceneParam._m0[63u].w, fma(_2011, cbSceneParam._m0[63u].z, fma(_2007, cbSceneParam._m0[63u].y, _2003 * cbSceneParam._m0[63u].x)));
        float _2220 = fma(_2015, cbSceneParam._m0[60u].w, fma(_2011, cbSceneParam._m0[60u].z, fma(_2007, cbSceneParam._m0[60u].y, _2003 * cbSceneParam._m0[60u].x))) / _2219;
        float _2221 = fma(_2015, cbSceneParam._m0[61u].w, fma(_2011, cbSceneParam._m0[61u].z, fma(_2007, cbSceneParam._m0[61u].y, _2003 * cbSceneParam._m0[61u].x))) / _2219;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2220 >= cbSceneParam._m0[64u].x) && (_2221 >= cbSceneParam._m0[64u].y)) && (_2220 <= cbSceneParam._m0[64u].z)) && (_2221 <= cbSceneParam._m0[64u].w))
        {
            float _2360 = fma(_2015, cbSceneParam._m0[62u].w, fma(_2011, cbSceneParam._m0[62u].z, fma(_2007, cbSceneParam._m0[62u].y, _2003 * cbSceneParam._m0[62u].x))) / _2219;
            float _2364 = isnan(cbSceneParam._m0[41u].w) ? _2360 : (isnan(_2360) ? cbSceneParam._m0[41u].w : max(_2360, cbSceneParam._m0[41u].w));
            float _2407 = (cbSceneParam._m0[33u].x - sqrt(((_2017 * _2017) + (_2016 * _2016)) + (_2018 * _2018))) * cbSceneParam._m0[33u].y;
            float _4529 = isnan(0.0) ? _2407 : (isnan(_2407) ? 0.0 : max(_2407, 0.0));
            float _2414 = (isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2220, cbSceneParam._m0[33u].w + _2221), _2364), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2220, _2221 - cbSceneParam._m0[33u].z), _2364), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2220 - cbSceneParam._m0[33u].z, _2221 - cbSceneParam._m0[33u].w), _2364), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2220 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2221), _2364), 0.0)).x), vec4(0.25)));
            float _2418 = 1.0 - (_2414 * cbSceneParam._m0[34u].x);
            float _2419 = 1.0 - (_2414 * cbSceneParam._m0[34u].y);
            float _2420 = 1.0 - (_2414 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2420) ? _2167 : (isnan(_2167) ? _2420 : min(_2167, _2420));
            frontier_phi_34_33_ladder_1 = isnan(_2419) ? _2166 : (isnan(_2166) ? _2419 : min(_2166, _2419));
            frontier_phi_34_33_ladder_2 = isnan(_2418) ? _2165 : (isnan(_2165) ? _2418 : min(_2165, _2418));
        }
        else
        {
            frontier_phi_34_33_ladder = _2167;
            frontier_phi_34_33_ladder_1 = _2166;
            frontier_phi_34_33_ladder_2 = _2165;
        }
        _2231 = frontier_phi_34_33_ladder_2;
        _2233 = frontier_phi_34_33_ladder_1;
        _2235 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2231 = _2165;
        _2233 = _2166;
        _2235 = _2167;
    }
    uvec4 _2240 = floatBitsToUint(cbInstanceData._m0[_901 + 5u]);
    uint _2242 = _2240.x * 14u;
    uint _2243 = _2242 + 13u;
    float _2250 = _941 + (-1.0);
    float _2255 = (cbLight._m0[_2243].x * _2250) + 1.0;
    float _2256 = (cbLight._m0[_2243].y * _2250) + 1.0;
    float _2257 = (cbLight._m0[_2243].z * _2250) + 1.0;
    float _2258 = (cbLight._m0[_2243].w * _2250) + 1.0;
    uint _2259 = _2242 + 5u;
    float _2265 = isnan(1.0) ? _2256 : (isnan(_2256) ? 1.0 : min(_2256, 1.0));
    uint _2269 = _2242 + 4u;
    float _2279 = isnan(1.0) ? _2255 : (isnan(_2255) ? 1.0 : min(_2255, 1.0));
    uint _2283 = _2242 | 1u;
    float _2294 = dot(vec3(cbLight._m0[_2242].xyz), vec3(_774, _775, _776));
    float _2297 = dot(vec3(cbLight._m0[_2283].xyz), vec3(_774, _775, _776));
    float _4565 = isnan(0.0) ? _2294 : (isnan(_2294) ? 0.0 : max(_2294, 0.0));
    float _4576 = isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0));
    float _2302 = (isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0))) * 0.3183098733425140380859375;
    float _2304 = (isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0))) * 0.3183098733425140380859375;
    float _2311 = ((cbLight._m0[_2259].x * _2265) * _2304) + (((cbLight._m0[_2269].x * _2231) * _2279) * _2302);
    float _2312 = ((_2265 * cbLight._m0[_2259].y) * _2304) + (((cbLight._m0[_2269].y * _2233) * _2279) * _2302);
    float _2313 = ((_2265 * cbLight._m0[_2259].z) * _2304) + (((cbLight._m0[_2269].z * _2235) * _2279) * _2302);
    uvec4 _2317 = floatBitsToUint(cbLight._m0[_2242 + 12u]);
    bool _2319 = _2317.x == 0u;
    float _2421;
    float _2423;
    float _2425;
    if (_2319)
    {
        _2421 = _2311;
        _2423 = _2312;
        _2425 = _2313;
    }
    else
    {
        uint _2429 = _2242 + 6u;
        float _2445 = (dot(vec3(cbLight._m0[_2242 + 2u].xyz), vec3(_774, _775, _776)) * 0.5) + 0.5;
        float _2446 = _2445 * _2445;
        float _4587 = isnan(0.0) ? _2446 : (isnan(_2446) ? 0.0 : max(_2446, 0.0));
        float _2447 = isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0));
        float _2448 = isnan(1.0) ? _2257 : (isnan(_2257) ? 1.0 : min(_2257, 1.0));
        _2421 = (((cbLight._m0[_2429].x * 0.3183098733425140380859375) * _2447) * _2448) + _2311;
        _2423 = (((cbLight._m0[_2429].y * 0.3183098733425140380859375) * _2447) * _2448) + _2312;
        _2425 = (((cbLight._m0[_2429].z * 0.3183098733425140380859375) * _2447) * _2448) + _2313;
    }
    bool _2428 = _2317.y == 0u;
    float _2483;
    float _2485;
    float _2487;
    if (_2428)
    {
        _2483 = _2421;
        _2485 = _2423;
        _2487 = _2425;
    }
    else
    {
        uint _2656 = _2242 + 7u;
        float _2672 = (dot(vec3(cbLight._m0[_2242 + 3u].xyz), vec3(_774, _775, _776)) * 0.5) + 0.5;
        float _2673 = _2672 * _2672;
        float _4603 = isnan(0.0) ? _2673 : (isnan(_2673) ? 0.0 : max(_2673, 0.0));
        float _2674 = isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0));
        float _2675 = isnan(1.0) ? _2258 : (isnan(_2258) ? 1.0 : min(_2258, 1.0));
        _2483 = (((cbLight._m0[_2656].x * 0.3183098733425140380859375) * _2674) * _2675) + _2421;
        _2485 = (((cbLight._m0[_2656].y * 0.3183098733425140380859375) * _2674) * _2675) + _2423;
        _2487 = (((cbLight._m0[_2656].z * 0.3183098733425140380859375) * _2674) * _2675) + _2425;
    }
    uint _2490 = _2242 + 8u;
    float _2503 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2242].w)) * _777) * 0.949999988079071044921875);
    float _2504 = _2503 * _2503;
    float _2505 = cbLight._m0[_2242].x + _854;
    float _2506 = cbLight._m0[_2242].y + _855;
    float _2507 = cbLight._m0[_2242].z + _856;
    float _2511 = inversesqrt(dot(vec3(_2505, _2506, _2507), vec3(_2505, _2506, _2507)));
    float _2512 = _2511 * _2505;
    float _2513 = _2511 * _2506;
    float _2514 = _2511 * _2507;
    float _2515 = dot(vec3(_774, _775, _776), vec3(cbLight._m0[_2242].xyz));
    float _4619 = isnan(0.0) ? _2515 : (isnan(_2515) ? 0.0 : max(_2515, 0.0));
    float _2518 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
    float _4630 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
    float _2519 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
    float _2520 = dot(vec3(_774, _775, _776), vec3(_2512, _2513, _2514));
    float _4641 = isnan(0.0) ? _2520 : (isnan(_2520) ? 0.0 : max(_2520, 0.0));
    float _2523 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
    float _2524 = dot(vec3(cbLight._m0[_2242].xyz), vec3(_2512, _2513, _2514));
    float _4652 = isnan(0.0) ? _2524 : (isnan(_2524) ? 0.0 : max(_2524, 0.0));
    float _2528 = _2504 * _2504;
    float _2532 = ((_2523 * _2523) * (_2528 + (-1.0))) + 1.0;
    float _2540 = exp2(log2(1.0 - (isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0)))) * 5.0);
    float _2541 = 0.959999978542327880859375 - _923;
    float _2543 = 0.959999978542327880859375 - _924;
    float _2544 = 0.959999978542327880859375 - _925;
    float _2551 = 1.0 - _2504;
    float _2562 = (0.5 / (((_2519 * ((_2518 * _2551) + _2504)) + 9.9999999392252902907785028219223e-09) + (((_2519 * _2551) + _2504) * _2518))) * _2518;
    float _4663 = isnan(0.0) ? _2562 : (isnan(_2562) ? 0.0 : max(_2562, 0.0));
    float _2564 = (isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0))) * (_2528 / ((_2532 * _2532) * 3.141590118408203125));
    uint _2578 = _2242 + 9u;
    float _2589 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2283].w)) * _777) * 0.949999988079071044921875);
    float _2590 = _2589 * _2589;
    float _2591 = cbLight._m0[_2283].x + _854;
    float _2592 = cbLight._m0[_2283].y + _855;
    float _2593 = cbLight._m0[_2283].z + _856;
    float _2597 = inversesqrt(dot(vec3(_2591, _2592, _2593), vec3(_2591, _2592, _2593)));
    float _2598 = _2597 * _2591;
    float _2599 = _2597 * _2592;
    float _2600 = _2597 * _2593;
    float _2601 = dot(vec3(_774, _775, _776), vec3(cbLight._m0[_2283].xyz));
    float _4674 = isnan(0.0) ? _2601 : (isnan(_2601) ? 0.0 : max(_2601, 0.0));
    float _2604 = isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0));
    float _2605 = dot(vec3(_774, _775, _776), vec3(_2598, _2599, _2600));
    float _4685 = isnan(0.0) ? _2605 : (isnan(_2605) ? 0.0 : max(_2605, 0.0));
    float _2608 = isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0));
    float _2609 = dot(vec3(cbLight._m0[_2283].xyz), vec3(_2598, _2599, _2600));
    float _4696 = isnan(0.0) ? _2609 : (isnan(_2609) ? 0.0 : max(_2609, 0.0));
    float _2613 = _2590 * _2590;
    float _2617 = ((_2608 * _2608) * (_2613 + (-1.0))) + 1.0;
    float _2624 = exp2(log2(1.0 - (isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0)))) * 5.0);
    float _2631 = 1.0 - _2590;
    float _2641 = (0.5 / (((_2519 * ((_2604 * _2631) + _2590)) + 9.9999999392252902907785028219223e-09) + (((_2519 * _2631) + _2590) * _2604))) * _2604;
    float _4707 = isnan(0.0) ? _2641 : (isnan(_2641) ? 0.0 : max(_2641, 0.0));
    float _2643 = (isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0))) * (_2613 / ((_2617 * _2617) * 3.141590118408203125));
    float _2653 = (((((_2624 * _2541) + _926) * cbLight._m0[_2578].x) * _2643) * _2265) + ((((cbLight._m0[_2490].x * _2231) * ((_2540 * _2541) + _926)) * _2564) * _2279);
    float _2654 = (((((_2624 * _2543) + _928) * cbLight._m0[_2578].y) * _2643) * _2265) + ((((cbLight._m0[_2490].y * _2233) * ((_2540 * _2543) + _928)) * _2564) * _2279);
    float _2655 = (((((_2624 * _2544) + _929) * cbLight._m0[_2578].z) * _2643) * _2265) + ((((cbLight._m0[_2490].z * _2235) * ((_2540 * _2544) + _929)) * _2564) * _2279);
    float _2711;
    float _2713;
    float _2715;
    if (_2319)
    {
        _2711 = _2653;
        _2713 = _2654;
        _2715 = _2655;
    }
    else
    {
        uint _2717 = _2242 + 2u;
        uint _2721 = _2242 + 10u;
        float _2735 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2717].w)) * _777) * 0.949999988079071044921875);
        float _2736 = _2735 * _2735;
        float _2737 = cbLight._m0[_2717].x + _854;
        float _2738 = cbLight._m0[_2717].y + _855;
        float _2739 = cbLight._m0[_2717].z + _856;
        float _2743 = inversesqrt(dot(vec3(_2737, _2738, _2739), vec3(_2737, _2738, _2739)));
        float _2744 = _2743 * _2737;
        float _2745 = _2743 * _2738;
        float _2746 = _2743 * _2739;
        float _2747 = dot(vec3(_774, _775, _776), vec3(cbLight._m0[_2717].xyz));
        float _4718 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
        float _2750 = isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0));
        float _2751 = dot(vec3(_774, _775, _776), vec3(_2744, _2745, _2746));
        float _4729 = isnan(0.0) ? _2751 : (isnan(_2751) ? 0.0 : max(_2751, 0.0));
        float _2754 = isnan(1.0) ? _4729 : (isnan(_4729) ? 1.0 : min(_4729, 1.0));
        float _2755 = dot(vec3(cbLight._m0[_2717].xyz), vec3(_2744, _2745, _2746));
        float _4740 = isnan(0.0) ? _2755 : (isnan(_2755) ? 0.0 : max(_2755, 0.0));
        float _2759 = _2736 * _2736;
        float _2763 = ((_2754 * _2754) * (_2759 + (-1.0))) + 1.0;
        float _2770 = exp2(log2(1.0 - (isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0)))) * 5.0);
        float _2777 = 1.0 - _2736;
        float _2787 = (0.5 / (((_2519 * ((_2750 * _2777) + _2736)) + 9.9999999392252902907785028219223e-09) + (((_2519 * _2777) + _2736) * _2750))) * _2750;
        float _4751 = isnan(0.0) ? _2787 : (isnan(_2787) ? 0.0 : max(_2787, 0.0));
        float _2789 = (isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0))) * (_2759 / ((_2763 * _2763) * 3.141590118408203125));
        float _2790 = isnan(1.0) ? _2257 : (isnan(_2257) ? 1.0 : min(_2257, 1.0));
        _2711 = (((((_2770 * _2541) + _926) * cbLight._m0[_2721].x) * _2789) * _2790) + _2653;
        _2713 = (((((_2770 * _2543) + _928) * cbLight._m0[_2721].y) * _2789) * _2790) + _2654;
        _2715 = (((((_2770 * _2544) + _929) * cbLight._m0[_2721].z) * _2789) * _2790) + _2655;
    }
    float _2821;
    float _2823;
    float _2825;
    if (_2428)
    {
        _2821 = _2711;
        _2823 = _2713;
        _2825 = _2715;
    }
    else
    {
        uint _2832 = _2242 + 3u;
        uint _2836 = _2242 + 11u;
        float _2850 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2832].w)) * _777) * 0.949999988079071044921875);
        float _2851 = _2850 * _2850;
        float _2852 = cbLight._m0[_2832].x + _854;
        float _2853 = cbLight._m0[_2832].y + _855;
        float _2854 = cbLight._m0[_2832].z + _856;
        float _2858 = inversesqrt(dot(vec3(_2852, _2853, _2854), vec3(_2852, _2853, _2854)));
        float _2859 = _2858 * _2852;
        float _2860 = _2858 * _2853;
        float _2861 = _2858 * _2854;
        float _2862 = dot(vec3(_774, _775, _776), vec3(cbLight._m0[_2832].xyz));
        float _4767 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0));
        float _2865 = isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0));
        float _2866 = dot(vec3(_774, _775, _776), vec3(_2859, _2860, _2861));
        float _4778 = isnan(0.0) ? _2866 : (isnan(_2866) ? 0.0 : max(_2866, 0.0));
        float _2869 = isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0));
        float _2870 = dot(vec3(cbLight._m0[_2832].xyz), vec3(_2859, _2860, _2861));
        float _4789 = isnan(0.0) ? _2870 : (isnan(_2870) ? 0.0 : max(_2870, 0.0));
        float _2874 = _2851 * _2851;
        float _2878 = ((_2869 * _2869) * (_2874 + (-1.0))) + 1.0;
        float _2885 = exp2(log2(1.0 - (isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0)))) * 5.0);
        float _2892 = 1.0 - _2851;
        float _2902 = (0.5 / (((_2519 * ((_2865 * _2892) + _2851)) + 9.9999999392252902907785028219223e-09) + (((_2519 * _2892) + _2851) * _2865))) * _2865;
        float _4800 = isnan(0.0) ? _2902 : (isnan(_2902) ? 0.0 : max(_2902, 0.0));
        float _2904 = (isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0))) * (_2874 / ((_2878 * _2878) * 3.141590118408203125));
        float _2905 = isnan(1.0) ? _2258 : (isnan(_2258) ? 1.0 : min(_2258, 1.0));
        _2821 = (((((_2885 * _2541) + _926) * cbLight._m0[_2836].x) * _2904) * _2905) + _2711;
        _2823 = (((((_2885 * _2543) + _928) * cbLight._m0[_2836].y) * _2904) * _2905) + _2713;
        _2825 = (((((_2885 * _2544) + _929) * cbLight._m0[_2836].z) * _2904) * _2905) + _2715;
    }
    float _2971;
    float _2973;
    float _2975;
    float _2977;
    float _2979;
    float _2981;
    if (_2240.y == 0u)
    {
        uvec4 _2926 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2927 = _2926.x;
        uint _2938 = uint((float(_2926.y) * floor(float(uint(cbSceneParam._m0[85u].y * _863) / _2927))) + floor(float(uint(cbSceneParam._m0[85u].x * _862) / _2927)));
        float _2948 = (log2(_2018 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2949 = isnan(0.0) ? _2948 : (isnan(_2948) ? 0.0 : max(_2948, 0.0));
        uint _2952 = uint(isnan(14.0) ? _2949 : (isnan(_2949) ? 14.0 : min(_2949, 14.0)));
        uvec4 _2957 = texelFetch(g_lightClusterGridBuffer, int(((_2952 << 2u) + (_2938 << 6u)) >> 2u));
        uint _2958 = _2957.x;
        uint _2959 = _2926.z;
        float _3083;
        float _3085;
        float _3087;
        float _3089;
        float _3091;
        float _3093;
        if (((((1u << ((_2959 >> 4u) & 15u)) + 4294967295u) & _2958) == 0u) || ((_2959 & 240u) == 0u))
        {
            _3083 = 0.0;
            _3085 = 0.0;
            _3087 = 0.0;
            _3089 = 0.0;
            _3091 = 0.0;
            _3093 = 0.0;
        }
        else
        {
            float _3084;
            float _3086;
            float _3088;
            float _3090;
            float _3092;
            float _3094;
            float _3236 = 0.0;
            float _3237 = 0.0;
            float _3238 = 0.0;
            float _3239 = 0.0;
            float _3240 = 0.0;
            float _3241 = 0.0;
            uint _3242 = 0u;
            uint _3251;
            bool _3252;
            for (;;)
            {
                _3251 = texelFetch(g_lightClassification, int((((_2952 << 5u) + (_2938 << 9u)) + (_3242 << 2u)) >> 2u)).x;
                _3252 = _3251 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3252)
                {
                    frontier_phi_66_pred = _3241;
                    frontier_phi_66_pred_1 = _3240;
                    frontier_phi_66_pred_2 = _3239;
                    frontier_phi_66_pred_3 = _3238;
                    frontier_phi_66_pred_4 = _3237;
                    frontier_phi_66_pred_5 = _3236;
                }
                else
                {
                    float _3360;
                    float _3361;
                    float _3362;
                    float _3363;
                    float _3364;
                    float _3365;
                    uint _3366;
                    _3360 = _3236;
                    _3361 = _3237;
                    _3362 = _3238;
                    _3363 = _3239;
                    _3364 = _3240;
                    _3365 = _3241;
                    _3366 = _3251;
                    float _3292;
                    float _3293;
                    float _3294;
                    float _3295;
                    float _3296;
                    float _3297;
                    for (;;)
                    {
                        uint _3370 = uint(findLSB(_3366)) + (_3242 << 5u);
                        uint _3367 = (_3366 + 4294967295u) & _3366;
                        uint _3372 = _3370 * 48u;
                        vec4 _3386 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3372)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 3u)).x));
                        uint _3392 = (_3370 * 48u) + 4u;
                        vec4 _3405 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3392)).x, texelFetch(g_PointLightRenderingBuffer, int(_3392 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3392 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3392 + 3u)).x));
                        uint _3411 = (_3370 * 48u) + 8u;
                        vec3 _3422 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3411)).x, texelFetch(g_PointLightRenderingBuffer, int(_3411 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3411 + 2u)).x));
                        float _3426 = _3386.x - _2016;
                        float _3427 = _3386.y - _2017;
                        float _3428 = _3386.z - _2018;
                        float _3429 = dot(vec3(_3426, _3427, _3428), vec3(_3426, _3427, _3428));
                        float _3432 = inversesqrt(_3429);
                        float _3433 = _3432 * _3426;
                        float _3434 = _3432 * _3427;
                        float _3435 = _3432 * _3428;
                        float _3436 = dot(vec3(_882, _885, _888), vec3(_3433, _3434, _3435));
                        float _3441 = 1.0 - (_3429 * _3386.w);
                        float _4826 = isnan(0.0) ? _3441 : (isnan(_3441) ? 0.0 : max(_3441, 0.0));
                        float _3442 = isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0));
                        float _3443 = sqrt(_3429) * _3405.w;
                        float _3446 = 1.39999997615814208984375 / (_3443 + 1.39999997615814208984375);
                        float _3447 = _3446 * _3446;
                        float _3450 = ((1.0 - _3447) * _3436) + _3447;
                        float _3453 = _3443 * _3443;
                        float _3457 = ((isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : max(_3450, 0.0))) * _3442) / ((_3453 * 0.699999988079071044921875) + 1.0);
                        float _3461 = (-0.0) - _2016;
                        float _3462 = (-0.0) - _2017;
                        float _3463 = (-0.0) - _2018;
                        float _3467 = inversesqrt(dot(vec3(_3461, _3462, _3463), vec3(_3461, _3462, _3463)));
                        float _3468 = _3467 * _3461;
                        float _3469 = _3467 * _3462;
                        float _3470 = _3467 * _3463;
                        float _3477 = exp2(log2(1.0 / ((_3453 * 3.5) + 5.0)) * 0.25);
                        float _3478 = 1.0 - _957;
                        float _3485 = sqrt(1.0 - ((1.0 - (_3478 * _3478)) * (1.0 - (_3477 * _3477))));
                        float _3486 = _3485 * _3485;
                        float _3487 = _3486 * _3486;
                        float _3488 = _3468 + _3433;
                        float _3489 = _3469 + _3434;
                        float _3490 = _3470 + _3435;
                        float _3494 = inversesqrt(dot(vec3(_3488, _3489, _3490), vec3(_3488, _3489, _3490)));
                        float _3498 = dot(vec3(_882, _885, _888), vec3(_3468, _3469, _3470));
                        float _4842 = isnan(0.0) ? _3498 : (isnan(_3498) ? 0.0 : max(_3498, 0.0));
                        float _3501 = isnan(1.0) ? _4842 : (isnan(_4842) ? 1.0 : min(_4842, 1.0));
                        float _3502 = dot(vec3(_882, _885, _888), vec3(_3494 * _3488, _3494 * _3489, _3494 * _3490));
                        float _4853 = isnan(0.0) ? _3502 : (isnan(_3502) ? 0.0 : max(_3502, 0.0));
                        float _3505 = isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0));
                        float _3509 = ((_3505 * _3505) * (_3487 + (-1.0))) + 1.0;
                        float _3510 = _3446 * _3486;
                        float _3511 = _3510 * _3510;
                        float _3514 = ((1.0 - _3511) * _3436) + _3511;
                        float _4864 = isnan(0.0) ? _3514 : (isnan(_3514) ? 0.0 : max(_3514, 0.0));
                        float _3515 = isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0));
                        float _3516 = 1.0 - _3486;
                        float _3526 = (0.5 / (((_3515 * ((_3501 * _3516) + _3486)) + 9.9999999392252902907785028219223e-09) + (((_3515 * _3516) + _3486) * _3501))) * _3515;
                        float _4875 = isnan(0.0) ? _3526 : (isnan(_3526) ? 0.0 : max(_3526, 0.0));
                        float _3537 = (((_3487 * 3.1415927410125732421875) * (isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0)))) / ((_3509 * _3509) * ((_3453 * 2.1991131305694580078125) + 3.141590118408203125))) * _3442;
                        _3295 = (_3457 * _3405.x) + _3363;
                        _3296 = (_3457 * _3405.y) + _3364;
                        _3297 = (_3457 * _3405.z) + _3365;
                        _3292 = (_3537 * _3422.x) + _3360;
                        _3293 = (_3537 * _3422.y) + _3361;
                        _3294 = (_3537 * _3422.z) + _3362;
                        if (_3367 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3360 = _3292;
                            _3361 = _3293;
                            _3362 = _3294;
                            _3363 = _3295;
                            _3364 = _3296;
                            _3365 = _3297;
                            _3366 = _3367;
                        }
                    }
                    frontier_phi_66_pred = _3297;
                    frontier_phi_66_pred_1 = _3296;
                    frontier_phi_66_pred_2 = _3295;
                    frontier_phi_66_pred_3 = _3294;
                    frontier_phi_66_pred_4 = _3293;
                    frontier_phi_66_pred_5 = _3292;
                }
                _3094 = frontier_phi_66_pred;
                _3092 = frontier_phi_66_pred_1;
                _3090 = frontier_phi_66_pred_2;
                _3088 = frontier_phi_66_pred_3;
                _3086 = frontier_phi_66_pred_4;
                _3084 = frontier_phi_66_pred_5;
                uint _3243 = _3242 + 1u;
                if (_3243 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3236 = _3084;
                    _3237 = _3086;
                    _3238 = _3088;
                    _3239 = _3090;
                    _3240 = _3092;
                    _3241 = _3094;
                    _3242 = _3243;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3083 = _3084;
            _3085 = _3086;
            _3087 = _3088;
            _3089 = _3090;
            _3091 = _3092;
            _3093 = _3094;
        }
        uvec4 _3097 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3098 = _3097.z;
        uint _3100 = (_3098 >> 8u) & 15u;
        float _3204;
        float _3206;
        float _3208;
        float _3210;
        float _3212;
        float _3214;
        if (((4294967295u << _3100) & _2958) == 0u)
        {
            _3204 = _3083;
            _3206 = _3085;
            _3208 = _3087;
            _3210 = _3089;
            _3212 = _3091;
            _3214 = _3093;
        }
        else
        {
            float _3229 = inversesqrt(dot(vec3(_2016, _2017, _2018), vec3(_2016, _2017, _2018)));
            float _3230 = _3229 * _2016;
            float _3231 = _3229 * _2017;
            float _3232 = _3229 * _2018;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3100 < ((_3098 >> 12u) & 15u))
            {
                float _3205;
                float _3207;
                float _3209;
                float _3211;
                float _3213;
                float _3215;
                float _3343 = _3083;
                float _3344 = _3085;
                float _3345 = _3087;
                float _3346 = _3089;
                float _3347 = _3091;
                float _3348 = _3093;
                uint _3349 = _3100;
                uint _3358;
                bool _3359;
                for (;;)
                {
                    _3358 = texelFetch(g_lightClassification, int((((_2952 << 5u) + (_2938 << 9u)) + (_3349 << 2u)) >> 2u)).x;
                    _3359 = _3358 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3359)
                    {
                        frontier_phi_72_pred = _3348;
                        frontier_phi_72_pred_1 = _3347;
                        frontier_phi_72_pred_2 = _3346;
                        frontier_phi_72_pred_3 = _3345;
                        frontier_phi_72_pred_4 = _3344;
                        frontier_phi_72_pred_5 = _3343;
                    }
                    else
                    {
                        float _3542;
                        float _3543;
                        float _3544;
                        float _3545;
                        float _3546;
                        float _3547;
                        float _3836;
                        float _3837;
                        float _3838;
                        float _3839;
                        float _3840;
                        float _3841;
                        float _3555 = _3343;
                        float _3556 = _3344;
                        float _3557 = _3345;
                        float _3558 = _3346;
                        float _3559 = _3347;
                        float _3560 = _3348;
                        uint _3561 = _3358;
                        uint _3562;
                        vec4 _3587;
                        float _3588;
                        vec4 _3603;
                        vec3 _3615;
                        vec4 _3630;
                        vec4 _3645;
                        float _3692;
                        bool _3693;
                        for (;;)
                        {
                            uint _3572 = ((_3349 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3561));
                            _3562 = (_3561 + 4294967295u) & _3561;
                            uint _3574 = _3572 * 40u;
                            _3587 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3574)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3574 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3574 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3574 + 3u)).x));
                            _3588 = _3587.w;
                            uint _3590 = (_3572 * 40u) + 4u;
                            _3603 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3590)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 3u)).x));
                            uint _3605 = (_3572 * 40u) + 8u;
                            _3615 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3605)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3605 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3605 + 2u)).x));
                            uint _3617 = (_3572 * 40u) + 16u;
                            _3630 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3617)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3617 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3617 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3617 + 3u)).x));
                            uint _3632 = (_3572 * 40u) + 20u;
                            _3645 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3632)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 3u)).x));
                            uint _3648 = (_3572 * 40u) + 24u;
                            vec4 _3661 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3648)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 3u)).x));
                            uint _3667 = (_3572 * 40u) + 28u;
                            vec4 _3680 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3667)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3667 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3667 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3667 + 3u)).x));
                            _3692 = fma(_2018, _3680.z, fma(_2017, _3680.y, _3680.x * _2016)) + _3680.w;
                            _3693 = !((fma(_2018, _3661.z, fma(_2017, _3661.y, _3661.x * _2016)) + _3661.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3693)
                            {
                                float _3720 = _3587.x - _2016;
                                float _3721 = _3587.y - _2017;
                                float _3722 = _3587.z - _2018;
                                float _3723 = dot(vec3(_3720, _3721, _3722), vec3(_3720, _3721, _3722));
                                float _3726 = inversesqrt(_3723);
                                float _3727 = _3726 * _3720;
                                float _3728 = _3726 * _3721;
                                float _3729 = _3726 * _3722;
                                float _3733 = 1.0 - (_3723 / (_3588 * _3588));
                                float _4886 = isnan(0.0) ? _3733 : (isnan(_3733) ? 0.0 : max(_3733, 0.0));
                                float _3734 = isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0));
                                float _3738 = sqrt(_3723) * _3603.w;
                                float _3740 = 1.39999997615814208984375 / (_3738 + 1.39999997615814208984375);
                                float _3741 = _3740 * _3740;
                                float _3744 = ((1.0 - _3741) * dot(vec3(_3727, _3728, _3729), vec3(_882, _885, _888))) + _3741;
                                float _3747 = _3738 * _3738;
                                float _3751 = (fma(_2018, _3630.z, fma(_2017, _3630.y, _3630.x * _2016)) + _3630.w) / _3692;
                                float _3752 = (fma(_2018, _3645.z, fma(_2017, _3645.y, _3645.x * _2016)) + _3645.w) / _3692;
                                float _3756 = 1.0 - dot(vec2(_3751, _3752), vec2(_3751, _3752));
                                float _4902 = isnan(0.0) ? _3756 : (isnan(_3756) ? 0.0 : max(_3756, 0.0));
                                float _3757 = isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0));
                                float _3758 = _3757 * (((isnan(0.0) ? _3744 : (isnan(_3744) ? 0.0 : max(_3744, 0.0))) * _3734) / ((_3747 * 0.699999988079071044921875) + 1.0));
                                float _3770 = exp2(log2(1.0 / ((_3747 * 3.5) + 5.0)) * 0.25);
                                float _3771 = 1.0 - _957;
                                float _3778 = sqrt(1.0 - ((1.0 - (_3771 * _3771)) * (1.0 - (_3770 * _3770))));
                                float _3779 = _3778 * _3778;
                                float _3780 = _3779 * _3779;
                                float _3781 = _3727 - _3230;
                                float _3782 = _3728 - _3231;
                                float _3783 = _3729 - _3232;
                                float _3787 = inversesqrt(dot(vec3(_3781, _3782, _3783), vec3(_3781, _3782, _3783)));
                                float _3791 = dot(vec3(_882, _885, _888), vec3((-0.0) - _3230, (-0.0) - _3231, (-0.0) - _3232));
                                float _4913 = isnan(0.0) ? _3791 : (isnan(_3791) ? 0.0 : max(_3791, 0.0));
                                float _3794 = isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0));
                                float _3795 = dot(vec3(_882, _885, _888), vec3(_3787 * _3781, _3787 * _3782, _3787 * _3783));
                                float _4924 = isnan(0.0) ? _3795 : (isnan(_3795) ? 0.0 : max(_3795, 0.0));
                                float _3798 = isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0));
                                float _3802 = ((_3798 * _3798) * (_3780 + (-1.0))) + 1.0;
                                float _3803 = _3740 * _3779;
                                float _3804 = _3803 * _3803;
                                float _3810 = ((1.0 - _3804) * dot(vec3(_882, _885, _888), vec3(_3727, _3728, _3729))) + _3804;
                                float _4935 = isnan(0.0) ? _3810 : (isnan(_3810) ? 0.0 : max(_3810, 0.0));
                                float _3811 = isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0));
                                float _3812 = 1.0 - _3779;
                                float _3822 = (0.5 / (((_3811 * ((_3794 * _3812) + _3779)) + 9.9999999392252902907785028219223e-09) + (((_3811 * _3812) + _3779) * _3794))) * _3811;
                                float _4946 = isnan(0.0) ? _3822 : (isnan(_3822) ? 0.0 : max(_3822, 0.0));
                                float _3832 = (_3757 * _3734) * (((_3780 * 3.1415927410125732421875) * (isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0)))) / ((_3802 * _3802) * ((_3747 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3758 * _3603.y;
                                frontier_phi_78_pred_1 = _3758 * _3603.x;
                                frontier_phi_78_pred_2 = _3832 * _3615.z;
                                frontier_phi_78_pred_3 = _3832 * _3615.y;
                                frontier_phi_78_pred_4 = _3832 * _3615.x;
                                frontier_phi_78_pred_5 = _3758 * _3603.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3840 = frontier_phi_78_pred;
                            _3839 = frontier_phi_78_pred_1;
                            _3838 = frontier_phi_78_pred_2;
                            _3837 = frontier_phi_78_pred_3;
                            _3836 = frontier_phi_78_pred_4;
                            _3841 = frontier_phi_78_pred_5;
                            _3545 = _3839 + _3558;
                            _3546 = _3840 + _3559;
                            _3547 = _3841 + _3560;
                            _3542 = _3836 + _3555;
                            _3543 = _3837 + _3556;
                            _3544 = _3838 + _3557;
                            if (_3562 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3555 = _3542;
                                _3556 = _3543;
                                _3557 = _3544;
                                _3558 = _3545;
                                _3559 = _3546;
                                _3560 = _3547;
                                _3561 = _3562;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3547;
                        frontier_phi_72_pred_1 = _3546;
                        frontier_phi_72_pred_2 = _3545;
                        frontier_phi_72_pred_3 = _3544;
                        frontier_phi_72_pred_4 = _3543;
                        frontier_phi_72_pred_5 = _3542;
                    }
                    _3215 = frontier_phi_72_pred;
                    _3213 = frontier_phi_72_pred_1;
                    _3211 = frontier_phi_72_pred_2;
                    _3209 = frontier_phi_72_pred_3;
                    _3207 = frontier_phi_72_pred_4;
                    _3205 = frontier_phi_72_pred_5;
                    uint _3350 = _3349 + 1u;
                    if (_3350 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3343 = _3205;
                        _3344 = _3207;
                        _3345 = _3209;
                        _3346 = _3211;
                        _3347 = _3213;
                        _3348 = _3215;
                        _3349 = _3350;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3215;
                frontier_phi_60_61_ladder_1 = _3213;
                frontier_phi_60_61_ladder_2 = _3209;
                frontier_phi_60_61_ladder_3 = _3207;
                frontier_phi_60_61_ladder_4 = _3205;
                frontier_phi_60_61_ladder_5 = _3211;
            }
            else
            {
                frontier_phi_60_61_ladder = _3093;
                frontier_phi_60_61_ladder_1 = _3091;
                frontier_phi_60_61_ladder_2 = _3087;
                frontier_phi_60_61_ladder_3 = _3085;
                frontier_phi_60_61_ladder_4 = _3083;
                frontier_phi_60_61_ladder_5 = _3089;
            }
            _3204 = frontier_phi_60_61_ladder_4;
            _3206 = frontier_phi_60_61_ladder_3;
            _3208 = frontier_phi_60_61_ladder_2;
            _3210 = frontier_phi_60_61_ladder_5;
            _3212 = frontier_phi_60_61_ladder_1;
            _3214 = frontier_phi_60_61_ladder;
        }
        float _3219 = isnan(1.0) ? _941 : (isnan(_941) ? 1.0 : min(_941, 1.0));
        _2971 = (_3219 * _3210) + _2483;
        _2973 = (_3219 * _3212) + _2485;
        _2975 = (_3219 * _3214) + _2487;
        _2977 = ((_3204 * _926) * _3219) + _2821;
        _2979 = ((_3206 * _928) * _3219) + _2823;
        _2981 = ((_3208 * _929) * _3219) + _2825;
    }
    else
    {
        _2971 = _2483;
        _2973 = _2485;
        _2975 = _2487;
        _2977 = _2821;
        _2979 = _2823;
        _2981 = _2825;
    }
    uint _2987 = _902 + uint(cbMatDynParam._m0[0u].w);
    float _2993 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _2999 = (((((_2993 * cbMtdParam._m0[14u].x) * _659.x) * _682) * _760) * (((1.0 - _735) * cbMtdParam._m0[20u].w) + _735)) * cbInstanceData._m0[_2987].x;
    float _3005 = (((((_2993 * cbMtdParam._m0[14u].y) * _659.y) * _682) * _760) * (((1.0 - _737) * cbMtdParam._m0[20u].w) + _737)) * cbInstanceData._m0[_2987].y;
    float _3011 = (((((_2993 * cbMtdParam._m0[14u].z) * _659.z) * _682) * _760) * (((1.0 - _739) * cbMtdParam._m0[20u].w) + _739)) * cbInstanceData._m0[_2987].z;
    float _4962 = isnan(0.0) ? _916 : (isnan(_916) ? 0.0 : max(_916, 0.0));
    float _4973 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
    float _4984 = isnan(0.0) ? _918 : (isnan(_918) ? 0.0 : max(_918, 0.0));
    float _3028 = (((isnan(1.0) ? _4962 : (isnan(_4962) ? 1.0 : min(_4962, 1.0))) * (_2971 + ((isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0))) * _941))) + ((_2977 + ((isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0))) * _1750)) * cbPerFrame._m0[3u].x)) + _2999;
    float _3030 = (_3005 + ((_2979 + ((isnan(0.0) ? _1966 : (isnan(_1966) ? 0.0 : max(_1966, 0.0))) * _1750)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4973 : (isnan(_4973) ? 1.0 : min(_4973, 1.0))) * (_2973 + ((isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0))) * _941)));
    float _3032 = (_3011 + ((_2981 + ((isnan(0.0) ? _1969 : (isnan(_1969) ? 0.0 : max(_1969, 0.0))) * _1750)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4984 : (isnan(_4984) ? 1.0 : min(_4984, 1.0))) * (_2975 + ((isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0))) * _941)));
    float _5010 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3045 = isnan(1.0) ? _5010 : (isnan(_5010) ? 1.0 : min(_5010, 1.0));
    uint _3046 = _901 + 6u;
    float _3054 = _862 / cbSceneParam._m0[86u].x;
    float _3055 = _863 / cbSceneParam._m0[86u].y;
    vec4 _3069 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3054, _3055, (log2((isnan(cbSceneParam._m0[77u].w) ? _797 : (isnan(_797) ? cbSceneParam._m0[77u].w : min(_797, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3071 = _3069.x;
    float _3072 = _3069.y;
    float _3073 = _3069.z;
    float _3074 = _3069.w;
    float _3145;
    float _3147;
    float _3149;
    float _3151;
    if (_797 > cbSceneParam._m0[78u].w)
    {
        float _3108 = isnan(_797) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _797 : min(cbSceneParam._m0[80u].w, _797));
        float _3109 = _3108 / _797;
        float _3120 = _3109 * _847;
        float _3121 = _848 * _3109;
        float _3122 = (-0.0) - _3121;
        float _3123 = _3109 * _849;
        float _3125 = (cbSceneParam._m0[77u].w * _3122) / _3108;
        float _3126 = _3125 + cbSceneParam._m0[79u].w;
        float _3127 = cbSceneParam._m0[79u].w - _3121;
        float _3133 = sqrt(((_3120 * _3120) + (_3121 * _3121)) + (_3123 * _3123));
        float _3136 = (1.0 - (cbSceneParam._m0[77u].w / _3108)) * _3133;
        float _3141 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3143 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3305;
        if (abs((_3122 - _3125) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3305 = ((((_3126 > 0.0) ? exp2(_3141 * _3126) : (2.0 - exp2(_3143 * _3126))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3136;
        }
        else
        {
            float _3265 = 1.0 / cbSceneParam._m0[80u].x;
            float _3266 = isnan(_3127) ? _3126 : (isnan(_3126) ? _3127 : max(_3126, _3127));
            float _3267 = isnan(_3127) ? _3126 : (isnan(_3126) ? _3127 : min(_3126, _3127));
            float _3276 = isnan(0.0) ? _3266 : (isnan(_3266) ? 0.0 : min(_3266, 0.0));
            float _3277 = isnan(0.0) ? _3267 : (isnan(_3267) ? 0.0 : min(_3267, 0.0));
            _3305 = ((abs(_3133 / _3122) * cbSceneParam._m0[80u].y) * ((((_3276 - _3277) * 2.0) - ((exp2(_3141 * (isnan(0.0) ? _3266 : (isnan(_3266) ? 0.0 : max(_3266, 0.0)))) - exp2(_3141 * (isnan(0.0) ? _3267 : (isnan(_3267) ? 0.0 : max(_3267, 0.0))))) * _3265)) - ((exp2(_3143 * _3276) - exp2(_3143 * _3277)) * _3265))) + (_3136 * cbSceneParam._m0[80u].z);
        }
        vec4 _3307 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3054, _3055, 1.0), 0.0);
        float _3316 = exp2((_3305 * (-1.44269502162933349609375)) * (1.0 - _3307.w));
        float _3317 = log2(_3316);
        float _3333 = log2(_3074);
        _3145 = (exp2(_3333 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3317 * cbSceneParam._m0[78u].x)) * _3307.x) / cbSceneParam._m0[78u].x)) + _3071;
        _3147 = (exp2(_3333 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3317 * cbSceneParam._m0[78u].y)) * _3307.y) / cbSceneParam._m0[78u].y)) + _3072;
        _3149 = (exp2(_3333 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3317 * cbSceneParam._m0[78u].z)) * _3307.z) / cbSceneParam._m0[78u].z)) + _3073;
        _3151 = _3316 * _3074;
    }
    else
    {
        _3145 = _3071;
        _3147 = _3072;
        _3149 = _3073;
        _3151 = _3074;
    }
    float _3163 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3164 = _3163 == 3.0;
    float _3165 = log2(_3151);
    float _3169 = exp2(_3165 * cbSceneParam._m0[78u].x);
    float _3170 = exp2(_3165 * cbSceneParam._m0[78u].y);
    float _3171 = exp2(_3165 * cbSceneParam._m0[78u].z);
    float _3172 = _3169 * (isnan(0.0) ? _3028 : (isnan(_3028) ? 0.0 : max(_3028, 0.0)));
    float _3173 = _3170 * (isnan(0.0) ? _3030 : (isnan(_3030) ? 0.0 : max(_3030, 0.0)));
    float _3174 = _3171 * (isnan(0.0) ? _3032 : (isnan(_3032) ? 0.0 : max(_3032, 0.0)));
    float _3183 = (_3163 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3183 * (_3164 ? _3172 : (_3172 + (cbSceneParam._m0[72u].w * _3145)));
    SV_Target.y = _3183 * (_3164 ? _3173 : (_3173 + (cbSceneParam._m0[72u].w * _3147)));
    SV_Target.z = _3183 * (_3164 ? _3174 : (_3174 + (cbSceneParam._m0[72u].w * _3149)));
    SV_Target.w = cbInstanceData._m0[_3046].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2999) * _3045) * _3169) * _3183;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3005) * _3045) * _3170) * _3183;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3011) * _3045) * _3171) * _3183;
    SV_Target_1.w = cbInstanceData._m0[_3046].w;
}


