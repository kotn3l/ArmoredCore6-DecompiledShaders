#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_20;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1431;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _228 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _229 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _230 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _236 = inversesqrt(dot(vec3(_228, _229, _230), vec3(_228, _229, _230)));
    float _243 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _272 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _278 = _272.x * cbMtdParam._m0[10u].x;
    float _279 = _272.y * cbMtdParam._m0[10u].y;
    float _280 = _272.z * cbMtdParam._m0[10u].z;
    vec4 _299 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _318 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _346 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w)).x;
    float _356 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _318.x) * 2.0) - _346)) + 1.0;
    float _4094 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _357 = isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0));
    float _364 = (_357 * ((_299.x * cbMtdParam._m0[11u].x) - _278)) + _278;
    float _365 = (_357 * ((_299.y * cbMtdParam._m0[11u].y) - _279)) + _279;
    float _366 = (_357 * ((_299.z * cbMtdParam._m0[11u].z) - _280)) + _280;
    vec4 _384 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _397 = (((((1.0 - _318.y) * 2.0) - _346) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _4105 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    float _398 = isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0));
    float _405 = (((_384.x * cbMtdParam._m0[12u].x) - _364) * _398) + _364;
    float _406 = (_398 * ((_384.y * cbMtdParam._m0[12u].y) - _365)) + _365;
    float _407 = (_398 * ((_384.z * cbMtdParam._m0[12u].z) - _366)) + _366;
    vec4 _425 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _438 = (((((1.0 - _318.z) * 2.0) - _346) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _4116 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _439 = isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0));
    vec4 _467 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _475 = ((((((_425.x * cbMtdParam._m0[13u].x) - _405) * _439) + _405) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _467.x;
    float _478 = ((((_439 * ((_425.y * cbMtdParam._m0[13u].y) - _406)) + _406) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _467.y;
    float _481 = ((((_439 * ((_425.z * cbMtdParam._m0[13u].z) - _407)) + _407) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _467.z;
    vec4 _506 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    vec4 _525 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.z) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.w) + cbTextureTilingScale._m0[20u].w));
    float _528 = _525.x + 0.00999999977648258209228515625;
    float _535 = (TEXCOORD_8 - ((cbMtdParam._m0[20u].x * (1.0 - TEXCOORD_8)) * _528)) * (cbMtdParam._m0[19u].w + 1.0);
    float _4127 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
    float _536 = isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0));
    float _543 = (_536 * ((_506.x * cbMtdParam._m0[16u].x) - _475)) + _475;
    float _544 = (_536 * ((_506.y * cbMtdParam._m0[16u].y) - _478)) + _478;
    float _545 = (_536 * ((_506.z * cbMtdParam._m0[16u].z) - _481)) + _481;
    vec4 _558 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _560 = _558.x;
    float _577 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _560) * _357) + _560;
    float _594 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _577) * _398) + _577;
    float _611 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x - _594) * _439) + _594;
    float _613 = _611 - (_611 * TEXCOORD_8);
    vec4 _626 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    vec4 _647 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _649 = _647.x;
    float _650 = _647.y;
    float _651 = _647.z;
    vec4 _663 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _674 = ((_663.x - _649) * _357) + _649;
    float _675 = ((_663.y - _650) * _357) + _650;
    float _676 = ((_663.z - _651) * _357) + _651;
    vec4 _689 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _700 = ((_689.x - _674) * _398) + _674;
    float _701 = ((_689.y - _675) * _398) + _675;
    float _702 = ((_689.z - _676) * _398) + _676;
    vec4 _715 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _728 = ((_715.z - _702) * _439) + _702;
    float _731 = ((((_715.x - _700) * _439) + _700) * 2.0) + (-1.0);
    float _732 = ((((_715.y - _701) * _439) + _701) * 2.0) + (-1.0);
    float _733 = dot(vec2(_731, _732), vec2(_731, _732));
    float _4138 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _738 = sqrt(1.0 - (isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0))));
    float _743 = (((_626.z - _728) * TEXCOORD_8) * cbMtdParam._m0[20u].y) + _728;
    vec4 _773 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[15u].x) + cbTextureTilingScale._m0[15u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[15u].y) + cbTextureTilingScale._m0[15u].w));
    float _787 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4149 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    float _788 = isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0));
    float _796 = (((_788 * _788) * (3.0 - (_788 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _804 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _812 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4160 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
    float _813 = isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0));
    float _817 = (_813 * _813) * (3.0 - (_813 * 2.0));
    float _818 = _817 * cbMtdParam._m0[22u].x;
    float _819 = _817 * cbMtdParam._m0[22u].y;
    float _820 = sin(_804);
    float _821 = cos(_804);
    float _822 = TEXCOORD.z - _818;
    float _823 = TEXCOORD.w - _819;
    vec4 _843 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_818 + fma(_823, (-0.0) - _820, _822 * _821))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_823, _821, _822 * _820) + _819)) + cbTextureTilingScale._m0[2u].w));
    float _849 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _843.x;
    float _851 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _843.y;
    float _853 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _843.z;
    float _869 = (TEXCOORD_5.x - ((_528 * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _4171 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    float _870 = isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0));
    float _876 = ((((_626.x * 2.0) + (-1.0)) * TEXCOORD_8) * cbMtdParam._m0[19u].y) + _731;
    float _877 = ((((_626.y * 2.0) + (-1.0)) * TEXCOORD_9) * cbMtdParam._m0[19u].y) + _732;
    float _880 = fma(_738, _243 * NORMAL.x, fma(_877, _250 * TANGENT.x, (_236 * _228) * _876));
    float _883 = fma(_738, _243 * NORMAL.y, fma(_877, _250 * TANGENT.y, (_236 * _229) * _876));
    float _886 = fma(_738, _243 * NORMAL.z, fma(_877, _250 * TANGENT.z, (_236 * _230) * _876));
    float _890 = inversesqrt(dot(vec3(_880, _883, _886), vec3(_880, _883, _886)));
    float _891 = _890 * _880;
    float _892 = _890 * _883;
    float _893 = _890 * _886;
    float _4182 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _894 = isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0));
    float _4193 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _4204 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _4215 = isnan(0.0) ? _545 : (isnan(_545) ? 0.0 : max(_545, 0.0));
    float _4226 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _898 = isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0));
    float _914 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _954 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _964 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _954);
    float _965 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _954);
    float _966 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _954);
    float _970 = inversesqrt(dot(vec3(_964, _965, _966), vec3(_964, _965, _966)));
    float _971 = _964 * _970;
    float _972 = _965 * _970;
    float _973 = _966 * _970;
    float _979 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _980 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _998 = fma(_893, cbSceneParam._m0[5u].z, fma(_892, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _891));
    float _1001 = fma(_893, cbSceneParam._m0[6u].z, fma(_892, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _891));
    float _1004 = fma(_893, cbSceneParam._m0[7u].z, fma(_892, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _891));
    uint _1017 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1018 = _1017 + 9u;
    uint _1019 = _1018 + uint(cbMatDynParam._m0[0u].w);
    float _1025 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0)))) * cbInstanceData._m0[_1019].x;
    float _1026 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0)))) * cbInstanceData._m0[_1019].y;
    float _1027 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0)))) * cbInstanceData._m0[_1019].z;
    float _4237 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
    float _1028 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
    float _4248 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    float _1029 = isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0));
    float _4259 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
    float _1030 = isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0));
    float _1031 = 1.0 - _898;
    float _1032 = _1028 * _1031;
    float _1033 = _1029 * _1031;
    float _1034 = _1030 * _1031;
    float _1039 = (_1028 + (-0.039999999105930328369140625)) * _898;
    float _1040 = (_1029 + (-0.039999999105930328369140625)) * _898;
    float _1041 = (_1030 + (-0.039999999105930328369140625)) * _898;
    float _1042 = _1039 + 0.039999999105930328369140625;
    float _1044 = _1040 + 0.039999999105930328369140625;
    float _1045 = _1041 + 0.039999999105930328369140625;
    vec4 _1054 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _979, cbSceneParam._m0[86u].y * _980));
    float _1057 = _1054.x * TEXCOORD_5.w;
    float _1058 = dot(vec3(_891, _892, _893), vec3(_971, _972, _973));
    float _1061 = _1058 * 2.0;
    float _1065 = (_1061 * _891) - _971;
    float _1066 = (_1061 * _892) - _972;
    float _1067 = (_1061 * _893) - _973;
    float _1071 = abs(dot(vec3(_971, _972, _973), vec3(_891, _892, _893)));
    float _4270 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
    float _1073 = sqrt(_894);
    float _1085 = exp2((_1073 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1073 * 3.0));
    float _1091 = (1.0 - _1085) * ((_1073 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1092 = _1085 * _1073;
    float _1120 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1124 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1128 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1430;
    float _1432;
    float _1433;
    float _1434;
    float _1435;
    float _1436;
    float _1437;
    float _1438;
    float _1439;
    float _1440;
    float _1441;
    float _1442;
    float _1443;
    float _1444;
    float _1445;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1155 = fma(_1128, cbModelParam._m0[26u].z, fma(_1124, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1120));
        float _1159 = fma(_1128, cbModelParam._m0[27u].z, fma(_1124, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1120));
        float _1163 = fma(_1128, cbModelParam._m0[28u].z, fma(_1124, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1120));
        float _1188 = _1120 + _891;
        float _1189 = _1124 + _892;
        float _1190 = _1128 + _893;
        float _1200 = fma(_1190, cbModelParam._m0[26u].z, fma(_1189, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1188)) - _1155;
        float _1201 = fma(_1190, cbModelParam._m0[27u].z, fma(_1189, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1188)) - _1159;
        float _1202 = fma(_1190, cbModelParam._m0[28u].z, fma(_1189, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1188)) - _1163;
        float _1206 = inversesqrt(dot(vec3(_1200, _1201, _1202), vec3(_1200, _1201, _1202)));
        float _1219 = ((_1206 * _1200) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1155 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1220 = ((_1206 * _1201) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1159 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1221 = ((_1206 * _1202) / cbModelParam._m0[34u].z) + ((((((_1163 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1224 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1219, _1220, _1221), 0.0);
        vec4 _1231 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1219, _1220, _1221), 0.0);
        vec4 _1238 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1219, _1220, _1221), 0.0);
        vec4 _1245 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1219, _1220, _1221), 0.0);
        float _1258 = exp2((_1224.w + (-0.5)) * 20.0) * 2.0;
        float _1259 = _1258 * (_1224.x + (-0.5));
        float _1260 = _1258 * (_1224.y + (-0.5));
        float _1261 = _1258 * (_1224.z + (-0.5));
        float _1268 = exp2((_1231.w + (-0.5)) * 20.0) * 2.0;
        float _1269 = _1268 * (_1231.x + (-0.5));
        float _1270 = _1268 * (_1231.y + (-0.5));
        float _1271 = _1268 * (_1231.z + (-0.5));
        float _1278 = exp2((_1238.w + (-0.5)) * 20.0) * 2.0;
        float _1279 = _1278 * (_1238.x + (-0.5));
        float _1280 = _1278 * (_1238.y + (-0.5));
        float _1281 = _1278 * (_1238.z + (-0.5));
        float _1288 = exp2((_1245.w + (-0.5)) * 20.0) * 2.0;
        float _1289 = _1288 * (_1245.x + (-0.5));
        float _1290 = _1288 * (_1245.y + (-0.5));
        float _1291 = _1288 * (_1245.z + (-0.5));
        float _1292 = isnan(0.0) ? _1289 : (isnan(_1289) ? 0.0 : max(_1289, 0.0));
        float _1293 = isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0));
        float _1294 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0));
        float _1295 = _1259 * 0.5;
        float _1296 = _1269 * 0.5;
        float _1297 = _1279 * 0.5;
        float _1298 = dot(vec3(_1295, _1296, _1297), vec3(_1295, _1296, _1297));
        float _1303 = (_1298 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1298);
        float _1312 = (dot(vec3(_891, _892, _893), vec3(_1303 * _1295, _1303 * _1296, _1303 * _1297)) + 1.0) * 0.5;
        float _4296 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1322 = sqrt(((_1296 * _1296) + (_1295 * _1295)) + (_1297 * _1297)) / (_1292 + 9.9999997473787516355514526367188e-06);
        float _4307 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1323 = isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0));
        float _1324 = _1323 * 2.0;
        float _1328 = (1.0 - _1323) / (_1323 + 1.0);
        float _4318 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1329 = isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0));
        float _1338 = ((((1.0 - _1329) * (_1324 + 2.0)) * exp2(log2(isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0))) * (_1324 + 1.0))) + _1329) * _1292;
        float _1339 = _1260 * 0.5;
        float _1340 = _1270 * 0.5;
        float _1341 = _1280 * 0.5;
        float _1342 = dot(vec3(_1339, _1340, _1341), vec3(_1339, _1340, _1341));
        float _1347 = (_1342 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1342);
        float _1355 = (dot(vec3(_891, _892, _893), vec3(_1347 * _1339, _1347 * _1340, _1347 * _1341)) + 1.0) * 0.5;
        float _4329 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
        float _1364 = sqrt(((_1340 * _1340) + (_1339 * _1339)) + (_1341 * _1341)) / (_1293 + 9.9999997473787516355514526367188e-06);
        float _4340 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1365 = isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0));
        float _1366 = _1365 * 2.0;
        float _1370 = (1.0 - _1365) / (_1365 + 1.0);
        float _4351 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1371 = isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0));
        float _1380 = ((((1.0 - _1371) * (_1366 + 2.0)) * exp2(log2(isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0))) * (_1366 + 1.0))) + _1371) * _1293;
        float _1381 = _1261 * 0.5;
        float _1382 = _1271 * 0.5;
        float _1383 = _1281 * 0.5;
        float _1384 = dot(vec3(_1381, _1382, _1383), vec3(_1381, _1382, _1383));
        float _1389 = (_1384 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1384);
        float _1397 = (dot(vec3(_891, _892, _893), vec3(_1389 * _1381, _1389 * _1382, _1389 * _1383)) + 1.0) * 0.5;
        float _4362 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1406 = sqrt(((_1382 * _1382) + (_1381 * _1381)) + (_1383 * _1383)) / (_1294 + 9.9999997473787516355514526367188e-06);
        float _4373 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1407 = isnan(1.0) ? _4373 : (isnan(_4373) ? 1.0 : min(_4373, 1.0));
        float _1408 = _1407 * 2.0;
        float _1412 = (1.0 - _1407) / (_1407 + 1.0);
        float _4384 = isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0));
        float _1413 = isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0));
        float _1422 = ((((1.0 - _1413) * (_1408 + 2.0)) * exp2(log2(isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0))) * (_1408 + 1.0))) + _1413) * _1294;
        _1430 = _1261;
        _1432 = _1260;
        _1433 = _1259;
        _1434 = _1271;
        _1435 = _1270;
        _1436 = _1269;
        _1437 = _1281;
        _1438 = _1280;
        _1439 = _1279;
        _1440 = _1294;
        _1441 = _1293;
        _1442 = _1292;
        _1443 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0)));
        _1444 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0)));
        _1445 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0)));
    }
    else
    {
        _1430 = _1431;
        _1432 = _1431;
        _1433 = _1431;
        _1434 = _1431;
        _1435 = _1431;
        _1436 = _1431;
        _1437 = _1431;
        _1438 = _1431;
        _1439 = _1431;
        _1440 = _1431;
        _1441 = _1431;
        _1442 = _1431;
        _1443 = 0.0;
        _1444 = 0.0;
        _1445 = 0.0;
    }
    float _1740;
    float _1741;
    float _1742;
    float _1743;
    float _1744;
    float _1745;
    float _1746;
    float _1747;
    float _1748;
    float _1749;
    float _1750;
    float _1751;
    float _1752;
    float _1753;
    float _1754;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1471 = fma(_1128, cbModelParam._m0[30u].z, fma(_1124, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1120));
        float _1475 = fma(_1128, cbModelParam._m0[31u].z, fma(_1124, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1120));
        float _1479 = fma(_1128, cbModelParam._m0[32u].z, fma(_1124, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1120));
        float _1502 = _1120 + _891;
        float _1503 = _1124 + _892;
        float _1504 = _1128 + _893;
        float _1514 = fma(_1504, cbModelParam._m0[30u].z, fma(_1503, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1502)) - _1471;
        float _1515 = fma(_1504, cbModelParam._m0[31u].z, fma(_1503, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1502)) - _1475;
        float _1516 = fma(_1504, cbModelParam._m0[32u].z, fma(_1503, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1502)) - _1479;
        float _1520 = inversesqrt(dot(vec3(_1514, _1515, _1516), vec3(_1514, _1515, _1516)));
        float _1533 = ((_1520 * _1514) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1471 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1534 = ((_1520 * _1515) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1475 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1535 = ((_1520 * _1516) / cbModelParam._m0[35u].z) + ((((((_1479 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1537 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1533, _1534, _1535), 0.0);
        vec4 _1544 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1533, _1534, _1535), 0.0);
        vec4 _1551 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1533, _1534, _1535), 0.0);
        vec4 _1558 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1533, _1534, _1535), 0.0);
        float _1570 = exp2((_1537.w + (-0.5)) * 20.0) * 2.0;
        float _1571 = _1570 * (_1537.x + (-0.5));
        float _1572 = _1570 * (_1537.y + (-0.5));
        float _1573 = _1570 * (_1537.z + (-0.5));
        float _1580 = exp2((_1544.w + (-0.5)) * 20.0) * 2.0;
        float _1581 = _1580 * (_1544.x + (-0.5));
        float _1582 = _1580 * (_1544.y + (-0.5));
        float _1583 = _1580 * (_1544.z + (-0.5));
        float _1590 = exp2((_1551.w + (-0.5)) * 20.0) * 2.0;
        float _1591 = _1590 * (_1551.x + (-0.5));
        float _1592 = _1590 * (_1551.y + (-0.5));
        float _1593 = _1590 * (_1551.z + (-0.5));
        float _1600 = exp2((_1558.w + (-0.5)) * 20.0) * 2.0;
        float _1601 = _1600 * (_1558.x + (-0.5));
        float _1602 = _1600 * (_1558.y + (-0.5));
        float _1603 = _1600 * (_1558.z + (-0.5));
        float _1604 = isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0));
        float _1605 = isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0));
        float _1606 = isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0));
        float _1607 = _1571 * 0.5;
        float _1608 = _1581 * 0.5;
        float _1609 = _1591 * 0.5;
        float _1610 = dot(vec3(_1607, _1608, _1609), vec3(_1607, _1608, _1609));
        float _1615 = (_1610 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1610);
        float _1623 = (dot(vec3(_891, _892, _893), vec3(_1615 * _1607, _1615 * _1608, _1615 * _1609)) + 1.0) * 0.5;
        float _4425 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
        float _1632 = sqrt(((_1608 * _1608) + (_1607 * _1607)) + (_1609 * _1609)) / (_1604 + 9.9999997473787516355514526367188e-06);
        float _4436 = isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0));
        float _1633 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
        float _1634 = _1633 * 2.0;
        float _1638 = (1.0 - _1633) / (_1633 + 1.0);
        float _4447 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1639 = isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0));
        float _1648 = ((((1.0 - _1639) * (_1634 + 2.0)) * exp2(log2(isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0))) * (_1634 + 1.0))) + _1639) * _1604;
        float _1649 = _1572 * 0.5;
        float _1650 = _1582 * 0.5;
        float _1651 = _1592 * 0.5;
        float _1652 = dot(vec3(_1649, _1650, _1651), vec3(_1649, _1650, _1651));
        float _1657 = (_1652 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1652);
        float _1665 = (dot(vec3(_891, _892, _893), vec3(_1657 * _1649, _1657 * _1650, _1657 * _1651)) + 1.0) * 0.5;
        float _4458 = isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0));
        float _1674 = sqrt(((_1650 * _1650) + (_1649 * _1649)) + (_1651 * _1651)) / (_1605 + 9.9999997473787516355514526367188e-06);
        float _4469 = isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0));
        float _1675 = isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0));
        float _1676 = _1675 * 2.0;
        float _1680 = (1.0 - _1675) / (_1675 + 1.0);
        float _4480 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
        float _1681 = isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0));
        float _1690 = ((((1.0 - _1681) * (_1676 + 2.0)) * exp2(log2(isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0))) * (_1676 + 1.0))) + _1681) * _1605;
        float _1691 = _1573 * 0.5;
        float _1692 = _1583 * 0.5;
        float _1693 = _1593 * 0.5;
        float _1694 = dot(vec3(_1691, _1692, _1693), vec3(_1691, _1692, _1693));
        float _1699 = (_1694 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1694);
        float _1707 = (dot(vec3(_891, _892, _893), vec3(_1699 * _1691, _1699 * _1692, _1699 * _1693)) + 1.0) * 0.5;
        float _4491 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
        float _1716 = sqrt(((_1692 * _1692) + (_1691 * _1691)) + (_1693 * _1693)) / (_1606 + 9.9999997473787516355514526367188e-06);
        float _4502 = isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0));
        float _1717 = isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0));
        float _1718 = _1717 * 2.0;
        float _1722 = (1.0 - _1717) / (_1717 + 1.0);
        float _4513 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
        float _1723 = isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0));
        float _1732 = ((((1.0 - _1723) * (_1718 + 2.0)) * exp2(log2(isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0))) * (_1718 + 1.0))) + _1723) * _1606;
        _1740 = _1573;
        _1741 = _1572;
        _1742 = _1571;
        _1743 = _1583;
        _1744 = _1582;
        _1745 = _1581;
        _1746 = _1593;
        _1747 = _1592;
        _1748 = _1591;
        _1749 = _1606;
        _1750 = _1605;
        _1751 = _1604;
        _1752 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0)));
        _1753 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0)));
        _1754 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1732 : (isnan(_1732) ? 0.0 : max(_1732, 0.0)));
    }
    else
    {
        _1740 = _1431;
        _1741 = _1431;
        _1742 = _1431;
        _1743 = _1431;
        _1744 = _1431;
        _1745 = _1431;
        _1746 = _1431;
        _1747 = _1431;
        _1748 = _1431;
        _1749 = _1431;
        _1750 = _1431;
        _1751 = _1431;
        _1752 = 0.0;
        _1753 = 0.0;
        _1754 = 0.0;
    }
    float _1764 = (cbModelParam._m0[1u].x * (_1752 - _1443)) + _1443;
    float _1765 = (cbModelParam._m0[1u].x * (_1753 - _1444)) + _1444;
    float _1766 = (cbModelParam._m0[1u].x * (_1754 - _1445)) + _1445;
    float _1787 = fma(_1766, cbSceneParam._m0[89u].z, fma(_1765, cbSceneParam._m0[89u].y, _1764 * cbSceneParam._m0[89u].x));
    float _1790 = fma(_1766, cbSceneParam._m0[90u].z, fma(_1765, cbSceneParam._m0[90u].y, _1764 * cbSceneParam._m0[90u].x));
    float _1793 = fma(_1766, cbSceneParam._m0[91u].z, fma(_1765, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1764));
    float _1808 = _1065 * 0.5;
    float _1809 = _1066 * 0.5;
    float _1810 = _1067 * 0.5;
    float _1811 = dot(vec4(_1808, _1809, _1810, 1.0), vec4(_1742, _1745, _1748, _1751));
    float _1814 = dot(vec4(_1808, _1809, _1810, 1.0), vec4(_1741, _1744, _1747, _1750));
    float _1817 = dot(vec4(_1808, _1809, _1810, 1.0), vec4(_1740, _1743, _1746, _1749));
    float _1851;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1824 = dot(vec4(_1808, _1809, _1810, 1.0), vec4(_1430, _1434, _1437, _1440));
        float _1828 = dot(vec4(_1808, _1809, _1810, 1.0), vec4(_1432, _1435, _1438, _1441));
        float _1832 = dot(vec4(_1808, _1809, _1810, 1.0), vec4(_1433, _1436, _1439, _1442));
        float _1839 = dot(vec4(cbModelParam._m0[39u]), vec4(_1808, _1809, _1810, 1.0));
        _1851 = dot(vec3(isnan(0.0) ? _1832 : (isnan(_1832) ? 0.0 : max(_1832, 0.0)), isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0)), isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1839) ? 0.0 : (isnan(0.0) ? _1839 : max(0.0, _1839))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1851 = 1.0;
    }
    float _1862;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1853 = dot(vec4(cbModelParam._m0[40u]), vec4(_1808, _1809, _1810, 1.0));
        _1862 = dot(vec3(isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0)), isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0)), isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1853) ? 0.0 : (isnan(0.0) ? _1853 : max(0.0, _1853))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1862 = 1.0;
    }
    float _1866 = (_1862 * cbModelParam._m0[1u].x) + (_1851 * (1.0 - cbModelParam._m0[1u].x));
    float _1876 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _894);
    float _1877 = isnan(_1876) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1876 : min(cbModelParam._m0[25u].z, _1876));
    float _1957;
    float _1959;
    float _1961;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1924 = fma(_1128, cbModelParam._m0[13u].z, fma(_1124, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1120)) + cbModelParam._m0[13u].w;
        float _1928 = fma(_1128, cbModelParam._m0[14u].z, fma(_1124, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1120)) + cbModelParam._m0[14u].w;
        float _1932 = fma(_1128, cbModelParam._m0[15u].z, fma(_1124, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1120)) + cbModelParam._m0[15u].w;
        float _1935 = fma(_1067, cbModelParam._m0[13u].z, fma(_1066, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1065));
        float _1938 = fma(_1067, cbModelParam._m0[14u].z, fma(_1066, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1065));
        float _1941 = fma(_1067, cbModelParam._m0[15u].z, fma(_1066, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1065));
        float _1969;
        if (_1935 > 0.0)
        {
            _1969 = abs((1.0 - _1924) / _1935);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1935 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1924 + 1.0) / _1935);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1969 = frontier_phi_14_12_ladder;
        }
        float _2140;
        if (_1938 > 0.0)
        {
            _2140 = abs((1.0 - _1928) / _1938);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1938 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1928 + 1.0) / _1938);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2140 = frontier_phi_23_19_ladder;
        }
        float _2435;
        if (_1941 > 0.0)
        {
            _2435 = abs((1.0 - _1932) / _1941);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1941 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1932 + 1.0) / _1941);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2435 = frontier_phi_35_30_ladder;
        }
        float _2437 = isnan(_2140) ? _1969 : (isnan(_1969) ? _2140 : min(_1969, _2140));
        float _2438 = isnan(_2435) ? _2437 : (isnan(_2437) ? _2435 : min(_2437, _2435));
        float _2442 = (_2438 * _1935) + _1924;
        float _2443 = (_2438 * _1938) + _1928;
        float _2444 = (_2438 * _1941) + _1932;
        float _2445 = _2438 * 9.9999997473787516355514526367188e-05;
        float _2447 = (-1.0) - _2445;
        float _2449 = _2445 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2444 > _2449) || ((_2444 < _2447) || ((_2443 > _2449) || ((_2443 < _2447) || ((_2442 < _2447) || (_2442 > _2449))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2589 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2444, cbModelParam._m0[9u].z, fma(_2443, cbModelParam._m0[9u].y, _2442 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2444, cbModelParam._m0[10u].z, fma(_2443, cbModelParam._m0[10u].y, _2442 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2444, cbModelParam._m0[11u].z, fma(_2443, cbModelParam._m0[11u].y, _2442 * cbModelParam._m0[11u].x))), _1877);
            frontier_phi_13_35_ladder = _2589.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2589.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2589.x * cbModelParam._m0[1u].y;
        }
        _1957 = frontier_phi_13_35_ladder_2;
        _1959 = frontier_phi_13_35_ladder_1;
        _1961 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1945 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1065, _1066, _1067), _1877);
        _1957 = _1945.x * cbModelParam._m0[1u].y;
        _1959 = _1945.y * cbModelParam._m0[1u].y;
        _1961 = _1945.z * cbModelParam._m0[1u].y;
    }
    float _1965 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _894);
    float _1966 = isnan(_1965) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1965 : min(cbModelParam._m0[25u].w, _1965));
    float _2055;
    float _2057;
    float _2059;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2019 = fma(_1128, cbModelParam._m0[21u].z, fma(_1124, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1120)) + cbModelParam._m0[21u].w;
        float _2023 = fma(_1128, cbModelParam._m0[22u].z, fma(_1124, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1120)) + cbModelParam._m0[22u].w;
        float _2027 = fma(_1128, cbModelParam._m0[23u].z, fma(_1124, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1120)) + cbModelParam._m0[23u].w;
        float _2030 = fma(_1067, cbModelParam._m0[21u].z, fma(_1066, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1065));
        float _2033 = fma(_1067, cbModelParam._m0[22u].z, fma(_1066, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1065));
        float _2036 = fma(_1067, cbModelParam._m0[23u].z, fma(_1066, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1065));
        float _2145;
        if (_2030 > 0.0)
        {
            _2145 = abs((1.0 - _2019) / _2030);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2030 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2019 + 1.0) / _2030);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2145 = frontier_phi_25_21_ladder;
        }
        float _2462;
        if (_2033 > 0.0)
        {
            _2462 = abs((1.0 - _2023) / _2033);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2033 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2023 + 1.0) / _2033);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2462 = frontier_phi_37_32_ladder;
        }
        float _2800;
        if (_2036 > 0.0)
        {
            _2800 = abs((1.0 - _2027) / _2036);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2036 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2027 + 1.0) / _2036);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2800 = frontier_phi_47_44_ladder;
        }
        float _2802 = isnan(_2462) ? _2145 : (isnan(_2145) ? _2462 : min(_2145, _2462));
        float _2803 = isnan(_2800) ? _2802 : (isnan(_2802) ? _2800 : min(_2802, _2800));
        float _2807 = (_2803 * _2030) + _2019;
        float _2808 = (_2803 * _2033) + _2023;
        float _2809 = (_2803 * _2036) + _2027;
        float _2810 = _2803 * 9.9999997473787516355514526367188e-05;
        float _2811 = (-1.0) - _2810;
        float _2813 = _2810 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2809 > _2813) || ((_2809 < _2811) || ((_2808 > _2813) || ((_2808 < _2811) || ((_2807 < _2811) || (_2807 > _2813))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2931 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2809, cbModelParam._m0[17u].z, fma(_2808, cbModelParam._m0[17u].y, _2807 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2809, cbModelParam._m0[18u].z, fma(_2808, cbModelParam._m0[18u].y, _2807 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2809, cbModelParam._m0[19u].z, fma(_2808, cbModelParam._m0[19u].y, _2807 * cbModelParam._m0[19u].x))), _1966);
            frontier_phi_22_47_ladder = _2931.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2931.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2931.x * cbModelParam._m0[1u].z;
        }
        _2055 = frontier_phi_22_47_ladder_2;
        _2057 = frontier_phi_22_47_ladder_1;
        _2059 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2039 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1065, _1066, _1067), _1966);
        _2055 = _2039.x * cbModelParam._m0[1u].z;
        _2057 = _2039.y * cbModelParam._m0[1u].z;
        _2059 = _2039.z * cbModelParam._m0[1u].z;
    }
    float _2072 = (((_1091 * _1042) + _1092) * _1057) * ((cbModelParam._m0[1u].w * (_2055 - _1957)) + _1957);
    float _2074 = (((_1091 * _1044) + _1092) * _1057) * ((cbModelParam._m0[1u].w * (_2057 - _1959)) + _1959);
    float _2076 = (((_1091 * _1045) + _1092) * _1057) * ((cbModelParam._m0[1u].w * (_2059 - _1961)) + _1961);
    float _2079 = fma(_2076, cbSceneParam._m0[89u].z, fma(_2074, cbSceneParam._m0[89u].y, _2072 * cbSceneParam._m0[89u].x));
    float _2082 = fma(_2076, cbSceneParam._m0[90u].z, fma(_2074, cbSceneParam._m0[90u].y, _2072 * cbSceneParam._m0[90u].x));
    float _2085 = fma(_2076, cbSceneParam._m0[91u].z, fma(_2074, cbSceneParam._m0[91u].y, _2072 * cbSceneParam._m0[91u].x));
    float _2119 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2123 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2127 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2131 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2132 = _2119 / _2131;
    float _2133 = _2123 / _2131;
    float _2134 = _2127 / _2131;
    float _2281;
    float _2282;
    float _2283;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2161 = ((uint(_2134 > cbSceneParam._m0[59u].y) + uint(_2134 > cbSceneParam._m0[59u].x)) + uint(_2134 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2162 = _2161 + 43u;
        uint _2170 = _2161 + 44u;
        uint _2178 = _2161 + 45u;
        uint _2186 = _2161 + 46u;
        float _2197 = fma(_2131, cbSceneParam._m0[_2162].w, fma(_2127, cbSceneParam._m0[_2162].z, fma(_2123, cbSceneParam._m0[_2162].y, _2119 * cbSceneParam._m0[_2162].x)));
        float _2201 = fma(_2131, cbSceneParam._m0[_2170].w, fma(_2127, cbSceneParam._m0[_2170].z, fma(_2123, cbSceneParam._m0[_2170].y, _2119 * cbSceneParam._m0[_2170].x)));
        float _2209 = fma(_2131, cbSceneParam._m0[_2186].w, fma(_2127, cbSceneParam._m0[_2186].z, fma(_2123, cbSceneParam._m0[_2186].y, _2119 * cbSceneParam._m0[_2186].x)));
        float _2214 = cbSceneParam._m0[33u].z * _2209;
        float _2216 = cbSceneParam._m0[33u].w * _2209;
        float _2219 = fma(_2131, cbSceneParam._m0[_2178].w, fma(_2127, cbSceneParam._m0[_2178].z, fma(_2123, cbSceneParam._m0[_2178].y, _2119 * cbSceneParam._m0[_2178].x))) / _2209;
        float _2267 = (cbSceneParam._m0[33u].x - sqrt(((_2133 * _2133) + (_2132 * _2132)) + (_2134 * _2134))) * cbSceneParam._m0[33u].y;
        float _4639 = isnan(0.0) ? _2267 : (isnan(_2267) ? 0.0 : max(_2267, 0.0));
        float _2274 = (isnan(1.0) ? _4639 : (isnan(_4639) ? 1.0 : min(_4639, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2214 + _2197) / _2209, (_2216 + _2201) / _2209), _2219), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2216 + _2197) / _2209, (_2201 - _2214) / _2209), _2219), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2197 - _2214) / _2209, (_2201 - _2216) / _2209), _2219), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2197 - _2216) / _2209, (_2214 + _2201) / _2209), _2219), 0.0)).x), vec4(0.25)));
        _2281 = 1.0 - (_2274 * cbSceneParam._m0[34u].x);
        _2282 = 1.0 - (_2274 * cbSceneParam._m0[34u].y);
        _2283 = 1.0 - (_2274 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2281 = 1.0;
        _2282 = 1.0;
        _2283 = 1.0;
    }
    float _2347;
    float _2349;
    float _2351;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2335 = fma(_2131, cbSceneParam._m0[63u].w, fma(_2127, cbSceneParam._m0[63u].z, fma(_2123, cbSceneParam._m0[63u].y, _2119 * cbSceneParam._m0[63u].x)));
        float _2336 = fma(_2131, cbSceneParam._m0[60u].w, fma(_2127, cbSceneParam._m0[60u].z, fma(_2123, cbSceneParam._m0[60u].y, _2119 * cbSceneParam._m0[60u].x))) / _2335;
        float _2337 = fma(_2131, cbSceneParam._m0[61u].w, fma(_2127, cbSceneParam._m0[61u].z, fma(_2123, cbSceneParam._m0[61u].y, _2119 * cbSceneParam._m0[61u].x))) / _2335;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2336 >= cbSceneParam._m0[64u].x) && (_2337 >= cbSceneParam._m0[64u].y)) && (_2336 <= cbSceneParam._m0[64u].z)) && (_2337 <= cbSceneParam._m0[64u].w))
        {
            float _2475 = fma(_2131, cbSceneParam._m0[62u].w, fma(_2127, cbSceneParam._m0[62u].z, fma(_2123, cbSceneParam._m0[62u].y, _2119 * cbSceneParam._m0[62u].x))) / _2335;
            float _2479 = isnan(cbSceneParam._m0[41u].w) ? _2475 : (isnan(_2475) ? cbSceneParam._m0[41u].w : max(_2475, cbSceneParam._m0[41u].w));
            float _2522 = (cbSceneParam._m0[33u].x - sqrt(((_2133 * _2133) + (_2132 * _2132)) + (_2134 * _2134))) * cbSceneParam._m0[33u].y;
            float _4655 = isnan(0.0) ? _2522 : (isnan(_2522) ? 0.0 : max(_2522, 0.0));
            float _2529 = (isnan(1.0) ? _4655 : (isnan(_4655) ? 1.0 : min(_4655, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2336, cbSceneParam._m0[33u].w + _2337), _2479), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2336, _2337 - cbSceneParam._m0[33u].z), _2479), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2336 - cbSceneParam._m0[33u].z, _2337 - cbSceneParam._m0[33u].w), _2479), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2336 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2337), _2479), 0.0)).x), vec4(0.25)));
            float _2533 = 1.0 - (_2529 * cbSceneParam._m0[34u].x);
            float _2534 = 1.0 - (_2529 * cbSceneParam._m0[34u].y);
            float _2535 = 1.0 - (_2529 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2535) ? _2283 : (isnan(_2283) ? _2535 : min(_2283, _2535));
            frontier_phi_34_33_ladder_1 = isnan(_2534) ? _2282 : (isnan(_2282) ? _2534 : min(_2282, _2534));
            frontier_phi_34_33_ladder_2 = isnan(_2533) ? _2281 : (isnan(_2281) ? _2533 : min(_2281, _2533));
        }
        else
        {
            frontier_phi_34_33_ladder = _2283;
            frontier_phi_34_33_ladder_1 = _2282;
            frontier_phi_34_33_ladder_2 = _2281;
        }
        _2347 = frontier_phi_34_33_ladder_2;
        _2349 = frontier_phi_34_33_ladder_1;
        _2351 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2347 = _2281;
        _2349 = _2282;
        _2351 = _2283;
    }
    uvec4 _2356 = floatBitsToUint(cbInstanceData._m0[_1017 + 5u]);
    uint _2358 = _2356.x * 14u;
    uint _2359 = _2358 + 13u;
    float _2366 = _1057 + (-1.0);
    float _2371 = (cbLight._m0[_2359].x * _2366) + 1.0;
    float _2372 = (cbLight._m0[_2359].y * _2366) + 1.0;
    float _2373 = (cbLight._m0[_2359].z * _2366) + 1.0;
    float _2374 = (cbLight._m0[_2359].w * _2366) + 1.0;
    uint _2375 = _2358 + 5u;
    float _2381 = isnan(1.0) ? _2372 : (isnan(_2372) ? 1.0 : min(_2372, 1.0));
    uint _2385 = _2358 + 4u;
    float _2394 = isnan(1.0) ? _2371 : (isnan(_2371) ? 1.0 : min(_2371, 1.0));
    uint _2398 = _2358 | 1u;
    float _2409 = dot(vec3(cbLight._m0[_2358].xyz), vec3(_891, _892, _893));
    float _2412 = dot(vec3(cbLight._m0[_2398].xyz), vec3(_891, _892, _893));
    float _4691 = isnan(0.0) ? _2409 : (isnan(_2409) ? 0.0 : max(_2409, 0.0));
    float _4702 = isnan(0.0) ? _2412 : (isnan(_2412) ? 0.0 : max(_2412, 0.0));
    float _2417 = (isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0))) * 0.3183098733425140380859375;
    float _2419 = (isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0))) * 0.3183098733425140380859375;
    float _2426 = ((cbLight._m0[_2375].x * _2381) * _2419) + (((cbLight._m0[_2385].x * _2347) * _2394) * _2417);
    float _2427 = ((_2381 * cbLight._m0[_2375].y) * _2419) + (((cbLight._m0[_2385].y * _2349) * _2394) * _2417);
    float _2428 = ((_2381 * cbLight._m0[_2375].z) * _2419) + (((cbLight._m0[_2385].z * _2351) * _2394) * _2417);
    uvec4 _2432 = floatBitsToUint(cbLight._m0[_2358 + 12u]);
    bool _2434 = _2432.x == 0u;
    float _2536;
    float _2538;
    float _2540;
    if (_2434)
    {
        _2536 = _2426;
        _2538 = _2427;
        _2540 = _2428;
    }
    else
    {
        uint _2544 = _2358 + 6u;
        float _2560 = (dot(vec3(cbLight._m0[_2358 + 2u].xyz), vec3(_891, _892, _893)) * 0.5) + 0.5;
        float _2561 = _2560 * _2560;
        float _4713 = isnan(0.0) ? _2561 : (isnan(_2561) ? 0.0 : max(_2561, 0.0));
        float _2562 = isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0));
        float _2563 = isnan(1.0) ? _2373 : (isnan(_2373) ? 1.0 : min(_2373, 1.0));
        _2536 = (((cbLight._m0[_2544].x * 0.3183098733425140380859375) * _2562) * _2563) + _2426;
        _2538 = (((cbLight._m0[_2544].y * 0.3183098733425140380859375) * _2562) * _2563) + _2427;
        _2540 = (((cbLight._m0[_2544].z * 0.3183098733425140380859375) * _2562) * _2563) + _2428;
    }
    bool _2543 = _2432.y == 0u;
    float _2598;
    float _2600;
    float _2602;
    if (_2543)
    {
        _2598 = _2536;
        _2600 = _2538;
        _2602 = _2540;
    }
    else
    {
        uint _2771 = _2358 + 7u;
        float _2787 = (dot(vec3(cbLight._m0[_2358 + 3u].xyz), vec3(_891, _892, _893)) * 0.5) + 0.5;
        float _2788 = _2787 * _2787;
        float _4729 = isnan(0.0) ? _2788 : (isnan(_2788) ? 0.0 : max(_2788, 0.0));
        float _2789 = isnan(1.0) ? _4729 : (isnan(_4729) ? 1.0 : min(_4729, 1.0));
        float _2790 = isnan(1.0) ? _2374 : (isnan(_2374) ? 1.0 : min(_2374, 1.0));
        _2598 = (((cbLight._m0[_2771].x * 0.3183098733425140380859375) * _2789) * _2790) + _2536;
        _2600 = (((cbLight._m0[_2771].y * 0.3183098733425140380859375) * _2789) * _2790) + _2538;
        _2602 = (((cbLight._m0[_2771].z * 0.3183098733425140380859375) * _2789) * _2790) + _2540;
    }
    uint _2605 = _2358 + 8u;
    float _2618 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2358].w)) * _894) * 0.949999988079071044921875);
    float _2619 = _2618 * _2618;
    float _2620 = cbLight._m0[_2358].x + _971;
    float _2621 = cbLight._m0[_2358].y + _972;
    float _2622 = cbLight._m0[_2358].z + _973;
    float _2626 = inversesqrt(dot(vec3(_2620, _2621, _2622), vec3(_2620, _2621, _2622)));
    float _2627 = _2626 * _2620;
    float _2628 = _2626 * _2621;
    float _2629 = _2626 * _2622;
    float _2630 = dot(vec3(_891, _892, _893), vec3(cbLight._m0[_2358].xyz));
    float _4745 = isnan(0.0) ? _2630 : (isnan(_2630) ? 0.0 : max(_2630, 0.0));
    float _2633 = isnan(1.0) ? _4745 : (isnan(_4745) ? 1.0 : min(_4745, 1.0));
    float _4756 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
    float _2634 = isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0));
    float _2635 = dot(vec3(_891, _892, _893), vec3(_2627, _2628, _2629));
    float _4767 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
    float _2638 = isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0));
    float _2639 = dot(vec3(cbLight._m0[_2358].xyz), vec3(_2627, _2628, _2629));
    float _4778 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
    float _2643 = _2619 * _2619;
    float _2647 = ((_2638 * _2638) * (_2643 + (-1.0))) + 1.0;
    float _2655 = exp2(log2(1.0 - (isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0)))) * 5.0);
    float _2656 = 0.959999978542327880859375 - _1039;
    float _2658 = 0.959999978542327880859375 - _1040;
    float _2659 = 0.959999978542327880859375 - _1041;
    float _2666 = 1.0 - _2619;
    float _2677 = (0.5 / (((_2634 * ((_2633 * _2666) + _2619)) + 9.9999999392252902907785028219223e-09) + (((_2634 * _2666) + _2619) * _2633))) * _2633;
    float _4789 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
    float _2679 = (isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0))) * (_2643 / ((_2647 * _2647) * 3.141590118408203125));
    uint _2693 = _2358 + 9u;
    float _2704 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2398].w)) * _894) * 0.949999988079071044921875);
    float _2705 = _2704 * _2704;
    float _2706 = cbLight._m0[_2398].x + _971;
    float _2707 = cbLight._m0[_2398].y + _972;
    float _2708 = cbLight._m0[_2398].z + _973;
    float _2712 = inversesqrt(dot(vec3(_2706, _2707, _2708), vec3(_2706, _2707, _2708)));
    float _2713 = _2712 * _2706;
    float _2714 = _2712 * _2707;
    float _2715 = _2712 * _2708;
    float _2716 = dot(vec3(_891, _892, _893), vec3(cbLight._m0[_2398].xyz));
    float _4800 = isnan(0.0) ? _2716 : (isnan(_2716) ? 0.0 : max(_2716, 0.0));
    float _2719 = isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0));
    float _2720 = dot(vec3(_891, _892, _893), vec3(_2713, _2714, _2715));
    float _4811 = isnan(0.0) ? _2720 : (isnan(_2720) ? 0.0 : max(_2720, 0.0));
    float _2723 = isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0));
    float _2724 = dot(vec3(cbLight._m0[_2398].xyz), vec3(_2713, _2714, _2715));
    float _4822 = isnan(0.0) ? _2724 : (isnan(_2724) ? 0.0 : max(_2724, 0.0));
    float _2728 = _2705 * _2705;
    float _2732 = ((_2723 * _2723) * (_2728 + (-1.0))) + 1.0;
    float _2739 = exp2(log2(1.0 - (isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0)))) * 5.0);
    float _2746 = 1.0 - _2705;
    float _2756 = (0.5 / (((_2634 * ((_2719 * _2746) + _2705)) + 9.9999999392252902907785028219223e-09) + (((_2634 * _2746) + _2705) * _2719))) * _2719;
    float _4833 = isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0));
    float _2758 = (isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0))) * (_2728 / ((_2732 * _2732) * 3.141590118408203125));
    float _2768 = (((((_2739 * _2656) + _1042) * cbLight._m0[_2693].x) * _2758) * _2381) + ((((cbLight._m0[_2605].x * _2347) * ((_2655 * _2656) + _1042)) * _2679) * _2394);
    float _2769 = (((((_2739 * _2658) + _1044) * cbLight._m0[_2693].y) * _2758) * _2381) + ((((cbLight._m0[_2605].y * _2349) * ((_2655 * _2658) + _1044)) * _2679) * _2394);
    float _2770 = (((((_2739 * _2659) + _1045) * cbLight._m0[_2693].z) * _2758) * _2381) + ((((cbLight._m0[_2605].z * _2351) * ((_2655 * _2659) + _1045)) * _2679) * _2394);
    float _2826;
    float _2828;
    float _2830;
    if (_2434)
    {
        _2826 = _2768;
        _2828 = _2769;
        _2830 = _2770;
    }
    else
    {
        uint _2832 = _2358 + 2u;
        uint _2836 = _2358 + 10u;
        float _2850 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2832].w)) * _894) * 0.949999988079071044921875);
        float _2851 = _2850 * _2850;
        float _2852 = cbLight._m0[_2832].x + _971;
        float _2853 = cbLight._m0[_2832].y + _972;
        float _2854 = cbLight._m0[_2832].z + _973;
        float _2858 = inversesqrt(dot(vec3(_2852, _2853, _2854), vec3(_2852, _2853, _2854)));
        float _2859 = _2858 * _2852;
        float _2860 = _2858 * _2853;
        float _2861 = _2858 * _2854;
        float _2862 = dot(vec3(_891, _892, _893), vec3(cbLight._m0[_2832].xyz));
        float _4844 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0));
        float _2865 = isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0));
        float _2866 = dot(vec3(_891, _892, _893), vec3(_2859, _2860, _2861));
        float _4855 = isnan(0.0) ? _2866 : (isnan(_2866) ? 0.0 : max(_2866, 0.0));
        float _2869 = isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0));
        float _2870 = dot(vec3(cbLight._m0[_2832].xyz), vec3(_2859, _2860, _2861));
        float _4866 = isnan(0.0) ? _2870 : (isnan(_2870) ? 0.0 : max(_2870, 0.0));
        float _2874 = _2851 * _2851;
        float _2878 = ((_2869 * _2869) * (_2874 + (-1.0))) + 1.0;
        float _2885 = exp2(log2(1.0 - (isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0)))) * 5.0);
        float _2892 = 1.0 - _2851;
        float _2902 = (0.5 / (((_2634 * ((_2865 * _2892) + _2851)) + 9.9999999392252902907785028219223e-09) + (((_2634 * _2892) + _2851) * _2865))) * _2865;
        float _4877 = isnan(0.0) ? _2902 : (isnan(_2902) ? 0.0 : max(_2902, 0.0));
        float _2904 = (isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0))) * (_2874 / ((_2878 * _2878) * 3.141590118408203125));
        float _2905 = isnan(1.0) ? _2373 : (isnan(_2373) ? 1.0 : min(_2373, 1.0));
        _2826 = (((((_2885 * _2656) + _1042) * cbLight._m0[_2836].x) * _2904) * _2905) + _2768;
        _2828 = (((((_2885 * _2658) + _1044) * cbLight._m0[_2836].y) * _2904) * _2905) + _2769;
        _2830 = (((((_2885 * _2659) + _1045) * cbLight._m0[_2836].z) * _2904) * _2905) + _2770;
    }
    float _2936;
    float _2938;
    float _2940;
    if (_2543)
    {
        _2936 = _2826;
        _2938 = _2828;
        _2940 = _2830;
    }
    else
    {
        uint _2947 = _2358 + 3u;
        uint _2951 = _2358 + 11u;
        float _2965 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2947].w)) * _894) * 0.949999988079071044921875);
        float _2966 = _2965 * _2965;
        float _2967 = cbLight._m0[_2947].x + _971;
        float _2968 = cbLight._m0[_2947].y + _972;
        float _2969 = cbLight._m0[_2947].z + _973;
        float _2973 = inversesqrt(dot(vec3(_2967, _2968, _2969), vec3(_2967, _2968, _2969)));
        float _2974 = _2973 * _2967;
        float _2975 = _2973 * _2968;
        float _2976 = _2973 * _2969;
        float _2977 = dot(vec3(_891, _892, _893), vec3(cbLight._m0[_2947].xyz));
        float _4893 = isnan(0.0) ? _2977 : (isnan(_2977) ? 0.0 : max(_2977, 0.0));
        float _2980 = isnan(1.0) ? _4893 : (isnan(_4893) ? 1.0 : min(_4893, 1.0));
        float _2981 = dot(vec3(_891, _892, _893), vec3(_2974, _2975, _2976));
        float _4904 = isnan(0.0) ? _2981 : (isnan(_2981) ? 0.0 : max(_2981, 0.0));
        float _2984 = isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0));
        float _2985 = dot(vec3(cbLight._m0[_2947].xyz), vec3(_2974, _2975, _2976));
        float _4915 = isnan(0.0) ? _2985 : (isnan(_2985) ? 0.0 : max(_2985, 0.0));
        float _2989 = _2966 * _2966;
        float _2993 = ((_2984 * _2984) * (_2989 + (-1.0))) + 1.0;
        float _3000 = exp2(log2(1.0 - (isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0)))) * 5.0);
        float _3007 = 1.0 - _2966;
        float _3017 = (0.5 / (((_2634 * ((_2980 * _3007) + _2966)) + 9.9999999392252902907785028219223e-09) + (((_2634 * _3007) + _2966) * _2980))) * _2980;
        float _4926 = isnan(0.0) ? _3017 : (isnan(_3017) ? 0.0 : max(_3017, 0.0));
        float _3019 = (isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0))) * (_2989 / ((_2993 * _2993) * 3.141590118408203125));
        float _3020 = isnan(1.0) ? _2374 : (isnan(_2374) ? 1.0 : min(_2374, 1.0));
        _2936 = (((((_3000 * _2656) + _1042) * cbLight._m0[_2951].x) * _3019) * _3020) + _2826;
        _2938 = (((((_3000 * _2658) + _1044) * cbLight._m0[_2951].y) * _3019) * _3020) + _2828;
        _2940 = (((((_3000 * _2659) + _1045) * cbLight._m0[_2951].z) * _3019) * _3020) + _2830;
    }
    float _3086;
    float _3088;
    float _3090;
    float _3092;
    float _3094;
    float _3096;
    if (_2356.y == 0u)
    {
        uvec4 _3041 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3042 = _3041.x;
        uint _3053 = uint((float(_3041.y) * floor(float(uint(cbSceneParam._m0[85u].y * _980) / _3042))) + floor(float(uint(cbSceneParam._m0[85u].x * _979) / _3042)));
        float _3063 = (log2(_2134 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3064 = isnan(0.0) ? _3063 : (isnan(_3063) ? 0.0 : max(_3063, 0.0));
        uint _3067 = uint(isnan(14.0) ? _3064 : (isnan(_3064) ? 14.0 : min(_3064, 14.0)));
        uvec4 _3072 = texelFetch(g_lightClusterGridBuffer, int(((_3067 << 2u) + (_3053 << 6u)) >> 2u));
        uint _3073 = _3072.x;
        uint _3074 = _3041.z;
        float _3198;
        float _3200;
        float _3202;
        float _3204;
        float _3206;
        float _3208;
        if (((((1u << ((_3074 >> 4u) & 15u)) + 4294967295u) & _3073) == 0u) || ((_3074 & 240u) == 0u))
        {
            _3198 = 0.0;
            _3200 = 0.0;
            _3202 = 0.0;
            _3204 = 0.0;
            _3206 = 0.0;
            _3208 = 0.0;
        }
        else
        {
            float _3199;
            float _3201;
            float _3203;
            float _3205;
            float _3207;
            float _3209;
            float _3351 = 0.0;
            float _3352 = 0.0;
            float _3353 = 0.0;
            float _3354 = 0.0;
            float _3355 = 0.0;
            float _3356 = 0.0;
            uint _3357 = 0u;
            uint _3366;
            bool _3367;
            for (;;)
            {
                _3366 = texelFetch(g_lightClassification, int((((_3067 << 5u) + (_3053 << 9u)) + (_3357 << 2u)) >> 2u)).x;
                _3367 = _3366 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3367)
                {
                    frontier_phi_66_pred = _3356;
                    frontier_phi_66_pred_1 = _3355;
                    frontier_phi_66_pred_2 = _3354;
                    frontier_phi_66_pred_3 = _3353;
                    frontier_phi_66_pred_4 = _3352;
                    frontier_phi_66_pred_5 = _3351;
                }
                else
                {
                    float _3475;
                    float _3476;
                    float _3477;
                    float _3478;
                    float _3479;
                    float _3480;
                    uint _3481;
                    _3475 = _3351;
                    _3476 = _3352;
                    _3477 = _3353;
                    _3478 = _3354;
                    _3479 = _3355;
                    _3480 = _3356;
                    _3481 = _3366;
                    float _3407;
                    float _3408;
                    float _3409;
                    float _3410;
                    float _3411;
                    float _3412;
                    for (;;)
                    {
                        uint _3485 = uint(findLSB(_3481)) + (_3357 << 5u);
                        uint _3482 = (_3481 + 4294967295u) & _3481;
                        uint _3487 = _3485 * 48u;
                        vec4 _3501 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3487)).x, texelFetch(g_PointLightRenderingBuffer, int(_3487 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3487 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3487 + 3u)).x));
                        uint _3507 = (_3485 * 48u) + 4u;
                        vec4 _3520 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3507)).x, texelFetch(g_PointLightRenderingBuffer, int(_3507 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3507 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3507 + 3u)).x));
                        uint _3526 = (_3485 * 48u) + 8u;
                        vec3 _3537 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3526)).x, texelFetch(g_PointLightRenderingBuffer, int(_3526 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3526 + 2u)).x));
                        float _3541 = _3501.x - _2132;
                        float _3542 = _3501.y - _2133;
                        float _3543 = _3501.z - _2134;
                        float _3544 = dot(vec3(_3541, _3542, _3543), vec3(_3541, _3542, _3543));
                        float _3547 = inversesqrt(_3544);
                        float _3548 = _3547 * _3541;
                        float _3549 = _3547 * _3542;
                        float _3550 = _3547 * _3543;
                        float _3551 = dot(vec3(_998, _1001, _1004), vec3(_3548, _3549, _3550));
                        float _3556 = 1.0 - (_3544 * _3501.w);
                        float _4952 = isnan(0.0) ? _3556 : (isnan(_3556) ? 0.0 : max(_3556, 0.0));
                        float _3557 = isnan(1.0) ? _4952 : (isnan(_4952) ? 1.0 : min(_4952, 1.0));
                        float _3558 = sqrt(_3544) * _3520.w;
                        float _3561 = 1.39999997615814208984375 / (_3558 + 1.39999997615814208984375);
                        float _3562 = _3561 * _3561;
                        float _3565 = ((1.0 - _3562) * _3551) + _3562;
                        float _3568 = _3558 * _3558;
                        float _3572 = ((isnan(0.0) ? _3565 : (isnan(_3565) ? 0.0 : max(_3565, 0.0))) * _3557) / ((_3568 * 0.699999988079071044921875) + 1.0);
                        float _3576 = (-0.0) - _2132;
                        float _3577 = (-0.0) - _2133;
                        float _3578 = (-0.0) - _2134;
                        float _3582 = inversesqrt(dot(vec3(_3576, _3577, _3578), vec3(_3576, _3577, _3578)));
                        float _3583 = _3582 * _3576;
                        float _3584 = _3582 * _3577;
                        float _3585 = _3582 * _3578;
                        float _3592 = exp2(log2(1.0 / ((_3568 * 3.5) + 5.0)) * 0.25);
                        float _3593 = 1.0 - _1073;
                        float _3600 = sqrt(1.0 - ((1.0 - (_3593 * _3593)) * (1.0 - (_3592 * _3592))));
                        float _3601 = _3600 * _3600;
                        float _3602 = _3601 * _3601;
                        float _3603 = _3583 + _3548;
                        float _3604 = _3584 + _3549;
                        float _3605 = _3585 + _3550;
                        float _3609 = inversesqrt(dot(vec3(_3603, _3604, _3605), vec3(_3603, _3604, _3605)));
                        float _3613 = dot(vec3(_998, _1001, _1004), vec3(_3583, _3584, _3585));
                        float _4968 = isnan(0.0) ? _3613 : (isnan(_3613) ? 0.0 : max(_3613, 0.0));
                        float _3616 = isnan(1.0) ? _4968 : (isnan(_4968) ? 1.0 : min(_4968, 1.0));
                        float _3617 = dot(vec3(_998, _1001, _1004), vec3(_3609 * _3603, _3609 * _3604, _3609 * _3605));
                        float _4979 = isnan(0.0) ? _3617 : (isnan(_3617) ? 0.0 : max(_3617, 0.0));
                        float _3620 = isnan(1.0) ? _4979 : (isnan(_4979) ? 1.0 : min(_4979, 1.0));
                        float _3624 = ((_3620 * _3620) * (_3602 + (-1.0))) + 1.0;
                        float _3625 = _3561 * _3601;
                        float _3626 = _3625 * _3625;
                        float _3629 = ((1.0 - _3626) * _3551) + _3626;
                        float _4990 = isnan(0.0) ? _3629 : (isnan(_3629) ? 0.0 : max(_3629, 0.0));
                        float _3630 = isnan(1.0) ? _4990 : (isnan(_4990) ? 1.0 : min(_4990, 1.0));
                        float _3631 = 1.0 - _3601;
                        float _3641 = (0.5 / (((_3630 * ((_3616 * _3631) + _3601)) + 9.9999999392252902907785028219223e-09) + (((_3630 * _3631) + _3601) * _3616))) * _3630;
                        float _5001 = isnan(0.0) ? _3641 : (isnan(_3641) ? 0.0 : max(_3641, 0.0));
                        float _3652 = (((_3602 * 3.1415927410125732421875) * (isnan(1.0) ? _5001 : (isnan(_5001) ? 1.0 : min(_5001, 1.0)))) / ((_3624 * _3624) * ((_3568 * 2.1991131305694580078125) + 3.141590118408203125))) * _3557;
                        _3410 = (_3572 * _3520.x) + _3478;
                        _3411 = (_3572 * _3520.y) + _3479;
                        _3412 = (_3572 * _3520.z) + _3480;
                        _3407 = (_3652 * _3537.x) + _3475;
                        _3408 = (_3652 * _3537.y) + _3476;
                        _3409 = (_3652 * _3537.z) + _3477;
                        if (_3482 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3475 = _3407;
                            _3476 = _3408;
                            _3477 = _3409;
                            _3478 = _3410;
                            _3479 = _3411;
                            _3480 = _3412;
                            _3481 = _3482;
                        }
                    }
                    frontier_phi_66_pred = _3412;
                    frontier_phi_66_pred_1 = _3411;
                    frontier_phi_66_pred_2 = _3410;
                    frontier_phi_66_pred_3 = _3409;
                    frontier_phi_66_pred_4 = _3408;
                    frontier_phi_66_pred_5 = _3407;
                }
                _3209 = frontier_phi_66_pred;
                _3207 = frontier_phi_66_pred_1;
                _3205 = frontier_phi_66_pred_2;
                _3203 = frontier_phi_66_pred_3;
                _3201 = frontier_phi_66_pred_4;
                _3199 = frontier_phi_66_pred_5;
                uint _3358 = _3357 + 1u;
                if (_3358 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3351 = _3199;
                    _3352 = _3201;
                    _3353 = _3203;
                    _3354 = _3205;
                    _3355 = _3207;
                    _3356 = _3209;
                    _3357 = _3358;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3198 = _3199;
            _3200 = _3201;
            _3202 = _3203;
            _3204 = _3205;
            _3206 = _3207;
            _3208 = _3209;
        }
        uvec4 _3212 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3213 = _3212.z;
        uint _3215 = (_3213 >> 8u) & 15u;
        float _3319;
        float _3321;
        float _3323;
        float _3325;
        float _3327;
        float _3329;
        if (((4294967295u << _3215) & _3073) == 0u)
        {
            _3319 = _3198;
            _3321 = _3200;
            _3323 = _3202;
            _3325 = _3204;
            _3327 = _3206;
            _3329 = _3208;
        }
        else
        {
            float _3344 = inversesqrt(dot(vec3(_2132, _2133, _2134), vec3(_2132, _2133, _2134)));
            float _3345 = _3344 * _2132;
            float _3346 = _3344 * _2133;
            float _3347 = _3344 * _2134;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3215 < ((_3213 >> 12u) & 15u))
            {
                float _3320;
                float _3322;
                float _3324;
                float _3326;
                float _3328;
                float _3330;
                float _3458 = _3198;
                float _3459 = _3200;
                float _3460 = _3202;
                float _3461 = _3204;
                float _3462 = _3206;
                float _3463 = _3208;
                uint _3464 = _3215;
                uint _3473;
                bool _3474;
                for (;;)
                {
                    _3473 = texelFetch(g_lightClassification, int((((_3067 << 5u) + (_3053 << 9u)) + (_3464 << 2u)) >> 2u)).x;
                    _3474 = _3473 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3474)
                    {
                        frontier_phi_72_pred = _3463;
                        frontier_phi_72_pred_1 = _3462;
                        frontier_phi_72_pred_2 = _3461;
                        frontier_phi_72_pred_3 = _3460;
                        frontier_phi_72_pred_4 = _3459;
                        frontier_phi_72_pred_5 = _3458;
                    }
                    else
                    {
                        float _3657;
                        float _3658;
                        float _3659;
                        float _3660;
                        float _3661;
                        float _3662;
                        float _3951;
                        float _3952;
                        float _3953;
                        float _3954;
                        float _3955;
                        float _3956;
                        float _3670 = _3458;
                        float _3671 = _3459;
                        float _3672 = _3460;
                        float _3673 = _3461;
                        float _3674 = _3462;
                        float _3675 = _3463;
                        uint _3676 = _3473;
                        uint _3677;
                        vec4 _3702;
                        float _3703;
                        vec4 _3718;
                        vec3 _3730;
                        vec4 _3745;
                        vec4 _3760;
                        float _3807;
                        bool _3808;
                        for (;;)
                        {
                            uint _3687 = ((_3464 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3676));
                            _3677 = (_3676 + 4294967295u) & _3676;
                            uint _3689 = _3687 * 40u;
                            _3702 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3689)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 3u)).x));
                            _3703 = _3702.w;
                            uint _3705 = (_3687 * 40u) + 4u;
                            _3718 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3705)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3705 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3705 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3705 + 3u)).x));
                            uint _3720 = (_3687 * 40u) + 8u;
                            _3730 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3720)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3720 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3720 + 2u)).x));
                            uint _3732 = (_3687 * 40u) + 16u;
                            _3745 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3732)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3732 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3732 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3732 + 3u)).x));
                            uint _3747 = (_3687 * 40u) + 20u;
                            _3760 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3747)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3747 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3747 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3747 + 3u)).x));
                            uint _3763 = (_3687 * 40u) + 24u;
                            vec4 _3776 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3763)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3763 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3763 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3763 + 3u)).x));
                            uint _3782 = (_3687 * 40u) + 28u;
                            vec4 _3795 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3782)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3782 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3782 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3782 + 3u)).x));
                            _3807 = fma(_2134, _3795.z, fma(_2133, _3795.y, _3795.x * _2132)) + _3795.w;
                            _3808 = !((fma(_2134, _3776.z, fma(_2133, _3776.y, _3776.x * _2132)) + _3776.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3808)
                            {
                                float _3835 = _3702.x - _2132;
                                float _3836 = _3702.y - _2133;
                                float _3837 = _3702.z - _2134;
                                float _3838 = dot(vec3(_3835, _3836, _3837), vec3(_3835, _3836, _3837));
                                float _3841 = inversesqrt(_3838);
                                float _3842 = _3841 * _3835;
                                float _3843 = _3841 * _3836;
                                float _3844 = _3841 * _3837;
                                float _3848 = 1.0 - (_3838 / (_3703 * _3703));
                                float _5012 = isnan(0.0) ? _3848 : (isnan(_3848) ? 0.0 : max(_3848, 0.0));
                                float _3849 = isnan(1.0) ? _5012 : (isnan(_5012) ? 1.0 : min(_5012, 1.0));
                                float _3853 = sqrt(_3838) * _3718.w;
                                float _3855 = 1.39999997615814208984375 / (_3853 + 1.39999997615814208984375);
                                float _3856 = _3855 * _3855;
                                float _3859 = ((1.0 - _3856) * dot(vec3(_3842, _3843, _3844), vec3(_998, _1001, _1004))) + _3856;
                                float _3862 = _3853 * _3853;
                                float _3866 = (fma(_2134, _3745.z, fma(_2133, _3745.y, _3745.x * _2132)) + _3745.w) / _3807;
                                float _3867 = (fma(_2134, _3760.z, fma(_2133, _3760.y, _3760.x * _2132)) + _3760.w) / _3807;
                                float _3871 = 1.0 - dot(vec2(_3866, _3867), vec2(_3866, _3867));
                                float _5028 = isnan(0.0) ? _3871 : (isnan(_3871) ? 0.0 : max(_3871, 0.0));
                                float _3872 = isnan(1.0) ? _5028 : (isnan(_5028) ? 1.0 : min(_5028, 1.0));
                                float _3873 = _3872 * (((isnan(0.0) ? _3859 : (isnan(_3859) ? 0.0 : max(_3859, 0.0))) * _3849) / ((_3862 * 0.699999988079071044921875) + 1.0));
                                float _3885 = exp2(log2(1.0 / ((_3862 * 3.5) + 5.0)) * 0.25);
                                float _3886 = 1.0 - _1073;
                                float _3893 = sqrt(1.0 - ((1.0 - (_3886 * _3886)) * (1.0 - (_3885 * _3885))));
                                float _3894 = _3893 * _3893;
                                float _3895 = _3894 * _3894;
                                float _3896 = _3842 - _3345;
                                float _3897 = _3843 - _3346;
                                float _3898 = _3844 - _3347;
                                float _3902 = inversesqrt(dot(vec3(_3896, _3897, _3898), vec3(_3896, _3897, _3898)));
                                float _3906 = dot(vec3(_998, _1001, _1004), vec3((-0.0) - _3345, (-0.0) - _3346, (-0.0) - _3347));
                                float _5039 = isnan(0.0) ? _3906 : (isnan(_3906) ? 0.0 : max(_3906, 0.0));
                                float _3909 = isnan(1.0) ? _5039 : (isnan(_5039) ? 1.0 : min(_5039, 1.0));
                                float _3910 = dot(vec3(_998, _1001, _1004), vec3(_3902 * _3896, _3902 * _3897, _3902 * _3898));
                                float _5050 = isnan(0.0) ? _3910 : (isnan(_3910) ? 0.0 : max(_3910, 0.0));
                                float _3913 = isnan(1.0) ? _5050 : (isnan(_5050) ? 1.0 : min(_5050, 1.0));
                                float _3917 = ((_3913 * _3913) * (_3895 + (-1.0))) + 1.0;
                                float _3918 = _3855 * _3894;
                                float _3919 = _3918 * _3918;
                                float _3925 = ((1.0 - _3919) * dot(vec3(_998, _1001, _1004), vec3(_3842, _3843, _3844))) + _3919;
                                float _5061 = isnan(0.0) ? _3925 : (isnan(_3925) ? 0.0 : max(_3925, 0.0));
                                float _3926 = isnan(1.0) ? _5061 : (isnan(_5061) ? 1.0 : min(_5061, 1.0));
                                float _3927 = 1.0 - _3894;
                                float _3937 = (0.5 / (((_3926 * ((_3909 * _3927) + _3894)) + 9.9999999392252902907785028219223e-09) + (((_3926 * _3927) + _3894) * _3909))) * _3926;
                                float _5072 = isnan(0.0) ? _3937 : (isnan(_3937) ? 0.0 : max(_3937, 0.0));
                                float _3947 = (_3872 * _3849) * (((_3895 * 3.1415927410125732421875) * (isnan(1.0) ? _5072 : (isnan(_5072) ? 1.0 : min(_5072, 1.0)))) / ((_3917 * _3917) * ((_3862 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3873 * _3718.y;
                                frontier_phi_78_pred_1 = _3873 * _3718.x;
                                frontier_phi_78_pred_2 = _3947 * _3730.z;
                                frontier_phi_78_pred_3 = _3947 * _3730.y;
                                frontier_phi_78_pred_4 = _3947 * _3730.x;
                                frontier_phi_78_pred_5 = _3873 * _3718.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3955 = frontier_phi_78_pred;
                            _3954 = frontier_phi_78_pred_1;
                            _3953 = frontier_phi_78_pred_2;
                            _3952 = frontier_phi_78_pred_3;
                            _3951 = frontier_phi_78_pred_4;
                            _3956 = frontier_phi_78_pred_5;
                            _3660 = _3954 + _3673;
                            _3661 = _3955 + _3674;
                            _3662 = _3956 + _3675;
                            _3657 = _3951 + _3670;
                            _3658 = _3952 + _3671;
                            _3659 = _3953 + _3672;
                            if (_3677 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3670 = _3657;
                                _3671 = _3658;
                                _3672 = _3659;
                                _3673 = _3660;
                                _3674 = _3661;
                                _3675 = _3662;
                                _3676 = _3677;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3662;
                        frontier_phi_72_pred_1 = _3661;
                        frontier_phi_72_pred_2 = _3660;
                        frontier_phi_72_pred_3 = _3659;
                        frontier_phi_72_pred_4 = _3658;
                        frontier_phi_72_pred_5 = _3657;
                    }
                    _3330 = frontier_phi_72_pred;
                    _3328 = frontier_phi_72_pred_1;
                    _3326 = frontier_phi_72_pred_2;
                    _3324 = frontier_phi_72_pred_3;
                    _3322 = frontier_phi_72_pred_4;
                    _3320 = frontier_phi_72_pred_5;
                    uint _3465 = _3464 + 1u;
                    if (_3465 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3458 = _3320;
                        _3459 = _3322;
                        _3460 = _3324;
                        _3461 = _3326;
                        _3462 = _3328;
                        _3463 = _3330;
                        _3464 = _3465;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3330;
                frontier_phi_60_61_ladder_1 = _3328;
                frontier_phi_60_61_ladder_2 = _3324;
                frontier_phi_60_61_ladder_3 = _3322;
                frontier_phi_60_61_ladder_4 = _3320;
                frontier_phi_60_61_ladder_5 = _3326;
            }
            else
            {
                frontier_phi_60_61_ladder = _3208;
                frontier_phi_60_61_ladder_1 = _3206;
                frontier_phi_60_61_ladder_2 = _3202;
                frontier_phi_60_61_ladder_3 = _3200;
                frontier_phi_60_61_ladder_4 = _3198;
                frontier_phi_60_61_ladder_5 = _3204;
            }
            _3319 = frontier_phi_60_61_ladder_4;
            _3321 = frontier_phi_60_61_ladder_3;
            _3323 = frontier_phi_60_61_ladder_2;
            _3325 = frontier_phi_60_61_ladder_5;
            _3327 = frontier_phi_60_61_ladder_1;
            _3329 = frontier_phi_60_61_ladder;
        }
        float _3334 = isnan(1.0) ? _1057 : (isnan(_1057) ? 1.0 : min(_1057, 1.0));
        _3086 = (_3334 * _3325) + _2598;
        _3088 = (_3334 * _3327) + _2600;
        _3090 = (_3334 * _3329) + _2602;
        _3092 = ((_3319 * _1042) * _3334) + _2936;
        _3094 = ((_3321 * _1044) * _3334) + _2938;
        _3096 = ((_3323 * _1045) * _3334) + _2940;
    }
    else
    {
        _3086 = _2598;
        _3088 = _2600;
        _3090 = _2602;
        _3092 = _2936;
        _3094 = _2938;
        _3096 = _2940;
    }
    uint _3102 = _1018 + uint(cbMatDynParam._m0[0u].w);
    float _3108 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _3114 = (((((_3108 * cbMtdParam._m0[14u].x) * _773.x) * _796) * _870) * (((1.0 - _849) * cbMtdParam._m0[20u].w) + _849)) * cbInstanceData._m0[_3102].x;
    float _3120 = (((((_3108 * cbMtdParam._m0[14u].y) * _773.y) * _796) * _870) * (((1.0 - _851) * cbMtdParam._m0[20u].w) + _851)) * cbInstanceData._m0[_3102].y;
    float _3126 = (((((_3108 * cbMtdParam._m0[14u].z) * _773.z) * _796) * _870) * (((1.0 - _853) * cbMtdParam._m0[20u].w) + _853)) * cbInstanceData._m0[_3102].z;
    float _5088 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
    float _5099 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
    float _5110 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
    float _3143 = (((isnan(1.0) ? _5088 : (isnan(_5088) ? 1.0 : min(_5088, 1.0))) * (_3086 + ((isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0))) * _1057))) + ((_3092 + ((isnan(0.0) ? _2079 : (isnan(_2079) ? 0.0 : max(_2079, 0.0))) * _1866)) * cbPerFrame._m0[3u].x)) + _3114;
    float _3145 = (_3120 + ((_3094 + ((isnan(0.0) ? _2082 : (isnan(_2082) ? 0.0 : max(_2082, 0.0))) * _1866)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5099 : (isnan(_5099) ? 1.0 : min(_5099, 1.0))) * (_3088 + ((isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0))) * _1057)));
    float _3147 = (_3126 + ((_3096 + ((isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0))) * _1866)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5110 : (isnan(_5110) ? 1.0 : min(_5110, 1.0))) * (_3090 + ((isnan(0.0) ? _1793 : (isnan(_1793) ? 0.0 : max(_1793, 0.0))) * _1057)));
    float _5136 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3160 = isnan(1.0) ? _5136 : (isnan(_5136) ? 1.0 : min(_5136, 1.0));
    uint _3161 = _1017 + 6u;
    float _3169 = _979 / cbSceneParam._m0[86u].x;
    float _3170 = _980 / cbSceneParam._m0[86u].y;
    vec4 _3184 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3169, _3170, (log2((isnan(cbSceneParam._m0[77u].w) ? _914 : (isnan(_914) ? cbSceneParam._m0[77u].w : min(_914, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3186 = _3184.x;
    float _3187 = _3184.y;
    float _3188 = _3184.z;
    float _3189 = _3184.w;
    float _3260;
    float _3262;
    float _3264;
    float _3266;
    if (_914 > cbSceneParam._m0[78u].w)
    {
        float _3223 = isnan(_914) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _914 : min(cbSceneParam._m0[80u].w, _914));
        float _3224 = _3223 / _914;
        float _3235 = _3224 * _964;
        float _3236 = _965 * _3224;
        float _3237 = (-0.0) - _3236;
        float _3238 = _3224 * _966;
        float _3240 = (cbSceneParam._m0[77u].w * _3237) / _3223;
        float _3241 = _3240 + cbSceneParam._m0[79u].w;
        float _3242 = cbSceneParam._m0[79u].w - _3236;
        float _3248 = sqrt(((_3235 * _3235) + (_3236 * _3236)) + (_3238 * _3238));
        float _3251 = (1.0 - (cbSceneParam._m0[77u].w / _3223)) * _3248;
        float _3256 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3258 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3420;
        if (abs((_3237 - _3240) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3420 = ((((_3241 > 0.0) ? exp2(_3256 * _3241) : (2.0 - exp2(_3258 * _3241))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3251;
        }
        else
        {
            float _3380 = 1.0 / cbSceneParam._m0[80u].x;
            float _3381 = isnan(_3242) ? _3241 : (isnan(_3241) ? _3242 : max(_3241, _3242));
            float _3382 = isnan(_3242) ? _3241 : (isnan(_3241) ? _3242 : min(_3241, _3242));
            float _3391 = isnan(0.0) ? _3381 : (isnan(_3381) ? 0.0 : min(_3381, 0.0));
            float _3392 = isnan(0.0) ? _3382 : (isnan(_3382) ? 0.0 : min(_3382, 0.0));
            _3420 = ((abs(_3248 / _3237) * cbSceneParam._m0[80u].y) * ((((_3391 - _3392) * 2.0) - ((exp2(_3256 * (isnan(0.0) ? _3381 : (isnan(_3381) ? 0.0 : max(_3381, 0.0)))) - exp2(_3256 * (isnan(0.0) ? _3382 : (isnan(_3382) ? 0.0 : max(_3382, 0.0))))) * _3380)) - ((exp2(_3258 * _3391) - exp2(_3258 * _3392)) * _3380))) + (_3251 * cbSceneParam._m0[80u].z);
        }
        vec4 _3422 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3169, _3170, 1.0), 0.0);
        float _3431 = exp2((_3420 * (-1.44269502162933349609375)) * (1.0 - _3422.w));
        float _3432 = log2(_3431);
        float _3448 = log2(_3189);
        _3260 = (exp2(_3448 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3432 * cbSceneParam._m0[78u].x)) * _3422.x) / cbSceneParam._m0[78u].x)) + _3186;
        _3262 = (exp2(_3448 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3432 * cbSceneParam._m0[78u].y)) * _3422.y) / cbSceneParam._m0[78u].y)) + _3187;
        _3264 = (exp2(_3448 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3432 * cbSceneParam._m0[78u].z)) * _3422.z) / cbSceneParam._m0[78u].z)) + _3188;
        _3266 = _3431 * _3189;
    }
    else
    {
        _3260 = _3186;
        _3262 = _3187;
        _3264 = _3188;
        _3266 = _3189;
    }
    float _3278 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3279 = _3278 == 3.0;
    float _3280 = log2(_3266);
    float _3284 = exp2(_3280 * cbSceneParam._m0[78u].x);
    float _3285 = exp2(_3280 * cbSceneParam._m0[78u].y);
    float _3286 = exp2(_3280 * cbSceneParam._m0[78u].z);
    float _3287 = _3284 * (isnan(0.0) ? _3143 : (isnan(_3143) ? 0.0 : max(_3143, 0.0)));
    float _3288 = _3285 * (isnan(0.0) ? _3145 : (isnan(_3145) ? 0.0 : max(_3145, 0.0)));
    float _3289 = _3286 * (isnan(0.0) ? _3147 : (isnan(_3147) ? 0.0 : max(_3147, 0.0)));
    float _3298 = (_3278 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3298 * (_3279 ? _3287 : (_3287 + (cbSceneParam._m0[72u].w * _3260)));
    SV_Target.y = _3298 * (_3279 ? _3288 : (_3288 + (cbSceneParam._m0[72u].w * _3262)));
    SV_Target.z = _3298 * (_3279 ? _3289 : (_3289 + (cbSceneParam._m0[72u].w * _3264)));
    SV_Target.w = cbInstanceData._m0[_3161].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _3114) * _3160) * _3284) * _3298;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3120) * _3160) * _3285) * _3298;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3126) * _3160) * _3286) * _3298;
    SV_Target_1.w = cbInstanceData._m0[_3161].w;
}


