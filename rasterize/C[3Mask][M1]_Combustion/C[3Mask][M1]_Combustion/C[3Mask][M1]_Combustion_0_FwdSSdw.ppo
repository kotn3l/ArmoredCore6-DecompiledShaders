#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_20;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_7;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1455;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _228 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _229 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _230 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _236 = inversesqrt(dot(vec3(_228, _229, _230), vec3(_228, _229, _230)));
    float _243 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _272 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _278 = _272.x * cbMtdParam._m0[10u].x;
    float _279 = _272.y * cbMtdParam._m0[10u].y;
    float _280 = _272.z * cbMtdParam._m0[10u].z;
    vec4 _299 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _318 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _346 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w)).x;
    float _356 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _318.x) * 2.0) - _346)) + 1.0;
    float _3859 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _357 = isnan(1.0) ? _3859 : (isnan(_3859) ? 1.0 : min(_3859, 1.0));
    float _364 = (_357 * ((_299.x * cbMtdParam._m0[11u].x) - _278)) + _278;
    float _365 = (_357 * ((_299.y * cbMtdParam._m0[11u].y) - _279)) + _279;
    float _366 = (_357 * ((_299.z * cbMtdParam._m0[11u].z) - _280)) + _280;
    vec4 _384 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _397 = (((((1.0 - _318.y) * 2.0) - _346) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _3870 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    float _398 = isnan(1.0) ? _3870 : (isnan(_3870) ? 1.0 : min(_3870, 1.0));
    float _405 = (((_384.x * cbMtdParam._m0[12u].x) - _364) * _398) + _364;
    float _406 = (_398 * ((_384.y * cbMtdParam._m0[12u].y) - _365)) + _365;
    float _407 = (_398 * ((_384.z * cbMtdParam._m0[12u].z) - _366)) + _366;
    vec4 _425 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _438 = (((((1.0 - _318.z) * 2.0) - _346) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _3881 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _439 = isnan(1.0) ? _3881 : (isnan(_3881) ? 1.0 : min(_3881, 1.0));
    vec4 _467 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _475 = ((((((_425.x * cbMtdParam._m0[13u].x) - _405) * _439) + _405) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _467.x;
    float _478 = ((((_439 * ((_425.y * cbMtdParam._m0[13u].y) - _406)) + _406) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _467.y;
    float _481 = ((((_439 * ((_425.z * cbMtdParam._m0[13u].z) - _407)) + _407) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _467.z;
    vec4 _506 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    vec4 _525 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.z) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.w) + cbTextureTilingScale._m0[20u].w));
    float _528 = _525.x + 0.00999999977648258209228515625;
    float _535 = (TEXCOORD_8 - ((cbMtdParam._m0[20u].x * (1.0 - TEXCOORD_8)) * _528)) * (cbMtdParam._m0[19u].w + 1.0);
    float _3892 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
    float _536 = isnan(1.0) ? _3892 : (isnan(_3892) ? 1.0 : min(_3892, 1.0));
    float _543 = (_536 * ((_506.x * cbMtdParam._m0[16u].x) - _475)) + _475;
    float _544 = (_536 * ((_506.y * cbMtdParam._m0[16u].y) - _478)) + _478;
    float _545 = (_536 * ((_506.z * cbMtdParam._m0[16u].z) - _481)) + _481;
    vec4 _558 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _560 = _558.x;
    float _577 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _560) * _357) + _560;
    float _594 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _577) * _398) + _577;
    float _611 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x - _594) * _439) + _594;
    float _613 = _611 - (_611 * TEXCOORD_8);
    vec4 _626 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    vec4 _647 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _649 = _647.x;
    float _650 = _647.y;
    float _651 = _647.z;
    vec4 _663 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _674 = ((_663.x - _649) * _357) + _649;
    float _675 = ((_663.y - _650) * _357) + _650;
    float _676 = ((_663.z - _651) * _357) + _651;
    vec4 _689 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _700 = ((_689.x - _674) * _398) + _674;
    float _701 = ((_689.y - _675) * _398) + _675;
    float _702 = ((_689.z - _676) * _398) + _676;
    vec4 _715 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _728 = ((_715.z - _702) * _439) + _702;
    float _731 = ((((_715.x - _700) * _439) + _700) * 2.0) + (-1.0);
    float _732 = ((((_715.y - _701) * _439) + _701) * 2.0) + (-1.0);
    float _733 = dot(vec2(_731, _732), vec2(_731, _732));
    float _3903 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _738 = sqrt(1.0 - (isnan(1.0) ? _3903 : (isnan(_3903) ? 1.0 : min(_3903, 1.0))));
    float _743 = (((_626.z - _728) * TEXCOORD_8) * cbMtdParam._m0[20u].y) + _728;
    vec4 _773 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[15u].x) + cbTextureTilingScale._m0[15u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[15u].y) + cbTextureTilingScale._m0[15u].w));
    float _787 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3914 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    float _788 = isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0));
    float _796 = (((_788 * _788) * (3.0 - (_788 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _804 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _812 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3925 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
    float _813 = isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0));
    float _817 = (_813 * _813) * (3.0 - (_813 * 2.0));
    float _818 = _817 * cbMtdParam._m0[22u].x;
    float _819 = _817 * cbMtdParam._m0[22u].y;
    float _820 = sin(_804);
    float _821 = cos(_804);
    float _822 = TEXCOORD.z - _818;
    float _823 = TEXCOORD.w - _819;
    vec4 _843 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_818 + fma(_823, (-0.0) - _820, _822 * _821))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_823, _821, _822 * _820) + _819)) + cbTextureTilingScale._m0[2u].w));
    float _849 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _843.x;
    float _851 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _843.y;
    float _853 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _843.z;
    float _869 = (TEXCOORD_5.x - ((_528 * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _3936 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    float _870 = isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0));
    vec4 _883 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _899 = (((((_626.x * 2.0) + (-1.0)) * TEXCOORD_8) * cbMtdParam._m0[19u].y) + _731) + (((_883.x * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z);
    float _901 = (((((_626.y * 2.0) + (-1.0)) * TEXCOORD_9) * cbMtdParam._m0[19u].y) + _732) + (((_883.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z);
    float _904 = fma(_738, _243 * NORMAL.x, fma(_901, _250 * TANGENT.x, (_236 * _228) * _899));
    float _907 = fma(_738, _243 * NORMAL.y, fma(_901, _250 * TANGENT.y, (_236 * _229) * _899));
    float _910 = fma(_738, _243 * NORMAL.z, fma(_901, _250 * TANGENT.z, (_236 * _230) * _899));
    float _914 = inversesqrt(dot(vec3(_904, _907, _910), vec3(_904, _907, _910)));
    float _915 = _914 * _904;
    float _916 = _914 * _907;
    float _917 = _914 * _910;
    float _3947 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _918 = isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0));
    float _3958 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _3969 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _3980 = isnan(0.0) ? _545 : (isnan(_545) ? 0.0 : max(_545, 0.0));
    float _3991 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _922 = isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0));
    float _938 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _978 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _988 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _978);
    float _989 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _978);
    float _990 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _978);
    float _994 = inversesqrt(dot(vec3(_988, _989, _990), vec3(_988, _989, _990)));
    float _995 = _988 * _994;
    float _996 = _989 * _994;
    float _997 = _990 * _994;
    float _1003 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1004 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1022 = fma(_917, cbSceneParam._m0[5u].z, fma(_916, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _915));
    float _1025 = fma(_917, cbSceneParam._m0[6u].z, fma(_916, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _915));
    float _1028 = fma(_917, cbSceneParam._m0[7u].z, fma(_916, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _915));
    uint _1041 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1042 = _1041 + 9u;
    uint _1043 = _1042 + uint(cbMatDynParam._m0[0u].w);
    float _1049 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0)))) * cbInstanceData._m0[_1043].x;
    float _1050 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0)))) * cbInstanceData._m0[_1043].y;
    float _1051 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0)))) * cbInstanceData._m0[_1043].z;
    float _4002 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
    float _1052 = isnan(1.0) ? _4002 : (isnan(_4002) ? 1.0 : min(_4002, 1.0));
    float _4013 = isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0));
    float _1053 = isnan(1.0) ? _4013 : (isnan(_4013) ? 1.0 : min(_4013, 1.0));
    float _4024 = isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0));
    float _1054 = isnan(1.0) ? _4024 : (isnan(_4024) ? 1.0 : min(_4024, 1.0));
    float _1055 = 1.0 - _922;
    float _1056 = _1052 * _1055;
    float _1057 = _1053 * _1055;
    float _1058 = _1054 * _1055;
    float _1063 = (_1052 + (-0.039999999105930328369140625)) * _922;
    float _1064 = (_1053 + (-0.039999999105930328369140625)) * _922;
    float _1065 = (_1054 + (-0.039999999105930328369140625)) * _922;
    float _1066 = _1063 + 0.039999999105930328369140625;
    float _1068 = _1064 + 0.039999999105930328369140625;
    float _1069 = _1065 + 0.039999999105930328369140625;
    vec4 _1078 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1003, cbSceneParam._m0[86u].y * _1004));
    float _1081 = _1078.x * TEXCOORD_5.w;
    float _1082 = dot(vec3(_915, _916, _917), vec3(_995, _996, _997));
    float _1085 = _1082 * 2.0;
    float _1089 = (_1085 * _915) - _995;
    float _1090 = (_1085 * _916) - _996;
    float _1091 = (_1085 * _917) - _997;
    float _1095 = abs(dot(vec3(_995, _996, _997), vec3(_915, _916, _917)));
    float _4035 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
    float _1097 = sqrt(_918);
    float _1109 = exp2((_1097 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1097 * 3.0));
    float _1115 = (1.0 - _1109) * ((_1097 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1116 = _1109 * _1097;
    float _1144 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1148 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1152 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1454;
    float _1456;
    float _1457;
    float _1458;
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1179 = fma(_1152, cbModelParam._m0[26u].z, fma(_1148, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1144));
        float _1183 = fma(_1152, cbModelParam._m0[27u].z, fma(_1148, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1144));
        float _1187 = fma(_1152, cbModelParam._m0[28u].z, fma(_1148, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1144));
        float _1212 = _1144 + _915;
        float _1213 = _1148 + _916;
        float _1214 = _1152 + _917;
        float _1224 = fma(_1214, cbModelParam._m0[26u].z, fma(_1213, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1212)) - _1179;
        float _1225 = fma(_1214, cbModelParam._m0[27u].z, fma(_1213, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1212)) - _1183;
        float _1226 = fma(_1214, cbModelParam._m0[28u].z, fma(_1213, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1212)) - _1187;
        float _1230 = inversesqrt(dot(vec3(_1224, _1225, _1226), vec3(_1224, _1225, _1226)));
        float _1243 = ((_1230 * _1224) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1179 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1244 = ((_1230 * _1225) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1183 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1245 = ((_1230 * _1226) / cbModelParam._m0[34u].z) + ((((((_1187 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1248 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        vec4 _1255 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        vec4 _1262 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        vec4 _1269 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        float _1282 = exp2((_1248.w + (-0.5)) * 20.0) * 2.0;
        float _1283 = _1282 * (_1248.x + (-0.5));
        float _1284 = _1282 * (_1248.y + (-0.5));
        float _1285 = _1282 * (_1248.z + (-0.5));
        float _1292 = exp2((_1255.w + (-0.5)) * 20.0) * 2.0;
        float _1293 = _1292 * (_1255.x + (-0.5));
        float _1294 = _1292 * (_1255.y + (-0.5));
        float _1295 = _1292 * (_1255.z + (-0.5));
        float _1302 = exp2((_1262.w + (-0.5)) * 20.0) * 2.0;
        float _1303 = _1302 * (_1262.x + (-0.5));
        float _1304 = _1302 * (_1262.y + (-0.5));
        float _1305 = _1302 * (_1262.z + (-0.5));
        float _1312 = exp2((_1269.w + (-0.5)) * 20.0) * 2.0;
        float _1313 = _1312 * (_1269.x + (-0.5));
        float _1314 = _1312 * (_1269.y + (-0.5));
        float _1315 = _1312 * (_1269.z + (-0.5));
        float _1316 = isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0));
        float _1317 = isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0));
        float _1318 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1319 = _1283 * 0.5;
        float _1320 = _1293 * 0.5;
        float _1321 = _1303 * 0.5;
        float _1322 = dot(vec3(_1319, _1320, _1321), vec3(_1319, _1320, _1321));
        float _1327 = (_1322 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1322);
        float _1336 = (dot(vec3(_915, _916, _917), vec3(_1327 * _1319, _1327 * _1320, _1327 * _1321)) + 1.0) * 0.5;
        float _4061 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1346 = sqrt(((_1320 * _1320) + (_1319 * _1319)) + (_1321 * _1321)) / (_1316 + 9.9999997473787516355514526367188e-06);
        float _4072 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1347 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
        float _1348 = _1347 * 2.0;
        float _1352 = (1.0 - _1347) / (_1347 + 1.0);
        float _4083 = isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0));
        float _1353 = isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0));
        float _1362 = ((((1.0 - _1353) * (_1348 + 2.0)) * exp2(log2(isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0))) * (_1348 + 1.0))) + _1353) * _1316;
        float _1363 = _1284 * 0.5;
        float _1364 = _1294 * 0.5;
        float _1365 = _1304 * 0.5;
        float _1366 = dot(vec3(_1363, _1364, _1365), vec3(_1363, _1364, _1365));
        float _1371 = (_1366 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1366);
        float _1379 = (dot(vec3(_915, _916, _917), vec3(_1371 * _1363, _1371 * _1364, _1371 * _1365)) + 1.0) * 0.5;
        float _4094 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1388 = sqrt(((_1364 * _1364) + (_1363 * _1363)) + (_1365 * _1365)) / (_1317 + 9.9999997473787516355514526367188e-06);
        float _4105 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1389 = isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0));
        float _1390 = _1389 * 2.0;
        float _1394 = (1.0 - _1389) / (_1389 + 1.0);
        float _4116 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1395 = isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0));
        float _1404 = ((((1.0 - _1395) * (_1390 + 2.0)) * exp2(log2(isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0))) * (_1390 + 1.0))) + _1395) * _1317;
        float _1405 = _1285 * 0.5;
        float _1406 = _1295 * 0.5;
        float _1407 = _1305 * 0.5;
        float _1408 = dot(vec3(_1405, _1406, _1407), vec3(_1405, _1406, _1407));
        float _1413 = (_1408 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1408);
        float _1421 = (dot(vec3(_915, _916, _917), vec3(_1413 * _1405, _1413 * _1406, _1413 * _1407)) + 1.0) * 0.5;
        float _4127 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1430 = sqrt(((_1406 * _1406) + (_1405 * _1405)) + (_1407 * _1407)) / (_1318 + 9.9999997473787516355514526367188e-06);
        float _4138 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1431 = isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0));
        float _1432 = _1431 * 2.0;
        float _1436 = (1.0 - _1431) / (_1431 + 1.0);
        float _4149 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1437 = isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0));
        float _1446 = ((((1.0 - _1437) * (_1432 + 2.0)) * exp2(log2(isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0))) * (_1432 + 1.0))) + _1437) * _1318;
        _1454 = _1285;
        _1456 = _1284;
        _1457 = _1283;
        _1458 = _1295;
        _1459 = _1294;
        _1460 = _1293;
        _1461 = _1305;
        _1462 = _1304;
        _1463 = _1303;
        _1464 = _1318;
        _1465 = _1317;
        _1466 = _1316;
        _1467 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0)));
        _1468 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0)));
        _1469 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0)));
    }
    else
    {
        _1454 = _1455;
        _1456 = _1455;
        _1457 = _1455;
        _1458 = _1455;
        _1459 = _1455;
        _1460 = _1455;
        _1461 = _1455;
        _1462 = _1455;
        _1463 = _1455;
        _1464 = _1455;
        _1465 = _1455;
        _1466 = _1455;
        _1467 = 0.0;
        _1468 = 0.0;
        _1469 = 0.0;
    }
    float _1764;
    float _1765;
    float _1766;
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1495 = fma(_1152, cbModelParam._m0[30u].z, fma(_1148, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1144));
        float _1499 = fma(_1152, cbModelParam._m0[31u].z, fma(_1148, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1144));
        float _1503 = fma(_1152, cbModelParam._m0[32u].z, fma(_1148, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1144));
        float _1526 = _1144 + _915;
        float _1527 = _1148 + _916;
        float _1528 = _1152 + _917;
        float _1538 = fma(_1528, cbModelParam._m0[30u].z, fma(_1527, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1526)) - _1495;
        float _1539 = fma(_1528, cbModelParam._m0[31u].z, fma(_1527, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1526)) - _1499;
        float _1540 = fma(_1528, cbModelParam._m0[32u].z, fma(_1527, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1526)) - _1503;
        float _1544 = inversesqrt(dot(vec3(_1538, _1539, _1540), vec3(_1538, _1539, _1540)));
        float _1557 = ((_1544 * _1538) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1495 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1558 = ((_1544 * _1539) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1499 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1559 = ((_1544 * _1540) / cbModelParam._m0[35u].z) + ((((((_1503 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1561 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1557, _1558, _1559), 0.0);
        vec4 _1568 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1557, _1558, _1559), 0.0);
        vec4 _1575 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1557, _1558, _1559), 0.0);
        vec4 _1582 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1557, _1558, _1559), 0.0);
        float _1594 = exp2((_1561.w + (-0.5)) * 20.0) * 2.0;
        float _1595 = _1594 * (_1561.x + (-0.5));
        float _1596 = _1594 * (_1561.y + (-0.5));
        float _1597 = _1594 * (_1561.z + (-0.5));
        float _1604 = exp2((_1568.w + (-0.5)) * 20.0) * 2.0;
        float _1605 = _1604 * (_1568.x + (-0.5));
        float _1606 = _1604 * (_1568.y + (-0.5));
        float _1607 = _1604 * (_1568.z + (-0.5));
        float _1614 = exp2((_1575.w + (-0.5)) * 20.0) * 2.0;
        float _1615 = _1614 * (_1575.x + (-0.5));
        float _1616 = _1614 * (_1575.y + (-0.5));
        float _1617 = _1614 * (_1575.z + (-0.5));
        float _1624 = exp2((_1582.w + (-0.5)) * 20.0) * 2.0;
        float _1625 = _1624 * (_1582.x + (-0.5));
        float _1626 = _1624 * (_1582.y + (-0.5));
        float _1627 = _1624 * (_1582.z + (-0.5));
        float _1628 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1629 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
        float _1630 = isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0));
        float _1631 = _1595 * 0.5;
        float _1632 = _1605 * 0.5;
        float _1633 = _1615 * 0.5;
        float _1634 = dot(vec3(_1631, _1632, _1633), vec3(_1631, _1632, _1633));
        float _1639 = (_1634 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1634);
        float _1647 = (dot(vec3(_915, _916, _917), vec3(_1639 * _1631, _1639 * _1632, _1639 * _1633)) + 1.0) * 0.5;
        float _4190 = isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0));
        float _1656 = sqrt(((_1632 * _1632) + (_1631 * _1631)) + (_1633 * _1633)) / (_1628 + 9.9999997473787516355514526367188e-06);
        float _4201 = isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0));
        float _1657 = isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0));
        float _1658 = _1657 * 2.0;
        float _1662 = (1.0 - _1657) / (_1657 + 1.0);
        float _4212 = isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0));
        float _1663 = isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0));
        float _1672 = ((((1.0 - _1663) * (_1658 + 2.0)) * exp2(log2(isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0))) * (_1658 + 1.0))) + _1663) * _1628;
        float _1673 = _1596 * 0.5;
        float _1674 = _1606 * 0.5;
        float _1675 = _1616 * 0.5;
        float _1676 = dot(vec3(_1673, _1674, _1675), vec3(_1673, _1674, _1675));
        float _1681 = (_1676 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1676);
        float _1689 = (dot(vec3(_915, _916, _917), vec3(_1681 * _1673, _1681 * _1674, _1681 * _1675)) + 1.0) * 0.5;
        float _4223 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
        float _1698 = sqrt(((_1674 * _1674) + (_1673 * _1673)) + (_1675 * _1675)) / (_1629 + 9.9999997473787516355514526367188e-06);
        float _4234 = isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0));
        float _1699 = isnan(1.0) ? _4234 : (isnan(_4234) ? 1.0 : min(_4234, 1.0));
        float _1700 = _1699 * 2.0;
        float _1704 = (1.0 - _1699) / (_1699 + 1.0);
        float _4245 = isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0));
        float _1705 = isnan(1.0) ? _4245 : (isnan(_4245) ? 1.0 : min(_4245, 1.0));
        float _1714 = ((((1.0 - _1705) * (_1700 + 2.0)) * exp2(log2(isnan(1.0) ? _4223 : (isnan(_4223) ? 1.0 : min(_4223, 1.0))) * (_1700 + 1.0))) + _1705) * _1629;
        float _1715 = _1597 * 0.5;
        float _1716 = _1607 * 0.5;
        float _1717 = _1617 * 0.5;
        float _1718 = dot(vec3(_1715, _1716, _1717), vec3(_1715, _1716, _1717));
        float _1723 = (_1718 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1718);
        float _1731 = (dot(vec3(_915, _916, _917), vec3(_1723 * _1715, _1723 * _1716, _1723 * _1717)) + 1.0) * 0.5;
        float _4256 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
        float _1740 = sqrt(((_1716 * _1716) + (_1715 * _1715)) + (_1717 * _1717)) / (_1630 + 9.9999997473787516355514526367188e-06);
        float _4267 = isnan(0.0) ? _1740 : (isnan(_1740) ? 0.0 : max(_1740, 0.0));
        float _1741 = isnan(1.0) ? _4267 : (isnan(_4267) ? 1.0 : min(_4267, 1.0));
        float _1742 = _1741 * 2.0;
        float _1746 = (1.0 - _1741) / (_1741 + 1.0);
        float _4278 = isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0));
        float _1747 = isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0));
        float _1756 = ((((1.0 - _1747) * (_1742 + 2.0)) * exp2(log2(isnan(1.0) ? _4256 : (isnan(_4256) ? 1.0 : min(_4256, 1.0))) * (_1742 + 1.0))) + _1747) * _1630;
        _1764 = _1597;
        _1765 = _1596;
        _1766 = _1595;
        _1767 = _1607;
        _1768 = _1606;
        _1769 = _1605;
        _1770 = _1617;
        _1771 = _1616;
        _1772 = _1615;
        _1773 = _1630;
        _1774 = _1629;
        _1775 = _1628;
        _1776 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0)));
        _1777 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0)));
        _1778 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0)));
    }
    else
    {
        _1764 = _1455;
        _1765 = _1455;
        _1766 = _1455;
        _1767 = _1455;
        _1768 = _1455;
        _1769 = _1455;
        _1770 = _1455;
        _1771 = _1455;
        _1772 = _1455;
        _1773 = _1455;
        _1774 = _1455;
        _1775 = _1455;
        _1776 = 0.0;
        _1777 = 0.0;
        _1778 = 0.0;
    }
    float _1788 = (cbModelParam._m0[1u].x * (_1776 - _1467)) + _1467;
    float _1789 = (cbModelParam._m0[1u].x * (_1777 - _1468)) + _1468;
    float _1790 = (cbModelParam._m0[1u].x * (_1778 - _1469)) + _1469;
    float _1811 = fma(_1790, cbSceneParam._m0[89u].z, fma(_1789, cbSceneParam._m0[89u].y, _1788 * cbSceneParam._m0[89u].x));
    float _1814 = fma(_1790, cbSceneParam._m0[90u].z, fma(_1789, cbSceneParam._m0[90u].y, _1788 * cbSceneParam._m0[90u].x));
    float _1817 = fma(_1790, cbSceneParam._m0[91u].z, fma(_1789, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1788));
    float _1832 = _1089 * 0.5;
    float _1833 = _1090 * 0.5;
    float _1834 = _1091 * 0.5;
    float _1835 = dot(vec4(_1832, _1833, _1834, 1.0), vec4(_1766, _1769, _1772, _1775));
    float _1838 = dot(vec4(_1832, _1833, _1834, 1.0), vec4(_1765, _1768, _1771, _1774));
    float _1841 = dot(vec4(_1832, _1833, _1834, 1.0), vec4(_1764, _1767, _1770, _1773));
    float _1875;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1848 = dot(vec4(_1832, _1833, _1834, 1.0), vec4(_1454, _1458, _1461, _1464));
        float _1852 = dot(vec4(_1832, _1833, _1834, 1.0), vec4(_1456, _1459, _1462, _1465));
        float _1856 = dot(vec4(_1832, _1833, _1834, 1.0), vec4(_1457, _1460, _1463, _1466));
        float _1863 = dot(vec4(cbModelParam._m0[39u]), vec4(_1832, _1833, _1834, 1.0));
        _1875 = dot(vec3(isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0)), isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0)), isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1863) ? 0.0 : (isnan(0.0) ? _1863 : max(0.0, _1863))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1875 = 1.0;
    }
    float _1886;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1877 = dot(vec4(cbModelParam._m0[40u]), vec4(_1832, _1833, _1834, 1.0));
        _1886 = dot(vec3(isnan(0.0) ? _1835 : (isnan(_1835) ? 0.0 : max(_1835, 0.0)), isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0)), isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1877) ? 0.0 : (isnan(0.0) ? _1877 : max(0.0, _1877))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1886 = 1.0;
    }
    float _1890 = (_1886 * cbModelParam._m0[1u].x) + (_1875 * (1.0 - cbModelParam._m0[1u].x));
    float _1900 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _918);
    float _1901 = isnan(_1900) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1900 : min(cbModelParam._m0[25u].z, _1900));
    float _1981;
    float _1983;
    float _1985;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1948 = fma(_1152, cbModelParam._m0[13u].z, fma(_1148, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1144)) + cbModelParam._m0[13u].w;
        float _1952 = fma(_1152, cbModelParam._m0[14u].z, fma(_1148, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1144)) + cbModelParam._m0[14u].w;
        float _1956 = fma(_1152, cbModelParam._m0[15u].z, fma(_1148, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1144)) + cbModelParam._m0[15u].w;
        float _1959 = fma(_1091, cbModelParam._m0[13u].z, fma(_1090, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1089));
        float _1962 = fma(_1091, cbModelParam._m0[14u].z, fma(_1090, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1089));
        float _1965 = fma(_1091, cbModelParam._m0[15u].z, fma(_1090, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1089));
        float _1993;
        if (_1959 > 0.0)
        {
            _1993 = abs((1.0 - _1948) / _1959);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1959 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1948 + 1.0) / _1959);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1993 = frontier_phi_14_12_ladder;
        }
        float _2216;
        if (_1962 > 0.0)
        {
            _2216 = abs((1.0 - _1952) / _1962);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1962 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1952 + 1.0) / _1962);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2216 = frontier_phi_23_19_ladder;
        }
        float _2473;
        if (_1965 > 0.0)
        {
            _2473 = abs((1.0 - _1956) / _1965);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1965 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1956 + 1.0) / _1965);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2473 = frontier_phi_35_30_ladder;
        }
        float _2475 = isnan(_2216) ? _1993 : (isnan(_1993) ? _2216 : min(_1993, _2216));
        float _2476 = isnan(_2473) ? _2475 : (isnan(_2475) ? _2473 : min(_2475, _2473));
        float _2480 = (_2476 * _1959) + _1948;
        float _2481 = (_2476 * _1962) + _1952;
        float _2482 = (_2476 * _1965) + _1956;
        float _2483 = _2476 * 9.9999997473787516355514526367188e-05;
        float _2485 = (-1.0) - _2483;
        float _2487 = _2483 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2482 > _2487) || ((_2482 < _2485) || ((_2481 > _2487) || ((_2481 < _2485) || ((_2480 < _2485) || (_2480 > _2487))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2610 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2482, cbModelParam._m0[9u].z, fma(_2481, cbModelParam._m0[9u].y, _2480 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2482, cbModelParam._m0[10u].z, fma(_2481, cbModelParam._m0[10u].y, _2480 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2482, cbModelParam._m0[11u].z, fma(_2481, cbModelParam._m0[11u].y, _2480 * cbModelParam._m0[11u].x))), _1901);
            frontier_phi_13_35_ladder = _2610.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2610.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2610.x * cbModelParam._m0[1u].y;
        }
        _1981 = frontier_phi_13_35_ladder_2;
        _1983 = frontier_phi_13_35_ladder_1;
        _1985 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1969 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1089, _1090, _1091), _1901);
        _1981 = _1969.x * cbModelParam._m0[1u].y;
        _1983 = _1969.y * cbModelParam._m0[1u].y;
        _1985 = _1969.z * cbModelParam._m0[1u].y;
    }
    float _1989 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _918);
    float _1990 = isnan(_1989) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1989 : min(cbModelParam._m0[25u].w, _1989));
    float _2079;
    float _2081;
    float _2083;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2043 = fma(_1152, cbModelParam._m0[21u].z, fma(_1148, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1144)) + cbModelParam._m0[21u].w;
        float _2047 = fma(_1152, cbModelParam._m0[22u].z, fma(_1148, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1144)) + cbModelParam._m0[22u].w;
        float _2051 = fma(_1152, cbModelParam._m0[23u].z, fma(_1148, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1144)) + cbModelParam._m0[23u].w;
        float _2054 = fma(_1091, cbModelParam._m0[21u].z, fma(_1090, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1089));
        float _2057 = fma(_1091, cbModelParam._m0[22u].z, fma(_1090, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1089));
        float _2060 = fma(_1091, cbModelParam._m0[23u].z, fma(_1090, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1089));
        float _2221;
        if (_2054 > 0.0)
        {
            _2221 = abs((1.0 - _2043) / _2054);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2054 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2043 + 1.0) / _2054);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2221 = frontier_phi_25_21_ladder;
        }
        float _2500;
        if (_2057 > 0.0)
        {
            _2500 = abs((1.0 - _2047) / _2057);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2057 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2047 + 1.0) / _2057);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2500 = frontier_phi_37_32_ladder;
        }
        float _2713;
        if (_2060 > 0.0)
        {
            _2713 = abs((1.0 - _2051) / _2060);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2060 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2051 + 1.0) / _2060);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2713 = frontier_phi_46_43_ladder;
        }
        float _2715 = isnan(_2500) ? _2221 : (isnan(_2221) ? _2500 : min(_2221, _2500));
        float _2716 = isnan(_2713) ? _2715 : (isnan(_2715) ? _2713 : min(_2715, _2713));
        float _2720 = (_2716 * _2054) + _2043;
        float _2721 = (_2716 * _2057) + _2047;
        float _2722 = (_2716 * _2060) + _2051;
        float _2723 = _2716 * 9.9999997473787516355514526367188e-05;
        float _2724 = (-1.0) - _2723;
        float _2726 = _2723 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2722 > _2726) || ((_2722 < _2724) || ((_2721 > _2726) || ((_2721 < _2724) || ((_2720 < _2724) || (_2720 > _2726))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2966 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2722, cbModelParam._m0[17u].z, fma(_2721, cbModelParam._m0[17u].y, _2720 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2722, cbModelParam._m0[18u].z, fma(_2721, cbModelParam._m0[18u].y, _2720 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2722, cbModelParam._m0[19u].z, fma(_2721, cbModelParam._m0[19u].y, _2720 * cbModelParam._m0[19u].x))), _1990);
            frontier_phi_22_46_ladder = _2966.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2966.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2966.x * cbModelParam._m0[1u].z;
        }
        _2079 = frontier_phi_22_46_ladder_2;
        _2081 = frontier_phi_22_46_ladder_1;
        _2083 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2063 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1089, _1090, _1091), _1990);
        _2079 = _2063.x * cbModelParam._m0[1u].z;
        _2081 = _2063.y * cbModelParam._m0[1u].z;
        _2083 = _2063.z * cbModelParam._m0[1u].z;
    }
    float _2096 = (((_1115 * _1066) + _1116) * _1081) * ((cbModelParam._m0[1u].w * (_2079 - _1981)) + _1981);
    float _2098 = (((_1115 * _1068) + _1116) * _1081) * ((cbModelParam._m0[1u].w * (_2081 - _1983)) + _1983);
    float _2100 = (((_1115 * _1069) + _1116) * _1081) * ((cbModelParam._m0[1u].w * (_2083 - _1985)) + _1985);
    float _2103 = fma(_2100, cbSceneParam._m0[89u].z, fma(_2098, cbSceneParam._m0[89u].y, _2096 * cbSceneParam._m0[89u].x));
    float _2106 = fma(_2100, cbSceneParam._m0[90u].z, fma(_2098, cbSceneParam._m0[90u].y, _2096 * cbSceneParam._m0[90u].x));
    float _2109 = fma(_2100, cbSceneParam._m0[91u].z, fma(_2098, cbSceneParam._m0[91u].y, _2096 * cbSceneParam._m0[91u].x));
    vec4 _2117 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1003, _1004));
    float _2119 = _2117.w;
    float _2131 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2119);
    float _2132 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2119);
    float _2133 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2119);
    uvec4 _2137 = floatBitsToUint(cbInstanceData._m0[_1041 + 5u]);
    uint _2139 = _2137.x * 14u;
    uint _2140 = _2139 + 13u;
    float _2147 = _1081 + (-1.0);
    float _2152 = (cbLight._m0[_2140].x * _2147) + 1.0;
    float _2153 = (cbLight._m0[_2140].y * _2147) + 1.0;
    float _2154 = (cbLight._m0[_2140].z * _2147) + 1.0;
    float _2155 = (cbLight._m0[_2140].w * _2147) + 1.0;
    uint _2156 = _2139 + 5u;
    float _2162 = isnan(1.0) ? _2153 : (isnan(_2153) ? 1.0 : min(_2153, 1.0));
    uint _2166 = _2139 + 4u;
    float _2175 = isnan(1.0) ? _2152 : (isnan(_2152) ? 1.0 : min(_2152, 1.0));
    uint _2179 = _2139 | 1u;
    float _2190 = dot(vec3(cbLight._m0[_2139].xyz), vec3(_915, _916, _917));
    float _2193 = dot(vec3(cbLight._m0[_2179].xyz), vec3(_915, _916, _917));
    float _4414 = isnan(0.0) ? _2190 : (isnan(_2190) ? 0.0 : max(_2190, 0.0));
    float _4425 = isnan(0.0) ? _2193 : (isnan(_2193) ? 0.0 : max(_2193, 0.0));
    float _2198 = (isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0))) * 0.3183098733425140380859375;
    float _2200 = (isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0))) * 0.3183098733425140380859375;
    float _2207 = ((cbLight._m0[_2156].x * _2162) * _2200) + (((cbLight._m0[_2166].x * _2131) * _2175) * _2198);
    float _2208 = ((_2162 * cbLight._m0[_2156].y) * _2200) + (((cbLight._m0[_2166].y * _2132) * _2175) * _2198);
    float _2209 = ((_2162 * cbLight._m0[_2156].z) * _2200) + (((cbLight._m0[_2166].z * _2133) * _2175) * _2198);
    uvec4 _2213 = floatBitsToUint(cbLight._m0[_2139 + 12u]);
    bool _2215 = _2213.x == 0u;
    float _2226;
    float _2228;
    float _2230;
    if (_2215)
    {
        _2226 = _2207;
        _2228 = _2208;
        _2230 = _2209;
    }
    else
    {
        uint _2234 = _2139 + 6u;
        float _2250 = (dot(vec3(cbLight._m0[_2139 + 2u].xyz), vec3(_915, _916, _917)) * 0.5) + 0.5;
        float _2251 = _2250 * _2250;
        float _4436 = isnan(0.0) ? _2251 : (isnan(_2251) ? 0.0 : max(_2251, 0.0));
        float _2252 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
        float _2253 = isnan(1.0) ? _2154 : (isnan(_2154) ? 1.0 : min(_2154, 1.0));
        _2226 = (((cbLight._m0[_2234].x * 0.3183098733425140380859375) * _2252) * _2253) + _2207;
        _2228 = (((cbLight._m0[_2234].y * 0.3183098733425140380859375) * _2252) * _2253) + _2208;
        _2230 = (((cbLight._m0[_2234].z * 0.3183098733425140380859375) * _2252) * _2253) + _2209;
    }
    bool _2233 = _2213.y == 0u;
    float _2271;
    float _2273;
    float _2275;
    if (_2233)
    {
        _2271 = _2226;
        _2273 = _2228;
        _2275 = _2230;
    }
    else
    {
        uint _2444 = _2139 + 7u;
        float _2460 = (dot(vec3(cbLight._m0[_2139 + 3u].xyz), vec3(_915, _916, _917)) * 0.5) + 0.5;
        float _2461 = _2460 * _2460;
        float _4452 = isnan(0.0) ? _2461 : (isnan(_2461) ? 0.0 : max(_2461, 0.0));
        float _2462 = isnan(1.0) ? _4452 : (isnan(_4452) ? 1.0 : min(_4452, 1.0));
        float _2463 = isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0));
        _2271 = (((cbLight._m0[_2444].x * 0.3183098733425140380859375) * _2462) * _2463) + _2226;
        _2273 = (((cbLight._m0[_2444].y * 0.3183098733425140380859375) * _2462) * _2463) + _2228;
        _2275 = (((cbLight._m0[_2444].z * 0.3183098733425140380859375) * _2462) * _2463) + _2230;
    }
    uint _2278 = _2139 + 8u;
    float _2291 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2139].w)) * _918) * 0.949999988079071044921875);
    float _2292 = _2291 * _2291;
    float _2293 = cbLight._m0[_2139].x + _995;
    float _2294 = cbLight._m0[_2139].y + _996;
    float _2295 = cbLight._m0[_2139].z + _997;
    float _2299 = inversesqrt(dot(vec3(_2293, _2294, _2295), vec3(_2293, _2294, _2295)));
    float _2300 = _2299 * _2293;
    float _2301 = _2299 * _2294;
    float _2302 = _2299 * _2295;
    float _2303 = dot(vec3(_915, _916, _917), vec3(cbLight._m0[_2139].xyz));
    float _4468 = isnan(0.0) ? _2303 : (isnan(_2303) ? 0.0 : max(_2303, 0.0));
    float _2306 = isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0));
    float _4479 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
    float _2307 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
    float _2308 = dot(vec3(_915, _916, _917), vec3(_2300, _2301, _2302));
    float _4490 = isnan(0.0) ? _2308 : (isnan(_2308) ? 0.0 : max(_2308, 0.0));
    float _2311 = isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0));
    float _2312 = dot(vec3(cbLight._m0[_2139].xyz), vec3(_2300, _2301, _2302));
    float _4501 = isnan(0.0) ? _2312 : (isnan(_2312) ? 0.0 : max(_2312, 0.0));
    float _2316 = _2292 * _2292;
    float _2320 = ((_2311 * _2311) * (_2316 + (-1.0))) + 1.0;
    float _2328 = exp2(log2(1.0 - (isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0)))) * 5.0);
    float _2329 = 0.959999978542327880859375 - _1063;
    float _2331 = 0.959999978542327880859375 - _1064;
    float _2332 = 0.959999978542327880859375 - _1065;
    float _2339 = 1.0 - _2292;
    float _2350 = (0.5 / (((_2307 * ((_2306 * _2339) + _2292)) + 9.9999999392252902907785028219223e-09) + (((_2307 * _2339) + _2292) * _2306))) * _2306;
    float _4512 = isnan(0.0) ? _2350 : (isnan(_2350) ? 0.0 : max(_2350, 0.0));
    float _2352 = (isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0))) * (_2316 / ((_2320 * _2320) * 3.141590118408203125));
    uint _2366 = _2139 + 9u;
    float _2377 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2179].w)) * _918) * 0.949999988079071044921875);
    float _2378 = _2377 * _2377;
    float _2379 = cbLight._m0[_2179].x + _995;
    float _2380 = cbLight._m0[_2179].y + _996;
    float _2381 = cbLight._m0[_2179].z + _997;
    float _2385 = inversesqrt(dot(vec3(_2379, _2380, _2381), vec3(_2379, _2380, _2381)));
    float _2386 = _2385 * _2379;
    float _2387 = _2385 * _2380;
    float _2388 = _2385 * _2381;
    float _2389 = dot(vec3(_915, _916, _917), vec3(cbLight._m0[_2179].xyz));
    float _4523 = isnan(0.0) ? _2389 : (isnan(_2389) ? 0.0 : max(_2389, 0.0));
    float _2392 = isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0));
    float _2393 = dot(vec3(_915, _916, _917), vec3(_2386, _2387, _2388));
    float _4534 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
    float _2396 = isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0));
    float _2397 = dot(vec3(cbLight._m0[_2179].xyz), vec3(_2386, _2387, _2388));
    float _4545 = isnan(0.0) ? _2397 : (isnan(_2397) ? 0.0 : max(_2397, 0.0));
    float _2401 = _2378 * _2378;
    float _2405 = ((_2396 * _2396) * (_2401 + (-1.0))) + 1.0;
    float _2412 = exp2(log2(1.0 - (isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0)))) * 5.0);
    float _2419 = 1.0 - _2378;
    float _2429 = (0.5 / (((_2307 * ((_2392 * _2419) + _2378)) + 9.9999999392252902907785028219223e-09) + (((_2307 * _2419) + _2378) * _2392))) * _2392;
    float _4556 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
    float _2431 = (isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0))) * (_2401 / ((_2405 * _2405) * 3.141590118408203125));
    float _2441 = (((((_2412 * _2329) + _1066) * cbLight._m0[_2366].x) * _2431) * _2162) + ((((cbLight._m0[_2278].x * _2131) * ((_2328 * _2329) + _1066)) * _2352) * _2175);
    float _2442 = (((((_2412 * _2331) + _1068) * cbLight._m0[_2366].y) * _2431) * _2162) + ((((cbLight._m0[_2278].y * _2132) * ((_2328 * _2331) + _1068)) * _2352) * _2175);
    float _2443 = (((((_2412 * _2332) + _1069) * cbLight._m0[_2366].z) * _2431) * _2162) + ((((cbLight._m0[_2278].z * _2133) * ((_2328 * _2332) + _1069)) * _2352) * _2175);
    float _2505;
    float _2507;
    float _2509;
    if (_2215)
    {
        _2505 = _2441;
        _2507 = _2442;
        _2509 = _2443;
    }
    else
    {
        uint _2511 = _2139 + 2u;
        uint _2515 = _2139 + 10u;
        float _2529 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2511].w)) * _918) * 0.949999988079071044921875);
        float _2530 = _2529 * _2529;
        float _2531 = cbLight._m0[_2511].x + _995;
        float _2532 = cbLight._m0[_2511].y + _996;
        float _2533 = cbLight._m0[_2511].z + _997;
        float _2537 = inversesqrt(dot(vec3(_2531, _2532, _2533), vec3(_2531, _2532, _2533)));
        float _2538 = _2537 * _2531;
        float _2539 = _2537 * _2532;
        float _2540 = _2537 * _2533;
        float _2541 = dot(vec3(_915, _916, _917), vec3(cbLight._m0[_2511].xyz));
        float _4567 = isnan(0.0) ? _2541 : (isnan(_2541) ? 0.0 : max(_2541, 0.0));
        float _2544 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
        float _2545 = dot(vec3(_915, _916, _917), vec3(_2538, _2539, _2540));
        float _4578 = isnan(0.0) ? _2545 : (isnan(_2545) ? 0.0 : max(_2545, 0.0));
        float _2548 = isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0));
        float _2549 = dot(vec3(cbLight._m0[_2511].xyz), vec3(_2538, _2539, _2540));
        float _4589 = isnan(0.0) ? _2549 : (isnan(_2549) ? 0.0 : max(_2549, 0.0));
        float _2553 = _2530 * _2530;
        float _2557 = ((_2548 * _2548) * (_2553 + (-1.0))) + 1.0;
        float _2564 = exp2(log2(1.0 - (isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0)))) * 5.0);
        float _2571 = 1.0 - _2530;
        float _2581 = (0.5 / (((_2307 * ((_2544 * _2571) + _2530)) + 9.9999999392252902907785028219223e-09) + (((_2307 * _2571) + _2530) * _2544))) * _2544;
        float _4600 = isnan(0.0) ? _2581 : (isnan(_2581) ? 0.0 : max(_2581, 0.0));
        float _2583 = (isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0))) * (_2553 / ((_2557 * _2557) * 3.141590118408203125));
        float _2584 = isnan(1.0) ? _2154 : (isnan(_2154) ? 1.0 : min(_2154, 1.0));
        _2505 = (((((_2564 * _2329) + _1066) * cbLight._m0[_2515].x) * _2583) * _2584) + _2441;
        _2507 = (((((_2564 * _2331) + _1068) * cbLight._m0[_2515].y) * _2583) * _2584) + _2442;
        _2509 = (((((_2564 * _2332) + _1069) * cbLight._m0[_2515].z) * _2583) * _2584) + _2443;
    }
    float _2619;
    float _2621;
    float _2623;
    if (_2233)
    {
        _2619 = _2505;
        _2621 = _2507;
        _2623 = _2509;
    }
    else
    {
        uint _2630 = _2139 + 3u;
        uint _2634 = _2139 + 11u;
        float _2648 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2630].w)) * _918) * 0.949999988079071044921875);
        float _2649 = _2648 * _2648;
        float _2650 = cbLight._m0[_2630].x + _995;
        float _2651 = cbLight._m0[_2630].y + _996;
        float _2652 = cbLight._m0[_2630].z + _997;
        float _2656 = inversesqrt(dot(vec3(_2650, _2651, _2652), vec3(_2650, _2651, _2652)));
        float _2657 = _2656 * _2650;
        float _2658 = _2656 * _2651;
        float _2659 = _2656 * _2652;
        float _2660 = dot(vec3(_915, _916, _917), vec3(cbLight._m0[_2630].xyz));
        float _4616 = isnan(0.0) ? _2660 : (isnan(_2660) ? 0.0 : max(_2660, 0.0));
        float _2663 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
        float _2664 = dot(vec3(_915, _916, _917), vec3(_2657, _2658, _2659));
        float _4627 = isnan(0.0) ? _2664 : (isnan(_2664) ? 0.0 : max(_2664, 0.0));
        float _2667 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
        float _2668 = dot(vec3(cbLight._m0[_2630].xyz), vec3(_2657, _2658, _2659));
        float _4638 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
        float _2672 = _2649 * _2649;
        float _2676 = ((_2667 * _2667) * (_2672 + (-1.0))) + 1.0;
        float _2683 = exp2(log2(1.0 - (isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0)))) * 5.0);
        float _2690 = 1.0 - _2649;
        float _2700 = (0.5 / (((_2307 * ((_2663 * _2690) + _2649)) + 9.9999999392252902907785028219223e-09) + (((_2307 * _2690) + _2649) * _2663))) * _2663;
        float _4649 = isnan(0.0) ? _2700 : (isnan(_2700) ? 0.0 : max(_2700, 0.0));
        float _2702 = (isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0))) * (_2672 / ((_2676 * _2676) * 3.141590118408203125));
        float _2703 = isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0));
        _2619 = (((((_2683 * _2329) + _1066) * cbLight._m0[_2634].x) * _2702) * _2703) + _2505;
        _2621 = (((((_2683 * _2331) + _1068) * cbLight._m0[_2634].y) * _2702) * _2703) + _2507;
        _2623 = (((((_2683 * _2332) + _1069) * cbLight._m0[_2634].z) * _2702) * _2703) + _2509;
    }
    float _2838;
    float _2840;
    float _2842;
    float _2844;
    float _2846;
    float _2848;
    if (_2137.y == 0u)
    {
        float _2778 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2779 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2778;
        float _2780 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2778;
        float _2781 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2778;
        uvec4 _2793 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2794 = _2793.x;
        uint _2805 = uint((float(_2793.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1004) / _2794))) + floor(float(uint(cbSceneParam._m0[85u].x * _1003) / _2794)));
        float _2815 = (log2(_2781 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2816 = isnan(0.0) ? _2815 : (isnan(_2815) ? 0.0 : max(_2815, 0.0));
        uint _2819 = uint(isnan(14.0) ? _2816 : (isnan(_2816) ? 14.0 : min(_2816, 14.0)));
        uvec4 _2824 = texelFetch(g_lightClusterGridBuffer, int(((_2819 << 2u) + (_2805 << 6u)) >> 2u));
        uint _2825 = _2824.x;
        uint _2826 = _2793.z;
        float _2971;
        float _2973;
        float _2975;
        float _2977;
        float _2979;
        float _2981;
        if (((((1u << ((_2826 >> 4u) & 15u)) + 4294967295u) & _2825) == 0u) || ((_2826 & 240u) == 0u))
        {
            _2971 = 0.0;
            _2973 = 0.0;
            _2975 = 0.0;
            _2977 = 0.0;
            _2979 = 0.0;
            _2981 = 0.0;
        }
        else
        {
            float _2972;
            float _2974;
            float _2976;
            float _2978;
            float _2980;
            float _2982;
            float _3124 = 0.0;
            float _3125 = 0.0;
            float _3126 = 0.0;
            float _3127 = 0.0;
            float _3128 = 0.0;
            float _3129 = 0.0;
            uint _3130 = 0u;
            uint _3139;
            bool _3140;
            for (;;)
            {
                _3139 = texelFetch(g_lightClassification, int((((_2819 << 5u) + (_2805 << 9u)) + (_3130 << 2u)) >> 2u)).x;
                _3140 = _3139 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3140)
                {
                    frontier_phi_61_pred = _3124;
                    frontier_phi_61_pred_1 = _3129;
                    frontier_phi_61_pred_2 = _3128;
                    frontier_phi_61_pred_3 = _3127;
                    frontier_phi_61_pred_4 = _3126;
                    frontier_phi_61_pred_5 = _3125;
                }
                else
                {
                    float _3248;
                    float _3249;
                    float _3250;
                    float _3251;
                    float _3252;
                    float _3253;
                    uint _3254;
                    _3248 = _3124;
                    _3249 = _3125;
                    _3250 = _3126;
                    _3251 = _3127;
                    _3252 = _3128;
                    _3253 = _3129;
                    _3254 = _3139;
                    float _3180;
                    float _3181;
                    float _3182;
                    float _3183;
                    float _3184;
                    float _3185;
                    for (;;)
                    {
                        uint _3258 = uint(findLSB(_3254)) + (_3130 << 5u);
                        uint _3255 = (_3254 + 4294967295u) & _3254;
                        uint _3260 = _3258 * 48u;
                        vec4 _3274 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3260)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 3u)).x));
                        uint _3280 = (_3258 * 48u) + 4u;
                        vec4 _3293 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3280)).x, texelFetch(g_PointLightRenderingBuffer, int(_3280 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3280 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3280 + 3u)).x));
                        uint _3299 = (_3258 * 48u) + 8u;
                        vec3 _3310 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3299)).x, texelFetch(g_PointLightRenderingBuffer, int(_3299 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3299 + 2u)).x));
                        float _3314 = _3274.x - _2779;
                        float _3315 = _3274.y - _2780;
                        float _3316 = _3274.z - _2781;
                        float _3317 = dot(vec3(_3314, _3315, _3316), vec3(_3314, _3315, _3316));
                        float _3320 = inversesqrt(_3317);
                        float _3321 = _3320 * _3314;
                        float _3322 = _3320 * _3315;
                        float _3323 = _3320 * _3316;
                        float _3324 = dot(vec3(_1022, _1025, _1028), vec3(_3321, _3322, _3323));
                        float _3329 = 1.0 - (_3317 * _3274.w);
                        float _4675 = isnan(0.0) ? _3329 : (isnan(_3329) ? 0.0 : max(_3329, 0.0));
                        float _3330 = isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0));
                        float _3331 = sqrt(_3317) * _3293.w;
                        float _3334 = 1.39999997615814208984375 / (_3331 + 1.39999997615814208984375);
                        float _3335 = _3334 * _3334;
                        float _3338 = ((1.0 - _3335) * _3324) + _3335;
                        float _3341 = _3331 * _3331;
                        float _3345 = ((isnan(0.0) ? _3338 : (isnan(_3338) ? 0.0 : max(_3338, 0.0))) * _3330) / ((_3341 * 0.699999988079071044921875) + 1.0);
                        float _3349 = (-0.0) - _2779;
                        float _3350 = (-0.0) - _2780;
                        float _3351 = (-0.0) - _2781;
                        float _3355 = inversesqrt(dot(vec3(_3349, _3350, _3351), vec3(_3349, _3350, _3351)));
                        float _3356 = _3355 * _3349;
                        float _3357 = _3355 * _3350;
                        float _3358 = _3355 * _3351;
                        float _3366 = exp2(log2(1.0 / ((_3341 * 3.5) + 5.0)) * 0.25);
                        float _3367 = 1.0 - _1097;
                        float _3374 = sqrt(1.0 - ((1.0 - (_3367 * _3367)) * (1.0 - (_3366 * _3366))));
                        float _3375 = _3374 * _3374;
                        float _3376 = _3375 * _3375;
                        float _3377 = _3356 + _3321;
                        float _3378 = _3357 + _3322;
                        float _3379 = _3358 + _3323;
                        float _3383 = inversesqrt(dot(vec3(_3377, _3378, _3379), vec3(_3377, _3378, _3379)));
                        float _3387 = dot(vec3(_1022, _1025, _1028), vec3(_3356, _3357, _3358));
                        float _4691 = isnan(0.0) ? _3387 : (isnan(_3387) ? 0.0 : max(_3387, 0.0));
                        float _3390 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
                        float _3391 = dot(vec3(_1022, _1025, _1028), vec3(_3383 * _3377, _3383 * _3378, _3383 * _3379));
                        float _4702 = isnan(0.0) ? _3391 : (isnan(_3391) ? 0.0 : max(_3391, 0.0));
                        float _3394 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
                        float _3398 = ((_3394 * _3394) * (_3376 + (-1.0))) + 1.0;
                        float _3399 = _3334 * _3375;
                        float _3400 = _3399 * _3399;
                        float _3403 = ((1.0 - _3400) * _3324) + _3400;
                        float _4713 = isnan(0.0) ? _3403 : (isnan(_3403) ? 0.0 : max(_3403, 0.0));
                        float _3404 = isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0));
                        float _3405 = 1.0 - _3375;
                        float _3415 = (0.5 / (((_3404 * ((_3390 * _3405) + _3375)) + 9.9999999392252902907785028219223e-09) + (((_3404 * _3405) + _3375) * _3390))) * _3404;
                        float _4724 = isnan(0.0) ? _3415 : (isnan(_3415) ? 0.0 : max(_3415, 0.0));
                        float _3426 = (((_3376 * 3.1415927410125732421875) * (isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0)))) / ((_3398 * _3398) * ((_3341 * 2.1991131305694580078125) + 3.141590118408203125))) * _3330;
                        _3183 = (_3345 * _3293.x) + _3251;
                        _3184 = (_3345 * _3293.y) + _3252;
                        _3185 = (_3345 * _3293.z) + _3253;
                        _3180 = (_3426 * _3310.x) + _3248;
                        _3181 = (_3426 * _3310.y) + _3249;
                        _3182 = (_3426 * _3310.z) + _3250;
                        if (_3255 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3248 = _3180;
                            _3249 = _3181;
                            _3250 = _3182;
                            _3251 = _3183;
                            _3252 = _3184;
                            _3253 = _3185;
                            _3254 = _3255;
                        }
                    }
                    frontier_phi_61_pred = _3180;
                    frontier_phi_61_pred_1 = _3185;
                    frontier_phi_61_pred_2 = _3184;
                    frontier_phi_61_pred_3 = _3183;
                    frontier_phi_61_pred_4 = _3182;
                    frontier_phi_61_pred_5 = _3181;
                }
                _2972 = frontier_phi_61_pred;
                _2982 = frontier_phi_61_pred_1;
                _2980 = frontier_phi_61_pred_2;
                _2978 = frontier_phi_61_pred_3;
                _2976 = frontier_phi_61_pred_4;
                _2974 = frontier_phi_61_pred_5;
                uint _3131 = _3130 + 1u;
                if (_3131 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3124 = _2972;
                    _3125 = _2974;
                    _3126 = _2976;
                    _3127 = _2978;
                    _3128 = _2980;
                    _3129 = _2982;
                    _3130 = _3131;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2971 = _2972;
            _2973 = _2974;
            _2975 = _2976;
            _2977 = _2978;
            _2979 = _2980;
            _2981 = _2982;
        }
        uvec4 _2985 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2986 = _2985.z;
        uint _2988 = (_2986 >> 8u) & 15u;
        float _3092;
        float _3094;
        float _3096;
        float _3098;
        float _3100;
        float _3102;
        if (((4294967295u << _2988) & _2825) == 0u)
        {
            _3092 = _2971;
            _3094 = _2973;
            _3096 = _2975;
            _3098 = _2977;
            _3100 = _2979;
            _3102 = _2981;
        }
        else
        {
            float _3117 = inversesqrt(dot(vec3(_2779, _2780, _2781), vec3(_2779, _2780, _2781)));
            float _3118 = _3117 * _2779;
            float _3119 = _3117 * _2780;
            float _3120 = _3117 * _2781;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2988 < ((_2986 >> 12u) & 15u))
            {
                float _3093;
                float _3095;
                float _3097;
                float _3099;
                float _3101;
                float _3103;
                float _3231 = _2971;
                float _3232 = _2973;
                float _3233 = _2975;
                float _3234 = _2977;
                float _3235 = _2979;
                float _3236 = _2981;
                uint _3237 = _2988;
                uint _3246;
                bool _3247;
                for (;;)
                {
                    _3246 = texelFetch(g_lightClassification, int((((_2819 << 5u) + (_2805 << 9u)) + (_3237 << 2u)) >> 2u)).x;
                    _3247 = _3246 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3247)
                    {
                        frontier_phi_67_pred = _3234;
                        frontier_phi_67_pred_1 = _3235;
                        frontier_phi_67_pred_2 = _3236;
                        frontier_phi_67_pred_3 = _3233;
                        frontier_phi_67_pred_4 = _3232;
                        frontier_phi_67_pred_5 = _3231;
                    }
                    else
                    {
                        float _3431;
                        float _3432;
                        float _3433;
                        float _3434;
                        float _3435;
                        float _3436;
                        float _3725;
                        float _3726;
                        float _3727;
                        float _3728;
                        float _3729;
                        float _3730;
                        float _3444 = _3231;
                        float _3445 = _3232;
                        float _3446 = _3233;
                        float _3447 = _3234;
                        float _3448 = _3235;
                        float _3449 = _3236;
                        uint _3450 = _3246;
                        uint _3451;
                        vec4 _3476;
                        float _3477;
                        vec4 _3492;
                        vec3 _3504;
                        vec4 _3519;
                        vec4 _3534;
                        float _3581;
                        bool _3582;
                        for (;;)
                        {
                            uint _3461 = ((_3237 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3450));
                            _3451 = (_3450 + 4294967295u) & _3450;
                            uint _3463 = _3461 * 40u;
                            _3476 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3463)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 3u)).x));
                            _3477 = _3476.w;
                            uint _3479 = (_3461 * 40u) + 4u;
                            _3492 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3479)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 3u)).x));
                            uint _3494 = (_3461 * 40u) + 8u;
                            _3504 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3494)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3494 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3494 + 2u)).x));
                            uint _3506 = (_3461 * 40u) + 16u;
                            _3519 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3506)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 3u)).x));
                            uint _3521 = (_3461 * 40u) + 20u;
                            _3534 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3521)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 3u)).x));
                            uint _3537 = (_3461 * 40u) + 24u;
                            vec4 _3550 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3537)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 3u)).x));
                            uint _3556 = (_3461 * 40u) + 28u;
                            vec4 _3569 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3556)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 3u)).x));
                            _3581 = fma(_2781, _3569.z, fma(_2780, _3569.y, _3569.x * _2779)) + _3569.w;
                            _3582 = !((fma(_2781, _3550.z, fma(_2780, _3550.y, _3550.x * _2779)) + _3550.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3582)
                            {
                                float _3609 = _3476.x - _2779;
                                float _3610 = _3476.y - _2780;
                                float _3611 = _3476.z - _2781;
                                float _3612 = dot(vec3(_3609, _3610, _3611), vec3(_3609, _3610, _3611));
                                float _3615 = inversesqrt(_3612);
                                float _3616 = _3615 * _3609;
                                float _3617 = _3615 * _3610;
                                float _3618 = _3615 * _3611;
                                float _3622 = 1.0 - (_3612 / (_3477 * _3477));
                                float _4735 = isnan(0.0) ? _3622 : (isnan(_3622) ? 0.0 : max(_3622, 0.0));
                                float _3623 = isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0));
                                float _3627 = sqrt(_3612) * _3492.w;
                                float _3629 = 1.39999997615814208984375 / (_3627 + 1.39999997615814208984375);
                                float _3630 = _3629 * _3629;
                                float _3633 = ((1.0 - _3630) * dot(vec3(_3616, _3617, _3618), vec3(_1022, _1025, _1028))) + _3630;
                                float _3636 = _3627 * _3627;
                                float _3640 = (fma(_2781, _3519.z, fma(_2780, _3519.y, _3519.x * _2779)) + _3519.w) / _3581;
                                float _3641 = (fma(_2781, _3534.z, fma(_2780, _3534.y, _3534.x * _2779)) + _3534.w) / _3581;
                                float _3645 = 1.0 - dot(vec2(_3640, _3641), vec2(_3640, _3641));
                                float _4751 = isnan(0.0) ? _3645 : (isnan(_3645) ? 0.0 : max(_3645, 0.0));
                                float _3646 = isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0));
                                float _3647 = _3646 * (((isnan(0.0) ? _3633 : (isnan(_3633) ? 0.0 : max(_3633, 0.0))) * _3623) / ((_3636 * 0.699999988079071044921875) + 1.0));
                                float _3659 = exp2(log2(1.0 / ((_3636 * 3.5) + 5.0)) * 0.25);
                                float _3660 = 1.0 - _1097;
                                float _3667 = sqrt(1.0 - ((1.0 - (_3660 * _3660)) * (1.0 - (_3659 * _3659))));
                                float _3668 = _3667 * _3667;
                                float _3669 = _3668 * _3668;
                                float _3670 = _3616 - _3118;
                                float _3671 = _3617 - _3119;
                                float _3672 = _3618 - _3120;
                                float _3676 = inversesqrt(dot(vec3(_3670, _3671, _3672), vec3(_3670, _3671, _3672)));
                                float _3680 = dot(vec3(_1022, _1025, _1028), vec3((-0.0) - _3118, (-0.0) - _3119, (-0.0) - _3120));
                                float _4762 = isnan(0.0) ? _3680 : (isnan(_3680) ? 0.0 : max(_3680, 0.0));
                                float _3683 = isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0));
                                float _3684 = dot(vec3(_1022, _1025, _1028), vec3(_3676 * _3670, _3676 * _3671, _3676 * _3672));
                                float _4773 = isnan(0.0) ? _3684 : (isnan(_3684) ? 0.0 : max(_3684, 0.0));
                                float _3687 = isnan(1.0) ? _4773 : (isnan(_4773) ? 1.0 : min(_4773, 1.0));
                                float _3691 = ((_3687 * _3687) * (_3669 + (-1.0))) + 1.0;
                                float _3692 = _3629 * _3668;
                                float _3693 = _3692 * _3692;
                                float _3699 = ((1.0 - _3693) * dot(vec3(_1022, _1025, _1028), vec3(_3616, _3617, _3618))) + _3693;
                                float _4784 = isnan(0.0) ? _3699 : (isnan(_3699) ? 0.0 : max(_3699, 0.0));
                                float _3700 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
                                float _3701 = 1.0 - _3668;
                                float _3711 = (0.5 / (((_3700 * ((_3683 * _3701) + _3668)) + 9.9999999392252902907785028219223e-09) + (((_3700 * _3701) + _3668) * _3683))) * _3700;
                                float _4795 = isnan(0.0) ? _3711 : (isnan(_3711) ? 0.0 : max(_3711, 0.0));
                                float _3721 = (_3646 * _3623) * (((_3669 * 3.1415927410125732421875) * (isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0)))) / ((_3691 * _3691) * ((_3636 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3721 * _3504.x;
                                frontier_phi_73_pred_1 = _3721 * _3504.y;
                                frontier_phi_73_pred_2 = _3647 * _3492.z;
                                frontier_phi_73_pred_3 = _3647 * _3492.y;
                                frontier_phi_73_pred_4 = _3647 * _3492.x;
                                frontier_phi_73_pred_5 = _3721 * _3504.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3725 = frontier_phi_73_pred;
                            _3726 = frontier_phi_73_pred_1;
                            _3730 = frontier_phi_73_pred_2;
                            _3729 = frontier_phi_73_pred_3;
                            _3728 = frontier_phi_73_pred_4;
                            _3727 = frontier_phi_73_pred_5;
                            _3434 = _3728 + _3447;
                            _3435 = _3729 + _3448;
                            _3436 = _3730 + _3449;
                            _3431 = _3725 + _3444;
                            _3432 = _3726 + _3445;
                            _3433 = _3727 + _3446;
                            if (_3451 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3444 = _3431;
                                _3445 = _3432;
                                _3446 = _3433;
                                _3447 = _3434;
                                _3448 = _3435;
                                _3449 = _3436;
                                _3450 = _3451;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3434;
                        frontier_phi_67_pred_1 = _3435;
                        frontier_phi_67_pred_2 = _3436;
                        frontier_phi_67_pred_3 = _3433;
                        frontier_phi_67_pred_4 = _3432;
                        frontier_phi_67_pred_5 = _3431;
                    }
                    _3099 = frontier_phi_67_pred;
                    _3101 = frontier_phi_67_pred_1;
                    _3103 = frontier_phi_67_pred_2;
                    _3097 = frontier_phi_67_pred_3;
                    _3095 = frontier_phi_67_pred_4;
                    _3093 = frontier_phi_67_pred_5;
                    uint _3238 = _3237 + 1u;
                    if (_3238 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3231 = _3093;
                        _3232 = _3095;
                        _3233 = _3097;
                        _3234 = _3099;
                        _3235 = _3101;
                        _3236 = _3103;
                        _3237 = _3238;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3101;
                frontier_phi_55_56_ladder_1 = _3103;
                frontier_phi_55_56_ladder_2 = _3099;
                frontier_phi_55_56_ladder_3 = _3097;
                frontier_phi_55_56_ladder_4 = _3095;
                frontier_phi_55_56_ladder_5 = _3093;
            }
            else
            {
                frontier_phi_55_56_ladder = _2979;
                frontier_phi_55_56_ladder_1 = _2981;
                frontier_phi_55_56_ladder_2 = _2977;
                frontier_phi_55_56_ladder_3 = _2975;
                frontier_phi_55_56_ladder_4 = _2973;
                frontier_phi_55_56_ladder_5 = _2971;
            }
            _3092 = frontier_phi_55_56_ladder_5;
            _3094 = frontier_phi_55_56_ladder_4;
            _3096 = frontier_phi_55_56_ladder_3;
            _3098 = frontier_phi_55_56_ladder_2;
            _3100 = frontier_phi_55_56_ladder;
            _3102 = frontier_phi_55_56_ladder_1;
        }
        float _3107 = isnan(1.0) ? _1081 : (isnan(_1081) ? 1.0 : min(_1081, 1.0));
        _2838 = (_3107 * _3098) + _2271;
        _2840 = (_3107 * _3100) + _2273;
        _2842 = (_3107 * _3102) + _2275;
        _2844 = ((_3092 * _1066) * _3107) + _2619;
        _2846 = ((_3094 * _1068) * _3107) + _2621;
        _2848 = ((_3096 * _1069) * _3107) + _2623;
    }
    else
    {
        _2838 = _2271;
        _2840 = _2273;
        _2842 = _2275;
        _2844 = _2619;
        _2846 = _2621;
        _2848 = _2623;
    }
    uint _2854 = _1042 + uint(cbMatDynParam._m0[0u].w);
    float _2860 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _2866 = (((((_2860 * cbMtdParam._m0[14u].x) * _773.x) * _796) * _870) * (((1.0 - _849) * cbMtdParam._m0[20u].w) + _849)) * cbInstanceData._m0[_2854].x;
    float _2872 = (((((_2860 * cbMtdParam._m0[14u].y) * _773.y) * _796) * _870) * (((1.0 - _851) * cbMtdParam._m0[20u].w) + _851)) * cbInstanceData._m0[_2854].y;
    float _2878 = (((((_2860 * cbMtdParam._m0[14u].z) * _773.z) * _796) * _870) * (((1.0 - _853) * cbMtdParam._m0[20u].w) + _853)) * cbInstanceData._m0[_2854].z;
    float _4811 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
    float _4822 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
    float _4833 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
    float _2895 = (((isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0))) * (_2838 + ((isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0))) * _1081))) + ((_2844 + ((isnan(0.0) ? _2103 : (isnan(_2103) ? 0.0 : max(_2103, 0.0))) * _1890)) * cbPerFrame._m0[3u].x)) + _2866;
    float _2897 = (_2872 + ((_2846 + ((isnan(0.0) ? _2106 : (isnan(_2106) ? 0.0 : max(_2106, 0.0))) * _1890)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0))) * (_2840 + ((isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0))) * _1081)));
    float _2899 = (_2878 + ((_2848 + ((isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0))) * _1890)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0))) * (_2842 + ((isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0))) * _1081)));
    float _4859 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2912 = isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0));
    uint _2913 = _1041 + 6u;
    float _2921 = _1003 / cbSceneParam._m0[86u].x;
    float _2922 = _1004 / cbSceneParam._m0[86u].y;
    vec4 _2936 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2921, _2922, (log2((isnan(cbSceneParam._m0[77u].w) ? _938 : (isnan(_938) ? cbSceneParam._m0[77u].w : min(_938, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2938 = _2936.x;
    float _2939 = _2936.y;
    float _2940 = _2936.z;
    float _2941 = _2936.w;
    float _3033;
    float _3035;
    float _3037;
    float _3039;
    if (_938 > cbSceneParam._m0[78u].w)
    {
        float _2996 = isnan(_938) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _938 : min(cbSceneParam._m0[80u].w, _938));
        float _2997 = _2996 / _938;
        float _3008 = _2997 * _988;
        float _3009 = _989 * _2997;
        float _3010 = (-0.0) - _3009;
        float _3011 = _2997 * _990;
        float _3013 = (cbSceneParam._m0[77u].w * _3010) / _2996;
        float _3014 = _3013 + cbSceneParam._m0[79u].w;
        float _3015 = cbSceneParam._m0[79u].w - _3009;
        float _3021 = sqrt(((_3008 * _3008) + (_3009 * _3009)) + (_3011 * _3011));
        float _3024 = (1.0 - (cbSceneParam._m0[77u].w / _2996)) * _3021;
        float _3029 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3031 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3193;
        if (abs((_3010 - _3013) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3193 = ((((_3014 > 0.0) ? exp2(_3029 * _3014) : (2.0 - exp2(_3031 * _3014))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3024;
        }
        else
        {
            float _3153 = 1.0 / cbSceneParam._m0[80u].x;
            float _3154 = isnan(_3015) ? _3014 : (isnan(_3014) ? _3015 : max(_3014, _3015));
            float _3155 = isnan(_3015) ? _3014 : (isnan(_3014) ? _3015 : min(_3014, _3015));
            float _3164 = isnan(0.0) ? _3154 : (isnan(_3154) ? 0.0 : min(_3154, 0.0));
            float _3165 = isnan(0.0) ? _3155 : (isnan(_3155) ? 0.0 : min(_3155, 0.0));
            _3193 = ((abs(_3021 / _3010) * cbSceneParam._m0[80u].y) * ((((_3164 - _3165) * 2.0) - ((exp2(_3029 * (isnan(0.0) ? _3154 : (isnan(_3154) ? 0.0 : max(_3154, 0.0)))) - exp2(_3029 * (isnan(0.0) ? _3155 : (isnan(_3155) ? 0.0 : max(_3155, 0.0))))) * _3153)) - ((exp2(_3031 * _3164) - exp2(_3031 * _3165)) * _3153))) + (_3024 * cbSceneParam._m0[80u].z);
        }
        vec4 _3195 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2921, _2922, 1.0), 0.0);
        float _3204 = exp2((_3193 * (-1.44269502162933349609375)) * (1.0 - _3195.w));
        float _3205 = log2(_3204);
        float _3221 = log2(_2941);
        _3033 = (exp2(_3221 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3205 * cbSceneParam._m0[78u].x)) * _3195.x) / cbSceneParam._m0[78u].x)) + _2938;
        _3035 = (exp2(_3221 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3205 * cbSceneParam._m0[78u].y)) * _3195.y) / cbSceneParam._m0[78u].y)) + _2939;
        _3037 = (exp2(_3221 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3205 * cbSceneParam._m0[78u].z)) * _3195.z) / cbSceneParam._m0[78u].z)) + _2940;
        _3039 = _3204 * _2941;
    }
    else
    {
        _3033 = _2938;
        _3035 = _2939;
        _3037 = _2940;
        _3039 = _2941;
    }
    float _3051 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3052 = _3051 == 3.0;
    float _3053 = log2(_3039);
    float _3057 = exp2(_3053 * cbSceneParam._m0[78u].x);
    float _3058 = exp2(_3053 * cbSceneParam._m0[78u].y);
    float _3059 = exp2(_3053 * cbSceneParam._m0[78u].z);
    float _3060 = _3057 * (isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0)));
    float _3061 = _3058 * (isnan(0.0) ? _2897 : (isnan(_2897) ? 0.0 : max(_2897, 0.0)));
    float _3062 = _3059 * (isnan(0.0) ? _2899 : (isnan(_2899) ? 0.0 : max(_2899, 0.0)));
    float _3071 = (_3051 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3071 * (_3052 ? _3060 : (_3060 + (cbSceneParam._m0[72u].w * _3033)));
    SV_Target.y = _3071 * (_3052 ? _3061 : (_3061 + (cbSceneParam._m0[72u].w * _3035)));
    SV_Target.z = _3071 * (_3052 ? _3062 : (_3062 + (cbSceneParam._m0[72u].w * _3037)));
    SV_Target.w = cbInstanceData._m0[_2913].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2866) * _2912) * _3057) * _3071;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2872) * _2912) * _3058) * _3071;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2878) * _2912) * _3059) * _3071;
    SV_Target_1.w = cbInstanceData._m0[_2913].w;
}


