#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_7;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1418;
float _4136;
float _4137;
float _4138;
float _4139;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _228 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _229 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _230 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _236 = inversesqrt(dot(vec3(_228, _229, _230), vec3(_228, _229, _230)));
    float _243 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _272 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _278 = _272.x * cbMtdParam._m0[10u].x;
    float _279 = _272.y * cbMtdParam._m0[10u].y;
    float _280 = _272.z * cbMtdParam._m0[10u].z;
    vec4 _299 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _318 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _346 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w)).x;
    float _356 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _318.x) * 2.0) - _346)) + 1.0;
    float _4148 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _357 = isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0));
    float _364 = (_357 * ((_299.x * cbMtdParam._m0[11u].x) - _278)) + _278;
    float _365 = (_357 * ((_299.y * cbMtdParam._m0[11u].y) - _279)) + _279;
    float _366 = (_357 * ((_299.z * cbMtdParam._m0[11u].z) - _280)) + _280;
    vec4 _384 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _397 = (((((1.0 - _318.y) * 2.0) - _346) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _4159 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    float _398 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
    float _405 = (((_384.x * cbMtdParam._m0[12u].x) - _364) * _398) + _364;
    float _406 = (_398 * ((_384.y * cbMtdParam._m0[12u].y) - _365)) + _365;
    float _407 = (_398 * ((_384.z * cbMtdParam._m0[12u].z) - _366)) + _366;
    vec4 _425 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _438 = (((((1.0 - _318.z) * 2.0) - _346) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _4170 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _439 = isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0));
    vec4 _467 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _475 = ((((((_425.x * cbMtdParam._m0[13u].x) - _405) * _439) + _405) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _467.x;
    float _478 = ((((_439 * ((_425.y * cbMtdParam._m0[13u].y) - _406)) + _406) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _467.y;
    float _481 = ((((_439 * ((_425.z * cbMtdParam._m0[13u].z) - _407)) + _407) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _467.z;
    vec4 _494 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.z) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.w) + cbTextureTilingScale._m0[20u].w));
    vec4 _509 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _511 = _509.x;
    float _528 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _511) * _357) + _511;
    float _545 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _528) * _398) + _528;
    float _562 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x - _545) * _439) + _545;
    vec4 _575 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _577 = _575.x;
    float _578 = _575.y;
    float _579 = _575.z;
    vec4 _591 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _602 = ((_591.x - _577) * _357) + _577;
    float _603 = ((_591.y - _578) * _357) + _578;
    float _604 = ((_591.z - _579) * _357) + _579;
    vec4 _617 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _628 = ((_617.x - _602) * _398) + _602;
    float _629 = ((_617.y - _603) * _398) + _603;
    float _630 = ((_617.z - _604) * _398) + _604;
    vec4 _643 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _656 = ((_643.z - _630) * _439) + _630;
    float _659 = ((((_643.x - _628) * _439) + _628) * 2.0) + (-1.0);
    float _661 = ((((_643.y - _629) * _439) + _629) * 2.0) + (-1.0);
    float _662 = dot(vec2(_659, _661), vec2(_659, _661));
    float _4181 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
    float _667 = sqrt(1.0 - (isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0))));
    vec4 _699 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[15u].x) + cbTextureTilingScale._m0[15u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[15u].y) + cbTextureTilingScale._m0[15u].w));
    float _713 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4192 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
    float _714 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
    float _722 = (((_714 * _714) * (3.0 - (_714 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _730 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _738 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4203 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _739 = isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0));
    float _743 = (_739 * _739) * (3.0 - (_739 * 2.0));
    float _744 = _743 * cbMtdParam._m0[22u].x;
    float _745 = _743 * cbMtdParam._m0[22u].y;
    float _746 = sin(_730);
    float _747 = cos(_730);
    float _748 = TEXCOORD.z - _744;
    float _749 = TEXCOORD.w - _745;
    vec4 _769 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_744 + fma(_749, (-0.0) - _746, _748 * _747))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_749, _747, _748 * _746) + _745)) + cbTextureTilingScale._m0[2u].w));
    float _775 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _769.x;
    float _777 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _769.y;
    float _779 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _769.z;
    float _799 = (TEXCOORD_5.x - (((_494.x + 0.00999999977648258209228515625) * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _4214 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _800 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
    vec4 _813 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _823 = (((_813.x * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z) + _659;
    float _824 = (((_813.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z) + _661;
    float _827 = fma(_667, _243 * NORMAL.x, fma(_824, _250 * TANGENT.x, (_236 * _228) * _823));
    float _830 = fma(_667, _243 * NORMAL.y, fma(_824, _250 * TANGENT.y, (_236 * _229) * _823));
    float _833 = fma(_667, _243 * NORMAL.z, fma(_824, _250 * TANGENT.z, (_236 * _230) * _823));
    float _837 = inversesqrt(dot(vec3(_827, _830, _833), vec3(_827, _830, _833)));
    float _838 = _837 * _827;
    float _839 = _837 * _830;
    float _840 = _837 * _833;
    float _4225 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _841 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
    float _4236 = isnan(0.0) ? _475 : (isnan(_475) ? 0.0 : max(_475, 0.0));
    float _4247 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _4258 = isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0));
    float _4269 = isnan(0.0) ? _562 : (isnan(_562) ? 0.0 : max(_562, 0.0));
    float _845 = isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0));
    float _861 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _901 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _911 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _901);
    float _912 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _901);
    float _913 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _901);
    float _917 = inversesqrt(dot(vec3(_911, _912, _913), vec3(_911, _912, _913)));
    float _918 = _911 * _917;
    float _919 = _912 * _917;
    float _920 = _913 * _917;
    vec4 _925 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _927 = _925.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1098 = sqrt(((_911 * _911) + (_912 * _912)) + (_913 * _913));
        float _1104 = (cbMatDynParam._m0[5u].x * _1098) + cbMatDynParam._m0[5u].y;
        float _4280 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
        float _1105 = isnan(1.0) ? _4280 : (isnan(_4280) ? 1.0 : min(_4280, 1.0));
        float _1109 = (cbMatDynParam._m0[5u].z * _1098) + cbMatDynParam._m0[5u].w;
        float _4291 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0))) - _1105)) + _1105) < ((_927 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _938 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _939 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _957 = fma(_840, cbSceneParam._m0[5u].z, fma(_839, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _838));
    float _960 = fma(_840, cbSceneParam._m0[6u].z, fma(_839, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _838));
    float _963 = fma(_840, cbSceneParam._m0[7u].z, fma(_839, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _838));
    uint _976 = uint(roundEven(NORMAL.w)) * 13u;
    uint _977 = _976 + 9u;
    uint _978 = _977 + uint(cbMatDynParam._m0[0u].w);
    float _984 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0)))) * cbInstanceData._m0[_978].x;
    float _985 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0)))) * cbInstanceData._m0[_978].y;
    float _986 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0)))) * cbInstanceData._m0[_978].z;
    float _4302 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _987 = isnan(1.0) ? _4302 : (isnan(_4302) ? 1.0 : min(_4302, 1.0));
    float _4313 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
    float _988 = isnan(1.0) ? _4313 : (isnan(_4313) ? 1.0 : min(_4313, 1.0));
    float _4324 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
    float _989 = isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0));
    float _990 = 1.0 - _845;
    float _991 = _987 * _990;
    float _992 = _988 * _990;
    float _993 = _989 * _990;
    float _998 = (_987 + (-0.039999999105930328369140625)) * _845;
    float _999 = (_988 + (-0.039999999105930328369140625)) * _845;
    float _1000 = (_989 + (-0.039999999105930328369140625)) * _845;
    float _1001 = _998 + 0.039999999105930328369140625;
    float _1003 = _999 + 0.039999999105930328369140625;
    float _1004 = _1000 + 0.039999999105930328369140625;
    vec4 _1013 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _938, cbSceneParam._m0[86u].y * _939));
    float _1016 = _1013.x * TEXCOORD_5.w;
    float _1017 = dot(vec3(_838, _839, _840), vec3(_918, _919, _920));
    float _1020 = _1017 * 2.0;
    float _1024 = (_1020 * _838) - _918;
    float _1025 = (_1020 * _839) - _919;
    float _1026 = (_1020 * _840) - _920;
    float _1030 = abs(dot(vec3(_918, _919, _920), vec3(_838, _839, _840)));
    float _4335 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
    float _1032 = sqrt(_841);
    float _1044 = exp2((_1032 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1032 * 3.0));
    float _1050 = (1.0 - _1044) * ((_1032 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1051 = _1044 * _1032;
    float _1079 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1083 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1087 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1417;
    float _1419;
    float _1420;
    float _1421;
    float _1422;
    float _1423;
    float _1424;
    float _1425;
    float _1426;
    float _1427;
    float _1428;
    float _1429;
    float _1430;
    float _1431;
    float _1432;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1142 = fma(_1087, cbModelParam._m0[26u].z, fma(_1083, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1079));
        float _1146 = fma(_1087, cbModelParam._m0[27u].z, fma(_1083, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1079));
        float _1150 = fma(_1087, cbModelParam._m0[28u].z, fma(_1083, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1079));
        float _1175 = _1079 + _838;
        float _1176 = _1083 + _839;
        float _1177 = _1087 + _840;
        float _1187 = fma(_1177, cbModelParam._m0[26u].z, fma(_1176, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1175)) - _1142;
        float _1188 = fma(_1177, cbModelParam._m0[27u].z, fma(_1176, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1175)) - _1146;
        float _1189 = fma(_1177, cbModelParam._m0[28u].z, fma(_1176, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1175)) - _1150;
        float _1193 = inversesqrt(dot(vec3(_1187, _1188, _1189), vec3(_1187, _1188, _1189)));
        float _1206 = ((_1193 * _1187) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1142 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1207 = ((_1193 * _1188) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1146 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1208 = ((_1193 * _1189) / cbModelParam._m0[34u].z) + ((((((_1150 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1211 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1206, _1207, _1208), 0.0);
        vec4 _1218 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1206, _1207, _1208), 0.0);
        vec4 _1225 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1206, _1207, _1208), 0.0);
        vec4 _1232 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1206, _1207, _1208), 0.0);
        float _1245 = exp2((_1211.w + (-0.5)) * 20.0) * 2.0;
        float _1246 = _1245 * (_1211.x + (-0.5));
        float _1247 = _1245 * (_1211.y + (-0.5));
        float _1248 = _1245 * (_1211.z + (-0.5));
        float _1255 = exp2((_1218.w + (-0.5)) * 20.0) * 2.0;
        float _1256 = _1255 * (_1218.x + (-0.5));
        float _1257 = _1255 * (_1218.y + (-0.5));
        float _1258 = _1255 * (_1218.z + (-0.5));
        float _1265 = exp2((_1225.w + (-0.5)) * 20.0) * 2.0;
        float _1266 = _1265 * (_1225.x + (-0.5));
        float _1267 = _1265 * (_1225.y + (-0.5));
        float _1268 = _1265 * (_1225.z + (-0.5));
        float _1275 = exp2((_1232.w + (-0.5)) * 20.0) * 2.0;
        float _1276 = _1275 * (_1232.x + (-0.5));
        float _1277 = _1275 * (_1232.y + (-0.5));
        float _1278 = _1275 * (_1232.z + (-0.5));
        float _1279 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1280 = isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0));
        float _1281 = isnan(0.0) ? _1278 : (isnan(_1278) ? 0.0 : max(_1278, 0.0));
        float _1282 = _1246 * 0.5;
        float _1283 = _1256 * 0.5;
        float _1284 = _1266 * 0.5;
        float _1285 = dot(vec3(_1282, _1283, _1284), vec3(_1282, _1283, _1284));
        float _1290 = (_1285 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1285);
        float _1299 = (dot(vec3(_838, _839, _840), vec3(_1290 * _1282, _1290 * _1283, _1290 * _1284)) + 1.0) * 0.5;
        float _4361 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1309 = sqrt(((_1283 * _1283) + (_1282 * _1282)) + (_1284 * _1284)) / (_1279 + 9.9999997473787516355514526367188e-06);
        float _4372 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
        float _1310 = isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0));
        float _1311 = _1310 * 2.0;
        float _1315 = (1.0 - _1310) / (_1310 + 1.0);
        float _4383 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1316 = isnan(1.0) ? _4383 : (isnan(_4383) ? 1.0 : min(_4383, 1.0));
        float _1325 = ((((1.0 - _1316) * (_1311 + 2.0)) * exp2(log2(isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0))) * (_1311 + 1.0))) + _1316) * _1279;
        float _1326 = _1247 * 0.5;
        float _1327 = _1257 * 0.5;
        float _1328 = _1267 * 0.5;
        float _1329 = dot(vec3(_1326, _1327, _1328), vec3(_1326, _1327, _1328));
        float _1334 = (_1329 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1329);
        float _1342 = (dot(vec3(_838, _839, _840), vec3(_1334 * _1326, _1334 * _1327, _1334 * _1328)) + 1.0) * 0.5;
        float _4394 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1351 = sqrt(((_1327 * _1327) + (_1326 * _1326)) + (_1328 * _1328)) / (_1280 + 9.9999997473787516355514526367188e-06);
        float _4405 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1352 = isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0));
        float _1353 = _1352 * 2.0;
        float _1357 = (1.0 - _1352) / (_1352 + 1.0);
        float _4416 = isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0));
        float _1358 = isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0));
        float _1367 = ((((1.0 - _1358) * (_1353 + 2.0)) * exp2(log2(isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0))) * (_1353 + 1.0))) + _1358) * _1280;
        float _1368 = _1248 * 0.5;
        float _1369 = _1258 * 0.5;
        float _1370 = _1268 * 0.5;
        float _1371 = dot(vec3(_1368, _1369, _1370), vec3(_1368, _1369, _1370));
        float _1376 = (_1371 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1371);
        float _1384 = (dot(vec3(_838, _839, _840), vec3(_1376 * _1368, _1376 * _1369, _1376 * _1370)) + 1.0) * 0.5;
        float _4427 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
        float _1393 = sqrt(((_1369 * _1369) + (_1368 * _1368)) + (_1370 * _1370)) / (_1281 + 9.9999997473787516355514526367188e-06);
        float _4438 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
        float _1394 = isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0));
        float _1395 = _1394 * 2.0;
        float _1399 = (1.0 - _1394) / (_1394 + 1.0);
        float _4449 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1400 = isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0));
        float _1409 = ((((1.0 - _1400) * (_1395 + 2.0)) * exp2(log2(isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0))) * (_1395 + 1.0))) + _1400) * _1281;
        _1417 = _1248;
        _1419 = _1247;
        _1420 = _1246;
        _1421 = _1258;
        _1422 = _1257;
        _1423 = _1256;
        _1424 = _1268;
        _1425 = _1267;
        _1426 = _1266;
        _1427 = _1281;
        _1428 = _1280;
        _1429 = _1279;
        _1430 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0)));
        _1431 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1367 : (isnan(_1367) ? 0.0 : max(_1367, 0.0)));
        _1432 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1409 : (isnan(_1409) ? 0.0 : max(_1409, 0.0)));
    }
    else
    {
        _1417 = _1418;
        _1419 = _1418;
        _1420 = _1418;
        _1421 = _1418;
        _1422 = _1418;
        _1423 = _1418;
        _1424 = _1418;
        _1425 = _1418;
        _1426 = _1418;
        _1427 = _1418;
        _1428 = _1418;
        _1429 = _1418;
        _1430 = 0.0;
        _1431 = 0.0;
        _1432 = 0.0;
    }
    float _1730;
    float _1731;
    float _1732;
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    float _1738;
    float _1739;
    float _1740;
    float _1741;
    float _1742;
    float _1743;
    float _1744;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1461 = fma(_1087, cbModelParam._m0[30u].z, fma(_1083, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1079));
        float _1465 = fma(_1087, cbModelParam._m0[31u].z, fma(_1083, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1079));
        float _1469 = fma(_1087, cbModelParam._m0[32u].z, fma(_1083, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1079));
        float _1492 = _1079 + _838;
        float _1493 = _1083 + _839;
        float _1494 = _1087 + _840;
        float _1504 = fma(_1494, cbModelParam._m0[30u].z, fma(_1493, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1492)) - _1461;
        float _1505 = fma(_1494, cbModelParam._m0[31u].z, fma(_1493, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1492)) - _1465;
        float _1506 = fma(_1494, cbModelParam._m0[32u].z, fma(_1493, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1492)) - _1469;
        float _1510 = inversesqrt(dot(vec3(_1504, _1505, _1506), vec3(_1504, _1505, _1506)));
        float _1523 = ((_1510 * _1504) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1461 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1524 = ((_1510 * _1505) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1465 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1525 = ((_1510 * _1506) / cbModelParam._m0[35u].z) + ((((((_1469 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1527 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1523, _1524, _1525), 0.0);
        vec4 _1534 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1523, _1524, _1525), 0.0);
        vec4 _1541 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1523, _1524, _1525), 0.0);
        vec4 _1548 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1523, _1524, _1525), 0.0);
        float _1560 = exp2((_1527.w + (-0.5)) * 20.0) * 2.0;
        float _1561 = _1560 * (_1527.x + (-0.5));
        float _1562 = _1560 * (_1527.y + (-0.5));
        float _1563 = _1560 * (_1527.z + (-0.5));
        float _1570 = exp2((_1534.w + (-0.5)) * 20.0) * 2.0;
        float _1571 = _1570 * (_1534.x + (-0.5));
        float _1572 = _1570 * (_1534.y + (-0.5));
        float _1573 = _1570 * (_1534.z + (-0.5));
        float _1580 = exp2((_1541.w + (-0.5)) * 20.0) * 2.0;
        float _1581 = _1580 * (_1541.x + (-0.5));
        float _1582 = _1580 * (_1541.y + (-0.5));
        float _1583 = _1580 * (_1541.z + (-0.5));
        float _1590 = exp2((_1548.w + (-0.5)) * 20.0) * 2.0;
        float _1591 = _1590 * (_1548.x + (-0.5));
        float _1592 = _1590 * (_1548.y + (-0.5));
        float _1593 = _1590 * (_1548.z + (-0.5));
        float _1594 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1595 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
        float _1596 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
        float _1597 = _1561 * 0.5;
        float _1598 = _1571 * 0.5;
        float _1599 = _1581 * 0.5;
        float _1600 = dot(vec3(_1597, _1598, _1599), vec3(_1597, _1598, _1599));
        float _1605 = (_1600 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1600);
        float _1613 = (dot(vec3(_838, _839, _840), vec3(_1605 * _1597, _1605 * _1598, _1605 * _1599)) + 1.0) * 0.5;
        float _4490 = isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0));
        float _1622 = sqrt(((_1598 * _1598) + (_1597 * _1597)) + (_1599 * _1599)) / (_1594 + 9.9999997473787516355514526367188e-06);
        float _4501 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1623 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
        float _1624 = _1623 * 2.0;
        float _1628 = (1.0 - _1623) / (_1623 + 1.0);
        float _4512 = isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0));
        float _1629 = isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0));
        float _1638 = ((((1.0 - _1629) * (_1624 + 2.0)) * exp2(log2(isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0))) * (_1624 + 1.0))) + _1629) * _1594;
        float _1639 = _1562 * 0.5;
        float _1640 = _1572 * 0.5;
        float _1641 = _1582 * 0.5;
        float _1642 = dot(vec3(_1639, _1640, _1641), vec3(_1639, _1640, _1641));
        float _1647 = (_1642 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1642);
        float _1655 = (dot(vec3(_838, _839, _840), vec3(_1647 * _1639, _1647 * _1640, _1647 * _1641)) + 1.0) * 0.5;
        float _4523 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
        float _1664 = sqrt(((_1640 * _1640) + (_1639 * _1639)) + (_1641 * _1641)) / (_1595 + 9.9999997473787516355514526367188e-06);
        float _4534 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
        float _1665 = isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0));
        float _1666 = _1665 * 2.0;
        float _1670 = (1.0 - _1665) / (_1665 + 1.0);
        float _4545 = isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0));
        float _1671 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
        float _1680 = ((((1.0 - _1671) * (_1666 + 2.0)) * exp2(log2(isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0))) * (_1666 + 1.0))) + _1671) * _1595;
        float _1681 = _1563 * 0.5;
        float _1682 = _1573 * 0.5;
        float _1683 = _1583 * 0.5;
        float _1684 = dot(vec3(_1681, _1682, _1683), vec3(_1681, _1682, _1683));
        float _1689 = (_1684 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1684);
        float _1697 = (dot(vec3(_838, _839, _840), vec3(_1689 * _1681, _1689 * _1682, _1689 * _1683)) + 1.0) * 0.5;
        float _4556 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
        float _1706 = sqrt(((_1682 * _1682) + (_1681 * _1681)) + (_1683 * _1683)) / (_1596 + 9.9999997473787516355514526367188e-06);
        float _4567 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
        float _1707 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
        float _1708 = _1707 * 2.0;
        float _1712 = (1.0 - _1707) / (_1707 + 1.0);
        float _4578 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
        float _1713 = isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0));
        float _1722 = ((((1.0 - _1713) * (_1708 + 2.0)) * exp2(log2(isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0))) * (_1708 + 1.0))) + _1713) * _1596;
        _1730 = _1563;
        _1731 = _1562;
        _1732 = _1561;
        _1733 = _1573;
        _1734 = _1572;
        _1735 = _1571;
        _1736 = _1583;
        _1737 = _1582;
        _1738 = _1581;
        _1739 = _1596;
        _1740 = _1595;
        _1741 = _1594;
        _1742 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0)));
        _1743 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0)));
        _1744 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0)));
    }
    else
    {
        _1730 = _1418;
        _1731 = _1418;
        _1732 = _1418;
        _1733 = _1418;
        _1734 = _1418;
        _1735 = _1418;
        _1736 = _1418;
        _1737 = _1418;
        _1738 = _1418;
        _1739 = _1418;
        _1740 = _1418;
        _1741 = _1418;
        _1742 = 0.0;
        _1743 = 0.0;
        _1744 = 0.0;
    }
    float _1754 = (cbModelParam._m0[1u].x * (_1742 - _1430)) + _1430;
    float _1755 = (cbModelParam._m0[1u].x * (_1743 - _1431)) + _1431;
    float _1756 = (cbModelParam._m0[1u].x * (_1744 - _1432)) + _1432;
    float _1777 = fma(_1756, cbSceneParam._m0[89u].z, fma(_1755, cbSceneParam._m0[89u].y, _1754 * cbSceneParam._m0[89u].x));
    float _1780 = fma(_1756, cbSceneParam._m0[90u].z, fma(_1755, cbSceneParam._m0[90u].y, _1754 * cbSceneParam._m0[90u].x));
    float _1783 = fma(_1756, cbSceneParam._m0[91u].z, fma(_1755, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1754));
    float _1798 = _1024 * 0.5;
    float _1799 = _1025 * 0.5;
    float _1800 = _1026 * 0.5;
    float _1801 = dot(vec4(_1798, _1799, _1800, 1.0), vec4(_1732, _1735, _1738, _1741));
    float _1804 = dot(vec4(_1798, _1799, _1800, 1.0), vec4(_1731, _1734, _1737, _1740));
    float _1807 = dot(vec4(_1798, _1799, _1800, 1.0), vec4(_1730, _1733, _1736, _1739));
    float _1841;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1814 = dot(vec4(_1798, _1799, _1800, 1.0), vec4(_1417, _1421, _1424, _1427));
        float _1818 = dot(vec4(_1798, _1799, _1800, 1.0), vec4(_1419, _1422, _1425, _1428));
        float _1822 = dot(vec4(_1798, _1799, _1800, 1.0), vec4(_1420, _1423, _1426, _1429));
        float _1829 = dot(vec4(cbModelParam._m0[39u]), vec4(_1798, _1799, _1800, 1.0));
        _1841 = dot(vec3(isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0)), isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0)), isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1829) ? 0.0 : (isnan(0.0) ? _1829 : max(0.0, _1829))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1841 = 1.0;
    }
    float _1852;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1843 = dot(vec4(cbModelParam._m0[40u]), vec4(_1798, _1799, _1800, 1.0));
        _1852 = dot(vec3(isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0)), isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0)), isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1843) ? 0.0 : (isnan(0.0) ? _1843 : max(0.0, _1843))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1852 = 1.0;
    }
    float _1856 = (_1852 * cbModelParam._m0[1u].x) + (_1841 * (1.0 - cbModelParam._m0[1u].x));
    float _1866 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _841);
    float _1867 = isnan(_1866) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1866 : min(cbModelParam._m0[25u].z, _1866));
    float _1947;
    float _1949;
    float _1951;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1914 = fma(_1087, cbModelParam._m0[13u].z, fma(_1083, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1079)) + cbModelParam._m0[13u].w;
        float _1918 = fma(_1087, cbModelParam._m0[14u].z, fma(_1083, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1079)) + cbModelParam._m0[14u].w;
        float _1922 = fma(_1087, cbModelParam._m0[15u].z, fma(_1083, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1079)) + cbModelParam._m0[15u].w;
        float _1925 = fma(_1026, cbModelParam._m0[13u].z, fma(_1025, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1024));
        float _1928 = fma(_1026, cbModelParam._m0[14u].z, fma(_1025, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1024));
        float _1931 = fma(_1026, cbModelParam._m0[15u].z, fma(_1025, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1024));
        float _1959;
        if (_1925 > 0.0)
        {
            _1959 = abs((1.0 - _1914) / _1925);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1925 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1914 + 1.0) / _1925);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1959 = frontier_phi_17_15_ladder;
        }
        float _2130;
        if (_1928 > 0.0)
        {
            _2130 = abs((1.0 - _1918) / _1928);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1928 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1918 + 1.0) / _1928);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2130 = frontier_phi_26_22_ladder;
        }
        float _2426;
        if (_1931 > 0.0)
        {
            _2426 = abs((1.0 - _1922) / _1931);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1931 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1922 + 1.0) / _1931);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2426 = frontier_phi_38_33_ladder;
        }
        float _2428 = isnan(_2130) ? _1959 : (isnan(_1959) ? _2130 : min(_1959, _2130));
        float _2429 = isnan(_2426) ? _2428 : (isnan(_2428) ? _2426 : min(_2428, _2426));
        float _2433 = (_2429 * _1925) + _1914;
        float _2434 = (_2429 * _1928) + _1918;
        float _2435 = (_2429 * _1931) + _1922;
        float _2436 = _2429 * 9.9999997473787516355514526367188e-05;
        float _2438 = (-1.0) - _2436;
        float _2440 = _2436 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2435 > _2440) || ((_2435 < _2438) || ((_2434 > _2440) || ((_2434 < _2438) || ((_2433 < _2438) || (_2433 > _2440))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2580 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2435, cbModelParam._m0[9u].z, fma(_2434, cbModelParam._m0[9u].y, _2433 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2435, cbModelParam._m0[10u].z, fma(_2434, cbModelParam._m0[10u].y, _2433 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2435, cbModelParam._m0[11u].z, fma(_2434, cbModelParam._m0[11u].y, _2433 * cbModelParam._m0[11u].x))), _1867);
            frontier_phi_16_38_ladder = _2580.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2580.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2580.x * cbModelParam._m0[1u].y;
        }
        _1947 = frontier_phi_16_38_ladder_2;
        _1949 = frontier_phi_16_38_ladder_1;
        _1951 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1935 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1024, _1025, _1026), _1867);
        _1947 = _1935.x * cbModelParam._m0[1u].y;
        _1949 = _1935.y * cbModelParam._m0[1u].y;
        _1951 = _1935.z * cbModelParam._m0[1u].y;
    }
    float _1955 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _841);
    float _1956 = isnan(_1955) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1955 : min(cbModelParam._m0[25u].w, _1955));
    float _2045;
    float _2047;
    float _2049;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2009 = fma(_1087, cbModelParam._m0[21u].z, fma(_1083, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1079)) + cbModelParam._m0[21u].w;
        float _2013 = fma(_1087, cbModelParam._m0[22u].z, fma(_1083, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1079)) + cbModelParam._m0[22u].w;
        float _2017 = fma(_1087, cbModelParam._m0[23u].z, fma(_1083, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1079)) + cbModelParam._m0[23u].w;
        float _2020 = fma(_1026, cbModelParam._m0[21u].z, fma(_1025, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1024));
        float _2023 = fma(_1026, cbModelParam._m0[22u].z, fma(_1025, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1024));
        float _2026 = fma(_1026, cbModelParam._m0[23u].z, fma(_1025, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1024));
        float _2135;
        if (_2020 > 0.0)
        {
            _2135 = abs((1.0 - _2009) / _2020);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2020 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2009 + 1.0) / _2020);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2135 = frontier_phi_28_24_ladder;
        }
        float _2453;
        if (_2023 > 0.0)
        {
            _2453 = abs((1.0 - _2013) / _2023);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2023 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2013 + 1.0) / _2023);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2453 = frontier_phi_40_35_ladder;
        }
        float _2791;
        if (_2026 > 0.0)
        {
            _2791 = abs((1.0 - _2017) / _2026);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2026 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2017 + 1.0) / _2026);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2791 = frontier_phi_50_47_ladder;
        }
        float _2793 = isnan(_2453) ? _2135 : (isnan(_2135) ? _2453 : min(_2135, _2453));
        float _2794 = isnan(_2791) ? _2793 : (isnan(_2793) ? _2791 : min(_2793, _2791));
        float _2798 = (_2794 * _2020) + _2009;
        float _2799 = (_2794 * _2023) + _2013;
        float _2800 = (_2794 * _2026) + _2017;
        float _2801 = _2794 * 9.9999997473787516355514526367188e-05;
        float _2802 = (-1.0) - _2801;
        float _2804 = _2801 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2800 > _2804) || ((_2800 < _2802) || ((_2799 > _2804) || ((_2799 < _2802) || ((_2798 < _2802) || (_2798 > _2804))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2922 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2800, cbModelParam._m0[17u].z, fma(_2799, cbModelParam._m0[17u].y, _2798 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2800, cbModelParam._m0[18u].z, fma(_2799, cbModelParam._m0[18u].y, _2798 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2800, cbModelParam._m0[19u].z, fma(_2799, cbModelParam._m0[19u].y, _2798 * cbModelParam._m0[19u].x))), _1956);
            frontier_phi_25_50_ladder = _2922.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2922.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2922.x * cbModelParam._m0[1u].z;
        }
        _2045 = frontier_phi_25_50_ladder_2;
        _2047 = frontier_phi_25_50_ladder_1;
        _2049 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2029 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1024, _1025, _1026), _1956);
        _2045 = _2029.x * cbModelParam._m0[1u].z;
        _2047 = _2029.y * cbModelParam._m0[1u].z;
        _2049 = _2029.z * cbModelParam._m0[1u].z;
    }
    float _2062 = (((_1050 * _1001) + _1051) * _1016) * ((cbModelParam._m0[1u].w * (_2045 - _1947)) + _1947);
    float _2064 = (((_1050 * _1003) + _1051) * _1016) * ((cbModelParam._m0[1u].w * (_2047 - _1949)) + _1949);
    float _2066 = (((_1050 * _1004) + _1051) * _1016) * ((cbModelParam._m0[1u].w * (_2049 - _1951)) + _1951);
    float _2069 = fma(_2066, cbSceneParam._m0[89u].z, fma(_2064, cbSceneParam._m0[89u].y, _2062 * cbSceneParam._m0[89u].x));
    float _2072 = fma(_2066, cbSceneParam._m0[90u].z, fma(_2064, cbSceneParam._m0[90u].y, _2062 * cbSceneParam._m0[90u].x));
    float _2075 = fma(_2066, cbSceneParam._m0[91u].z, fma(_2064, cbSceneParam._m0[91u].y, _2062 * cbSceneParam._m0[91u].x));
    float _2109 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2113 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2117 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2121 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2122 = _2109 / _2121;
    float _2123 = _2113 / _2121;
    float _2124 = _2117 / _2121;
    float _2271;
    float _2272;
    float _2273;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2151 = ((uint(_2124 > cbSceneParam._m0[59u].y) + uint(_2124 > cbSceneParam._m0[59u].x)) + uint(_2124 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2152 = _2151 + 43u;
        uint _2160 = _2151 + 44u;
        uint _2168 = _2151 + 45u;
        uint _2176 = _2151 + 46u;
        float _2187 = fma(_2121, cbSceneParam._m0[_2152].w, fma(_2117, cbSceneParam._m0[_2152].z, fma(_2113, cbSceneParam._m0[_2152].y, _2109 * cbSceneParam._m0[_2152].x)));
        float _2191 = fma(_2121, cbSceneParam._m0[_2160].w, fma(_2117, cbSceneParam._m0[_2160].z, fma(_2113, cbSceneParam._m0[_2160].y, _2109 * cbSceneParam._m0[_2160].x)));
        float _2199 = fma(_2121, cbSceneParam._m0[_2176].w, fma(_2117, cbSceneParam._m0[_2176].z, fma(_2113, cbSceneParam._m0[_2176].y, _2109 * cbSceneParam._m0[_2176].x)));
        float _2204 = cbSceneParam._m0[33u].z * _2199;
        float _2206 = cbSceneParam._m0[33u].w * _2199;
        float _2209 = fma(_2121, cbSceneParam._m0[_2168].w, fma(_2117, cbSceneParam._m0[_2168].z, fma(_2113, cbSceneParam._m0[_2168].y, _2109 * cbSceneParam._m0[_2168].x))) / _2199;
        float _2257 = (cbSceneParam._m0[33u].x - sqrt(((_2123 * _2123) + (_2122 * _2122)) + (_2124 * _2124))) * cbSceneParam._m0[33u].y;
        float _4704 = isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : max(_2257, 0.0));
        float _2264 = (isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2204 + _2187) / _2199, (_2206 + _2191) / _2199), _2209), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2206 + _2187) / _2199, (_2191 - _2204) / _2199), _2209), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2187 - _2204) / _2199, (_2191 - _2206) / _2199), _2209), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2187 - _2206) / _2199, (_2204 + _2191) / _2199), _2209), 0.0)).x), vec4(0.25)));
        _2271 = 1.0 - (_2264 * cbSceneParam._m0[34u].x);
        _2272 = 1.0 - (_2264 * cbSceneParam._m0[34u].y);
        _2273 = 1.0 - (_2264 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2271 = 1.0;
        _2272 = 1.0;
        _2273 = 1.0;
    }
    float _2337;
    float _2339;
    float _2341;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2325 = fma(_2121, cbSceneParam._m0[63u].w, fma(_2117, cbSceneParam._m0[63u].z, fma(_2113, cbSceneParam._m0[63u].y, _2109 * cbSceneParam._m0[63u].x)));
        float _2326 = fma(_2121, cbSceneParam._m0[60u].w, fma(_2117, cbSceneParam._m0[60u].z, fma(_2113, cbSceneParam._m0[60u].y, _2109 * cbSceneParam._m0[60u].x))) / _2325;
        float _2327 = fma(_2121, cbSceneParam._m0[61u].w, fma(_2117, cbSceneParam._m0[61u].z, fma(_2113, cbSceneParam._m0[61u].y, _2109 * cbSceneParam._m0[61u].x))) / _2325;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2326 >= cbSceneParam._m0[64u].x) && (_2327 >= cbSceneParam._m0[64u].y)) && (_2326 <= cbSceneParam._m0[64u].z)) && (_2327 <= cbSceneParam._m0[64u].w))
        {
            float _2466 = fma(_2121, cbSceneParam._m0[62u].w, fma(_2117, cbSceneParam._m0[62u].z, fma(_2113, cbSceneParam._m0[62u].y, _2109 * cbSceneParam._m0[62u].x))) / _2325;
            float _2470 = isnan(cbSceneParam._m0[41u].w) ? _2466 : (isnan(_2466) ? cbSceneParam._m0[41u].w : max(_2466, cbSceneParam._m0[41u].w));
            float _2513 = (cbSceneParam._m0[33u].x - sqrt(((_2123 * _2123) + (_2122 * _2122)) + (_2124 * _2124))) * cbSceneParam._m0[33u].y;
            float _4720 = isnan(0.0) ? _2513 : (isnan(_2513) ? 0.0 : max(_2513, 0.0));
            float _2520 = (isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2326, cbSceneParam._m0[33u].w + _2327), _2470), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2326, _2327 - cbSceneParam._m0[33u].z), _2470), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2326 - cbSceneParam._m0[33u].z, _2327 - cbSceneParam._m0[33u].w), _2470), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2326 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2327), _2470), 0.0)).x), vec4(0.25)));
            float _2524 = 1.0 - (_2520 * cbSceneParam._m0[34u].x);
            float _2525 = 1.0 - (_2520 * cbSceneParam._m0[34u].y);
            float _2526 = 1.0 - (_2520 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2526) ? _2273 : (isnan(_2273) ? _2526 : min(_2273, _2526));
            frontier_phi_37_36_ladder_1 = isnan(_2525) ? _2272 : (isnan(_2272) ? _2525 : min(_2272, _2525));
            frontier_phi_37_36_ladder_2 = isnan(_2524) ? _2271 : (isnan(_2271) ? _2524 : min(_2271, _2524));
        }
        else
        {
            frontier_phi_37_36_ladder = _2273;
            frontier_phi_37_36_ladder_1 = _2272;
            frontier_phi_37_36_ladder_2 = _2271;
        }
        _2337 = frontier_phi_37_36_ladder_2;
        _2339 = frontier_phi_37_36_ladder_1;
        _2341 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2337 = _2271;
        _2339 = _2272;
        _2341 = _2273;
    }
    uvec4 _2346 = floatBitsToUint(cbInstanceData._m0[_976 + 5u]);
    uint _2348 = _2346.x * 14u;
    uint _2349 = _2348 + 13u;
    float _2356 = _1016 + (-1.0);
    float _2361 = (cbLight._m0[_2349].x * _2356) + 1.0;
    float _2362 = (cbLight._m0[_2349].y * _2356) + 1.0;
    float _2363 = (cbLight._m0[_2349].z * _2356) + 1.0;
    float _2364 = (cbLight._m0[_2349].w * _2356) + 1.0;
    uint _2365 = _2348 + 5u;
    float _2371 = isnan(1.0) ? _2362 : (isnan(_2362) ? 1.0 : min(_2362, 1.0));
    uint _2375 = _2348 + 4u;
    float _2385 = isnan(1.0) ? _2361 : (isnan(_2361) ? 1.0 : min(_2361, 1.0));
    uint _2389 = _2348 | 1u;
    float _2400 = dot(vec3(cbLight._m0[_2348].xyz), vec3(_838, _839, _840));
    float _2403 = dot(vec3(cbLight._m0[_2389].xyz), vec3(_838, _839, _840));
    float _4756 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
    float _4767 = isnan(0.0) ? _2403 : (isnan(_2403) ? 0.0 : max(_2403, 0.0));
    float _2408 = (isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0))) * 0.3183098733425140380859375;
    float _2410 = (isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0))) * 0.3183098733425140380859375;
    float _2417 = ((cbLight._m0[_2365].x * _2371) * _2410) + (((cbLight._m0[_2375].x * _2337) * _2385) * _2408);
    float _2418 = ((_2371 * cbLight._m0[_2365].y) * _2410) + (((cbLight._m0[_2375].y * _2339) * _2385) * _2408);
    float _2419 = ((_2371 * cbLight._m0[_2365].z) * _2410) + (((cbLight._m0[_2375].z * _2341) * _2385) * _2408);
    uvec4 _2423 = floatBitsToUint(cbLight._m0[_2348 + 12u]);
    bool _2425 = _2423.x == 0u;
    float _2527;
    float _2529;
    float _2531;
    if (_2425)
    {
        _2527 = _2417;
        _2529 = _2418;
        _2531 = _2419;
    }
    else
    {
        uint _2535 = _2348 + 6u;
        float _2551 = (dot(vec3(cbLight._m0[_2348 + 2u].xyz), vec3(_838, _839, _840)) * 0.5) + 0.5;
        float _2552 = _2551 * _2551;
        float _4778 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
        float _2553 = isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0));
        float _2554 = isnan(1.0) ? _2363 : (isnan(_2363) ? 1.0 : min(_2363, 1.0));
        _2527 = (((cbLight._m0[_2535].x * 0.3183098733425140380859375) * _2553) * _2554) + _2417;
        _2529 = (((cbLight._m0[_2535].y * 0.3183098733425140380859375) * _2553) * _2554) + _2418;
        _2531 = (((cbLight._m0[_2535].z * 0.3183098733425140380859375) * _2553) * _2554) + _2419;
    }
    bool _2534 = _2423.y == 0u;
    float _2589;
    float _2591;
    float _2593;
    if (_2534)
    {
        _2589 = _2527;
        _2591 = _2529;
        _2593 = _2531;
    }
    else
    {
        uint _2762 = _2348 + 7u;
        float _2778 = (dot(vec3(cbLight._m0[_2348 + 3u].xyz), vec3(_838, _839, _840)) * 0.5) + 0.5;
        float _2779 = _2778 * _2778;
        float _4794 = isnan(0.0) ? _2779 : (isnan(_2779) ? 0.0 : max(_2779, 0.0));
        float _2780 = isnan(1.0) ? _4794 : (isnan(_4794) ? 1.0 : min(_4794, 1.0));
        float _2781 = isnan(1.0) ? _2364 : (isnan(_2364) ? 1.0 : min(_2364, 1.0));
        _2589 = (((cbLight._m0[_2762].x * 0.3183098733425140380859375) * _2780) * _2781) + _2527;
        _2591 = (((cbLight._m0[_2762].y * 0.3183098733425140380859375) * _2780) * _2781) + _2529;
        _2593 = (((cbLight._m0[_2762].z * 0.3183098733425140380859375) * _2780) * _2781) + _2531;
    }
    uint _2596 = _2348 + 8u;
    float _2609 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2348].w)) * _841) * 0.949999988079071044921875);
    float _2610 = _2609 * _2609;
    float _2611 = cbLight._m0[_2348].x + _918;
    float _2612 = cbLight._m0[_2348].y + _919;
    float _2613 = cbLight._m0[_2348].z + _920;
    float _2617 = inversesqrt(dot(vec3(_2611, _2612, _2613), vec3(_2611, _2612, _2613)));
    float _2618 = _2617 * _2611;
    float _2619 = _2617 * _2612;
    float _2620 = _2617 * _2613;
    float _2621 = dot(vec3(_838, _839, _840), vec3(cbLight._m0[_2348].xyz));
    float _4810 = isnan(0.0) ? _2621 : (isnan(_2621) ? 0.0 : max(_2621, 0.0));
    float _2624 = isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0));
    float _4821 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
    float _2625 = isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0));
    float _2626 = dot(vec3(_838, _839, _840), vec3(_2618, _2619, _2620));
    float _4832 = isnan(0.0) ? _2626 : (isnan(_2626) ? 0.0 : max(_2626, 0.0));
    float _2629 = isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0));
    float _2630 = dot(vec3(cbLight._m0[_2348].xyz), vec3(_2618, _2619, _2620));
    float _4843 = isnan(0.0) ? _2630 : (isnan(_2630) ? 0.0 : max(_2630, 0.0));
    float _2634 = _2610 * _2610;
    float _2638 = ((_2629 * _2629) * (_2634 + (-1.0))) + 1.0;
    float _2646 = exp2(log2(1.0 - (isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0)))) * 5.0);
    float _2647 = 0.959999978542327880859375 - _998;
    float _2649 = 0.959999978542327880859375 - _999;
    float _2650 = 0.959999978542327880859375 - _1000;
    float _2657 = 1.0 - _2610;
    float _2668 = (0.5 / (((_2625 * ((_2624 * _2657) + _2610)) + 9.9999999392252902907785028219223e-09) + (((_2625 * _2657) + _2610) * _2624))) * _2624;
    float _4854 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
    float _2670 = (isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0))) * (_2634 / ((_2638 * _2638) * 3.141590118408203125));
    uint _2684 = _2348 + 9u;
    float _2695 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2389].w)) * _841) * 0.949999988079071044921875);
    float _2696 = _2695 * _2695;
    float _2697 = cbLight._m0[_2389].x + _918;
    float _2698 = cbLight._m0[_2389].y + _919;
    float _2699 = cbLight._m0[_2389].z + _920;
    float _2703 = inversesqrt(dot(vec3(_2697, _2698, _2699), vec3(_2697, _2698, _2699)));
    float _2704 = _2703 * _2697;
    float _2705 = _2703 * _2698;
    float _2706 = _2703 * _2699;
    float _2707 = dot(vec3(_838, _839, _840), vec3(cbLight._m0[_2389].xyz));
    float _4865 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
    float _2710 = isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0));
    float _2711 = dot(vec3(_838, _839, _840), vec3(_2704, _2705, _2706));
    float _4876 = isnan(0.0) ? _2711 : (isnan(_2711) ? 0.0 : max(_2711, 0.0));
    float _2714 = isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0));
    float _2715 = dot(vec3(cbLight._m0[_2389].xyz), vec3(_2704, _2705, _2706));
    float _4887 = isnan(0.0) ? _2715 : (isnan(_2715) ? 0.0 : max(_2715, 0.0));
    float _2719 = _2696 * _2696;
    float _2723 = ((_2714 * _2714) * (_2719 + (-1.0))) + 1.0;
    float _2730 = exp2(log2(1.0 - (isnan(1.0) ? _4887 : (isnan(_4887) ? 1.0 : min(_4887, 1.0)))) * 5.0);
    float _2737 = 1.0 - _2696;
    float _2747 = (0.5 / (((_2625 * ((_2710 * _2737) + _2696)) + 9.9999999392252902907785028219223e-09) + (((_2625 * _2737) + _2696) * _2710))) * _2710;
    float _4898 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
    float _2749 = (isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0))) * (_2719 / ((_2723 * _2723) * 3.141590118408203125));
    float _2759 = (((((_2730 * _2647) + _1001) * cbLight._m0[_2684].x) * _2749) * _2371) + ((((cbLight._m0[_2596].x * _2337) * ((_2646 * _2647) + _1001)) * _2670) * _2385);
    float _2760 = (((((_2730 * _2649) + _1003) * cbLight._m0[_2684].y) * _2749) * _2371) + ((((cbLight._m0[_2596].y * _2339) * ((_2646 * _2649) + _1003)) * _2670) * _2385);
    float _2761 = (((((_2730 * _2650) + _1004) * cbLight._m0[_2684].z) * _2749) * _2371) + ((((cbLight._m0[_2596].z * _2341) * ((_2646 * _2650) + _1004)) * _2670) * _2385);
    float _2817;
    float _2819;
    float _2821;
    if (_2425)
    {
        _2817 = _2759;
        _2819 = _2760;
        _2821 = _2761;
    }
    else
    {
        uint _2823 = _2348 + 2u;
        uint _2827 = _2348 + 10u;
        float _2841 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2823].w)) * _841) * 0.949999988079071044921875);
        float _2842 = _2841 * _2841;
        float _2843 = cbLight._m0[_2823].x + _918;
        float _2844 = cbLight._m0[_2823].y + _919;
        float _2845 = cbLight._m0[_2823].z + _920;
        float _2849 = inversesqrt(dot(vec3(_2843, _2844, _2845), vec3(_2843, _2844, _2845)));
        float _2850 = _2849 * _2843;
        float _2851 = _2849 * _2844;
        float _2852 = _2849 * _2845;
        float _2853 = dot(vec3(_838, _839, _840), vec3(cbLight._m0[_2823].xyz));
        float _4909 = isnan(0.0) ? _2853 : (isnan(_2853) ? 0.0 : max(_2853, 0.0));
        float _2856 = isnan(1.0) ? _4909 : (isnan(_4909) ? 1.0 : min(_4909, 1.0));
        float _2857 = dot(vec3(_838, _839, _840), vec3(_2850, _2851, _2852));
        float _4920 = isnan(0.0) ? _2857 : (isnan(_2857) ? 0.0 : max(_2857, 0.0));
        float _2860 = isnan(1.0) ? _4920 : (isnan(_4920) ? 1.0 : min(_4920, 1.0));
        float _2861 = dot(vec3(cbLight._m0[_2823].xyz), vec3(_2850, _2851, _2852));
        float _4931 = isnan(0.0) ? _2861 : (isnan(_2861) ? 0.0 : max(_2861, 0.0));
        float _2865 = _2842 * _2842;
        float _2869 = ((_2860 * _2860) * (_2865 + (-1.0))) + 1.0;
        float _2876 = exp2(log2(1.0 - (isnan(1.0) ? _4931 : (isnan(_4931) ? 1.0 : min(_4931, 1.0)))) * 5.0);
        float _2883 = 1.0 - _2842;
        float _2893 = (0.5 / (((_2625 * ((_2856 * _2883) + _2842)) + 9.9999999392252902907785028219223e-09) + (((_2625 * _2883) + _2842) * _2856))) * _2856;
        float _4942 = isnan(0.0) ? _2893 : (isnan(_2893) ? 0.0 : max(_2893, 0.0));
        float _2895 = (isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0))) * (_2865 / ((_2869 * _2869) * 3.141590118408203125));
        float _2896 = isnan(1.0) ? _2363 : (isnan(_2363) ? 1.0 : min(_2363, 1.0));
        _2817 = (((((_2876 * _2647) + _1001) * cbLight._m0[_2827].x) * _2895) * _2896) + _2759;
        _2819 = (((((_2876 * _2649) + _1003) * cbLight._m0[_2827].y) * _2895) * _2896) + _2760;
        _2821 = (((((_2876 * _2650) + _1004) * cbLight._m0[_2827].z) * _2895) * _2896) + _2761;
    }
    float _2927;
    float _2929;
    float _2931;
    if (_2534)
    {
        _2927 = _2817;
        _2929 = _2819;
        _2931 = _2821;
    }
    else
    {
        uint _2938 = _2348 + 3u;
        uint _2942 = _2348 + 11u;
        float _2956 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2938].w)) * _841) * 0.949999988079071044921875);
        float _2957 = _2956 * _2956;
        float _2958 = cbLight._m0[_2938].x + _918;
        float _2959 = cbLight._m0[_2938].y + _919;
        float _2960 = cbLight._m0[_2938].z + _920;
        float _2964 = inversesqrt(dot(vec3(_2958, _2959, _2960), vec3(_2958, _2959, _2960)));
        float _2965 = _2964 * _2958;
        float _2966 = _2964 * _2959;
        float _2967 = _2964 * _2960;
        float _2968 = dot(vec3(_838, _839, _840), vec3(cbLight._m0[_2938].xyz));
        float _4958 = isnan(0.0) ? _2968 : (isnan(_2968) ? 0.0 : max(_2968, 0.0));
        float _2971 = isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0));
        float _2972 = dot(vec3(_838, _839, _840), vec3(_2965, _2966, _2967));
        float _4969 = isnan(0.0) ? _2972 : (isnan(_2972) ? 0.0 : max(_2972, 0.0));
        float _2975 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
        float _2976 = dot(vec3(cbLight._m0[_2938].xyz), vec3(_2965, _2966, _2967));
        float _4980 = isnan(0.0) ? _2976 : (isnan(_2976) ? 0.0 : max(_2976, 0.0));
        float _2980 = _2957 * _2957;
        float _2984 = ((_2975 * _2975) * (_2980 + (-1.0))) + 1.0;
        float _2991 = exp2(log2(1.0 - (isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0)))) * 5.0);
        float _2998 = 1.0 - _2957;
        float _3008 = (0.5 / (((_2625 * ((_2971 * _2998) + _2957)) + 9.9999999392252902907785028219223e-09) + (((_2625 * _2998) + _2957) * _2971))) * _2971;
        float _4991 = isnan(0.0) ? _3008 : (isnan(_3008) ? 0.0 : max(_3008, 0.0));
        float _3010 = (isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0))) * (_2980 / ((_2984 * _2984) * 3.141590118408203125));
        float _3011 = isnan(1.0) ? _2364 : (isnan(_2364) ? 1.0 : min(_2364, 1.0));
        _2927 = (((((_2991 * _2647) + _1001) * cbLight._m0[_2942].x) * _3010) * _3011) + _2817;
        _2929 = (((((_2991 * _2649) + _1003) * cbLight._m0[_2942].y) * _3010) * _3011) + _2819;
        _2931 = (((((_2991 * _2650) + _1004) * cbLight._m0[_2942].z) * _3010) * _3011) + _2821;
    }
    float _3077;
    float _3079;
    float _3081;
    float _3083;
    float _3085;
    float _3087;
    if (_2346.y == 0u)
    {
        uvec4 _3032 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3033 = _3032.x;
        uint _3044 = uint((float(_3032.y) * floor(float(uint(cbSceneParam._m0[85u].y * _939) / _3033))) + floor(float(uint(cbSceneParam._m0[85u].x * _938) / _3033)));
        float _3054 = (log2(_2124 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3055 = isnan(0.0) ? _3054 : (isnan(_3054) ? 0.0 : max(_3054, 0.0));
        uint _3058 = uint(isnan(14.0) ? _3055 : (isnan(_3055) ? 14.0 : min(_3055, 14.0)));
        uvec4 _3063 = texelFetch(g_lightClusterGridBuffer, int(((_3058 << 2u) + (_3044 << 6u)) >> 2u));
        uint _3064 = _3063.x;
        uint _3065 = _3032.z;
        float _3189;
        float _3191;
        float _3193;
        float _3195;
        float _3197;
        float _3199;
        if (((((1u << ((_3065 >> 4u) & 15u)) + 4294967295u) & _3064) == 0u) || ((_3065 & 240u) == 0u))
        {
            _3189 = 0.0;
            _3191 = 0.0;
            _3193 = 0.0;
            _3195 = 0.0;
            _3197 = 0.0;
            _3199 = 0.0;
        }
        else
        {
            float _3190;
            float _3192;
            float _3194;
            float _3196;
            float _3198;
            float _3200;
            float _3350 = 0.0;
            float _3351 = 0.0;
            float _3352 = 0.0;
            float _3353 = 0.0;
            float _3354 = 0.0;
            float _3355 = 0.0;
            uint _3356 = 0u;
            uint _3365;
            bool _3366;
            for (;;)
            {
                _3365 = texelFetch(g_lightClassification, int((((_3058 << 5u) + (_3044 << 9u)) + (_3356 << 2u)) >> 2u)).x;
                _3366 = _3365 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3366)
                {
                    frontier_phi_71_pred = _3355;
                    frontier_phi_71_pred_1 = _3354;
                    frontier_phi_71_pred_2 = _3353;
                    frontier_phi_71_pred_3 = _3352;
                    frontier_phi_71_pred_4 = _3351;
                    frontier_phi_71_pred_5 = _3350;
                }
                else
                {
                    float _3495;
                    float _3496;
                    float _3497;
                    float _3498;
                    float _3499;
                    float _3500;
                    uint _3501;
                    _3495 = _3350;
                    _3496 = _3351;
                    _3497 = _3352;
                    _3498 = _3353;
                    _3499 = _3354;
                    _3500 = _3355;
                    _3501 = _3365;
                    float _3422;
                    float _3423;
                    float _3424;
                    float _3425;
                    float _3426;
                    float _3427;
                    for (;;)
                    {
                        uint _3505 = uint(findLSB(_3501)) + (_3356 << 5u);
                        uint _3502 = (_3501 + 4294967295u) & _3501;
                        uint _3507 = _3505 * 48u;
                        vec4 _3521 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3507)).x, texelFetch(g_PointLightRenderingBuffer, int(_3507 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3507 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3507 + 3u)).x));
                        uint _3527 = (_3505 * 48u) + 4u;
                        vec4 _3540 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3527)).x, texelFetch(g_PointLightRenderingBuffer, int(_3527 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3527 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3527 + 3u)).x));
                        uint _3546 = (_3505 * 48u) + 8u;
                        vec3 _3557 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3546)).x, texelFetch(g_PointLightRenderingBuffer, int(_3546 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3546 + 2u)).x));
                        float _3561 = _3521.x - _2122;
                        float _3562 = _3521.y - _2123;
                        float _3563 = _3521.z - _2124;
                        float _3564 = dot(vec3(_3561, _3562, _3563), vec3(_3561, _3562, _3563));
                        float _3567 = inversesqrt(_3564);
                        float _3568 = _3567 * _3561;
                        float _3569 = _3567 * _3562;
                        float _3570 = _3567 * _3563;
                        float _3571 = dot(vec3(_957, _960, _963), vec3(_3568, _3569, _3570));
                        float _3576 = 1.0 - (_3564 * _3521.w);
                        float _5017 = isnan(0.0) ? _3576 : (isnan(_3576) ? 0.0 : max(_3576, 0.0));
                        float _3577 = isnan(1.0) ? _5017 : (isnan(_5017) ? 1.0 : min(_5017, 1.0));
                        float _3578 = sqrt(_3564) * _3540.w;
                        float _3581 = 1.39999997615814208984375 / (_3578 + 1.39999997615814208984375);
                        float _3582 = _3581 * _3581;
                        float _3585 = ((1.0 - _3582) * _3571) + _3582;
                        float _3588 = _3578 * _3578;
                        float _3592 = ((isnan(0.0) ? _3585 : (isnan(_3585) ? 0.0 : max(_3585, 0.0))) * _3577) / ((_3588 * 0.699999988079071044921875) + 1.0);
                        float _3596 = (-0.0) - _2122;
                        float _3597 = (-0.0) - _2123;
                        float _3598 = (-0.0) - _2124;
                        float _3602 = inversesqrt(dot(vec3(_3596, _3597, _3598), vec3(_3596, _3597, _3598)));
                        float _3603 = _3602 * _3596;
                        float _3604 = _3602 * _3597;
                        float _3605 = _3602 * _3598;
                        float _3612 = exp2(log2(1.0 / ((_3588 * 3.5) + 5.0)) * 0.25);
                        float _3613 = 1.0 - _1032;
                        float _3620 = sqrt(1.0 - ((1.0 - (_3613 * _3613)) * (1.0 - (_3612 * _3612))));
                        float _3621 = _3620 * _3620;
                        float _3622 = _3621 * _3621;
                        float _3623 = _3603 + _3568;
                        float _3624 = _3604 + _3569;
                        float _3625 = _3605 + _3570;
                        float _3629 = inversesqrt(dot(vec3(_3623, _3624, _3625), vec3(_3623, _3624, _3625)));
                        float _3633 = dot(vec3(_957, _960, _963), vec3(_3603, _3604, _3605));
                        float _5033 = isnan(0.0) ? _3633 : (isnan(_3633) ? 0.0 : max(_3633, 0.0));
                        float _3636 = isnan(1.0) ? _5033 : (isnan(_5033) ? 1.0 : min(_5033, 1.0));
                        float _3637 = dot(vec3(_957, _960, _963), vec3(_3629 * _3623, _3629 * _3624, _3629 * _3625));
                        float _5044 = isnan(0.0) ? _3637 : (isnan(_3637) ? 0.0 : max(_3637, 0.0));
                        float _3640 = isnan(1.0) ? _5044 : (isnan(_5044) ? 1.0 : min(_5044, 1.0));
                        float _3644 = ((_3640 * _3640) * (_3622 + (-1.0))) + 1.0;
                        float _3645 = _3581 * _3621;
                        float _3646 = _3645 * _3645;
                        float _3649 = ((1.0 - _3646) * _3571) + _3646;
                        float _5055 = isnan(0.0) ? _3649 : (isnan(_3649) ? 0.0 : max(_3649, 0.0));
                        float _3650 = isnan(1.0) ? _5055 : (isnan(_5055) ? 1.0 : min(_5055, 1.0));
                        float _3651 = 1.0 - _3621;
                        float _3661 = (0.5 / (((_3650 * ((_3636 * _3651) + _3621)) + 9.9999999392252902907785028219223e-09) + (((_3650 * _3651) + _3621) * _3636))) * _3650;
                        float _5066 = isnan(0.0) ? _3661 : (isnan(_3661) ? 0.0 : max(_3661, 0.0));
                        float _3672 = (((_3622 * 3.1415927410125732421875) * (isnan(1.0) ? _5066 : (isnan(_5066) ? 1.0 : min(_5066, 1.0)))) / ((_3644 * _3644) * ((_3588 * 2.1991131305694580078125) + 3.141590118408203125))) * _3577;
                        _3425 = (_3592 * _3540.x) + _3498;
                        _3426 = (_3592 * _3540.y) + _3499;
                        _3427 = (_3592 * _3540.z) + _3500;
                        _3422 = (_3672 * _3557.x) + _3495;
                        _3423 = (_3672 * _3557.y) + _3496;
                        _3424 = (_3672 * _3557.z) + _3497;
                        if (_3502 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3495 = _3422;
                            _3496 = _3423;
                            _3497 = _3424;
                            _3498 = _3425;
                            _3499 = _3426;
                            _3500 = _3427;
                            _3501 = _3502;
                        }
                    }
                    frontier_phi_71_pred = _3427;
                    frontier_phi_71_pred_1 = _3426;
                    frontier_phi_71_pred_2 = _3425;
                    frontier_phi_71_pred_3 = _3424;
                    frontier_phi_71_pred_4 = _3423;
                    frontier_phi_71_pred_5 = _3422;
                }
                _3200 = frontier_phi_71_pred;
                _3198 = frontier_phi_71_pred_1;
                _3196 = frontier_phi_71_pred_2;
                _3194 = frontier_phi_71_pred_3;
                _3192 = frontier_phi_71_pred_4;
                _3190 = frontier_phi_71_pred_5;
                uint _3357 = _3356 + 1u;
                if (_3357 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3350 = _3190;
                    _3351 = _3192;
                    _3352 = _3194;
                    _3353 = _3196;
                    _3354 = _3198;
                    _3355 = _3200;
                    _3356 = _3357;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3189 = _3190;
            _3191 = _3192;
            _3193 = _3194;
            _3195 = _3196;
            _3197 = _3198;
            _3199 = _3200;
        }
        uvec4 _3203 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3204 = _3203.z;
        uint _3206 = (_3204 >> 8u) & 15u;
        float _3318;
        float _3320;
        float _3322;
        float _3324;
        float _3326;
        float _3328;
        if (((4294967295u << _3206) & _3064) == 0u)
        {
            _3318 = _3189;
            _3320 = _3191;
            _3322 = _3193;
            _3324 = _3195;
            _3326 = _3197;
            _3328 = _3199;
        }
        else
        {
            float _3343 = inversesqrt(dot(vec3(_2122, _2123, _2124), vec3(_2122, _2123, _2124)));
            float _3344 = _3343 * _2122;
            float _3345 = _3343 * _2123;
            float _3346 = _3343 * _2124;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3206 < ((_3204 >> 12u) & 15u))
            {
                float _3319;
                float _3321;
                float _3323;
                float _3325;
                float _3327;
                float _3329;
                float _3478 = _3189;
                float _3479 = _3191;
                float _3480 = _3193;
                float _3481 = _3195;
                float _3482 = _3197;
                float _3483 = _3199;
                uint _3484 = _3206;
                uint _3493;
                bool _3494;
                for (;;)
                {
                    _3493 = texelFetch(g_lightClassification, int((((_3058 << 5u) + (_3044 << 9u)) + (_3484 << 2u)) >> 2u)).x;
                    _3494 = _3493 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3494)
                    {
                        frontier_phi_82_pred = _3483;
                        frontier_phi_82_pred_1 = _3482;
                        frontier_phi_82_pred_2 = _3481;
                        frontier_phi_82_pred_3 = _3480;
                        frontier_phi_82_pred_4 = _3479;
                        frontier_phi_82_pred_5 = _3478;
                    }
                    else
                    {
                        float _3686;
                        float _3687;
                        float _3688;
                        float _3689;
                        float _3690;
                        float _3691;
                        float _3980;
                        float _3981;
                        float _3982;
                        float _3983;
                        float _3984;
                        float _3985;
                        float _3699 = _3478;
                        float _3700 = _3479;
                        float _3701 = _3480;
                        float _3702 = _3481;
                        float _3703 = _3482;
                        float _3704 = _3483;
                        uint _3705 = _3493;
                        uint _3706;
                        vec4 _3731;
                        float _3732;
                        vec4 _3747;
                        vec3 _3759;
                        vec4 _3774;
                        vec4 _3789;
                        float _3836;
                        bool _3837;
                        for (;;)
                        {
                            uint _3716 = ((_3484 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3705));
                            _3706 = (_3705 + 4294967295u) & _3705;
                            uint _3718 = _3716 * 40u;
                            _3731 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3718)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 3u)).x));
                            _3732 = _3731.w;
                            uint _3734 = (_3716 * 40u) + 4u;
                            _3747 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3734)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3734 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3734 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3734 + 3u)).x));
                            uint _3749 = (_3716 * 40u) + 8u;
                            _3759 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3749)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3749 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3749 + 2u)).x));
                            uint _3761 = (_3716 * 40u) + 16u;
                            _3774 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3761)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3761 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3761 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3761 + 3u)).x));
                            uint _3776 = (_3716 * 40u) + 20u;
                            _3789 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3776)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3776 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3776 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3776 + 3u)).x));
                            uint _3792 = (_3716 * 40u) + 24u;
                            vec4 _3805 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3792)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3792 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3792 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3792 + 3u)).x));
                            uint _3811 = (_3716 * 40u) + 28u;
                            vec4 _3824 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3811)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3811 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3811 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3811 + 3u)).x));
                            _3836 = fma(_2124, _3824.z, fma(_2123, _3824.y, _3824.x * _2122)) + _3824.w;
                            _3837 = !((fma(_2124, _3805.z, fma(_2123, _3805.y, _3805.x * _2122)) + _3805.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3837)
                            {
                                float _3864 = _3731.x - _2122;
                                float _3865 = _3731.y - _2123;
                                float _3866 = _3731.z - _2124;
                                float _3867 = dot(vec3(_3864, _3865, _3866), vec3(_3864, _3865, _3866));
                                float _3870 = inversesqrt(_3867);
                                float _3871 = _3870 * _3864;
                                float _3872 = _3870 * _3865;
                                float _3873 = _3870 * _3866;
                                float _3877 = 1.0 - (_3867 / (_3732 * _3732));
                                float _5077 = isnan(0.0) ? _3877 : (isnan(_3877) ? 0.0 : max(_3877, 0.0));
                                float _3878 = isnan(1.0) ? _5077 : (isnan(_5077) ? 1.0 : min(_5077, 1.0));
                                float _3882 = sqrt(_3867) * _3747.w;
                                float _3884 = 1.39999997615814208984375 / (_3882 + 1.39999997615814208984375);
                                float _3885 = _3884 * _3884;
                                float _3888 = ((1.0 - _3885) * dot(vec3(_3871, _3872, _3873), vec3(_957, _960, _963))) + _3885;
                                float _3891 = _3882 * _3882;
                                float _3895 = (fma(_2124, _3774.z, fma(_2123, _3774.y, _3774.x * _2122)) + _3774.w) / _3836;
                                float _3896 = (fma(_2124, _3789.z, fma(_2123, _3789.y, _3789.x * _2122)) + _3789.w) / _3836;
                                float _3900 = 1.0 - dot(vec2(_3895, _3896), vec2(_3895, _3896));
                                float _5093 = isnan(0.0) ? _3900 : (isnan(_3900) ? 0.0 : max(_3900, 0.0));
                                float _3901 = isnan(1.0) ? _5093 : (isnan(_5093) ? 1.0 : min(_5093, 1.0));
                                float _3902 = _3901 * (((isnan(0.0) ? _3888 : (isnan(_3888) ? 0.0 : max(_3888, 0.0))) * _3878) / ((_3891 * 0.699999988079071044921875) + 1.0));
                                float _3914 = exp2(log2(1.0 / ((_3891 * 3.5) + 5.0)) * 0.25);
                                float _3915 = 1.0 - _1032;
                                float _3922 = sqrt(1.0 - ((1.0 - (_3915 * _3915)) * (1.0 - (_3914 * _3914))));
                                float _3923 = _3922 * _3922;
                                float _3924 = _3923 * _3923;
                                float _3925 = _3871 - _3344;
                                float _3926 = _3872 - _3345;
                                float _3927 = _3873 - _3346;
                                float _3931 = inversesqrt(dot(vec3(_3925, _3926, _3927), vec3(_3925, _3926, _3927)));
                                float _3935 = dot(vec3(_957, _960, _963), vec3((-0.0) - _3344, (-0.0) - _3345, (-0.0) - _3346));
                                float _5104 = isnan(0.0) ? _3935 : (isnan(_3935) ? 0.0 : max(_3935, 0.0));
                                float _3938 = isnan(1.0) ? _5104 : (isnan(_5104) ? 1.0 : min(_5104, 1.0));
                                float _3939 = dot(vec3(_957, _960, _963), vec3(_3931 * _3925, _3931 * _3926, _3931 * _3927));
                                float _5115 = isnan(0.0) ? _3939 : (isnan(_3939) ? 0.0 : max(_3939, 0.0));
                                float _3942 = isnan(1.0) ? _5115 : (isnan(_5115) ? 1.0 : min(_5115, 1.0));
                                float _3946 = ((_3942 * _3942) * (_3924 + (-1.0))) + 1.0;
                                float _3947 = _3884 * _3923;
                                float _3948 = _3947 * _3947;
                                float _3954 = ((1.0 - _3948) * dot(vec3(_957, _960, _963), vec3(_3871, _3872, _3873))) + _3948;
                                float _5126 = isnan(0.0) ? _3954 : (isnan(_3954) ? 0.0 : max(_3954, 0.0));
                                float _3955 = isnan(1.0) ? _5126 : (isnan(_5126) ? 1.0 : min(_5126, 1.0));
                                float _3956 = 1.0 - _3923;
                                float _3966 = (0.5 / (((_3955 * ((_3938 * _3956) + _3923)) + 9.9999999392252902907785028219223e-09) + (((_3955 * _3956) + _3923) * _3938))) * _3955;
                                float _5137 = isnan(0.0) ? _3966 : (isnan(_3966) ? 0.0 : max(_3966, 0.0));
                                float _3976 = (_3901 * _3878) * (((_3924 * 3.1415927410125732421875) * (isnan(1.0) ? _5137 : (isnan(_5137) ? 1.0 : min(_5137, 1.0)))) / ((_3946 * _3946) * ((_3891 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3902 * _3747.z;
                                frontier_phi_88_pred_1 = _3902 * _3747.y;
                                frontier_phi_88_pred_2 = _3902 * _3747.x;
                                frontier_phi_88_pred_3 = _3976 * _3759.z;
                                frontier_phi_88_pred_4 = _3976 * _3759.y;
                                frontier_phi_88_pred_5 = _3976 * _3759.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3985 = frontier_phi_88_pred;
                            _3984 = frontier_phi_88_pred_1;
                            _3983 = frontier_phi_88_pred_2;
                            _3982 = frontier_phi_88_pred_3;
                            _3981 = frontier_phi_88_pred_4;
                            _3980 = frontier_phi_88_pred_5;
                            _3689 = _3983 + _3702;
                            _3690 = _3984 + _3703;
                            _3691 = _3985 + _3704;
                            _3686 = _3980 + _3699;
                            _3687 = _3981 + _3700;
                            _3688 = _3982 + _3701;
                            if (_3706 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3699 = _3686;
                                _3700 = _3687;
                                _3701 = _3688;
                                _3702 = _3689;
                                _3703 = _3690;
                                _3704 = _3691;
                                _3705 = _3706;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3691;
                        frontier_phi_82_pred_1 = _3690;
                        frontier_phi_82_pred_2 = _3689;
                        frontier_phi_82_pred_3 = _3688;
                        frontier_phi_82_pred_4 = _3687;
                        frontier_phi_82_pred_5 = _3686;
                    }
                    _3329 = frontier_phi_82_pred;
                    _3327 = frontier_phi_82_pred_1;
                    _3325 = frontier_phi_82_pred_2;
                    _3323 = frontier_phi_82_pred_3;
                    _3321 = frontier_phi_82_pred_4;
                    _3319 = frontier_phi_82_pred_5;
                    uint _3485 = _3484 + 1u;
                    if (_3485 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3478 = _3319;
                        _3479 = _3321;
                        _3480 = _3323;
                        _3481 = _3325;
                        _3482 = _3327;
                        _3483 = _3329;
                        _3484 = _3485;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3325;
                frontier_phi_63_64_ladder_1 = _3329;
                frontier_phi_63_64_ladder_2 = _3327;
                frontier_phi_63_64_ladder_3 = _3323;
                frontier_phi_63_64_ladder_4 = _3321;
                frontier_phi_63_64_ladder_5 = _3319;
            }
            else
            {
                frontier_phi_63_64_ladder = _3195;
                frontier_phi_63_64_ladder_1 = _3199;
                frontier_phi_63_64_ladder_2 = _3197;
                frontier_phi_63_64_ladder_3 = _3193;
                frontier_phi_63_64_ladder_4 = _3191;
                frontier_phi_63_64_ladder_5 = _3189;
            }
            _3318 = frontier_phi_63_64_ladder_5;
            _3320 = frontier_phi_63_64_ladder_4;
            _3322 = frontier_phi_63_64_ladder_3;
            _3324 = frontier_phi_63_64_ladder;
            _3326 = frontier_phi_63_64_ladder_2;
            _3328 = frontier_phi_63_64_ladder_1;
        }
        float _3333 = isnan(1.0) ? _1016 : (isnan(_1016) ? 1.0 : min(_1016, 1.0));
        _3077 = (_3333 * _3324) + _2589;
        _3079 = (_3333 * _3326) + _2591;
        _3081 = (_3333 * _3328) + _2593;
        _3083 = ((_3318 * _1001) * _3333) + _2927;
        _3085 = ((_3320 * _1003) * _3333) + _2929;
        _3087 = ((_3322 * _1004) * _3333) + _2931;
    }
    else
    {
        _3077 = _2589;
        _3079 = _2591;
        _3081 = _2593;
        _3083 = _2927;
        _3085 = _2929;
        _3087 = _2931;
    }
    uint _3093 = _977 + uint(cbMatDynParam._m0[0u].w);
    float _3099 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _3105 = (((((_3099 * cbMtdParam._m0[14u].x) * _699.x) * _722) * _800) * (((1.0 - _775) * cbMtdParam._m0[20u].w) + _775)) * cbInstanceData._m0[_3093].x;
    float _3111 = (((((_3099 * cbMtdParam._m0[14u].y) * _699.y) * _722) * _800) * (((1.0 - _777) * cbMtdParam._m0[20u].w) + _777)) * cbInstanceData._m0[_3093].y;
    float _3117 = (((((_3099 * cbMtdParam._m0[14u].z) * _699.z) * _722) * _800) * (((1.0 - _779) * cbMtdParam._m0[20u].w) + _779)) * cbInstanceData._m0[_3093].z;
    float _5153 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _5164 = isnan(0.0) ? _992 : (isnan(_992) ? 0.0 : max(_992, 0.0));
    float _5175 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
    float _3134 = (((isnan(1.0) ? _5153 : (isnan(_5153) ? 1.0 : min(_5153, 1.0))) * (_3077 + ((isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0))) * _1016))) + ((_3083 + ((isnan(0.0) ? _2069 : (isnan(_2069) ? 0.0 : max(_2069, 0.0))) * _1856)) * cbPerFrame._m0[3u].x)) + _3105;
    float _3136 = (_3111 + ((_3085 + ((isnan(0.0) ? _2072 : (isnan(_2072) ? 0.0 : max(_2072, 0.0))) * _1856)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5164 : (isnan(_5164) ? 1.0 : min(_5164, 1.0))) * (_3079 + ((isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0))) * _1016)));
    float _3138 = (_3117 + ((_3087 + ((isnan(0.0) ? _2075 : (isnan(_2075) ? 0.0 : max(_2075, 0.0))) * _1856)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5175 : (isnan(_5175) ? 1.0 : min(_5175, 1.0))) * (_3081 + ((isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0))) * _1016)));
    float _3139 = isnan(0.0) ? _3134 : (isnan(_3134) ? 0.0 : max(_3134, 0.0));
    float _3140 = isnan(0.0) ? _3136 : (isnan(_3136) ? 0.0 : max(_3136, 0.0));
    float _3141 = isnan(0.0) ? _3138 : (isnan(_3138) ? 0.0 : max(_3138, 0.0));
    float _3147 = cbMtdParam._m0[2u].x * _3105;
    float _3148 = cbMtdParam._m0[2u].y * _3111;
    float _3149 = cbMtdParam._m0[2u].z * _3117;
    float _5201 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3151 = isnan(1.0) ? _5201 : (isnan(_5201) ? 1.0 : min(_5201, 1.0));
    uint _3152 = _976 + 6u;
    float _3160 = _938 / cbSceneParam._m0[86u].x;
    float _3161 = _939 / cbSceneParam._m0[86u].y;
    vec4 _3175 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3160, _3161, (log2((isnan(cbSceneParam._m0[77u].w) ? _861 : (isnan(_861) ? cbSceneParam._m0[77u].w : min(_861, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3177 = _3175.x;
    float _3178 = _3175.y;
    float _3179 = _3175.z;
    float _3180 = _3175.w;
    float _3251;
    float _3253;
    float _3255;
    float _3257;
    if (_861 > cbSceneParam._m0[78u].w)
    {
        float _3214 = isnan(_861) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _861 : min(cbSceneParam._m0[80u].w, _861));
        float _3215 = _3214 / _861;
        float _3226 = _3215 * _911;
        float _3227 = _912 * _3215;
        float _3228 = (-0.0) - _3227;
        float _3229 = _3215 * _913;
        float _3231 = (cbSceneParam._m0[77u].w * _3228) / _3214;
        float _3232 = _3231 + cbSceneParam._m0[79u].w;
        float _3233 = cbSceneParam._m0[79u].w - _3227;
        float _3239 = sqrt(((_3226 * _3226) + (_3227 * _3227)) + (_3229 * _3229));
        float _3242 = (1.0 - (cbSceneParam._m0[77u].w / _3214)) * _3239;
        float _3247 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3249 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3435;
        if (abs((_3228 - _3231) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3435 = ((((_3232 > 0.0) ? exp2(_3247 * _3232) : (2.0 - exp2(_3249 * _3232))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3242;
        }
        else
        {
            float _3379 = 1.0 / cbSceneParam._m0[80u].x;
            float _3380 = isnan(_3233) ? _3232 : (isnan(_3232) ? _3233 : max(_3232, _3233));
            float _3381 = isnan(_3233) ? _3232 : (isnan(_3232) ? _3233 : min(_3232, _3233));
            float _3390 = isnan(0.0) ? _3380 : (isnan(_3380) ? 0.0 : min(_3380, 0.0));
            float _3391 = isnan(0.0) ? _3381 : (isnan(_3381) ? 0.0 : min(_3381, 0.0));
            _3435 = ((abs(_3239 / _3228) * cbSceneParam._m0[80u].y) * ((((_3390 - _3391) * 2.0) - ((exp2(_3247 * (isnan(0.0) ? _3380 : (isnan(_3380) ? 0.0 : max(_3380, 0.0)))) - exp2(_3247 * (isnan(0.0) ? _3381 : (isnan(_3381) ? 0.0 : max(_3381, 0.0))))) * _3379)) - ((exp2(_3249 * _3390) - exp2(_3249 * _3391)) * _3379))) + (_3242 * cbSceneParam._m0[80u].z);
        }
        vec4 _3437 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3160, _3161, 1.0), 0.0);
        float _3446 = exp2((_3435 * (-1.44269502162933349609375)) * (1.0 - _3437.w));
        float _3447 = log2(_3446);
        float _3463 = log2(_3180);
        _3251 = (exp2(_3463 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3447 * cbSceneParam._m0[78u].x)) * _3437.x) / cbSceneParam._m0[78u].x)) + _3177;
        _3253 = (exp2(_3463 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3447 * cbSceneParam._m0[78u].y)) * _3437.y) / cbSceneParam._m0[78u].y)) + _3178;
        _3255 = (exp2(_3463 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3447 * cbSceneParam._m0[78u].z)) * _3437.z) / cbSceneParam._m0[78u].z)) + _3179;
        _3257 = _3446 * _3180;
    }
    else
    {
        _3251 = _3177;
        _3253 = _3178;
        _3255 = _3179;
        _3257 = _3180;
    }
    bool _3473;
    vec4 _3267;
    vec4 _3289;
    float _3291;
    float _3295;
    float _3296;
    float _3297;
    float _3300;
    float _3303;
    float _3306;
    float _3307;
    bool _3317;
    for (;;)
    {
        _3267 = cbMatDynParam._m0[0u];
        float _3269 = roundEven(_3267.y);
        bool _3270 = _3269 == 3.0;
        float _3271 = log2(_3257);
        float _3275 = exp2(_3271 * cbSceneParam._m0[78u].x);
        float _3276 = exp2(_3271 * cbSceneParam._m0[78u].y);
        float _3277 = exp2(_3271 * cbSceneParam._m0[78u].z);
        float _3278 = _3275 * _3139;
        float _3279 = _3276 * _3140;
        float _3280 = _3277 * _3141;
        float _3287 = _927 + (-0.5);
        _3289 = cbMtdParam._m0[1u];
        _3291 = _3289.y * _3287;
        float _3294 = (_3269 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3295 = _3294 * (_3270 ? _3278 : (_3278 + (cbSceneParam._m0[72u].w * _3251)));
        _3296 = _3294 * (_3270 ? _3279 : (_3279 + (cbSceneParam._m0[72u].w * _3253)));
        _3297 = _3294 * (_3270 ? _3280 : (_3280 + (cbSceneParam._m0[72u].w * _3255)));
        _3300 = ((_3147 * _3151) * _3275) * _3294;
        _3303 = ((_3148 * _3151) * _3276) * _3294;
        _3306 = ((_3149 * _3151) * _3277) * _3294;
        _3307 = _3287 * 0.999000012874603271484375;
        _3317 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3317)
        {
            if ((cbInstanceData._m0[_976 + 7u].x + _3307) < 0.5)
            {
                _3473 = true;
                break;
            }
        }
        uint _3414 = _977 + uint(_3267.w);
        if ((cbInstanceData._m0[_3414].w < 1.0) && ((cbInstanceData._m0[_3414].w + _3307) < 0.5))
        {
            _3473 = true;
            break;
        }
        if ((_3291 + 1.0) < _3289.x)
        {
            _3473 = true;
            break;
        }
        _3473 = false;
        break;
    }
    float _3677;
    if (_3473)
    {
        discard_state = true;
        _3677 = 0.0;
    }
    else
    {
        _3677 = cbInstanceData._m0[_3152].w;
    }
    SV_Target.x = _3295;
    SV_Target.y = _3296;
    SV_Target.z = _3297;
    SV_Target.w = _3677;
    SV_Target_1.x = _3300;
    SV_Target_1.y = _3303;
    SV_Target_1.z = _3306;
    SV_Target_1.w = cbInstanceData._m0[_3152].w;
    discard_exit();
}


