#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_20;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_7;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_12;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1468;
float _4185;
float _4186;
float _4187;
float _4188;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _232 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _233 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _234 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _240 = inversesqrt(dot(vec3(_232, _233, _234), vec3(_232, _233, _234)));
    float _247 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _254 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _276 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _282 = _276.x * cbMtdParam._m0[10u].x;
    float _283 = _276.y * cbMtdParam._m0[10u].y;
    float _284 = _276.z * cbMtdParam._m0[10u].z;
    vec4 _303 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _322 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _350 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w)).x;
    float _360 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _322.x) * 2.0) - _350)) + 1.0;
    float _4197 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    float _361 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
    float _368 = (_361 * ((_303.x * cbMtdParam._m0[11u].x) - _282)) + _282;
    float _369 = (_361 * ((_303.y * cbMtdParam._m0[11u].y) - _283)) + _283;
    float _370 = (_361 * ((_303.z * cbMtdParam._m0[11u].z) - _284)) + _284;
    vec4 _388 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _401 = (((((1.0 - _322.y) * 2.0) - _350) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _4208 = isnan(0.0) ? _401 : (isnan(_401) ? 0.0 : max(_401, 0.0));
    float _402 = isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0));
    float _409 = (((_388.x * cbMtdParam._m0[12u].x) - _368) * _402) + _368;
    float _410 = (_402 * ((_388.y * cbMtdParam._m0[12u].y) - _369)) + _369;
    float _411 = (_402 * ((_388.z * cbMtdParam._m0[12u].z) - _370)) + _370;
    vec4 _429 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _442 = (((((1.0 - _322.z) * 2.0) - _350) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _4219 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _443 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
    float _450 = (((_429.x * cbMtdParam._m0[13u].x) - _409) * _443) + _409;
    float _451 = (_443 * ((_429.y * cbMtdParam._m0[13u].y) - _410)) + _410;
    float _452 = (_443 * ((_429.z * cbMtdParam._m0[13u].z) - _411)) + _411;
    vec4 _477 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    vec4 _496 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.z) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.w) + cbTextureTilingScale._m0[20u].w));
    float _499 = _496.x + 0.00999999977648258209228515625;
    float _506 = (TEXCOORD_8 - ((cbMtdParam._m0[20u].x * (1.0 - TEXCOORD_8)) * _499)) * (cbMtdParam._m0[19u].w + 1.0);
    float _4230 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _507 = isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0));
    float _514 = (_507 * ((_477.x * cbMtdParam._m0[16u].x) - _450)) + _450;
    float _515 = (_507 * ((_477.y * cbMtdParam._m0[16u].y) - _451)) + _451;
    float _516 = (_507 * ((_477.z * cbMtdParam._m0[16u].z) - _452)) + _452;
    vec4 _529 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _531 = _529.x;
    float _549 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _531) * _361) + _531;
    float _566 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _549) * _402) + _549;
    float _583 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x - _566) * _443) + _566;
    float _585 = _583 - (_583 * TEXCOORD_8);
    vec4 _598 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    vec4 _619 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _621 = _619.x;
    float _622 = _619.y;
    float _623 = _619.z;
    vec4 _635 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _646 = ((_635.x - _621) * _361) + _621;
    float _647 = ((_635.y - _622) * _361) + _622;
    float _648 = ((_635.z - _623) * _361) + _623;
    vec4 _661 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _672 = ((_661.x - _646) * _402) + _646;
    float _673 = ((_661.y - _647) * _402) + _647;
    float _674 = ((_661.z - _648) * _402) + _648;
    vec4 _687 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _700 = ((_687.z - _674) * _443) + _674;
    float _703 = ((((_687.x - _672) * _443) + _672) * 2.0) + (-1.0);
    float _704 = ((((_687.y - _673) * _443) + _673) * 2.0) + (-1.0);
    float _705 = dot(vec2(_703, _704), vec2(_703, _704));
    float _4241 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    float _710 = sqrt(1.0 - (isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0))));
    float _715 = (((_598.z - _700) * TEXCOORD_8) * cbMtdParam._m0[20u].y) + _700;
    vec4 _745 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[15u].x) + cbTextureTilingScale._m0[15u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[15u].y) + cbTextureTilingScale._m0[15u].w));
    float _759 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4252 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _760 = isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0));
    float _768 = (((_760 * _760) * (3.0 - (_760 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _776 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _784 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4263 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    float _785 = isnan(1.0) ? _4263 : (isnan(_4263) ? 1.0 : min(_4263, 1.0));
    float _789 = (_785 * _785) * (3.0 - (_785 * 2.0));
    float _790 = _789 * cbMtdParam._m0[22u].x;
    float _791 = _789 * cbMtdParam._m0[22u].y;
    float _792 = sin(_776);
    float _793 = cos(_776);
    float _794 = TEXCOORD.z - _790;
    float _795 = TEXCOORD.w - _791;
    vec4 _815 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_790 + fma(_795, (-0.0) - _792, _794 * _793))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_795, _793, _794 * _792) + _791)) + cbTextureTilingScale._m0[2u].w));
    float _821 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _815.x;
    float _823 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _815.y;
    float _825 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _815.z;
    float _841 = (TEXCOORD_5.x - ((_499 * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _4274 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
    float _842 = isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0));
    vec4 _855 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _871 = (((((_598.x * 2.0) + (-1.0)) * TEXCOORD_8) * cbMtdParam._m0[19u].y) + _703) + (((_855.x * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z);
    float _873 = (((((_598.y * 2.0) + (-1.0)) * TEXCOORD_9) * cbMtdParam._m0[19u].y) + _704) + (((_855.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z);
    float _876 = fma(_710, _247 * NORMAL.x, fma(_873, _254 * TANGENT.x, (_240 * _232) * _871));
    float _879 = fma(_710, _247 * NORMAL.y, fma(_873, _254 * TANGENT.y, (_240 * _233) * _871));
    float _882 = fma(_710, _247 * NORMAL.z, fma(_873, _254 * TANGENT.z, (_240 * _234) * _871));
    float _886 = inversesqrt(dot(vec3(_876, _879, _882), vec3(_876, _879, _882)));
    float _887 = _886 * _876;
    float _888 = _886 * _879;
    float _889 = _886 * _882;
    float _4285 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
    float _890 = isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0));
    float _4296 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _4307 = isnan(0.0) ? _515 : (isnan(_515) ? 0.0 : max(_515, 0.0));
    float _4318 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _4329 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0));
    float _894 = isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0));
    float _910 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _950 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _960 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _950);
    float _961 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _950);
    float _962 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _950);
    float _966 = inversesqrt(dot(vec3(_960, _961, _962), vec3(_960, _961, _962)));
    float _967 = _960 * _966;
    float _968 = _961 * _966;
    float _969 = _962 * _966;
    vec4 _974 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _976 = _974.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1148 = sqrt(((_960 * _960) + (_961 * _961)) + (_962 * _962));
        float _1154 = (cbMatDynParam._m0[5u].x * _1148) + cbMatDynParam._m0[5u].y;
        float _4340 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
        float _1155 = isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0));
        float _1159 = (cbMatDynParam._m0[5u].z * _1148) + cbMatDynParam._m0[5u].w;
        float _4351 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0))) - _1155)) + _1155) < ((_976 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _987 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _988 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1007 = fma(_889, cbSceneParam._m0[5u].z, fma(_888, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _887));
    float _1010 = fma(_889, cbSceneParam._m0[6u].z, fma(_888, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _887));
    float _1013 = fma(_889, cbSceneParam._m0[7u].z, fma(_888, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _887));
    uint _1026 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1027 = _1026 + 9u;
    uint _1028 = _1027 + uint(cbMatDynParam._m0[0u].w);
    float _1034 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0)))) * cbInstanceData._m0[_1028].x;
    float _1035 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0)))) * cbInstanceData._m0[_1028].y;
    float _1036 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0)))) * cbInstanceData._m0[_1028].z;
    float _4362 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
    float _1037 = isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0));
    float _4373 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
    float _1038 = isnan(1.0) ? _4373 : (isnan(_4373) ? 1.0 : min(_4373, 1.0));
    float _4384 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
    float _1039 = isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0));
    float _1040 = 1.0 - _894;
    float _1041 = _1037 * _1040;
    float _1042 = _1038 * _1040;
    float _1043 = _1039 * _1040;
    float _1048 = (_1037 + (-0.039999999105930328369140625)) * _894;
    float _1049 = (_1038 + (-0.039999999105930328369140625)) * _894;
    float _1050 = (_1039 + (-0.039999999105930328369140625)) * _894;
    float _1051 = _1048 + 0.039999999105930328369140625;
    float _1053 = _1049 + 0.039999999105930328369140625;
    float _1054 = _1050 + 0.039999999105930328369140625;
    vec4 _1063 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _987, cbSceneParam._m0[86u].y * _988));
    float _1066 = _1063.x * TEXCOORD_5.w;
    float _1067 = dot(vec3(_887, _888, _889), vec3(_967, _968, _969));
    float _1070 = _1067 * 2.0;
    float _1074 = (_1070 * _887) - _967;
    float _1075 = (_1070 * _888) - _968;
    float _1076 = (_1070 * _889) - _969;
    float _1080 = abs(dot(vec3(_967, _968, _969), vec3(_887, _888, _889)));
    float _4395 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
    float _1082 = sqrt(_890);
    float _1094 = exp2((_1082 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1082 * 3.0));
    float _1100 = (1.0 - _1094) * ((_1082 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1101 = _1094 * _1082;
    float _1129 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1133 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1137 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1467;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1192 = fma(_1137, cbModelParam._m0[26u].z, fma(_1133, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1129));
        float _1196 = fma(_1137, cbModelParam._m0[27u].z, fma(_1133, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1129));
        float _1200 = fma(_1137, cbModelParam._m0[28u].z, fma(_1133, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1129));
        float _1225 = _1129 + _887;
        float _1226 = _1133 + _888;
        float _1227 = _1137 + _889;
        float _1237 = fma(_1227, cbModelParam._m0[26u].z, fma(_1226, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1225)) - _1192;
        float _1238 = fma(_1227, cbModelParam._m0[27u].z, fma(_1226, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1225)) - _1196;
        float _1239 = fma(_1227, cbModelParam._m0[28u].z, fma(_1226, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1225)) - _1200;
        float _1243 = inversesqrt(dot(vec3(_1237, _1238, _1239), vec3(_1237, _1238, _1239)));
        float _1256 = ((_1243 * _1237) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1192 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1257 = ((_1243 * _1238) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1196 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1258 = ((_1243 * _1239) / cbModelParam._m0[34u].z) + ((((((_1200 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1261 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1256, _1257, _1258), 0.0);
        vec4 _1268 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1256, _1257, _1258), 0.0);
        vec4 _1275 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1256, _1257, _1258), 0.0);
        vec4 _1282 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1256, _1257, _1258), 0.0);
        float _1295 = exp2((_1261.w + (-0.5)) * 20.0) * 2.0;
        float _1296 = _1295 * (_1261.x + (-0.5));
        float _1297 = _1295 * (_1261.y + (-0.5));
        float _1298 = _1295 * (_1261.z + (-0.5));
        float _1305 = exp2((_1268.w + (-0.5)) * 20.0) * 2.0;
        float _1306 = _1305 * (_1268.x + (-0.5));
        float _1307 = _1305 * (_1268.y + (-0.5));
        float _1308 = _1305 * (_1268.z + (-0.5));
        float _1315 = exp2((_1275.w + (-0.5)) * 20.0) * 2.0;
        float _1316 = _1315 * (_1275.x + (-0.5));
        float _1317 = _1315 * (_1275.y + (-0.5));
        float _1318 = _1315 * (_1275.z + (-0.5));
        float _1325 = exp2((_1282.w + (-0.5)) * 20.0) * 2.0;
        float _1326 = _1325 * (_1282.x + (-0.5));
        float _1327 = _1325 * (_1282.y + (-0.5));
        float _1328 = _1325 * (_1282.z + (-0.5));
        float _1329 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1330 = isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0));
        float _1331 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1332 = _1296 * 0.5;
        float _1333 = _1306 * 0.5;
        float _1334 = _1316 * 0.5;
        float _1335 = dot(vec3(_1332, _1333, _1334), vec3(_1332, _1333, _1334));
        float _1340 = (_1335 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1335);
        float _1349 = (dot(vec3(_887, _888, _889), vec3(_1340 * _1332, _1340 * _1333, _1340 * _1334)) + 1.0) * 0.5;
        float _4421 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1359 = sqrt(((_1333 * _1333) + (_1332 * _1332)) + (_1334 * _1334)) / (_1329 + 9.9999997473787516355514526367188e-06);
        float _4432 = isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0));
        float _1360 = isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0));
        float _1361 = _1360 * 2.0;
        float _1365 = (1.0 - _1360) / (_1360 + 1.0);
        float _4443 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
        float _1366 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
        float _1375 = ((((1.0 - _1366) * (_1361 + 2.0)) * exp2(log2(isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0))) * (_1361 + 1.0))) + _1366) * _1329;
        float _1376 = _1297 * 0.5;
        float _1377 = _1307 * 0.5;
        float _1378 = _1317 * 0.5;
        float _1379 = dot(vec3(_1376, _1377, _1378), vec3(_1376, _1377, _1378));
        float _1384 = (_1379 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1379);
        float _1392 = (dot(vec3(_887, _888, _889), vec3(_1384 * _1376, _1384 * _1377, _1384 * _1378)) + 1.0) * 0.5;
        float _4454 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1401 = sqrt(((_1377 * _1377) + (_1376 * _1376)) + (_1378 * _1378)) / (_1330 + 9.9999997473787516355514526367188e-06);
        float _4465 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1402 = isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0));
        float _1403 = _1402 * 2.0;
        float _1407 = (1.0 - _1402) / (_1402 + 1.0);
        float _4476 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
        float _1408 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
        float _1417 = ((((1.0 - _1408) * (_1403 + 2.0)) * exp2(log2(isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0))) * (_1403 + 1.0))) + _1408) * _1330;
        float _1418 = _1298 * 0.5;
        float _1419 = _1308 * 0.5;
        float _1420 = _1318 * 0.5;
        float _1421 = dot(vec3(_1418, _1419, _1420), vec3(_1418, _1419, _1420));
        float _1426 = (_1421 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1421);
        float _1434 = (dot(vec3(_887, _888, _889), vec3(_1426 * _1418, _1426 * _1419, _1426 * _1420)) + 1.0) * 0.5;
        float _4487 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1443 = sqrt(((_1419 * _1419) + (_1418 * _1418)) + (_1420 * _1420)) / (_1331 + 9.9999997473787516355514526367188e-06);
        float _4498 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1444 = isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0));
        float _1445 = _1444 * 2.0;
        float _1449 = (1.0 - _1444) / (_1444 + 1.0);
        float _4509 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1450 = isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0));
        float _1459 = ((((1.0 - _1450) * (_1445 + 2.0)) * exp2(log2(isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0))) * (_1445 + 1.0))) + _1450) * _1331;
        _1467 = _1298;
        _1469 = _1297;
        _1470 = _1296;
        _1471 = _1308;
        _1472 = _1307;
        _1473 = _1306;
        _1474 = _1318;
        _1475 = _1317;
        _1476 = _1316;
        _1477 = _1331;
        _1478 = _1330;
        _1479 = _1329;
        _1480 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0)));
        _1481 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0)));
        _1482 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0)));
    }
    else
    {
        _1467 = _1468;
        _1469 = _1468;
        _1470 = _1468;
        _1471 = _1468;
        _1472 = _1468;
        _1473 = _1468;
        _1474 = _1468;
        _1475 = _1468;
        _1476 = _1468;
        _1477 = _1468;
        _1478 = _1468;
        _1479 = _1468;
        _1480 = 0.0;
        _1481 = 0.0;
        _1482 = 0.0;
    }
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    float _1787;
    float _1788;
    float _1789;
    float _1790;
    float _1791;
    float _1792;
    float _1793;
    float _1794;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1511 = fma(_1137, cbModelParam._m0[30u].z, fma(_1133, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1129));
        float _1515 = fma(_1137, cbModelParam._m0[31u].z, fma(_1133, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1129));
        float _1519 = fma(_1137, cbModelParam._m0[32u].z, fma(_1133, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1129));
        float _1542 = _1129 + _887;
        float _1543 = _1133 + _888;
        float _1544 = _1137 + _889;
        float _1554 = fma(_1544, cbModelParam._m0[30u].z, fma(_1543, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1542)) - _1511;
        float _1555 = fma(_1544, cbModelParam._m0[31u].z, fma(_1543, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1542)) - _1515;
        float _1556 = fma(_1544, cbModelParam._m0[32u].z, fma(_1543, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1542)) - _1519;
        float _1560 = inversesqrt(dot(vec3(_1554, _1555, _1556), vec3(_1554, _1555, _1556)));
        float _1573 = ((_1560 * _1554) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1511 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1574 = ((_1560 * _1555) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1515 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1575 = ((_1560 * _1556) / cbModelParam._m0[35u].z) + ((((((_1519 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1577 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1573, _1574, _1575), 0.0);
        vec4 _1584 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1573, _1574, _1575), 0.0);
        vec4 _1591 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1573, _1574, _1575), 0.0);
        vec4 _1598 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1573, _1574, _1575), 0.0);
        float _1610 = exp2((_1577.w + (-0.5)) * 20.0) * 2.0;
        float _1611 = _1610 * (_1577.x + (-0.5));
        float _1612 = _1610 * (_1577.y + (-0.5));
        float _1613 = _1610 * (_1577.z + (-0.5));
        float _1620 = exp2((_1584.w + (-0.5)) * 20.0) * 2.0;
        float _1621 = _1620 * (_1584.x + (-0.5));
        float _1622 = _1620 * (_1584.y + (-0.5));
        float _1623 = _1620 * (_1584.z + (-0.5));
        float _1630 = exp2((_1591.w + (-0.5)) * 20.0) * 2.0;
        float _1631 = _1630 * (_1591.x + (-0.5));
        float _1632 = _1630 * (_1591.y + (-0.5));
        float _1633 = _1630 * (_1591.z + (-0.5));
        float _1640 = exp2((_1598.w + (-0.5)) * 20.0) * 2.0;
        float _1641 = _1640 * (_1598.x + (-0.5));
        float _1642 = _1640 * (_1598.y + (-0.5));
        float _1643 = _1640 * (_1598.z + (-0.5));
        float _1644 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
        float _1645 = isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0));
        float _1646 = isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0));
        float _1647 = _1611 * 0.5;
        float _1648 = _1621 * 0.5;
        float _1649 = _1631 * 0.5;
        float _1650 = dot(vec3(_1647, _1648, _1649), vec3(_1647, _1648, _1649));
        float _1655 = (_1650 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1650);
        float _1663 = (dot(vec3(_887, _888, _889), vec3(_1655 * _1647, _1655 * _1648, _1655 * _1649)) + 1.0) * 0.5;
        float _4550 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
        float _1672 = sqrt(((_1648 * _1648) + (_1647 * _1647)) + (_1649 * _1649)) / (_1644 + 9.9999997473787516355514526367188e-06);
        float _4561 = isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0));
        float _1673 = isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0));
        float _1674 = _1673 * 2.0;
        float _1678 = (1.0 - _1673) / (_1673 + 1.0);
        float _4572 = isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0));
        float _1679 = isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0));
        float _1688 = ((((1.0 - _1679) * (_1674 + 2.0)) * exp2(log2(isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0))) * (_1674 + 1.0))) + _1679) * _1644;
        float _1689 = _1612 * 0.5;
        float _1690 = _1622 * 0.5;
        float _1691 = _1632 * 0.5;
        float _1692 = dot(vec3(_1689, _1690, _1691), vec3(_1689, _1690, _1691));
        float _1697 = (_1692 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1692);
        float _1705 = (dot(vec3(_887, _888, _889), vec3(_1697 * _1689, _1697 * _1690, _1697 * _1691)) + 1.0) * 0.5;
        float _4583 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
        float _1714 = sqrt(((_1690 * _1690) + (_1689 * _1689)) + (_1691 * _1691)) / (_1645 + 9.9999997473787516355514526367188e-06);
        float _4594 = isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0));
        float _1715 = isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0));
        float _1716 = _1715 * 2.0;
        float _1720 = (1.0 - _1715) / (_1715 + 1.0);
        float _4605 = isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0));
        float _1721 = isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0));
        float _1730 = ((((1.0 - _1721) * (_1716 + 2.0)) * exp2(log2(isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0))) * (_1716 + 1.0))) + _1721) * _1645;
        float _1731 = _1613 * 0.5;
        float _1732 = _1623 * 0.5;
        float _1733 = _1633 * 0.5;
        float _1734 = dot(vec3(_1731, _1732, _1733), vec3(_1731, _1732, _1733));
        float _1739 = (_1734 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1734);
        float _1747 = (dot(vec3(_887, _888, _889), vec3(_1739 * _1731, _1739 * _1732, _1739 * _1733)) + 1.0) * 0.5;
        float _4616 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _1756 = sqrt(((_1732 * _1732) + (_1731 * _1731)) + (_1733 * _1733)) / (_1646 + 9.9999997473787516355514526367188e-06);
        float _4627 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
        float _1757 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
        float _1758 = _1757 * 2.0;
        float _1762 = (1.0 - _1757) / (_1757 + 1.0);
        float _4638 = isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0));
        float _1763 = isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0));
        float _1772 = ((((1.0 - _1763) * (_1758 + 2.0)) * exp2(log2(isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0))) * (_1758 + 1.0))) + _1763) * _1646;
        _1780 = _1613;
        _1781 = _1612;
        _1782 = _1611;
        _1783 = _1623;
        _1784 = _1622;
        _1785 = _1621;
        _1786 = _1633;
        _1787 = _1632;
        _1788 = _1631;
        _1789 = _1646;
        _1790 = _1645;
        _1791 = _1644;
        _1792 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0)));
        _1793 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0)));
        _1794 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0)));
    }
    else
    {
        _1780 = _1468;
        _1781 = _1468;
        _1782 = _1468;
        _1783 = _1468;
        _1784 = _1468;
        _1785 = _1468;
        _1786 = _1468;
        _1787 = _1468;
        _1788 = _1468;
        _1789 = _1468;
        _1790 = _1468;
        _1791 = _1468;
        _1792 = 0.0;
        _1793 = 0.0;
        _1794 = 0.0;
    }
    float _1804 = (cbModelParam._m0[1u].x * (_1792 - _1480)) + _1480;
    float _1805 = (cbModelParam._m0[1u].x * (_1793 - _1481)) + _1481;
    float _1806 = (cbModelParam._m0[1u].x * (_1794 - _1482)) + _1482;
    float _1827 = fma(_1806, cbSceneParam._m0[89u].z, fma(_1805, cbSceneParam._m0[89u].y, _1804 * cbSceneParam._m0[89u].x));
    float _1830 = fma(_1806, cbSceneParam._m0[90u].z, fma(_1805, cbSceneParam._m0[90u].y, _1804 * cbSceneParam._m0[90u].x));
    float _1833 = fma(_1806, cbSceneParam._m0[91u].z, fma(_1805, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1804));
    float _1848 = _1074 * 0.5;
    float _1849 = _1075 * 0.5;
    float _1850 = _1076 * 0.5;
    float _1851 = dot(vec4(_1848, _1849, _1850, 1.0), vec4(_1782, _1785, _1788, _1791));
    float _1854 = dot(vec4(_1848, _1849, _1850, 1.0), vec4(_1781, _1784, _1787, _1790));
    float _1857 = dot(vec4(_1848, _1849, _1850, 1.0), vec4(_1780, _1783, _1786, _1789));
    float _1891;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1864 = dot(vec4(_1848, _1849, _1850, 1.0), vec4(_1467, _1471, _1474, _1477));
        float _1868 = dot(vec4(_1848, _1849, _1850, 1.0), vec4(_1469, _1472, _1475, _1478));
        float _1872 = dot(vec4(_1848, _1849, _1850, 1.0), vec4(_1470, _1473, _1476, _1479));
        float _1879 = dot(vec4(cbModelParam._m0[39u]), vec4(_1848, _1849, _1850, 1.0));
        _1891 = dot(vec3(isnan(0.0) ? _1872 : (isnan(_1872) ? 0.0 : max(_1872, 0.0)), isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0)), isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1879) ? 0.0 : (isnan(0.0) ? _1879 : max(0.0, _1879))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1891 = 1.0;
    }
    float _1902;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1893 = dot(vec4(cbModelParam._m0[40u]), vec4(_1848, _1849, _1850, 1.0));
        _1902 = dot(vec3(isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0)), isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0)), isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1893) ? 0.0 : (isnan(0.0) ? _1893 : max(0.0, _1893))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1902 = 1.0;
    }
    float _1906 = (_1902 * cbModelParam._m0[1u].x) + (_1891 * (1.0 - cbModelParam._m0[1u].x));
    float _1916 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _890);
    float _1917 = isnan(_1916) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1916 : min(cbModelParam._m0[25u].z, _1916));
    float _1997;
    float _1999;
    float _2001;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1964 = fma(_1137, cbModelParam._m0[13u].z, fma(_1133, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1129)) + cbModelParam._m0[13u].w;
        float _1968 = fma(_1137, cbModelParam._m0[14u].z, fma(_1133, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1129)) + cbModelParam._m0[14u].w;
        float _1972 = fma(_1137, cbModelParam._m0[15u].z, fma(_1133, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1129)) + cbModelParam._m0[15u].w;
        float _1975 = fma(_1076, cbModelParam._m0[13u].z, fma(_1075, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1074));
        float _1978 = fma(_1076, cbModelParam._m0[14u].z, fma(_1075, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1074));
        float _1981 = fma(_1076, cbModelParam._m0[15u].z, fma(_1075, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1074));
        float _2009;
        if (_1975 > 0.0)
        {
            _2009 = abs((1.0 - _1964) / _1975);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1975 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1964 + 1.0) / _1975);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2009 = frontier_phi_17_15_ladder;
        }
        float _2180;
        if (_1978 > 0.0)
        {
            _2180 = abs((1.0 - _1968) / _1978);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1978 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1968 + 1.0) / _1978);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2180 = frontier_phi_26_22_ladder;
        }
        float _2475;
        if (_1981 > 0.0)
        {
            _2475 = abs((1.0 - _1972) / _1981);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1981 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1972 + 1.0) / _1981);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2475 = frontier_phi_38_33_ladder;
        }
        float _2477 = isnan(_2180) ? _2009 : (isnan(_2009) ? _2180 : min(_2009, _2180));
        float _2478 = isnan(_2475) ? _2477 : (isnan(_2477) ? _2475 : min(_2477, _2475));
        float _2482 = (_2478 * _1975) + _1964;
        float _2483 = (_2478 * _1978) + _1968;
        float _2484 = (_2478 * _1981) + _1972;
        float _2485 = _2478 * 9.9999997473787516355514526367188e-05;
        float _2487 = (-1.0) - _2485;
        float _2489 = _2485 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2484 > _2489) || ((_2484 < _2487) || ((_2483 > _2489) || ((_2483 < _2487) || ((_2482 < _2487) || (_2482 > _2489))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2629 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2484, cbModelParam._m0[9u].z, fma(_2483, cbModelParam._m0[9u].y, _2482 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2484, cbModelParam._m0[10u].z, fma(_2483, cbModelParam._m0[10u].y, _2482 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2484, cbModelParam._m0[11u].z, fma(_2483, cbModelParam._m0[11u].y, _2482 * cbModelParam._m0[11u].x))), _1917);
            frontier_phi_16_38_ladder = _2629.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2629.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2629.x * cbModelParam._m0[1u].y;
        }
        _1997 = frontier_phi_16_38_ladder_2;
        _1999 = frontier_phi_16_38_ladder_1;
        _2001 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1985 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1074, _1075, _1076), _1917);
        _1997 = _1985.x * cbModelParam._m0[1u].y;
        _1999 = _1985.y * cbModelParam._m0[1u].y;
        _2001 = _1985.z * cbModelParam._m0[1u].y;
    }
    float _2005 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _890);
    float _2006 = isnan(_2005) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2005 : min(cbModelParam._m0[25u].w, _2005));
    float _2095;
    float _2097;
    float _2099;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2059 = fma(_1137, cbModelParam._m0[21u].z, fma(_1133, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1129)) + cbModelParam._m0[21u].w;
        float _2063 = fma(_1137, cbModelParam._m0[22u].z, fma(_1133, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1129)) + cbModelParam._m0[22u].w;
        float _2067 = fma(_1137, cbModelParam._m0[23u].z, fma(_1133, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1129)) + cbModelParam._m0[23u].w;
        float _2070 = fma(_1076, cbModelParam._m0[21u].z, fma(_1075, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1074));
        float _2073 = fma(_1076, cbModelParam._m0[22u].z, fma(_1075, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1074));
        float _2076 = fma(_1076, cbModelParam._m0[23u].z, fma(_1075, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1074));
        float _2185;
        if (_2070 > 0.0)
        {
            _2185 = abs((1.0 - _2059) / _2070);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2070 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2059 + 1.0) / _2070);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2185 = frontier_phi_28_24_ladder;
        }
        float _2502;
        if (_2073 > 0.0)
        {
            _2502 = abs((1.0 - _2063) / _2073);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2073 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2063 + 1.0) / _2073);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2502 = frontier_phi_40_35_ladder;
        }
        float _2840;
        if (_2076 > 0.0)
        {
            _2840 = abs((1.0 - _2067) / _2076);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2076 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2067 + 1.0) / _2076);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2840 = frontier_phi_50_47_ladder;
        }
        float _2842 = isnan(_2502) ? _2185 : (isnan(_2185) ? _2502 : min(_2185, _2502));
        float _2843 = isnan(_2840) ? _2842 : (isnan(_2842) ? _2840 : min(_2842, _2840));
        float _2847 = (_2843 * _2070) + _2059;
        float _2848 = (_2843 * _2073) + _2063;
        float _2849 = (_2843 * _2076) + _2067;
        float _2850 = _2843 * 9.9999997473787516355514526367188e-05;
        float _2851 = (-1.0) - _2850;
        float _2853 = _2850 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2849 > _2853) || ((_2849 < _2851) || ((_2848 > _2853) || ((_2848 < _2851) || ((_2847 < _2851) || (_2847 > _2853))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2971 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2849, cbModelParam._m0[17u].z, fma(_2848, cbModelParam._m0[17u].y, _2847 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2849, cbModelParam._m0[18u].z, fma(_2848, cbModelParam._m0[18u].y, _2847 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2849, cbModelParam._m0[19u].z, fma(_2848, cbModelParam._m0[19u].y, _2847 * cbModelParam._m0[19u].x))), _2006);
            frontier_phi_25_50_ladder = _2971.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2971.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2971.x * cbModelParam._m0[1u].z;
        }
        _2095 = frontier_phi_25_50_ladder_2;
        _2097 = frontier_phi_25_50_ladder_1;
        _2099 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2079 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1074, _1075, _1076), _2006);
        _2095 = _2079.x * cbModelParam._m0[1u].z;
        _2097 = _2079.y * cbModelParam._m0[1u].z;
        _2099 = _2079.z * cbModelParam._m0[1u].z;
    }
    float _2112 = (((_1100 * _1051) + _1101) * _1066) * ((cbModelParam._m0[1u].w * (_2095 - _1997)) + _1997);
    float _2114 = (((_1100 * _1053) + _1101) * _1066) * ((cbModelParam._m0[1u].w * (_2097 - _1999)) + _1999);
    float _2116 = (((_1100 * _1054) + _1101) * _1066) * ((cbModelParam._m0[1u].w * (_2099 - _2001)) + _2001);
    float _2119 = fma(_2116, cbSceneParam._m0[89u].z, fma(_2114, cbSceneParam._m0[89u].y, _2112 * cbSceneParam._m0[89u].x));
    float _2122 = fma(_2116, cbSceneParam._m0[90u].z, fma(_2114, cbSceneParam._m0[90u].y, _2112 * cbSceneParam._m0[90u].x));
    float _2125 = fma(_2116, cbSceneParam._m0[91u].z, fma(_2114, cbSceneParam._m0[91u].y, _2112 * cbSceneParam._m0[91u].x));
    float _2159 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2163 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2167 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2171 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2172 = _2159 / _2171;
    float _2173 = _2163 / _2171;
    float _2174 = _2167 / _2171;
    float _2321;
    float _2322;
    float _2323;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2201 = ((uint(_2174 > cbSceneParam._m0[59u].y) + uint(_2174 > cbSceneParam._m0[59u].x)) + uint(_2174 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2202 = _2201 + 43u;
        uint _2210 = _2201 + 44u;
        uint _2218 = _2201 + 45u;
        uint _2226 = _2201 + 46u;
        float _2237 = fma(_2171, cbSceneParam._m0[_2202].w, fma(_2167, cbSceneParam._m0[_2202].z, fma(_2163, cbSceneParam._m0[_2202].y, _2159 * cbSceneParam._m0[_2202].x)));
        float _2241 = fma(_2171, cbSceneParam._m0[_2210].w, fma(_2167, cbSceneParam._m0[_2210].z, fma(_2163, cbSceneParam._m0[_2210].y, _2159 * cbSceneParam._m0[_2210].x)));
        float _2249 = fma(_2171, cbSceneParam._m0[_2226].w, fma(_2167, cbSceneParam._m0[_2226].z, fma(_2163, cbSceneParam._m0[_2226].y, _2159 * cbSceneParam._m0[_2226].x)));
        float _2254 = cbSceneParam._m0[33u].z * _2249;
        float _2256 = cbSceneParam._m0[33u].w * _2249;
        float _2259 = fma(_2171, cbSceneParam._m0[_2218].w, fma(_2167, cbSceneParam._m0[_2218].z, fma(_2163, cbSceneParam._m0[_2218].y, _2159 * cbSceneParam._m0[_2218].x))) / _2249;
        float _2307 = (cbSceneParam._m0[33u].x - sqrt(((_2173 * _2173) + (_2172 * _2172)) + (_2174 * _2174))) * cbSceneParam._m0[33u].y;
        float _4764 = isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : max(_2307, 0.0));
        float _2314 = (isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2254 + _2237) / _2249, (_2256 + _2241) / _2249), _2259), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2256 + _2237) / _2249, (_2241 - _2254) / _2249), _2259), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2237 - _2254) / _2249, (_2241 - _2256) / _2249), _2259), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2237 - _2256) / _2249, (_2254 + _2241) / _2249), _2259), 0.0)).x), vec4(0.25)));
        _2321 = 1.0 - (_2314 * cbSceneParam._m0[34u].x);
        _2322 = 1.0 - (_2314 * cbSceneParam._m0[34u].y);
        _2323 = 1.0 - (_2314 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2321 = 1.0;
        _2322 = 1.0;
        _2323 = 1.0;
    }
    float _2387;
    float _2389;
    float _2391;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2375 = fma(_2171, cbSceneParam._m0[63u].w, fma(_2167, cbSceneParam._m0[63u].z, fma(_2163, cbSceneParam._m0[63u].y, _2159 * cbSceneParam._m0[63u].x)));
        float _2376 = fma(_2171, cbSceneParam._m0[60u].w, fma(_2167, cbSceneParam._m0[60u].z, fma(_2163, cbSceneParam._m0[60u].y, _2159 * cbSceneParam._m0[60u].x))) / _2375;
        float _2377 = fma(_2171, cbSceneParam._m0[61u].w, fma(_2167, cbSceneParam._m0[61u].z, fma(_2163, cbSceneParam._m0[61u].y, _2159 * cbSceneParam._m0[61u].x))) / _2375;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2376 >= cbSceneParam._m0[64u].x) && (_2377 >= cbSceneParam._m0[64u].y)) && (_2376 <= cbSceneParam._m0[64u].z)) && (_2377 <= cbSceneParam._m0[64u].w))
        {
            float _2515 = fma(_2171, cbSceneParam._m0[62u].w, fma(_2167, cbSceneParam._m0[62u].z, fma(_2163, cbSceneParam._m0[62u].y, _2159 * cbSceneParam._m0[62u].x))) / _2375;
            float _2519 = isnan(cbSceneParam._m0[41u].w) ? _2515 : (isnan(_2515) ? cbSceneParam._m0[41u].w : max(_2515, cbSceneParam._m0[41u].w));
            float _2562 = (cbSceneParam._m0[33u].x - sqrt(((_2173 * _2173) + (_2172 * _2172)) + (_2174 * _2174))) * cbSceneParam._m0[33u].y;
            float _4780 = isnan(0.0) ? _2562 : (isnan(_2562) ? 0.0 : max(_2562, 0.0));
            float _2569 = (isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2376, cbSceneParam._m0[33u].w + _2377), _2519), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2376, _2377 - cbSceneParam._m0[33u].z), _2519), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2376 - cbSceneParam._m0[33u].z, _2377 - cbSceneParam._m0[33u].w), _2519), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2376 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2377), _2519), 0.0)).x), vec4(0.25)));
            float _2573 = 1.0 - (_2569 * cbSceneParam._m0[34u].x);
            float _2574 = 1.0 - (_2569 * cbSceneParam._m0[34u].y);
            float _2575 = 1.0 - (_2569 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2575) ? _2323 : (isnan(_2323) ? _2575 : min(_2323, _2575));
            frontier_phi_37_36_ladder_1 = isnan(_2574) ? _2322 : (isnan(_2322) ? _2574 : min(_2322, _2574));
            frontier_phi_37_36_ladder_2 = isnan(_2573) ? _2321 : (isnan(_2321) ? _2573 : min(_2321, _2573));
        }
        else
        {
            frontier_phi_37_36_ladder = _2323;
            frontier_phi_37_36_ladder_1 = _2322;
            frontier_phi_37_36_ladder_2 = _2321;
        }
        _2387 = frontier_phi_37_36_ladder_2;
        _2389 = frontier_phi_37_36_ladder_1;
        _2391 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2387 = _2321;
        _2389 = _2322;
        _2391 = _2323;
    }
    uvec4 _2396 = floatBitsToUint(cbInstanceData._m0[_1026 + 5u]);
    uint _2398 = _2396.x * 14u;
    uint _2399 = _2398 + 13u;
    float _2406 = _1066 + (-1.0);
    float _2411 = (cbLight._m0[_2399].x * _2406) + 1.0;
    float _2412 = (cbLight._m0[_2399].y * _2406) + 1.0;
    float _2413 = (cbLight._m0[_2399].z * _2406) + 1.0;
    float _2414 = (cbLight._m0[_2399].w * _2406) + 1.0;
    uint _2415 = _2398 + 5u;
    float _2421 = isnan(1.0) ? _2412 : (isnan(_2412) ? 1.0 : min(_2412, 1.0));
    uint _2425 = _2398 + 4u;
    float _2434 = isnan(1.0) ? _2411 : (isnan(_2411) ? 1.0 : min(_2411, 1.0));
    uint _2438 = _2398 | 1u;
    float _2449 = dot(vec3(cbLight._m0[_2398].xyz), vec3(_887, _888, _889));
    float _2452 = dot(vec3(cbLight._m0[_2438].xyz), vec3(_887, _888, _889));
    float _4816 = isnan(0.0) ? _2449 : (isnan(_2449) ? 0.0 : max(_2449, 0.0));
    float _4827 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
    float _2457 = (isnan(1.0) ? _4816 : (isnan(_4816) ? 1.0 : min(_4816, 1.0))) * 0.3183098733425140380859375;
    float _2459 = (isnan(1.0) ? _4827 : (isnan(_4827) ? 1.0 : min(_4827, 1.0))) * 0.3183098733425140380859375;
    float _2466 = ((cbLight._m0[_2415].x * _2421) * _2459) + (((cbLight._m0[_2425].x * _2387) * _2434) * _2457);
    float _2467 = ((_2421 * cbLight._m0[_2415].y) * _2459) + (((cbLight._m0[_2425].y * _2389) * _2434) * _2457);
    float _2468 = ((_2421 * cbLight._m0[_2415].z) * _2459) + (((cbLight._m0[_2425].z * _2391) * _2434) * _2457);
    uvec4 _2472 = floatBitsToUint(cbLight._m0[_2398 + 12u]);
    bool _2474 = _2472.x == 0u;
    float _2576;
    float _2578;
    float _2580;
    if (_2474)
    {
        _2576 = _2466;
        _2578 = _2467;
        _2580 = _2468;
    }
    else
    {
        uint _2584 = _2398 + 6u;
        float _2600 = (dot(vec3(cbLight._m0[_2398 + 2u].xyz), vec3(_887, _888, _889)) * 0.5) + 0.5;
        float _2601 = _2600 * _2600;
        float _4838 = isnan(0.0) ? _2601 : (isnan(_2601) ? 0.0 : max(_2601, 0.0));
        float _2602 = isnan(1.0) ? _4838 : (isnan(_4838) ? 1.0 : min(_4838, 1.0));
        float _2603 = isnan(1.0) ? _2413 : (isnan(_2413) ? 1.0 : min(_2413, 1.0));
        _2576 = (((cbLight._m0[_2584].x * 0.3183098733425140380859375) * _2602) * _2603) + _2466;
        _2578 = (((cbLight._m0[_2584].y * 0.3183098733425140380859375) * _2602) * _2603) + _2467;
        _2580 = (((cbLight._m0[_2584].z * 0.3183098733425140380859375) * _2602) * _2603) + _2468;
    }
    bool _2583 = _2472.y == 0u;
    float _2638;
    float _2640;
    float _2642;
    if (_2583)
    {
        _2638 = _2576;
        _2640 = _2578;
        _2642 = _2580;
    }
    else
    {
        uint _2811 = _2398 + 7u;
        float _2827 = (dot(vec3(cbLight._m0[_2398 + 3u].xyz), vec3(_887, _888, _889)) * 0.5) + 0.5;
        float _2828 = _2827 * _2827;
        float _4854 = isnan(0.0) ? _2828 : (isnan(_2828) ? 0.0 : max(_2828, 0.0));
        float _2829 = isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0));
        float _2830 = isnan(1.0) ? _2414 : (isnan(_2414) ? 1.0 : min(_2414, 1.0));
        _2638 = (((cbLight._m0[_2811].x * 0.3183098733425140380859375) * _2829) * _2830) + _2576;
        _2640 = (((cbLight._m0[_2811].y * 0.3183098733425140380859375) * _2829) * _2830) + _2578;
        _2642 = (((cbLight._m0[_2811].z * 0.3183098733425140380859375) * _2829) * _2830) + _2580;
    }
    uint _2645 = _2398 + 8u;
    float _2658 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2398].w)) * _890) * 0.949999988079071044921875);
    float _2659 = _2658 * _2658;
    float _2660 = cbLight._m0[_2398].x + _967;
    float _2661 = cbLight._m0[_2398].y + _968;
    float _2662 = cbLight._m0[_2398].z + _969;
    float _2666 = inversesqrt(dot(vec3(_2660, _2661, _2662), vec3(_2660, _2661, _2662)));
    float _2667 = _2666 * _2660;
    float _2668 = _2666 * _2661;
    float _2669 = _2666 * _2662;
    float _2670 = dot(vec3(_887, _888, _889), vec3(cbLight._m0[_2398].xyz));
    float _4870 = isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0));
    float _2673 = isnan(1.0) ? _4870 : (isnan(_4870) ? 1.0 : min(_4870, 1.0));
    float _4881 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
    float _2674 = isnan(1.0) ? _4881 : (isnan(_4881) ? 1.0 : min(_4881, 1.0));
    float _2675 = dot(vec3(_887, _888, _889), vec3(_2667, _2668, _2669));
    float _4892 = isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : max(_2675, 0.0));
    float _2678 = isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0));
    float _2679 = dot(vec3(cbLight._m0[_2398].xyz), vec3(_2667, _2668, _2669));
    float _4903 = isnan(0.0) ? _2679 : (isnan(_2679) ? 0.0 : max(_2679, 0.0));
    float _2683 = _2659 * _2659;
    float _2687 = ((_2678 * _2678) * (_2683 + (-1.0))) + 1.0;
    float _2695 = exp2(log2(1.0 - (isnan(1.0) ? _4903 : (isnan(_4903) ? 1.0 : min(_4903, 1.0)))) * 5.0);
    float _2696 = 0.959999978542327880859375 - _1048;
    float _2698 = 0.959999978542327880859375 - _1049;
    float _2699 = 0.959999978542327880859375 - _1050;
    float _2706 = 1.0 - _2659;
    float _2717 = (0.5 / (((_2674 * ((_2673 * _2706) + _2659)) + 9.9999999392252902907785028219223e-09) + (((_2674 * _2706) + _2659) * _2673))) * _2673;
    float _4914 = isnan(0.0) ? _2717 : (isnan(_2717) ? 0.0 : max(_2717, 0.0));
    float _2719 = (isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0))) * (_2683 / ((_2687 * _2687) * 3.141590118408203125));
    uint _2733 = _2398 + 9u;
    float _2744 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2438].w)) * _890) * 0.949999988079071044921875);
    float _2745 = _2744 * _2744;
    float _2746 = cbLight._m0[_2438].x + _967;
    float _2747 = cbLight._m0[_2438].y + _968;
    float _2748 = cbLight._m0[_2438].z + _969;
    float _2752 = inversesqrt(dot(vec3(_2746, _2747, _2748), vec3(_2746, _2747, _2748)));
    float _2753 = _2752 * _2746;
    float _2754 = _2752 * _2747;
    float _2755 = _2752 * _2748;
    float _2756 = dot(vec3(_887, _888, _889), vec3(cbLight._m0[_2438].xyz));
    float _4925 = isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0));
    float _2759 = isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0));
    float _2760 = dot(vec3(_887, _888, _889), vec3(_2753, _2754, _2755));
    float _4936 = isnan(0.0) ? _2760 : (isnan(_2760) ? 0.0 : max(_2760, 0.0));
    float _2763 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
    float _2764 = dot(vec3(cbLight._m0[_2438].xyz), vec3(_2753, _2754, _2755));
    float _4947 = isnan(0.0) ? _2764 : (isnan(_2764) ? 0.0 : max(_2764, 0.0));
    float _2768 = _2745 * _2745;
    float _2772 = ((_2763 * _2763) * (_2768 + (-1.0))) + 1.0;
    float _2779 = exp2(log2(1.0 - (isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0)))) * 5.0);
    float _2786 = 1.0 - _2745;
    float _2796 = (0.5 / (((_2674 * ((_2759 * _2786) + _2745)) + 9.9999999392252902907785028219223e-09) + (((_2674 * _2786) + _2745) * _2759))) * _2759;
    float _4958 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0));
    float _2798 = (isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0))) * (_2768 / ((_2772 * _2772) * 3.141590118408203125));
    float _2808 = (((((_2779 * _2696) + _1051) * cbLight._m0[_2733].x) * _2798) * _2421) + ((((cbLight._m0[_2645].x * _2387) * ((_2695 * _2696) + _1051)) * _2719) * _2434);
    float _2809 = (((((_2779 * _2698) + _1053) * cbLight._m0[_2733].y) * _2798) * _2421) + ((((cbLight._m0[_2645].y * _2389) * ((_2695 * _2698) + _1053)) * _2719) * _2434);
    float _2810 = (((((_2779 * _2699) + _1054) * cbLight._m0[_2733].z) * _2798) * _2421) + ((((cbLight._m0[_2645].z * _2391) * ((_2695 * _2699) + _1054)) * _2719) * _2434);
    float _2866;
    float _2868;
    float _2870;
    if (_2474)
    {
        _2866 = _2808;
        _2868 = _2809;
        _2870 = _2810;
    }
    else
    {
        uint _2872 = _2398 + 2u;
        uint _2876 = _2398 + 10u;
        float _2890 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2872].w)) * _890) * 0.949999988079071044921875);
        float _2891 = _2890 * _2890;
        float _2892 = cbLight._m0[_2872].x + _967;
        float _2893 = cbLight._m0[_2872].y + _968;
        float _2894 = cbLight._m0[_2872].z + _969;
        float _2898 = inversesqrt(dot(vec3(_2892, _2893, _2894), vec3(_2892, _2893, _2894)));
        float _2899 = _2898 * _2892;
        float _2900 = _2898 * _2893;
        float _2901 = _2898 * _2894;
        float _2902 = dot(vec3(_887, _888, _889), vec3(cbLight._m0[_2872].xyz));
        float _4969 = isnan(0.0) ? _2902 : (isnan(_2902) ? 0.0 : max(_2902, 0.0));
        float _2905 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
        float _2906 = dot(vec3(_887, _888, _889), vec3(_2899, _2900, _2901));
        float _4980 = isnan(0.0) ? _2906 : (isnan(_2906) ? 0.0 : max(_2906, 0.0));
        float _2909 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
        float _2910 = dot(vec3(cbLight._m0[_2872].xyz), vec3(_2899, _2900, _2901));
        float _4991 = isnan(0.0) ? _2910 : (isnan(_2910) ? 0.0 : max(_2910, 0.0));
        float _2914 = _2891 * _2891;
        float _2918 = ((_2909 * _2909) * (_2914 + (-1.0))) + 1.0;
        float _2925 = exp2(log2(1.0 - (isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0)))) * 5.0);
        float _2932 = 1.0 - _2891;
        float _2942 = (0.5 / (((_2674 * ((_2905 * _2932) + _2891)) + 9.9999999392252902907785028219223e-09) + (((_2674 * _2932) + _2891) * _2905))) * _2905;
        float _5002 = isnan(0.0) ? _2942 : (isnan(_2942) ? 0.0 : max(_2942, 0.0));
        float _2944 = (isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0))) * (_2914 / ((_2918 * _2918) * 3.141590118408203125));
        float _2945 = isnan(1.0) ? _2413 : (isnan(_2413) ? 1.0 : min(_2413, 1.0));
        _2866 = (((((_2925 * _2696) + _1051) * cbLight._m0[_2876].x) * _2944) * _2945) + _2808;
        _2868 = (((((_2925 * _2698) + _1053) * cbLight._m0[_2876].y) * _2944) * _2945) + _2809;
        _2870 = (((((_2925 * _2699) + _1054) * cbLight._m0[_2876].z) * _2944) * _2945) + _2810;
    }
    float _2976;
    float _2978;
    float _2980;
    if (_2583)
    {
        _2976 = _2866;
        _2978 = _2868;
        _2980 = _2870;
    }
    else
    {
        uint _2987 = _2398 + 3u;
        uint _2991 = _2398 + 11u;
        float _3005 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2987].w)) * _890) * 0.949999988079071044921875);
        float _3006 = _3005 * _3005;
        float _3007 = cbLight._m0[_2987].x + _967;
        float _3008 = cbLight._m0[_2987].y + _968;
        float _3009 = cbLight._m0[_2987].z + _969;
        float _3013 = inversesqrt(dot(vec3(_3007, _3008, _3009), vec3(_3007, _3008, _3009)));
        float _3014 = _3013 * _3007;
        float _3015 = _3013 * _3008;
        float _3016 = _3013 * _3009;
        float _3017 = dot(vec3(_887, _888, _889), vec3(cbLight._m0[_2987].xyz));
        float _5018 = isnan(0.0) ? _3017 : (isnan(_3017) ? 0.0 : max(_3017, 0.0));
        float _3020 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
        float _3021 = dot(vec3(_887, _888, _889), vec3(_3014, _3015, _3016));
        float _5029 = isnan(0.0) ? _3021 : (isnan(_3021) ? 0.0 : max(_3021, 0.0));
        float _3024 = isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0));
        float _3025 = dot(vec3(cbLight._m0[_2987].xyz), vec3(_3014, _3015, _3016));
        float _5040 = isnan(0.0) ? _3025 : (isnan(_3025) ? 0.0 : max(_3025, 0.0));
        float _3029 = _3006 * _3006;
        float _3033 = ((_3024 * _3024) * (_3029 + (-1.0))) + 1.0;
        float _3040 = exp2(log2(1.0 - (isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0)))) * 5.0);
        float _3047 = 1.0 - _3006;
        float _3057 = (0.5 / (((_2674 * ((_3020 * _3047) + _3006)) + 9.9999999392252902907785028219223e-09) + (((_2674 * _3047) + _3006) * _3020))) * _3020;
        float _5051 = isnan(0.0) ? _3057 : (isnan(_3057) ? 0.0 : max(_3057, 0.0));
        float _3059 = (isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0))) * (_3029 / ((_3033 * _3033) * 3.141590118408203125));
        float _3060 = isnan(1.0) ? _2414 : (isnan(_2414) ? 1.0 : min(_2414, 1.0));
        _2976 = (((((_3040 * _2696) + _1051) * cbLight._m0[_2991].x) * _3059) * _3060) + _2866;
        _2978 = (((((_3040 * _2698) + _1053) * cbLight._m0[_2991].y) * _3059) * _3060) + _2868;
        _2980 = (((((_3040 * _2699) + _1054) * cbLight._m0[_2991].z) * _3059) * _3060) + _2870;
    }
    float _3126;
    float _3128;
    float _3130;
    float _3132;
    float _3134;
    float _3136;
    if (_2396.y == 0u)
    {
        uvec4 _3081 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3082 = _3081.x;
        uint _3093 = uint((float(_3081.y) * floor(float(uint(cbSceneParam._m0[85u].y * _988) / _3082))) + floor(float(uint(cbSceneParam._m0[85u].x * _987) / _3082)));
        float _3103 = (log2(_2174 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3104 = isnan(0.0) ? _3103 : (isnan(_3103) ? 0.0 : max(_3103, 0.0));
        uint _3107 = uint(isnan(14.0) ? _3104 : (isnan(_3104) ? 14.0 : min(_3104, 14.0)));
        uvec4 _3112 = texelFetch(g_lightClusterGridBuffer, int(((_3107 << 2u) + (_3093 << 6u)) >> 2u));
        uint _3113 = _3112.x;
        uint _3114 = _3081.z;
        float _3238;
        float _3240;
        float _3242;
        float _3244;
        float _3246;
        float _3248;
        if (((((1u << ((_3114 >> 4u) & 15u)) + 4294967295u) & _3113) == 0u) || ((_3114 & 240u) == 0u))
        {
            _3238 = 0.0;
            _3240 = 0.0;
            _3242 = 0.0;
            _3244 = 0.0;
            _3246 = 0.0;
            _3248 = 0.0;
        }
        else
        {
            float _3239;
            float _3241;
            float _3243;
            float _3245;
            float _3247;
            float _3249;
            float _3399 = 0.0;
            float _3400 = 0.0;
            float _3401 = 0.0;
            float _3402 = 0.0;
            float _3403 = 0.0;
            float _3404 = 0.0;
            uint _3405 = 0u;
            uint _3414;
            bool _3415;
            for (;;)
            {
                _3414 = texelFetch(g_lightClassification, int((((_3107 << 5u) + (_3093 << 9u)) + (_3405 << 2u)) >> 2u)).x;
                _3415 = _3414 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3415)
                {
                    frontier_phi_71_pred = _3404;
                    frontier_phi_71_pred_1 = _3403;
                    frontier_phi_71_pred_2 = _3402;
                    frontier_phi_71_pred_3 = _3401;
                    frontier_phi_71_pred_4 = _3400;
                    frontier_phi_71_pred_5 = _3399;
                }
                else
                {
                    float _3544;
                    float _3545;
                    float _3546;
                    float _3547;
                    float _3548;
                    float _3549;
                    uint _3550;
                    _3544 = _3399;
                    _3545 = _3400;
                    _3546 = _3401;
                    _3547 = _3402;
                    _3548 = _3403;
                    _3549 = _3404;
                    _3550 = _3414;
                    float _3471;
                    float _3472;
                    float _3473;
                    float _3474;
                    float _3475;
                    float _3476;
                    for (;;)
                    {
                        uint _3554 = uint(findLSB(_3550)) + (_3405 << 5u);
                        uint _3551 = (_3550 + 4294967295u) & _3550;
                        uint _3556 = _3554 * 48u;
                        vec4 _3570 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3556)).x, texelFetch(g_PointLightRenderingBuffer, int(_3556 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3556 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3556 + 3u)).x));
                        uint _3576 = (_3554 * 48u) + 4u;
                        vec4 _3589 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3576)).x, texelFetch(g_PointLightRenderingBuffer, int(_3576 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3576 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3576 + 3u)).x));
                        uint _3595 = (_3554 * 48u) + 8u;
                        vec3 _3606 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3595)).x, texelFetch(g_PointLightRenderingBuffer, int(_3595 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3595 + 2u)).x));
                        float _3610 = _3570.x - _2172;
                        float _3611 = _3570.y - _2173;
                        float _3612 = _3570.z - _2174;
                        float _3613 = dot(vec3(_3610, _3611, _3612), vec3(_3610, _3611, _3612));
                        float _3616 = inversesqrt(_3613);
                        float _3617 = _3616 * _3610;
                        float _3618 = _3616 * _3611;
                        float _3619 = _3616 * _3612;
                        float _3620 = dot(vec3(_1007, _1010, _1013), vec3(_3617, _3618, _3619));
                        float _3625 = 1.0 - (_3613 * _3570.w);
                        float _5077 = isnan(0.0) ? _3625 : (isnan(_3625) ? 0.0 : max(_3625, 0.0));
                        float _3626 = isnan(1.0) ? _5077 : (isnan(_5077) ? 1.0 : min(_5077, 1.0));
                        float _3627 = sqrt(_3613) * _3589.w;
                        float _3630 = 1.39999997615814208984375 / (_3627 + 1.39999997615814208984375);
                        float _3631 = _3630 * _3630;
                        float _3634 = ((1.0 - _3631) * _3620) + _3631;
                        float _3637 = _3627 * _3627;
                        float _3641 = ((isnan(0.0) ? _3634 : (isnan(_3634) ? 0.0 : max(_3634, 0.0))) * _3626) / ((_3637 * 0.699999988079071044921875) + 1.0);
                        float _3645 = (-0.0) - _2172;
                        float _3646 = (-0.0) - _2173;
                        float _3647 = (-0.0) - _2174;
                        float _3651 = inversesqrt(dot(vec3(_3645, _3646, _3647), vec3(_3645, _3646, _3647)));
                        float _3652 = _3651 * _3645;
                        float _3653 = _3651 * _3646;
                        float _3654 = _3651 * _3647;
                        float _3661 = exp2(log2(1.0 / ((_3637 * 3.5) + 5.0)) * 0.25);
                        float _3662 = 1.0 - _1082;
                        float _3669 = sqrt(1.0 - ((1.0 - (_3662 * _3662)) * (1.0 - (_3661 * _3661))));
                        float _3670 = _3669 * _3669;
                        float _3671 = _3670 * _3670;
                        float _3672 = _3652 + _3617;
                        float _3673 = _3653 + _3618;
                        float _3674 = _3654 + _3619;
                        float _3678 = inversesqrt(dot(vec3(_3672, _3673, _3674), vec3(_3672, _3673, _3674)));
                        float _3682 = dot(vec3(_1007, _1010, _1013), vec3(_3652, _3653, _3654));
                        float _5093 = isnan(0.0) ? _3682 : (isnan(_3682) ? 0.0 : max(_3682, 0.0));
                        float _3685 = isnan(1.0) ? _5093 : (isnan(_5093) ? 1.0 : min(_5093, 1.0));
                        float _3686 = dot(vec3(_1007, _1010, _1013), vec3(_3678 * _3672, _3678 * _3673, _3678 * _3674));
                        float _5104 = isnan(0.0) ? _3686 : (isnan(_3686) ? 0.0 : max(_3686, 0.0));
                        float _3689 = isnan(1.0) ? _5104 : (isnan(_5104) ? 1.0 : min(_5104, 1.0));
                        float _3693 = ((_3689 * _3689) * (_3671 + (-1.0))) + 1.0;
                        float _3694 = _3630 * _3670;
                        float _3695 = _3694 * _3694;
                        float _3698 = ((1.0 - _3695) * _3620) + _3695;
                        float _5115 = isnan(0.0) ? _3698 : (isnan(_3698) ? 0.0 : max(_3698, 0.0));
                        float _3699 = isnan(1.0) ? _5115 : (isnan(_5115) ? 1.0 : min(_5115, 1.0));
                        float _3700 = 1.0 - _3670;
                        float _3710 = (0.5 / (((_3699 * ((_3685 * _3700) + _3670)) + 9.9999999392252902907785028219223e-09) + (((_3699 * _3700) + _3670) * _3685))) * _3699;
                        float _5126 = isnan(0.0) ? _3710 : (isnan(_3710) ? 0.0 : max(_3710, 0.0));
                        float _3721 = (((_3671 * 3.1415927410125732421875) * (isnan(1.0) ? _5126 : (isnan(_5126) ? 1.0 : min(_5126, 1.0)))) / ((_3693 * _3693) * ((_3637 * 2.1991131305694580078125) + 3.141590118408203125))) * _3626;
                        _3474 = (_3641 * _3589.x) + _3547;
                        _3475 = (_3641 * _3589.y) + _3548;
                        _3476 = (_3641 * _3589.z) + _3549;
                        _3471 = (_3721 * _3606.x) + _3544;
                        _3472 = (_3721 * _3606.y) + _3545;
                        _3473 = (_3721 * _3606.z) + _3546;
                        if (_3551 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3544 = _3471;
                            _3545 = _3472;
                            _3546 = _3473;
                            _3547 = _3474;
                            _3548 = _3475;
                            _3549 = _3476;
                            _3550 = _3551;
                        }
                    }
                    frontier_phi_71_pred = _3476;
                    frontier_phi_71_pred_1 = _3475;
                    frontier_phi_71_pred_2 = _3474;
                    frontier_phi_71_pred_3 = _3473;
                    frontier_phi_71_pred_4 = _3472;
                    frontier_phi_71_pred_5 = _3471;
                }
                _3249 = frontier_phi_71_pred;
                _3247 = frontier_phi_71_pred_1;
                _3245 = frontier_phi_71_pred_2;
                _3243 = frontier_phi_71_pred_3;
                _3241 = frontier_phi_71_pred_4;
                _3239 = frontier_phi_71_pred_5;
                uint _3406 = _3405 + 1u;
                if (_3406 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3399 = _3239;
                    _3400 = _3241;
                    _3401 = _3243;
                    _3402 = _3245;
                    _3403 = _3247;
                    _3404 = _3249;
                    _3405 = _3406;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3238 = _3239;
            _3240 = _3241;
            _3242 = _3243;
            _3244 = _3245;
            _3246 = _3247;
            _3248 = _3249;
        }
        uvec4 _3252 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3253 = _3252.z;
        uint _3255 = (_3253 >> 8u) & 15u;
        float _3367;
        float _3369;
        float _3371;
        float _3373;
        float _3375;
        float _3377;
        if (((4294967295u << _3255) & _3113) == 0u)
        {
            _3367 = _3238;
            _3369 = _3240;
            _3371 = _3242;
            _3373 = _3244;
            _3375 = _3246;
            _3377 = _3248;
        }
        else
        {
            float _3392 = inversesqrt(dot(vec3(_2172, _2173, _2174), vec3(_2172, _2173, _2174)));
            float _3393 = _3392 * _2172;
            float _3394 = _3392 * _2173;
            float _3395 = _3392 * _2174;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3255 < ((_3253 >> 12u) & 15u))
            {
                float _3368;
                float _3370;
                float _3372;
                float _3374;
                float _3376;
                float _3378;
                float _3527 = _3238;
                float _3528 = _3240;
                float _3529 = _3242;
                float _3530 = _3244;
                float _3531 = _3246;
                float _3532 = _3248;
                uint _3533 = _3255;
                uint _3542;
                bool _3543;
                for (;;)
                {
                    _3542 = texelFetch(g_lightClassification, int((((_3107 << 5u) + (_3093 << 9u)) + (_3533 << 2u)) >> 2u)).x;
                    _3543 = _3542 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3543)
                    {
                        frontier_phi_82_pred = _3532;
                        frontier_phi_82_pred_1 = _3531;
                        frontier_phi_82_pred_2 = _3530;
                        frontier_phi_82_pred_3 = _3529;
                        frontier_phi_82_pred_4 = _3528;
                        frontier_phi_82_pred_5 = _3527;
                    }
                    else
                    {
                        float _3735;
                        float _3736;
                        float _3737;
                        float _3738;
                        float _3739;
                        float _3740;
                        float _4029;
                        float _4030;
                        float _4031;
                        float _4032;
                        float _4033;
                        float _4034;
                        float _3748 = _3527;
                        float _3749 = _3528;
                        float _3750 = _3529;
                        float _3751 = _3530;
                        float _3752 = _3531;
                        float _3753 = _3532;
                        uint _3754 = _3542;
                        uint _3755;
                        vec4 _3780;
                        float _3781;
                        vec4 _3796;
                        vec3 _3808;
                        vec4 _3823;
                        vec4 _3838;
                        float _3885;
                        bool _3886;
                        for (;;)
                        {
                            uint _3765 = ((_3533 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3754));
                            _3755 = (_3754 + 4294967295u) & _3754;
                            uint _3767 = _3765 * 40u;
                            _3780 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3767)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3767 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3767 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3767 + 3u)).x));
                            _3781 = _3780.w;
                            uint _3783 = (_3765 * 40u) + 4u;
                            _3796 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3783)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 3u)).x));
                            uint _3798 = (_3765 * 40u) + 8u;
                            _3808 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3798)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3798 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3798 + 2u)).x));
                            uint _3810 = (_3765 * 40u) + 16u;
                            _3823 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3810)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3810 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3810 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3810 + 3u)).x));
                            uint _3825 = (_3765 * 40u) + 20u;
                            _3838 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3825)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3825 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3825 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3825 + 3u)).x));
                            uint _3841 = (_3765 * 40u) + 24u;
                            vec4 _3854 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3841)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3841 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3841 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3841 + 3u)).x));
                            uint _3860 = (_3765 * 40u) + 28u;
                            vec4 _3873 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3860)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3860 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3860 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3860 + 3u)).x));
                            _3885 = fma(_2174, _3873.z, fma(_2173, _3873.y, _3873.x * _2172)) + _3873.w;
                            _3886 = !((fma(_2174, _3854.z, fma(_2173, _3854.y, _3854.x * _2172)) + _3854.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3886)
                            {
                                float _3913 = _3780.x - _2172;
                                float _3914 = _3780.y - _2173;
                                float _3915 = _3780.z - _2174;
                                float _3916 = dot(vec3(_3913, _3914, _3915), vec3(_3913, _3914, _3915));
                                float _3919 = inversesqrt(_3916);
                                float _3920 = _3919 * _3913;
                                float _3921 = _3919 * _3914;
                                float _3922 = _3919 * _3915;
                                float _3926 = 1.0 - (_3916 / (_3781 * _3781));
                                float _5137 = isnan(0.0) ? _3926 : (isnan(_3926) ? 0.0 : max(_3926, 0.0));
                                float _3927 = isnan(1.0) ? _5137 : (isnan(_5137) ? 1.0 : min(_5137, 1.0));
                                float _3931 = sqrt(_3916) * _3796.w;
                                float _3933 = 1.39999997615814208984375 / (_3931 + 1.39999997615814208984375);
                                float _3934 = _3933 * _3933;
                                float _3937 = ((1.0 - _3934) * dot(vec3(_3920, _3921, _3922), vec3(_1007, _1010, _1013))) + _3934;
                                float _3940 = _3931 * _3931;
                                float _3944 = (fma(_2174, _3823.z, fma(_2173, _3823.y, _3823.x * _2172)) + _3823.w) / _3885;
                                float _3945 = (fma(_2174, _3838.z, fma(_2173, _3838.y, _3838.x * _2172)) + _3838.w) / _3885;
                                float _3949 = 1.0 - dot(vec2(_3944, _3945), vec2(_3944, _3945));
                                float _5153 = isnan(0.0) ? _3949 : (isnan(_3949) ? 0.0 : max(_3949, 0.0));
                                float _3950 = isnan(1.0) ? _5153 : (isnan(_5153) ? 1.0 : min(_5153, 1.0));
                                float _3951 = _3950 * (((isnan(0.0) ? _3937 : (isnan(_3937) ? 0.0 : max(_3937, 0.0))) * _3927) / ((_3940 * 0.699999988079071044921875) + 1.0));
                                float _3963 = exp2(log2(1.0 / ((_3940 * 3.5) + 5.0)) * 0.25);
                                float _3964 = 1.0 - _1082;
                                float _3971 = sqrt(1.0 - ((1.0 - (_3964 * _3964)) * (1.0 - (_3963 * _3963))));
                                float _3972 = _3971 * _3971;
                                float _3973 = _3972 * _3972;
                                float _3974 = _3920 - _3393;
                                float _3975 = _3921 - _3394;
                                float _3976 = _3922 - _3395;
                                float _3980 = inversesqrt(dot(vec3(_3974, _3975, _3976), vec3(_3974, _3975, _3976)));
                                float _3984 = dot(vec3(_1007, _1010, _1013), vec3((-0.0) - _3393, (-0.0) - _3394, (-0.0) - _3395));
                                float _5164 = isnan(0.0) ? _3984 : (isnan(_3984) ? 0.0 : max(_3984, 0.0));
                                float _3987 = isnan(1.0) ? _5164 : (isnan(_5164) ? 1.0 : min(_5164, 1.0));
                                float _3988 = dot(vec3(_1007, _1010, _1013), vec3(_3980 * _3974, _3980 * _3975, _3980 * _3976));
                                float _5175 = isnan(0.0) ? _3988 : (isnan(_3988) ? 0.0 : max(_3988, 0.0));
                                float _3991 = isnan(1.0) ? _5175 : (isnan(_5175) ? 1.0 : min(_5175, 1.0));
                                float _3995 = ((_3991 * _3991) * (_3973 + (-1.0))) + 1.0;
                                float _3996 = _3933 * _3972;
                                float _3997 = _3996 * _3996;
                                float _4003 = ((1.0 - _3997) * dot(vec3(_1007, _1010, _1013), vec3(_3920, _3921, _3922))) + _3997;
                                float _5186 = isnan(0.0) ? _4003 : (isnan(_4003) ? 0.0 : max(_4003, 0.0));
                                float _4004 = isnan(1.0) ? _5186 : (isnan(_5186) ? 1.0 : min(_5186, 1.0));
                                float _4005 = 1.0 - _3972;
                                float _4015 = (0.5 / (((_4004 * ((_3987 * _4005) + _3972)) + 9.9999999392252902907785028219223e-09) + (((_4004 * _4005) + _3972) * _3987))) * _4004;
                                float _5197 = isnan(0.0) ? _4015 : (isnan(_4015) ? 0.0 : max(_4015, 0.0));
                                float _4025 = (_3950 * _3927) * (((_3973 * 3.1415927410125732421875) * (isnan(1.0) ? _5197 : (isnan(_5197) ? 1.0 : min(_5197, 1.0)))) / ((_3995 * _3995) * ((_3940 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3951 * _3796.z;
                                frontier_phi_88_pred_1 = _3951 * _3796.y;
                                frontier_phi_88_pred_2 = _3951 * _3796.x;
                                frontier_phi_88_pred_3 = _4025 * _3808.z;
                                frontier_phi_88_pred_4 = _4025 * _3808.y;
                                frontier_phi_88_pred_5 = _4025 * _3808.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _4034 = frontier_phi_88_pred;
                            _4033 = frontier_phi_88_pred_1;
                            _4032 = frontier_phi_88_pred_2;
                            _4031 = frontier_phi_88_pred_3;
                            _4030 = frontier_phi_88_pred_4;
                            _4029 = frontier_phi_88_pred_5;
                            _3738 = _4032 + _3751;
                            _3739 = _4033 + _3752;
                            _3740 = _4034 + _3753;
                            _3735 = _4029 + _3748;
                            _3736 = _4030 + _3749;
                            _3737 = _4031 + _3750;
                            if (_3755 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3748 = _3735;
                                _3749 = _3736;
                                _3750 = _3737;
                                _3751 = _3738;
                                _3752 = _3739;
                                _3753 = _3740;
                                _3754 = _3755;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3740;
                        frontier_phi_82_pred_1 = _3739;
                        frontier_phi_82_pred_2 = _3738;
                        frontier_phi_82_pred_3 = _3737;
                        frontier_phi_82_pred_4 = _3736;
                        frontier_phi_82_pred_5 = _3735;
                    }
                    _3378 = frontier_phi_82_pred;
                    _3376 = frontier_phi_82_pred_1;
                    _3374 = frontier_phi_82_pred_2;
                    _3372 = frontier_phi_82_pred_3;
                    _3370 = frontier_phi_82_pred_4;
                    _3368 = frontier_phi_82_pred_5;
                    uint _3534 = _3533 + 1u;
                    if (_3534 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3527 = _3368;
                        _3528 = _3370;
                        _3529 = _3372;
                        _3530 = _3374;
                        _3531 = _3376;
                        _3532 = _3378;
                        _3533 = _3534;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3374;
                frontier_phi_63_64_ladder_1 = _3378;
                frontier_phi_63_64_ladder_2 = _3376;
                frontier_phi_63_64_ladder_3 = _3372;
                frontier_phi_63_64_ladder_4 = _3370;
                frontier_phi_63_64_ladder_5 = _3368;
            }
            else
            {
                frontier_phi_63_64_ladder = _3244;
                frontier_phi_63_64_ladder_1 = _3248;
                frontier_phi_63_64_ladder_2 = _3246;
                frontier_phi_63_64_ladder_3 = _3242;
                frontier_phi_63_64_ladder_4 = _3240;
                frontier_phi_63_64_ladder_5 = _3238;
            }
            _3367 = frontier_phi_63_64_ladder_5;
            _3369 = frontier_phi_63_64_ladder_4;
            _3371 = frontier_phi_63_64_ladder_3;
            _3373 = frontier_phi_63_64_ladder;
            _3375 = frontier_phi_63_64_ladder_2;
            _3377 = frontier_phi_63_64_ladder_1;
        }
        float _3382 = isnan(1.0) ? _1066 : (isnan(_1066) ? 1.0 : min(_1066, 1.0));
        _3126 = (_3382 * _3373) + _2638;
        _3128 = (_3382 * _3375) + _2640;
        _3130 = (_3382 * _3377) + _2642;
        _3132 = ((_3367 * _1051) * _3382) + _2976;
        _3134 = ((_3369 * _1053) * _3382) + _2978;
        _3136 = ((_3371 * _1054) * _3382) + _2980;
    }
    else
    {
        _3126 = _2638;
        _3128 = _2640;
        _3130 = _2642;
        _3132 = _2976;
        _3134 = _2978;
        _3136 = _2980;
    }
    uint _3142 = _1027 + uint(cbMatDynParam._m0[0u].w);
    float _3148 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _3154 = (((((_3148 * cbMtdParam._m0[14u].x) * _745.x) * _768) * _842) * (((1.0 - _821) * cbMtdParam._m0[20u].w) + _821)) * cbInstanceData._m0[_3142].x;
    float _3160 = (((((_3148 * cbMtdParam._m0[14u].y) * _745.y) * _768) * _842) * (((1.0 - _823) * cbMtdParam._m0[20u].w) + _823)) * cbInstanceData._m0[_3142].y;
    float _3166 = (((((_3148 * cbMtdParam._m0[14u].z) * _745.z) * _768) * _842) * (((1.0 - _825) * cbMtdParam._m0[20u].w) + _825)) * cbInstanceData._m0[_3142].z;
    float _5213 = isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0));
    float _5224 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
    float _5235 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
    float _3183 = (((isnan(1.0) ? _5213 : (isnan(_5213) ? 1.0 : min(_5213, 1.0))) * (_3126 + ((isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0))) * _1066))) + ((_3132 + ((isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0))) * _1906)) * cbPerFrame._m0[3u].x)) + _3154;
    float _3185 = (_3160 + ((_3134 + ((isnan(0.0) ? _2122 : (isnan(_2122) ? 0.0 : max(_2122, 0.0))) * _1906)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5224 : (isnan(_5224) ? 1.0 : min(_5224, 1.0))) * (_3128 + ((isnan(0.0) ? _1830 : (isnan(_1830) ? 0.0 : max(_1830, 0.0))) * _1066)));
    float _3187 = (_3166 + ((_3136 + ((isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0))) * _1906)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5235 : (isnan(_5235) ? 1.0 : min(_5235, 1.0))) * (_3130 + ((isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0))) * _1066)));
    float _3188 = isnan(0.0) ? _3183 : (isnan(_3183) ? 0.0 : max(_3183, 0.0));
    float _3189 = isnan(0.0) ? _3185 : (isnan(_3185) ? 0.0 : max(_3185, 0.0));
    float _3190 = isnan(0.0) ? _3187 : (isnan(_3187) ? 0.0 : max(_3187, 0.0));
    float _3196 = cbMtdParam._m0[2u].x * _3154;
    float _3197 = cbMtdParam._m0[2u].y * _3160;
    float _3198 = cbMtdParam._m0[2u].z * _3166;
    float _5261 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3200 = isnan(1.0) ? _5261 : (isnan(_5261) ? 1.0 : min(_5261, 1.0));
    uint _3201 = _1026 + 6u;
    float _3209 = _987 / cbSceneParam._m0[86u].x;
    float _3210 = _988 / cbSceneParam._m0[86u].y;
    vec4 _3224 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3209, _3210, (log2((isnan(cbSceneParam._m0[77u].w) ? _910 : (isnan(_910) ? cbSceneParam._m0[77u].w : min(_910, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3226 = _3224.x;
    float _3227 = _3224.y;
    float _3228 = _3224.z;
    float _3229 = _3224.w;
    float _3300;
    float _3302;
    float _3304;
    float _3306;
    if (_910 > cbSceneParam._m0[78u].w)
    {
        float _3263 = isnan(_910) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _910 : min(cbSceneParam._m0[80u].w, _910));
        float _3264 = _3263 / _910;
        float _3275 = _3264 * _960;
        float _3276 = _961 * _3264;
        float _3277 = (-0.0) - _3276;
        float _3278 = _3264 * _962;
        float _3280 = (cbSceneParam._m0[77u].w * _3277) / _3263;
        float _3281 = _3280 + cbSceneParam._m0[79u].w;
        float _3282 = cbSceneParam._m0[79u].w - _3276;
        float _3288 = sqrt(((_3275 * _3275) + (_3276 * _3276)) + (_3278 * _3278));
        float _3291 = (1.0 - (cbSceneParam._m0[77u].w / _3263)) * _3288;
        float _3296 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3298 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3484;
        if (abs((_3277 - _3280) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3484 = ((((_3281 > 0.0) ? exp2(_3296 * _3281) : (2.0 - exp2(_3298 * _3281))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3291;
        }
        else
        {
            float _3428 = 1.0 / cbSceneParam._m0[80u].x;
            float _3429 = isnan(_3282) ? _3281 : (isnan(_3281) ? _3282 : max(_3281, _3282));
            float _3430 = isnan(_3282) ? _3281 : (isnan(_3281) ? _3282 : min(_3281, _3282));
            float _3439 = isnan(0.0) ? _3429 : (isnan(_3429) ? 0.0 : min(_3429, 0.0));
            float _3440 = isnan(0.0) ? _3430 : (isnan(_3430) ? 0.0 : min(_3430, 0.0));
            _3484 = ((abs(_3288 / _3277) * cbSceneParam._m0[80u].y) * ((((_3439 - _3440) * 2.0) - ((exp2(_3296 * (isnan(0.0) ? _3429 : (isnan(_3429) ? 0.0 : max(_3429, 0.0)))) - exp2(_3296 * (isnan(0.0) ? _3430 : (isnan(_3430) ? 0.0 : max(_3430, 0.0))))) * _3428)) - ((exp2(_3298 * _3439) - exp2(_3298 * _3440)) * _3428))) + (_3291 * cbSceneParam._m0[80u].z);
        }
        vec4 _3486 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3209, _3210, 1.0), 0.0);
        float _3495 = exp2((_3484 * (-1.44269502162933349609375)) * (1.0 - _3486.w));
        float _3496 = log2(_3495);
        float _3512 = log2(_3229);
        _3300 = (exp2(_3512 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3496 * cbSceneParam._m0[78u].x)) * _3486.x) / cbSceneParam._m0[78u].x)) + _3226;
        _3302 = (exp2(_3512 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3496 * cbSceneParam._m0[78u].y)) * _3486.y) / cbSceneParam._m0[78u].y)) + _3227;
        _3304 = (exp2(_3512 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3496 * cbSceneParam._m0[78u].z)) * _3486.z) / cbSceneParam._m0[78u].z)) + _3228;
        _3306 = _3495 * _3229;
    }
    else
    {
        _3300 = _3226;
        _3302 = _3227;
        _3304 = _3228;
        _3306 = _3229;
    }
    bool _3522;
    vec4 _3316;
    vec4 _3338;
    float _3340;
    float _3344;
    float _3345;
    float _3346;
    float _3349;
    float _3352;
    float _3355;
    float _3356;
    bool _3366;
    for (;;)
    {
        _3316 = cbMatDynParam._m0[0u];
        float _3318 = roundEven(_3316.y);
        bool _3319 = _3318 == 3.0;
        float _3320 = log2(_3306);
        float _3324 = exp2(_3320 * cbSceneParam._m0[78u].x);
        float _3325 = exp2(_3320 * cbSceneParam._m0[78u].y);
        float _3326 = exp2(_3320 * cbSceneParam._m0[78u].z);
        float _3327 = _3324 * _3188;
        float _3328 = _3325 * _3189;
        float _3329 = _3326 * _3190;
        float _3336 = _976 + (-0.5);
        _3338 = cbMtdParam._m0[1u];
        _3340 = _3338.y * _3336;
        float _3343 = (_3318 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3344 = _3343 * (_3319 ? _3327 : (_3327 + (cbSceneParam._m0[72u].w * _3300)));
        _3345 = _3343 * (_3319 ? _3328 : (_3328 + (cbSceneParam._m0[72u].w * _3302)));
        _3346 = _3343 * (_3319 ? _3329 : (_3329 + (cbSceneParam._m0[72u].w * _3304)));
        _3349 = ((_3196 * _3200) * _3324) * _3343;
        _3352 = ((_3197 * _3200) * _3325) * _3343;
        _3355 = ((_3198 * _3200) * _3326) * _3343;
        _3356 = _3336 * 0.999000012874603271484375;
        _3366 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3366)
        {
            if ((cbInstanceData._m0[_1026 + 7u].x + _3356) < 0.5)
            {
                _3522 = true;
                break;
            }
        }
        uint _3463 = _1027 + uint(_3316.w);
        if ((cbInstanceData._m0[_3463].w < 1.0) && ((cbInstanceData._m0[_3463].w + _3356) < 0.5))
        {
            _3522 = true;
            break;
        }
        if ((_3340 + 1.0) < _3338.x)
        {
            _3522 = true;
            break;
        }
        _3522 = false;
        break;
    }
    float _3726;
    if (_3522)
    {
        discard_state = true;
        _3726 = 0.0;
    }
    else
    {
        _3726 = cbInstanceData._m0[_3201].w;
    }
    SV_Target.x = _3344;
    SV_Target.y = _3345;
    SV_Target.z = _3346;
    SV_Target.w = _3726;
    SV_Target_1.x = _3349;
    SV_Target_1.y = _3352;
    SV_Target_1.z = _3355;
    SV_Target_1.w = cbInstanceData._m0[_3201].w;
    discard_exit();
}


