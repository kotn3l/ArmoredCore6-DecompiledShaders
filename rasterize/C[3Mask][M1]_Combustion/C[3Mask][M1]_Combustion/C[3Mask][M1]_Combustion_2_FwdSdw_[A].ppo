#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_20;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1475;
float _4192;
float _4193;
float _4194;
float _4195;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _232 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _233 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _234 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _240 = inversesqrt(dot(vec3(_232, _233, _234), vec3(_232, _233, _234)));
    float _247 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _254 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _276 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _282 = _276.x * cbMtdParam._m0[10u].x;
    float _283 = _276.y * cbMtdParam._m0[10u].y;
    float _284 = _276.z * cbMtdParam._m0[10u].z;
    vec4 _303 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _322 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _350 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w)).x;
    float _360 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _322.x) * 2.0) - _350)) + 1.0;
    float _4204 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    float _361 = isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0));
    float _368 = (_361 * ((_303.x * cbMtdParam._m0[11u].x) - _282)) + _282;
    float _369 = (_361 * ((_303.y * cbMtdParam._m0[11u].y) - _283)) + _283;
    float _370 = (_361 * ((_303.z * cbMtdParam._m0[11u].z) - _284)) + _284;
    vec4 _388 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _401 = (((((1.0 - _322.y) * 2.0) - _350) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _4215 = isnan(0.0) ? _401 : (isnan(_401) ? 0.0 : max(_401, 0.0));
    float _402 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
    float _409 = (((_388.x * cbMtdParam._m0[12u].x) - _368) * _402) + _368;
    float _410 = (_402 * ((_388.y * cbMtdParam._m0[12u].y) - _369)) + _369;
    float _411 = (_402 * ((_388.z * cbMtdParam._m0[12u].z) - _370)) + _370;
    vec4 _429 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _442 = (((((1.0 - _322.z) * 2.0) - _350) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _4226 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _443 = isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0));
    vec4 _471 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _479 = ((((((_429.x * cbMtdParam._m0[13u].x) - _409) * _443) + _409) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _471.x;
    float _482 = ((((_443 * ((_429.y * cbMtdParam._m0[13u].y) - _410)) + _410) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _471.y;
    float _485 = ((((_443 * ((_429.z * cbMtdParam._m0[13u].z) - _411)) + _411) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _471.z;
    vec4 _510 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    vec4 _529 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.z) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.w) + cbTextureTilingScale._m0[20u].w));
    float _532 = _529.x + 0.00999999977648258209228515625;
    float _539 = (TEXCOORD_8 - ((cbMtdParam._m0[20u].x * (1.0 - TEXCOORD_8)) * _532)) * (cbMtdParam._m0[19u].w + 1.0);
    float _4237 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    float _540 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
    float _547 = (_540 * ((_510.x * cbMtdParam._m0[16u].x) - _479)) + _479;
    float _548 = (_540 * ((_510.y * cbMtdParam._m0[16u].y) - _482)) + _482;
    float _549 = (_540 * ((_510.z * cbMtdParam._m0[16u].z) - _485)) + _485;
    vec4 _562 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _564 = _562.x;
    float _581 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _564) * _361) + _564;
    float _598 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _581) * _402) + _581;
    float _615 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x - _598) * _443) + _598;
    float _617 = _615 - (_615 * TEXCOORD_8);
    vec4 _630 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    vec4 _651 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _653 = _651.x;
    float _654 = _651.y;
    float _655 = _651.z;
    vec4 _667 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _678 = ((_667.x - _653) * _361) + _653;
    float _679 = ((_667.y - _654) * _361) + _654;
    float _680 = ((_667.z - _655) * _361) + _655;
    vec4 _693 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _704 = ((_693.x - _678) * _402) + _678;
    float _705 = ((_693.y - _679) * _402) + _679;
    float _706 = ((_693.z - _680) * _402) + _680;
    vec4 _719 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _732 = ((_719.z - _706) * _443) + _706;
    float _735 = ((((_719.x - _704) * _443) + _704) * 2.0) + (-1.0);
    float _736 = ((((_719.y - _705) * _443) + _705) * 2.0) + (-1.0);
    float _737 = dot(vec2(_735, _736), vec2(_735, _736));
    float _4248 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
    float _742 = sqrt(1.0 - (isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0))));
    float _747 = (((_630.z - _732) * TEXCOORD_8) * cbMtdParam._m0[20u].y) + _732;
    vec4 _777 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[15u].x) + cbTextureTilingScale._m0[15u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[15u].y) + cbTextureTilingScale._m0[15u].w));
    float _791 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4259 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
    float _792 = isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0));
    float _800 = (((_792 * _792) * (3.0 - (_792 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _808 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _816 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4270 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _817 = isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0));
    float _821 = (_817 * _817) * (3.0 - (_817 * 2.0));
    float _822 = _821 * cbMtdParam._m0[22u].x;
    float _823 = _821 * cbMtdParam._m0[22u].y;
    float _824 = sin(_808);
    float _825 = cos(_808);
    float _826 = TEXCOORD.z - _822;
    float _827 = TEXCOORD.w - _823;
    vec4 _847 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_822 + fma(_827, (-0.0) - _824, _826 * _825))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_827, _825, _826 * _824) + _823)) + cbTextureTilingScale._m0[2u].w));
    float _853 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _847.x;
    float _855 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _847.y;
    float _857 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _847.z;
    float _873 = (TEXCOORD_5.x - ((_532 * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _4281 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
    float _874 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
    float _880 = ((((_630.x * 2.0) + (-1.0)) * TEXCOORD_8) * cbMtdParam._m0[19u].y) + _735;
    float _881 = ((((_630.y * 2.0) + (-1.0)) * TEXCOORD_9) * cbMtdParam._m0[19u].y) + _736;
    float _884 = fma(_742, _247 * NORMAL.x, fma(_881, _254 * TANGENT.x, (_240 * _232) * _880));
    float _887 = fma(_742, _247 * NORMAL.y, fma(_881, _254 * TANGENT.y, (_240 * _233) * _880));
    float _890 = fma(_742, _247 * NORMAL.z, fma(_881, _254 * TANGENT.z, (_240 * _234) * _880));
    float _894 = inversesqrt(dot(vec3(_884, _887, _890), vec3(_884, _887, _890)));
    float _895 = _894 * _884;
    float _896 = _894 * _887;
    float _897 = _894 * _890;
    float _4292 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
    float _898 = isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0));
    float _4303 = isnan(0.0) ? _547 : (isnan(_547) ? 0.0 : max(_547, 0.0));
    float _4314 = isnan(0.0) ? _548 : (isnan(_548) ? 0.0 : max(_548, 0.0));
    float _4325 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    float _4336 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _902 = isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0));
    float _918 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _958 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _968 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _958);
    float _969 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _958);
    float _970 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _958);
    float _974 = inversesqrt(dot(vec3(_968, _969, _970), vec3(_968, _969, _970)));
    float _975 = _968 * _974;
    float _976 = _969 * _974;
    float _977 = _970 * _974;
    vec4 _982 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _984 = _982.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1155 = sqrt(((_968 * _968) + (_969 * _969)) + (_970 * _970));
        float _1161 = (cbMatDynParam._m0[5u].x * _1155) + cbMatDynParam._m0[5u].y;
        float _4347 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
        float _1162 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
        float _1166 = (cbMatDynParam._m0[5u].z * _1155) + cbMatDynParam._m0[5u].w;
        float _4358 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0))) - _1162)) + _1162) < ((_984 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _995 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _996 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1014 = fma(_897, cbSceneParam._m0[5u].z, fma(_896, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _895));
    float _1017 = fma(_897, cbSceneParam._m0[6u].z, fma(_896, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _895));
    float _1020 = fma(_897, cbSceneParam._m0[7u].z, fma(_896, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _895));
    uint _1033 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1034 = _1033 + 9u;
    uint _1035 = _1034 + uint(cbMatDynParam._m0[0u].w);
    float _1041 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0)))) * cbInstanceData._m0[_1035].x;
    float _1042 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0)))) * cbInstanceData._m0[_1035].y;
    float _1043 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0)))) * cbInstanceData._m0[_1035].z;
    float _4369 = isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0));
    float _1044 = isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0));
    float _4380 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
    float _1045 = isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0));
    float _4391 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
    float _1046 = isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0));
    float _1047 = 1.0 - _902;
    float _1048 = _1044 * _1047;
    float _1049 = _1045 * _1047;
    float _1050 = _1046 * _1047;
    float _1055 = (_1044 + (-0.039999999105930328369140625)) * _902;
    float _1056 = (_1045 + (-0.039999999105930328369140625)) * _902;
    float _1057 = (_1046 + (-0.039999999105930328369140625)) * _902;
    float _1058 = _1055 + 0.039999999105930328369140625;
    float _1060 = _1056 + 0.039999999105930328369140625;
    float _1061 = _1057 + 0.039999999105930328369140625;
    vec4 _1070 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _995, cbSceneParam._m0[86u].y * _996));
    float _1073 = _1070.x * TEXCOORD_5.w;
    float _1074 = dot(vec3(_895, _896, _897), vec3(_975, _976, _977));
    float _1077 = _1074 * 2.0;
    float _1081 = (_1077 * _895) - _975;
    float _1082 = (_1077 * _896) - _976;
    float _1083 = (_1077 * _897) - _977;
    float _1087 = abs(dot(vec3(_975, _976, _977), vec3(_895, _896, _897)));
    float _4402 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
    float _1089 = sqrt(_898);
    float _1101 = exp2((_1089 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1089 * 3.0));
    float _1107 = (1.0 - _1101) * ((_1089 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1108 = _1101 * _1089;
    float _1136 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1140 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1144 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1474;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    float _1483;
    float _1484;
    float _1485;
    float _1486;
    float _1487;
    float _1488;
    float _1489;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1199 = fma(_1144, cbModelParam._m0[26u].z, fma(_1140, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1136));
        float _1203 = fma(_1144, cbModelParam._m0[27u].z, fma(_1140, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1136));
        float _1207 = fma(_1144, cbModelParam._m0[28u].z, fma(_1140, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1136));
        float _1232 = _1136 + _895;
        float _1233 = _1140 + _896;
        float _1234 = _1144 + _897;
        float _1244 = fma(_1234, cbModelParam._m0[26u].z, fma(_1233, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1232)) - _1199;
        float _1245 = fma(_1234, cbModelParam._m0[27u].z, fma(_1233, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1232)) - _1203;
        float _1246 = fma(_1234, cbModelParam._m0[28u].z, fma(_1233, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1232)) - _1207;
        float _1250 = inversesqrt(dot(vec3(_1244, _1245, _1246), vec3(_1244, _1245, _1246)));
        float _1263 = ((_1250 * _1244) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1199 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1264 = ((_1250 * _1245) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1203 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1265 = ((_1250 * _1246) / cbModelParam._m0[34u].z) + ((((((_1207 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1268 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1263, _1264, _1265), 0.0);
        vec4 _1275 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1263, _1264, _1265), 0.0);
        vec4 _1282 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1263, _1264, _1265), 0.0);
        vec4 _1289 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1263, _1264, _1265), 0.0);
        float _1302 = exp2((_1268.w + (-0.5)) * 20.0) * 2.0;
        float _1303 = _1302 * (_1268.x + (-0.5));
        float _1304 = _1302 * (_1268.y + (-0.5));
        float _1305 = _1302 * (_1268.z + (-0.5));
        float _1312 = exp2((_1275.w + (-0.5)) * 20.0) * 2.0;
        float _1313 = _1312 * (_1275.x + (-0.5));
        float _1314 = _1312 * (_1275.y + (-0.5));
        float _1315 = _1312 * (_1275.z + (-0.5));
        float _1322 = exp2((_1282.w + (-0.5)) * 20.0) * 2.0;
        float _1323 = _1322 * (_1282.x + (-0.5));
        float _1324 = _1322 * (_1282.y + (-0.5));
        float _1325 = _1322 * (_1282.z + (-0.5));
        float _1332 = exp2((_1289.w + (-0.5)) * 20.0) * 2.0;
        float _1333 = _1332 * (_1289.x + (-0.5));
        float _1334 = _1332 * (_1289.y + (-0.5));
        float _1335 = _1332 * (_1289.z + (-0.5));
        float _1336 = isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0));
        float _1337 = isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0));
        float _1338 = isnan(0.0) ? _1335 : (isnan(_1335) ? 0.0 : max(_1335, 0.0));
        float _1339 = _1303 * 0.5;
        float _1340 = _1313 * 0.5;
        float _1341 = _1323 * 0.5;
        float _1342 = dot(vec3(_1339, _1340, _1341), vec3(_1339, _1340, _1341));
        float _1347 = (_1342 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1342);
        float _1356 = (dot(vec3(_895, _896, _897), vec3(_1347 * _1339, _1347 * _1340, _1347 * _1341)) + 1.0) * 0.5;
        float _4428 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1366 = sqrt(((_1340 * _1340) + (_1339 * _1339)) + (_1341 * _1341)) / (_1336 + 9.9999997473787516355514526367188e-06);
        float _4439 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
        float _1367 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
        float _1368 = _1367 * 2.0;
        float _1372 = (1.0 - _1367) / (_1367 + 1.0);
        float _4450 = isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0));
        float _1373 = isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0));
        float _1382 = ((((1.0 - _1373) * (_1368 + 2.0)) * exp2(log2(isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) * (_1368 + 1.0))) + _1373) * _1336;
        float _1383 = _1304 * 0.5;
        float _1384 = _1314 * 0.5;
        float _1385 = _1324 * 0.5;
        float _1386 = dot(vec3(_1383, _1384, _1385), vec3(_1383, _1384, _1385));
        float _1391 = (_1386 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1386);
        float _1399 = (dot(vec3(_895, _896, _897), vec3(_1391 * _1383, _1391 * _1384, _1391 * _1385)) + 1.0) * 0.5;
        float _4461 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1408 = sqrt(((_1384 * _1384) + (_1383 * _1383)) + (_1385 * _1385)) / (_1337 + 9.9999997473787516355514526367188e-06);
        float _4472 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
        float _1409 = isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0));
        float _1410 = _1409 * 2.0;
        float _1414 = (1.0 - _1409) / (_1409 + 1.0);
        float _4483 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1415 = isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0));
        float _1424 = ((((1.0 - _1415) * (_1410 + 2.0)) * exp2(log2(isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0))) * (_1410 + 1.0))) + _1415) * _1337;
        float _1425 = _1305 * 0.5;
        float _1426 = _1315 * 0.5;
        float _1427 = _1325 * 0.5;
        float _1428 = dot(vec3(_1425, _1426, _1427), vec3(_1425, _1426, _1427));
        float _1433 = (_1428 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1428);
        float _1441 = (dot(vec3(_895, _896, _897), vec3(_1433 * _1425, _1433 * _1426, _1433 * _1427)) + 1.0) * 0.5;
        float _4494 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1450 = sqrt(((_1426 * _1426) + (_1425 * _1425)) + (_1427 * _1427)) / (_1338 + 9.9999997473787516355514526367188e-06);
        float _4505 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1451 = isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0));
        float _1452 = _1451 * 2.0;
        float _1456 = (1.0 - _1451) / (_1451 + 1.0);
        float _4516 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1457 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
        float _1466 = ((((1.0 - _1457) * (_1452 + 2.0)) * exp2(log2(isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0))) * (_1452 + 1.0))) + _1457) * _1338;
        _1474 = _1305;
        _1476 = _1304;
        _1477 = _1303;
        _1478 = _1315;
        _1479 = _1314;
        _1480 = _1313;
        _1481 = _1325;
        _1482 = _1324;
        _1483 = _1323;
        _1484 = _1338;
        _1485 = _1337;
        _1486 = _1336;
        _1487 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0)));
        _1488 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0)));
        _1489 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0)));
    }
    else
    {
        _1474 = _1475;
        _1476 = _1475;
        _1477 = _1475;
        _1478 = _1475;
        _1479 = _1475;
        _1480 = _1475;
        _1481 = _1475;
        _1482 = _1475;
        _1483 = _1475;
        _1484 = _1475;
        _1485 = _1475;
        _1486 = _1475;
        _1487 = 0.0;
        _1488 = 0.0;
        _1489 = 0.0;
    }
    float _1787;
    float _1788;
    float _1789;
    float _1790;
    float _1791;
    float _1792;
    float _1793;
    float _1794;
    float _1795;
    float _1796;
    float _1797;
    float _1798;
    float _1799;
    float _1800;
    float _1801;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1518 = fma(_1144, cbModelParam._m0[30u].z, fma(_1140, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1136));
        float _1522 = fma(_1144, cbModelParam._m0[31u].z, fma(_1140, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1136));
        float _1526 = fma(_1144, cbModelParam._m0[32u].z, fma(_1140, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1136));
        float _1549 = _1136 + _895;
        float _1550 = _1140 + _896;
        float _1551 = _1144 + _897;
        float _1561 = fma(_1551, cbModelParam._m0[30u].z, fma(_1550, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1549)) - _1518;
        float _1562 = fma(_1551, cbModelParam._m0[31u].z, fma(_1550, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1549)) - _1522;
        float _1563 = fma(_1551, cbModelParam._m0[32u].z, fma(_1550, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1549)) - _1526;
        float _1567 = inversesqrt(dot(vec3(_1561, _1562, _1563), vec3(_1561, _1562, _1563)));
        float _1580 = ((_1567 * _1561) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1518 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1581 = ((_1567 * _1562) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1522 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1582 = ((_1567 * _1563) / cbModelParam._m0[35u].z) + ((((((_1526 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1584 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1580, _1581, _1582), 0.0);
        vec4 _1591 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1580, _1581, _1582), 0.0);
        vec4 _1598 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1580, _1581, _1582), 0.0);
        vec4 _1605 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1580, _1581, _1582), 0.0);
        float _1617 = exp2((_1584.w + (-0.5)) * 20.0) * 2.0;
        float _1618 = _1617 * (_1584.x + (-0.5));
        float _1619 = _1617 * (_1584.y + (-0.5));
        float _1620 = _1617 * (_1584.z + (-0.5));
        float _1627 = exp2((_1591.w + (-0.5)) * 20.0) * 2.0;
        float _1628 = _1627 * (_1591.x + (-0.5));
        float _1629 = _1627 * (_1591.y + (-0.5));
        float _1630 = _1627 * (_1591.z + (-0.5));
        float _1637 = exp2((_1598.w + (-0.5)) * 20.0) * 2.0;
        float _1638 = _1637 * (_1598.x + (-0.5));
        float _1639 = _1637 * (_1598.y + (-0.5));
        float _1640 = _1637 * (_1598.z + (-0.5));
        float _1647 = exp2((_1605.w + (-0.5)) * 20.0) * 2.0;
        float _1648 = _1647 * (_1605.x + (-0.5));
        float _1649 = _1647 * (_1605.y + (-0.5));
        float _1650 = _1647 * (_1605.z + (-0.5));
        float _1651 = isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0));
        float _1652 = isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0));
        float _1653 = isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0));
        float _1654 = _1618 * 0.5;
        float _1655 = _1628 * 0.5;
        float _1656 = _1638 * 0.5;
        float _1657 = dot(vec3(_1654, _1655, _1656), vec3(_1654, _1655, _1656));
        float _1662 = (_1657 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1657);
        float _1670 = (dot(vec3(_895, _896, _897), vec3(_1662 * _1654, _1662 * _1655, _1662 * _1656)) + 1.0) * 0.5;
        float _4557 = isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0));
        float _1679 = sqrt(((_1655 * _1655) + (_1654 * _1654)) + (_1656 * _1656)) / (_1651 + 9.9999997473787516355514526367188e-06);
        float _4568 = isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0));
        float _1680 = isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0));
        float _1681 = _1680 * 2.0;
        float _1685 = (1.0 - _1680) / (_1680 + 1.0);
        float _4579 = isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0));
        float _1686 = isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0));
        float _1695 = ((((1.0 - _1686) * (_1681 + 2.0)) * exp2(log2(isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0))) * (_1681 + 1.0))) + _1686) * _1651;
        float _1696 = _1619 * 0.5;
        float _1697 = _1629 * 0.5;
        float _1698 = _1639 * 0.5;
        float _1699 = dot(vec3(_1696, _1697, _1698), vec3(_1696, _1697, _1698));
        float _1704 = (_1699 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1699);
        float _1712 = (dot(vec3(_895, _896, _897), vec3(_1704 * _1696, _1704 * _1697, _1704 * _1698)) + 1.0) * 0.5;
        float _4590 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
        float _1721 = sqrt(((_1697 * _1697) + (_1696 * _1696)) + (_1698 * _1698)) / (_1652 + 9.9999997473787516355514526367188e-06);
        float _4601 = isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0));
        float _1722 = isnan(1.0) ? _4601 : (isnan(_4601) ? 1.0 : min(_4601, 1.0));
        float _1723 = _1722 * 2.0;
        float _1727 = (1.0 - _1722) / (_1722 + 1.0);
        float _4612 = isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0));
        float _1728 = isnan(1.0) ? _4612 : (isnan(_4612) ? 1.0 : min(_4612, 1.0));
        float _1737 = ((((1.0 - _1728) * (_1723 + 2.0)) * exp2(log2(isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0))) * (_1723 + 1.0))) + _1728) * _1652;
        float _1738 = _1620 * 0.5;
        float _1739 = _1630 * 0.5;
        float _1740 = _1640 * 0.5;
        float _1741 = dot(vec3(_1738, _1739, _1740), vec3(_1738, _1739, _1740));
        float _1746 = (_1741 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1741);
        float _1754 = (dot(vec3(_895, _896, _897), vec3(_1746 * _1738, _1746 * _1739, _1746 * _1740)) + 1.0) * 0.5;
        float _4623 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
        float _1763 = sqrt(((_1739 * _1739) + (_1738 * _1738)) + (_1740 * _1740)) / (_1653 + 9.9999997473787516355514526367188e-06);
        float _4634 = isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0));
        float _1764 = isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0));
        float _1765 = _1764 * 2.0;
        float _1769 = (1.0 - _1764) / (_1764 + 1.0);
        float _4645 = isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0));
        float _1770 = isnan(1.0) ? _4645 : (isnan(_4645) ? 1.0 : min(_4645, 1.0));
        float _1779 = ((((1.0 - _1770) * (_1765 + 2.0)) * exp2(log2(isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0))) * (_1765 + 1.0))) + _1770) * _1653;
        _1787 = _1620;
        _1788 = _1619;
        _1789 = _1618;
        _1790 = _1630;
        _1791 = _1629;
        _1792 = _1628;
        _1793 = _1640;
        _1794 = _1639;
        _1795 = _1638;
        _1796 = _1653;
        _1797 = _1652;
        _1798 = _1651;
        _1799 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0)));
        _1800 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0)));
        _1801 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0)));
    }
    else
    {
        _1787 = _1475;
        _1788 = _1475;
        _1789 = _1475;
        _1790 = _1475;
        _1791 = _1475;
        _1792 = _1475;
        _1793 = _1475;
        _1794 = _1475;
        _1795 = _1475;
        _1796 = _1475;
        _1797 = _1475;
        _1798 = _1475;
        _1799 = 0.0;
        _1800 = 0.0;
        _1801 = 0.0;
    }
    float _1811 = (cbModelParam._m0[1u].x * (_1799 - _1487)) + _1487;
    float _1812 = (cbModelParam._m0[1u].x * (_1800 - _1488)) + _1488;
    float _1813 = (cbModelParam._m0[1u].x * (_1801 - _1489)) + _1489;
    float _1834 = fma(_1813, cbSceneParam._m0[89u].z, fma(_1812, cbSceneParam._m0[89u].y, _1811 * cbSceneParam._m0[89u].x));
    float _1837 = fma(_1813, cbSceneParam._m0[90u].z, fma(_1812, cbSceneParam._m0[90u].y, _1811 * cbSceneParam._m0[90u].x));
    float _1840 = fma(_1813, cbSceneParam._m0[91u].z, fma(_1812, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1811));
    float _1855 = _1081 * 0.5;
    float _1856 = _1082 * 0.5;
    float _1857 = _1083 * 0.5;
    float _1858 = dot(vec4(_1855, _1856, _1857, 1.0), vec4(_1789, _1792, _1795, _1798));
    float _1861 = dot(vec4(_1855, _1856, _1857, 1.0), vec4(_1788, _1791, _1794, _1797));
    float _1864 = dot(vec4(_1855, _1856, _1857, 1.0), vec4(_1787, _1790, _1793, _1796));
    float _1898;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1871 = dot(vec4(_1855, _1856, _1857, 1.0), vec4(_1474, _1478, _1481, _1484));
        float _1875 = dot(vec4(_1855, _1856, _1857, 1.0), vec4(_1476, _1479, _1482, _1485));
        float _1879 = dot(vec4(_1855, _1856, _1857, 1.0), vec4(_1477, _1480, _1483, _1486));
        float _1886 = dot(vec4(cbModelParam._m0[39u]), vec4(_1855, _1856, _1857, 1.0));
        _1898 = dot(vec3(isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0)), isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0)), isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1886) ? 0.0 : (isnan(0.0) ? _1886 : max(0.0, _1886))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1898 = 1.0;
    }
    float _1909;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1900 = dot(vec4(cbModelParam._m0[40u]), vec4(_1855, _1856, _1857, 1.0));
        _1909 = dot(vec3(isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0)), isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0)), isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1900) ? 0.0 : (isnan(0.0) ? _1900 : max(0.0, _1900))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1909 = 1.0;
    }
    float _1913 = (_1909 * cbModelParam._m0[1u].x) + (_1898 * (1.0 - cbModelParam._m0[1u].x));
    float _1923 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _898);
    float _1924 = isnan(_1923) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1923 : min(cbModelParam._m0[25u].z, _1923));
    float _2004;
    float _2006;
    float _2008;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1971 = fma(_1144, cbModelParam._m0[13u].z, fma(_1140, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1136)) + cbModelParam._m0[13u].w;
        float _1975 = fma(_1144, cbModelParam._m0[14u].z, fma(_1140, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1136)) + cbModelParam._m0[14u].w;
        float _1979 = fma(_1144, cbModelParam._m0[15u].z, fma(_1140, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1136)) + cbModelParam._m0[15u].w;
        float _1982 = fma(_1083, cbModelParam._m0[13u].z, fma(_1082, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1081));
        float _1985 = fma(_1083, cbModelParam._m0[14u].z, fma(_1082, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1081));
        float _1988 = fma(_1083, cbModelParam._m0[15u].z, fma(_1082, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1081));
        float _2016;
        if (_1982 > 0.0)
        {
            _2016 = abs((1.0 - _1971) / _1982);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1982 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1971 + 1.0) / _1982);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2016 = frontier_phi_17_15_ladder;
        }
        float _2187;
        if (_1985 > 0.0)
        {
            _2187 = abs((1.0 - _1975) / _1985);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1985 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1975 + 1.0) / _1985);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2187 = frontier_phi_26_22_ladder;
        }
        float _2482;
        if (_1988 > 0.0)
        {
            _2482 = abs((1.0 - _1979) / _1988);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1988 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1979 + 1.0) / _1988);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2482 = frontier_phi_38_33_ladder;
        }
        float _2484 = isnan(_2187) ? _2016 : (isnan(_2016) ? _2187 : min(_2016, _2187));
        float _2485 = isnan(_2482) ? _2484 : (isnan(_2484) ? _2482 : min(_2484, _2482));
        float _2489 = (_2485 * _1982) + _1971;
        float _2490 = (_2485 * _1985) + _1975;
        float _2491 = (_2485 * _1988) + _1979;
        float _2492 = _2485 * 9.9999997473787516355514526367188e-05;
        float _2494 = (-1.0) - _2492;
        float _2496 = _2492 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2491 > _2496) || ((_2491 < _2494) || ((_2490 > _2496) || ((_2490 < _2494) || ((_2489 < _2494) || (_2489 > _2496))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2636 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2491, cbModelParam._m0[9u].z, fma(_2490, cbModelParam._m0[9u].y, _2489 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2491, cbModelParam._m0[10u].z, fma(_2490, cbModelParam._m0[10u].y, _2489 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2491, cbModelParam._m0[11u].z, fma(_2490, cbModelParam._m0[11u].y, _2489 * cbModelParam._m0[11u].x))), _1924);
            frontier_phi_16_38_ladder = _2636.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2636.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2636.x * cbModelParam._m0[1u].y;
        }
        _2004 = frontier_phi_16_38_ladder_2;
        _2006 = frontier_phi_16_38_ladder_1;
        _2008 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1992 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1081, _1082, _1083), _1924);
        _2004 = _1992.x * cbModelParam._m0[1u].y;
        _2006 = _1992.y * cbModelParam._m0[1u].y;
        _2008 = _1992.z * cbModelParam._m0[1u].y;
    }
    float _2012 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _898);
    float _2013 = isnan(_2012) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2012 : min(cbModelParam._m0[25u].w, _2012));
    float _2102;
    float _2104;
    float _2106;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2066 = fma(_1144, cbModelParam._m0[21u].z, fma(_1140, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1136)) + cbModelParam._m0[21u].w;
        float _2070 = fma(_1144, cbModelParam._m0[22u].z, fma(_1140, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1136)) + cbModelParam._m0[22u].w;
        float _2074 = fma(_1144, cbModelParam._m0[23u].z, fma(_1140, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1136)) + cbModelParam._m0[23u].w;
        float _2077 = fma(_1083, cbModelParam._m0[21u].z, fma(_1082, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1081));
        float _2080 = fma(_1083, cbModelParam._m0[22u].z, fma(_1082, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1081));
        float _2083 = fma(_1083, cbModelParam._m0[23u].z, fma(_1082, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1081));
        float _2192;
        if (_2077 > 0.0)
        {
            _2192 = abs((1.0 - _2066) / _2077);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2077 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2066 + 1.0) / _2077);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2192 = frontier_phi_28_24_ladder;
        }
        float _2509;
        if (_2080 > 0.0)
        {
            _2509 = abs((1.0 - _2070) / _2080);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2080 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2070 + 1.0) / _2080);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2509 = frontier_phi_40_35_ladder;
        }
        float _2847;
        if (_2083 > 0.0)
        {
            _2847 = abs((1.0 - _2074) / _2083);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2083 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2074 + 1.0) / _2083);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2847 = frontier_phi_50_47_ladder;
        }
        float _2849 = isnan(_2509) ? _2192 : (isnan(_2192) ? _2509 : min(_2192, _2509));
        float _2850 = isnan(_2847) ? _2849 : (isnan(_2849) ? _2847 : min(_2849, _2847));
        float _2854 = (_2850 * _2077) + _2066;
        float _2855 = (_2850 * _2080) + _2070;
        float _2856 = (_2850 * _2083) + _2074;
        float _2857 = _2850 * 9.9999997473787516355514526367188e-05;
        float _2858 = (-1.0) - _2857;
        float _2860 = _2857 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2856 > _2860) || ((_2856 < _2858) || ((_2855 > _2860) || ((_2855 < _2858) || ((_2854 < _2858) || (_2854 > _2860))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2978 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2856, cbModelParam._m0[17u].z, fma(_2855, cbModelParam._m0[17u].y, _2854 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2856, cbModelParam._m0[18u].z, fma(_2855, cbModelParam._m0[18u].y, _2854 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2856, cbModelParam._m0[19u].z, fma(_2855, cbModelParam._m0[19u].y, _2854 * cbModelParam._m0[19u].x))), _2013);
            frontier_phi_25_50_ladder = _2978.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2978.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2978.x * cbModelParam._m0[1u].z;
        }
        _2102 = frontier_phi_25_50_ladder_2;
        _2104 = frontier_phi_25_50_ladder_1;
        _2106 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2086 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1081, _1082, _1083), _2013);
        _2102 = _2086.x * cbModelParam._m0[1u].z;
        _2104 = _2086.y * cbModelParam._m0[1u].z;
        _2106 = _2086.z * cbModelParam._m0[1u].z;
    }
    float _2119 = (((_1107 * _1058) + _1108) * _1073) * ((cbModelParam._m0[1u].w * (_2102 - _2004)) + _2004);
    float _2121 = (((_1107 * _1060) + _1108) * _1073) * ((cbModelParam._m0[1u].w * (_2104 - _2006)) + _2006);
    float _2123 = (((_1107 * _1061) + _1108) * _1073) * ((cbModelParam._m0[1u].w * (_2106 - _2008)) + _2008);
    float _2126 = fma(_2123, cbSceneParam._m0[89u].z, fma(_2121, cbSceneParam._m0[89u].y, _2119 * cbSceneParam._m0[89u].x));
    float _2129 = fma(_2123, cbSceneParam._m0[90u].z, fma(_2121, cbSceneParam._m0[90u].y, _2119 * cbSceneParam._m0[90u].x));
    float _2132 = fma(_2123, cbSceneParam._m0[91u].z, fma(_2121, cbSceneParam._m0[91u].y, _2119 * cbSceneParam._m0[91u].x));
    float _2166 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2170 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2174 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2178 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2179 = _2166 / _2178;
    float _2180 = _2170 / _2178;
    float _2181 = _2174 / _2178;
    float _2328;
    float _2329;
    float _2330;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2208 = ((uint(_2181 > cbSceneParam._m0[59u].y) + uint(_2181 > cbSceneParam._m0[59u].x)) + uint(_2181 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2209 = _2208 + 43u;
        uint _2217 = _2208 + 44u;
        uint _2225 = _2208 + 45u;
        uint _2233 = _2208 + 46u;
        float _2244 = fma(_2178, cbSceneParam._m0[_2209].w, fma(_2174, cbSceneParam._m0[_2209].z, fma(_2170, cbSceneParam._m0[_2209].y, _2166 * cbSceneParam._m0[_2209].x)));
        float _2248 = fma(_2178, cbSceneParam._m0[_2217].w, fma(_2174, cbSceneParam._m0[_2217].z, fma(_2170, cbSceneParam._m0[_2217].y, _2166 * cbSceneParam._m0[_2217].x)));
        float _2256 = fma(_2178, cbSceneParam._m0[_2233].w, fma(_2174, cbSceneParam._m0[_2233].z, fma(_2170, cbSceneParam._m0[_2233].y, _2166 * cbSceneParam._m0[_2233].x)));
        float _2261 = cbSceneParam._m0[33u].z * _2256;
        float _2263 = cbSceneParam._m0[33u].w * _2256;
        float _2266 = fma(_2178, cbSceneParam._m0[_2225].w, fma(_2174, cbSceneParam._m0[_2225].z, fma(_2170, cbSceneParam._m0[_2225].y, _2166 * cbSceneParam._m0[_2225].x))) / _2256;
        float _2314 = (cbSceneParam._m0[33u].x - sqrt(((_2180 * _2180) + (_2179 * _2179)) + (_2181 * _2181))) * cbSceneParam._m0[33u].y;
        float _4771 = isnan(0.0) ? _2314 : (isnan(_2314) ? 0.0 : max(_2314, 0.0));
        float _2321 = (isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2261 + _2244) / _2256, (_2263 + _2248) / _2256), _2266), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2263 + _2244) / _2256, (_2248 - _2261) / _2256), _2266), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2244 - _2261) / _2256, (_2248 - _2263) / _2256), _2266), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2244 - _2263) / _2256, (_2261 + _2248) / _2256), _2266), 0.0)).x), vec4(0.25)));
        _2328 = 1.0 - (_2321 * cbSceneParam._m0[34u].x);
        _2329 = 1.0 - (_2321 * cbSceneParam._m0[34u].y);
        _2330 = 1.0 - (_2321 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2328 = 1.0;
        _2329 = 1.0;
        _2330 = 1.0;
    }
    float _2394;
    float _2396;
    float _2398;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2382 = fma(_2178, cbSceneParam._m0[63u].w, fma(_2174, cbSceneParam._m0[63u].z, fma(_2170, cbSceneParam._m0[63u].y, _2166 * cbSceneParam._m0[63u].x)));
        float _2383 = fma(_2178, cbSceneParam._m0[60u].w, fma(_2174, cbSceneParam._m0[60u].z, fma(_2170, cbSceneParam._m0[60u].y, _2166 * cbSceneParam._m0[60u].x))) / _2382;
        float _2384 = fma(_2178, cbSceneParam._m0[61u].w, fma(_2174, cbSceneParam._m0[61u].z, fma(_2170, cbSceneParam._m0[61u].y, _2166 * cbSceneParam._m0[61u].x))) / _2382;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2383 >= cbSceneParam._m0[64u].x) && (_2384 >= cbSceneParam._m0[64u].y)) && (_2383 <= cbSceneParam._m0[64u].z)) && (_2384 <= cbSceneParam._m0[64u].w))
        {
            float _2522 = fma(_2178, cbSceneParam._m0[62u].w, fma(_2174, cbSceneParam._m0[62u].z, fma(_2170, cbSceneParam._m0[62u].y, _2166 * cbSceneParam._m0[62u].x))) / _2382;
            float _2526 = isnan(cbSceneParam._m0[41u].w) ? _2522 : (isnan(_2522) ? cbSceneParam._m0[41u].w : max(_2522, cbSceneParam._m0[41u].w));
            float _2569 = (cbSceneParam._m0[33u].x - sqrt(((_2180 * _2180) + (_2179 * _2179)) + (_2181 * _2181))) * cbSceneParam._m0[33u].y;
            float _4787 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
            float _2576 = (isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2383, cbSceneParam._m0[33u].w + _2384), _2526), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2383, _2384 - cbSceneParam._m0[33u].z), _2526), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2383 - cbSceneParam._m0[33u].z, _2384 - cbSceneParam._m0[33u].w), _2526), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2383 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2384), _2526), 0.0)).x), vec4(0.25)));
            float _2580 = 1.0 - (_2576 * cbSceneParam._m0[34u].x);
            float _2581 = 1.0 - (_2576 * cbSceneParam._m0[34u].y);
            float _2582 = 1.0 - (_2576 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2582) ? _2330 : (isnan(_2330) ? _2582 : min(_2330, _2582));
            frontier_phi_37_36_ladder_1 = isnan(_2581) ? _2329 : (isnan(_2329) ? _2581 : min(_2329, _2581));
            frontier_phi_37_36_ladder_2 = isnan(_2580) ? _2328 : (isnan(_2328) ? _2580 : min(_2328, _2580));
        }
        else
        {
            frontier_phi_37_36_ladder = _2330;
            frontier_phi_37_36_ladder_1 = _2329;
            frontier_phi_37_36_ladder_2 = _2328;
        }
        _2394 = frontier_phi_37_36_ladder_2;
        _2396 = frontier_phi_37_36_ladder_1;
        _2398 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2394 = _2328;
        _2396 = _2329;
        _2398 = _2330;
    }
    uvec4 _2403 = floatBitsToUint(cbInstanceData._m0[_1033 + 5u]);
    uint _2405 = _2403.x * 14u;
    uint _2406 = _2405 + 13u;
    float _2413 = _1073 + (-1.0);
    float _2418 = (cbLight._m0[_2406].x * _2413) + 1.0;
    float _2419 = (cbLight._m0[_2406].y * _2413) + 1.0;
    float _2420 = (cbLight._m0[_2406].z * _2413) + 1.0;
    float _2421 = (cbLight._m0[_2406].w * _2413) + 1.0;
    uint _2422 = _2405 + 5u;
    float _2428 = isnan(1.0) ? _2419 : (isnan(_2419) ? 1.0 : min(_2419, 1.0));
    uint _2432 = _2405 + 4u;
    float _2441 = isnan(1.0) ? _2418 : (isnan(_2418) ? 1.0 : min(_2418, 1.0));
    uint _2445 = _2405 | 1u;
    float _2456 = dot(vec3(cbLight._m0[_2405].xyz), vec3(_895, _896, _897));
    float _2459 = dot(vec3(cbLight._m0[_2445].xyz), vec3(_895, _896, _897));
    float _4823 = isnan(0.0) ? _2456 : (isnan(_2456) ? 0.0 : max(_2456, 0.0));
    float _4834 = isnan(0.0) ? _2459 : (isnan(_2459) ? 0.0 : max(_2459, 0.0));
    float _2464 = (isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0))) * 0.3183098733425140380859375;
    float _2466 = (isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0))) * 0.3183098733425140380859375;
    float _2473 = ((cbLight._m0[_2422].x * _2428) * _2466) + (((cbLight._m0[_2432].x * _2394) * _2441) * _2464);
    float _2474 = ((_2428 * cbLight._m0[_2422].y) * _2466) + (((cbLight._m0[_2432].y * _2396) * _2441) * _2464);
    float _2475 = ((_2428 * cbLight._m0[_2422].z) * _2466) + (((cbLight._m0[_2432].z * _2398) * _2441) * _2464);
    uvec4 _2479 = floatBitsToUint(cbLight._m0[_2405 + 12u]);
    bool _2481 = _2479.x == 0u;
    float _2583;
    float _2585;
    float _2587;
    if (_2481)
    {
        _2583 = _2473;
        _2585 = _2474;
        _2587 = _2475;
    }
    else
    {
        uint _2591 = _2405 + 6u;
        float _2607 = (dot(vec3(cbLight._m0[_2405 + 2u].xyz), vec3(_895, _896, _897)) * 0.5) + 0.5;
        float _2608 = _2607 * _2607;
        float _4845 = isnan(0.0) ? _2608 : (isnan(_2608) ? 0.0 : max(_2608, 0.0));
        float _2609 = isnan(1.0) ? _4845 : (isnan(_4845) ? 1.0 : min(_4845, 1.0));
        float _2610 = isnan(1.0) ? _2420 : (isnan(_2420) ? 1.0 : min(_2420, 1.0));
        _2583 = (((cbLight._m0[_2591].x * 0.3183098733425140380859375) * _2609) * _2610) + _2473;
        _2585 = (((cbLight._m0[_2591].y * 0.3183098733425140380859375) * _2609) * _2610) + _2474;
        _2587 = (((cbLight._m0[_2591].z * 0.3183098733425140380859375) * _2609) * _2610) + _2475;
    }
    bool _2590 = _2479.y == 0u;
    float _2645;
    float _2647;
    float _2649;
    if (_2590)
    {
        _2645 = _2583;
        _2647 = _2585;
        _2649 = _2587;
    }
    else
    {
        uint _2818 = _2405 + 7u;
        float _2834 = (dot(vec3(cbLight._m0[_2405 + 3u].xyz), vec3(_895, _896, _897)) * 0.5) + 0.5;
        float _2835 = _2834 * _2834;
        float _4861 = isnan(0.0) ? _2835 : (isnan(_2835) ? 0.0 : max(_2835, 0.0));
        float _2836 = isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0));
        float _2837 = isnan(1.0) ? _2421 : (isnan(_2421) ? 1.0 : min(_2421, 1.0));
        _2645 = (((cbLight._m0[_2818].x * 0.3183098733425140380859375) * _2836) * _2837) + _2583;
        _2647 = (((cbLight._m0[_2818].y * 0.3183098733425140380859375) * _2836) * _2837) + _2585;
        _2649 = (((cbLight._m0[_2818].z * 0.3183098733425140380859375) * _2836) * _2837) + _2587;
    }
    uint _2652 = _2405 + 8u;
    float _2665 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2405].w)) * _898) * 0.949999988079071044921875);
    float _2666 = _2665 * _2665;
    float _2667 = cbLight._m0[_2405].x + _975;
    float _2668 = cbLight._m0[_2405].y + _976;
    float _2669 = cbLight._m0[_2405].z + _977;
    float _2673 = inversesqrt(dot(vec3(_2667, _2668, _2669), vec3(_2667, _2668, _2669)));
    float _2674 = _2673 * _2667;
    float _2675 = _2673 * _2668;
    float _2676 = _2673 * _2669;
    float _2677 = dot(vec3(_895, _896, _897), vec3(cbLight._m0[_2405].xyz));
    float _4877 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
    float _2680 = isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0));
    float _4888 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
    float _2681 = isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0));
    float _2682 = dot(vec3(_895, _896, _897), vec3(_2674, _2675, _2676));
    float _4899 = isnan(0.0) ? _2682 : (isnan(_2682) ? 0.0 : max(_2682, 0.0));
    float _2685 = isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0));
    float _2686 = dot(vec3(cbLight._m0[_2405].xyz), vec3(_2674, _2675, _2676));
    float _4910 = isnan(0.0) ? _2686 : (isnan(_2686) ? 0.0 : max(_2686, 0.0));
    float _2690 = _2666 * _2666;
    float _2694 = ((_2685 * _2685) * (_2690 + (-1.0))) + 1.0;
    float _2702 = exp2(log2(1.0 - (isnan(1.0) ? _4910 : (isnan(_4910) ? 1.0 : min(_4910, 1.0)))) * 5.0);
    float _2703 = 0.959999978542327880859375 - _1055;
    float _2705 = 0.959999978542327880859375 - _1056;
    float _2706 = 0.959999978542327880859375 - _1057;
    float _2713 = 1.0 - _2666;
    float _2724 = (0.5 / (((_2681 * ((_2680 * _2713) + _2666)) + 9.9999999392252902907785028219223e-09) + (((_2681 * _2713) + _2666) * _2680))) * _2680;
    float _4921 = isnan(0.0) ? _2724 : (isnan(_2724) ? 0.0 : max(_2724, 0.0));
    float _2726 = (isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0))) * (_2690 / ((_2694 * _2694) * 3.141590118408203125));
    uint _2740 = _2405 + 9u;
    float _2751 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2445].w)) * _898) * 0.949999988079071044921875);
    float _2752 = _2751 * _2751;
    float _2753 = cbLight._m0[_2445].x + _975;
    float _2754 = cbLight._m0[_2445].y + _976;
    float _2755 = cbLight._m0[_2445].z + _977;
    float _2759 = inversesqrt(dot(vec3(_2753, _2754, _2755), vec3(_2753, _2754, _2755)));
    float _2760 = _2759 * _2753;
    float _2761 = _2759 * _2754;
    float _2762 = _2759 * _2755;
    float _2763 = dot(vec3(_895, _896, _897), vec3(cbLight._m0[_2445].xyz));
    float _4932 = isnan(0.0) ? _2763 : (isnan(_2763) ? 0.0 : max(_2763, 0.0));
    float _2766 = isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0));
    float _2767 = dot(vec3(_895, _896, _897), vec3(_2760, _2761, _2762));
    float _4943 = isnan(0.0) ? _2767 : (isnan(_2767) ? 0.0 : max(_2767, 0.0));
    float _2770 = isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0));
    float _2771 = dot(vec3(cbLight._m0[_2445].xyz), vec3(_2760, _2761, _2762));
    float _4954 = isnan(0.0) ? _2771 : (isnan(_2771) ? 0.0 : max(_2771, 0.0));
    float _2775 = _2752 * _2752;
    float _2779 = ((_2770 * _2770) * (_2775 + (-1.0))) + 1.0;
    float _2786 = exp2(log2(1.0 - (isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0)))) * 5.0);
    float _2793 = 1.0 - _2752;
    float _2803 = (0.5 / (((_2681 * ((_2766 * _2793) + _2752)) + 9.9999999392252902907785028219223e-09) + (((_2681 * _2793) + _2752) * _2766))) * _2766;
    float _4965 = isnan(0.0) ? _2803 : (isnan(_2803) ? 0.0 : max(_2803, 0.0));
    float _2805 = (isnan(1.0) ? _4965 : (isnan(_4965) ? 1.0 : min(_4965, 1.0))) * (_2775 / ((_2779 * _2779) * 3.141590118408203125));
    float _2815 = (((((_2786 * _2703) + _1058) * cbLight._m0[_2740].x) * _2805) * _2428) + ((((cbLight._m0[_2652].x * _2394) * ((_2702 * _2703) + _1058)) * _2726) * _2441);
    float _2816 = (((((_2786 * _2705) + _1060) * cbLight._m0[_2740].y) * _2805) * _2428) + ((((cbLight._m0[_2652].y * _2396) * ((_2702 * _2705) + _1060)) * _2726) * _2441);
    float _2817 = (((((_2786 * _2706) + _1061) * cbLight._m0[_2740].z) * _2805) * _2428) + ((((cbLight._m0[_2652].z * _2398) * ((_2702 * _2706) + _1061)) * _2726) * _2441);
    float _2873;
    float _2875;
    float _2877;
    if (_2481)
    {
        _2873 = _2815;
        _2875 = _2816;
        _2877 = _2817;
    }
    else
    {
        uint _2879 = _2405 + 2u;
        uint _2883 = _2405 + 10u;
        float _2897 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2879].w)) * _898) * 0.949999988079071044921875);
        float _2898 = _2897 * _2897;
        float _2899 = cbLight._m0[_2879].x + _975;
        float _2900 = cbLight._m0[_2879].y + _976;
        float _2901 = cbLight._m0[_2879].z + _977;
        float _2905 = inversesqrt(dot(vec3(_2899, _2900, _2901), vec3(_2899, _2900, _2901)));
        float _2906 = _2905 * _2899;
        float _2907 = _2905 * _2900;
        float _2908 = _2905 * _2901;
        float _2909 = dot(vec3(_895, _896, _897), vec3(cbLight._m0[_2879].xyz));
        float _4976 = isnan(0.0) ? _2909 : (isnan(_2909) ? 0.0 : max(_2909, 0.0));
        float _2912 = isnan(1.0) ? _4976 : (isnan(_4976) ? 1.0 : min(_4976, 1.0));
        float _2913 = dot(vec3(_895, _896, _897), vec3(_2906, _2907, _2908));
        float _4987 = isnan(0.0) ? _2913 : (isnan(_2913) ? 0.0 : max(_2913, 0.0));
        float _2916 = isnan(1.0) ? _4987 : (isnan(_4987) ? 1.0 : min(_4987, 1.0));
        float _2917 = dot(vec3(cbLight._m0[_2879].xyz), vec3(_2906, _2907, _2908));
        float _4998 = isnan(0.0) ? _2917 : (isnan(_2917) ? 0.0 : max(_2917, 0.0));
        float _2921 = _2898 * _2898;
        float _2925 = ((_2916 * _2916) * (_2921 + (-1.0))) + 1.0;
        float _2932 = exp2(log2(1.0 - (isnan(1.0) ? _4998 : (isnan(_4998) ? 1.0 : min(_4998, 1.0)))) * 5.0);
        float _2939 = 1.0 - _2898;
        float _2949 = (0.5 / (((_2681 * ((_2912 * _2939) + _2898)) + 9.9999999392252902907785028219223e-09) + (((_2681 * _2939) + _2898) * _2912))) * _2912;
        float _5009 = isnan(0.0) ? _2949 : (isnan(_2949) ? 0.0 : max(_2949, 0.0));
        float _2951 = (isnan(1.0) ? _5009 : (isnan(_5009) ? 1.0 : min(_5009, 1.0))) * (_2921 / ((_2925 * _2925) * 3.141590118408203125));
        float _2952 = isnan(1.0) ? _2420 : (isnan(_2420) ? 1.0 : min(_2420, 1.0));
        _2873 = (((((_2932 * _2703) + _1058) * cbLight._m0[_2883].x) * _2951) * _2952) + _2815;
        _2875 = (((((_2932 * _2705) + _1060) * cbLight._m0[_2883].y) * _2951) * _2952) + _2816;
        _2877 = (((((_2932 * _2706) + _1061) * cbLight._m0[_2883].z) * _2951) * _2952) + _2817;
    }
    float _2983;
    float _2985;
    float _2987;
    if (_2590)
    {
        _2983 = _2873;
        _2985 = _2875;
        _2987 = _2877;
    }
    else
    {
        uint _2994 = _2405 + 3u;
        uint _2998 = _2405 + 11u;
        float _3012 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2994].w)) * _898) * 0.949999988079071044921875);
        float _3013 = _3012 * _3012;
        float _3014 = cbLight._m0[_2994].x + _975;
        float _3015 = cbLight._m0[_2994].y + _976;
        float _3016 = cbLight._m0[_2994].z + _977;
        float _3020 = inversesqrt(dot(vec3(_3014, _3015, _3016), vec3(_3014, _3015, _3016)));
        float _3021 = _3020 * _3014;
        float _3022 = _3020 * _3015;
        float _3023 = _3020 * _3016;
        float _3024 = dot(vec3(_895, _896, _897), vec3(cbLight._m0[_2994].xyz));
        float _5025 = isnan(0.0) ? _3024 : (isnan(_3024) ? 0.0 : max(_3024, 0.0));
        float _3027 = isnan(1.0) ? _5025 : (isnan(_5025) ? 1.0 : min(_5025, 1.0));
        float _3028 = dot(vec3(_895, _896, _897), vec3(_3021, _3022, _3023));
        float _5036 = isnan(0.0) ? _3028 : (isnan(_3028) ? 0.0 : max(_3028, 0.0));
        float _3031 = isnan(1.0) ? _5036 : (isnan(_5036) ? 1.0 : min(_5036, 1.0));
        float _3032 = dot(vec3(cbLight._m0[_2994].xyz), vec3(_3021, _3022, _3023));
        float _5047 = isnan(0.0) ? _3032 : (isnan(_3032) ? 0.0 : max(_3032, 0.0));
        float _3036 = _3013 * _3013;
        float _3040 = ((_3031 * _3031) * (_3036 + (-1.0))) + 1.0;
        float _3047 = exp2(log2(1.0 - (isnan(1.0) ? _5047 : (isnan(_5047) ? 1.0 : min(_5047, 1.0)))) * 5.0);
        float _3054 = 1.0 - _3013;
        float _3064 = (0.5 / (((_2681 * ((_3027 * _3054) + _3013)) + 9.9999999392252902907785028219223e-09) + (((_2681 * _3054) + _3013) * _3027))) * _3027;
        float _5058 = isnan(0.0) ? _3064 : (isnan(_3064) ? 0.0 : max(_3064, 0.0));
        float _3066 = (isnan(1.0) ? _5058 : (isnan(_5058) ? 1.0 : min(_5058, 1.0))) * (_3036 / ((_3040 * _3040) * 3.141590118408203125));
        float _3067 = isnan(1.0) ? _2421 : (isnan(_2421) ? 1.0 : min(_2421, 1.0));
        _2983 = (((((_3047 * _2703) + _1058) * cbLight._m0[_2998].x) * _3066) * _3067) + _2873;
        _2985 = (((((_3047 * _2705) + _1060) * cbLight._m0[_2998].y) * _3066) * _3067) + _2875;
        _2987 = (((((_3047 * _2706) + _1061) * cbLight._m0[_2998].z) * _3066) * _3067) + _2877;
    }
    float _3133;
    float _3135;
    float _3137;
    float _3139;
    float _3141;
    float _3143;
    if (_2403.y == 0u)
    {
        uvec4 _3088 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3089 = _3088.x;
        uint _3100 = uint((float(_3088.y) * floor(float(uint(cbSceneParam._m0[85u].y * _996) / _3089))) + floor(float(uint(cbSceneParam._m0[85u].x * _995) / _3089)));
        float _3110 = (log2(_2181 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3111 = isnan(0.0) ? _3110 : (isnan(_3110) ? 0.0 : max(_3110, 0.0));
        uint _3114 = uint(isnan(14.0) ? _3111 : (isnan(_3111) ? 14.0 : min(_3111, 14.0)));
        uvec4 _3119 = texelFetch(g_lightClusterGridBuffer, int(((_3114 << 2u) + (_3100 << 6u)) >> 2u));
        uint _3120 = _3119.x;
        uint _3121 = _3088.z;
        float _3245;
        float _3247;
        float _3249;
        float _3251;
        float _3253;
        float _3255;
        if (((((1u << ((_3121 >> 4u) & 15u)) + 4294967295u) & _3120) == 0u) || ((_3121 & 240u) == 0u))
        {
            _3245 = 0.0;
            _3247 = 0.0;
            _3249 = 0.0;
            _3251 = 0.0;
            _3253 = 0.0;
            _3255 = 0.0;
        }
        else
        {
            float _3246;
            float _3248;
            float _3250;
            float _3252;
            float _3254;
            float _3256;
            float _3406 = 0.0;
            float _3407 = 0.0;
            float _3408 = 0.0;
            float _3409 = 0.0;
            float _3410 = 0.0;
            float _3411 = 0.0;
            uint _3412 = 0u;
            uint _3421;
            bool _3422;
            for (;;)
            {
                _3421 = texelFetch(g_lightClassification, int((((_3114 << 5u) + (_3100 << 9u)) + (_3412 << 2u)) >> 2u)).x;
                _3422 = _3421 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3422)
                {
                    frontier_phi_71_pred = _3411;
                    frontier_phi_71_pred_1 = _3410;
                    frontier_phi_71_pred_2 = _3409;
                    frontier_phi_71_pred_3 = _3408;
                    frontier_phi_71_pred_4 = _3407;
                    frontier_phi_71_pred_5 = _3406;
                }
                else
                {
                    float _3551;
                    float _3552;
                    float _3553;
                    float _3554;
                    float _3555;
                    float _3556;
                    uint _3557;
                    _3551 = _3406;
                    _3552 = _3407;
                    _3553 = _3408;
                    _3554 = _3409;
                    _3555 = _3410;
                    _3556 = _3411;
                    _3557 = _3421;
                    float _3478;
                    float _3479;
                    float _3480;
                    float _3481;
                    float _3482;
                    float _3483;
                    for (;;)
                    {
                        uint _3561 = uint(findLSB(_3557)) + (_3412 << 5u);
                        uint _3558 = (_3557 + 4294967295u) & _3557;
                        uint _3563 = _3561 * 48u;
                        vec4 _3577 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3563)).x, texelFetch(g_PointLightRenderingBuffer, int(_3563 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3563 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3563 + 3u)).x));
                        uint _3583 = (_3561 * 48u) + 4u;
                        vec4 _3596 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3583)).x, texelFetch(g_PointLightRenderingBuffer, int(_3583 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3583 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3583 + 3u)).x));
                        uint _3602 = (_3561 * 48u) + 8u;
                        vec3 _3613 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3602)).x, texelFetch(g_PointLightRenderingBuffer, int(_3602 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3602 + 2u)).x));
                        float _3617 = _3577.x - _2179;
                        float _3618 = _3577.y - _2180;
                        float _3619 = _3577.z - _2181;
                        float _3620 = dot(vec3(_3617, _3618, _3619), vec3(_3617, _3618, _3619));
                        float _3623 = inversesqrt(_3620);
                        float _3624 = _3623 * _3617;
                        float _3625 = _3623 * _3618;
                        float _3626 = _3623 * _3619;
                        float _3627 = dot(vec3(_1014, _1017, _1020), vec3(_3624, _3625, _3626));
                        float _3632 = 1.0 - (_3620 * _3577.w);
                        float _5084 = isnan(0.0) ? _3632 : (isnan(_3632) ? 0.0 : max(_3632, 0.0));
                        float _3633 = isnan(1.0) ? _5084 : (isnan(_5084) ? 1.0 : min(_5084, 1.0));
                        float _3634 = sqrt(_3620) * _3596.w;
                        float _3637 = 1.39999997615814208984375 / (_3634 + 1.39999997615814208984375);
                        float _3638 = _3637 * _3637;
                        float _3641 = ((1.0 - _3638) * _3627) + _3638;
                        float _3644 = _3634 * _3634;
                        float _3648 = ((isnan(0.0) ? _3641 : (isnan(_3641) ? 0.0 : max(_3641, 0.0))) * _3633) / ((_3644 * 0.699999988079071044921875) + 1.0);
                        float _3652 = (-0.0) - _2179;
                        float _3653 = (-0.0) - _2180;
                        float _3654 = (-0.0) - _2181;
                        float _3658 = inversesqrt(dot(vec3(_3652, _3653, _3654), vec3(_3652, _3653, _3654)));
                        float _3659 = _3658 * _3652;
                        float _3660 = _3658 * _3653;
                        float _3661 = _3658 * _3654;
                        float _3668 = exp2(log2(1.0 / ((_3644 * 3.5) + 5.0)) * 0.25);
                        float _3669 = 1.0 - _1089;
                        float _3676 = sqrt(1.0 - ((1.0 - (_3669 * _3669)) * (1.0 - (_3668 * _3668))));
                        float _3677 = _3676 * _3676;
                        float _3678 = _3677 * _3677;
                        float _3679 = _3659 + _3624;
                        float _3680 = _3660 + _3625;
                        float _3681 = _3661 + _3626;
                        float _3685 = inversesqrt(dot(vec3(_3679, _3680, _3681), vec3(_3679, _3680, _3681)));
                        float _3689 = dot(vec3(_1014, _1017, _1020), vec3(_3659, _3660, _3661));
                        float _5100 = isnan(0.0) ? _3689 : (isnan(_3689) ? 0.0 : max(_3689, 0.0));
                        float _3692 = isnan(1.0) ? _5100 : (isnan(_5100) ? 1.0 : min(_5100, 1.0));
                        float _3693 = dot(vec3(_1014, _1017, _1020), vec3(_3685 * _3679, _3685 * _3680, _3685 * _3681));
                        float _5111 = isnan(0.0) ? _3693 : (isnan(_3693) ? 0.0 : max(_3693, 0.0));
                        float _3696 = isnan(1.0) ? _5111 : (isnan(_5111) ? 1.0 : min(_5111, 1.0));
                        float _3700 = ((_3696 * _3696) * (_3678 + (-1.0))) + 1.0;
                        float _3701 = _3637 * _3677;
                        float _3702 = _3701 * _3701;
                        float _3705 = ((1.0 - _3702) * _3627) + _3702;
                        float _5122 = isnan(0.0) ? _3705 : (isnan(_3705) ? 0.0 : max(_3705, 0.0));
                        float _3706 = isnan(1.0) ? _5122 : (isnan(_5122) ? 1.0 : min(_5122, 1.0));
                        float _3707 = 1.0 - _3677;
                        float _3717 = (0.5 / (((_3706 * ((_3692 * _3707) + _3677)) + 9.9999999392252902907785028219223e-09) + (((_3706 * _3707) + _3677) * _3692))) * _3706;
                        float _5133 = isnan(0.0) ? _3717 : (isnan(_3717) ? 0.0 : max(_3717, 0.0));
                        float _3728 = (((_3678 * 3.1415927410125732421875) * (isnan(1.0) ? _5133 : (isnan(_5133) ? 1.0 : min(_5133, 1.0)))) / ((_3700 * _3700) * ((_3644 * 2.1991131305694580078125) + 3.141590118408203125))) * _3633;
                        _3481 = (_3648 * _3596.x) + _3554;
                        _3482 = (_3648 * _3596.y) + _3555;
                        _3483 = (_3648 * _3596.z) + _3556;
                        _3478 = (_3728 * _3613.x) + _3551;
                        _3479 = (_3728 * _3613.y) + _3552;
                        _3480 = (_3728 * _3613.z) + _3553;
                        if (_3558 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3551 = _3478;
                            _3552 = _3479;
                            _3553 = _3480;
                            _3554 = _3481;
                            _3555 = _3482;
                            _3556 = _3483;
                            _3557 = _3558;
                        }
                    }
                    frontier_phi_71_pred = _3483;
                    frontier_phi_71_pred_1 = _3482;
                    frontier_phi_71_pred_2 = _3481;
                    frontier_phi_71_pred_3 = _3480;
                    frontier_phi_71_pred_4 = _3479;
                    frontier_phi_71_pred_5 = _3478;
                }
                _3256 = frontier_phi_71_pred;
                _3254 = frontier_phi_71_pred_1;
                _3252 = frontier_phi_71_pred_2;
                _3250 = frontier_phi_71_pred_3;
                _3248 = frontier_phi_71_pred_4;
                _3246 = frontier_phi_71_pred_5;
                uint _3413 = _3412 + 1u;
                if (_3413 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3406 = _3246;
                    _3407 = _3248;
                    _3408 = _3250;
                    _3409 = _3252;
                    _3410 = _3254;
                    _3411 = _3256;
                    _3412 = _3413;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3245 = _3246;
            _3247 = _3248;
            _3249 = _3250;
            _3251 = _3252;
            _3253 = _3254;
            _3255 = _3256;
        }
        uvec4 _3259 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3260 = _3259.z;
        uint _3262 = (_3260 >> 8u) & 15u;
        float _3374;
        float _3376;
        float _3378;
        float _3380;
        float _3382;
        float _3384;
        if (((4294967295u << _3262) & _3120) == 0u)
        {
            _3374 = _3245;
            _3376 = _3247;
            _3378 = _3249;
            _3380 = _3251;
            _3382 = _3253;
            _3384 = _3255;
        }
        else
        {
            float _3399 = inversesqrt(dot(vec3(_2179, _2180, _2181), vec3(_2179, _2180, _2181)));
            float _3400 = _3399 * _2179;
            float _3401 = _3399 * _2180;
            float _3402 = _3399 * _2181;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3262 < ((_3260 >> 12u) & 15u))
            {
                float _3375;
                float _3377;
                float _3379;
                float _3381;
                float _3383;
                float _3385;
                float _3534 = _3245;
                float _3535 = _3247;
                float _3536 = _3249;
                float _3537 = _3251;
                float _3538 = _3253;
                float _3539 = _3255;
                uint _3540 = _3262;
                uint _3549;
                bool _3550;
                for (;;)
                {
                    _3549 = texelFetch(g_lightClassification, int((((_3114 << 5u) + (_3100 << 9u)) + (_3540 << 2u)) >> 2u)).x;
                    _3550 = _3549 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3550)
                    {
                        frontier_phi_82_pred = _3539;
                        frontier_phi_82_pred_1 = _3538;
                        frontier_phi_82_pred_2 = _3537;
                        frontier_phi_82_pred_3 = _3536;
                        frontier_phi_82_pred_4 = _3535;
                        frontier_phi_82_pred_5 = _3534;
                    }
                    else
                    {
                        float _3742;
                        float _3743;
                        float _3744;
                        float _3745;
                        float _3746;
                        float _3747;
                        float _4036;
                        float _4037;
                        float _4038;
                        float _4039;
                        float _4040;
                        float _4041;
                        float _3755 = _3534;
                        float _3756 = _3535;
                        float _3757 = _3536;
                        float _3758 = _3537;
                        float _3759 = _3538;
                        float _3760 = _3539;
                        uint _3761 = _3549;
                        uint _3762;
                        vec4 _3787;
                        float _3788;
                        vec4 _3803;
                        vec3 _3815;
                        vec4 _3830;
                        vec4 _3845;
                        float _3892;
                        bool _3893;
                        for (;;)
                        {
                            uint _3772 = ((_3540 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3761));
                            _3762 = (_3761 + 4294967295u) & _3761;
                            uint _3774 = _3772 * 40u;
                            _3787 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3774)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3774 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3774 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3774 + 3u)).x));
                            _3788 = _3787.w;
                            uint _3790 = (_3772 * 40u) + 4u;
                            _3803 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3790)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3790 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3790 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3790 + 3u)).x));
                            uint _3805 = (_3772 * 40u) + 8u;
                            _3815 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3805)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3805 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3805 + 2u)).x));
                            uint _3817 = (_3772 * 40u) + 16u;
                            _3830 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3817)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3817 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3817 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3817 + 3u)).x));
                            uint _3832 = (_3772 * 40u) + 20u;
                            _3845 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3832)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3832 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3832 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3832 + 3u)).x));
                            uint _3848 = (_3772 * 40u) + 24u;
                            vec4 _3861 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3848)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3848 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3848 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3848 + 3u)).x));
                            uint _3867 = (_3772 * 40u) + 28u;
                            vec4 _3880 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3867)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3867 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3867 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3867 + 3u)).x));
                            _3892 = fma(_2181, _3880.z, fma(_2180, _3880.y, _3880.x * _2179)) + _3880.w;
                            _3893 = !((fma(_2181, _3861.z, fma(_2180, _3861.y, _3861.x * _2179)) + _3861.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3893)
                            {
                                float _3920 = _3787.x - _2179;
                                float _3921 = _3787.y - _2180;
                                float _3922 = _3787.z - _2181;
                                float _3923 = dot(vec3(_3920, _3921, _3922), vec3(_3920, _3921, _3922));
                                float _3926 = inversesqrt(_3923);
                                float _3927 = _3926 * _3920;
                                float _3928 = _3926 * _3921;
                                float _3929 = _3926 * _3922;
                                float _3933 = 1.0 - (_3923 / (_3788 * _3788));
                                float _5144 = isnan(0.0) ? _3933 : (isnan(_3933) ? 0.0 : max(_3933, 0.0));
                                float _3934 = isnan(1.0) ? _5144 : (isnan(_5144) ? 1.0 : min(_5144, 1.0));
                                float _3938 = sqrt(_3923) * _3803.w;
                                float _3940 = 1.39999997615814208984375 / (_3938 + 1.39999997615814208984375);
                                float _3941 = _3940 * _3940;
                                float _3944 = ((1.0 - _3941) * dot(vec3(_3927, _3928, _3929), vec3(_1014, _1017, _1020))) + _3941;
                                float _3947 = _3938 * _3938;
                                float _3951 = (fma(_2181, _3830.z, fma(_2180, _3830.y, _3830.x * _2179)) + _3830.w) / _3892;
                                float _3952 = (fma(_2181, _3845.z, fma(_2180, _3845.y, _3845.x * _2179)) + _3845.w) / _3892;
                                float _3956 = 1.0 - dot(vec2(_3951, _3952), vec2(_3951, _3952));
                                float _5160 = isnan(0.0) ? _3956 : (isnan(_3956) ? 0.0 : max(_3956, 0.0));
                                float _3957 = isnan(1.0) ? _5160 : (isnan(_5160) ? 1.0 : min(_5160, 1.0));
                                float _3958 = _3957 * (((isnan(0.0) ? _3944 : (isnan(_3944) ? 0.0 : max(_3944, 0.0))) * _3934) / ((_3947 * 0.699999988079071044921875) + 1.0));
                                float _3970 = exp2(log2(1.0 / ((_3947 * 3.5) + 5.0)) * 0.25);
                                float _3971 = 1.0 - _1089;
                                float _3978 = sqrt(1.0 - ((1.0 - (_3971 * _3971)) * (1.0 - (_3970 * _3970))));
                                float _3979 = _3978 * _3978;
                                float _3980 = _3979 * _3979;
                                float _3981 = _3927 - _3400;
                                float _3982 = _3928 - _3401;
                                float _3983 = _3929 - _3402;
                                float _3987 = inversesqrt(dot(vec3(_3981, _3982, _3983), vec3(_3981, _3982, _3983)));
                                float _3991 = dot(vec3(_1014, _1017, _1020), vec3((-0.0) - _3400, (-0.0) - _3401, (-0.0) - _3402));
                                float _5171 = isnan(0.0) ? _3991 : (isnan(_3991) ? 0.0 : max(_3991, 0.0));
                                float _3994 = isnan(1.0) ? _5171 : (isnan(_5171) ? 1.0 : min(_5171, 1.0));
                                float _3995 = dot(vec3(_1014, _1017, _1020), vec3(_3987 * _3981, _3987 * _3982, _3987 * _3983));
                                float _5182 = isnan(0.0) ? _3995 : (isnan(_3995) ? 0.0 : max(_3995, 0.0));
                                float _3998 = isnan(1.0) ? _5182 : (isnan(_5182) ? 1.0 : min(_5182, 1.0));
                                float _4002 = ((_3998 * _3998) * (_3980 + (-1.0))) + 1.0;
                                float _4003 = _3940 * _3979;
                                float _4004 = _4003 * _4003;
                                float _4010 = ((1.0 - _4004) * dot(vec3(_1014, _1017, _1020), vec3(_3927, _3928, _3929))) + _4004;
                                float _5193 = isnan(0.0) ? _4010 : (isnan(_4010) ? 0.0 : max(_4010, 0.0));
                                float _4011 = isnan(1.0) ? _5193 : (isnan(_5193) ? 1.0 : min(_5193, 1.0));
                                float _4012 = 1.0 - _3979;
                                float _4022 = (0.5 / (((_4011 * ((_3994 * _4012) + _3979)) + 9.9999999392252902907785028219223e-09) + (((_4011 * _4012) + _3979) * _3994))) * _4011;
                                float _5204 = isnan(0.0) ? _4022 : (isnan(_4022) ? 0.0 : max(_4022, 0.0));
                                float _4032 = (_3957 * _3934) * (((_3980 * 3.1415927410125732421875) * (isnan(1.0) ? _5204 : (isnan(_5204) ? 1.0 : min(_5204, 1.0)))) / ((_4002 * _4002) * ((_3947 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3958 * _3803.z;
                                frontier_phi_88_pred_1 = _3958 * _3803.y;
                                frontier_phi_88_pred_2 = _3958 * _3803.x;
                                frontier_phi_88_pred_3 = _4032 * _3815.z;
                                frontier_phi_88_pred_4 = _4032 * _3815.y;
                                frontier_phi_88_pred_5 = _4032 * _3815.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _4041 = frontier_phi_88_pred;
                            _4040 = frontier_phi_88_pred_1;
                            _4039 = frontier_phi_88_pred_2;
                            _4038 = frontier_phi_88_pred_3;
                            _4037 = frontier_phi_88_pred_4;
                            _4036 = frontier_phi_88_pred_5;
                            _3745 = _4039 + _3758;
                            _3746 = _4040 + _3759;
                            _3747 = _4041 + _3760;
                            _3742 = _4036 + _3755;
                            _3743 = _4037 + _3756;
                            _3744 = _4038 + _3757;
                            if (_3762 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3755 = _3742;
                                _3756 = _3743;
                                _3757 = _3744;
                                _3758 = _3745;
                                _3759 = _3746;
                                _3760 = _3747;
                                _3761 = _3762;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3747;
                        frontier_phi_82_pred_1 = _3746;
                        frontier_phi_82_pred_2 = _3745;
                        frontier_phi_82_pred_3 = _3744;
                        frontier_phi_82_pred_4 = _3743;
                        frontier_phi_82_pred_5 = _3742;
                    }
                    _3385 = frontier_phi_82_pred;
                    _3383 = frontier_phi_82_pred_1;
                    _3381 = frontier_phi_82_pred_2;
                    _3379 = frontier_phi_82_pred_3;
                    _3377 = frontier_phi_82_pred_4;
                    _3375 = frontier_phi_82_pred_5;
                    uint _3541 = _3540 + 1u;
                    if (_3541 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3534 = _3375;
                        _3535 = _3377;
                        _3536 = _3379;
                        _3537 = _3381;
                        _3538 = _3383;
                        _3539 = _3385;
                        _3540 = _3541;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3381;
                frontier_phi_63_64_ladder_1 = _3385;
                frontier_phi_63_64_ladder_2 = _3383;
                frontier_phi_63_64_ladder_3 = _3379;
                frontier_phi_63_64_ladder_4 = _3377;
                frontier_phi_63_64_ladder_5 = _3375;
            }
            else
            {
                frontier_phi_63_64_ladder = _3251;
                frontier_phi_63_64_ladder_1 = _3255;
                frontier_phi_63_64_ladder_2 = _3253;
                frontier_phi_63_64_ladder_3 = _3249;
                frontier_phi_63_64_ladder_4 = _3247;
                frontier_phi_63_64_ladder_5 = _3245;
            }
            _3374 = frontier_phi_63_64_ladder_5;
            _3376 = frontier_phi_63_64_ladder_4;
            _3378 = frontier_phi_63_64_ladder_3;
            _3380 = frontier_phi_63_64_ladder;
            _3382 = frontier_phi_63_64_ladder_2;
            _3384 = frontier_phi_63_64_ladder_1;
        }
        float _3389 = isnan(1.0) ? _1073 : (isnan(_1073) ? 1.0 : min(_1073, 1.0));
        _3133 = (_3389 * _3380) + _2645;
        _3135 = (_3389 * _3382) + _2647;
        _3137 = (_3389 * _3384) + _2649;
        _3139 = ((_3374 * _1058) * _3389) + _2983;
        _3141 = ((_3376 * _1060) * _3389) + _2985;
        _3143 = ((_3378 * _1061) * _3389) + _2987;
    }
    else
    {
        _3133 = _2645;
        _3135 = _2647;
        _3137 = _2649;
        _3139 = _2983;
        _3141 = _2985;
        _3143 = _2987;
    }
    uint _3149 = _1034 + uint(cbMatDynParam._m0[0u].w);
    float _3155 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _3161 = (((((_3155 * cbMtdParam._m0[14u].x) * _777.x) * _800) * _874) * (((1.0 - _853) * cbMtdParam._m0[20u].w) + _853)) * cbInstanceData._m0[_3149].x;
    float _3167 = (((((_3155 * cbMtdParam._m0[14u].y) * _777.y) * _800) * _874) * (((1.0 - _855) * cbMtdParam._m0[20u].w) + _855)) * cbInstanceData._m0[_3149].y;
    float _3173 = (((((_3155 * cbMtdParam._m0[14u].z) * _777.z) * _800) * _874) * (((1.0 - _857) * cbMtdParam._m0[20u].w) + _857)) * cbInstanceData._m0[_3149].z;
    float _5220 = isnan(0.0) ? _1048 : (isnan(_1048) ? 0.0 : max(_1048, 0.0));
    float _5231 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
    float _5242 = isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0));
    float _3190 = (((isnan(1.0) ? _5220 : (isnan(_5220) ? 1.0 : min(_5220, 1.0))) * (_3133 + ((isnan(0.0) ? _1834 : (isnan(_1834) ? 0.0 : max(_1834, 0.0))) * _1073))) + ((_3139 + ((isnan(0.0) ? _2126 : (isnan(_2126) ? 0.0 : max(_2126, 0.0))) * _1913)) * cbPerFrame._m0[3u].x)) + _3161;
    float _3192 = (_3167 + ((_3141 + ((isnan(0.0) ? _2129 : (isnan(_2129) ? 0.0 : max(_2129, 0.0))) * _1913)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5231 : (isnan(_5231) ? 1.0 : min(_5231, 1.0))) * (_3135 + ((isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0))) * _1073)));
    float _3194 = (_3173 + ((_3143 + ((isnan(0.0) ? _2132 : (isnan(_2132) ? 0.0 : max(_2132, 0.0))) * _1913)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5242 : (isnan(_5242) ? 1.0 : min(_5242, 1.0))) * (_3137 + ((isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0))) * _1073)));
    float _3195 = isnan(0.0) ? _3190 : (isnan(_3190) ? 0.0 : max(_3190, 0.0));
    float _3196 = isnan(0.0) ? _3192 : (isnan(_3192) ? 0.0 : max(_3192, 0.0));
    float _3197 = isnan(0.0) ? _3194 : (isnan(_3194) ? 0.0 : max(_3194, 0.0));
    float _3203 = cbMtdParam._m0[2u].x * _3161;
    float _3204 = cbMtdParam._m0[2u].y * _3167;
    float _3205 = cbMtdParam._m0[2u].z * _3173;
    float _5268 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3207 = isnan(1.0) ? _5268 : (isnan(_5268) ? 1.0 : min(_5268, 1.0));
    uint _3208 = _1033 + 6u;
    float _3216 = _995 / cbSceneParam._m0[86u].x;
    float _3217 = _996 / cbSceneParam._m0[86u].y;
    vec4 _3231 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3216, _3217, (log2((isnan(cbSceneParam._m0[77u].w) ? _918 : (isnan(_918) ? cbSceneParam._m0[77u].w : min(_918, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3233 = _3231.x;
    float _3234 = _3231.y;
    float _3235 = _3231.z;
    float _3236 = _3231.w;
    float _3307;
    float _3309;
    float _3311;
    float _3313;
    if (_918 > cbSceneParam._m0[78u].w)
    {
        float _3270 = isnan(_918) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _918 : min(cbSceneParam._m0[80u].w, _918));
        float _3271 = _3270 / _918;
        float _3282 = _3271 * _968;
        float _3283 = _969 * _3271;
        float _3284 = (-0.0) - _3283;
        float _3285 = _3271 * _970;
        float _3287 = (cbSceneParam._m0[77u].w * _3284) / _3270;
        float _3288 = _3287 + cbSceneParam._m0[79u].w;
        float _3289 = cbSceneParam._m0[79u].w - _3283;
        float _3295 = sqrt(((_3282 * _3282) + (_3283 * _3283)) + (_3285 * _3285));
        float _3298 = (1.0 - (cbSceneParam._m0[77u].w / _3270)) * _3295;
        float _3303 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3305 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3491;
        if (abs((_3284 - _3287) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3491 = ((((_3288 > 0.0) ? exp2(_3303 * _3288) : (2.0 - exp2(_3305 * _3288))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3298;
        }
        else
        {
            float _3435 = 1.0 / cbSceneParam._m0[80u].x;
            float _3436 = isnan(_3289) ? _3288 : (isnan(_3288) ? _3289 : max(_3288, _3289));
            float _3437 = isnan(_3289) ? _3288 : (isnan(_3288) ? _3289 : min(_3288, _3289));
            float _3446 = isnan(0.0) ? _3436 : (isnan(_3436) ? 0.0 : min(_3436, 0.0));
            float _3447 = isnan(0.0) ? _3437 : (isnan(_3437) ? 0.0 : min(_3437, 0.0));
            _3491 = ((abs(_3295 / _3284) * cbSceneParam._m0[80u].y) * ((((_3446 - _3447) * 2.0) - ((exp2(_3303 * (isnan(0.0) ? _3436 : (isnan(_3436) ? 0.0 : max(_3436, 0.0)))) - exp2(_3303 * (isnan(0.0) ? _3437 : (isnan(_3437) ? 0.0 : max(_3437, 0.0))))) * _3435)) - ((exp2(_3305 * _3446) - exp2(_3305 * _3447)) * _3435))) + (_3298 * cbSceneParam._m0[80u].z);
        }
        vec4 _3493 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3216, _3217, 1.0), 0.0);
        float _3502 = exp2((_3491 * (-1.44269502162933349609375)) * (1.0 - _3493.w));
        float _3503 = log2(_3502);
        float _3519 = log2(_3236);
        _3307 = (exp2(_3519 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3503 * cbSceneParam._m0[78u].x)) * _3493.x) / cbSceneParam._m0[78u].x)) + _3233;
        _3309 = (exp2(_3519 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3503 * cbSceneParam._m0[78u].y)) * _3493.y) / cbSceneParam._m0[78u].y)) + _3234;
        _3311 = (exp2(_3519 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3503 * cbSceneParam._m0[78u].z)) * _3493.z) / cbSceneParam._m0[78u].z)) + _3235;
        _3313 = _3502 * _3236;
    }
    else
    {
        _3307 = _3233;
        _3309 = _3234;
        _3311 = _3235;
        _3313 = _3236;
    }
    bool _3529;
    vec4 _3323;
    vec4 _3345;
    float _3347;
    float _3351;
    float _3352;
    float _3353;
    float _3356;
    float _3359;
    float _3362;
    float _3363;
    bool _3373;
    for (;;)
    {
        _3323 = cbMatDynParam._m0[0u];
        float _3325 = roundEven(_3323.y);
        bool _3326 = _3325 == 3.0;
        float _3327 = log2(_3313);
        float _3331 = exp2(_3327 * cbSceneParam._m0[78u].x);
        float _3332 = exp2(_3327 * cbSceneParam._m0[78u].y);
        float _3333 = exp2(_3327 * cbSceneParam._m0[78u].z);
        float _3334 = _3331 * _3195;
        float _3335 = _3332 * _3196;
        float _3336 = _3333 * _3197;
        float _3343 = _984 + (-0.5);
        _3345 = cbMtdParam._m0[1u];
        _3347 = _3345.y * _3343;
        float _3350 = (_3325 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3351 = _3350 * (_3326 ? _3334 : (_3334 + (cbSceneParam._m0[72u].w * _3307)));
        _3352 = _3350 * (_3326 ? _3335 : (_3335 + (cbSceneParam._m0[72u].w * _3309)));
        _3353 = _3350 * (_3326 ? _3336 : (_3336 + (cbSceneParam._m0[72u].w * _3311)));
        _3356 = ((_3203 * _3207) * _3331) * _3350;
        _3359 = ((_3204 * _3207) * _3332) * _3350;
        _3362 = ((_3205 * _3207) * _3333) * _3350;
        _3363 = _3343 * 0.999000012874603271484375;
        _3373 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3373)
        {
            if ((cbInstanceData._m0[_1033 + 7u].x + _3363) < 0.5)
            {
                _3529 = true;
                break;
            }
        }
        uint _3470 = _1034 + uint(_3323.w);
        if ((cbInstanceData._m0[_3470].w < 1.0) && ((cbInstanceData._m0[_3470].w + _3363) < 0.5))
        {
            _3529 = true;
            break;
        }
        if ((_3347 + 1.0) < _3345.x)
        {
            _3529 = true;
            break;
        }
        _3529 = false;
        break;
    }
    float _3733;
    if (_3529)
    {
        discard_state = true;
        _3733 = 0.0;
    }
    else
    {
        _3733 = cbInstanceData._m0[_3208].w;
    }
    SV_Target.x = _3351;
    SV_Target.y = _3352;
    SV_Target.z = _3353;
    SV_Target.w = _3733;
    SV_Target_1.x = _3356;
    SV_Target_1.y = _3359;
    SV_Target_1.z = _3362;
    SV_Target_1.w = cbInstanceData._m0[_3208].w;
    discard_exit();
}


