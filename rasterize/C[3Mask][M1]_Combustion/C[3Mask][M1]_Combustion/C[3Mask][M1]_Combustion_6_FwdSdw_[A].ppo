#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M1_Combustion_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1392;
float _4110;
float _4111;
float _4112;
float _4113;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _226 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _227 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _228 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _234 = inversesqrt(dot(vec3(_226, _227, _228), vec3(_226, _227, _228)));
    float _241 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _248 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _270 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _276 = _270.x * cbMtdParam._m0[10u].x;
    float _277 = _270.y * cbMtdParam._m0[10u].y;
    float _278 = _270.z * cbMtdParam._m0[10u].z;
    vec4 _297 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _316 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _344 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w)).x;
    float _354 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _316.x) * 2.0) - _344)) + 1.0;
    float _4122 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _355 = isnan(1.0) ? _4122 : (isnan(_4122) ? 1.0 : min(_4122, 1.0));
    float _362 = (_355 * ((_297.x * cbMtdParam._m0[11u].x) - _276)) + _276;
    float _363 = (_355 * ((_297.y * cbMtdParam._m0[11u].y) - _277)) + _277;
    float _364 = (_355 * ((_297.z * cbMtdParam._m0[11u].z) - _278)) + _278;
    vec4 _382 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _395 = (((((1.0 - _316.y) * 2.0) - _344) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _4133 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _396 = isnan(1.0) ? _4133 : (isnan(_4133) ? 1.0 : min(_4133, 1.0));
    float _403 = (((_382.x * cbMtdParam._m0[12u].x) - _362) * _396) + _362;
    float _404 = (_396 * ((_382.y * cbMtdParam._m0[12u].y) - _363)) + _363;
    float _405 = (_396 * ((_382.z * cbMtdParam._m0[12u].z) - _364)) + _364;
    vec4 _423 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _436 = (((((1.0 - _316.z) * 2.0) - _344) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _4144 = isnan(0.0) ? _436 : (isnan(_436) ? 0.0 : max(_436, 0.0));
    float _437 = isnan(1.0) ? _4144 : (isnan(_4144) ? 1.0 : min(_4144, 1.0));
    vec4 _465 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _473 = ((((((_423.x * cbMtdParam._m0[13u].x) - _403) * _437) + _403) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _465.x;
    float _476 = ((((_437 * ((_423.y * cbMtdParam._m0[13u].y) - _404)) + _404) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _465.y;
    float _479 = ((((_437 * ((_423.z * cbMtdParam._m0[13u].z) - _405)) + _405) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _465.z;
    vec4 _492 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.z) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.w) + cbTextureTilingScale._m0[20u].w));
    vec4 _507 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _509 = _507.x;
    float _526 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _509) * _355) + _509;
    float _543 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _526) * _396) + _526;
    float _560 = ((texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x - _543) * _437) + _543;
    vec4 _573 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _575 = _573.x;
    float _576 = _573.y;
    float _577 = _573.z;
    vec4 _589 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _600 = ((_589.x - _575) * _355) + _575;
    float _601 = ((_589.y - _576) * _355) + _576;
    float _602 = ((_589.z - _577) * _355) + _577;
    vec4 _615 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _626 = ((_615.x - _600) * _396) + _600;
    float _627 = ((_615.y - _601) * _396) + _601;
    float _628 = ((_615.z - _602) * _396) + _602;
    vec4 _641 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _654 = ((_641.z - _628) * _437) + _628;
    float _657 = ((((_641.x - _626) * _437) + _626) * 2.0) + (-1.0);
    float _659 = ((((_641.y - _627) * _437) + _627) * 2.0) + (-1.0);
    float _660 = dot(vec2(_657, _659), vec2(_657, _659));
    float _4155 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _665 = sqrt(1.0 - (isnan(1.0) ? _4155 : (isnan(_4155) ? 1.0 : min(_4155, 1.0))));
    vec4 _697 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[15u].x) + cbTextureTilingScale._m0[15u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[15u].y) + cbTextureTilingScale._m0[15u].w));
    float _711 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4166 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _712 = isnan(1.0) ? _4166 : (isnan(_4166) ? 1.0 : min(_4166, 1.0));
    float _720 = (((_712 * _712) * (3.0 - (_712 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _728 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _736 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4177 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
    float _737 = isnan(1.0) ? _4177 : (isnan(_4177) ? 1.0 : min(_4177, 1.0));
    float _741 = (_737 * _737) * (3.0 - (_737 * 2.0));
    float _742 = _741 * cbMtdParam._m0[22u].x;
    float _743 = _741 * cbMtdParam._m0[22u].y;
    float _744 = sin(_728);
    float _745 = cos(_728);
    float _746 = TEXCOORD.z - _742;
    float _747 = TEXCOORD.w - _743;
    vec4 _767 = texture(sampler2D(C_3Mask_M1_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_742 + fma(_747, (-0.0) - _744, _746 * _745))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_747, _745, _746 * _744) + _743)) + cbTextureTilingScale._m0[2u].w));
    float _773 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _767.x;
    float _775 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _767.y;
    float _777 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _767.z;
    float _797 = (TEXCOORD_5.x - (((_492.x + 0.00999999977648258209228515625) * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _4188 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
    float _798 = isnan(1.0) ? _4188 : (isnan(_4188) ? 1.0 : min(_4188, 1.0));
    float _801 = fma(_665, _241 * NORMAL.x, fma(_659, _248 * TANGENT.x, (_234 * _226) * _657));
    float _804 = fma(_665, _241 * NORMAL.y, fma(_659, _248 * TANGENT.y, (_234 * _227) * _657));
    float _807 = fma(_665, _241 * NORMAL.z, fma(_659, _248 * TANGENT.z, (_234 * _228) * _657));
    float _811 = inversesqrt(dot(vec3(_801, _804, _807), vec3(_801, _804, _807)));
    float _812 = _811 * _801;
    float _813 = _811 * _804;
    float _814 = _811 * _807;
    float _4199 = isnan(0.0) ? _654 : (isnan(_654) ? 0.0 : max(_654, 0.0));
    float _815 = isnan(1.0) ? _4199 : (isnan(_4199) ? 1.0 : min(_4199, 1.0));
    float _4210 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _4221 = isnan(0.0) ? _476 : (isnan(_476) ? 0.0 : max(_476, 0.0));
    float _4232 = isnan(0.0) ? _479 : (isnan(_479) ? 0.0 : max(_479, 0.0));
    float _4243 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _819 = isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0));
    float _835 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _875 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _885 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _875);
    float _886 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _875);
    float _887 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _875);
    float _891 = inversesqrt(dot(vec3(_885, _886, _887), vec3(_885, _886, _887)));
    float _892 = _885 * _891;
    float _893 = _886 * _891;
    float _894 = _887 * _891;
    vec4 _899 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _901 = _899.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1072 = sqrt(((_885 * _885) + (_886 * _886)) + (_887 * _887));
        float _1078 = (cbMatDynParam._m0[5u].x * _1072) + cbMatDynParam._m0[5u].y;
        float _4254 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
        float _1079 = isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0));
        float _1083 = (cbMatDynParam._m0[5u].z * _1072) + cbMatDynParam._m0[5u].w;
        float _4265 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0))) - _1079)) + _1079) < ((_901 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _912 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _913 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _931 = fma(_814, cbSceneParam._m0[5u].z, fma(_813, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _812));
    float _934 = fma(_814, cbSceneParam._m0[6u].z, fma(_813, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _812));
    float _937 = fma(_814, cbSceneParam._m0[7u].z, fma(_813, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _812));
    uint _950 = uint(roundEven(NORMAL.w)) * 13u;
    uint _951 = _950 + 9u;
    uint _952 = _951 + uint(cbMatDynParam._m0[0u].w);
    float _958 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4210 : (isnan(_4210) ? 1.0 : min(_4210, 1.0)))) * cbInstanceData._m0[_952].x;
    float _959 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4221 : (isnan(_4221) ? 1.0 : min(_4221, 1.0)))) * cbInstanceData._m0[_952].y;
    float _960 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4232 : (isnan(_4232) ? 1.0 : min(_4232, 1.0)))) * cbInstanceData._m0[_952].z;
    float _4276 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
    float _961 = isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0));
    float _4287 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
    float _962 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
    float _4298 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    float _963 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
    float _964 = 1.0 - _819;
    float _965 = _961 * _964;
    float _966 = _962 * _964;
    float _967 = _963 * _964;
    float _972 = (_961 + (-0.039999999105930328369140625)) * _819;
    float _973 = (_962 + (-0.039999999105930328369140625)) * _819;
    float _974 = (_963 + (-0.039999999105930328369140625)) * _819;
    float _975 = _972 + 0.039999999105930328369140625;
    float _977 = _973 + 0.039999999105930328369140625;
    float _978 = _974 + 0.039999999105930328369140625;
    vec4 _987 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _912, cbSceneParam._m0[86u].y * _913));
    float _990 = _987.x * TEXCOORD_5.w;
    float _991 = dot(vec3(_812, _813, _814), vec3(_892, _893, _894));
    float _994 = _991 * 2.0;
    float _998 = (_994 * _812) - _892;
    float _999 = (_994 * _813) - _893;
    float _1000 = (_994 * _814) - _894;
    float _1004 = abs(dot(vec3(_892, _893, _894), vec3(_812, _813, _814)));
    float _4309 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
    float _1006 = sqrt(_815);
    float _1018 = exp2((_1006 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1006 * 3.0));
    float _1024 = (1.0 - _1018) * ((_1006 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1025 = _1018 * _1006;
    float _1053 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1057 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1061 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1391;
    float _1393;
    float _1394;
    float _1395;
    float _1396;
    float _1397;
    float _1398;
    float _1399;
    float _1400;
    float _1401;
    float _1402;
    float _1403;
    float _1404;
    float _1405;
    float _1406;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1116 = fma(_1061, cbModelParam._m0[26u].z, fma(_1057, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1053));
        float _1120 = fma(_1061, cbModelParam._m0[27u].z, fma(_1057, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1053));
        float _1124 = fma(_1061, cbModelParam._m0[28u].z, fma(_1057, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1053));
        float _1149 = _1053 + _812;
        float _1150 = _1057 + _813;
        float _1151 = _1061 + _814;
        float _1161 = fma(_1151, cbModelParam._m0[26u].z, fma(_1150, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1149)) - _1116;
        float _1162 = fma(_1151, cbModelParam._m0[27u].z, fma(_1150, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1149)) - _1120;
        float _1163 = fma(_1151, cbModelParam._m0[28u].z, fma(_1150, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1149)) - _1124;
        float _1167 = inversesqrt(dot(vec3(_1161, _1162, _1163), vec3(_1161, _1162, _1163)));
        float _1180 = ((_1167 * _1161) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1116 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1181 = ((_1167 * _1162) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1120 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1182 = ((_1167 * _1163) / cbModelParam._m0[34u].z) + ((((((_1124 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1185 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1180, _1181, _1182), 0.0);
        vec4 _1192 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1180, _1181, _1182), 0.0);
        vec4 _1199 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1180, _1181, _1182), 0.0);
        vec4 _1206 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1180, _1181, _1182), 0.0);
        float _1219 = exp2((_1185.w + (-0.5)) * 20.0) * 2.0;
        float _1220 = _1219 * (_1185.x + (-0.5));
        float _1221 = _1219 * (_1185.y + (-0.5));
        float _1222 = _1219 * (_1185.z + (-0.5));
        float _1229 = exp2((_1192.w + (-0.5)) * 20.0) * 2.0;
        float _1230 = _1229 * (_1192.x + (-0.5));
        float _1231 = _1229 * (_1192.y + (-0.5));
        float _1232 = _1229 * (_1192.z + (-0.5));
        float _1239 = exp2((_1199.w + (-0.5)) * 20.0) * 2.0;
        float _1240 = _1239 * (_1199.x + (-0.5));
        float _1241 = _1239 * (_1199.y + (-0.5));
        float _1242 = _1239 * (_1199.z + (-0.5));
        float _1249 = exp2((_1206.w + (-0.5)) * 20.0) * 2.0;
        float _1250 = _1249 * (_1206.x + (-0.5));
        float _1251 = _1249 * (_1206.y + (-0.5));
        float _1252 = _1249 * (_1206.z + (-0.5));
        float _1253 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1254 = isnan(0.0) ? _1251 : (isnan(_1251) ? 0.0 : max(_1251, 0.0));
        float _1255 = isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0));
        float _1256 = _1220 * 0.5;
        float _1257 = _1230 * 0.5;
        float _1258 = _1240 * 0.5;
        float _1259 = dot(vec3(_1256, _1257, _1258), vec3(_1256, _1257, _1258));
        float _1264 = (_1259 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1259);
        float _1273 = (dot(vec3(_812, _813, _814), vec3(_1264 * _1256, _1264 * _1257, _1264 * _1258)) + 1.0) * 0.5;
        float _4335 = isnan(0.0) ? _1273 : (isnan(_1273) ? 0.0 : max(_1273, 0.0));
        float _1283 = sqrt(((_1257 * _1257) + (_1256 * _1256)) + (_1258 * _1258)) / (_1253 + 9.9999997473787516355514526367188e-06);
        float _4346 = isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0));
        float _1284 = isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0));
        float _1285 = _1284 * 2.0;
        float _1289 = (1.0 - _1284) / (_1284 + 1.0);
        float _4357 = isnan(0.0) ? _1289 : (isnan(_1289) ? 0.0 : max(_1289, 0.0));
        float _1290 = isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0));
        float _1299 = ((((1.0 - _1290) * (_1285 + 2.0)) * exp2(log2(isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0))) * (_1285 + 1.0))) + _1290) * _1253;
        float _1300 = _1221 * 0.5;
        float _1301 = _1231 * 0.5;
        float _1302 = _1241 * 0.5;
        float _1303 = dot(vec3(_1300, _1301, _1302), vec3(_1300, _1301, _1302));
        float _1308 = (_1303 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1303);
        float _1316 = (dot(vec3(_812, _813, _814), vec3(_1308 * _1300, _1308 * _1301, _1308 * _1302)) + 1.0) * 0.5;
        float _4368 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
        float _1325 = sqrt(((_1301 * _1301) + (_1300 * _1300)) + (_1302 * _1302)) / (_1254 + 9.9999997473787516355514526367188e-06);
        float _4379 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1326 = isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0));
        float _1327 = _1326 * 2.0;
        float _1331 = (1.0 - _1326) / (_1326 + 1.0);
        float _4390 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
        float _1332 = isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0));
        float _1341 = ((((1.0 - _1332) * (_1327 + 2.0)) * exp2(log2(isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0))) * (_1327 + 1.0))) + _1332) * _1254;
        float _1342 = _1222 * 0.5;
        float _1343 = _1232 * 0.5;
        float _1344 = _1242 * 0.5;
        float _1345 = dot(vec3(_1342, _1343, _1344), vec3(_1342, _1343, _1344));
        float _1350 = (_1345 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1345);
        float _1358 = (dot(vec3(_812, _813, _814), vec3(_1350 * _1342, _1350 * _1343, _1350 * _1344)) + 1.0) * 0.5;
        float _4401 = isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0));
        float _1367 = sqrt(((_1343 * _1343) + (_1342 * _1342)) + (_1344 * _1344)) / (_1255 + 9.9999997473787516355514526367188e-06);
        float _4412 = isnan(0.0) ? _1367 : (isnan(_1367) ? 0.0 : max(_1367, 0.0));
        float _1368 = isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0));
        float _1369 = _1368 * 2.0;
        float _1373 = (1.0 - _1368) / (_1368 + 1.0);
        float _4423 = isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0));
        float _1374 = isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0));
        float _1383 = ((((1.0 - _1374) * (_1369 + 2.0)) * exp2(log2(isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0))) * (_1369 + 1.0))) + _1374) * _1255;
        _1391 = _1222;
        _1393 = _1221;
        _1394 = _1220;
        _1395 = _1232;
        _1396 = _1231;
        _1397 = _1230;
        _1398 = _1242;
        _1399 = _1241;
        _1400 = _1240;
        _1401 = _1255;
        _1402 = _1254;
        _1403 = _1253;
        _1404 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0)));
        _1405 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1341 : (isnan(_1341) ? 0.0 : max(_1341, 0.0)));
        _1406 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0)));
    }
    else
    {
        _1391 = _1392;
        _1393 = _1392;
        _1394 = _1392;
        _1395 = _1392;
        _1396 = _1392;
        _1397 = _1392;
        _1398 = _1392;
        _1399 = _1392;
        _1400 = _1392;
        _1401 = _1392;
        _1402 = _1392;
        _1403 = _1392;
        _1404 = 0.0;
        _1405 = 0.0;
        _1406 = 0.0;
    }
    float _1704;
    float _1705;
    float _1706;
    float _1707;
    float _1708;
    float _1709;
    float _1710;
    float _1711;
    float _1712;
    float _1713;
    float _1714;
    float _1715;
    float _1716;
    float _1717;
    float _1718;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1435 = fma(_1061, cbModelParam._m0[30u].z, fma(_1057, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1053));
        float _1439 = fma(_1061, cbModelParam._m0[31u].z, fma(_1057, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1053));
        float _1443 = fma(_1061, cbModelParam._m0[32u].z, fma(_1057, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1053));
        float _1466 = _1053 + _812;
        float _1467 = _1057 + _813;
        float _1468 = _1061 + _814;
        float _1478 = fma(_1468, cbModelParam._m0[30u].z, fma(_1467, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1466)) - _1435;
        float _1479 = fma(_1468, cbModelParam._m0[31u].z, fma(_1467, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1466)) - _1439;
        float _1480 = fma(_1468, cbModelParam._m0[32u].z, fma(_1467, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1466)) - _1443;
        float _1484 = inversesqrt(dot(vec3(_1478, _1479, _1480), vec3(_1478, _1479, _1480)));
        float _1497 = ((_1484 * _1478) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1435 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1498 = ((_1484 * _1479) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1439 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1499 = ((_1484 * _1480) / cbModelParam._m0[35u].z) + ((((((_1443 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1501 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1497, _1498, _1499), 0.0);
        vec4 _1508 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1497, _1498, _1499), 0.0);
        vec4 _1515 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1497, _1498, _1499), 0.0);
        vec4 _1522 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1497, _1498, _1499), 0.0);
        float _1534 = exp2((_1501.w + (-0.5)) * 20.0) * 2.0;
        float _1535 = _1534 * (_1501.x + (-0.5));
        float _1536 = _1534 * (_1501.y + (-0.5));
        float _1537 = _1534 * (_1501.z + (-0.5));
        float _1544 = exp2((_1508.w + (-0.5)) * 20.0) * 2.0;
        float _1545 = _1544 * (_1508.x + (-0.5));
        float _1546 = _1544 * (_1508.y + (-0.5));
        float _1547 = _1544 * (_1508.z + (-0.5));
        float _1554 = exp2((_1515.w + (-0.5)) * 20.0) * 2.0;
        float _1555 = _1554 * (_1515.x + (-0.5));
        float _1556 = _1554 * (_1515.y + (-0.5));
        float _1557 = _1554 * (_1515.z + (-0.5));
        float _1564 = exp2((_1522.w + (-0.5)) * 20.0) * 2.0;
        float _1565 = _1564 * (_1522.x + (-0.5));
        float _1566 = _1564 * (_1522.y + (-0.5));
        float _1567 = _1564 * (_1522.z + (-0.5));
        float _1568 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
        float _1569 = isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0));
        float _1570 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
        float _1571 = _1535 * 0.5;
        float _1572 = _1545 * 0.5;
        float _1573 = _1555 * 0.5;
        float _1574 = dot(vec3(_1571, _1572, _1573), vec3(_1571, _1572, _1573));
        float _1579 = (_1574 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1574);
        float _1587 = (dot(vec3(_812, _813, _814), vec3(_1579 * _1571, _1579 * _1572, _1579 * _1573)) + 1.0) * 0.5;
        float _4464 = isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0));
        float _1596 = sqrt(((_1572 * _1572) + (_1571 * _1571)) + (_1573 * _1573)) / (_1568 + 9.9999997473787516355514526367188e-06);
        float _4475 = isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0));
        float _1597 = isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0));
        float _1598 = _1597 * 2.0;
        float _1602 = (1.0 - _1597) / (_1597 + 1.0);
        float _4486 = isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0));
        float _1603 = isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0));
        float _1612 = ((((1.0 - _1603) * (_1598 + 2.0)) * exp2(log2(isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0))) * (_1598 + 1.0))) + _1603) * _1568;
        float _1613 = _1536 * 0.5;
        float _1614 = _1546 * 0.5;
        float _1615 = _1556 * 0.5;
        float _1616 = dot(vec3(_1613, _1614, _1615), vec3(_1613, _1614, _1615));
        float _1621 = (_1616 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1616);
        float _1629 = (dot(vec3(_812, _813, _814), vec3(_1621 * _1613, _1621 * _1614, _1621 * _1615)) + 1.0) * 0.5;
        float _4497 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1638 = sqrt(((_1614 * _1614) + (_1613 * _1613)) + (_1615 * _1615)) / (_1569 + 9.9999997473787516355514526367188e-06);
        float _4508 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1639 = isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0));
        float _1640 = _1639 * 2.0;
        float _1644 = (1.0 - _1639) / (_1639 + 1.0);
        float _4519 = isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0));
        float _1645 = isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0));
        float _1654 = ((((1.0 - _1645) * (_1640 + 2.0)) * exp2(log2(isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0))) * (_1640 + 1.0))) + _1645) * _1569;
        float _1655 = _1537 * 0.5;
        float _1656 = _1547 * 0.5;
        float _1657 = _1557 * 0.5;
        float _1658 = dot(vec3(_1655, _1656, _1657), vec3(_1655, _1656, _1657));
        float _1663 = (_1658 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1658);
        float _1671 = (dot(vec3(_812, _813, _814), vec3(_1663 * _1655, _1663 * _1656, _1663 * _1657)) + 1.0) * 0.5;
        float _4530 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
        float _1680 = sqrt(((_1656 * _1656) + (_1655 * _1655)) + (_1657 * _1657)) / (_1570 + 9.9999997473787516355514526367188e-06);
        float _4541 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
        float _1681 = isnan(1.0) ? _4541 : (isnan(_4541) ? 1.0 : min(_4541, 1.0));
        float _1682 = _1681 * 2.0;
        float _1686 = (1.0 - _1681) / (_1681 + 1.0);
        float _4552 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
        float _1687 = isnan(1.0) ? _4552 : (isnan(_4552) ? 1.0 : min(_4552, 1.0));
        float _1696 = ((((1.0 - _1687) * (_1682 + 2.0)) * exp2(log2(isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0))) * (_1682 + 1.0))) + _1687) * _1570;
        _1704 = _1537;
        _1705 = _1536;
        _1706 = _1535;
        _1707 = _1547;
        _1708 = _1546;
        _1709 = _1545;
        _1710 = _1557;
        _1711 = _1556;
        _1712 = _1555;
        _1713 = _1570;
        _1714 = _1569;
        _1715 = _1568;
        _1716 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0)));
        _1717 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0)));
        _1718 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0)));
    }
    else
    {
        _1704 = _1392;
        _1705 = _1392;
        _1706 = _1392;
        _1707 = _1392;
        _1708 = _1392;
        _1709 = _1392;
        _1710 = _1392;
        _1711 = _1392;
        _1712 = _1392;
        _1713 = _1392;
        _1714 = _1392;
        _1715 = _1392;
        _1716 = 0.0;
        _1717 = 0.0;
        _1718 = 0.0;
    }
    float _1728 = (cbModelParam._m0[1u].x * (_1716 - _1404)) + _1404;
    float _1729 = (cbModelParam._m0[1u].x * (_1717 - _1405)) + _1405;
    float _1730 = (cbModelParam._m0[1u].x * (_1718 - _1406)) + _1406;
    float _1751 = fma(_1730, cbSceneParam._m0[89u].z, fma(_1729, cbSceneParam._m0[89u].y, _1728 * cbSceneParam._m0[89u].x));
    float _1754 = fma(_1730, cbSceneParam._m0[90u].z, fma(_1729, cbSceneParam._m0[90u].y, _1728 * cbSceneParam._m0[90u].x));
    float _1757 = fma(_1730, cbSceneParam._m0[91u].z, fma(_1729, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1728));
    float _1772 = _998 * 0.5;
    float _1773 = _999 * 0.5;
    float _1774 = _1000 * 0.5;
    float _1775 = dot(vec4(_1772, _1773, _1774, 1.0), vec4(_1706, _1709, _1712, _1715));
    float _1778 = dot(vec4(_1772, _1773, _1774, 1.0), vec4(_1705, _1708, _1711, _1714));
    float _1781 = dot(vec4(_1772, _1773, _1774, 1.0), vec4(_1704, _1707, _1710, _1713));
    float _1815;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1788 = dot(vec4(_1772, _1773, _1774, 1.0), vec4(_1391, _1395, _1398, _1401));
        float _1792 = dot(vec4(_1772, _1773, _1774, 1.0), vec4(_1393, _1396, _1399, _1402));
        float _1796 = dot(vec4(_1772, _1773, _1774, 1.0), vec4(_1394, _1397, _1400, _1403));
        float _1803 = dot(vec4(cbModelParam._m0[39u]), vec4(_1772, _1773, _1774, 1.0));
        _1815 = dot(vec3(isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0)), isnan(0.0) ? _1792 : (isnan(_1792) ? 0.0 : max(_1792, 0.0)), isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1803) ? 0.0 : (isnan(0.0) ? _1803 : max(0.0, _1803))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1815 = 1.0;
    }
    float _1826;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1817 = dot(vec4(cbModelParam._m0[40u]), vec4(_1772, _1773, _1774, 1.0));
        _1826 = dot(vec3(isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0)), isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0)), isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1817) ? 0.0 : (isnan(0.0) ? _1817 : max(0.0, _1817))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1826 = 1.0;
    }
    float _1830 = (_1826 * cbModelParam._m0[1u].x) + (_1815 * (1.0 - cbModelParam._m0[1u].x));
    float _1840 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _815);
    float _1841 = isnan(_1840) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1840 : min(cbModelParam._m0[25u].z, _1840));
    float _1921;
    float _1923;
    float _1925;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1888 = fma(_1061, cbModelParam._m0[13u].z, fma(_1057, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1053)) + cbModelParam._m0[13u].w;
        float _1892 = fma(_1061, cbModelParam._m0[14u].z, fma(_1057, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1053)) + cbModelParam._m0[14u].w;
        float _1896 = fma(_1061, cbModelParam._m0[15u].z, fma(_1057, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1053)) + cbModelParam._m0[15u].w;
        float _1899 = fma(_1000, cbModelParam._m0[13u].z, fma(_999, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _998));
        float _1902 = fma(_1000, cbModelParam._m0[14u].z, fma(_999, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _998));
        float _1905 = fma(_1000, cbModelParam._m0[15u].z, fma(_999, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _998));
        float _1933;
        if (_1899 > 0.0)
        {
            _1933 = abs((1.0 - _1888) / _1899);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1899 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1888 + 1.0) / _1899);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1933 = frontier_phi_17_15_ladder;
        }
        float _2104;
        if (_1902 > 0.0)
        {
            _2104 = abs((1.0 - _1892) / _1902);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1902 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1892 + 1.0) / _1902);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2104 = frontier_phi_26_22_ladder;
        }
        float _2400;
        if (_1905 > 0.0)
        {
            _2400 = abs((1.0 - _1896) / _1905);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1905 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1896 + 1.0) / _1905);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2400 = frontier_phi_38_33_ladder;
        }
        float _2402 = isnan(_2104) ? _1933 : (isnan(_1933) ? _2104 : min(_1933, _2104));
        float _2403 = isnan(_2400) ? _2402 : (isnan(_2402) ? _2400 : min(_2402, _2400));
        float _2407 = (_2403 * _1899) + _1888;
        float _2408 = (_2403 * _1902) + _1892;
        float _2409 = (_2403 * _1905) + _1896;
        float _2410 = _2403 * 9.9999997473787516355514526367188e-05;
        float _2412 = (-1.0) - _2410;
        float _2414 = _2410 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2409 > _2414) || ((_2409 < _2412) || ((_2408 > _2414) || ((_2408 < _2412) || ((_2407 < _2412) || (_2407 > _2414))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2554 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2409, cbModelParam._m0[9u].z, fma(_2408, cbModelParam._m0[9u].y, _2407 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2409, cbModelParam._m0[10u].z, fma(_2408, cbModelParam._m0[10u].y, _2407 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2409, cbModelParam._m0[11u].z, fma(_2408, cbModelParam._m0[11u].y, _2407 * cbModelParam._m0[11u].x))), _1841);
            frontier_phi_16_38_ladder = _2554.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2554.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2554.x * cbModelParam._m0[1u].y;
        }
        _1921 = frontier_phi_16_38_ladder_2;
        _1923 = frontier_phi_16_38_ladder_1;
        _1925 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1909 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_998, _999, _1000), _1841);
        _1921 = _1909.x * cbModelParam._m0[1u].y;
        _1923 = _1909.y * cbModelParam._m0[1u].y;
        _1925 = _1909.z * cbModelParam._m0[1u].y;
    }
    float _1929 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _815);
    float _1930 = isnan(_1929) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1929 : min(cbModelParam._m0[25u].w, _1929));
    float _2019;
    float _2021;
    float _2023;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1983 = fma(_1061, cbModelParam._m0[21u].z, fma(_1057, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1053)) + cbModelParam._m0[21u].w;
        float _1987 = fma(_1061, cbModelParam._m0[22u].z, fma(_1057, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1053)) + cbModelParam._m0[22u].w;
        float _1991 = fma(_1061, cbModelParam._m0[23u].z, fma(_1057, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1053)) + cbModelParam._m0[23u].w;
        float _1994 = fma(_1000, cbModelParam._m0[21u].z, fma(_999, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _998));
        float _1997 = fma(_1000, cbModelParam._m0[22u].z, fma(_999, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _998));
        float _2000 = fma(_1000, cbModelParam._m0[23u].z, fma(_999, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _998));
        float _2109;
        if (_1994 > 0.0)
        {
            _2109 = abs((1.0 - _1983) / _1994);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1994 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1983 + 1.0) / _1994);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2109 = frontier_phi_28_24_ladder;
        }
        float _2427;
        if (_1997 > 0.0)
        {
            _2427 = abs((1.0 - _1987) / _1997);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1997 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1987 + 1.0) / _1997);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2427 = frontier_phi_40_35_ladder;
        }
        float _2765;
        if (_2000 > 0.0)
        {
            _2765 = abs((1.0 - _1991) / _2000);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2000 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1991 + 1.0) / _2000);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2765 = frontier_phi_50_47_ladder;
        }
        float _2767 = isnan(_2427) ? _2109 : (isnan(_2109) ? _2427 : min(_2109, _2427));
        float _2768 = isnan(_2765) ? _2767 : (isnan(_2767) ? _2765 : min(_2767, _2765));
        float _2772 = (_2768 * _1994) + _1983;
        float _2773 = (_2768 * _1997) + _1987;
        float _2774 = (_2768 * _2000) + _1991;
        float _2775 = _2768 * 9.9999997473787516355514526367188e-05;
        float _2776 = (-1.0) - _2775;
        float _2778 = _2775 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2774 > _2778) || ((_2774 < _2776) || ((_2773 > _2778) || ((_2773 < _2776) || ((_2772 < _2776) || (_2772 > _2778))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2896 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2774, cbModelParam._m0[17u].z, fma(_2773, cbModelParam._m0[17u].y, _2772 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2774, cbModelParam._m0[18u].z, fma(_2773, cbModelParam._m0[18u].y, _2772 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2774, cbModelParam._m0[19u].z, fma(_2773, cbModelParam._m0[19u].y, _2772 * cbModelParam._m0[19u].x))), _1930);
            frontier_phi_25_50_ladder = _2896.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2896.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2896.x * cbModelParam._m0[1u].z;
        }
        _2019 = frontier_phi_25_50_ladder_2;
        _2021 = frontier_phi_25_50_ladder_1;
        _2023 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2003 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_998, _999, _1000), _1930);
        _2019 = _2003.x * cbModelParam._m0[1u].z;
        _2021 = _2003.y * cbModelParam._m0[1u].z;
        _2023 = _2003.z * cbModelParam._m0[1u].z;
    }
    float _2036 = (((_1024 * _975) + _1025) * _990) * ((cbModelParam._m0[1u].w * (_2019 - _1921)) + _1921);
    float _2038 = (((_1024 * _977) + _1025) * _990) * ((cbModelParam._m0[1u].w * (_2021 - _1923)) + _1923);
    float _2040 = (((_1024 * _978) + _1025) * _990) * ((cbModelParam._m0[1u].w * (_2023 - _1925)) + _1925);
    float _2043 = fma(_2040, cbSceneParam._m0[89u].z, fma(_2038, cbSceneParam._m0[89u].y, _2036 * cbSceneParam._m0[89u].x));
    float _2046 = fma(_2040, cbSceneParam._m0[90u].z, fma(_2038, cbSceneParam._m0[90u].y, _2036 * cbSceneParam._m0[90u].x));
    float _2049 = fma(_2040, cbSceneParam._m0[91u].z, fma(_2038, cbSceneParam._m0[91u].y, _2036 * cbSceneParam._m0[91u].x));
    float _2083 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2087 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2091 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2095 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2096 = _2083 / _2095;
    float _2097 = _2087 / _2095;
    float _2098 = _2091 / _2095;
    float _2245;
    float _2246;
    float _2247;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2125 = ((uint(_2098 > cbSceneParam._m0[59u].y) + uint(_2098 > cbSceneParam._m0[59u].x)) + uint(_2098 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2126 = _2125 + 43u;
        uint _2134 = _2125 + 44u;
        uint _2142 = _2125 + 45u;
        uint _2150 = _2125 + 46u;
        float _2161 = fma(_2095, cbSceneParam._m0[_2126].w, fma(_2091, cbSceneParam._m0[_2126].z, fma(_2087, cbSceneParam._m0[_2126].y, _2083 * cbSceneParam._m0[_2126].x)));
        float _2165 = fma(_2095, cbSceneParam._m0[_2134].w, fma(_2091, cbSceneParam._m0[_2134].z, fma(_2087, cbSceneParam._m0[_2134].y, _2083 * cbSceneParam._m0[_2134].x)));
        float _2173 = fma(_2095, cbSceneParam._m0[_2150].w, fma(_2091, cbSceneParam._m0[_2150].z, fma(_2087, cbSceneParam._m0[_2150].y, _2083 * cbSceneParam._m0[_2150].x)));
        float _2178 = cbSceneParam._m0[33u].z * _2173;
        float _2180 = cbSceneParam._m0[33u].w * _2173;
        float _2183 = fma(_2095, cbSceneParam._m0[_2142].w, fma(_2091, cbSceneParam._m0[_2142].z, fma(_2087, cbSceneParam._m0[_2142].y, _2083 * cbSceneParam._m0[_2142].x))) / _2173;
        float _2231 = (cbSceneParam._m0[33u].x - sqrt(((_2097 * _2097) + (_2096 * _2096)) + (_2098 * _2098))) * cbSceneParam._m0[33u].y;
        float _4678 = isnan(0.0) ? _2231 : (isnan(_2231) ? 0.0 : max(_2231, 0.0));
        float _2238 = (isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2178 + _2161) / _2173, (_2180 + _2165) / _2173), _2183), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2180 + _2161) / _2173, (_2165 - _2178) / _2173), _2183), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2161 - _2178) / _2173, (_2165 - _2180) / _2173), _2183), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2161 - _2180) / _2173, (_2178 + _2165) / _2173), _2183), 0.0)).x), vec4(0.25)));
        _2245 = 1.0 - (_2238 * cbSceneParam._m0[34u].x);
        _2246 = 1.0 - (_2238 * cbSceneParam._m0[34u].y);
        _2247 = 1.0 - (_2238 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2245 = 1.0;
        _2246 = 1.0;
        _2247 = 1.0;
    }
    float _2311;
    float _2313;
    float _2315;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2299 = fma(_2095, cbSceneParam._m0[63u].w, fma(_2091, cbSceneParam._m0[63u].z, fma(_2087, cbSceneParam._m0[63u].y, _2083 * cbSceneParam._m0[63u].x)));
        float _2300 = fma(_2095, cbSceneParam._m0[60u].w, fma(_2091, cbSceneParam._m0[60u].z, fma(_2087, cbSceneParam._m0[60u].y, _2083 * cbSceneParam._m0[60u].x))) / _2299;
        float _2301 = fma(_2095, cbSceneParam._m0[61u].w, fma(_2091, cbSceneParam._m0[61u].z, fma(_2087, cbSceneParam._m0[61u].y, _2083 * cbSceneParam._m0[61u].x))) / _2299;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2300 >= cbSceneParam._m0[64u].x) && (_2301 >= cbSceneParam._m0[64u].y)) && (_2300 <= cbSceneParam._m0[64u].z)) && (_2301 <= cbSceneParam._m0[64u].w))
        {
            float _2440 = fma(_2095, cbSceneParam._m0[62u].w, fma(_2091, cbSceneParam._m0[62u].z, fma(_2087, cbSceneParam._m0[62u].y, _2083 * cbSceneParam._m0[62u].x))) / _2299;
            float _2444 = isnan(cbSceneParam._m0[41u].w) ? _2440 : (isnan(_2440) ? cbSceneParam._m0[41u].w : max(_2440, cbSceneParam._m0[41u].w));
            float _2487 = (cbSceneParam._m0[33u].x - sqrt(((_2097 * _2097) + (_2096 * _2096)) + (_2098 * _2098))) * cbSceneParam._m0[33u].y;
            float _4694 = isnan(0.0) ? _2487 : (isnan(_2487) ? 0.0 : max(_2487, 0.0));
            float _2494 = (isnan(1.0) ? _4694 : (isnan(_4694) ? 1.0 : min(_4694, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2300, cbSceneParam._m0[33u].w + _2301), _2444), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2300, _2301 - cbSceneParam._m0[33u].z), _2444), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2300 - cbSceneParam._m0[33u].z, _2301 - cbSceneParam._m0[33u].w), _2444), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2300 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2301), _2444), 0.0)).x), vec4(0.25)));
            float _2498 = 1.0 - (_2494 * cbSceneParam._m0[34u].x);
            float _2499 = 1.0 - (_2494 * cbSceneParam._m0[34u].y);
            float _2500 = 1.0 - (_2494 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2500) ? _2247 : (isnan(_2247) ? _2500 : min(_2247, _2500));
            frontier_phi_37_36_ladder_1 = isnan(_2499) ? _2246 : (isnan(_2246) ? _2499 : min(_2246, _2499));
            frontier_phi_37_36_ladder_2 = isnan(_2498) ? _2245 : (isnan(_2245) ? _2498 : min(_2245, _2498));
        }
        else
        {
            frontier_phi_37_36_ladder = _2247;
            frontier_phi_37_36_ladder_1 = _2246;
            frontier_phi_37_36_ladder_2 = _2245;
        }
        _2311 = frontier_phi_37_36_ladder_2;
        _2313 = frontier_phi_37_36_ladder_1;
        _2315 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2311 = _2245;
        _2313 = _2246;
        _2315 = _2247;
    }
    uvec4 _2320 = floatBitsToUint(cbInstanceData._m0[_950 + 5u]);
    uint _2322 = _2320.x * 14u;
    uint _2323 = _2322 + 13u;
    float _2330 = _990 + (-1.0);
    float _2335 = (cbLight._m0[_2323].x * _2330) + 1.0;
    float _2336 = (cbLight._m0[_2323].y * _2330) + 1.0;
    float _2337 = (cbLight._m0[_2323].z * _2330) + 1.0;
    float _2338 = (cbLight._m0[_2323].w * _2330) + 1.0;
    uint _2339 = _2322 + 5u;
    float _2345 = isnan(1.0) ? _2336 : (isnan(_2336) ? 1.0 : min(_2336, 1.0));
    uint _2349 = _2322 + 4u;
    float _2359 = isnan(1.0) ? _2335 : (isnan(_2335) ? 1.0 : min(_2335, 1.0));
    uint _2363 = _2322 | 1u;
    float _2374 = dot(vec3(cbLight._m0[_2322].xyz), vec3(_812, _813, _814));
    float _2377 = dot(vec3(cbLight._m0[_2363].xyz), vec3(_812, _813, _814));
    float _4730 = isnan(0.0) ? _2374 : (isnan(_2374) ? 0.0 : max(_2374, 0.0));
    float _4741 = isnan(0.0) ? _2377 : (isnan(_2377) ? 0.0 : max(_2377, 0.0));
    float _2382 = (isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0))) * 0.3183098733425140380859375;
    float _2384 = (isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0))) * 0.3183098733425140380859375;
    float _2391 = ((cbLight._m0[_2339].x * _2345) * _2384) + (((cbLight._m0[_2349].x * _2311) * _2359) * _2382);
    float _2392 = ((_2345 * cbLight._m0[_2339].y) * _2384) + (((cbLight._m0[_2349].y * _2313) * _2359) * _2382);
    float _2393 = ((_2345 * cbLight._m0[_2339].z) * _2384) + (((cbLight._m0[_2349].z * _2315) * _2359) * _2382);
    uvec4 _2397 = floatBitsToUint(cbLight._m0[_2322 + 12u]);
    bool _2399 = _2397.x == 0u;
    float _2501;
    float _2503;
    float _2505;
    if (_2399)
    {
        _2501 = _2391;
        _2503 = _2392;
        _2505 = _2393;
    }
    else
    {
        uint _2509 = _2322 + 6u;
        float _2525 = (dot(vec3(cbLight._m0[_2322 + 2u].xyz), vec3(_812, _813, _814)) * 0.5) + 0.5;
        float _2526 = _2525 * _2525;
        float _4752 = isnan(0.0) ? _2526 : (isnan(_2526) ? 0.0 : max(_2526, 0.0));
        float _2527 = isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0));
        float _2528 = isnan(1.0) ? _2337 : (isnan(_2337) ? 1.0 : min(_2337, 1.0));
        _2501 = (((cbLight._m0[_2509].x * 0.3183098733425140380859375) * _2527) * _2528) + _2391;
        _2503 = (((cbLight._m0[_2509].y * 0.3183098733425140380859375) * _2527) * _2528) + _2392;
        _2505 = (((cbLight._m0[_2509].z * 0.3183098733425140380859375) * _2527) * _2528) + _2393;
    }
    bool _2508 = _2397.y == 0u;
    float _2563;
    float _2565;
    float _2567;
    if (_2508)
    {
        _2563 = _2501;
        _2565 = _2503;
        _2567 = _2505;
    }
    else
    {
        uint _2736 = _2322 + 7u;
        float _2752 = (dot(vec3(cbLight._m0[_2322 + 3u].xyz), vec3(_812, _813, _814)) * 0.5) + 0.5;
        float _2753 = _2752 * _2752;
        float _4768 = isnan(0.0) ? _2753 : (isnan(_2753) ? 0.0 : max(_2753, 0.0));
        float _2754 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
        float _2755 = isnan(1.0) ? _2338 : (isnan(_2338) ? 1.0 : min(_2338, 1.0));
        _2563 = (((cbLight._m0[_2736].x * 0.3183098733425140380859375) * _2754) * _2755) + _2501;
        _2565 = (((cbLight._m0[_2736].y * 0.3183098733425140380859375) * _2754) * _2755) + _2503;
        _2567 = (((cbLight._m0[_2736].z * 0.3183098733425140380859375) * _2754) * _2755) + _2505;
    }
    uint _2570 = _2322 + 8u;
    float _2583 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2322].w)) * _815) * 0.949999988079071044921875);
    float _2584 = _2583 * _2583;
    float _2585 = cbLight._m0[_2322].x + _892;
    float _2586 = cbLight._m0[_2322].y + _893;
    float _2587 = cbLight._m0[_2322].z + _894;
    float _2591 = inversesqrt(dot(vec3(_2585, _2586, _2587), vec3(_2585, _2586, _2587)));
    float _2592 = _2591 * _2585;
    float _2593 = _2591 * _2586;
    float _2594 = _2591 * _2587;
    float _2595 = dot(vec3(_812, _813, _814), vec3(cbLight._m0[_2322].xyz));
    float _4784 = isnan(0.0) ? _2595 : (isnan(_2595) ? 0.0 : max(_2595, 0.0));
    float _2598 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
    float _4795 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _2599 = isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0));
    float _2600 = dot(vec3(_812, _813, _814), vec3(_2592, _2593, _2594));
    float _4806 = isnan(0.0) ? _2600 : (isnan(_2600) ? 0.0 : max(_2600, 0.0));
    float _2603 = isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0));
    float _2604 = dot(vec3(cbLight._m0[_2322].xyz), vec3(_2592, _2593, _2594));
    float _4817 = isnan(0.0) ? _2604 : (isnan(_2604) ? 0.0 : max(_2604, 0.0));
    float _2608 = _2584 * _2584;
    float _2612 = ((_2603 * _2603) * (_2608 + (-1.0))) + 1.0;
    float _2620 = exp2(log2(1.0 - (isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0)))) * 5.0);
    float _2621 = 0.959999978542327880859375 - _972;
    float _2623 = 0.959999978542327880859375 - _973;
    float _2624 = 0.959999978542327880859375 - _974;
    float _2631 = 1.0 - _2584;
    float _2642 = (0.5 / (((_2599 * ((_2598 * _2631) + _2584)) + 9.9999999392252902907785028219223e-09) + (((_2599 * _2631) + _2584) * _2598))) * _2598;
    float _4828 = isnan(0.0) ? _2642 : (isnan(_2642) ? 0.0 : max(_2642, 0.0));
    float _2644 = (isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0))) * (_2608 / ((_2612 * _2612) * 3.141590118408203125));
    uint _2658 = _2322 + 9u;
    float _2669 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2363].w)) * _815) * 0.949999988079071044921875);
    float _2670 = _2669 * _2669;
    float _2671 = cbLight._m0[_2363].x + _892;
    float _2672 = cbLight._m0[_2363].y + _893;
    float _2673 = cbLight._m0[_2363].z + _894;
    float _2677 = inversesqrt(dot(vec3(_2671, _2672, _2673), vec3(_2671, _2672, _2673)));
    float _2678 = _2677 * _2671;
    float _2679 = _2677 * _2672;
    float _2680 = _2677 * _2673;
    float _2681 = dot(vec3(_812, _813, _814), vec3(cbLight._m0[_2363].xyz));
    float _4839 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
    float _2684 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
    float _2685 = dot(vec3(_812, _813, _814), vec3(_2678, _2679, _2680));
    float _4850 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
    float _2688 = isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0));
    float _2689 = dot(vec3(cbLight._m0[_2363].xyz), vec3(_2678, _2679, _2680));
    float _4861 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
    float _2693 = _2670 * _2670;
    float _2697 = ((_2688 * _2688) * (_2693 + (-1.0))) + 1.0;
    float _2704 = exp2(log2(1.0 - (isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0)))) * 5.0);
    float _2711 = 1.0 - _2670;
    float _2721 = (0.5 / (((_2599 * ((_2684 * _2711) + _2670)) + 9.9999999392252902907785028219223e-09) + (((_2599 * _2711) + _2670) * _2684))) * _2684;
    float _4872 = isnan(0.0) ? _2721 : (isnan(_2721) ? 0.0 : max(_2721, 0.0));
    float _2723 = (isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0))) * (_2693 / ((_2697 * _2697) * 3.141590118408203125));
    float _2733 = (((((_2704 * _2621) + _975) * cbLight._m0[_2658].x) * _2723) * _2345) + ((((cbLight._m0[_2570].x * _2311) * ((_2620 * _2621) + _975)) * _2644) * _2359);
    float _2734 = (((((_2704 * _2623) + _977) * cbLight._m0[_2658].y) * _2723) * _2345) + ((((cbLight._m0[_2570].y * _2313) * ((_2620 * _2623) + _977)) * _2644) * _2359);
    float _2735 = (((((_2704 * _2624) + _978) * cbLight._m0[_2658].z) * _2723) * _2345) + ((((cbLight._m0[_2570].z * _2315) * ((_2620 * _2624) + _978)) * _2644) * _2359);
    float _2791;
    float _2793;
    float _2795;
    if (_2399)
    {
        _2791 = _2733;
        _2793 = _2734;
        _2795 = _2735;
    }
    else
    {
        uint _2797 = _2322 + 2u;
        uint _2801 = _2322 + 10u;
        float _2815 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2797].w)) * _815) * 0.949999988079071044921875);
        float _2816 = _2815 * _2815;
        float _2817 = cbLight._m0[_2797].x + _892;
        float _2818 = cbLight._m0[_2797].y + _893;
        float _2819 = cbLight._m0[_2797].z + _894;
        float _2823 = inversesqrt(dot(vec3(_2817, _2818, _2819), vec3(_2817, _2818, _2819)));
        float _2824 = _2823 * _2817;
        float _2825 = _2823 * _2818;
        float _2826 = _2823 * _2819;
        float _2827 = dot(vec3(_812, _813, _814), vec3(cbLight._m0[_2797].xyz));
        float _4883 = isnan(0.0) ? _2827 : (isnan(_2827) ? 0.0 : max(_2827, 0.0));
        float _2830 = isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0));
        float _2831 = dot(vec3(_812, _813, _814), vec3(_2824, _2825, _2826));
        float _4894 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
        float _2834 = isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0));
        float _2835 = dot(vec3(cbLight._m0[_2797].xyz), vec3(_2824, _2825, _2826));
        float _4905 = isnan(0.0) ? _2835 : (isnan(_2835) ? 0.0 : max(_2835, 0.0));
        float _2839 = _2816 * _2816;
        float _2843 = ((_2834 * _2834) * (_2839 + (-1.0))) + 1.0;
        float _2850 = exp2(log2(1.0 - (isnan(1.0) ? _4905 : (isnan(_4905) ? 1.0 : min(_4905, 1.0)))) * 5.0);
        float _2857 = 1.0 - _2816;
        float _2867 = (0.5 / (((_2599 * ((_2830 * _2857) + _2816)) + 9.9999999392252902907785028219223e-09) + (((_2599 * _2857) + _2816) * _2830))) * _2830;
        float _4916 = isnan(0.0) ? _2867 : (isnan(_2867) ? 0.0 : max(_2867, 0.0));
        float _2869 = (isnan(1.0) ? _4916 : (isnan(_4916) ? 1.0 : min(_4916, 1.0))) * (_2839 / ((_2843 * _2843) * 3.141590118408203125));
        float _2870 = isnan(1.0) ? _2337 : (isnan(_2337) ? 1.0 : min(_2337, 1.0));
        _2791 = (((((_2850 * _2621) + _975) * cbLight._m0[_2801].x) * _2869) * _2870) + _2733;
        _2793 = (((((_2850 * _2623) + _977) * cbLight._m0[_2801].y) * _2869) * _2870) + _2734;
        _2795 = (((((_2850 * _2624) + _978) * cbLight._m0[_2801].z) * _2869) * _2870) + _2735;
    }
    float _2901;
    float _2903;
    float _2905;
    if (_2508)
    {
        _2901 = _2791;
        _2903 = _2793;
        _2905 = _2795;
    }
    else
    {
        uint _2912 = _2322 + 3u;
        uint _2916 = _2322 + 11u;
        float _2930 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2912].w)) * _815) * 0.949999988079071044921875);
        float _2931 = _2930 * _2930;
        float _2932 = cbLight._m0[_2912].x + _892;
        float _2933 = cbLight._m0[_2912].y + _893;
        float _2934 = cbLight._m0[_2912].z + _894;
        float _2938 = inversesqrt(dot(vec3(_2932, _2933, _2934), vec3(_2932, _2933, _2934)));
        float _2939 = _2938 * _2932;
        float _2940 = _2938 * _2933;
        float _2941 = _2938 * _2934;
        float _2942 = dot(vec3(_812, _813, _814), vec3(cbLight._m0[_2912].xyz));
        float _4932 = isnan(0.0) ? _2942 : (isnan(_2942) ? 0.0 : max(_2942, 0.0));
        float _2945 = isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0));
        float _2946 = dot(vec3(_812, _813, _814), vec3(_2939, _2940, _2941));
        float _4943 = isnan(0.0) ? _2946 : (isnan(_2946) ? 0.0 : max(_2946, 0.0));
        float _2949 = isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0));
        float _2950 = dot(vec3(cbLight._m0[_2912].xyz), vec3(_2939, _2940, _2941));
        float _4954 = isnan(0.0) ? _2950 : (isnan(_2950) ? 0.0 : max(_2950, 0.0));
        float _2954 = _2931 * _2931;
        float _2958 = ((_2949 * _2949) * (_2954 + (-1.0))) + 1.0;
        float _2965 = exp2(log2(1.0 - (isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0)))) * 5.0);
        float _2972 = 1.0 - _2931;
        float _2982 = (0.5 / (((_2599 * ((_2945 * _2972) + _2931)) + 9.9999999392252902907785028219223e-09) + (((_2599 * _2972) + _2931) * _2945))) * _2945;
        float _4965 = isnan(0.0) ? _2982 : (isnan(_2982) ? 0.0 : max(_2982, 0.0));
        float _2984 = (isnan(1.0) ? _4965 : (isnan(_4965) ? 1.0 : min(_4965, 1.0))) * (_2954 / ((_2958 * _2958) * 3.141590118408203125));
        float _2985 = isnan(1.0) ? _2338 : (isnan(_2338) ? 1.0 : min(_2338, 1.0));
        _2901 = (((((_2965 * _2621) + _975) * cbLight._m0[_2916].x) * _2984) * _2985) + _2791;
        _2903 = (((((_2965 * _2623) + _977) * cbLight._m0[_2916].y) * _2984) * _2985) + _2793;
        _2905 = (((((_2965 * _2624) + _978) * cbLight._m0[_2916].z) * _2984) * _2985) + _2795;
    }
    float _3051;
    float _3053;
    float _3055;
    float _3057;
    float _3059;
    float _3061;
    if (_2320.y == 0u)
    {
        uvec4 _3006 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3007 = _3006.x;
        uint _3018 = uint((float(_3006.y) * floor(float(uint(cbSceneParam._m0[85u].y * _913) / _3007))) + floor(float(uint(cbSceneParam._m0[85u].x * _912) / _3007)));
        float _3028 = (log2(_2098 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3029 = isnan(0.0) ? _3028 : (isnan(_3028) ? 0.0 : max(_3028, 0.0));
        uint _3032 = uint(isnan(14.0) ? _3029 : (isnan(_3029) ? 14.0 : min(_3029, 14.0)));
        uvec4 _3037 = texelFetch(g_lightClusterGridBuffer, int(((_3032 << 2u) + (_3018 << 6u)) >> 2u));
        uint _3038 = _3037.x;
        uint _3039 = _3006.z;
        float _3163;
        float _3165;
        float _3167;
        float _3169;
        float _3171;
        float _3173;
        if (((((1u << ((_3039 >> 4u) & 15u)) + 4294967295u) & _3038) == 0u) || ((_3039 & 240u) == 0u))
        {
            _3163 = 0.0;
            _3165 = 0.0;
            _3167 = 0.0;
            _3169 = 0.0;
            _3171 = 0.0;
            _3173 = 0.0;
        }
        else
        {
            float _3164;
            float _3166;
            float _3168;
            float _3170;
            float _3172;
            float _3174;
            float _3324 = 0.0;
            float _3325 = 0.0;
            float _3326 = 0.0;
            float _3327 = 0.0;
            float _3328 = 0.0;
            float _3329 = 0.0;
            uint _3330 = 0u;
            uint _3339;
            bool _3340;
            for (;;)
            {
                _3339 = texelFetch(g_lightClassification, int((((_3032 << 5u) + (_3018 << 9u)) + (_3330 << 2u)) >> 2u)).x;
                _3340 = _3339 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3340)
                {
                    frontier_phi_71_pred = _3329;
                    frontier_phi_71_pred_1 = _3328;
                    frontier_phi_71_pred_2 = _3327;
                    frontier_phi_71_pred_3 = _3326;
                    frontier_phi_71_pred_4 = _3325;
                    frontier_phi_71_pred_5 = _3324;
                }
                else
                {
                    float _3469;
                    float _3470;
                    float _3471;
                    float _3472;
                    float _3473;
                    float _3474;
                    uint _3475;
                    _3469 = _3324;
                    _3470 = _3325;
                    _3471 = _3326;
                    _3472 = _3327;
                    _3473 = _3328;
                    _3474 = _3329;
                    _3475 = _3339;
                    float _3396;
                    float _3397;
                    float _3398;
                    float _3399;
                    float _3400;
                    float _3401;
                    for (;;)
                    {
                        uint _3479 = uint(findLSB(_3475)) + (_3330 << 5u);
                        uint _3476 = (_3475 + 4294967295u) & _3475;
                        uint _3481 = _3479 * 48u;
                        vec4 _3495 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3481)).x, texelFetch(g_PointLightRenderingBuffer, int(_3481 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3481 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3481 + 3u)).x));
                        uint _3501 = (_3479 * 48u) + 4u;
                        vec4 _3514 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3501)).x, texelFetch(g_PointLightRenderingBuffer, int(_3501 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3501 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3501 + 3u)).x));
                        uint _3520 = (_3479 * 48u) + 8u;
                        vec3 _3531 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3520)).x, texelFetch(g_PointLightRenderingBuffer, int(_3520 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3520 + 2u)).x));
                        float _3535 = _3495.x - _2096;
                        float _3536 = _3495.y - _2097;
                        float _3537 = _3495.z - _2098;
                        float _3538 = dot(vec3(_3535, _3536, _3537), vec3(_3535, _3536, _3537));
                        float _3541 = inversesqrt(_3538);
                        float _3542 = _3541 * _3535;
                        float _3543 = _3541 * _3536;
                        float _3544 = _3541 * _3537;
                        float _3545 = dot(vec3(_931, _934, _937), vec3(_3542, _3543, _3544));
                        float _3550 = 1.0 - (_3538 * _3495.w);
                        float _4991 = isnan(0.0) ? _3550 : (isnan(_3550) ? 0.0 : max(_3550, 0.0));
                        float _3551 = isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0));
                        float _3552 = sqrt(_3538) * _3514.w;
                        float _3555 = 1.39999997615814208984375 / (_3552 + 1.39999997615814208984375);
                        float _3556 = _3555 * _3555;
                        float _3559 = ((1.0 - _3556) * _3545) + _3556;
                        float _3562 = _3552 * _3552;
                        float _3566 = ((isnan(0.0) ? _3559 : (isnan(_3559) ? 0.0 : max(_3559, 0.0))) * _3551) / ((_3562 * 0.699999988079071044921875) + 1.0);
                        float _3570 = (-0.0) - _2096;
                        float _3571 = (-0.0) - _2097;
                        float _3572 = (-0.0) - _2098;
                        float _3576 = inversesqrt(dot(vec3(_3570, _3571, _3572), vec3(_3570, _3571, _3572)));
                        float _3577 = _3576 * _3570;
                        float _3578 = _3576 * _3571;
                        float _3579 = _3576 * _3572;
                        float _3586 = exp2(log2(1.0 / ((_3562 * 3.5) + 5.0)) * 0.25);
                        float _3587 = 1.0 - _1006;
                        float _3594 = sqrt(1.0 - ((1.0 - (_3587 * _3587)) * (1.0 - (_3586 * _3586))));
                        float _3595 = _3594 * _3594;
                        float _3596 = _3595 * _3595;
                        float _3597 = _3577 + _3542;
                        float _3598 = _3578 + _3543;
                        float _3599 = _3579 + _3544;
                        float _3603 = inversesqrt(dot(vec3(_3597, _3598, _3599), vec3(_3597, _3598, _3599)));
                        float _3607 = dot(vec3(_931, _934, _937), vec3(_3577, _3578, _3579));
                        float _5007 = isnan(0.0) ? _3607 : (isnan(_3607) ? 0.0 : max(_3607, 0.0));
                        float _3610 = isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0));
                        float _3611 = dot(vec3(_931, _934, _937), vec3(_3603 * _3597, _3603 * _3598, _3603 * _3599));
                        float _5018 = isnan(0.0) ? _3611 : (isnan(_3611) ? 0.0 : max(_3611, 0.0));
                        float _3614 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
                        float _3618 = ((_3614 * _3614) * (_3596 + (-1.0))) + 1.0;
                        float _3619 = _3555 * _3595;
                        float _3620 = _3619 * _3619;
                        float _3623 = ((1.0 - _3620) * _3545) + _3620;
                        float _5029 = isnan(0.0) ? _3623 : (isnan(_3623) ? 0.0 : max(_3623, 0.0));
                        float _3624 = isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0));
                        float _3625 = 1.0 - _3595;
                        float _3635 = (0.5 / (((_3624 * ((_3610 * _3625) + _3595)) + 9.9999999392252902907785028219223e-09) + (((_3624 * _3625) + _3595) * _3610))) * _3624;
                        float _5040 = isnan(0.0) ? _3635 : (isnan(_3635) ? 0.0 : max(_3635, 0.0));
                        float _3646 = (((_3596 * 3.1415927410125732421875) * (isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0)))) / ((_3618 * _3618) * ((_3562 * 2.1991131305694580078125) + 3.141590118408203125))) * _3551;
                        _3399 = (_3566 * _3514.x) + _3472;
                        _3400 = (_3566 * _3514.y) + _3473;
                        _3401 = (_3566 * _3514.z) + _3474;
                        _3396 = (_3646 * _3531.x) + _3469;
                        _3397 = (_3646 * _3531.y) + _3470;
                        _3398 = (_3646 * _3531.z) + _3471;
                        if (_3476 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3469 = _3396;
                            _3470 = _3397;
                            _3471 = _3398;
                            _3472 = _3399;
                            _3473 = _3400;
                            _3474 = _3401;
                            _3475 = _3476;
                        }
                    }
                    frontier_phi_71_pred = _3401;
                    frontier_phi_71_pred_1 = _3400;
                    frontier_phi_71_pred_2 = _3399;
                    frontier_phi_71_pred_3 = _3398;
                    frontier_phi_71_pred_4 = _3397;
                    frontier_phi_71_pred_5 = _3396;
                }
                _3174 = frontier_phi_71_pred;
                _3172 = frontier_phi_71_pred_1;
                _3170 = frontier_phi_71_pred_2;
                _3168 = frontier_phi_71_pred_3;
                _3166 = frontier_phi_71_pred_4;
                _3164 = frontier_phi_71_pred_5;
                uint _3331 = _3330 + 1u;
                if (_3331 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3324 = _3164;
                    _3325 = _3166;
                    _3326 = _3168;
                    _3327 = _3170;
                    _3328 = _3172;
                    _3329 = _3174;
                    _3330 = _3331;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3163 = _3164;
            _3165 = _3166;
            _3167 = _3168;
            _3169 = _3170;
            _3171 = _3172;
            _3173 = _3174;
        }
        uvec4 _3177 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3178 = _3177.z;
        uint _3180 = (_3178 >> 8u) & 15u;
        float _3292;
        float _3294;
        float _3296;
        float _3298;
        float _3300;
        float _3302;
        if (((4294967295u << _3180) & _3038) == 0u)
        {
            _3292 = _3163;
            _3294 = _3165;
            _3296 = _3167;
            _3298 = _3169;
            _3300 = _3171;
            _3302 = _3173;
        }
        else
        {
            float _3317 = inversesqrt(dot(vec3(_2096, _2097, _2098), vec3(_2096, _2097, _2098)));
            float _3318 = _3317 * _2096;
            float _3319 = _3317 * _2097;
            float _3320 = _3317 * _2098;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3180 < ((_3178 >> 12u) & 15u))
            {
                float _3293;
                float _3295;
                float _3297;
                float _3299;
                float _3301;
                float _3303;
                float _3452 = _3163;
                float _3453 = _3165;
                float _3454 = _3167;
                float _3455 = _3169;
                float _3456 = _3171;
                float _3457 = _3173;
                uint _3458 = _3180;
                uint _3467;
                bool _3468;
                for (;;)
                {
                    _3467 = texelFetch(g_lightClassification, int((((_3032 << 5u) + (_3018 << 9u)) + (_3458 << 2u)) >> 2u)).x;
                    _3468 = _3467 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3468)
                    {
                        frontier_phi_82_pred = _3457;
                        frontier_phi_82_pred_1 = _3456;
                        frontier_phi_82_pred_2 = _3455;
                        frontier_phi_82_pred_3 = _3454;
                        frontier_phi_82_pred_4 = _3453;
                        frontier_phi_82_pred_5 = _3452;
                    }
                    else
                    {
                        float _3660;
                        float _3661;
                        float _3662;
                        float _3663;
                        float _3664;
                        float _3665;
                        float _3954;
                        float _3955;
                        float _3956;
                        float _3957;
                        float _3958;
                        float _3959;
                        float _3673 = _3452;
                        float _3674 = _3453;
                        float _3675 = _3454;
                        float _3676 = _3455;
                        float _3677 = _3456;
                        float _3678 = _3457;
                        uint _3679 = _3467;
                        uint _3680;
                        vec4 _3705;
                        float _3706;
                        vec4 _3721;
                        vec3 _3733;
                        vec4 _3748;
                        vec4 _3763;
                        float _3810;
                        bool _3811;
                        for (;;)
                        {
                            uint _3690 = ((_3458 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3679));
                            _3680 = (_3679 + 4294967295u) & _3679;
                            uint _3692 = _3690 * 40u;
                            _3705 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3692)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3692 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3692 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3692 + 3u)).x));
                            _3706 = _3705.w;
                            uint _3708 = (_3690 * 40u) + 4u;
                            _3721 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3708)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 3u)).x));
                            uint _3723 = (_3690 * 40u) + 8u;
                            _3733 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3723)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3723 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3723 + 2u)).x));
                            uint _3735 = (_3690 * 40u) + 16u;
                            _3748 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3735)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3735 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3735 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3735 + 3u)).x));
                            uint _3750 = (_3690 * 40u) + 20u;
                            _3763 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3750)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3750 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3750 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3750 + 3u)).x));
                            uint _3766 = (_3690 * 40u) + 24u;
                            vec4 _3779 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3766)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3766 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3766 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3766 + 3u)).x));
                            uint _3785 = (_3690 * 40u) + 28u;
                            vec4 _3798 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3785)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3785 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3785 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3785 + 3u)).x));
                            _3810 = fma(_2098, _3798.z, fma(_2097, _3798.y, _3798.x * _2096)) + _3798.w;
                            _3811 = !((fma(_2098, _3779.z, fma(_2097, _3779.y, _3779.x * _2096)) + _3779.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3811)
                            {
                                float _3838 = _3705.x - _2096;
                                float _3839 = _3705.y - _2097;
                                float _3840 = _3705.z - _2098;
                                float _3841 = dot(vec3(_3838, _3839, _3840), vec3(_3838, _3839, _3840));
                                float _3844 = inversesqrt(_3841);
                                float _3845 = _3844 * _3838;
                                float _3846 = _3844 * _3839;
                                float _3847 = _3844 * _3840;
                                float _3851 = 1.0 - (_3841 / (_3706 * _3706));
                                float _5051 = isnan(0.0) ? _3851 : (isnan(_3851) ? 0.0 : max(_3851, 0.0));
                                float _3852 = isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0));
                                float _3856 = sqrt(_3841) * _3721.w;
                                float _3858 = 1.39999997615814208984375 / (_3856 + 1.39999997615814208984375);
                                float _3859 = _3858 * _3858;
                                float _3862 = ((1.0 - _3859) * dot(vec3(_3845, _3846, _3847), vec3(_931, _934, _937))) + _3859;
                                float _3865 = _3856 * _3856;
                                float _3869 = (fma(_2098, _3748.z, fma(_2097, _3748.y, _3748.x * _2096)) + _3748.w) / _3810;
                                float _3870 = (fma(_2098, _3763.z, fma(_2097, _3763.y, _3763.x * _2096)) + _3763.w) / _3810;
                                float _3874 = 1.0 - dot(vec2(_3869, _3870), vec2(_3869, _3870));
                                float _5067 = isnan(0.0) ? _3874 : (isnan(_3874) ? 0.0 : max(_3874, 0.0));
                                float _3875 = isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0));
                                float _3876 = _3875 * (((isnan(0.0) ? _3862 : (isnan(_3862) ? 0.0 : max(_3862, 0.0))) * _3852) / ((_3865 * 0.699999988079071044921875) + 1.0));
                                float _3888 = exp2(log2(1.0 / ((_3865 * 3.5) + 5.0)) * 0.25);
                                float _3889 = 1.0 - _1006;
                                float _3896 = sqrt(1.0 - ((1.0 - (_3889 * _3889)) * (1.0 - (_3888 * _3888))));
                                float _3897 = _3896 * _3896;
                                float _3898 = _3897 * _3897;
                                float _3899 = _3845 - _3318;
                                float _3900 = _3846 - _3319;
                                float _3901 = _3847 - _3320;
                                float _3905 = inversesqrt(dot(vec3(_3899, _3900, _3901), vec3(_3899, _3900, _3901)));
                                float _3909 = dot(vec3(_931, _934, _937), vec3((-0.0) - _3318, (-0.0) - _3319, (-0.0) - _3320));
                                float _5078 = isnan(0.0) ? _3909 : (isnan(_3909) ? 0.0 : max(_3909, 0.0));
                                float _3912 = isnan(1.0) ? _5078 : (isnan(_5078) ? 1.0 : min(_5078, 1.0));
                                float _3913 = dot(vec3(_931, _934, _937), vec3(_3905 * _3899, _3905 * _3900, _3905 * _3901));
                                float _5089 = isnan(0.0) ? _3913 : (isnan(_3913) ? 0.0 : max(_3913, 0.0));
                                float _3916 = isnan(1.0) ? _5089 : (isnan(_5089) ? 1.0 : min(_5089, 1.0));
                                float _3920 = ((_3916 * _3916) * (_3898 + (-1.0))) + 1.0;
                                float _3921 = _3858 * _3897;
                                float _3922 = _3921 * _3921;
                                float _3928 = ((1.0 - _3922) * dot(vec3(_931, _934, _937), vec3(_3845, _3846, _3847))) + _3922;
                                float _5100 = isnan(0.0) ? _3928 : (isnan(_3928) ? 0.0 : max(_3928, 0.0));
                                float _3929 = isnan(1.0) ? _5100 : (isnan(_5100) ? 1.0 : min(_5100, 1.0));
                                float _3930 = 1.0 - _3897;
                                float _3940 = (0.5 / (((_3929 * ((_3912 * _3930) + _3897)) + 9.9999999392252902907785028219223e-09) + (((_3929 * _3930) + _3897) * _3912))) * _3929;
                                float _5111 = isnan(0.0) ? _3940 : (isnan(_3940) ? 0.0 : max(_3940, 0.0));
                                float _3950 = (_3875 * _3852) * (((_3898 * 3.1415927410125732421875) * (isnan(1.0) ? _5111 : (isnan(_5111) ? 1.0 : min(_5111, 1.0)))) / ((_3920 * _3920) * ((_3865 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3876 * _3721.z;
                                frontier_phi_88_pred_1 = _3876 * _3721.y;
                                frontier_phi_88_pred_2 = _3876 * _3721.x;
                                frontier_phi_88_pred_3 = _3950 * _3733.z;
                                frontier_phi_88_pred_4 = _3950 * _3733.y;
                                frontier_phi_88_pred_5 = _3950 * _3733.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3959 = frontier_phi_88_pred;
                            _3958 = frontier_phi_88_pred_1;
                            _3957 = frontier_phi_88_pred_2;
                            _3956 = frontier_phi_88_pred_3;
                            _3955 = frontier_phi_88_pred_4;
                            _3954 = frontier_phi_88_pred_5;
                            _3663 = _3957 + _3676;
                            _3664 = _3958 + _3677;
                            _3665 = _3959 + _3678;
                            _3660 = _3954 + _3673;
                            _3661 = _3955 + _3674;
                            _3662 = _3956 + _3675;
                            if (_3680 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3673 = _3660;
                                _3674 = _3661;
                                _3675 = _3662;
                                _3676 = _3663;
                                _3677 = _3664;
                                _3678 = _3665;
                                _3679 = _3680;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3665;
                        frontier_phi_82_pred_1 = _3664;
                        frontier_phi_82_pred_2 = _3663;
                        frontier_phi_82_pred_3 = _3662;
                        frontier_phi_82_pred_4 = _3661;
                        frontier_phi_82_pred_5 = _3660;
                    }
                    _3303 = frontier_phi_82_pred;
                    _3301 = frontier_phi_82_pred_1;
                    _3299 = frontier_phi_82_pred_2;
                    _3297 = frontier_phi_82_pred_3;
                    _3295 = frontier_phi_82_pred_4;
                    _3293 = frontier_phi_82_pred_5;
                    uint _3459 = _3458 + 1u;
                    if (_3459 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3452 = _3293;
                        _3453 = _3295;
                        _3454 = _3297;
                        _3455 = _3299;
                        _3456 = _3301;
                        _3457 = _3303;
                        _3458 = _3459;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3299;
                frontier_phi_63_64_ladder_1 = _3303;
                frontier_phi_63_64_ladder_2 = _3301;
                frontier_phi_63_64_ladder_3 = _3297;
                frontier_phi_63_64_ladder_4 = _3295;
                frontier_phi_63_64_ladder_5 = _3293;
            }
            else
            {
                frontier_phi_63_64_ladder = _3169;
                frontier_phi_63_64_ladder_1 = _3173;
                frontier_phi_63_64_ladder_2 = _3171;
                frontier_phi_63_64_ladder_3 = _3167;
                frontier_phi_63_64_ladder_4 = _3165;
                frontier_phi_63_64_ladder_5 = _3163;
            }
            _3292 = frontier_phi_63_64_ladder_5;
            _3294 = frontier_phi_63_64_ladder_4;
            _3296 = frontier_phi_63_64_ladder_3;
            _3298 = frontier_phi_63_64_ladder;
            _3300 = frontier_phi_63_64_ladder_2;
            _3302 = frontier_phi_63_64_ladder_1;
        }
        float _3307 = isnan(1.0) ? _990 : (isnan(_990) ? 1.0 : min(_990, 1.0));
        _3051 = (_3307 * _3298) + _2563;
        _3053 = (_3307 * _3300) + _2565;
        _3055 = (_3307 * _3302) + _2567;
        _3057 = ((_3292 * _975) * _3307) + _2901;
        _3059 = ((_3294 * _977) * _3307) + _2903;
        _3061 = ((_3296 * _978) * _3307) + _2905;
    }
    else
    {
        _3051 = _2563;
        _3053 = _2565;
        _3055 = _2567;
        _3057 = _2901;
        _3059 = _2903;
        _3061 = _2905;
    }
    uint _3067 = _951 + uint(cbMatDynParam._m0[0u].w);
    float _3073 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _3079 = (((((_3073 * cbMtdParam._m0[14u].x) * _697.x) * _720) * _798) * (((1.0 - _773) * cbMtdParam._m0[20u].w) + _773)) * cbInstanceData._m0[_3067].x;
    float _3085 = (((((_3073 * cbMtdParam._m0[14u].y) * _697.y) * _720) * _798) * (((1.0 - _775) * cbMtdParam._m0[20u].w) + _775)) * cbInstanceData._m0[_3067].y;
    float _3091 = (((((_3073 * cbMtdParam._m0[14u].z) * _697.z) * _720) * _798) * (((1.0 - _777) * cbMtdParam._m0[20u].w) + _777)) * cbInstanceData._m0[_3067].z;
    float _5127 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
    float _5138 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
    float _5149 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
    float _3108 = (((isnan(1.0) ? _5127 : (isnan(_5127) ? 1.0 : min(_5127, 1.0))) * (_3051 + ((isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0))) * _990))) + ((_3057 + ((isnan(0.0) ? _2043 : (isnan(_2043) ? 0.0 : max(_2043, 0.0))) * _1830)) * cbPerFrame._m0[3u].x)) + _3079;
    float _3110 = (_3085 + ((_3059 + ((isnan(0.0) ? _2046 : (isnan(_2046) ? 0.0 : max(_2046, 0.0))) * _1830)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5138 : (isnan(_5138) ? 1.0 : min(_5138, 1.0))) * (_3053 + ((isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0))) * _990)));
    float _3112 = (_3091 + ((_3061 + ((isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0))) * _1830)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5149 : (isnan(_5149) ? 1.0 : min(_5149, 1.0))) * (_3055 + ((isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0))) * _990)));
    float _3113 = isnan(0.0) ? _3108 : (isnan(_3108) ? 0.0 : max(_3108, 0.0));
    float _3114 = isnan(0.0) ? _3110 : (isnan(_3110) ? 0.0 : max(_3110, 0.0));
    float _3115 = isnan(0.0) ? _3112 : (isnan(_3112) ? 0.0 : max(_3112, 0.0));
    float _3121 = cbMtdParam._m0[2u].x * _3079;
    float _3122 = cbMtdParam._m0[2u].y * _3085;
    float _3123 = cbMtdParam._m0[2u].z * _3091;
    float _5175 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3125 = isnan(1.0) ? _5175 : (isnan(_5175) ? 1.0 : min(_5175, 1.0));
    uint _3126 = _950 + 6u;
    float _3134 = _912 / cbSceneParam._m0[86u].x;
    float _3135 = _913 / cbSceneParam._m0[86u].y;
    vec4 _3149 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3134, _3135, (log2((isnan(cbSceneParam._m0[77u].w) ? _835 : (isnan(_835) ? cbSceneParam._m0[77u].w : min(_835, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3151 = _3149.x;
    float _3152 = _3149.y;
    float _3153 = _3149.z;
    float _3154 = _3149.w;
    float _3225;
    float _3227;
    float _3229;
    float _3231;
    if (_835 > cbSceneParam._m0[78u].w)
    {
        float _3188 = isnan(_835) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _835 : min(cbSceneParam._m0[80u].w, _835));
        float _3189 = _3188 / _835;
        float _3200 = _3189 * _885;
        float _3201 = _886 * _3189;
        float _3202 = (-0.0) - _3201;
        float _3203 = _3189 * _887;
        float _3205 = (cbSceneParam._m0[77u].w * _3202) / _3188;
        float _3206 = _3205 + cbSceneParam._m0[79u].w;
        float _3207 = cbSceneParam._m0[79u].w - _3201;
        float _3213 = sqrt(((_3200 * _3200) + (_3201 * _3201)) + (_3203 * _3203));
        float _3216 = (1.0 - (cbSceneParam._m0[77u].w / _3188)) * _3213;
        float _3221 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3223 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3409;
        if (abs((_3202 - _3205) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3409 = ((((_3206 > 0.0) ? exp2(_3221 * _3206) : (2.0 - exp2(_3223 * _3206))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3216;
        }
        else
        {
            float _3353 = 1.0 / cbSceneParam._m0[80u].x;
            float _3354 = isnan(_3207) ? _3206 : (isnan(_3206) ? _3207 : max(_3206, _3207));
            float _3355 = isnan(_3207) ? _3206 : (isnan(_3206) ? _3207 : min(_3206, _3207));
            float _3364 = isnan(0.0) ? _3354 : (isnan(_3354) ? 0.0 : min(_3354, 0.0));
            float _3365 = isnan(0.0) ? _3355 : (isnan(_3355) ? 0.0 : min(_3355, 0.0));
            _3409 = ((abs(_3213 / _3202) * cbSceneParam._m0[80u].y) * ((((_3364 - _3365) * 2.0) - ((exp2(_3221 * (isnan(0.0) ? _3354 : (isnan(_3354) ? 0.0 : max(_3354, 0.0)))) - exp2(_3221 * (isnan(0.0) ? _3355 : (isnan(_3355) ? 0.0 : max(_3355, 0.0))))) * _3353)) - ((exp2(_3223 * _3364) - exp2(_3223 * _3365)) * _3353))) + (_3216 * cbSceneParam._m0[80u].z);
        }
        vec4 _3411 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3134, _3135, 1.0), 0.0);
        float _3420 = exp2((_3409 * (-1.44269502162933349609375)) * (1.0 - _3411.w));
        float _3421 = log2(_3420);
        float _3437 = log2(_3154);
        _3225 = (exp2(_3437 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3421 * cbSceneParam._m0[78u].x)) * _3411.x) / cbSceneParam._m0[78u].x)) + _3151;
        _3227 = (exp2(_3437 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3421 * cbSceneParam._m0[78u].y)) * _3411.y) / cbSceneParam._m0[78u].y)) + _3152;
        _3229 = (exp2(_3437 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3421 * cbSceneParam._m0[78u].z)) * _3411.z) / cbSceneParam._m0[78u].z)) + _3153;
        _3231 = _3420 * _3154;
    }
    else
    {
        _3225 = _3151;
        _3227 = _3152;
        _3229 = _3153;
        _3231 = _3154;
    }
    bool _3447;
    vec4 _3241;
    vec4 _3263;
    float _3265;
    float _3269;
    float _3270;
    float _3271;
    float _3274;
    float _3277;
    float _3280;
    float _3281;
    bool _3291;
    for (;;)
    {
        _3241 = cbMatDynParam._m0[0u];
        float _3243 = roundEven(_3241.y);
        bool _3244 = _3243 == 3.0;
        float _3245 = log2(_3231);
        float _3249 = exp2(_3245 * cbSceneParam._m0[78u].x);
        float _3250 = exp2(_3245 * cbSceneParam._m0[78u].y);
        float _3251 = exp2(_3245 * cbSceneParam._m0[78u].z);
        float _3252 = _3249 * _3113;
        float _3253 = _3250 * _3114;
        float _3254 = _3251 * _3115;
        float _3261 = _901 + (-0.5);
        _3263 = cbMtdParam._m0[1u];
        _3265 = _3263.y * _3261;
        float _3268 = (_3243 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3269 = _3268 * (_3244 ? _3252 : (_3252 + (cbSceneParam._m0[72u].w * _3225)));
        _3270 = _3268 * (_3244 ? _3253 : (_3253 + (cbSceneParam._m0[72u].w * _3227)));
        _3271 = _3268 * (_3244 ? _3254 : (_3254 + (cbSceneParam._m0[72u].w * _3229)));
        _3274 = ((_3121 * _3125) * _3249) * _3268;
        _3277 = ((_3122 * _3125) * _3250) * _3268;
        _3280 = ((_3123 * _3125) * _3251) * _3268;
        _3281 = _3261 * 0.999000012874603271484375;
        _3291 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3291)
        {
            if ((cbInstanceData._m0[_950 + 7u].x + _3281) < 0.5)
            {
                _3447 = true;
                break;
            }
        }
        uint _3388 = _951 + uint(_3241.w);
        if ((cbInstanceData._m0[_3388].w < 1.0) && ((cbInstanceData._m0[_3388].w + _3281) < 0.5))
        {
            _3447 = true;
            break;
        }
        if ((_3265 + 1.0) < _3263.x)
        {
            _3447 = true;
            break;
        }
        _3447 = false;
        break;
    }
    float _3651;
    if (_3447)
    {
        discard_state = true;
        _3651 = 0.0;
    }
    else
    {
        _3651 = cbInstanceData._m0[_3126].w;
    }
    SV_Target.x = _3269;
    SV_Target.y = _3270;
    SV_Target.z = _3271;
    SV_Target.w = _3651;
    SV_Target_1.x = _3274;
    SV_Target_1.y = _3277;
    SV_Target_1.z = _3280;
    SV_Target_1.w = cbInstanceData._m0[_3126].w;
    discard_exit();
}


