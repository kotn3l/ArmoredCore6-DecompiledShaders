#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _129 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _130 = _129 * NORMAL.x;
    float _131 = _129 * NORMAL.y;
    float _132 = _129 * NORMAL.z;
    vec4 _151 = texture(sampler2D(C_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _157 = _151.x * cbMtdParam._m0[9u].x;
    float _158 = _151.y * cbMtdParam._m0[9u].y;
    float _159 = _151.z * cbMtdParam._m0[9u].z;
    vec4 _196 = texture(sampler2D(C_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _208 = inversesqrt(dot(vec3(_130, _131, _132), vec3(_130, _131, _132)));
    float _414 = isnan(0.0) ? _157 : (isnan(_157) ? 0.0 : max(_157, 0.0));
    float _210 = isnan(1.0) ? _414 : (isnan(_414) ? 1.0 : min(_414, 1.0));
    float _425 = isnan(0.0) ? _158 : (isnan(_158) ? 0.0 : max(_158, 0.0));
    float _211 = isnan(1.0) ? _425 : (isnan(_425) ? 1.0 : min(_425, 1.0));
    float _436 = isnan(0.0) ? _159 : (isnan(_159) ? 0.0 : max(_159, 0.0));
    float _212 = isnan(1.0) ? _436 : (isnan(_436) ? 1.0 : min(_436, 1.0));
    uint _214 = uint(roundEven(NORMAL.w));
    vec4 _219 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _221 = _219.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _286 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _447 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
        float _287 = isnan(1.0) ? _447 : (isnan(_447) ? 1.0 : min(_447, 1.0));
        float _291 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _458 = isnan(0.0) ? _291 : (isnan(_291) ? 0.0 : max(_291, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _458 : (isnan(_458) ? 1.0 : min(_458, 1.0))) - _287)) + _287) < ((_221 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _320;
    uint _241;
    vec4 _245;
    float _246;
    float _247;
    float _248;
    float _252;
    float _253;
    float _254;
    float _257;
    float _261;
    vec4 _265;
    float _267;
    float _268;
    bool _279;
    for (;;)
    {
        _241 = _214 * 13u;
        _245 = cbInstanceData._m0[(_241 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _246 = _245.x;
        _247 = _245.y;
        _248 = _245.z;
        float _249 = (cbMtdParam._m0[0u].x * _210) * _246;
        float _250 = (cbMtdParam._m0[0u].y * _211) * _247;
        float _251 = (cbMtdParam._m0[0u].z * _212) * _248;
        float _469 = isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0));
        _252 = isnan(1.0) ? _469 : (isnan(_469) ? 1.0 : min(_469, 1.0));
        float _480 = isnan(0.0) ? _250 : (isnan(_250) ? 0.0 : max(_250, 0.0));
        _253 = isnan(1.0) ? _480 : (isnan(_480) ? 1.0 : min(_480, 1.0));
        float _491 = isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0));
        _254 = isnan(1.0) ? _491 : (isnan(_491) ? 1.0 : min(_491, 1.0));
        _257 = cbMtdParam._m0[2u].w;
        _261 = cbInstanceData._m0[_241 + 6u].w;
        float _262 = _221 + (-0.5);
        _265 = cbMtdParam._m0[1u];
        _267 = _265.y * _262;
        _268 = _262 * 0.999000012874603271484375;
        _279 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_279)
        {
            if ((cbInstanceData._m0[_241 + 7u].x + _268) < 0.5)
            {
                _320 = true;
                break;
            }
        }
        if ((_245.w < 1.0) && ((_245.w + _268) < 0.5))
        {
            _320 = true;
            break;
        }
        if ((_267 + 1.0) < _265.x)
        {
            _320 = true;
            break;
        }
        _320 = false;
        break;
    }
    if (_320)
    {
        discard_state = true;
    }
    float _365;
    float _366;
    float _367;
    float _368;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _365 = _261;
        _366 = _261;
        _367 = _261;
        _368 = _261;
    }
    else
    {
        _365 = _257;
        _366 = 0.0;
        _367 = float(floatBitsToUint(cbInstanceData._m0[_241 + 5u]).x) * 0.0039215688593685626983642578125;
        _368 = TEXCOORD.z;
    }
    SV_Target.x = ((_130 * 0.5) * _208) + 0.500488758087158203125;
    SV_Target.y = ((_131 * 0.5) * _208) + 0.500488758087158203125;
    SV_Target.z = ((_132 * 0.5) * _208) + 0.500488758087158203125;
    SV_Target.w = _366;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _368;
    SV_Target_2.x = _252;
    SV_Target_2.y = _253;
    SV_Target_2.z = _254;
    SV_Target_2.w = _367;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _366;
    SV_Target_4.x = ((((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _196.x) * cbSceneParam._m0[72u].y) * _246) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = ((((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _196.y) * cbSceneParam._m0[72u].y) * _247) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = ((((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _196.z) * cbSceneParam._m0[72u].y) * _248) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _365;
    discard_exit();
}


