#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D S_AMSN_di_FlipBookSmooth_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_di_FlipBookSmooth_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D S_AMSN_di_FlipBookSmooth_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _121 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _122 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _123 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _129 = inversesqrt(dot(vec3(_121, _122, _123), vec3(_121, _122, _123)));
    float _130 = _129 * _121;
    float _131 = _129 * _122;
    float _132 = _129 * _123;
    float _136 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _137 = _136 * NORMAL.x;
    float _138 = _136 * NORMAL.y;
    float _139 = _136 * NORMAL.z;
    float _143 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _144 = _143 * TANGENT.x;
    float _145 = _143 * TANGENT.y;
    float _146 = _143 * TANGENT.z;
    float _151;
    float _152;
    float _153;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _151 = (-0.0) - _137;
        _152 = (-0.0) - _138;
        _153 = (-0.0) - _139;
    }
    else
    {
        _151 = _137;
        _152 = _138;
        _153 = _139;
    }
    uint _172 = uint(int(floor(cbMtdParam._m0[10u].z)));
    float _173 = fract(cbMtdParam._m0[10u].z);
    uint _174 = _172 + 1u;
    uint _175 = uint(int(cbMtdParam._m0[11u].x * cbMtdParam._m0[10u].w));
    float _178 = float(int(_172 - _175 * (_172 / _175)));
    float _182 = float(int(_174 - _175 * (_174 / _175)));
    float _186 = 1.0 / cbMtdParam._m0[10u].w;
    float _188 = 1.0 / cbMtdParam._m0[11u].x;
    float _189 = fract(TEXCOORD_1.x);
    float _190 = fract(TEXCOORD_1.y);
    float _192 = (_189 + (_178 - cbMtdParam._m0[10u].w * trunc(_178 / cbMtdParam._m0[10u].w))) * _186;
    float _194 = (_190 + floor(_178 / cbMtdParam._m0[10u].w)) * _188;
    float _196 = (_189 + (_182 - cbMtdParam._m0[10u].w * trunc(_182 / cbMtdParam._m0[10u].w))) * _186;
    float _198 = (_190 + floor(_182 / cbMtdParam._m0[10u].w)) * _188;
    vec4 _211 = texture(sampler2D(S_AMSN_di_FlipBookSmooth_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _196) + cbTextureTilingScale._m0[0u].z, (_198 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _221 = texture(sampler2D(S_AMSN_di_FlipBookSmooth_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _192) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _194) + cbTextureTilingScale._m0[0u].w));
    float _223 = _221.x;
    float _224 = _221.y;
    float _225 = _221.z;
    float _235 = (((_211.x - _223) * _173) + _223) * cbMtdParam._m0[9u].x;
    float _236 = (((_211.y - _224) * _173) + _224) * cbMtdParam._m0[9u].y;
    float _237 = (((_211.z - _225) * _173) + _225) * cbMtdParam._m0[9u].z;
    vec4 _257 = texture(sampler2D(S_AMSN_di_FlipBookSmooth_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _192) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _194) + cbTextureTilingScale._m0[2u].w));
    float _259 = _257.x;
    float _263 = (_259 + cbMtdParam._m0[10u].x) + ((texture(sampler2D(S_AMSN_di_FlipBookSmooth_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _196) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _198) + cbTextureTilingScale._m0[2u].w)).x - _259) * _173);
    vec4 _275 = texture(sampler2D(S_AMSN_di_FlipBookSmooth_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _196) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _198) + cbTextureTilingScale._m0[1u].w));
    float _282 = (_275.x * 2.0) + (-1.0);
    float _284 = (_275.y * 2.0) + (-1.0);
    float _288 = 1.0 - dot(vec2(_282, _284), vec2(_282, _284));
    float _470 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _290 = sqrt(isnan(1.0) ? _470 : (isnan(_470) ? 1.0 : min(_470, 1.0)));
    float _293 = fma(_290, _151, fma(_284, _144, _282 * _130));
    float _296 = fma(_290, _152, fma(_284, _145, _282 * _131));
    float _299 = fma(_290, _153, fma(_284, _146, _282 * _132));
    float _303 = inversesqrt(dot(vec3(_293, _296, _299), vec3(_293, _296, _299)));
    vec4 _311 = texture(sampler2D(S_AMSN_di_FlipBookSmooth_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _192) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _194) + cbTextureTilingScale._m0[1u].w));
    float _317 = (_311.x * 2.0) + (-1.0);
    float _318 = (_311.y * 2.0) + (-1.0);
    float _322 = 1.0 - dot(vec2(_317, _318), vec2(_317, _318));
    float _481 = isnan(0.0) ? _322 : (isnan(_322) ? 0.0 : max(_322, 0.0));
    float _324 = sqrt(isnan(1.0) ? _481 : (isnan(_481) ? 1.0 : min(_481, 1.0)));
    float _327 = fma(_324, _151, fma(_318, _144, _317 * _130));
    float _330 = fma(_324, _152, fma(_318, _145, _317 * _131));
    float _333 = fma(_324, _153, fma(_318, _146, _317 * _132));
    float _337 = inversesqrt(dot(vec3(_327, _330, _333), vec3(_327, _330, _333)));
    float _338 = _337 * _327;
    float _339 = _337 * _330;
    float _340 = _337 * _333;
    float _349 = (((_303 * _299) - _340) * _173) + _340;
    float _352 = (((((_303 * _293) - _338) * _173) + _338) * 2.0) + (-1.0);
    float _353 = (((((_303 * _296) - _339) * _173) + _339) * 2.0) + (-1.0);
    float _354 = dot(vec2(_352, _353), vec2(_352, _353));
    float _492 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _359 = sqrt(1.0 - (isnan(1.0) ? _492 : (isnan(_492) ? 1.0 : min(_492, 1.0))));
    float _362 = fma(_359, _151, fma(_353, _144, _352 * _130));
    float _365 = fma(_359, _152, fma(_353, _145, _352 * _131));
    float _368 = fma(_359, _153, fma(_353, _146, _352 * _132));
    float _372 = inversesqrt(dot(vec3(_362, _365, _368), vec3(_362, _365, _368)));
    float _503 = isnan(0.0) ? _349 : (isnan(_349) ? 0.0 : max(_349, 0.0));
    float _514 = isnan(0.0) ? _235 : (isnan(_235) ? 0.0 : max(_235, 0.0));
    float _525 = isnan(0.0) ? _236 : (isnan(_236) ? 0.0 : max(_236, 0.0));
    float _536 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
    float _547 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
    uint _392 = uint(roundEven(NORMAL.w)) * 13u;
    uint _395 = (_392 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _401 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _514 : (isnan(_514) ? 1.0 : min(_514, 1.0)))) * cbInstanceData._m0[_395].x;
    float _402 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _525 : (isnan(_525) ? 1.0 : min(_525, 1.0)))) * cbInstanceData._m0[_395].y;
    float _403 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _536 : (isnan(_536) ? 1.0 : min(_536, 1.0)))) * cbInstanceData._m0[_395].z;
    float _558 = isnan(0.0) ? _401 : (isnan(_401) ? 0.0 : max(_401, 0.0));
    float _569 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
    float _580 = isnan(0.0) ? _403 : (isnan(_403) ? 0.0 : max(_403, 0.0));
    uint _410 = _392 + 6u;
    float _440;
    float _441;
    float _442;
    float _443;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _440 = cbInstanceData._m0[_410].w;
        _441 = cbInstanceData._m0[_410].w;
        _442 = cbInstanceData._m0[_410].w;
        _443 = cbInstanceData._m0[_410].w;
    }
    else
    {
        _440 = cbMtdParam._m0[2u].w;
        _441 = 0.0;
        _442 = float(floatBitsToUint(cbInstanceData._m0[_392 + 5u]).x) * 0.0039215688593685626983642578125;
        _443 = TEXCOORD_1.w;
    }
    SV_Target.x = ((_362 * 0.5) * _372) + 0.500488758087158203125;
    SV_Target.y = ((_365 * 0.5) * _372) + 0.500488758087158203125;
    SV_Target.z = ((_368 * 0.5) * _372) + 0.500488758087158203125;
    SV_Target.w = _441;
    SV_Target_1.x = isnan(1.0) ? _547 : (isnan(_547) ? 1.0 : min(_547, 1.0));
    SV_Target_1.y = isnan(1.0) ? _503 : (isnan(_503) ? 1.0 : min(_503, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _443;
    SV_Target_2.x = isnan(1.0) ? _558 : (isnan(_558) ? 1.0 : min(_558, 1.0));
    SV_Target_2.y = isnan(1.0) ? _569 : (isnan(_569) ? 1.0 : min(_569, 1.0));
    SV_Target_2.z = isnan(1.0) ? _580 : (isnan(_580) ? 1.0 : min(_580, 1.0));
    SV_Target_2.w = _442;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _441;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _440;
}


