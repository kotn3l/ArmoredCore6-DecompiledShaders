#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D I_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D I_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _119 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _120 = _119 * NORMAL.x;
    float _121 = _119 * NORMAL.y;
    float _122 = _119 * NORMAL.z;
    vec4 _142 = texture(sampler2D(I_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _148 = _142.x * cbMtdParam._m0[9u].x;
    float _149 = _142.y * cbMtdParam._m0[9u].y;
    float _150 = _142.z * cbMtdParam._m0[9u].z;
    vec4 _162 = texture(sampler2D(I_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _184 = inversesqrt(dot(vec3(_120, _121, _122), vec3(_120, _121, _122)));
    float _390 = isnan(0.0) ? _148 : (isnan(_148) ? 0.0 : max(_148, 0.0));
    float _186 = isnan(1.0) ? _390 : (isnan(_390) ? 1.0 : min(_390, 1.0));
    float _401 = isnan(0.0) ? _149 : (isnan(_149) ? 0.0 : max(_149, 0.0));
    float _187 = isnan(1.0) ? _401 : (isnan(_401) ? 1.0 : min(_401, 1.0));
    float _412 = isnan(0.0) ? _150 : (isnan(_150) ? 0.0 : max(_150, 0.0));
    float _188 = isnan(1.0) ? _412 : (isnan(_412) ? 1.0 : min(_412, 1.0));
    uint _190 = uint(roundEven(NORMAL.w));
    vec4 _195 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _197 = _195.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _262 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _423 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
        float _263 = isnan(1.0) ? _423 : (isnan(_423) ? 1.0 : min(_423, 1.0));
        float _267 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _434 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _434 : (isnan(_434) ? 1.0 : min(_434, 1.0))) - _263)) + _263) < ((_197 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _296;
    uint _217;
    vec4 _221;
    float _222;
    float _223;
    float _224;
    float _228;
    float _229;
    float _230;
    float _233;
    float _237;
    vec4 _241;
    float _243;
    float _244;
    bool _255;
    for (;;)
    {
        _217 = _190 * 13u;
        _221 = cbInstanceData._m0[(_217 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _222 = _221.x;
        _223 = _221.y;
        _224 = _221.z;
        float _225 = (cbMtdParam._m0[0u].x * _186) * _222;
        float _226 = (cbMtdParam._m0[0u].y * _187) * _223;
        float _227 = (cbMtdParam._m0[0u].z * _188) * _224;
        float _445 = isnan(0.0) ? _225 : (isnan(_225) ? 0.0 : max(_225, 0.0));
        _228 = isnan(1.0) ? _445 : (isnan(_445) ? 1.0 : min(_445, 1.0));
        float _456 = isnan(0.0) ? _226 : (isnan(_226) ? 0.0 : max(_226, 0.0));
        _229 = isnan(1.0) ? _456 : (isnan(_456) ? 1.0 : min(_456, 1.0));
        float _467 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
        _230 = isnan(1.0) ? _467 : (isnan(_467) ? 1.0 : min(_467, 1.0));
        _233 = cbMtdParam._m0[2u].w;
        _237 = cbInstanceData._m0[_217 + 6u].w;
        float _238 = _197 + (-0.5);
        _241 = cbMtdParam._m0[1u];
        _243 = _241.y * _238;
        _244 = _238 * 0.999000012874603271484375;
        _255 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_255)
        {
            if ((cbInstanceData._m0[_217 + 7u].x + _244) < 0.5)
            {
                _296 = true;
                break;
            }
        }
        if ((_221.w < 1.0) && ((_221.w + _244) < 0.5))
        {
            _296 = true;
            break;
        }
        if ((_243 + 1.0) < _241.x)
        {
            _296 = true;
            break;
        }
        _296 = false;
        break;
    }
    if (_296)
    {
        discard_state = true;
    }
    float _341;
    float _342;
    float _343;
    float _344;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _341 = _237;
        _342 = _237;
        _343 = _237;
        _344 = _237;
    }
    else
    {
        _341 = _233;
        _342 = 0.0;
        _343 = float(floatBitsToUint(cbInstanceData._m0[_217 + 5u]).x) * 0.0039215688593685626983642578125;
        _344 = TEXCOORD.z;
    }
    SV_Target.x = ((_120 * 0.5) * _184) + 0.500488758087158203125;
    SV_Target.y = ((_121 * 0.5) * _184) + 0.500488758087158203125;
    SV_Target.z = ((_122 * 0.5) * _184) + 0.500488758087158203125;
    SV_Target.w = _342;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _344;
    SV_Target_2.x = _228;
    SV_Target_2.y = _229;
    SV_Target_2.z = _230;
    SV_Target_2.w = _343;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _342;
    SV_Target_4.x = ((((cbMtdParam._m0[11u].x * _162.x) * cbMtdParam._m0[10u].x) * cbSceneParam._m0[72u].y) * _222) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = ((((cbMtdParam._m0[11u].x * _162.y) * cbMtdParam._m0[10u].y) * cbSceneParam._m0[72u].y) * _223) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = ((((cbMtdParam._m0[11u].x * _162.z) * cbMtdParam._m0[10u].z) * cbSceneParam._m0[72u].y) * _224) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _341;
    discard_exit();
}


