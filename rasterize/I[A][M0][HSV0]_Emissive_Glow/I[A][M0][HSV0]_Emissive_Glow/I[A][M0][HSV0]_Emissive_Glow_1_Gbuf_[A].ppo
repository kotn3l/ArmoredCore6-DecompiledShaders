#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D I_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D I_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _119 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _120 = _119 * NORMAL.x;
    float _121 = _119 * NORMAL.y;
    float _122 = _119 * NORMAL.z;
    vec4 _142 = texture(sampler2D(I_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _148 = _142.x * cbMtdParam._m0[9u].x;
    float _149 = _142.y * cbMtdParam._m0[9u].y;
    float _150 = _142.z * cbMtdParam._m0[9u].z;
    vec4 _171 = texture(sampler2D(I_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _173 = _171.x;
    float _174 = _171.y;
    float _175 = _171.z;
    float _176 = cbMtdParam._m0[11u].w * cbMtdParam._m0[12u].x;
    float _177 = _176 * _173;
    float _178 = _176 * _174;
    float _179 = _176 * _175;
    float _180 = isnan(_178) ? _177 : (isnan(_177) ? _178 : max(_177, _178));
    float _181 = isnan(_179) ? _180 : (isnan(_180) ? _179 : max(_180, _179));
    float _184;
    float _186;
    if (_181 < 1.1920928955078125e-07)
    {
        _184 = 0.0;
        _186 = 0.0;
    }
    else
    {
        float _212 = isnan(_178) ? _177 : (isnan(_177) ? _178 : min(_177, _178));
        float _214 = _181 - (isnan(_179) ? _212 : (isnan(_212) ? _179 : min(_212, _179)));
        float _187 = _214 / _181;
        float frontier_phi_1_2_ladder;
        float frontier_phi_1_2_ladder_1;
        if (_214 < 1.1920928955078125e-07)
        {
            frontier_phi_1_2_ladder = 0.0;
            frontier_phi_1_2_ladder_1 = _187;
        }
        else
        {
            float _354;
            if (_181 == _177)
            {
                _354 = ((_176 * (_174 - _175)) / _214) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_15_10_ladder;
                if (_181 == _178)
                {
                    frontier_phi_15_10_ladder = (((_176 * (_175 - _173)) / _214) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_15_10_ladder = (((_176 * (_173 - _174)) / _214) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _354 = frontier_phi_15_10_ladder;
            }
            float _359 = (_354 < 0.0) ? (_354 + 1.0) : _354;
            frontier_phi_1_2_ladder = _359 - floor(_359);
            frontier_phi_1_2_ladder_1 = _187;
        }
        _184 = frontier_phi_1_2_ladder;
        _186 = frontier_phi_1_2_ladder_1;
    }
    float _188 = _186 + cbMtdParam._m0[11u].y;
    float _192 = fract(cbMtdParam._m0[11u].z + _184) * 6.0;
    uint _195 = uint(int(floor(_192)));
    float _197 = _192 - float(int(_195));
    float _200 = (1.0 - _188) * _181;
    float _203 = (1.0 - (_197 * _188)) * _181;
    float _207 = (1.0 - ((1.0 - _197) * _188)) * _181;
    float _216;
    float _218;
    float _219;
    if ((_195 == 0u) || (_195 == 6u))
    {
        _216 = _181;
        _218 = _207;
        _219 = _200;
    }
    else
    {
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        float frontier_phi_3_4_ladder_2;
        if (_195 == 1u)
        {
            frontier_phi_3_4_ladder = _203;
            frontier_phi_3_4_ladder_1 = _181;
            frontier_phi_3_4_ladder_2 = _200;
        }
        else
        {
            float frontier_phi_3_4_ladder_8_ladder;
            float frontier_phi_3_4_ladder_8_ladder_1;
            float frontier_phi_3_4_ladder_8_ladder_2;
            if (_195 == 2u)
            {
                frontier_phi_3_4_ladder_8_ladder = _200;
                frontier_phi_3_4_ladder_8_ladder_1 = _181;
                frontier_phi_3_4_ladder_8_ladder_2 = _207;
            }
            else
            {
                float frontier_phi_3_4_ladder_8_ladder_14_ladder;
                float frontier_phi_3_4_ladder_8_ladder_14_ladder_1;
                float frontier_phi_3_4_ladder_8_ladder_14_ladder_2;
                if (_195 == 3u)
                {
                    frontier_phi_3_4_ladder_8_ladder_14_ladder = _200;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_1 = _203;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_2 = _181;
                }
                else
                {
                    bool _376 = _195 == 4u;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder = _376 ? _207 : _181;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_1 = _200;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_2 = _376 ? _181 : _203;
                }
                frontier_phi_3_4_ladder_8_ladder = frontier_phi_3_4_ladder_8_ladder_14_ladder;
                frontier_phi_3_4_ladder_8_ladder_1 = frontier_phi_3_4_ladder_8_ladder_14_ladder_1;
                frontier_phi_3_4_ladder_8_ladder_2 = frontier_phi_3_4_ladder_8_ladder_14_ladder_2;
            }
            frontier_phi_3_4_ladder = frontier_phi_3_4_ladder_8_ladder;
            frontier_phi_3_4_ladder_1 = frontier_phi_3_4_ladder_8_ladder_1;
            frontier_phi_3_4_ladder_2 = frontier_phi_3_4_ladder_8_ladder_2;
        }
        _216 = frontier_phi_3_4_ladder;
        _218 = frontier_phi_3_4_ladder_1;
        _219 = frontier_phi_3_4_ladder_2;
    }
    float _225 = cbSceneParam._m0[72u].y * _216;
    float _226 = cbSceneParam._m0[72u].y * _218;
    float _227 = cbSceneParam._m0[72u].y * _219;
    float _231 = inversesqrt(dot(vec3(_120, _121, _122), vec3(_120, _121, _122)));
    float _505 = isnan(0.0) ? _148 : (isnan(_148) ? 0.0 : max(_148, 0.0));
    float _232 = isnan(1.0) ? _505 : (isnan(_505) ? 1.0 : min(_505, 1.0));
    float _516 = isnan(0.0) ? _149 : (isnan(_149) ? 0.0 : max(_149, 0.0));
    float _233 = isnan(1.0) ? _516 : (isnan(_516) ? 1.0 : min(_516, 1.0));
    float _527 = isnan(0.0) ? _150 : (isnan(_150) ? 0.0 : max(_150, 0.0));
    float _234 = isnan(1.0) ? _527 : (isnan(_527) ? 1.0 : min(_527, 1.0));
    uint _236 = uint(roundEven(NORMAL.w));
    vec4 _241 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _243 = _241.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _312 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _538 = isnan(0.0) ? _312 : (isnan(_312) ? 0.0 : max(_312, 0.0));
        float _313 = isnan(1.0) ? _538 : (isnan(_538) ? 1.0 : min(_538, 1.0));
        float _317 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _549 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _549 : (isnan(_549) ? 1.0 : min(_549, 1.0))) - _313)) + _313) < ((_243 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _371;
    uint _264;
    vec4 _268;
    float _275;
    float _276;
    float _277;
    float _278;
    float _279;
    float _280;
    float _283;
    float _287;
    vec4 _291;
    float _293;
    float _294;
    bool _305;
    for (;;)
    {
        _264 = _236 * 13u;
        _268 = cbInstanceData._m0[(_264 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _272 = (cbMtdParam._m0[0u].x * _232) * _268.x;
        float _273 = (cbMtdParam._m0[0u].y * _233) * _268.y;
        float _274 = (cbMtdParam._m0[0u].z * _234) * _268.z;
        float _560 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
        _275 = isnan(1.0) ? _560 : (isnan(_560) ? 1.0 : min(_560, 1.0));
        float _571 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
        _276 = isnan(1.0) ? _571 : (isnan(_571) ? 1.0 : min(_571, 1.0));
        float _582 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
        _277 = isnan(1.0) ? _582 : (isnan(_582) ? 1.0 : min(_582, 1.0));
        _278 = _225 * _268.x;
        _279 = _226 * _268.y;
        _280 = _227 * _268.z;
        _283 = cbMtdParam._m0[2u].w;
        _287 = cbInstanceData._m0[_264 + 6u].w;
        float _288 = _243 + (-0.5);
        _291 = cbMtdParam._m0[1u];
        _293 = _291.y * _288;
        _294 = _288 * 0.999000012874603271484375;
        _305 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_305)
        {
            if ((cbInstanceData._m0[_264 + 7u].x + _294) < 0.5)
            {
                _371 = true;
                break;
            }
        }
        if ((_268.w < 1.0) && ((_268.w + _294) < 0.5))
        {
            _371 = true;
            break;
        }
        if ((_293 + 1.0) < _291.x)
        {
            _371 = true;
            break;
        }
        _371 = false;
        break;
    }
    if (_371)
    {
        discard_state = true;
    }
    float _406;
    float _407;
    float _408;
    float _409;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _406 = _287;
        _407 = _287;
        _408 = _287;
        _409 = _287;
    }
    else
    {
        _406 = _283;
        _407 = 0.0;
        _408 = float(floatBitsToUint(cbInstanceData._m0[_264 + 5u]).x) * 0.0039215688593685626983642578125;
        _409 = TEXCOORD.z;
    }
    SV_Target.x = ((_120 * 0.5) * _231) + 0.500488758087158203125;
    SV_Target.y = ((_121 * 0.5) * _231) + 0.500488758087158203125;
    SV_Target.z = ((_122 * 0.5) * _231) + 0.500488758087158203125;
    SV_Target.w = _407;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _409;
    SV_Target_2.x = _275;
    SV_Target_2.y = _276;
    SV_Target_2.z = _277;
    SV_Target_2.w = _408;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _407;
    SV_Target_4.x = _278 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _279 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _280 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _406;
    discard_exit();
}


