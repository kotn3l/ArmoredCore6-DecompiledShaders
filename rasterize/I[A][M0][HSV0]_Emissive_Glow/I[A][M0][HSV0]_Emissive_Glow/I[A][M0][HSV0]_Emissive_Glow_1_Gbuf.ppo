#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D I_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D I_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _105 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _106 = _105 * NORMAL.x;
    float _107 = _105 * NORMAL.y;
    float _108 = _105 * NORMAL.z;
    vec4 _128 = texture(sampler2D(I_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _134 = _128.x * cbMtdParam._m0[9u].x;
    float _135 = _128.y * cbMtdParam._m0[9u].y;
    float _136 = _128.z * cbMtdParam._m0[9u].z;
    vec4 _157 = texture(sampler2D(I_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _159 = _157.x;
    float _160 = _157.y;
    float _161 = _157.z;
    float _162 = cbMtdParam._m0[11u].w * cbMtdParam._m0[12u].x;
    float _163 = _162 * _159;
    float _164 = _162 * _160;
    float _165 = _162 * _161;
    float _166 = isnan(_164) ? _163 : (isnan(_163) ? _164 : max(_163, _164));
    float _167 = isnan(_165) ? _166 : (isnan(_166) ? _165 : max(_166, _165));
    float _170;
    float _172;
    if (_167 < 1.1920928955078125e-07)
    {
        _170 = 0.0;
        _172 = 0.0;
    }
    else
    {
        float _198 = isnan(_164) ? _163 : (isnan(_163) ? _164 : min(_163, _164));
        float _200 = _167 - (isnan(_165) ? _198 : (isnan(_198) ? _165 : min(_198, _165)));
        float _173 = _200 / _167;
        float frontier_phi_1_2_ladder;
        float frontier_phi_1_2_ladder_1;
        if (_200 < 1.1920928955078125e-07)
        {
            frontier_phi_1_2_ladder = 0.0;
            frontier_phi_1_2_ladder_1 = _173;
        }
        else
        {
            float _322;
            if (_167 == _163)
            {
                _322 = ((_162 * (_160 - _161)) / _200) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_12_10_ladder;
                if (_167 == _164)
                {
                    frontier_phi_12_10_ladder = (((_162 * (_161 - _159)) / _200) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_12_10_ladder = (((_162 * (_159 - _160)) / _200) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _322 = frontier_phi_12_10_ladder;
            }
            float _327 = (_322 < 0.0) ? (_322 + 1.0) : _322;
            frontier_phi_1_2_ladder = _327 - floor(_327);
            frontier_phi_1_2_ladder_1 = _173;
        }
        _170 = frontier_phi_1_2_ladder;
        _172 = frontier_phi_1_2_ladder_1;
    }
    float _174 = _172 + cbMtdParam._m0[11u].y;
    float _178 = fract(cbMtdParam._m0[11u].z + _170) * 6.0;
    uint _181 = uint(int(floor(_178)));
    float _183 = _178 - float(int(_181));
    float _186 = (1.0 - _174) * _167;
    float _189 = (1.0 - (_183 * _174)) * _167;
    float _193 = (1.0 - ((1.0 - _183) * _174)) * _167;
    float _202;
    float _204;
    float _205;
    if ((_181 == 0u) || (_181 == 6u))
    {
        _202 = _167;
        _204 = _193;
        _205 = _186;
    }
    else
    {
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        float frontier_phi_3_4_ladder_2;
        if (_181 == 1u)
        {
            frontier_phi_3_4_ladder = _189;
            frontier_phi_3_4_ladder_1 = _167;
            frontier_phi_3_4_ladder_2 = _186;
        }
        else
        {
            float frontier_phi_3_4_ladder_8_ladder;
            float frontier_phi_3_4_ladder_8_ladder_1;
            float frontier_phi_3_4_ladder_8_ladder_2;
            if (_181 == 2u)
            {
                frontier_phi_3_4_ladder_8_ladder = _186;
                frontier_phi_3_4_ladder_8_ladder_1 = _167;
                frontier_phi_3_4_ladder_8_ladder_2 = _193;
            }
            else
            {
                float frontier_phi_3_4_ladder_8_ladder_11_ladder;
                float frontier_phi_3_4_ladder_8_ladder_11_ladder_1;
                float frontier_phi_3_4_ladder_8_ladder_11_ladder_2;
                if (_181 == 3u)
                {
                    frontier_phi_3_4_ladder_8_ladder_11_ladder = _186;
                    frontier_phi_3_4_ladder_8_ladder_11_ladder_1 = _189;
                    frontier_phi_3_4_ladder_8_ladder_11_ladder_2 = _167;
                }
                else
                {
                    bool _339 = _181 == 4u;
                    frontier_phi_3_4_ladder_8_ladder_11_ladder = _339 ? _193 : _167;
                    frontier_phi_3_4_ladder_8_ladder_11_ladder_1 = _186;
                    frontier_phi_3_4_ladder_8_ladder_11_ladder_2 = _339 ? _167 : _189;
                }
                frontier_phi_3_4_ladder_8_ladder = frontier_phi_3_4_ladder_8_ladder_11_ladder;
                frontier_phi_3_4_ladder_8_ladder_1 = frontier_phi_3_4_ladder_8_ladder_11_ladder_1;
                frontier_phi_3_4_ladder_8_ladder_2 = frontier_phi_3_4_ladder_8_ladder_11_ladder_2;
            }
            frontier_phi_3_4_ladder = frontier_phi_3_4_ladder_8_ladder;
            frontier_phi_3_4_ladder_1 = frontier_phi_3_4_ladder_8_ladder_1;
            frontier_phi_3_4_ladder_2 = frontier_phi_3_4_ladder_8_ladder_2;
        }
        _202 = frontier_phi_3_4_ladder;
        _204 = frontier_phi_3_4_ladder_1;
        _205 = frontier_phi_3_4_ladder_2;
    }
    float _217 = inversesqrt(dot(vec3(_106, _107, _108), vec3(_106, _107, _108)));
    float _395 = isnan(0.0) ? _134 : (isnan(_134) ? 0.0 : max(_134, 0.0));
    float _406 = isnan(0.0) ? _135 : (isnan(_135) ? 0.0 : max(_135, 0.0));
    float _417 = isnan(0.0) ? _136 : (isnan(_136) ? 0.0 : max(_136, 0.0));
    uint _235 = uint(roundEven(NORMAL.w)) * 13u;
    uint _237 = (_235 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _243 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _395 : (isnan(_395) ? 1.0 : min(_395, 1.0)))) * cbInstanceData._m0[_237].x;
    float _244 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _406 : (isnan(_406) ? 1.0 : min(_406, 1.0)))) * cbInstanceData._m0[_237].y;
    float _245 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _417 : (isnan(_417) ? 1.0 : min(_417, 1.0)))) * cbInstanceData._m0[_237].z;
    float _428 = isnan(0.0) ? _243 : (isnan(_243) ? 0.0 : max(_243, 0.0));
    float _439 = isnan(0.0) ? _244 : (isnan(_244) ? 0.0 : max(_244, 0.0));
    float _450 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    uint _255 = _235 + 6u;
    float _290;
    float _291;
    float _292;
    float _293;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _290 = cbInstanceData._m0[_255].w;
        _291 = cbInstanceData._m0[_255].w;
        _292 = cbInstanceData._m0[_255].w;
        _293 = cbInstanceData._m0[_255].w;
    }
    else
    {
        _290 = cbMtdParam._m0[2u].w;
        _291 = 0.0;
        _292 = float(floatBitsToUint(cbInstanceData._m0[_235 + 5u]).x) * 0.0039215688593685626983642578125;
        _293 = TEXCOORD.z;
    }
    SV_Target.x = ((_106 * 0.5) * _217) + 0.500488758087158203125;
    SV_Target.y = ((_107 * 0.5) * _217) + 0.500488758087158203125;
    SV_Target.z = ((_108 * 0.5) * _217) + 0.500488758087158203125;
    SV_Target.w = _291;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _293;
    SV_Target_2.x = isnan(1.0) ? _428 : (isnan(_428) ? 1.0 : min(_428, 1.0));
    SV_Target_2.y = isnan(1.0) ? _439 : (isnan(_439) ? 1.0 : min(_439, 1.0));
    SV_Target_2.z = isnan(1.0) ? _450 : (isnan(_450) ? 1.0 : min(_450, 1.0));
    SV_Target_2.w = _292;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _291;
    SV_Target_4.x = ((cbSceneParam._m0[72u].y * _202) * cbInstanceData._m0[_237].x) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = ((cbSceneParam._m0[72u].y * _204) * cbInstanceData._m0[_237].y) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = ((cbSceneParam._m0[72u].y * _205) * cbInstanceData._m0[_237].z) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _290;
}


