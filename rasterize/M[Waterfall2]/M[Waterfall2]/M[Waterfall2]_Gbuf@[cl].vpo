#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Waterfall2_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Waterfall2_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    precise float _165 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _167 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _172 = _165 * cbTexScroll._m0[0u].x;
    precise float _173 = _167 * cbTexScroll._m0[0u].y;
    precise float _176 = _172 + cbTexScroll._m0[0u].z;
    precise float _177 = _173 + cbTexScroll._m0[0u].w;
    precise float _181 = float(NORMAL.x) + (-127.0);
    precise float _183 = float(NORMAL.y) + (-127.0);
    precise float _184 = float(NORMAL.z) + (-127.0);
    precise float _185 = _181 * 0.0078740157186985015869140625;
    precise float _187 = _183 * 0.0078740157186985015869140625;
    precise float _188 = _184 * 0.0078740157186985015869140625;
    float _198 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _200 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _212 = _176 * cbTextureTilingScale._m0[0u].x;
    precise float _213 = _177 * cbTextureTilingScale._m0[0u].y;
    precise float _214 = cbTextureTilingScale._m0[0u].z + _212;
    precise float _215 = cbTextureTilingScale._m0[0u].w + _213;
    precise float _222 = cbMtdParam._m0[19u].z * textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_1, SS_WrapLinear), vec2(_214, _215), 0.0).y;
    precise float _223 = TEXCOORD_1.y + _222;
    precise float _224 = _223 * 1.5;
    precise float _232 = _185 * cbMtdParam._m0[18u].z;
    precise float _233 = _187 * cbMtdParam._m0[18u].w;
    precise float _234 = _188 * cbMtdParam._m0[19u].x;
    precise float _235 = _232 * _224;
    precise float _236 = _224 * _233;
    precise float _237 = _224 * _234;
    precise float _242 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].x;
    precise float _248 = _242 * cbMtdParam._m0[17u].z;
    precise float _249 = _242 * cbMtdParam._m0[17u].w;
    precise float _250 = _176 + _248;
    precise float _251 = _177 + _249;
    precise float _258 = _250 * cbTextureTilingScale._m0[4u].x;
    precise float _259 = cbTextureTilingScale._m0[4u].y * _251;
    precise float _260 = cbTextureTilingScale._m0[4u].z + _258;
    precise float _261 = cbTextureTilingScale._m0[4u].w + _259;
    vec4 _263 = textureLod(sampler2D(M_Waterfall2_snp_0_Texture2D_4, SS_WrapLinear), vec2(_260, _261), 0.0);
    float _265 = _263.x;
    precise float _266 = _232 * _265;
    precise float _267 = _233 * _265;
    precise float _268 = _234 * _265;
    precise float _269 = _235 + _266;
    precise float _270 = _236 + _267;
    precise float _271 = _237 + _268;
    precise float _272 = _223 * _265;
    precise float _273 = _232 * _272;
    precise float _274 = _233 * _272;
    precise float _275 = _234 * _272;
    precise float _276 = _269 + _273;
    precise float _277 = _270 + _274;
    precise float _278 = _271 + _275;
    precise float _279 = POSITION.x + _276;
    precise float _280 = POSITION.y + _277;
    precise float _281 = POSITION.z + _278;
    uint _286 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _288 = texelFetch(g_InstanceIndexBuffer, int(_286));
    uint _289 = _288.x;
    uint _299 = (floatBitsToUint(cbInstanceData._m0[(_289 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _306 = _299 + 1u;
    uint _313 = _299 + 2u;
    precise float _320 = _279 * cbObjMatrix._m0[_299].x;
    precise float _321 = _280 * cbObjMatrix._m0[_299].y;
    precise float _322 = _321 + _320;
    precise float _323 = _281 * cbObjMatrix._m0[_299].z;
    precise float _324 = _323 + _322;
    precise float _325 = 1.0 * cbObjMatrix._m0[_299].w;
    precise float _327 = _325 + _324;
    precise float _328 = _279 * cbObjMatrix._m0[_306].x;
    precise float _329 = _280 * cbObjMatrix._m0[_306].y;
    precise float _330 = _329 + _328;
    precise float _331 = _281 * cbObjMatrix._m0[_306].z;
    precise float _332 = _331 + _330;
    precise float _333 = 1.0 * cbObjMatrix._m0[_306].w;
    precise float _334 = _333 + _332;
    precise float _335 = _279 * cbObjMatrix._m0[_313].x;
    precise float _336 = _280 * cbObjMatrix._m0[_313].y;
    precise float _337 = _336 + _335;
    precise float _338 = _281 * cbObjMatrix._m0[_313].z;
    precise float _339 = _338 + _337;
    precise float _340 = 1.0 * cbObjMatrix._m0[_313].w;
    precise float _341 = _340 + _339;
    precise float _362 = _327 + 0.0;
    precise float _363 = _334 + 0.0;
    precise float _364 = _341 + 0.0;
    precise float _370 = _362 - cbSceneParam._m0[3u].x;
    precise float _371 = _363 - cbSceneParam._m0[3u].y;
    precise float _372 = _364 - cbSceneParam._m0[3u].z;
    precise float _399 = _370 * cbSceneParam._m0[24u].x;
    precise float _400 = _371 * cbSceneParam._m0[24u].y;
    precise float _401 = _400 + _399;
    precise float _402 = _372 * cbSceneParam._m0[24u].z;
    precise float _403 = _402 + _401;
    precise float _404 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _405 = _404 + _403;
    precise float _406 = _370 * cbSceneParam._m0[25u].x;
    precise float _407 = _371 * cbSceneParam._m0[25u].y;
    precise float _408 = _407 + _406;
    precise float _409 = _372 * cbSceneParam._m0[25u].z;
    precise float _410 = _409 + _408;
    precise float _411 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _412 = _411 + _410;
    precise float _413 = _370 * cbSceneParam._m0[26u].x;
    precise float _414 = _371 * cbSceneParam._m0[26u].y;
    precise float _415 = _414 + _413;
    precise float _416 = _372 * cbSceneParam._m0[26u].z;
    precise float _417 = _416 + _415;
    precise float _418 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _419 = _418 + _417;
    precise float _420 = _370 * cbSceneParam._m0[27u].x;
    precise float _421 = _371 * cbSceneParam._m0[27u].y;
    precise float _422 = _421 + _420;
    precise float _423 = _372 * cbSceneParam._m0[27u].z;
    precise float _424 = _423 + _422;
    precise float _425 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _426 = _425 + _424;
    gl_Position.x = _405;
    gl_Position.y = _412;
    gl_Position.z = _419;
    gl_Position.w = _426;
    POSITION_1.x = _405;
    POSITION_1.y = _412;
    POSITION_1.z = _419;
    POSITION_1.w = _426;
    NORMAL_1.x = fma(_188, cbObjMatrix._m0[_299].z, fma(_187, cbObjMatrix._m0[_299].y, cbObjMatrix._m0[_299].x * _185));
    NORMAL_1.y = fma(_188, cbObjMatrix._m0[_306].z, fma(_187, cbObjMatrix._m0[_306].y, cbObjMatrix._m0[_306].x * _185));
    NORMAL_1.z = fma(_188, cbObjMatrix._m0[_313].z, fma(_187, cbObjMatrix._m0[_313].y, cbObjMatrix._m0[_313].x * _185));
    NORMAL_1.w = float(_289);
    TANGENT_1.x = fma(_200, cbObjMatrix._m0[_299].z, fma(_199, cbObjMatrix._m0[_299].y, cbObjMatrix._m0[_299].x * _198));
    TANGENT_1.y = fma(_200, cbObjMatrix._m0[_306].z, fma(_199, cbObjMatrix._m0[_306].y, cbObjMatrix._m0[_306].x * _198));
    TANGENT_1.z = fma(_200, cbObjMatrix._m0[_313].z, fma(_199, cbObjMatrix._m0[_313].y, cbObjMatrix._m0[_313].x * _198));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = _176;
    TEXCOORD_1_1.y = _177;
    TEXCOORD_1_1.z = COLOR_1.x;
    TEXCOORD_4.x = TEXCOORD_1.x;
    TEXCOORD_4.y = TEXCOORD_1.y;
    TEXCOORD_4.z = TEXCOORD_1.z;
    TEXCOORD_4.w = COLOR_1.w;
}


