#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_Snow2_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Snow2_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Snow2_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_Snow2_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_Snow2_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _127 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _128 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _129 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _134 = inversesqrt(dot(vec3(_127, _128, _129), vec3(_127, _128, _129)));
    float _135 = _134 * _127;
    float _136 = _134 * _128;
    float _137 = _134 * _129;
    float _141 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _142 = _141 * NORMAL.x;
    float _143 = _141 * NORMAL.y;
    float _144 = _141 * NORMAL.z;
    float _148 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _149 = _148 * TANGENT.x;
    float _150 = _148 * TANGENT.y;
    float _151 = _148 * TANGENT.z;
    float _156;
    float _157;
    float _158;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _156 = (-0.0) - _142;
        _157 = (-0.0) - _143;
        _158 = (-0.0) - _144;
    }
    else
    {
        _156 = _142;
        _157 = _143;
        _158 = _144;
    }
    vec4 _178 = texture(sampler2D(M_AMSN_Snow2_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _183 = _178.z;
    float _187 = (_178.x * 2.0) + (-1.0);
    float _189 = (_178.y * 2.0) + (-1.0);
    float _190 = dot(vec2(_187, _189), vec2(_187, _189));
    float _419 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _196 = sqrt(1.0 - (isnan(1.0) ? _419 : (isnan(_419) ? 1.0 : min(_419, 1.0))));
    float _199 = fma(_196, _156, fma(_189, _149, _187 * _135));
    float _202 = fma(_196, _157, fma(_189, _150, _187 * _136));
    float _205 = fma(_196, _158, fma(_189, _151, _187 * _137));
    float _209 = inversesqrt(dot(vec3(_199, _202, _205), vec3(_199, _202, _205)));
    float _217 = cbMtdParam._m0[9u].x + dot(vec4(_209 * _199, _209 * _202, _209 * _205, 0.0), vec4(cbMtdParam._m0[9u].yzw, 0.0));
    float _430 = isnan(0.0) ? _217 : (isnan(_217) ? 0.0 : max(_217, 0.0));
    float _218 = isnan(1.0) ? _430 : (isnan(_430) ? 1.0 : min(_430, 1.0));
    vec4 _230 = texture(sampler2D(M_AMSN_Snow2_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _246 = texture(sampler2D(M_AMSN_Snow2_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _248 = _246.x;
    float _249 = _246.y;
    float _250 = _246.z;
    float _257 = ((_230.x - _248) * _218) + _248;
    float _258 = ((_230.y - _249) * _218) + _249;
    float _259 = ((_230.z - _250) * _218) + _250;
    vec4 _272 = texture(sampler2D(M_AMSN_Snow2_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _274 = _272.x;
    float _276 = _274 - (_274 * _218);
    vec4 _288 = texture(sampler2D(M_AMSN_Snow2_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _295 = (_288.x * 2.0) + (-1.0);
    float _296 = (_288.y * 2.0) + (-1.0);
    float _297 = dot(vec2(_295, _296), vec2(_295, _296));
    float _441 = isnan(0.0) ? _297 : (isnan(_297) ? 0.0 : max(_297, 0.0));
    float _305 = ((_288.z - _183) * _218) + _183;
    float _312 = ((_295 - _187) * _218) + _187;
    float _313 = ((_296 - _189) * _218) + _189;
    float _314 = ((sqrt(1.0 - (isnan(1.0) ? _441 : (isnan(_441) ? 1.0 : min(_441, 1.0)))) - _196) * _218) + _196;
    float _317 = fma(_314, _156, fma(_313, _149, _312 * _135));
    float _320 = fma(_314, _157, fma(_313, _150, _312 * _136));
    float _323 = fma(_314, _158, fma(_313, _151, _312 * _137));
    float _327 = inversesqrt(dot(vec3(_317, _320, _323), vec3(_317, _320, _323)));
    float _452 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _463 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _474 = isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0));
    float _485 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
    float _496 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    uint _347 = uint(roundEven(NORMAL.w)) * 13u;
    uint _350 = (_347 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _356 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _463 : (isnan(_463) ? 1.0 : min(_463, 1.0)))) * cbInstanceData._m0[_350].x;
    float _357 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _474 : (isnan(_474) ? 1.0 : min(_474, 1.0)))) * cbInstanceData._m0[_350].y;
    float _358 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _485 : (isnan(_485) ? 1.0 : min(_485, 1.0)))) * cbInstanceData._m0[_350].z;
    float _507 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _518 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    float _529 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
    uint _362 = _347 + 6u;
    bool _391 = cbMtdParam._m0[1u].z != 0.0;
    float _392 = _391 ? cbInstanceData._m0[_362].w : 0.0;
    SV_Target.x = ((_317 * 0.5) * _327) + 0.500488758087158203125;
    SV_Target.y = ((_320 * 0.5) * _327) + 0.500488758087158203125;
    SV_Target.z = ((_323 * 0.5) * _327) + 0.500488758087158203125;
    SV_Target.w = _392;
    SV_Target_1.x = isnan(1.0) ? _496 : (isnan(_496) ? 1.0 : min(_496, 1.0));
    SV_Target_1.y = isnan(1.0) ? _452 : (isnan(_452) ? 1.0 : min(_452, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _391 ? cbInstanceData._m0[_362].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _507 : (isnan(_507) ? 1.0 : min(_507, 1.0));
    SV_Target_2.y = isnan(1.0) ? _518 : (isnan(_518) ? 1.0 : min(_518, 1.0));
    SV_Target_2.z = isnan(1.0) ? _529 : (isnan(_529) ? 1.0 : min(_529, 1.0));
    SV_Target_2.w = _391 ? cbInstanceData._m0[_362].w : (float(floatBitsToUint(cbInstanceData._m0[_347 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _392;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _392;
}


