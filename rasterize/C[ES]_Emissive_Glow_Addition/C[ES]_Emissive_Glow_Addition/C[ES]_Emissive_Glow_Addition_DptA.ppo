#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_ES_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in vec2 TEXCOORD_5;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    vec4 _124 = texture(sampler2D(C_ES_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _135 = (_124.w * cbMtdParam._m0[9u].w) * ((cbMtdParam._m0[12u].z == 0.100000001490116119384765625) ? 0.0 : float(cbMtdParam._m0[12u].z >= 0.100000001490116119384765625));
    uint _138 = uint(roundEven(NORMAL.w));
    float _181 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _191 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _181);
    float _192 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _181);
    float _193 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _181);
    vec4 _198 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _200 = _198.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _232 = sqrt(((_191 * _191) + (_192 * _192)) + (_193 * _193));
        float _239 = (cbMatDynParam._m0[5u].x * _232) + cbMatDynParam._m0[5u].y;
        float _309 = isnan(0.0) ? _239 : (isnan(_239) ? 0.0 : max(_239, 0.0));
        float _240 = isnan(1.0) ? _309 : (isnan(_309) ? 1.0 : min(_309, 1.0));
        float _244 = (cbMatDynParam._m0[5u].z * _232) + cbMatDynParam._m0[5u].w;
        float _320 = isnan(0.0) ? _244 : (isnan(_244) ? 0.0 : max(_244, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _320 : (isnan(_320) ? 1.0 : min(_320, 1.0))) - _240)) + _240) < ((_200 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _281;
    vec4 _211;
    float _213;
    float _214;
    bool _225;
    uint _226;
    for (;;)
    {
        float _208 = _200 + (-0.5);
        _211 = cbMtdParam._m0[1u];
        _213 = _211.y * _208;
        _214 = _208 * 0.999000012874603271484375;
        _225 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        _226 = _138 * 13u;
        if (_225)
        {
            if ((cbInstanceData._m0[_226 + 7u].x + _214) < 0.5)
            {
                _281 = true;
                break;
            }
        }
        uint _270 = (_226 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_270].w < 1.0) && ((cbInstanceData._m0[_270].w + _214) < 0.5))
        {
            _281 = true;
            break;
        }
        if ((_213 + _135) < _211.x)
        {
            _281 = true;
            break;
        }
        _281 = false;
        break;
    }
    if (_281)
    {
        discard_state = true;
    }
    discard_exit();
}


