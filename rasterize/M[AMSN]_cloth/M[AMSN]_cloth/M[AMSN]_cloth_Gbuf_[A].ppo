#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _137 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _138 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _139 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _145 = inversesqrt(dot(vec3(_137, _138, _139), vec3(_137, _138, _139)));
    float _152 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _153 = _152 * NORMAL.x;
    float _154 = _152 * NORMAL.y;
    float _155 = _152 * NORMAL.z;
    float _159 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _167;
    float _168;
    float _169;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _167 = (-0.0) - _153;
        _168 = (-0.0) - _154;
        _169 = (-0.0) - _155;
    }
    else
    {
        _167 = _153;
        _168 = _154;
        _169 = _155;
    }
    vec4 _189 = texture(sampler2D(M_AMSN_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _195 = _189.w;
    float _196 = _189.x * cbMtdParam._m0[9u].x;
    float _197 = _189.y * cbMtdParam._m0[9u].y;
    float _198 = _189.z * cbMtdParam._m0[9u].z;
    float _199 = _195 * TEXCOORD_1.z;
    vec4 _215 = texture(sampler2D(M_AMSN_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _218 = _215.x + cbMtdParam._m0[10u].x;
    vec4 _230 = texture(sampler2D(M_AMSN_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _234 = _230.z;
    float _238 = (_230.x * 2.0) + (-1.0);
    float _240 = (_230.y * 2.0) + (-1.0);
    float _241 = dot(vec2(_238, _240), vec2(_238, _240));
    float _449 = isnan(0.0) ? _241 : (isnan(_241) ? 0.0 : max(_241, 0.0));
    float _247 = sqrt(1.0 - (isnan(1.0) ? _449 : (isnan(_449) ? 1.0 : min(_449, 1.0))));
    float _250 = fma(_247, _167, fma(_240, _159 * TANGENT.x, (_145 * _137) * _238));
    float _253 = fma(_247, _168, fma(_240, _159 * TANGENT.y, (_145 * _138) * _238));
    float _256 = fma(_247, _169, fma(_240, _159 * TANGENT.z, (_145 * _139) * _238));
    float _260 = inversesqrt(dot(vec3(_250, _253, _256), vec3(_250, _253, _256)));
    float _460 = isnan(0.0) ? _199 : (isnan(_199) ? 0.0 : max(_199, 0.0));
    float _261 = isnan(1.0) ? _460 : (isnan(_460) ? 1.0 : min(_460, 1.0));
    float _471 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
    float _482 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _263 = isnan(1.0) ? _482 : (isnan(_482) ? 1.0 : min(_482, 1.0));
    float _493 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    float _264 = isnan(1.0) ? _493 : (isnan(_493) ? 1.0 : min(_493, 1.0));
    float _504 = isnan(0.0) ? _198 : (isnan(_198) ? 0.0 : max(_198, 0.0));
    float _265 = isnan(1.0) ? _504 : (isnan(_504) ? 1.0 : min(_504, 1.0));
    float _515 = isnan(0.0) ? _218 : (isnan(_218) ? 0.0 : max(_218, 0.0));
    uint _268 = uint(roundEven(NORMAL.w));
    vec4 _273 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _275 = _273.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _340 = (cbMatDynParam._m0[5u].x * TEXCOORD_9) + cbMatDynParam._m0[5u].y;
        float _526 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
        float _341 = isnan(1.0) ? _526 : (isnan(_526) ? 1.0 : min(_526, 1.0));
        float _345 = (cbMatDynParam._m0[5u].z * TEXCOORD_9) + cbMatDynParam._m0[5u].w;
        float _537 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _537 : (isnan(_537) ? 1.0 : min(_537, 1.0))) - _341)) + _341) < ((_275 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _374;
    uint _295;
    vec4 _300;
    float _307;
    float _308;
    float _309;
    float _315;
    vec4 _319;
    float _321;
    float _322;
    bool _333;
    for (;;)
    {
        _295 = _268 * 13u;
        _300 = cbInstanceData._m0[(_295 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _304 = (cbMtdParam._m0[0u].x * _263) * _300.x;
        float _305 = (cbMtdParam._m0[0u].y * _264) * _300.y;
        float _306 = (cbMtdParam._m0[0u].z * _265) * _300.z;
        float _548 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
        _307 = isnan(1.0) ? _548 : (isnan(_548) ? 1.0 : min(_548, 1.0));
        float _559 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
        _308 = isnan(1.0) ? _559 : (isnan(_559) ? 1.0 : min(_559, 1.0));
        float _570 = isnan(0.0) ? _306 : (isnan(_306) ? 0.0 : max(_306, 0.0));
        _309 = isnan(1.0) ? _570 : (isnan(_570) ? 1.0 : min(_570, 1.0));
        float _581 = isnan(0.0) ? _261 : (isnan(_261) ? 0.0 : max(_261, 0.0));
        _315 = cbInstanceData._m0[_295 + 6u].w * (isnan(1.0) ? _581 : (isnan(_581) ? 1.0 : min(_581, 1.0)));
        float _316 = _275 + (-0.5);
        _319 = cbMtdParam._m0[1u];
        _321 = _319.y * _316;
        _322 = _316 * 0.999000012874603271484375;
        _333 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_333)
        {
            if ((cbInstanceData._m0[_295 + 7u].x + _322) < 0.5)
            {
                _374 = true;
                break;
            }
        }
        if ((_300.w < 1.0) && ((_300.w + _322) < 0.5))
        {
            _374 = true;
            break;
        }
        if ((_321 + _195) < _319.x)
        {
            _374 = true;
            break;
        }
        _374 = false;
        break;
    }
    if (_374)
    {
        discard_state = true;
    }
    bool _400 = cbMtdParam._m0[1u].z != 0.0;
    float _401 = _400 ? _315 : 0.0;
    SV_Target.x = ((_250 * 0.5) * _260) + 0.500488758087158203125;
    SV_Target.y = ((_253 * 0.5) * _260) + 0.500488758087158203125;
    SV_Target.z = ((_256 * 0.5) * _260) + 0.500488758087158203125;
    SV_Target.w = _401;
    SV_Target_1.x = isnan(1.0) ? _515 : (isnan(_515) ? 1.0 : min(_515, 1.0));
    SV_Target_1.y = isnan(1.0) ? _471 : (isnan(_471) ? 1.0 : min(_471, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _400 ? _315 : TEXCOORD_1.w;
    SV_Target_2.x = _307;
    SV_Target_2.y = _308;
    SV_Target_2.z = _309;
    SV_Target_2.w = _400 ? _315 : (float(floatBitsToUint(cbInstanceData._m0[_295 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _401;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _401;
    discard_exit();
}


