#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _124 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _125 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _131 = inversesqrt(dot(vec3(_123, _124, _125), vec3(_123, _124, _125)));
    float _138 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _139 = _138 * NORMAL.x;
    float _140 = _138 * NORMAL.y;
    float _141 = _138 * NORMAL.z;
    float _145 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _153;
    float _154;
    float _155;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _153 = (-0.0) - _139;
        _154 = (-0.0) - _140;
        _155 = (-0.0) - _141;
    }
    else
    {
        _153 = _139;
        _154 = _140;
        _155 = _141;
    }
    vec4 _175 = texture(sampler2D(M_AMSN_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _182 = _175.x * cbMtdParam._m0[9u].x;
    float _183 = _175.y * cbMtdParam._m0[9u].y;
    float _184 = _175.z * cbMtdParam._m0[9u].z;
    float _185 = _175.w * TEXCOORD_1.z;
    float _204 = texture(sampler2D(M_AMSN_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w)).x + cbMtdParam._m0[10u].x;
    vec4 _216 = texture(sampler2D(M_AMSN_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _220 = _216.z;
    float _224 = (_216.x * 2.0) + (-1.0);
    float _226 = (_216.y * 2.0) + (-1.0);
    float _227 = dot(vec2(_224, _226), vec2(_224, _226));
    float _341 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _233 = sqrt(1.0 - (isnan(1.0) ? _341 : (isnan(_341) ? 1.0 : min(_341, 1.0))));
    float _236 = fma(_233, _153, fma(_226, _145 * TANGENT.x, (_131 * _123) * _224));
    float _239 = fma(_233, _154, fma(_226, _145 * TANGENT.y, (_131 * _124) * _224));
    float _242 = fma(_233, _155, fma(_226, _145 * TANGENT.z, (_131 * _125) * _224));
    float _246 = inversesqrt(dot(vec3(_236, _239, _242), vec3(_236, _239, _242)));
    float _352 = isnan(0.0) ? _185 : (isnan(_185) ? 0.0 : max(_185, 0.0));
    float _247 = isnan(1.0) ? _352 : (isnan(_352) ? 1.0 : min(_352, 1.0));
    float _363 = isnan(0.0) ? _220 : (isnan(_220) ? 0.0 : max(_220, 0.0));
    float _374 = isnan(0.0) ? _182 : (isnan(_182) ? 0.0 : max(_182, 0.0));
    float _385 = isnan(0.0) ? _183 : (isnan(_183) ? 0.0 : max(_183, 0.0));
    float _396 = isnan(0.0) ? _184 : (isnan(_184) ? 0.0 : max(_184, 0.0));
    float _407 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    uint _267 = uint(roundEven(NORMAL.w)) * 13u;
    uint _270 = (_267 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _276 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _374 : (isnan(_374) ? 1.0 : min(_374, 1.0)))) * cbInstanceData._m0[_270].x;
    float _277 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _385 : (isnan(_385) ? 1.0 : min(_385, 1.0)))) * cbInstanceData._m0[_270].y;
    float _278 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _396 : (isnan(_396) ? 1.0 : min(_396, 1.0)))) * cbInstanceData._m0[_270].z;
    float _418 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _429 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    float _440 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _451 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
    float _288 = cbInstanceData._m0[_267 + 6u].w * (isnan(1.0) ? _451 : (isnan(_451) ? 1.0 : min(_451, 1.0)));
    bool _313 = cbMtdParam._m0[1u].z != 0.0;
    float _314 = _313 ? _288 : 0.0;
    SV_Target.x = ((_236 * 0.5) * _246) + 0.500488758087158203125;
    SV_Target.y = ((_239 * 0.5) * _246) + 0.500488758087158203125;
    SV_Target.z = ((_242 * 0.5) * _246) + 0.500488758087158203125;
    SV_Target.w = _314;
    SV_Target_1.x = isnan(1.0) ? _407 : (isnan(_407) ? 1.0 : min(_407, 1.0));
    SV_Target_1.y = isnan(1.0) ? _363 : (isnan(_363) ? 1.0 : min(_363, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _313 ? _288 : TEXCOORD_1.w;
    SV_Target_2.x = isnan(1.0) ? _418 : (isnan(_418) ? 1.0 : min(_418, 1.0));
    SV_Target_2.y = isnan(1.0) ? _429 : (isnan(_429) ? 1.0 : min(_429, 1.0));
    SV_Target_2.z = isnan(1.0) ? _440 : (isnan(_440) ? 1.0 : min(_440, 1.0));
    SV_Target_2.w = _313 ? _288 : (float(floatBitsToUint(cbInstanceData._m0[_267 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _314;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _314;
}


