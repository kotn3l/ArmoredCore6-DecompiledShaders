#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D I_AMSN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D I_AMSN_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D I_AMSN_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _910;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _187 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _188 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _189 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _195 = inversesqrt(dot(vec3(_187, _188, _189), vec3(_187, _188, _189)));
    float _202 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _203 = _202 * NORMAL.x;
    float _204 = _202 * NORMAL.y;
    float _205 = _202 * NORMAL.z;
    float _209 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _217;
    float _218;
    float _219;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _217 = (-0.0) - _203;
        _218 = (-0.0) - _204;
        _219 = (-0.0) - _205;
    }
    else
    {
        _217 = _203;
        _218 = _204;
        _219 = _205;
    }
    float _263 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _273 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _263);
    float _274 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _263);
    float _275 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _263);
    vec4 _293 = texture(sampler2D(I_AMSN_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _299 = _293.w;
    float _300 = _293.x * cbMtdParam._m0[9u].x;
    float _301 = _293.y * cbMtdParam._m0[9u].y;
    float _302 = _293.z * cbMtdParam._m0[9u].z;
    vec4 _314 = texture(sampler2D(I_AMSN_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _320 = cbMtdParam._m0[11u].x + _314.x;
    vec4 _332 = texture(sampler2D(I_AMSN_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _336 = _332.z;
    float _340 = (_332.x * 2.0) + (-1.0);
    float _342 = (_332.y * 2.0) + (-1.0);
    float _343 = dot(vec2(_340, _342), vec2(_340, _342));
    float _3299 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    float _349 = sqrt(1.0 - (isnan(1.0) ? _3299 : (isnan(_3299) ? 1.0 : min(_3299, 1.0))));
    float _367 = cbMtdParam._m0[12u].x - cbMtdParam._m0[12u].w;
    float _369 = (sqrt(((_273 * _273) + (_274 * _274)) + (_275 * _275)) - cbMtdParam._m0[12u].w) / (isnan(0.0) ? _367 : (isnan(_367) ? 0.0 : max(_367, 0.0)));
    float _3315 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
    float _371 = 1.0 - (isnan(1.0) ? _3315 : (isnan(_3315) ? 1.0 : min(_3315, 1.0)));
    float _379 = abs((fract(cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3326 = isnan(0.0) ? _379 : (isnan(_379) ? 0.0 : max(_379, 0.0));
    float _380 = isnan(1.0) ? _3326 : (isnan(_3326) ? 1.0 : min(_3326, 1.0));
    float _390 = inversesqrt(dot(vec3(_217, _218, _219), vec3(_217, _218, _219)));
    float _397 = inversesqrt(dot(vec3(_273, _274, _275), vec3(_273, _274, _275)));
    float _398 = _397 * _273;
    float _399 = _397 * _274;
    float _400 = _397 * _275;
    float _404 = dot(vec4(_398, _399, _400, 0.0), vec4(_390 * _217, _390 * _218, _390 * _219, 0.0)) - (((_380 * _380) * cbMtdParam._m0[11u].w) * (3.0 - (_380 * 2.0)));
    float _3337 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
    float _411 = exp2(log2(1.0 - (isnan(1.0) ? _3337 : (isnan(_3337) ? 1.0 : min(_3337, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[12u].z : (isnan(cbMtdParam._m0[12u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[12u].z, 0.001000000047497451305389404296875))));
    float _414 = fma(_349, _217, fma(_342, _209 * TANGENT.x, (_195 * _187) * _340));
    float _417 = fma(_349, _218, fma(_342, _209 * TANGENT.y, (_195 * _188) * _340));
    float _420 = fma(_349, _219, fma(_342, _209 * TANGENT.z, (_195 * _189) * _340));
    float _424 = inversesqrt(dot(vec3(_414, _417, _420), vec3(_414, _417, _420)));
    float _425 = _424 * _414;
    float _426 = _424 * _417;
    float _427 = _424 * _420;
    float _3353 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _428 = isnan(1.0) ? _3353 : (isnan(_3353) ? 1.0 : min(_3353, 1.0));
    float _3364 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
    float _429 = isnan(1.0) ? _3364 : (isnan(_3364) ? 1.0 : min(_3364, 1.0));
    float _3375 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
    float _3386 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _3397 = isnan(0.0) ? _302 : (isnan(_302) ? 0.0 : max(_302, 0.0));
    float _3408 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
    float _433 = isnan(1.0) ? _3408 : (isnan(_3408) ? 1.0 : min(_3408, 1.0));
    float _449 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _455 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _456 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _477 = fma(_427, cbSceneParam._m0[5u].z, fma(_426, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _425));
    float _480 = fma(_427, cbSceneParam._m0[6u].z, fma(_426, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _425));
    float _483 = fma(_427, cbSceneParam._m0[7u].z, fma(_426, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _425));
    uint _496 = uint(roundEven(NORMAL.w)) * 13u;
    uint _497 = _496 + 9u;
    uint _498 = _497 + uint(cbMatDynParam._m0[0u].w);
    float _504 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3375 : (isnan(_3375) ? 1.0 : min(_3375, 1.0)))) * cbInstanceData._m0[_498].x;
    float _505 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3386 : (isnan(_3386) ? 1.0 : min(_3386, 1.0)))) * cbInstanceData._m0[_498].y;
    float _506 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3397 : (isnan(_3397) ? 1.0 : min(_3397, 1.0)))) * cbInstanceData._m0[_498].z;
    float _3419 = isnan(0.0) ? _504 : (isnan(_504) ? 0.0 : max(_504, 0.0));
    float _507 = isnan(1.0) ? _3419 : (isnan(_3419) ? 1.0 : min(_3419, 1.0));
    float _3430 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    float _508 = isnan(1.0) ? _3430 : (isnan(_3430) ? 1.0 : min(_3430, 1.0));
    float _3441 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _509 = isnan(1.0) ? _3441 : (isnan(_3441) ? 1.0 : min(_3441, 1.0));
    float _510 = 1.0 - _433;
    float _511 = _507 * _510;
    float _512 = _508 * _510;
    float _513 = _509 * _510;
    float _518 = (_507 + (-0.039999999105930328369140625)) * _433;
    float _519 = (_508 + (-0.039999999105930328369140625)) * _433;
    float _520 = (_509 + (-0.039999999105930328369140625)) * _433;
    float _521 = _518 + 0.039999999105930328369140625;
    float _523 = _519 + 0.039999999105930328369140625;
    float _524 = _520 + 0.039999999105930328369140625;
    vec4 _533 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _455, cbSceneParam._m0[86u].y * _456));
    float _536 = _533.x * TEXCOORD_1.w;
    float _537 = dot(vec3(_425, _426, _427), vec3(_398, _399, _400));
    float _540 = _537 * 2.0;
    float _544 = (_540 * _425) - _398;
    float _545 = (_540 * _426) - _399;
    float _546 = (_540 * _427) - _400;
    float _550 = abs(dot(vec3(_398, _399, _400), vec3(_425, _426, _427)));
    float _3452 = isnan(0.0) ? _550 : (isnan(_550) ? 0.0 : max(_550, 0.0));
    float _552 = sqrt(_429);
    float _564 = exp2((_552 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3452 : (isnan(_3452) ? 1.0 : min(_3452, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_552 * 3.0));
    float _570 = (1.0 - _564) * ((_552 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _571 = _564 * _552;
    float _599 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _603 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _607 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _909;
    float _911;
    float _912;
    float _913;
    float _914;
    float _915;
    float _916;
    float _917;
    float _918;
    float _919;
    float _920;
    float _921;
    float _922;
    float _923;
    float _924;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _634 = fma(_607, cbModelParam._m0[26u].z, fma(_603, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _599));
        float _638 = fma(_607, cbModelParam._m0[27u].z, fma(_603, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _599));
        float _642 = fma(_607, cbModelParam._m0[28u].z, fma(_603, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _599));
        float _667 = _599 + _425;
        float _668 = _603 + _426;
        float _669 = _607 + _427;
        float _679 = fma(_669, cbModelParam._m0[26u].z, fma(_668, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _667)) - _634;
        float _680 = fma(_669, cbModelParam._m0[27u].z, fma(_668, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _667)) - _638;
        float _681 = fma(_669, cbModelParam._m0[28u].z, fma(_668, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _667)) - _642;
        float _685 = inversesqrt(dot(vec3(_679, _680, _681), vec3(_679, _680, _681)));
        float _698 = ((_685 * _679) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_634 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _699 = ((_685 * _680) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_638 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _700 = ((_685 * _681) / cbModelParam._m0[34u].z) + ((((((_642 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _703 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_698, _699, _700), 0.0);
        vec4 _710 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_698, _699, _700), 0.0);
        vec4 _717 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_698, _699, _700), 0.0);
        vec4 _724 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_698, _699, _700), 0.0);
        float _737 = exp2((_703.w + (-0.5)) * 20.0) * 2.0;
        float _738 = _737 * (_703.x + (-0.5));
        float _739 = _737 * (_703.y + (-0.5));
        float _740 = _737 * (_703.z + (-0.5));
        float _747 = exp2((_710.w + (-0.5)) * 20.0) * 2.0;
        float _748 = _747 * (_710.x + (-0.5));
        float _749 = _747 * (_710.y + (-0.5));
        float _750 = _747 * (_710.z + (-0.5));
        float _757 = exp2((_717.w + (-0.5)) * 20.0) * 2.0;
        float _758 = _757 * (_717.x + (-0.5));
        float _759 = _757 * (_717.y + (-0.5));
        float _760 = _757 * (_717.z + (-0.5));
        float _767 = exp2((_724.w + (-0.5)) * 20.0) * 2.0;
        float _768 = _767 * (_724.x + (-0.5));
        float _769 = _767 * (_724.y + (-0.5));
        float _770 = _767 * (_724.z + (-0.5));
        float _771 = isnan(0.0) ? _768 : (isnan(_768) ? 0.0 : max(_768, 0.0));
        float _772 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
        float _773 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
        float _774 = _738 * 0.5;
        float _775 = _748 * 0.5;
        float _776 = _758 * 0.5;
        float _777 = dot(vec3(_774, _775, _776), vec3(_774, _775, _776));
        float _782 = (_777 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_777);
        float _791 = (dot(vec3(_425, _426, _427), vec3(_782 * _774, _782 * _775, _782 * _776)) + 1.0) * 0.5;
        float _3478 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
        float _801 = sqrt(((_775 * _775) + (_774 * _774)) + (_776 * _776)) / (_771 + 9.9999997473787516355514526367188e-06);
        float _3489 = isnan(0.0) ? _801 : (isnan(_801) ? 0.0 : max(_801, 0.0));
        float _802 = isnan(1.0) ? _3489 : (isnan(_3489) ? 1.0 : min(_3489, 1.0));
        float _803 = _802 * 2.0;
        float _807 = (1.0 - _802) / (_802 + 1.0);
        float _3500 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
        float _808 = isnan(1.0) ? _3500 : (isnan(_3500) ? 1.0 : min(_3500, 1.0));
        float _817 = ((((1.0 - _808) * (_803 + 2.0)) * exp2(log2(isnan(1.0) ? _3478 : (isnan(_3478) ? 1.0 : min(_3478, 1.0))) * (_803 + 1.0))) + _808) * _771;
        float _818 = _739 * 0.5;
        float _819 = _749 * 0.5;
        float _820 = _759 * 0.5;
        float _821 = dot(vec3(_818, _819, _820), vec3(_818, _819, _820));
        float _826 = (_821 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_821);
        float _834 = (dot(vec3(_425, _426, _427), vec3(_826 * _818, _826 * _819, _826 * _820)) + 1.0) * 0.5;
        float _3511 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
        float _843 = sqrt(((_819 * _819) + (_818 * _818)) + (_820 * _820)) / (_772 + 9.9999997473787516355514526367188e-06);
        float _3522 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
        float _844 = isnan(1.0) ? _3522 : (isnan(_3522) ? 1.0 : min(_3522, 1.0));
        float _845 = _844 * 2.0;
        float _849 = (1.0 - _844) / (_844 + 1.0);
        float _3533 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
        float _850 = isnan(1.0) ? _3533 : (isnan(_3533) ? 1.0 : min(_3533, 1.0));
        float _859 = ((((1.0 - _850) * (_845 + 2.0)) * exp2(log2(isnan(1.0) ? _3511 : (isnan(_3511) ? 1.0 : min(_3511, 1.0))) * (_845 + 1.0))) + _850) * _772;
        float _860 = _740 * 0.5;
        float _861 = _750 * 0.5;
        float _862 = _760 * 0.5;
        float _863 = dot(vec3(_860, _861, _862), vec3(_860, _861, _862));
        float _868 = (_863 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_863);
        float _876 = (dot(vec3(_425, _426, _427), vec3(_868 * _860, _868 * _861, _868 * _862)) + 1.0) * 0.5;
        float _3544 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
        float _885 = sqrt(((_861 * _861) + (_860 * _860)) + (_862 * _862)) / (_773 + 9.9999997473787516355514526367188e-06);
        float _3555 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
        float _886 = isnan(1.0) ? _3555 : (isnan(_3555) ? 1.0 : min(_3555, 1.0));
        float _887 = _886 * 2.0;
        float _891 = (1.0 - _886) / (_886 + 1.0);
        float _3566 = isnan(0.0) ? _891 : (isnan(_891) ? 0.0 : max(_891, 0.0));
        float _892 = isnan(1.0) ? _3566 : (isnan(_3566) ? 1.0 : min(_3566, 1.0));
        float _901 = ((((1.0 - _892) * (_887 + 2.0)) * exp2(log2(isnan(1.0) ? _3544 : (isnan(_3544) ? 1.0 : min(_3544, 1.0))) * (_887 + 1.0))) + _892) * _773;
        _909 = _740;
        _911 = _739;
        _912 = _738;
        _913 = _750;
        _914 = _749;
        _915 = _748;
        _916 = _760;
        _917 = _759;
        _918 = _758;
        _919 = _773;
        _920 = _772;
        _921 = _771;
        _922 = cbModelParam._m0[36u].z * (isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0)));
        _923 = cbModelParam._m0[36u].z * (isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0)));
        _924 = cbModelParam._m0[36u].z * (isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0)));
    }
    else
    {
        _909 = _910;
        _911 = _910;
        _912 = _910;
        _913 = _910;
        _914 = _910;
        _915 = _910;
        _916 = _910;
        _917 = _910;
        _918 = _910;
        _919 = _910;
        _920 = _910;
        _921 = _910;
        _922 = 0.0;
        _923 = 0.0;
        _924 = 0.0;
    }
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _950 = fma(_607, cbModelParam._m0[30u].z, fma(_603, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _599));
        float _954 = fma(_607, cbModelParam._m0[31u].z, fma(_603, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _599));
        float _958 = fma(_607, cbModelParam._m0[32u].z, fma(_603, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _599));
        float _981 = _599 + _425;
        float _982 = _603 + _426;
        float _983 = _607 + _427;
        float _993 = fma(_983, cbModelParam._m0[30u].z, fma(_982, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _981)) - _950;
        float _994 = fma(_983, cbModelParam._m0[31u].z, fma(_982, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _981)) - _954;
        float _995 = fma(_983, cbModelParam._m0[32u].z, fma(_982, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _981)) - _958;
        float _999 = inversesqrt(dot(vec3(_993, _994, _995), vec3(_993, _994, _995)));
        float _1012 = ((_999 * _993) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_950 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1013 = ((_999 * _994) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_954 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1014 = ((_999 * _995) / cbModelParam._m0[35u].z) + ((((((_958 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1016 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1012, _1013, _1014), 0.0);
        vec4 _1023 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1012, _1013, _1014), 0.0);
        vec4 _1030 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1012, _1013, _1014), 0.0);
        vec4 _1037 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1012, _1013, _1014), 0.0);
        float _1049 = exp2((_1016.w + (-0.5)) * 20.0) * 2.0;
        float _1050 = _1049 * (_1016.x + (-0.5));
        float _1051 = _1049 * (_1016.y + (-0.5));
        float _1052 = _1049 * (_1016.z + (-0.5));
        float _1059 = exp2((_1023.w + (-0.5)) * 20.0) * 2.0;
        float _1060 = _1059 * (_1023.x + (-0.5));
        float _1061 = _1059 * (_1023.y + (-0.5));
        float _1062 = _1059 * (_1023.z + (-0.5));
        float _1069 = exp2((_1030.w + (-0.5)) * 20.0) * 2.0;
        float _1070 = _1069 * (_1030.x + (-0.5));
        float _1071 = _1069 * (_1030.y + (-0.5));
        float _1072 = _1069 * (_1030.z + (-0.5));
        float _1079 = exp2((_1037.w + (-0.5)) * 20.0) * 2.0;
        float _1080 = _1079 * (_1037.x + (-0.5));
        float _1081 = _1079 * (_1037.y + (-0.5));
        float _1082 = _1079 * (_1037.z + (-0.5));
        float _1083 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
        float _1084 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1085 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
        float _1086 = _1050 * 0.5;
        float _1087 = _1060 * 0.5;
        float _1088 = _1070 * 0.5;
        float _1089 = dot(vec3(_1086, _1087, _1088), vec3(_1086, _1087, _1088));
        float _1094 = (_1089 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1089);
        float _1102 = (dot(vec3(_425, _426, _427), vec3(_1094 * _1086, _1094 * _1087, _1094 * _1088)) + 1.0) * 0.5;
        float _3607 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1111 = sqrt(((_1087 * _1087) + (_1086 * _1086)) + (_1088 * _1088)) / (_1083 + 9.9999997473787516355514526367188e-06);
        float _3618 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
        float _1112 = isnan(1.0) ? _3618 : (isnan(_3618) ? 1.0 : min(_3618, 1.0));
        float _1113 = _1112 * 2.0;
        float _1117 = (1.0 - _1112) / (_1112 + 1.0);
        float _3629 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
        float _1118 = isnan(1.0) ? _3629 : (isnan(_3629) ? 1.0 : min(_3629, 1.0));
        float _1127 = ((((1.0 - _1118) * (_1113 + 2.0)) * exp2(log2(isnan(1.0) ? _3607 : (isnan(_3607) ? 1.0 : min(_3607, 1.0))) * (_1113 + 1.0))) + _1118) * _1083;
        float _1128 = _1051 * 0.5;
        float _1129 = _1061 * 0.5;
        float _1130 = _1071 * 0.5;
        float _1131 = dot(vec3(_1128, _1129, _1130), vec3(_1128, _1129, _1130));
        float _1136 = (_1131 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1131);
        float _1144 = (dot(vec3(_425, _426, _427), vec3(_1136 * _1128, _1136 * _1129, _1136 * _1130)) + 1.0) * 0.5;
        float _3640 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1153 = sqrt(((_1129 * _1129) + (_1128 * _1128)) + (_1130 * _1130)) / (_1084 + 9.9999997473787516355514526367188e-06);
        float _3651 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1154 = isnan(1.0) ? _3651 : (isnan(_3651) ? 1.0 : min(_3651, 1.0));
        float _1155 = _1154 * 2.0;
        float _1159 = (1.0 - _1154) / (_1154 + 1.0);
        float _3662 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1160 = isnan(1.0) ? _3662 : (isnan(_3662) ? 1.0 : min(_3662, 1.0));
        float _1169 = ((((1.0 - _1160) * (_1155 + 2.0)) * exp2(log2(isnan(1.0) ? _3640 : (isnan(_3640) ? 1.0 : min(_3640, 1.0))) * (_1155 + 1.0))) + _1160) * _1084;
        float _1170 = _1052 * 0.5;
        float _1171 = _1062 * 0.5;
        float _1172 = _1072 * 0.5;
        float _1173 = dot(vec3(_1170, _1171, _1172), vec3(_1170, _1171, _1172));
        float _1178 = (_1173 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1173);
        float _1186 = (dot(vec3(_425, _426, _427), vec3(_1178 * _1170, _1178 * _1171, _1178 * _1172)) + 1.0) * 0.5;
        float _3673 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1195 = sqrt(((_1171 * _1171) + (_1170 * _1170)) + (_1172 * _1172)) / (_1085 + 9.9999997473787516355514526367188e-06);
        float _3684 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
        float _1196 = isnan(1.0) ? _3684 : (isnan(_3684) ? 1.0 : min(_3684, 1.0));
        float _1197 = _1196 * 2.0;
        float _1201 = (1.0 - _1196) / (_1196 + 1.0);
        float _3695 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1202 = isnan(1.0) ? _3695 : (isnan(_3695) ? 1.0 : min(_3695, 1.0));
        float _1211 = ((((1.0 - _1202) * (_1197 + 2.0)) * exp2(log2(isnan(1.0) ? _3673 : (isnan(_3673) ? 1.0 : min(_3673, 1.0))) * (_1197 + 1.0))) + _1202) * _1085;
        _1219 = _1052;
        _1220 = _1051;
        _1221 = _1050;
        _1222 = _1062;
        _1223 = _1061;
        _1224 = _1060;
        _1225 = _1072;
        _1226 = _1071;
        _1227 = _1070;
        _1228 = _1085;
        _1229 = _1084;
        _1230 = _1083;
        _1231 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0)));
        _1232 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0)));
        _1233 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0)));
    }
    else
    {
        _1219 = _910;
        _1220 = _910;
        _1221 = _910;
        _1222 = _910;
        _1223 = _910;
        _1224 = _910;
        _1225 = _910;
        _1226 = _910;
        _1227 = _910;
        _1228 = _910;
        _1229 = _910;
        _1230 = _910;
        _1231 = 0.0;
        _1232 = 0.0;
        _1233 = 0.0;
    }
    float _1243 = (cbModelParam._m0[1u].x * (_1231 - _922)) + _922;
    float _1244 = (cbModelParam._m0[1u].x * (_1232 - _923)) + _923;
    float _1245 = (cbModelParam._m0[1u].x * (_1233 - _924)) + _924;
    float _1266 = fma(_1245, cbSceneParam._m0[89u].z, fma(_1244, cbSceneParam._m0[89u].y, _1243 * cbSceneParam._m0[89u].x));
    float _1269 = fma(_1245, cbSceneParam._m0[90u].z, fma(_1244, cbSceneParam._m0[90u].y, _1243 * cbSceneParam._m0[90u].x));
    float _1272 = fma(_1245, cbSceneParam._m0[91u].z, fma(_1244, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1243));
    float _1287 = _544 * 0.5;
    float _1288 = _545 * 0.5;
    float _1289 = _546 * 0.5;
    float _1290 = dot(vec4(_1287, _1288, _1289, 1.0), vec4(_1221, _1224, _1227, _1230));
    float _1293 = dot(vec4(_1287, _1288, _1289, 1.0), vec4(_1220, _1223, _1226, _1229));
    float _1296 = dot(vec4(_1287, _1288, _1289, 1.0), vec4(_1219, _1222, _1225, _1228));
    float _1330;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1303 = dot(vec4(_1287, _1288, _1289, 1.0), vec4(_909, _913, _916, _919));
        float _1307 = dot(vec4(_1287, _1288, _1289, 1.0), vec4(_911, _914, _917, _920));
        float _1311 = dot(vec4(_1287, _1288, _1289, 1.0), vec4(_912, _915, _918, _921));
        float _1318 = dot(vec4(cbModelParam._m0[39u]), vec4(_1287, _1288, _1289, 1.0));
        _1330 = dot(vec3(isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0)), isnan(0.0) ? _1307 : (isnan(_1307) ? 0.0 : max(_1307, 0.0)), isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1318) ? 0.0 : (isnan(0.0) ? _1318 : max(0.0, _1318))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1330 = 1.0;
    }
    float _1341;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1332 = dot(vec4(cbModelParam._m0[40u]), vec4(_1287, _1288, _1289, 1.0));
        _1341 = dot(vec3(isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0)), isnan(0.0) ? _1293 : (isnan(_1293) ? 0.0 : max(_1293, 0.0)), isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1332) ? 0.0 : (isnan(0.0) ? _1332 : max(0.0, _1332))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1341 = 1.0;
    }
    float _1345 = (_1341 * cbModelParam._m0[1u].x) + (_1330 * (1.0 - cbModelParam._m0[1u].x));
    float _1355 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _429);
    float _1356 = isnan(_1355) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1355 : min(cbModelParam._m0[25u].z, _1355));
    float _1438;
    float _1440;
    float _1442;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1405 = fma(_607, cbModelParam._m0[13u].z, fma(_603, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _599)) + cbModelParam._m0[13u].w;
        float _1409 = fma(_607, cbModelParam._m0[14u].z, fma(_603, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _599)) + cbModelParam._m0[14u].w;
        float _1413 = fma(_607, cbModelParam._m0[15u].z, fma(_603, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _599)) + cbModelParam._m0[15u].w;
        float _1416 = fma(_546, cbModelParam._m0[13u].z, fma(_545, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _544));
        float _1419 = fma(_546, cbModelParam._m0[14u].z, fma(_545, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _544));
        float _1422 = fma(_546, cbModelParam._m0[15u].z, fma(_545, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _544));
        float _1450;
        if (_1416 > 0.0)
        {
            _1450 = abs((1.0 - _1405) / _1416);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1416 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1405 + 1.0) / _1416);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1450 = frontier_phi_16_14_ladder;
        }
        float _1677;
        if (_1419 > 0.0)
        {
            _1677 = abs((1.0 - _1409) / _1419);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1419 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1409 + 1.0) / _1419);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1677 = frontier_phi_25_21_ladder;
        }
        float _1934;
        if (_1422 > 0.0)
        {
            _1934 = abs((1.0 - _1413) / _1422);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1422 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1413 + 1.0) / _1422);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1934 = frontier_phi_37_32_ladder;
        }
        float _1936 = isnan(_1677) ? _1450 : (isnan(_1450) ? _1677 : min(_1450, _1677));
        float _1937 = isnan(_1934) ? _1936 : (isnan(_1936) ? _1934 : min(_1936, _1934));
        float _1941 = (_1937 * _1416) + _1405;
        float _1942 = (_1937 * _1419) + _1409;
        float _1943 = (_1937 * _1422) + _1413;
        float _1944 = _1937 * 9.9999997473787516355514526367188e-05;
        float _1946 = (-1.0) - _1944;
        float _1948 = _1944 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1943 > _1948) || ((_1943 < _1946) || ((_1942 > _1948) || ((_1942 < _1946) || ((_1941 < _1946) || (_1941 > _1948))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2071 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1943, cbModelParam._m0[9u].z, fma(_1942, cbModelParam._m0[9u].y, _1941 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1943, cbModelParam._m0[10u].z, fma(_1942, cbModelParam._m0[10u].y, _1941 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1943, cbModelParam._m0[11u].z, fma(_1942, cbModelParam._m0[11u].y, _1941 * cbModelParam._m0[11u].x))), _1356);
            frontier_phi_15_37_ladder = _2071.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2071.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2071.x * cbModelParam._m0[1u].y;
        }
        _1438 = frontier_phi_15_37_ladder_2;
        _1440 = frontier_phi_15_37_ladder_1;
        _1442 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1426 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_544, _545, _546), _1356);
        _1438 = _1426.x * cbModelParam._m0[1u].y;
        _1440 = _1426.y * cbModelParam._m0[1u].y;
        _1442 = _1426.z * cbModelParam._m0[1u].y;
    }
    float _1446 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _429);
    float _1447 = isnan(_1446) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1446 : min(cbModelParam._m0[25u].w, _1446));
    float _1539;
    float _1541;
    float _1543;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1503 = fma(_607, cbModelParam._m0[21u].z, fma(_603, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _599)) + cbModelParam._m0[21u].w;
        float _1507 = fma(_607, cbModelParam._m0[22u].z, fma(_603, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _599)) + cbModelParam._m0[22u].w;
        float _1511 = fma(_607, cbModelParam._m0[23u].z, fma(_603, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _599)) + cbModelParam._m0[23u].w;
        float _1514 = fma(_546, cbModelParam._m0[21u].z, fma(_545, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _544));
        float _1517 = fma(_546, cbModelParam._m0[22u].z, fma(_545, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _544));
        float _1520 = fma(_546, cbModelParam._m0[23u].z, fma(_545, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _544));
        float _1682;
        if (_1514 > 0.0)
        {
            _1682 = abs((1.0 - _1503) / _1514);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1514 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1503 + 1.0) / _1514);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1682 = frontier_phi_27_23_ladder;
        }
        float _1961;
        if (_1517 > 0.0)
        {
            _1961 = abs((1.0 - _1507) / _1517);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1517 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1507 + 1.0) / _1517);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1961 = frontier_phi_39_34_ladder;
        }
        float _2174;
        if (_1520 > 0.0)
        {
            _2174 = abs((1.0 - _1511) / _1520);
        }
        else
        {
            float frontier_phi_48_45_ladder;
            if (_1520 < 0.0)
            {
                frontier_phi_48_45_ladder = abs((_1511 + 1.0) / _1520);
            }
            else
            {
                frontier_phi_48_45_ladder = 5000.0;
            }
            _2174 = frontier_phi_48_45_ladder;
        }
        float _2176 = isnan(_1961) ? _1682 : (isnan(_1682) ? _1961 : min(_1682, _1961));
        float _2177 = isnan(_2174) ? _2176 : (isnan(_2176) ? _2174 : min(_2176, _2174));
        float _2181 = (_2177 * _1514) + _1503;
        float _2182 = (_2177 * _1517) + _1507;
        float _2183 = (_2177 * _1520) + _1511;
        float _2184 = _2177 * 9.9999997473787516355514526367188e-05;
        float _2185 = (-1.0) - _2184;
        float _2187 = _2184 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2183 > _2187) || ((_2183 < _2185) || ((_2182 > _2187) || ((_2182 < _2185) || ((_2181 < _2185) || (_2181 > _2187))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2411 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2183, cbModelParam._m0[17u].z, fma(_2182, cbModelParam._m0[17u].y, _2181 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2183, cbModelParam._m0[18u].z, fma(_2182, cbModelParam._m0[18u].y, _2181 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2183, cbModelParam._m0[19u].z, fma(_2182, cbModelParam._m0[19u].y, _2181 * cbModelParam._m0[19u].x))), _1447);
            frontier_phi_24_48_ladder = _2411.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2411.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2411.x * cbModelParam._m0[1u].z;
        }
        _1539 = frontier_phi_24_48_ladder_2;
        _1541 = frontier_phi_24_48_ladder_1;
        _1543 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1523 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_544, _545, _546), _1447);
        _1539 = _1523.x * cbModelParam._m0[1u].z;
        _1541 = _1523.y * cbModelParam._m0[1u].z;
        _1543 = _1523.z * cbModelParam._m0[1u].z;
    }
    float _1556 = (((_570 * _521) + _571) * _536) * ((cbModelParam._m0[1u].w * (_1539 - _1438)) + _1438);
    float _1558 = (((_570 * _523) + _571) * _536) * ((cbModelParam._m0[1u].w * (_1541 - _1440)) + _1440);
    float _1560 = (((_570 * _524) + _571) * _536) * ((cbModelParam._m0[1u].w * (_1543 - _1442)) + _1442);
    float _1563 = fma(_1560, cbSceneParam._m0[89u].z, fma(_1558, cbSceneParam._m0[89u].y, _1556 * cbSceneParam._m0[89u].x));
    float _1566 = fma(_1560, cbSceneParam._m0[90u].z, fma(_1558, cbSceneParam._m0[90u].y, _1556 * cbSceneParam._m0[90u].x));
    float _1569 = fma(_1560, cbSceneParam._m0[91u].z, fma(_1558, cbSceneParam._m0[91u].y, _1556 * cbSceneParam._m0[91u].x));
    vec4 _1577 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_455, _456));
    float _1579 = _1577.w;
    float _1591 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1579);
    float _1592 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1579);
    float _1593 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1579);
    uvec4 _1597 = floatBitsToUint(cbInstanceData._m0[_496 + 5u]);
    uint _1599 = _1597.x * 14u;
    uint _1600 = _1599 + 13u;
    float _1607 = _536 + (-1.0);
    float _1612 = (cbLight._m0[_1600].x * _1607) + 1.0;
    float _1613 = (cbLight._m0[_1600].y * _1607) + 1.0;
    float _1614 = (cbLight._m0[_1600].z * _1607) + 1.0;
    float _1615 = (cbLight._m0[_1600].w * _1607) + 1.0;
    uint _1616 = _1599 + 5u;
    float _1622 = isnan(1.0) ? _1613 : (isnan(_1613) ? 1.0 : min(_1613, 1.0));
    uint _1626 = _1599 + 4u;
    float _1636 = isnan(1.0) ? _1612 : (isnan(_1612) ? 1.0 : min(_1612, 1.0));
    uint _1640 = _1599 | 1u;
    float _1651 = dot(vec3(cbLight._m0[_1599].xyz), vec3(_425, _426, _427));
    float _1654 = dot(vec3(cbLight._m0[_1640].xyz), vec3(_425, _426, _427));
    float _3831 = isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0));
    float _3842 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
    float _1659 = (isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0))) * 0.3183098733425140380859375;
    float _1661 = (isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0))) * 0.3183098733425140380859375;
    float _1668 = ((cbLight._m0[_1616].x * _1622) * _1661) + (((cbLight._m0[_1626].x * _1591) * _1636) * _1659);
    float _1669 = ((_1622 * cbLight._m0[_1616].y) * _1661) + (((cbLight._m0[_1626].y * _1592) * _1636) * _1659);
    float _1670 = ((_1622 * cbLight._m0[_1616].z) * _1661) + (((cbLight._m0[_1626].z * _1593) * _1636) * _1659);
    uvec4 _1674 = floatBitsToUint(cbLight._m0[_1599 + 12u]);
    bool _1676 = _1674.x == 0u;
    float _1687;
    float _1689;
    float _1691;
    if (_1676)
    {
        _1687 = _1668;
        _1689 = _1669;
        _1691 = _1670;
    }
    else
    {
        uint _1695 = _1599 + 6u;
        float _1711 = (dot(vec3(cbLight._m0[_1599 + 2u].xyz), vec3(_425, _426, _427)) * 0.5) + 0.5;
        float _1712 = _1711 * _1711;
        float _3853 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
        float _1713 = isnan(1.0) ? _3853 : (isnan(_3853) ? 1.0 : min(_3853, 1.0));
        float _1714 = isnan(1.0) ? _1614 : (isnan(_1614) ? 1.0 : min(_1614, 1.0));
        _1687 = (((cbLight._m0[_1695].x * 0.3183098733425140380859375) * _1713) * _1714) + _1668;
        _1689 = (((cbLight._m0[_1695].y * 0.3183098733425140380859375) * _1713) * _1714) + _1669;
        _1691 = (((cbLight._m0[_1695].z * 0.3183098733425140380859375) * _1713) * _1714) + _1670;
    }
    bool _1694 = _1674.y == 0u;
    float _1732;
    float _1734;
    float _1736;
    if (_1694)
    {
        _1732 = _1687;
        _1734 = _1689;
        _1736 = _1691;
    }
    else
    {
        uint _1905 = _1599 + 7u;
        float _1921 = (dot(vec3(cbLight._m0[_1599 + 3u].xyz), vec3(_425, _426, _427)) * 0.5) + 0.5;
        float _1922 = _1921 * _1921;
        float _3869 = isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0));
        float _1923 = isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0));
        float _1924 = isnan(1.0) ? _1615 : (isnan(_1615) ? 1.0 : min(_1615, 1.0));
        _1732 = (((cbLight._m0[_1905].x * 0.3183098733425140380859375) * _1923) * _1924) + _1687;
        _1734 = (((cbLight._m0[_1905].y * 0.3183098733425140380859375) * _1923) * _1924) + _1689;
        _1736 = (((cbLight._m0[_1905].z * 0.3183098733425140380859375) * _1923) * _1924) + _1691;
    }
    uint _1739 = _1599 + 8u;
    float _1752 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1599].w)) * _429) * 0.949999988079071044921875);
    float _1753 = _1752 * _1752;
    float _1754 = cbLight._m0[_1599].x + _398;
    float _1755 = cbLight._m0[_1599].y + _399;
    float _1756 = cbLight._m0[_1599].z + _400;
    float _1760 = inversesqrt(dot(vec3(_1754, _1755, _1756), vec3(_1754, _1755, _1756)));
    float _1761 = _1760 * _1754;
    float _1762 = _1760 * _1755;
    float _1763 = _1760 * _1756;
    float _1764 = dot(vec3(_425, _426, _427), vec3(cbLight._m0[_1599].xyz));
    float _3885 = isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0));
    float _1767 = isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0));
    float _3896 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _1768 = isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0));
    float _1769 = dot(vec3(_425, _426, _427), vec3(_1761, _1762, _1763));
    float _3907 = isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0));
    float _1772 = isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0));
    float _1773 = dot(vec3(cbLight._m0[_1599].xyz), vec3(_1761, _1762, _1763));
    float _3918 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
    float _1777 = _1753 * _1753;
    float _1781 = ((_1772 * _1772) * (_1777 + (-1.0))) + 1.0;
    float _1789 = exp2(log2(1.0 - (isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0)))) * 5.0);
    float _1790 = 0.959999978542327880859375 - _518;
    float _1792 = 0.959999978542327880859375 - _519;
    float _1793 = 0.959999978542327880859375 - _520;
    float _1800 = 1.0 - _1753;
    float _1811 = (0.5 / (((_1768 * ((_1767 * _1800) + _1753)) + 9.9999999392252902907785028219223e-09) + (((_1768 * _1800) + _1753) * _1767))) * _1767;
    float _3929 = isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0));
    float _1813 = (isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0))) * (_1777 / ((_1781 * _1781) * 3.141590118408203125));
    uint _1827 = _1599 + 9u;
    float _1838 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1640].w)) * _429) * 0.949999988079071044921875);
    float _1839 = _1838 * _1838;
    float _1840 = cbLight._m0[_1640].x + _398;
    float _1841 = cbLight._m0[_1640].y + _399;
    float _1842 = cbLight._m0[_1640].z + _400;
    float _1846 = inversesqrt(dot(vec3(_1840, _1841, _1842), vec3(_1840, _1841, _1842)));
    float _1847 = _1846 * _1840;
    float _1848 = _1846 * _1841;
    float _1849 = _1846 * _1842;
    float _1850 = dot(vec3(_425, _426, _427), vec3(cbLight._m0[_1640].xyz));
    float _3940 = isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0));
    float _1853 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
    float _1854 = dot(vec3(_425, _426, _427), vec3(_1847, _1848, _1849));
    float _3951 = isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0));
    float _1857 = isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0));
    float _1858 = dot(vec3(cbLight._m0[_1640].xyz), vec3(_1847, _1848, _1849));
    float _3962 = isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0));
    float _1862 = _1839 * _1839;
    float _1866 = ((_1857 * _1857) * (_1862 + (-1.0))) + 1.0;
    float _1873 = exp2(log2(1.0 - (isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0)))) * 5.0);
    float _1880 = 1.0 - _1839;
    float _1890 = (0.5 / (((_1768 * ((_1853 * _1880) + _1839)) + 9.9999999392252902907785028219223e-09) + (((_1768 * _1880) + _1839) * _1853))) * _1853;
    float _3973 = isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0));
    float _1892 = (isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0))) * (_1862 / ((_1866 * _1866) * 3.141590118408203125));
    float _1902 = (((((_1873 * _1790) + _521) * cbLight._m0[_1827].x) * _1892) * _1622) + ((((cbLight._m0[_1739].x * _1591) * ((_1789 * _1790) + _521)) * _1813) * _1636);
    float _1903 = (((((_1873 * _1792) + _523) * cbLight._m0[_1827].y) * _1892) * _1622) + ((((cbLight._m0[_1739].y * _1592) * ((_1789 * _1792) + _523)) * _1813) * _1636);
    float _1904 = (((((_1873 * _1793) + _524) * cbLight._m0[_1827].z) * _1892) * _1622) + ((((cbLight._m0[_1739].z * _1593) * ((_1789 * _1793) + _524)) * _1813) * _1636);
    float _1966;
    float _1968;
    float _1970;
    if (_1676)
    {
        _1966 = _1902;
        _1968 = _1903;
        _1970 = _1904;
    }
    else
    {
        uint _1972 = _1599 + 2u;
        uint _1976 = _1599 + 10u;
        float _1990 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1972].w)) * _429) * 0.949999988079071044921875);
        float _1991 = _1990 * _1990;
        float _1992 = cbLight._m0[_1972].x + _398;
        float _1993 = cbLight._m0[_1972].y + _399;
        float _1994 = cbLight._m0[_1972].z + _400;
        float _1998 = inversesqrt(dot(vec3(_1992, _1993, _1994), vec3(_1992, _1993, _1994)));
        float _1999 = _1998 * _1992;
        float _2000 = _1998 * _1993;
        float _2001 = _1998 * _1994;
        float _2002 = dot(vec3(_425, _426, _427), vec3(cbLight._m0[_1972].xyz));
        float _3984 = isnan(0.0) ? _2002 : (isnan(_2002) ? 0.0 : max(_2002, 0.0));
        float _2005 = isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0));
        float _2006 = dot(vec3(_425, _426, _427), vec3(_1999, _2000, _2001));
        float _3995 = isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0));
        float _2009 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
        float _2010 = dot(vec3(cbLight._m0[_1972].xyz), vec3(_1999, _2000, _2001));
        float _4006 = isnan(0.0) ? _2010 : (isnan(_2010) ? 0.0 : max(_2010, 0.0));
        float _2014 = _1991 * _1991;
        float _2018 = ((_2009 * _2009) * (_2014 + (-1.0))) + 1.0;
        float _2025 = exp2(log2(1.0 - (isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0)))) * 5.0);
        float _2032 = 1.0 - _1991;
        float _2042 = (0.5 / (((_1768 * ((_2005 * _2032) + _1991)) + 9.9999999392252902907785028219223e-09) + (((_1768 * _2032) + _1991) * _2005))) * _2005;
        float _4017 = isnan(0.0) ? _2042 : (isnan(_2042) ? 0.0 : max(_2042, 0.0));
        float _2044 = (isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0))) * (_2014 / ((_2018 * _2018) * 3.141590118408203125));
        float _2045 = isnan(1.0) ? _1614 : (isnan(_1614) ? 1.0 : min(_1614, 1.0));
        _1966 = (((((_2025 * _1790) + _521) * cbLight._m0[_1976].x) * _2044) * _2045) + _1902;
        _1968 = (((((_2025 * _1792) + _523) * cbLight._m0[_1976].y) * _2044) * _2045) + _1903;
        _1970 = (((((_2025 * _1793) + _524) * cbLight._m0[_1976].z) * _2044) * _2045) + _1904;
    }
    float _2080;
    float _2082;
    float _2084;
    if (_1694)
    {
        _2080 = _1966;
        _2082 = _1968;
        _2084 = _1970;
    }
    else
    {
        uint _2091 = _1599 + 3u;
        uint _2095 = _1599 + 11u;
        float _2109 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2091].w)) * _429) * 0.949999988079071044921875);
        float _2110 = _2109 * _2109;
        float _2111 = cbLight._m0[_2091].x + _398;
        float _2112 = cbLight._m0[_2091].y + _399;
        float _2113 = cbLight._m0[_2091].z + _400;
        float _2117 = inversesqrt(dot(vec3(_2111, _2112, _2113), vec3(_2111, _2112, _2113)));
        float _2118 = _2117 * _2111;
        float _2119 = _2117 * _2112;
        float _2120 = _2117 * _2113;
        float _2121 = dot(vec3(_425, _426, _427), vec3(cbLight._m0[_2091].xyz));
        float _4033 = isnan(0.0) ? _2121 : (isnan(_2121) ? 0.0 : max(_2121, 0.0));
        float _2124 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
        float _2125 = dot(vec3(_425, _426, _427), vec3(_2118, _2119, _2120));
        float _4044 = isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0));
        float _2128 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
        float _2129 = dot(vec3(cbLight._m0[_2091].xyz), vec3(_2118, _2119, _2120));
        float _4055 = isnan(0.0) ? _2129 : (isnan(_2129) ? 0.0 : max(_2129, 0.0));
        float _2133 = _2110 * _2110;
        float _2137 = ((_2128 * _2128) * (_2133 + (-1.0))) + 1.0;
        float _2144 = exp2(log2(1.0 - (isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0)))) * 5.0);
        float _2151 = 1.0 - _2110;
        float _2161 = (0.5 / (((_1768 * ((_2124 * _2151) + _2110)) + 9.9999999392252902907785028219223e-09) + (((_1768 * _2151) + _2110) * _2124))) * _2124;
        float _4066 = isnan(0.0) ? _2161 : (isnan(_2161) ? 0.0 : max(_2161, 0.0));
        float _2163 = (isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0))) * (_2133 / ((_2137 * _2137) * 3.141590118408203125));
        float _2164 = isnan(1.0) ? _1615 : (isnan(_1615) ? 1.0 : min(_1615, 1.0));
        _2080 = (((((_2144 * _1790) + _521) * cbLight._m0[_2095].x) * _2163) * _2164) + _1966;
        _2082 = (((((_2144 * _1792) + _523) * cbLight._m0[_2095].y) * _2163) * _2164) + _1968;
        _2084 = (((((_2144 * _1793) + _524) * cbLight._m0[_2095].z) * _2163) * _2164) + _1970;
    }
    float _2298;
    float _2300;
    float _2302;
    float _2304;
    float _2306;
    float _2308;
    if (_1597.y == 0u)
    {
        float _2239 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2240 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2239;
        float _2241 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2239;
        float _2242 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2239;
        uvec4 _2254 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2255 = _2254.x;
        uint _2266 = uint((float(_2254.y) * floor(float(uint(cbSceneParam._m0[85u].y * _456) / _2255))) + floor(float(uint(cbSceneParam._m0[85u].x * _455) / _2255)));
        float _2276 = (log2(_2242 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2277 = isnan(0.0) ? _2276 : (isnan(_2276) ? 0.0 : max(_2276, 0.0));
        uint _2280 = uint(isnan(14.0) ? _2277 : (isnan(_2277) ? 14.0 : min(_2277, 14.0)));
        uvec4 _2285 = texelFetch(g_lightClusterGridBuffer, int(((_2280 << 2u) + (_2266 << 6u)) >> 2u));
        uint _2286 = _2285.x;
        uint _2287 = _2254.z;
        float _2416;
        float _2418;
        float _2420;
        float _2422;
        float _2424;
        float _2426;
        if (((((1u << ((_2287 >> 4u) & 15u)) + 4294967295u) & _2286) == 0u) || ((_2287 & 240u) == 0u))
        {
            _2416 = 0.0;
            _2418 = 0.0;
            _2420 = 0.0;
            _2422 = 0.0;
            _2424 = 0.0;
            _2426 = 0.0;
        }
        else
        {
            float _2417;
            float _2419;
            float _2421;
            float _2423;
            float _2425;
            float _2427;
            float _2560 = 0.0;
            float _2561 = 0.0;
            float _2562 = 0.0;
            float _2563 = 0.0;
            float _2564 = 0.0;
            float _2565 = 0.0;
            uint _2566 = 0u;
            uint _2575;
            bool _2576;
            for (;;)
            {
                _2575 = texelFetch(g_lightClassification, int((((_2280 << 5u) + (_2266 << 9u)) + (_2566 << 2u)) >> 2u)).x;
                _2576 = _2575 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2576)
                {
                    frontier_phi_63_pred = _2565;
                    frontier_phi_63_pred_1 = _2564;
                    frontier_phi_63_pred_2 = _2563;
                    frontier_phi_63_pred_3 = _2562;
                    frontier_phi_63_pred_4 = _2561;
                    frontier_phi_63_pred_5 = _2560;
                }
                else
                {
                    float _2684;
                    float _2685;
                    float _2686;
                    float _2687;
                    float _2688;
                    float _2689;
                    uint _2690;
                    _2684 = _2560;
                    _2685 = _2561;
                    _2686 = _2562;
                    _2687 = _2563;
                    _2688 = _2564;
                    _2689 = _2565;
                    _2690 = _2575;
                    float _2616;
                    float _2617;
                    float _2618;
                    float _2619;
                    float _2620;
                    float _2621;
                    for (;;)
                    {
                        uint _2694 = uint(findLSB(_2690)) + (_2566 << 5u);
                        uint _2691 = (_2690 + 4294967295u) & _2690;
                        uint _2696 = _2694 * 48u;
                        vec4 _2710 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2696)).x, texelFetch(g_PointLightRenderingBuffer, int(_2696 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2696 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2696 + 3u)).x));
                        uint _2716 = (_2694 * 48u) + 4u;
                        vec4 _2729 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2716)).x, texelFetch(g_PointLightRenderingBuffer, int(_2716 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2716 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2716 + 3u)).x));
                        uint _2735 = (_2694 * 48u) + 8u;
                        vec3 _2746 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2735)).x, texelFetch(g_PointLightRenderingBuffer, int(_2735 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2735 + 2u)).x));
                        float _2750 = _2710.x - _2240;
                        float _2751 = _2710.y - _2241;
                        float _2752 = _2710.z - _2242;
                        float _2753 = dot(vec3(_2750, _2751, _2752), vec3(_2750, _2751, _2752));
                        float _2756 = inversesqrt(_2753);
                        float _2757 = _2756 * _2750;
                        float _2758 = _2756 * _2751;
                        float _2759 = _2756 * _2752;
                        float _2760 = dot(vec3(_477, _480, _483), vec3(_2757, _2758, _2759));
                        float _2765 = 1.0 - (_2753 * _2710.w);
                        float _4092 = isnan(0.0) ? _2765 : (isnan(_2765) ? 0.0 : max(_2765, 0.0));
                        float _2766 = isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0));
                        float _2767 = sqrt(_2753) * _2729.w;
                        float _2770 = 1.39999997615814208984375 / (_2767 + 1.39999997615814208984375);
                        float _2771 = _2770 * _2770;
                        float _2774 = ((1.0 - _2771) * _2760) + _2771;
                        float _2777 = _2767 * _2767;
                        float _2781 = ((isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : max(_2774, 0.0))) * _2766) / ((_2777 * 0.699999988079071044921875) + 1.0);
                        float _2785 = (-0.0) - _2240;
                        float _2786 = (-0.0) - _2241;
                        float _2787 = (-0.0) - _2242;
                        float _2791 = inversesqrt(dot(vec3(_2785, _2786, _2787), vec3(_2785, _2786, _2787)));
                        float _2792 = _2791 * _2785;
                        float _2793 = _2791 * _2786;
                        float _2794 = _2791 * _2787;
                        float _2802 = exp2(log2(1.0 / ((_2777 * 3.5) + 5.0)) * 0.25);
                        float _2803 = 1.0 - _552;
                        float _2810 = sqrt(1.0 - ((1.0 - (_2803 * _2803)) * (1.0 - (_2802 * _2802))));
                        float _2811 = _2810 * _2810;
                        float _2812 = _2811 * _2811;
                        float _2813 = _2792 + _2757;
                        float _2814 = _2793 + _2758;
                        float _2815 = _2794 + _2759;
                        float _2819 = inversesqrt(dot(vec3(_2813, _2814, _2815), vec3(_2813, _2814, _2815)));
                        float _2823 = dot(vec3(_477, _480, _483), vec3(_2792, _2793, _2794));
                        float _4108 = isnan(0.0) ? _2823 : (isnan(_2823) ? 0.0 : max(_2823, 0.0));
                        float _2826 = isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0));
                        float _2827 = dot(vec3(_477, _480, _483), vec3(_2819 * _2813, _2819 * _2814, _2819 * _2815));
                        float _4119 = isnan(0.0) ? _2827 : (isnan(_2827) ? 0.0 : max(_2827, 0.0));
                        float _2830 = isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0));
                        float _2834 = ((_2830 * _2830) * (_2812 + (-1.0))) + 1.0;
                        float _2835 = _2770 * _2811;
                        float _2836 = _2835 * _2835;
                        float _2839 = ((1.0 - _2836) * _2760) + _2836;
                        float _4130 = isnan(0.0) ? _2839 : (isnan(_2839) ? 0.0 : max(_2839, 0.0));
                        float _2840 = isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0));
                        float _2841 = 1.0 - _2811;
                        float _2851 = (0.5 / (((_2840 * ((_2826 * _2841) + _2811)) + 9.9999999392252902907785028219223e-09) + (((_2840 * _2841) + _2811) * _2826))) * _2840;
                        float _4141 = isnan(0.0) ? _2851 : (isnan(_2851) ? 0.0 : max(_2851, 0.0));
                        float _2862 = (((_2812 * 3.1415927410125732421875) * (isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0)))) / ((_2834 * _2834) * ((_2777 * 2.1991131305694580078125) + 3.141590118408203125))) * _2766;
                        _2619 = (_2781 * _2729.x) + _2687;
                        _2620 = (_2781 * _2729.y) + _2688;
                        _2621 = (_2781 * _2729.z) + _2689;
                        _2616 = (_2862 * _2746.x) + _2684;
                        _2617 = (_2862 * _2746.y) + _2685;
                        _2618 = (_2862 * _2746.z) + _2686;
                        if (_2691 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2684 = _2616;
                            _2685 = _2617;
                            _2686 = _2618;
                            _2687 = _2619;
                            _2688 = _2620;
                            _2689 = _2621;
                            _2690 = _2691;
                        }
                    }
                    frontier_phi_63_pred = _2621;
                    frontier_phi_63_pred_1 = _2620;
                    frontier_phi_63_pred_2 = _2619;
                    frontier_phi_63_pred_3 = _2618;
                    frontier_phi_63_pred_4 = _2617;
                    frontier_phi_63_pred_5 = _2616;
                }
                _2427 = frontier_phi_63_pred;
                _2425 = frontier_phi_63_pred_1;
                _2423 = frontier_phi_63_pred_2;
                _2421 = frontier_phi_63_pred_3;
                _2419 = frontier_phi_63_pred_4;
                _2417 = frontier_phi_63_pred_5;
                uint _2567 = _2566 + 1u;
                if (_2567 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2560 = _2417;
                    _2561 = _2419;
                    _2562 = _2421;
                    _2563 = _2423;
                    _2564 = _2425;
                    _2565 = _2427;
                    _2566 = _2567;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2416 = _2417;
            _2418 = _2419;
            _2420 = _2421;
            _2422 = _2423;
            _2424 = _2425;
            _2426 = _2427;
        }
        uvec4 _2430 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2431 = _2430.z;
        uint _2433 = (_2431 >> 8u) & 15u;
        float _2528;
        float _2530;
        float _2532;
        float _2534;
        float _2536;
        float _2538;
        if (((4294967295u << _2433) & _2286) == 0u)
        {
            _2528 = _2416;
            _2530 = _2418;
            _2532 = _2420;
            _2534 = _2422;
            _2536 = _2424;
            _2538 = _2426;
        }
        else
        {
            float _2553 = inversesqrt(dot(vec3(_2240, _2241, _2242), vec3(_2240, _2241, _2242)));
            float _2554 = _2553 * _2240;
            float _2555 = _2553 * _2241;
            float _2556 = _2553 * _2242;
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_2433 < ((_2431 >> 12u) & 15u))
            {
                float _2529;
                float _2531;
                float _2533;
                float _2535;
                float _2537;
                float _2539;
                float _2667 = _2416;
                float _2668 = _2418;
                float _2669 = _2420;
                float _2670 = _2422;
                float _2671 = _2424;
                float _2672 = _2426;
                uint _2673 = _2433;
                uint _2682;
                bool _2683;
                for (;;)
                {
                    _2682 = texelFetch(g_lightClassification, int((((_2280 << 5u) + (_2266 << 9u)) + (_2673 << 2u)) >> 2u)).x;
                    _2683 = _2682 == 0u;
                    float frontier_phi_69_pred;
                    float frontier_phi_69_pred_1;
                    float frontier_phi_69_pred_2;
                    float frontier_phi_69_pred_3;
                    float frontier_phi_69_pred_4;
                    float frontier_phi_69_pred_5;
                    if (_2683)
                    {
                        frontier_phi_69_pred = _2672;
                        frontier_phi_69_pred_1 = _2671;
                        frontier_phi_69_pred_2 = _2670;
                        frontier_phi_69_pred_3 = _2669;
                        frontier_phi_69_pred_4 = _2668;
                        frontier_phi_69_pred_5 = _2667;
                    }
                    else
                    {
                        float _2867;
                        float _2868;
                        float _2869;
                        float _2870;
                        float _2871;
                        float _2872;
                        float _3163;
                        float _3164;
                        float _3165;
                        float _3166;
                        float _3167;
                        float _3168;
                        float _2880 = _2667;
                        float _2881 = _2668;
                        float _2882 = _2669;
                        float _2883 = _2670;
                        float _2884 = _2671;
                        float _2885 = _2672;
                        uint _2886 = _2682;
                        uint _2887;
                        vec4 _2912;
                        float _2913;
                        vec4 _2928;
                        vec3 _2940;
                        vec4 _2956;
                        vec4 _2972;
                        float _3019;
                        bool _3020;
                        for (;;)
                        {
                            uint _2897 = ((_2673 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2886));
                            _2887 = (_2886 + 4294967295u) & _2886;
                            uint _2899 = _2897 * 40u;
                            _2912 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2899)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2899 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2899 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2899 + 3u)).x));
                            _2913 = _2912.w;
                            uint _2915 = (_2897 * 40u) + 4u;
                            _2928 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2915)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2915 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2915 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2915 + 3u)).x));
                            uint _2930 = (_2897 * 40u) + 8u;
                            _2940 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2930)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2930 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2930 + 2u)).x));
                            uint _2943 = (_2897 * 40u) + 16u;
                            _2956 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2943)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2943 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2943 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2943 + 3u)).x));
                            uint _2959 = (_2897 * 40u) + 20u;
                            _2972 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2959)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2959 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2959 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2959 + 3u)).x));
                            uint _2975 = (_2897 * 40u) + 24u;
                            vec4 _2988 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2975)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2975 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2975 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2975 + 3u)).x));
                            uint _2994 = (_2897 * 40u) + 28u;
                            vec4 _3007 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2994)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2994 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2994 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2994 + 3u)).x));
                            _3019 = fma(_2242, _3007.z, fma(_2241, _3007.y, _3007.x * _2240)) + _3007.w;
                            _3020 = !((fma(_2242, _2988.z, fma(_2241, _2988.y, _2988.x * _2240)) + _2988.w) <= 0.0);
                            float frontier_phi_75_pred;
                            float frontier_phi_75_pred_1;
                            float frontier_phi_75_pred_2;
                            float frontier_phi_75_pred_3;
                            float frontier_phi_75_pred_4;
                            float frontier_phi_75_pred_5;
                            if (_3020)
                            {
                                float _3047 = _2912.x - _2240;
                                float _3048 = _2912.y - _2241;
                                float _3049 = _2912.z - _2242;
                                float _3050 = dot(vec3(_3047, _3048, _3049), vec3(_3047, _3048, _3049));
                                float _3053 = inversesqrt(_3050);
                                float _3054 = _3053 * _3047;
                                float _3055 = _3053 * _3048;
                                float _3056 = _3053 * _3049;
                                float _3060 = 1.0 - (_3050 / (_2913 * _2913));
                                float _4152 = isnan(0.0) ? _3060 : (isnan(_3060) ? 0.0 : max(_3060, 0.0));
                                float _3061 = isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0));
                                float _3065 = sqrt(_3050) * _2928.w;
                                float _3067 = 1.39999997615814208984375 / (_3065 + 1.39999997615814208984375);
                                float _3068 = _3067 * _3067;
                                float _3071 = ((1.0 - _3068) * dot(vec3(_3054, _3055, _3056), vec3(_477, _480, _483))) + _3068;
                                float _3074 = _3065 * _3065;
                                float _3078 = (fma(_2242, _2956.z, fma(_2241, _2956.y, _2956.x * _2240)) + _2956.w) / _3019;
                                float _3079 = (fma(_2242, _2972.z, fma(_2241, _2972.y, _2972.x * _2240)) + _2972.w) / _3019;
                                float _3083 = 1.0 - dot(vec2(_3078, _3079), vec2(_3078, _3079));
                                float _4168 = isnan(0.0) ? _3083 : (isnan(_3083) ? 0.0 : max(_3083, 0.0));
                                float _3084 = isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0));
                                float _3085 = _3084 * (((isnan(0.0) ? _3071 : (isnan(_3071) ? 0.0 : max(_3071, 0.0))) * _3061) / ((_3074 * 0.699999988079071044921875) + 1.0));
                                float _3097 = exp2(log2(1.0 / ((_3074 * 3.5) + 5.0)) * 0.25);
                                float _3098 = 1.0 - _552;
                                float _3105 = sqrt(1.0 - ((1.0 - (_3098 * _3098)) * (1.0 - (_3097 * _3097))));
                                float _3106 = _3105 * _3105;
                                float _3107 = _3106 * _3106;
                                float _3108 = _3054 - _2554;
                                float _3109 = _3055 - _2555;
                                float _3110 = _3056 - _2556;
                                float _3114 = inversesqrt(dot(vec3(_3108, _3109, _3110), vec3(_3108, _3109, _3110)));
                                float _3118 = dot(vec3(_477, _480, _483), vec3((-0.0) - _2554, (-0.0) - _2555, (-0.0) - _2556));
                                float _4179 = isnan(0.0) ? _3118 : (isnan(_3118) ? 0.0 : max(_3118, 0.0));
                                float _3121 = isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0));
                                float _3122 = dot(vec3(_477, _480, _483), vec3(_3114 * _3108, _3114 * _3109, _3114 * _3110));
                                float _4190 = isnan(0.0) ? _3122 : (isnan(_3122) ? 0.0 : max(_3122, 0.0));
                                float _3125 = isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0));
                                float _3129 = ((_3125 * _3125) * (_3107 + (-1.0))) + 1.0;
                                float _3130 = _3067 * _3106;
                                float _3131 = _3130 * _3130;
                                float _3137 = ((1.0 - _3131) * dot(vec3(_477, _480, _483), vec3(_3054, _3055, _3056))) + _3131;
                                float _4201 = isnan(0.0) ? _3137 : (isnan(_3137) ? 0.0 : max(_3137, 0.0));
                                float _3138 = isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0));
                                float _3139 = 1.0 - _3106;
                                float _3149 = (0.5 / (((_3138 * ((_3121 * _3139) + _3106)) + 9.9999999392252902907785028219223e-09) + (((_3138 * _3139) + _3106) * _3121))) * _3138;
                                float _4212 = isnan(0.0) ? _3149 : (isnan(_3149) ? 0.0 : max(_3149, 0.0));
                                float _3159 = (_3084 * _3061) * (((_3107 * 3.1415927410125732421875) * (isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0)))) / ((_3129 * _3129) * ((_3074 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_75_pred = _3085 * _2928.z;
                                frontier_phi_75_pred_1 = _3085 * _2928.y;
                                frontier_phi_75_pred_2 = _3085 * _2928.x;
                                frontier_phi_75_pred_3 = _3159 * _2940.z;
                                frontier_phi_75_pred_4 = _3159 * _2940.y;
                                frontier_phi_75_pred_5 = _3159 * _2940.x;
                            }
                            else
                            {
                                frontier_phi_75_pred = 0.0;
                                frontier_phi_75_pred_1 = 0.0;
                                frontier_phi_75_pred_2 = 0.0;
                                frontier_phi_75_pred_3 = 0.0;
                                frontier_phi_75_pred_4 = 0.0;
                                frontier_phi_75_pred_5 = 0.0;
                            }
                            _3168 = frontier_phi_75_pred;
                            _3167 = frontier_phi_75_pred_1;
                            _3166 = frontier_phi_75_pred_2;
                            _3165 = frontier_phi_75_pred_3;
                            _3164 = frontier_phi_75_pred_4;
                            _3163 = frontier_phi_75_pred_5;
                            _2870 = _3166 + _2883;
                            _2871 = _3167 + _2884;
                            _2872 = _3168 + _2885;
                            _2867 = _3163 + _2880;
                            _2868 = _3164 + _2881;
                            _2869 = _3165 + _2882;
                            if (_2887 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2880 = _2867;
                                _2881 = _2868;
                                _2882 = _2869;
                                _2883 = _2870;
                                _2884 = _2871;
                                _2885 = _2872;
                                _2886 = _2887;
                                continue;
                            }
                        }
                        frontier_phi_69_pred = _2872;
                        frontier_phi_69_pred_1 = _2871;
                        frontier_phi_69_pred_2 = _2870;
                        frontier_phi_69_pred_3 = _2869;
                        frontier_phi_69_pred_4 = _2868;
                        frontier_phi_69_pred_5 = _2867;
                    }
                    _2539 = frontier_phi_69_pred;
                    _2537 = frontier_phi_69_pred_1;
                    _2535 = frontier_phi_69_pred_2;
                    _2533 = frontier_phi_69_pred_3;
                    _2531 = frontier_phi_69_pred_4;
                    _2529 = frontier_phi_69_pred_5;
                    uint _2674 = _2673 + 1u;
                    if (_2674 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2667 = _2529;
                        _2668 = _2531;
                        _2669 = _2533;
                        _2670 = _2535;
                        _2671 = _2537;
                        _2672 = _2539;
                        _2673 = _2674;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _2539;
                frontier_phi_57_58_ladder_1 = _2537;
                frontier_phi_57_58_ladder_2 = _2535;
                frontier_phi_57_58_ladder_3 = _2533;
                frontier_phi_57_58_ladder_4 = _2531;
                frontier_phi_57_58_ladder_5 = _2529;
            }
            else
            {
                frontier_phi_57_58_ladder = _2426;
                frontier_phi_57_58_ladder_1 = _2424;
                frontier_phi_57_58_ladder_2 = _2422;
                frontier_phi_57_58_ladder_3 = _2420;
                frontier_phi_57_58_ladder_4 = _2418;
                frontier_phi_57_58_ladder_5 = _2416;
            }
            _2528 = frontier_phi_57_58_ladder_5;
            _2530 = frontier_phi_57_58_ladder_4;
            _2532 = frontier_phi_57_58_ladder_3;
            _2534 = frontier_phi_57_58_ladder_2;
            _2536 = frontier_phi_57_58_ladder_1;
            _2538 = frontier_phi_57_58_ladder;
        }
        float _2543 = isnan(1.0) ? _536 : (isnan(_536) ? 1.0 : min(_536, 1.0));
        _2298 = (_2543 * _2534) + _1732;
        _2300 = (_2543 * _2536) + _1734;
        _2302 = (_2543 * _2538) + _1736;
        _2304 = ((_2528 * _521) * _2543) + _2080;
        _2306 = ((_2530 * _523) * _2543) + _2082;
        _2308 = ((_2532 * _524) * _2543) + _2084;
    }
    else
    {
        _2298 = _1732;
        _2300 = _1734;
        _2302 = _1736;
        _2304 = _2080;
        _2306 = _2082;
        _2308 = _2084;
    }
    uint _2314 = _497 + uint(cbMatDynParam._m0[0u].w);
    float _4228 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    float _4239 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    float _4250 = isnan(0.0) ? _513 : (isnan(_513) ? 0.0 : max(_513, 0.0));
    float _4261 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _2349 = (((isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0))) * (_2298 + ((isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0))) * _536))) + ((_2304 + ((isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0))) * _1345)) * cbPerFrame._m0[3u].x)) + ((((cbMtdParam._m0[10u].x * TEXCOORD_1.z) * _371) * _411) * cbInstanceData._m0[_2314].x);
    float _2351 = (((((cbMtdParam._m0[10u].y * TEXCOORD_1.z) * _371) * _411) * cbInstanceData._m0[_2314].y) + ((_2306 + ((isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0))) * _1345)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0))) * (_2300 + ((isnan(0.0) ? _1269 : (isnan(_1269) ? 0.0 : max(_1269, 0.0))) * _536)));
    float _2353 = (((((cbMtdParam._m0[10u].z * TEXCOORD_1.z) * _371) * _411) * cbInstanceData._m0[_2314].z) + ((_2308 + ((isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0))) * _1345)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4250 : (isnan(_4250) ? 1.0 : min(_4250, 1.0))) * (_2302 + ((isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0))) * _536)));
    float _2361 = cbInstanceData._m0[_496 + 6u].w * (isnan(1.0) ? _4261 : (isnan(_4261) ? 1.0 : min(_4261, 1.0)));
    float _2366 = _455 / cbSceneParam._m0[86u].x;
    float _2367 = _456 / cbSceneParam._m0[86u].y;
    vec4 _2381 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2366, _2367, (log2((isnan(cbSceneParam._m0[77u].w) ? _449 : (isnan(_449) ? cbSceneParam._m0[77u].w : min(_449, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2383 = _2381.x;
    float _2384 = _2381.y;
    float _2385 = _2381.z;
    float _2386 = _2381.w;
    float _2478;
    float _2480;
    float _2482;
    float _2484;
    if (_449 > cbSceneParam._m0[78u].w)
    {
        float _2441 = isnan(_449) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _449 : min(cbSceneParam._m0[80u].w, _449));
        float _2442 = _2441 / _449;
        float _2453 = _2442 * _273;
        float _2454 = _274 * _2442;
        float _2455 = (-0.0) - _2454;
        float _2456 = _2442 * _275;
        float _2458 = (cbSceneParam._m0[77u].w * _2455) / _2441;
        float _2459 = _2458 + cbSceneParam._m0[79u].w;
        float _2460 = cbSceneParam._m0[79u].w - _2454;
        float _2466 = sqrt(((_2453 * _2453) + (_2454 * _2454)) + (_2456 * _2456));
        float _2469 = (1.0 - (cbSceneParam._m0[77u].w / _2441)) * _2466;
        float _2474 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2476 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2629;
        if (abs((_2455 - _2458) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2629 = ((((_2459 > 0.0) ? exp2(_2474 * _2459) : (2.0 - exp2(_2476 * _2459))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2469;
        }
        else
        {
            float _2589 = 1.0 / cbSceneParam._m0[80u].x;
            float _2590 = isnan(_2460) ? _2459 : (isnan(_2459) ? _2460 : max(_2459, _2460));
            float _2591 = isnan(_2460) ? _2459 : (isnan(_2459) ? _2460 : min(_2459, _2460));
            float _2600 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : min(_2590, 0.0));
            float _2601 = isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : min(_2591, 0.0));
            _2629 = ((abs(_2466 / _2455) * cbSceneParam._m0[80u].y) * ((((_2600 - _2601) * 2.0) - ((exp2(_2474 * (isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0)))) - exp2(_2474 * (isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : max(_2591, 0.0))))) * _2589)) - ((exp2(_2476 * _2600) - exp2(_2476 * _2601)) * _2589))) + (_2469 * cbSceneParam._m0[80u].z);
        }
        vec4 _2631 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2366, _2367, 1.0), 0.0);
        float _2640 = exp2((_2629 * (-1.44269502162933349609375)) * (1.0 - _2631.w));
        float _2641 = log2(_2640);
        float _2657 = log2(_2386);
        _2478 = (exp2(_2657 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2641 * cbSceneParam._m0[78u].x)) * _2631.x) / cbSceneParam._m0[78u].x)) + _2383;
        _2480 = (exp2(_2657 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2641 * cbSceneParam._m0[78u].y)) * _2631.y) / cbSceneParam._m0[78u].y)) + _2384;
        _2482 = (exp2(_2657 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2641 * cbSceneParam._m0[78u].z)) * _2631.z) / cbSceneParam._m0[78u].z)) + _2385;
        _2484 = _2640 * _2386;
    }
    else
    {
        _2478 = _2383;
        _2480 = _2384;
        _2482 = _2385;
        _2484 = _2386;
    }
    float _2496 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2497 = _2496 == 3.0;
    float _2498 = log2(_2484);
    float _2505 = exp2(_2498 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2349 : (isnan(_2349) ? 0.0 : max(_2349, 0.0)));
    float _2506 = exp2(_2498 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0)));
    float _2507 = exp2(_2498 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2353 : (isnan(_2353) ? 0.0 : max(_2353, 0.0)));
    float _2516 = (_2496 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2516 * (_2497 ? _2505 : (_2505 + (cbSceneParam._m0[72u].w * _2478)));
    SV_Target.y = _2516 * (_2497 ? _2506 : (_2506 + (cbSceneParam._m0[72u].w * _2480)));
    SV_Target.z = _2516 * (_2497 ? _2507 : (_2507 + (cbSceneParam._m0[72u].w * _2482)));
    SV_Target.w = _2361;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2361;
}


