#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec2 TEXCOORD_5;

void main()
{
    uint _79 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _162 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _164 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _165 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _172 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _173 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _174 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _241;
    float _242;
    float _243;
    float _244;
    float _245;
    float _246;
    float _247;
    float _248;
    float _249;
    float _250;
    float _251;
    float _252;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _189 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
        uint _202 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_189)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _209 = _202 + 1u;
        uint _216 = _202 + 2u;
        _241 = cbObjMatrix._m0[_202].x;
        _242 = cbObjMatrix._m0[_202].y;
        _243 = cbObjMatrix._m0[_202].z;
        _244 = cbObjMatrix._m0[_202].w;
        _245 = cbObjMatrix._m0[_209].x;
        _246 = cbObjMatrix._m0[_209].y;
        _247 = cbObjMatrix._m0[_209].z;
        _248 = cbObjMatrix._m0[_209].w;
        _249 = cbObjMatrix._m0[_216].x;
        _250 = cbObjMatrix._m0[_216].y;
        _251 = cbObjMatrix._m0[_216].z;
        _252 = cbObjMatrix._m0[_216].w;
    }
    else
    {
        _241 = cbvModelParam._m0[0u].x;
        _242 = cbvModelParam._m0[0u].y;
        _243 = cbvModelParam._m0[0u].z;
        _244 = cbvModelParam._m0[0u].w;
        _245 = cbvModelParam._m0[1u].x;
        _246 = cbvModelParam._m0[1u].y;
        _247 = cbvModelParam._m0[1u].z;
        _248 = cbvModelParam._m0[1u].w;
        _249 = cbvModelParam._m0[2u].x;
        _250 = cbvModelParam._m0[2u].y;
        _251 = cbvModelParam._m0[2u].z;
        _252 = cbvModelParam._m0[2u].w;
    }
    precise float _253 = POSITION.x * _241;
    precise float _254 = POSITION.y * _242;
    precise float _255 = _254 + _253;
    precise float _256 = POSITION.z * _243;
    precise float _257 = _256 + _255;
    precise float _258 = 1.0 * _244;
    precise float _260 = _258 + _257;
    precise float _261 = POSITION.x * _245;
    precise float _262 = POSITION.y * _246;
    precise float _263 = _262 + _261;
    precise float _264 = POSITION.z * _247;
    precise float _265 = _264 + _263;
    precise float _266 = 1.0 * _248;
    precise float _267 = _266 + _265;
    precise float _268 = POSITION.x * _249;
    precise float _269 = POSITION.y * _250;
    precise float _270 = _269 + _268;
    precise float _271 = POSITION.z * _251;
    precise float _272 = _271 + _270;
    precise float _273 = 1.0 * _252;
    precise float _274 = _273 + _272;
    uint _289 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
    uvec4 _291 = texelFetch(g_InstanceIndexBuffer, int(_289));
    uint _292 = _291.x;
    precise float _308 = _260 - cbSceneParam._m0[3u].x;
    precise float _309 = _267 - cbSceneParam._m0[3u].y;
    precise float _310 = _274 - cbSceneParam._m0[3u].z;
    precise float _338 = _308 * cbSceneParam._m0[24u].x;
    precise float _339 = _309 * cbSceneParam._m0[24u].y;
    precise float _340 = _339 + _338;
    precise float _341 = _310 * cbSceneParam._m0[24u].z;
    precise float _342 = _341 + _340;
    precise float _343 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _344 = _343 + _342;
    precise float _345 = _308 * cbSceneParam._m0[25u].x;
    precise float _346 = _309 * cbSceneParam._m0[25u].y;
    precise float _347 = _346 + _345;
    precise float _348 = _310 * cbSceneParam._m0[25u].z;
    precise float _349 = _348 + _347;
    precise float _350 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _351 = _350 + _349;
    precise float _352 = _308 * cbSceneParam._m0[26u].x;
    precise float _353 = _309 * cbSceneParam._m0[26u].y;
    precise float _354 = _353 + _352;
    precise float _355 = _310 * cbSceneParam._m0[26u].z;
    precise float _356 = _355 + _354;
    precise float _357 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _358 = _357 + _356;
    precise float _359 = _308 * cbSceneParam._m0[27u].x;
    precise float _360 = _309 * cbSceneParam._m0[27u].y;
    precise float _361 = _360 + _359;
    precise float _362 = _310 * cbSceneParam._m0[27u].z;
    precise float _363 = _362 + _361;
    precise float _364 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _365 = _364 + _363;
    gl_Position.x = _344;
    gl_Position.y = _351;
    gl_Position.z = _358;
    gl_Position.w = _365;
    POSITION_1.x = _344;
    POSITION_1.y = _351;
    POSITION_1.z = _358;
    POSITION_1.w = _365;
    NORMAL_1.x = fma(_165, _243, fma(_164, _242, _241 * _162));
    NORMAL_1.y = fma(_165, _247, fma(_164, _246, _245 * _162));
    NORMAL_1.z = fma(_165, _251, fma(_164, _250, _249 * _162));
    NORMAL_1.w = float(_292);
    TANGENT_1.x = fma(_174, _243, fma(_173, _242, _241 * _172));
    TANGENT_1.y = fma(_174, _247, fma(_173, _246, _245 * _172));
    TANGENT_1.z = fma(_174, _251, fma(_173, _250, _249 * _172));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    TEXCOORD_5.x = _358;
    TEXCOORD_5.y = _365;
    gl_ClipDistance[0u] = dot(vec4(_344, _351, _358, _365), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_344, _351, _358, _365), vec4(cbInstanceData._m0[(_292 * 13u) + 3u]));
}


