#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_5;
layout(set = 0, binding = 11) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_7;
layout(set = 0, binding = 13) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_8;
layout(set = 0, binding = 14) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_13;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_AlbedoMask_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1282;
float _3949;
float _3950;
float _3951;
float _3952;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _215 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _216 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _217 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _223 = inversesqrt(dot(vec3(_215, _216, _217), vec3(_215, _216, _217)));
    float _230 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _231 = _230 * NORMAL.x;
    float _232 = _230 * NORMAL.y;
    float _233 = _230 * NORMAL.z;
    float _237 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _245;
    float _246;
    float _247;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _245 = (-0.0) - _231;
        _246 = (-0.0) - _232;
        _247 = (-0.0) - _233;
    }
    else
    {
        _245 = _231;
        _246 = _232;
        _247 = _233;
    }
    vec4 _262 = texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _272 = log2(0.0);
    float _274 = exp2(_272 * cbMtdParam._m0[20u].y);
    float _275 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _276 = isnan(1.0) ? _275 : (isnan(_275) ? 1.0 : min(_275, 1.0));
    vec4 _290 = texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _294 = _290.z;
    float _295 = _290.w;
    float _303 = exp2(log2(_294 * cbMtdParam._m0[20u].w) * cbMtdParam._m0[19u].y);
    float _304 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _305 = isnan(1.0) ? _304 : (isnan(_304) ? 1.0 : min(_304, 1.0));
    vec4 _318 = texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _343 = texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _354 = cbMtdParam._m0[9u].x * _343.x;
    float _355 = cbMtdParam._m0[9u].y * _343.y;
    float _356 = cbMtdParam._m0[9u].z * _343.z;
    float _363 = (((cbMtdParam._m0[10u].x * _318.x) - _354) * _305) + _354;
    float _364 = (((cbMtdParam._m0[10u].y * _318.y) - _355) * _305) + _355;
    float _365 = (((cbMtdParam._m0[10u].z * _318.z) - _356) * _305) + _356;
    float _372 = exp2(log2(_295) * cbMtdParam._m0[21u].y);
    vec4 _385 = texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _405 = (((cbMtdParam._m0[11u].x * _385.x) - _363) * _372) + _363;
    float _406 = (((cbMtdParam._m0[11u].y * _385.y) - _364) * _372) + _364;
    float _407 = (((cbMtdParam._m0[11u].z * _385.z) - _365) * _372) + _365;
    vec4 _419 = texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _443 = (_262.x * 4.55000019073486328125) * ((((cbMtdParam._m0[12u].x * _419.x) - _405) * _276) + _405);
    float _445 = (_262.y * 4.55000019073486328125) * ((((cbMtdParam._m0[12u].y * _419.y) - _406) * _276) + _406);
    float _447 = (_262.z * 4.55000019073486328125) * ((((cbMtdParam._m0[12u].z * _419.z) - _407) * _276) + _407);
    float _452 = exp2(log2(1.0 - _295) * 0.00999999977648258209228515625);
    float _470 = ((texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_11, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w)).x - cbMtdParam._m0[21u].z) * _452) + cbMtdParam._m0[21u].z;
    float _489 = (((texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w)).x - _470) + cbMtdParam._m0[20u].z) * _372) + _470;
    float _512 = (((texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w)).x - _489) + cbMtdParam._m0[22u].z) * _276) + _489;
    vec4 _524 = texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    vec4 _542 = texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _544 = _542.x;
    float _545 = _542.y;
    float _548 = cbMtdParam._m0[19u].x + _542.z;
    float _551 = (((cbMtdParam._m0[20u].x + _524.z) - _548) * _452) + _548;
    vec4 _564 = texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _576 = (_294 * 2.0) * ((((_564.z - _551) + cbMtdParam._m0[22u].x) * _372) + _551);
    vec4 _589 = texture(sampler2D(C_DetailBlend_AlbedoMask_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    float _598 = (((_589.z - _576) + cbMtdParam._m0[21u].x) * _276) + _576;
    float _609 = ((_524.x - _544) * _452) + _544;
    float _610 = ((_524.y - _545) * _452) + _545;
    float _615 = ((_564.x - _609) * _372) + _609;
    float _616 = ((_564.y - _610) * _372) + _610;
    float _625 = ((((_589.x - _615) * _276) + _615) * 2.0) + (-1.0);
    float _626 = ((((_589.y - _616) * _276) + _616) * 2.0) + (-1.0);
    float _627 = dot(vec2(_625, _626), vec2(_625, _626));
    float _3981 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _632 = sqrt(1.0 - (isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0))));
    float _635 = _625 + (cbMtdParam._m0[21u].w * ((_290.x * 2.0) + (-1.0)));
    float _636 = _626 + (cbMtdParam._m0[21u].w * ((_290.y * 2.0) + (-1.0)));
    float _639 = fma(_632, _245, fma(_636, _237 * TANGENT.x, (_223 * _215) * _635));
    float _642 = fma(_632, _246, fma(_636, _237 * TANGENT.y, (_223 * _216) * _635));
    float _645 = fma(_632, _247, fma(_636, _237 * TANGENT.z, (_223 * _217) * _635));
    float _649 = inversesqrt(dot(vec3(_639, _642, _645), vec3(_639, _642, _645)));
    float _650 = _649 * _639;
    float _651 = _649 * _642;
    float _652 = _649 * _645;
    float _3992 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _653 = isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0));
    float _4003 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    float _4014 = isnan(0.0) ? _445 : (isnan(_445) ? 0.0 : max(_445, 0.0));
    float _4025 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0));
    float _4036 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    float _657 = isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0));
    float _673 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _713 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _723 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _713);
    float _724 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _713);
    float _725 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _713);
    float _729 = inversesqrt(dot(vec3(_723, _724, _725), vec3(_723, _724, _725)));
    float _730 = _723 * _729;
    float _731 = _724 * _729;
    float _732 = _725 * _729;
    vec4 _737 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _739 = _737.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _962 = sqrt(((_723 * _723) + (_724 * _724)) + (_725 * _725));
        float _968 = (cbMatDynParam._m0[5u].x * _962) + cbMatDynParam._m0[5u].y;
        float _4047 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
        float _969 = isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0));
        float _973 = (cbMatDynParam._m0[5u].z * _962) + cbMatDynParam._m0[5u].w;
        float _4058 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0))) - _969)) + _969) < ((_739 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _751 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _752 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _754 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _756 = _754.w;
    float _775 = fma(_652, cbSceneParam._m0[5u].z, fma(_651, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _650));
    float _778 = fma(_652, cbSceneParam._m0[6u].z, fma(_651, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _650));
    float _781 = fma(_652, cbSceneParam._m0[7u].z, fma(_651, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _650));
    vec4 _783 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _794 = (((_783.y - _653) + (_783.w * _653)) * cbMtdParam._m0[3u].x) + _653;
    uint _807 = uint(roundEven(NORMAL.w)) * 13u;
    uint _808 = _807 + 9u;
    uint _809 = _808 + uint(cbMatDynParam._m0[0u].w);
    float _815 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0)))) * cbInstanceData._m0[_809].x;
    float _816 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0)))) * cbInstanceData._m0[_809].y;
    float _817 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0)))) * cbInstanceData._m0[_809].z;
    float _4069 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
    float _818 = isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0));
    float _4080 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _819 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
    float _4091 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    float _820 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
    vec4 _821 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _826 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _837 = (((_826.x - _657) + (_826.w * _657)) * cbMtdParam._m0[3u].x) + _657;
    float _850 = (cbMtdParam._m0[3u].x * (((_818 * _756) - _818) + _821.x)) + _818;
    float _851 = (cbMtdParam._m0[3u].x * (((_819 * _756) - _819) + _821.y)) + _819;
    float _852 = (cbMtdParam._m0[3u].x * (((_820 * _756) - _820) + _821.z)) + _820;
    float _853 = 1.0 - _837;
    float _854 = _853 * _850;
    float _855 = _853 * _851;
    float _856 = _853 * _852;
    float _861 = (_850 + (-0.039999999105930328369140625)) * _837;
    float _862 = (_851 + (-0.039999999105930328369140625)) * _837;
    float _863 = (_852 + (-0.039999999105930328369140625)) * _837;
    float _864 = _861 + 0.039999999105930328369140625;
    float _866 = _862 + 0.039999999105930328369140625;
    float _867 = _863 + 0.039999999105930328369140625;
    vec4 _876 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _751, cbSceneParam._m0[86u].y * _752));
    float _879 = _876.x * TEXCOORD_4;
    float _880 = dot(vec3(_650, _651, _652), vec3(_730, _731, _732));
    float _883 = _880 * 2.0;
    float _887 = (_883 * _650) - _730;
    float _888 = (_883 * _651) - _731;
    float _889 = (_883 * _652) - _732;
    float _893 = abs(dot(vec3(_730, _731, _732), vec3(_650, _651, _652)));
    float _4102 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    float _895 = sqrt(_794);
    float _908 = exp2((_895 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_895 * 3.0));
    float _914 = (1.0 - _908) * ((_895 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _915 = _908 * _895;
    float _943 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _947 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _951 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1281;
    float _1283;
    float _1284;
    float _1285;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    float _1295;
    float _1296;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1006 = fma(_951, cbModelParam._m0[26u].z, fma(_947, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _943));
        float _1010 = fma(_951, cbModelParam._m0[27u].z, fma(_947, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _943));
        float _1014 = fma(_951, cbModelParam._m0[28u].z, fma(_947, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _943));
        float _1039 = _943 + _650;
        float _1040 = _947 + _651;
        float _1041 = _951 + _652;
        float _1051 = fma(_1041, cbModelParam._m0[26u].z, fma(_1040, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1039)) - _1006;
        float _1052 = fma(_1041, cbModelParam._m0[27u].z, fma(_1040, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1039)) - _1010;
        float _1053 = fma(_1041, cbModelParam._m0[28u].z, fma(_1040, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1039)) - _1014;
        float _1057 = inversesqrt(dot(vec3(_1051, _1052, _1053), vec3(_1051, _1052, _1053)));
        float _1070 = ((_1057 * _1051) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1006 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1071 = ((_1057 * _1052) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1010 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1072 = ((_1057 * _1053) / cbModelParam._m0[34u].z) + ((((((_1014 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1075 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1070, _1071, _1072), 0.0);
        vec4 _1082 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1070, _1071, _1072), 0.0);
        vec4 _1089 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1070, _1071, _1072), 0.0);
        vec4 _1096 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1070, _1071, _1072), 0.0);
        float _1109 = exp2((_1075.w + (-0.5)) * 20.0) * 2.0;
        float _1110 = _1109 * (_1075.x + (-0.5));
        float _1111 = _1109 * (_1075.y + (-0.5));
        float _1112 = _1109 * (_1075.z + (-0.5));
        float _1119 = exp2((_1082.w + (-0.5)) * 20.0) * 2.0;
        float _1120 = _1119 * (_1082.x + (-0.5));
        float _1121 = _1119 * (_1082.y + (-0.5));
        float _1122 = _1119 * (_1082.z + (-0.5));
        float _1129 = exp2((_1089.w + (-0.5)) * 20.0) * 2.0;
        float _1130 = _1129 * (_1089.x + (-0.5));
        float _1131 = _1129 * (_1089.y + (-0.5));
        float _1132 = _1129 * (_1089.z + (-0.5));
        float _1139 = exp2((_1096.w + (-0.5)) * 20.0) * 2.0;
        float _1140 = _1139 * (_1096.x + (-0.5));
        float _1141 = _1139 * (_1096.y + (-0.5));
        float _1142 = _1139 * (_1096.z + (-0.5));
        float _1143 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1144 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1145 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1146 = _1110 * 0.5;
        float _1147 = _1120 * 0.5;
        float _1148 = _1130 * 0.5;
        float _1149 = dot(vec3(_1146, _1147, _1148), vec3(_1146, _1147, _1148));
        float _1154 = (_1149 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1149);
        float _1163 = (dot(vec3(_650, _651, _652), vec3(_1154 * _1146, _1154 * _1147, _1154 * _1148)) + 1.0) * 0.5;
        float _4128 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
        float _1173 = sqrt(((_1147 * _1147) + (_1146 * _1146)) + (_1148 * _1148)) / (_1143 + 9.9999997473787516355514526367188e-06);
        float _4139 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
        float _1174 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
        float _1175 = _1174 * 2.0;
        float _1179 = (1.0 - _1174) / (_1174 + 1.0);
        float _4150 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1180 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
        float _1189 = ((((1.0 - _1180) * (_1175 + 2.0)) * exp2(log2(isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0))) * (_1175 + 1.0))) + _1180) * _1143;
        float _1190 = _1111 * 0.5;
        float _1191 = _1121 * 0.5;
        float _1192 = _1131 * 0.5;
        float _1193 = dot(vec3(_1190, _1191, _1192), vec3(_1190, _1191, _1192));
        float _1198 = (_1193 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1193);
        float _1206 = (dot(vec3(_650, _651, _652), vec3(_1198 * _1190, _1198 * _1191, _1198 * _1192)) + 1.0) * 0.5;
        float _4161 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
        float _1215 = sqrt(((_1191 * _1191) + (_1190 * _1190)) + (_1192 * _1192)) / (_1144 + 9.9999997473787516355514526367188e-06);
        float _4172 = isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0));
        float _1216 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
        float _1217 = _1216 * 2.0;
        float _1221 = (1.0 - _1216) / (_1216 + 1.0);
        float _4183 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1222 = isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0));
        float _1231 = ((((1.0 - _1222) * (_1217 + 2.0)) * exp2(log2(isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0))) * (_1217 + 1.0))) + _1222) * _1144;
        float _1232 = _1112 * 0.5;
        float _1233 = _1122 * 0.5;
        float _1234 = _1132 * 0.5;
        float _1235 = dot(vec3(_1232, _1233, _1234), vec3(_1232, _1233, _1234));
        float _1240 = (_1235 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1235);
        float _1248 = (dot(vec3(_650, _651, _652), vec3(_1240 * _1232, _1240 * _1233, _1240 * _1234)) + 1.0) * 0.5;
        float _4194 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
        float _1257 = sqrt(((_1233 * _1233) + (_1232 * _1232)) + (_1234 * _1234)) / (_1145 + 9.9999997473787516355514526367188e-06);
        float _4205 = isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0));
        float _1258 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
        float _1259 = _1258 * 2.0;
        float _1263 = (1.0 - _1258) / (_1258 + 1.0);
        float _4216 = isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0));
        float _1264 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
        float _1273 = ((((1.0 - _1264) * (_1259 + 2.0)) * exp2(log2(isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0))) * (_1259 + 1.0))) + _1264) * _1145;
        _1281 = _1112;
        _1283 = _1111;
        _1284 = _1110;
        _1285 = _1122;
        _1286 = _1121;
        _1287 = _1120;
        _1288 = _1132;
        _1289 = _1131;
        _1290 = _1130;
        _1291 = _1145;
        _1292 = _1144;
        _1293 = _1143;
        _1294 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0)));
        _1295 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0)));
        _1296 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1273 : (isnan(_1273) ? 0.0 : max(_1273, 0.0)));
    }
    else
    {
        _1281 = _1282;
        _1283 = _1282;
        _1284 = _1282;
        _1285 = _1282;
        _1286 = _1282;
        _1287 = _1282;
        _1288 = _1282;
        _1289 = _1282;
        _1290 = _1282;
        _1291 = _1282;
        _1292 = _1282;
        _1293 = _1282;
        _1294 = 0.0;
        _1295 = 0.0;
        _1296 = 0.0;
    }
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1325 = fma(_951, cbModelParam._m0[30u].z, fma(_947, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _943));
        float _1329 = fma(_951, cbModelParam._m0[31u].z, fma(_947, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _943));
        float _1333 = fma(_951, cbModelParam._m0[32u].z, fma(_947, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _943));
        float _1356 = _943 + _650;
        float _1357 = _947 + _651;
        float _1358 = _951 + _652;
        float _1368 = fma(_1358, cbModelParam._m0[30u].z, fma(_1357, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1356)) - _1325;
        float _1369 = fma(_1358, cbModelParam._m0[31u].z, fma(_1357, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1356)) - _1329;
        float _1370 = fma(_1358, cbModelParam._m0[32u].z, fma(_1357, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1356)) - _1333;
        float _1374 = inversesqrt(dot(vec3(_1368, _1369, _1370), vec3(_1368, _1369, _1370)));
        float _1387 = ((_1374 * _1368) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1325 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1388 = ((_1374 * _1369) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1329 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1389 = ((_1374 * _1370) / cbModelParam._m0[35u].z) + ((((((_1333 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1391 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1387, _1388, _1389), 0.0);
        vec4 _1398 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1387, _1388, _1389), 0.0);
        vec4 _1405 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1387, _1388, _1389), 0.0);
        vec4 _1412 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1387, _1388, _1389), 0.0);
        float _1424 = exp2((_1391.w + (-0.5)) * 20.0) * 2.0;
        float _1425 = _1424 * (_1391.x + (-0.5));
        float _1426 = _1424 * (_1391.y + (-0.5));
        float _1427 = _1424 * (_1391.z + (-0.5));
        float _1434 = exp2((_1398.w + (-0.5)) * 20.0) * 2.0;
        float _1435 = _1434 * (_1398.x + (-0.5));
        float _1436 = _1434 * (_1398.y + (-0.5));
        float _1437 = _1434 * (_1398.z + (-0.5));
        float _1444 = exp2((_1405.w + (-0.5)) * 20.0) * 2.0;
        float _1445 = _1444 * (_1405.x + (-0.5));
        float _1446 = _1444 * (_1405.y + (-0.5));
        float _1447 = _1444 * (_1405.z + (-0.5));
        float _1454 = exp2((_1412.w + (-0.5)) * 20.0) * 2.0;
        float _1455 = _1454 * (_1412.x + (-0.5));
        float _1456 = _1454 * (_1412.y + (-0.5));
        float _1457 = _1454 * (_1412.z + (-0.5));
        float _1458 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1459 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1460 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1461 = _1425 * 0.5;
        float _1462 = _1435 * 0.5;
        float _1463 = _1445 * 0.5;
        float _1464 = dot(vec3(_1461, _1462, _1463), vec3(_1461, _1462, _1463));
        float _1469 = (_1464 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1464);
        float _1477 = (dot(vec3(_650, _651, _652), vec3(_1469 * _1461, _1469 * _1462, _1469 * _1463)) + 1.0) * 0.5;
        float _4257 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1486 = sqrt(((_1462 * _1462) + (_1461 * _1461)) + (_1463 * _1463)) / (_1458 + 9.9999997473787516355514526367188e-06);
        float _4268 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
        float _1487 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
        float _1488 = _1487 * 2.0;
        float _1492 = (1.0 - _1487) / (_1487 + 1.0);
        float _4279 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1493 = isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0));
        float _1502 = ((((1.0 - _1493) * (_1488 + 2.0)) * exp2(log2(isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0))) * (_1488 + 1.0))) + _1493) * _1458;
        float _1503 = _1426 * 0.5;
        float _1504 = _1436 * 0.5;
        float _1505 = _1446 * 0.5;
        float _1506 = dot(vec3(_1503, _1504, _1505), vec3(_1503, _1504, _1505));
        float _1511 = (_1506 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1506);
        float _1519 = (dot(vec3(_650, _651, _652), vec3(_1511 * _1503, _1511 * _1504, _1511 * _1505)) + 1.0) * 0.5;
        float _4290 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
        float _1528 = sqrt(((_1504 * _1504) + (_1503 * _1503)) + (_1505 * _1505)) / (_1459 + 9.9999997473787516355514526367188e-06);
        float _4301 = isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0));
        float _1529 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
        float _1530 = _1529 * 2.0;
        float _1534 = (1.0 - _1529) / (_1529 + 1.0);
        float _4312 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1535 = isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0));
        float _1544 = ((((1.0 - _1535) * (_1530 + 2.0)) * exp2(log2(isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0))) * (_1530 + 1.0))) + _1535) * _1459;
        float _1545 = _1427 * 0.5;
        float _1546 = _1437 * 0.5;
        float _1547 = _1447 * 0.5;
        float _1548 = dot(vec3(_1545, _1546, _1547), vec3(_1545, _1546, _1547));
        float _1553 = (_1548 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1548);
        float _1561 = (dot(vec3(_650, _651, _652), vec3(_1553 * _1545, _1553 * _1546, _1553 * _1547)) + 1.0) * 0.5;
        float _4323 = isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0));
        float _1570 = sqrt(((_1546 * _1546) + (_1545 * _1545)) + (_1547 * _1547)) / (_1460 + 9.9999997473787516355514526367188e-06);
        float _4334 = isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0));
        float _1571 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
        float _1572 = _1571 * 2.0;
        float _1576 = (1.0 - _1571) / (_1571 + 1.0);
        float _4345 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
        float _1577 = isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0));
        float _1586 = ((((1.0 - _1577) * (_1572 + 2.0)) * exp2(log2(isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0))) * (_1572 + 1.0))) + _1577) * _1460;
        _1594 = _1427;
        _1595 = _1426;
        _1596 = _1425;
        _1597 = _1437;
        _1598 = _1436;
        _1599 = _1435;
        _1600 = _1447;
        _1601 = _1446;
        _1602 = _1445;
        _1603 = _1460;
        _1604 = _1459;
        _1605 = _1458;
        _1606 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0)));
        _1607 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0)));
        _1608 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0)));
    }
    else
    {
        _1594 = _1282;
        _1595 = _1282;
        _1596 = _1282;
        _1597 = _1282;
        _1598 = _1282;
        _1599 = _1282;
        _1600 = _1282;
        _1601 = _1282;
        _1602 = _1282;
        _1603 = _1282;
        _1604 = _1282;
        _1605 = _1282;
        _1606 = 0.0;
        _1607 = 0.0;
        _1608 = 0.0;
    }
    float _1618 = (cbModelParam._m0[1u].x * (_1606 - _1294)) + _1294;
    float _1619 = (cbModelParam._m0[1u].x * (_1607 - _1295)) + _1295;
    float _1620 = (cbModelParam._m0[1u].x * (_1608 - _1296)) + _1296;
    float _1641 = fma(_1620, cbSceneParam._m0[89u].z, fma(_1619, cbSceneParam._m0[89u].y, _1618 * cbSceneParam._m0[89u].x));
    float _1644 = fma(_1620, cbSceneParam._m0[90u].z, fma(_1619, cbSceneParam._m0[90u].y, _1618 * cbSceneParam._m0[90u].x));
    float _1647 = fma(_1620, cbSceneParam._m0[91u].z, fma(_1619, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1618));
    float _1662 = _887 * 0.5;
    float _1663 = _888 * 0.5;
    float _1664 = _889 * 0.5;
    float _1665 = dot(vec4(_1662, _1663, _1664, 1.0), vec4(_1596, _1599, _1602, _1605));
    float _1668 = dot(vec4(_1662, _1663, _1664, 1.0), vec4(_1595, _1598, _1601, _1604));
    float _1671 = dot(vec4(_1662, _1663, _1664, 1.0), vec4(_1594, _1597, _1600, _1603));
    float _1705;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1678 = dot(vec4(_1662, _1663, _1664, 1.0), vec4(_1281, _1285, _1288, _1291));
        float _1682 = dot(vec4(_1662, _1663, _1664, 1.0), vec4(_1283, _1286, _1289, _1292));
        float _1686 = dot(vec4(_1662, _1663, _1664, 1.0), vec4(_1284, _1287, _1290, _1293));
        float _1693 = dot(vec4(cbModelParam._m0[39u]), vec4(_1662, _1663, _1664, 1.0));
        _1705 = dot(vec3(isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0)), isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0)), isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1693) ? 0.0 : (isnan(0.0) ? _1693 : max(0.0, _1693))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1705 = 1.0;
    }
    float _1716;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1707 = dot(vec4(cbModelParam._m0[40u]), vec4(_1662, _1663, _1664, 1.0));
        _1716 = dot(vec3(isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0)), isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0)), isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1707) ? 0.0 : (isnan(0.0) ? _1707 : max(0.0, _1707))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1716 = 1.0;
    }
    float _1720 = (_1716 * cbModelParam._m0[1u].x) + (_1705 * (1.0 - cbModelParam._m0[1u].x));
    float _1730 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _794);
    float _1731 = isnan(_1730) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1730 : min(cbModelParam._m0[25u].z, _1730));
    float _1812;
    float _1814;
    float _1816;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1779 = fma(_951, cbModelParam._m0[13u].z, fma(_947, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _943)) + cbModelParam._m0[13u].w;
        float _1783 = fma(_951, cbModelParam._m0[14u].z, fma(_947, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _943)) + cbModelParam._m0[14u].w;
        float _1787 = fma(_951, cbModelParam._m0[15u].z, fma(_947, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _943)) + cbModelParam._m0[15u].w;
        float _1790 = fma(_889, cbModelParam._m0[13u].z, fma(_888, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _887));
        float _1793 = fma(_889, cbModelParam._m0[14u].z, fma(_888, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _887));
        float _1796 = fma(_889, cbModelParam._m0[15u].z, fma(_888, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _887));
        float _1824;
        if (_1790 > 0.0)
        {
            _1824 = abs((1.0 - _1779) / _1790);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1790 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1779 + 1.0) / _1790);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1824 = frontier_phi_19_17_ladder;
        }
        float _1996;
        if (_1793 > 0.0)
        {
            _1996 = abs((1.0 - _1783) / _1793);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1793 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1783 + 1.0) / _1793);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1996 = frontier_phi_28_24_ladder;
        }
        float _2291;
        if (_1796 > 0.0)
        {
            _2291 = abs((1.0 - _1787) / _1796);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1796 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1787 + 1.0) / _1796);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2291 = frontier_phi_40_35_ladder;
        }
        float _2293 = isnan(_1996) ? _1824 : (isnan(_1824) ? _1996 : min(_1824, _1996));
        float _2294 = isnan(_2291) ? _2293 : (isnan(_2293) ? _2291 : min(_2293, _2291));
        float _2298 = (_2294 * _1790) + _1779;
        float _2299 = (_2294 * _1793) + _1783;
        float _2300 = (_2294 * _1796) + _1787;
        float _2301 = _2294 * 9.9999997473787516355514526367188e-05;
        float _2303 = (-1.0) - _2301;
        float _2305 = _2301 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2300 > _2305) || ((_2300 < _2303) || ((_2299 > _2305) || ((_2299 < _2303) || ((_2298 < _2303) || (_2298 > _2305))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2445 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2300, cbModelParam._m0[9u].z, fma(_2299, cbModelParam._m0[9u].y, _2298 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2300, cbModelParam._m0[10u].z, fma(_2299, cbModelParam._m0[10u].y, _2298 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2300, cbModelParam._m0[11u].z, fma(_2299, cbModelParam._m0[11u].y, _2298 * cbModelParam._m0[11u].x))), _1731);
            frontier_phi_18_40_ladder = _2445.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2445.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2445.x * cbModelParam._m0[1u].y;
        }
        _1812 = frontier_phi_18_40_ladder_2;
        _1814 = frontier_phi_18_40_ladder_1;
        _1816 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1800 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_887, _888, _889), _1731);
        _1812 = _1800.x * cbModelParam._m0[1u].y;
        _1814 = _1800.y * cbModelParam._m0[1u].y;
        _1816 = _1800.z * cbModelParam._m0[1u].y;
    }
    float _1820 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _794);
    float _1821 = isnan(_1820) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1820 : min(cbModelParam._m0[25u].w, _1820));
    float _1911;
    float _1913;
    float _1915;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1875 = fma(_951, cbModelParam._m0[21u].z, fma(_947, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _943)) + cbModelParam._m0[21u].w;
        float _1879 = fma(_951, cbModelParam._m0[22u].z, fma(_947, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _943)) + cbModelParam._m0[22u].w;
        float _1883 = fma(_951, cbModelParam._m0[23u].z, fma(_947, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _943)) + cbModelParam._m0[23u].w;
        float _1886 = fma(_889, cbModelParam._m0[21u].z, fma(_888, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _887));
        float _1889 = fma(_889, cbModelParam._m0[22u].z, fma(_888, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _887));
        float _1892 = fma(_889, cbModelParam._m0[23u].z, fma(_888, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _887));
        float _2001;
        if (_1886 > 0.0)
        {
            _2001 = abs((1.0 - _1875) / _1886);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1886 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1875 + 1.0) / _1886);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2001 = frontier_phi_30_26_ladder;
        }
        float _2318;
        if (_1889 > 0.0)
        {
            _2318 = abs((1.0 - _1879) / _1889);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1889 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1879 + 1.0) / _1889);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2318 = frontier_phi_42_37_ladder;
        }
        float _2656;
        if (_1892 > 0.0)
        {
            _2656 = abs((1.0 - _1883) / _1892);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_1892 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_1883 + 1.0) / _1892);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2656 = frontier_phi_52_49_ladder;
        }
        float _2658 = isnan(_2318) ? _2001 : (isnan(_2001) ? _2318 : min(_2001, _2318));
        float _2659 = isnan(_2656) ? _2658 : (isnan(_2658) ? _2656 : min(_2658, _2656));
        float _2663 = (_2659 * _1886) + _1875;
        float _2664 = (_2659 * _1889) + _1879;
        float _2665 = (_2659 * _1892) + _1883;
        float _2666 = _2659 * 9.9999997473787516355514526367188e-05;
        float _2667 = (-1.0) - _2666;
        float _2669 = _2666 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2665 > _2669) || ((_2665 < _2667) || ((_2664 > _2669) || ((_2664 < _2667) || ((_2663 < _2667) || (_2663 > _2669))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2787 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2665, cbModelParam._m0[17u].z, fma(_2664, cbModelParam._m0[17u].y, _2663 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2665, cbModelParam._m0[18u].z, fma(_2664, cbModelParam._m0[18u].y, _2663 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2665, cbModelParam._m0[19u].z, fma(_2664, cbModelParam._m0[19u].y, _2663 * cbModelParam._m0[19u].x))), _1821);
            frontier_phi_27_52_ladder = _2787.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2787.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2787.x * cbModelParam._m0[1u].z;
        }
        _1911 = frontier_phi_27_52_ladder_2;
        _1913 = frontier_phi_27_52_ladder_1;
        _1915 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1895 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_887, _888, _889), _1821);
        _1911 = _1895.x * cbModelParam._m0[1u].z;
        _1913 = _1895.y * cbModelParam._m0[1u].z;
        _1915 = _1895.z * cbModelParam._m0[1u].z;
    }
    float _1928 = (((_914 * _864) + _915) * _879) * ((cbModelParam._m0[1u].w * (_1911 - _1812)) + _1812);
    float _1930 = (((_914 * _866) + _915) * _879) * ((cbModelParam._m0[1u].w * (_1913 - _1814)) + _1814);
    float _1932 = (((_914 * _867) + _915) * _879) * ((cbModelParam._m0[1u].w * (_1915 - _1816)) + _1816);
    float _1935 = fma(_1932, cbSceneParam._m0[89u].z, fma(_1930, cbSceneParam._m0[89u].y, _1928 * cbSceneParam._m0[89u].x));
    float _1938 = fma(_1932, cbSceneParam._m0[90u].z, fma(_1930, cbSceneParam._m0[90u].y, _1928 * cbSceneParam._m0[90u].x));
    float _1941 = fma(_1932, cbSceneParam._m0[91u].z, fma(_1930, cbSceneParam._m0[91u].y, _1928 * cbSceneParam._m0[91u].x));
    float _1975 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1979 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1983 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1987 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1988 = _1975 / _1987;
    float _1989 = _1979 / _1987;
    float _1990 = _1983 / _1987;
    float _2137;
    float _2138;
    float _2139;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2017 = ((uint(_1990 > cbSceneParam._m0[59u].y) + uint(_1990 > cbSceneParam._m0[59u].x)) + uint(_1990 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2018 = _2017 + 43u;
        uint _2026 = _2017 + 44u;
        uint _2034 = _2017 + 45u;
        uint _2042 = _2017 + 46u;
        float _2053 = fma(_1987, cbSceneParam._m0[_2018].w, fma(_1983, cbSceneParam._m0[_2018].z, fma(_1979, cbSceneParam._m0[_2018].y, _1975 * cbSceneParam._m0[_2018].x)));
        float _2057 = fma(_1987, cbSceneParam._m0[_2026].w, fma(_1983, cbSceneParam._m0[_2026].z, fma(_1979, cbSceneParam._m0[_2026].y, _1975 * cbSceneParam._m0[_2026].x)));
        float _2065 = fma(_1987, cbSceneParam._m0[_2042].w, fma(_1983, cbSceneParam._m0[_2042].z, fma(_1979, cbSceneParam._m0[_2042].y, _1975 * cbSceneParam._m0[_2042].x)));
        float _2070 = cbSceneParam._m0[33u].z * _2065;
        float _2072 = cbSceneParam._m0[33u].w * _2065;
        float _2075 = fma(_1987, cbSceneParam._m0[_2034].w, fma(_1983, cbSceneParam._m0[_2034].z, fma(_1979, cbSceneParam._m0[_2034].y, _1975 * cbSceneParam._m0[_2034].x))) / _2065;
        float _2123 = (cbSceneParam._m0[33u].x - sqrt(((_1989 * _1989) + (_1988 * _1988)) + (_1990 * _1990))) * cbSceneParam._m0[33u].y;
        float _4471 = isnan(0.0) ? _2123 : (isnan(_2123) ? 0.0 : max(_2123, 0.0));
        float _2130 = (isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2070 + _2053) / _2065, (_2072 + _2057) / _2065), _2075), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2072 + _2053) / _2065, (_2057 - _2070) / _2065), _2075), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2053 - _2070) / _2065, (_2057 - _2072) / _2065), _2075), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2053 - _2072) / _2065, (_2070 + _2057) / _2065), _2075), 0.0)).x), vec4(0.25)));
        _2137 = 1.0 - (_2130 * cbSceneParam._m0[34u].x);
        _2138 = 1.0 - (_2130 * cbSceneParam._m0[34u].y);
        _2139 = 1.0 - (_2130 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2137 = 1.0;
        _2138 = 1.0;
        _2139 = 1.0;
    }
    float _2203;
    float _2205;
    float _2207;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2191 = fma(_1987, cbSceneParam._m0[63u].w, fma(_1983, cbSceneParam._m0[63u].z, fma(_1979, cbSceneParam._m0[63u].y, _1975 * cbSceneParam._m0[63u].x)));
        float _2192 = fma(_1987, cbSceneParam._m0[60u].w, fma(_1983, cbSceneParam._m0[60u].z, fma(_1979, cbSceneParam._m0[60u].y, _1975 * cbSceneParam._m0[60u].x))) / _2191;
        float _2193 = fma(_1987, cbSceneParam._m0[61u].w, fma(_1983, cbSceneParam._m0[61u].z, fma(_1979, cbSceneParam._m0[61u].y, _1975 * cbSceneParam._m0[61u].x))) / _2191;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2192 >= cbSceneParam._m0[64u].x) && (_2193 >= cbSceneParam._m0[64u].y)) && (_2192 <= cbSceneParam._m0[64u].z)) && (_2193 <= cbSceneParam._m0[64u].w))
        {
            float _2331 = fma(_1987, cbSceneParam._m0[62u].w, fma(_1983, cbSceneParam._m0[62u].z, fma(_1979, cbSceneParam._m0[62u].y, _1975 * cbSceneParam._m0[62u].x))) / _2191;
            float _2335 = isnan(cbSceneParam._m0[41u].w) ? _2331 : (isnan(_2331) ? cbSceneParam._m0[41u].w : max(_2331, cbSceneParam._m0[41u].w));
            float _2378 = (cbSceneParam._m0[33u].x - sqrt(((_1989 * _1989) + (_1988 * _1988)) + (_1990 * _1990))) * cbSceneParam._m0[33u].y;
            float _4487 = isnan(0.0) ? _2378 : (isnan(_2378) ? 0.0 : max(_2378, 0.0));
            float _2385 = (isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2192, cbSceneParam._m0[33u].w + _2193), _2335), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2192, _2193 - cbSceneParam._m0[33u].z), _2335), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2192 - cbSceneParam._m0[33u].z, _2193 - cbSceneParam._m0[33u].w), _2335), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2192 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2193), _2335), 0.0)).x), vec4(0.25)));
            float _2389 = 1.0 - (_2385 * cbSceneParam._m0[34u].x);
            float _2390 = 1.0 - (_2385 * cbSceneParam._m0[34u].y);
            float _2391 = 1.0 - (_2385 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2390) ? _2138 : (isnan(_2138) ? _2390 : min(_2138, _2390));
            frontier_phi_39_38_ladder_1 = isnan(_2389) ? _2137 : (isnan(_2137) ? _2389 : min(_2137, _2389));
            frontier_phi_39_38_ladder_2 = isnan(_2391) ? _2139 : (isnan(_2139) ? _2391 : min(_2139, _2391));
        }
        else
        {
            frontier_phi_39_38_ladder = _2138;
            frontier_phi_39_38_ladder_1 = _2137;
            frontier_phi_39_38_ladder_2 = _2139;
        }
        _2203 = frontier_phi_39_38_ladder_1;
        _2205 = frontier_phi_39_38_ladder;
        _2207 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _2203 = _2137;
        _2205 = _2138;
        _2207 = _2139;
    }
    uvec4 _2212 = floatBitsToUint(cbInstanceData._m0[_807 + 5u]);
    uint _2214 = _2212.x * 14u;
    uint _2215 = _2214 + 13u;
    float _2222 = _879 + (-1.0);
    float _2227 = (cbLight._m0[_2215].x * _2222) + 1.0;
    float _2228 = (cbLight._m0[_2215].y * _2222) + 1.0;
    float _2229 = (cbLight._m0[_2215].z * _2222) + 1.0;
    float _2230 = (cbLight._m0[_2215].w * _2222) + 1.0;
    uint _2231 = _2214 + 5u;
    float _2237 = isnan(1.0) ? _2228 : (isnan(_2228) ? 1.0 : min(_2228, 1.0));
    uint _2241 = _2214 + 4u;
    float _2250 = isnan(1.0) ? _2227 : (isnan(_2227) ? 1.0 : min(_2227, 1.0));
    uint _2254 = _2214 | 1u;
    float _2265 = dot(vec3(cbLight._m0[_2214].xyz), vec3(_650, _651, _652));
    float _2268 = dot(vec3(cbLight._m0[_2254].xyz), vec3(_650, _651, _652));
    float _4523 = isnan(0.0) ? _2265 : (isnan(_2265) ? 0.0 : max(_2265, 0.0));
    float _4534 = isnan(0.0) ? _2268 : (isnan(_2268) ? 0.0 : max(_2268, 0.0));
    float _2273 = (isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0))) * 0.3183098733425140380859375;
    float _2275 = (isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0))) * 0.3183098733425140380859375;
    float _2282 = ((cbLight._m0[_2231].x * _2237) * _2275) + (((cbLight._m0[_2241].x * _2203) * _2250) * _2273);
    float _2283 = ((_2237 * cbLight._m0[_2231].y) * _2275) + (((cbLight._m0[_2241].y * _2205) * _2250) * _2273);
    float _2284 = ((_2237 * cbLight._m0[_2231].z) * _2275) + (((cbLight._m0[_2241].z * _2207) * _2250) * _2273);
    uvec4 _2288 = floatBitsToUint(cbLight._m0[_2214 + 12u]);
    bool _2290 = _2288.x == 0u;
    float _2392;
    float _2394;
    float _2396;
    if (_2290)
    {
        _2392 = _2282;
        _2394 = _2283;
        _2396 = _2284;
    }
    else
    {
        uint _2400 = _2214 + 6u;
        float _2416 = (dot(vec3(cbLight._m0[_2214 + 2u].xyz), vec3(_650, _651, _652)) * 0.5) + 0.5;
        float _2417 = _2416 * _2416;
        float _4545 = isnan(0.0) ? _2417 : (isnan(_2417) ? 0.0 : max(_2417, 0.0));
        float _2418 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
        float _2419 = isnan(1.0) ? _2229 : (isnan(_2229) ? 1.0 : min(_2229, 1.0));
        _2392 = (((cbLight._m0[_2400].x * 0.3183098733425140380859375) * _2418) * _2419) + _2282;
        _2394 = (((cbLight._m0[_2400].y * 0.3183098733425140380859375) * _2418) * _2419) + _2283;
        _2396 = (((cbLight._m0[_2400].z * 0.3183098733425140380859375) * _2418) * _2419) + _2284;
    }
    bool _2399 = _2288.y == 0u;
    float _2454;
    float _2456;
    float _2458;
    if (_2399)
    {
        _2454 = _2392;
        _2456 = _2394;
        _2458 = _2396;
    }
    else
    {
        uint _2627 = _2214 + 7u;
        float _2643 = (dot(vec3(cbLight._m0[_2214 + 3u].xyz), vec3(_650, _651, _652)) * 0.5) + 0.5;
        float _2644 = _2643 * _2643;
        float _4561 = isnan(0.0) ? _2644 : (isnan(_2644) ? 0.0 : max(_2644, 0.0));
        float _2645 = isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0));
        float _2646 = isnan(1.0) ? _2230 : (isnan(_2230) ? 1.0 : min(_2230, 1.0));
        _2454 = (((cbLight._m0[_2627].x * 0.3183098733425140380859375) * _2645) * _2646) + _2392;
        _2456 = (((cbLight._m0[_2627].y * 0.3183098733425140380859375) * _2645) * _2646) + _2394;
        _2458 = (((cbLight._m0[_2627].z * 0.3183098733425140380859375) * _2645) * _2646) + _2396;
    }
    uint _2461 = _2214 + 8u;
    float _2474 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2214].w)) * _794) * 0.949999988079071044921875);
    float _2475 = _2474 * _2474;
    float _2476 = cbLight._m0[_2214].x + _730;
    float _2477 = cbLight._m0[_2214].y + _731;
    float _2478 = cbLight._m0[_2214].z + _732;
    float _2482 = inversesqrt(dot(vec3(_2476, _2477, _2478), vec3(_2476, _2477, _2478)));
    float _2483 = _2482 * _2476;
    float _2484 = _2482 * _2477;
    float _2485 = _2482 * _2478;
    float _2486 = dot(vec3(_650, _651, _652), vec3(cbLight._m0[_2214].xyz));
    float _4577 = isnan(0.0) ? _2486 : (isnan(_2486) ? 0.0 : max(_2486, 0.0));
    float _2489 = isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0));
    float _4588 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _2490 = isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0));
    float _2491 = dot(vec3(_650, _651, _652), vec3(_2483, _2484, _2485));
    float _4599 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
    float _2494 = isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0));
    float _2495 = dot(vec3(cbLight._m0[_2214].xyz), vec3(_2483, _2484, _2485));
    float _4610 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0));
    float _2499 = _2475 * _2475;
    float _2503 = ((_2494 * _2494) * (_2499 + (-1.0))) + 1.0;
    float _2511 = exp2(log2(1.0 - (isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0)))) * 5.0);
    float _2512 = 0.959999978542327880859375 - _861;
    float _2514 = 0.959999978542327880859375 - _862;
    float _2515 = 0.959999978542327880859375 - _863;
    float _2522 = 1.0 - _2475;
    float _2533 = (0.5 / (((_2490 * ((_2489 * _2522) + _2475)) + 9.9999999392252902907785028219223e-09) + (((_2490 * _2522) + _2475) * _2489))) * _2489;
    float _4621 = isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0));
    float _2535 = (isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0))) * (_2499 / ((_2503 * _2503) * 3.141590118408203125));
    uint _2549 = _2214 + 9u;
    float _2560 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2254].w)) * _794) * 0.949999988079071044921875);
    float _2561 = _2560 * _2560;
    float _2562 = cbLight._m0[_2254].x + _730;
    float _2563 = cbLight._m0[_2254].y + _731;
    float _2564 = cbLight._m0[_2254].z + _732;
    float _2568 = inversesqrt(dot(vec3(_2562, _2563, _2564), vec3(_2562, _2563, _2564)));
    float _2569 = _2568 * _2562;
    float _2570 = _2568 * _2563;
    float _2571 = _2568 * _2564;
    float _2572 = dot(vec3(_650, _651, _652), vec3(cbLight._m0[_2254].xyz));
    float _4632 = isnan(0.0) ? _2572 : (isnan(_2572) ? 0.0 : max(_2572, 0.0));
    float _2575 = isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0));
    float _2576 = dot(vec3(_650, _651, _652), vec3(_2569, _2570, _2571));
    float _4643 = isnan(0.0) ? _2576 : (isnan(_2576) ? 0.0 : max(_2576, 0.0));
    float _2579 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
    float _2580 = dot(vec3(cbLight._m0[_2254].xyz), vec3(_2569, _2570, _2571));
    float _4654 = isnan(0.0) ? _2580 : (isnan(_2580) ? 0.0 : max(_2580, 0.0));
    float _2584 = _2561 * _2561;
    float _2588 = ((_2579 * _2579) * (_2584 + (-1.0))) + 1.0;
    float _2595 = exp2(log2(1.0 - (isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0)))) * 5.0);
    float _2602 = 1.0 - _2561;
    float _2612 = (0.5 / (((_2490 * ((_2575 * _2602) + _2561)) + 9.9999999392252902907785028219223e-09) + (((_2490 * _2602) + _2561) * _2575))) * _2575;
    float _4665 = isnan(0.0) ? _2612 : (isnan(_2612) ? 0.0 : max(_2612, 0.0));
    float _2614 = (isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0))) * (_2584 / ((_2588 * _2588) * 3.141590118408203125));
    float _2624 = (((((_2595 * _2512) + _864) * cbLight._m0[_2549].x) * _2614) * _2237) + ((((cbLight._m0[_2461].x * _2203) * ((_2511 * _2512) + _864)) * _2535) * _2250);
    float _2625 = (((((_2595 * _2514) + _866) * cbLight._m0[_2549].y) * _2614) * _2237) + ((((cbLight._m0[_2461].y * _2205) * ((_2511 * _2514) + _866)) * _2535) * _2250);
    float _2626 = (((((_2595 * _2515) + _867) * cbLight._m0[_2549].z) * _2614) * _2237) + ((((cbLight._m0[_2461].z * _2207) * ((_2511 * _2515) + _867)) * _2535) * _2250);
    float _2682;
    float _2684;
    float _2686;
    if (_2290)
    {
        _2682 = _2624;
        _2684 = _2625;
        _2686 = _2626;
    }
    else
    {
        uint _2688 = _2214 + 2u;
        uint _2692 = _2214 + 10u;
        float _2706 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2688].w)) * _794) * 0.949999988079071044921875);
        float _2707 = _2706 * _2706;
        float _2708 = cbLight._m0[_2688].x + _730;
        float _2709 = cbLight._m0[_2688].y + _731;
        float _2710 = cbLight._m0[_2688].z + _732;
        float _2714 = inversesqrt(dot(vec3(_2708, _2709, _2710), vec3(_2708, _2709, _2710)));
        float _2715 = _2714 * _2708;
        float _2716 = _2714 * _2709;
        float _2717 = _2714 * _2710;
        float _2718 = dot(vec3(_650, _651, _652), vec3(cbLight._m0[_2688].xyz));
        float _4676 = isnan(0.0) ? _2718 : (isnan(_2718) ? 0.0 : max(_2718, 0.0));
        float _2721 = isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0));
        float _2722 = dot(vec3(_650, _651, _652), vec3(_2715, _2716, _2717));
        float _4687 = isnan(0.0) ? _2722 : (isnan(_2722) ? 0.0 : max(_2722, 0.0));
        float _2725 = isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0));
        float _2726 = dot(vec3(cbLight._m0[_2688].xyz), vec3(_2715, _2716, _2717));
        float _4698 = isnan(0.0) ? _2726 : (isnan(_2726) ? 0.0 : max(_2726, 0.0));
        float _2730 = _2707 * _2707;
        float _2734 = ((_2725 * _2725) * (_2730 + (-1.0))) + 1.0;
        float _2741 = exp2(log2(1.0 - (isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0)))) * 5.0);
        float _2748 = 1.0 - _2707;
        float _2758 = (0.5 / (((_2490 * ((_2721 * _2748) + _2707)) + 9.9999999392252902907785028219223e-09) + (((_2490 * _2748) + _2707) * _2721))) * _2721;
        float _4709 = isnan(0.0) ? _2758 : (isnan(_2758) ? 0.0 : max(_2758, 0.0));
        float _2760 = (isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0))) * (_2730 / ((_2734 * _2734) * 3.141590118408203125));
        float _2761 = isnan(1.0) ? _2229 : (isnan(_2229) ? 1.0 : min(_2229, 1.0));
        _2682 = (((((_2741 * _2512) + _864) * cbLight._m0[_2692].x) * _2760) * _2761) + _2624;
        _2684 = (((((_2741 * _2514) + _866) * cbLight._m0[_2692].y) * _2760) * _2761) + _2625;
        _2686 = (((((_2741 * _2515) + _867) * cbLight._m0[_2692].z) * _2760) * _2761) + _2626;
    }
    float _2792;
    float _2794;
    float _2796;
    if (_2399)
    {
        _2792 = _2682;
        _2794 = _2684;
        _2796 = _2686;
    }
    else
    {
        uint _2803 = _2214 + 3u;
        uint _2807 = _2214 + 11u;
        float _2821 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2803].w)) * _794) * 0.949999988079071044921875);
        float _2822 = _2821 * _2821;
        float _2823 = cbLight._m0[_2803].x + _730;
        float _2824 = cbLight._m0[_2803].y + _731;
        float _2825 = cbLight._m0[_2803].z + _732;
        float _2829 = inversesqrt(dot(vec3(_2823, _2824, _2825), vec3(_2823, _2824, _2825)));
        float _2830 = _2829 * _2823;
        float _2831 = _2829 * _2824;
        float _2832 = _2829 * _2825;
        float _2833 = dot(vec3(_650, _651, _652), vec3(cbLight._m0[_2803].xyz));
        float _4725 = isnan(0.0) ? _2833 : (isnan(_2833) ? 0.0 : max(_2833, 0.0));
        float _2836 = isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0));
        float _2837 = dot(vec3(_650, _651, _652), vec3(_2830, _2831, _2832));
        float _4736 = isnan(0.0) ? _2837 : (isnan(_2837) ? 0.0 : max(_2837, 0.0));
        float _2840 = isnan(1.0) ? _4736 : (isnan(_4736) ? 1.0 : min(_4736, 1.0));
        float _2841 = dot(vec3(cbLight._m0[_2803].xyz), vec3(_2830, _2831, _2832));
        float _4747 = isnan(0.0) ? _2841 : (isnan(_2841) ? 0.0 : max(_2841, 0.0));
        float _2845 = _2822 * _2822;
        float _2849 = ((_2840 * _2840) * (_2845 + (-1.0))) + 1.0;
        float _2856 = exp2(log2(1.0 - (isnan(1.0) ? _4747 : (isnan(_4747) ? 1.0 : min(_4747, 1.0)))) * 5.0);
        float _2863 = 1.0 - _2822;
        float _2873 = (0.5 / (((_2490 * ((_2836 * _2863) + _2822)) + 9.9999999392252902907785028219223e-09) + (((_2490 * _2863) + _2822) * _2836))) * _2836;
        float _4758 = isnan(0.0) ? _2873 : (isnan(_2873) ? 0.0 : max(_2873, 0.0));
        float _2875 = (isnan(1.0) ? _4758 : (isnan(_4758) ? 1.0 : min(_4758, 1.0))) * (_2845 / ((_2849 * _2849) * 3.141590118408203125));
        float _2876 = isnan(1.0) ? _2230 : (isnan(_2230) ? 1.0 : min(_2230, 1.0));
        _2792 = (((((_2856 * _2512) + _864) * cbLight._m0[_2807].x) * _2875) * _2876) + _2682;
        _2794 = (((((_2856 * _2514) + _866) * cbLight._m0[_2807].y) * _2875) * _2876) + _2684;
        _2796 = (((((_2856 * _2515) + _867) * cbLight._m0[_2807].z) * _2875) * _2876) + _2686;
    }
    float _2941;
    float _2943;
    float _2945;
    float _2947;
    float _2949;
    float _2951;
    if (_2212.y == 0u)
    {
        uvec4 _2897 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2898 = _2897.x;
        uint _2909 = uint((float(_2897.y) * floor(float(uint(cbSceneParam._m0[85u].y * _752) / _2898))) + floor(float(uint(cbSceneParam._m0[85u].x * _751) / _2898)));
        float _2919 = (log2(_1990 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2920 = isnan(0.0) ? _2919 : (isnan(_2919) ? 0.0 : max(_2919, 0.0));
        uint _2923 = uint(isnan(14.0) ? _2920 : (isnan(_2920) ? 14.0 : min(_2920, 14.0)));
        uvec4 _2928 = texelFetch(g_lightClusterGridBuffer, int(((_2923 << 2u) + (_2909 << 6u)) >> 2u));
        uint _2929 = _2928.x;
        uint _2930 = _2897.z;
        float _3008;
        float _3010;
        float _3012;
        float _3014;
        float _3016;
        float _3018;
        if (((((1u << ((_2930 >> 4u) & 15u)) + 4294967295u) & _2929) == 0u) || ((_2930 & 240u) == 0u))
        {
            _3008 = 0.0;
            _3010 = 0.0;
            _3012 = 0.0;
            _3014 = 0.0;
            _3016 = 0.0;
            _3018 = 0.0;
        }
        else
        {
            float _3009;
            float _3011;
            float _3013;
            float _3015;
            float _3017;
            float _3019;
            float _3160 = 0.0;
            float _3161 = 0.0;
            float _3162 = 0.0;
            float _3163 = 0.0;
            float _3164 = 0.0;
            float _3165 = 0.0;
            uint _3166 = 0u;
            uint _3175;
            bool _3176;
            for (;;)
            {
                _3175 = texelFetch(g_lightClassification, int((((_2923 << 5u) + (_2909 << 9u)) + (_3166 << 2u)) >> 2u)).x;
                _3176 = _3175 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_3176)
                {
                    frontier_phi_73_pred = _3165;
                    frontier_phi_73_pred_1 = _3164;
                    frontier_phi_73_pred_2 = _3163;
                    frontier_phi_73_pred_3 = _3162;
                    frontier_phi_73_pred_4 = _3161;
                    frontier_phi_73_pred_5 = _3160;
                }
                else
                {
                    float _3305;
                    float _3306;
                    float _3307;
                    float _3308;
                    float _3309;
                    float _3310;
                    uint _3311;
                    _3305 = _3160;
                    _3306 = _3161;
                    _3307 = _3162;
                    _3308 = _3163;
                    _3309 = _3164;
                    _3310 = _3165;
                    _3311 = _3175;
                    float _3232;
                    float _3233;
                    float _3234;
                    float _3235;
                    float _3236;
                    float _3237;
                    for (;;)
                    {
                        uint _3315 = uint(findLSB(_3311)) + (_3166 << 5u);
                        uint _3312 = (_3311 + 4294967295u) & _3311;
                        uint _3317 = _3315 * 48u;
                        vec4 _3331 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3317)).x, texelFetch(g_PointLightRenderingBuffer, int(_3317 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3317 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3317 + 3u)).x));
                        uint _3337 = (_3315 * 48u) + 4u;
                        vec4 _3350 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3337)).x, texelFetch(g_PointLightRenderingBuffer, int(_3337 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3337 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3337 + 3u)).x));
                        uint _3356 = (_3315 * 48u) + 8u;
                        vec3 _3367 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3356)).x, texelFetch(g_PointLightRenderingBuffer, int(_3356 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3356 + 2u)).x));
                        float _3371 = _3331.x - _1988;
                        float _3372 = _3331.y - _1989;
                        float _3373 = _3331.z - _1990;
                        float _3374 = dot(vec3(_3371, _3372, _3373), vec3(_3371, _3372, _3373));
                        float _3377 = inversesqrt(_3374);
                        float _3378 = _3377 * _3371;
                        float _3379 = _3377 * _3372;
                        float _3380 = _3377 * _3373;
                        float _3381 = dot(vec3(_775, _778, _781), vec3(_3378, _3379, _3380));
                        float _3386 = 1.0 - (_3374 * _3331.w);
                        float _4784 = isnan(0.0) ? _3386 : (isnan(_3386) ? 0.0 : max(_3386, 0.0));
                        float _3387 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
                        float _3388 = sqrt(_3374) * _3350.w;
                        float _3391 = 1.39999997615814208984375 / (_3388 + 1.39999997615814208984375);
                        float _3392 = _3391 * _3391;
                        float _3395 = ((1.0 - _3392) * _3381) + _3392;
                        float _3398 = _3388 * _3388;
                        float _3402 = ((isnan(0.0) ? _3395 : (isnan(_3395) ? 0.0 : max(_3395, 0.0))) * _3387) / ((_3398 * 0.699999988079071044921875) + 1.0);
                        float _3406 = (-0.0) - _1988;
                        float _3407 = (-0.0) - _1989;
                        float _3408 = (-0.0) - _1990;
                        float _3412 = inversesqrt(dot(vec3(_3406, _3407, _3408), vec3(_3406, _3407, _3408)));
                        float _3413 = _3412 * _3406;
                        float _3414 = _3412 * _3407;
                        float _3415 = _3412 * _3408;
                        float _3422 = exp2(log2(1.0 / ((_3398 * 3.5) + 5.0)) * 0.25);
                        float _3423 = 1.0 - _895;
                        float _3430 = sqrt(1.0 - ((1.0 - (_3423 * _3423)) * (1.0 - (_3422 * _3422))));
                        float _3431 = _3430 * _3430;
                        float _3432 = _3431 * _3431;
                        float _3433 = _3413 + _3378;
                        float _3434 = _3414 + _3379;
                        float _3435 = _3415 + _3380;
                        float _3439 = inversesqrt(dot(vec3(_3433, _3434, _3435), vec3(_3433, _3434, _3435)));
                        float _3443 = dot(vec3(_775, _778, _781), vec3(_3413, _3414, _3415));
                        float _4800 = isnan(0.0) ? _3443 : (isnan(_3443) ? 0.0 : max(_3443, 0.0));
                        float _3446 = isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0));
                        float _3447 = dot(vec3(_775, _778, _781), vec3(_3439 * _3433, _3439 * _3434, _3439 * _3435));
                        float _4811 = isnan(0.0) ? _3447 : (isnan(_3447) ? 0.0 : max(_3447, 0.0));
                        float _3450 = isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0));
                        float _3454 = ((_3450 * _3450) * (_3432 + (-1.0))) + 1.0;
                        float _3455 = _3391 * _3431;
                        float _3456 = _3455 * _3455;
                        float _3459 = ((1.0 - _3456) * _3381) + _3456;
                        float _4822 = isnan(0.0) ? _3459 : (isnan(_3459) ? 0.0 : max(_3459, 0.0));
                        float _3460 = isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0));
                        float _3461 = 1.0 - _3431;
                        float _3471 = (0.5 / (((_3460 * ((_3446 * _3461) + _3431)) + 9.9999999392252902907785028219223e-09) + (((_3460 * _3461) + _3431) * _3446))) * _3460;
                        float _4833 = isnan(0.0) ? _3471 : (isnan(_3471) ? 0.0 : max(_3471, 0.0));
                        float _3482 = (((_3432 * 3.1415927410125732421875) * (isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0)))) / ((_3454 * _3454) * ((_3398 * 2.1991131305694580078125) + 3.141590118408203125))) * _3387;
                        _3235 = (_3402 * _3350.x) + _3308;
                        _3236 = (_3402 * _3350.y) + _3309;
                        _3237 = (_3402 * _3350.z) + _3310;
                        _3232 = (_3482 * _3367.x) + _3305;
                        _3233 = (_3482 * _3367.y) + _3306;
                        _3234 = (_3482 * _3367.z) + _3307;
                        if (_3312 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3305 = _3232;
                            _3306 = _3233;
                            _3307 = _3234;
                            _3308 = _3235;
                            _3309 = _3236;
                            _3310 = _3237;
                            _3311 = _3312;
                        }
                    }
                    frontier_phi_73_pred = _3237;
                    frontier_phi_73_pred_1 = _3236;
                    frontier_phi_73_pred_2 = _3235;
                    frontier_phi_73_pred_3 = _3234;
                    frontier_phi_73_pred_4 = _3233;
                    frontier_phi_73_pred_5 = _3232;
                }
                _3019 = frontier_phi_73_pred;
                _3017 = frontier_phi_73_pred_1;
                _3015 = frontier_phi_73_pred_2;
                _3013 = frontier_phi_73_pred_3;
                _3011 = frontier_phi_73_pred_4;
                _3009 = frontier_phi_73_pred_5;
                uint _3167 = _3166 + 1u;
                if (_3167 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3160 = _3009;
                    _3161 = _3011;
                    _3162 = _3013;
                    _3163 = _3015;
                    _3164 = _3017;
                    _3165 = _3019;
                    _3166 = _3167;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3008 = _3009;
            _3010 = _3011;
            _3012 = _3013;
            _3014 = _3015;
            _3016 = _3017;
            _3018 = _3019;
        }
        uvec4 _3022 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3023 = _3022.z;
        uint _3025 = (_3023 >> 8u) & 15u;
        float _3128;
        float _3130;
        float _3132;
        float _3134;
        float _3136;
        float _3138;
        if (((4294967295u << _3025) & _2929) == 0u)
        {
            _3128 = _3008;
            _3130 = _3010;
            _3132 = _3012;
            _3134 = _3014;
            _3136 = _3016;
            _3138 = _3018;
        }
        else
        {
            float _3153 = inversesqrt(dot(vec3(_1988, _1989, _1990), vec3(_1988, _1989, _1990)));
            float _3154 = _3153 * _1988;
            float _3155 = _3153 * _1989;
            float _3156 = _3153 * _1990;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_3025 < ((_3023 >> 12u) & 15u))
            {
                float _3129;
                float _3131;
                float _3133;
                float _3135;
                float _3137;
                float _3139;
                float _3288 = _3008;
                float _3289 = _3010;
                float _3290 = _3012;
                float _3291 = _3014;
                float _3292 = _3016;
                float _3293 = _3018;
                uint _3294 = _3025;
                uint _3303;
                bool _3304;
                for (;;)
                {
                    _3303 = texelFetch(g_lightClassification, int((((_2923 << 5u) + (_2909 << 9u)) + (_3294 << 2u)) >> 2u)).x;
                    _3304 = _3303 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3304)
                    {
                        frontier_phi_84_pred = _3292;
                        frontier_phi_84_pred_1 = _3291;
                        frontier_phi_84_pred_2 = _3290;
                        frontier_phi_84_pred_3 = _3289;
                        frontier_phi_84_pred_4 = _3288;
                        frontier_phi_84_pred_5 = _3293;
                    }
                    else
                    {
                        float _3496;
                        float _3497;
                        float _3498;
                        float _3499;
                        float _3500;
                        float _3501;
                        float _3791;
                        float _3792;
                        float _3793;
                        float _3794;
                        float _3795;
                        float _3796;
                        float _3509 = _3288;
                        float _3510 = _3289;
                        float _3511 = _3290;
                        float _3512 = _3291;
                        float _3513 = _3292;
                        float _3514 = _3293;
                        uint _3515 = _3303;
                        uint _3516;
                        vec4 _3541;
                        float _3542;
                        vec4 _3557;
                        vec3 _3569;
                        vec4 _3585;
                        vec4 _3600;
                        float _3647;
                        bool _3648;
                        for (;;)
                        {
                            uint _3526 = ((_3294 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3515));
                            _3516 = (_3515 + 4294967295u) & _3515;
                            uint _3528 = _3526 * 40u;
                            _3541 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3528)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3528 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3528 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3528 + 3u)).x));
                            _3542 = _3541.w;
                            uint _3544 = (_3526 * 40u) + 4u;
                            _3557 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3544)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3544 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3544 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3544 + 3u)).x));
                            uint _3559 = (_3526 * 40u) + 8u;
                            _3569 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3559)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3559 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3559 + 2u)).x));
                            uint _3572 = (_3526 * 40u) + 16u;
                            _3585 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3572)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 3u)).x));
                            uint _3587 = (_3526 * 40u) + 20u;
                            _3600 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3587)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 3u)).x));
                            uint _3603 = (_3526 * 40u) + 24u;
                            vec4 _3616 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3603)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3603 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3603 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3603 + 3u)).x));
                            uint _3622 = (_3526 * 40u) + 28u;
                            vec4 _3635 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3622)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3622 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3622 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3622 + 3u)).x));
                            _3647 = fma(_1990, _3635.z, fma(_1989, _3635.y, _3635.x * _1988)) + _3635.w;
                            _3648 = !((fma(_1990, _3616.z, fma(_1989, _3616.y, _3616.x * _1988)) + _3616.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_3648)
                            {
                                float _3675 = _3541.x - _1988;
                                float _3676 = _3541.y - _1989;
                                float _3677 = _3541.z - _1990;
                                float _3678 = dot(vec3(_3675, _3676, _3677), vec3(_3675, _3676, _3677));
                                float _3681 = inversesqrt(_3678);
                                float _3682 = _3681 * _3675;
                                float _3683 = _3681 * _3676;
                                float _3684 = _3681 * _3677;
                                float _3688 = 1.0 - (_3678 / (_3542 * _3542));
                                float _4844 = isnan(0.0) ? _3688 : (isnan(_3688) ? 0.0 : max(_3688, 0.0));
                                float _3689 = isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0));
                                float _3693 = sqrt(_3678) * _3557.w;
                                float _3695 = 1.39999997615814208984375 / (_3693 + 1.39999997615814208984375);
                                float _3696 = _3695 * _3695;
                                float _3699 = ((1.0 - _3696) * dot(vec3(_3682, _3683, _3684), vec3(_775, _778, _781))) + _3696;
                                float _3702 = _3693 * _3693;
                                float _3706 = (fma(_1990, _3585.z, fma(_1989, _3585.y, _3585.x * _1988)) + _3585.w) / _3647;
                                float _3707 = (fma(_1990, _3600.z, fma(_1989, _3600.y, _3600.x * _1988)) + _3600.w) / _3647;
                                float _3711 = 1.0 - dot(vec2(_3706, _3707), vec2(_3706, _3707));
                                float _4860 = isnan(0.0) ? _3711 : (isnan(_3711) ? 0.0 : max(_3711, 0.0));
                                float _3712 = isnan(1.0) ? _4860 : (isnan(_4860) ? 1.0 : min(_4860, 1.0));
                                float _3713 = _3712 * (((isnan(0.0) ? _3699 : (isnan(_3699) ? 0.0 : max(_3699, 0.0))) * _3689) / ((_3702 * 0.699999988079071044921875) + 1.0));
                                float _3725 = exp2(log2(1.0 / ((_3702 * 3.5) + 5.0)) * 0.25);
                                float _3726 = 1.0 - _895;
                                float _3733 = sqrt(1.0 - ((1.0 - (_3726 * _3726)) * (1.0 - (_3725 * _3725))));
                                float _3734 = _3733 * _3733;
                                float _3735 = _3734 * _3734;
                                float _3736 = _3682 - _3154;
                                float _3737 = _3683 - _3155;
                                float _3738 = _3684 - _3156;
                                float _3742 = inversesqrt(dot(vec3(_3736, _3737, _3738), vec3(_3736, _3737, _3738)));
                                float _3746 = dot(vec3(_775, _778, _781), vec3((-0.0) - _3154, (-0.0) - _3155, (-0.0) - _3156));
                                float _4871 = isnan(0.0) ? _3746 : (isnan(_3746) ? 0.0 : max(_3746, 0.0));
                                float _3749 = isnan(1.0) ? _4871 : (isnan(_4871) ? 1.0 : min(_4871, 1.0));
                                float _3750 = dot(vec3(_775, _778, _781), vec3(_3742 * _3736, _3742 * _3737, _3742 * _3738));
                                float _4882 = isnan(0.0) ? _3750 : (isnan(_3750) ? 0.0 : max(_3750, 0.0));
                                float _3753 = isnan(1.0) ? _4882 : (isnan(_4882) ? 1.0 : min(_4882, 1.0));
                                float _3757 = ((_3753 * _3753) * (_3735 + (-1.0))) + 1.0;
                                float _3758 = _3695 * _3734;
                                float _3759 = _3758 * _3758;
                                float _3765 = ((1.0 - _3759) * dot(vec3(_775, _778, _781), vec3(_3682, _3683, _3684))) + _3759;
                                float _4893 = isnan(0.0) ? _3765 : (isnan(_3765) ? 0.0 : max(_3765, 0.0));
                                float _3766 = isnan(1.0) ? _4893 : (isnan(_4893) ? 1.0 : min(_4893, 1.0));
                                float _3767 = 1.0 - _3734;
                                float _3777 = (0.5 / (((_3766 * ((_3749 * _3767) + _3734)) + 9.9999999392252902907785028219223e-09) + (((_3766 * _3767) + _3734) * _3749))) * _3766;
                                float _4904 = isnan(0.0) ? _3777 : (isnan(_3777) ? 0.0 : max(_3777, 0.0));
                                float _3787 = (_3712 * _3689) * (((_3735 * 3.1415927410125732421875) * (isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0)))) / ((_3757 * _3757) * ((_3702 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _3713 * _3557.y;
                                frontier_phi_90_pred_1 = _3713 * _3557.x;
                                frontier_phi_90_pred_2 = _3787 * _3569.z;
                                frontier_phi_90_pred_3 = _3787 * _3569.y;
                                frontier_phi_90_pred_4 = _3787 * _3569.x;
                                frontier_phi_90_pred_5 = _3713 * _3557.z;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _3795 = frontier_phi_90_pred;
                            _3794 = frontier_phi_90_pred_1;
                            _3793 = frontier_phi_90_pred_2;
                            _3792 = frontier_phi_90_pred_3;
                            _3791 = frontier_phi_90_pred_4;
                            _3796 = frontier_phi_90_pred_5;
                            _3499 = _3794 + _3512;
                            _3500 = _3795 + _3513;
                            _3501 = _3796 + _3514;
                            _3496 = _3791 + _3509;
                            _3497 = _3792 + _3510;
                            _3498 = _3793 + _3511;
                            if (_3516 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3509 = _3496;
                                _3510 = _3497;
                                _3511 = _3498;
                                _3512 = _3499;
                                _3513 = _3500;
                                _3514 = _3501;
                                _3515 = _3516;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _3500;
                        frontier_phi_84_pred_1 = _3499;
                        frontier_phi_84_pred_2 = _3498;
                        frontier_phi_84_pred_3 = _3497;
                        frontier_phi_84_pred_4 = _3496;
                        frontier_phi_84_pred_5 = _3501;
                    }
                    _3137 = frontier_phi_84_pred;
                    _3135 = frontier_phi_84_pred_1;
                    _3133 = frontier_phi_84_pred_2;
                    _3131 = frontier_phi_84_pred_3;
                    _3129 = frontier_phi_84_pred_4;
                    _3139 = frontier_phi_84_pred_5;
                    uint _3295 = _3294 + 1u;
                    if (_3295 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3288 = _3129;
                        _3289 = _3131;
                        _3290 = _3133;
                        _3291 = _3135;
                        _3292 = _3137;
                        _3293 = _3139;
                        _3294 = _3295;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _3139;
                frontier_phi_65_66_ladder_1 = _3135;
                frontier_phi_65_66_ladder_2 = _3137;
                frontier_phi_65_66_ladder_3 = _3131;
                frontier_phi_65_66_ladder_4 = _3129;
                frontier_phi_65_66_ladder_5 = _3133;
            }
            else
            {
                frontier_phi_65_66_ladder = _3018;
                frontier_phi_65_66_ladder_1 = _3014;
                frontier_phi_65_66_ladder_2 = _3016;
                frontier_phi_65_66_ladder_3 = _3010;
                frontier_phi_65_66_ladder_4 = _3008;
                frontier_phi_65_66_ladder_5 = _3012;
            }
            _3128 = frontier_phi_65_66_ladder_4;
            _3130 = frontier_phi_65_66_ladder_3;
            _3132 = frontier_phi_65_66_ladder_5;
            _3134 = frontier_phi_65_66_ladder_1;
            _3136 = frontier_phi_65_66_ladder_2;
            _3138 = frontier_phi_65_66_ladder;
        }
        float _3143 = isnan(1.0) ? _879 : (isnan(_879) ? 1.0 : min(_879, 1.0));
        _2941 = (_3143 * _3134) + _2454;
        _2943 = (_3143 * _3136) + _2456;
        _2945 = (_3143 * _3138) + _2458;
        _2947 = ((_3128 * _864) * _3143) + _2792;
        _2949 = ((_3130 * _866) * _3143) + _2794;
        _2951 = ((_3132 * _867) * _3143) + _2796;
    }
    else
    {
        _2941 = _2454;
        _2943 = _2456;
        _2945 = _2458;
        _2947 = _2792;
        _2949 = _2794;
        _2951 = _2796;
    }
    float _4920 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    float _4931 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
    float _4942 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
    float _2968 = ((isnan(1.0) ? _4920 : (isnan(_4920) ? 1.0 : min(_4920, 1.0))) * (_2941 + ((isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0))) * _879))) + ((_2947 + ((isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0))) * _1720)) * cbPerFrame._m0[3u].x);
    float _2969 = ((isnan(1.0) ? _4931 : (isnan(_4931) ? 1.0 : min(_4931, 1.0))) * (_2943 + ((isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0))) * _879))) + ((_2949 + ((isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0))) * _1720)) * cbPerFrame._m0[3u].x);
    float _2970 = ((isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0))) * (_2945 + ((isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0))) * _879))) + ((_2951 + ((isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0))) * _1720)) * cbPerFrame._m0[3u].x);
    uint _2971 = _807 + 6u;
    float _2979 = _751 / cbSceneParam._m0[86u].x;
    float _2980 = _752 / cbSceneParam._m0[86u].y;
    vec4 _2994 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2979, _2980, (log2((isnan(cbSceneParam._m0[77u].w) ? _673 : (isnan(_673) ? cbSceneParam._m0[77u].w : min(_673, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2996 = _2994.x;
    float _2997 = _2994.y;
    float _2998 = _2994.z;
    float _2999 = _2994.w;
    float _3070;
    float _3072;
    float _3074;
    float _3076;
    if (_673 > cbSceneParam._m0[78u].w)
    {
        float _3033 = isnan(_673) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _673 : min(cbSceneParam._m0[80u].w, _673));
        float _3034 = _3033 / _673;
        float _3045 = _3034 * _723;
        float _3046 = _724 * _3034;
        float _3047 = (-0.0) - _3046;
        float _3048 = _3034 * _725;
        float _3050 = (cbSceneParam._m0[77u].w * _3047) / _3033;
        float _3051 = _3050 + cbSceneParam._m0[79u].w;
        float _3052 = cbSceneParam._m0[79u].w - _3046;
        float _3058 = sqrt(((_3045 * _3045) + (_3046 * _3046)) + (_3048 * _3048));
        float _3061 = (1.0 - (cbSceneParam._m0[77u].w / _3033)) * _3058;
        float _3066 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3068 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3245;
        if (abs((_3047 - _3050) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3245 = ((((_3051 > 0.0) ? exp2(_3066 * _3051) : (2.0 - exp2(_3068 * _3051))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3061;
        }
        else
        {
            float _3189 = 1.0 / cbSceneParam._m0[80u].x;
            float _3190 = isnan(_3052) ? _3051 : (isnan(_3051) ? _3052 : max(_3051, _3052));
            float _3191 = isnan(_3052) ? _3051 : (isnan(_3051) ? _3052 : min(_3051, _3052));
            float _3200 = isnan(0.0) ? _3190 : (isnan(_3190) ? 0.0 : min(_3190, 0.0));
            float _3201 = isnan(0.0) ? _3191 : (isnan(_3191) ? 0.0 : min(_3191, 0.0));
            _3245 = ((abs(_3058 / _3047) * cbSceneParam._m0[80u].y) * ((((_3200 - _3201) * 2.0) - ((exp2(_3066 * (isnan(0.0) ? _3190 : (isnan(_3190) ? 0.0 : max(_3190, 0.0)))) - exp2(_3066 * (isnan(0.0) ? _3191 : (isnan(_3191) ? 0.0 : max(_3191, 0.0))))) * _3189)) - ((exp2(_3068 * _3200) - exp2(_3068 * _3201)) * _3189))) + (_3061 * cbSceneParam._m0[80u].z);
        }
        vec4 _3247 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2979, _2980, 1.0), 0.0);
        float _3256 = exp2((_3245 * (-1.44269502162933349609375)) * (1.0 - _3247.w));
        float _3257 = log2(_3256);
        float _3273 = log2(_2999);
        _3070 = (exp2(_3273 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3257 * cbSceneParam._m0[78u].x)) * _3247.x) / cbSceneParam._m0[78u].x)) + _2996;
        _3072 = (exp2(_3273 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3257 * cbSceneParam._m0[78u].y)) * _3247.y) / cbSceneParam._m0[78u].y)) + _2997;
        _3074 = (exp2(_3273 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3257 * cbSceneParam._m0[78u].z)) * _3247.z) / cbSceneParam._m0[78u].z)) + _2998;
        _3076 = _3256 * _2999;
    }
    else
    {
        _3070 = _2996;
        _3072 = _2997;
        _3074 = _2998;
        _3076 = _2999;
    }
    bool _3283;
    vec4 _3086;
    vec4 _3108;
    float _3110;
    float _3114;
    float _3115;
    float _3116;
    float _3117;
    bool _3127;
    for (;;)
    {
        _3086 = cbMatDynParam._m0[0u];
        float _3088 = roundEven(_3086.y);
        bool _3089 = _3088 == 3.0;
        float _3090 = log2(_3076);
        float _3097 = exp2(_3090 * cbSceneParam._m0[78u].x) * _2968;
        float _3098 = exp2(_3090 * cbSceneParam._m0[78u].y) * _2969;
        float _3099 = exp2(_3090 * cbSceneParam._m0[78u].z) * _2970;
        float _3106 = _739 + (-0.5);
        _3108 = cbMtdParam._m0[1u];
        _3110 = _3108.y * _3106;
        float _3113 = (_3088 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3114 = _3113 * (_3089 ? _3097 : (_3097 + (cbSceneParam._m0[72u].w * _3070)));
        _3115 = _3113 * (_3089 ? _3098 : (_3098 + (cbSceneParam._m0[72u].w * _3072)));
        _3116 = _3113 * (_3089 ? _3099 : (_3099 + (cbSceneParam._m0[72u].w * _3074)));
        _3117 = _3106 * 0.999000012874603271484375;
        _3127 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3127)
        {
            if ((cbInstanceData._m0[_807 + 7u].x + _3117) < 0.5)
            {
                _3283 = true;
                break;
            }
        }
        uint _3224 = _808 + uint(_3086.w);
        if ((cbInstanceData._m0[_3224].w < 1.0) && ((cbInstanceData._m0[_3224].w + _3117) < 0.5))
        {
            _3283 = true;
            break;
        }
        if ((_3110 + 1.0) < _3108.x)
        {
            _3283 = true;
            break;
        }
        _3283 = false;
        break;
    }
    float _3487;
    if (_3283)
    {
        discard_state = true;
        _3487 = 0.0;
    }
    else
    {
        _3487 = cbInstanceData._m0[_2971].w;
    }
    SV_Target.x = _3114;
    SV_Target.y = _3115;
    SV_Target.z = _3116;
    SV_Target.w = _3487;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2971].w;
    discard_exit();
}


