#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[35];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_Planet_Melange_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_Melange_001_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Planet_Melange_001_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Planet_Melange_001_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Planet_Melange_001_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Planet_Melange_001_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1456;
float _1457;
float _1458;
float _1459;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _161 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _162 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _163 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _169 = inversesqrt(dot(vec3(_161, _162, _163), vec3(_161, _162, _163)));
    float _176 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _177 = _176 * NORMAL.x;
    float _178 = _176 * NORMAL.y;
    float _179 = _176 * NORMAL.z;
    float _183 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _191;
    float _192;
    float _193;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _191 = (-0.0) - _177;
        _192 = (-0.0) - _178;
        _193 = (-0.0) - _179;
    }
    else
    {
        _191 = _177;
        _192 = _178;
        _193 = _179;
    }
    float _239 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _249 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _239);
    float _250 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _239);
    float _251 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _239);
    float _266 = inversesqrt(dot(vec3(_249, _250, _251), vec3(_249, _250, _251)));
    float _267 = _266 * _249;
    float _268 = _266 * _250;
    float _269 = _266 * _251;
    float _270 = dot(vec4(_267, _268, _269, 0.0), vec4(_191, _192, _193, 0.0));
    float _273 = _270 - cbMtdParam._m0[24u].x;
    float _1468 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    float _283 = exp2(log2((1.0 - exp2(log2(1.0 - (isnan(1.0) ? _1468 : (isnan(_1468) ? 1.0 : min(_1468, 1.0)))))) * cbMtdParam._m0[19u].y) * cbMtdParam._m0[25u].x);
    float _1479 = isnan(0.0) ? _283 : (isnan(_283) ? 0.0 : max(_283, 0.0));
    float _302 = cbMtdParam._m0[21u].y * cbPerFrame._m0[22u].x;
    vec4 _364 = texture(sampler2D(M_Planet_Melange_001_snp_0_Texture2D_1, SS_WrapLinear), vec2(((((cbMtdParam._m0[30u].y * _302) + TEXCOORD) * cbMtdParam._m0[30u].w) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((cbTextureTilingScale._m0[1u].y * cbMtdParam._m0[31u].x) * ((cbMtdParam._m0[30u].z * _302) + TEXCOORD_1)) + cbTextureTilingScale._m0[1u].w));
    float _366 = _364.x;
    float _376 = dot(vec3(_249, _250, _251), vec3(_169 * _161, _169 * _162, _169 * _163));
    float _379 = dot(vec3(_249, _250, _251), vec3(_183 * TANGENT.x, _183 * TANGENT.y, _183 * TANGENT.z));
    float _382 = dot(vec3(_249, _250, _251), vec3(_191, _192, _193));
    float _388 = inversesqrt(dot(vec3(_376, _379, _382), vec3(_376, _379, _382)));
    float _389 = _376 * 0.5;
    vec4 _416 = texture(sampler2D(M_Planet_Melange_001_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((((((_366 * cbMtdParam._m0[25u].w) + TEXCOORD) + (cbMtdParam._m0[26u].y * _302)) + cbMtdParam._m0[27u].y) + ((_389 * cbMtdParam._m0[19u].w) * _388)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((((_366 * cbMtdParam._m0[26u].x) + TEXCOORD_1) + (cbMtdParam._m0[26u].z * _302)) + cbMtdParam._m0[27u].z) + (((cbMtdParam._m0[19u].w * 0.5) * _379) * _388)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _429 = ((floatBitsToUint(cbMtdParam._m0[9u]).x != 0u) ? TEXCOORD_4.z : 1.0) * _416.w;
    vec4 _465 = texture(sampler2D(M_Planet_Melange_001_snp_0_Texture2D_0, SS_ClampLinear), vec2((((cbMtdParam._m0[31u].y + TEXCOORD) * cbMtdParam._m0[29u].y) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[31u].z + TEXCOORD_1) * cbMtdParam._m0[29u].z) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _476 = (_465.x + (-0.5)) * cbMtdParam._m0[20u].y;
    float _477 = (_465.y + (-0.5)) * cbMtdParam._m0[20u].y;
    vec4 _499 = texture(sampler2D(M_Planet_Melange_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((((((cbMtdParam._m0[29u].w * _366) + TEXCOORD) + (cbMtdParam._m0[26u].w * _302)) + cbMtdParam._m0[25u].y) + ((_389 * cbMtdParam._m0[19u].z) * _388)) + _476) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((((cbMtdParam._m0[30u].x * _366) + TEXCOORD_1) + (cbMtdParam._m0[27u].x * _302)) + cbMtdParam._m0[25u].z) + (((cbMtdParam._m0[19u].z * 0.5) * _379) * _388)) + _477) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    vec4 _550 = texture(sampler2D(M_Planet_Melange_001_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((((_476 + TEXCOORD) + (cbMtdParam._m0[31u].w * _366)) + (cbMtdParam._m0[32u].y * _302)) + cbMtdParam._m0[32u].w) + ((_389 * cbMtdParam._m0[22u].z) * _388)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((((((_477 + TEXCOORD_1) + (cbMtdParam._m0[32u].x * _366)) + (cbMtdParam._m0[32u].z * _302)) + cbMtdParam._m0[33u].x) + (((cbMtdParam._m0[22u].z * 0.5) * _379) * _388)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _555 = _550.w;
    float _567 = cbMtdParam._m0[22u].y - cbMtdParam._m0[22u].x;
    float _569 = (sqrt(((_249 * _249) + (_250 * _250)) + (_251 * _251)) - cbMtdParam._m0[22u].x) / (isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0)));
    float _1495 = isnan(0.0) ? _569 : (isnan(_569) ? 0.0 : max(_569, 0.0));
    vec4 _580 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _582 = _580.x;
    bool _588 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _604 = ((_588 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _582)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _582))) - POSITION_1.w) / cbMtdParam._m0[21u].w;
    float _1506 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _609 = (((texture(sampler2D(M_Planet_Melange_001_snp_0_Texture2D_5, SS_WrapLinear), vec2(((((cbMtdParam._m0[28u].w + TEXCOORD) + (_302 * cbMtdParam._m0[28u].y)) * cbMtdParam._m0[27u].w) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbTextureTilingScale._m0[5u].y * cbMtdParam._m0[28u].x) * ((cbMtdParam._m0[29u].x + TEXCOORD_1) + (_302 * cbMtdParam._m0[28u].z))) + cbTextureTilingScale._m0[5u].w)).x * cbMtdParam._m0[18u].w) * ((_499.w + _429) + _555)) * (isnan(1.0) ? _1495 : (isnan(_1495) ? 1.0 : min(_1495, 1.0)))) * (isnan(1.0) ? _1506 : (isnan(_1506) ? 1.0 : min(_1506, 1.0)));
    float _1517 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _622 = _270 - cbMtdParam._m0[21u].z;
    float _1528 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _630 = exp2(log2(1.0 - (isnan(1.0) ? _1528 : (isnan(_1528) ? 1.0 : min(_1528, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[20u].w : (isnan(cbMtdParam._m0[20u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[20u].w, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[20u].x;
    float _631 = _630 + (cbMtdParam._m0[19u].x * (isnan(1.0) ? _1517 : (isnan(_1517) ? 1.0 : min(_1517, 1.0))));
    float _1544 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _633 = (isnan(1.0) ? _1544 : (isnan(_1544) ? 1.0 : min(_1544, 1.0))) * (isnan(1.0) ? _1479 : (isnan(_1479) ? 1.0 : min(_1479, 1.0)));
    float _658 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _662 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _666 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _670 = inversesqrt(dot(vec3(_658, _662, _666), vec3(_658, _662, _666)));
    float _671 = _670 * _658;
    float _672 = _670 * _662;
    float _673 = _670 * _666;
    uvec4 _676 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _678 = _676.z != 0u;
    float _687 = inversesqrt(dot(vec3(cbMtdParam._m0[33u].yzw), vec3(cbMtdParam._m0[33u].yzw)));
    uint _691 = uint(roundEven(NORMAL.w)) * 13u;
    uint _698 = floatBitsToUint(cbInstanceData._m0[_691 + 5u]).x * 14u;
    float _705 = _678 ? cbLight._m0[_698].x : (_687 * cbMtdParam._m0[33u].y);
    float _706 = _678 ? cbLight._m0[_698].y : (_687 * cbMtdParam._m0[33u].z);
    float _707 = _678 ? cbLight._m0[_698].z : (_687 * cbMtdParam._m0[33u].w);
    float _711 = inversesqrt(dot(vec3(_705, _706, _707), vec3(_705, _706, _707)));
    float _712 = _705 * _711;
    float _713 = _706 * _711;
    float _714 = _707 * _711;
    float _715 = dot(vec4(_671, _672, _673, 0.0), vec4(_712, _713, _714, 0.0));
    float _1555 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
    float _718 = isnan(1.0) ? _1555 : (isnan(_1555) ? 1.0 : min(_1555, 1.0));
    float _720 = 1.0 - (_718 * _718);
    float _722 = (-0.0) - (_720 - cbMtdParam._m0[23u].z);
    float _723 = isnan(0.0) ? _722 : (isnan(_722) ? 0.0 : max(_722, 0.0));
    float _744 = (-0.0) - (_720 - cbMtdParam._m0[24u].y);
    float _745 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _777 = cbMtdParam._m0[9u].w * _499.x;
    float _778 = cbMtdParam._m0[10u].x * _499.y;
    float _779 = cbMtdParam._m0[10u].y * _499.z;
    float _795 = (((cbMtdParam._m0[16u].w * _550.x) - _777) * _555) + _777;
    float _796 = (((cbMtdParam._m0[17u].x * _550.y) - _778) * _555) + _778;
    float _797 = (((cbMtdParam._m0[17u].y * _550.z) - _779) * _555) + _779;
    float _834 = dot(vec3(cbSceneParam._m0[84u].xyz), vec3((-0.0) - _267, (-0.0) - _268, (-0.0) - _269)) * 0.5;
    float _835 = _834 + 0.5;
    float _845 = 0.5 - _834;
    float _862 = (((cbSceneParam._m0[83u].x * _845) + (cbSceneParam._m0[82u].x * _835)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].x;
    float _863 = (((cbSceneParam._m0[83u].y * _845) + (cbSceneParam._m0[82u].y * _835)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].y;
    float _864 = (((cbSceneParam._m0[83u].z * _845) + (cbSceneParam._m0[82u].z * _835)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].z;
    float _871 = ((_862 - cbMtdParam._m0[14u].w) * cbMtdParam._m0[23u].y) + cbMtdParam._m0[14u].w;
    float _872 = ((_863 - cbMtdParam._m0[15u].x) * cbMtdParam._m0[23u].y) + cbMtdParam._m0[15u].x;
    float _873 = ((_864 - cbMtdParam._m0[15u].y) * cbMtdParam._m0[23u].y) + cbMtdParam._m0[15u].y;
    float _889 = inversesqrt(dot(vec3(_712, _713, _714), vec3(_712, _713, _714)));
    float _904 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_671, _672, _673, 0.0), vec4(_889 * _712, _889 * _713, _889 * _714, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _1586 = isnan(0.0) ? _904 : (isnan(_904) ? 0.0 : max(_904, 0.0));
    float _906 = isnan(1.0) ? _1586 : (isnan(_1586) ? 1.0 : min(_1586, 1.0));
    float _912 = exp2(log2(_906 * 6.5) * 7.0);
    float _1597 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
    float _914 = (isnan(1.0) ? _1597 : (isnan(_1597) ? 1.0 : min(_1597, 1.0))) + _906;
    float _1608 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
    float _915 = isnan(1.0) ? _1608 : (isnan(_1608) ? 1.0 : min(_1608, 1.0));
    float _925 = ((_915 * ((((_862 - cbMtdParam._m0[13u].w) * cbMtdParam._m0[23u].y) + cbMtdParam._m0[13u].w) - _871)) + _871) * ((((cbMtdParam._m0[17u].w * _416.x) - _795) * _429) + _795);
    float _926 = ((_915 * ((((_863 - cbMtdParam._m0[14u].x) * cbMtdParam._m0[23u].y) + cbMtdParam._m0[14u].x) - _872)) + _872) * ((_429 * ((cbMtdParam._m0[18u].x * _416.y) - _796)) + _796);
    float _927 = ((_915 * ((((_864 - cbMtdParam._m0[14u].y) * cbMtdParam._m0[23u].y) + cbMtdParam._m0[14u].y) - _873)) + _873) * ((_429 * ((cbMtdParam._m0[18u].y * _416.z) - _797)) + _797);
    float _928 = isnan(_926) ? _925 : (isnan(_925) ? _926 : max(_925, _926));
    float _929 = isnan(_927) ? _928 : (isnan(_928) ? _927 : max(_928, _927));
    float _932;
    float _934;
    if (_929 < 1.1920928955078125e-07)
    {
        _932 = 0.0;
        _934 = 0.0;
    }
    else
    {
        float _959 = isnan(_926) ? _925 : (isnan(_925) ? _926 : min(_925, _926));
        float _961 = _929 - (isnan(_927) ? _959 : (isnan(_959) ? _927 : min(_959, _927)));
        float _935 = _961 / _929;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        if (_961 < 1.1920928955078125e-07)
        {
            frontier_phi_3_4_ladder = 0.0;
            frontier_phi_3_4_ladder_1 = _935;
        }
        else
        {
            float _1335;
            if (_929 == _925)
            {
                _1335 = ((_926 - _927) / _961) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_18_12_ladder;
                if (_929 == _926)
                {
                    frontier_phi_18_12_ladder = (((_927 - _925) / _961) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_18_12_ladder = (((_925 - _926) / _961) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1335 = frontier_phi_18_12_ladder;
            }
            float _1340 = (_1335 < 0.0) ? (_1335 + 1.0) : _1335;
            precise float _933 = (_1340 - floor(_1340)) * 6.0;
            frontier_phi_3_4_ladder = _933;
            frontier_phi_3_4_ladder_1 = _935;
        }
        _932 = frontier_phi_3_4_ladder;
        _934 = frontier_phi_3_4_ladder_1;
    }
    float _937 = cbMtdParam._m0[23u].w + _929;
    float _1639 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
    float _938 = isnan(1.0) ? _1639 : (isnan(_1639) ? 1.0 : min(_1639, 1.0));
    float _940 = cbMtdParam._m0[24u].z + _934;
    float _1650 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
    float _941 = isnan(1.0) ? _1650 : (isnan(_1650) ? 1.0 : min(_1650, 1.0));
    uint _943 = uint(int(floor(_932)));
    float _945 = _932 - float(int(_943));
    float _947 = (1.0 - _941) * _938;
    float _950 = (1.0 - (_945 * _941)) * _938;
    float _954 = (1.0 - ((1.0 - _945) * _941)) * _938;
    float _963;
    float _965;
    float _966;
    if ((_943 == 0u) || (_943 == 6u))
    {
        _963 = _938;
        _965 = _954;
        _966 = _947;
    }
    else
    {
        float frontier_phi_5_6_ladder;
        float frontier_phi_5_6_ladder_1;
        float frontier_phi_5_6_ladder_2;
        if (_943 == 1u)
        {
            frontier_phi_5_6_ladder = _950;
            frontier_phi_5_6_ladder_1 = _938;
            frontier_phi_5_6_ladder_2 = _947;
        }
        else
        {
            float frontier_phi_5_6_ladder_10_ladder;
            float frontier_phi_5_6_ladder_10_ladder_1;
            float frontier_phi_5_6_ladder_10_ladder_2;
            if (_943 == 2u)
            {
                frontier_phi_5_6_ladder_10_ladder = _947;
                frontier_phi_5_6_ladder_10_ladder_1 = _938;
                frontier_phi_5_6_ladder_10_ladder_2 = _954;
            }
            else
            {
                float frontier_phi_5_6_ladder_10_ladder_17_ladder;
                float frontier_phi_5_6_ladder_10_ladder_17_ladder_1;
                float frontier_phi_5_6_ladder_10_ladder_17_ladder_2;
                if (_943 == 3u)
                {
                    frontier_phi_5_6_ladder_10_ladder_17_ladder = _947;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_1 = _950;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_2 = _938;
                }
                else
                {
                    bool _1396 = _943 == 4u;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder = _1396 ? _954 : _938;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_1 = _947;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_2 = _1396 ? _938 : _950;
                }
                frontier_phi_5_6_ladder_10_ladder = frontier_phi_5_6_ladder_10_ladder_17_ladder;
                frontier_phi_5_6_ladder_10_ladder_1 = frontier_phi_5_6_ladder_10_ladder_17_ladder_1;
                frontier_phi_5_6_ladder_10_ladder_2 = frontier_phi_5_6_ladder_10_ladder_17_ladder_2;
            }
            frontier_phi_5_6_ladder = frontier_phi_5_6_ladder_10_ladder;
            frontier_phi_5_6_ladder_1 = frontier_phi_5_6_ladder_10_ladder_1;
            frontier_phi_5_6_ladder_2 = frontier_phi_5_6_ladder_10_ladder_2;
        }
        _963 = frontier_phi_5_6_ladder;
        _965 = frontier_phi_5_6_ladder_1;
        _966 = frontier_phi_5_6_ladder_2;
    }
    float _975 = exp2(log2(_963) * cbMtdParam._m0[24u].w);
    float _976 = exp2(log2(_965) * cbMtdParam._m0[24u].w);
    float _977 = exp2(log2(_966) * cbMtdParam._m0[24u].w);
    float _990 = inversesqrt(dot(vec3(cbMtdParam._m0[34u].xyz), vec3(cbMtdParam._m0[34u].xyz)));
    float _998 = (dot(vec4(_671, _672, _673, 0.0), vec4(_990 * cbMtdParam._m0[34u].x, _990 * cbMtdParam._m0[34u].y, _990 * cbMtdParam._m0[34u].z, 0.0)) + 1.0) * 0.5;
    float _1661 = isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0));
    float _1005 = cbMtdParam._m0[20u].z * exp2(log2(isnan(1.0) ? _1661 : (isnan(_1661) ? 1.0 : min(_1661, 1.0))) * cbMtdParam._m0[21u].x);
    float _1672 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
    float _1006 = isnan(1.0) ? _1672 : (isnan(_1672) ? 1.0 : min(_1672, 1.0));
    float _1013 = (cbMtdParam._m0[22u].w * exp2(log2(isnan(64.0) ? _745 : (isnan(_745) ? 64.0 : min(_745, 64.0))) * 2.599999904632568359375)) + (cbMtdParam._m0[23u].x * exp2(log2(isnan(64.0) ? _723 : (isnan(_723) ? 64.0 : min(_723, 64.0))) * 1.64999997615814208984375));
    float _1016 = ((_1006 * ((_975 * cbMtdParam._m0[10u].w) - _975)) + _975) + (_1013 * cbMtdParam._m0[12u].w);
    float _1019 = ((_1006 * ((_976 * cbMtdParam._m0[11u].x) - _976)) + _976) + (_1013 * cbMtdParam._m0[13u].x);
    float _1022 = ((_1006 * ((_977 * cbMtdParam._m0[11u].y) - _977)) + _977) + (_1013 * cbMtdParam._m0[13u].y);
    bool _1028 = _676.y != 0u;
    float _1698 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
    float _1056 = _588 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1066 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _1073 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1075 = _1073.w;
    uint _1086 = _691 + 9u;
    uint _1087 = _1086 + uint(cbMatDynParam._m0[0u].w);
    float _1093 = cbInstanceData._m0[_1087].x * ((_1028 ? (((_915 * (cbMtdParam._m0[11u].w - cbMtdParam._m0[15u].w)) + cbMtdParam._m0[15u].w) * _630) : 0.0) + (isnan(4.0) ? _1016 : (isnan(_1016) ? 4.0 : min(_1016, 4.0))));
    float _1094 = cbInstanceData._m0[_1087].y * ((_1028 ? (_630 * ((_915 * (cbMtdParam._m0[12u].x - cbMtdParam._m0[16u].x)) + cbMtdParam._m0[16u].x)) : 0.0) + (isnan(4.0) ? _1019 : (isnan(_1019) ? 4.0 : min(_1019, 4.0))));
    float _1095 = cbInstanceData._m0[_1087].z * ((_1028 ? (_630 * ((_915 * (cbMtdParam._m0[12u].y - cbMtdParam._m0[16u].y)) + cbMtdParam._m0[16u].y)) : 0.0) + (isnan(4.0) ? _1022 : (isnan(_1022) ? 4.0 : min(_1022, 4.0))));
    float _1096 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
    float _1097 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
    float _1098 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
    float _1104 = cbMtdParam._m0[2u].x * _1093;
    float _1105 = cbMtdParam._m0[2u].y * _1094;
    float _1106 = cbMtdParam._m0[2u].z * _1095;
    float _1724 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1108 = isnan(1.0) ? _1724 : (isnan(_1724) ? 1.0 : min(_1724, 1.0));
    float _1113 = cbInstanceData._m0[_691 + 6u].w * (isnan(1.0) ? _1698 : (isnan(_1698) ? 1.0 : min(_1698, 1.0)));
    float _1119 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _1120 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _1135 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1119, _1120, (log2((isnan(cbSceneParam._m0[77u].w) ? _1056 : (isnan(_1056) ? cbSceneParam._m0[77u].w : min(_1056, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1137 = _1135.x;
    float _1138 = _1135.y;
    float _1139 = _1135.z;
    float _1140 = _1135.w;
    float _1202;
    float _1204;
    float _1206;
    float _1208;
    if (_1056 > cbSceneParam._m0[78u].w)
    {
        float _1164 = isnan(_1056) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1056 : min(cbSceneParam._m0[80u].w, _1056));
        float _1165 = _1164 / _1056;
        float _1176 = _1165 * (cbSceneParam._m0[71u].x - (_658 / _1066));
        float _1177 = (cbSceneParam._m0[71u].y - (_662 / _1066)) * _1165;
        float _1178 = (-0.0) - _1177;
        float _1179 = _1165 * (cbSceneParam._m0[71u].z - (_666 / _1066));
        float _1181 = (cbSceneParam._m0[77u].w * _1178) / _1164;
        float _1182 = _1181 + cbSceneParam._m0[79u].w;
        float _1183 = cbSceneParam._m0[79u].w - _1177;
        float _1189 = sqrt(((_1176 * _1176) + (_1177 * _1177)) + (_1179 * _1179));
        float _1192 = (1.0 - (cbSceneParam._m0[77u].w / _1164)) * _1189;
        float _1198 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1200 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1352;
        if (abs((_1178 - _1181) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1352 = ((((_1182 > 0.0) ? exp2(_1198 * _1182) : (2.0 - exp2(_1200 * _1182))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1192;
        }
        else
        {
            float _1290 = 1.0 / cbSceneParam._m0[80u].x;
            float _1291 = isnan(_1183) ? _1182 : (isnan(_1182) ? _1183 : max(_1182, _1183));
            float _1292 = isnan(_1183) ? _1182 : (isnan(_1182) ? _1183 : min(_1182, _1183));
            float _1301 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : min(_1291, 0.0));
            float _1302 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : min(_1292, 0.0));
            _1352 = ((abs(_1189 / _1178) * cbSceneParam._m0[80u].y) * ((((_1301 - _1302) * 2.0) - ((exp2(_1198 * (isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0)))) - exp2(_1198 * (isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0))))) * _1290)) - ((exp2(_1200 * _1301) - exp2(_1200 * _1302)) * _1290))) + (_1192 * cbSceneParam._m0[80u].z);
        }
        vec4 _1354 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1119, _1120, 1.0), 0.0);
        float _1363 = exp2((_1352 * (-1.44269502162933349609375)) * (1.0 - _1354.w));
        float _1364 = log2(_1363);
        float _1380 = log2(_1140);
        _1202 = (exp2(_1380 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1364 * cbSceneParam._m0[78u].x)) * _1354.x) / cbSceneParam._m0[78u].x)) + _1137;
        _1204 = (exp2(_1380 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1364 * cbSceneParam._m0[78u].y)) * _1354.y) / cbSceneParam._m0[78u].y)) + _1138;
        _1206 = (exp2(_1380 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1364 * cbSceneParam._m0[78u].z)) * _1354.z) / cbSceneParam._m0[78u].z)) + _1139;
        _1208 = _1363 * _1140;
    }
    else
    {
        _1202 = _1137;
        _1204 = _1138;
        _1206 = _1139;
        _1208 = _1140;
    }
    bool _1390;
    vec4 _1218;
    vec4 _1241;
    float _1243;
    float _1248;
    float _1249;
    float _1250;
    float _1253;
    float _1256;
    float _1259;
    float _1260;
    bool _1271;
    for (;;)
    {
        _1218 = cbMatDynParam._m0[0u];
        float _1220 = roundEven(_1218.y);
        bool _1221 = _1220 == 3.0;
        float _1223 = log2(_1208);
        float _1227 = exp2(_1223 * cbSceneParam._m0[78u].x);
        float _1228 = exp2(_1223 * cbSceneParam._m0[78u].y);
        float _1229 = exp2(_1223 * cbSceneParam._m0[78u].z);
        float _1230 = _1227 * _1096;
        float _1231 = _1228 * _1097;
        float _1232 = _1229 * _1098;
        float _1239 = _1075 + (-0.5);
        _1241 = cbMtdParam._m0[1u];
        _1243 = _1241.y * _1239;
        float _1247 = (_1220 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1248 = _1247 * (_1221 ? _1230 : (_1230 + (cbSceneParam._m0[72u].w * _1202)));
        _1249 = _1247 * (_1221 ? _1231 : (_1231 + (cbSceneParam._m0[72u].w * _1204)));
        _1250 = _1247 * (_1221 ? _1232 : (_1232 + (cbSceneParam._m0[72u].w * _1206)));
        _1253 = ((_1104 * _1108) * _1227) * _1247;
        _1256 = ((_1105 * _1108) * _1228) * _1247;
        _1259 = ((_1106 * _1108) * _1229) * _1247;
        _1260 = _1239 * 0.999000012874603271484375;
        _1271 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1271)
        {
            if ((cbInstanceData._m0[_691 + 7u].x + _1260) < 0.5)
            {
                _1390 = true;
                break;
            }
        }
        uint _1326 = _1086 + uint(_1218.w);
        if ((cbInstanceData._m0[_1326].w < 1.0) && ((cbInstanceData._m0[_1326].w + _1260) < 0.5))
        {
            _1390 = true;
            break;
        }
        if ((_1243 + 1.0) < _1241.x)
        {
            _1390 = true;
            break;
        }
        _1390 = false;
        break;
    }
    float _1399;
    if (_1390)
    {
        discard_state = true;
        _1399 = 0.0;
    }
    else
    {
        _1399 = _1113;
    }
    SV_Target.x = _1248;
    SV_Target.y = _1249;
    SV_Target.z = _1250;
    SV_Target.w = _1399;
    SV_Target_1.x = _1253;
    SV_Target_1.y = _1256;
    SV_Target_1.z = _1259;
    SV_Target_1.w = _1113;
    discard_exit();
}


