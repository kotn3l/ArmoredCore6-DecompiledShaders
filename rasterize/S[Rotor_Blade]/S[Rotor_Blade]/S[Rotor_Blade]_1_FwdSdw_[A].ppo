#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D S_Rotor_Blade_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _2484;
float _2485;
float _2486;
float _2487;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _160 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _161 = _160 * NORMAL.x;
    float _162 = _160 * NORMAL.y;
    float _163 = _160 * NORMAL.z;
    vec4 _183 = texture(sampler2D(S_Rotor_Blade_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _190 = _183.x * cbMtdParam._m0[9u].x;
    float _191 = _183.y * cbMtdParam._m0[9u].y;
    float _192 = _183.z * cbMtdParam._m0[9u].z;
    float _193 = _183.w * TEXCOORD_1.z;
    float _197 = inversesqrt(dot(vec3(_161, _162, _163), vec3(_161, _162, _163)));
    float _198 = _197 * _161;
    float _199 = _197 * _162;
    float _200 = _197 * _163;
    float _2496 = isnan(0.0) ? _193 : (isnan(_193) ? 0.0 : max(_193, 0.0));
    float _202 = isnan(1.0) ? _2496 : (isnan(_2496) ? 1.0 : min(_2496, 1.0));
    float _2507 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _2518 = isnan(0.0) ? _191 : (isnan(_191) ? 0.0 : max(_191, 0.0));
    float _2529 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _221 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _263 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _273 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _263);
    float _274 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _263);
    float _275 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _263);
    float _279 = inversesqrt(dot(vec3(_273, _274, _275), vec3(_273, _274, _275)));
    float _280 = _273 * _279;
    float _281 = _274 * _279;
    float _282 = _275 * _279;
    vec4 _287 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _289 = _287.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _408 = sqrt(((_273 * _273) + (_274 * _274)) + (_275 * _275));
        float _414 = (cbMatDynParam._m0[5u].x * _408) + cbMatDynParam._m0[5u].y;
        float _2540 = isnan(0.0) ? _414 : (isnan(_414) ? 0.0 : max(_414, 0.0));
        float _415 = isnan(1.0) ? _2540 : (isnan(_2540) ? 1.0 : min(_2540, 1.0));
        float _419 = (cbMatDynParam._m0[5u].z * _408) + cbMatDynParam._m0[5u].w;
        float _2551 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2551 : (isnan(_2551) ? 1.0 : min(_2551, 1.0))) - _415)) + _415) < ((_289 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _301 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _302 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _322 = fma(_200, cbSceneParam._m0[5u].z, fma(_199, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _198));
    float _325 = fma(_200, cbSceneParam._m0[6u].z, fma(_199, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _198));
    float _328 = fma(_200, cbSceneParam._m0[7u].z, fma(_199, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _198));
    uint _341 = uint(roundEven(NORMAL.w)) * 13u;
    uint _343 = _341 + 9u;
    uint _344 = _343 + uint(cbMatDynParam._m0[0u].w);
    float _350 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2507 : (isnan(_2507) ? 1.0 : min(_2507, 1.0)))) * cbInstanceData._m0[_344].x;
    float _351 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2518 : (isnan(_2518) ? 1.0 : min(_2518, 1.0)))) * cbInstanceData._m0[_344].y;
    float _352 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2529 : (isnan(_2529) ? 1.0 : min(_2529, 1.0)))) * cbInstanceData._m0[_344].z;
    float _2562 = isnan(0.0) ? _350 : (isnan(_350) ? 0.0 : max(_350, 0.0));
    float _353 = isnan(1.0) ? _2562 : (isnan(_2562) ? 1.0 : min(_2562, 1.0));
    float _2573 = isnan(0.0) ? _351 : (isnan(_351) ? 0.0 : max(_351, 0.0));
    float _354 = isnan(1.0) ? _2573 : (isnan(_2573) ? 1.0 : min(_2573, 1.0));
    float _2584 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _355 = isnan(1.0) ? _2584 : (isnan(_2584) ? 1.0 : min(_2584, 1.0));
    vec4 _364 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _301, cbSceneParam._m0[86u].y * _302));
    float _367 = _364.x * TEXCOORD_1.w;
    float _389 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _393 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _397 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _729;
    float _730;
    float _731;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _453 = fma(_397, cbModelParam._m0[26u].z, fma(_393, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _389));
        float _457 = fma(_397, cbModelParam._m0[27u].z, fma(_393, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _389));
        float _461 = fma(_397, cbModelParam._m0[28u].z, fma(_393, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _389));
        float _486 = _389 + _198;
        float _487 = _393 + _199;
        float _488 = _397 + _200;
        float _498 = fma(_488, cbModelParam._m0[26u].z, fma(_487, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _486)) - _453;
        float _499 = fma(_488, cbModelParam._m0[27u].z, fma(_487, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _486)) - _457;
        float _500 = fma(_488, cbModelParam._m0[28u].z, fma(_487, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _486)) - _461;
        float _504 = inversesqrt(dot(vec3(_498, _499, _500), vec3(_498, _499, _500)));
        float _517 = ((_504 * _498) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_453 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _518 = ((_504 * _499) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_457 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _519 = ((_504 * _500) / cbModelParam._m0[34u].z) + ((((((_461 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _522 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_517, _518, _519), 0.0);
        vec4 _529 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_517, _518, _519), 0.0);
        vec4 _536 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_517, _518, _519), 0.0);
        vec4 _543 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_517, _518, _519), 0.0);
        float _556 = exp2((_522.w + (-0.5)) * 20.0) * 2.0;
        float _564 = exp2((_529.w + (-0.5)) * 20.0) * 2.0;
        float _571 = exp2((_536.w + (-0.5)) * 20.0) * 2.0;
        float _578 = exp2((_543.w + (-0.5)) * 20.0) * 2.0;
        float _579 = _578 * (_543.x + (-0.5));
        float _580 = _578 * (_543.y + (-0.5));
        float _581 = _578 * (_543.z + (-0.5));
        float _582 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
        float _583 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
        float _584 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
        float _586 = ((_522.x + (-0.5)) * 0.5) * _556;
        float _588 = ((_529.x + (-0.5)) * 0.5) * _564;
        float _590 = ((_536.x + (-0.5)) * 0.5) * _571;
        float _591 = dot(vec3(_586, _588, _590), vec3(_586, _588, _590));
        float _596 = (_591 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_591);
        float _605 = (dot(vec3(_198, _199, _200), vec3(_596 * _586, _596 * _588, _596 * _590)) + 1.0) * 0.5;
        float _2610 = isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : max(_605, 0.0));
        float _615 = sqrt(((_588 * _588) + (_586 * _586)) + (_590 * _590)) / (_582 + 9.9999997473787516355514526367188e-06);
        float _2621 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
        float _616 = isnan(1.0) ? _2621 : (isnan(_2621) ? 1.0 : min(_2621, 1.0));
        float _617 = _616 * 2.0;
        float _621 = (1.0 - _616) / (_616 + 1.0);
        float _2632 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
        float _622 = isnan(1.0) ? _2632 : (isnan(_2632) ? 1.0 : min(_2632, 1.0));
        float _631 = ((((1.0 - _622) * (_617 + 2.0)) * exp2(log2(isnan(1.0) ? _2610 : (isnan(_2610) ? 1.0 : min(_2610, 1.0))) * (_617 + 1.0))) + _622) * _582;
        float _633 = ((_522.y + (-0.5)) * 0.5) * _556;
        float _635 = ((_529.y + (-0.5)) * 0.5) * _564;
        float _637 = ((_536.y + (-0.5)) * 0.5) * _571;
        float _638 = dot(vec3(_633, _635, _637), vec3(_633, _635, _637));
        float _643 = (_638 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_638);
        float _651 = (dot(vec3(_198, _199, _200), vec3(_643 * _633, _643 * _635, _643 * _637)) + 1.0) * 0.5;
        float _2643 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
        float _660 = sqrt(((_635 * _635) + (_633 * _633)) + (_637 * _637)) / (_583 + 9.9999997473787516355514526367188e-06);
        float _2654 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
        float _661 = isnan(1.0) ? _2654 : (isnan(_2654) ? 1.0 : min(_2654, 1.0));
        float _662 = _661 * 2.0;
        float _666 = (1.0 - _661) / (_661 + 1.0);
        float _2665 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
        float _667 = isnan(1.0) ? _2665 : (isnan(_2665) ? 1.0 : min(_2665, 1.0));
        float _676 = ((((1.0 - _667) * (_662 + 2.0)) * exp2(log2(isnan(1.0) ? _2643 : (isnan(_2643) ? 1.0 : min(_2643, 1.0))) * (_662 + 1.0))) + _667) * _583;
        float _678 = ((_522.z + (-0.5)) * 0.5) * _556;
        float _680 = ((_529.z + (-0.5)) * 0.5) * _564;
        float _682 = ((_536.z + (-0.5)) * 0.5) * _571;
        float _683 = dot(vec3(_678, _680, _682), vec3(_678, _680, _682));
        float _688 = (_683 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_683);
        float _696 = (dot(vec3(_198, _199, _200), vec3(_688 * _678, _688 * _680, _688 * _682)) + 1.0) * 0.5;
        float _2676 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
        float _705 = sqrt(((_680 * _680) + (_678 * _678)) + (_682 * _682)) / (_584 + 9.9999997473787516355514526367188e-06);
        float _2687 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
        float _706 = isnan(1.0) ? _2687 : (isnan(_2687) ? 1.0 : min(_2687, 1.0));
        float _707 = _706 * 2.0;
        float _711 = (1.0 - _706) / (_706 + 1.0);
        float _2698 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
        float _712 = isnan(1.0) ? _2698 : (isnan(_2698) ? 1.0 : min(_2698, 1.0));
        float _721 = ((((1.0 - _712) * (_707 + 2.0)) * exp2(log2(isnan(1.0) ? _2676 : (isnan(_2676) ? 1.0 : min(_2676, 1.0))) * (_707 + 1.0))) + _712) * _584;
        _729 = cbModelParam._m0[36u].z * (isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0)));
        _730 = cbModelParam._m0[36u].z * (isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0)));
        _731 = cbModelParam._m0[36u].z * (isnan(0.0) ? _721 : (isnan(_721) ? 0.0 : max(_721, 0.0)));
    }
    else
    {
        _729 = 0.0;
        _730 = 0.0;
        _731 = 0.0;
    }
    float _1029;
    float _1030;
    float _1031;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _760 = fma(_397, cbModelParam._m0[30u].z, fma(_393, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _389));
        float _764 = fma(_397, cbModelParam._m0[31u].z, fma(_393, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _389));
        float _768 = fma(_397, cbModelParam._m0[32u].z, fma(_393, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _389));
        float _791 = _389 + _198;
        float _792 = _393 + _199;
        float _793 = _397 + _200;
        float _803 = fma(_793, cbModelParam._m0[30u].z, fma(_792, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _791)) - _760;
        float _804 = fma(_793, cbModelParam._m0[31u].z, fma(_792, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _791)) - _764;
        float _805 = fma(_793, cbModelParam._m0[32u].z, fma(_792, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _791)) - _768;
        float _809 = inversesqrt(dot(vec3(_803, _804, _805), vec3(_803, _804, _805)));
        float _822 = ((_809 * _803) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_760 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _823 = ((_809 * _804) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_764 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _824 = ((_809 * _805) / cbModelParam._m0[35u].z) + ((((((_768 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _826 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_822, _823, _824), 0.0);
        vec4 _833 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_822, _823, _824), 0.0);
        vec4 _840 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_822, _823, _824), 0.0);
        vec4 _847 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_822, _823, _824), 0.0);
        float _859 = exp2((_826.w + (-0.5)) * 20.0) * 2.0;
        float _866 = exp2((_833.w + (-0.5)) * 20.0) * 2.0;
        float _873 = exp2((_840.w + (-0.5)) * 20.0) * 2.0;
        float _880 = exp2((_847.w + (-0.5)) * 20.0) * 2.0;
        float _881 = _880 * (_847.x + (-0.5));
        float _882 = _880 * (_847.y + (-0.5));
        float _883 = _880 * (_847.z + (-0.5));
        float _884 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
        float _885 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
        float _886 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
        float _888 = ((_826.x + (-0.5)) * 0.5) * _859;
        float _890 = ((_833.x + (-0.5)) * 0.5) * _866;
        float _892 = ((_840.x + (-0.5)) * 0.5) * _873;
        float _893 = dot(vec3(_888, _890, _892), vec3(_888, _890, _892));
        float _898 = (_893 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_893);
        float _906 = (dot(vec3(_198, _199, _200), vec3(_898 * _888, _898 * _890, _898 * _892)) + 1.0) * 0.5;
        float _2739 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
        float _915 = sqrt(((_890 * _890) + (_888 * _888)) + (_892 * _892)) / (_884 + 9.9999997473787516355514526367188e-06);
        float _2750 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
        float _916 = isnan(1.0) ? _2750 : (isnan(_2750) ? 1.0 : min(_2750, 1.0));
        float _917 = _916 * 2.0;
        float _921 = (1.0 - _916) / (_916 + 1.0);
        float _2761 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
        float _922 = isnan(1.0) ? _2761 : (isnan(_2761) ? 1.0 : min(_2761, 1.0));
        float _931 = ((((1.0 - _922) * (_917 + 2.0)) * exp2(log2(isnan(1.0) ? _2739 : (isnan(_2739) ? 1.0 : min(_2739, 1.0))) * (_917 + 1.0))) + _922) * _884;
        float _933 = ((_826.y + (-0.5)) * 0.5) * _859;
        float _935 = ((_833.y + (-0.5)) * 0.5) * _866;
        float _937 = ((_840.y + (-0.5)) * 0.5) * _873;
        float _938 = dot(vec3(_933, _935, _937), vec3(_933, _935, _937));
        float _943 = (_938 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_938);
        float _951 = (dot(vec3(_198, _199, _200), vec3(_943 * _933, _943 * _935, _943 * _937)) + 1.0) * 0.5;
        float _2772 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
        float _960 = sqrt(((_935 * _935) + (_933 * _933)) + (_937 * _937)) / (_885 + 9.9999997473787516355514526367188e-06);
        float _2783 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
        float _961 = isnan(1.0) ? _2783 : (isnan(_2783) ? 1.0 : min(_2783, 1.0));
        float _962 = _961 * 2.0;
        float _966 = (1.0 - _961) / (_961 + 1.0);
        float _2794 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
        float _967 = isnan(1.0) ? _2794 : (isnan(_2794) ? 1.0 : min(_2794, 1.0));
        float _976 = ((((1.0 - _967) * (_962 + 2.0)) * exp2(log2(isnan(1.0) ? _2772 : (isnan(_2772) ? 1.0 : min(_2772, 1.0))) * (_962 + 1.0))) + _967) * _885;
        float _978 = ((_826.z + (-0.5)) * 0.5) * _859;
        float _980 = ((_833.z + (-0.5)) * 0.5) * _866;
        float _982 = ((_840.z + (-0.5)) * 0.5) * _873;
        float _983 = dot(vec3(_978, _980, _982), vec3(_978, _980, _982));
        float _988 = (_983 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_983);
        float _996 = (dot(vec3(_198, _199, _200), vec3(_988 * _978, _988 * _980, _988 * _982)) + 1.0) * 0.5;
        float _2805 = isnan(0.0) ? _996 : (isnan(_996) ? 0.0 : max(_996, 0.0));
        float _1005 = sqrt(((_980 * _980) + (_978 * _978)) + (_982 * _982)) / (_886 + 9.9999997473787516355514526367188e-06);
        float _2816 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
        float _1006 = isnan(1.0) ? _2816 : (isnan(_2816) ? 1.0 : min(_2816, 1.0));
        float _1007 = _1006 * 2.0;
        float _1011 = (1.0 - _1006) / (_1006 + 1.0);
        float _2827 = isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0));
        float _1012 = isnan(1.0) ? _2827 : (isnan(_2827) ? 1.0 : min(_2827, 1.0));
        float _1021 = ((((1.0 - _1012) * (_1007 + 2.0)) * exp2(log2(isnan(1.0) ? _2805 : (isnan(_2805) ? 1.0 : min(_2805, 1.0))) * (_1007 + 1.0))) + _1012) * _886;
        _1029 = cbModelParam._m0[36u].w * (isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0)));
        _1030 = cbModelParam._m0[36u].w * (isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0)));
        _1031 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0)));
    }
    else
    {
        _1029 = 0.0;
        _1030 = 0.0;
        _1031 = 0.0;
    }
    float _1041 = (cbModelParam._m0[1u].x * (_1029 - _729)) + _729;
    float _1042 = (cbModelParam._m0[1u].x * (_1030 - _730)) + _730;
    float _1043 = (cbModelParam._m0[1u].x * (_1031 - _731)) + _731;
    float _1064 = fma(_1043, cbSceneParam._m0[89u].z, fma(_1042, cbSceneParam._m0[89u].y, _1041 * cbSceneParam._m0[89u].x));
    float _1067 = fma(_1043, cbSceneParam._m0[90u].z, fma(_1042, cbSceneParam._m0[90u].y, _1041 * cbSceneParam._m0[90u].x));
    float _1070 = fma(_1043, cbSceneParam._m0[91u].z, fma(_1042, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1041));
    float _1107 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1111 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1115 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1119 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1120 = _1107 / _1119;
    float _1121 = _1111 / _1119;
    float _1122 = _1115 / _1119;
    float _1259;
    float _1260;
    float _1261;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1139 = ((uint(_1122 > cbSceneParam._m0[59u].y) + uint(_1122 > cbSceneParam._m0[59u].x)) + uint(_1122 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1140 = _1139 + 43u;
        uint _1148 = _1139 + 44u;
        uint _1156 = _1139 + 45u;
        uint _1164 = _1139 + 46u;
        float _1175 = fma(_1119, cbSceneParam._m0[_1140].w, fma(_1115, cbSceneParam._m0[_1140].z, fma(_1111, cbSceneParam._m0[_1140].y, _1107 * cbSceneParam._m0[_1140].x)));
        float _1179 = fma(_1119, cbSceneParam._m0[_1148].w, fma(_1115, cbSceneParam._m0[_1148].z, fma(_1111, cbSceneParam._m0[_1148].y, _1107 * cbSceneParam._m0[_1148].x)));
        float _1187 = fma(_1119, cbSceneParam._m0[_1164].w, fma(_1115, cbSceneParam._m0[_1164].z, fma(_1111, cbSceneParam._m0[_1164].y, _1107 * cbSceneParam._m0[_1164].x)));
        float _1192 = cbSceneParam._m0[33u].z * _1187;
        float _1194 = cbSceneParam._m0[33u].w * _1187;
        float _1197 = fma(_1119, cbSceneParam._m0[_1156].w, fma(_1115, cbSceneParam._m0[_1156].z, fma(_1111, cbSceneParam._m0[_1156].y, _1107 * cbSceneParam._m0[_1156].x))) / _1187;
        float _1245 = (cbSceneParam._m0[33u].x - sqrt(((_1121 * _1121) + (_1120 * _1120)) + (_1122 * _1122))) * cbSceneParam._m0[33u].y;
        float _2868 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1252 = (isnan(1.0) ? _2868 : (isnan(_2868) ? 1.0 : min(_2868, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1192 + _1175) / _1187, (_1194 + _1179) / _1187), _1197), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1194 + _1175) / _1187, (_1179 - _1192) / _1187), _1197), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1175 - _1192) / _1187, (_1179 - _1194) / _1187), _1197), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1175 - _1194) / _1187, (_1192 + _1179) / _1187), _1197), 0.0)).x), vec4(0.25)));
        _1259 = 1.0 - (_1252 * cbSceneParam._m0[34u].x);
        _1260 = 1.0 - (_1252 * cbSceneParam._m0[34u].y);
        _1261 = 1.0 - (_1252 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1259 = 1.0;
        _1260 = 1.0;
        _1261 = 1.0;
    }
    float _1317;
    float _1319;
    float _1321;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1305 = fma(_1119, cbSceneParam._m0[63u].w, fma(_1115, cbSceneParam._m0[63u].z, fma(_1111, cbSceneParam._m0[63u].y, _1107 * cbSceneParam._m0[63u].x)));
        float _1306 = fma(_1119, cbSceneParam._m0[60u].w, fma(_1115, cbSceneParam._m0[60u].z, fma(_1111, cbSceneParam._m0[60u].y, _1107 * cbSceneParam._m0[60u].x))) / _1305;
        float _1307 = fma(_1119, cbSceneParam._m0[61u].w, fma(_1115, cbSceneParam._m0[61u].z, fma(_1111, cbSceneParam._m0[61u].y, _1107 * cbSceneParam._m0[61u].x))) / _1305;
        float frontier_phi_11_10_ladder;
        float frontier_phi_11_10_ladder_1;
        float frontier_phi_11_10_ladder_2;
        if ((((_1306 >= cbSceneParam._m0[64u].x) && (_1307 >= cbSceneParam._m0[64u].y)) && (_1306 <= cbSceneParam._m0[64u].z)) && (_1307 <= cbSceneParam._m0[64u].w))
        {
            float _1516 = fma(_1119, cbSceneParam._m0[62u].w, fma(_1115, cbSceneParam._m0[62u].z, fma(_1111, cbSceneParam._m0[62u].y, _1107 * cbSceneParam._m0[62u].x))) / _1305;
            float _1520 = isnan(cbSceneParam._m0[41u].w) ? _1516 : (isnan(_1516) ? cbSceneParam._m0[41u].w : max(_1516, cbSceneParam._m0[41u].w));
            float _1563 = (cbSceneParam._m0[33u].x - sqrt(((_1121 * _1121) + (_1120 * _1120)) + (_1122 * _1122))) * cbSceneParam._m0[33u].y;
            float _2884 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
            float _1570 = (isnan(1.0) ? _2884 : (isnan(_2884) ? 1.0 : min(_2884, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1306, cbSceneParam._m0[33u].w + _1307), _1520), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1306, _1307 - cbSceneParam._m0[33u].z), _1520), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1306 - cbSceneParam._m0[33u].z, _1307 - cbSceneParam._m0[33u].w), _1520), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1306 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1307), _1520), 0.0)).x), vec4(0.25)));
            float _1574 = 1.0 - (_1570 * cbSceneParam._m0[34u].x);
            float _1575 = 1.0 - (_1570 * cbSceneParam._m0[34u].y);
            float _1576 = 1.0 - (_1570 * cbSceneParam._m0[34u].z);
            frontier_phi_11_10_ladder = isnan(_1576) ? _1261 : (isnan(_1261) ? _1576 : min(_1261, _1576));
            frontier_phi_11_10_ladder_1 = isnan(_1575) ? _1260 : (isnan(_1260) ? _1575 : min(_1260, _1575));
            frontier_phi_11_10_ladder_2 = isnan(_1574) ? _1259 : (isnan(_1259) ? _1574 : min(_1259, _1574));
        }
        else
        {
            frontier_phi_11_10_ladder = _1261;
            frontier_phi_11_10_ladder_1 = _1260;
            frontier_phi_11_10_ladder_2 = _1259;
        }
        _1317 = frontier_phi_11_10_ladder_2;
        _1319 = frontier_phi_11_10_ladder_1;
        _1321 = frontier_phi_11_10_ladder;
    }
    else
    {
        _1317 = _1259;
        _1319 = _1260;
        _1321 = _1261;
    }
    float _2910 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
    float _1323 = isnan(1.0) ? _2910 : (isnan(_2910) ? 1.0 : min(_2910, 1.0));
    float _2921 = isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0));
    float _1324 = isnan(1.0) ? _2921 : (isnan(_2921) ? 1.0 : min(_2921, 1.0));
    float _2932 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
    float _1325 = isnan(1.0) ? _2932 : (isnan(_2932) ? 1.0 : min(_2932, 1.0));
    uvec4 _1329 = floatBitsToUint(cbInstanceData._m0[_341 + 5u]);
    uint _1331 = _1329.x * 14u;
    uint _1332 = _1331 + 13u;
    float _1337 = _367 + (-1.0);
    float _1341 = (cbLight._m0[_1332].x * _1337) + 1.0;
    float _1342 = (cbLight._m0[_1332].y * _1337) + 1.0;
    uint _1343 = _1331 + 5u;
    float _1349 = isnan(1.0) ? _1342 : (isnan(_1342) ? 1.0 : min(_1342, 1.0));
    uint _1353 = _1331 + 4u;
    float _1363 = isnan(1.0) ? _1341 : (isnan(_1341) ? 1.0 : min(_1341, 1.0));
    uint _1367 = _1331 | 1u;
    float _1378 = dot(vec3(cbLight._m0[_1331].xyz), vec3(_198, _199, _200));
    float _1381 = dot(vec3(cbLight._m0[_1367].xyz), vec3(_198, _199, _200));
    float _2953 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
    float _2964 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
    float _1386 = (isnan(1.0) ? _2953 : (isnan(_2953) ? 1.0 : min(_2953, 1.0))) * 0.3183098733425140380859375;
    float _1388 = (isnan(1.0) ? _2964 : (isnan(_2964) ? 1.0 : min(_2964, 1.0))) * 0.3183098733425140380859375;
    float _1395 = ((cbLight._m0[_1343].x * _1349) * _1388) + (((cbLight._m0[_1353].x * _1323) * _1363) * _1386);
    float _1396 = ((_1349 * cbLight._m0[_1343].y) * _1388) + (((cbLight._m0[_1353].y * _1324) * _1363) * _1386);
    float _1397 = ((_1349 * cbLight._m0[_1343].z) * _1388) + (((cbLight._m0[_1353].z * _1325) * _1363) * _1386);
    uint _1398 = _1331 + 8u;
    float _1404 = cbLight._m0[_1331].x + _280;
    float _1405 = cbLight._m0[_1331].y + _281;
    float _1406 = cbLight._m0[_1331].z + _282;
    float _1410 = inversesqrt(dot(vec3(_1404, _1405, _1406), vec3(_1404, _1405, _1406)));
    float _1414 = dot(vec3(_198, _199, _200), vec3(cbLight._m0[_1331].xyz));
    float _2975 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
    float _1417 = isnan(1.0) ? _2975 : (isnan(_2975) ? 1.0 : min(_2975, 1.0));
    float _1418 = dot(vec3(_198, _199, _200), vec3(_280, _281, _282));
    float _2986 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
    float _1421 = isnan(1.0) ? _2986 : (isnan(_2986) ? 1.0 : min(_2986, 1.0));
    float _1422 = dot(vec3(cbLight._m0[_1331].xyz), vec3(_1404 * _1410, _1405 * _1410, _1406 * _1410));
    float _2997 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
    float _1433 = (exp2(log2(1.0 - (isnan(1.0) ? _2997 : (isnan(_2997) ? 1.0 : min(_2997, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1439 = (0.5 / ((_1417 + 9.9999999392252902907785028219223e-09) + _1421)) * _1417;
    float _3008 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
    float _1441 = (isnan(1.0) ? _3008 : (isnan(_3008) ? 1.0 : min(_3008, 1.0))) * 0.31831014156341552734375;
    uint _1455 = _1331 + 9u;
    float _1461 = cbLight._m0[_1367].x + _280;
    float _1462 = cbLight._m0[_1367].y + _281;
    float _1463 = cbLight._m0[_1367].z + _282;
    float _1467 = inversesqrt(dot(vec3(_1461, _1462, _1463), vec3(_1461, _1462, _1463)));
    float _1471 = dot(vec3(_198, _199, _200), vec3(cbLight._m0[_1367].xyz));
    float _3019 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
    float _1474 = isnan(1.0) ? _3019 : (isnan(_3019) ? 1.0 : min(_3019, 1.0));
    float _1475 = dot(vec3(cbLight._m0[_1367].xyz), vec3(_1461 * _1467, _1462 * _1467, _1463 * _1467));
    float _3030 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
    float _1484 = (exp2(log2(1.0 - (isnan(1.0) ? _3030 : (isnan(_3030) ? 1.0 : min(_3030, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1488 = (0.5 / ((_1474 + 9.9999999392252902907785028219223e-09) + _1421)) * _1474;
    float _3041 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
    float _1490 = (isnan(1.0) ? _3041 : (isnan(_3041) ? 1.0 : min(_3041, 1.0))) * 0.31831014156341552734375;
    float _1500 = (((_1484 * cbLight._m0[_1455].x) * _1490) * _1349) + ((((cbLight._m0[_1398].x * _1323) * _1433) * _1441) * _1363);
    float _1501 = (((_1484 * cbLight._m0[_1455].y) * _1490) * _1349) + ((((cbLight._m0[_1398].y * _1324) * _1433) * _1441) * _1363);
    float _1502 = (((_1484 * cbLight._m0[_1455].z) * _1490) * _1349) + ((((cbLight._m0[_1398].z * _1325) * _1433) * _1441) * _1363);
    float _1633;
    float _1635;
    float _1637;
    float _1639;
    float _1641;
    float _1643;
    if (_1329.y == 0u)
    {
        uvec4 _1588 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1589 = _1588.x;
        uint _1600 = uint((float(_1588.y) * floor(float(uint(cbSceneParam._m0[85u].y * _302) / _1589))) + floor(float(uint(cbSceneParam._m0[85u].x * _301) / _1589)));
        float _1610 = (log2(_1122 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1611 = isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0));
        uint _1614 = uint(isnan(14.0) ? _1611 : (isnan(_1611) ? 14.0 : min(_1611, 14.0)));
        uvec4 _1619 = texelFetch(g_lightClusterGridBuffer, int(((_1614 << 2u) + (_1600 << 6u)) >> 2u));
        uint _1620 = _1619.x;
        uint _1621 = _1588.z;
        float _1699;
        float _1701;
        float _1703;
        float _1705;
        float _1707;
        float _1709;
        if (((((1u << ((_1621 >> 4u) & 15u)) + 4294967295u) & _1620) == 0u) || ((_1621 & 240u) == 0u))
        {
            _1699 = 0.0;
            _1701 = 0.0;
            _1703 = 0.0;
            _1705 = 0.0;
            _1707 = 0.0;
            _1709 = 0.0;
        }
        else
        {
            float _1700;
            float _1702;
            float _1704;
            float _1706;
            float _1708;
            float _1710;
            float _1852 = 0.0;
            float _1853 = 0.0;
            float _1854 = 0.0;
            float _1855 = 0.0;
            float _1856 = 0.0;
            float _1857 = 0.0;
            uint _1858 = 0u;
            uint _1867;
            bool _1868;
            for (;;)
            {
                _1867 = texelFetch(g_lightClassification, int((((_1614 << 5u) + (_1600 << 9u)) + (_1858 << 2u)) >> 2u)).x;
                _1868 = _1867 == 0u;
                float frontier_phi_27_pred;
                float frontier_phi_27_pred_1;
                float frontier_phi_27_pred_2;
                float frontier_phi_27_pred_3;
                float frontier_phi_27_pred_4;
                float frontier_phi_27_pred_5;
                if (_1868)
                {
                    frontier_phi_27_pred = _1857;
                    frontier_phi_27_pred_1 = _1856;
                    frontier_phi_27_pred_2 = _1855;
                    frontier_phi_27_pred_3 = _1854;
                    frontier_phi_27_pred_4 = _1853;
                    frontier_phi_27_pred_5 = _1852;
                }
                else
                {
                    float _1997;
                    float _1998;
                    float _1999;
                    float _2000;
                    float _2001;
                    float _2002;
                    uint _2003;
                    _1997 = _1852;
                    _1998 = _1853;
                    _1999 = _1854;
                    _2000 = _1855;
                    _2001 = _1856;
                    _2002 = _1857;
                    _2003 = _1867;
                    float _1924;
                    float _1925;
                    float _1926;
                    float _1927;
                    float _1928;
                    float _1929;
                    for (;;)
                    {
                        uint _2007 = uint(findLSB(_2003)) + (_1858 << 5u);
                        uint _2004 = (_2003 + 4294967295u) & _2003;
                        uint _2009 = _2007 * 48u;
                        vec4 _2023 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2009)).x, texelFetch(g_PointLightRenderingBuffer, int(_2009 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2009 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2009 + 3u)).x));
                        uint _2029 = (_2007 * 48u) + 4u;
                        vec4 _2042 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2029)).x, texelFetch(g_PointLightRenderingBuffer, int(_2029 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2029 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2029 + 3u)).x));
                        uint _2048 = (_2007 * 48u) + 8u;
                        vec3 _2059 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2048)).x, texelFetch(g_PointLightRenderingBuffer, int(_2048 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2048 + 2u)).x));
                        float _2063 = _2023.x - _1120;
                        float _2064 = _2023.y - _1121;
                        float _2065 = _2023.z - _1122;
                        float _2066 = dot(vec3(_2063, _2064, _2065), vec3(_2063, _2064, _2065));
                        float _2069 = inversesqrt(_2066);
                        float _2078 = 1.0 - (_2066 * _2023.w);
                        float _3062 = isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0));
                        float _2079 = isnan(1.0) ? _3062 : (isnan(_3062) ? 1.0 : min(_3062, 1.0));
                        float _2080 = sqrt(_2066) * _2042.w;
                        float _2083 = 1.39999997615814208984375 / (_2080 + 1.39999997615814208984375);
                        float _2084 = _2083 * _2083;
                        float _2087 = ((1.0 - _2084) * dot(vec3(_322, _325, _328), vec3(_2069 * _2063, _2069 * _2064, _2069 * _2065))) + _2084;
                        float _2090 = _2080 * _2080;
                        float _2094 = ((isnan(0.0) ? _2087 : (isnan(_2087) ? 0.0 : max(_2087, 0.0))) * _2079) / ((_2090 * 0.699999988079071044921875) + 1.0);
                        float _2098 = (-0.0) - _1120;
                        float _2099 = (-0.0) - _1121;
                        float _2100 = (-0.0) - _1122;
                        float _2104 = inversesqrt(dot(vec3(_2098, _2099, _2100), vec3(_2098, _2099, _2100)));
                        float _2108 = dot(vec3(_322, _325, _328), vec3(_2104 * _2098, _2104 * _2099, _2104 * _2100));
                        float _3078 = isnan(0.0) ? _2108 : (isnan(_2108) ? 0.0 : max(_2108, 0.0));
                        float _3089 = isnan(0.0) ? _2087 : (isnan(_2087) ? 0.0 : max(_2087, 0.0));
                        float _2112 = isnan(1.0) ? _3089 : (isnan(_3089) ? 1.0 : min(_3089, 1.0));
                        float _2116 = (0.5 / (((isnan(1.0) ? _3078 : (isnan(_3078) ? 1.0 : min(_3078, 1.0))) + 9.9999999392252902907785028219223e-09) + _2112)) * _2112;
                        float _3100 = isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0));
                        float _2125 = (((isnan(1.0) ? _3100 : (isnan(_3100) ? 1.0 : min(_3100, 1.0))) * 3.1415927410125732421875) / ((_2090 * 2.1991131305694580078125) + 3.141590118408203125)) * _2079;
                        _1927 = (_2094 * _2042.x) + _2000;
                        _1928 = (_2094 * _2042.y) + _2001;
                        _1929 = (_2094 * _2042.z) + _2002;
                        _1924 = (_2125 * _2059.x) + _1997;
                        _1925 = (_2125 * _2059.y) + _1998;
                        _1926 = (_2125 * _2059.z) + _1999;
                        if (_2004 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _1997 = _1924;
                            _1998 = _1925;
                            _1999 = _1926;
                            _2000 = _1927;
                            _2001 = _1928;
                            _2002 = _1929;
                            _2003 = _2004;
                        }
                    }
                    frontier_phi_27_pred = _1929;
                    frontier_phi_27_pred_1 = _1928;
                    frontier_phi_27_pred_2 = _1927;
                    frontier_phi_27_pred_3 = _1926;
                    frontier_phi_27_pred_4 = _1925;
                    frontier_phi_27_pred_5 = _1924;
                }
                _1710 = frontier_phi_27_pred;
                _1708 = frontier_phi_27_pred_1;
                _1706 = frontier_phi_27_pred_2;
                _1704 = frontier_phi_27_pred_3;
                _1702 = frontier_phi_27_pred_4;
                _1700 = frontier_phi_27_pred_5;
                uint _1859 = _1858 + 1u;
                if (_1859 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1852 = _1700;
                    _1853 = _1702;
                    _1854 = _1704;
                    _1855 = _1706;
                    _1856 = _1708;
                    _1857 = _1710;
                    _1858 = _1859;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1699 = _1700;
            _1701 = _1702;
            _1703 = _1704;
            _1705 = _1706;
            _1707 = _1708;
            _1709 = _1710;
        }
        uvec4 _1713 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1714 = _1713.z;
        uint _1716 = (_1714 >> 8u) & 15u;
        float _1823;
        float _1825;
        float _1827;
        float _1829;
        float _1831;
        float _1833;
        if (((4294967295u << _1716) & _1620) == 0u)
        {
            _1823 = _1699;
            _1825 = _1701;
            _1827 = _1703;
            _1829 = _1705;
            _1831 = _1707;
            _1833 = _1709;
        }
        else
        {
            float _1848 = inversesqrt(dot(vec3(_1120, _1121, _1122), vec3(_1120, _1121, _1122)));
            float frontier_phi_19_20_ladder;
            float frontier_phi_19_20_ladder_1;
            float frontier_phi_19_20_ladder_2;
            float frontier_phi_19_20_ladder_3;
            float frontier_phi_19_20_ladder_4;
            float frontier_phi_19_20_ladder_5;
            if (_1716 < ((_1714 >> 12u) & 15u))
            {
                float _1824;
                float _1826;
                float _1828;
                float _1830;
                float _1832;
                float _1834;
                float _1980 = _1699;
                float _1981 = _1701;
                float _1982 = _1703;
                float _1983 = _1705;
                float _1984 = _1707;
                float _1985 = _1709;
                uint _1986 = _1716;
                uint _1995;
                bool _1996;
                for (;;)
                {
                    _1995 = texelFetch(g_lightClassification, int((((_1614 << 5u) + (_1600 << 9u)) + (_1986 << 2u)) >> 2u)).x;
                    _1996 = _1995 == 0u;
                    float frontier_phi_38_pred;
                    float frontier_phi_38_pred_1;
                    float frontier_phi_38_pred_2;
                    float frontier_phi_38_pred_3;
                    float frontier_phi_38_pred_4;
                    float frontier_phi_38_pred_5;
                    if (_1996)
                    {
                        frontier_phi_38_pred = _1985;
                        frontier_phi_38_pred_1 = _1984;
                        frontier_phi_38_pred_2 = _1983;
                        frontier_phi_38_pred_3 = _1982;
                        frontier_phi_38_pred_4 = _1981;
                        frontier_phi_38_pred_5 = _1980;
                    }
                    else
                    {
                        float _2139;
                        float _2140;
                        float _2141;
                        float _2142;
                        float _2143;
                        float _2144;
                        float _2392;
                        float _2393;
                        float _2394;
                        float _2395;
                        float _2396;
                        float _2397;
                        float _2152 = _1980;
                        float _2153 = _1981;
                        float _2154 = _1982;
                        float _2155 = _1983;
                        float _2156 = _1984;
                        float _2157 = _1985;
                        uint _2158 = _1995;
                        uint _2159;
                        vec4 _2185;
                        float _2186;
                        vec4 _2201;
                        vec3 _2213;
                        vec4 _2229;
                        vec4 _2245;
                        float _2292;
                        bool _2293;
                        for (;;)
                        {
                            uint _2169 = ((_1986 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2158));
                            _2159 = (_2158 + 4294967295u) & _2158;
                            uint _2171 = _2169 * 40u;
                            _2185 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2171)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2171 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2171 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2171 + 3u)).x));
                            _2186 = _2185.w;
                            uint _2188 = (_2169 * 40u) + 4u;
                            _2201 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2188)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2188 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2188 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2188 + 3u)).x));
                            uint _2203 = (_2169 * 40u) + 8u;
                            _2213 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2203)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2203 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2203 + 2u)).x));
                            uint _2216 = (_2169 * 40u) + 16u;
                            _2229 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2216)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2216 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2216 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2216 + 3u)).x));
                            uint _2232 = (_2169 * 40u) + 20u;
                            _2245 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2232)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2232 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2232 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2232 + 3u)).x));
                            uint _2248 = (_2169 * 40u) + 24u;
                            vec4 _2261 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2248)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2248 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2248 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2248 + 3u)).x));
                            uint _2267 = (_2169 * 40u) + 28u;
                            vec4 _2280 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2267)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2267 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2267 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2267 + 3u)).x));
                            _2292 = fma(_1122, _2280.z, fma(_1121, _2280.y, _2280.x * _1120)) + _2280.w;
                            _2293 = !((fma(_1122, _2261.z, fma(_1121, _2261.y, _2261.x * _1120)) + _2261.w) <= 0.0);
                            float frontier_phi_44_pred;
                            float frontier_phi_44_pred_1;
                            float frontier_phi_44_pred_2;
                            float frontier_phi_44_pred_3;
                            float frontier_phi_44_pred_4;
                            float frontier_phi_44_pred_5;
                            if (_2293)
                            {
                                float _2320 = _2185.x - _1120;
                                float _2321 = _2185.y - _1121;
                                float _2322 = _2185.z - _1122;
                                float _2323 = dot(vec3(_2320, _2321, _2322), vec3(_2320, _2321, _2322));
                                float _2326 = inversesqrt(_2323);
                                float _2327 = _2326 * _2320;
                                float _2328 = _2326 * _2321;
                                float _2329 = _2326 * _2322;
                                float _2333 = 1.0 - (_2323 / (_2186 * _2186));
                                float _3111 = isnan(0.0) ? _2333 : (isnan(_2333) ? 0.0 : max(_2333, 0.0));
                                float _2334 = isnan(1.0) ? _3111 : (isnan(_3111) ? 1.0 : min(_3111, 1.0));
                                float _2338 = sqrt(_2323) * _2201.w;
                                float _2340 = 1.39999997615814208984375 / (_2338 + 1.39999997615814208984375);
                                float _2341 = _2340 * _2340;
                                float _2342 = 1.0 - _2341;
                                float _2344 = (_2342 * dot(vec3(_2327, _2328, _2329), vec3(_322, _325, _328))) + _2341;
                                float _2347 = _2338 * _2338;
                                float _2351 = (fma(_1122, _2229.z, fma(_1121, _2229.y, _2229.x * _1120)) + _2229.w) / _2292;
                                float _2352 = (fma(_1122, _2245.z, fma(_1121, _2245.y, _2245.x * _1120)) + _2245.w) / _2292;
                                float _2356 = 1.0 - dot(vec2(_2351, _2352), vec2(_2351, _2352));
                                float _3127 = isnan(0.0) ? _2356 : (isnan(_2356) ? 0.0 : max(_2356, 0.0));
                                float _2357 = isnan(1.0) ? _3127 : (isnan(_3127) ? 1.0 : min(_3127, 1.0));
                                float _2358 = _2357 * (((isnan(0.0) ? _2344 : (isnan(_2344) ? 0.0 : max(_2344, 0.0))) * _2334) / ((_2347 * 0.699999988079071044921875) + 1.0));
                                float _2368 = dot(vec3(_322, _325, _328), vec3((-0.0) - (_1120 * _1848), (-0.0) - (_1121 * _1848), (-0.0) - (_1122 * _1848)));
                                float _3138 = isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0));
                                float _2376 = (_2342 * dot(vec3(_322, _325, _328), vec3(_2327, _2328, _2329))) + _2341;
                                float _3149 = isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0));
                                float _2377 = isnan(1.0) ? _3149 : (isnan(_3149) ? 1.0 : min(_3149, 1.0));
                                float _2381 = (0.5 / (((isnan(1.0) ? _3138 : (isnan(_3138) ? 1.0 : min(_3138, 1.0))) + 9.9999999392252902907785028219223e-09) + _2377)) * _2377;
                                float _3160 = isnan(0.0) ? _2381 : (isnan(_2381) ? 0.0 : max(_2381, 0.0));
                                float _2388 = (_2357 * _2334) * (((isnan(1.0) ? _3160 : (isnan(_3160) ? 1.0 : min(_3160, 1.0))) * 3.1415927410125732421875) / ((_2347 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_44_pred = _2358 * _2201.z;
                                frontier_phi_44_pred_1 = _2358 * _2201.y;
                                frontier_phi_44_pred_2 = _2358 * _2201.x;
                                frontier_phi_44_pred_3 = _2388 * _2213.z;
                                frontier_phi_44_pred_4 = _2388 * _2213.y;
                                frontier_phi_44_pred_5 = _2388 * _2213.x;
                            }
                            else
                            {
                                frontier_phi_44_pred = 0.0;
                                frontier_phi_44_pred_1 = 0.0;
                                frontier_phi_44_pred_2 = 0.0;
                                frontier_phi_44_pred_3 = 0.0;
                                frontier_phi_44_pred_4 = 0.0;
                                frontier_phi_44_pred_5 = 0.0;
                            }
                            _2397 = frontier_phi_44_pred;
                            _2396 = frontier_phi_44_pred_1;
                            _2395 = frontier_phi_44_pred_2;
                            _2394 = frontier_phi_44_pred_3;
                            _2393 = frontier_phi_44_pred_4;
                            _2392 = frontier_phi_44_pred_5;
                            _2142 = _2395 + _2155;
                            _2143 = _2396 + _2156;
                            _2144 = _2397 + _2157;
                            _2139 = _2392 + _2152;
                            _2140 = _2393 + _2153;
                            _2141 = _2394 + _2154;
                            if (_2159 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2152 = _2139;
                                _2153 = _2140;
                                _2154 = _2141;
                                _2155 = _2142;
                                _2156 = _2143;
                                _2157 = _2144;
                                _2158 = _2159;
                                continue;
                            }
                        }
                        frontier_phi_38_pred = _2144;
                        frontier_phi_38_pred_1 = _2143;
                        frontier_phi_38_pred_2 = _2142;
                        frontier_phi_38_pred_3 = _2141;
                        frontier_phi_38_pred_4 = _2140;
                        frontier_phi_38_pred_5 = _2139;
                    }
                    _1834 = frontier_phi_38_pred;
                    _1832 = frontier_phi_38_pred_1;
                    _1830 = frontier_phi_38_pred_2;
                    _1828 = frontier_phi_38_pred_3;
                    _1826 = frontier_phi_38_pred_4;
                    _1824 = frontier_phi_38_pred_5;
                    uint _1987 = _1986 + 1u;
                    if (_1987 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _1980 = _1824;
                        _1981 = _1826;
                        _1982 = _1828;
                        _1983 = _1830;
                        _1984 = _1832;
                        _1985 = _1834;
                        _1986 = _1987;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_19_20_ladder = _1832;
                frontier_phi_19_20_ladder_1 = _1830;
                frontier_phi_19_20_ladder_2 = _1828;
                frontier_phi_19_20_ladder_3 = _1826;
                frontier_phi_19_20_ladder_4 = _1824;
                frontier_phi_19_20_ladder_5 = _1834;
            }
            else
            {
                frontier_phi_19_20_ladder = _1707;
                frontier_phi_19_20_ladder_1 = _1705;
                frontier_phi_19_20_ladder_2 = _1703;
                frontier_phi_19_20_ladder_3 = _1701;
                frontier_phi_19_20_ladder_4 = _1699;
                frontier_phi_19_20_ladder_5 = _1709;
            }
            _1823 = frontier_phi_19_20_ladder_4;
            _1825 = frontier_phi_19_20_ladder_3;
            _1827 = frontier_phi_19_20_ladder_2;
            _1829 = frontier_phi_19_20_ladder_1;
            _1831 = frontier_phi_19_20_ladder;
            _1833 = frontier_phi_19_20_ladder_5;
        }
        float _1838 = isnan(1.0) ? _367 : (isnan(_367) ? 1.0 : min(_367, 1.0));
        _1633 = (_1838 * _1829) + _1395;
        _1635 = (_1838 * _1831) + _1396;
        _1637 = (_1838 * _1833) + _1397;
        _1639 = ((_1823 * 0.039999999105930328369140625) * _1838) + _1500;
        _1641 = ((_1825 * 0.039999999105930328369140625) * _1838) + _1501;
        _1643 = ((_1827 * 0.039999999105930328369140625) * _1838) + _1502;
    }
    else
    {
        _1633 = _1395;
        _1635 = _1396;
        _1637 = _1397;
        _1639 = _1500;
        _1641 = _1501;
        _1643 = _1502;
    }
    float _3176 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _3187 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _3198 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _3209 = isnan(0.0) ? _202 : (isnan(_202) ? 0.0 : max(_202, 0.0));
    float _1658 = ((isnan(1.0) ? _3176 : (isnan(_3176) ? 1.0 : min(_3176, 1.0))) * (_1633 + ((isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0))) * _367))) + (_1639 * cbPerFrame._m0[3u].x);
    float _1659 = ((isnan(1.0) ? _3187 : (isnan(_3187) ? 1.0 : min(_3187, 1.0))) * (_1635 + ((isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0))) * _367))) + (_1641 * cbPerFrame._m0[3u].x);
    float _1660 = ((isnan(1.0) ? _3198 : (isnan(_3198) ? 1.0 : min(_3198, 1.0))) * (_1637 + ((isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0))) * _367))) + (_1643 * cbPerFrame._m0[3u].x);
    float _1665 = cbInstanceData._m0[_341 + 6u].w * (isnan(1.0) ? _3209 : (isnan(_3209) ? 1.0 : min(_3209, 1.0)));
    float _1670 = _301 / cbSceneParam._m0[86u].x;
    float _1671 = _302 / cbSceneParam._m0[86u].y;
    vec4 _1685 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1670, _1671, (log2((isnan(cbSceneParam._m0[77u].w) ? _221 : (isnan(_221) ? cbSceneParam._m0[77u].w : min(_221, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1687 = _1685.x;
    float _1688 = _1685.y;
    float _1689 = _1685.z;
    float _1690 = _1685.w;
    float _1763;
    float _1765;
    float _1767;
    float _1769;
    if (_221 > cbSceneParam._m0[78u].w)
    {
        float _1724 = isnan(_221) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _221 : min(cbSceneParam._m0[80u].w, _221));
        float _1725 = _1724 / _221;
        float _1736 = _1725 * _273;
        float _1737 = _274 * _1725;
        float _1738 = (-0.0) - _1737;
        float _1740 = _1725 * _275;
        float _1742 = (cbSceneParam._m0[77u].w * _1738) / _1724;
        float _1743 = _1742 + cbSceneParam._m0[79u].w;
        float _1744 = cbSceneParam._m0[79u].w - _1737;
        float _1750 = sqrt(((_1736 * _1736) + (_1737 * _1737)) + (_1740 * _1740));
        float _1753 = (1.0 - (cbSceneParam._m0[77u].w / _1724)) * _1750;
        float _1759 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1761 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1937;
        if (abs((_1738 - _1742) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1937 = ((((_1743 > 0.0) ? exp2(_1759 * _1743) : (2.0 - exp2(_1761 * _1743))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1753;
        }
        else
        {
            float _1881 = 1.0 / cbSceneParam._m0[80u].x;
            float _1882 = isnan(_1744) ? _1743 : (isnan(_1743) ? _1744 : max(_1743, _1744));
            float _1883 = isnan(_1744) ? _1743 : (isnan(_1743) ? _1744 : min(_1743, _1744));
            float _1892 = isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : min(_1882, 0.0));
            float _1893 = isnan(0.0) ? _1883 : (isnan(_1883) ? 0.0 : min(_1883, 0.0));
            _1937 = ((abs(_1750 / _1738) * cbSceneParam._m0[80u].y) * ((((_1892 - _1893) * 2.0) - ((exp2(_1759 * (isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0)))) - exp2(_1759 * (isnan(0.0) ? _1883 : (isnan(_1883) ? 0.0 : max(_1883, 0.0))))) * _1881)) - ((exp2(_1761 * _1892) - exp2(_1761 * _1893)) * _1881))) + (_1753 * cbSceneParam._m0[80u].z);
        }
        vec4 _1939 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1670, _1671, 1.0), 0.0);
        float _1948 = exp2((_1937 * (-1.44269502162933349609375)) * (1.0 - _1939.w));
        float _1949 = log2(_1948);
        float _1965 = log2(_1690);
        _1763 = (exp2(_1965 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1949 * cbSceneParam._m0[78u].x)) * _1939.x) / cbSceneParam._m0[78u].x)) + _1687;
        _1765 = (exp2(_1965 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1949 * cbSceneParam._m0[78u].y)) * _1939.y) / cbSceneParam._m0[78u].y)) + _1688;
        _1767 = (exp2(_1965 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1949 * cbSceneParam._m0[78u].z)) * _1939.z) / cbSceneParam._m0[78u].z)) + _1689;
        _1769 = _1948 * _1690;
    }
    else
    {
        _1763 = _1687;
        _1765 = _1688;
        _1767 = _1689;
        _1769 = _1690;
    }
    bool _1975;
    vec4 _1779;
    vec4 _1802;
    float _1804;
    float _1808;
    float _1809;
    float _1810;
    float _1811;
    bool _1822;
    for (;;)
    {
        _1779 = cbMatDynParam._m0[0u];
        float _1781 = roundEven(_1779.y);
        bool _1782 = _1781 == 3.0;
        float _1784 = log2(_1769);
        float _1791 = exp2(_1784 * cbSceneParam._m0[78u].x) * _1658;
        float _1792 = exp2(_1784 * cbSceneParam._m0[78u].y) * _1659;
        float _1793 = exp2(_1784 * cbSceneParam._m0[78u].z) * _1660;
        float _1800 = _289 + (-0.5);
        _1802 = cbMtdParam._m0[1u];
        _1804 = _1802.y * _1800;
        float _1807 = (_1781 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1808 = _1807 * (_1782 ? _1791 : (_1791 + (cbSceneParam._m0[72u].w * _1763)));
        _1809 = _1807 * (_1782 ? _1792 : (_1792 + (cbSceneParam._m0[72u].w * _1765)));
        _1810 = _1807 * (_1782 ? _1793 : (_1793 + (cbSceneParam._m0[72u].w * _1767)));
        _1811 = _1800 * 0.999000012874603271484375;
        _1822 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1822)
        {
            if ((cbInstanceData._m0[_341 + 7u].x + _1811) < 0.5)
            {
                _1975 = true;
                break;
            }
        }
        uint _1916 = _343 + uint(_1779.w);
        if ((cbInstanceData._m0[_1916].w < 1.0) && ((cbInstanceData._m0[_1916].w + _1811) < 0.5))
        {
            _1975 = true;
            break;
        }
        if ((_1804 + _193) < _1802.x)
        {
            _1975 = true;
            break;
        }
        _1975 = false;
        break;
    }
    float _2130;
    if (_1975)
    {
        discard_state = true;
        _2130 = 0.0;
    }
    else
    {
        _2130 = _1665;
    }
    SV_Target.x = _1808;
    SV_Target.y = _1809;
    SV_Target.z = _1810;
    SV_Target.w = _2130;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1665;
    discard_exit();
}


