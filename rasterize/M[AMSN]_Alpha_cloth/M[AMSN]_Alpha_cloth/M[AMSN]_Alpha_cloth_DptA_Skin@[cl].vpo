#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out vec2 TEXCOORD_5;
layout(location = 4, component = 2) out float TEXCOORD_9;

void main()
{
    uint _78 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_9 = 0.0;
    float _163 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _165 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _166 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _173 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _174 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _175 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _415;
    float _416;
    float _417;
    float _418;
    float _419;
    float _420;
    float _421;
    float _422;
    float _423;
    float _424;
    float _425;
    float _426;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _199 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _78;
        precise float _203 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _208 = isnan(_203) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _203 : max(0.001000000047497451305389404296875, _203));
        precise float _210 = BLENDWEIGHT.x / _208;
        precise float _211 = BLENDWEIGHT.y / _208;
        precise float _212 = BLENDWEIGHT.z / _208;
        precise float _213 = BLENDWEIGHT.w / _208;
        uvec4 _220 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_199)).x * 13u) + 4u]);
        uint _221 = _220.x;
        uint _223 = (_221 + uint(float(BLENDINDICES.x))) * 3u;
        uint _230 = _223 + 1u;
        uint _237 = _223 + 2u;
        precise float _244 = _210 * cbObjMatrix._m0[_223].x;
        precise float _245 = _210 * cbObjMatrix._m0[_230].x;
        precise float _246 = _210 * cbObjMatrix._m0[_237].x;
        precise float _247 = _210 * cbObjMatrix._m0[_223].y;
        precise float _248 = _210 * cbObjMatrix._m0[_230].y;
        precise float _249 = _210 * cbObjMatrix._m0[_237].y;
        precise float _250 = _210 * cbObjMatrix._m0[_223].z;
        precise float _251 = _210 * cbObjMatrix._m0[_230].z;
        precise float _252 = _210 * cbObjMatrix._m0[_237].z;
        precise float _253 = _210 * cbObjMatrix._m0[_223].w;
        precise float _254 = _210 * cbObjMatrix._m0[_230].w;
        precise float _255 = _210 * cbObjMatrix._m0[_237].w;
        uint _258 = (_221 + uint(float(BLENDINDICES.y))) * 3u;
        uint _265 = _258 + 1u;
        uint _272 = _258 + 2u;
        precise float _279 = _211 * cbObjMatrix._m0[_258].x;
        precise float _280 = _211 * cbObjMatrix._m0[_265].x;
        precise float _281 = _211 * cbObjMatrix._m0[_272].x;
        precise float _282 = _211 * cbObjMatrix._m0[_258].y;
        precise float _283 = _211 * cbObjMatrix._m0[_265].y;
        precise float _284 = _211 * cbObjMatrix._m0[_272].y;
        precise float _285 = _211 * cbObjMatrix._m0[_258].z;
        precise float _286 = _211 * cbObjMatrix._m0[_265].z;
        precise float _287 = _211 * cbObjMatrix._m0[_272].z;
        precise float _288 = _211 * cbObjMatrix._m0[_258].w;
        precise float _289 = _211 * cbObjMatrix._m0[_265].w;
        precise float _290 = _211 * cbObjMatrix._m0[_272].w;
        precise float _291 = _244 + _279;
        precise float _292 = _245 + _280;
        precise float _293 = _246 + _281;
        precise float _294 = _247 + _282;
        precise float _295 = _248 + _283;
        precise float _296 = _249 + _284;
        precise float _297 = _250 + _285;
        precise float _298 = _251 + _286;
        precise float _299 = _252 + _287;
        precise float _300 = _253 + _288;
        precise float _301 = _254 + _289;
        precise float _302 = _255 + _290;
        uint _305 = (_221 + uint(float(BLENDINDICES.z))) * 3u;
        uint _312 = _305 + 1u;
        uint _319 = _305 + 2u;
        precise float _326 = _212 * cbObjMatrix._m0[_305].x;
        precise float _327 = _212 * cbObjMatrix._m0[_312].x;
        precise float _328 = _212 * cbObjMatrix._m0[_319].x;
        precise float _329 = _212 * cbObjMatrix._m0[_305].y;
        precise float _330 = _212 * cbObjMatrix._m0[_312].y;
        precise float _331 = _212 * cbObjMatrix._m0[_319].y;
        precise float _332 = _212 * cbObjMatrix._m0[_305].z;
        precise float _333 = _212 * cbObjMatrix._m0[_312].z;
        precise float _334 = _212 * cbObjMatrix._m0[_319].z;
        precise float _335 = _212 * cbObjMatrix._m0[_305].w;
        precise float _336 = _212 * cbObjMatrix._m0[_312].w;
        precise float _337 = _212 * cbObjMatrix._m0[_319].w;
        precise float _338 = _291 + _326;
        precise float _339 = _292 + _327;
        precise float _340 = _293 + _328;
        precise float _341 = _294 + _329;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        precise float _345 = _298 + _333;
        precise float _346 = _299 + _334;
        precise float _347 = _300 + _335;
        precise float _348 = _301 + _336;
        precise float _349 = _302 + _337;
        uint _352 = (_221 + uint(float(BLENDINDICES.w))) * 3u;
        uint _359 = _352 + 1u;
        uint _366 = _352 + 2u;
        precise float _373 = _213 * cbObjMatrix._m0[_352].x;
        precise float _374 = _213 * cbObjMatrix._m0[_359].x;
        precise float _375 = _213 * cbObjMatrix._m0[_366].x;
        precise float _376 = _213 * cbObjMatrix._m0[_352].y;
        precise float _377 = _213 * cbObjMatrix._m0[_359].y;
        precise float _378 = _213 * cbObjMatrix._m0[_366].y;
        precise float _379 = _213 * cbObjMatrix._m0[_352].z;
        precise float _380 = _213 * cbObjMatrix._m0[_359].z;
        precise float _381 = _213 * cbObjMatrix._m0[_366].z;
        precise float _382 = _213 * cbObjMatrix._m0[_352].w;
        precise float _383 = _213 * cbObjMatrix._m0[_359].w;
        precise float _384 = _213 * cbObjMatrix._m0[_366].w;
        precise float _385 = _338 + _373;
        precise float _386 = _339 + _374;
        precise float _387 = _340 + _375;
        precise float _388 = _341 + _376;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        precise float _392 = _345 + _380;
        precise float _393 = _346 + _381;
        precise float _394 = _347 + _382;
        precise float _395 = _348 + _383;
        precise float _396 = _349 + _384;
        _415 = _385;
        _416 = _388;
        _417 = _391;
        _418 = _394;
        _419 = _386;
        _420 = _389;
        _421 = _392;
        _422 = _395;
        _423 = _387;
        _424 = _390;
        _425 = _393;
        _426 = _396;
    }
    else
    {
        _415 = cbvModelParam._m0[0u].x;
        _416 = cbvModelParam._m0[0u].y;
        _417 = cbvModelParam._m0[0u].z;
        _418 = cbvModelParam._m0[0u].w;
        _419 = cbvModelParam._m0[1u].x;
        _420 = cbvModelParam._m0[1u].y;
        _421 = cbvModelParam._m0[1u].z;
        _422 = cbvModelParam._m0[1u].w;
        _423 = cbvModelParam._m0[2u].x;
        _424 = cbvModelParam._m0[2u].y;
        _425 = cbvModelParam._m0[2u].z;
        _426 = cbvModelParam._m0[2u].w;
    }
    precise float _427 = POSITION.x * _415;
    precise float _428 = POSITION.y * _416;
    precise float _429 = _428 + _427;
    precise float _430 = POSITION.z * _417;
    precise float _431 = _430 + _429;
    precise float _432 = 1.0 * _418;
    precise float _433 = _432 + _431;
    precise float _434 = POSITION.x * _419;
    precise float _435 = POSITION.y * _420;
    precise float _436 = _435 + _434;
    precise float _437 = POSITION.z * _421;
    precise float _438 = _437 + _436;
    precise float _439 = 1.0 * _422;
    precise float _440 = _439 + _438;
    precise float _441 = POSITION.x * _423;
    precise float _442 = POSITION.y * _424;
    precise float _443 = _442 + _441;
    precise float _444 = POSITION.z * _425;
    precise float _445 = _444 + _443;
    precise float _446 = 1.0 * _426;
    precise float _447 = _446 + _445;
    float _453 = cbSceneParam._m0[3u].x - _433;
    float _454 = cbSceneParam._m0[3u].y - _440;
    float _455 = cbSceneParam._m0[3u].z - _447;
    uint _475 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _78;
    precise float _489 = _433 - cbSceneParam._m0[3u].x;
    precise float _490 = _440 - cbSceneParam._m0[3u].y;
    precise float _491 = _447 - cbSceneParam._m0[3u].z;
    precise float _519 = _489 * cbSceneParam._m0[24u].x;
    precise float _520 = _490 * cbSceneParam._m0[24u].y;
    precise float _521 = _520 + _519;
    precise float _522 = _491 * cbSceneParam._m0[24u].z;
    precise float _523 = _522 + _521;
    precise float _524 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _525 = _524 + _523;
    precise float _526 = _489 * cbSceneParam._m0[25u].x;
    precise float _527 = _490 * cbSceneParam._m0[25u].y;
    precise float _528 = _527 + _526;
    precise float _529 = _491 * cbSceneParam._m0[25u].z;
    precise float _530 = _529 + _528;
    precise float _531 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _532 = _531 + _530;
    precise float _533 = _489 * cbSceneParam._m0[26u].x;
    precise float _534 = _490 * cbSceneParam._m0[26u].y;
    precise float _535 = _534 + _533;
    precise float _536 = _491 * cbSceneParam._m0[26u].z;
    precise float _537 = _536 + _535;
    precise float _538 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _539 = _538 + _537;
    precise float _540 = _489 * cbSceneParam._m0[27u].x;
    precise float _541 = _490 * cbSceneParam._m0[27u].y;
    precise float _542 = _541 + _540;
    precise float _543 = _491 * cbSceneParam._m0[27u].z;
    precise float _544 = _543 + _542;
    precise float _545 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _546 = _545 + _544;
    gl_Position.x = _525;
    gl_Position.y = _532;
    gl_Position.z = _539;
    gl_Position.w = _546;
    NORMAL_1.x = fma(_166, _417, fma(_165, _416, _415 * _163));
    NORMAL_1.y = fma(_166, _421, fma(_165, _420, _419 * _163));
    NORMAL_1.z = fma(_166, _425, fma(_165, _424, _423 * _163));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_475)).x);
    TANGENT_1.x = fma(_175, _417, fma(_174, _416, _415 * _173));
    TANGENT_1.y = fma(_175, _421, fma(_174, _420, _419 * _173));
    TANGENT_1.z = fma(_175, _425, fma(_174, _424, _423 * _173));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    TEXCOORD_5.x = _539;
    TEXCOORD_5.y = _546;
    TEXCOORD_9 = sqrt(((_453 * _453) + (_454 * _454)) + (_455 * _455));
}


