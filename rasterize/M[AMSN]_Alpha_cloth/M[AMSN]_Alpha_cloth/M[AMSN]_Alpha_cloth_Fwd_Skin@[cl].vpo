#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;

void main()
{
    uint _74 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    float _162 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _164 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _165 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _172 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _173 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _174 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _414;
    float _415;
    float _416;
    float _417;
    float _418;
    float _419;
    float _420;
    float _421;
    float _422;
    float _423;
    float _424;
    float _425;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _198 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _74;
        precise float _202 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _207 = isnan(_202) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _202 : max(0.001000000047497451305389404296875, _202));
        precise float _209 = BLENDWEIGHT.x / _207;
        precise float _210 = BLENDWEIGHT.y / _207;
        precise float _211 = BLENDWEIGHT.z / _207;
        precise float _212 = BLENDWEIGHT.w / _207;
        uvec4 _219 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_198)).x * 13u) + 4u]);
        uint _220 = _219.x;
        uint _222 = (_220 + uint(float(BLENDINDICES.x))) * 3u;
        uint _229 = _222 + 1u;
        uint _236 = _222 + 2u;
        precise float _243 = _209 * cbObjMatrix._m0[_222].x;
        precise float _244 = _209 * cbObjMatrix._m0[_229].x;
        precise float _245 = _209 * cbObjMatrix._m0[_236].x;
        precise float _246 = _209 * cbObjMatrix._m0[_222].y;
        precise float _247 = _209 * cbObjMatrix._m0[_229].y;
        precise float _248 = _209 * cbObjMatrix._m0[_236].y;
        precise float _249 = _209 * cbObjMatrix._m0[_222].z;
        precise float _250 = _209 * cbObjMatrix._m0[_229].z;
        precise float _251 = _209 * cbObjMatrix._m0[_236].z;
        precise float _252 = _209 * cbObjMatrix._m0[_222].w;
        precise float _253 = _209 * cbObjMatrix._m0[_229].w;
        precise float _254 = _209 * cbObjMatrix._m0[_236].w;
        uint _257 = (_220 + uint(float(BLENDINDICES.y))) * 3u;
        uint _264 = _257 + 1u;
        uint _271 = _257 + 2u;
        precise float _278 = _210 * cbObjMatrix._m0[_257].x;
        precise float _279 = _210 * cbObjMatrix._m0[_264].x;
        precise float _280 = _210 * cbObjMatrix._m0[_271].x;
        precise float _281 = _210 * cbObjMatrix._m0[_257].y;
        precise float _282 = _210 * cbObjMatrix._m0[_264].y;
        precise float _283 = _210 * cbObjMatrix._m0[_271].y;
        precise float _284 = _210 * cbObjMatrix._m0[_257].z;
        precise float _285 = _210 * cbObjMatrix._m0[_264].z;
        precise float _286 = _210 * cbObjMatrix._m0[_271].z;
        precise float _287 = _210 * cbObjMatrix._m0[_257].w;
        precise float _288 = _210 * cbObjMatrix._m0[_264].w;
        precise float _289 = _210 * cbObjMatrix._m0[_271].w;
        precise float _290 = _243 + _278;
        precise float _291 = _244 + _279;
        precise float _292 = _245 + _280;
        precise float _293 = _246 + _281;
        precise float _294 = _247 + _282;
        precise float _295 = _248 + _283;
        precise float _296 = _249 + _284;
        precise float _297 = _250 + _285;
        precise float _298 = _251 + _286;
        precise float _299 = _252 + _287;
        precise float _300 = _253 + _288;
        precise float _301 = _254 + _289;
        uint _304 = (_220 + uint(float(BLENDINDICES.z))) * 3u;
        uint _311 = _304 + 1u;
        uint _318 = _304 + 2u;
        precise float _325 = _211 * cbObjMatrix._m0[_304].x;
        precise float _326 = _211 * cbObjMatrix._m0[_311].x;
        precise float _327 = _211 * cbObjMatrix._m0[_318].x;
        precise float _328 = _211 * cbObjMatrix._m0[_304].y;
        precise float _329 = _211 * cbObjMatrix._m0[_311].y;
        precise float _330 = _211 * cbObjMatrix._m0[_318].y;
        precise float _331 = _211 * cbObjMatrix._m0[_304].z;
        precise float _332 = _211 * cbObjMatrix._m0[_311].z;
        precise float _333 = _211 * cbObjMatrix._m0[_318].z;
        precise float _334 = _211 * cbObjMatrix._m0[_304].w;
        precise float _335 = _211 * cbObjMatrix._m0[_311].w;
        precise float _336 = _211 * cbObjMatrix._m0[_318].w;
        precise float _337 = _290 + _325;
        precise float _338 = _291 + _326;
        precise float _339 = _292 + _327;
        precise float _340 = _293 + _328;
        precise float _341 = _294 + _329;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        precise float _345 = _298 + _333;
        precise float _346 = _299 + _334;
        precise float _347 = _300 + _335;
        precise float _348 = _301 + _336;
        uint _351 = (_220 + uint(float(BLENDINDICES.w))) * 3u;
        uint _358 = _351 + 1u;
        uint _365 = _351 + 2u;
        precise float _372 = _212 * cbObjMatrix._m0[_351].x;
        precise float _373 = _212 * cbObjMatrix._m0[_358].x;
        precise float _374 = _212 * cbObjMatrix._m0[_365].x;
        precise float _375 = _212 * cbObjMatrix._m0[_351].y;
        precise float _376 = _212 * cbObjMatrix._m0[_358].y;
        precise float _377 = _212 * cbObjMatrix._m0[_365].y;
        precise float _378 = _212 * cbObjMatrix._m0[_351].z;
        precise float _379 = _212 * cbObjMatrix._m0[_358].z;
        precise float _380 = _212 * cbObjMatrix._m0[_365].z;
        precise float _381 = _212 * cbObjMatrix._m0[_351].w;
        precise float _382 = _212 * cbObjMatrix._m0[_358].w;
        precise float _383 = _212 * cbObjMatrix._m0[_365].w;
        precise float _384 = _337 + _372;
        precise float _385 = _338 + _373;
        precise float _386 = _339 + _374;
        precise float _387 = _340 + _375;
        precise float _388 = _341 + _376;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        precise float _392 = _345 + _380;
        precise float _393 = _346 + _381;
        precise float _394 = _347 + _382;
        precise float _395 = _348 + _383;
        _414 = _384;
        _415 = _387;
        _416 = _390;
        _417 = _393;
        _418 = _385;
        _419 = _388;
        _420 = _391;
        _421 = _394;
        _422 = _386;
        _423 = _389;
        _424 = _392;
        _425 = _395;
    }
    else
    {
        _414 = cbvModelParam._m0[0u].x;
        _415 = cbvModelParam._m0[0u].y;
        _416 = cbvModelParam._m0[0u].z;
        _417 = cbvModelParam._m0[0u].w;
        _418 = cbvModelParam._m0[1u].x;
        _419 = cbvModelParam._m0[1u].y;
        _420 = cbvModelParam._m0[1u].z;
        _421 = cbvModelParam._m0[1u].w;
        _422 = cbvModelParam._m0[2u].x;
        _423 = cbvModelParam._m0[2u].y;
        _424 = cbvModelParam._m0[2u].z;
        _425 = cbvModelParam._m0[2u].w;
    }
    precise float _426 = POSITION.x * _414;
    precise float _427 = POSITION.y * _415;
    precise float _428 = _427 + _426;
    precise float _429 = POSITION.z * _416;
    precise float _430 = _429 + _428;
    precise float _431 = 1.0 * _417;
    precise float _432 = _431 + _430;
    precise float _433 = POSITION.x * _418;
    precise float _434 = POSITION.y * _419;
    precise float _435 = _434 + _433;
    precise float _436 = POSITION.z * _420;
    precise float _437 = _436 + _435;
    precise float _438 = 1.0 * _421;
    precise float _439 = _438 + _437;
    precise float _440 = POSITION.x * _422;
    precise float _441 = POSITION.y * _423;
    precise float _442 = _441 + _440;
    precise float _443 = POSITION.z * _424;
    precise float _444 = _443 + _442;
    precise float _445 = 1.0 * _425;
    precise float _446 = _445 + _444;
    uint _460 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _74;
    precise float _479 = _432 - cbSceneParam._m0[3u].x;
    precise float _480 = _439 - cbSceneParam._m0[3u].y;
    precise float _481 = _446 - cbSceneParam._m0[3u].z;
    precise float _509 = _479 * cbSceneParam._m0[24u].x;
    precise float _510 = _480 * cbSceneParam._m0[24u].y;
    precise float _511 = _510 + _509;
    precise float _512 = _481 * cbSceneParam._m0[24u].z;
    precise float _513 = _512 + _511;
    precise float _514 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _515 = _514 + _513;
    precise float _516 = _479 * cbSceneParam._m0[25u].x;
    precise float _517 = _480 * cbSceneParam._m0[25u].y;
    precise float _518 = _517 + _516;
    precise float _519 = _481 * cbSceneParam._m0[25u].z;
    precise float _520 = _519 + _518;
    precise float _521 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _522 = _521 + _520;
    precise float _523 = _479 * cbSceneParam._m0[26u].x;
    precise float _524 = _480 * cbSceneParam._m0[26u].y;
    precise float _525 = _524 + _523;
    precise float _526 = _481 * cbSceneParam._m0[26u].z;
    precise float _527 = _526 + _525;
    precise float _528 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _529 = _528 + _527;
    precise float _530 = _479 * cbSceneParam._m0[27u].x;
    precise float _531 = _480 * cbSceneParam._m0[27u].y;
    precise float _532 = _531 + _530;
    precise float _533 = _481 * cbSceneParam._m0[27u].z;
    precise float _534 = _533 + _532;
    precise float _535 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _536 = _535 + _534;
    gl_Position.x = _515;
    gl_Position.y = _522;
    gl_Position.z = _529;
    gl_Position.w = _536;
    POSITION_1.x = _515;
    POSITION_1.y = _522;
    POSITION_1.z = _529;
    POSITION_1.w = _536;
    NORMAL_1.x = fma(_165, _416, fma(_164, _415, _414 * _162));
    NORMAL_1.y = fma(_165, _420, fma(_164, _419, _418 * _162));
    NORMAL_1.z = fma(_165, _424, fma(_164, _423, _422 * _162));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_460)).x);
    TANGENT_1.x = fma(_174, _416, fma(_173, _415, _414 * _172));
    TANGENT_1.y = fma(_174, _420, fma(_173, _419, _418 * _172));
    TANGENT_1.z = fma(_174, _424, fma(_173, _423, _422 * _172));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
}


