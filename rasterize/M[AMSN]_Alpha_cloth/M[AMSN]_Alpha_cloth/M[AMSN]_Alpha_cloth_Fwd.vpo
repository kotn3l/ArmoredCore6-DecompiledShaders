#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;

void main()
{
    uint _76 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _157 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _159 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _160 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _167 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _168 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _169 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _236;
    float _237;
    float _238;
    float _239;
    float _240;
    float _241;
    float _242;
    float _243;
    float _244;
    float _245;
    float _246;
    float _247;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _184 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _76;
        uint _197 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_184)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _204 = _197 + 1u;
        uint _211 = _197 + 2u;
        _236 = cbObjMatrix._m0[_197].x;
        _237 = cbObjMatrix._m0[_197].y;
        _238 = cbObjMatrix._m0[_197].z;
        _239 = cbObjMatrix._m0[_197].w;
        _240 = cbObjMatrix._m0[_204].x;
        _241 = cbObjMatrix._m0[_204].y;
        _242 = cbObjMatrix._m0[_204].z;
        _243 = cbObjMatrix._m0[_204].w;
        _244 = cbObjMatrix._m0[_211].x;
        _245 = cbObjMatrix._m0[_211].y;
        _246 = cbObjMatrix._m0[_211].z;
        _247 = cbObjMatrix._m0[_211].w;
    }
    else
    {
        _236 = cbvModelParam._m0[0u].x;
        _237 = cbvModelParam._m0[0u].y;
        _238 = cbvModelParam._m0[0u].z;
        _239 = cbvModelParam._m0[0u].w;
        _240 = cbvModelParam._m0[1u].x;
        _241 = cbvModelParam._m0[1u].y;
        _242 = cbvModelParam._m0[1u].z;
        _243 = cbvModelParam._m0[1u].w;
        _244 = cbvModelParam._m0[2u].x;
        _245 = cbvModelParam._m0[2u].y;
        _246 = cbvModelParam._m0[2u].z;
        _247 = cbvModelParam._m0[2u].w;
    }
    precise float _248 = POSITION.x * _236;
    precise float _249 = POSITION.y * _237;
    precise float _250 = _249 + _248;
    precise float _251 = POSITION.z * _238;
    precise float _252 = _251 + _250;
    precise float _253 = 1.0 * _239;
    precise float _255 = _253 + _252;
    precise float _256 = POSITION.x * _240;
    precise float _257 = POSITION.y * _241;
    precise float _258 = _257 + _256;
    precise float _259 = POSITION.z * _242;
    precise float _260 = _259 + _258;
    precise float _261 = 1.0 * _243;
    precise float _262 = _261 + _260;
    precise float _263 = POSITION.x * _244;
    precise float _264 = POSITION.y * _245;
    precise float _265 = _264 + _263;
    precise float _266 = POSITION.z * _246;
    precise float _267 = _266 + _265;
    precise float _268 = 1.0 * _247;
    precise float _269 = _268 + _267;
    uint _284 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _76;
    uvec4 _286 = texelFetch(g_InstanceIndexBuffer, int(_284));
    uint _287 = _286.x;
    precise float _303 = _255 - cbSceneParam._m0[3u].x;
    precise float _304 = _262 - cbSceneParam._m0[3u].y;
    precise float _305 = _269 - cbSceneParam._m0[3u].z;
    precise float _333 = _303 * cbSceneParam._m0[24u].x;
    precise float _334 = _304 * cbSceneParam._m0[24u].y;
    precise float _335 = _334 + _333;
    precise float _336 = _305 * cbSceneParam._m0[24u].z;
    precise float _337 = _336 + _335;
    precise float _338 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _339 = _338 + _337;
    precise float _340 = _303 * cbSceneParam._m0[25u].x;
    precise float _341 = _304 * cbSceneParam._m0[25u].y;
    precise float _342 = _341 + _340;
    precise float _343 = _305 * cbSceneParam._m0[25u].z;
    precise float _344 = _343 + _342;
    precise float _345 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _346 = _345 + _344;
    precise float _347 = _303 * cbSceneParam._m0[26u].x;
    precise float _348 = _304 * cbSceneParam._m0[26u].y;
    precise float _349 = _348 + _347;
    precise float _350 = _305 * cbSceneParam._m0[26u].z;
    precise float _351 = _350 + _349;
    precise float _352 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _353 = _352 + _351;
    precise float _354 = _303 * cbSceneParam._m0[27u].x;
    precise float _355 = _304 * cbSceneParam._m0[27u].y;
    precise float _356 = _355 + _354;
    precise float _357 = _305 * cbSceneParam._m0[27u].z;
    precise float _358 = _357 + _356;
    precise float _359 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _360 = _359 + _358;
    gl_Position.x = _339;
    gl_Position.y = _346;
    gl_Position.z = _353;
    gl_Position.w = _360;
    POSITION_1.x = _339;
    POSITION_1.y = _346;
    POSITION_1.z = _353;
    POSITION_1.w = _360;
    NORMAL_1.x = fma(_160, _238, fma(_159, _237, _236 * _157));
    NORMAL_1.y = fma(_160, _242, fma(_159, _241, _240 * _157));
    NORMAL_1.z = fma(_160, _246, fma(_159, _245, _244 * _157));
    NORMAL_1.w = float(_287);
    TANGENT_1.x = fma(_169, _238, fma(_168, _237, _236 * _167));
    TANGENT_1.y = fma(_169, _242, fma(_168, _241, _240 * _167));
    TANGENT_1.z = fma(_169, _246, fma(_168, _245, _244 * _167));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_339, _346, _353, _360), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_339, _346, _353, _360), vec4(cbInstanceData._m0[(_287 * 13u) + 3u]));
}


