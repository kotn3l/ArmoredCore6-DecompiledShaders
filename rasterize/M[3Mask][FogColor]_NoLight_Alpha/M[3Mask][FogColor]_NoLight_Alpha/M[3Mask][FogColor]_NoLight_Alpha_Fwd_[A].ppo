#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_3Mask_FogColor_NoLight_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _679;
float _680;
float _681;
float _682;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _156 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _166 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _156);
    float _167 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _156);
    float _168 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _156);
    float _176 = cbMtdParam._m0[10u].x * cbPerFrame._m0[22u].x;
    float _183 = TEXCOORD_1.y - ((cbMtdParam._m0[10u].y * cbPerFrame._m0[22u].x) * 0.550000011920928955078125);
    float _226 = ((_183 * cbMtdParam._m0[9u].x) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w;
    float _245 = (((texture(sampler2D(M_3Mask_FogColor_NoLight_Alpha_snp_0_Texture2D_0, SS_WrapLinear), vec2((((cbMtdParam._m0[10u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[10u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z - (texture(sampler2D(M_3Mask_FogColor_NoLight_Alpha_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[9u].x) * ((_176 * 3.2999999523162841796875) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[9u].x) * _183) + cbTextureTilingScale._m0[0u].w)).y * 0.20000000298023223876953125)) + (texture(sampler2D(M_3Mask_FogColor_NoLight_Alpha_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_176 * 6.900000095367431640625) + TEXCOORD_1.x) * cbMtdParam._m0[9u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _226)).x * 0.0500000007450580596923828125)) + (texture(sampler2D(M_3Mask_FogColor_NoLight_Alpha_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_176 * 16.0) + TEXCOORD_1.x) * cbMtdParam._m0[9u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _226)).x * 0.100000001490116119384765625)) * TEXCOORD_1.z;
    float _252 = sqrt(((_166 * _166) + (_167 * _167)) + (_168 * _168));
    float _255 = cbMtdParam._m0[9u].y - cbMtdParam._m0[9u].z;
    float _257 = (_252 - cbMtdParam._m0[9u].z) / (isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0)));
    float _696 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _260 = (isnan(1.0) ? _696 : (isnan(_696) ? 1.0 : min(_696, 1.0))) * _245;
    float _266 = inversesqrt(dot(vec3(_166, _167, _168), vec3(_166, _167, _168)));
    float _289 = dot(vec3(cbSceneParam._m0[84u].xyz), vec3((-0.0) - (_166 * _266), (-0.0) - (_167 * _266), (-0.0) - (_168 * _266))) * 0.5;
    float _291 = _289 + 0.5;
    float _301 = 0.5 - _289;
    float _707 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    float _340 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _345 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _347 = _345.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _426 = (cbMatDynParam._m0[5u].x * _252) + cbMatDynParam._m0[5u].y;
        float _718 = isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0));
        float _427 = isnan(1.0) ? _718 : (isnan(_718) ? 1.0 : min(_718, 1.0));
        float _431 = (cbMatDynParam._m0[5u].z * _252) + cbMatDynParam._m0[5u].w;
        float _729 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _729 : (isnan(_729) ? 1.0 : min(_729, 1.0))) - _427)) + _427) < ((_347 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _365 = uint(roundEven(NORMAL.w)) * 13u;
    uint _367 = _365 + 9u;
    uint _368 = _367 + uint(cbMatDynParam._m0[0u].w);
    float _374 = (((((cbSceneParam._m0[83u].x * _301) + (cbSceneParam._m0[82u].x * _291)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].x) * cbMtdParam._m0[9u].w) * cbInstanceData._m0[_368].x;
    float _375 = (((((cbSceneParam._m0[83u].y * _301) + (cbSceneParam._m0[82u].y * _291)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].y) * cbMtdParam._m0[9u].w) * cbInstanceData._m0[_368].y;
    float _376 = (((((cbSceneParam._m0[83u].z * _301) + (cbSceneParam._m0[82u].z * _291)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].z) * cbMtdParam._m0[9u].w) * cbInstanceData._m0[_368].z;
    float _377 = isnan(0.0) ? _374 : (isnan(_374) ? 0.0 : max(_374, 0.0));
    float _378 = isnan(0.0) ? _375 : (isnan(_375) ? 0.0 : max(_375, 0.0));
    float _379 = isnan(0.0) ? _376 : (isnan(_376) ? 0.0 : max(_376, 0.0));
    float _384 = cbInstanceData._m0[_365 + 6u].w * (isnan(1.0) ? _707 : (isnan(_707) ? 1.0 : min(_707, 1.0)));
    float _390 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _391 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _406 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_390, _391, (log2((isnan(cbSceneParam._m0[77u].w) ? _340 : (isnan(_340) ? cbSceneParam._m0[77u].w : min(_340, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _408 = _406.x;
    float _409 = _406.y;
    float _410 = _406.z;
    float _411 = _406.w;
    float _486;
    float _488;
    float _490;
    float _492;
    if (_340 > cbSceneParam._m0[78u].w)
    {
        float _448 = isnan(_340) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _340 : min(cbSceneParam._m0[80u].w, _340));
        float _449 = _448 / _340;
        float _460 = _449 * _166;
        float _461 = _167 * _449;
        float _462 = (-0.0) - _461;
        float _463 = _449 * _168;
        float _465 = (cbSceneParam._m0[77u].w * _462) / _448;
        float _466 = _465 + cbSceneParam._m0[79u].w;
        float _467 = cbSceneParam._m0[79u].w - _461;
        float _473 = sqrt(((_460 * _460) + (_461 * _461)) + (_463 * _463));
        float _476 = (1.0 - (cbSceneParam._m0[77u].w / _448)) * _473;
        float _482 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _484 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _607;
        if (abs((_462 - _465) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _607 = ((((_466 > 0.0) ? exp2(_482 * _466) : (2.0 - exp2(_484 * _466))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _476;
        }
        else
        {
            float _563 = 1.0 / cbSceneParam._m0[80u].x;
            float _564 = isnan(_467) ? _466 : (isnan(_466) ? _467 : max(_466, _467));
            float _565 = isnan(_467) ? _466 : (isnan(_466) ? _467 : min(_466, _467));
            float _574 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : min(_564, 0.0));
            float _575 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : min(_565, 0.0));
            _607 = ((abs(_473 / _462) * cbSceneParam._m0[80u].y) * ((((_574 - _575) * 2.0) - ((exp2(_482 * (isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0)))) - exp2(_482 * (isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0))))) * _563)) - ((exp2(_484 * _574) - exp2(_484 * _575)) * _563))) + (_476 * cbSceneParam._m0[80u].z);
        }
        vec4 _609 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_390, _391, 1.0), 0.0);
        float _618 = exp2((_607 * (-1.44269502162933349609375)) * (1.0 - _609.w));
        float _619 = log2(_618);
        float _635 = log2(_411);
        _486 = (exp2(_635 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_619 * cbSceneParam._m0[78u].x)) * _609.x) / cbSceneParam._m0[78u].x)) + _408;
        _488 = (exp2(_635 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_619 * cbSceneParam._m0[78u].y)) * _609.y) / cbSceneParam._m0[78u].y)) + _409;
        _490 = (exp2(_635 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_619 * cbSceneParam._m0[78u].z)) * _609.z) / cbSceneParam._m0[78u].z)) + _410;
        _492 = _618 * _411;
    }
    else
    {
        _486 = _408;
        _488 = _409;
        _490 = _410;
        _492 = _411;
    }
    bool _645;
    vec4 _502;
    vec4 _526;
    float _528;
    float _533;
    float _534;
    float _535;
    float _536;
    bool _547;
    for (;;)
    {
        _502 = cbMatDynParam._m0[0u];
        float _504 = roundEven(_502.y);
        bool _505 = _504 == 3.0;
        float _507 = log2(_492);
        float _514 = exp2(_507 * cbSceneParam._m0[78u].x) * _377;
        float _515 = exp2(_507 * cbSceneParam._m0[78u].y) * _378;
        float _516 = exp2(_507 * cbSceneParam._m0[78u].z) * _379;
        float _523 = _347 + (-0.5);
        _526 = cbMtdParam._m0[1u];
        _528 = _526.y * _523;
        float _532 = (_504 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _533 = _532 * (_505 ? _514 : (_514 + (cbSceneParam._m0[72u].w * _486)));
        _534 = _532 * (_505 ? _515 : (_515 + (cbSceneParam._m0[72u].w * _488)));
        _535 = _532 * (_505 ? _516 : (_516 + (cbSceneParam._m0[72u].w * _490)));
        _536 = _523 * 0.999000012874603271484375;
        _547 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_547)
        {
            if ((cbInstanceData._m0[_365 + 7u].x + _536) < 0.5)
            {
                _645 = true;
                break;
            }
        }
        uint _599 = _367 + uint(_502.w);
        if ((cbInstanceData._m0[_599].w < 1.0) && ((cbInstanceData._m0[_599].w + _536) < 0.5))
        {
            _645 = true;
            break;
        }
        if ((_528 + _245) < _526.x)
        {
            _645 = true;
            break;
        }
        _645 = false;
        break;
    }
    float _650;
    if (_645)
    {
        discard_state = true;
        _650 = 0.0;
    }
    else
    {
        _650 = _384;
    }
    SV_Target.x = _533;
    SV_Target.y = _534;
    SV_Target.z = _535;
    SV_Target.w = _650;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _384;
    discard_exit();
}


