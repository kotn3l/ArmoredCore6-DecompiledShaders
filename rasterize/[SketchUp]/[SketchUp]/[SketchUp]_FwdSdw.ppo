#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[9];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D _SketchUp_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _166 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _167 = _166 * NORMAL.x;
    float _168 = _166 * NORMAL.y;
    float _169 = _166 * NORMAL.z;
    float _174;
    float _175;
    float _176;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _174 = (-0.0) - _167;
        _175 = (-0.0) - _168;
        _176 = (-0.0) - _169;
    }
    else
    {
        _174 = _167;
        _175 = _168;
        _176 = _169;
    }
    vec4 _190 = texture(sampler2D(_SketchUp_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[0u].w));
    float _203 = (sqrt(_190.x) * TEXCOORD.x) * sqrt(TEXCOORD.x);
    float _205 = (sqrt(_190.y) * TEXCOORD.y) * sqrt(TEXCOORD.y);
    float _207 = (sqrt(_190.z) * TEXCOORD.z) * sqrt(TEXCOORD.z);
    float _208 = _203 * _203;
    float _209 = _205 * _205;
    float _210 = _207 * _207;
    float _214 = inversesqrt(dot(vec3(_174, _175, _176), vec3(_174, _175, _176)));
    float _215 = _214 * _174;
    float _216 = _214 * _175;
    float _217 = _214 * _176;
    float _2445 = isnan(0.0) ? _208 : (isnan(_208) ? 0.0 : max(_208, 0.0));
    float _2456 = isnan(0.0) ? _209 : (isnan(_209) ? 0.0 : max(_209, 0.0));
    float _2467 = isnan(0.0) ? _210 : (isnan(_210) ? 0.0 : max(_210, 0.0));
    float _237 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _280 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _290 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _280);
    float _291 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _280);
    float _292 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _280);
    float _296 = inversesqrt(dot(vec3(_290, _291, _292), vec3(_290, _291, _292)));
    float _297 = _290 * _296;
    float _298 = _291 * _296;
    float _299 = _292 * _296;
    float _305 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _306 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _327 = fma(_217, cbSceneParam._m0[5u].z, fma(_216, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _215));
    float _330 = fma(_217, cbSceneParam._m0[6u].z, fma(_216, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _215));
    float _333 = fma(_217, cbSceneParam._m0[7u].z, fma(_216, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _215));
    uint _346 = uint(roundEven(NORMAL.w)) * 13u;
    uint _349 = (_346 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _355 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2445 : (isnan(_2445) ? 1.0 : min(_2445, 1.0)))) * cbInstanceData._m0[_349].x;
    float _356 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2456 : (isnan(_2456) ? 1.0 : min(_2456, 1.0)))) * cbInstanceData._m0[_349].y;
    float _357 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2467 : (isnan(_2467) ? 1.0 : min(_2467, 1.0)))) * cbInstanceData._m0[_349].z;
    float _2478 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _358 = isnan(1.0) ? _2478 : (isnan(_2478) ? 1.0 : min(_2478, 1.0));
    float _2489 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _359 = isnan(1.0) ? _2489 : (isnan(_2489) ? 1.0 : min(_2489, 1.0));
    float _2500 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    float _360 = isnan(1.0) ? _2500 : (isnan(_2500) ? 1.0 : min(_2500, 1.0));
    vec4 _369 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _305, cbSceneParam._m0[86u].y * _306));
    float _372 = _369.x * TEXCOORD_4.z;
    float _394 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _398 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _402 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _705;
    float _706;
    float _707;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _429 = fma(_402, cbModelParam._m0[26u].z, fma(_398, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _394));
        float _433 = fma(_402, cbModelParam._m0[27u].z, fma(_398, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _394));
        float _437 = fma(_402, cbModelParam._m0[28u].z, fma(_398, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _394));
        float _462 = _394 + _215;
        float _463 = _398 + _216;
        float _464 = _402 + _217;
        float _474 = fma(_464, cbModelParam._m0[26u].z, fma(_463, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _462)) - _429;
        float _475 = fma(_464, cbModelParam._m0[27u].z, fma(_463, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _462)) - _433;
        float _476 = fma(_464, cbModelParam._m0[28u].z, fma(_463, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _462)) - _437;
        float _480 = inversesqrt(dot(vec3(_474, _475, _476), vec3(_474, _475, _476)));
        float _493 = ((_480 * _474) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_429 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _494 = ((_480 * _475) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_433 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _495 = ((_480 * _476) / cbModelParam._m0[34u].z) + ((((((_437 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _498 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_493, _494, _495), 0.0);
        vec4 _505 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_493, _494, _495), 0.0);
        vec4 _512 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_493, _494, _495), 0.0);
        vec4 _519 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_493, _494, _495), 0.0);
        float _532 = exp2((_498.w + (-0.5)) * 20.0) * 2.0;
        float _540 = exp2((_505.w + (-0.5)) * 20.0) * 2.0;
        float _547 = exp2((_512.w + (-0.5)) * 20.0) * 2.0;
        float _554 = exp2((_519.w + (-0.5)) * 20.0) * 2.0;
        float _555 = _554 * (_519.x + (-0.5));
        float _556 = _554 * (_519.y + (-0.5));
        float _557 = _554 * (_519.z + (-0.5));
        float _558 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
        float _559 = isnan(0.0) ? _556 : (isnan(_556) ? 0.0 : max(_556, 0.0));
        float _560 = isnan(0.0) ? _557 : (isnan(_557) ? 0.0 : max(_557, 0.0));
        float _562 = ((_498.x + (-0.5)) * 0.5) * _532;
        float _564 = ((_505.x + (-0.5)) * 0.5) * _540;
        float _566 = ((_512.x + (-0.5)) * 0.5) * _547;
        float _567 = dot(vec3(_562, _564, _566), vec3(_562, _564, _566));
        float _572 = (_567 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_567);
        float _581 = (dot(vec3(_215, _216, _217), vec3(_572 * _562, _572 * _564, _572 * _566)) + 1.0) * 0.5;
        float _2526 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
        float _591 = sqrt(((_564 * _564) + (_562 * _562)) + (_566 * _566)) / (_558 + 9.9999997473787516355514526367188e-06);
        float _2537 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
        float _592 = isnan(1.0) ? _2537 : (isnan(_2537) ? 1.0 : min(_2537, 1.0));
        float _593 = _592 * 2.0;
        float _597 = (1.0 - _592) / (_592 + 1.0);
        float _2548 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
        float _598 = isnan(1.0) ? _2548 : (isnan(_2548) ? 1.0 : min(_2548, 1.0));
        float _607 = ((((1.0 - _598) * (_593 + 2.0)) * exp2(log2(isnan(1.0) ? _2526 : (isnan(_2526) ? 1.0 : min(_2526, 1.0))) * (_593 + 1.0))) + _598) * _558;
        float _609 = ((_498.y + (-0.5)) * 0.5) * _532;
        float _611 = ((_505.y + (-0.5)) * 0.5) * _540;
        float _613 = ((_512.y + (-0.5)) * 0.5) * _547;
        float _614 = dot(vec3(_609, _611, _613), vec3(_609, _611, _613));
        float _619 = (_614 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_614);
        float _627 = (dot(vec3(_215, _216, _217), vec3(_619 * _609, _619 * _611, _619 * _613)) + 1.0) * 0.5;
        float _2559 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
        float _636 = sqrt(((_611 * _611) + (_609 * _609)) + (_613 * _613)) / (_559 + 9.9999997473787516355514526367188e-06);
        float _2570 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
        float _637 = isnan(1.0) ? _2570 : (isnan(_2570) ? 1.0 : min(_2570, 1.0));
        float _638 = _637 * 2.0;
        float _642 = (1.0 - _637) / (_637 + 1.0);
        float _2581 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
        float _643 = isnan(1.0) ? _2581 : (isnan(_2581) ? 1.0 : min(_2581, 1.0));
        float _652 = ((((1.0 - _643) * (_638 + 2.0)) * exp2(log2(isnan(1.0) ? _2559 : (isnan(_2559) ? 1.0 : min(_2559, 1.0))) * (_638 + 1.0))) + _643) * _559;
        float _654 = ((_498.z + (-0.5)) * 0.5) * _532;
        float _656 = ((_505.z + (-0.5)) * 0.5) * _540;
        float _658 = ((_512.z + (-0.5)) * 0.5) * _547;
        float _659 = dot(vec3(_654, _656, _658), vec3(_654, _656, _658));
        float _664 = (_659 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_659);
        float _672 = (dot(vec3(_215, _216, _217), vec3(_664 * _654, _664 * _656, _664 * _658)) + 1.0) * 0.5;
        float _2592 = isnan(0.0) ? _672 : (isnan(_672) ? 0.0 : max(_672, 0.0));
        float _681 = sqrt(((_656 * _656) + (_654 * _654)) + (_658 * _658)) / (_560 + 9.9999997473787516355514526367188e-06);
        float _2603 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
        float _682 = isnan(1.0) ? _2603 : (isnan(_2603) ? 1.0 : min(_2603, 1.0));
        float _683 = _682 * 2.0;
        float _687 = (1.0 - _682) / (_682 + 1.0);
        float _2614 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
        float _688 = isnan(1.0) ? _2614 : (isnan(_2614) ? 1.0 : min(_2614, 1.0));
        float _697 = ((((1.0 - _688) * (_683 + 2.0)) * exp2(log2(isnan(1.0) ? _2592 : (isnan(_2592) ? 1.0 : min(_2592, 1.0))) * (_683 + 1.0))) + _688) * _560;
        _705 = cbModelParam._m0[36u].z * (isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0)));
        _706 = cbModelParam._m0[36u].z * (isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0)));
        _707 = cbModelParam._m0[36u].z * (isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0)));
    }
    else
    {
        _705 = 0.0;
        _706 = 0.0;
        _707 = 0.0;
    }
    float _1002;
    float _1003;
    float _1004;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _733 = fma(_402, cbModelParam._m0[30u].z, fma(_398, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _394));
        float _737 = fma(_402, cbModelParam._m0[31u].z, fma(_398, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _394));
        float _741 = fma(_402, cbModelParam._m0[32u].z, fma(_398, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _394));
        float _764 = _394 + _215;
        float _765 = _398 + _216;
        float _766 = _402 + _217;
        float _776 = fma(_766, cbModelParam._m0[30u].z, fma(_765, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _764)) - _733;
        float _777 = fma(_766, cbModelParam._m0[31u].z, fma(_765, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _764)) - _737;
        float _778 = fma(_766, cbModelParam._m0[32u].z, fma(_765, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _764)) - _741;
        float _782 = inversesqrt(dot(vec3(_776, _777, _778), vec3(_776, _777, _778)));
        float _795 = ((_782 * _776) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_733 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _796 = ((_782 * _777) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_737 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _797 = ((_782 * _778) / cbModelParam._m0[35u].z) + ((((((_741 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _799 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_795, _796, _797), 0.0);
        vec4 _806 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_795, _796, _797), 0.0);
        vec4 _813 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_795, _796, _797), 0.0);
        vec4 _820 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_795, _796, _797), 0.0);
        float _832 = exp2((_799.w + (-0.5)) * 20.0) * 2.0;
        float _839 = exp2((_806.w + (-0.5)) * 20.0) * 2.0;
        float _846 = exp2((_813.w + (-0.5)) * 20.0) * 2.0;
        float _853 = exp2((_820.w + (-0.5)) * 20.0) * 2.0;
        float _854 = _853 * (_820.x + (-0.5));
        float _855 = _853 * (_820.y + (-0.5));
        float _856 = _853 * (_820.z + (-0.5));
        float _857 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
        float _858 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
        float _859 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
        float _861 = ((_799.x + (-0.5)) * 0.5) * _832;
        float _863 = ((_806.x + (-0.5)) * 0.5) * _839;
        float _865 = ((_813.x + (-0.5)) * 0.5) * _846;
        float _866 = dot(vec3(_861, _863, _865), vec3(_861, _863, _865));
        float _871 = (_866 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_866);
        float _879 = (dot(vec3(_215, _216, _217), vec3(_871 * _861, _871 * _863, _871 * _865)) + 1.0) * 0.5;
        float _2655 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
        float _888 = sqrt(((_863 * _863) + (_861 * _861)) + (_865 * _865)) / (_857 + 9.9999997473787516355514526367188e-06);
        float _2666 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
        float _889 = isnan(1.0) ? _2666 : (isnan(_2666) ? 1.0 : min(_2666, 1.0));
        float _890 = _889 * 2.0;
        float _894 = (1.0 - _889) / (_889 + 1.0);
        float _2677 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
        float _895 = isnan(1.0) ? _2677 : (isnan(_2677) ? 1.0 : min(_2677, 1.0));
        float _904 = ((((1.0 - _895) * (_890 + 2.0)) * exp2(log2(isnan(1.0) ? _2655 : (isnan(_2655) ? 1.0 : min(_2655, 1.0))) * (_890 + 1.0))) + _895) * _857;
        float _906 = ((_799.y + (-0.5)) * 0.5) * _832;
        float _908 = ((_806.y + (-0.5)) * 0.5) * _839;
        float _910 = ((_813.y + (-0.5)) * 0.5) * _846;
        float _911 = dot(vec3(_906, _908, _910), vec3(_906, _908, _910));
        float _916 = (_911 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_911);
        float _924 = (dot(vec3(_215, _216, _217), vec3(_916 * _906, _916 * _908, _916 * _910)) + 1.0) * 0.5;
        float _2688 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
        float _933 = sqrt(((_908 * _908) + (_906 * _906)) + (_910 * _910)) / (_858 + 9.9999997473787516355514526367188e-06);
        float _2699 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
        float _934 = isnan(1.0) ? _2699 : (isnan(_2699) ? 1.0 : min(_2699, 1.0));
        float _935 = _934 * 2.0;
        float _939 = (1.0 - _934) / (_934 + 1.0);
        float _2710 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
        float _940 = isnan(1.0) ? _2710 : (isnan(_2710) ? 1.0 : min(_2710, 1.0));
        float _949 = ((((1.0 - _940) * (_935 + 2.0)) * exp2(log2(isnan(1.0) ? _2688 : (isnan(_2688) ? 1.0 : min(_2688, 1.0))) * (_935 + 1.0))) + _940) * _858;
        float _951 = ((_799.z + (-0.5)) * 0.5) * _832;
        float _953 = ((_806.z + (-0.5)) * 0.5) * _839;
        float _955 = ((_813.z + (-0.5)) * 0.5) * _846;
        float _956 = dot(vec3(_951, _953, _955), vec3(_951, _953, _955));
        float _961 = (_956 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_956);
        float _969 = (dot(vec3(_215, _216, _217), vec3(_961 * _951, _961 * _953, _961 * _955)) + 1.0) * 0.5;
        float _2721 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
        float _978 = sqrt(((_953 * _953) + (_951 * _951)) + (_955 * _955)) / (_859 + 9.9999997473787516355514526367188e-06);
        float _2732 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
        float _979 = isnan(1.0) ? _2732 : (isnan(_2732) ? 1.0 : min(_2732, 1.0));
        float _980 = _979 * 2.0;
        float _984 = (1.0 - _979) / (_979 + 1.0);
        float _2743 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
        float _985 = isnan(1.0) ? _2743 : (isnan(_2743) ? 1.0 : min(_2743, 1.0));
        float _994 = ((((1.0 - _985) * (_980 + 2.0)) * exp2(log2(isnan(1.0) ? _2721 : (isnan(_2721) ? 1.0 : min(_2721, 1.0))) * (_980 + 1.0))) + _985) * _859;
        _1002 = cbModelParam._m0[36u].w * (isnan(0.0) ? _904 : (isnan(_904) ? 0.0 : max(_904, 0.0)));
        _1003 = cbModelParam._m0[36u].w * (isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0)));
        _1004 = cbModelParam._m0[36u].w * (isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0)));
    }
    else
    {
        _1002 = 0.0;
        _1003 = 0.0;
        _1004 = 0.0;
    }
    float _1014 = (cbModelParam._m0[1u].x * (_1002 - _705)) + _705;
    float _1015 = (cbModelParam._m0[1u].x * (_1003 - _706)) + _706;
    float _1016 = (cbModelParam._m0[1u].x * (_1004 - _707)) + _707;
    float _1037 = fma(_1016, cbSceneParam._m0[89u].z, fma(_1015, cbSceneParam._m0[89u].y, _1014 * cbSceneParam._m0[89u].x));
    float _1040 = fma(_1016, cbSceneParam._m0[90u].z, fma(_1015, cbSceneParam._m0[90u].y, _1014 * cbSceneParam._m0[90u].x));
    float _1043 = fma(_1016, cbSceneParam._m0[91u].z, fma(_1015, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1014));
    float _1080 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1084 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1088 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1092 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1093 = _1080 / _1092;
    float _1094 = _1084 / _1092;
    float _1095 = _1088 / _1092;
    float _1232;
    float _1233;
    float _1234;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1112 = ((uint(_1095 > cbSceneParam._m0[59u].y) + uint(_1095 > cbSceneParam._m0[59u].x)) + uint(_1095 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1113 = _1112 + 43u;
        uint _1121 = _1112 + 44u;
        uint _1129 = _1112 + 45u;
        uint _1137 = _1112 + 46u;
        float _1148 = fma(_1092, cbSceneParam._m0[_1113].w, fma(_1088, cbSceneParam._m0[_1113].z, fma(_1084, cbSceneParam._m0[_1113].y, _1080 * cbSceneParam._m0[_1113].x)));
        float _1152 = fma(_1092, cbSceneParam._m0[_1121].w, fma(_1088, cbSceneParam._m0[_1121].z, fma(_1084, cbSceneParam._m0[_1121].y, _1080 * cbSceneParam._m0[_1121].x)));
        float _1160 = fma(_1092, cbSceneParam._m0[_1137].w, fma(_1088, cbSceneParam._m0[_1137].z, fma(_1084, cbSceneParam._m0[_1137].y, _1080 * cbSceneParam._m0[_1137].x)));
        float _1165 = cbSceneParam._m0[33u].z * _1160;
        float _1167 = cbSceneParam._m0[33u].w * _1160;
        float _1170 = fma(_1092, cbSceneParam._m0[_1129].w, fma(_1088, cbSceneParam._m0[_1129].z, fma(_1084, cbSceneParam._m0[_1129].y, _1080 * cbSceneParam._m0[_1129].x))) / _1160;
        float _1218 = (cbSceneParam._m0[33u].x - sqrt(((_1094 * _1094) + (_1093 * _1093)) + (_1095 * _1095))) * cbSceneParam._m0[33u].y;
        float _2784 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
        float _1225 = (isnan(1.0) ? _2784 : (isnan(_2784) ? 1.0 : min(_2784, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1165 + _1148) / _1160, (_1167 + _1152) / _1160), _1170), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1167 + _1148) / _1160, (_1152 - _1165) / _1160), _1170), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1148 - _1165) / _1160, (_1152 - _1167) / _1160), _1170), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1148 - _1167) / _1160, (_1165 + _1152) / _1160), _1170), 0.0)).x), vec4(0.25)));
        _1232 = 1.0 - (_1225 * cbSceneParam._m0[34u].x);
        _1233 = 1.0 - (_1225 * cbSceneParam._m0[34u].y);
        _1234 = 1.0 - (_1225 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1232 = 1.0;
        _1233 = 1.0;
        _1234 = 1.0;
    }
    float _1290;
    float _1292;
    float _1294;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1278 = fma(_1092, cbSceneParam._m0[63u].w, fma(_1088, cbSceneParam._m0[63u].z, fma(_1084, cbSceneParam._m0[63u].y, _1080 * cbSceneParam._m0[63u].x)));
        float _1279 = fma(_1092, cbSceneParam._m0[60u].w, fma(_1088, cbSceneParam._m0[60u].z, fma(_1084, cbSceneParam._m0[60u].y, _1080 * cbSceneParam._m0[60u].x))) / _1278;
        float _1280 = fma(_1092, cbSceneParam._m0[61u].w, fma(_1088, cbSceneParam._m0[61u].z, fma(_1084, cbSceneParam._m0[61u].y, _1080 * cbSceneParam._m0[61u].x))) / _1278;
        float frontier_phi_10_9_ladder;
        float frontier_phi_10_9_ladder_1;
        float frontier_phi_10_9_ladder_2;
        if ((((_1279 >= cbSceneParam._m0[64u].x) && (_1280 >= cbSceneParam._m0[64u].y)) && (_1279 <= cbSceneParam._m0[64u].z)) && (_1280 <= cbSceneParam._m0[64u].w))
        {
            float _1388 = fma(_1092, cbSceneParam._m0[62u].w, fma(_1088, cbSceneParam._m0[62u].z, fma(_1084, cbSceneParam._m0[62u].y, _1080 * cbSceneParam._m0[62u].x))) / _1278;
            float _1392 = isnan(cbSceneParam._m0[41u].w) ? _1388 : (isnan(_1388) ? cbSceneParam._m0[41u].w : max(_1388, cbSceneParam._m0[41u].w));
            float _1435 = (cbSceneParam._m0[33u].x - sqrt(((_1094 * _1094) + (_1093 * _1093)) + (_1095 * _1095))) * cbSceneParam._m0[33u].y;
            float _2800 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
            float _1442 = (isnan(1.0) ? _2800 : (isnan(_2800) ? 1.0 : min(_2800, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1279, cbSceneParam._m0[33u].w + _1280), _1392), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1279, _1280 - cbSceneParam._m0[33u].z), _1392), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1279 - cbSceneParam._m0[33u].z, _1280 - cbSceneParam._m0[33u].w), _1392), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1279 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1280), _1392), 0.0)).x), vec4(0.25)));
            float _1446 = 1.0 - (_1442 * cbSceneParam._m0[34u].x);
            float _1447 = 1.0 - (_1442 * cbSceneParam._m0[34u].y);
            float _1448 = 1.0 - (_1442 * cbSceneParam._m0[34u].z);
            frontier_phi_10_9_ladder = isnan(_1448) ? _1234 : (isnan(_1234) ? _1448 : min(_1234, _1448));
            frontier_phi_10_9_ladder_1 = isnan(_1447) ? _1233 : (isnan(_1233) ? _1447 : min(_1233, _1447));
            frontier_phi_10_9_ladder_2 = isnan(_1446) ? _1232 : (isnan(_1232) ? _1446 : min(_1232, _1446));
        }
        else
        {
            frontier_phi_10_9_ladder = _1234;
            frontier_phi_10_9_ladder_1 = _1233;
            frontier_phi_10_9_ladder_2 = _1232;
        }
        _1290 = frontier_phi_10_9_ladder_2;
        _1292 = frontier_phi_10_9_ladder_1;
        _1294 = frontier_phi_10_9_ladder;
    }
    else
    {
        _1290 = _1232;
        _1292 = _1233;
        _1294 = _1234;
    }
    uvec4 _1299 = floatBitsToUint(cbInstanceData._m0[_346 + 5u]);
    uint _1301 = _1299.x * 14u;
    uint _1302 = _1301 + 13u;
    float _1309 = _372 + (-1.0);
    float _1315 = (cbLight._m0[_1302].x * _1309) + 1.0;
    float _1316 = (cbLight._m0[_1302].y * _1309) + 1.0;
    float _1317 = (cbLight._m0[_1302].z * _1309) + 1.0;
    float _1318 = (cbLight._m0[_1302].w * _1309) + 1.0;
    uint _1319 = _1301 + 5u;
    float _1325 = isnan(1.0) ? _1316 : (isnan(_1316) ? 1.0 : min(_1316, 1.0));
    uint _1329 = _1301 + 4u;
    float _1339 = isnan(1.0) ? _1315 : (isnan(_1315) ? 1.0 : min(_1315, 1.0));
    uint _1343 = _1301 | 1u;
    float _1354 = dot(vec3(cbLight._m0[_1301].xyz), vec3(_215, _216, _217));
    float _1357 = dot(vec3(cbLight._m0[_1343].xyz), vec3(_215, _216, _217));
    float _2836 = isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0));
    float _2847 = isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0));
    float _1362 = (isnan(1.0) ? _2836 : (isnan(_2836) ? 1.0 : min(_2836, 1.0))) * 0.3183098733425140380859375;
    float _1364 = (isnan(1.0) ? _2847 : (isnan(_2847) ? 1.0 : min(_2847, 1.0))) * 0.3183098733425140380859375;
    float _1371 = ((cbLight._m0[_1319].x * _1325) * _1364) + (((cbLight._m0[_1329].x * _1290) * _1339) * _1362);
    float _1372 = ((_1325 * cbLight._m0[_1319].y) * _1364) + (((cbLight._m0[_1329].y * _1292) * _1339) * _1362);
    float _1373 = ((_1325 * cbLight._m0[_1319].z) * _1364) + (((cbLight._m0[_1329].z * _1294) * _1339) * _1362);
    uvec4 _1377 = floatBitsToUint(cbLight._m0[_1301 + 12u]);
    bool _1379 = _1377.x == 0u;
    float _1449;
    float _1451;
    float _1453;
    if (_1379)
    {
        _1449 = _1371;
        _1451 = _1372;
        _1453 = _1373;
    }
    else
    {
        uint _1457 = _1301 + 6u;
        float _1473 = (dot(vec3(cbLight._m0[_1301 + 2u].xyz), vec3(_215, _216, _217)) * 0.5) + 0.5;
        float _1474 = _1473 * _1473;
        float _2858 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1475 = isnan(1.0) ? _2858 : (isnan(_2858) ? 1.0 : min(_2858, 1.0));
        float _1476 = isnan(1.0) ? _1317 : (isnan(_1317) ? 1.0 : min(_1317, 1.0));
        _1449 = (((cbLight._m0[_1457].x * 0.3183098733425140380859375) * _1475) * _1476) + _1371;
        _1451 = (((cbLight._m0[_1457].y * 0.3183098733425140380859375) * _1475) * _1476) + _1372;
        _1453 = (((cbLight._m0[_1457].z * 0.3183098733425140380859375) * _1475) * _1476) + _1373;
    }
    bool _1456 = _1377.y == 0u;
    float _1486;
    float _1488;
    float _1490;
    if (_1456)
    {
        _1486 = _1449;
        _1488 = _1451;
        _1490 = _1453;
    }
    else
    {
        uint _1591 = _1301 + 7u;
        float _1607 = (dot(vec3(cbLight._m0[_1301 + 3u].xyz), vec3(_215, _216, _217)) * 0.5) + 0.5;
        float _1608 = _1607 * _1607;
        float _2874 = isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0));
        float _1609 = isnan(1.0) ? _2874 : (isnan(_2874) ? 1.0 : min(_2874, 1.0));
        float _1610 = isnan(1.0) ? _1318 : (isnan(_1318) ? 1.0 : min(_1318, 1.0));
        _1486 = (((cbLight._m0[_1591].x * 0.3183098733425140380859375) * _1609) * _1610) + _1449;
        _1488 = (((cbLight._m0[_1591].y * 0.3183098733425140380859375) * _1609) * _1610) + _1451;
        _1490 = (((cbLight._m0[_1591].z * 0.3183098733425140380859375) * _1609) * _1610) + _1453;
    }
    uint _1492 = _1301 + 8u;
    float _1498 = cbLight._m0[_1301].x + _297;
    float _1499 = cbLight._m0[_1301].y + _298;
    float _1500 = cbLight._m0[_1301].z + _299;
    float _1504 = inversesqrt(dot(vec3(_1498, _1499, _1500), vec3(_1498, _1499, _1500)));
    float _1508 = dot(vec3(_215, _216, _217), vec3(cbLight._m0[_1301].xyz));
    float _2890 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
    float _1511 = isnan(1.0) ? _2890 : (isnan(_2890) ? 1.0 : min(_2890, 1.0));
    float _1512 = dot(vec3(_215, _216, _217), vec3(_297, _298, _299));
    float _2901 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
    float _1515 = isnan(1.0) ? _2901 : (isnan(_2901) ? 1.0 : min(_2901, 1.0));
    float _1516 = dot(vec3(cbLight._m0[_1301].xyz), vec3(_1498 * _1504, _1499 * _1504, _1500 * _1504));
    float _2912 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
    float _1524 = exp2(log2(1.0 - (isnan(1.0) ? _2912 : (isnan(_2912) ? 1.0 : min(_2912, 1.0)))) * 5.0);
    float _1529 = (0.5 / ((_1511 + 9.9999999392252902907785028219223e-09) + _1515)) * _1511;
    float _2923 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
    float _1531 = (isnan(1.0) ? _2923 : (isnan(_2923) ? 1.0 : min(_2923, 1.0))) * 0.31831014156341552734375;
    uint _1545 = _1301 + 9u;
    float _1551 = cbLight._m0[_1343].x + _297;
    float _1552 = cbLight._m0[_1343].y + _298;
    float _1553 = cbLight._m0[_1343].z + _299;
    float _1557 = inversesqrt(dot(vec3(_1551, _1552, _1553), vec3(_1551, _1552, _1553)));
    float _1561 = dot(vec3(_215, _216, _217), vec3(cbLight._m0[_1343].xyz));
    float _2934 = isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0));
    float _1564 = isnan(1.0) ? _2934 : (isnan(_2934) ? 1.0 : min(_2934, 1.0));
    float _1565 = dot(vec3(cbLight._m0[_1343].xyz), vec3(_1551 * _1557, _1552 * _1557, _1553 * _1557));
    float _2945 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
    float _1572 = exp2(log2(1.0 - (isnan(1.0) ? _2945 : (isnan(_2945) ? 1.0 : min(_2945, 1.0)))) * 5.0);
    float _1576 = (0.5 / ((_1564 + 9.9999999392252902907785028219223e-09) + _1515)) * _1564;
    float _2956 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
    float _1578 = (isnan(1.0) ? _2956 : (isnan(_2956) ? 1.0 : min(_2956, 1.0))) * 0.31831014156341552734375;
    float _1588 = (((_1572 * cbLight._m0[_1545].x) * _1578) * _1325) + ((((cbLight._m0[_1492].x * _1290) * _1524) * _1531) * _1339);
    float _1589 = (((_1572 * cbLight._m0[_1545].y) * _1578) * _1325) + ((((cbLight._m0[_1492].y * _1292) * _1524) * _1531) * _1339);
    float _1590 = (((_1572 * cbLight._m0[_1545].z) * _1578) * _1325) + ((((cbLight._m0[_1492].z * _1294) * _1524) * _1531) * _1339);
    float _1620;
    float _1622;
    float _1624;
    if (_1379)
    {
        _1620 = _1588;
        _1622 = _1589;
        _1624 = _1590;
    }
    else
    {
        uint _1626 = _1301 + 10u;
        uint _1632 = _1301 + 2u;
        float _1638 = cbLight._m0[_1632].x + _297;
        float _1639 = cbLight._m0[_1632].y + _298;
        float _1640 = cbLight._m0[_1632].z + _299;
        float _1644 = inversesqrt(dot(vec3(_1638, _1639, _1640), vec3(_1638, _1639, _1640)));
        float _1648 = dot(vec3(_215, _216, _217), vec3(cbLight._m0[_1632].xyz));
        float _2967 = isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0));
        float _1651 = isnan(1.0) ? _2967 : (isnan(_2967) ? 1.0 : min(_2967, 1.0));
        float _1652 = dot(vec3(cbLight._m0[_1632].xyz), vec3(_1638 * _1644, _1639 * _1644, _1640 * _1644));
        float _2978 = isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0));
        float _1659 = exp2(log2(1.0 - (isnan(1.0) ? _2978 : (isnan(_2978) ? 1.0 : min(_2978, 1.0)))) * 5.0);
        float _1663 = (0.5 / ((_1651 + 9.9999999392252902907785028219223e-09) + _1515)) * _1651;
        float _2989 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
        float _1665 = (isnan(1.0) ? _2989 : (isnan(_2989) ? 1.0 : min(_2989, 1.0))) * 0.31831014156341552734375;
        float _1666 = isnan(1.0) ? _1317 : (isnan(_1317) ? 1.0 : min(_1317, 1.0));
        _1620 = (((_1659 * cbLight._m0[_1626].x) * _1665) * _1666) + _1588;
        _1622 = (((_1659 * cbLight._m0[_1626].y) * _1665) * _1666) + _1589;
        _1624 = (((_1659 * cbLight._m0[_1626].z) * _1665) * _1666) + _1590;
    }
    float _1676;
    float _1678;
    float _1680;
    if (_1456)
    {
        _1676 = _1620;
        _1678 = _1622;
        _1680 = _1624;
    }
    else
    {
        uint _1687 = _1301 + 11u;
        uint _1693 = _1301 + 3u;
        float _1699 = cbLight._m0[_1693].x + _297;
        float _1700 = cbLight._m0[_1693].y + _298;
        float _1701 = cbLight._m0[_1693].z + _299;
        float _1705 = inversesqrt(dot(vec3(_1699, _1700, _1701), vec3(_1699, _1700, _1701)));
        float _1709 = dot(vec3(_215, _216, _217), vec3(cbLight._m0[_1693].xyz));
        float _3005 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
        float _1712 = isnan(1.0) ? _3005 : (isnan(_3005) ? 1.0 : min(_3005, 1.0));
        float _1713 = dot(vec3(cbLight._m0[_1693].xyz), vec3(_1699 * _1705, _1700 * _1705, _1701 * _1705));
        float _3016 = isnan(0.0) ? _1713 : (isnan(_1713) ? 0.0 : max(_1713, 0.0));
        float _1720 = exp2(log2(1.0 - (isnan(1.0) ? _3016 : (isnan(_3016) ? 1.0 : min(_3016, 1.0)))) * 5.0);
        float _1724 = (0.5 / ((_1712 + 9.9999999392252902907785028219223e-09) + _1515)) * _1712;
        float _3027 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0));
        float _1726 = (isnan(1.0) ? _3027 : (isnan(_3027) ? 1.0 : min(_3027, 1.0))) * 0.31831014156341552734375;
        float _1727 = isnan(1.0) ? _1318 : (isnan(_1318) ? 1.0 : min(_1318, 1.0));
        _1676 = (((_1720 * cbLight._m0[_1687].x) * _1726) * _1727) + _1620;
        _1678 = (((_1720 * cbLight._m0[_1687].y) * _1726) * _1727) + _1622;
        _1680 = (((_1720 * cbLight._m0[_1687].z) * _1726) * _1727) + _1624;
    }
    float _1792;
    float _1794;
    float _1796;
    if (_1299.y == 0u)
    {
        uvec4 _1748 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1749 = _1748.x;
        uint _1760 = uint((float(_1748.y) * floor(float(uint(cbSceneParam._m0[85u].y * _306) / _1749))) + floor(float(uint(cbSceneParam._m0[85u].x * _305) / _1749)));
        float _1770 = (log2(_1095 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1771 = isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0));
        uint _1774 = uint(isnan(14.0) ? _1771 : (isnan(_1771) ? 14.0 : min(_1771, 14.0)));
        uvec4 _1779 = texelFetch(g_lightClusterGridBuffer, int(((_1774 << 2u) + (_1760 << 6u)) >> 2u));
        uint _1780 = _1779.x;
        uint _1781 = _1748.z;
        float _1850;
        float _1852;
        float _1854;
        if (((((1u << ((_1781 >> 4u) & 15u)) + 4294967295u) & _1780) == 0u) || ((_1781 & 240u) == 0u))
        {
            _1850 = 0.0;
            _1852 = 0.0;
            _1854 = 0.0;
        }
        else
        {
            float _1851;
            float _1853;
            float _1855;
            float _1971 = 0.0;
            float _1972 = 0.0;
            float _1973 = 0.0;
            uint _1974 = 0u;
            uint _1983;
            bool _1984;
            for (;;)
            {
                _1983 = texelFetch(g_lightClassification, int((((_1774 << 5u) + (_1760 << 9u)) + (_1974 << 2u)) >> 2u)).x;
                _1984 = _1983 == 0u;
                float frontier_phi_32_pred;
                float frontier_phi_32_pred_1;
                float frontier_phi_32_pred_2;
                if (_1984)
                {
                    frontier_phi_32_pred = _1973;
                    frontier_phi_32_pred_1 = _1972;
                    frontier_phi_32_pred_2 = _1971;
                }
                else
                {
                    float _2086;
                    float _2087;
                    float _2088;
                    uint _2089;
                    _2086 = _1971;
                    _2087 = _1972;
                    _2088 = _1973;
                    _2089 = _1983;
                    float _2024;
                    float _2025;
                    float _2026;
                    for (;;)
                    {
                        uint _2093 = uint(findLSB(_2089)) + (_1974 << 5u);
                        uint _2090 = (_2089 + 4294967295u) & _2089;
                        uint _2095 = _2093 * 48u;
                        vec4 _2109 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2095)).x, texelFetch(g_PointLightRenderingBuffer, int(_2095 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2095 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2095 + 3u)).x));
                        uint _2115 = (_2093 * 48u) + 4u;
                        vec4 _2128 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2115)).x, texelFetch(g_PointLightRenderingBuffer, int(_2115 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2115 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2115 + 3u)).x));
                        float _2133 = _2109.x - _1093;
                        float _2134 = _2109.y - _1094;
                        float _2135 = _2109.z - _1095;
                        float _2136 = dot(vec3(_2133, _2134, _2135), vec3(_2133, _2134, _2135));
                        float _2139 = inversesqrt(_2136);
                        float _2148 = 1.0 - (_2136 * _2109.w);
                        float _3053 = isnan(0.0) ? _2148 : (isnan(_2148) ? 0.0 : max(_2148, 0.0));
                        float _2150 = sqrt(_2136) * _2128.w;
                        float _2153 = 1.39999997615814208984375 / (_2150 + 1.39999997615814208984375);
                        float _2154 = _2153 * _2153;
                        float _2157 = ((1.0 - _2154) * dot(vec3(_327, _330, _333), vec3(_2139 * _2133, _2139 * _2134, _2139 * _2135))) + _2154;
                        float _2164 = ((isnan(0.0) ? _2157 : (isnan(_2157) ? 0.0 : max(_2157, 0.0))) * (isnan(1.0) ? _3053 : (isnan(_3053) ? 1.0 : min(_3053, 1.0)))) / (((_2150 * _2150) * 0.699999988079071044921875) + 1.0);
                        _2024 = (_2164 * _2128.x) + _2086;
                        _2025 = (_2164 * _2128.y) + _2087;
                        _2026 = (_2164 * _2128.z) + _2088;
                        if (_2090 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2086 = _2024;
                            _2087 = _2025;
                            _2088 = _2026;
                            _2089 = _2090;
                        }
                    }
                    frontier_phi_32_pred = _2026;
                    frontier_phi_32_pred_1 = _2025;
                    frontier_phi_32_pred_2 = _2024;
                }
                _1855 = frontier_phi_32_pred;
                _1853 = frontier_phi_32_pred_1;
                _1851 = frontier_phi_32_pred_2;
                uint _1975 = _1974 + 1u;
                if (_1975 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1971 = _1851;
                    _1972 = _1853;
                    _1973 = _1855;
                    _1974 = _1975;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1850 = _1851;
            _1852 = _1853;
            _1854 = _1855;
        }
        uvec4 _1858 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1859 = _1858.z;
        uint _1861 = (_1859 >> 8u) & 15u;
        float _1958;
        float _1960;
        float _1962;
        if (((4294967295u << _1861) & _1780) == 0u)
        {
            _1958 = _1850;
            _1960 = _1852;
            _1962 = _1854;
        }
        else
        {
            float frontier_phi_26_27_ladder;
            float frontier_phi_26_27_ladder_1;
            float frontier_phi_26_27_ladder_2;
            if (_1861 < ((_1859 >> 12u) & 15u))
            {
                float _1959;
                float _1961;
                float _1963;
                float _2072 = _1850;
                float _2073 = _1852;
                float _2074 = _1854;
                uint _2075 = _1861;
                uint _2084;
                bool _2085;
                for (;;)
                {
                    _2084 = texelFetch(g_lightClassification, int((((_1774 << 5u) + (_1760 << 9u)) + (_2075 << 2u)) >> 2u)).x;
                    _2085 = _2084 == 0u;
                    float frontier_phi_38_pred;
                    float frontier_phi_38_pred_1;
                    float frontier_phi_38_pred_2;
                    if (_2085)
                    {
                        frontier_phi_38_pred = _2074;
                        frontier_phi_38_pred_1 = _2073;
                        frontier_phi_38_pred_2 = _2072;
                    }
                    else
                    {
                        float _2169;
                        float _2170;
                        float _2171;
                        float _2371;
                        float _2372;
                        float _2373;
                        float _2179 = _2072;
                        float _2180 = _2073;
                        float _2181 = _2074;
                        uint _2182 = _2084;
                        uint _2183;
                        vec4 _2209;
                        float _2210;
                        vec4 _2225;
                        vec4 _2241;
                        vec4 _2257;
                        float _2304;
                        bool _2305;
                        for (;;)
                        {
                            uint _2193 = ((_2075 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2182));
                            _2183 = (_2182 + 4294967295u) & _2182;
                            uint _2195 = _2193 * 40u;
                            _2209 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2195)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2195 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2195 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2195 + 3u)).x));
                            _2210 = _2209.w;
                            uint _2212 = (_2193 * 40u) + 4u;
                            _2225 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2212)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2212 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2212 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2212 + 3u)).x));
                            uint _2228 = (_2193 * 40u) + 16u;
                            _2241 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2228)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2228 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2228 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2228 + 3u)).x));
                            uint _2244 = (_2193 * 40u) + 20u;
                            _2257 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2244)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2244 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2244 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2244 + 3u)).x));
                            uint _2260 = (_2193 * 40u) + 24u;
                            vec4 _2273 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2260)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2260 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2260 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2260 + 3u)).x));
                            uint _2279 = (_2193 * 40u) + 28u;
                            vec4 _2292 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2279)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2279 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2279 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2279 + 3u)).x));
                            _2304 = fma(_1095, _2292.z, fma(_1094, _2292.y, _2292.x * _1093)) + _2292.w;
                            _2305 = !((fma(_1095, _2273.z, fma(_1094, _2273.y, _2273.x * _1093)) + _2273.w) <= 0.0);
                            float frontier_phi_44_pred;
                            float frontier_phi_44_pred_1;
                            float frontier_phi_44_pred_2;
                            if (_2305)
                            {
                                float _2329 = _2209.x - _1093;
                                float _2330 = _2209.y - _1094;
                                float _2331 = _2209.z - _1095;
                                float _2332 = dot(vec3(_2329, _2330, _2331), vec3(_2329, _2330, _2331));
                                float _2335 = inversesqrt(_2332);
                                float _2342 = 1.0 - (_2332 / (_2210 * _2210));
                                float _3069 = isnan(0.0) ? _2342 : (isnan(_2342) ? 0.0 : max(_2342, 0.0));
                                float _2347 = sqrt(_2332) * _2225.w;
                                float _2349 = 1.39999997615814208984375 / (_2347 + 1.39999997615814208984375);
                                float _2350 = _2349 * _2349;
                                float _2353 = ((1.0 - _2350) * dot(vec3(_2335 * _2329, _2335 * _2330, _2335 * _2331), vec3(_327, _330, _333))) + _2350;
                                float _2360 = (fma(_1095, _2241.z, fma(_1094, _2241.y, _2241.x * _1093)) + _2241.w) / _2304;
                                float _2361 = (fma(_1095, _2257.z, fma(_1094, _2257.y, _2257.x * _1093)) + _2257.w) / _2304;
                                float _2365 = 1.0 - dot(vec2(_2360, _2361), vec2(_2360, _2361));
                                float _3085 = isnan(0.0) ? _2365 : (isnan(_2365) ? 0.0 : max(_2365, 0.0));
                                float _2367 = (isnan(1.0) ? _3085 : (isnan(_3085) ? 1.0 : min(_3085, 1.0))) * (((isnan(0.0) ? _2353 : (isnan(_2353) ? 0.0 : max(_2353, 0.0))) * (isnan(1.0) ? _3069 : (isnan(_3069) ? 1.0 : min(_3069, 1.0)))) / (((_2347 * _2347) * 0.699999988079071044921875) + 1.0));
                                frontier_phi_44_pred = _2367 * _2225.y;
                                frontier_phi_44_pred_1 = _2367 * _2225.x;
                                frontier_phi_44_pred_2 = _2367 * _2225.z;
                            }
                            else
                            {
                                frontier_phi_44_pred = 0.0;
                                frontier_phi_44_pred_1 = 0.0;
                                frontier_phi_44_pred_2 = 0.0;
                            }
                            _2372 = frontier_phi_44_pred;
                            _2371 = frontier_phi_44_pred_1;
                            _2373 = frontier_phi_44_pred_2;
                            _2169 = _2371 + _2179;
                            _2170 = _2372 + _2180;
                            _2171 = _2373 + _2181;
                            if (_2183 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2179 = _2169;
                                _2180 = _2170;
                                _2181 = _2171;
                                _2182 = _2183;
                                continue;
                            }
                        }
                        frontier_phi_38_pred = _2171;
                        frontier_phi_38_pred_1 = _2170;
                        frontier_phi_38_pred_2 = _2169;
                    }
                    _1963 = frontier_phi_38_pred;
                    _1961 = frontier_phi_38_pred_1;
                    _1959 = frontier_phi_38_pred_2;
                    uint _2076 = _2075 + 1u;
                    if (_2076 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2072 = _1959;
                        _2073 = _1961;
                        _2074 = _1963;
                        _2075 = _2076;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_26_27_ladder = _1963;
                frontier_phi_26_27_ladder_1 = _1961;
                frontier_phi_26_27_ladder_2 = _1959;
            }
            else
            {
                frontier_phi_26_27_ladder = _1854;
                frontier_phi_26_27_ladder_1 = _1852;
                frontier_phi_26_27_ladder_2 = _1850;
            }
            _1958 = frontier_phi_26_27_ladder_2;
            _1960 = frontier_phi_26_27_ladder_1;
            _1962 = frontier_phi_26_27_ladder;
        }
        float _1964 = isnan(1.0) ? _372 : (isnan(_372) ? 1.0 : min(_372, 1.0));
        _1792 = (_1964 * _1958) + _1486;
        _1794 = (_1964 * _1960) + _1488;
        _1796 = (_1964 * _1962) + _1490;
    }
    else
    {
        _1792 = _1486;
        _1794 = _1488;
        _1796 = _1490;
    }
    float _3101 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
    float _3112 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _3123 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    uint _1813 = _346 + 6u;
    float _1821 = _305 / cbSceneParam._m0[86u].x;
    float _1822 = _306 / cbSceneParam._m0[86u].y;
    vec4 _1836 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1821, _1822, (log2((isnan(cbSceneParam._m0[77u].w) ? _237 : (isnan(_237) ? cbSceneParam._m0[77u].w : min(_237, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1838 = _1836.x;
    float _1839 = _1836.y;
    float _1840 = _1836.z;
    float _1841 = _1836.w;
    float _1907;
    float _1909;
    float _1911;
    float _1913;
    if (_237 > cbSceneParam._m0[78u].w)
    {
        float _1869 = isnan(_237) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _237 : min(cbSceneParam._m0[80u].w, _237));
        float _1870 = _1869 / _237;
        float _1881 = _1870 * _290;
        float _1882 = _291 * _1870;
        float _1883 = (-0.0) - _1882;
        float _1884 = _1870 * _292;
        float _1886 = (cbSceneParam._m0[77u].w * _1883) / _1869;
        float _1887 = _1886 + cbSceneParam._m0[79u].w;
        float _1888 = cbSceneParam._m0[79u].w - _1882;
        float _1894 = sqrt(((_1881 * _1881) + (_1882 * _1882)) + (_1884 * _1884));
        float _1897 = (1.0 - (cbSceneParam._m0[77u].w / _1869)) * _1894;
        float _1903 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1905 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2034;
        if (abs((_1883 - _1886) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2034 = ((((_1887 > 0.0) ? exp2(_1903 * _1887) : (2.0 - exp2(_1905 * _1887))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1897;
        }
        else
        {
            float _1997 = 1.0 / cbSceneParam._m0[80u].x;
            float _1998 = isnan(_1888) ? _1887 : (isnan(_1887) ? _1888 : max(_1887, _1888));
            float _1999 = isnan(_1888) ? _1887 : (isnan(_1887) ? _1888 : min(_1887, _1888));
            float _2008 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : min(_1998, 0.0));
            float _2009 = isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : min(_1999, 0.0));
            _2034 = ((abs(_1894 / _1883) * cbSceneParam._m0[80u].y) * ((((_2008 - _2009) * 2.0) - ((exp2(_1903 * (isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0)))) - exp2(_1903 * (isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0))))) * _1997)) - ((exp2(_1905 * _2008) - exp2(_1905 * _2009)) * _1997))) + (_1897 * cbSceneParam._m0[80u].z);
        }
        vec4 _2036 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1821, _1822, 1.0), 0.0);
        float _2045 = exp2((_2034 * (-1.44269502162933349609375)) * (1.0 - _2036.w));
        float _2046 = log2(_2045);
        float _2062 = log2(_1841);
        _1907 = (exp2(_2062 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2046 * cbSceneParam._m0[78u].x)) * _2036.x) / cbSceneParam._m0[78u].x)) + _1838;
        _1909 = (exp2(_2062 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2046 * cbSceneParam._m0[78u].y)) * _2036.y) / cbSceneParam._m0[78u].y)) + _1839;
        _1911 = (exp2(_2062 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2046 * cbSceneParam._m0[78u].z)) * _2036.z) / cbSceneParam._m0[78u].z)) + _1840;
        _1913 = _2045 * _1841;
    }
    else
    {
        _1907 = _1838;
        _1909 = _1839;
        _1911 = _1840;
        _1913 = _1841;
    }
    float _1925 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1926 = _1925 == 3.0;
    float _1928 = log2(_1913);
    float _1935 = exp2(_1928 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _3101 : (isnan(_3101) ? 1.0 : min(_3101, 1.0))) * (_1792 + ((isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0))) * _372))) + (cbPerFrame._m0[3u].x * _1676));
    float _1936 = exp2(_1928 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _3112 : (isnan(_3112) ? 1.0 : min(_3112, 1.0))) * (_1794 + ((isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0))) * _372))) + (cbPerFrame._m0[3u].x * _1678));
    float _1937 = exp2(_1928 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _3123 : (isnan(_3123) ? 1.0 : min(_3123, 1.0))) * (_1796 + ((isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0))) * _372))) + (cbPerFrame._m0[3u].x * _1680));
    float _1946 = (_1925 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1946 * (_1926 ? _1935 : (_1935 + (cbSceneParam._m0[72u].w * _1907)));
    SV_Target.y = _1946 * (_1926 ? _1936 : (_1936 + (cbSceneParam._m0[72u].w * _1909)));
    SV_Target.z = _1946 * (_1926 ? _1937 : (_1937 + (cbSceneParam._m0[72u].w * _1911)));
    SV_Target.w = cbInstanceData._m0[_1813].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1813].w;
}


