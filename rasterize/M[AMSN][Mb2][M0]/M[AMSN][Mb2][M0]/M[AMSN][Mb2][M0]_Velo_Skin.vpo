#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out float TEXCOORD_4;
layout(location = 5, component = 1) out float TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 7) out vec4 TEXCOORD_12;
layout(location = 8) out vec4 TEXCOORD_13;
layout(location = 9) out vec3 TEXCOORD_14;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_5 = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    TEXCOORD_12.z = 0.0;
    TEXCOORD_12.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _205 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _208 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _219 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _229 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _231 = texelFetch(g_InstanceIndexBuffer, int(_229));
    uint _232 = _231.x;
    precise float _233 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _238 = isnan(_233) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _233 : max(0.001000000047497451305389404296875, _233));
    precise float _240 = BLENDWEIGHT.x / _238;
    precise float _241 = BLENDWEIGHT.y / _238;
    precise float _242 = BLENDWEIGHT.z / _238;
    precise float _243 = BLENDWEIGHT.w / _238;
    uint _245 = _232 * 13u;
    uvec4 _250 = floatBitsToUint(cbInstanceData._m0[_245 + 4u]);
    uint _251 = _250.x;
    uint _253 = (_251 + uint(float(BLENDINDICES.x))) * 3u;
    uint _260 = _253 + 1u;
    uint _267 = _253 + 2u;
    precise float _274 = _240 * cbObjMatrix._m0[_253].x;
    precise float _275 = _240 * cbObjMatrix._m0[_260].x;
    precise float _276 = _240 * cbObjMatrix._m0[_267].x;
    precise float _277 = _240 * cbObjMatrix._m0[_253].y;
    precise float _278 = _240 * cbObjMatrix._m0[_260].y;
    precise float _279 = _240 * cbObjMatrix._m0[_267].y;
    precise float _280 = _240 * cbObjMatrix._m0[_253].z;
    precise float _281 = _240 * cbObjMatrix._m0[_260].z;
    precise float _282 = _240 * cbObjMatrix._m0[_267].z;
    precise float _283 = _240 * cbObjMatrix._m0[_253].w;
    precise float _284 = _240 * cbObjMatrix._m0[_260].w;
    precise float _285 = _240 * cbObjMatrix._m0[_267].w;
    uint _288 = (_251 + uint(float(BLENDINDICES.y))) * 3u;
    uint _295 = _288 + 1u;
    uint _302 = _288 + 2u;
    precise float _309 = _241 * cbObjMatrix._m0[_288].x;
    precise float _310 = _241 * cbObjMatrix._m0[_295].x;
    precise float _311 = _241 * cbObjMatrix._m0[_302].x;
    precise float _312 = _241 * cbObjMatrix._m0[_288].y;
    precise float _313 = _241 * cbObjMatrix._m0[_295].y;
    precise float _314 = _241 * cbObjMatrix._m0[_302].y;
    precise float _315 = _241 * cbObjMatrix._m0[_288].z;
    precise float _316 = _241 * cbObjMatrix._m0[_295].z;
    precise float _317 = _241 * cbObjMatrix._m0[_302].z;
    precise float _318 = _241 * cbObjMatrix._m0[_288].w;
    precise float _319 = _241 * cbObjMatrix._m0[_295].w;
    precise float _320 = _241 * cbObjMatrix._m0[_302].w;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    uint _335 = (_251 + uint(float(BLENDINDICES.z))) * 3u;
    uint _342 = _335 + 1u;
    uint _349 = _335 + 2u;
    precise float _356 = _242 * cbObjMatrix._m0[_335].x;
    precise float _357 = _242 * cbObjMatrix._m0[_342].x;
    precise float _358 = _242 * cbObjMatrix._m0[_349].x;
    precise float _359 = _242 * cbObjMatrix._m0[_335].y;
    precise float _360 = _242 * cbObjMatrix._m0[_342].y;
    precise float _361 = _242 * cbObjMatrix._m0[_349].y;
    precise float _362 = _242 * cbObjMatrix._m0[_335].z;
    precise float _363 = _242 * cbObjMatrix._m0[_342].z;
    precise float _364 = _242 * cbObjMatrix._m0[_349].z;
    precise float _365 = _242 * cbObjMatrix._m0[_335].w;
    precise float _366 = _242 * cbObjMatrix._m0[_342].w;
    precise float _367 = _242 * cbObjMatrix._m0[_349].w;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    uint _382 = (_251 + uint(float(BLENDINDICES.w))) * 3u;
    uint _389 = _382 + 1u;
    uint _396 = _382 + 2u;
    precise float _403 = _243 * cbObjMatrix._m0[_382].x;
    precise float _404 = _243 * cbObjMatrix._m0[_389].x;
    precise float _405 = _243 * cbObjMatrix._m0[_396].x;
    precise float _406 = _243 * cbObjMatrix._m0[_382].y;
    precise float _407 = _243 * cbObjMatrix._m0[_389].y;
    precise float _408 = _243 * cbObjMatrix._m0[_396].y;
    precise float _409 = _243 * cbObjMatrix._m0[_382].z;
    precise float _410 = _243 * cbObjMatrix._m0[_389].z;
    precise float _411 = _243 * cbObjMatrix._m0[_396].z;
    precise float _412 = _243 * cbObjMatrix._m0[_382].w;
    precise float _413 = _243 * cbObjMatrix._m0[_389].w;
    precise float _414 = _243 * cbObjMatrix._m0[_396].w;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = POSITION.x * _415;
    precise float _428 = POSITION.y * _418;
    precise float _429 = _428 + _427;
    precise float _430 = POSITION.z * _421;
    precise float _431 = _430 + _429;
    precise float _432 = 1.0 * _424;
    precise float _433 = _432 + _431;
    precise float _434 = POSITION.x * _416;
    precise float _435 = POSITION.y * _419;
    precise float _436 = _435 + _434;
    precise float _437 = POSITION.z * _422;
    precise float _438 = _437 + _436;
    precise float _439 = 1.0 * _425;
    precise float _440 = _439 + _438;
    precise float _441 = POSITION.x * _417;
    precise float _442 = POSITION.y * _420;
    precise float _443 = _442 + _441;
    precise float _444 = POSITION.z * _423;
    precise float _445 = _444 + _443;
    precise float _446 = 1.0 * _426;
    precise float _447 = _446 + _445;
    float _622 = (((((cbPrevObjMatrix._m0[_288].w * _241) + (cbPrevObjMatrix._m0[_253].w * _240)) + (cbPrevObjMatrix._m0[_335].w * _242)) + (cbPrevObjMatrix._m0[_382].w * _243)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_288].z * _241) + (cbPrevObjMatrix._m0[_253].z * _240)) + (cbPrevObjMatrix._m0[_335].z * _242)) + (cbPrevObjMatrix._m0[_382].z * _243), fma(POSITION.y, (((cbPrevObjMatrix._m0[_288].y * _241) + (cbPrevObjMatrix._m0[_253].y * _240)) + (cbPrevObjMatrix._m0[_335].y * _242)) + (cbPrevObjMatrix._m0[_382].y * _243), ((((cbPrevObjMatrix._m0[_288].x * _241) + (cbPrevObjMatrix._m0[_253].x * _240)) + (cbPrevObjMatrix._m0[_335].x * _242)) + (cbPrevObjMatrix._m0[_382].x * _243)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _623 = (((((cbPrevObjMatrix._m0[_295].w * _241) + (cbPrevObjMatrix._m0[_260].w * _240)) + (cbPrevObjMatrix._m0[_342].w * _242)) + (cbPrevObjMatrix._m0[_389].w * _243)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_295].z * _241) + (cbPrevObjMatrix._m0[_260].z * _240)) + (cbPrevObjMatrix._m0[_342].z * _242)) + (cbPrevObjMatrix._m0[_389].z * _243), fma(POSITION.y, (((cbPrevObjMatrix._m0[_295].y * _241) + (cbPrevObjMatrix._m0[_260].y * _240)) + (cbPrevObjMatrix._m0[_342].y * _242)) + (cbPrevObjMatrix._m0[_389].y * _243), ((((cbPrevObjMatrix._m0[_295].x * _241) + (cbPrevObjMatrix._m0[_260].x * _240)) + (cbPrevObjMatrix._m0[_342].x * _242)) + (cbPrevObjMatrix._m0[_389].x * _243)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _624 = (((((cbPrevObjMatrix._m0[_302].w * _241) + (cbPrevObjMatrix._m0[_267].w * _240)) + (cbPrevObjMatrix._m0[_349].w * _242)) + (cbPrevObjMatrix._m0[_396].w * _243)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_302].z * _241) + (cbPrevObjMatrix._m0[_267].z * _240)) + (cbPrevObjMatrix._m0[_349].z * _242)) + (cbPrevObjMatrix._m0[_396].z * _243), fma(POSITION.y, (((cbPrevObjMatrix._m0[_302].y * _241) + (cbPrevObjMatrix._m0[_267].y * _240)) + (cbPrevObjMatrix._m0[_349].y * _242)) + (cbPrevObjMatrix._m0[_396].y * _243), ((((cbPrevObjMatrix._m0[_302].x * _241) + (cbPrevObjMatrix._m0[_267].x * _240)) + (cbPrevObjMatrix._m0[_349].x * _242)) + (cbPrevObjMatrix._m0[_396].x * _243)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _671 = fma(_208, _421, fma(_207, _418, _415 * _205));
    float _674 = fma(_208, _422, fma(_207, _419, _416 * _205));
    float _677 = fma(_208, _423, fma(_207, _420, _417 * _205));
    precise float _693 = _433 - cbSceneParam._m0[3u].x;
    precise float _694 = _440 - cbSceneParam._m0[3u].y;
    precise float _695 = _447 - cbSceneParam._m0[3u].z;
    precise float _723 = _693 * cbSceneParam._m0[24u].x;
    precise float _724 = _694 * cbSceneParam._m0[24u].y;
    precise float _725 = _724 + _723;
    precise float _726 = _695 * cbSceneParam._m0[24u].z;
    precise float _727 = _726 + _725;
    precise float _728 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _729 = _728 + _727;
    precise float _730 = _693 * cbSceneParam._m0[25u].x;
    precise float _731 = _694 * cbSceneParam._m0[25u].y;
    precise float _732 = _731 + _730;
    precise float _733 = _695 * cbSceneParam._m0[25u].z;
    precise float _734 = _733 + _732;
    precise float _735 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _736 = _735 + _734;
    precise float _737 = _693 * cbSceneParam._m0[26u].x;
    precise float _738 = _694 * cbSceneParam._m0[26u].y;
    precise float _739 = _738 + _737;
    precise float _740 = _695 * cbSceneParam._m0[26u].z;
    precise float _741 = _740 + _739;
    precise float _742 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _743 = _742 + _741;
    precise float _744 = _693 * cbSceneParam._m0[27u].x;
    precise float _745 = _694 * cbSceneParam._m0[27u].y;
    precise float _746 = _745 + _744;
    precise float _747 = _695 * cbSceneParam._m0[27u].z;
    precise float _748 = _747 + _746;
    precise float _749 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _750 = _749 + _748;
    gl_Position.x = _729;
    gl_Position.y = _736;
    gl_Position.z = _743;
    gl_Position.w = _750;
    POSITION_1.x = _729;
    POSITION_1.y = _736;
    POSITION_1.z = _743;
    POSITION_1.w = _750;
    NORMAL_1.x = _671;
    NORMAL_1.y = _674;
    NORMAL_1.z = _677;
    NORMAL_1.w = float(_232);
    TANGENT_1.x = fma(_219, _421, fma(_218, _418, _415 * _217));
    TANGENT_1.y = fma(_219, _422, fma(_218, _419, _416 * _217));
    TANGENT_1.z = fma(_219, _423, fma(_218, _420, _417 * _217));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = COLOR.x;
    TEXCOORD_2.y = COLOR.y;
    TEXCOORD_2.z = COLOR.z;
    TEXCOORD_2.w = COLOR.w;
    TEXCOORD_4 = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_5 = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_7.x = TEXCOORD_1.x;
    TEXCOORD_7.y = TEXCOORD_1.y;
    TEXCOORD_7.z = TEXCOORD_1.z;
    TEXCOORD_7.w = COLOR_1.x;
    TEXCOORD_12.x = _729;
    TEXCOORD_12.y = _736;
    TEXCOORD_12.z = _743;
    TEXCOORD_12.w = _750;
    TEXCOORD_13.x = fma(_624, cbSceneParam._m0[29u].z, fma(_623, cbSceneParam._m0[29u].y, _622 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_13.y = fma(_624, cbSceneParam._m0[30u].z, fma(_623, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _622)) + cbSceneParam._m0[30u].w;
    TEXCOORD_13.z = fma(_624, cbSceneParam._m0[31u].z, fma(_623, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _622)) + cbSceneParam._m0[31u].w;
    TEXCOORD_13.w = fma(_624, cbSceneParam._m0[32u].z, fma(_623, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _622)) + cbSceneParam._m0[32u].w;
    TEXCOORD_14.x = _671;
    TEXCOORD_14.y = _674;
    TEXCOORD_14.z = _677;
    gl_ClipDistance[0u] = dot(vec4(_729, _736, _743, _750), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_729, _736, _743, _750), vec4(cbInstanceData._m0[_245 + 3u]));
}


