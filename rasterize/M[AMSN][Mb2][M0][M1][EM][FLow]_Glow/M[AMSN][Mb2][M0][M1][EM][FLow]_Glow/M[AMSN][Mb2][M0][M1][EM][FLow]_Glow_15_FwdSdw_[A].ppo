#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_3;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1288;
float _3969;
float _3970;
float _3971;
float _3972;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _215 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _216 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _217 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _223 = inversesqrt(dot(vec3(_215, _216, _217), vec3(_215, _216, _217)));
    float _230 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _237 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _259 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[1u].w));
    float _265 = _259.x * cbMtdParam._m0[9u].x;
    float _266 = _259.y * cbMtdParam._m0[9u].y;
    float _267 = _259.z * cbMtdParam._m0[9u].z;
    vec4 _305 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[5u].w));
    float _321 = (TEXCOORD_3.x - ((cbMtdParam._m0[14u].x * (1.0 - TEXCOORD_3.x)) * (texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[0u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[14u].y + 1.0);
    float _3981 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
    float _322 = isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0));
    float _329 = (((_305.x * cbMtdParam._m0[10u].x) - _265) * _322) + _265;
    float _330 = (((_305.y * cbMtdParam._m0[10u].y) - _266) * _322) + _266;
    float _331 = (((_305.z * cbMtdParam._m0[10u].z) - _267) * _322) + _267;
    vec4 _348 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[2u].w));
    float _367 = TEXCOORD_9.x - ((cbMtdParam._m0[16u].y * (1.0 - TEXCOORD_9.x)) * (_348.x + 0.00999999977648258209228515625));
    float _369 = _367 * (cbMtdParam._m0[16u].z + 1.0);
    float _3992 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
    float _370 = isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0));
    float _378 = ((((cbMtdParam._m0[12u].x - _329) * TEXCOORD_9.x) * cbMtdParam._m0[16u].x) * _370) + _329;
    float _379 = ((((cbMtdParam._m0[12u].y - _330) * TEXCOORD_9.y) * cbMtdParam._m0[16u].x) * _370) + _330;
    float _380 = (((cbMtdParam._m0[16u].x * TEXCOORD_9.z) * (cbMtdParam._m0[12u].z - _331)) * _370) + _331;
    vec4 _393 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[4u].w));
    float _401 = (_393.x * 2.0) + (-1.0);
    float _403 = (_393.y * 2.0) + (-1.0);
    float _404 = dot(vec2(_401, _403), vec2(_401, _403));
    float _4003 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
    vec4 _421 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_13, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[3u].w));
    float _425 = _421.z;
    float _428 = (_421.x * 2.0) + (-1.0);
    float _429 = (_421.y * 2.0) + (-1.0);
    float _430 = dot(vec2(_428, _429), vec2(_428, _429));
    float _4014 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _435 = sqrt(1.0 - (isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0))));
    float _438 = (_322 * (_393.z - _425)) + _425;
    float _444 = _367 * (cbMtdParam._m0[16u].y + 1.0);
    float _4025 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _448 = ((cbMtdParam._m0[15u].y - _438) * (isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0)))) + _438;
    float _461 = (cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x) + TEXCOORD_6.w;
    float _462 = (cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + TEXCOORD_9.w;
    vec4 _488 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_7, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * ((cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * ((cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[10u].w));
    float _493 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[15u].w;
    float _500 = ((_488.y * 0.5) + (-0.25)) * cbMtdParam._m0[15u].z;
    float _502 = (-0.0) - (cbMtdParam._m0[15u].z * ((_488.x * 0.5) + (-0.25)));
    float _504 = fract(_493);
    float _506 = fract(_493 + 0.5);
    float _507 = _504 * _502;
    float _508 = _500 * _504;
    float _511 = _506 * _502;
    float _512 = _500 * _506;
    float _517 = abs((_504 * 2.0) + (-1.0));
    vec4 _533 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2(((_507 + _461) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, ((_508 + _462) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _535 = _533.x;
    float _536 = _533.y;
    float _537 = _533.z;
    vec4 _538 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2(((_511 + _461) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, ((_512 + _462) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _565 = (cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w;
    float _566 = (cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w;
    vec4 _579 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2(((_507 + _565) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, ((_508 + _566) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _581 = _579.x;
    float _582 = _579.y;
    float _583 = _579.z;
    vec4 _584 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2(((_511 + _565) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, ((_512 + _566) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _633 = (TEXCOORD_6.x - ((cbMtdParam._m0[14u].w * (1.0 - TEXCOORD_6.x)) * (texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_5, SS_WrapLinear), vec2((((cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x) + TEXCOORD_6.w) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((cbMtdParam._m0[18u].z * cbPerFrame._m0[22u].x) + TEXCOORD_9.w) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[15u].x + 1.0);
    float _4036 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
    float _634 = isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0));
    float _635 = _634 * (((((_584.x - _581) * _517) + _581) * cbMtdParam._m0[13u].x) + ((((_538.x - _535) * _517) + _535) * cbMtdParam._m0[11u].x));
    float _636 = _634 * (((((_584.y - _582) * _517) + _582) * cbMtdParam._m0[13u].y) + ((((_538.y - _536) * _517) + _536) * cbMtdParam._m0[11u].y));
    float _637 = _634 * (((((_584.z - _583) * _517) + _583) * cbMtdParam._m0[13u].z) + ((((_538.z - _537) * _517) + _537) * cbMtdParam._m0[11u].z));
    vec4 _649 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[9u].w));
    float _651 = _649.x;
    float _664 = (_322 * (_401 - _428)) + _428;
    float _665 = (_322 * (_403 - _429)) + _429;
    float _666 = (_322 * (sqrt(1.0 - (isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0)))) - _435)) + _435;
    vec4 _685 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_FLow_Glow_snp_0_Texture2D_9, SS_BumpMap), vec2((((cbMtdParam._m0[16u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((cbMtdParam._m0[17u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _691 = (_685.x * 2.0) + (-1.0);
    float _692 = (_685.y * 2.0) + (-1.0);
    float _693 = dot(vec2(_691, _692), vec2(_691, _692));
    float _4047 = isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0));
    float _709 = (_370 * (((_664 * cbMtdParam._m0[14u].z) - _664) + _691)) + _664;
    float _710 = (_370 * (((_665 * cbMtdParam._m0[14u].z) - _665) + _692)) + _665;
    float _711 = (_370 * (sqrt(1.0 - (isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0)))) - _666)) + _666;
    float _714 = fma(_711, _230 * NORMAL.x, fma(_710, _237 * TANGENT.x, (_223 * _215) * _709));
    float _717 = fma(_711, _230 * NORMAL.y, fma(_710, _237 * TANGENT.y, (_223 * _216) * _709));
    float _720 = fma(_711, _230 * NORMAL.z, fma(_710, _237 * TANGENT.z, (_223 * _217) * _709));
    float _724 = inversesqrt(dot(vec3(_714, _717, _720), vec3(_714, _717, _720)));
    float _725 = _724 * _714;
    float _726 = _724 * _717;
    float _727 = _724 * _720;
    float _4058 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    float _728 = isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0));
    float _4069 = isnan(0.0) ? _378 : (isnan(_378) ? 0.0 : max(_378, 0.0));
    float _4080 = isnan(0.0) ? _379 : (isnan(_379) ? 0.0 : max(_379, 0.0));
    float _4091 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _747 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _787 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _797 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _787);
    float _798 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _787);
    float _799 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _787);
    float _803 = inversesqrt(dot(vec3(_797, _798, _799), vec3(_797, _798, _799)));
    float _804 = _797 * _803;
    float _805 = _798 * _803;
    float _806 = _799 * _803;
    vec4 _811 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _813 = _811.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _969 = sqrt(((_797 * _797) + (_798 * _798)) + (_799 * _799));
        float _975 = (cbMatDynParam._m0[5u].x * _969) + cbMatDynParam._m0[5u].y;
        float _4102 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
        float _976 = isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0));
        float _980 = (cbMatDynParam._m0[5u].z * _969) + cbMatDynParam._m0[5u].w;
        float _4113 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0))) - _976)) + _976) < ((_813 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _825 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _826 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _845 = fma(_727, cbSceneParam._m0[5u].z, fma(_726, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _725));
    float _848 = fma(_727, cbSceneParam._m0[6u].z, fma(_726, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _725));
    float _851 = fma(_727, cbSceneParam._m0[7u].z, fma(_726, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _725));
    uint _864 = uint(roundEven(NORMAL.w)) * 13u;
    uint _865 = _864 + 9u;
    uint _866 = _865 + uint(cbMatDynParam._m0[0u].w);
    float _872 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0)))) * cbInstanceData._m0[_866].x;
    float _873 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0)))) * cbInstanceData._m0[_866].y;
    float _874 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0)))) * cbInstanceData._m0[_866].z;
    float _4124 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _875 = isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0));
    float _4135 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
    float _876 = isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0));
    float _4146 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
    float _877 = isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0));
    vec4 _886 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _825, cbSceneParam._m0[86u].y * _826));
    float _889 = _886.x * TEXCOORD_3.w;
    float _890 = dot(vec3(_725, _726, _727), vec3(_804, _805, _806));
    float _893 = _890 * 2.0;
    float _897 = (_893 * _725) - _804;
    float _898 = (_893 * _726) - _805;
    float _899 = (_893 * _727) - _806;
    float _903 = abs(dot(vec3(_804, _805, _806), vec3(_725, _726, _727)));
    float _4157 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    float _905 = sqrt(_728);
    float _918 = exp2((_905 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_905 * 3.0));
    float _950 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _954 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _958 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1287;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    float _1295;
    float _1296;
    float _1297;
    float _1298;
    float _1299;
    float _1300;
    float _1301;
    float _1302;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1013 = fma(_958, cbModelParam._m0[26u].z, fma(_954, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _950));
        float _1017 = fma(_958, cbModelParam._m0[27u].z, fma(_954, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _950));
        float _1021 = fma(_958, cbModelParam._m0[28u].z, fma(_954, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _950));
        float _1045 = _950 + _725;
        float _1046 = _954 + _726;
        float _1047 = _958 + _727;
        float _1057 = fma(_1047, cbModelParam._m0[26u].z, fma(_1046, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1045)) - _1013;
        float _1058 = fma(_1047, cbModelParam._m0[27u].z, fma(_1046, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1045)) - _1017;
        float _1059 = fma(_1047, cbModelParam._m0[28u].z, fma(_1046, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1045)) - _1021;
        float _1063 = inversesqrt(dot(vec3(_1057, _1058, _1059), vec3(_1057, _1058, _1059)));
        float _1076 = ((_1063 * _1057) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1013 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1077 = ((_1063 * _1058) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1017 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1078 = ((_1063 * _1059) / cbModelParam._m0[34u].z) + ((((((_1021 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1081 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1076, _1077, _1078), 0.0);
        vec4 _1088 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1076, _1077, _1078), 0.0);
        vec4 _1095 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1076, _1077, _1078), 0.0);
        vec4 _1102 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1076, _1077, _1078), 0.0);
        float _1115 = exp2((_1081.w + (-0.5)) * 20.0) * 2.0;
        float _1116 = _1115 * (_1081.x + (-0.5));
        float _1117 = _1115 * (_1081.y + (-0.5));
        float _1118 = _1115 * (_1081.z + (-0.5));
        float _1125 = exp2((_1088.w + (-0.5)) * 20.0) * 2.0;
        float _1126 = _1125 * (_1088.x + (-0.5));
        float _1127 = _1125 * (_1088.y + (-0.5));
        float _1128 = _1125 * (_1088.z + (-0.5));
        float _1135 = exp2((_1095.w + (-0.5)) * 20.0) * 2.0;
        float _1136 = _1135 * (_1095.x + (-0.5));
        float _1137 = _1135 * (_1095.y + (-0.5));
        float _1138 = _1135 * (_1095.z + (-0.5));
        float _1145 = exp2((_1102.w + (-0.5)) * 20.0) * 2.0;
        float _1146 = _1145 * (_1102.x + (-0.5));
        float _1147 = _1145 * (_1102.y + (-0.5));
        float _1148 = _1145 * (_1102.z + (-0.5));
        float _1149 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1150 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
        float _1151 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1152 = _1116 * 0.5;
        float _1153 = _1126 * 0.5;
        float _1154 = _1136 * 0.5;
        float _1155 = dot(vec3(_1152, _1153, _1154), vec3(_1152, _1153, _1154));
        float _1160 = (_1155 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1155);
        float _1169 = (dot(vec3(_725, _726, _727), vec3(_1160 * _1152, _1160 * _1153, _1160 * _1154)) + 1.0) * 0.5;
        float _4183 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1179 = sqrt(((_1153 * _1153) + (_1152 * _1152)) + (_1154 * _1154)) / (_1149 + 9.9999997473787516355514526367188e-06);
        float _4194 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1180 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
        float _1181 = _1180 * 2.0;
        float _1185 = (1.0 - _1180) / (_1180 + 1.0);
        float _4205 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1186 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
        float _1195 = ((((1.0 - _1186) * (_1181 + 2.0)) * exp2(log2(isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0))) * (_1181 + 1.0))) + _1186) * _1149;
        float _1196 = _1117 * 0.5;
        float _1197 = _1127 * 0.5;
        float _1198 = _1137 * 0.5;
        float _1199 = dot(vec3(_1196, _1197, _1198), vec3(_1196, _1197, _1198));
        float _1204 = (_1199 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1199);
        float _1212 = (dot(vec3(_725, _726, _727), vec3(_1204 * _1196, _1204 * _1197, _1204 * _1198)) + 1.0) * 0.5;
        float _4216 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
        float _1221 = sqrt(((_1197 * _1197) + (_1196 * _1196)) + (_1198 * _1198)) / (_1150 + 9.9999997473787516355514526367188e-06);
        float _4227 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1222 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
        float _1223 = _1222 * 2.0;
        float _1227 = (1.0 - _1222) / (_1222 + 1.0);
        float _4238 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
        float _1228 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
        float _1237 = ((((1.0 - _1228) * (_1223 + 2.0)) * exp2(log2(isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0))) * (_1223 + 1.0))) + _1228) * _1150;
        float _1238 = _1118 * 0.5;
        float _1239 = _1128 * 0.5;
        float _1240 = _1138 * 0.5;
        float _1241 = dot(vec3(_1238, _1239, _1240), vec3(_1238, _1239, _1240));
        float _1246 = (_1241 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1241);
        float _1254 = (dot(vec3(_725, _726, _727), vec3(_1246 * _1238, _1246 * _1239, _1246 * _1240)) + 1.0) * 0.5;
        float _4249 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
        float _1263 = sqrt(((_1239 * _1239) + (_1238 * _1238)) + (_1240 * _1240)) / (_1151 + 9.9999997473787516355514526367188e-06);
        float _4260 = isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0));
        float _1264 = isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0));
        float _1265 = _1264 * 2.0;
        float _1269 = (1.0 - _1264) / (_1264 + 1.0);
        float _4271 = isnan(0.0) ? _1269 : (isnan(_1269) ? 0.0 : max(_1269, 0.0));
        float _1270 = isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0));
        float _1279 = ((((1.0 - _1270) * (_1265 + 2.0)) * exp2(log2(isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0))) * (_1265 + 1.0))) + _1270) * _1151;
        _1287 = _1118;
        _1289 = _1117;
        _1290 = _1116;
        _1291 = _1128;
        _1292 = _1127;
        _1293 = _1126;
        _1294 = _1138;
        _1295 = _1137;
        _1296 = _1136;
        _1297 = _1151;
        _1298 = _1150;
        _1299 = _1149;
        _1300 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0)));
        _1301 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0)));
        _1302 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0)));
    }
    else
    {
        _1287 = _1288;
        _1289 = _1288;
        _1290 = _1288;
        _1291 = _1288;
        _1292 = _1288;
        _1293 = _1288;
        _1294 = _1288;
        _1295 = _1288;
        _1296 = _1288;
        _1297 = _1288;
        _1298 = _1288;
        _1299 = _1288;
        _1300 = 0.0;
        _1301 = 0.0;
        _1302 = 0.0;
    }
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1331 = fma(_958, cbModelParam._m0[30u].z, fma(_954, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _950));
        float _1335 = fma(_958, cbModelParam._m0[31u].z, fma(_954, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _950));
        float _1339 = fma(_958, cbModelParam._m0[32u].z, fma(_954, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _950));
        float _1362 = _950 + _725;
        float _1363 = _954 + _726;
        float _1364 = _958 + _727;
        float _1374 = fma(_1364, cbModelParam._m0[30u].z, fma(_1363, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1362)) - _1331;
        float _1375 = fma(_1364, cbModelParam._m0[31u].z, fma(_1363, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1362)) - _1335;
        float _1376 = fma(_1364, cbModelParam._m0[32u].z, fma(_1363, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1362)) - _1339;
        float _1380 = inversesqrt(dot(vec3(_1374, _1375, _1376), vec3(_1374, _1375, _1376)));
        float _1393 = ((_1380 * _1374) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1331 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1394 = ((_1380 * _1375) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1335 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1395 = ((_1380 * _1376) / cbModelParam._m0[35u].z) + ((((((_1339 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1397 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1393, _1394, _1395), 0.0);
        vec4 _1404 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1393, _1394, _1395), 0.0);
        vec4 _1411 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1393, _1394, _1395), 0.0);
        vec4 _1418 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1393, _1394, _1395), 0.0);
        float _1430 = exp2((_1397.w + (-0.5)) * 20.0) * 2.0;
        float _1431 = _1430 * (_1397.x + (-0.5));
        float _1432 = _1430 * (_1397.y + (-0.5));
        float _1433 = _1430 * (_1397.z + (-0.5));
        float _1440 = exp2((_1404.w + (-0.5)) * 20.0) * 2.0;
        float _1441 = _1440 * (_1404.x + (-0.5));
        float _1442 = _1440 * (_1404.y + (-0.5));
        float _1443 = _1440 * (_1404.z + (-0.5));
        float _1450 = exp2((_1411.w + (-0.5)) * 20.0) * 2.0;
        float _1451 = _1450 * (_1411.x + (-0.5));
        float _1452 = _1450 * (_1411.y + (-0.5));
        float _1453 = _1450 * (_1411.z + (-0.5));
        float _1460 = exp2((_1418.w + (-0.5)) * 20.0) * 2.0;
        float _1461 = _1460 * (_1418.x + (-0.5));
        float _1462 = _1460 * (_1418.y + (-0.5));
        float _1463 = _1460 * (_1418.z + (-0.5));
        float _1464 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1465 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
        float _1466 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
        float _1467 = _1431 * 0.5;
        float _1468 = _1441 * 0.5;
        float _1469 = _1451 * 0.5;
        float _1470 = dot(vec3(_1467, _1468, _1469), vec3(_1467, _1468, _1469));
        float _1475 = (_1470 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1470);
        float _1483 = (dot(vec3(_725, _726, _727), vec3(_1475 * _1467, _1475 * _1468, _1475 * _1469)) + 1.0) * 0.5;
        float _4312 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1492 = sqrt(((_1468 * _1468) + (_1467 * _1467)) + (_1469 * _1469)) / (_1464 + 9.9999997473787516355514526367188e-06);
        float _4323 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1493 = isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0));
        float _1494 = _1493 * 2.0;
        float _1498 = (1.0 - _1493) / (_1493 + 1.0);
        float _4334 = isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0));
        float _1499 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
        float _1508 = ((((1.0 - _1499) * (_1494 + 2.0)) * exp2(log2(isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0))) * (_1494 + 1.0))) + _1499) * _1464;
        float _1509 = _1432 * 0.5;
        float _1510 = _1442 * 0.5;
        float _1511 = _1452 * 0.5;
        float _1512 = dot(vec3(_1509, _1510, _1511), vec3(_1509, _1510, _1511));
        float _1517 = (_1512 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1512);
        float _1525 = (dot(vec3(_725, _726, _727), vec3(_1517 * _1509, _1517 * _1510, _1517 * _1511)) + 1.0) * 0.5;
        float _4345 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
        float _1534 = sqrt(((_1510 * _1510) + (_1509 * _1509)) + (_1511 * _1511)) / (_1465 + 9.9999997473787516355514526367188e-06);
        float _4356 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1535 = isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0));
        float _1536 = _1535 * 2.0;
        float _1540 = (1.0 - _1535) / (_1535 + 1.0);
        float _4367 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0));
        float _1541 = isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0));
        float _1550 = ((((1.0 - _1541) * (_1536 + 2.0)) * exp2(log2(isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0))) * (_1536 + 1.0))) + _1541) * _1465;
        float _1551 = _1433 * 0.5;
        float _1552 = _1443 * 0.5;
        float _1553 = _1453 * 0.5;
        float _1554 = dot(vec3(_1551, _1552, _1553), vec3(_1551, _1552, _1553));
        float _1559 = (_1554 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1554);
        float _1567 = (dot(vec3(_725, _726, _727), vec3(_1559 * _1551, _1559 * _1552, _1559 * _1553)) + 1.0) * 0.5;
        float _4378 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
        float _1576 = sqrt(((_1552 * _1552) + (_1551 * _1551)) + (_1553 * _1553)) / (_1466 + 9.9999997473787516355514526367188e-06);
        float _4389 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
        float _1577 = isnan(1.0) ? _4389 : (isnan(_4389) ? 1.0 : min(_4389, 1.0));
        float _1578 = _1577 * 2.0;
        float _1582 = (1.0 - _1577) / (_1577 + 1.0);
        float _4400 = isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0));
        float _1583 = isnan(1.0) ? _4400 : (isnan(_4400) ? 1.0 : min(_4400, 1.0));
        float _1592 = ((((1.0 - _1583) * (_1578 + 2.0)) * exp2(log2(isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0))) * (_1578 + 1.0))) + _1583) * _1466;
        _1600 = _1433;
        _1601 = _1432;
        _1602 = _1431;
        _1603 = _1443;
        _1604 = _1442;
        _1605 = _1441;
        _1606 = _1453;
        _1607 = _1452;
        _1608 = _1451;
        _1609 = _1466;
        _1610 = _1465;
        _1611 = _1464;
        _1612 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0)));
        _1613 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0)));
        _1614 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0)));
    }
    else
    {
        _1600 = _1288;
        _1601 = _1288;
        _1602 = _1288;
        _1603 = _1288;
        _1604 = _1288;
        _1605 = _1288;
        _1606 = _1288;
        _1607 = _1288;
        _1608 = _1288;
        _1609 = _1288;
        _1610 = _1288;
        _1611 = _1288;
        _1612 = 0.0;
        _1613 = 0.0;
        _1614 = 0.0;
    }
    float _1624 = (cbModelParam._m0[1u].x * (_1612 - _1300)) + _1300;
    float _1625 = (cbModelParam._m0[1u].x * (_1613 - _1301)) + _1301;
    float _1626 = (cbModelParam._m0[1u].x * (_1614 - _1302)) + _1302;
    float _1647 = fma(_1626, cbSceneParam._m0[89u].z, fma(_1625, cbSceneParam._m0[89u].y, _1624 * cbSceneParam._m0[89u].x));
    float _1650 = fma(_1626, cbSceneParam._m0[90u].z, fma(_1625, cbSceneParam._m0[90u].y, _1624 * cbSceneParam._m0[90u].x));
    float _1653 = fma(_1626, cbSceneParam._m0[91u].z, fma(_1625, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1624));
    float _1668 = _897 * 0.5;
    float _1669 = _898 * 0.5;
    float _1670 = _899 * 0.5;
    float _1671 = dot(vec4(_1668, _1669, _1670, 1.0), vec4(_1602, _1605, _1608, _1611));
    float _1674 = dot(vec4(_1668, _1669, _1670, 1.0), vec4(_1601, _1604, _1607, _1610));
    float _1677 = dot(vec4(_1668, _1669, _1670, 1.0), vec4(_1600, _1603, _1606, _1609));
    float _1711;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1684 = dot(vec4(_1668, _1669, _1670, 1.0), vec4(_1287, _1291, _1294, _1297));
        float _1688 = dot(vec4(_1668, _1669, _1670, 1.0), vec4(_1289, _1292, _1295, _1298));
        float _1692 = dot(vec4(_1668, _1669, _1670, 1.0), vec4(_1290, _1293, _1296, _1299));
        float _1699 = dot(vec4(cbModelParam._m0[39u]), vec4(_1668, _1669, _1670, 1.0));
        _1711 = dot(vec3(isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0)), isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0)), isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1699) ? 0.0 : (isnan(0.0) ? _1699 : max(0.0, _1699))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1711 = 1.0;
    }
    float _1722;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1713 = dot(vec4(cbModelParam._m0[40u]), vec4(_1668, _1669, _1670, 1.0));
        _1722 = dot(vec3(isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0)), isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0)), isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1713) ? 0.0 : (isnan(0.0) ? _1713 : max(0.0, _1713))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1722 = 1.0;
    }
    float _1726 = (_1722 * cbModelParam._m0[1u].x) + (_1711 * (1.0 - cbModelParam._m0[1u].x));
    float _1736 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _728);
    float _1737 = isnan(_1736) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1736 : min(cbModelParam._m0[25u].z, _1736));
    float _1817;
    float _1819;
    float _1821;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1784 = fma(_958, cbModelParam._m0[13u].z, fma(_954, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _950)) + cbModelParam._m0[13u].w;
        float _1788 = fma(_958, cbModelParam._m0[14u].z, fma(_954, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _950)) + cbModelParam._m0[14u].w;
        float _1792 = fma(_958, cbModelParam._m0[15u].z, fma(_954, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _950)) + cbModelParam._m0[15u].w;
        float _1795 = fma(_899, cbModelParam._m0[13u].z, fma(_898, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _897));
        float _1798 = fma(_899, cbModelParam._m0[14u].z, fma(_898, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _897));
        float _1801 = fma(_899, cbModelParam._m0[15u].z, fma(_898, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _897));
        float _1829;
        if (_1795 > 0.0)
        {
            _1829 = abs((1.0 - _1784) / _1795);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1795 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1784 + 1.0) / _1795);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1829 = frontier_phi_17_15_ladder;
        }
        float _1999;
        if (_1798 > 0.0)
        {
            _1999 = abs((1.0 - _1788) / _1798);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1798 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1788 + 1.0) / _1798);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1999 = frontier_phi_26_22_ladder;
        }
        float _2294;
        if (_1801 > 0.0)
        {
            _2294 = abs((1.0 - _1792) / _1801);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1801 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1792 + 1.0) / _1801);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2294 = frontier_phi_38_33_ladder;
        }
        float _2296 = isnan(_1999) ? _1829 : (isnan(_1829) ? _1999 : min(_1829, _1999));
        float _2297 = isnan(_2294) ? _2296 : (isnan(_2296) ? _2294 : min(_2296, _2294));
        float _2301 = (_2297 * _1795) + _1784;
        float _2302 = (_2297 * _1798) + _1788;
        float _2303 = (_2297 * _1801) + _1792;
        float _2304 = _2297 * 9.9999997473787516355514526367188e-05;
        float _2306 = (-1.0) - _2304;
        float _2308 = _2304 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2303 > _2308) || ((_2303 < _2306) || ((_2302 > _2308) || ((_2302 < _2306) || ((_2301 < _2306) || (_2301 > _2308))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2448 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2303, cbModelParam._m0[9u].z, fma(_2302, cbModelParam._m0[9u].y, _2301 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2303, cbModelParam._m0[10u].z, fma(_2302, cbModelParam._m0[10u].y, _2301 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2303, cbModelParam._m0[11u].z, fma(_2302, cbModelParam._m0[11u].y, _2301 * cbModelParam._m0[11u].x))), _1737);
            frontier_phi_16_38_ladder = _2448.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2448.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2448.x * cbModelParam._m0[1u].y;
        }
        _1817 = frontier_phi_16_38_ladder_2;
        _1819 = frontier_phi_16_38_ladder_1;
        _1821 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1805 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_897, _898, _899), _1737);
        _1817 = _1805.x * cbModelParam._m0[1u].y;
        _1819 = _1805.y * cbModelParam._m0[1u].y;
        _1821 = _1805.z * cbModelParam._m0[1u].y;
    }
    float _1825 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _728);
    float _1826 = isnan(_1825) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1825 : min(cbModelParam._m0[25u].w, _1825));
    float _1916;
    float _1918;
    float _1920;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1880 = fma(_958, cbModelParam._m0[21u].z, fma(_954, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _950)) + cbModelParam._m0[21u].w;
        float _1884 = fma(_958, cbModelParam._m0[22u].z, fma(_954, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _950)) + cbModelParam._m0[22u].w;
        float _1888 = fma(_958, cbModelParam._m0[23u].z, fma(_954, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _950)) + cbModelParam._m0[23u].w;
        float _1891 = fma(_899, cbModelParam._m0[21u].z, fma(_898, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _897));
        float _1894 = fma(_899, cbModelParam._m0[22u].z, fma(_898, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _897));
        float _1897 = fma(_899, cbModelParam._m0[23u].z, fma(_898, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _897));
        float _2004;
        if (_1891 > 0.0)
        {
            _2004 = abs((1.0 - _1880) / _1891);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1891 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1880 + 1.0) / _1891);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2004 = frontier_phi_28_24_ladder;
        }
        float _2321;
        if (_1894 > 0.0)
        {
            _2321 = abs((1.0 - _1884) / _1894);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1894 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1884 + 1.0) / _1894);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2321 = frontier_phi_40_35_ladder;
        }
        float _2648;
        if (_1897 > 0.0)
        {
            _2648 = abs((1.0 - _1888) / _1897);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1897 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1888 + 1.0) / _1897);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2648 = frontier_phi_50_47_ladder;
        }
        float _2650 = isnan(_2321) ? _2004 : (isnan(_2004) ? _2321 : min(_2004, _2321));
        float _2651 = isnan(_2648) ? _2650 : (isnan(_2650) ? _2648 : min(_2650, _2648));
        float _2655 = (_2651 * _1891) + _1880;
        float _2656 = (_2651 * _1894) + _1884;
        float _2657 = (_2651 * _1897) + _1888;
        float _2658 = _2651 * 9.9999997473787516355514526367188e-05;
        float _2659 = (-1.0) - _2658;
        float _2661 = _2658 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2657 > _2661) || ((_2657 < _2659) || ((_2656 > _2661) || ((_2656 < _2659) || ((_2655 < _2659) || (_2655 > _2661))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2775 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2657, cbModelParam._m0[17u].z, fma(_2656, cbModelParam._m0[17u].y, _2655 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2657, cbModelParam._m0[18u].z, fma(_2656, cbModelParam._m0[18u].y, _2655 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2657, cbModelParam._m0[19u].z, fma(_2656, cbModelParam._m0[19u].y, _2655 * cbModelParam._m0[19u].x))), _1826);
            frontier_phi_25_50_ladder = _2775.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2775.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2775.x * cbModelParam._m0[1u].z;
        }
        _1916 = frontier_phi_25_50_ladder_2;
        _1918 = frontier_phi_25_50_ladder_1;
        _1920 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1900 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_897, _898, _899), _1826);
        _1916 = _1900.x * cbModelParam._m0[1u].z;
        _1918 = _1900.y * cbModelParam._m0[1u].z;
        _1920 = _1900.z * cbModelParam._m0[1u].z;
    }
    float _1932 = ((((1.0 - _918) * ((_905 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_918 * _905)) * _889;
    float _1933 = _1932 * ((cbModelParam._m0[1u].w * (_1916 - _1817)) + _1817);
    float _1934 = _1932 * ((cbModelParam._m0[1u].w * (_1918 - _1819)) + _1819);
    float _1935 = _1932 * ((cbModelParam._m0[1u].w * (_1920 - _1821)) + _1821);
    float _1938 = fma(_1935, cbSceneParam._m0[89u].z, fma(_1934, cbSceneParam._m0[89u].y, _1933 * cbSceneParam._m0[89u].x));
    float _1941 = fma(_1935, cbSceneParam._m0[90u].z, fma(_1934, cbSceneParam._m0[90u].y, _1933 * cbSceneParam._m0[90u].x));
    float _1944 = fma(_1935, cbSceneParam._m0[91u].z, fma(_1934, cbSceneParam._m0[91u].y, _1933 * cbSceneParam._m0[91u].x));
    float _1978 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1982 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1986 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1990 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1991 = _1978 / _1990;
    float _1992 = _1982 / _1990;
    float _1993 = _1986 / _1990;
    float _2140;
    float _2141;
    float _2142;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2020 = ((uint(_1993 > cbSceneParam._m0[59u].y) + uint(_1993 > cbSceneParam._m0[59u].x)) + uint(_1993 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2021 = _2020 + 43u;
        uint _2029 = _2020 + 44u;
        uint _2037 = _2020 + 45u;
        uint _2045 = _2020 + 46u;
        float _2056 = fma(_1990, cbSceneParam._m0[_2021].w, fma(_1986, cbSceneParam._m0[_2021].z, fma(_1982, cbSceneParam._m0[_2021].y, _1978 * cbSceneParam._m0[_2021].x)));
        float _2060 = fma(_1990, cbSceneParam._m0[_2029].w, fma(_1986, cbSceneParam._m0[_2029].z, fma(_1982, cbSceneParam._m0[_2029].y, _1978 * cbSceneParam._m0[_2029].x)));
        float _2068 = fma(_1990, cbSceneParam._m0[_2045].w, fma(_1986, cbSceneParam._m0[_2045].z, fma(_1982, cbSceneParam._m0[_2045].y, _1978 * cbSceneParam._m0[_2045].x)));
        float _2073 = cbSceneParam._m0[33u].z * _2068;
        float _2075 = cbSceneParam._m0[33u].w * _2068;
        float _2078 = fma(_1990, cbSceneParam._m0[_2037].w, fma(_1986, cbSceneParam._m0[_2037].z, fma(_1982, cbSceneParam._m0[_2037].y, _1978 * cbSceneParam._m0[_2037].x))) / _2068;
        float _2126 = (cbSceneParam._m0[33u].x - sqrt(((_1992 * _1992) + (_1991 * _1991)) + (_1993 * _1993))) * cbSceneParam._m0[33u].y;
        float _4526 = isnan(0.0) ? _2126 : (isnan(_2126) ? 0.0 : max(_2126, 0.0));
        float _2133 = (isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2073 + _2056) / _2068, (_2075 + _2060) / _2068), _2078), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2075 + _2056) / _2068, (_2060 - _2073) / _2068), _2078), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2056 - _2073) / _2068, (_2060 - _2075) / _2068), _2078), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2056 - _2075) / _2068, (_2073 + _2060) / _2068), _2078), 0.0)).x), vec4(0.25)));
        _2140 = 1.0 - (_2133 * cbSceneParam._m0[34u].x);
        _2141 = 1.0 - (_2133 * cbSceneParam._m0[34u].y);
        _2142 = 1.0 - (_2133 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2140 = 1.0;
        _2141 = 1.0;
        _2142 = 1.0;
    }
    float _2206;
    float _2208;
    float _2210;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2194 = fma(_1990, cbSceneParam._m0[63u].w, fma(_1986, cbSceneParam._m0[63u].z, fma(_1982, cbSceneParam._m0[63u].y, _1978 * cbSceneParam._m0[63u].x)));
        float _2195 = fma(_1990, cbSceneParam._m0[60u].w, fma(_1986, cbSceneParam._m0[60u].z, fma(_1982, cbSceneParam._m0[60u].y, _1978 * cbSceneParam._m0[60u].x))) / _2194;
        float _2196 = fma(_1990, cbSceneParam._m0[61u].w, fma(_1986, cbSceneParam._m0[61u].z, fma(_1982, cbSceneParam._m0[61u].y, _1978 * cbSceneParam._m0[61u].x))) / _2194;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2195 >= cbSceneParam._m0[64u].x) && (_2196 >= cbSceneParam._m0[64u].y)) && (_2195 <= cbSceneParam._m0[64u].z)) && (_2196 <= cbSceneParam._m0[64u].w))
        {
            float _2334 = fma(_1990, cbSceneParam._m0[62u].w, fma(_1986, cbSceneParam._m0[62u].z, fma(_1982, cbSceneParam._m0[62u].y, _1978 * cbSceneParam._m0[62u].x))) / _2194;
            float _2338 = isnan(cbSceneParam._m0[41u].w) ? _2334 : (isnan(_2334) ? cbSceneParam._m0[41u].w : max(_2334, cbSceneParam._m0[41u].w));
            float _2381 = (cbSceneParam._m0[33u].x - sqrt(((_1992 * _1992) + (_1991 * _1991)) + (_1993 * _1993))) * cbSceneParam._m0[33u].y;
            float _4542 = isnan(0.0) ? _2381 : (isnan(_2381) ? 0.0 : max(_2381, 0.0));
            float _2388 = (isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2195, cbSceneParam._m0[33u].w + _2196), _2338), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2195, _2196 - cbSceneParam._m0[33u].z), _2338), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2195 - cbSceneParam._m0[33u].z, _2196 - cbSceneParam._m0[33u].w), _2338), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2195 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2196), _2338), 0.0)).x), vec4(0.25)));
            float _2392 = 1.0 - (_2388 * cbSceneParam._m0[34u].x);
            float _2393 = 1.0 - (_2388 * cbSceneParam._m0[34u].y);
            float _2394 = 1.0 - (_2388 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2394) ? _2142 : (isnan(_2142) ? _2394 : min(_2142, _2394));
            frontier_phi_37_36_ladder_1 = isnan(_2393) ? _2141 : (isnan(_2141) ? _2393 : min(_2141, _2393));
            frontier_phi_37_36_ladder_2 = isnan(_2392) ? _2140 : (isnan(_2140) ? _2392 : min(_2140, _2392));
        }
        else
        {
            frontier_phi_37_36_ladder = _2142;
            frontier_phi_37_36_ladder_1 = _2141;
            frontier_phi_37_36_ladder_2 = _2140;
        }
        _2206 = frontier_phi_37_36_ladder_2;
        _2208 = frontier_phi_37_36_ladder_1;
        _2210 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2206 = _2140;
        _2208 = _2141;
        _2210 = _2142;
    }
    uvec4 _2215 = floatBitsToUint(cbInstanceData._m0[_864 + 5u]);
    uint _2217 = _2215.x * 14u;
    uint _2218 = _2217 + 13u;
    float _2225 = _889 + (-1.0);
    float _2230 = (cbLight._m0[_2218].x * _2225) + 1.0;
    float _2231 = (cbLight._m0[_2218].y * _2225) + 1.0;
    float _2232 = (cbLight._m0[_2218].z * _2225) + 1.0;
    float _2233 = (cbLight._m0[_2218].w * _2225) + 1.0;
    uint _2234 = _2217 + 5u;
    float _2240 = isnan(1.0) ? _2231 : (isnan(_2231) ? 1.0 : min(_2231, 1.0));
    uint _2244 = _2217 + 4u;
    float _2253 = isnan(1.0) ? _2230 : (isnan(_2230) ? 1.0 : min(_2230, 1.0));
    uint _2257 = _2217 | 1u;
    float _2268 = dot(vec3(cbLight._m0[_2217].xyz), vec3(_725, _726, _727));
    float _2271 = dot(vec3(cbLight._m0[_2257].xyz), vec3(_725, _726, _727));
    float _4578 = isnan(0.0) ? _2268 : (isnan(_2268) ? 0.0 : max(_2268, 0.0));
    float _4589 = isnan(0.0) ? _2271 : (isnan(_2271) ? 0.0 : max(_2271, 0.0));
    float _2276 = (isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0))) * 0.3183098733425140380859375;
    float _2278 = (isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0))) * 0.3183098733425140380859375;
    float _2285 = ((cbLight._m0[_2234].x * _2240) * _2278) + (((cbLight._m0[_2244].x * _2206) * _2253) * _2276);
    float _2286 = ((_2240 * cbLight._m0[_2234].y) * _2278) + (((cbLight._m0[_2244].y * _2208) * _2253) * _2276);
    float _2287 = ((_2240 * cbLight._m0[_2234].z) * _2278) + (((cbLight._m0[_2244].z * _2210) * _2253) * _2276);
    uvec4 _2291 = floatBitsToUint(cbLight._m0[_2217 + 12u]);
    bool _2293 = _2291.x == 0u;
    float _2395;
    float _2397;
    float _2399;
    if (_2293)
    {
        _2395 = _2285;
        _2397 = _2286;
        _2399 = _2287;
    }
    else
    {
        uint _2403 = _2217 + 6u;
        float _2419 = (dot(vec3(cbLight._m0[_2217 + 2u].xyz), vec3(_725, _726, _727)) * 0.5) + 0.5;
        float _2420 = _2419 * _2419;
        float _4600 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
        float _2421 = isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0));
        float _2422 = isnan(1.0) ? _2232 : (isnan(_2232) ? 1.0 : min(_2232, 1.0));
        _2395 = (((cbLight._m0[_2403].x * 0.3183098733425140380859375) * _2421) * _2422) + _2285;
        _2397 = (((cbLight._m0[_2403].y * 0.3183098733425140380859375) * _2421) * _2422) + _2286;
        _2399 = (((cbLight._m0[_2403].z * 0.3183098733425140380859375) * _2421) * _2422) + _2287;
    }
    bool _2402 = _2291.y == 0u;
    float _2457;
    float _2459;
    float _2461;
    if (_2402)
    {
        _2457 = _2395;
        _2459 = _2397;
        _2461 = _2399;
    }
    else
    {
        uint _2619 = _2217 + 7u;
        float _2635 = (dot(vec3(cbLight._m0[_2217 + 3u].xyz), vec3(_725, _726, _727)) * 0.5) + 0.5;
        float _2636 = _2635 * _2635;
        float _4616 = isnan(0.0) ? _2636 : (isnan(_2636) ? 0.0 : max(_2636, 0.0));
        float _2637 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
        float _2638 = isnan(1.0) ? _2233 : (isnan(_2233) ? 1.0 : min(_2233, 1.0));
        _2457 = (((cbLight._m0[_2619].x * 0.3183098733425140380859375) * _2637) * _2638) + _2395;
        _2459 = (((cbLight._m0[_2619].y * 0.3183098733425140380859375) * _2637) * _2638) + _2397;
        _2461 = (((cbLight._m0[_2619].z * 0.3183098733425140380859375) * _2637) * _2638) + _2399;
    }
    uint _2464 = _2217 + 8u;
    float _2477 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2217].w)) * _728) * 0.949999988079071044921875);
    float _2478 = _2477 * _2477;
    float _2479 = cbLight._m0[_2217].x + _804;
    float _2480 = cbLight._m0[_2217].y + _805;
    float _2481 = cbLight._m0[_2217].z + _806;
    float _2485 = inversesqrt(dot(vec3(_2479, _2480, _2481), vec3(_2479, _2480, _2481)));
    float _2486 = _2485 * _2479;
    float _2487 = _2485 * _2480;
    float _2488 = _2485 * _2481;
    float _2489 = dot(vec3(_725, _726, _727), vec3(cbLight._m0[_2217].xyz));
    float _4632 = isnan(0.0) ? _2489 : (isnan(_2489) ? 0.0 : max(_2489, 0.0));
    float _2492 = isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0));
    float _4643 = isnan(0.0) ? _890 : (isnan(_890) ? 0.0 : max(_890, 0.0));
    float _2493 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
    float _2494 = dot(vec3(_725, _726, _727), vec3(_2486, _2487, _2488));
    float _4654 = isnan(0.0) ? _2494 : (isnan(_2494) ? 0.0 : max(_2494, 0.0));
    float _2497 = isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0));
    float _2498 = dot(vec3(cbLight._m0[_2217].xyz), vec3(_2486, _2487, _2488));
    float _4665 = isnan(0.0) ? _2498 : (isnan(_2498) ? 0.0 : max(_2498, 0.0));
    float _2502 = _2478 * _2478;
    float _2506 = ((_2497 * _2497) * (_2502 + (-1.0))) + 1.0;
    float _2517 = (exp2(log2(1.0 - (isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2518 = 1.0 - _2478;
    float _2529 = (0.5 / (((_2493 * ((_2492 * _2518) + _2478)) + 9.9999999392252902907785028219223e-09) + (((_2493 * _2518) + _2478) * _2492))) * _2492;
    float _4676 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0));
    float _2531 = (isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0))) * (_2502 / ((_2506 * _2506) * 3.141590118408203125));
    uint _2545 = _2217 + 9u;
    float _2556 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2257].w)) * _728) * 0.949999988079071044921875);
    float _2557 = _2556 * _2556;
    float _2558 = cbLight._m0[_2257].x + _804;
    float _2559 = cbLight._m0[_2257].y + _805;
    float _2560 = cbLight._m0[_2257].z + _806;
    float _2564 = inversesqrt(dot(vec3(_2558, _2559, _2560), vec3(_2558, _2559, _2560)));
    float _2565 = _2564 * _2558;
    float _2566 = _2564 * _2559;
    float _2567 = _2564 * _2560;
    float _2568 = dot(vec3(_725, _726, _727), vec3(cbLight._m0[_2257].xyz));
    float _4687 = isnan(0.0) ? _2568 : (isnan(_2568) ? 0.0 : max(_2568, 0.0));
    float _2571 = isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0));
    float _2572 = dot(vec3(_725, _726, _727), vec3(_2565, _2566, _2567));
    float _4698 = isnan(0.0) ? _2572 : (isnan(_2572) ? 0.0 : max(_2572, 0.0));
    float _2575 = isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0));
    float _2576 = dot(vec3(cbLight._m0[_2257].xyz), vec3(_2565, _2566, _2567));
    float _4709 = isnan(0.0) ? _2576 : (isnan(_2576) ? 0.0 : max(_2576, 0.0));
    float _2580 = _2557 * _2557;
    float _2584 = ((_2575 * _2575) * (_2580 + (-1.0))) + 1.0;
    float _2593 = (exp2(log2(1.0 - (isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2594 = 1.0 - _2557;
    float _2604 = (0.5 / (((_2493 * ((_2571 * _2594) + _2557)) + 9.9999999392252902907785028219223e-09) + (((_2493 * _2594) + _2557) * _2571))) * _2571;
    float _4720 = isnan(0.0) ? _2604 : (isnan(_2604) ? 0.0 : max(_2604, 0.0));
    float _2606 = (isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0))) * (_2580 / ((_2584 * _2584) * 3.141590118408203125));
    float _2616 = (((_2593 * cbLight._m0[_2545].x) * _2606) * _2240) + ((((cbLight._m0[_2464].x * _2206) * _2517) * _2531) * _2253);
    float _2617 = (((_2593 * cbLight._m0[_2545].y) * _2606) * _2240) + ((((cbLight._m0[_2464].y * _2208) * _2517) * _2531) * _2253);
    float _2618 = (((_2593 * cbLight._m0[_2545].z) * _2606) * _2240) + ((((cbLight._m0[_2464].z * _2210) * _2517) * _2531) * _2253);
    float _2674;
    float _2676;
    float _2678;
    if (_2293)
    {
        _2674 = _2616;
        _2676 = _2617;
        _2678 = _2618;
    }
    else
    {
        uint _2680 = _2217 + 2u;
        uint _2684 = _2217 + 10u;
        float _2698 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2680].w)) * _728) * 0.949999988079071044921875);
        float _2699 = _2698 * _2698;
        float _2700 = cbLight._m0[_2680].x + _804;
        float _2701 = cbLight._m0[_2680].y + _805;
        float _2702 = cbLight._m0[_2680].z + _806;
        float _2706 = inversesqrt(dot(vec3(_2700, _2701, _2702), vec3(_2700, _2701, _2702)));
        float _2707 = _2706 * _2700;
        float _2708 = _2706 * _2701;
        float _2709 = _2706 * _2702;
        float _2710 = dot(vec3(_725, _726, _727), vec3(cbLight._m0[_2680].xyz));
        float _4731 = isnan(0.0) ? _2710 : (isnan(_2710) ? 0.0 : max(_2710, 0.0));
        float _2713 = isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0));
        float _2714 = dot(vec3(_725, _726, _727), vec3(_2707, _2708, _2709));
        float _4742 = isnan(0.0) ? _2714 : (isnan(_2714) ? 0.0 : max(_2714, 0.0));
        float _2717 = isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0));
        float _2718 = dot(vec3(cbLight._m0[_2680].xyz), vec3(_2707, _2708, _2709));
        float _4753 = isnan(0.0) ? _2718 : (isnan(_2718) ? 0.0 : max(_2718, 0.0));
        float _2722 = _2699 * _2699;
        float _2726 = ((_2717 * _2717) * (_2722 + (-1.0))) + 1.0;
        float _2735 = (exp2(log2(1.0 - (isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2736 = 1.0 - _2699;
        float _2746 = (0.5 / (((_2493 * ((_2713 * _2736) + _2699)) + 9.9999999392252902907785028219223e-09) + (((_2493 * _2736) + _2699) * _2713))) * _2713;
        float _4764 = isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0));
        float _2748 = (isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0))) * (_2722 / ((_2726 * _2726) * 3.141590118408203125));
        float _2749 = isnan(1.0) ? _2232 : (isnan(_2232) ? 1.0 : min(_2232, 1.0));
        _2674 = (((_2735 * cbLight._m0[_2684].x) * _2748) * _2749) + _2616;
        _2676 = (((_2735 * cbLight._m0[_2684].y) * _2748) * _2749) + _2617;
        _2678 = (((_2735 * cbLight._m0[_2684].z) * _2748) * _2749) + _2618;
    }
    float _2780;
    float _2782;
    float _2784;
    if (_2402)
    {
        _2780 = _2674;
        _2782 = _2676;
        _2784 = _2678;
    }
    else
    {
        uint _2791 = _2217 + 3u;
        uint _2795 = _2217 + 11u;
        float _2809 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2791].w)) * _728) * 0.949999988079071044921875);
        float _2810 = _2809 * _2809;
        float _2811 = cbLight._m0[_2791].x + _804;
        float _2812 = cbLight._m0[_2791].y + _805;
        float _2813 = cbLight._m0[_2791].z + _806;
        float _2817 = inversesqrt(dot(vec3(_2811, _2812, _2813), vec3(_2811, _2812, _2813)));
        float _2818 = _2817 * _2811;
        float _2819 = _2817 * _2812;
        float _2820 = _2817 * _2813;
        float _2821 = dot(vec3(_725, _726, _727), vec3(cbLight._m0[_2791].xyz));
        float _4780 = isnan(0.0) ? _2821 : (isnan(_2821) ? 0.0 : max(_2821, 0.0));
        float _2824 = isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0));
        float _2825 = dot(vec3(_725, _726, _727), vec3(_2818, _2819, _2820));
        float _4791 = isnan(0.0) ? _2825 : (isnan(_2825) ? 0.0 : max(_2825, 0.0));
        float _2828 = isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0));
        float _2829 = dot(vec3(cbLight._m0[_2791].xyz), vec3(_2818, _2819, _2820));
        float _4802 = isnan(0.0) ? _2829 : (isnan(_2829) ? 0.0 : max(_2829, 0.0));
        float _2833 = _2810 * _2810;
        float _2837 = ((_2828 * _2828) * (_2833 + (-1.0))) + 1.0;
        float _2846 = (exp2(log2(1.0 - (isnan(1.0) ? _4802 : (isnan(_4802) ? 1.0 : min(_4802, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2847 = 1.0 - _2810;
        float _2857 = (0.5 / (((_2493 * ((_2824 * _2847) + _2810)) + 9.9999999392252902907785028219223e-09) + (((_2493 * _2847) + _2810) * _2824))) * _2824;
        float _4813 = isnan(0.0) ? _2857 : (isnan(_2857) ? 0.0 : max(_2857, 0.0));
        float _2859 = (isnan(1.0) ? _4813 : (isnan(_4813) ? 1.0 : min(_4813, 1.0))) * (_2833 / ((_2837 * _2837) * 3.141590118408203125));
        float _2860 = isnan(1.0) ? _2233 : (isnan(_2233) ? 1.0 : min(_2233, 1.0));
        _2780 = (((_2846 * cbLight._m0[_2795].x) * _2859) * _2860) + _2674;
        _2782 = (((_2846 * cbLight._m0[_2795].y) * _2859) * _2860) + _2676;
        _2784 = (((_2846 * cbLight._m0[_2795].z) * _2859) * _2860) + _2678;
    }
    float _2926;
    float _2928;
    float _2930;
    float _2932;
    float _2934;
    float _2936;
    if (_2215.y == 0u)
    {
        uvec4 _2881 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2882 = _2881.x;
        uint _2893 = uint((float(_2881.y) * floor(float(uint(cbSceneParam._m0[85u].y * _826) / _2882))) + floor(float(uint(cbSceneParam._m0[85u].x * _825) / _2882)));
        float _2903 = (log2(_1993 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2904 = isnan(0.0) ? _2903 : (isnan(_2903) ? 0.0 : max(_2903, 0.0));
        uint _2907 = uint(isnan(14.0) ? _2904 : (isnan(_2904) ? 14.0 : min(_2904, 14.0)));
        uvec4 _2912 = texelFetch(g_lightClusterGridBuffer, int(((_2907 << 2u) + (_2893 << 6u)) >> 2u));
        uint _2913 = _2912.x;
        uint _2914 = _2881.z;
        float _3022;
        float _3024;
        float _3026;
        float _3028;
        float _3030;
        float _3032;
        if (((((1u << ((_2914 >> 4u) & 15u)) + 4294967295u) & _2913) == 0u) || ((_2914 & 240u) == 0u))
        {
            _3022 = 0.0;
            _3024 = 0.0;
            _3026 = 0.0;
            _3028 = 0.0;
            _3030 = 0.0;
            _3032 = 0.0;
        }
        else
        {
            float _3023;
            float _3025;
            float _3027;
            float _3029;
            float _3031;
            float _3033;
            float _3183 = 0.0;
            float _3184 = 0.0;
            float _3185 = 0.0;
            float _3186 = 0.0;
            float _3187 = 0.0;
            float _3188 = 0.0;
            uint _3189 = 0u;
            uint _3198;
            bool _3199;
            for (;;)
            {
                _3198 = texelFetch(g_lightClassification, int((((_2907 << 5u) + (_2893 << 9u)) + (_3189 << 2u)) >> 2u)).x;
                _3199 = _3198 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3199)
                {
                    frontier_phi_71_pred = _3188;
                    frontier_phi_71_pred_1 = _3187;
                    frontier_phi_71_pred_2 = _3186;
                    frontier_phi_71_pred_3 = _3185;
                    frontier_phi_71_pred_4 = _3184;
                    frontier_phi_71_pred_5 = _3183;
                }
                else
                {
                    float _3328;
                    float _3329;
                    float _3330;
                    float _3331;
                    float _3332;
                    float _3333;
                    uint _3334;
                    _3328 = _3183;
                    _3329 = _3184;
                    _3330 = _3185;
                    _3331 = _3186;
                    _3332 = _3187;
                    _3333 = _3188;
                    _3334 = _3198;
                    float _3255;
                    float _3256;
                    float _3257;
                    float _3258;
                    float _3259;
                    float _3260;
                    for (;;)
                    {
                        uint _3338 = uint(findLSB(_3334)) + (_3189 << 5u);
                        uint _3335 = (_3334 + 4294967295u) & _3334;
                        uint _3340 = _3338 * 48u;
                        vec4 _3354 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3340)).x, texelFetch(g_PointLightRenderingBuffer, int(_3340 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3340 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3340 + 3u)).x));
                        uint _3360 = (_3338 * 48u) + 4u;
                        vec4 _3373 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3360)).x, texelFetch(g_PointLightRenderingBuffer, int(_3360 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3360 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3360 + 3u)).x));
                        uint _3379 = (_3338 * 48u) + 8u;
                        vec3 _3390 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3379)).x, texelFetch(g_PointLightRenderingBuffer, int(_3379 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3379 + 2u)).x));
                        float _3394 = _3354.x - _1991;
                        float _3395 = _3354.y - _1992;
                        float _3396 = _3354.z - _1993;
                        float _3397 = dot(vec3(_3394, _3395, _3396), vec3(_3394, _3395, _3396));
                        float _3400 = inversesqrt(_3397);
                        float _3401 = _3400 * _3394;
                        float _3402 = _3400 * _3395;
                        float _3403 = _3400 * _3396;
                        float _3404 = dot(vec3(_845, _848, _851), vec3(_3401, _3402, _3403));
                        float _3409 = 1.0 - (_3397 * _3354.w);
                        float _4839 = isnan(0.0) ? _3409 : (isnan(_3409) ? 0.0 : max(_3409, 0.0));
                        float _3410 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
                        float _3411 = sqrt(_3397) * _3373.w;
                        float _3414 = 1.39999997615814208984375 / (_3411 + 1.39999997615814208984375);
                        float _3415 = _3414 * _3414;
                        float _3418 = ((1.0 - _3415) * _3404) + _3415;
                        float _3421 = _3411 * _3411;
                        float _3425 = ((isnan(0.0) ? _3418 : (isnan(_3418) ? 0.0 : max(_3418, 0.0))) * _3410) / ((_3421 * 0.699999988079071044921875) + 1.0);
                        float _3429 = (-0.0) - _1991;
                        float _3430 = (-0.0) - _1992;
                        float _3431 = (-0.0) - _1993;
                        float _3435 = inversesqrt(dot(vec3(_3429, _3430, _3431), vec3(_3429, _3430, _3431)));
                        float _3436 = _3435 * _3429;
                        float _3437 = _3435 * _3430;
                        float _3438 = _3435 * _3431;
                        float _3445 = exp2(log2(1.0 / ((_3421 * 3.5) + 5.0)) * 0.25);
                        float _3446 = 1.0 - _905;
                        float _3453 = sqrt(1.0 - ((1.0 - (_3446 * _3446)) * (1.0 - (_3445 * _3445))));
                        float _3454 = _3453 * _3453;
                        float _3455 = _3454 * _3454;
                        float _3456 = _3436 + _3401;
                        float _3457 = _3437 + _3402;
                        float _3458 = _3438 + _3403;
                        float _3462 = inversesqrt(dot(vec3(_3456, _3457, _3458), vec3(_3456, _3457, _3458)));
                        float _3466 = dot(vec3(_845, _848, _851), vec3(_3436, _3437, _3438));
                        float _4855 = isnan(0.0) ? _3466 : (isnan(_3466) ? 0.0 : max(_3466, 0.0));
                        float _3469 = isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0));
                        float _3470 = dot(vec3(_845, _848, _851), vec3(_3462 * _3456, _3462 * _3457, _3462 * _3458));
                        float _4866 = isnan(0.0) ? _3470 : (isnan(_3470) ? 0.0 : max(_3470, 0.0));
                        float _3473 = isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0));
                        float _3477 = ((_3473 * _3473) * (_3455 + (-1.0))) + 1.0;
                        float _3478 = _3414 * _3454;
                        float _3479 = _3478 * _3478;
                        float _3482 = ((1.0 - _3479) * _3404) + _3479;
                        float _4877 = isnan(0.0) ? _3482 : (isnan(_3482) ? 0.0 : max(_3482, 0.0));
                        float _3483 = isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0));
                        float _3484 = 1.0 - _3454;
                        float _3494 = (0.5 / (((_3483 * ((_3469 * _3484) + _3454)) + 9.9999999392252902907785028219223e-09) + (((_3483 * _3484) + _3454) * _3469))) * _3483;
                        float _4888 = isnan(0.0) ? _3494 : (isnan(_3494) ? 0.0 : max(_3494, 0.0));
                        float _3505 = (((_3455 * 3.1415927410125732421875) * (isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0)))) / ((_3477 * _3477) * ((_3421 * 2.1991131305694580078125) + 3.141590118408203125))) * _3410;
                        _3258 = (_3425 * _3373.x) + _3331;
                        _3259 = (_3425 * _3373.y) + _3332;
                        _3260 = (_3425 * _3373.z) + _3333;
                        _3255 = (_3505 * _3390.x) + _3328;
                        _3256 = (_3505 * _3390.y) + _3329;
                        _3257 = (_3505 * _3390.z) + _3330;
                        if (_3335 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3328 = _3255;
                            _3329 = _3256;
                            _3330 = _3257;
                            _3331 = _3258;
                            _3332 = _3259;
                            _3333 = _3260;
                            _3334 = _3335;
                        }
                    }
                    frontier_phi_71_pred = _3260;
                    frontier_phi_71_pred_1 = _3259;
                    frontier_phi_71_pred_2 = _3258;
                    frontier_phi_71_pred_3 = _3257;
                    frontier_phi_71_pred_4 = _3256;
                    frontier_phi_71_pred_5 = _3255;
                }
                _3033 = frontier_phi_71_pred;
                _3031 = frontier_phi_71_pred_1;
                _3029 = frontier_phi_71_pred_2;
                _3027 = frontier_phi_71_pred_3;
                _3025 = frontier_phi_71_pred_4;
                _3023 = frontier_phi_71_pred_5;
                uint _3190 = _3189 + 1u;
                if (_3190 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3183 = _3023;
                    _3184 = _3025;
                    _3185 = _3027;
                    _3186 = _3029;
                    _3187 = _3031;
                    _3188 = _3033;
                    _3189 = _3190;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3022 = _3023;
            _3024 = _3025;
            _3026 = _3027;
            _3028 = _3029;
            _3030 = _3031;
            _3032 = _3033;
        }
        uvec4 _3036 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3037 = _3036.z;
        uint _3039 = (_3037 >> 8u) & 15u;
        float _3151;
        float _3153;
        float _3155;
        float _3157;
        float _3159;
        float _3161;
        if (((4294967295u << _3039) & _2913) == 0u)
        {
            _3151 = _3022;
            _3153 = _3024;
            _3155 = _3026;
            _3157 = _3028;
            _3159 = _3030;
            _3161 = _3032;
        }
        else
        {
            float _3176 = inversesqrt(dot(vec3(_1991, _1992, _1993), vec3(_1991, _1992, _1993)));
            float _3177 = _3176 * _1991;
            float _3178 = _3176 * _1992;
            float _3179 = _3176 * _1993;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3039 < ((_3037 >> 12u) & 15u))
            {
                float _3152;
                float _3154;
                float _3156;
                float _3158;
                float _3160;
                float _3162;
                float _3311 = _3022;
                float _3312 = _3024;
                float _3313 = _3026;
                float _3314 = _3028;
                float _3315 = _3030;
                float _3316 = _3032;
                uint _3317 = _3039;
                uint _3326;
                bool _3327;
                for (;;)
                {
                    _3326 = texelFetch(g_lightClassification, int((((_2907 << 5u) + (_2893 << 9u)) + (_3317 << 2u)) >> 2u)).x;
                    _3327 = _3326 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3327)
                    {
                        frontier_phi_82_pred = _3316;
                        frontier_phi_82_pred_1 = _3315;
                        frontier_phi_82_pred_2 = _3314;
                        frontier_phi_82_pred_3 = _3313;
                        frontier_phi_82_pred_4 = _3312;
                        frontier_phi_82_pred_5 = _3311;
                    }
                    else
                    {
                        float _3519;
                        float _3520;
                        float _3521;
                        float _3522;
                        float _3523;
                        float _3524;
                        float _3813;
                        float _3814;
                        float _3815;
                        float _3816;
                        float _3817;
                        float _3818;
                        float _3532 = _3311;
                        float _3533 = _3312;
                        float _3534 = _3313;
                        float _3535 = _3314;
                        float _3536 = _3315;
                        float _3537 = _3316;
                        uint _3538 = _3326;
                        uint _3539;
                        vec4 _3564;
                        float _3565;
                        vec4 _3580;
                        vec3 _3592;
                        vec4 _3607;
                        vec4 _3622;
                        float _3669;
                        bool _3670;
                        for (;;)
                        {
                            uint _3549 = ((_3317 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3538));
                            _3539 = (_3538 + 4294967295u) & _3538;
                            uint _3551 = _3549 * 40u;
                            _3564 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3551)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3551 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3551 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3551 + 3u)).x));
                            _3565 = _3564.w;
                            uint _3567 = (_3549 * 40u) + 4u;
                            _3580 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3567)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 3u)).x));
                            uint _3582 = (_3549 * 40u) + 8u;
                            _3592 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3582)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 2u)).x));
                            uint _3594 = (_3549 * 40u) + 16u;
                            _3607 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3594)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3594 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3594 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3594 + 3u)).x));
                            uint _3609 = (_3549 * 40u) + 20u;
                            _3622 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3609)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 3u)).x));
                            uint _3625 = (_3549 * 40u) + 24u;
                            vec4 _3638 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3625)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 3u)).x));
                            uint _3644 = (_3549 * 40u) + 28u;
                            vec4 _3657 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3644)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3644 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3644 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3644 + 3u)).x));
                            _3669 = fma(_1993, _3657.z, fma(_1992, _3657.y, _3657.x * _1991)) + _3657.w;
                            _3670 = !((fma(_1993, _3638.z, fma(_1992, _3638.y, _3638.x * _1991)) + _3638.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3670)
                            {
                                float _3697 = _3564.x - _1991;
                                float _3698 = _3564.y - _1992;
                                float _3699 = _3564.z - _1993;
                                float _3700 = dot(vec3(_3697, _3698, _3699), vec3(_3697, _3698, _3699));
                                float _3703 = inversesqrt(_3700);
                                float _3704 = _3703 * _3697;
                                float _3705 = _3703 * _3698;
                                float _3706 = _3703 * _3699;
                                float _3710 = 1.0 - (_3700 / (_3565 * _3565));
                                float _4899 = isnan(0.0) ? _3710 : (isnan(_3710) ? 0.0 : max(_3710, 0.0));
                                float _3711 = isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0));
                                float _3715 = sqrt(_3700) * _3580.w;
                                float _3717 = 1.39999997615814208984375 / (_3715 + 1.39999997615814208984375);
                                float _3718 = _3717 * _3717;
                                float _3721 = ((1.0 - _3718) * dot(vec3(_3704, _3705, _3706), vec3(_845, _848, _851))) + _3718;
                                float _3724 = _3715 * _3715;
                                float _3728 = (fma(_1993, _3607.z, fma(_1992, _3607.y, _3607.x * _1991)) + _3607.w) / _3669;
                                float _3729 = (fma(_1993, _3622.z, fma(_1992, _3622.y, _3622.x * _1991)) + _3622.w) / _3669;
                                float _3733 = 1.0 - dot(vec2(_3728, _3729), vec2(_3728, _3729));
                                float _4915 = isnan(0.0) ? _3733 : (isnan(_3733) ? 0.0 : max(_3733, 0.0));
                                float _3734 = isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0));
                                float _3735 = _3734 * (((isnan(0.0) ? _3721 : (isnan(_3721) ? 0.0 : max(_3721, 0.0))) * _3711) / ((_3724 * 0.699999988079071044921875) + 1.0));
                                float _3747 = exp2(log2(1.0 / ((_3724 * 3.5) + 5.0)) * 0.25);
                                float _3748 = 1.0 - _905;
                                float _3755 = sqrt(1.0 - ((1.0 - (_3748 * _3748)) * (1.0 - (_3747 * _3747))));
                                float _3756 = _3755 * _3755;
                                float _3757 = _3756 * _3756;
                                float _3758 = _3704 - _3177;
                                float _3759 = _3705 - _3178;
                                float _3760 = _3706 - _3179;
                                float _3764 = inversesqrt(dot(vec3(_3758, _3759, _3760), vec3(_3758, _3759, _3760)));
                                float _3768 = dot(vec3(_845, _848, _851), vec3((-0.0) - _3177, (-0.0) - _3178, (-0.0) - _3179));
                                float _4926 = isnan(0.0) ? _3768 : (isnan(_3768) ? 0.0 : max(_3768, 0.0));
                                float _3771 = isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0));
                                float _3772 = dot(vec3(_845, _848, _851), vec3(_3764 * _3758, _3764 * _3759, _3764 * _3760));
                                float _4937 = isnan(0.0) ? _3772 : (isnan(_3772) ? 0.0 : max(_3772, 0.0));
                                float _3775 = isnan(1.0) ? _4937 : (isnan(_4937) ? 1.0 : min(_4937, 1.0));
                                float _3779 = ((_3775 * _3775) * (_3757 + (-1.0))) + 1.0;
                                float _3780 = _3717 * _3756;
                                float _3781 = _3780 * _3780;
                                float _3787 = ((1.0 - _3781) * dot(vec3(_845, _848, _851), vec3(_3704, _3705, _3706))) + _3781;
                                float _4948 = isnan(0.0) ? _3787 : (isnan(_3787) ? 0.0 : max(_3787, 0.0));
                                float _3788 = isnan(1.0) ? _4948 : (isnan(_4948) ? 1.0 : min(_4948, 1.0));
                                float _3789 = 1.0 - _3756;
                                float _3799 = (0.5 / (((_3788 * ((_3771 * _3789) + _3756)) + 9.9999999392252902907785028219223e-09) + (((_3788 * _3789) + _3756) * _3771))) * _3788;
                                float _4959 = isnan(0.0) ? _3799 : (isnan(_3799) ? 0.0 : max(_3799, 0.0));
                                float _3809 = (_3734 * _3711) * (((_3757 * 3.1415927410125732421875) * (isnan(1.0) ? _4959 : (isnan(_4959) ? 1.0 : min(_4959, 1.0)))) / ((_3779 * _3779) * ((_3724 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3735 * _3580.z;
                                frontier_phi_88_pred_1 = _3735 * _3580.y;
                                frontier_phi_88_pred_2 = _3735 * _3580.x;
                                frontier_phi_88_pred_3 = _3809 * _3592.z;
                                frontier_phi_88_pred_4 = _3809 * _3592.y;
                                frontier_phi_88_pred_5 = _3809 * _3592.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3818 = frontier_phi_88_pred;
                            _3817 = frontier_phi_88_pred_1;
                            _3816 = frontier_phi_88_pred_2;
                            _3815 = frontier_phi_88_pred_3;
                            _3814 = frontier_phi_88_pred_4;
                            _3813 = frontier_phi_88_pred_5;
                            _3522 = _3816 + _3535;
                            _3523 = _3817 + _3536;
                            _3524 = _3818 + _3537;
                            _3519 = _3813 + _3532;
                            _3520 = _3814 + _3533;
                            _3521 = _3815 + _3534;
                            if (_3539 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3532 = _3519;
                                _3533 = _3520;
                                _3534 = _3521;
                                _3535 = _3522;
                                _3536 = _3523;
                                _3537 = _3524;
                                _3538 = _3539;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3524;
                        frontier_phi_82_pred_1 = _3523;
                        frontier_phi_82_pred_2 = _3522;
                        frontier_phi_82_pred_3 = _3521;
                        frontier_phi_82_pred_4 = _3520;
                        frontier_phi_82_pred_5 = _3519;
                    }
                    _3162 = frontier_phi_82_pred;
                    _3160 = frontier_phi_82_pred_1;
                    _3158 = frontier_phi_82_pred_2;
                    _3156 = frontier_phi_82_pred_3;
                    _3154 = frontier_phi_82_pred_4;
                    _3152 = frontier_phi_82_pred_5;
                    uint _3318 = _3317 + 1u;
                    if (_3318 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3311 = _3152;
                        _3312 = _3154;
                        _3313 = _3156;
                        _3314 = _3158;
                        _3315 = _3160;
                        _3316 = _3162;
                        _3317 = _3318;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3158;
                frontier_phi_63_64_ladder_1 = _3162;
                frontier_phi_63_64_ladder_2 = _3160;
                frontier_phi_63_64_ladder_3 = _3156;
                frontier_phi_63_64_ladder_4 = _3154;
                frontier_phi_63_64_ladder_5 = _3152;
            }
            else
            {
                frontier_phi_63_64_ladder = _3028;
                frontier_phi_63_64_ladder_1 = _3032;
                frontier_phi_63_64_ladder_2 = _3030;
                frontier_phi_63_64_ladder_3 = _3026;
                frontier_phi_63_64_ladder_4 = _3024;
                frontier_phi_63_64_ladder_5 = _3022;
            }
            _3151 = frontier_phi_63_64_ladder_5;
            _3153 = frontier_phi_63_64_ladder_4;
            _3155 = frontier_phi_63_64_ladder_3;
            _3157 = frontier_phi_63_64_ladder;
            _3159 = frontier_phi_63_64_ladder_2;
            _3161 = frontier_phi_63_64_ladder_1;
        }
        float _3166 = isnan(1.0) ? _889 : (isnan(_889) ? 1.0 : min(_889, 1.0));
        _2926 = (_3166 * _3157) + _2457;
        _2928 = (_3166 * _3159) + _2459;
        _2930 = (_3166 * _3161) + _2461;
        _2932 = ((_3151 * 0.039999999105930328369140625) * _3166) + _2780;
        _2934 = ((_3153 * 0.039999999105930328369140625) * _3166) + _2782;
        _2936 = ((_3155 * 0.039999999105930328369140625) * _3166) + _2784;
    }
    else
    {
        _2926 = _2457;
        _2928 = _2459;
        _2930 = _2461;
        _2932 = _2780;
        _2934 = _2782;
        _2936 = _2784;
    }
    uint _2942 = _865 + uint(cbMatDynParam._m0[0u].w);
    float _2948 = cbInstanceData._m0[_2942].x * (_635 - (_651 * _635));
    float _2949 = cbInstanceData._m0[_2942].y * (_636 - (_651 * _636));
    float _2950 = cbInstanceData._m0[_2942].z * (_637 - (_651 * _637));
    float _4975 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
    float _4986 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _4997 = isnan(0.0) ? _877 : (isnan(_877) ? 0.0 : max(_877, 0.0));
    float _2967 = (((isnan(1.0) ? _4975 : (isnan(_4975) ? 1.0 : min(_4975, 1.0))) * (_2926 + ((isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0))) * _889))) + ((_2932 + ((isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0))) * _1726)) * cbPerFrame._m0[3u].x)) + _2948;
    float _2969 = (_2949 + ((_2934 + ((isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0))) * _1726)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4986 : (isnan(_4986) ? 1.0 : min(_4986, 1.0))) * (_2928 + ((isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0))) * _889)));
    float _2971 = (_2950 + ((_2936 + ((isnan(0.0) ? _1944 : (isnan(_1944) ? 0.0 : max(_1944, 0.0))) * _1726)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4997 : (isnan(_4997) ? 1.0 : min(_4997, 1.0))) * (_2930 + ((isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0))) * _889)));
    float _2972 = isnan(0.0) ? _2967 : (isnan(_2967) ? 0.0 : max(_2967, 0.0));
    float _2973 = isnan(0.0) ? _2969 : (isnan(_2969) ? 0.0 : max(_2969, 0.0));
    float _2974 = isnan(0.0) ? _2971 : (isnan(_2971) ? 0.0 : max(_2971, 0.0));
    float _2980 = cbMtdParam._m0[2u].x * _2948;
    float _2981 = cbMtdParam._m0[2u].y * _2949;
    float _2982 = cbMtdParam._m0[2u].z * _2950;
    float _5023 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2984 = isnan(1.0) ? _5023 : (isnan(_5023) ? 1.0 : min(_5023, 1.0));
    uint _2985 = _864 + 6u;
    float _2993 = _825 / cbSceneParam._m0[86u].x;
    float _2994 = _826 / cbSceneParam._m0[86u].y;
    vec4 _3008 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2993, _2994, (log2((isnan(cbSceneParam._m0[77u].w) ? _747 : (isnan(_747) ? cbSceneParam._m0[77u].w : min(_747, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3010 = _3008.x;
    float _3011 = _3008.y;
    float _3012 = _3008.z;
    float _3013 = _3008.w;
    float _3084;
    float _3086;
    float _3088;
    float _3090;
    if (_747 > cbSceneParam._m0[78u].w)
    {
        float _3047 = isnan(_747) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _747 : min(cbSceneParam._m0[80u].w, _747));
        float _3048 = _3047 / _747;
        float _3059 = _3048 * _797;
        float _3060 = _798 * _3048;
        float _3061 = (-0.0) - _3060;
        float _3062 = _3048 * _799;
        float _3064 = (cbSceneParam._m0[77u].w * _3061) / _3047;
        float _3065 = _3064 + cbSceneParam._m0[79u].w;
        float _3066 = cbSceneParam._m0[79u].w - _3060;
        float _3072 = sqrt(((_3059 * _3059) + (_3060 * _3060)) + (_3062 * _3062));
        float _3075 = (1.0 - (cbSceneParam._m0[77u].w / _3047)) * _3072;
        float _3080 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3082 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3268;
        if (abs((_3061 - _3064) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3268 = ((((_3065 > 0.0) ? exp2(_3080 * _3065) : (2.0 - exp2(_3082 * _3065))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3075;
        }
        else
        {
            float _3212 = 1.0 / cbSceneParam._m0[80u].x;
            float _3213 = isnan(_3066) ? _3065 : (isnan(_3065) ? _3066 : max(_3065, _3066));
            float _3214 = isnan(_3066) ? _3065 : (isnan(_3065) ? _3066 : min(_3065, _3066));
            float _3223 = isnan(0.0) ? _3213 : (isnan(_3213) ? 0.0 : min(_3213, 0.0));
            float _3224 = isnan(0.0) ? _3214 : (isnan(_3214) ? 0.0 : min(_3214, 0.0));
            _3268 = ((abs(_3072 / _3061) * cbSceneParam._m0[80u].y) * ((((_3223 - _3224) * 2.0) - ((exp2(_3080 * (isnan(0.0) ? _3213 : (isnan(_3213) ? 0.0 : max(_3213, 0.0)))) - exp2(_3080 * (isnan(0.0) ? _3214 : (isnan(_3214) ? 0.0 : max(_3214, 0.0))))) * _3212)) - ((exp2(_3082 * _3223) - exp2(_3082 * _3224)) * _3212))) + (_3075 * cbSceneParam._m0[80u].z);
        }
        vec4 _3270 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2993, _2994, 1.0), 0.0);
        float _3279 = exp2((_3268 * (-1.44269502162933349609375)) * (1.0 - _3270.w));
        float _3280 = log2(_3279);
        float _3296 = log2(_3013);
        _3084 = (exp2(_3296 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3280 * cbSceneParam._m0[78u].x)) * _3270.x) / cbSceneParam._m0[78u].x)) + _3010;
        _3086 = (exp2(_3296 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3280 * cbSceneParam._m0[78u].y)) * _3270.y) / cbSceneParam._m0[78u].y)) + _3011;
        _3088 = (exp2(_3296 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3280 * cbSceneParam._m0[78u].z)) * _3270.z) / cbSceneParam._m0[78u].z)) + _3012;
        _3090 = _3279 * _3013;
    }
    else
    {
        _3084 = _3010;
        _3086 = _3011;
        _3088 = _3012;
        _3090 = _3013;
    }
    bool _3306;
    vec4 _3100;
    vec4 _3122;
    float _3124;
    float _3128;
    float _3129;
    float _3130;
    float _3133;
    float _3136;
    float _3139;
    float _3140;
    bool _3150;
    for (;;)
    {
        _3100 = cbMatDynParam._m0[0u];
        float _3102 = roundEven(_3100.y);
        bool _3103 = _3102 == 3.0;
        float _3104 = log2(_3090);
        float _3108 = exp2(_3104 * cbSceneParam._m0[78u].x);
        float _3109 = exp2(_3104 * cbSceneParam._m0[78u].y);
        float _3110 = exp2(_3104 * cbSceneParam._m0[78u].z);
        float _3111 = _3108 * _2972;
        float _3112 = _3109 * _2973;
        float _3113 = _3110 * _2974;
        float _3120 = _813 + (-0.5);
        _3122 = cbMtdParam._m0[1u];
        _3124 = _3122.y * _3120;
        float _3127 = (_3102 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3128 = _3127 * (_3103 ? _3111 : (_3111 + (cbSceneParam._m0[72u].w * _3084)));
        _3129 = _3127 * (_3103 ? _3112 : (_3112 + (cbSceneParam._m0[72u].w * _3086)));
        _3130 = _3127 * (_3103 ? _3113 : (_3113 + (cbSceneParam._m0[72u].w * _3088)));
        _3133 = ((_2980 * _2984) * _3108) * _3127;
        _3136 = ((_2981 * _2984) * _3109) * _3127;
        _3139 = ((_2982 * _2984) * _3110) * _3127;
        _3140 = _3120 * 0.999000012874603271484375;
        _3150 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3150)
        {
            if ((cbInstanceData._m0[_864 + 7u].x + _3140) < 0.5)
            {
                _3306 = true;
                break;
            }
        }
        uint _3247 = _865 + uint(_3100.w);
        if ((cbInstanceData._m0[_3247].w < 1.0) && ((cbInstanceData._m0[_3247].w + _3140) < 0.5))
        {
            _3306 = true;
            break;
        }
        if ((_3124 + 1.0) < _3122.x)
        {
            _3306 = true;
            break;
        }
        _3306 = false;
        break;
    }
    float _3510;
    if (_3306)
    {
        discard_state = true;
        _3510 = 0.0;
    }
    else
    {
        _3510 = cbInstanceData._m0[_2985].w;
    }
    SV_Target.x = _3128;
    SV_Target.y = _3129;
    SV_Target.z = _3130;
    SV_Target.w = _3510;
    SV_Target_1.x = _3133;
    SV_Target_1.y = _3136;
    SV_Target_1.z = _3139;
    SV_Target_1.w = cbInstanceData._m0[_2985].w;
    discard_exit();
}


