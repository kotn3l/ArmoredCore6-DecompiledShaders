#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec2 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 3, component = 2) in float TEXCOORD_11;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _128 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _129 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _130 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _136 = inversesqrt(dot(vec3(_128, _129, _130), vec3(_128, _129, _130)));
    float _143 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _150 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _173 = texture(sampler2D(M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _179 = _173.x * cbMtdParam._m0[9u].x;
    float _180 = _173.y * cbMtdParam._m0[9u].y;
    float _181 = _173.z * cbMtdParam._m0[9u].z;
    float _200 = texture(sampler2D(M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.z) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.w) + cbTextureTilingScale._m0[1u].w)).x * cbMtdParam._m0[10u].x;
    float _201 = _173.w * TEXCOORD.x;
    float _212 = (_201 < 0.5) ? 0.0 : 1.0;
    float _222 = (((((_201 * 2.0) * (1.0 - _212)) * _200) + (-0.5)) + ((1.0 - (((1.0 - _201) * 2.0) * (1.0 - _200))) * _212)) * cbMtdParam._m0[10u].z;
    precise float _226 = _222 * ((_222 > 0.0) ? cbMtdParam._m0[10u].y : (1.0 - cbMtdParam._m0[10u].y));
    precise float _227 = cbMtdParam._m0[10u].y + _226;
    float _379 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _228 = isnan(1.0) ? _379 : (isnan(_379) ? 1.0 : min(_379, 1.0));
    float _233 = (_228 * _228) * (3.0 - (_228 * 2.0));
    vec4 _245 = texture(sampler2D(M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[3u].w));
    float _247 = _245.x;
    vec4 _259 = texture(sampler2D(M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _263 = _259.z;
    float _266 = (_259.x * 2.0) + (-1.0);
    float _268 = (_259.y * 2.0) + (-1.0);
    float _269 = dot(vec2(_266, _268), vec2(_266, _268));
    float _390 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    float _274 = sqrt(1.0 - (isnan(1.0) ? _390 : (isnan(_390) ? 1.0 : min(_390, 1.0))));
    float _277 = fma(_274, _143 * NORMAL.x, fma(_268, _150 * TANGENT.x, (_136 * _128) * _266));
    float _280 = fma(_274, _143 * NORMAL.y, fma(_268, _150 * TANGENT.y, (_136 * _129) * _266));
    float _283 = fma(_274, _143 * NORMAL.z, fma(_268, _150 * TANGENT.z, (_136 * _130) * _266));
    float _287 = inversesqrt(dot(vec3(_277, _280, _283), vec3(_277, _280, _283)));
    float _401 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
    float _288 = isnan(1.0) ? _401 : (isnan(_401) ? 1.0 : min(_401, 1.0));
    float _412 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
    float _423 = isnan(0.0) ? _179 : (isnan(_179) ? 0.0 : max(_179, 0.0));
    float _434 = isnan(0.0) ? _180 : (isnan(_180) ? 0.0 : max(_180, 0.0));
    float _445 = isnan(0.0) ? _181 : (isnan(_181) ? 0.0 : max(_181, 0.0));
    float _456 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
    uint _308 = uint(roundEven(NORMAL.w)) * 13u;
    uint _311 = (_308 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _317 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _423 : (isnan(_423) ? 1.0 : min(_423, 1.0)))) * cbInstanceData._m0[_311].x;
    float _318 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _434 : (isnan(_434) ? 1.0 : min(_434, 1.0)))) * cbInstanceData._m0[_311].y;
    float _319 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _445 : (isnan(_445) ? 1.0 : min(_445, 1.0)))) * cbInstanceData._m0[_311].z;
    float _467 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _478 = isnan(0.0) ? _318 : (isnan(_318) ? 0.0 : max(_318, 0.0));
    float _489 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
    float _500 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _329 = cbInstanceData._m0[_308 + 6u].w * (isnan(1.0) ? _500 : (isnan(_500) ? 1.0 : min(_500, 1.0)));
    bool _353 = cbMtdParam._m0[1u].z != 0.0;
    float _354 = _353 ? _329 : 0.0;
    SV_Target.x = ((_277 * 0.5) * _287) + 0.500488758087158203125;
    SV_Target.y = ((_280 * 0.5) * _287) + 0.500488758087158203125;
    SV_Target.z = ((_283 * 0.5) * _287) + 0.500488758087158203125;
    SV_Target.w = _354;
    SV_Target_1.x = isnan(1.0) ? _456 : (isnan(_456) ? 1.0 : min(_456, 1.0));
    SV_Target_1.y = isnan(1.0) ? _412 : (isnan(_412) ? 1.0 : min(_412, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _353 ? _329 : TEXCOORD.y;
    SV_Target_2.x = isnan(1.0) ? _467 : (isnan(_467) ? 1.0 : min(_467, 1.0));
    SV_Target_2.y = isnan(1.0) ? _478 : (isnan(_478) ? 1.0 : min(_478, 1.0));
    SV_Target_2.z = isnan(1.0) ? _489 : (isnan(_489) ? 1.0 : min(_489, 1.0));
    SV_Target_2.w = _353 ? _329 : (float(floatBitsToUint(cbInstanceData._m0[_308 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _354;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _354;
}


