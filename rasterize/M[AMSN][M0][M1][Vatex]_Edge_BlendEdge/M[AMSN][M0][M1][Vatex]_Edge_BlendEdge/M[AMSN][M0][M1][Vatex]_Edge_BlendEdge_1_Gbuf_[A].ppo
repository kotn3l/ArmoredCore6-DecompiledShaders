#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec2 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 3, component = 2) in float TEXCOORD_11;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _140 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _141 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _142 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _148 = inversesqrt(dot(vec3(_140, _141, _142), vec3(_140, _141, _142)));
    float _155 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _162 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _185 = texture(sampler2D(M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _191 = _185.x * cbMtdParam._m0[9u].x;
    float _192 = _185.y * cbMtdParam._m0[9u].y;
    float _193 = _185.z * cbMtdParam._m0[9u].z;
    float _212 = texture(sampler2D(M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.z) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.w) + cbTextureTilingScale._m0[1u].w)).x * cbMtdParam._m0[10u].x;
    float _213 = _185.w * TEXCOORD.x;
    float _224 = (_213 < 0.5) ? 0.0 : 1.0;
    float _234 = (((((_213 * 2.0) * (1.0 - _224)) * _212) + (-0.5)) + ((1.0 - (((1.0 - _213) * 2.0) * (1.0 - _212))) * _224)) * cbMtdParam._m0[10u].z;
    precise float _238 = _234 * ((_234 > 0.0) ? cbMtdParam._m0[10u].y : (1.0 - cbMtdParam._m0[10u].y));
    precise float _239 = cbMtdParam._m0[10u].y + _238;
    float _469 = isnan(0.0) ? _239 : (isnan(_239) ? 0.0 : max(_239, 0.0));
    float _240 = isnan(1.0) ? _469 : (isnan(_469) ? 1.0 : min(_469, 1.0));
    float _245 = (_240 * _240) * (3.0 - (_240 * 2.0));
    vec4 _257 = texture(sampler2D(M_AMSN_M0_M1_Vatex_Edge_BlendEdge_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _261 = _257.z;
    float _264 = (_257.x * 2.0) + (-1.0);
    float _266 = (_257.y * 2.0) + (-1.0);
    float _267 = dot(vec2(_264, _266), vec2(_264, _266));
    float _480 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
    float _272 = sqrt(1.0 - (isnan(1.0) ? _480 : (isnan(_480) ? 1.0 : min(_480, 1.0))));
    float _275 = fma(_272, _155 * NORMAL.x, fma(_266, _162 * TANGENT.x, (_148 * _140) * _264));
    float _278 = fma(_272, _155 * NORMAL.y, fma(_266, _162 * TANGENT.y, (_148 * _141) * _264));
    float _281 = fma(_272, _155 * NORMAL.z, fma(_266, _162 * TANGENT.z, (_148 * _142) * _264));
    float _285 = inversesqrt(dot(vec3(_275, _278, _281), vec3(_275, _278, _281)));
    float _491 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _286 = isnan(1.0) ? _491 : (isnan(_491) ? 1.0 : min(_491, 1.0));
    float _502 = isnan(0.0) ? _261 : (isnan(_261) ? 0.0 : max(_261, 0.0));
    float _513 = isnan(0.0) ? _191 : (isnan(_191) ? 0.0 : max(_191, 0.0));
    float _288 = isnan(1.0) ? _513 : (isnan(_513) ? 1.0 : min(_513, 1.0));
    float _524 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _289 = isnan(1.0) ? _524 : (isnan(_524) ? 1.0 : min(_524, 1.0));
    float _535 = isnan(0.0) ? _193 : (isnan(_193) ? 0.0 : max(_193, 0.0));
    float _290 = isnan(1.0) ? _535 : (isnan(_535) ? 1.0 : min(_535, 1.0));
    uint _292 = uint(roundEven(NORMAL.w));
    vec4 _297 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _299 = _297.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _363 = (cbMatDynParam._m0[5u].x * TEXCOORD_11) + cbMatDynParam._m0[5u].y;
        float _546 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
        float _364 = isnan(1.0) ? _546 : (isnan(_546) ? 1.0 : min(_546, 1.0));
        float _368 = (cbMatDynParam._m0[5u].z * TEXCOORD_11) + cbMatDynParam._m0[5u].w;
        float _557 = isnan(0.0) ? _368 : (isnan(_368) ? 0.0 : max(_368, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _557 : (isnan(_557) ? 1.0 : min(_557, 1.0))) - _364)) + _364) < ((_299 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _396;
    uint _319;
    vec4 _324;
    float _331;
    float _332;
    float _333;
    float _339;
    vec4 _342;
    float _344;
    float _345;
    bool _356;
    for (;;)
    {
        _319 = _292 * 13u;
        _324 = cbInstanceData._m0[(_319 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _328 = (cbMtdParam._m0[0u].x * _288) * _324.x;
        float _329 = (cbMtdParam._m0[0u].y * _289) * _324.y;
        float _330 = (cbMtdParam._m0[0u].z * _290) * _324.z;
        float _568 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
        _331 = isnan(1.0) ? _568 : (isnan(_568) ? 1.0 : min(_568, 1.0));
        float _579 = isnan(0.0) ? _329 : (isnan(_329) ? 0.0 : max(_329, 0.0));
        _332 = isnan(1.0) ? _579 : (isnan(_579) ? 1.0 : min(_579, 1.0));
        float _590 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
        _333 = isnan(1.0) ? _590 : (isnan(_590) ? 1.0 : min(_590, 1.0));
        float _601 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
        _339 = cbInstanceData._m0[_319 + 6u].w * (isnan(1.0) ? _601 : (isnan(_601) ? 1.0 : min(_601, 1.0)));
        float _340 = _299 + (-0.5);
        _342 = cbMtdParam._m0[1u];
        _344 = _342.y * _340;
        _345 = _340 * 0.999000012874603271484375;
        _356 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_356)
        {
            if ((cbInstanceData._m0[_319 + 7u].x + _345) < 0.5)
            {
                _396 = true;
                break;
            }
        }
        if ((_324.w < 1.0) && ((_324.w + _345) < 0.5))
        {
            _396 = true;
            break;
        }
        if ((_344 + _245) < _342.x)
        {
            _396 = true;
            break;
        }
        _396 = false;
        break;
    }
    if (_396)
    {
        discard_state = true;
    }
    bool _422 = cbMtdParam._m0[1u].z != 0.0;
    float _423 = _422 ? _339 : 0.0;
    SV_Target.x = ((_275 * 0.5) * _285) + 0.500488758087158203125;
    SV_Target.y = ((_278 * 0.5) * _285) + 0.500488758087158203125;
    SV_Target.z = ((_281 * 0.5) * _285) + 0.500488758087158203125;
    SV_Target.w = _423;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _502 : (isnan(_502) ? 1.0 : min(_502, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _422 ? _339 : TEXCOORD.y;
    SV_Target_2.x = _331;
    SV_Target_2.y = _332;
    SV_Target_2.z = _333;
    SV_Target_2.w = _422 ? _339 : (float(floatBitsToUint(cbInstanceData._m0[_319 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _423;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _423;
    discard_exit();
}


