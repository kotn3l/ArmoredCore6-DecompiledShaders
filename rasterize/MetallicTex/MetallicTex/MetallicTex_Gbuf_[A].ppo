#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[9];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D MetallicTex_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D MetallicTex_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D MetallicTex_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _137 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _138 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _139 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _145 = inversesqrt(dot(vec3(_137, _138, _139), vec3(_137, _138, _139)));
    float _152 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _153 = _152 * NORMAL.x;
    float _154 = _152 * NORMAL.y;
    float _155 = _152 * NORMAL.z;
    float _159 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _167;
    float _168;
    float _169;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _167 = (-0.0) - _153;
        _168 = (-0.0) - _154;
        _169 = (-0.0) - _155;
    }
    else
    {
        _167 = _153;
        _168 = _154;
        _169 = _155;
    }
    vec4 _183 = texture(sampler2D(MetallicTex_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _186 = _183.x;
    float _187 = _183.y;
    float _188 = _183.z;
    float _189 = _183.w;
    float _190 = _189 * TEXCOORD_1.z;
    vec4 _202 = texture(sampler2D(MetallicTex_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _204 = _202.x;
    vec4 _216 = texture(sampler2D(MetallicTex_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _220 = _216.z;
    float _224 = (_216.x * 2.0) + (-1.0);
    float _226 = (_216.y * 2.0) + (-1.0);
    float _227 = dot(vec2(_224, _226), vec2(_224, _226));
    float _442 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _233 = sqrt(1.0 - (isnan(1.0) ? _442 : (isnan(_442) ? 1.0 : min(_442, 1.0))));
    float _236 = fma(_233, _167, fma(_226, _159 * TANGENT.x, (_145 * _137) * _224));
    float _239 = fma(_233, _168, fma(_226, _159 * TANGENT.y, (_145 * _138) * _224));
    float _242 = fma(_233, _169, fma(_226, _159 * TANGENT.z, (_145 * _139) * _224));
    float _246 = inversesqrt(dot(vec3(_236, _239, _242), vec3(_236, _239, _242)));
    float _247 = _246 * _236;
    float _248 = _246 * _239;
    float _249 = _246 * _242;
    float _253 = inversesqrt(dot(vec3(_247, _248, _249), vec3(_247, _248, _249)));
    float _453 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _254 = isnan(1.0) ? _453 : (isnan(_453) ? 1.0 : min(_453, 1.0));
    float _464 = isnan(0.0) ? _220 : (isnan(_220) ? 0.0 : max(_220, 0.0));
    float _475 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
    float _256 = isnan(1.0) ? _475 : (isnan(_475) ? 1.0 : min(_475, 1.0));
    float _486 = isnan(0.0) ? _187 : (isnan(_187) ? 0.0 : max(_187, 0.0));
    float _257 = isnan(1.0) ? _486 : (isnan(_486) ? 1.0 : min(_486, 1.0));
    float _497 = isnan(0.0) ? _188 : (isnan(_188) ? 0.0 : max(_188, 0.0));
    float _258 = isnan(1.0) ? _497 : (isnan(_497) ? 1.0 : min(_497, 1.0));
    float _508 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    uint _261 = uint(roundEven(NORMAL.w));
    vec4 _266 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _268 = _266.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _333 = (cbMatDynParam._m0[5u].x * TEXCOORD_9) + cbMatDynParam._m0[5u].y;
        float _519 = isnan(0.0) ? _333 : (isnan(_333) ? 0.0 : max(_333, 0.0));
        float _334 = isnan(1.0) ? _519 : (isnan(_519) ? 1.0 : min(_519, 1.0));
        float _338 = (cbMatDynParam._m0[5u].z * TEXCOORD_9) + cbMatDynParam._m0[5u].w;
        float _530 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _530 : (isnan(_530) ? 1.0 : min(_530, 1.0))) - _334)) + _334) < ((_268 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _367;
    uint _288;
    vec4 _293;
    float _300;
    float _301;
    float _302;
    float _308;
    vec4 _312;
    float _314;
    float _315;
    bool _326;
    for (;;)
    {
        _288 = _261 * 13u;
        _293 = cbInstanceData._m0[(_288 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _297 = (cbMtdParam._m0[0u].x * _256) * _293.x;
        float _298 = (cbMtdParam._m0[0u].y * _257) * _293.y;
        float _299 = (cbMtdParam._m0[0u].z * _258) * _293.z;
        float _541 = isnan(0.0) ? _297 : (isnan(_297) ? 0.0 : max(_297, 0.0));
        _300 = isnan(1.0) ? _541 : (isnan(_541) ? 1.0 : min(_541, 1.0));
        float _552 = isnan(0.0) ? _298 : (isnan(_298) ? 0.0 : max(_298, 0.0));
        _301 = isnan(1.0) ? _552 : (isnan(_552) ? 1.0 : min(_552, 1.0));
        float _563 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
        _302 = isnan(1.0) ? _563 : (isnan(_563) ? 1.0 : min(_563, 1.0));
        float _574 = isnan(0.0) ? _254 : (isnan(_254) ? 0.0 : max(_254, 0.0));
        _308 = cbInstanceData._m0[_288 + 6u].w * (isnan(1.0) ? _574 : (isnan(_574) ? 1.0 : min(_574, 1.0)));
        float _309 = _268 + (-0.5);
        _312 = cbMtdParam._m0[1u];
        _314 = _312.y * _309;
        _315 = _309 * 0.999000012874603271484375;
        _326 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_326)
        {
            if ((cbInstanceData._m0[_288 + 7u].x + _315) < 0.5)
            {
                _367 = true;
                break;
            }
        }
        if ((_293.w < 1.0) && ((_293.w + _315) < 0.5))
        {
            _367 = true;
            break;
        }
        if ((_314 + _189) < _312.x)
        {
            _367 = true;
            break;
        }
        _367 = false;
        break;
    }
    if (_367)
    {
        discard_state = true;
    }
    bool _393 = cbMtdParam._m0[1u].z != 0.0;
    float _394 = _393 ? _308 : 0.0;
    SV_Target.x = ((_247 * 0.5) * _253) + 0.500488758087158203125;
    SV_Target.y = ((_248 * 0.5) * _253) + 0.500488758087158203125;
    SV_Target.z = ((_249 * 0.5) * _253) + 0.500488758087158203125;
    SV_Target.w = _394;
    SV_Target_1.x = isnan(1.0) ? _508 : (isnan(_508) ? 1.0 : min(_508, 1.0));
    SV_Target_1.y = isnan(1.0) ? _464 : (isnan(_464) ? 1.0 : min(_464, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _393 ? _308 : TEXCOORD_1.w;
    SV_Target_2.x = _300;
    SV_Target_2.y = _301;
    SV_Target_2.z = _302;
    SV_Target_2.w = _393 ? _308 : (float(floatBitsToUint(cbInstanceData._m0[_288 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _394;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _394;
    discard_exit();
}


