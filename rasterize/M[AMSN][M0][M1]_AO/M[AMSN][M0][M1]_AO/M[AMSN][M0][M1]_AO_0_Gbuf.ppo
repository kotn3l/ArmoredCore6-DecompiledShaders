#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_AO_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_AO_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_AO_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _124 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _125 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _130 = inversesqrt(dot(vec3(_123, _124, _125), vec3(_123, _124, _125)));
    float _137 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _138 = _137 * NORMAL.x;
    float _139 = _137 * NORMAL.y;
    float _140 = _137 * NORMAL.z;
    float _144 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _152;
    float _153;
    float _154;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _152 = (-0.0) - _138;
        _153 = (-0.0) - _139;
        _154 = (-0.0) - _140;
    }
    else
    {
        _152 = _138;
        _153 = _139;
        _154 = _140;
    }
    vec4 _174 = texture(sampler2D(M_AMSN_M0_M1_AO_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _180 = _174.x * cbMtdParam._m0[9u].x;
    float _181 = _174.y * cbMtdParam._m0[9u].y;
    float _182 = _174.z * cbMtdParam._m0[9u].z;
    vec4 _194 = texture(sampler2D(M_AMSN_M0_M1_AO_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _196 = _194.x;
    vec4 _208 = texture(sampler2D(M_AMSN_M0_M1_AO_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _212 = _208.z;
    float _217 = (_208.x * 2.0) + (-1.0);
    float _219 = (_208.y * 2.0) + (-1.0);
    float _220 = dot(vec2(_217, _219), vec2(_217, _219));
    float _338 = isnan(0.0) ? _220 : (isnan(_220) ? 0.0 : max(_220, 0.0));
    float _226 = sqrt(1.0 - (isnan(1.0) ? _338 : (isnan(_338) ? 1.0 : min(_338, 1.0))));
    float _231 = cbMtdParam._m0[10u].x + _208.w;
    float _234 = fma(_226, _152, fma(_219, _144 * TANGENT.x, (_130 * _123) * _217));
    float _237 = fma(_226, _153, fma(_219, _144 * TANGENT.y, (_130 * _124) * _217));
    float _240 = fma(_226, _154, fma(_219, _144 * TANGENT.z, (_130 * _125) * _217));
    float _244 = inversesqrt(dot(vec3(_234, _237, _240), vec3(_234, _237, _240)));
    float _349 = isnan(0.0) ? _212 : (isnan(_212) ? 0.0 : max(_212, 0.0));
    float _360 = isnan(0.0) ? _231 : (isnan(_231) ? 0.0 : max(_231, 0.0));
    float _371 = isnan(0.0) ? _180 : (isnan(_180) ? 0.0 : max(_180, 0.0));
    float _382 = isnan(0.0) ? _181 : (isnan(_181) ? 0.0 : max(_181, 0.0));
    float _393 = isnan(0.0) ? _182 : (isnan(_182) ? 0.0 : max(_182, 0.0));
    float _404 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    uint _265 = uint(roundEven(NORMAL.w)) * 13u;
    uint _268 = (_265 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _274 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _371 : (isnan(_371) ? 1.0 : min(_371, 1.0)))) * cbInstanceData._m0[_268].x;
    float _275 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _382 : (isnan(_382) ? 1.0 : min(_382, 1.0)))) * cbInstanceData._m0[_268].y;
    float _276 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _393 : (isnan(_393) ? 1.0 : min(_393, 1.0)))) * cbInstanceData._m0[_268].z;
    float _415 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _426 = isnan(0.0) ? _275 : (isnan(_275) ? 0.0 : max(_275, 0.0));
    float _437 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    uint _281 = _265 + 6u;
    bool _310 = cbMtdParam._m0[1u].z != 0.0;
    float _311 = _310 ? cbInstanceData._m0[_281].w : 0.0;
    SV_Target.x = ((_234 * 0.5) * _244) + 0.500488758087158203125;
    SV_Target.y = ((_237 * 0.5) * _244) + 0.500488758087158203125;
    SV_Target.z = ((_240 * 0.5) * _244) + 0.500488758087158203125;
    SV_Target.w = _311;
    SV_Target_1.x = isnan(1.0) ? _404 : (isnan(_404) ? 1.0 : min(_404, 1.0));
    SV_Target_1.y = isnan(1.0) ? _349 : (isnan(_349) ? 1.0 : min(_349, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _310 ? cbInstanceData._m0[_281].w : ((isnan(1.0) ? _360 : (isnan(_360) ? 1.0 : min(_360, 1.0))) * TEXCOORD.z);
    SV_Target_2.x = isnan(1.0) ? _415 : (isnan(_415) ? 1.0 : min(_415, 1.0));
    SV_Target_2.y = isnan(1.0) ? _426 : (isnan(_426) ? 1.0 : min(_426, 1.0));
    SV_Target_2.z = isnan(1.0) ? _437 : (isnan(_437) ? 1.0 : min(_437, 1.0));
    SV_Target_2.w = _310 ? cbInstanceData._m0[_281].w : (float(floatBitsToUint(cbInstanceData._m0[_265 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _311;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _311;
}


