#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_AO_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_AO_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_AO_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _137 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _138 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _139 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _144 = inversesqrt(dot(vec3(_137, _138, _139), vec3(_137, _138, _139)));
    float _151 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _152 = _151 * NORMAL.x;
    float _153 = _151 * NORMAL.y;
    float _154 = _151 * NORMAL.z;
    float _158 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _166;
    float _167;
    float _168;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _166 = (-0.0) - _152;
        _167 = (-0.0) - _153;
        _168 = (-0.0) - _154;
    }
    else
    {
        _166 = _152;
        _167 = _153;
        _168 = _154;
    }
    vec4 _188 = texture(sampler2D(M_AMSN_M0_M1_AO_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _194 = _188.x * cbMtdParam._m0[9u].x;
    float _195 = _188.y * cbMtdParam._m0[9u].y;
    float _196 = _188.z * cbMtdParam._m0[9u].z;
    vec4 _208 = texture(sampler2D(M_AMSN_M0_M1_AO_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _210 = _208.x;
    vec4 _222 = texture(sampler2D(M_AMSN_M0_M1_AO_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _226 = _222.z;
    float _231 = (_222.x * 2.0) + (-1.0);
    float _233 = (_222.y * 2.0) + (-1.0);
    float _234 = dot(vec2(_231, _233), vec2(_231, _233));
    float _446 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
    float _240 = sqrt(1.0 - (isnan(1.0) ? _446 : (isnan(_446) ? 1.0 : min(_446, 1.0))));
    float _245 = cbMtdParam._m0[10u].x + _222.w;
    float _248 = fma(_240, _166, fma(_233, _158 * TANGENT.x, (_144 * _137) * _231));
    float _251 = fma(_240, _167, fma(_233, _158 * TANGENT.y, (_144 * _138) * _231));
    float _254 = fma(_240, _168, fma(_233, _158 * TANGENT.z, (_144 * _139) * _231));
    float _258 = inversesqrt(dot(vec3(_248, _251, _254), vec3(_248, _251, _254)));
    float _457 = isnan(0.0) ? _226 : (isnan(_226) ? 0.0 : max(_226, 0.0));
    float _468 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _260 = isnan(1.0) ? _468 : (isnan(_468) ? 1.0 : min(_468, 1.0));
    float _479 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _261 = isnan(1.0) ? _479 : (isnan(_479) ? 1.0 : min(_479, 1.0));
    float _490 = isnan(0.0) ? _195 : (isnan(_195) ? 0.0 : max(_195, 0.0));
    float _262 = isnan(1.0) ? _490 : (isnan(_490) ? 1.0 : min(_490, 1.0));
    float _501 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _263 = isnan(1.0) ? _501 : (isnan(_501) ? 1.0 : min(_501, 1.0));
    float _512 = isnan(0.0) ? _210 : (isnan(_210) ? 0.0 : max(_210, 0.0));
    uint _266 = uint(roundEven(NORMAL.w));
    vec4 _271 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _273 = _271.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _337 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _523 = isnan(0.0) ? _337 : (isnan(_337) ? 0.0 : max(_337, 0.0));
        float _338 = isnan(1.0) ? _523 : (isnan(_523) ? 1.0 : min(_523, 1.0));
        float _342 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _534 = isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : max(_342, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _534 : (isnan(_534) ? 1.0 : min(_534, 1.0))) - _338)) + _338) < ((_273 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _371;
    uint _293;
    vec4 _298;
    float _305;
    float _306;
    float _307;
    float _308;
    float _312;
    vec4 _316;
    float _318;
    float _319;
    bool _330;
    for (;;)
    {
        _293 = _266 * 13u;
        _298 = cbInstanceData._m0[(_293 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _302 = (cbMtdParam._m0[0u].x * _261) * _298.x;
        float _303 = (cbMtdParam._m0[0u].y * _262) * _298.y;
        float _304 = (cbMtdParam._m0[0u].z * _263) * _298.z;
        float _545 = isnan(0.0) ? _302 : (isnan(_302) ? 0.0 : max(_302, 0.0));
        _305 = isnan(1.0) ? _545 : (isnan(_545) ? 1.0 : min(_545, 1.0));
        float _556 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
        _306 = isnan(1.0) ? _556 : (isnan(_556) ? 1.0 : min(_556, 1.0));
        float _567 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
        _307 = isnan(1.0) ? _567 : (isnan(_567) ? 1.0 : min(_567, 1.0));
        _308 = _260 * TEXCOORD.z;
        _312 = cbInstanceData._m0[_293 + 6u].w;
        float _313 = _273 + (-0.5);
        _316 = cbMtdParam._m0[1u];
        _318 = _316.y * _313;
        _319 = _313 * 0.999000012874603271484375;
        _330 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_330)
        {
            if ((cbInstanceData._m0[_293 + 7u].x + _319) < 0.5)
            {
                _371 = true;
                break;
            }
        }
        if ((_298.w < 1.0) && ((_298.w + _319) < 0.5))
        {
            _371 = true;
            break;
        }
        if ((_318 + 1.0) < _316.x)
        {
            _371 = true;
            break;
        }
        _371 = false;
        break;
    }
    if (_371)
    {
        discard_state = true;
    }
    bool _397 = cbMtdParam._m0[1u].z != 0.0;
    float _398 = _397 ? _312 : 0.0;
    SV_Target.x = ((_248 * 0.5) * _258) + 0.500488758087158203125;
    SV_Target.y = ((_251 * 0.5) * _258) + 0.500488758087158203125;
    SV_Target.z = ((_254 * 0.5) * _258) + 0.500488758087158203125;
    SV_Target.w = _398;
    SV_Target_1.x = isnan(1.0) ? _512 : (isnan(_512) ? 1.0 : min(_512, 1.0));
    SV_Target_1.y = isnan(1.0) ? _457 : (isnan(_457) ? 1.0 : min(_457, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _397 ? _312 : _308;
    SV_Target_2.x = _305;
    SV_Target_2.y = _306;
    SV_Target_2.z = _307;
    SV_Target_2.w = _397 ? _312 : (float(floatBitsToUint(cbInstanceData._m0[_293 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _398;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _398;
    discard_exit();
}


