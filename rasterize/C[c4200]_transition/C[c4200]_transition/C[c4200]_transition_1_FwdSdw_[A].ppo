#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_c4200_transition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_c4200_transition_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_c4200_transition_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D C_c4200_transition_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_c4200_transition_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D C_c4200_transition_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D C_c4200_transition_snp_0_Texture2D_12;
layout(set = 0, binding = 8) uniform texture2D C_c4200_transition_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D C_c4200_transition_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1425;
float _4106;
float _4107;
float _4108;
float _4109;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _212 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _213 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _214 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _220 = inversesqrt(dot(vec3(_212, _213, _214), vec3(_212, _213, _214)));
    float _227 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _228 = _227 * NORMAL.x;
    float _229 = _227 * NORMAL.y;
    float _230 = _227 * NORMAL.z;
    float _234 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _242;
    float _243;
    float _244;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _242 = (-0.0) - _228;
        _243 = (-0.0) - _229;
        _244 = (-0.0) - _230;
    }
    else
    {
        _242 = _228;
        _243 = _229;
        _244 = _230;
    }
    vec4 _258 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _261 = _258.x;
    float _270 = cbMtdParam._m0[18u].y * 0.3333333432674407958984375;
    float _275 = fract(abs(_270));
    float _287 = cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x;
    float _290 = (_287 * cbMtdParam._m0[24u].x) + TEXCOORD.x;
    float _291 = (_287 * cbMtdParam._m0[24u].y) + TEXCOORD.y;
    vec4 _314 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_7, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * ((_287 * cbMtdParam._m0[23u].x) + TEXCOORD.x)) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * ((cbMtdParam._m0[23u].y * _287) + TEXCOORD.y)) + cbTextureTilingScale._m0[10u].w));
    float _318 = cbPerFrame._m0[22u].x * 2.0;
    float _320 = _318 * cbMtdParam._m0[19u].w;
    float _323 = (_314.x * 0.5) + (-0.25);
    float _326 = (_314.y * 0.5) + (-0.25);
    float _327 = _326 * cbMtdParam._m0[18u].z;
    float _329 = (-0.0) - (cbMtdParam._m0[18u].z * _323);
    float _330 = fract(_320);
    float _332 = fract(_320 + 0.5);
    float _333 = _330 * _329;
    float _334 = _327 * _330;
    float _337 = _332 * _329;
    float _338 = _327 * _332;
    float _344 = abs((_330 * 2.0) + (-1.0));
    vec4 _361 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_9, SS_DiffuseMap), vec2(((_333 + _290) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, ((_334 + _291) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _363 = _361.x;
    float _374 = (0.25 - ((((_270 >= ((-0.0) - _270)) ? _275 : ((-0.0) - _275)) * 3.0) - _261)) + ((((texture(sampler2D(C_c4200_transition_snp_0_Texture2D_9, SS_DiffuseMap), vec2(((_337 + _290) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, ((_338 + _291) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w)).x - _363) * _344) + _363) * 1.35000002384185791015625);
    float _377 = abs(_374 * cbMtdParam._m0[19u].z);
    float _381 = (((_377 * cbMtdParam._m0[19u].y) - _261) * _377) + _261;
    float _4118 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _383 = isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0));
    float _394 = (cbMtdParam._m0[23u].z * _287) + TEXCOORD.x;
    float _395 = (cbMtdParam._m0[23u].w * _287) + TEXCOORD.y;
    vec4 _415 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_333 + _394) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_334 + _395) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _417 = _415.x;
    float _418 = _415.y;
    float _419 = _415.z;
    vec4 _420 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_337 + _394) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_338 + _395) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _434 = (((_420.x - _417) * _344) + _417) * cbMtdParam._m0[14u].x;
    float _435 = (((_420.y - _418) * _344) + _418) * cbMtdParam._m0[14u].y;
    float _436 = (((_420.z - _419) * _344) + _419) * cbMtdParam._m0[14u].z;
    float _440 = _434 - (_434 * _383);
    float _441 = _435 - (_435 * _383);
    float _442 = _436 - (_436 * _383);
    vec4 _460 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _465 = ceil(_374);
    float _4129 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
    float _466 = isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0));
    float _480 = (((cbMtdParam._m0[9u].x - cbMtdParam._m0[15u].x) * _466) + cbMtdParam._m0[15u].x) * _460.x;
    float _482 = (((cbMtdParam._m0[9u].y - cbMtdParam._m0[15u].y) * _466) + cbMtdParam._m0[15u].y) * _460.y;
    float _484 = (((cbMtdParam._m0[9u].z - cbMtdParam._m0[15u].z) * _466) + cbMtdParam._m0[15u].z) * _460.z;
    float _488 = exp2(log2(_383) * cbMtdParam._m0[19u].x);
    float _495 = (_488 * (_440 - _480)) + _480;
    float _496 = (_488 * (_441 - _482)) + _482;
    float _497 = (_488 * (_442 - _484)) + _484;
    vec4 _512 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _516 = _512.z;
    float _519 = (_512.x * 2.0) + (-1.0);
    float _520 = (_512.y * 2.0) + (-1.0);
    float _521 = dot(vec2(_519, _520), vec2(_519, _520));
    float _4140 = isnan(0.0) ? _521 : (isnan(_521) ? 0.0 : max(_521, 0.0));
    float _526 = sqrt(1.0 - (isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0))));
    float _537 = (cbMtdParam._m0[24u].z * _287) + TEXCOORD.x;
    float _538 = (cbMtdParam._m0[24u].w * _287) + TEXCOORD.y;
    float _544 = _318 * cbMtdParam._m0[20u].z;
    float _545 = _326 * cbMtdParam._m0[20u].y;
    float _547 = (-0.0) - (cbMtdParam._m0[20u].y * _323);
    float _548 = fract(_544);
    float _550 = fract(_544 + 0.5);
    float _561 = abs((_548 * 2.0) + (-1.0));
    vec4 _577 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_11, SS_DiffuseMap), vec2((((_548 * _547) + _537) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_545 * _548) + _538) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _579 = _577.x;
    float _580 = _577.y;
    float _581 = _577.z;
    vec4 _582 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_11, SS_DiffuseMap), vec2((((_550 * _547) + _537) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_545 * _550) + _538) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _596 = (((_582.x - _579) * _561) + _579) * cbMtdParam._m0[16u].x;
    float _597 = (((_582.y - _580) * _561) + _580) * cbMtdParam._m0[16u].y;
    float _598 = (((_582.z - _581) * _561) + _581) * cbMtdParam._m0[16u].z;
    float _602 = _596 - (_596 * _466);
    float _603 = _597 - (_597 * _466);
    float _604 = _598 - (_598 * _466);
    float _621 = _318 * cbMtdParam._m0[21u].w;
    float _622 = _326 * cbMtdParam._m0[22u].x;
    float _624 = (-0.0) - (cbMtdParam._m0[22u].x * _323);
    float _625 = fract(_621);
    float _627 = fract(_621 + 0.5);
    float _638 = abs((_625 * 2.0) + (-1.0));
    vec4 _654 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_625 * _624) + TEXCOORD.x) * cbTextureTilingScale._m0[9u].x) + cbTextureTilingScale._m0[9u].z, (((_622 * _625) + TEXCOORD.y) * cbTextureTilingScale._m0[9u].y) + cbTextureTilingScale._m0[9u].w));
    vec4 _659 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_627 * _624) + TEXCOORD.x) * cbTextureTilingScale._m0[9u].x) + cbTextureTilingScale._m0[9u].z, (((_622 * _627) + TEXCOORD.y) * cbTextureTilingScale._m0[9u].y) + cbTextureTilingScale._m0[9u].w));
    float _670 = ((_659.x - _654.x) * _638) + _654.x;
    float _677 = exp2(log2(_670 * cbMtdParam._m0[21u].z) * cbMtdParam._m0[21u].y);
    float _678 = isnan(cbMtdParam._m0[21u].x) ? _677 : (isnan(_677) ? cbMtdParam._m0[21u].x : max(_677, cbMtdParam._m0[21u].x));
    float _679 = isnan(cbMtdParam._m0[20u].x) ? _678 : (isnan(_678) ? cbMtdParam._m0[20u].x : min(_678, cbMtdParam._m0[20u].x));
    float _700 = _318 * cbMtdParam._m0[17u].z;
    float _701 = _326 * cbMtdParam._m0[17u].w;
    float _703 = (-0.0) - (cbMtdParam._m0[17u].w * _323);
    float _704 = fract(_700);
    float _706 = fract(_700 + 0.5);
    float _717 = abs((_704 * 2.0) + (-1.0));
    vec4 _734 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_704 * _703) + TEXCOORD.x) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_701 * _704) + TEXCOORD.y) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _736 = _734.x;
    float _737 = _734.y;
    float _738 = _734.z;
    vec4 _739 = texture(sampler2D(C_c4200_transition_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_706 * _703) + TEXCOORD.x) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_701 * _706) + TEXCOORD.y) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _782 = fma(_526, _242, fma(_520, _234 * TANGENT.x, (_220 * _212) * _519));
    float _785 = fma(_526, _243, fma(_520, _234 * TANGENT.y, (_220 * _213) * _519));
    float _788 = fma(_526, _244, fma(_520, _234 * TANGENT.z, (_220 * _214) * _519));
    float _792 = inversesqrt(dot(vec3(_782, _785, _788), vec3(_782, _785, _788)));
    float _793 = _792 * _782;
    float _794 = _792 * _785;
    float _795 = _792 * _788;
    float _4161 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _796 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
    float _4172 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _4183 = isnan(0.0) ? _496 : (isnan(_496) ? 0.0 : max(_496, 0.0));
    float _4194 = isnan(0.0) ? _497 : (isnan(_497) ? 0.0 : max(_497, 0.0));
    float _4205 = isnan(0.0) ? cbMtdParam._m0[17u].x : (isnan(cbMtdParam._m0[17u].x) ? 0.0 : max(cbMtdParam._m0[17u].x, 0.0));
    float _800 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
    float _816 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _856 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _866 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _856);
    float _867 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _856);
    float _868 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _856);
    float _872 = inversesqrt(dot(vec3(_866, _867, _868), vec3(_866, _867, _868)));
    float _873 = _866 * _872;
    float _874 = _867 * _872;
    float _875 = _868 * _872;
    vec4 _880 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _882 = _880.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1105 = sqrt(((_866 * _866) + (_867 * _867)) + (_868 * _868));
        float _1111 = (cbMatDynParam._m0[5u].x * _1105) + cbMatDynParam._m0[5u].y;
        float _4216 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
        float _1112 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
        float _1116 = (cbMatDynParam._m0[5u].z * _1105) + cbMatDynParam._m0[5u].w;
        float _4227 = isnan(0.0) ? _1116 : (isnan(_1116) ? 0.0 : max(_1116, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0))) - _1112)) + _1112) < ((_882 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _894 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _895 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _897 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _899 = _897.w;
    float _919 = fma(_795, cbSceneParam._m0[5u].z, fma(_794, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _793));
    float _922 = fma(_795, cbSceneParam._m0[6u].z, fma(_794, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _793));
    float _925 = fma(_795, cbSceneParam._m0[7u].z, fma(_794, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _793));
    vec4 _927 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _938 = (((_927.y - _796) + (_927.w * _796)) * cbMtdParam._m0[3u].x) + _796;
    uint _951 = uint(roundEven(NORMAL.w)) * 13u;
    uint _952 = _951 + 9u;
    uint _953 = _952 + uint(cbMatDynParam._m0[0u].w);
    float _959 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0)))) * cbInstanceData._m0[_953].x;
    float _960 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0)))) * cbInstanceData._m0[_953].y;
    float _961 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0)))) * cbInstanceData._m0[_953].z;
    float _4238 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
    float _962 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
    float _4249 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    float _963 = isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0));
    float _4260 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
    float _964 = isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0));
    vec4 _965 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _970 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _981 = (((_970.x - _800) + (_970.w * _800)) * cbMtdParam._m0[3u].x) + _800;
    float _994 = (cbMtdParam._m0[3u].x * (((_962 * _899) - _962) + _965.x)) + _962;
    float _995 = (cbMtdParam._m0[3u].x * (((_963 * _899) - _963) + _965.y)) + _963;
    float _996 = (cbMtdParam._m0[3u].x * (((_964 * _899) - _964) + _965.z)) + _964;
    float _997 = 1.0 - _981;
    float _998 = _997 * _994;
    float _999 = _997 * _995;
    float _1000 = _997 * _996;
    float _1005 = (_994 + (-0.039999999105930328369140625)) * _981;
    float _1006 = (_995 + (-0.039999999105930328369140625)) * _981;
    float _1007 = (_996 + (-0.039999999105930328369140625)) * _981;
    float _1008 = _1005 + 0.039999999105930328369140625;
    float _1010 = _1006 + 0.039999999105930328369140625;
    float _1011 = _1007 + 0.039999999105930328369140625;
    vec4 _1020 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _894, cbSceneParam._m0[86u].y * _895));
    float _1023 = _1020.x * TEXCOORD_4;
    float _1024 = dot(vec3(_793, _794, _795), vec3(_873, _874, _875));
    float _1027 = _1024 * 2.0;
    float _1031 = (_1027 * _793) - _873;
    float _1032 = (_1027 * _794) - _874;
    float _1033 = (_1027 * _795) - _875;
    float _1037 = abs(dot(vec3(_873, _874, _875), vec3(_793, _794, _795)));
    float _4271 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
    float _1039 = sqrt(_938);
    float _1051 = exp2((_1039 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1039 * 3.0));
    float _1057 = (1.0 - _1051) * ((_1039 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1058 = _1051 * _1039;
    float _1086 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1090 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1094 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1424;
    float _1426;
    float _1427;
    float _1428;
    float _1429;
    float _1430;
    float _1431;
    float _1432;
    float _1433;
    float _1434;
    float _1435;
    float _1436;
    float _1437;
    float _1438;
    float _1439;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1150 = fma(_1094, cbModelParam._m0[26u].z, fma(_1090, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1086));
        float _1154 = fma(_1094, cbModelParam._m0[27u].z, fma(_1090, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1086));
        float _1158 = fma(_1094, cbModelParam._m0[28u].z, fma(_1090, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1086));
        float _1182 = _1086 + _793;
        float _1183 = _1090 + _794;
        float _1184 = _1094 + _795;
        float _1194 = fma(_1184, cbModelParam._m0[26u].z, fma(_1183, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1182)) - _1150;
        float _1195 = fma(_1184, cbModelParam._m0[27u].z, fma(_1183, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1182)) - _1154;
        float _1196 = fma(_1184, cbModelParam._m0[28u].z, fma(_1183, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1182)) - _1158;
        float _1200 = inversesqrt(dot(vec3(_1194, _1195, _1196), vec3(_1194, _1195, _1196)));
        float _1213 = ((_1200 * _1194) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1150 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1214 = ((_1200 * _1195) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1154 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1215 = ((_1200 * _1196) / cbModelParam._m0[34u].z) + ((((((_1158 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1218 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1213, _1214, _1215), 0.0);
        vec4 _1225 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1213, _1214, _1215), 0.0);
        vec4 _1232 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1213, _1214, _1215), 0.0);
        vec4 _1239 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1213, _1214, _1215), 0.0);
        float _1252 = exp2((_1218.w + (-0.5)) * 20.0) * 2.0;
        float _1253 = _1252 * (_1218.x + (-0.5));
        float _1254 = _1252 * (_1218.y + (-0.5));
        float _1255 = _1252 * (_1218.z + (-0.5));
        float _1262 = exp2((_1225.w + (-0.5)) * 20.0) * 2.0;
        float _1263 = _1262 * (_1225.x + (-0.5));
        float _1264 = _1262 * (_1225.y + (-0.5));
        float _1265 = _1262 * (_1225.z + (-0.5));
        float _1272 = exp2((_1232.w + (-0.5)) * 20.0) * 2.0;
        float _1273 = _1272 * (_1232.x + (-0.5));
        float _1274 = _1272 * (_1232.y + (-0.5));
        float _1275 = _1272 * (_1232.z + (-0.5));
        float _1282 = exp2((_1239.w + (-0.5)) * 20.0) * 2.0;
        float _1283 = _1282 * (_1239.x + (-0.5));
        float _1284 = _1282 * (_1239.y + (-0.5));
        float _1285 = _1282 * (_1239.z + (-0.5));
        float _1286 = isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0));
        float _1287 = isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0));
        float _1288 = isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0));
        float _1289 = _1253 * 0.5;
        float _1290 = _1263 * 0.5;
        float _1291 = _1273 * 0.5;
        float _1292 = dot(vec3(_1289, _1290, _1291), vec3(_1289, _1290, _1291));
        float _1297 = (_1292 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1292);
        float _1306 = (dot(vec3(_793, _794, _795), vec3(_1297 * _1289, _1297 * _1290, _1297 * _1291)) + 1.0) * 0.5;
        float _4297 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        float _1316 = sqrt(((_1290 * _1290) + (_1289 * _1289)) + (_1291 * _1291)) / (_1286 + 9.9999997473787516355514526367188e-06);
        float _4308 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
        float _1317 = isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0));
        float _1318 = _1317 * 2.0;
        float _1322 = (1.0 - _1317) / (_1317 + 1.0);
        float _4319 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1323 = isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0));
        float _1332 = ((((1.0 - _1323) * (_1318 + 2.0)) * exp2(log2(isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0))) * (_1318 + 1.0))) + _1323) * _1286;
        float _1333 = _1254 * 0.5;
        float _1334 = _1264 * 0.5;
        float _1335 = _1274 * 0.5;
        float _1336 = dot(vec3(_1333, _1334, _1335), vec3(_1333, _1334, _1335));
        float _1341 = (_1336 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1336);
        float _1349 = (dot(vec3(_793, _794, _795), vec3(_1341 * _1333, _1341 * _1334, _1341 * _1335)) + 1.0) * 0.5;
        float _4330 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1358 = sqrt(((_1334 * _1334) + (_1333 * _1333)) + (_1335 * _1335)) / (_1287 + 9.9999997473787516355514526367188e-06);
        float _4341 = isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0));
        float _1359 = isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0));
        float _1360 = _1359 * 2.0;
        float _1364 = (1.0 - _1359) / (_1359 + 1.0);
        float _4352 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1365 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
        float _1374 = ((((1.0 - _1365) * (_1360 + 2.0)) * exp2(log2(isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0))) * (_1360 + 1.0))) + _1365) * _1287;
        float _1375 = _1255 * 0.5;
        float _1376 = _1265 * 0.5;
        float _1377 = _1275 * 0.5;
        float _1378 = dot(vec3(_1375, _1376, _1377), vec3(_1375, _1376, _1377));
        float _1383 = (_1378 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1378);
        float _1391 = (dot(vec3(_793, _794, _795), vec3(_1383 * _1375, _1383 * _1376, _1383 * _1377)) + 1.0) * 0.5;
        float _4363 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
        float _1400 = sqrt(((_1376 * _1376) + (_1375 * _1375)) + (_1377 * _1377)) / (_1288 + 9.9999997473787516355514526367188e-06);
        float _4374 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1401 = isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0));
        float _1402 = _1401 * 2.0;
        float _1406 = (1.0 - _1401) / (_1401 + 1.0);
        float _4385 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1407 = isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0));
        float _1416 = ((((1.0 - _1407) * (_1402 + 2.0)) * exp2(log2(isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0))) * (_1402 + 1.0))) + _1407) * _1288;
        _1424 = _1255;
        _1426 = _1254;
        _1427 = _1253;
        _1428 = _1265;
        _1429 = _1264;
        _1430 = _1263;
        _1431 = _1275;
        _1432 = _1274;
        _1433 = _1273;
        _1434 = _1288;
        _1435 = _1287;
        _1436 = _1286;
        _1437 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0)));
        _1438 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1374 : (isnan(_1374) ? 0.0 : max(_1374, 0.0)));
        _1439 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0)));
    }
    else
    {
        _1424 = _1425;
        _1426 = _1425;
        _1427 = _1425;
        _1428 = _1425;
        _1429 = _1425;
        _1430 = _1425;
        _1431 = _1425;
        _1432 = _1425;
        _1433 = _1425;
        _1434 = _1425;
        _1435 = _1425;
        _1436 = _1425;
        _1437 = 0.0;
        _1438 = 0.0;
        _1439 = 0.0;
    }
    float _1737;
    float _1738;
    float _1739;
    float _1740;
    float _1741;
    float _1742;
    float _1743;
    float _1744;
    float _1745;
    float _1746;
    float _1747;
    float _1748;
    float _1749;
    float _1750;
    float _1751;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1468 = fma(_1094, cbModelParam._m0[30u].z, fma(_1090, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1086));
        float _1472 = fma(_1094, cbModelParam._m0[31u].z, fma(_1090, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1086));
        float _1476 = fma(_1094, cbModelParam._m0[32u].z, fma(_1090, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1086));
        float _1499 = _1086 + _793;
        float _1500 = _1090 + _794;
        float _1501 = _1094 + _795;
        float _1511 = fma(_1501, cbModelParam._m0[30u].z, fma(_1500, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1499)) - _1468;
        float _1512 = fma(_1501, cbModelParam._m0[31u].z, fma(_1500, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1499)) - _1472;
        float _1513 = fma(_1501, cbModelParam._m0[32u].z, fma(_1500, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1499)) - _1476;
        float _1517 = inversesqrt(dot(vec3(_1511, _1512, _1513), vec3(_1511, _1512, _1513)));
        float _1530 = ((_1517 * _1511) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1468 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1531 = ((_1517 * _1512) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1472 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1532 = ((_1517 * _1513) / cbModelParam._m0[35u].z) + ((((((_1476 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1534 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1530, _1531, _1532), 0.0);
        vec4 _1541 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1530, _1531, _1532), 0.0);
        vec4 _1548 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1530, _1531, _1532), 0.0);
        vec4 _1555 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1530, _1531, _1532), 0.0);
        float _1567 = exp2((_1534.w + (-0.5)) * 20.0) * 2.0;
        float _1568 = _1567 * (_1534.x + (-0.5));
        float _1569 = _1567 * (_1534.y + (-0.5));
        float _1570 = _1567 * (_1534.z + (-0.5));
        float _1577 = exp2((_1541.w + (-0.5)) * 20.0) * 2.0;
        float _1578 = _1577 * (_1541.x + (-0.5));
        float _1579 = _1577 * (_1541.y + (-0.5));
        float _1580 = _1577 * (_1541.z + (-0.5));
        float _1587 = exp2((_1548.w + (-0.5)) * 20.0) * 2.0;
        float _1588 = _1587 * (_1548.x + (-0.5));
        float _1589 = _1587 * (_1548.y + (-0.5));
        float _1590 = _1587 * (_1548.z + (-0.5));
        float _1597 = exp2((_1555.w + (-0.5)) * 20.0) * 2.0;
        float _1598 = _1597 * (_1555.x + (-0.5));
        float _1599 = _1597 * (_1555.y + (-0.5));
        float _1600 = _1597 * (_1555.z + (-0.5));
        float _1601 = isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0));
        float _1602 = isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0));
        float _1603 = isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0));
        float _1604 = _1568 * 0.5;
        float _1605 = _1578 * 0.5;
        float _1606 = _1588 * 0.5;
        float _1607 = dot(vec3(_1604, _1605, _1606), vec3(_1604, _1605, _1606));
        float _1612 = (_1607 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1607);
        float _1620 = (dot(vec3(_793, _794, _795), vec3(_1612 * _1604, _1612 * _1605, _1612 * _1606)) + 1.0) * 0.5;
        float _4426 = isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0));
        float _1629 = sqrt(((_1605 * _1605) + (_1604 * _1604)) + (_1606 * _1606)) / (_1601 + 9.9999997473787516355514526367188e-06);
        float _4437 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1630 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
        float _1631 = _1630 * 2.0;
        float _1635 = (1.0 - _1630) / (_1630 + 1.0);
        float _4448 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1636 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
        float _1645 = ((((1.0 - _1636) * (_1631 + 2.0)) * exp2(log2(isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0))) * (_1631 + 1.0))) + _1636) * _1601;
        float _1646 = _1569 * 0.5;
        float _1647 = _1579 * 0.5;
        float _1648 = _1589 * 0.5;
        float _1649 = dot(vec3(_1646, _1647, _1648), vec3(_1646, _1647, _1648));
        float _1654 = (_1649 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1649);
        float _1662 = (dot(vec3(_793, _794, _795), vec3(_1654 * _1646, _1654 * _1647, _1654 * _1648)) + 1.0) * 0.5;
        float _4459 = isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0));
        float _1671 = sqrt(((_1647 * _1647) + (_1646 * _1646)) + (_1648 * _1648)) / (_1602 + 9.9999997473787516355514526367188e-06);
        float _4470 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
        float _1672 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
        float _1673 = _1672 * 2.0;
        float _1677 = (1.0 - _1672) / (_1672 + 1.0);
        float _4481 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
        float _1678 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
        float _1687 = ((((1.0 - _1678) * (_1673 + 2.0)) * exp2(log2(isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0))) * (_1673 + 1.0))) + _1678) * _1602;
        float _1688 = _1570 * 0.5;
        float _1689 = _1580 * 0.5;
        float _1690 = _1590 * 0.5;
        float _1691 = dot(vec3(_1688, _1689, _1690), vec3(_1688, _1689, _1690));
        float _1696 = (_1691 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1691);
        float _1704 = (dot(vec3(_793, _794, _795), vec3(_1696 * _1688, _1696 * _1689, _1696 * _1690)) + 1.0) * 0.5;
        float _4492 = isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0));
        float _1713 = sqrt(((_1689 * _1689) + (_1688 * _1688)) + (_1690 * _1690)) / (_1603 + 9.9999997473787516355514526367188e-06);
        float _4503 = isnan(0.0) ? _1713 : (isnan(_1713) ? 0.0 : max(_1713, 0.0));
        float _1714 = isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0));
        float _1715 = _1714 * 2.0;
        float _1719 = (1.0 - _1714) / (_1714 + 1.0);
        float _4514 = isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0));
        float _1720 = isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0));
        float _1729 = ((((1.0 - _1720) * (_1715 + 2.0)) * exp2(log2(isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0))) * (_1715 + 1.0))) + _1720) * _1603;
        _1737 = _1570;
        _1738 = _1569;
        _1739 = _1568;
        _1740 = _1580;
        _1741 = _1579;
        _1742 = _1578;
        _1743 = _1590;
        _1744 = _1589;
        _1745 = _1588;
        _1746 = _1603;
        _1747 = _1602;
        _1748 = _1601;
        _1749 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0)));
        _1750 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0)));
        _1751 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1729 : (isnan(_1729) ? 0.0 : max(_1729, 0.0)));
    }
    else
    {
        _1737 = _1425;
        _1738 = _1425;
        _1739 = _1425;
        _1740 = _1425;
        _1741 = _1425;
        _1742 = _1425;
        _1743 = _1425;
        _1744 = _1425;
        _1745 = _1425;
        _1746 = _1425;
        _1747 = _1425;
        _1748 = _1425;
        _1749 = 0.0;
        _1750 = 0.0;
        _1751 = 0.0;
    }
    float _1761 = (cbModelParam._m0[1u].x * (_1749 - _1437)) + _1437;
    float _1762 = (cbModelParam._m0[1u].x * (_1750 - _1438)) + _1438;
    float _1763 = (cbModelParam._m0[1u].x * (_1751 - _1439)) + _1439;
    float _1784 = fma(_1763, cbSceneParam._m0[89u].z, fma(_1762, cbSceneParam._m0[89u].y, _1761 * cbSceneParam._m0[89u].x));
    float _1787 = fma(_1763, cbSceneParam._m0[90u].z, fma(_1762, cbSceneParam._m0[90u].y, _1761 * cbSceneParam._m0[90u].x));
    float _1790 = fma(_1763, cbSceneParam._m0[91u].z, fma(_1762, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1761));
    float _1805 = _1031 * 0.5;
    float _1806 = _1032 * 0.5;
    float _1807 = _1033 * 0.5;
    float _1808 = dot(vec4(_1805, _1806, _1807, 1.0), vec4(_1739, _1742, _1745, _1748));
    float _1811 = dot(vec4(_1805, _1806, _1807, 1.0), vec4(_1738, _1741, _1744, _1747));
    float _1814 = dot(vec4(_1805, _1806, _1807, 1.0), vec4(_1737, _1740, _1743, _1746));
    float _1848;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1821 = dot(vec4(_1805, _1806, _1807, 1.0), vec4(_1424, _1428, _1431, _1434));
        float _1825 = dot(vec4(_1805, _1806, _1807, 1.0), vec4(_1426, _1429, _1432, _1435));
        float _1829 = dot(vec4(_1805, _1806, _1807, 1.0), vec4(_1427, _1430, _1433, _1436));
        float _1836 = dot(vec4(cbModelParam._m0[39u]), vec4(_1805, _1806, _1807, 1.0));
        _1848 = dot(vec3(isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0)), isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0)), isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1836) ? 0.0 : (isnan(0.0) ? _1836 : max(0.0, _1836))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1848 = 1.0;
    }
    float _1859;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1850 = dot(vec4(cbModelParam._m0[40u]), vec4(_1805, _1806, _1807, 1.0));
        _1859 = dot(vec3(isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0)), isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0)), isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1850) ? 0.0 : (isnan(0.0) ? _1850 : max(0.0, _1850))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1859 = 1.0;
    }
    float _1863 = (_1859 * cbModelParam._m0[1u].x) + (_1848 * (1.0 - cbModelParam._m0[1u].x));
    float _1873 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _938);
    float _1874 = isnan(_1873) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1873 : min(cbModelParam._m0[25u].z, _1873));
    float _1954;
    float _1956;
    float _1958;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1921 = fma(_1094, cbModelParam._m0[13u].z, fma(_1090, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1086)) + cbModelParam._m0[13u].w;
        float _1925 = fma(_1094, cbModelParam._m0[14u].z, fma(_1090, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1086)) + cbModelParam._m0[14u].w;
        float _1929 = fma(_1094, cbModelParam._m0[15u].z, fma(_1090, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1086)) + cbModelParam._m0[15u].w;
        float _1932 = fma(_1033, cbModelParam._m0[13u].z, fma(_1032, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1031));
        float _1935 = fma(_1033, cbModelParam._m0[14u].z, fma(_1032, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1031));
        float _1938 = fma(_1033, cbModelParam._m0[15u].z, fma(_1032, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1031));
        float _1966;
        if (_1932 > 0.0)
        {
            _1966 = abs((1.0 - _1921) / _1932);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1932 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1921 + 1.0) / _1932);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1966 = frontier_phi_19_17_ladder;
        }
        float _2137;
        if (_1935 > 0.0)
        {
            _2137 = abs((1.0 - _1925) / _1935);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1935 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1925 + 1.0) / _1935);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2137 = frontier_phi_28_24_ladder;
        }
        float _2431;
        if (_1938 > 0.0)
        {
            _2431 = abs((1.0 - _1929) / _1938);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1938 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1929 + 1.0) / _1938);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2431 = frontier_phi_40_35_ladder;
        }
        float _2433 = isnan(_2137) ? _1966 : (isnan(_1966) ? _2137 : min(_1966, _2137));
        float _2434 = isnan(_2431) ? _2433 : (isnan(_2433) ? _2431 : min(_2433, _2431));
        float _2438 = (_2434 * _1932) + _1921;
        float _2439 = (_2434 * _1935) + _1925;
        float _2440 = (_2434 * _1938) + _1929;
        float _2441 = _2434 * 9.9999997473787516355514526367188e-05;
        float _2443 = (-1.0) - _2441;
        float _2445 = _2441 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2440 > _2445) || ((_2440 < _2443) || ((_2439 > _2445) || ((_2439 < _2443) || ((_2438 < _2443) || (_2438 > _2445))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2585 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2440, cbModelParam._m0[9u].z, fma(_2439, cbModelParam._m0[9u].y, _2438 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2440, cbModelParam._m0[10u].z, fma(_2439, cbModelParam._m0[10u].y, _2438 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2440, cbModelParam._m0[11u].z, fma(_2439, cbModelParam._m0[11u].y, _2438 * cbModelParam._m0[11u].x))), _1874);
            frontier_phi_18_40_ladder = _2585.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2585.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2585.x * cbModelParam._m0[1u].y;
        }
        _1954 = frontier_phi_18_40_ladder_2;
        _1956 = frontier_phi_18_40_ladder_1;
        _1958 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1942 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1031, _1032, _1033), _1874);
        _1954 = _1942.x * cbModelParam._m0[1u].y;
        _1956 = _1942.y * cbModelParam._m0[1u].y;
        _1958 = _1942.z * cbModelParam._m0[1u].y;
    }
    float _1962 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _938);
    float _1963 = isnan(_1962) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1962 : min(cbModelParam._m0[25u].w, _1962));
    float _2052;
    float _2054;
    float _2056;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2016 = fma(_1094, cbModelParam._m0[21u].z, fma(_1090, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1086)) + cbModelParam._m0[21u].w;
        float _2020 = fma(_1094, cbModelParam._m0[22u].z, fma(_1090, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1086)) + cbModelParam._m0[22u].w;
        float _2024 = fma(_1094, cbModelParam._m0[23u].z, fma(_1090, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1086)) + cbModelParam._m0[23u].w;
        float _2027 = fma(_1033, cbModelParam._m0[21u].z, fma(_1032, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1031));
        float _2030 = fma(_1033, cbModelParam._m0[22u].z, fma(_1032, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1031));
        float _2033 = fma(_1033, cbModelParam._m0[23u].z, fma(_1032, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1031));
        float _2142;
        if (_2027 > 0.0)
        {
            _2142 = abs((1.0 - _2016) / _2027);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2027 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2016 + 1.0) / _2027);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2142 = frontier_phi_30_26_ladder;
        }
        float _2458;
        if (_2030 > 0.0)
        {
            _2458 = abs((1.0 - _2020) / _2030);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_2030 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_2020 + 1.0) / _2030);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2458 = frontier_phi_42_37_ladder;
        }
        float _2796;
        if (_2033 > 0.0)
        {
            _2796 = abs((1.0 - _2024) / _2033);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_2033 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_2024 + 1.0) / _2033);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2796 = frontier_phi_52_49_ladder;
        }
        float _2798 = isnan(_2458) ? _2142 : (isnan(_2142) ? _2458 : min(_2142, _2458));
        float _2799 = isnan(_2796) ? _2798 : (isnan(_2798) ? _2796 : min(_2798, _2796));
        float _2803 = (_2799 * _2027) + _2016;
        float _2804 = (_2799 * _2030) + _2020;
        float _2805 = (_2799 * _2033) + _2024;
        float _2806 = _2799 * 9.9999997473787516355514526367188e-05;
        float _2807 = (-1.0) - _2806;
        float _2809 = _2806 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2805 > _2809) || ((_2805 < _2807) || ((_2804 > _2809) || ((_2804 < _2807) || ((_2803 < _2807) || (_2803 > _2809))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2927 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2805, cbModelParam._m0[17u].z, fma(_2804, cbModelParam._m0[17u].y, _2803 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2805, cbModelParam._m0[18u].z, fma(_2804, cbModelParam._m0[18u].y, _2803 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2805, cbModelParam._m0[19u].z, fma(_2804, cbModelParam._m0[19u].y, _2803 * cbModelParam._m0[19u].x))), _1963);
            frontier_phi_27_52_ladder = _2927.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2927.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2927.x * cbModelParam._m0[1u].z;
        }
        _2052 = frontier_phi_27_52_ladder_2;
        _2054 = frontier_phi_27_52_ladder_1;
        _2056 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _2036 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1031, _1032, _1033), _1963);
        _2052 = _2036.x * cbModelParam._m0[1u].z;
        _2054 = _2036.y * cbModelParam._m0[1u].z;
        _2056 = _2036.z * cbModelParam._m0[1u].z;
    }
    float _2069 = (((_1057 * _1008) + _1058) * _1023) * ((cbModelParam._m0[1u].w * (_2052 - _1954)) + _1954);
    float _2071 = (((_1057 * _1010) + _1058) * _1023) * ((cbModelParam._m0[1u].w * (_2054 - _1956)) + _1956);
    float _2073 = (((_1057 * _1011) + _1058) * _1023) * ((cbModelParam._m0[1u].w * (_2056 - _1958)) + _1958);
    float _2076 = fma(_2073, cbSceneParam._m0[89u].z, fma(_2071, cbSceneParam._m0[89u].y, _2069 * cbSceneParam._m0[89u].x));
    float _2079 = fma(_2073, cbSceneParam._m0[90u].z, fma(_2071, cbSceneParam._m0[90u].y, _2069 * cbSceneParam._m0[90u].x));
    float _2082 = fma(_2073, cbSceneParam._m0[91u].z, fma(_2071, cbSceneParam._m0[91u].y, _2069 * cbSceneParam._m0[91u].x));
    float _2116 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2120 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2124 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2128 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2129 = _2116 / _2128;
    float _2130 = _2120 / _2128;
    float _2131 = _2124 / _2128;
    float _2277;
    float _2278;
    float _2279;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2158 = ((uint(_2131 > cbSceneParam._m0[59u].y) + uint(_2131 > cbSceneParam._m0[59u].x)) + uint(_2131 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2159 = _2158 + 43u;
        uint _2167 = _2158 + 44u;
        uint _2175 = _2158 + 45u;
        uint _2183 = _2158 + 46u;
        float _2194 = fma(_2128, cbSceneParam._m0[_2159].w, fma(_2124, cbSceneParam._m0[_2159].z, fma(_2120, cbSceneParam._m0[_2159].y, _2116 * cbSceneParam._m0[_2159].x)));
        float _2198 = fma(_2128, cbSceneParam._m0[_2167].w, fma(_2124, cbSceneParam._m0[_2167].z, fma(_2120, cbSceneParam._m0[_2167].y, _2116 * cbSceneParam._m0[_2167].x)));
        float _2206 = fma(_2128, cbSceneParam._m0[_2183].w, fma(_2124, cbSceneParam._m0[_2183].z, fma(_2120, cbSceneParam._m0[_2183].y, _2116 * cbSceneParam._m0[_2183].x)));
        float _2211 = cbSceneParam._m0[33u].z * _2206;
        float _2213 = cbSceneParam._m0[33u].w * _2206;
        float _2216 = fma(_2128, cbSceneParam._m0[_2175].w, fma(_2124, cbSceneParam._m0[_2175].z, fma(_2120, cbSceneParam._m0[_2175].y, _2116 * cbSceneParam._m0[_2175].x))) / _2206;
        float _2263 = (cbSceneParam._m0[33u].x - sqrt(((_2130 * _2130) + (_2129 * _2129)) + (_2131 * _2131))) * cbSceneParam._m0[33u].y;
        float _4640 = isnan(0.0) ? _2263 : (isnan(_2263) ? 0.0 : max(_2263, 0.0));
        float _2270 = (isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2211 + _2194) / _2206, (_2213 + _2198) / _2206), _2216), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2213 + _2194) / _2206, (_2198 - _2211) / _2206), _2216), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2194 - _2211) / _2206, (_2198 - _2213) / _2206), _2216), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2194 - _2213) / _2206, (_2211 + _2198) / _2206), _2216), 0.0)).x), vec4(0.25)));
        _2277 = 1.0 - (_2270 * cbSceneParam._m0[34u].x);
        _2278 = 1.0 - (_2270 * cbSceneParam._m0[34u].y);
        _2279 = 1.0 - (_2270 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2277 = 1.0;
        _2278 = 1.0;
        _2279 = 1.0;
    }
    float _2343;
    float _2345;
    float _2347;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2331 = fma(_2128, cbSceneParam._m0[63u].w, fma(_2124, cbSceneParam._m0[63u].z, fma(_2120, cbSceneParam._m0[63u].y, _2116 * cbSceneParam._m0[63u].x)));
        float _2332 = fma(_2128, cbSceneParam._m0[60u].w, fma(_2124, cbSceneParam._m0[60u].z, fma(_2120, cbSceneParam._m0[60u].y, _2116 * cbSceneParam._m0[60u].x))) / _2331;
        float _2333 = fma(_2128, cbSceneParam._m0[61u].w, fma(_2124, cbSceneParam._m0[61u].z, fma(_2120, cbSceneParam._m0[61u].y, _2116 * cbSceneParam._m0[61u].x))) / _2331;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2332 >= cbSceneParam._m0[64u].x) && (_2333 >= cbSceneParam._m0[64u].y)) && (_2332 <= cbSceneParam._m0[64u].z)) && (_2333 <= cbSceneParam._m0[64u].w))
        {
            float _2471 = fma(_2128, cbSceneParam._m0[62u].w, fma(_2124, cbSceneParam._m0[62u].z, fma(_2120, cbSceneParam._m0[62u].y, _2116 * cbSceneParam._m0[62u].x))) / _2331;
            float _2475 = isnan(cbSceneParam._m0[41u].w) ? _2471 : (isnan(_2471) ? cbSceneParam._m0[41u].w : max(_2471, cbSceneParam._m0[41u].w));
            float _2518 = (cbSceneParam._m0[33u].x - sqrt(((_2130 * _2130) + (_2129 * _2129)) + (_2131 * _2131))) * cbSceneParam._m0[33u].y;
            float _4656 = isnan(0.0) ? _2518 : (isnan(_2518) ? 0.0 : max(_2518, 0.0));
            float _2525 = (isnan(1.0) ? _4656 : (isnan(_4656) ? 1.0 : min(_4656, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2332, cbSceneParam._m0[33u].w + _2333), _2475), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2332, _2333 - cbSceneParam._m0[33u].z), _2475), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2332 - cbSceneParam._m0[33u].z, _2333 - cbSceneParam._m0[33u].w), _2475), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2332 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2333), _2475), 0.0)).x), vec4(0.25)));
            float _2529 = 1.0 - (_2525 * cbSceneParam._m0[34u].x);
            float _2530 = 1.0 - (_2525 * cbSceneParam._m0[34u].y);
            float _2531 = 1.0 - (_2525 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2530) ? _2278 : (isnan(_2278) ? _2530 : min(_2278, _2530));
            frontier_phi_39_38_ladder_1 = isnan(_2529) ? _2277 : (isnan(_2277) ? _2529 : min(_2277, _2529));
            frontier_phi_39_38_ladder_2 = isnan(_2531) ? _2279 : (isnan(_2279) ? _2531 : min(_2279, _2531));
        }
        else
        {
            frontier_phi_39_38_ladder = _2278;
            frontier_phi_39_38_ladder_1 = _2277;
            frontier_phi_39_38_ladder_2 = _2279;
        }
        _2343 = frontier_phi_39_38_ladder_1;
        _2345 = frontier_phi_39_38_ladder;
        _2347 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _2343 = _2277;
        _2345 = _2278;
        _2347 = _2279;
    }
    uvec4 _2352 = floatBitsToUint(cbInstanceData._m0[_951 + 5u]);
    uint _2354 = _2352.x * 14u;
    uint _2355 = _2354 + 13u;
    float _2362 = _1023 + (-1.0);
    float _2367 = (cbLight._m0[_2355].x * _2362) + 1.0;
    float _2368 = (cbLight._m0[_2355].y * _2362) + 1.0;
    float _2369 = (cbLight._m0[_2355].z * _2362) + 1.0;
    float _2370 = (cbLight._m0[_2355].w * _2362) + 1.0;
    uint _2371 = _2354 + 5u;
    float _2377 = isnan(1.0) ? _2368 : (isnan(_2368) ? 1.0 : min(_2368, 1.0));
    uint _2381 = _2354 + 4u;
    float _2390 = isnan(1.0) ? _2367 : (isnan(_2367) ? 1.0 : min(_2367, 1.0));
    uint _2394 = _2354 | 1u;
    float _2405 = dot(vec3(cbLight._m0[_2354].xyz), vec3(_793, _794, _795));
    float _2408 = dot(vec3(cbLight._m0[_2394].xyz), vec3(_793, _794, _795));
    float _4692 = isnan(0.0) ? _2405 : (isnan(_2405) ? 0.0 : max(_2405, 0.0));
    float _4703 = isnan(0.0) ? _2408 : (isnan(_2408) ? 0.0 : max(_2408, 0.0));
    float _2413 = (isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0))) * 0.3183098733425140380859375;
    float _2415 = (isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0))) * 0.3183098733425140380859375;
    float _2422 = ((cbLight._m0[_2371].x * _2377) * _2415) + (((cbLight._m0[_2381].x * _2343) * _2390) * _2413);
    float _2423 = ((_2377 * cbLight._m0[_2371].y) * _2415) + (((cbLight._m0[_2381].y * _2345) * _2390) * _2413);
    float _2424 = ((_2377 * cbLight._m0[_2371].z) * _2415) + (((cbLight._m0[_2381].z * _2347) * _2390) * _2413);
    uvec4 _2428 = floatBitsToUint(cbLight._m0[_2354 + 12u]);
    bool _2430 = _2428.x == 0u;
    float _2532;
    float _2534;
    float _2536;
    if (_2430)
    {
        _2532 = _2422;
        _2534 = _2423;
        _2536 = _2424;
    }
    else
    {
        uint _2540 = _2354 + 6u;
        float _2556 = (dot(vec3(cbLight._m0[_2354 + 2u].xyz), vec3(_793, _794, _795)) * 0.5) + 0.5;
        float _2557 = _2556 * _2556;
        float _4714 = isnan(0.0) ? _2557 : (isnan(_2557) ? 0.0 : max(_2557, 0.0));
        float _2558 = isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0));
        float _2559 = isnan(1.0) ? _2369 : (isnan(_2369) ? 1.0 : min(_2369, 1.0));
        _2532 = (((cbLight._m0[_2540].x * 0.3183098733425140380859375) * _2558) * _2559) + _2422;
        _2534 = (((cbLight._m0[_2540].y * 0.3183098733425140380859375) * _2558) * _2559) + _2423;
        _2536 = (((cbLight._m0[_2540].z * 0.3183098733425140380859375) * _2558) * _2559) + _2424;
    }
    bool _2539 = _2428.y == 0u;
    float _2594;
    float _2596;
    float _2598;
    if (_2539)
    {
        _2594 = _2532;
        _2596 = _2534;
        _2598 = _2536;
    }
    else
    {
        uint _2767 = _2354 + 7u;
        float _2783 = (dot(vec3(cbLight._m0[_2354 + 3u].xyz), vec3(_793, _794, _795)) * 0.5) + 0.5;
        float _2784 = _2783 * _2783;
        float _4730 = isnan(0.0) ? _2784 : (isnan(_2784) ? 0.0 : max(_2784, 0.0));
        float _2785 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
        float _2786 = isnan(1.0) ? _2370 : (isnan(_2370) ? 1.0 : min(_2370, 1.0));
        _2594 = (((cbLight._m0[_2767].x * 0.3183098733425140380859375) * _2785) * _2786) + _2532;
        _2596 = (((cbLight._m0[_2767].y * 0.3183098733425140380859375) * _2785) * _2786) + _2534;
        _2598 = (((cbLight._m0[_2767].z * 0.3183098733425140380859375) * _2785) * _2786) + _2536;
    }
    uint _2601 = _2354 + 8u;
    float _2614 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2354].w)) * _938) * 0.949999988079071044921875);
    float _2615 = _2614 * _2614;
    float _2616 = cbLight._m0[_2354].x + _873;
    float _2617 = cbLight._m0[_2354].y + _874;
    float _2618 = cbLight._m0[_2354].z + _875;
    float _2622 = inversesqrt(dot(vec3(_2616, _2617, _2618), vec3(_2616, _2617, _2618)));
    float _2623 = _2622 * _2616;
    float _2624 = _2622 * _2617;
    float _2625 = _2622 * _2618;
    float _2626 = dot(vec3(_793, _794, _795), vec3(cbLight._m0[_2354].xyz));
    float _4746 = isnan(0.0) ? _2626 : (isnan(_2626) ? 0.0 : max(_2626, 0.0));
    float _2629 = isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0));
    float _4757 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
    float _2630 = isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0));
    float _2631 = dot(vec3(_793, _794, _795), vec3(_2623, _2624, _2625));
    float _4768 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
    float _2634 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
    float _2635 = dot(vec3(cbLight._m0[_2354].xyz), vec3(_2623, _2624, _2625));
    float _4779 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
    float _2639 = _2615 * _2615;
    float _2643 = ((_2634 * _2634) * (_2639 + (-1.0))) + 1.0;
    float _2651 = exp2(log2(1.0 - (isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0)))) * 5.0);
    float _2652 = 0.959999978542327880859375 - _1005;
    float _2654 = 0.959999978542327880859375 - _1006;
    float _2655 = 0.959999978542327880859375 - _1007;
    float _2662 = 1.0 - _2615;
    float _2673 = (0.5 / (((_2630 * ((_2629 * _2662) + _2615)) + 9.9999999392252902907785028219223e-09) + (((_2630 * _2662) + _2615) * _2629))) * _2629;
    float _4790 = isnan(0.0) ? _2673 : (isnan(_2673) ? 0.0 : max(_2673, 0.0));
    float _2675 = (isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0))) * (_2639 / ((_2643 * _2643) * 3.141590118408203125));
    uint _2689 = _2354 + 9u;
    float _2700 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2394].w)) * _938) * 0.949999988079071044921875);
    float _2701 = _2700 * _2700;
    float _2702 = cbLight._m0[_2394].x + _873;
    float _2703 = cbLight._m0[_2394].y + _874;
    float _2704 = cbLight._m0[_2394].z + _875;
    float _2708 = inversesqrt(dot(vec3(_2702, _2703, _2704), vec3(_2702, _2703, _2704)));
    float _2709 = _2708 * _2702;
    float _2710 = _2708 * _2703;
    float _2711 = _2708 * _2704;
    float _2712 = dot(vec3(_793, _794, _795), vec3(cbLight._m0[_2394].xyz));
    float _4801 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
    float _2715 = isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0));
    float _2716 = dot(vec3(_793, _794, _795), vec3(_2709, _2710, _2711));
    float _4812 = isnan(0.0) ? _2716 : (isnan(_2716) ? 0.0 : max(_2716, 0.0));
    float _2719 = isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0));
    float _2720 = dot(vec3(cbLight._m0[_2394].xyz), vec3(_2709, _2710, _2711));
    float _4823 = isnan(0.0) ? _2720 : (isnan(_2720) ? 0.0 : max(_2720, 0.0));
    float _2724 = _2701 * _2701;
    float _2728 = ((_2719 * _2719) * (_2724 + (-1.0))) + 1.0;
    float _2735 = exp2(log2(1.0 - (isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0)))) * 5.0);
    float _2742 = 1.0 - _2701;
    float _2752 = (0.5 / (((_2630 * ((_2715 * _2742) + _2701)) + 9.9999999392252902907785028219223e-09) + (((_2630 * _2742) + _2701) * _2715))) * _2715;
    float _4834 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
    float _2754 = (isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0))) * (_2724 / ((_2728 * _2728) * 3.141590118408203125));
    float _2764 = (((((_2735 * _2652) + _1008) * cbLight._m0[_2689].x) * _2754) * _2377) + ((((cbLight._m0[_2601].x * _2343) * ((_2651 * _2652) + _1008)) * _2675) * _2390);
    float _2765 = (((((_2735 * _2654) + _1010) * cbLight._m0[_2689].y) * _2754) * _2377) + ((((cbLight._m0[_2601].y * _2345) * ((_2651 * _2654) + _1010)) * _2675) * _2390);
    float _2766 = (((((_2735 * _2655) + _1011) * cbLight._m0[_2689].z) * _2754) * _2377) + ((((cbLight._m0[_2601].z * _2347) * ((_2651 * _2655) + _1011)) * _2675) * _2390);
    float _2822;
    float _2824;
    float _2826;
    if (_2430)
    {
        _2822 = _2764;
        _2824 = _2765;
        _2826 = _2766;
    }
    else
    {
        uint _2828 = _2354 + 2u;
        uint _2832 = _2354 + 10u;
        float _2846 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2828].w)) * _938) * 0.949999988079071044921875);
        float _2847 = _2846 * _2846;
        float _2848 = cbLight._m0[_2828].x + _873;
        float _2849 = cbLight._m0[_2828].y + _874;
        float _2850 = cbLight._m0[_2828].z + _875;
        float _2854 = inversesqrt(dot(vec3(_2848, _2849, _2850), vec3(_2848, _2849, _2850)));
        float _2855 = _2854 * _2848;
        float _2856 = _2854 * _2849;
        float _2857 = _2854 * _2850;
        float _2858 = dot(vec3(_793, _794, _795), vec3(cbLight._m0[_2828].xyz));
        float _4845 = isnan(0.0) ? _2858 : (isnan(_2858) ? 0.0 : max(_2858, 0.0));
        float _2861 = isnan(1.0) ? _4845 : (isnan(_4845) ? 1.0 : min(_4845, 1.0));
        float _2862 = dot(vec3(_793, _794, _795), vec3(_2855, _2856, _2857));
        float _4856 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0));
        float _2865 = isnan(1.0) ? _4856 : (isnan(_4856) ? 1.0 : min(_4856, 1.0));
        float _2866 = dot(vec3(cbLight._m0[_2828].xyz), vec3(_2855, _2856, _2857));
        float _4867 = isnan(0.0) ? _2866 : (isnan(_2866) ? 0.0 : max(_2866, 0.0));
        float _2870 = _2847 * _2847;
        float _2874 = ((_2865 * _2865) * (_2870 + (-1.0))) + 1.0;
        float _2881 = exp2(log2(1.0 - (isnan(1.0) ? _4867 : (isnan(_4867) ? 1.0 : min(_4867, 1.0)))) * 5.0);
        float _2888 = 1.0 - _2847;
        float _2898 = (0.5 / (((_2630 * ((_2861 * _2888) + _2847)) + 9.9999999392252902907785028219223e-09) + (((_2630 * _2888) + _2847) * _2861))) * _2861;
        float _4878 = isnan(0.0) ? _2898 : (isnan(_2898) ? 0.0 : max(_2898, 0.0));
        float _2900 = (isnan(1.0) ? _4878 : (isnan(_4878) ? 1.0 : min(_4878, 1.0))) * (_2870 / ((_2874 * _2874) * 3.141590118408203125));
        float _2901 = isnan(1.0) ? _2369 : (isnan(_2369) ? 1.0 : min(_2369, 1.0));
        _2822 = (((((_2881 * _2652) + _1008) * cbLight._m0[_2832].x) * _2900) * _2901) + _2764;
        _2824 = (((((_2881 * _2654) + _1010) * cbLight._m0[_2832].y) * _2900) * _2901) + _2765;
        _2826 = (((((_2881 * _2655) + _1011) * cbLight._m0[_2832].z) * _2900) * _2901) + _2766;
    }
    float _2932;
    float _2934;
    float _2936;
    if (_2539)
    {
        _2932 = _2822;
        _2934 = _2824;
        _2936 = _2826;
    }
    else
    {
        uint _2943 = _2354 + 3u;
        uint _2947 = _2354 + 11u;
        float _2961 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2943].w)) * _938) * 0.949999988079071044921875);
        float _2962 = _2961 * _2961;
        float _2963 = cbLight._m0[_2943].x + _873;
        float _2964 = cbLight._m0[_2943].y + _874;
        float _2965 = cbLight._m0[_2943].z + _875;
        float _2969 = inversesqrt(dot(vec3(_2963, _2964, _2965), vec3(_2963, _2964, _2965)));
        float _2970 = _2969 * _2963;
        float _2971 = _2969 * _2964;
        float _2972 = _2969 * _2965;
        float _2973 = dot(vec3(_793, _794, _795), vec3(cbLight._m0[_2943].xyz));
        float _4894 = isnan(0.0) ? _2973 : (isnan(_2973) ? 0.0 : max(_2973, 0.0));
        float _2976 = isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0));
        float _2977 = dot(vec3(_793, _794, _795), vec3(_2970, _2971, _2972));
        float _4905 = isnan(0.0) ? _2977 : (isnan(_2977) ? 0.0 : max(_2977, 0.0));
        float _2980 = isnan(1.0) ? _4905 : (isnan(_4905) ? 1.0 : min(_4905, 1.0));
        float _2981 = dot(vec3(cbLight._m0[_2943].xyz), vec3(_2970, _2971, _2972));
        float _4916 = isnan(0.0) ? _2981 : (isnan(_2981) ? 0.0 : max(_2981, 0.0));
        float _2985 = _2962 * _2962;
        float _2989 = ((_2980 * _2980) * (_2985 + (-1.0))) + 1.0;
        float _2996 = exp2(log2(1.0 - (isnan(1.0) ? _4916 : (isnan(_4916) ? 1.0 : min(_4916, 1.0)))) * 5.0);
        float _3003 = 1.0 - _2962;
        float _3013 = (0.5 / (((_2630 * ((_2976 * _3003) + _2962)) + 9.9999999392252902907785028219223e-09) + (((_2630 * _3003) + _2962) * _2976))) * _2976;
        float _4927 = isnan(0.0) ? _3013 : (isnan(_3013) ? 0.0 : max(_3013, 0.0));
        float _3015 = (isnan(1.0) ? _4927 : (isnan(_4927) ? 1.0 : min(_4927, 1.0))) * (_2985 / ((_2989 * _2989) * 3.141590118408203125));
        float _3016 = isnan(1.0) ? _2370 : (isnan(_2370) ? 1.0 : min(_2370, 1.0));
        _2932 = (((((_2996 * _2652) + _1008) * cbLight._m0[_2947].x) * _3015) * _3016) + _2822;
        _2934 = (((((_2996 * _2654) + _1010) * cbLight._m0[_2947].y) * _3015) * _3016) + _2824;
        _2936 = (((((_2996 * _2655) + _1011) * cbLight._m0[_2947].z) * _3015) * _3016) + _2826;
    }
    float _3081;
    float _3083;
    float _3085;
    float _3087;
    float _3089;
    float _3091;
    if (_2352.y == 0u)
    {
        uvec4 _3037 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3038 = _3037.x;
        uint _3049 = uint((float(_3037.y) * floor(float(uint(cbSceneParam._m0[85u].y * _895) / _3038))) + floor(float(uint(cbSceneParam._m0[85u].x * _894) / _3038)));
        float _3059 = (log2(_2131 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3060 = isnan(0.0) ? _3059 : (isnan(_3059) ? 0.0 : max(_3059, 0.0));
        uint _3063 = uint(isnan(14.0) ? _3060 : (isnan(_3060) ? 14.0 : min(_3060, 14.0)));
        uvec4 _3068 = texelFetch(g_lightClusterGridBuffer, int(((_3063 << 2u) + (_3049 << 6u)) >> 2u));
        uint _3069 = _3068.x;
        uint _3070 = _3037.z;
        float _3167;
        float _3169;
        float _3171;
        float _3173;
        float _3175;
        float _3177;
        if (((((1u << ((_3070 >> 4u) & 15u)) + 4294967295u) & _3069) == 0u) || ((_3070 & 240u) == 0u))
        {
            _3167 = 0.0;
            _3169 = 0.0;
            _3171 = 0.0;
            _3173 = 0.0;
            _3175 = 0.0;
            _3177 = 0.0;
        }
        else
        {
            float _3168;
            float _3170;
            float _3172;
            float _3174;
            float _3176;
            float _3178;
            float _3319 = 0.0;
            float _3320 = 0.0;
            float _3321 = 0.0;
            float _3322 = 0.0;
            float _3323 = 0.0;
            float _3324 = 0.0;
            uint _3325 = 0u;
            uint _3334;
            bool _3335;
            for (;;)
            {
                _3334 = texelFetch(g_lightClassification, int((((_3063 << 5u) + (_3049 << 9u)) + (_3325 << 2u)) >> 2u)).x;
                _3335 = _3334 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_3335)
                {
                    frontier_phi_73_pred = _3324;
                    frontier_phi_73_pred_1 = _3323;
                    frontier_phi_73_pred_2 = _3322;
                    frontier_phi_73_pred_3 = _3321;
                    frontier_phi_73_pred_4 = _3320;
                    frontier_phi_73_pred_5 = _3319;
                }
                else
                {
                    float _3464;
                    float _3465;
                    float _3466;
                    float _3467;
                    float _3468;
                    float _3469;
                    uint _3470;
                    _3464 = _3319;
                    _3465 = _3320;
                    _3466 = _3321;
                    _3467 = _3322;
                    _3468 = _3323;
                    _3469 = _3324;
                    _3470 = _3334;
                    float _3391;
                    float _3392;
                    float _3393;
                    float _3394;
                    float _3395;
                    float _3396;
                    for (;;)
                    {
                        uint _3474 = uint(findLSB(_3470)) + (_3325 << 5u);
                        uint _3471 = (_3470 + 4294967295u) & _3470;
                        uint _3476 = _3474 * 48u;
                        vec4 _3490 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3476)).x, texelFetch(g_PointLightRenderingBuffer, int(_3476 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3476 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3476 + 3u)).x));
                        uint _3496 = (_3474 * 48u) + 4u;
                        vec4 _3509 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3496)).x, texelFetch(g_PointLightRenderingBuffer, int(_3496 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3496 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3496 + 3u)).x));
                        uint _3515 = (_3474 * 48u) + 8u;
                        vec3 _3526 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3515)).x, texelFetch(g_PointLightRenderingBuffer, int(_3515 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3515 + 2u)).x));
                        float _3530 = _3490.x - _2129;
                        float _3531 = _3490.y - _2130;
                        float _3532 = _3490.z - _2131;
                        float _3533 = dot(vec3(_3530, _3531, _3532), vec3(_3530, _3531, _3532));
                        float _3536 = inversesqrt(_3533);
                        float _3537 = _3536 * _3530;
                        float _3538 = _3536 * _3531;
                        float _3539 = _3536 * _3532;
                        float _3540 = dot(vec3(_919, _922, _925), vec3(_3537, _3538, _3539));
                        float _3545 = 1.0 - (_3533 * _3490.w);
                        float _4953 = isnan(0.0) ? _3545 : (isnan(_3545) ? 0.0 : max(_3545, 0.0));
                        float _3546 = isnan(1.0) ? _4953 : (isnan(_4953) ? 1.0 : min(_4953, 1.0));
                        float _3547 = sqrt(_3533) * _3509.w;
                        float _3550 = 1.39999997615814208984375 / (_3547 + 1.39999997615814208984375);
                        float _3551 = _3550 * _3550;
                        float _3554 = ((1.0 - _3551) * _3540) + _3551;
                        float _3557 = _3547 * _3547;
                        float _3561 = ((isnan(0.0) ? _3554 : (isnan(_3554) ? 0.0 : max(_3554, 0.0))) * _3546) / ((_3557 * 0.699999988079071044921875) + 1.0);
                        float _3565 = (-0.0) - _2129;
                        float _3566 = (-0.0) - _2130;
                        float _3567 = (-0.0) - _2131;
                        float _3571 = inversesqrt(dot(vec3(_3565, _3566, _3567), vec3(_3565, _3566, _3567)));
                        float _3572 = _3571 * _3565;
                        float _3573 = _3571 * _3566;
                        float _3574 = _3571 * _3567;
                        float _3581 = exp2(log2(1.0 / ((_3557 * 3.5) + 5.0)) * 0.25);
                        float _3582 = 1.0 - _1039;
                        float _3589 = sqrt(1.0 - ((1.0 - (_3582 * _3582)) * (1.0 - (_3581 * _3581))));
                        float _3590 = _3589 * _3589;
                        float _3591 = _3590 * _3590;
                        float _3592 = _3572 + _3537;
                        float _3593 = _3573 + _3538;
                        float _3594 = _3574 + _3539;
                        float _3598 = inversesqrt(dot(vec3(_3592, _3593, _3594), vec3(_3592, _3593, _3594)));
                        float _3602 = dot(vec3(_919, _922, _925), vec3(_3572, _3573, _3574));
                        float _4969 = isnan(0.0) ? _3602 : (isnan(_3602) ? 0.0 : max(_3602, 0.0));
                        float _3605 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
                        float _3606 = dot(vec3(_919, _922, _925), vec3(_3598 * _3592, _3598 * _3593, _3598 * _3594));
                        float _4980 = isnan(0.0) ? _3606 : (isnan(_3606) ? 0.0 : max(_3606, 0.0));
                        float _3609 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
                        float _3613 = ((_3609 * _3609) * (_3591 + (-1.0))) + 1.0;
                        float _3614 = _3550 * _3590;
                        float _3615 = _3614 * _3614;
                        float _3618 = ((1.0 - _3615) * _3540) + _3615;
                        float _4991 = isnan(0.0) ? _3618 : (isnan(_3618) ? 0.0 : max(_3618, 0.0));
                        float _3619 = isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0));
                        float _3620 = 1.0 - _3590;
                        float _3630 = (0.5 / (((_3619 * ((_3605 * _3620) + _3590)) + 9.9999999392252902907785028219223e-09) + (((_3619 * _3620) + _3590) * _3605))) * _3619;
                        float _5002 = isnan(0.0) ? _3630 : (isnan(_3630) ? 0.0 : max(_3630, 0.0));
                        float _3641 = (((_3591 * 3.1415927410125732421875) * (isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0)))) / ((_3613 * _3613) * ((_3557 * 2.1991131305694580078125) + 3.141590118408203125))) * _3546;
                        _3394 = (_3561 * _3509.x) + _3467;
                        _3395 = (_3561 * _3509.y) + _3468;
                        _3396 = (_3561 * _3509.z) + _3469;
                        _3391 = (_3641 * _3526.x) + _3464;
                        _3392 = (_3641 * _3526.y) + _3465;
                        _3393 = (_3641 * _3526.z) + _3466;
                        if (_3471 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3464 = _3391;
                            _3465 = _3392;
                            _3466 = _3393;
                            _3467 = _3394;
                            _3468 = _3395;
                            _3469 = _3396;
                            _3470 = _3471;
                        }
                    }
                    frontier_phi_73_pred = _3396;
                    frontier_phi_73_pred_1 = _3395;
                    frontier_phi_73_pred_2 = _3394;
                    frontier_phi_73_pred_3 = _3393;
                    frontier_phi_73_pred_4 = _3392;
                    frontier_phi_73_pred_5 = _3391;
                }
                _3178 = frontier_phi_73_pred;
                _3176 = frontier_phi_73_pred_1;
                _3174 = frontier_phi_73_pred_2;
                _3172 = frontier_phi_73_pred_3;
                _3170 = frontier_phi_73_pred_4;
                _3168 = frontier_phi_73_pred_5;
                uint _3326 = _3325 + 1u;
                if (_3326 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3319 = _3168;
                    _3320 = _3170;
                    _3321 = _3172;
                    _3322 = _3174;
                    _3323 = _3176;
                    _3324 = _3178;
                    _3325 = _3326;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3167 = _3168;
            _3169 = _3170;
            _3171 = _3172;
            _3173 = _3174;
            _3175 = _3176;
            _3177 = _3178;
        }
        uvec4 _3181 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3182 = _3181.z;
        uint _3184 = (_3182 >> 8u) & 15u;
        float _3287;
        float _3289;
        float _3291;
        float _3293;
        float _3295;
        float _3297;
        if (((4294967295u << _3184) & _3069) == 0u)
        {
            _3287 = _3167;
            _3289 = _3169;
            _3291 = _3171;
            _3293 = _3173;
            _3295 = _3175;
            _3297 = _3177;
        }
        else
        {
            float _3312 = inversesqrt(dot(vec3(_2129, _2130, _2131), vec3(_2129, _2130, _2131)));
            float _3313 = _3312 * _2129;
            float _3314 = _3312 * _2130;
            float _3315 = _3312 * _2131;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_3184 < ((_3182 >> 12u) & 15u))
            {
                float _3288;
                float _3290;
                float _3292;
                float _3294;
                float _3296;
                float _3298;
                float _3447 = _3167;
                float _3448 = _3169;
                float _3449 = _3171;
                float _3450 = _3173;
                float _3451 = _3175;
                float _3452 = _3177;
                uint _3453 = _3184;
                uint _3462;
                bool _3463;
                for (;;)
                {
                    _3462 = texelFetch(g_lightClassification, int((((_3063 << 5u) + (_3049 << 9u)) + (_3453 << 2u)) >> 2u)).x;
                    _3463 = _3462 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3463)
                    {
                        frontier_phi_84_pred = _3451;
                        frontier_phi_84_pred_1 = _3450;
                        frontier_phi_84_pred_2 = _3449;
                        frontier_phi_84_pred_3 = _3448;
                        frontier_phi_84_pred_4 = _3447;
                        frontier_phi_84_pred_5 = _3452;
                    }
                    else
                    {
                        float _3655;
                        float _3656;
                        float _3657;
                        float _3658;
                        float _3659;
                        float _3660;
                        float _3948;
                        float _3949;
                        float _3950;
                        float _3951;
                        float _3952;
                        float _3953;
                        float _3668 = _3447;
                        float _3669 = _3448;
                        float _3670 = _3449;
                        float _3671 = _3450;
                        float _3672 = _3451;
                        float _3673 = _3452;
                        uint _3674 = _3462;
                        uint _3675;
                        vec4 _3700;
                        float _3701;
                        vec4 _3716;
                        vec3 _3728;
                        vec4 _3743;
                        vec4 _3758;
                        float _3804;
                        bool _3805;
                        for (;;)
                        {
                            uint _3685 = ((_3453 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3674));
                            _3675 = (_3674 + 4294967295u) & _3674;
                            uint _3687 = _3685 * 40u;
                            _3700 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3687)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 3u)).x));
                            _3701 = _3700.w;
                            uint _3703 = (_3685 * 40u) + 4u;
                            _3716 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3703)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3703 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3703 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3703 + 3u)).x));
                            uint _3718 = (_3685 * 40u) + 8u;
                            _3728 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3718)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 2u)).x));
                            uint _3730 = (_3685 * 40u) + 16u;
                            _3743 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3730)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3730 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3730 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3730 + 3u)).x));
                            uint _3745 = (_3685 * 40u) + 20u;
                            _3758 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3745)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 3u)).x));
                            uint _3760 = (_3685 * 40u) + 24u;
                            vec4 _3773 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3760)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3760 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3760 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3760 + 3u)).x));
                            uint _3779 = (_3685 * 40u) + 28u;
                            vec4 _3792 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3779)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3779 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3779 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3779 + 3u)).x));
                            _3804 = fma(_2131, _3792.z, fma(_2130, _3792.y, _3792.x * _2129)) + _3792.w;
                            _3805 = !((fma(_2131, _3773.z, fma(_2130, _3773.y, _3773.x * _2129)) + _3773.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_3805)
                            {
                                float _3832 = _3700.x - _2129;
                                float _3833 = _3700.y - _2130;
                                float _3834 = _3700.z - _2131;
                                float _3835 = dot(vec3(_3832, _3833, _3834), vec3(_3832, _3833, _3834));
                                float _3838 = inversesqrt(_3835);
                                float _3839 = _3838 * _3832;
                                float _3840 = _3838 * _3833;
                                float _3841 = _3838 * _3834;
                                float _3845 = 1.0 - (_3835 / (_3701 * _3701));
                                float _5013 = isnan(0.0) ? _3845 : (isnan(_3845) ? 0.0 : max(_3845, 0.0));
                                float _3846 = isnan(1.0) ? _5013 : (isnan(_5013) ? 1.0 : min(_5013, 1.0));
                                float _3850 = sqrt(_3835) * _3716.w;
                                float _3852 = 1.39999997615814208984375 / (_3850 + 1.39999997615814208984375);
                                float _3853 = _3852 * _3852;
                                float _3856 = ((1.0 - _3853) * dot(vec3(_3839, _3840, _3841), vec3(_919, _922, _925))) + _3853;
                                float _3859 = _3850 * _3850;
                                float _3863 = (fma(_2131, _3743.z, fma(_2130, _3743.y, _3743.x * _2129)) + _3743.w) / _3804;
                                float _3864 = (fma(_2131, _3758.z, fma(_2130, _3758.y, _3758.x * _2129)) + _3758.w) / _3804;
                                float _3868 = 1.0 - dot(vec2(_3863, _3864), vec2(_3863, _3864));
                                float _5029 = isnan(0.0) ? _3868 : (isnan(_3868) ? 0.0 : max(_3868, 0.0));
                                float _3869 = isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0));
                                float _3870 = _3869 * (((isnan(0.0) ? _3856 : (isnan(_3856) ? 0.0 : max(_3856, 0.0))) * _3846) / ((_3859 * 0.699999988079071044921875) + 1.0));
                                float _3882 = exp2(log2(1.0 / ((_3859 * 3.5) + 5.0)) * 0.25);
                                float _3883 = 1.0 - _1039;
                                float _3890 = sqrt(1.0 - ((1.0 - (_3883 * _3883)) * (1.0 - (_3882 * _3882))));
                                float _3891 = _3890 * _3890;
                                float _3892 = _3891 * _3891;
                                float _3893 = _3839 - _3313;
                                float _3894 = _3840 - _3314;
                                float _3895 = _3841 - _3315;
                                float _3899 = inversesqrt(dot(vec3(_3893, _3894, _3895), vec3(_3893, _3894, _3895)));
                                float _3903 = dot(vec3(_919, _922, _925), vec3((-0.0) - _3313, (-0.0) - _3314, (-0.0) - _3315));
                                float _5040 = isnan(0.0) ? _3903 : (isnan(_3903) ? 0.0 : max(_3903, 0.0));
                                float _3906 = isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0));
                                float _3907 = dot(vec3(_919, _922, _925), vec3(_3899 * _3893, _3899 * _3894, _3899 * _3895));
                                float _5051 = isnan(0.0) ? _3907 : (isnan(_3907) ? 0.0 : max(_3907, 0.0));
                                float _3910 = isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0));
                                float _3914 = ((_3910 * _3910) * (_3892 + (-1.0))) + 1.0;
                                float _3915 = _3852 * _3891;
                                float _3916 = _3915 * _3915;
                                float _3922 = ((1.0 - _3916) * dot(vec3(_919, _922, _925), vec3(_3839, _3840, _3841))) + _3916;
                                float _5062 = isnan(0.0) ? _3922 : (isnan(_3922) ? 0.0 : max(_3922, 0.0));
                                float _3923 = isnan(1.0) ? _5062 : (isnan(_5062) ? 1.0 : min(_5062, 1.0));
                                float _3924 = 1.0 - _3891;
                                float _3934 = (0.5 / (((_3923 * ((_3906 * _3924) + _3891)) + 9.9999999392252902907785028219223e-09) + (((_3923 * _3924) + _3891) * _3906))) * _3923;
                                float _5073 = isnan(0.0) ? _3934 : (isnan(_3934) ? 0.0 : max(_3934, 0.0));
                                float _3944 = (_3869 * _3846) * (((_3892 * 3.1415927410125732421875) * (isnan(1.0) ? _5073 : (isnan(_5073) ? 1.0 : min(_5073, 1.0)))) / ((_3914 * _3914) * ((_3859 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _3870 * _3716.y;
                                frontier_phi_90_pred_1 = _3870 * _3716.x;
                                frontier_phi_90_pred_2 = _3944 * _3728.z;
                                frontier_phi_90_pred_3 = _3944 * _3728.y;
                                frontier_phi_90_pred_4 = _3944 * _3728.x;
                                frontier_phi_90_pred_5 = _3870 * _3716.z;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _3952 = frontier_phi_90_pred;
                            _3951 = frontier_phi_90_pred_1;
                            _3950 = frontier_phi_90_pred_2;
                            _3949 = frontier_phi_90_pred_3;
                            _3948 = frontier_phi_90_pred_4;
                            _3953 = frontier_phi_90_pred_5;
                            _3658 = _3951 + _3671;
                            _3659 = _3952 + _3672;
                            _3660 = _3953 + _3673;
                            _3655 = _3948 + _3668;
                            _3656 = _3949 + _3669;
                            _3657 = _3950 + _3670;
                            if (_3675 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3668 = _3655;
                                _3669 = _3656;
                                _3670 = _3657;
                                _3671 = _3658;
                                _3672 = _3659;
                                _3673 = _3660;
                                _3674 = _3675;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _3659;
                        frontier_phi_84_pred_1 = _3658;
                        frontier_phi_84_pred_2 = _3657;
                        frontier_phi_84_pred_3 = _3656;
                        frontier_phi_84_pred_4 = _3655;
                        frontier_phi_84_pred_5 = _3660;
                    }
                    _3296 = frontier_phi_84_pred;
                    _3294 = frontier_phi_84_pred_1;
                    _3292 = frontier_phi_84_pred_2;
                    _3290 = frontier_phi_84_pred_3;
                    _3288 = frontier_phi_84_pred_4;
                    _3298 = frontier_phi_84_pred_5;
                    uint _3454 = _3453 + 1u;
                    if (_3454 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3447 = _3288;
                        _3448 = _3290;
                        _3449 = _3292;
                        _3450 = _3294;
                        _3451 = _3296;
                        _3452 = _3298;
                        _3453 = _3454;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _3298;
                frontier_phi_65_66_ladder_1 = _3294;
                frontier_phi_65_66_ladder_2 = _3296;
                frontier_phi_65_66_ladder_3 = _3290;
                frontier_phi_65_66_ladder_4 = _3288;
                frontier_phi_65_66_ladder_5 = _3292;
            }
            else
            {
                frontier_phi_65_66_ladder = _3177;
                frontier_phi_65_66_ladder_1 = _3173;
                frontier_phi_65_66_ladder_2 = _3175;
                frontier_phi_65_66_ladder_3 = _3169;
                frontier_phi_65_66_ladder_4 = _3167;
                frontier_phi_65_66_ladder_5 = _3171;
            }
            _3287 = frontier_phi_65_66_ladder_4;
            _3289 = frontier_phi_65_66_ladder_3;
            _3291 = frontier_phi_65_66_ladder_5;
            _3293 = frontier_phi_65_66_ladder_1;
            _3295 = frontier_phi_65_66_ladder_2;
            _3297 = frontier_phi_65_66_ladder;
        }
        float _3302 = isnan(1.0) ? _1023 : (isnan(_1023) ? 1.0 : min(_1023, 1.0));
        _3081 = (_3302 * _3293) + _2594;
        _3083 = (_3302 * _3295) + _2596;
        _3085 = (_3302 * _3297) + _2598;
        _3087 = ((_3287 * _1008) * _3302) + _2932;
        _3089 = ((_3289 * _1010) * _3302) + _2934;
        _3091 = ((_3291 * _1011) * _3302) + _2936;
    }
    else
    {
        _3081 = _2594;
        _3083 = _2596;
        _3085 = _2598;
        _3087 = _2932;
        _3089 = _2934;
        _3091 = _2936;
    }
    uint _3097 = _952 + uint(cbMatDynParam._m0[0u].w);
    float _5089 = isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0));
    float _5100 = isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0));
    float _5111 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
    float _3122 = (((isnan(1.0) ? _5089 : (isnan(_5089) ? 1.0 : min(_5089, 1.0))) * (_3081 + ((isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0))) * _1023))) + ((_3087 + ((isnan(0.0) ? _2076 : (isnan(_2076) ? 0.0 : max(_2076, 0.0))) * _1863)) * cbPerFrame._m0[3u].x)) + (cbInstanceData._m0[_3097].x * ((((_602 + (_488 * _440)) - (_602 * _488)) + cbMtdParam._m0[13u].x) + ((((((_739.x - _736) * _717) + _736) * cbMtdParam._m0[11u].x) + ((cbMtdParam._m0[22u].y * _670) * cbMtdParam._m0[12u].x)) * _679)));
    float _3124 = ((cbInstanceData._m0[_3097].y * ((((_603 + (_488 * _441)) - (_603 * _488)) + cbMtdParam._m0[13u].y) + ((((((_739.y - _737) * _717) + _737) * cbMtdParam._m0[11u].y) + ((cbMtdParam._m0[22u].y * (((_659.y - _654.y) * _638) + _654.y)) * cbMtdParam._m0[12u].y)) * _679))) + ((_3089 + ((isnan(0.0) ? _2079 : (isnan(_2079) ? 0.0 : max(_2079, 0.0))) * _1863)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5100 : (isnan(_5100) ? 1.0 : min(_5100, 1.0))) * (_3083 + ((isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0))) * _1023)));
    float _3126 = ((cbInstanceData._m0[_3097].z * ((((_604 + (_488 * _442)) - (_604 * _488)) + cbMtdParam._m0[13u].z) + ((((((_739.z - _738) * _717) + _738) * cbMtdParam._m0[11u].z) + ((cbMtdParam._m0[22u].y * (((_659.z - _654.z) * _638) + _654.z)) * cbMtdParam._m0[12u].z)) * _679))) + ((_3091 + ((isnan(0.0) ? _2082 : (isnan(_2082) ? 0.0 : max(_2082, 0.0))) * _1863)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5111 : (isnan(_5111) ? 1.0 : min(_5111, 1.0))) * (_3085 + ((isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0))) * _1023)));
    float _3127 = isnan(0.0) ? _3122 : (isnan(_3122) ? 0.0 : max(_3122, 0.0));
    float _3128 = isnan(0.0) ? _3124 : (isnan(_3124) ? 0.0 : max(_3124, 0.0));
    float _3129 = isnan(0.0) ? _3126 : (isnan(_3126) ? 0.0 : max(_3126, 0.0));
    uint _3130 = _951 + 6u;
    float _3138 = _894 / cbSceneParam._m0[86u].x;
    float _3139 = _895 / cbSceneParam._m0[86u].y;
    vec4 _3153 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3138, _3139, (log2((isnan(cbSceneParam._m0[77u].w) ? _816 : (isnan(_816) ? cbSceneParam._m0[77u].w : min(_816, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3155 = _3153.x;
    float _3156 = _3153.y;
    float _3157 = _3153.z;
    float _3158 = _3153.w;
    float _3229;
    float _3231;
    float _3233;
    float _3235;
    if (_816 > cbSceneParam._m0[78u].w)
    {
        float _3192 = isnan(_816) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _816 : min(cbSceneParam._m0[80u].w, _816));
        float _3193 = _3192 / _816;
        float _3204 = _3193 * _866;
        float _3205 = _867 * _3193;
        float _3206 = (-0.0) - _3205;
        float _3207 = _3193 * _868;
        float _3209 = (cbSceneParam._m0[77u].w * _3206) / _3192;
        float _3210 = _3209 + cbSceneParam._m0[79u].w;
        float _3211 = cbSceneParam._m0[79u].w - _3205;
        float _3217 = sqrt(((_3204 * _3204) + (_3205 * _3205)) + (_3207 * _3207));
        float _3220 = (1.0 - (cbSceneParam._m0[77u].w / _3192)) * _3217;
        float _3225 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3227 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3404;
        if (abs((_3206 - _3209) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3404 = ((((_3210 > 0.0) ? exp2(_3225 * _3210) : (2.0 - exp2(_3227 * _3210))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3220;
        }
        else
        {
            float _3348 = 1.0 / cbSceneParam._m0[80u].x;
            float _3349 = isnan(_3211) ? _3210 : (isnan(_3210) ? _3211 : max(_3210, _3211));
            float _3350 = isnan(_3211) ? _3210 : (isnan(_3210) ? _3211 : min(_3210, _3211));
            float _3359 = isnan(0.0) ? _3349 : (isnan(_3349) ? 0.0 : min(_3349, 0.0));
            float _3360 = isnan(0.0) ? _3350 : (isnan(_3350) ? 0.0 : min(_3350, 0.0));
            _3404 = ((abs(_3217 / _3206) * cbSceneParam._m0[80u].y) * ((((_3359 - _3360) * 2.0) - ((exp2(_3225 * (isnan(0.0) ? _3349 : (isnan(_3349) ? 0.0 : max(_3349, 0.0)))) - exp2(_3225 * (isnan(0.0) ? _3350 : (isnan(_3350) ? 0.0 : max(_3350, 0.0))))) * _3348)) - ((exp2(_3227 * _3359) - exp2(_3227 * _3360)) * _3348))) + (_3220 * cbSceneParam._m0[80u].z);
        }
        vec4 _3406 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3138, _3139, 1.0), 0.0);
        float _3415 = exp2((_3404 * (-1.44269502162933349609375)) * (1.0 - _3406.w));
        float _3416 = log2(_3415);
        float _3432 = log2(_3158);
        _3229 = (exp2(_3432 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3416 * cbSceneParam._m0[78u].x)) * _3406.x) / cbSceneParam._m0[78u].x)) + _3155;
        _3231 = (exp2(_3432 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3416 * cbSceneParam._m0[78u].y)) * _3406.y) / cbSceneParam._m0[78u].y)) + _3156;
        _3233 = (exp2(_3432 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3416 * cbSceneParam._m0[78u].z)) * _3406.z) / cbSceneParam._m0[78u].z)) + _3157;
        _3235 = _3415 * _3158;
    }
    else
    {
        _3229 = _3155;
        _3231 = _3156;
        _3233 = _3157;
        _3235 = _3158;
    }
    bool _3442;
    vec4 _3245;
    vec4 _3267;
    float _3269;
    float _3273;
    float _3274;
    float _3275;
    float _3276;
    bool _3286;
    for (;;)
    {
        _3245 = cbMatDynParam._m0[0u];
        float _3247 = roundEven(_3245.y);
        bool _3248 = _3247 == 3.0;
        float _3249 = log2(_3235);
        float _3256 = exp2(_3249 * cbSceneParam._m0[78u].x) * _3127;
        float _3257 = exp2(_3249 * cbSceneParam._m0[78u].y) * _3128;
        float _3258 = exp2(_3249 * cbSceneParam._m0[78u].z) * _3129;
        float _3265 = _882 + (-0.5);
        _3267 = cbMtdParam._m0[1u];
        _3269 = _3267.y * _3265;
        float _3272 = (_3247 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3273 = _3272 * (_3248 ? _3256 : (_3256 + (cbSceneParam._m0[72u].w * _3229)));
        _3274 = _3272 * (_3248 ? _3257 : (_3257 + (cbSceneParam._m0[72u].w * _3231)));
        _3275 = _3272 * (_3248 ? _3258 : (_3258 + (cbSceneParam._m0[72u].w * _3233)));
        _3276 = _3265 * 0.999000012874603271484375;
        _3286 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3286)
        {
            if ((cbInstanceData._m0[_951 + 7u].x + _3276) < 0.5)
            {
                _3442 = true;
                break;
            }
        }
        uint _3383 = _952 + uint(_3245.w);
        if ((cbInstanceData._m0[_3383].w < 1.0) && ((cbInstanceData._m0[_3383].w + _3276) < 0.5))
        {
            _3442 = true;
            break;
        }
        if ((_3269 + 1.0) < _3267.x)
        {
            _3442 = true;
            break;
        }
        _3442 = false;
        break;
    }
    float _3646;
    if (_3442)
    {
        discard_state = true;
        _3646 = 0.0;
    }
    else
    {
        _3646 = cbInstanceData._m0[_3130].w;
    }
    SV_Target.x = _3273;
    SV_Target.y = _3274;
    SV_Target.z = _3275;
    SV_Target.w = _3646;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3130].w;
    discard_exit();
}


