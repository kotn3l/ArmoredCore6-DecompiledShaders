#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    float _163 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _165 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _166 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _176 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _177 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _178 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _184 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _186 = texelFetch(g_InstanceIndexBuffer, int(_184));
    uint _187 = _186.x;
    uint _197 = (floatBitsToUint(cbInstanceData._m0[(_187 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _204 = _197 + 1u;
    uint _211 = _197 + 2u;
    precise float _218 = POSITION.x * cbObjMatrix._m0[_197].x;
    precise float _219 = POSITION.y * cbObjMatrix._m0[_197].y;
    precise float _220 = _219 + _218;
    precise float _221 = POSITION.z * cbObjMatrix._m0[_197].z;
    precise float _222 = _221 + _220;
    precise float _223 = 1.0 * cbObjMatrix._m0[_197].w;
    precise float _225 = _223 + _222;
    precise float _226 = POSITION.x * cbObjMatrix._m0[_204].x;
    precise float _227 = POSITION.y * cbObjMatrix._m0[_204].y;
    precise float _228 = _227 + _226;
    precise float _229 = POSITION.z * cbObjMatrix._m0[_204].z;
    precise float _230 = _229 + _228;
    precise float _231 = 1.0 * cbObjMatrix._m0[_204].w;
    precise float _232 = _231 + _230;
    precise float _233 = POSITION.x * cbObjMatrix._m0[_211].x;
    precise float _234 = POSITION.y * cbObjMatrix._m0[_211].y;
    precise float _235 = _234 + _233;
    precise float _236 = POSITION.z * cbObjMatrix._m0[_211].z;
    precise float _237 = _236 + _235;
    precise float _238 = 1.0 * cbObjMatrix._m0[_211].w;
    precise float _239 = _238 + _237;
    precise float _265 = _225 - cbSceneParam._m0[3u].x;
    precise float _266 = _232 - cbSceneParam._m0[3u].y;
    precise float _267 = _239 - cbSceneParam._m0[3u].z;
    precise float _295 = _265 * cbSceneParam._m0[24u].x;
    precise float _296 = _266 * cbSceneParam._m0[24u].y;
    precise float _297 = _296 + _295;
    precise float _298 = _267 * cbSceneParam._m0[24u].z;
    precise float _299 = _298 + _297;
    precise float _300 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _301 = _300 + _299;
    precise float _302 = _265 * cbSceneParam._m0[25u].x;
    precise float _303 = _266 * cbSceneParam._m0[25u].y;
    precise float _304 = _303 + _302;
    precise float _305 = _267 * cbSceneParam._m0[25u].z;
    precise float _306 = _305 + _304;
    precise float _307 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _308 = _307 + _306;
    precise float _309 = _265 * cbSceneParam._m0[26u].x;
    precise float _310 = _266 * cbSceneParam._m0[26u].y;
    precise float _311 = _310 + _309;
    precise float _312 = _267 * cbSceneParam._m0[26u].z;
    precise float _313 = _312 + _311;
    precise float _314 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _315 = _314 + _313;
    precise float _316 = _265 * cbSceneParam._m0[27u].x;
    precise float _317 = _266 * cbSceneParam._m0[27u].y;
    precise float _318 = _317 + _316;
    precise float _319 = _267 * cbSceneParam._m0[27u].z;
    precise float _320 = _319 + _318;
    precise float _321 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _322 = _321 + _320;
    gl_Position.x = _301;
    gl_Position.y = _308;
    gl_Position.z = _315;
    gl_Position.w = _322;
    POSITION_1.x = _301;
    POSITION_1.y = _308;
    POSITION_1.z = _315;
    POSITION_1.w = _322;
    NORMAL_1.x = fma(_166, cbObjMatrix._m0[_197].z, fma(_165, cbObjMatrix._m0[_197].y, cbObjMatrix._m0[_197].x * _163));
    NORMAL_1.y = fma(_166, cbObjMatrix._m0[_204].z, fma(_165, cbObjMatrix._m0[_204].y, cbObjMatrix._m0[_204].x * _163));
    NORMAL_1.z = fma(_166, cbObjMatrix._m0[_211].z, fma(_165, cbObjMatrix._m0[_211].y, cbObjMatrix._m0[_211].x * _163));
    NORMAL_1.w = float(_187);
    TANGENT_1.x = fma(_178, cbObjMatrix._m0[_197].z, fma(_177, cbObjMatrix._m0[_197].y, cbObjMatrix._m0[_197].x * _176));
    TANGENT_1.y = fma(_178, cbObjMatrix._m0[_204].z, fma(_177, cbObjMatrix._m0[_204].y, cbObjMatrix._m0[_204].x * _176));
    TANGENT_1.z = fma(_178, cbObjMatrix._m0[_211].z, fma(_177, cbObjMatrix._m0[_211].y, cbObjMatrix._m0[_211].x * _176));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
}


