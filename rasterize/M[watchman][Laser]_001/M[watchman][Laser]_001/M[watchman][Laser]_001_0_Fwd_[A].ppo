#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_watchman_Laser_001_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_watchman_Laser_001_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_watchman_Laser_001_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _722;
float _723;
float _724;
float _725;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _132 = cbMtdParam._m0[14u].x * TEXCOORD_4.w;
    uint _140 = uint(roundEven(NORMAL.w)) * 13u;
    uint _146 = _140 + 1u;
    uint _151 = _140 + 2u;
    float _168 = sqrt(((cbInstanceData._m0[_146].x * cbInstanceData._m0[_146].x) + (cbInstanceData._m0[_140].x * cbInstanceData._m0[_140].x)) + (cbInstanceData._m0[_151].x * cbInstanceData._m0[_151].x)) * TEXCOORD_1.x;
    float _169 = sqrt(((cbInstanceData._m0[_146].y * cbInstanceData._m0[_146].y) + (cbInstanceData._m0[_140].y * cbInstanceData._m0[_140].y)) + (cbInstanceData._m0[_151].y * cbInstanceData._m0[_151].y)) * TEXCOORD_1.y;
    vec4 _184 = texture(sampler2D(M_watchman_Laser_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * (_168 + (cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x))) + cbTextureTilingScale._m0[1u].z, ((_169 + (cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _219 = texture(sampler2D(M_watchman_Laser_001_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].w * cbPerFrame._m0[22u].x) + _168) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x) + _169) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _237 = cbMtdParam._m0[14u].z * ((cbMtdParam._m0[9u].x * _219.x) + (cbMtdParam._m0[11u].x * _184.x));
    float _238 = ((cbMtdParam._m0[9u].y * _219.y) + (cbMtdParam._m0[11u].y * _184.y)) * cbMtdParam._m0[14u].z;
    float _239 = ((cbMtdParam._m0[9u].z * _219.z) + (cbMtdParam._m0[11u].z * _184.z)) * cbMtdParam._m0[14u].z;
    vec4 _257 = texture(sampler2D(M_watchman_Laser_001_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _734 = isnan(0.0) ? _132 : (isnan(_132) ? 0.0 : max(_132, 0.0));
    float _306 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _347 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _357 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _347);
    float _358 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _347);
    float _359 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _347);
    vec4 _364 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _366 = _364.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _452 = sqrt(((_357 * _357) + (_358 * _358)) + (_359 * _359));
        float _459 = (cbMatDynParam._m0[5u].x * _452) + cbMatDynParam._m0[5u].y;
        float _745 = isnan(0.0) ? _459 : (isnan(_459) ? 0.0 : max(_459, 0.0));
        float _460 = isnan(1.0) ? _745 : (isnan(_745) ? 1.0 : min(_745, 1.0));
        float _464 = (cbMatDynParam._m0[5u].z * _452) + cbMatDynParam._m0[5u].w;
        float _756 = isnan(0.0) ? _464 : (isnan(_464) ? 0.0 : max(_464, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _756 : (isnan(_756) ? 1.0 : min(_756, 1.0))) - _460)) + _460) < ((_366 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _384 = _140 + 9u;
    uint _385 = _384 + uint(cbMatDynParam._m0[0u].w);
    float _391 = ((((((cbMtdParam._m0[10u].x * _257.x) * cbMtdParam._m0[14u].y) - _237) * TEXCOORD_4.x) + _237) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_385].x;
    float _392 = ((((((cbMtdParam._m0[10u].y * _257.y) * cbMtdParam._m0[14u].y) - _238) * TEXCOORD_4.y) + _238) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_385].y;
    float _393 = ((((((cbMtdParam._m0[10u].z * _257.z) * cbMtdParam._m0[14u].y) - _239) * TEXCOORD_4.z) + _239) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_385].z;
    float _394 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
    float _395 = isnan(0.0) ? _392 : (isnan(_392) ? 0.0 : max(_392, 0.0));
    float _396 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
    float _402 = cbMtdParam._m0[2u].x * _391;
    float _403 = cbMtdParam._m0[2u].y * _392;
    float _404 = cbMtdParam._m0[2u].z * _393;
    float _782 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _406 = isnan(1.0) ? _782 : (isnan(_782) ? 1.0 : min(_782, 1.0));
    float _411 = cbInstanceData._m0[_140 + 6u].w * (isnan(1.0) ? _734 : (isnan(_734) ? 1.0 : min(_734, 1.0)));
    float _417 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _418 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _433 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_417, _418, (log2((isnan(cbSceneParam._m0[77u].w) ? _306 : (isnan(_306) ? cbSceneParam._m0[77u].w : min(_306, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _435 = _433.x;
    float _436 = _433.y;
    float _437 = _433.z;
    float _438 = _433.w;
    float _520;
    float _522;
    float _524;
    float _526;
    if (_306 > cbSceneParam._m0[78u].w)
    {
        float _481 = isnan(_306) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _306 : min(cbSceneParam._m0[80u].w, _306));
        float _482 = _481 / _306;
        float _493 = _482 * _357;
        float _494 = _358 * _482;
        float _495 = (-0.0) - _494;
        float _497 = _482 * _359;
        float _499 = (cbSceneParam._m0[77u].w * _495) / _481;
        float _500 = _499 + cbSceneParam._m0[79u].w;
        float _501 = cbSceneParam._m0[79u].w - _494;
        float _507 = sqrt(((_493 * _493) + (_494 * _494)) + (_497 * _497));
        float _510 = (1.0 - (cbSceneParam._m0[77u].w / _481)) * _507;
        float _516 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _518 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _650;
        if (abs((_495 - _499) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _650 = ((((_500 > 0.0) ? exp2(_516 * _500) : (2.0 - exp2(_518 * _500))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _510;
        }
        else
        {
            float _605 = 1.0 / cbSceneParam._m0[80u].x;
            float _606 = isnan(_501) ? _500 : (isnan(_500) ? _501 : max(_500, _501));
            float _607 = isnan(_501) ? _500 : (isnan(_500) ? _501 : min(_500, _501));
            float _616 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : min(_606, 0.0));
            float _617 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : min(_607, 0.0));
            _650 = ((abs(_507 / _495) * cbSceneParam._m0[80u].y) * ((((_616 - _617) * 2.0) - ((exp2(_516 * (isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0)))) - exp2(_516 * (isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0))))) * _605)) - ((exp2(_518 * _616) - exp2(_518 * _617)) * _605))) + (_510 * cbSceneParam._m0[80u].z);
        }
        vec4 _652 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_417, _418, 1.0), 0.0);
        float _661 = exp2((_650 * (-1.44269502162933349609375)) * (1.0 - _652.w));
        float _662 = log2(_661);
        float _678 = log2(_438);
        _520 = (exp2(_678 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_662 * cbSceneParam._m0[78u].x)) * _652.x) / cbSceneParam._m0[78u].x)) + _435;
        _522 = (exp2(_678 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_662 * cbSceneParam._m0[78u].y)) * _652.y) / cbSceneParam._m0[78u].y)) + _436;
        _524 = (exp2(_678 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_662 * cbSceneParam._m0[78u].z)) * _652.z) / cbSceneParam._m0[78u].z)) + _437;
        _526 = _661 * _438;
    }
    else
    {
        _520 = _435;
        _522 = _436;
        _524 = _437;
        _526 = _438;
    }
    bool _688;
    vec4 _535;
    vec4 _559;
    float _561;
    float _566;
    float _567;
    float _568;
    float _571;
    float _574;
    float _577;
    float _578;
    bool _589;
    for (;;)
    {
        _535 = cbMatDynParam._m0[0u];
        float _537 = roundEven(_535.y);
        bool _538 = _537 == 3.0;
        float _540 = log2(_526);
        float _544 = exp2(_540 * cbSceneParam._m0[78u].x);
        float _545 = exp2(_540 * cbSceneParam._m0[78u].y);
        float _546 = exp2(_540 * cbSceneParam._m0[78u].z);
        float _547 = _544 * _394;
        float _548 = _545 * _395;
        float _549 = _546 * _396;
        float _556 = _366 + (-0.5);
        _559 = cbMtdParam._m0[1u];
        _561 = _559.y * _556;
        float _565 = (_537 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _566 = _565 * (_538 ? _547 : (_547 + (cbSceneParam._m0[72u].w * _520)));
        _567 = _565 * (_538 ? _548 : (_548 + (cbSceneParam._m0[72u].w * _522)));
        _568 = _565 * (_538 ? _549 : (_549 + (cbSceneParam._m0[72u].w * _524)));
        _571 = ((_402 * _406) * _544) * _565;
        _574 = ((_403 * _406) * _545) * _565;
        _577 = ((_404 * _406) * _546) * _565;
        _578 = _556 * 0.999000012874603271484375;
        _589 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_589)
        {
            if ((cbInstanceData._m0[_140 + 7u].x + _578) < 0.5)
            {
                _688 = true;
                break;
            }
        }
        uint _642 = _384 + uint(_535.w);
        if ((cbInstanceData._m0[_642].w < 1.0) && ((cbInstanceData._m0[_642].w + _578) < 0.5))
        {
            _688 = true;
            break;
        }
        if ((_561 + 1.0) < _559.x)
        {
            _688 = true;
            break;
        }
        _688 = false;
        break;
    }
    float _693;
    if (_688)
    {
        discard_state = true;
        _693 = 0.0;
    }
    else
    {
        _693 = _411;
    }
    SV_Target.x = _566;
    SV_Target.y = _567;
    SV_Target.z = _568;
    SV_Target.w = _693;
    SV_Target_1.x = _571;
    SV_Target_1.y = _574;
    SV_Target_1.z = _577;
    SV_Target_1.w = _411;
    discard_exit();
}


