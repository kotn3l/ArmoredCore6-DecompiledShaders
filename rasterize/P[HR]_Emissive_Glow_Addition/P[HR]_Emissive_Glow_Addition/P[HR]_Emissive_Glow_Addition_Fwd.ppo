#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D P_HR_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _111 = texture(sampler2D(P_HR_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _136 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _154 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _169 = uint(roundEven(NORMAL.w)) * 13u;
    uint _172 = (_169 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _178 = (_111.x * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_172].x;
    float _179 = (_111.y * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_172].y;
    float _180 = (_111.z * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_172].z;
    float _471 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _194 = isnan(1.0) ? _471 : (isnan(_471) ? 1.0 : min(_471, 1.0));
    uint _195 = _169 + 6u;
    float _205 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _206 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _221 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_205, _206, (log2((isnan(cbSceneParam._m0[77u].w) ? _136 : (isnan(_136) ? cbSceneParam._m0[77u].w : min(_136, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _223 = _221.x;
    float _224 = _221.y;
    float _225 = _221.z;
    float _226 = _221.w;
    float _311;
    float _313;
    float _315;
    float _317;
    if (_136 > cbSceneParam._m0[78u].w)
    {
        float _272 = isnan(_136) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _136 : min(cbSceneParam._m0[80u].w, _136));
        float _273 = _272 / _136;
        float _284 = _273 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _154));
        float _285 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _154)) * _273;
        float _286 = (-0.0) - _285;
        float _288 = _273 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _154));
        float _290 = (cbSceneParam._m0[77u].w * _286) / _272;
        float _291 = _290 + cbSceneParam._m0[79u].w;
        float _292 = cbSceneParam._m0[79u].w - _285;
        float _298 = sqrt(((_284 * _284) + (_285 * _285)) + (_288 * _288));
        float _301 = (1.0 - (cbSceneParam._m0[77u].w / _272)) * _298;
        float _307 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _309 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _411;
        if (abs((_286 - _290) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _411 = ((((_291 > 0.0) ? exp2(_307 * _291) : (2.0 - exp2(_309 * _291))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _301;
        }
        else
        {
            float _384 = 1.0 / cbSceneParam._m0[80u].x;
            float _385 = isnan(_292) ? _291 : (isnan(_291) ? _292 : max(_291, _292));
            float _386 = isnan(_292) ? _291 : (isnan(_291) ? _292 : min(_291, _292));
            float _395 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : min(_385, 0.0));
            float _396 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : min(_386, 0.0));
            _411 = ((abs(_298 / _286) * cbSceneParam._m0[80u].y) * ((((_395 - _396) * 2.0) - ((exp2(_307 * (isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0)))) - exp2(_307 * (isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0))))) * _384)) - ((exp2(_309 * _395) - exp2(_309 * _396)) * _384))) + (_301 * cbSceneParam._m0[80u].z);
        }
        vec4 _413 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_205, _206, 1.0), 0.0);
        float _422 = exp2((_411 * (-1.44269502162933349609375)) * (1.0 - _413.w));
        float _423 = log2(_422);
        float _439 = log2(_226);
        _311 = (exp2(_439 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_423 * cbSceneParam._m0[78u].x)) * _413.x) / cbSceneParam._m0[78u].x)) + _223;
        _313 = (exp2(_439 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_423 * cbSceneParam._m0[78u].y)) * _413.y) / cbSceneParam._m0[78u].y)) + _224;
        _315 = (exp2(_439 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_423 * cbSceneParam._m0[78u].z)) * _413.z) / cbSceneParam._m0[78u].z)) + _225;
        _317 = _422 * _226;
    }
    else
    {
        _311 = _223;
        _313 = _224;
        _315 = _225;
        _317 = _226;
    }
    float _329 = roundEven(cbMatDynParam._m0[0u].y);
    bool _330 = _329 == 3.0;
    float _332 = log2(_317);
    float _336 = exp2(_332 * cbSceneParam._m0[78u].x);
    float _337 = exp2(_332 * cbSceneParam._m0[78u].y);
    float _338 = exp2(_332 * cbSceneParam._m0[78u].z);
    float _339 = _336 * (isnan(0.0) ? _178 : (isnan(_178) ? 0.0 : max(_178, 0.0)));
    float _340 = _337 * (isnan(0.0) ? _179 : (isnan(_179) ? 0.0 : max(_179, 0.0)));
    float _341 = _338 * (isnan(0.0) ? _180 : (isnan(_180) ? 0.0 : max(_180, 0.0)));
    float _351 = (_329 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _351 * (_330 ? _339 : (_339 + (cbSceneParam._m0[72u].w * _311)));
    SV_Target.y = _351 * (_330 ? _340 : (_340 + (cbSceneParam._m0[72u].w * _313)));
    SV_Target.z = _351 * (_330 ? _341 : (_341 + (cbSceneParam._m0[72u].w * _315)));
    SV_Target.w = cbInstanceData._m0[_195].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _178) * _194) * _336) * _351;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _179) * _194) * _337) * _351;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _180) * _194) * _338) * _351;
    SV_Target_1.w = cbInstanceData._m0[_195].w;
}


