#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D P_HR_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _563;
float _564;
float _565;
float _566;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _120 = texture(sampler2D(P_HR_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _145 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _187 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _197 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _187);
    float _198 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _187);
    float _199 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _187);
    vec4 _204 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _206 = _204.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _294 = sqrt(((_197 * _197) + (_198 * _198)) + (_199 * _199));
        float _301 = (cbMatDynParam._m0[5u].x * _294) + cbMatDynParam._m0[5u].y;
        float _575 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
        float _302 = isnan(1.0) ? _575 : (isnan(_575) ? 1.0 : min(_575, 1.0));
        float _306 = (cbMatDynParam._m0[5u].z * _294) + cbMatDynParam._m0[5u].w;
        float _586 = isnan(0.0) ? _306 : (isnan(_306) ? 0.0 : max(_306, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _586 : (isnan(_586) ? 1.0 : min(_586, 1.0))) - _302)) + _302) < ((_206 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _224 = uint(roundEven(NORMAL.w)) * 13u;
    uint _226 = _224 + 9u;
    uint _227 = _226 + uint(cbMatDynParam._m0[0u].w);
    float _233 = (_120.x * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_227].x;
    float _234 = (_120.y * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_227].y;
    float _235 = (_120.z * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_227].z;
    float _236 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
    float _237 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
    float _238 = isnan(0.0) ? _235 : (isnan(_235) ? 0.0 : max(_235, 0.0));
    float _244 = cbMtdParam._m0[2u].x * _233;
    float _245 = cbMtdParam._m0[2u].y * _234;
    float _246 = cbMtdParam._m0[2u].z * _235;
    float _612 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _249 = isnan(1.0) ? _612 : (isnan(_612) ? 1.0 : min(_612, 1.0));
    uint _250 = _224 + 6u;
    float _259 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _260 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _275 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_259, _260, (log2((isnan(cbSceneParam._m0[77u].w) ? _145 : (isnan(_145) ? cbSceneParam._m0[77u].w : min(_145, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _277 = _275.x;
    float _278 = _275.y;
    float _279 = _275.z;
    float _280 = _275.w;
    float _362;
    float _364;
    float _366;
    float _368;
    if (_145 > cbSceneParam._m0[78u].w)
    {
        float _323 = isnan(_145) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _145 : min(cbSceneParam._m0[80u].w, _145));
        float _324 = _323 / _145;
        float _335 = _324 * _197;
        float _336 = _198 * _324;
        float _337 = (-0.0) - _336;
        float _339 = _324 * _199;
        float _341 = (cbSceneParam._m0[77u].w * _337) / _323;
        float _342 = _341 + cbSceneParam._m0[79u].w;
        float _343 = cbSceneParam._m0[79u].w - _336;
        float _349 = sqrt(((_335 * _335) + (_336 * _336)) + (_339 * _339));
        float _352 = (1.0 - (cbSceneParam._m0[77u].w / _323)) * _349;
        float _358 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _360 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _496;
        if (abs((_337 - _341) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _496 = ((((_342 > 0.0) ? exp2(_358 * _342) : (2.0 - exp2(_360 * _342))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _352;
        }
        else
        {
            float _448 = 1.0 / cbSceneParam._m0[80u].x;
            float _449 = isnan(_343) ? _342 : (isnan(_342) ? _343 : max(_342, _343));
            float _450 = isnan(_343) ? _342 : (isnan(_342) ? _343 : min(_342, _343));
            float _459 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : min(_449, 0.0));
            float _460 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : min(_450, 0.0));
            _496 = ((abs(_349 / _337) * cbSceneParam._m0[80u].y) * ((((_459 - _460) * 2.0) - ((exp2(_358 * (isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0)))) - exp2(_358 * (isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0))))) * _448)) - ((exp2(_360 * _459) - exp2(_360 * _460)) * _448))) + (_352 * cbSceneParam._m0[80u].z);
        }
        vec4 _498 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_259, _260, 1.0), 0.0);
        float _507 = exp2((_496 * (-1.44269502162933349609375)) * (1.0 - _498.w));
        float _508 = log2(_507);
        float _524 = log2(_280);
        _362 = (exp2(_524 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_508 * cbSceneParam._m0[78u].x)) * _498.x) / cbSceneParam._m0[78u].x)) + _277;
        _364 = (exp2(_524 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_508 * cbSceneParam._m0[78u].y)) * _498.y) / cbSceneParam._m0[78u].y)) + _278;
        _366 = (exp2(_524 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_508 * cbSceneParam._m0[78u].z)) * _498.z) / cbSceneParam._m0[78u].z)) + _279;
        _368 = _507 * _280;
    }
    else
    {
        _362 = _277;
        _364 = _278;
        _366 = _279;
        _368 = _280;
    }
    bool _534;
    vec4 _378;
    vec4 _402;
    float _404;
    float _409;
    float _410;
    float _411;
    float _414;
    float _417;
    float _420;
    float _421;
    bool _432;
    for (;;)
    {
        _378 = cbMatDynParam._m0[0u];
        float _380 = roundEven(_378.y);
        bool _381 = _380 == 3.0;
        float _383 = log2(_368);
        float _387 = exp2(_383 * cbSceneParam._m0[78u].x);
        float _388 = exp2(_383 * cbSceneParam._m0[78u].y);
        float _389 = exp2(_383 * cbSceneParam._m0[78u].z);
        float _390 = _387 * _236;
        float _391 = _388 * _237;
        float _392 = _389 * _238;
        float _399 = _206 + (-0.5);
        _402 = cbMtdParam._m0[1u];
        _404 = _402.y * _399;
        float _408 = (_380 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _409 = _408 * (_381 ? _390 : (_390 + (cbSceneParam._m0[72u].w * _362)));
        _410 = _408 * (_381 ? _391 : (_391 + (cbSceneParam._m0[72u].w * _364)));
        _411 = _408 * (_381 ? _392 : (_392 + (cbSceneParam._m0[72u].w * _366)));
        _414 = ((_244 * _249) * _387) * _408;
        _417 = ((_245 * _249) * _388) * _408;
        _420 = ((_246 * _249) * _389) * _408;
        _421 = _399 * 0.999000012874603271484375;
        _432 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_432)
        {
            if ((cbInstanceData._m0[_224 + 7u].x + _421) < 0.5)
            {
                _534 = true;
                break;
            }
        }
        uint _485 = _226 + uint(_378.w);
        _534 = ((cbInstanceData._m0[_485].w < 1.0) && ((cbInstanceData._m0[_485].w + _421) < 0.5)) || (_404 < _402.x);
        break;
    }
    float _536;
    if (_534)
    {
        discard_state = true;
        _536 = 0.0;
    }
    else
    {
        _536 = cbInstanceData._m0[_250].w;
    }
    SV_Target.x = _409;
    SV_Target.y = _410;
    SV_Target.z = _411;
    SV_Target.w = _536;
    SV_Target_1.x = _414;
    SV_Target_1.y = _417;
    SV_Target_1.z = _420;
    SV_Target_1.w = cbInstanceData._m0[_250].w;
    discard_exit();
}


