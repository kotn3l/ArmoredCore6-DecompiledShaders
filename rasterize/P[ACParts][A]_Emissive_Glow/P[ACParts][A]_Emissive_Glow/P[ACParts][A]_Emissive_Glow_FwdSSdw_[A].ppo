#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_A_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_A_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _767;
float _2999;
float _3000;
float _3001;
float _3002;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _165 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _166 = _165 * NORMAL.x;
    float _167 = _165 * NORMAL.y;
    float _168 = _165 * NORMAL.z;
    vec4 _188 = texture(sampler2D(P_ACParts_A_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _194 = _188.x * cbMtdParam._m0[10u].x;
    float _195 = _188.y * cbMtdParam._m0[10u].y;
    float _196 = _188.z * cbMtdParam._m0[10u].z;
    vec4 _218 = texture(sampler2D(P_ACParts_A_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _226 = inversesqrt(dot(vec3(_166, _167, _168), vec3(_166, _167, _168)));
    float _227 = _226 * _166;
    float _228 = _226 * _167;
    float _229 = _226 * _168;
    float _3011 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _3022 = isnan(0.0) ? _195 : (isnan(_195) ? 0.0 : max(_195, 0.0));
    float _3033 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _249 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _290 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _300 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _290);
    float _301 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _290);
    float _302 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _290);
    float _306 = inversesqrt(dot(vec3(_300, _301, _302), vec3(_300, _301, _302)));
    float _307 = _300 * _306;
    float _308 = _301 * _306;
    float _309 = _302 * _306;
    vec4 _314 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _316 = _314.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _446 = sqrt(((_300 * _300) + (_301 * _301)) + (_302 * _302));
        float _452 = (cbMatDynParam._m0[5u].x * _446) + cbMatDynParam._m0[5u].y;
        float _3044 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
        float _453 = isnan(1.0) ? _3044 : (isnan(_3044) ? 1.0 : min(_3044, 1.0));
        float _457 = (cbMatDynParam._m0[5u].z * _446) + cbMatDynParam._m0[5u].w;
        float _3055 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3055 : (isnan(_3055) ? 1.0 : min(_3055, 1.0))) - _453)) + _453) < ((_316 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _328 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _329 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _349 = fma(_229, cbSceneParam._m0[5u].z, fma(_228, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _227));
    float _352 = fma(_229, cbSceneParam._m0[6u].z, fma(_228, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _227));
    float _355 = fma(_229, cbSceneParam._m0[7u].z, fma(_228, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _227));
    uint _368 = uint(roundEven(NORMAL.w)) * 13u;
    uint _370 = _368 + 9u;
    uint _371 = _370 + uint(cbMatDynParam._m0[0u].w);
    float _377 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3011 : (isnan(_3011) ? 1.0 : min(_3011, 1.0)))) * cbInstanceData._m0[_371].x;
    float _378 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3022 : (isnan(_3022) ? 1.0 : min(_3022, 1.0)))) * cbInstanceData._m0[_371].y;
    float _379 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3033 : (isnan(_3033) ? 1.0 : min(_3033, 1.0)))) * cbInstanceData._m0[_371].z;
    float _3066 = isnan(0.0) ? _377 : (isnan(_377) ? 0.0 : max(_377, 0.0));
    float _380 = isnan(1.0) ? _3066 : (isnan(_3066) ? 1.0 : min(_3066, 1.0));
    float _3077 = isnan(0.0) ? _378 : (isnan(_378) ? 0.0 : max(_378, 0.0));
    float _381 = isnan(1.0) ? _3077 : (isnan(_3077) ? 1.0 : min(_3077, 1.0));
    float _3088 = isnan(0.0) ? _379 : (isnan(_379) ? 0.0 : max(_379, 0.0));
    float _382 = isnan(1.0) ? _3088 : (isnan(_3088) ? 1.0 : min(_3088, 1.0));
    vec4 _391 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _328, cbSceneParam._m0[86u].y * _329));
    float _394 = _391.x * TEXCOORD.z;
    float _395 = dot(vec3(_227, _228, _229), vec3(_307, _308, _309));
    float _398 = _395 * 2.0;
    float _403 = (_398 * _227) - _307;
    float _404 = (_398 * _228) - _308;
    float _405 = (_398 * _229) - _309;
    float _427 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _431 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _435 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _766;
    float _768;
    float _769;
    float _770;
    float _771;
    float _772;
    float _773;
    float _774;
    float _775;
    float _776;
    float _777;
    float _778;
    float _779;
    float _780;
    float _781;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _491 = fma(_435, cbModelParam._m0[26u].z, fma(_431, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _427));
        float _495 = fma(_435, cbModelParam._m0[27u].z, fma(_431, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _427));
        float _499 = fma(_435, cbModelParam._m0[28u].z, fma(_431, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _427));
        float _524 = _427 + _227;
        float _525 = _431 + _228;
        float _526 = _435 + _229;
        float _536 = fma(_526, cbModelParam._m0[26u].z, fma(_525, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _524)) - _491;
        float _537 = fma(_526, cbModelParam._m0[27u].z, fma(_525, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _524)) - _495;
        float _538 = fma(_526, cbModelParam._m0[28u].z, fma(_525, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _524)) - _499;
        float _542 = inversesqrt(dot(vec3(_536, _537, _538), vec3(_536, _537, _538)));
        float _555 = ((_542 * _536) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_491 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _556 = ((_542 * _537) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_495 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _557 = ((_542 * _538) / cbModelParam._m0[34u].z) + ((((((_499 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _560 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_555, _556, _557), 0.0);
        vec4 _567 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_555, _556, _557), 0.0);
        vec4 _574 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_555, _556, _557), 0.0);
        vec4 _581 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_555, _556, _557), 0.0);
        float _594 = exp2((_560.w + (-0.5)) * 20.0) * 2.0;
        float _595 = _594 * (_560.x + (-0.5));
        float _596 = _594 * (_560.y + (-0.5));
        float _597 = _594 * (_560.z + (-0.5));
        float _604 = exp2((_567.w + (-0.5)) * 20.0) * 2.0;
        float _605 = _604 * (_567.x + (-0.5));
        float _606 = _604 * (_567.y + (-0.5));
        float _607 = _604 * (_567.z + (-0.5));
        float _614 = exp2((_574.w + (-0.5)) * 20.0) * 2.0;
        float _615 = _614 * (_574.x + (-0.5));
        float _616 = _614 * (_574.y + (-0.5));
        float _617 = _614 * (_574.z + (-0.5));
        float _624 = exp2((_581.w + (-0.5)) * 20.0) * 2.0;
        float _625 = _624 * (_581.x + (-0.5));
        float _626 = _624 * (_581.y + (-0.5));
        float _627 = _624 * (_581.z + (-0.5));
        float _628 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
        float _629 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
        float _630 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
        float _631 = _595 * 0.5;
        float _632 = _605 * 0.5;
        float _633 = _615 * 0.5;
        float _634 = dot(vec3(_631, _632, _633), vec3(_631, _632, _633));
        float _639 = (_634 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_634);
        float _648 = (dot(vec3(_227, _228, _229), vec3(_639 * _631, _639 * _632, _639 * _633)) + 1.0) * 0.5;
        float _3114 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
        float _658 = sqrt(((_632 * _632) + (_631 * _631)) + (_633 * _633)) / (_628 + 9.9999997473787516355514526367188e-06);
        float _3125 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
        float _659 = isnan(1.0) ? _3125 : (isnan(_3125) ? 1.0 : min(_3125, 1.0));
        float _660 = _659 * 2.0;
        float _664 = (1.0 - _659) / (_659 + 1.0);
        float _3136 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
        float _665 = isnan(1.0) ? _3136 : (isnan(_3136) ? 1.0 : min(_3136, 1.0));
        float _674 = ((((1.0 - _665) * (_660 + 2.0)) * exp2(log2(isnan(1.0) ? _3114 : (isnan(_3114) ? 1.0 : min(_3114, 1.0))) * (_660 + 1.0))) + _665) * _628;
        float _675 = _596 * 0.5;
        float _676 = _606 * 0.5;
        float _677 = _616 * 0.5;
        float _678 = dot(vec3(_675, _676, _677), vec3(_675, _676, _677));
        float _683 = (_678 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_678);
        float _691 = (dot(vec3(_227, _228, _229), vec3(_683 * _675, _683 * _676, _683 * _677)) + 1.0) * 0.5;
        float _3147 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
        float _700 = sqrt(((_676 * _676) + (_675 * _675)) + (_677 * _677)) / (_629 + 9.9999997473787516355514526367188e-06);
        float _3158 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
        float _701 = isnan(1.0) ? _3158 : (isnan(_3158) ? 1.0 : min(_3158, 1.0));
        float _702 = _701 * 2.0;
        float _706 = (1.0 - _701) / (_701 + 1.0);
        float _3169 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
        float _707 = isnan(1.0) ? _3169 : (isnan(_3169) ? 1.0 : min(_3169, 1.0));
        float _716 = ((((1.0 - _707) * (_702 + 2.0)) * exp2(log2(isnan(1.0) ? _3147 : (isnan(_3147) ? 1.0 : min(_3147, 1.0))) * (_702 + 1.0))) + _707) * _629;
        float _717 = _597 * 0.5;
        float _718 = _607 * 0.5;
        float _719 = _617 * 0.5;
        float _720 = dot(vec3(_717, _718, _719), vec3(_717, _718, _719));
        float _725 = (_720 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_720);
        float _733 = (dot(vec3(_227, _228, _229), vec3(_725 * _717, _725 * _718, _725 * _719)) + 1.0) * 0.5;
        float _3180 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
        float _742 = sqrt(((_718 * _718) + (_717 * _717)) + (_719 * _719)) / (_630 + 9.9999997473787516355514526367188e-06);
        float _3191 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
        float _743 = isnan(1.0) ? _3191 : (isnan(_3191) ? 1.0 : min(_3191, 1.0));
        float _744 = _743 * 2.0;
        float _748 = (1.0 - _743) / (_743 + 1.0);
        float _3202 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
        float _749 = isnan(1.0) ? _3202 : (isnan(_3202) ? 1.0 : min(_3202, 1.0));
        float _758 = ((((1.0 - _749) * (_744 + 2.0)) * exp2(log2(isnan(1.0) ? _3180 : (isnan(_3180) ? 1.0 : min(_3180, 1.0))) * (_744 + 1.0))) + _749) * _630;
        _766 = _597;
        _768 = _596;
        _769 = _595;
        _770 = _607;
        _771 = _606;
        _772 = _605;
        _773 = _617;
        _774 = _616;
        _775 = _615;
        _776 = _630;
        _777 = _629;
        _778 = _628;
        _779 = cbModelParam._m0[36u].z * (isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0)));
        _780 = cbModelParam._m0[36u].z * (isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : max(_716, 0.0)));
        _781 = cbModelParam._m0[36u].z * (isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0)));
    }
    else
    {
        _766 = _767;
        _768 = _767;
        _769 = _767;
        _770 = _767;
        _771 = _767;
        _772 = _767;
        _773 = _767;
        _774 = _767;
        _775 = _767;
        _776 = _767;
        _777 = _767;
        _778 = _767;
        _779 = 0.0;
        _780 = 0.0;
        _781 = 0.0;
    }
    float _1079;
    float _1080;
    float _1081;
    float _1082;
    float _1083;
    float _1084;
    float _1085;
    float _1086;
    float _1087;
    float _1088;
    float _1089;
    float _1090;
    float _1091;
    float _1092;
    float _1093;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _810 = fma(_435, cbModelParam._m0[30u].z, fma(_431, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _427));
        float _814 = fma(_435, cbModelParam._m0[31u].z, fma(_431, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _427));
        float _818 = fma(_435, cbModelParam._m0[32u].z, fma(_431, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _427));
        float _841 = _427 + _227;
        float _842 = _431 + _228;
        float _843 = _435 + _229;
        float _853 = fma(_843, cbModelParam._m0[30u].z, fma(_842, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _841)) - _810;
        float _854 = fma(_843, cbModelParam._m0[31u].z, fma(_842, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _841)) - _814;
        float _855 = fma(_843, cbModelParam._m0[32u].z, fma(_842, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _841)) - _818;
        float _859 = inversesqrt(dot(vec3(_853, _854, _855), vec3(_853, _854, _855)));
        float _872 = ((_859 * _853) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_810 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _873 = ((_859 * _854) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_814 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _874 = ((_859 * _855) / cbModelParam._m0[35u].z) + ((((((_818 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _876 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_872, _873, _874), 0.0);
        vec4 _883 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_872, _873, _874), 0.0);
        vec4 _890 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_872, _873, _874), 0.0);
        vec4 _897 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_872, _873, _874), 0.0);
        float _909 = exp2((_876.w + (-0.5)) * 20.0) * 2.0;
        float _910 = _909 * (_876.x + (-0.5));
        float _911 = _909 * (_876.y + (-0.5));
        float _912 = _909 * (_876.z + (-0.5));
        float _919 = exp2((_883.w + (-0.5)) * 20.0) * 2.0;
        float _920 = _919 * (_883.x + (-0.5));
        float _921 = _919 * (_883.y + (-0.5));
        float _922 = _919 * (_883.z + (-0.5));
        float _929 = exp2((_890.w + (-0.5)) * 20.0) * 2.0;
        float _930 = _929 * (_890.x + (-0.5));
        float _931 = _929 * (_890.y + (-0.5));
        float _932 = _929 * (_890.z + (-0.5));
        float _939 = exp2((_897.w + (-0.5)) * 20.0) * 2.0;
        float _940 = _939 * (_897.x + (-0.5));
        float _941 = _939 * (_897.y + (-0.5));
        float _942 = _939 * (_897.z + (-0.5));
        float _943 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
        float _944 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
        float _945 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
        float _946 = _910 * 0.5;
        float _947 = _920 * 0.5;
        float _948 = _930 * 0.5;
        float _949 = dot(vec3(_946, _947, _948), vec3(_946, _947, _948));
        float _954 = (_949 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_949);
        float _962 = (dot(vec3(_227, _228, _229), vec3(_954 * _946, _954 * _947, _954 * _948)) + 1.0) * 0.5;
        float _3243 = isnan(0.0) ? _962 : (isnan(_962) ? 0.0 : max(_962, 0.0));
        float _971 = sqrt(((_947 * _947) + (_946 * _946)) + (_948 * _948)) / (_943 + 9.9999997473787516355514526367188e-06);
        float _3254 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
        float _972 = isnan(1.0) ? _3254 : (isnan(_3254) ? 1.0 : min(_3254, 1.0));
        float _973 = _972 * 2.0;
        float _977 = (1.0 - _972) / (_972 + 1.0);
        float _3265 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
        float _978 = isnan(1.0) ? _3265 : (isnan(_3265) ? 1.0 : min(_3265, 1.0));
        float _987 = ((((1.0 - _978) * (_973 + 2.0)) * exp2(log2(isnan(1.0) ? _3243 : (isnan(_3243) ? 1.0 : min(_3243, 1.0))) * (_973 + 1.0))) + _978) * _943;
        float _988 = _911 * 0.5;
        float _989 = _921 * 0.5;
        float _990 = _931 * 0.5;
        float _991 = dot(vec3(_988, _989, _990), vec3(_988, _989, _990));
        float _996 = (_991 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_991);
        float _1004 = (dot(vec3(_227, _228, _229), vec3(_996 * _988, _996 * _989, _996 * _990)) + 1.0) * 0.5;
        float _3276 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
        float _1013 = sqrt(((_989 * _989) + (_988 * _988)) + (_990 * _990)) / (_944 + 9.9999997473787516355514526367188e-06);
        float _3287 = isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0));
        float _1014 = isnan(1.0) ? _3287 : (isnan(_3287) ? 1.0 : min(_3287, 1.0));
        float _1015 = _1014 * 2.0;
        float _1019 = (1.0 - _1014) / (_1014 + 1.0);
        float _3298 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
        float _1020 = isnan(1.0) ? _3298 : (isnan(_3298) ? 1.0 : min(_3298, 1.0));
        float _1029 = ((((1.0 - _1020) * (_1015 + 2.0)) * exp2(log2(isnan(1.0) ? _3276 : (isnan(_3276) ? 1.0 : min(_3276, 1.0))) * (_1015 + 1.0))) + _1020) * _944;
        float _1030 = _912 * 0.5;
        float _1031 = _922 * 0.5;
        float _1032 = _932 * 0.5;
        float _1033 = dot(vec3(_1030, _1031, _1032), vec3(_1030, _1031, _1032));
        float _1038 = (_1033 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1033);
        float _1046 = (dot(vec3(_227, _228, _229), vec3(_1038 * _1030, _1038 * _1031, _1038 * _1032)) + 1.0) * 0.5;
        float _3309 = isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0));
        float _1055 = sqrt(((_1031 * _1031) + (_1030 * _1030)) + (_1032 * _1032)) / (_945 + 9.9999997473787516355514526367188e-06);
        float _3320 = isnan(0.0) ? _1055 : (isnan(_1055) ? 0.0 : max(_1055, 0.0));
        float _1056 = isnan(1.0) ? _3320 : (isnan(_3320) ? 1.0 : min(_3320, 1.0));
        float _1057 = _1056 * 2.0;
        float _1061 = (1.0 - _1056) / (_1056 + 1.0);
        float _3331 = isnan(0.0) ? _1061 : (isnan(_1061) ? 0.0 : max(_1061, 0.0));
        float _1062 = isnan(1.0) ? _3331 : (isnan(_3331) ? 1.0 : min(_3331, 1.0));
        float _1071 = ((((1.0 - _1062) * (_1057 + 2.0)) * exp2(log2(isnan(1.0) ? _3309 : (isnan(_3309) ? 1.0 : min(_3309, 1.0))) * (_1057 + 1.0))) + _1062) * _945;
        _1079 = _912;
        _1080 = _911;
        _1081 = _910;
        _1082 = _922;
        _1083 = _921;
        _1084 = _920;
        _1085 = _932;
        _1086 = _931;
        _1087 = _930;
        _1088 = _945;
        _1089 = _944;
        _1090 = _943;
        _1091 = cbModelParam._m0[36u].w * (isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0)));
        _1092 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0)));
        _1093 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0)));
    }
    else
    {
        _1079 = _767;
        _1080 = _767;
        _1081 = _767;
        _1082 = _767;
        _1083 = _767;
        _1084 = _767;
        _1085 = _767;
        _1086 = _767;
        _1087 = _767;
        _1088 = _767;
        _1089 = _767;
        _1090 = _767;
        _1091 = 0.0;
        _1092 = 0.0;
        _1093 = 0.0;
    }
    float _1103 = (cbModelParam._m0[1u].x * (_1091 - _779)) + _779;
    float _1104 = (cbModelParam._m0[1u].x * (_1092 - _780)) + _780;
    float _1105 = (cbModelParam._m0[1u].x * (_1093 - _781)) + _781;
    float _1126 = fma(_1105, cbSceneParam._m0[89u].z, fma(_1104, cbSceneParam._m0[89u].y, _1103 * cbSceneParam._m0[89u].x));
    float _1129 = fma(_1105, cbSceneParam._m0[90u].z, fma(_1104, cbSceneParam._m0[90u].y, _1103 * cbSceneParam._m0[90u].x));
    float _1132 = fma(_1105, cbSceneParam._m0[91u].z, fma(_1104, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1103));
    float _1147 = _403 * 0.5;
    float _1148 = _404 * 0.5;
    float _1149 = _405 * 0.5;
    float _1150 = dot(vec4(_1147, _1148, _1149, 1.0), vec4(_1081, _1084, _1087, _1090));
    float _1153 = dot(vec4(_1147, _1148, _1149, 1.0), vec4(_1080, _1083, _1086, _1089));
    float _1156 = dot(vec4(_1147, _1148, _1149, 1.0), vec4(_1079, _1082, _1085, _1088));
    float _1190;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1163 = dot(vec4(_1147, _1148, _1149, 1.0), vec4(_766, _770, _773, _776));
        float _1167 = dot(vec4(_1147, _1148, _1149, 1.0), vec4(_768, _771, _774, _777));
        float _1171 = dot(vec4(_1147, _1148, _1149, 1.0), vec4(_769, _772, _775, _778));
        float _1178 = dot(vec4(cbModelParam._m0[39u]), vec4(_1147, _1148, _1149, 1.0));
        _1190 = dot(vec3(isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0)), isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0)), isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1178) ? 0.0 : (isnan(0.0) ? _1178 : max(0.0, _1178))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1190 = 1.0;
    }
    float _1201;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1192 = dot(vec4(cbModelParam._m0[40u]), vec4(_1147, _1148, _1149, 1.0));
        _1201 = dot(vec3(isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0)), isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0)), isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1192) ? 0.0 : (isnan(0.0) ? _1192 : max(0.0, _1192))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1201 = 1.0;
    }
    float _1205 = (_1201 * cbModelParam._m0[1u].x) + (_1190 * (1.0 - cbModelParam._m0[1u].x));
    float _1214 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1296;
    float _1298;
    float _1300;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1263 = fma(_435, cbModelParam._m0[13u].z, fma(_431, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _427)) + cbModelParam._m0[13u].w;
        float _1267 = fma(_435, cbModelParam._m0[14u].z, fma(_431, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _427)) + cbModelParam._m0[14u].w;
        float _1271 = fma(_435, cbModelParam._m0[15u].z, fma(_431, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _427)) + cbModelParam._m0[15u].w;
        float _1274 = fma(_405, cbModelParam._m0[13u].z, fma(_404, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _403));
        float _1277 = fma(_405, cbModelParam._m0[14u].z, fma(_404, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _403));
        float _1280 = fma(_405, cbModelParam._m0[15u].z, fma(_404, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _403));
        float _1306;
        if (_1274 > 0.0)
        {
            _1306 = abs((1.0 - _1263) / _1274);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1274 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1263 + 1.0) / _1274);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1306 = frontier_phi_17_15_ladder;
        }
        float _1534;
        if (_1277 > 0.0)
        {
            _1534 = abs((1.0 - _1267) / _1277);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1277 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1267 + 1.0) / _1277);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1534 = frontier_phi_26_22_ladder;
        }
        float _1726;
        if (_1280 > 0.0)
        {
            _1726 = abs((1.0 - _1271) / _1280);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1280 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1271 + 1.0) / _1280);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _1726 = frontier_phi_38_33_ladder;
        }
        float _1728 = isnan(_1534) ? _1306 : (isnan(_1306) ? _1534 : min(_1306, _1534));
        float _1729 = isnan(_1726) ? _1728 : (isnan(_1728) ? _1726 : min(_1728, _1726));
        float _1733 = (_1729 * _1274) + _1263;
        float _1734 = (_1729 * _1277) + _1267;
        float _1735 = (_1729 * _1280) + _1271;
        float _1736 = _1729 * 9.9999997473787516355514526367188e-05;
        float _1738 = (-1.0) - _1736;
        float _1740 = _1736 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_1735 > _1740) || ((_1735 < _1738) || ((_1734 > _1740) || ((_1734 < _1738) || ((_1733 < _1738) || (_1733 > _1740))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1832 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1735, cbModelParam._m0[9u].z, fma(_1734, cbModelParam._m0[9u].y, _1733 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1735, cbModelParam._m0[10u].z, fma(_1734, cbModelParam._m0[10u].y, _1733 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1735, cbModelParam._m0[11u].z, fma(_1734, cbModelParam._m0[11u].y, _1733 * cbModelParam._m0[11u].x))), _1214);
            frontier_phi_16_38_ladder = _1832.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _1832.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _1832.x * cbModelParam._m0[1u].y;
        }
        _1296 = frontier_phi_16_38_ladder_2;
        _1298 = frontier_phi_16_38_ladder_1;
        _1300 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1284 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_403, _404, _405), _1214);
        _1296 = _1284.x * cbModelParam._m0[1u].y;
        _1298 = _1284.y * cbModelParam._m0[1u].y;
        _1300 = _1284.z * cbModelParam._m0[1u].y;
    }
    float _1303 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1396;
    float _1398;
    float _1400;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1360 = fma(_435, cbModelParam._m0[21u].z, fma(_431, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _427)) + cbModelParam._m0[21u].w;
        float _1364 = fma(_435, cbModelParam._m0[22u].z, fma(_431, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _427)) + cbModelParam._m0[22u].w;
        float _1368 = fma(_435, cbModelParam._m0[23u].z, fma(_431, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _427)) + cbModelParam._m0[23u].w;
        float _1371 = fma(_405, cbModelParam._m0[21u].z, fma(_404, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _403));
        float _1374 = fma(_405, cbModelParam._m0[22u].z, fma(_404, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _403));
        float _1377 = fma(_405, cbModelParam._m0[23u].z, fma(_404, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _403));
        float _1539;
        if (_1371 > 0.0)
        {
            _1539 = abs((1.0 - _1360) / _1371);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1371 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1360 + 1.0) / _1371);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1539 = frontier_phi_28_24_ladder;
        }
        float _1753;
        if (_1374 > 0.0)
        {
            _1753 = abs((1.0 - _1364) / _1374);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1374 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1364 + 1.0) / _1374);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _1753 = frontier_phi_40_35_ladder;
        }
        float _1904;
        if (_1377 > 0.0)
        {
            _1904 = abs((1.0 - _1368) / _1377);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1377 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1368 + 1.0) / _1377);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _1904 = frontier_phi_49_46_ladder;
        }
        float _1906 = isnan(_1753) ? _1539 : (isnan(_1539) ? _1753 : min(_1539, _1753));
        float _1907 = isnan(_1904) ? _1906 : (isnan(_1906) ? _1904 : min(_1906, _1904));
        float _1911 = (_1907 * _1371) + _1360;
        float _1912 = (_1907 * _1374) + _1364;
        float _1913 = (_1907 * _1377) + _1368;
        float _1914 = _1907 * 9.9999997473787516355514526367188e-05;
        float _1915 = (-1.0) - _1914;
        float _1917 = _1914 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_1913 > _1917) || ((_1913 < _1915) || ((_1912 > _1917) || ((_1912 < _1915) || ((_1911 < _1915) || (_1911 > _1917))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2147 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1913, cbModelParam._m0[17u].z, fma(_1912, cbModelParam._m0[17u].y, _1911 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1913, cbModelParam._m0[18u].z, fma(_1912, cbModelParam._m0[18u].y, _1911 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1913, cbModelParam._m0[19u].z, fma(_1912, cbModelParam._m0[19u].y, _1911 * cbModelParam._m0[19u].x))), _1303);
            frontier_phi_25_49_ladder = _2147.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _2147.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _2147.x * cbModelParam._m0[1u].z;
        }
        _1396 = frontier_phi_25_49_ladder_2;
        _1398 = frontier_phi_25_49_ladder_1;
        _1400 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _1380 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_403, _404, _405), _1303);
        _1396 = _1380.x * cbModelParam._m0[1u].z;
        _1398 = _1380.y * cbModelParam._m0[1u].z;
        _1400 = _1380.z * cbModelParam._m0[1u].z;
    }
    float _1412 = _394 * 0.01200000010430812835693359375;
    float _1414 = _1412 * ((cbModelParam._m0[1u].w * (_1396 - _1296)) + _1296);
    float _1415 = _1412 * ((cbModelParam._m0[1u].w * (_1398 - _1298)) + _1298);
    float _1416 = _1412 * ((cbModelParam._m0[1u].w * (_1400 - _1300)) + _1300);
    float _1419 = fma(_1416, cbSceneParam._m0[89u].z, fma(_1415, cbSceneParam._m0[89u].y, _1414 * cbSceneParam._m0[89u].x));
    float _1422 = fma(_1416, cbSceneParam._m0[90u].z, fma(_1415, cbSceneParam._m0[90u].y, _1414 * cbSceneParam._m0[90u].x));
    float _1425 = fma(_1416, cbSceneParam._m0[91u].z, fma(_1415, cbSceneParam._m0[91u].y, _1414 * cbSceneParam._m0[91u].x));
    vec4 _1433 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_328, _329));
    float _1435 = _1433.w;
    float _1447 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1435);
    float _1448 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1435);
    float _1449 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1435);
    uvec4 _1453 = floatBitsToUint(cbInstanceData._m0[_368 + 5u]);
    uint _1455 = _1453.x * 14u;
    uint _1456 = _1455 + 13u;
    float _1463 = _394 + (-1.0);
    float _1469 = (cbLight._m0[_1456].x * _1463) + 1.0;
    float _1470 = (cbLight._m0[_1456].y * _1463) + 1.0;
    float _1471 = (cbLight._m0[_1456].z * _1463) + 1.0;
    float _1472 = (cbLight._m0[_1456].w * _1463) + 1.0;
    uint _1473 = _1455 + 5u;
    float _1479 = isnan(1.0) ? _1470 : (isnan(_1470) ? 1.0 : min(_1470, 1.0));
    uint _1483 = _1455 + 4u;
    float _1493 = isnan(1.0) ? _1469 : (isnan(_1469) ? 1.0 : min(_1469, 1.0));
    uint _1497 = _1455 | 1u;
    float _1508 = dot(vec3(cbLight._m0[_1455].xyz), vec3(_227, _228, _229));
    float _1511 = dot(vec3(cbLight._m0[_1497].xyz), vec3(_227, _228, _229));
    float _3467 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
    float _3478 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
    float _1516 = (isnan(1.0) ? _3467 : (isnan(_3467) ? 1.0 : min(_3467, 1.0))) * 0.3183098733425140380859375;
    float _1518 = (isnan(1.0) ? _3478 : (isnan(_3478) ? 1.0 : min(_3478, 1.0))) * 0.3183098733425140380859375;
    float _1525 = ((cbLight._m0[_1473].x * _1479) * _1518) + (((cbLight._m0[_1483].x * _1447) * _1493) * _1516);
    float _1526 = ((_1479 * cbLight._m0[_1473].y) * _1518) + (((cbLight._m0[_1483].y * _1448) * _1493) * _1516);
    float _1527 = ((_1479 * cbLight._m0[_1473].z) * _1518) + (((cbLight._m0[_1483].z * _1449) * _1493) * _1516);
    uvec4 _1531 = floatBitsToUint(cbLight._m0[_1455 + 12u]);
    bool _1533 = _1531.x == 0u;
    float _1544;
    float _1546;
    float _1548;
    if (_1533)
    {
        _1544 = _1525;
        _1546 = _1526;
        _1548 = _1527;
    }
    else
    {
        uint _1552 = _1455 + 6u;
        float _1568 = (dot(vec3(cbLight._m0[_1455 + 2u].xyz), vec3(_227, _228, _229)) * 0.5) + 0.5;
        float _1569 = _1568 * _1568;
        float _3489 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
        float _1570 = isnan(1.0) ? _3489 : (isnan(_3489) ? 1.0 : min(_3489, 1.0));
        float _1571 = isnan(1.0) ? _1471 : (isnan(_1471) ? 1.0 : min(_1471, 1.0));
        _1544 = (((cbLight._m0[_1552].x * 0.3183098733425140380859375) * _1570) * _1571) + _1525;
        _1546 = (((cbLight._m0[_1552].y * 0.3183098733425140380859375) * _1570) * _1571) + _1526;
        _1548 = (((cbLight._m0[_1552].z * 0.3183098733425140380859375) * _1570) * _1571) + _1527;
    }
    bool _1551 = _1531.y == 0u;
    float _1589;
    float _1591;
    float _1593;
    if (_1551)
    {
        _1589 = _1544;
        _1591 = _1546;
        _1593 = _1548;
    }
    else
    {
        uint _1697 = _1455 + 7u;
        float _1713 = (dot(vec3(cbLight._m0[_1455 + 3u].xyz), vec3(_227, _228, _229)) * 0.5) + 0.5;
        float _1714 = _1713 * _1713;
        float _3505 = isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0));
        float _1715 = isnan(1.0) ? _3505 : (isnan(_3505) ? 1.0 : min(_3505, 1.0));
        float _1716 = isnan(1.0) ? _1472 : (isnan(_1472) ? 1.0 : min(_1472, 1.0));
        _1589 = (((cbLight._m0[_1697].x * 0.3183098733425140380859375) * _1715) * _1716) + _1544;
        _1591 = (((cbLight._m0[_1697].y * 0.3183098733425140380859375) * _1715) * _1716) + _1546;
        _1593 = (((cbLight._m0[_1697].z * 0.3183098733425140380859375) * _1715) * _1716) + _1548;
    }
    uint _1595 = _1455 + 8u;
    float _1601 = cbLight._m0[_1455].x + _307;
    float _1602 = cbLight._m0[_1455].y + _308;
    float _1603 = cbLight._m0[_1455].z + _309;
    float _1607 = inversesqrt(dot(vec3(_1601, _1602, _1603), vec3(_1601, _1602, _1603)));
    float _1611 = dot(vec3(_227, _228, _229), vec3(cbLight._m0[_1455].xyz));
    float _3521 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
    float _1614 = isnan(1.0) ? _3521 : (isnan(_3521) ? 1.0 : min(_3521, 1.0));
    float _3532 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _1615 = isnan(1.0) ? _3532 : (isnan(_3532) ? 1.0 : min(_3532, 1.0));
    float _1616 = dot(vec3(cbLight._m0[_1455].xyz), vec3(_1601 * _1607, _1602 * _1607, _1603 * _1607));
    float _3543 = isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0));
    float _1627 = (exp2(log2(1.0 - (isnan(1.0) ? _3543 : (isnan(_3543) ? 1.0 : min(_3543, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1633 = (0.5 / ((_1614 + 9.9999999392252902907785028219223e-09) + _1615)) * _1614;
    float _3554 = isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0));
    float _1635 = (isnan(1.0) ? _3554 : (isnan(_3554) ? 1.0 : min(_3554, 1.0))) * 0.31831014156341552734375;
    uint _1649 = _1455 + 9u;
    float _1655 = cbLight._m0[_1497].x + _307;
    float _1656 = cbLight._m0[_1497].y + _308;
    float _1657 = cbLight._m0[_1497].z + _309;
    float _1661 = inversesqrt(dot(vec3(_1655, _1656, _1657), vec3(_1655, _1656, _1657)));
    float _1665 = dot(vec3(_227, _228, _229), vec3(cbLight._m0[_1497].xyz));
    float _3565 = isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0));
    float _1668 = isnan(1.0) ? _3565 : (isnan(_3565) ? 1.0 : min(_3565, 1.0));
    float _1669 = dot(vec3(cbLight._m0[_1497].xyz), vec3(_1655 * _1661, _1656 * _1661, _1657 * _1661));
    float _3576 = isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0));
    float _1678 = (exp2(log2(1.0 - (isnan(1.0) ? _3576 : (isnan(_3576) ? 1.0 : min(_3576, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1682 = (0.5 / ((_1668 + 9.9999999392252902907785028219223e-09) + _1615)) * _1668;
    float _3587 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
    float _1684 = (isnan(1.0) ? _3587 : (isnan(_3587) ? 1.0 : min(_3587, 1.0))) * 0.31831014156341552734375;
    float _1694 = (((_1678 * cbLight._m0[_1649].x) * _1684) * _1479) + ((((cbLight._m0[_1595].x * _1447) * _1627) * _1635) * _1493);
    float _1695 = (((_1678 * cbLight._m0[_1649].y) * _1684) * _1479) + ((((cbLight._m0[_1595].y * _1448) * _1627) * _1635) * _1493);
    float _1696 = (((_1678 * cbLight._m0[_1649].z) * _1684) * _1479) + ((((cbLight._m0[_1595].z * _1449) * _1627) * _1635) * _1493);
    float _1758;
    float _1760;
    float _1762;
    if (_1533)
    {
        _1758 = _1694;
        _1760 = _1695;
        _1762 = _1696;
    }
    else
    {
        uint _1764 = _1455 + 10u;
        uint _1770 = _1455 + 2u;
        float _1776 = cbLight._m0[_1770].x + _307;
        float _1777 = cbLight._m0[_1770].y + _308;
        float _1778 = cbLight._m0[_1770].z + _309;
        float _1782 = inversesqrt(dot(vec3(_1776, _1777, _1778), vec3(_1776, _1777, _1778)));
        float _1786 = dot(vec3(_227, _228, _229), vec3(cbLight._m0[_1770].xyz));
        float _3598 = isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0));
        float _1789 = isnan(1.0) ? _3598 : (isnan(_3598) ? 1.0 : min(_3598, 1.0));
        float _1790 = dot(vec3(cbLight._m0[_1770].xyz), vec3(_1776 * _1782, _1777 * _1782, _1778 * _1782));
        float _3609 = isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0));
        float _1799 = (exp2(log2(1.0 - (isnan(1.0) ? _3609 : (isnan(_3609) ? 1.0 : min(_3609, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1803 = (0.5 / ((_1789 + 9.9999999392252902907785028219223e-09) + _1615)) * _1789;
        float _3620 = isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0));
        float _1805 = (isnan(1.0) ? _3620 : (isnan(_3620) ? 1.0 : min(_3620, 1.0))) * 0.31831014156341552734375;
        float _1806 = isnan(1.0) ? _1471 : (isnan(_1471) ? 1.0 : min(_1471, 1.0));
        _1758 = (((_1799 * cbLight._m0[_1764].x) * _1805) * _1806) + _1694;
        _1760 = (((_1799 * cbLight._m0[_1764].y) * _1805) * _1806) + _1695;
        _1762 = (((_1799 * cbLight._m0[_1764].z) * _1805) * _1806) + _1696;
    }
    float _1841;
    float _1843;
    float _1845;
    if (_1551)
    {
        _1841 = _1758;
        _1843 = _1760;
        _1845 = _1762;
    }
    else
    {
        uint _1852 = _1455 + 11u;
        uint _1858 = _1455 + 3u;
        float _1864 = cbLight._m0[_1858].x + _307;
        float _1865 = cbLight._m0[_1858].y + _308;
        float _1866 = cbLight._m0[_1858].z + _309;
        float _1870 = inversesqrt(dot(vec3(_1864, _1865, _1866), vec3(_1864, _1865, _1866)));
        float _1874 = dot(vec3(_227, _228, _229), vec3(cbLight._m0[_1858].xyz));
        float _3636 = isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0));
        float _1877 = isnan(1.0) ? _3636 : (isnan(_3636) ? 1.0 : min(_3636, 1.0));
        float _1878 = dot(vec3(cbLight._m0[_1858].xyz), vec3(_1864 * _1870, _1865 * _1870, _1866 * _1870));
        float _3647 = isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0));
        float _1887 = (exp2(log2(1.0 - (isnan(1.0) ? _3647 : (isnan(_3647) ? 1.0 : min(_3647, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1891 = (0.5 / ((_1877 + 9.9999999392252902907785028219223e-09) + _1615)) * _1877;
        float _3658 = isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0));
        float _1893 = (isnan(1.0) ? _3658 : (isnan(_3658) ? 1.0 : min(_3658, 1.0))) * 0.31831014156341552734375;
        float _1894 = isnan(1.0) ? _1472 : (isnan(_1472) ? 1.0 : min(_1472, 1.0));
        _1841 = (((_1887 * cbLight._m0[_1852].x) * _1893) * _1894) + _1758;
        _1843 = (((_1887 * cbLight._m0[_1852].y) * _1893) * _1894) + _1760;
        _1845 = (((_1887 * cbLight._m0[_1852].z) * _1893) * _1894) + _1762;
    }
    float _2029;
    float _2031;
    float _2033;
    float _2035;
    float _2037;
    float _2039;
    if (_1453.y == 0u)
    {
        float _1969 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1970 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1969;
        float _1971 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1969;
        float _1972 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1969;
        uvec4 _1984 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1985 = _1984.x;
        uint _1996 = uint((float(_1984.y) * floor(float(uint(cbSceneParam._m0[85u].y * _329) / _1985))) + floor(float(uint(cbSceneParam._m0[85u].x * _328) / _1985)));
        float _2006 = (log2(_1972 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2007 = isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0));
        uint _2010 = uint(isnan(14.0) ? _2007 : (isnan(_2007) ? 14.0 : min(_2007, 14.0)));
        uvec4 _2015 = texelFetch(g_lightClusterGridBuffer, int(((_2010 << 2u) + (_1996 << 6u)) >> 2u));
        uint _2016 = _2015.x;
        uint _2017 = _1984.z;
        float _2152;
        float _2154;
        float _2156;
        float _2158;
        float _2160;
        float _2162;
        if (((((1u << ((_2017 >> 4u) & 15u)) + 4294967295u) & _2016) == 0u) || ((_2017 & 240u) == 0u))
        {
            _2152 = 0.0;
            _2154 = 0.0;
            _2156 = 0.0;
            _2158 = 0.0;
            _2160 = 0.0;
            _2162 = 0.0;
        }
        else
        {
            float _2153;
            float _2155;
            float _2157;
            float _2159;
            float _2161;
            float _2163;
            float _2313 = 0.0;
            float _2314 = 0.0;
            float _2315 = 0.0;
            float _2316 = 0.0;
            float _2317 = 0.0;
            float _2318 = 0.0;
            uint _2319 = 0u;
            uint _2328;
            bool _2329;
            for (;;)
            {
                _2328 = texelFetch(g_lightClassification, int((((_2010 << 5u) + (_1996 << 9u)) + (_2319 << 2u)) >> 2u)).x;
                _2329 = _2328 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2329)
                {
                    frontier_phi_66_pred = _2313;
                    frontier_phi_66_pred_1 = _2318;
                    frontier_phi_66_pred_2 = _2317;
                    frontier_phi_66_pred_3 = _2316;
                    frontier_phi_66_pred_4 = _2315;
                    frontier_phi_66_pred_5 = _2314;
                }
                else
                {
                    float _2458;
                    float _2459;
                    float _2460;
                    float _2461;
                    float _2462;
                    float _2463;
                    uint _2464;
                    _2458 = _2313;
                    _2459 = _2314;
                    _2460 = _2315;
                    _2461 = _2316;
                    _2462 = _2317;
                    _2463 = _2318;
                    _2464 = _2328;
                    float _2385;
                    float _2386;
                    float _2387;
                    float _2388;
                    float _2389;
                    float _2390;
                    for (;;)
                    {
                        uint _2468 = uint(findLSB(_2464)) + (_2319 << 5u);
                        uint _2465 = (_2464 + 4294967295u) & _2464;
                        uint _2470 = _2468 * 48u;
                        vec4 _2484 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2470)).x, texelFetch(g_PointLightRenderingBuffer, int(_2470 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2470 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2470 + 3u)).x));
                        uint _2490 = (_2468 * 48u) + 4u;
                        vec4 _2503 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2490)).x, texelFetch(g_PointLightRenderingBuffer, int(_2490 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2490 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2490 + 3u)).x));
                        uint _2509 = (_2468 * 48u) + 8u;
                        vec3 _2520 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2509)).x, texelFetch(g_PointLightRenderingBuffer, int(_2509 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2509 + 2u)).x));
                        float _2524 = _2484.x - _1970;
                        float _2525 = _2484.y - _1971;
                        float _2526 = _2484.z - _1972;
                        float _2527 = dot(vec3(_2524, _2525, _2526), vec3(_2524, _2525, _2526));
                        float _2530 = inversesqrt(_2527);
                        float _2539 = 1.0 - (_2527 * _2484.w);
                        float _3684 = isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : max(_2539, 0.0));
                        float _2540 = isnan(1.0) ? _3684 : (isnan(_3684) ? 1.0 : min(_3684, 1.0));
                        float _2541 = sqrt(_2527) * _2503.w;
                        float _2544 = 1.39999997615814208984375 / (_2541 + 1.39999997615814208984375);
                        float _2545 = _2544 * _2544;
                        float _2548 = ((1.0 - _2545) * dot(vec3(_349, _352, _355), vec3(_2530 * _2524, _2530 * _2525, _2530 * _2526))) + _2545;
                        float _2551 = _2541 * _2541;
                        float _2555 = ((isnan(0.0) ? _2548 : (isnan(_2548) ? 0.0 : max(_2548, 0.0))) * _2540) / ((_2551 * 0.699999988079071044921875) + 1.0);
                        float _2559 = (-0.0) - _1970;
                        float _2560 = (-0.0) - _1971;
                        float _2561 = (-0.0) - _1972;
                        float _2565 = inversesqrt(dot(vec3(_2559, _2560, _2561), vec3(_2559, _2560, _2561)));
                        float _2569 = dot(vec3(_349, _352, _355), vec3(_2565 * _2559, _2565 * _2560, _2565 * _2561));
                        float _3700 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
                        float _3711 = isnan(0.0) ? _2548 : (isnan(_2548) ? 0.0 : max(_2548, 0.0));
                        float _2573 = isnan(1.0) ? _3711 : (isnan(_3711) ? 1.0 : min(_3711, 1.0));
                        float _2577 = (0.5 / (((isnan(1.0) ? _3700 : (isnan(_3700) ? 1.0 : min(_3700, 1.0))) + 9.9999999392252902907785028219223e-09) + _2573)) * _2573;
                        float _3722 = isnan(0.0) ? _2577 : (isnan(_2577) ? 0.0 : max(_2577, 0.0));
                        float _2586 = (((isnan(1.0) ? _3722 : (isnan(_3722) ? 1.0 : min(_3722, 1.0))) * 3.1415927410125732421875) / ((_2551 * 2.1991131305694580078125) + 3.141590118408203125)) * _2540;
                        _2388 = (_2555 * _2503.x) + _2461;
                        _2389 = (_2555 * _2503.y) + _2462;
                        _2390 = (_2555 * _2503.z) + _2463;
                        _2385 = (_2586 * _2520.x) + _2458;
                        _2386 = (_2586 * _2520.y) + _2459;
                        _2387 = (_2586 * _2520.z) + _2460;
                        if (_2465 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2458 = _2385;
                            _2459 = _2386;
                            _2460 = _2387;
                            _2461 = _2388;
                            _2462 = _2389;
                            _2463 = _2390;
                            _2464 = _2465;
                        }
                    }
                    frontier_phi_66_pred = _2385;
                    frontier_phi_66_pred_1 = _2390;
                    frontier_phi_66_pred_2 = _2389;
                    frontier_phi_66_pred_3 = _2388;
                    frontier_phi_66_pred_4 = _2387;
                    frontier_phi_66_pred_5 = _2386;
                }
                _2153 = frontier_phi_66_pred;
                _2163 = frontier_phi_66_pred_1;
                _2161 = frontier_phi_66_pred_2;
                _2159 = frontier_phi_66_pred_3;
                _2157 = frontier_phi_66_pred_4;
                _2155 = frontier_phi_66_pred_5;
                uint _2320 = _2319 + 1u;
                if (_2320 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2313 = _2153;
                    _2314 = _2155;
                    _2315 = _2157;
                    _2316 = _2159;
                    _2317 = _2161;
                    _2318 = _2163;
                    _2319 = _2320;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2152 = _2153;
            _2154 = _2155;
            _2156 = _2157;
            _2158 = _2159;
            _2160 = _2161;
            _2162 = _2163;
        }
        uvec4 _2166 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2167 = _2166.z;
        uint _2169 = (_2167 >> 8u) & 15u;
        float _2284;
        float _2286;
        float _2288;
        float _2290;
        float _2292;
        float _2294;
        if (((4294967295u << _2169) & _2016) == 0u)
        {
            _2284 = _2152;
            _2286 = _2154;
            _2288 = _2156;
            _2290 = _2158;
            _2292 = _2160;
            _2294 = _2162;
        }
        else
        {
            float _2309 = inversesqrt(dot(vec3(_1970, _1971, _1972), vec3(_1970, _1971, _1972)));
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_2169 < ((_2167 >> 12u) & 15u))
            {
                float _2285;
                float _2287;
                float _2289;
                float _2291;
                float _2293;
                float _2295;
                float _2441 = _2152;
                float _2442 = _2154;
                float _2443 = _2156;
                float _2444 = _2158;
                float _2445 = _2160;
                float _2446 = _2162;
                uint _2447 = _2169;
                uint _2456;
                bool _2457;
                for (;;)
                {
                    _2456 = texelFetch(g_lightClassification, int((((_2010 << 5u) + (_1996 << 9u)) + (_2447 << 2u)) >> 2u)).x;
                    _2457 = _2456 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_2457)
                    {
                        frontier_phi_77_pred = _2446;
                        frontier_phi_77_pred_1 = _2445;
                        frontier_phi_77_pred_2 = _2444;
                        frontier_phi_77_pred_3 = _2443;
                        frontier_phi_77_pred_4 = _2442;
                        frontier_phi_77_pred_5 = _2441;
                    }
                    else
                    {
                        float _2600;
                        float _2601;
                        float _2602;
                        float _2603;
                        float _2604;
                        float _2605;
                        float _2852;
                        float _2853;
                        float _2854;
                        float _2855;
                        float _2856;
                        float _2857;
                        float _2613 = _2441;
                        float _2614 = _2442;
                        float _2615 = _2443;
                        float _2616 = _2444;
                        float _2617 = _2445;
                        float _2618 = _2446;
                        uint _2619 = _2456;
                        uint _2620;
                        vec4 _2645;
                        float _2646;
                        vec4 _2661;
                        vec3 _2673;
                        vec4 _2689;
                        vec4 _2705;
                        float _2752;
                        bool _2753;
                        for (;;)
                        {
                            uint _2630 = ((_2447 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2619));
                            _2620 = (_2619 + 4294967295u) & _2619;
                            uint _2632 = _2630 * 40u;
                            _2645 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2632)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2632 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2632 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2632 + 3u)).x));
                            _2646 = _2645.w;
                            uint _2648 = (_2630 * 40u) + 4u;
                            _2661 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2648)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2648 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2648 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2648 + 3u)).x));
                            uint _2663 = (_2630 * 40u) + 8u;
                            _2673 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2663)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2663 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2663 + 2u)).x));
                            uint _2676 = (_2630 * 40u) + 16u;
                            _2689 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2676)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2676 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2676 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2676 + 3u)).x));
                            uint _2692 = (_2630 * 40u) + 20u;
                            _2705 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2692)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2692 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2692 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2692 + 3u)).x));
                            uint _2708 = (_2630 * 40u) + 24u;
                            vec4 _2721 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2708)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2708 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2708 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2708 + 3u)).x));
                            uint _2727 = (_2630 * 40u) + 28u;
                            vec4 _2740 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2727)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2727 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2727 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2727 + 3u)).x));
                            _2752 = fma(_1972, _2740.z, fma(_1971, _2740.y, _2740.x * _1970)) + _2740.w;
                            _2753 = !((fma(_1972, _2721.z, fma(_1971, _2721.y, _2721.x * _1970)) + _2721.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_2753)
                            {
                                float _2780 = _2645.x - _1970;
                                float _2781 = _2645.y - _1971;
                                float _2782 = _2645.z - _1972;
                                float _2783 = dot(vec3(_2780, _2781, _2782), vec3(_2780, _2781, _2782));
                                float _2786 = inversesqrt(_2783);
                                float _2787 = _2786 * _2780;
                                float _2788 = _2786 * _2781;
                                float _2789 = _2786 * _2782;
                                float _2793 = 1.0 - (_2783 / (_2646 * _2646));
                                float _3733 = isnan(0.0) ? _2793 : (isnan(_2793) ? 0.0 : max(_2793, 0.0));
                                float _2794 = isnan(1.0) ? _3733 : (isnan(_3733) ? 1.0 : min(_3733, 1.0));
                                float _2798 = sqrt(_2783) * _2661.w;
                                float _2800 = 1.39999997615814208984375 / (_2798 + 1.39999997615814208984375);
                                float _2801 = _2800 * _2800;
                                float _2802 = 1.0 - _2801;
                                float _2804 = (_2802 * dot(vec3(_2787, _2788, _2789), vec3(_349, _352, _355))) + _2801;
                                float _2807 = _2798 * _2798;
                                float _2811 = (fma(_1972, _2689.z, fma(_1971, _2689.y, _2689.x * _1970)) + _2689.w) / _2752;
                                float _2812 = (fma(_1972, _2705.z, fma(_1971, _2705.y, _2705.x * _1970)) + _2705.w) / _2752;
                                float _2816 = 1.0 - dot(vec2(_2811, _2812), vec2(_2811, _2812));
                                float _3749 = isnan(0.0) ? _2816 : (isnan(_2816) ? 0.0 : max(_2816, 0.0));
                                float _2817 = isnan(1.0) ? _3749 : (isnan(_3749) ? 1.0 : min(_3749, 1.0));
                                float _2818 = _2817 * (((isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0))) * _2794) / ((_2807 * 0.699999988079071044921875) + 1.0));
                                float _2828 = dot(vec3(_349, _352, _355), vec3((-0.0) - (_1970 * _2309), (-0.0) - (_1971 * _2309), (-0.0) - (_1972 * _2309)));
                                float _3760 = isnan(0.0) ? _2828 : (isnan(_2828) ? 0.0 : max(_2828, 0.0));
                                float _2836 = (_2802 * dot(vec3(_349, _352, _355), vec3(_2787, _2788, _2789))) + _2801;
                                float _3771 = isnan(0.0) ? _2836 : (isnan(_2836) ? 0.0 : max(_2836, 0.0));
                                float _2837 = isnan(1.0) ? _3771 : (isnan(_3771) ? 1.0 : min(_3771, 1.0));
                                float _2841 = (0.5 / (((isnan(1.0) ? _3760 : (isnan(_3760) ? 1.0 : min(_3760, 1.0))) + 9.9999999392252902907785028219223e-09) + _2837)) * _2837;
                                float _3782 = isnan(0.0) ? _2841 : (isnan(_2841) ? 0.0 : max(_2841, 0.0));
                                float _2848 = (_2817 * _2794) * (((isnan(1.0) ? _3782 : (isnan(_3782) ? 1.0 : min(_3782, 1.0))) * 3.1415927410125732421875) / ((_2807 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_83_pred = _2818 * _2661.y;
                                frontier_phi_83_pred_1 = _2818 * _2661.x;
                                frontier_phi_83_pred_2 = _2848 * _2673.z;
                                frontier_phi_83_pred_3 = _2848 * _2673.y;
                                frontier_phi_83_pred_4 = _2848 * _2673.x;
                                frontier_phi_83_pred_5 = _2818 * _2661.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _2856 = frontier_phi_83_pred;
                            _2855 = frontier_phi_83_pred_1;
                            _2854 = frontier_phi_83_pred_2;
                            _2853 = frontier_phi_83_pred_3;
                            _2852 = frontier_phi_83_pred_4;
                            _2857 = frontier_phi_83_pred_5;
                            _2603 = _2855 + _2616;
                            _2604 = _2856 + _2617;
                            _2605 = _2857 + _2618;
                            _2600 = _2852 + _2613;
                            _2601 = _2853 + _2614;
                            _2602 = _2854 + _2615;
                            if (_2620 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2613 = _2600;
                                _2614 = _2601;
                                _2615 = _2602;
                                _2616 = _2603;
                                _2617 = _2604;
                                _2618 = _2605;
                                _2619 = _2620;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _2605;
                        frontier_phi_77_pred_1 = _2604;
                        frontier_phi_77_pred_2 = _2603;
                        frontier_phi_77_pred_3 = _2602;
                        frontier_phi_77_pred_4 = _2601;
                        frontier_phi_77_pred_5 = _2600;
                    }
                    _2295 = frontier_phi_77_pred;
                    _2293 = frontier_phi_77_pred_1;
                    _2291 = frontier_phi_77_pred_2;
                    _2289 = frontier_phi_77_pred_3;
                    _2287 = frontier_phi_77_pred_4;
                    _2285 = frontier_phi_77_pred_5;
                    uint _2448 = _2447 + 1u;
                    if (_2448 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2441 = _2285;
                        _2442 = _2287;
                        _2443 = _2289;
                        _2444 = _2291;
                        _2445 = _2293;
                        _2446 = _2295;
                        _2447 = _2448;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _2289;
                frontier_phi_58_59_ladder_1 = _2295;
                frontier_phi_58_59_ladder_2 = _2293;
                frontier_phi_58_59_ladder_3 = _2291;
                frontier_phi_58_59_ladder_4 = _2287;
                frontier_phi_58_59_ladder_5 = _2285;
            }
            else
            {
                frontier_phi_58_59_ladder = _2156;
                frontier_phi_58_59_ladder_1 = _2162;
                frontier_phi_58_59_ladder_2 = _2160;
                frontier_phi_58_59_ladder_3 = _2158;
                frontier_phi_58_59_ladder_4 = _2154;
                frontier_phi_58_59_ladder_5 = _2152;
            }
            _2284 = frontier_phi_58_59_ladder_5;
            _2286 = frontier_phi_58_59_ladder_4;
            _2288 = frontier_phi_58_59_ladder;
            _2290 = frontier_phi_58_59_ladder_3;
            _2292 = frontier_phi_58_59_ladder_2;
            _2294 = frontier_phi_58_59_ladder_1;
        }
        float _2299 = isnan(1.0) ? _394 : (isnan(_394) ? 1.0 : min(_394, 1.0));
        _2029 = (_2299 * _2290) + _1589;
        _2031 = (_2299 * _2292) + _1591;
        _2033 = (_2299 * _2294) + _1593;
        _2035 = ((_2284 * 0.039999999105930328369140625) * _2299) + _1841;
        _2037 = ((_2286 * 0.039999999105930328369140625) * _2299) + _1843;
        _2039 = ((_2288 * 0.039999999105930328369140625) * _2299) + _1845;
    }
    else
    {
        _2029 = _1589;
        _2031 = _1591;
        _2033 = _1593;
        _2035 = _1841;
        _2037 = _1843;
        _2039 = _1845;
    }
    uint _2045 = _370 + uint(cbMatDynParam._m0[0u].w);
    float _2053 = ((cbMtdParam._m0[11u].x * cbMtdParam._m0[9u].x) * _218.x) * cbInstanceData._m0[_2045].x;
    float _2056 = ((cbMtdParam._m0[11u].x * cbMtdParam._m0[9u].y) * _218.y) * cbInstanceData._m0[_2045].y;
    float _2059 = ((cbMtdParam._m0[11u].x * cbMtdParam._m0[9u].z) * _218.z) * cbInstanceData._m0[_2045].z;
    float _3798 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _3809 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _3820 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
    float _2076 = (((isnan(1.0) ? _3798 : (isnan(_3798) ? 1.0 : min(_3798, 1.0))) * (_2029 + ((isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0))) * _394))) + ((_2035 + ((isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0))) * _1205)) * cbPerFrame._m0[3u].x)) + _2053;
    float _2078 = (_2056 + ((_2037 + ((isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0))) * _1205)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3809 : (isnan(_3809) ? 1.0 : min(_3809, 1.0))) * (_2031 + ((isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0))) * _394)));
    float _2080 = (_2059 + ((_2039 + ((isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0))) * _1205)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3820 : (isnan(_3820) ? 1.0 : min(_3820, 1.0))) * (_2033 + ((isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0))) * _394)));
    float _2081 = isnan(0.0) ? _2076 : (isnan(_2076) ? 0.0 : max(_2076, 0.0));
    float _2082 = isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0));
    float _2083 = isnan(0.0) ? _2080 : (isnan(_2080) ? 0.0 : max(_2080, 0.0));
    float _2089 = cbMtdParam._m0[2u].x * _2053;
    float _2090 = cbMtdParam._m0[2u].y * _2056;
    float _2091 = cbMtdParam._m0[2u].z * _2059;
    float _3846 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2093 = isnan(1.0) ? _3846 : (isnan(_3846) ? 1.0 : min(_3846, 1.0));
    uint _2094 = _368 + 6u;
    float _2102 = _328 / cbSceneParam._m0[86u].x;
    float _2103 = _329 / cbSceneParam._m0[86u].y;
    vec4 _2117 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2102, _2103, (log2((isnan(cbSceneParam._m0[77u].w) ? _249 : (isnan(_249) ? cbSceneParam._m0[77u].w : min(_249, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2119 = _2117.x;
    float _2120 = _2117.y;
    float _2121 = _2117.z;
    float _2122 = _2117.w;
    float _2215;
    float _2217;
    float _2219;
    float _2221;
    if (_249 > cbSceneParam._m0[78u].w)
    {
        float _2177 = isnan(_249) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _249 : min(cbSceneParam._m0[80u].w, _249));
        float _2178 = _2177 / _249;
        float _2189 = _2178 * _300;
        float _2190 = _301 * _2178;
        float _2191 = (-0.0) - _2190;
        float _2193 = _2178 * _302;
        float _2195 = (cbSceneParam._m0[77u].w * _2191) / _2177;
        float _2196 = _2195 + cbSceneParam._m0[79u].w;
        float _2197 = cbSceneParam._m0[79u].w - _2190;
        float _2203 = sqrt(((_2189 * _2189) + (_2190 * _2190)) + (_2193 * _2193));
        float _2206 = (1.0 - (cbSceneParam._m0[77u].w / _2177)) * _2203;
        float _2211 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2213 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2398;
        if (abs((_2191 - _2195) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2398 = ((((_2196 > 0.0) ? exp2(_2211 * _2196) : (2.0 - exp2(_2213 * _2196))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2206;
        }
        else
        {
            float _2342 = 1.0 / cbSceneParam._m0[80u].x;
            float _2343 = isnan(_2197) ? _2196 : (isnan(_2196) ? _2197 : max(_2196, _2197));
            float _2344 = isnan(_2197) ? _2196 : (isnan(_2196) ? _2197 : min(_2196, _2197));
            float _2353 = isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : min(_2343, 0.0));
            float _2354 = isnan(0.0) ? _2344 : (isnan(_2344) ? 0.0 : min(_2344, 0.0));
            _2398 = ((abs(_2203 / _2191) * cbSceneParam._m0[80u].y) * ((((_2353 - _2354) * 2.0) - ((exp2(_2211 * (isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0)))) - exp2(_2211 * (isnan(0.0) ? _2344 : (isnan(_2344) ? 0.0 : max(_2344, 0.0))))) * _2342)) - ((exp2(_2213 * _2353) - exp2(_2213 * _2354)) * _2342))) + (_2206 * cbSceneParam._m0[80u].z);
        }
        vec4 _2400 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2102, _2103, 1.0), 0.0);
        float _2409 = exp2((_2398 * (-1.44269502162933349609375)) * (1.0 - _2400.w));
        float _2410 = log2(_2409);
        float _2426 = log2(_2122);
        _2215 = (exp2(_2426 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2410 * cbSceneParam._m0[78u].x)) * _2400.x) / cbSceneParam._m0[78u].x)) + _2119;
        _2217 = (exp2(_2426 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2410 * cbSceneParam._m0[78u].y)) * _2400.y) / cbSceneParam._m0[78u].y)) + _2120;
        _2219 = (exp2(_2426 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2410 * cbSceneParam._m0[78u].z)) * _2400.z) / cbSceneParam._m0[78u].z)) + _2121;
        _2221 = _2409 * _2122;
    }
    else
    {
        _2215 = _2119;
        _2217 = _2120;
        _2219 = _2121;
        _2221 = _2122;
    }
    bool _2436;
    vec4 _2231;
    vec4 _2254;
    float _2256;
    float _2260;
    float _2261;
    float _2262;
    float _2265;
    float _2268;
    float _2271;
    float _2272;
    bool _2283;
    for (;;)
    {
        _2231 = cbMatDynParam._m0[0u];
        float _2233 = roundEven(_2231.y);
        bool _2234 = _2233 == 3.0;
        float _2236 = log2(_2221);
        float _2240 = exp2(_2236 * cbSceneParam._m0[78u].x);
        float _2241 = exp2(_2236 * cbSceneParam._m0[78u].y);
        float _2242 = exp2(_2236 * cbSceneParam._m0[78u].z);
        float _2243 = _2240 * _2081;
        float _2244 = _2241 * _2082;
        float _2245 = _2242 * _2083;
        float _2252 = _316 + (-0.5);
        _2254 = cbMtdParam._m0[1u];
        _2256 = _2254.y * _2252;
        float _2259 = (_2233 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2260 = _2259 * (_2234 ? _2243 : (_2243 + (cbSceneParam._m0[72u].w * _2215)));
        _2261 = _2259 * (_2234 ? _2244 : (_2244 + (cbSceneParam._m0[72u].w * _2217)));
        _2262 = _2259 * (_2234 ? _2245 : (_2245 + (cbSceneParam._m0[72u].w * _2219)));
        _2265 = ((_2089 * _2093) * _2240) * _2259;
        _2268 = ((_2090 * _2093) * _2241) * _2259;
        _2271 = ((_2091 * _2093) * _2242) * _2259;
        _2272 = _2252 * 0.999000012874603271484375;
        _2283 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2283)
        {
            if ((cbInstanceData._m0[_368 + 7u].x + _2272) < 0.5)
            {
                _2436 = true;
                break;
            }
        }
        uint _2377 = _370 + uint(_2231.w);
        if ((cbInstanceData._m0[_2377].w < 1.0) && ((cbInstanceData._m0[_2377].w + _2272) < 0.5))
        {
            _2436 = true;
            break;
        }
        if ((_2256 + 1.0) < _2254.x)
        {
            _2436 = true;
            break;
        }
        _2436 = false;
        break;
    }
    float _2591;
    if (_2436)
    {
        discard_state = true;
        _2591 = 0.0;
    }
    else
    {
        _2591 = cbInstanceData._m0[_2094].w;
    }
    SV_Target.x = _2260;
    SV_Target.y = _2261;
    SV_Target.z = _2262;
    SV_Target.w = _2591;
    SV_Target_1.x = _2265;
    SV_Target_1.y = _2268;
    SV_Target_1.z = _2271;
    SV_Target_1.w = cbInstanceData._m0[_2094].w;
    discard_exit();
}


