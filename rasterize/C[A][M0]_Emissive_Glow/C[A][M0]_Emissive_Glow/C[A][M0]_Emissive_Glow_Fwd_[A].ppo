#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_A_M0_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_A_M0_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _617;
float _618;
float _619;
float _620;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _124 = texture(sampler2D(C_A_M0_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _130 = _124.x * cbMtdParam._m0[9u].x;
    float _131 = _124.y * cbMtdParam._m0[9u].y;
    float _132 = _124.z * cbMtdParam._m0[9u].z;
    vec4 _154 = texture(sampler2D(C_A_M0_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _178 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _219 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _229 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _219);
    float _230 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _219);
    float _231 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _219);
    vec4 _236 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _238 = _236.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _346 = sqrt(((_229 * _229) + (_230 * _230)) + (_231 * _231));
        float _353 = (cbMatDynParam._m0[5u].x * _346) + cbMatDynParam._m0[5u].y;
        float _644 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
        float _354 = isnan(1.0) ? _644 : (isnan(_644) ? 1.0 : min(_644, 1.0));
        float _358 = (cbMatDynParam._m0[5u].z * _346) + cbMatDynParam._m0[5u].w;
        float _655 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _655 : (isnan(_655) ? 1.0 : min(_655, 1.0))) - _354)) + _354) < ((_238 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _264 = uint(roundEven(NORMAL.w)) * 13u;
    uint _266 = _264 + 9u;
    uint _267 = _266 + uint(cbMatDynParam._m0[0u].w);
    float _274 = (cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _154.x;
    float _277 = (cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _154.y;
    float _280 = (cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _154.z;
    float _283 = cbInstanceData._m0[_267].x * (_274 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _130 : (isnan(_130) ? 0.0 : max(_130, 0.0)))));
    float _285 = cbInstanceData._m0[_267].y * (_277 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _131 : (isnan(_131) ? 0.0 : max(_131, 0.0)))));
    float _287 = cbInstanceData._m0[_267].z * (_280 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _132 : (isnan(_132) ? 0.0 : max(_132, 0.0)))));
    float _288 = isnan(0.0) ? _283 : (isnan(_283) ? 0.0 : max(_283, 0.0));
    float _289 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    float _290 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
    float _296 = cbMtdParam._m0[2u].x * (_274 * cbInstanceData._m0[_267].x);
    float _297 = cbMtdParam._m0[2u].y * (_277 * cbInstanceData._m0[_267].y);
    float _298 = cbMtdParam._m0[2u].z * (_280 * cbInstanceData._m0[_267].z);
    float _681 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _301 = isnan(1.0) ? _681 : (isnan(_681) ? 1.0 : min(_681, 1.0));
    uint _302 = _264 + 6u;
    float _311 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _312 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _327 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_311, _312, (log2((isnan(cbSceneParam._m0[77u].w) ? _178 : (isnan(_178) ? cbSceneParam._m0[77u].w : min(_178, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _329 = _327.x;
    float _330 = _327.y;
    float _331 = _327.z;
    float _332 = _327.w;
    float _414;
    float _416;
    float _418;
    float _420;
    if (_178 > cbSceneParam._m0[78u].w)
    {
        float _375 = isnan(_178) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _178 : min(cbSceneParam._m0[80u].w, _178));
        float _376 = _375 / _178;
        float _387 = _376 * _229;
        float _388 = _230 * _376;
        float _389 = (-0.0) - _388;
        float _391 = _376 * _231;
        float _393 = (cbSceneParam._m0[77u].w * _389) / _375;
        float _394 = _393 + cbSceneParam._m0[79u].w;
        float _395 = cbSceneParam._m0[79u].w - _388;
        float _401 = sqrt(((_387 * _387) + (_388 * _388)) + (_391 * _391));
        float _404 = (1.0 - (cbSceneParam._m0[77u].w / _375)) * _401;
        float _410 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _412 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _545;
        if (abs((_389 - _393) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _545 = ((((_394 > 0.0) ? exp2(_410 * _394) : (2.0 - exp2(_412 * _394))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _404;
        }
        else
        {
            float _500 = 1.0 / cbSceneParam._m0[80u].x;
            float _501 = isnan(_395) ? _394 : (isnan(_394) ? _395 : max(_394, _395));
            float _502 = isnan(_395) ? _394 : (isnan(_394) ? _395 : min(_394, _395));
            float _511 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : min(_501, 0.0));
            float _512 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : min(_502, 0.0));
            _545 = ((abs(_401 / _389) * cbSceneParam._m0[80u].y) * ((((_511 - _512) * 2.0) - ((exp2(_410 * (isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0)))) - exp2(_410 * (isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0))))) * _500)) - ((exp2(_412 * _511) - exp2(_412 * _512)) * _500))) + (_404 * cbSceneParam._m0[80u].z);
        }
        vec4 _547 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_311, _312, 1.0), 0.0);
        float _556 = exp2((_545 * (-1.44269502162933349609375)) * (1.0 - _547.w));
        float _557 = log2(_556);
        float _573 = log2(_332);
        _414 = (exp2(_573 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_557 * cbSceneParam._m0[78u].x)) * _547.x) / cbSceneParam._m0[78u].x)) + _329;
        _416 = (exp2(_573 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_557 * cbSceneParam._m0[78u].y)) * _547.y) / cbSceneParam._m0[78u].y)) + _330;
        _418 = (exp2(_573 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_557 * cbSceneParam._m0[78u].z)) * _547.z) / cbSceneParam._m0[78u].z)) + _331;
        _420 = _556 * _332;
    }
    else
    {
        _414 = _329;
        _416 = _330;
        _418 = _331;
        _420 = _332;
    }
    bool _583;
    vec4 _430;
    vec4 _454;
    float _456;
    float _461;
    float _462;
    float _463;
    float _466;
    float _469;
    float _472;
    float _473;
    bool _484;
    for (;;)
    {
        _430 = cbMatDynParam._m0[0u];
        float _432 = roundEven(_430.y);
        bool _433 = _432 == 3.0;
        float _435 = log2(_420);
        float _439 = exp2(_435 * cbSceneParam._m0[78u].x);
        float _440 = exp2(_435 * cbSceneParam._m0[78u].y);
        float _441 = exp2(_435 * cbSceneParam._m0[78u].z);
        float _442 = _439 * _288;
        float _443 = _440 * _289;
        float _444 = _441 * _290;
        float _451 = _238 + (-0.5);
        _454 = cbMtdParam._m0[1u];
        _456 = _454.y * _451;
        float _460 = (_432 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _461 = _460 * (_433 ? _442 : (_442 + (cbSceneParam._m0[72u].w * _414)));
        _462 = _460 * (_433 ? _443 : (_443 + (cbSceneParam._m0[72u].w * _416)));
        _463 = _460 * (_433 ? _444 : (_444 + (cbSceneParam._m0[72u].w * _418)));
        _466 = ((_296 * _301) * _439) * _460;
        _469 = ((_297 * _301) * _440) * _460;
        _472 = ((_298 * _301) * _441) * _460;
        _473 = _451 * 0.999000012874603271484375;
        _484 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_484)
        {
            if ((cbInstanceData._m0[_264 + 7u].x + _473) < 0.5)
            {
                _583 = true;
                break;
            }
        }
        uint _537 = _266 + uint(_430.w);
        if ((cbInstanceData._m0[_537].w < 1.0) && ((cbInstanceData._m0[_537].w + _473) < 0.5))
        {
            _583 = true;
            break;
        }
        if ((_456 + 1.0) < _454.x)
        {
            _583 = true;
            break;
        }
        _583 = false;
        break;
    }
    float _588;
    if (_583)
    {
        discard_state = true;
        _588 = 0.0;
    }
    else
    {
        _588 = cbInstanceData._m0[_302].w;
    }
    SV_Target.x = _461;
    SV_Target.y = _462;
    SV_Target.z = _463;
    SV_Target.w = _588;
    SV_Target_1.x = _466;
    SV_Target_1.y = _469;
    SV_Target_1.z = _472;
    SV_Target_1.w = cbInstanceData._m0[_302].w;
    discard_exit();
}


