#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 3, component = 3) out float TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_8 = 0.0;
    float _154 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _156 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _157 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _166 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _167 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _168 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _178 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _180 = texelFetch(g_InstanceIndexBuffer, int(_178));
    uint _181 = _180.x;
    precise float _182 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _187 = isnan(_182) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _182 : max(0.001000000047497451305389404296875, _182));
    precise float _189 = BLENDWEIGHT.x / _187;
    precise float _190 = BLENDWEIGHT.y / _187;
    precise float _191 = BLENDWEIGHT.z / _187;
    precise float _192 = BLENDWEIGHT.w / _187;
    uvec4 _199 = floatBitsToUint(cbInstanceData._m0[(_181 * 13u) + 4u]);
    uint _200 = _199.x;
    uint _202 = (_200 + uint(float(BLENDINDICES.x))) * 3u;
    uint _209 = _202 + 1u;
    uint _216 = _202 + 2u;
    precise float _223 = _189 * cbObjMatrix._m0[_202].x;
    precise float _224 = _189 * cbObjMatrix._m0[_209].x;
    precise float _225 = _189 * cbObjMatrix._m0[_216].x;
    precise float _226 = _189 * cbObjMatrix._m0[_202].y;
    precise float _227 = _189 * cbObjMatrix._m0[_209].y;
    precise float _228 = _189 * cbObjMatrix._m0[_216].y;
    precise float _229 = _189 * cbObjMatrix._m0[_202].z;
    precise float _230 = _189 * cbObjMatrix._m0[_209].z;
    precise float _231 = _189 * cbObjMatrix._m0[_216].z;
    precise float _232 = _189 * cbObjMatrix._m0[_202].w;
    precise float _233 = _189 * cbObjMatrix._m0[_209].w;
    precise float _234 = _189 * cbObjMatrix._m0[_216].w;
    uint _237 = (_200 + uint(float(BLENDINDICES.y))) * 3u;
    uint _244 = _237 + 1u;
    uint _251 = _237 + 2u;
    precise float _258 = _190 * cbObjMatrix._m0[_237].x;
    precise float _259 = _190 * cbObjMatrix._m0[_244].x;
    precise float _260 = _190 * cbObjMatrix._m0[_251].x;
    precise float _261 = _190 * cbObjMatrix._m0[_237].y;
    precise float _262 = _190 * cbObjMatrix._m0[_244].y;
    precise float _263 = _190 * cbObjMatrix._m0[_251].y;
    precise float _264 = _190 * cbObjMatrix._m0[_237].z;
    precise float _265 = _190 * cbObjMatrix._m0[_244].z;
    precise float _266 = _190 * cbObjMatrix._m0[_251].z;
    precise float _267 = _190 * cbObjMatrix._m0[_237].w;
    precise float _268 = _190 * cbObjMatrix._m0[_244].w;
    precise float _269 = _190 * cbObjMatrix._m0[_251].w;
    precise float _270 = _223 + _258;
    precise float _271 = _224 + _259;
    precise float _272 = _225 + _260;
    precise float _273 = _226 + _261;
    precise float _274 = _227 + _262;
    precise float _275 = _228 + _263;
    precise float _276 = _229 + _264;
    precise float _277 = _230 + _265;
    precise float _278 = _231 + _266;
    precise float _279 = _232 + _267;
    precise float _280 = _233 + _268;
    precise float _281 = _234 + _269;
    uint _284 = (_200 + uint(float(BLENDINDICES.z))) * 3u;
    uint _291 = _284 + 1u;
    uint _298 = _284 + 2u;
    precise float _305 = _191 * cbObjMatrix._m0[_284].x;
    precise float _306 = _191 * cbObjMatrix._m0[_291].x;
    precise float _307 = _191 * cbObjMatrix._m0[_298].x;
    precise float _308 = _191 * cbObjMatrix._m0[_284].y;
    precise float _309 = _191 * cbObjMatrix._m0[_291].y;
    precise float _310 = _191 * cbObjMatrix._m0[_298].y;
    precise float _311 = _191 * cbObjMatrix._m0[_284].z;
    precise float _312 = _191 * cbObjMatrix._m0[_291].z;
    precise float _313 = _191 * cbObjMatrix._m0[_298].z;
    precise float _314 = _191 * cbObjMatrix._m0[_284].w;
    precise float _315 = _191 * cbObjMatrix._m0[_291].w;
    precise float _316 = _191 * cbObjMatrix._m0[_298].w;
    precise float _317 = _270 + _305;
    precise float _318 = _271 + _306;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    uint _331 = (_200 + uint(float(BLENDINDICES.w))) * 3u;
    uint _338 = _331 + 1u;
    uint _345 = _331 + 2u;
    precise float _352 = _192 * cbObjMatrix._m0[_331].x;
    precise float _353 = _192 * cbObjMatrix._m0[_338].x;
    precise float _354 = _192 * cbObjMatrix._m0[_345].x;
    precise float _355 = _192 * cbObjMatrix._m0[_331].y;
    precise float _356 = _192 * cbObjMatrix._m0[_338].y;
    precise float _357 = _192 * cbObjMatrix._m0[_345].y;
    precise float _358 = _192 * cbObjMatrix._m0[_331].z;
    precise float _359 = _192 * cbObjMatrix._m0[_338].z;
    precise float _360 = _192 * cbObjMatrix._m0[_345].z;
    precise float _361 = _192 * cbObjMatrix._m0[_331].w;
    precise float _362 = _192 * cbObjMatrix._m0[_338].w;
    precise float _363 = _192 * cbObjMatrix._m0[_345].w;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = POSITION.x * _364;
    precise float _377 = POSITION.y * _367;
    precise float _378 = _377 + _376;
    precise float _379 = POSITION.z * _370;
    precise float _380 = _379 + _378;
    precise float _381 = 1.0 * _373;
    precise float _382 = _381 + _380;
    precise float _383 = POSITION.x * _365;
    precise float _384 = POSITION.y * _368;
    precise float _385 = _384 + _383;
    precise float _386 = POSITION.z * _371;
    precise float _387 = _386 + _385;
    precise float _388 = 1.0 * _374;
    precise float _389 = _388 + _387;
    precise float _390 = POSITION.x * _366;
    precise float _391 = POSITION.y * _369;
    precise float _392 = _391 + _390;
    precise float _393 = POSITION.z * _372;
    precise float _394 = _393 + _392;
    precise float _395 = 1.0 * _375;
    precise float _396 = _395 + _394;
    float _402 = cbSceneParam._m0[3u].x - _382;
    float _403 = cbSceneParam._m0[3u].y - _389;
    float _404 = cbSceneParam._m0[3u].z - _396;
    precise float _430 = _382 - cbSceneParam._m0[3u].x;
    precise float _431 = _389 - cbSceneParam._m0[3u].y;
    precise float _432 = _396 - cbSceneParam._m0[3u].z;
    precise float _460 = _430 * cbSceneParam._m0[24u].x;
    precise float _461 = _431 * cbSceneParam._m0[24u].y;
    precise float _462 = _461 + _460;
    precise float _463 = _432 * cbSceneParam._m0[24u].z;
    precise float _464 = _463 + _462;
    precise float _465 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _466 = _465 + _464;
    precise float _467 = _430 * cbSceneParam._m0[25u].x;
    precise float _468 = _431 * cbSceneParam._m0[25u].y;
    precise float _469 = _468 + _467;
    precise float _470 = _432 * cbSceneParam._m0[25u].z;
    precise float _471 = _470 + _469;
    precise float _472 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _473 = _472 + _471;
    precise float _474 = _430 * cbSceneParam._m0[26u].x;
    precise float _475 = _431 * cbSceneParam._m0[26u].y;
    precise float _476 = _475 + _474;
    precise float _477 = _432 * cbSceneParam._m0[26u].z;
    precise float _478 = _477 + _476;
    precise float _479 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _480 = _479 + _478;
    precise float _481 = _430 * cbSceneParam._m0[27u].x;
    precise float _482 = _431 * cbSceneParam._m0[27u].y;
    precise float _483 = _482 + _481;
    precise float _484 = _432 * cbSceneParam._m0[27u].z;
    precise float _485 = _484 + _483;
    precise float _486 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _487 = _486 + _485;
    gl_Position.x = _466;
    gl_Position.y = _473;
    gl_Position.z = _480;
    gl_Position.w = _487;
    NORMAL_1.x = fma(_157, _370, fma(_156, _367, _364 * _154));
    NORMAL_1.y = fma(_157, _371, fma(_156, _368, _365 * _154));
    NORMAL_1.z = fma(_157, _372, fma(_156, _369, _366 * _154));
    NORMAL_1.w = float(_181);
    TANGENT_1.x = fma(_168, _370, fma(_167, _367, _364 * _166));
    TANGENT_1.y = fma(_168, _371, fma(_167, _368, _365 * _166));
    TANGENT_1.z = fma(_168, _372, fma(_167, _369, _366 * _166));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_8 = sqrt(((_402 * _402) + (_403 * _403)) + (_404 * _404));
}


