#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1442;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _233 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _234 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _235 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _241 = inversesqrt(dot(vec3(_233, _234, _235), vec3(_233, _234, _235)));
    float _248 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _255 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _269 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _271 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _272 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4051 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    float _4062 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    float _4073 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    uint _282 = uint(roundEven(NORMAL.w)) * 13u;
    uint _287 = _282 + 1u;
    uint _291 = _282 + 2u;
    float _300 = sqrt(((cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x) + (cbInstanceData._m0[_282].x * cbInstanceData._m0[_282].x)) + (cbInstanceData._m0[_291].x * cbInstanceData._m0[_291].x));
    float _301 = _300 * TEXCOORD.z;
    float _302 = _300 * TEXCOORD.w;
    vec4 _315 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _301) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _302) + cbTextureTilingScale._m0[13u].w));
    vec4 _338 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _364 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _369 = _364.x * cbMtdParam._m0[11u].x;
    float _370 = _364.y * cbMtdParam._m0[11u].y;
    float _371 = _364.z * cbMtdParam._m0[11u].z;
    vec4 _390 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _301) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _302) + cbTextureTilingScale._m0[5u].w));
    vec4 _409 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _439 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[27u].x * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].y * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _441 = _439.x;
    float _453 = dot(vec4(_441, _439.yzw), vec4(cbMtdParam._m0[28u].w, cbMtdParam._m0[29u].xy, 0.0));
    float _470 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _409.x) * 2.0) - ((((_441 - _453) * cbMtdParam._m0[23u].w) + _453) * cbMtdParam._m0[22u].w))) + 1.0;
    float _4084 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _471 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
    float _478 = (_471 * ((_390.x * cbMtdParam._m0[12u].x) - _369)) + _369;
    float _479 = (_471 * ((_390.y * cbMtdParam._m0[12u].y) - _370)) + _370;
    float _480 = (_471 * ((_390.z * cbMtdParam._m0[12u].z) - _371)) + _371;
    vec4 _497 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _301) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _302) + cbTextureTilingScale._m0[3u].w));
    vec4 _519 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].z * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].w * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _521 = _519.x;
    float _531 = dot(vec4(_521, _519.yzw), vec4(cbMtdParam._m0[30u].yzw, 0.0));
    float _545 = ((cbMtdParam._m0[25u].z * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _409.y) * 2.0) - ((((_521 - _531) * cbMtdParam._m0[23u].w) + _531) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4095 = isnan(0.0) ? _545 : (isnan(_545) ? 0.0 : max(_545, 0.0));
    float _546 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
    float _556 = (_338.x * cbMtdParam._m0[9u].x) * ((_546 * ((_497.x * cbMtdParam._m0[13u].x) - _478)) + _478);
    float _557 = (_338.y * cbMtdParam._m0[9u].y) * ((_546 * ((_497.y * cbMtdParam._m0[13u].y) - _479)) + _479);
    float _558 = (_338.z * cbMtdParam._m0[9u].z) * ((_546 * ((_497.z * cbMtdParam._m0[13u].z) - _480)) + _480);
    float _562 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _315.x) * _556;
    float _565 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _315.y) * _557;
    float _568 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _315.z) * _558;
    float _576 = (((_556 - _562) * (isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0)))) + _562) * 4.55000019073486328125;
    float _578 = (((_557 - _565) * (isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0)))) + _565) * 4.55000019073486328125;
    float _580 = (((_558 - _568) * (isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0)))) + _568) * 4.55000019073486328125;
    vec4 _597 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _301) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _302) + cbTextureTilingScale._m0[20u].w));
    vec4 _620 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _301) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _302) + cbTextureTilingScale._m0[4u].w));
    vec4 _637 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _639 = _637.x;
    float _640 = _637.y;
    float _641 = _637.z;
    float _648 = ((_620.x - _639) * _471) + _639;
    float _649 = ((_620.y - _640) * _471) + _640;
    float _650 = ((_620.z - _641) * _471) + _641;
    vec4 _662 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _301) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _302) + cbTextureTilingScale._m0[2u].w));
    float _675 = ((_662.z - _650) * _546) + _650;
    float _678 = ((((_662.x - _648) * _546) + _648) * 2.0) + (-1.0);
    float _679 = ((((_662.y - _649) * _546) + _649) * 2.0) + (-1.0);
    float _680 = dot(vec2(_678, _679), vec2(_678, _679));
    float _4106 = isnan(0.0) ? _680 : (isnan(_680) ? 0.0 : max(_680, 0.0));
    float _685 = sqrt(1.0 - (isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0))));
    vec4 _699 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _724 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _301) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _302) + cbTextureTilingScale._m0[11u].w));
    float _726 = _724.x;
    float _727 = 1.0 - _726;
    float _743 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_726 - _727) * cbMtdParam._m0[24u].z) + _727) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4117 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _744 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
    float _751 = (_744 * (cbMtdParam._m0[17u].x - _576)) + _576;
    float _752 = (_744 * (cbMtdParam._m0[17u].y - _578)) + _578;
    float _753 = (_744 * (cbMtdParam._m0[17u].z - _580)) + _580;
    vec4 _779 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _781 = _779.x;
    float _798 = ((texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _301) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _302) + cbTextureTilingScale._m0[9u].w)).x - _781) * _471) + _781;
    float _815 = ((texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _301) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _302) + cbTextureTilingScale._m0[21u].w)).x - _798) * _546) + _798;
    float _819 = ((texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _815) * cbMtdParam._m0[19u].z) + _815;
    float _821 = _819 - (_819 * _744);
    float _826 = (((_597.z - _675) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _675;
    float _830 = ((_699.z - _826) * cbMtdParam._m0[19u].w) + _826;
    vec4 _843 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _301) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _302) + cbTextureTilingScale._m0[15u].w));
    float _850 = (_843.x * 2.0) + (-1.0);
    float _851 = (_843.y * 2.0) + (-1.0);
    float _852 = dot(vec2(_850, _851), vec2(_850, _851));
    float _4128 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _860 = (_744 * (_843.z - _830)) + _830;
    float _869 = (_678 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_597.x * 2.0) + (-1.0)))) + (((_699.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _870 = (_679 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_597.y * 2.0) + (-1.0)))) + (((_699.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _882 = (((_850 - _869) + (cbMtdParam._m0[21u].x * _869)) * _744) + _869;
    float _883 = (((_851 - _870) + (cbMtdParam._m0[21u].x * _870)) * _744) + _870;
    float _884 = (_744 * (sqrt(1.0 - (isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0)))) - _685)) + _685;
    float _888 = cbMtdParam._m0[22u].x + _699.w;
    float _891 = fma(_884, _248 * NORMAL.x, fma(_883, _255 * TANGENT.x, (_241 * _233) * _882));
    float _894 = fma(_884, _248 * NORMAL.y, fma(_883, _255 * TANGENT.y, (_241 * _234) * _882));
    float _897 = fma(_884, _248 * NORMAL.z, fma(_883, _255 * TANGENT.z, (_241 * _235) * _882));
    float _901 = inversesqrt(dot(vec3(_891, _894, _897), vec3(_891, _894, _897)));
    float _902 = _901 * _891;
    float _903 = _901 * _894;
    float _904 = _901 * _897;
    float _4139 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
    float _905 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
    float _4150 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _4161 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _4172 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0));
    float _4183 = isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0));
    float _4194 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _910 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
    float _924 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _965 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _975 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _965);
    float _976 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _965);
    float _977 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _965);
    float _981 = inversesqrt(dot(vec3(_975, _976, _977), vec3(_975, _976, _977)));
    float _982 = _975 * _981;
    float _983 = _976 * _981;
    float _984 = _977 * _981;
    float _990 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _991 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1009 = fma(_904, cbSceneParam._m0[5u].z, fma(_903, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _902));
    float _1012 = fma(_904, cbSceneParam._m0[6u].z, fma(_903, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _902));
    float _1015 = fma(_904, cbSceneParam._m0[7u].z, fma(_903, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _902));
    uint _1029 = (_282 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1035 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0)))) * cbInstanceData._m0[_1029].x;
    float _1036 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0)))) * cbInstanceData._m0[_1029].y;
    float _1037 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0)))) * cbInstanceData._m0[_1029].z;
    float _4205 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
    float _1038 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
    float _4216 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
    float _1039 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
    float _4227 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
    float _1040 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
    float _1041 = 1.0 - _910;
    float _1042 = _1038 * _1041;
    float _1043 = _1039 * _1041;
    float _1044 = _1040 * _1041;
    float _1049 = (_1038 + (-0.039999999105930328369140625)) * _910;
    float _1050 = (_1039 + (-0.039999999105930328369140625)) * _910;
    float _1051 = (_1040 + (-0.039999999105930328369140625)) * _910;
    float _1052 = _1049 + 0.039999999105930328369140625;
    float _1054 = _1050 + 0.039999999105930328369140625;
    float _1055 = _1051 + 0.039999999105930328369140625;
    vec4 _1064 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _990, cbSceneParam._m0[86u].y * _991));
    float _1068 = ((isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0))) * TEXCOORD_5.w) * _1064.x;
    float _1069 = dot(vec3(_902, _903, _904), vec3(_982, _983, _984));
    float _1072 = _1069 * 2.0;
    float _1076 = (_1072 * _902) - _982;
    float _1077 = (_1072 * _903) - _983;
    float _1078 = (_1072 * _904) - _984;
    float _1082 = abs(dot(vec3(_982, _983, _984), vec3(_902, _903, _904)));
    float _4238 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
    float _1084 = sqrt(_905);
    float _1097 = exp2((_1084 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1084 * 3.0));
    float _1103 = (1.0 - _1097) * ((_1084 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1104 = _1097 * _1084;
    float _1132 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1136 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1140 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1441;
    float _1443;
    float _1444;
    float _1445;
    float _1446;
    float _1447;
    float _1448;
    float _1449;
    float _1450;
    float _1451;
    float _1452;
    float _1453;
    float _1454;
    float _1455;
    float _1456;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1166 = fma(_1140, cbModelParam._m0[26u].z, fma(_1136, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1132));
        float _1170 = fma(_1140, cbModelParam._m0[27u].z, fma(_1136, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1132));
        float _1174 = fma(_1140, cbModelParam._m0[28u].z, fma(_1136, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1132));
        float _1199 = _1132 + _902;
        float _1200 = _1136 + _903;
        float _1201 = _1140 + _904;
        float _1211 = fma(_1201, cbModelParam._m0[26u].z, fma(_1200, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1199)) - _1166;
        float _1212 = fma(_1201, cbModelParam._m0[27u].z, fma(_1200, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1199)) - _1170;
        float _1213 = fma(_1201, cbModelParam._m0[28u].z, fma(_1200, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1199)) - _1174;
        float _1217 = inversesqrt(dot(vec3(_1211, _1212, _1213), vec3(_1211, _1212, _1213)));
        float _1230 = ((_1217 * _1211) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1166 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1231 = ((_1217 * _1212) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1170 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1232 = ((_1217 * _1213) / cbModelParam._m0[34u].z) + ((((((_1174 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1235 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1230, _1231, _1232), 0.0);
        vec4 _1242 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1230, _1231, _1232), 0.0);
        vec4 _1249 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1230, _1231, _1232), 0.0);
        vec4 _1256 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1230, _1231, _1232), 0.0);
        float _1269 = exp2((_1235.w + (-0.5)) * 20.0) * 2.0;
        float _1270 = _1269 * (_1235.x + (-0.5));
        float _1271 = _1269 * (_1235.y + (-0.5));
        float _1272 = _1269 * (_1235.z + (-0.5));
        float _1279 = exp2((_1242.w + (-0.5)) * 20.0) * 2.0;
        float _1280 = _1279 * (_1242.x + (-0.5));
        float _1281 = _1279 * (_1242.y + (-0.5));
        float _1282 = _1279 * (_1242.z + (-0.5));
        float _1289 = exp2((_1249.w + (-0.5)) * 20.0) * 2.0;
        float _1290 = _1289 * (_1249.x + (-0.5));
        float _1291 = _1289 * (_1249.y + (-0.5));
        float _1292 = _1289 * (_1249.z + (-0.5));
        float _1299 = exp2((_1256.w + (-0.5)) * 20.0) * 2.0;
        float _1300 = _1299 * (_1256.x + (-0.5));
        float _1301 = _1299 * (_1256.y + (-0.5));
        float _1302 = _1299 * (_1256.z + (-0.5));
        float _1303 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
        float _1304 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
        float _1305 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
        float _1306 = _1270 * 0.5;
        float _1307 = _1280 * 0.5;
        float _1308 = _1290 * 0.5;
        float _1309 = dot(vec3(_1306, _1307, _1308), vec3(_1306, _1307, _1308));
        float _1314 = (_1309 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1309);
        float _1323 = (dot(vec3(_902, _903, _904), vec3(_1314 * _1306, _1314 * _1307, _1314 * _1308)) + 1.0) * 0.5;
        float _4264 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
        float _1333 = sqrt(((_1307 * _1307) + (_1306 * _1306)) + (_1308 * _1308)) / (_1303 + 9.9999997473787516355514526367188e-06);
        float _4275 = isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0));
        float _1334 = isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0));
        float _1335 = _1334 * 2.0;
        float _1339 = (1.0 - _1334) / (_1334 + 1.0);
        float _4286 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
        float _1340 = isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0));
        float _1349 = ((((1.0 - _1340) * (_1335 + 2.0)) * exp2(log2(isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0))) * (_1335 + 1.0))) + _1340) * _1303;
        float _1350 = _1271 * 0.5;
        float _1351 = _1281 * 0.5;
        float _1352 = _1291 * 0.5;
        float _1353 = dot(vec3(_1350, _1351, _1352), vec3(_1350, _1351, _1352));
        float _1358 = (_1353 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1353);
        float _1366 = (dot(vec3(_902, _903, _904), vec3(_1358 * _1350, _1358 * _1351, _1358 * _1352)) + 1.0) * 0.5;
        float _4297 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
        float _1375 = sqrt(((_1351 * _1351) + (_1350 * _1350)) + (_1352 * _1352)) / (_1304 + 9.9999997473787516355514526367188e-06);
        float _4308 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
        float _1376 = isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0));
        float _1377 = _1376 * 2.0;
        float _1381 = (1.0 - _1376) / (_1376 + 1.0);
        float _4319 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1382 = isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0));
        float _1391 = ((((1.0 - _1382) * (_1377 + 2.0)) * exp2(log2(isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0))) * (_1377 + 1.0))) + _1382) * _1304;
        float _1392 = _1272 * 0.5;
        float _1393 = _1282 * 0.5;
        float _1394 = _1292 * 0.5;
        float _1395 = dot(vec3(_1392, _1393, _1394), vec3(_1392, _1393, _1394));
        float _1400 = (_1395 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1395);
        float _1408 = (dot(vec3(_902, _903, _904), vec3(_1400 * _1392, _1400 * _1393, _1400 * _1394)) + 1.0) * 0.5;
        float _4330 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
        float _1417 = sqrt(((_1393 * _1393) + (_1392 * _1392)) + (_1394 * _1394)) / (_1305 + 9.9999997473787516355514526367188e-06);
        float _4341 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
        float _1418 = isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0));
        float _1419 = _1418 * 2.0;
        float _1423 = (1.0 - _1418) / (_1418 + 1.0);
        float _4352 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1424 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
        float _1433 = ((((1.0 - _1424) * (_1419 + 2.0)) * exp2(log2(isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0))) * (_1419 + 1.0))) + _1424) * _1305;
        _1441 = _1272;
        _1443 = _1271;
        _1444 = _1270;
        _1445 = _1282;
        _1446 = _1281;
        _1447 = _1280;
        _1448 = _1292;
        _1449 = _1291;
        _1450 = _1290;
        _1451 = _1305;
        _1452 = _1304;
        _1453 = _1303;
        _1454 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0)));
        _1455 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0)));
        _1456 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0)));
    }
    else
    {
        _1441 = _1442;
        _1443 = _1442;
        _1444 = _1442;
        _1445 = _1442;
        _1446 = _1442;
        _1447 = _1442;
        _1448 = _1442;
        _1449 = _1442;
        _1450 = _1442;
        _1451 = _1442;
        _1452 = _1442;
        _1453 = _1442;
        _1454 = 0.0;
        _1455 = 0.0;
        _1456 = 0.0;
    }
    float _1749;
    float _1750;
    float _1751;
    float _1752;
    float _1753;
    float _1754;
    float _1755;
    float _1756;
    float _1757;
    float _1758;
    float _1759;
    float _1760;
    float _1761;
    float _1762;
    float _1763;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1480 = fma(_1140, cbModelParam._m0[30u].z, fma(_1136, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1132));
        float _1484 = fma(_1140, cbModelParam._m0[31u].z, fma(_1136, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1132));
        float _1488 = fma(_1140, cbModelParam._m0[32u].z, fma(_1136, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1132));
        float _1511 = _1132 + _902;
        float _1512 = _1136 + _903;
        float _1513 = _1140 + _904;
        float _1523 = fma(_1513, cbModelParam._m0[30u].z, fma(_1512, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1511)) - _1480;
        float _1524 = fma(_1513, cbModelParam._m0[31u].z, fma(_1512, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1511)) - _1484;
        float _1525 = fma(_1513, cbModelParam._m0[32u].z, fma(_1512, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1511)) - _1488;
        float _1529 = inversesqrt(dot(vec3(_1523, _1524, _1525), vec3(_1523, _1524, _1525)));
        float _1542 = ((_1529 * _1523) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1480 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1543 = ((_1529 * _1524) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1484 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1544 = ((_1529 * _1525) / cbModelParam._m0[35u].z) + ((((((_1488 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1546 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1542, _1543, _1544), 0.0);
        vec4 _1553 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1542, _1543, _1544), 0.0);
        vec4 _1560 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1542, _1543, _1544), 0.0);
        vec4 _1567 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1542, _1543, _1544), 0.0);
        float _1579 = exp2((_1546.w + (-0.5)) * 20.0) * 2.0;
        float _1580 = _1579 * (_1546.x + (-0.5));
        float _1581 = _1579 * (_1546.y + (-0.5));
        float _1582 = _1579 * (_1546.z + (-0.5));
        float _1589 = exp2((_1553.w + (-0.5)) * 20.0) * 2.0;
        float _1590 = _1589 * (_1553.x + (-0.5));
        float _1591 = _1589 * (_1553.y + (-0.5));
        float _1592 = _1589 * (_1553.z + (-0.5));
        float _1599 = exp2((_1560.w + (-0.5)) * 20.0) * 2.0;
        float _1600 = _1599 * (_1560.x + (-0.5));
        float _1601 = _1599 * (_1560.y + (-0.5));
        float _1602 = _1599 * (_1560.z + (-0.5));
        float _1609 = exp2((_1567.w + (-0.5)) * 20.0) * 2.0;
        float _1610 = _1609 * (_1567.x + (-0.5));
        float _1611 = _1609 * (_1567.y + (-0.5));
        float _1612 = _1609 * (_1567.z + (-0.5));
        float _1613 = isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0));
        float _1614 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
        float _1615 = isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0));
        float _1616 = _1580 * 0.5;
        float _1617 = _1590 * 0.5;
        float _1618 = _1600 * 0.5;
        float _1619 = dot(vec3(_1616, _1617, _1618), vec3(_1616, _1617, _1618));
        float _1624 = (_1619 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1619);
        float _1632 = (dot(vec3(_902, _903, _904), vec3(_1624 * _1616, _1624 * _1617, _1624 * _1618)) + 1.0) * 0.5;
        float _4393 = isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0));
        float _1641 = sqrt(((_1617 * _1617) + (_1616 * _1616)) + (_1618 * _1618)) / (_1613 + 9.9999997473787516355514526367188e-06);
        float _4404 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
        float _1642 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
        float _1643 = _1642 * 2.0;
        float _1647 = (1.0 - _1642) / (_1642 + 1.0);
        float _4415 = isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0));
        float _1648 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
        float _1657 = ((((1.0 - _1648) * (_1643 + 2.0)) * exp2(log2(isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0))) * (_1643 + 1.0))) + _1648) * _1613;
        float _1658 = _1581 * 0.5;
        float _1659 = _1591 * 0.5;
        float _1660 = _1601 * 0.5;
        float _1661 = dot(vec3(_1658, _1659, _1660), vec3(_1658, _1659, _1660));
        float _1666 = (_1661 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1661);
        float _1674 = (dot(vec3(_902, _903, _904), vec3(_1666 * _1658, _1666 * _1659, _1666 * _1660)) + 1.0) * 0.5;
        float _4426 = isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0));
        float _1683 = sqrt(((_1659 * _1659) + (_1658 * _1658)) + (_1660 * _1660)) / (_1614 + 9.9999997473787516355514526367188e-06);
        float _4437 = isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0));
        float _1684 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
        float _1685 = _1684 * 2.0;
        float _1689 = (1.0 - _1684) / (_1684 + 1.0);
        float _4448 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
        float _1690 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
        float _1699 = ((((1.0 - _1690) * (_1685 + 2.0)) * exp2(log2(isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0))) * (_1685 + 1.0))) + _1690) * _1614;
        float _1700 = _1582 * 0.5;
        float _1701 = _1592 * 0.5;
        float _1702 = _1602 * 0.5;
        float _1703 = dot(vec3(_1700, _1701, _1702), vec3(_1700, _1701, _1702));
        float _1708 = (_1703 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1703);
        float _1716 = (dot(vec3(_902, _903, _904), vec3(_1708 * _1700, _1708 * _1701, _1708 * _1702)) + 1.0) * 0.5;
        float _4459 = isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0));
        float _1725 = sqrt(((_1701 * _1701) + (_1700 * _1700)) + (_1702 * _1702)) / (_1615 + 9.9999997473787516355514526367188e-06);
        float _4470 = isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0));
        float _1726 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
        float _1727 = _1726 * 2.0;
        float _1731 = (1.0 - _1726) / (_1726 + 1.0);
        float _4481 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
        float _1732 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
        float _1741 = ((((1.0 - _1732) * (_1727 + 2.0)) * exp2(log2(isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0))) * (_1727 + 1.0))) + _1732) * _1615;
        _1749 = _1582;
        _1750 = _1581;
        _1751 = _1580;
        _1752 = _1592;
        _1753 = _1591;
        _1754 = _1590;
        _1755 = _1602;
        _1756 = _1601;
        _1757 = _1600;
        _1758 = _1615;
        _1759 = _1614;
        _1760 = _1613;
        _1761 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0)));
        _1762 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0)));
        _1763 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0)));
    }
    else
    {
        _1749 = _1442;
        _1750 = _1442;
        _1751 = _1442;
        _1752 = _1442;
        _1753 = _1442;
        _1754 = _1442;
        _1755 = _1442;
        _1756 = _1442;
        _1757 = _1442;
        _1758 = _1442;
        _1759 = _1442;
        _1760 = _1442;
        _1761 = 0.0;
        _1762 = 0.0;
        _1763 = 0.0;
    }
    float _1773 = (cbModelParam._m0[1u].x * (_1761 - _1454)) + _1454;
    float _1774 = (cbModelParam._m0[1u].x * (_1762 - _1455)) + _1455;
    float _1775 = (cbModelParam._m0[1u].x * (_1763 - _1456)) + _1456;
    float _1796 = fma(_1775, cbSceneParam._m0[89u].z, fma(_1774, cbSceneParam._m0[89u].y, _1773 * cbSceneParam._m0[89u].x));
    float _1799 = fma(_1775, cbSceneParam._m0[90u].z, fma(_1774, cbSceneParam._m0[90u].y, _1773 * cbSceneParam._m0[90u].x));
    float _1802 = fma(_1775, cbSceneParam._m0[91u].z, fma(_1774, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1773));
    float _1817 = _1076 * 0.5;
    float _1818 = _1077 * 0.5;
    float _1819 = _1078 * 0.5;
    float _1820 = dot(vec4(_1817, _1818, _1819, 1.0), vec4(_1751, _1754, _1757, _1760));
    float _1823 = dot(vec4(_1817, _1818, _1819, 1.0), vec4(_1750, _1753, _1756, _1759));
    float _1826 = dot(vec4(_1817, _1818, _1819, 1.0), vec4(_1749, _1752, _1755, _1758));
    float _1860;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1833 = dot(vec4(_1817, _1818, _1819, 1.0), vec4(_1441, _1445, _1448, _1451));
        float _1837 = dot(vec4(_1817, _1818, _1819, 1.0), vec4(_1443, _1446, _1449, _1452));
        float _1841 = dot(vec4(_1817, _1818, _1819, 1.0), vec4(_1444, _1447, _1450, _1453));
        float _1848 = dot(vec4(cbModelParam._m0[39u]), vec4(_1817, _1818, _1819, 1.0));
        _1860 = dot(vec3(isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0)), isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0)), isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1848) ? 0.0 : (isnan(0.0) ? _1848 : max(0.0, _1848))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1860 = 1.0;
    }
    float _1871;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1862 = dot(vec4(cbModelParam._m0[40u]), vec4(_1817, _1818, _1819, 1.0));
        _1871 = dot(vec3(isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0)), isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0)), isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1862) ? 0.0 : (isnan(0.0) ? _1862 : max(0.0, _1862))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1871 = 1.0;
    }
    float _1875 = (_1871 * cbModelParam._m0[1u].x) + (_1860 * (1.0 - cbModelParam._m0[1u].x));
    float _1885 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _905);
    float _1886 = isnan(_1885) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1885 : min(cbModelParam._m0[25u].z, _1885));
    float _1967;
    float _1969;
    float _1971;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1934 = fma(_1140, cbModelParam._m0[13u].z, fma(_1136, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1132)) + cbModelParam._m0[13u].w;
        float _1938 = fma(_1140, cbModelParam._m0[14u].z, fma(_1136, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1132)) + cbModelParam._m0[14u].w;
        float _1942 = fma(_1140, cbModelParam._m0[15u].z, fma(_1136, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1132)) + cbModelParam._m0[15u].w;
        float _1945 = fma(_1078, cbModelParam._m0[13u].z, fma(_1077, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1076));
        float _1948 = fma(_1078, cbModelParam._m0[14u].z, fma(_1077, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1076));
        float _1951 = fma(_1078, cbModelParam._m0[15u].z, fma(_1077, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1076));
        float _1979;
        if (_1945 > 0.0)
        {
            _1979 = abs((1.0 - _1934) / _1945);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1945 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1934 + 1.0) / _1945);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1979 = frontier_phi_14_12_ladder;
        }
        float _2151;
        if (_1948 > 0.0)
        {
            _2151 = abs((1.0 - _1938) / _1948);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1948 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1938 + 1.0) / _1948);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2151 = frontier_phi_23_19_ladder;
        }
        float _2446;
        if (_1951 > 0.0)
        {
            _2446 = abs((1.0 - _1942) / _1951);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1951 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1942 + 1.0) / _1951);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2446 = frontier_phi_35_30_ladder;
        }
        float _2448 = isnan(_2151) ? _1979 : (isnan(_1979) ? _2151 : min(_1979, _2151));
        float _2449 = isnan(_2446) ? _2448 : (isnan(_2448) ? _2446 : min(_2448, _2446));
        float _2453 = (_2449 * _1945) + _1934;
        float _2454 = (_2449 * _1948) + _1938;
        float _2455 = (_2449 * _1951) + _1942;
        float _2456 = _2449 * 9.9999997473787516355514526367188e-05;
        float _2458 = (-1.0) - _2456;
        float _2460 = _2456 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2455 > _2460) || ((_2455 < _2458) || ((_2454 > _2460) || ((_2454 < _2458) || ((_2453 < _2458) || (_2453 > _2460))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2600 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2455, cbModelParam._m0[9u].z, fma(_2454, cbModelParam._m0[9u].y, _2453 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2455, cbModelParam._m0[10u].z, fma(_2454, cbModelParam._m0[10u].y, _2453 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2455, cbModelParam._m0[11u].z, fma(_2454, cbModelParam._m0[11u].y, _2453 * cbModelParam._m0[11u].x))), _1886);
            frontier_phi_13_35_ladder = _2600.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2600.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2600.x * cbModelParam._m0[1u].y;
        }
        _1967 = frontier_phi_13_35_ladder_2;
        _1969 = frontier_phi_13_35_ladder_1;
        _1971 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1955 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1076, _1077, _1078), _1886);
        _1967 = _1955.x * cbModelParam._m0[1u].y;
        _1969 = _1955.y * cbModelParam._m0[1u].y;
        _1971 = _1955.z * cbModelParam._m0[1u].y;
    }
    float _1975 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _905);
    float _1976 = isnan(_1975) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1975 : min(cbModelParam._m0[25u].w, _1975));
    float _2066;
    float _2068;
    float _2070;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2030 = fma(_1140, cbModelParam._m0[21u].z, fma(_1136, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1132)) + cbModelParam._m0[21u].w;
        float _2034 = fma(_1140, cbModelParam._m0[22u].z, fma(_1136, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1132)) + cbModelParam._m0[22u].w;
        float _2038 = fma(_1140, cbModelParam._m0[23u].z, fma(_1136, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1132)) + cbModelParam._m0[23u].w;
        float _2041 = fma(_1078, cbModelParam._m0[21u].z, fma(_1077, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1076));
        float _2044 = fma(_1078, cbModelParam._m0[22u].z, fma(_1077, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1076));
        float _2047 = fma(_1078, cbModelParam._m0[23u].z, fma(_1077, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1076));
        float _2156;
        if (_2041 > 0.0)
        {
            _2156 = abs((1.0 - _2030) / _2041);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2041 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2030 + 1.0) / _2041);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2156 = frontier_phi_25_21_ladder;
        }
        float _2473;
        if (_2044 > 0.0)
        {
            _2473 = abs((1.0 - _2034) / _2044);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2044 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2034 + 1.0) / _2044);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2473 = frontier_phi_37_32_ladder;
        }
        float _2811;
        if (_2047 > 0.0)
        {
            _2811 = abs((1.0 - _2038) / _2047);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2047 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2038 + 1.0) / _2047);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2811 = frontier_phi_47_44_ladder;
        }
        float _2813 = isnan(_2473) ? _2156 : (isnan(_2156) ? _2473 : min(_2156, _2473));
        float _2814 = isnan(_2811) ? _2813 : (isnan(_2813) ? _2811 : min(_2813, _2811));
        float _2818 = (_2814 * _2041) + _2030;
        float _2819 = (_2814 * _2044) + _2034;
        float _2820 = (_2814 * _2047) + _2038;
        float _2821 = _2814 * 9.9999997473787516355514526367188e-05;
        float _2822 = (-1.0) - _2821;
        float _2824 = _2821 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2820 > _2824) || ((_2820 < _2822) || ((_2819 > _2824) || ((_2819 < _2822) || ((_2818 < _2822) || (_2818 > _2824))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2942 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2820, cbModelParam._m0[17u].z, fma(_2819, cbModelParam._m0[17u].y, _2818 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2820, cbModelParam._m0[18u].z, fma(_2819, cbModelParam._m0[18u].y, _2818 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2820, cbModelParam._m0[19u].z, fma(_2819, cbModelParam._m0[19u].y, _2818 * cbModelParam._m0[19u].x))), _1976);
            frontier_phi_22_47_ladder = _2942.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2942.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2942.x * cbModelParam._m0[1u].z;
        }
        _2066 = frontier_phi_22_47_ladder_2;
        _2068 = frontier_phi_22_47_ladder_1;
        _2070 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2050 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1076, _1077, _1078), _1976);
        _2066 = _2050.x * cbModelParam._m0[1u].z;
        _2068 = _2050.y * cbModelParam._m0[1u].z;
        _2070 = _2050.z * cbModelParam._m0[1u].z;
    }
    float _2083 = (((_1103 * _1052) + _1104) * _1068) * ((cbModelParam._m0[1u].w * (_2066 - _1967)) + _1967);
    float _2085 = (((_1103 * _1054) + _1104) * _1068) * ((cbModelParam._m0[1u].w * (_2068 - _1969)) + _1969);
    float _2087 = (((_1103 * _1055) + _1104) * _1068) * ((cbModelParam._m0[1u].w * (_2070 - _1971)) + _1971);
    float _2090 = fma(_2087, cbSceneParam._m0[89u].z, fma(_2085, cbSceneParam._m0[89u].y, _2083 * cbSceneParam._m0[89u].x));
    float _2093 = fma(_2087, cbSceneParam._m0[90u].z, fma(_2085, cbSceneParam._m0[90u].y, _2083 * cbSceneParam._m0[90u].x));
    float _2096 = fma(_2087, cbSceneParam._m0[91u].z, fma(_2085, cbSceneParam._m0[91u].y, _2083 * cbSceneParam._m0[91u].x));
    float _2130 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2134 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2138 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2142 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2143 = _2130 / _2142;
    float _2144 = _2134 / _2142;
    float _2145 = _2138 / _2142;
    float _2292;
    float _2293;
    float _2294;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2172 = ((uint(_2145 > cbSceneParam._m0[59u].y) + uint(_2145 > cbSceneParam._m0[59u].x)) + uint(_2145 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2173 = _2172 + 43u;
        uint _2181 = _2172 + 44u;
        uint _2189 = _2172 + 45u;
        uint _2197 = _2172 + 46u;
        float _2208 = fma(_2142, cbSceneParam._m0[_2173].w, fma(_2138, cbSceneParam._m0[_2173].z, fma(_2134, cbSceneParam._m0[_2173].y, _2130 * cbSceneParam._m0[_2173].x)));
        float _2212 = fma(_2142, cbSceneParam._m0[_2181].w, fma(_2138, cbSceneParam._m0[_2181].z, fma(_2134, cbSceneParam._m0[_2181].y, _2130 * cbSceneParam._m0[_2181].x)));
        float _2220 = fma(_2142, cbSceneParam._m0[_2197].w, fma(_2138, cbSceneParam._m0[_2197].z, fma(_2134, cbSceneParam._m0[_2197].y, _2130 * cbSceneParam._m0[_2197].x)));
        float _2225 = cbSceneParam._m0[33u].z * _2220;
        float _2227 = cbSceneParam._m0[33u].w * _2220;
        float _2230 = fma(_2142, cbSceneParam._m0[_2189].w, fma(_2138, cbSceneParam._m0[_2189].z, fma(_2134, cbSceneParam._m0[_2189].y, _2130 * cbSceneParam._m0[_2189].x))) / _2220;
        float _2278 = (cbSceneParam._m0[33u].x - sqrt(((_2144 * _2144) + (_2143 * _2143)) + (_2145 * _2145))) * cbSceneParam._m0[33u].y;
        float _4607 = isnan(0.0) ? _2278 : (isnan(_2278) ? 0.0 : max(_2278, 0.0));
        float _2285 = (isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2225 + _2208) / _2220, (_2227 + _2212) / _2220), _2230), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2227 + _2208) / _2220, (_2212 - _2225) / _2220), _2230), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2208 - _2225) / _2220, (_2212 - _2227) / _2220), _2230), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2208 - _2227) / _2220, (_2225 + _2212) / _2220), _2230), 0.0)).x), vec4(0.25)));
        _2292 = 1.0 - (_2285 * cbSceneParam._m0[34u].x);
        _2293 = 1.0 - (_2285 * cbSceneParam._m0[34u].y);
        _2294 = 1.0 - (_2285 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2292 = 1.0;
        _2293 = 1.0;
        _2294 = 1.0;
    }
    float _2358;
    float _2360;
    float _2362;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2346 = fma(_2142, cbSceneParam._m0[63u].w, fma(_2138, cbSceneParam._m0[63u].z, fma(_2134, cbSceneParam._m0[63u].y, _2130 * cbSceneParam._m0[63u].x)));
        float _2347 = fma(_2142, cbSceneParam._m0[60u].w, fma(_2138, cbSceneParam._m0[60u].z, fma(_2134, cbSceneParam._m0[60u].y, _2130 * cbSceneParam._m0[60u].x))) / _2346;
        float _2348 = fma(_2142, cbSceneParam._m0[61u].w, fma(_2138, cbSceneParam._m0[61u].z, fma(_2134, cbSceneParam._m0[61u].y, _2130 * cbSceneParam._m0[61u].x))) / _2346;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2347 >= cbSceneParam._m0[64u].x) && (_2348 >= cbSceneParam._m0[64u].y)) && (_2347 <= cbSceneParam._m0[64u].z)) && (_2348 <= cbSceneParam._m0[64u].w))
        {
            float _2486 = fma(_2142, cbSceneParam._m0[62u].w, fma(_2138, cbSceneParam._m0[62u].z, fma(_2134, cbSceneParam._m0[62u].y, _2130 * cbSceneParam._m0[62u].x))) / _2346;
            float _2490 = isnan(cbSceneParam._m0[41u].w) ? _2486 : (isnan(_2486) ? cbSceneParam._m0[41u].w : max(_2486, cbSceneParam._m0[41u].w));
            float _2533 = (cbSceneParam._m0[33u].x - sqrt(((_2144 * _2144) + (_2143 * _2143)) + (_2145 * _2145))) * cbSceneParam._m0[33u].y;
            float _4623 = isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0));
            float _2540 = (isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2347, cbSceneParam._m0[33u].w + _2348), _2490), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2347, _2348 - cbSceneParam._m0[33u].z), _2490), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2347 - cbSceneParam._m0[33u].z, _2348 - cbSceneParam._m0[33u].w), _2490), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2347 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2348), _2490), 0.0)).x), vec4(0.25)));
            float _2544 = 1.0 - (_2540 * cbSceneParam._m0[34u].x);
            float _2545 = 1.0 - (_2540 * cbSceneParam._m0[34u].y);
            float _2546 = 1.0 - (_2540 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2546) ? _2294 : (isnan(_2294) ? _2546 : min(_2294, _2546));
            frontier_phi_34_33_ladder_1 = isnan(_2545) ? _2293 : (isnan(_2293) ? _2545 : min(_2293, _2545));
            frontier_phi_34_33_ladder_2 = isnan(_2544) ? _2292 : (isnan(_2292) ? _2544 : min(_2292, _2544));
        }
        else
        {
            frontier_phi_34_33_ladder = _2294;
            frontier_phi_34_33_ladder_1 = _2293;
            frontier_phi_34_33_ladder_2 = _2292;
        }
        _2358 = frontier_phi_34_33_ladder_2;
        _2360 = frontier_phi_34_33_ladder_1;
        _2362 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2358 = _2292;
        _2360 = _2293;
        _2362 = _2294;
    }
    uvec4 _2367 = floatBitsToUint(cbInstanceData._m0[_282 + 5u]);
    uint _2369 = _2367.x * 14u;
    uint _2370 = _2369 + 13u;
    float _2377 = _1068 + (-1.0);
    float _2382 = (cbLight._m0[_2370].x * _2377) + 1.0;
    float _2383 = (cbLight._m0[_2370].y * _2377) + 1.0;
    float _2384 = (cbLight._m0[_2370].z * _2377) + 1.0;
    float _2385 = (cbLight._m0[_2370].w * _2377) + 1.0;
    uint _2386 = _2369 + 5u;
    float _2392 = isnan(1.0) ? _2383 : (isnan(_2383) ? 1.0 : min(_2383, 1.0));
    uint _2396 = _2369 + 4u;
    float _2405 = isnan(1.0) ? _2382 : (isnan(_2382) ? 1.0 : min(_2382, 1.0));
    uint _2409 = _2369 | 1u;
    float _2420 = dot(vec3(cbLight._m0[_2369].xyz), vec3(_902, _903, _904));
    float _2423 = dot(vec3(cbLight._m0[_2409].xyz), vec3(_902, _903, _904));
    float _4659 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
    float _4670 = isnan(0.0) ? _2423 : (isnan(_2423) ? 0.0 : max(_2423, 0.0));
    float _2428 = (isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0))) * 0.3183098733425140380859375;
    float _2430 = (isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0))) * 0.3183098733425140380859375;
    float _2437 = ((cbLight._m0[_2386].x * _2392) * _2430) + (((cbLight._m0[_2396].x * _2358) * _2405) * _2428);
    float _2438 = ((_2392 * cbLight._m0[_2386].y) * _2430) + (((cbLight._m0[_2396].y * _2360) * _2405) * _2428);
    float _2439 = ((_2392 * cbLight._m0[_2386].z) * _2430) + (((cbLight._m0[_2396].z * _2362) * _2405) * _2428);
    uvec4 _2443 = floatBitsToUint(cbLight._m0[_2369 + 12u]);
    bool _2445 = _2443.x == 0u;
    float _2547;
    float _2549;
    float _2551;
    if (_2445)
    {
        _2547 = _2437;
        _2549 = _2438;
        _2551 = _2439;
    }
    else
    {
        uint _2555 = _2369 + 6u;
        float _2571 = (dot(vec3(cbLight._m0[_2369 + 2u].xyz), vec3(_902, _903, _904)) * 0.5) + 0.5;
        float _2572 = _2571 * _2571;
        float _4681 = isnan(0.0) ? _2572 : (isnan(_2572) ? 0.0 : max(_2572, 0.0));
        float _2573 = isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0));
        float _2574 = isnan(1.0) ? _2384 : (isnan(_2384) ? 1.0 : min(_2384, 1.0));
        _2547 = (((cbLight._m0[_2555].x * 0.3183098733425140380859375) * _2573) * _2574) + _2437;
        _2549 = (((cbLight._m0[_2555].y * 0.3183098733425140380859375) * _2573) * _2574) + _2438;
        _2551 = (((cbLight._m0[_2555].z * 0.3183098733425140380859375) * _2573) * _2574) + _2439;
    }
    bool _2554 = _2443.y == 0u;
    float _2609;
    float _2611;
    float _2613;
    if (_2554)
    {
        _2609 = _2547;
        _2611 = _2549;
        _2613 = _2551;
    }
    else
    {
        uint _2782 = _2369 + 7u;
        float _2798 = (dot(vec3(cbLight._m0[_2369 + 3u].xyz), vec3(_902, _903, _904)) * 0.5) + 0.5;
        float _2799 = _2798 * _2798;
        float _4697 = isnan(0.0) ? _2799 : (isnan(_2799) ? 0.0 : max(_2799, 0.0));
        float _2800 = isnan(1.0) ? _4697 : (isnan(_4697) ? 1.0 : min(_4697, 1.0));
        float _2801 = isnan(1.0) ? _2385 : (isnan(_2385) ? 1.0 : min(_2385, 1.0));
        _2609 = (((cbLight._m0[_2782].x * 0.3183098733425140380859375) * _2800) * _2801) + _2547;
        _2611 = (((cbLight._m0[_2782].y * 0.3183098733425140380859375) * _2800) * _2801) + _2549;
        _2613 = (((cbLight._m0[_2782].z * 0.3183098733425140380859375) * _2800) * _2801) + _2551;
    }
    uint _2616 = _2369 + 8u;
    float _2629 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2369].w)) * _905) * 0.949999988079071044921875);
    float _2630 = _2629 * _2629;
    float _2631 = cbLight._m0[_2369].x + _982;
    float _2632 = cbLight._m0[_2369].y + _983;
    float _2633 = cbLight._m0[_2369].z + _984;
    float _2637 = inversesqrt(dot(vec3(_2631, _2632, _2633), vec3(_2631, _2632, _2633)));
    float _2638 = _2637 * _2631;
    float _2639 = _2637 * _2632;
    float _2640 = _2637 * _2633;
    float _2641 = dot(vec3(_902, _903, _904), vec3(cbLight._m0[_2369].xyz));
    float _4713 = isnan(0.0) ? _2641 : (isnan(_2641) ? 0.0 : max(_2641, 0.0));
    float _2644 = isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0));
    float _4724 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
    float _2645 = isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0));
    float _2646 = dot(vec3(_902, _903, _904), vec3(_2638, _2639, _2640));
    float _4735 = isnan(0.0) ? _2646 : (isnan(_2646) ? 0.0 : max(_2646, 0.0));
    float _2649 = isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0));
    float _2650 = dot(vec3(cbLight._m0[_2369].xyz), vec3(_2638, _2639, _2640));
    float _4746 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
    float _2654 = _2630 * _2630;
    float _2658 = ((_2649 * _2649) * (_2654 + (-1.0))) + 1.0;
    float _2666 = exp2(log2(1.0 - (isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0)))) * 5.0);
    float _2667 = 0.959999978542327880859375 - _1049;
    float _2669 = 0.959999978542327880859375 - _1050;
    float _2670 = 0.959999978542327880859375 - _1051;
    float _2677 = 1.0 - _2630;
    float _2688 = (0.5 / (((_2645 * ((_2644 * _2677) + _2630)) + 9.9999999392252902907785028219223e-09) + (((_2645 * _2677) + _2630) * _2644))) * _2644;
    float _4757 = isnan(0.0) ? _2688 : (isnan(_2688) ? 0.0 : max(_2688, 0.0));
    float _2690 = (isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0))) * (_2654 / ((_2658 * _2658) * 3.141590118408203125));
    uint _2704 = _2369 + 9u;
    float _2715 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2409].w)) * _905) * 0.949999988079071044921875);
    float _2716 = _2715 * _2715;
    float _2717 = cbLight._m0[_2409].x + _982;
    float _2718 = cbLight._m0[_2409].y + _983;
    float _2719 = cbLight._m0[_2409].z + _984;
    float _2723 = inversesqrt(dot(vec3(_2717, _2718, _2719), vec3(_2717, _2718, _2719)));
    float _2724 = _2723 * _2717;
    float _2725 = _2723 * _2718;
    float _2726 = _2723 * _2719;
    float _2727 = dot(vec3(_902, _903, _904), vec3(cbLight._m0[_2409].xyz));
    float _4768 = isnan(0.0) ? _2727 : (isnan(_2727) ? 0.0 : max(_2727, 0.0));
    float _2730 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
    float _2731 = dot(vec3(_902, _903, _904), vec3(_2724, _2725, _2726));
    float _4779 = isnan(0.0) ? _2731 : (isnan(_2731) ? 0.0 : max(_2731, 0.0));
    float _2734 = isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0));
    float _2735 = dot(vec3(cbLight._m0[_2409].xyz), vec3(_2724, _2725, _2726));
    float _4790 = isnan(0.0) ? _2735 : (isnan(_2735) ? 0.0 : max(_2735, 0.0));
    float _2739 = _2716 * _2716;
    float _2743 = ((_2734 * _2734) * (_2739 + (-1.0))) + 1.0;
    float _2750 = exp2(log2(1.0 - (isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0)))) * 5.0);
    float _2757 = 1.0 - _2716;
    float _2767 = (0.5 / (((_2645 * ((_2730 * _2757) + _2716)) + 9.9999999392252902907785028219223e-09) + (((_2645 * _2757) + _2716) * _2730))) * _2730;
    float _4801 = isnan(0.0) ? _2767 : (isnan(_2767) ? 0.0 : max(_2767, 0.0));
    float _2769 = (isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0))) * (_2739 / ((_2743 * _2743) * 3.141590118408203125));
    float _2779 = (((((_2750 * _2667) + _1052) * cbLight._m0[_2704].x) * _2769) * _2392) + ((((cbLight._m0[_2616].x * _2358) * ((_2666 * _2667) + _1052)) * _2690) * _2405);
    float _2780 = (((((_2750 * _2669) + _1054) * cbLight._m0[_2704].y) * _2769) * _2392) + ((((cbLight._m0[_2616].y * _2360) * ((_2666 * _2669) + _1054)) * _2690) * _2405);
    float _2781 = (((((_2750 * _2670) + _1055) * cbLight._m0[_2704].z) * _2769) * _2392) + ((((cbLight._m0[_2616].z * _2362) * ((_2666 * _2670) + _1055)) * _2690) * _2405);
    float _2837;
    float _2839;
    float _2841;
    if (_2445)
    {
        _2837 = _2779;
        _2839 = _2780;
        _2841 = _2781;
    }
    else
    {
        uint _2843 = _2369 + 2u;
        uint _2847 = _2369 + 10u;
        float _2861 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2843].w)) * _905) * 0.949999988079071044921875);
        float _2862 = _2861 * _2861;
        float _2863 = cbLight._m0[_2843].x + _982;
        float _2864 = cbLight._m0[_2843].y + _983;
        float _2865 = cbLight._m0[_2843].z + _984;
        float _2869 = inversesqrt(dot(vec3(_2863, _2864, _2865), vec3(_2863, _2864, _2865)));
        float _2870 = _2869 * _2863;
        float _2871 = _2869 * _2864;
        float _2872 = _2869 * _2865;
        float _2873 = dot(vec3(_902, _903, _904), vec3(cbLight._m0[_2843].xyz));
        float _4812 = isnan(0.0) ? _2873 : (isnan(_2873) ? 0.0 : max(_2873, 0.0));
        float _2876 = isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0));
        float _2877 = dot(vec3(_902, _903, _904), vec3(_2870, _2871, _2872));
        float _4823 = isnan(0.0) ? _2877 : (isnan(_2877) ? 0.0 : max(_2877, 0.0));
        float _2880 = isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0));
        float _2881 = dot(vec3(cbLight._m0[_2843].xyz), vec3(_2870, _2871, _2872));
        float _4834 = isnan(0.0) ? _2881 : (isnan(_2881) ? 0.0 : max(_2881, 0.0));
        float _2885 = _2862 * _2862;
        float _2889 = ((_2880 * _2880) * (_2885 + (-1.0))) + 1.0;
        float _2896 = exp2(log2(1.0 - (isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0)))) * 5.0);
        float _2903 = 1.0 - _2862;
        float _2913 = (0.5 / (((_2645 * ((_2876 * _2903) + _2862)) + 9.9999999392252902907785028219223e-09) + (((_2645 * _2903) + _2862) * _2876))) * _2876;
        float _4845 = isnan(0.0) ? _2913 : (isnan(_2913) ? 0.0 : max(_2913, 0.0));
        float _2915 = (isnan(1.0) ? _4845 : (isnan(_4845) ? 1.0 : min(_4845, 1.0))) * (_2885 / ((_2889 * _2889) * 3.141590118408203125));
        float _2916 = isnan(1.0) ? _2384 : (isnan(_2384) ? 1.0 : min(_2384, 1.0));
        _2837 = (((((_2896 * _2667) + _1052) * cbLight._m0[_2847].x) * _2915) * _2916) + _2779;
        _2839 = (((((_2896 * _2669) + _1054) * cbLight._m0[_2847].y) * _2915) * _2916) + _2780;
        _2841 = (((((_2896 * _2670) + _1055) * cbLight._m0[_2847].z) * _2915) * _2916) + _2781;
    }
    float _2947;
    float _2949;
    float _2951;
    if (_2554)
    {
        _2947 = _2837;
        _2949 = _2839;
        _2951 = _2841;
    }
    else
    {
        uint _2958 = _2369 + 3u;
        uint _2962 = _2369 + 11u;
        float _2976 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2958].w)) * _905) * 0.949999988079071044921875);
        float _2977 = _2976 * _2976;
        float _2978 = cbLight._m0[_2958].x + _982;
        float _2979 = cbLight._m0[_2958].y + _983;
        float _2980 = cbLight._m0[_2958].z + _984;
        float _2984 = inversesqrt(dot(vec3(_2978, _2979, _2980), vec3(_2978, _2979, _2980)));
        float _2985 = _2984 * _2978;
        float _2986 = _2984 * _2979;
        float _2987 = _2984 * _2980;
        float _2988 = dot(vec3(_902, _903, _904), vec3(cbLight._m0[_2958].xyz));
        float _4861 = isnan(0.0) ? _2988 : (isnan(_2988) ? 0.0 : max(_2988, 0.0));
        float _2991 = isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0));
        float _2992 = dot(vec3(_902, _903, _904), vec3(_2985, _2986, _2987));
        float _4872 = isnan(0.0) ? _2992 : (isnan(_2992) ? 0.0 : max(_2992, 0.0));
        float _2995 = isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0));
        float _2996 = dot(vec3(cbLight._m0[_2958].xyz), vec3(_2985, _2986, _2987));
        float _4883 = isnan(0.0) ? _2996 : (isnan(_2996) ? 0.0 : max(_2996, 0.0));
        float _3000 = _2977 * _2977;
        float _3004 = ((_2995 * _2995) * (_3000 + (-1.0))) + 1.0;
        float _3011 = exp2(log2(1.0 - (isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0)))) * 5.0);
        float _3018 = 1.0 - _2977;
        float _3028 = (0.5 / (((_2645 * ((_2991 * _3018) + _2977)) + 9.9999999392252902907785028219223e-09) + (((_2645 * _3018) + _2977) * _2991))) * _2991;
        float _4894 = isnan(0.0) ? _3028 : (isnan(_3028) ? 0.0 : max(_3028, 0.0));
        float _3030 = (isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0))) * (_3000 / ((_3004 * _3004) * 3.141590118408203125));
        float _3031 = isnan(1.0) ? _2385 : (isnan(_2385) ? 1.0 : min(_2385, 1.0));
        _2947 = (((((_3011 * _2667) + _1052) * cbLight._m0[_2962].x) * _3030) * _3031) + _2837;
        _2949 = (((((_3011 * _2669) + _1054) * cbLight._m0[_2962].y) * _3030) * _3031) + _2839;
        _2951 = (((((_3011 * _2670) + _1055) * cbLight._m0[_2962].z) * _3030) * _3031) + _2841;
    }
    float _3097;
    float _3099;
    float _3101;
    float _3103;
    float _3105;
    float _3107;
    if (_2367.y == 0u)
    {
        uvec4 _3052 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3053 = _3052.x;
        uint _3064 = uint((float(_3052.y) * floor(float(uint(cbSceneParam._m0[85u].y * _991) / _3053))) + floor(float(uint(cbSceneParam._m0[85u].x * _990) / _3053)));
        float _3074 = (log2(_2145 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3075 = isnan(0.0) ? _3074 : (isnan(_3074) ? 0.0 : max(_3074, 0.0));
        uint _3078 = uint(isnan(14.0) ? _3075 : (isnan(_3075) ? 14.0 : min(_3075, 14.0)));
        uvec4 _3083 = texelFetch(g_lightClusterGridBuffer, int(((_3078 << 2u) + (_3064 << 6u)) >> 2u));
        uint _3084 = _3083.x;
        uint _3085 = _3052.z;
        float _3164;
        float _3166;
        float _3168;
        float _3170;
        float _3172;
        float _3174;
        if (((((1u << ((_3085 >> 4u) & 15u)) + 4294967295u) & _3084) == 0u) || ((_3085 & 240u) == 0u))
        {
            _3164 = 0.0;
            _3166 = 0.0;
            _3168 = 0.0;
            _3170 = 0.0;
            _3172 = 0.0;
            _3174 = 0.0;
        }
        else
        {
            float _3165;
            float _3167;
            float _3169;
            float _3171;
            float _3173;
            float _3175;
            float _3309 = 0.0;
            float _3310 = 0.0;
            float _3311 = 0.0;
            float _3312 = 0.0;
            float _3313 = 0.0;
            float _3314 = 0.0;
            uint _3315 = 0u;
            uint _3324;
            bool _3325;
            for (;;)
            {
                _3324 = texelFetch(g_lightClassification, int((((_3078 << 5u) + (_3064 << 9u)) + (_3315 << 2u)) >> 2u)).x;
                _3325 = _3324 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3325)
                {
                    frontier_phi_66_pred = _3314;
                    frontier_phi_66_pred_1 = _3313;
                    frontier_phi_66_pred_2 = _3312;
                    frontier_phi_66_pred_3 = _3311;
                    frontier_phi_66_pred_4 = _3310;
                    frontier_phi_66_pred_5 = _3309;
                }
                else
                {
                    float _3433;
                    float _3434;
                    float _3435;
                    float _3436;
                    float _3437;
                    float _3438;
                    uint _3439;
                    _3433 = _3309;
                    _3434 = _3310;
                    _3435 = _3311;
                    _3436 = _3312;
                    _3437 = _3313;
                    _3438 = _3314;
                    _3439 = _3324;
                    float _3365;
                    float _3366;
                    float _3367;
                    float _3368;
                    float _3369;
                    float _3370;
                    for (;;)
                    {
                        uint _3443 = uint(findLSB(_3439)) + (_3315 << 5u);
                        uint _3440 = (_3439 + 4294967295u) & _3439;
                        uint _3445 = _3443 * 48u;
                        vec4 _3459 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3445)).x, texelFetch(g_PointLightRenderingBuffer, int(_3445 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3445 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3445 + 3u)).x));
                        uint _3465 = (_3443 * 48u) + 4u;
                        vec4 _3478 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3465)).x, texelFetch(g_PointLightRenderingBuffer, int(_3465 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3465 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3465 + 3u)).x));
                        uint _3484 = (_3443 * 48u) + 8u;
                        vec3 _3495 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3484)).x, texelFetch(g_PointLightRenderingBuffer, int(_3484 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3484 + 2u)).x));
                        float _3499 = _3459.x - _2143;
                        float _3500 = _3459.y - _2144;
                        float _3501 = _3459.z - _2145;
                        float _3502 = dot(vec3(_3499, _3500, _3501), vec3(_3499, _3500, _3501));
                        float _3505 = inversesqrt(_3502);
                        float _3506 = _3505 * _3499;
                        float _3507 = _3505 * _3500;
                        float _3508 = _3505 * _3501;
                        float _3509 = dot(vec3(_1009, _1012, _1015), vec3(_3506, _3507, _3508));
                        float _3514 = 1.0 - (_3502 * _3459.w);
                        float _4920 = isnan(0.0) ? _3514 : (isnan(_3514) ? 0.0 : max(_3514, 0.0));
                        float _3515 = isnan(1.0) ? _4920 : (isnan(_4920) ? 1.0 : min(_4920, 1.0));
                        float _3516 = sqrt(_3502) * _3478.w;
                        float _3519 = 1.39999997615814208984375 / (_3516 + 1.39999997615814208984375);
                        float _3520 = _3519 * _3519;
                        float _3523 = ((1.0 - _3520) * _3509) + _3520;
                        float _3526 = _3516 * _3516;
                        float _3530 = ((isnan(0.0) ? _3523 : (isnan(_3523) ? 0.0 : max(_3523, 0.0))) * _3515) / ((_3526 * 0.699999988079071044921875) + 1.0);
                        float _3534 = (-0.0) - _2143;
                        float _3535 = (-0.0) - _2144;
                        float _3536 = (-0.0) - _2145;
                        float _3540 = inversesqrt(dot(vec3(_3534, _3535, _3536), vec3(_3534, _3535, _3536)));
                        float _3541 = _3540 * _3534;
                        float _3542 = _3540 * _3535;
                        float _3543 = _3540 * _3536;
                        float _3550 = exp2(log2(1.0 / ((_3526 * 3.5) + 5.0)) * 0.25);
                        float _3551 = 1.0 - _1084;
                        float _3558 = sqrt(1.0 - ((1.0 - (_3551 * _3551)) * (1.0 - (_3550 * _3550))));
                        float _3559 = _3558 * _3558;
                        float _3560 = _3559 * _3559;
                        float _3561 = _3541 + _3506;
                        float _3562 = _3542 + _3507;
                        float _3563 = _3543 + _3508;
                        float _3567 = inversesqrt(dot(vec3(_3561, _3562, _3563), vec3(_3561, _3562, _3563)));
                        float _3571 = dot(vec3(_1009, _1012, _1015), vec3(_3541, _3542, _3543));
                        float _4936 = isnan(0.0) ? _3571 : (isnan(_3571) ? 0.0 : max(_3571, 0.0));
                        float _3574 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
                        float _3575 = dot(vec3(_1009, _1012, _1015), vec3(_3567 * _3561, _3567 * _3562, _3567 * _3563));
                        float _4947 = isnan(0.0) ? _3575 : (isnan(_3575) ? 0.0 : max(_3575, 0.0));
                        float _3578 = isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0));
                        float _3582 = ((_3578 * _3578) * (_3560 + (-1.0))) + 1.0;
                        float _3583 = _3519 * _3559;
                        float _3584 = _3583 * _3583;
                        float _3587 = ((1.0 - _3584) * _3509) + _3584;
                        float _4958 = isnan(0.0) ? _3587 : (isnan(_3587) ? 0.0 : max(_3587, 0.0));
                        float _3588 = isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0));
                        float _3589 = 1.0 - _3559;
                        float _3599 = (0.5 / (((_3588 * ((_3574 * _3589) + _3559)) + 9.9999999392252902907785028219223e-09) + (((_3588 * _3589) + _3559) * _3574))) * _3588;
                        float _4969 = isnan(0.0) ? _3599 : (isnan(_3599) ? 0.0 : max(_3599, 0.0));
                        float _3610 = (((_3560 * 3.1415927410125732421875) * (isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0)))) / ((_3582 * _3582) * ((_3526 * 2.1991131305694580078125) + 3.141590118408203125))) * _3515;
                        _3368 = (_3530 * _3478.x) + _3436;
                        _3369 = (_3530 * _3478.y) + _3437;
                        _3370 = (_3530 * _3478.z) + _3438;
                        _3365 = (_3610 * _3495.x) + _3433;
                        _3366 = (_3610 * _3495.y) + _3434;
                        _3367 = (_3610 * _3495.z) + _3435;
                        if (_3440 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3433 = _3365;
                            _3434 = _3366;
                            _3435 = _3367;
                            _3436 = _3368;
                            _3437 = _3369;
                            _3438 = _3370;
                            _3439 = _3440;
                        }
                    }
                    frontier_phi_66_pred = _3370;
                    frontier_phi_66_pred_1 = _3369;
                    frontier_phi_66_pred_2 = _3368;
                    frontier_phi_66_pred_3 = _3367;
                    frontier_phi_66_pred_4 = _3366;
                    frontier_phi_66_pred_5 = _3365;
                }
                _3175 = frontier_phi_66_pred;
                _3173 = frontier_phi_66_pred_1;
                _3171 = frontier_phi_66_pred_2;
                _3169 = frontier_phi_66_pred_3;
                _3167 = frontier_phi_66_pred_4;
                _3165 = frontier_phi_66_pred_5;
                uint _3316 = _3315 + 1u;
                if (_3316 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3309 = _3165;
                    _3310 = _3167;
                    _3311 = _3169;
                    _3312 = _3171;
                    _3313 = _3173;
                    _3314 = _3175;
                    _3315 = _3316;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3164 = _3165;
            _3166 = _3167;
            _3168 = _3169;
            _3170 = _3171;
            _3172 = _3173;
            _3174 = _3175;
        }
        uvec4 _3178 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3179 = _3178.z;
        uint _3181 = (_3179 >> 8u) & 15u;
        float _3277;
        float _3279;
        float _3281;
        float _3283;
        float _3285;
        float _3287;
        if (((4294967295u << _3181) & _3084) == 0u)
        {
            _3277 = _3164;
            _3279 = _3166;
            _3281 = _3168;
            _3283 = _3170;
            _3285 = _3172;
            _3287 = _3174;
        }
        else
        {
            float _3302 = inversesqrt(dot(vec3(_2143, _2144, _2145), vec3(_2143, _2144, _2145)));
            float _3303 = _3302 * _2143;
            float _3304 = _3302 * _2144;
            float _3305 = _3302 * _2145;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3181 < ((_3179 >> 12u) & 15u))
            {
                float _3278;
                float _3280;
                float _3282;
                float _3284;
                float _3286;
                float _3288;
                float _3416 = _3164;
                float _3417 = _3166;
                float _3418 = _3168;
                float _3419 = _3170;
                float _3420 = _3172;
                float _3421 = _3174;
                uint _3422 = _3181;
                uint _3431;
                bool _3432;
                for (;;)
                {
                    _3431 = texelFetch(g_lightClassification, int((((_3078 << 5u) + (_3064 << 9u)) + (_3422 << 2u)) >> 2u)).x;
                    _3432 = _3431 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3432)
                    {
                        frontier_phi_72_pred = _3421;
                        frontier_phi_72_pred_1 = _3420;
                        frontier_phi_72_pred_2 = _3419;
                        frontier_phi_72_pred_3 = _3418;
                        frontier_phi_72_pred_4 = _3417;
                        frontier_phi_72_pred_5 = _3416;
                    }
                    else
                    {
                        float _3615;
                        float _3616;
                        float _3617;
                        float _3618;
                        float _3619;
                        float _3620;
                        float _3908;
                        float _3909;
                        float _3910;
                        float _3911;
                        float _3912;
                        float _3913;
                        float _3628 = _3416;
                        float _3629 = _3417;
                        float _3630 = _3418;
                        float _3631 = _3419;
                        float _3632 = _3420;
                        float _3633 = _3421;
                        uint _3634 = _3431;
                        uint _3635;
                        vec4 _3660;
                        float _3661;
                        vec4 _3676;
                        vec3 _3688;
                        vec4 _3703;
                        vec4 _3718;
                        float _3764;
                        bool _3765;
                        for (;;)
                        {
                            uint _3645 = ((_3422 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3634));
                            _3635 = (_3634 + 4294967295u) & _3634;
                            uint _3647 = _3645 * 40u;
                            _3660 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3647)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3647 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3647 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3647 + 3u)).x));
                            _3661 = _3660.w;
                            uint _3663 = (_3645 * 40u) + 4u;
                            _3676 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3663)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3663 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3663 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3663 + 3u)).x));
                            uint _3678 = (_3645 * 40u) + 8u;
                            _3688 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3678)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3678 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3678 + 2u)).x));
                            uint _3690 = (_3645 * 40u) + 16u;
                            _3703 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3690)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3690 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3690 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3690 + 3u)).x));
                            uint _3705 = (_3645 * 40u) + 20u;
                            _3718 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3705)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3705 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3705 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3705 + 3u)).x));
                            uint _3720 = (_3645 * 40u) + 24u;
                            vec4 _3733 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3720)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3720 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3720 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3720 + 3u)).x));
                            uint _3739 = (_3645 * 40u) + 28u;
                            vec4 _3752 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3739)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3739 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3739 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3739 + 3u)).x));
                            _3764 = fma(_2145, _3752.z, fma(_2144, _3752.y, _3752.x * _2143)) + _3752.w;
                            _3765 = !((fma(_2145, _3733.z, fma(_2144, _3733.y, _3733.x * _2143)) + _3733.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3765)
                            {
                                float _3792 = _3660.x - _2143;
                                float _3793 = _3660.y - _2144;
                                float _3794 = _3660.z - _2145;
                                float _3795 = dot(vec3(_3792, _3793, _3794), vec3(_3792, _3793, _3794));
                                float _3798 = inversesqrt(_3795);
                                float _3799 = _3798 * _3792;
                                float _3800 = _3798 * _3793;
                                float _3801 = _3798 * _3794;
                                float _3805 = 1.0 - (_3795 / (_3661 * _3661));
                                float _4980 = isnan(0.0) ? _3805 : (isnan(_3805) ? 0.0 : max(_3805, 0.0));
                                float _3806 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
                                float _3810 = sqrt(_3795) * _3676.w;
                                float _3812 = 1.39999997615814208984375 / (_3810 + 1.39999997615814208984375);
                                float _3813 = _3812 * _3812;
                                float _3816 = ((1.0 - _3813) * dot(vec3(_3799, _3800, _3801), vec3(_1009, _1012, _1015))) + _3813;
                                float _3819 = _3810 * _3810;
                                float _3823 = (fma(_2145, _3703.z, fma(_2144, _3703.y, _3703.x * _2143)) + _3703.w) / _3764;
                                float _3824 = (fma(_2145, _3718.z, fma(_2144, _3718.y, _3718.x * _2143)) + _3718.w) / _3764;
                                float _3828 = 1.0 - dot(vec2(_3823, _3824), vec2(_3823, _3824));
                                float _4996 = isnan(0.0) ? _3828 : (isnan(_3828) ? 0.0 : max(_3828, 0.0));
                                float _3829 = isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0));
                                float _3830 = _3829 * (((isnan(0.0) ? _3816 : (isnan(_3816) ? 0.0 : max(_3816, 0.0))) * _3806) / ((_3819 * 0.699999988079071044921875) + 1.0));
                                float _3842 = exp2(log2(1.0 / ((_3819 * 3.5) + 5.0)) * 0.25);
                                float _3843 = 1.0 - _1084;
                                float _3850 = sqrt(1.0 - ((1.0 - (_3843 * _3843)) * (1.0 - (_3842 * _3842))));
                                float _3851 = _3850 * _3850;
                                float _3852 = _3851 * _3851;
                                float _3853 = _3799 - _3303;
                                float _3854 = _3800 - _3304;
                                float _3855 = _3801 - _3305;
                                float _3859 = inversesqrt(dot(vec3(_3853, _3854, _3855), vec3(_3853, _3854, _3855)));
                                float _3863 = dot(vec3(_1009, _1012, _1015), vec3((-0.0) - _3303, (-0.0) - _3304, (-0.0) - _3305));
                                float _5007 = isnan(0.0) ? _3863 : (isnan(_3863) ? 0.0 : max(_3863, 0.0));
                                float _3866 = isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0));
                                float _3867 = dot(vec3(_1009, _1012, _1015), vec3(_3859 * _3853, _3859 * _3854, _3859 * _3855));
                                float _5018 = isnan(0.0) ? _3867 : (isnan(_3867) ? 0.0 : max(_3867, 0.0));
                                float _3870 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
                                float _3874 = ((_3870 * _3870) * (_3852 + (-1.0))) + 1.0;
                                float _3875 = _3812 * _3851;
                                float _3876 = _3875 * _3875;
                                float _3882 = ((1.0 - _3876) * dot(vec3(_1009, _1012, _1015), vec3(_3799, _3800, _3801))) + _3876;
                                float _5029 = isnan(0.0) ? _3882 : (isnan(_3882) ? 0.0 : max(_3882, 0.0));
                                float _3883 = isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0));
                                float _3884 = 1.0 - _3851;
                                float _3894 = (0.5 / (((_3883 * ((_3866 * _3884) + _3851)) + 9.9999999392252902907785028219223e-09) + (((_3883 * _3884) + _3851) * _3866))) * _3883;
                                float _5040 = isnan(0.0) ? _3894 : (isnan(_3894) ? 0.0 : max(_3894, 0.0));
                                float _3904 = (_3829 * _3806) * (((_3852 * 3.1415927410125732421875) * (isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0)))) / ((_3874 * _3874) * ((_3819 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3830 * _3676.y;
                                frontier_phi_78_pred_1 = _3830 * _3676.x;
                                frontier_phi_78_pred_2 = _3904 * _3688.z;
                                frontier_phi_78_pred_3 = _3904 * _3688.y;
                                frontier_phi_78_pred_4 = _3904 * _3688.x;
                                frontier_phi_78_pred_5 = _3830 * _3676.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3912 = frontier_phi_78_pred;
                            _3911 = frontier_phi_78_pred_1;
                            _3910 = frontier_phi_78_pred_2;
                            _3909 = frontier_phi_78_pred_3;
                            _3908 = frontier_phi_78_pred_4;
                            _3913 = frontier_phi_78_pred_5;
                            _3618 = _3911 + _3631;
                            _3619 = _3912 + _3632;
                            _3620 = _3913 + _3633;
                            _3615 = _3908 + _3628;
                            _3616 = _3909 + _3629;
                            _3617 = _3910 + _3630;
                            if (_3635 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3628 = _3615;
                                _3629 = _3616;
                                _3630 = _3617;
                                _3631 = _3618;
                                _3632 = _3619;
                                _3633 = _3620;
                                _3634 = _3635;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3620;
                        frontier_phi_72_pred_1 = _3619;
                        frontier_phi_72_pred_2 = _3618;
                        frontier_phi_72_pred_3 = _3617;
                        frontier_phi_72_pred_4 = _3616;
                        frontier_phi_72_pred_5 = _3615;
                    }
                    _3288 = frontier_phi_72_pred;
                    _3286 = frontier_phi_72_pred_1;
                    _3284 = frontier_phi_72_pred_2;
                    _3282 = frontier_phi_72_pred_3;
                    _3280 = frontier_phi_72_pred_4;
                    _3278 = frontier_phi_72_pred_5;
                    uint _3423 = _3422 + 1u;
                    if (_3423 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3416 = _3278;
                        _3417 = _3280;
                        _3418 = _3282;
                        _3419 = _3284;
                        _3420 = _3286;
                        _3421 = _3288;
                        _3422 = _3423;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3288;
                frontier_phi_60_61_ladder_1 = _3286;
                frontier_phi_60_61_ladder_2 = _3282;
                frontier_phi_60_61_ladder_3 = _3280;
                frontier_phi_60_61_ladder_4 = _3278;
                frontier_phi_60_61_ladder_5 = _3284;
            }
            else
            {
                frontier_phi_60_61_ladder = _3174;
                frontier_phi_60_61_ladder_1 = _3172;
                frontier_phi_60_61_ladder_2 = _3168;
                frontier_phi_60_61_ladder_3 = _3166;
                frontier_phi_60_61_ladder_4 = _3164;
                frontier_phi_60_61_ladder_5 = _3170;
            }
            _3277 = frontier_phi_60_61_ladder_4;
            _3279 = frontier_phi_60_61_ladder_3;
            _3281 = frontier_phi_60_61_ladder_2;
            _3283 = frontier_phi_60_61_ladder_5;
            _3285 = frontier_phi_60_61_ladder_1;
            _3287 = frontier_phi_60_61_ladder;
        }
        float _3292 = isnan(1.0) ? _1068 : (isnan(_1068) ? 1.0 : min(_1068, 1.0));
        _3097 = (_3292 * _3283) + _2609;
        _3099 = (_3292 * _3285) + _2611;
        _3101 = (_3292 * _3287) + _2613;
        _3103 = ((_3277 * _1052) * _3292) + _2947;
        _3105 = ((_3279 * _1054) * _3292) + _2949;
        _3107 = ((_3281 * _1055) * _3292) + _2951;
    }
    else
    {
        _3097 = _2609;
        _3099 = _2611;
        _3101 = _2613;
        _3103 = _2947;
        _3105 = _2949;
        _3107 = _2951;
    }
    float _5056 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
    float _5067 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
    float _5078 = isnan(0.0) ? _1044 : (isnan(_1044) ? 0.0 : max(_1044, 0.0));
    uint _3127 = _282 + 6u;
    float _3135 = _990 / cbSceneParam._m0[86u].x;
    float _3136 = _991 / cbSceneParam._m0[86u].y;
    vec4 _3150 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3135, _3136, (log2((isnan(cbSceneParam._m0[77u].w) ? _924 : (isnan(_924) ? cbSceneParam._m0[77u].w : min(_924, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3152 = _3150.x;
    float _3153 = _3150.y;
    float _3154 = _3150.z;
    float _3155 = _3150.w;
    float _3227;
    float _3229;
    float _3231;
    float _3233;
    if (_924 > cbSceneParam._m0[78u].w)
    {
        float _3189 = isnan(_924) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _924 : min(cbSceneParam._m0[80u].w, _924));
        float _3190 = _3189 / _924;
        float _3201 = _3190 * _975;
        float _3202 = _976 * _3190;
        float _3203 = (-0.0) - _3202;
        float _3205 = _3190 * _977;
        float _3207 = (cbSceneParam._m0[77u].w * _3203) / _3189;
        float _3208 = _3207 + cbSceneParam._m0[79u].w;
        float _3209 = cbSceneParam._m0[79u].w - _3202;
        float _3215 = sqrt(((_3201 * _3201) + (_3202 * _3202)) + (_3205 * _3205));
        float _3218 = (1.0 - (cbSceneParam._m0[77u].w / _3189)) * _3215;
        float _3223 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3225 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3378;
        if (abs((_3203 - _3207) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3378 = ((((_3208 > 0.0) ? exp2(_3223 * _3208) : (2.0 - exp2(_3225 * _3208))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3218;
        }
        else
        {
            float _3338 = 1.0 / cbSceneParam._m0[80u].x;
            float _3339 = isnan(_3209) ? _3208 : (isnan(_3208) ? _3209 : max(_3208, _3209));
            float _3340 = isnan(_3209) ? _3208 : (isnan(_3208) ? _3209 : min(_3208, _3209));
            float _3349 = isnan(0.0) ? _3339 : (isnan(_3339) ? 0.0 : min(_3339, 0.0));
            float _3350 = isnan(0.0) ? _3340 : (isnan(_3340) ? 0.0 : min(_3340, 0.0));
            _3378 = ((abs(_3215 / _3203) * cbSceneParam._m0[80u].y) * ((((_3349 - _3350) * 2.0) - ((exp2(_3223 * (isnan(0.0) ? _3339 : (isnan(_3339) ? 0.0 : max(_3339, 0.0)))) - exp2(_3223 * (isnan(0.0) ? _3340 : (isnan(_3340) ? 0.0 : max(_3340, 0.0))))) * _3338)) - ((exp2(_3225 * _3349) - exp2(_3225 * _3350)) * _3338))) + (_3218 * cbSceneParam._m0[80u].z);
        }
        vec4 _3380 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3135, _3136, 1.0), 0.0);
        float _3389 = exp2((_3378 * (-1.44269502162933349609375)) * (1.0 - _3380.w));
        float _3390 = log2(_3389);
        float _3406 = log2(_3155);
        _3227 = (exp2(_3406 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3390 * cbSceneParam._m0[78u].x)) * _3380.x) / cbSceneParam._m0[78u].x)) + _3152;
        _3229 = (exp2(_3406 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3390 * cbSceneParam._m0[78u].y)) * _3380.y) / cbSceneParam._m0[78u].y)) + _3153;
        _3231 = (exp2(_3406 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3390 * cbSceneParam._m0[78u].z)) * _3380.z) / cbSceneParam._m0[78u].z)) + _3154;
        _3233 = _3389 * _3155;
    }
    else
    {
        _3227 = _3152;
        _3229 = _3153;
        _3231 = _3154;
        _3233 = _3155;
    }
    float _3245 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3246 = _3245 == 3.0;
    float _3247 = log2(_3233);
    float _3254 = exp2(_3247 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0))) * (_3097 + ((isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0))) * _1068))) + ((_3103 + ((isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0))) * _1875)) * cbPerFrame._m0[3u].x));
    float _3255 = exp2(_3247 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0))) * (_3099 + ((isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0))) * _1068))) + ((_3105 + ((isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0))) * _1875)) * cbPerFrame._m0[3u].x));
    float _3256 = exp2(_3247 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5078 : (isnan(_5078) ? 1.0 : min(_5078, 1.0))) * (_3101 + ((isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0))) * _1068))) + ((_3107 + ((isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0))) * _1875)) * cbPerFrame._m0[3u].x));
    float _3265 = (_3245 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3265 * (_3246 ? _3254 : (_3254 + (cbSceneParam._m0[72u].w * _3227)));
    SV_Target.y = _3265 * (_3246 ? _3255 : (_3255 + (cbSceneParam._m0[72u].w * _3229)));
    SV_Target.z = _3265 * (_3246 ? _3256 : (_3256 + (cbSceneParam._m0[72u].w * _3231)));
    SV_Target.w = cbInstanceData._m0[_3127].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3127].w;
}


