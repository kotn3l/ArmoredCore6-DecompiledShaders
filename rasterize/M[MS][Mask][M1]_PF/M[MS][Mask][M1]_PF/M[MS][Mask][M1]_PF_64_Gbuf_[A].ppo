#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_PF_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _198 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _199 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _200 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _206 = inversesqrt(dot(vec3(_198, _199, _200), vec3(_198, _199, _200)));
    float _213 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _220 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _234 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _236 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _237 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _1115 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
    float _1126 = isnan(0.0) ? _236 : (isnan(_236) ? 0.0 : max(_236, 0.0));
    float _1137 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
    uint _247 = uint(roundEven(NORMAL.w)) * 13u;
    uint _252 = _247 + 1u;
    uint _256 = _247 + 2u;
    float _265 = sqrt(((cbInstanceData._m0[_252].x * cbInstanceData._m0[_252].x) + (cbInstanceData._m0[_247].x * cbInstanceData._m0[_247].x)) + (cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x));
    float _266 = _265 * TEXCOORD.z;
    float _267 = _265 * TEXCOORD.w;
    vec4 _280 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _266) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _267) + cbTextureTilingScale._m0[13u].w));
    vec4 _303 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _329 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _334 = _329.x * cbMtdParam._m0[11u].x;
    float _335 = _329.y * cbMtdParam._m0[11u].y;
    float _336 = _329.z * cbMtdParam._m0[11u].z;
    vec4 _355 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _266) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _267) + cbTextureTilingScale._m0[5u].w));
    vec4 _374 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _405 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[27u].x * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].y * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _407 = _405.x;
    float _420 = dot(vec4(_407, _405.yzw), vec4(cbMtdParam._m0[28u].w, cbMtdParam._m0[29u].xy, 0.0));
    float _437 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _374.x) * 2.0) - ((((_407 - _420) * cbMtdParam._m0[23u].w) + _420) * cbMtdParam._m0[22u].w))) + 1.0;
    float _1148 = isnan(0.0) ? _437 : (isnan(_437) ? 0.0 : max(_437, 0.0));
    float _438 = isnan(1.0) ? _1148 : (isnan(_1148) ? 1.0 : min(_1148, 1.0));
    float _445 = (_438 * ((_355.x * cbMtdParam._m0[12u].x) - _334)) + _334;
    float _446 = (_438 * ((_355.y * cbMtdParam._m0[12u].y) - _335)) + _335;
    float _447 = (_438 * ((_355.z * cbMtdParam._m0[12u].z) - _336)) + _336;
    vec4 _464 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _266) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _267) + cbTextureTilingScale._m0[3u].w));
    vec4 _486 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].z * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].w * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _488 = _486.x;
    float _498 = dot(vec4(_488, _486.yzw), vec4(cbMtdParam._m0[30u].yzw, 0.0));
    float _512 = ((cbMtdParam._m0[25u].z * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _374.y) * 2.0) - ((((_488 - _498) * cbMtdParam._m0[23u].w) + _498) * cbMtdParam._m0[20u].w))) + 1.0;
    float _1159 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    float _513 = isnan(1.0) ? _1159 : (isnan(_1159) ? 1.0 : min(_1159, 1.0));
    float _523 = (_303.x * cbMtdParam._m0[9u].x) * ((_513 * ((_464.x * cbMtdParam._m0[13u].x) - _445)) + _445);
    float _524 = (_303.y * cbMtdParam._m0[9u].y) * ((_513 * ((_464.y * cbMtdParam._m0[13u].y) - _446)) + _446);
    float _525 = (_303.z * cbMtdParam._m0[9u].z) * ((_513 * ((_464.z * cbMtdParam._m0[13u].z) - _447)) + _447);
    float _529 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _280.x) * _523;
    float _532 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _280.y) * _524;
    float _535 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _280.z) * _525;
    float _543 = (((_523 - _529) * (isnan(1.0) ? _1115 : (isnan(_1115) ? 1.0 : min(_1115, 1.0)))) + _529) * 4.55000019073486328125;
    float _545 = (((_524 - _532) * (isnan(1.0) ? _1126 : (isnan(_1126) ? 1.0 : min(_1126, 1.0)))) + _532) * 4.55000019073486328125;
    float _547 = (((_525 - _535) * (isnan(1.0) ? _1137 : (isnan(_1137) ? 1.0 : min(_1137, 1.0)))) + _535) * 4.55000019073486328125;
    vec4 _564 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _266) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _267) + cbTextureTilingScale._m0[20u].w));
    vec4 _587 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _266) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _267) + cbTextureTilingScale._m0[4u].w));
    vec4 _604 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _606 = _604.x;
    float _607 = _604.y;
    float _608 = _604.z;
    float _615 = ((_587.x - _606) * _438) + _606;
    float _616 = ((_587.y - _607) * _438) + _607;
    float _617 = ((_587.z - _608) * _438) + _608;
    vec4 _629 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _266) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _267) + cbTextureTilingScale._m0[2u].w));
    float _642 = ((_629.z - _617) * _513) + _617;
    float _645 = ((((_629.x - _615) * _513) + _615) * 2.0) + (-1.0);
    float _646 = ((((_629.y - _616) * _513) + _616) * 2.0) + (-1.0);
    float _647 = dot(vec2(_645, _646), vec2(_645, _646));
    float _1170 = isnan(0.0) ? _647 : (isnan(_647) ? 0.0 : max(_647, 0.0));
    float _652 = sqrt(1.0 - (isnan(1.0) ? _1170 : (isnan(_1170) ? 1.0 : min(_1170, 1.0))));
    vec4 _666 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _691 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _266) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _267) + cbTextureTilingScale._m0[11u].w));
    float _693 = _691.x;
    float _694 = 1.0 - _693;
    float _710 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_693 - _694) * cbMtdParam._m0[24u].z) + _694) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _1181 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    float _711 = isnan(1.0) ? _1181 : (isnan(_1181) ? 1.0 : min(_1181, 1.0));
    float _718 = (_711 * (cbMtdParam._m0[17u].x - _543)) + _543;
    float _719 = (_711 * (cbMtdParam._m0[17u].y - _545)) + _545;
    float _720 = (_711 * (cbMtdParam._m0[17u].z - _547)) + _547;
    vec4 _746 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _748 = _746.x;
    float _765 = ((texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _266) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _267) + cbTextureTilingScale._m0[9u].w)).x - _748) * _438) + _748;
    float _782 = ((texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _266) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _267) + cbTextureTilingScale._m0[21u].w)).x - _765) * _513) + _765;
    float _786 = ((texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _782) * cbMtdParam._m0[19u].z) + _782;
    float _788 = _786 - (_786 * _711);
    float _793 = (((_564.z - _642) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _642;
    float _797 = ((_666.z - _793) * cbMtdParam._m0[19u].w) + _793;
    vec4 _810 = texture(sampler2D(M_MS_Mask_M1_PF_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _266) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _267) + cbTextureTilingScale._m0[15u].w));
    float _817 = (_810.x * 2.0) + (-1.0);
    float _818 = (_810.y * 2.0) + (-1.0);
    float _819 = dot(vec2(_817, _818), vec2(_817, _818));
    float _1192 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
    float _827 = (_711 * (_810.z - _797)) + _797;
    float _836 = (_645 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_564.x * 2.0) + (-1.0)))) + (((_666.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _837 = (_646 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_564.y * 2.0) + (-1.0)))) + (((_666.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _849 = (((_817 - _836) + (cbMtdParam._m0[21u].x * _836)) * _711) + _836;
    float _850 = (((_818 - _837) + (cbMtdParam._m0[21u].x * _837)) * _711) + _837;
    float _851 = (_711 * (sqrt(1.0 - (isnan(1.0) ? _1192 : (isnan(_1192) ? 1.0 : min(_1192, 1.0)))) - _652)) + _652;
    float _855 = cbMtdParam._m0[22u].x + _666.w;
    float _857 = gl_FragCoord.x * 0.125;
    float _859 = gl_FragCoord.y * 0.125;
    float _869 = fma(_851, _213 * NORMAL.x, fma(_850, _220 * TANGENT.x, (_206 * _198) * _849));
    float _872 = fma(_851, _213 * NORMAL.y, fma(_850, _220 * TANGENT.y, (_206 * _199) * _849));
    float _875 = fma(_851, _213 * NORMAL.z, fma(_850, _220 * TANGENT.z, (_206 * _200) * _849));
    float _879 = inversesqrt(dot(vec3(_869, _872, _875), vec3(_869, _872, _875)));
    float _1203 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _1214 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
    float _881 = isnan(1.0) ? _1214 : (isnan(_1214) ? 1.0 : min(_1214, 1.0));
    float _1225 = isnan(0.0) ? _718 : (isnan(_718) ? 0.0 : max(_718, 0.0));
    float _882 = isnan(1.0) ? _1225 : (isnan(_1225) ? 1.0 : min(_1225, 1.0));
    float _1236 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _883 = isnan(1.0) ? _1236 : (isnan(_1236) ? 1.0 : min(_1236, 1.0));
    float _1247 = isnan(0.0) ? _720 : (isnan(_720) ? 0.0 : max(_720, 0.0));
    float _884 = isnan(1.0) ? _1247 : (isnan(_1247) ? 1.0 : min(_1247, 1.0));
    float _1258 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
    if (!(cbMtdParam._m0[25u].x >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_857, _859)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625)))
    {
        discard_state = true;
    }
    float _930 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _940 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _930);
    float _941 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _930);
    float _942 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _930);
    vec4 _944 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_857, _859));
    float _946 = _944.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1006 = sqrt(((_940 * _940) + (_941 * _941)) + (_942 * _942));
        float _1012 = (cbMatDynParam._m0[5u].x * _1006) + cbMatDynParam._m0[5u].y;
        float _1269 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0));
        float _1013 = isnan(1.0) ? _1269 : (isnan(_1269) ? 1.0 : min(_1269, 1.0));
        float _1017 = (cbMatDynParam._m0[5u].z * _1006) + cbMatDynParam._m0[5u].w;
        float _1280 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1280 : (isnan(_1280) ? 1.0 : min(_1280, 1.0))) - _1013)) + _1013) < ((_946 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _1040;
    vec4 _968;
    float _975;
    float _976;
    float _977;
    float _978;
    float _982;
    vec4 _986;
    float _988;
    float _989;
    bool _1000;
    for (;;)
    {
        _968 = cbInstanceData._m0[(_247 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _972 = (cbMtdParam._m0[0u].x * _882) * _968.x;
        float _973 = (cbMtdParam._m0[0u].y * _883) * _968.y;
        float _974 = (cbMtdParam._m0[0u].z * _884) * _968.z;
        float _1291 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
        _975 = isnan(1.0) ? _1291 : (isnan(_1291) ? 1.0 : min(_1291, 1.0));
        float _1302 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
        _976 = isnan(1.0) ? _1302 : (isnan(_1302) ? 1.0 : min(_1302, 1.0));
        float _1313 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
        _977 = isnan(1.0) ? _1313 : (isnan(_1313) ? 1.0 : min(_1313, 1.0));
        _978 = _881 * TEXCOORD_5.w;
        _982 = cbInstanceData._m0[_247 + 6u].w;
        float _983 = _946 + (-0.5);
        _986 = cbMtdParam._m0[1u];
        _988 = _986.y * _983;
        _989 = _983 * 0.999000012874603271484375;
        _1000 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1000)
        {
            if ((cbInstanceData._m0[_247 + 7u].x + _989) < 0.5)
            {
                _1040 = true;
                break;
            }
        }
        if ((_968.w < 1.0) && ((_968.w + _989) < 0.5))
        {
            _1040 = true;
            break;
        }
        if ((_988 + 1.0) < _986.x)
        {
            _1040 = true;
            break;
        }
        _1040 = false;
        break;
    }
    if (_1040)
    {
        discard_state = true;
    }
    bool _1066 = cbMtdParam._m0[1u].z != 0.0;
    float _1067 = _1066 ? _982 : 0.0;
    SV_Target.x = ((_869 * 0.5) * _879) + 0.500488758087158203125;
    SV_Target.y = ((_872 * 0.5) * _879) + 0.500488758087158203125;
    SV_Target.z = ((_875 * 0.5) * _879) + 0.500488758087158203125;
    SV_Target.w = _1067;
    SV_Target_1.x = isnan(1.0) ? _1258 : (isnan(_1258) ? 1.0 : min(_1258, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1203 : (isnan(_1203) ? 1.0 : min(_1203, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1066 ? _982 : _978;
    SV_Target_2.x = _975;
    SV_Target_2.y = _976;
    SV_Target_2.z = _977;
    SV_Target_2.w = _1066 ? _982 : (float(floatBitsToUint(cbInstanceData._m0[_247 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _1067;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _1067;
    discard_exit();
}


