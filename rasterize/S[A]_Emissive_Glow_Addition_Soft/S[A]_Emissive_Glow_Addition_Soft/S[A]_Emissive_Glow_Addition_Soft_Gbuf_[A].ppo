#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_A_Emissive_Glow_Addition_Soft_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_A_Emissive_Glow_Addition_Soft_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _136 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _137 = _136 * NORMAL.x;
    float _138 = _136 * NORMAL.y;
    float _139 = _136 * NORMAL.z;
    float _144;
    float _145;
    float _146;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _144 = (-0.0) - _137;
        _145 = (-0.0) - _138;
        _146 = (-0.0) - _139;
    }
    else
    {
        _144 = _137;
        _145 = _138;
        _146 = _139;
    }
    vec4 _160 = texture(sampler2D(S_A_Emissive_Glow_Addition_Soft_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _163 = _160.x;
    float _164 = _160.y;
    float _165 = _160.z;
    vec4 _181 = texture(sampler2D(S_A_Emissive_Glow_Addition_Soft_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _186 = _181.x * cbMtdParam._m0[9u].x;
    float _187 = _181.y * cbMtdParam._m0[9u].x;
    float _188 = _181.z * cbMtdParam._m0[9u].x;
    float _192 = inversesqrt(dot(vec3(_144, _145, _146), vec3(_144, _145, _146)));
    float _509 = isnan(0.0) ? _163 : (isnan(_163) ? 0.0 : max(_163, 0.0));
    float _194 = isnan(1.0) ? _509 : (isnan(_509) ? 1.0 : min(_509, 1.0));
    float _520 = isnan(0.0) ? _164 : (isnan(_164) ? 0.0 : max(_164, 0.0));
    float _195 = isnan(1.0) ? _520 : (isnan(_520) ? 1.0 : min(_520, 1.0));
    float _531 = isnan(0.0) ? _165 : (isnan(_165) ? 0.0 : max(_165, 0.0));
    float _196 = isnan(1.0) ? _531 : (isnan(_531) ? 1.0 : min(_531, 1.0));
    uint _198 = uint(roundEven(NORMAL.w));
    float _212 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _254 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _264 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _254);
    float _265 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _254);
    float _266 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _254);
    vec4 _271 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _273 = _271.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _376 = sqrt(((_264 * _264) + (_265 * _265)) + (_266 * _266));
        float _383 = (cbMatDynParam._m0[5u].x * _376) + cbMatDynParam._m0[5u].y;
        float _542 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
        float _384 = isnan(1.0) ? _542 : (isnan(_542) ? 1.0 : min(_542, 1.0));
        float _388 = (cbMatDynParam._m0[5u].z * _376) + cbMatDynParam._m0[5u].w;
        float _553 = isnan(0.0) ? _388 : (isnan(_388) ? 0.0 : max(_388, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _553 : (isnan(_553) ? 1.0 : min(_553, 1.0))) - _384)) + _384) < ((_273 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _424;
    uint _299;
    uint _301;
    float _311;
    float _312;
    float _313;
    float _314;
    float _315;
    float _316;
    float _351;
    float _352;
    vec4 _356;
    float _358;
    float _359;
    bool _370;
    for (;;)
    {
        _299 = _198 * 13u;
        _301 = _299 + 9u;
        uint _302 = _301 + uint(cbMatDynParam._m0[0u].w);
        float _308 = (cbMtdParam._m0[0u].x * _194) * cbInstanceData._m0[_302].x;
        float _309 = (cbMtdParam._m0[0u].y * _195) * cbInstanceData._m0[_302].y;
        float _310 = (cbMtdParam._m0[0u].z * _196) * cbInstanceData._m0[_302].z;
        float _564 = isnan(0.0) ? _308 : (isnan(_308) ? 0.0 : max(_308, 0.0));
        _311 = isnan(1.0) ? _564 : (isnan(_564) ? 1.0 : min(_564, 1.0));
        float _575 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
        _312 = isnan(1.0) ? _575 : (isnan(_575) ? 1.0 : min(_575, 1.0));
        float _586 = isnan(0.0) ? _310 : (isnan(_310) ? 0.0 : max(_310, 0.0));
        _313 = isnan(1.0) ? _586 : (isnan(_586) ? 1.0 : min(_586, 1.0));
        _314 = _186 * cbInstanceData._m0[_302].x;
        _315 = _187 * cbInstanceData._m0[_302].y;
        _316 = _188 * cbInstanceData._m0[_302].z;
        vec4 _325 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
        float _327 = _325.x;
        float _348 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _327)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _327))) - _212) * 0.100000001490116119384765625;
        float _597 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
        float _350 = isnan(1.0) ? _597 : (isnan(_597) ? 1.0 : min(_597, 1.0));
        _351 = _350 * cbInstanceData._m0[_299 + 6u].w;
        _352 = _350 * cbMtdParam._m0[2u].w;
        float _353 = _273 + (-0.5);
        _356 = cbMtdParam._m0[1u];
        _358 = _356.y * _353;
        _359 = _353 * 0.999000012874603271484375;
        _370 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_370)
        {
            if ((cbInstanceData._m0[_299 + 7u].x + _359) < 0.5)
            {
                _424 = true;
                break;
            }
        }
        uint _413 = _301 + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_413].w < 1.0) && ((cbInstanceData._m0[_413].w + _359) < 0.5))
        {
            _424 = true;
            break;
        }
        if ((_358 + 1.0) < _356.x)
        {
            _424 = true;
            break;
        }
        _424 = false;
        break;
    }
    if (_424)
    {
        discard_state = true;
    }
    float _458;
    float _459;
    float _460;
    float _461;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _458 = _351;
        _459 = _351;
        _460 = _351;
        _461 = _351;
    }
    else
    {
        _458 = _352;
        _459 = 0.0;
        _460 = float(floatBitsToUint(cbInstanceData._m0[_299 + 5u]).x) * 0.0039215688593685626983642578125;
        _461 = TEXCOORD.z;
    }
    SV_Target.x = ((_144 * 0.5) * _192) + 0.500488758087158203125;
    SV_Target.y = ((_145 * 0.5) * _192) + 0.500488758087158203125;
    SV_Target.z = ((_146 * 0.5) * _192) + 0.500488758087158203125;
    SV_Target.w = _459;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _461;
    SV_Target_2.x = _311;
    SV_Target_2.y = _312;
    SV_Target_2.z = _313;
    SV_Target_2.w = _460;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _459;
    SV_Target_4.x = _314 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _315 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _316 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _458;
    discard_exit();
}


