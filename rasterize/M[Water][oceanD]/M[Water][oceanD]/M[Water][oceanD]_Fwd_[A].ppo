#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[22];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_Water_oceanD_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_oceanD_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_oceanD_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1202;
float _2740;
float _2741;
float _2742;
float _2743;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _191 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _192 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _193 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _199 = inversesqrt(dot(vec3(_191, _192, _193), vec3(_191, _192, _193)));
    float _200 = _199 * _191;
    float _201 = _199 * _192;
    float _202 = _199 * _193;
    float _206 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _207 = _206 * NORMAL.x;
    float _208 = _206 * NORMAL.y;
    float _209 = _206 * NORMAL.z;
    float _213 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _221;
    float _222;
    float _223;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _221 = (-0.0) - _207;
        _222 = (-0.0) - _208;
        _223 = (-0.0) - _209;
    }
    else
    {
        _221 = _207;
        _222 = _208;
        _223 = _209;
    }
    float _267 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _277 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _267);
    float _278 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _267);
    float _279 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _267);
    float _295 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    vec4 _312 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_2, SS_BumpMap), vec2((((_295 * cbMtdParam._m0[17u].w) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_295 * cbMtdParam._m0[18u].x) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _315 = _312.x;
    float _316 = _312.y;
    float _336 = cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].w;
    float _338 = (sqrt(((_277 * _277) + (_278 * _278)) + (_279 * _279)) - cbMtdParam._m0[12u].w) / (isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0)));
    float _345 = (cbMtdParam._m0[13u].z + _338) * cbMtdParam._m0[15u].x;
    float _2757 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    vec4 _359 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _361 = _359.x;
    bool _368 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _384 = ((_368 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _361)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _361))) - POSITION_1.w) / (((isnan(1.0) ? _2757 : (isnan(_2757) ? 1.0 : min(_2757, 1.0))) * (cbMtdParam._m0[12u].z - cbMtdParam._m0[12u].x)) + cbMtdParam._m0[12u].x);
    float _2768 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0));
    float _385 = isnan(1.0) ? _2768 : (isnan(_2768) ? 1.0 : min(_2768, 1.0));
    float _391 = 1.0 - (isnan(cbMtdParam._m0[16u].y) ? _385 : (isnan(_385) ? cbMtdParam._m0[16u].y : max(_385, cbMtdParam._m0[16u].y)));
    float _2784 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
    float _392 = isnan(1.0) ? _2784 : (isnan(_2784) ? 1.0 : min(_2784, 1.0));
    float _393 = _312.z - _392;
    float _2795 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
    float _394 = isnan(1.0) ? _2795 : (isnan(_2795) ? 1.0 : min(_2795, 1.0));
    float _405 = (_394 * 0.004999999888241291046142578125) + TEXCOORD.x;
    float _407 = (_394 * (-0.004999999888241291046142578125)) + TEXCOORD.y;
    vec4 _420 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((_405 + (cbMtdParam._m0[17u].y * _295)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_407 + (cbMtdParam._m0[17u].z * _295)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _424 = _420.z;
    vec4 _435 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((_405 + (cbMtdParam._m0[16u].w * _295)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_407 + (cbMtdParam._m0[17u].x * _295)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _439 = _435.z;
    float _442 = (_391 - _312.w) + (isnan(_439) ? _424 : (isnan(_424) ? _439 : max(_424, _439)));
    float _2811 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _446 = (TEXCOORD_5.x - _391) + cbMtdParam._m0[16u].x;
    float _447 = _446 * (isnan(1.0) ? _2811 : (isnan(_2811) ? 1.0 : min(_2811, 1.0)));
    float _459 = (_447 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[10u].x * _394);
    float _460 = (_447 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[10u].y * _394);
    float _461 = (_447 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[10u].z * _394);
    float _2822 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _463 = 1.0 - (isnan(1.0) ? _2822 : (isnan(_2822) ? 1.0 : min(_2822, 1.0)));
    float _470 = ((_463 - _459) * _392) + _459;
    float _471 = ((_463 - _460) * _392) + _460;
    float _472 = ((_463 - _461) * _392) + _461;
    float _477 = _338 / cbMtdParam._m0[15u].z;
    float _2833 = isnan(0.0) ? _477 : (isnan(_477) ? 0.0 : max(_477, 0.0));
    float _480 = (1.0 - (isnan(1.0) ? _2833 : (isnan(_2833) ? 1.0 : min(_2833, 1.0)))) * cbMtdParam._m0[15u].y;
    float _493 = (cbMtdParam._m0[14u].w + _338) * cbMtdParam._m0[14u].x;
    float _2844 = isnan(0.0) ? _493 : (isnan(_493) ? 0.0 : max(_493, 0.0));
    float _497 = ((isnan(1.0) ? _2844 : (isnan(_2844) ? 1.0 : min(_2844, 1.0))) * (cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].x)) + cbMtdParam._m0[11u].x;
    float _2855 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _498 = isnan(1.0) ? _2855 : (isnan(_2855) ? 1.0 : min(_2855, 1.0));
    float _507 = _338 / cbMtdParam._m0[14u].z;
    float _2866 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    float _508 = isnan(1.0) ? _2866 : (isnan(_2866) ? 1.0 : min(_2866, 1.0));
    vec4 _528 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[18u].y * _295) + TEXCOORD.z) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[18u].z * _295) + TEXCOORD.w) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _537 = ((_435.x + (-0.5)) * 0.5) + _420.x;
    float _538 = ((_435.y + (-0.5)) * 0.5) + _420.y;
    float _546 = _394 * 0.119999997317790985107421875;
    float _548 = _394 * (-0.100000001490116119384765625);
    float _559 = cbMtdParam._m0[19u].y * TEXCOORD.x;
    float _560 = cbMtdParam._m0[19u].z * TEXCOORD.y;
    vec4 _569 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[18u].w * _295) + _546) + _559) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[19u].x * _295) + _548) + _560) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _588 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2((((_559 + _546) + (cbMtdParam._m0[19u].w * _295)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_560 + _548) + (cbMtdParam._m0[20u].x * _295)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _600 = (((0.5 - _537) * 0.10999999940395355224609375) + _537) + (((_569.x + (-1.0)) + _588.x) * cbMtdParam._m0[15u].w);
    float _601 = (((0.5 - _538) * 0.10999999940395355224609375) + _538) + (((_569.y + (-1.0)) + _588.y) * cbMtdParam._m0[15u].w);
    float _606 = ((_528.x - _600) * _508) + _600;
    float _607 = ((_528.y - _601) * _508) + _601;
    float _609 = _338 / cbMtdParam._m0[14u].y;
    float _2877 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _610 = isnan(1.0) ? _2877 : (isnan(_2877) ? 1.0 : min(_2877, 1.0));
    float _627 = ((((_498 * (0.5 - _315)) + _315) + (((_606 + (-0.5)) + ((0.5 - _606) * _610)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _628 = ((((_498 * (0.5 - _316)) + _316) + (((_607 + (-0.5)) + ((0.5 - _607) * _610)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _629 = dot(vec2(_627, _628), vec2(_627, _628));
    float _2888 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _634 = sqrt(1.0 - (isnan(1.0) ? _2888 : (isnan(_2888) ? 1.0 : min(_2888, 1.0))));
    float _642 = (cbMtdParam._m0[13u].y + _338) * cbMtdParam._m0[13u].w;
    float _2899 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _644 = (isnan(1.0) ? _2899 : (isnan(_2899) ? 1.0 : min(_2899, 1.0))) * cbMtdParam._m0[16u].z;
    float _2910 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    float _645 = isnan(1.0) ? _2910 : (isnan(_2910) ? 1.0 : min(_2910, 1.0));
    float _658 = fma(_634, _221, fma(_628, _213 * TANGENT.x, _627 * _200));
    float _661 = fma(_634, _222, fma(_628, _213 * TANGENT.y, _627 * _201));
    float _664 = fma(_634, _223, fma(_628, _213 * TANGENT.z, _627 * _202));
    float _668 = inversesqrt(dot(vec3(_658, _661, _664), vec3(_658, _661, _664)));
    float _669 = _668 * _658;
    float _670 = _668 * _661;
    float _671 = _668 * _664;
    float _2921 = isnan(0.0) ? _480 : (isnan(_480) ? 0.0 : max(_480, 0.0));
    float _2932 = isnan(0.0) ? _497 : (isnan(_497) ? 0.0 : max(_497, 0.0));
    float _673 = isnan(1.0) ? _2932 : (isnan(_2932) ? 1.0 : min(_2932, 1.0));
    float _2943 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _2954 = isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : max(_471, 0.0));
    float _2965 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _681 = _368 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _721 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _730 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _721);
    float _731 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _721);
    float _732 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _721);
    float _736 = inversesqrt(dot(vec3(_730, _731, _732), vec3(_730, _731, _732)));
    float _737 = _730 * _736;
    float _738 = _731 * _736;
    float _739 = _732 * _736;
    vec4 _744 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _746 = _744.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _882 = sqrt(((_730 * _730) + (_731 * _731)) + (_732 * _732));
        float _889 = (cbMatDynParam._m0[5u].x * _882) + cbMatDynParam._m0[5u].y;
        float _2976 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
        float _890 = isnan(1.0) ? _2976 : (isnan(_2976) ? 1.0 : min(_2976, 1.0));
        float _894 = (cbMatDynParam._m0[5u].z * _882) + cbMatDynParam._m0[5u].w;
        float _2987 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2987 : (isnan(_2987) ? 1.0 : min(_2987, 1.0))) - _890)) + _890) < ((_746 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _757 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _758 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _771 = uint(roundEven(NORMAL.w)) * 13u;
    uint _772 = _771 + 9u;
    uint _773 = _772 + uint(cbMatDynParam._m0[0u].w);
    float _779 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2943 : (isnan(_2943) ? 1.0 : min(_2943, 1.0)))) * cbInstanceData._m0[_773].x;
    float _780 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2954 : (isnan(_2954) ? 1.0 : min(_2954, 1.0)))) * cbInstanceData._m0[_773].y;
    float _781 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2965 : (isnan(_2965) ? 1.0 : min(_2965, 1.0)))) * cbInstanceData._m0[_773].z;
    float _2998 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
    float _782 = isnan(1.0) ? _2998 : (isnan(_2998) ? 1.0 : min(_2998, 1.0));
    float _3009 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _783 = isnan(1.0) ? _3009 : (isnan(_3009) ? 1.0 : min(_3009, 1.0));
    float _3020 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
    float _784 = isnan(1.0) ? _3020 : (isnan(_3020) ? 1.0 : min(_3020, 1.0));
    vec4 _793 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _757, cbSceneParam._m0[86u].y * _758));
    float _796 = _793.x * TEXCOORD_5.w;
    float _797 = dot(vec3(_669, _670, _671), vec3(_737, _738, _739));
    float _800 = _797 * 2.0;
    float _804 = (_800 * _669) - _737;
    float _805 = (_800 * _670) - _738;
    float _806 = (_800 * _671) - _739;
    float _810 = abs(dot(vec3(_737, _738, _739), vec3(_669, _670, _671)));
    float _3031 = isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0));
    float _811 = isnan(1.0) ? _3031 : (isnan(_3031) ? 1.0 : min(_3031, 1.0));
    float _819 = 10.0 / (_681 + 10.0);
    float _820 = sqrt(_673);
    float _832 = exp2((_820 * 5.0) * log2(1.0 - (_811 * 0.999000012874603271484375))) / (4.0 - (_820 * 3.0));
    float _863 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _867 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _871 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1201;
    float _1203;
    float _1204;
    float _1205;
    float _1206;
    float _1207;
    float _1208;
    float _1209;
    float _1210;
    float _1211;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _928 = fma(_871, cbModelParam._m0[26u].z, fma(_867, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _863));
        float _932 = fma(_871, cbModelParam._m0[27u].z, fma(_867, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _863));
        float _936 = fma(_871, cbModelParam._m0[28u].z, fma(_867, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _863));
        float _959 = _863 + _669;
        float _960 = _867 + _670;
        float _961 = _871 + _671;
        float _971 = fma(_961, cbModelParam._m0[26u].z, fma(_960, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _959)) - _928;
        float _972 = fma(_961, cbModelParam._m0[27u].z, fma(_960, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _959)) - _932;
        float _973 = fma(_961, cbModelParam._m0[28u].z, fma(_960, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _959)) - _936;
        float _977 = inversesqrt(dot(vec3(_971, _972, _973), vec3(_971, _972, _973)));
        float _990 = ((_977 * _971) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_928 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _991 = ((_977 * _972) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_932 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _992 = ((_977 * _973) / cbModelParam._m0[34u].z) + ((((((_936 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _995 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_990, _991, _992), 0.0);
        vec4 _1002 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_990, _991, _992), 0.0);
        vec4 _1009 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_990, _991, _992), 0.0);
        vec4 _1016 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_990, _991, _992), 0.0);
        float _1029 = exp2((_995.w + (-0.5)) * 20.0) * 2.0;
        float _1030 = _1029 * (_995.x + (-0.5));
        float _1031 = _1029 * (_995.y + (-0.5));
        float _1032 = _1029 * (_995.z + (-0.5));
        float _1039 = exp2((_1002.w + (-0.5)) * 20.0) * 2.0;
        float _1040 = _1039 * (_1002.x + (-0.5));
        float _1041 = _1039 * (_1002.y + (-0.5));
        float _1042 = _1039 * (_1002.z + (-0.5));
        float _1049 = exp2((_1009.w + (-0.5)) * 20.0) * 2.0;
        float _1050 = _1049 * (_1009.x + (-0.5));
        float _1051 = _1049 * (_1009.y + (-0.5));
        float _1052 = _1049 * (_1009.z + (-0.5));
        float _1059 = exp2((_1016.w + (-0.5)) * 20.0) * 2.0;
        float _1060 = _1059 * (_1016.x + (-0.5));
        float _1061 = _1059 * (_1016.y + (-0.5));
        float _1062 = _1059 * (_1016.z + (-0.5));
        float _1063 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
        float _1064 = isnan(0.0) ? _1061 : (isnan(_1061) ? 0.0 : max(_1061, 0.0));
        float _1065 = isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0));
        float _1066 = _1030 * 0.5;
        float _1067 = _1040 * 0.5;
        float _1068 = _1050 * 0.5;
        float _1069 = dot(vec3(_1066, _1067, _1068), vec3(_1066, _1067, _1068));
        float _1074 = (_1069 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1069);
        float _1083 = (dot(vec3(_669, _670, _671), vec3(_1074 * _1066, _1074 * _1067, _1074 * _1068)) + 1.0) * 0.5;
        float _3057 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
        float _1093 = sqrt(((_1067 * _1067) + (_1066 * _1066)) + (_1068 * _1068)) / (_1063 + 9.9999997473787516355514526367188e-06);
        float _3068 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
        float _1094 = isnan(1.0) ? _3068 : (isnan(_3068) ? 1.0 : min(_3068, 1.0));
        float _1095 = _1094 * 2.0;
        float _1099 = (1.0 - _1094) / (_1094 + 1.0);
        float _3079 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1100 = isnan(1.0) ? _3079 : (isnan(_3079) ? 1.0 : min(_3079, 1.0));
        float _1109 = ((((1.0 - _1100) * (_1095 + 2.0)) * exp2(log2(isnan(1.0) ? _3057 : (isnan(_3057) ? 1.0 : min(_3057, 1.0))) * (_1095 + 1.0))) + _1100) * _1063;
        float _1110 = _1031 * 0.5;
        float _1111 = _1041 * 0.5;
        float _1112 = _1051 * 0.5;
        float _1113 = dot(vec3(_1110, _1111, _1112), vec3(_1110, _1111, _1112));
        float _1118 = (_1113 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1113);
        float _1126 = (dot(vec3(_669, _670, _671), vec3(_1118 * _1110, _1118 * _1111, _1118 * _1112)) + 1.0) * 0.5;
        float _3090 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1135 = sqrt(((_1111 * _1111) + (_1110 * _1110)) + (_1112 * _1112)) / (_1064 + 9.9999997473787516355514526367188e-06);
        float _3101 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
        float _1136 = isnan(1.0) ? _3101 : (isnan(_3101) ? 1.0 : min(_3101, 1.0));
        float _1137 = _1136 * 2.0;
        float _1141 = (1.0 - _1136) / (_1136 + 1.0);
        float _3112 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1142 = isnan(1.0) ? _3112 : (isnan(_3112) ? 1.0 : min(_3112, 1.0));
        float _1151 = ((((1.0 - _1142) * (_1137 + 2.0)) * exp2(log2(isnan(1.0) ? _3090 : (isnan(_3090) ? 1.0 : min(_3090, 1.0))) * (_1137 + 1.0))) + _1142) * _1064;
        float _1152 = _1032 * 0.5;
        float _1153 = _1042 * 0.5;
        float _1154 = _1052 * 0.5;
        float _1155 = dot(vec3(_1152, _1153, _1154), vec3(_1152, _1153, _1154));
        float _1160 = (_1155 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1155);
        float _1168 = (dot(vec3(_669, _670, _671), vec3(_1160 * _1152, _1160 * _1153, _1160 * _1154)) + 1.0) * 0.5;
        float _3123 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
        float _1177 = sqrt(((_1153 * _1153) + (_1152 * _1152)) + (_1154 * _1154)) / (_1065 + 9.9999997473787516355514526367188e-06);
        float _3134 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
        float _1178 = isnan(1.0) ? _3134 : (isnan(_3134) ? 1.0 : min(_3134, 1.0));
        float _1179 = _1178 * 2.0;
        float _1183 = (1.0 - _1178) / (_1178 + 1.0);
        float _3145 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1184 = isnan(1.0) ? _3145 : (isnan(_3145) ? 1.0 : min(_3145, 1.0));
        float _1193 = ((((1.0 - _1184) * (_1179 + 2.0)) * exp2(log2(isnan(1.0) ? _3123 : (isnan(_3123) ? 1.0 : min(_3123, 1.0))) * (_1179 + 1.0))) + _1184) * _1065;
        _1201 = _1032;
        _1203 = _1031;
        _1204 = _1030;
        _1205 = _1042;
        _1206 = _1041;
        _1207 = _1040;
        _1208 = _1052;
        _1209 = _1051;
        _1210 = _1050;
        _1211 = _1065;
        _1212 = _1064;
        _1213 = _1063;
        _1214 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0)));
        _1215 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0)));
        _1216 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0)));
    }
    else
    {
        _1201 = _1202;
        _1203 = _1202;
        _1204 = _1202;
        _1205 = _1202;
        _1206 = _1202;
        _1207 = _1202;
        _1208 = _1202;
        _1209 = _1202;
        _1210 = _1202;
        _1211 = _1202;
        _1212 = _1202;
        _1213 = _1202;
        _1214 = 0.0;
        _1215 = 0.0;
        _1216 = 0.0;
    }
    float _1514;
    float _1515;
    float _1516;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1245 = fma(_871, cbModelParam._m0[30u].z, fma(_867, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _863));
        float _1249 = fma(_871, cbModelParam._m0[31u].z, fma(_867, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _863));
        float _1253 = fma(_871, cbModelParam._m0[32u].z, fma(_867, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _863));
        float _1276 = _863 + _669;
        float _1277 = _867 + _670;
        float _1278 = _871 + _671;
        float _1288 = fma(_1278, cbModelParam._m0[30u].z, fma(_1277, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1276)) - _1245;
        float _1289 = fma(_1278, cbModelParam._m0[31u].z, fma(_1277, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1276)) - _1249;
        float _1290 = fma(_1278, cbModelParam._m0[32u].z, fma(_1277, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1276)) - _1253;
        float _1294 = inversesqrt(dot(vec3(_1288, _1289, _1290), vec3(_1288, _1289, _1290)));
        float _1307 = ((_1294 * _1288) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1245 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1308 = ((_1294 * _1289) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1249 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1309 = ((_1294 * _1290) / cbModelParam._m0[35u].z) + ((((((_1253 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1311 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1307, _1308, _1309), 0.0);
        vec4 _1318 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1307, _1308, _1309), 0.0);
        vec4 _1325 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1307, _1308, _1309), 0.0);
        vec4 _1332 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1307, _1308, _1309), 0.0);
        float _1344 = exp2((_1311.w + (-0.5)) * 20.0) * 2.0;
        float _1345 = _1344 * (_1311.x + (-0.5));
        float _1346 = _1344 * (_1311.y + (-0.5));
        float _1347 = _1344 * (_1311.z + (-0.5));
        float _1354 = exp2((_1318.w + (-0.5)) * 20.0) * 2.0;
        float _1355 = _1354 * (_1318.x + (-0.5));
        float _1356 = _1354 * (_1318.y + (-0.5));
        float _1357 = _1354 * (_1318.z + (-0.5));
        float _1364 = exp2((_1325.w + (-0.5)) * 20.0) * 2.0;
        float _1365 = _1364 * (_1325.x + (-0.5));
        float _1366 = _1364 * (_1325.y + (-0.5));
        float _1367 = _1364 * (_1325.z + (-0.5));
        float _1374 = exp2((_1332.w + (-0.5)) * 20.0) * 2.0;
        float _1375 = _1374 * (_1332.x + (-0.5));
        float _1376 = _1374 * (_1332.y + (-0.5));
        float _1377 = _1374 * (_1332.z + (-0.5));
        float _1378 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
        float _1379 = isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0));
        float _1380 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
        float _1381 = _1345 * 0.5;
        float _1382 = _1355 * 0.5;
        float _1383 = _1365 * 0.5;
        float _1384 = dot(vec3(_1381, _1382, _1383), vec3(_1381, _1382, _1383));
        float _1389 = (_1384 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1384);
        float _1397 = (dot(vec3(_669, _670, _671), vec3(_1389 * _1381, _1389 * _1382, _1389 * _1383)) + 1.0) * 0.5;
        float _3186 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1406 = sqrt(((_1382 * _1382) + (_1381 * _1381)) + (_1383 * _1383)) / (_1378 + 9.9999997473787516355514526367188e-06);
        float _3197 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1407 = isnan(1.0) ? _3197 : (isnan(_3197) ? 1.0 : min(_3197, 1.0));
        float _1408 = _1407 * 2.0;
        float _1412 = (1.0 - _1407) / (_1407 + 1.0);
        float _3208 = isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0));
        float _1413 = isnan(1.0) ? _3208 : (isnan(_3208) ? 1.0 : min(_3208, 1.0));
        float _1422 = ((((1.0 - _1413) * (_1408 + 2.0)) * exp2(log2(isnan(1.0) ? _3186 : (isnan(_3186) ? 1.0 : min(_3186, 1.0))) * (_1408 + 1.0))) + _1413) * _1378;
        float _1423 = _1346 * 0.5;
        float _1424 = _1356 * 0.5;
        float _1425 = _1366 * 0.5;
        float _1426 = dot(vec3(_1423, _1424, _1425), vec3(_1423, _1424, _1425));
        float _1431 = (_1426 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1426);
        float _1439 = (dot(vec3(_669, _670, _671), vec3(_1431 * _1423, _1431 * _1424, _1431 * _1425)) + 1.0) * 0.5;
        float _3219 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1448 = sqrt(((_1424 * _1424) + (_1423 * _1423)) + (_1425 * _1425)) / (_1379 + 9.9999997473787516355514526367188e-06);
        float _3230 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
        float _1449 = isnan(1.0) ? _3230 : (isnan(_3230) ? 1.0 : min(_3230, 1.0));
        float _1450 = _1449 * 2.0;
        float _1454 = (1.0 - _1449) / (_1449 + 1.0);
        float _3241 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1455 = isnan(1.0) ? _3241 : (isnan(_3241) ? 1.0 : min(_3241, 1.0));
        float _1464 = ((((1.0 - _1455) * (_1450 + 2.0)) * exp2(log2(isnan(1.0) ? _3219 : (isnan(_3219) ? 1.0 : min(_3219, 1.0))) * (_1450 + 1.0))) + _1455) * _1379;
        float _1465 = _1347 * 0.5;
        float _1466 = _1357 * 0.5;
        float _1467 = _1367 * 0.5;
        float _1468 = dot(vec3(_1465, _1466, _1467), vec3(_1465, _1466, _1467));
        float _1473 = (_1468 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1468);
        float _1481 = (dot(vec3(_669, _670, _671), vec3(_1473 * _1465, _1473 * _1466, _1473 * _1467)) + 1.0) * 0.5;
        float _3252 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1490 = sqrt(((_1466 * _1466) + (_1465 * _1465)) + (_1467 * _1467)) / (_1380 + 9.9999997473787516355514526367188e-06);
        float _3263 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
        float _1491 = isnan(1.0) ? _3263 : (isnan(_3263) ? 1.0 : min(_3263, 1.0));
        float _1492 = _1491 * 2.0;
        float _1496 = (1.0 - _1491) / (_1491 + 1.0);
        float _3274 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1497 = isnan(1.0) ? _3274 : (isnan(_3274) ? 1.0 : min(_3274, 1.0));
        float _1506 = ((((1.0 - _1497) * (_1492 + 2.0)) * exp2(log2(isnan(1.0) ? _3252 : (isnan(_3252) ? 1.0 : min(_3252, 1.0))) * (_1492 + 1.0))) + _1497) * _1380;
        _1514 = _1347;
        _1515 = _1346;
        _1516 = _1345;
        _1517 = _1357;
        _1518 = _1356;
        _1519 = _1355;
        _1520 = _1367;
        _1521 = _1366;
        _1522 = _1365;
        _1523 = _1380;
        _1524 = _1379;
        _1525 = _1378;
        _1526 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0)));
        _1527 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0)));
        _1528 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0)));
    }
    else
    {
        _1514 = _1202;
        _1515 = _1202;
        _1516 = _1202;
        _1517 = _1202;
        _1518 = _1202;
        _1519 = _1202;
        _1520 = _1202;
        _1521 = _1202;
        _1522 = _1202;
        _1523 = _1202;
        _1524 = _1202;
        _1525 = _1202;
        _1526 = 0.0;
        _1527 = 0.0;
        _1528 = 0.0;
    }
    float _1538 = (cbModelParam._m0[1u].x * (_1526 - _1214)) + _1214;
    float _1539 = (cbModelParam._m0[1u].x * (_1527 - _1215)) + _1215;
    float _1540 = (cbModelParam._m0[1u].x * (_1528 - _1216)) + _1216;
    float _1561 = fma(_1540, cbSceneParam._m0[89u].z, fma(_1539, cbSceneParam._m0[89u].y, _1538 * cbSceneParam._m0[89u].x));
    float _1564 = fma(_1540, cbSceneParam._m0[90u].z, fma(_1539, cbSceneParam._m0[90u].y, _1538 * cbSceneParam._m0[90u].x));
    float _1567 = fma(_1540, cbSceneParam._m0[91u].z, fma(_1539, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1538));
    float _1582 = _804 * 0.5;
    float _1583 = _805 * 0.5;
    float _1584 = _806 * 0.5;
    float _1585 = dot(vec4(_1582, _1583, _1584, 1.0), vec4(_1516, _1519, _1522, _1525));
    float _1588 = dot(vec4(_1582, _1583, _1584, 1.0), vec4(_1515, _1518, _1521, _1524));
    float _1591 = dot(vec4(_1582, _1583, _1584, 1.0), vec4(_1514, _1517, _1520, _1523));
    float _1625;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1598 = dot(vec4(_1582, _1583, _1584, 1.0), vec4(_1201, _1205, _1208, _1211));
        float _1602 = dot(vec4(_1582, _1583, _1584, 1.0), vec4(_1203, _1206, _1209, _1212));
        float _1606 = dot(vec4(_1582, _1583, _1584, 1.0), vec4(_1204, _1207, _1210, _1213));
        float _1613 = dot(vec4(cbModelParam._m0[39u]), vec4(_1582, _1583, _1584, 1.0));
        _1625 = dot(vec3(isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0)), isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0)), isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1613) ? 0.0 : (isnan(0.0) ? _1613 : max(0.0, _1613))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1625 = 1.0;
    }
    float _1636;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1627 = dot(vec4(cbModelParam._m0[40u]), vec4(_1582, _1583, _1584, 1.0));
        _1636 = dot(vec3(isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0)), isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0)), isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1627) ? 0.0 : (isnan(0.0) ? _1627 : max(0.0, _1627))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1636 = 1.0;
    }
    float _1640 = (_1636 * cbModelParam._m0[1u].x) + (_1625 * (1.0 - cbModelParam._m0[1u].x));
    float _1650 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _673);
    float _1651 = isnan(_1650) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1650 : min(cbModelParam._m0[25u].z, _1650));
    float _1732;
    float _1734;
    float _1736;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1699 = fma(_871, cbModelParam._m0[13u].z, fma(_867, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _863)) + cbModelParam._m0[13u].w;
        float _1703 = fma(_871, cbModelParam._m0[14u].z, fma(_867, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _863)) + cbModelParam._m0[14u].w;
        float _1707 = fma(_871, cbModelParam._m0[15u].z, fma(_867, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _863)) + cbModelParam._m0[15u].w;
        float _1710 = fma(_806, cbModelParam._m0[13u].z, fma(_805, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _804));
        float _1713 = fma(_806, cbModelParam._m0[14u].z, fma(_805, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _804));
        float _1716 = fma(_806, cbModelParam._m0[15u].z, fma(_805, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _804));
        float _1744;
        if (_1710 > 0.0)
        {
            _1744 = abs((1.0 - _1699) / _1710);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1710 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1699 + 1.0) / _1710);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1744 = frontier_phi_19_17_ladder;
        }
        float _2143;
        if (_1713 > 0.0)
        {
            _2143 = abs((1.0 - _1703) / _1713);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1713 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1703 + 1.0) / _1713);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2143 = frontier_phi_28_24_ladder;
        }
        float _2446;
        if (_1716 > 0.0)
        {
            _2446 = abs((1.0 - _1707) / _1716);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1716 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1707 + 1.0) / _1716);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2446 = frontier_phi_40_35_ladder;
        }
        float _2448 = isnan(_2143) ? _1744 : (isnan(_1744) ? _2143 : min(_1744, _2143));
        float _2449 = isnan(_2446) ? _2448 : (isnan(_2448) ? _2446 : min(_2448, _2446));
        float _2453 = (_2449 * _1710) + _1699;
        float _2454 = (_2449 * _1713) + _1703;
        float _2455 = (_2449 * _1716) + _1707;
        float _2456 = _2449 * 9.9999997473787516355514526367188e-05;
        float _2457 = (-1.0) - _2456;
        float _2459 = _2456 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2455 > _2459) || ((_2455 < _2457) || ((_2454 > _2459) || ((_2454 < _2457) || ((_2453 < _2457) || (_2453 > _2459))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2548 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2455, cbModelParam._m0[9u].z, fma(_2454, cbModelParam._m0[9u].y, _2453 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2455, cbModelParam._m0[10u].z, fma(_2454, cbModelParam._m0[10u].y, _2453 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2455, cbModelParam._m0[11u].z, fma(_2454, cbModelParam._m0[11u].y, _2453 * cbModelParam._m0[11u].x))), _1651);
            frontier_phi_18_40_ladder = _2548.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2548.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2548.x * cbModelParam._m0[1u].y;
        }
        _1732 = frontier_phi_18_40_ladder_2;
        _1734 = frontier_phi_18_40_ladder_1;
        _1736 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1720 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_804, _805, _806), _1651);
        _1732 = _1720.x * cbModelParam._m0[1u].y;
        _1734 = _1720.y * cbModelParam._m0[1u].y;
        _1736 = _1720.z * cbModelParam._m0[1u].y;
    }
    float _1740 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _673);
    float _1741 = isnan(_1740) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1740 : min(cbModelParam._m0[25u].w, _1740));
    float _1830;
    float _1832;
    float _1834;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1794 = fma(_871, cbModelParam._m0[21u].z, fma(_867, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _863)) + cbModelParam._m0[21u].w;
        float _1798 = fma(_871, cbModelParam._m0[22u].z, fma(_867, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _863)) + cbModelParam._m0[22u].w;
        float _1802 = fma(_871, cbModelParam._m0[23u].z, fma(_867, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _863)) + cbModelParam._m0[23u].w;
        float _1805 = fma(_806, cbModelParam._m0[21u].z, fma(_805, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _804));
        float _1808 = fma(_806, cbModelParam._m0[22u].z, fma(_805, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _804));
        float _1811 = fma(_806, cbModelParam._m0[23u].z, fma(_805, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _804));
        float _2148;
        if (_1805 > 0.0)
        {
            _2148 = abs((1.0 - _1794) / _1805);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1805 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1794 + 1.0) / _1805);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2148 = frontier_phi_30_26_ladder;
        }
        float _2472;
        if (_1808 > 0.0)
        {
            _2472 = abs((1.0 - _1798) / _1808);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1808 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1798 + 1.0) / _1808);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2472 = frontier_phi_42_37_ladder;
        }
        float _2600;
        if (_1811 > 0.0)
        {
            _2600 = abs((1.0 - _1802) / _1811);
        }
        else
        {
            float frontier_phi_54_50_ladder;
            if (_1811 < 0.0)
            {
                frontier_phi_54_50_ladder = abs((_1802 + 1.0) / _1811);
            }
            else
            {
                frontier_phi_54_50_ladder = 5000.0;
            }
            _2600 = frontier_phi_54_50_ladder;
        }
        float _2602 = isnan(_2472) ? _2148 : (isnan(_2148) ? _2472 : min(_2148, _2472));
        float _2603 = isnan(_2600) ? _2602 : (isnan(_2602) ? _2600 : min(_2602, _2600));
        float _2607 = (_2603 * _1805) + _1794;
        float _2608 = (_2603 * _1808) + _1798;
        float _2609 = (_2603 * _1811) + _1802;
        float _2610 = _2603 * 9.9999997473787516355514526367188e-05;
        float _2611 = (-1.0) - _2610;
        float _2613 = _2610 + 1.0;
        float frontier_phi_27_54_ladder;
        float frontier_phi_27_54_ladder_1;
        float frontier_phi_27_54_ladder_2;
        if ((_2609 > _2613) || ((_2609 < _2611) || ((_2608 > _2613) || ((_2608 < _2611) || ((_2607 < _2611) || (_2607 > _2613))))))
        {
            frontier_phi_27_54_ladder = 0.0;
            frontier_phi_27_54_ladder_1 = 0.0;
            frontier_phi_27_54_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2651 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2609, cbModelParam._m0[17u].z, fma(_2608, cbModelParam._m0[17u].y, _2607 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2609, cbModelParam._m0[18u].z, fma(_2608, cbModelParam._m0[18u].y, _2607 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2609, cbModelParam._m0[19u].z, fma(_2608, cbModelParam._m0[19u].y, _2607 * cbModelParam._m0[19u].x))), _1741);
            frontier_phi_27_54_ladder = _2651.z * cbModelParam._m0[1u].z;
            frontier_phi_27_54_ladder_1 = _2651.y * cbModelParam._m0[1u].z;
            frontier_phi_27_54_ladder_2 = _2651.x * cbModelParam._m0[1u].z;
        }
        _1830 = frontier_phi_27_54_ladder_2;
        _1832 = frontier_phi_27_54_ladder_1;
        _1834 = frontier_phi_27_54_ladder;
    }
    else
    {
        vec4 _1814 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_804, _805, _806), _1741);
        _1830 = _1814.x * cbModelParam._m0[1u].z;
        _1832 = _1814.y * cbModelParam._m0[1u].z;
        _1834 = _1814.z * cbModelParam._m0[1u].z;
    }
    float _1846 = ((((1.0 - _832) * ((_820 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_832 * _820)) * _796;
    float _1847 = _1846 * ((cbModelParam._m0[1u].w * (_1830 - _1732)) + _1732);
    float _1848 = _1846 * ((cbModelParam._m0[1u].w * (_1832 - _1734)) + _1734);
    float _1849 = _1846 * ((cbModelParam._m0[1u].w * (_1834 - _1736)) + _1736);
    float _1852 = fma(_1849, cbSceneParam._m0[89u].z, fma(_1848, cbSceneParam._m0[89u].y, _1847 * cbSceneParam._m0[89u].x));
    float _1855 = fma(_1849, cbSceneParam._m0[90u].z, fma(_1848, cbSceneParam._m0[90u].y, _1847 * cbSceneParam._m0[90u].x));
    float _1858 = fma(_1849, cbSceneParam._m0[91u].z, fma(_1848, cbSceneParam._m0[91u].y, _1847 * cbSceneParam._m0[91u].x));
    float _1869 = _757 / cbSceneParam._m0[86u].x;
    float _1877 = (cbSceneParam._m0[88u].y * (1.0 - _673)) + cbSceneParam._m0[88u].z;
    float _3400 = isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0));
    float _1879 = (isnan(1.0) ? _3400 : (isnan(_3400) ? 1.0 : min(_3400, 1.0))) * 5.0;
    float _1884 = (_819 * cbMtdParam._m0[11u].w) * dot(vec3(_669, _670, _671), vec3(1.0, 0.0, 0.0));
    vec4 _1894 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_1884 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_1884 + _1869) * cbSceneParam._m0[86u].x, _758), _1879).w) + _1869) * cbSceneParam._m0[86u].x, _758), _1879);
    float _1910 = 1.0 - _1894.w;
    uint _1917 = _771 + 5u;
    uint _1922 = floatBitsToUint(cbInstanceData._m0[_1917]).x * 14u;
    float _1929 = (cbLight._m0[_1922 + 13u].x * (_796 + (-1.0))) + 1.0;
    uint _1930 = _1922 + 4u;
    float _1937 = isnan(1.0) ? _1929 : (isnan(_1929) ? 1.0 : min(_1929, 1.0));
    float _1946 = dot(vec3(cbLight._m0[_1922].xyz), vec3(_669, _670, _671));
    float _3416 = isnan(0.0) ? _1946 : (isnan(_1946) ? 0.0 : max(_1946, 0.0));
    float _1950 = (isnan(1.0) ? _3416 : (isnan(_3416) ? 1.0 : min(_3416, 1.0))) * 0.3183098733425140380859375;
    uint _1956 = _1922 + 8u;
    float _1969 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1922].w)) * _673) * 0.949999988079071044921875);
    float _1970 = _1969 * _1969;
    float _1971 = cbLight._m0[_1922].x + _737;
    float _1972 = cbLight._m0[_1922].y + _738;
    float _1973 = cbLight._m0[_1922].z + _739;
    float _1977 = inversesqrt(dot(vec3(_1971, _1972, _1973), vec3(_1971, _1972, _1973)));
    float _1978 = _1977 * _1971;
    float _1979 = _1977 * _1972;
    float _1980 = _1977 * _1973;
    float _1981 = dot(vec3(_669, _670, _671), vec3(cbLight._m0[_1922].xyz));
    float _3427 = isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0));
    float _1984 = isnan(1.0) ? _3427 : (isnan(_3427) ? 1.0 : min(_3427, 1.0));
    float _3438 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
    float _1985 = isnan(1.0) ? _3438 : (isnan(_3438) ? 1.0 : min(_3438, 1.0));
    float _1986 = dot(vec3(_669, _670, _671), vec3(_1978, _1979, _1980));
    float _3449 = isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0));
    float _1989 = isnan(1.0) ? _3449 : (isnan(_3449) ? 1.0 : min(_3449, 1.0));
    float _1990 = dot(vec3(cbLight._m0[_1922].xyz), vec3(_1978, _1979, _1980));
    float _3460 = isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0));
    float _1994 = _1970 * _1970;
    float _1998 = ((_1989 * _1989) * (_1994 + (-1.0))) + 1.0;
    float _2009 = (exp2(log2(1.0 - (isnan(1.0) ? _3460 : (isnan(_3460) ? 1.0 : min(_3460, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2010 = 1.0 - _1970;
    float _2021 = (0.5 / (((_1985 * ((_1984 * _2010) + _1970)) + 9.9999999392252902907785028219223e-09) + (((_1985 * _2010) + _1970) * _1984))) * _1984;
    float _3471 = isnan(0.0) ? _2021 : (isnan(_2021) ? 0.0 : max(_2021, 0.0));
    float _2023 = (isnan(1.0) ? _3471 : (isnan(_3471) ? 1.0 : min(_3471, 1.0))) * (_1994 / ((_1998 * _1998) * 3.141590118408203125));
    float _2048 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2049 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2050 = cbSceneParam._m0[86u].x * (_1869 + ((_819 * cbMtdParam._m0[11u].y) * dot(vec3(_669, _670, _671), vec3(_200, _201, _202))));
    float _2051 = isnan(_2048) ? _2050 : (isnan(_2050) ? _2048 : min(_2050, _2048));
    float _2052 = isnan(_2049) ? _758 : (isnan(_758) ? _2049 : min(_758, _2049));
    vec4 _2054 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2051, _2052), 0.0);
    float _2056 = _2054.x;
    bool _2076 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2056)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2056))) > _681;
    float _2077 = _2076 ? _2051 : _757;
    float _2078 = _2076 ? _2052 : _758;
    vec4 _2080 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2077, _2078));
    vec4 _2085 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2077, _2078));
    float _2087 = _2085.x;
    bool _2092 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2101 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2107 = (_2092 ? (_2101 / (cbSceneParam._m0[2u].x - _2087)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2087))) - _681;
    float _2109 = cbMtdParam._m0[21u].x + cbMtdParam._m0[20u].y;
    float _2110 = cbMtdParam._m0[21u].y + cbMtdParam._m0[20u].z;
    float _2111 = cbMtdParam._m0[21u].z + cbMtdParam._m0[20u].w;
    bool _2117 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2121 = (isnan(_2107) ? 0.0 : (isnan(0.0) ? _2107 : max(0.0, _2107))) * (-1.44269502162933349609375);
    float _3497 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
    float _3508 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
    float _3519 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    float _2235;
    float _2236;
    float _2237;
    if ((1.0 - _645) > 0.00999999977648258209228515625)
    {
        vec4 _2154 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2077, _2078), 0.0);
        float _2156 = _2154.x;
        float _2162 = (_2092 ? (_2101 / (cbSceneParam._m0[2u].x - _2156)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2156))) - _681;
        uint _2168 = floatBitsToUint(cbInstanceData._m0[_1917]).x * 14u;
        uint _2174 = _2168 + 4u;
        float _2183 = dot(vec3(cbLight._m0[_2168].xyz), vec3(_221, _222, _223));
        float _2191 = dot(vec3((-0.0) - _737, (-0.0) - _738, (-0.0) - _739), vec3((-0.0) - _221, (-0.0) - _222, (-0.0) - _223));
        float _2196 = ((isnan(0.0) ? _2191 : (isnan(_2191) ? 0.0 : max(_2191, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2183 : (isnan(_2183) ? 0.001000000047497451305389404296875 : max(_2183, 0.001000000047497451305389404296875)))) + 1.0;
        float _2198 = (-0.0) - ((isnan(_2162) ? 0.0 : (isnan(0.0) ? _2162 : max(0.0, _2162))) * _2196);
        _2235 = _2117 ? 0.0 : ((((cbMtdParam._m0[20u].y * 0.079577468335628509521484375) * cbLight._m0[_2174].x) / ((_2196 * _2109) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2109 * 1.44269502162933349609375) * _2198)));
        _2236 = _2117 ? 0.0 : ((((cbMtdParam._m0[20u].z * 0.079577468335628509521484375) * cbLight._m0[_2174].y) / ((_2196 * _2110) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2110 * 1.44269502162933349609375) * _2198)));
        _2237 = _2117 ? 0.0 : ((((cbMtdParam._m0[20u].w * 0.079577468335628509521484375) * cbLight._m0[_2174].z) / ((_2196 * _2111) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2111 * 1.44269502162933349609375) * _2198)));
    }
    else
    {
        _2235 = 0.0;
        _2236 = 0.0;
        _2237 = 0.0;
    }
    float _2254 = 0.959999978542327880859375 - (exp2(log2(1.0 - _811) * 5.0) * 0.959999978542327880859375);
    float _2255 = (_2235 + ((exp2(_2121 * (_2117 ? 0.0 : _2109)) * _2080.x) * cbSceneParam._m0[72u].w)) * _2254;
    float _2256 = (_2236 + ((exp2(_2121 * (_2117 ? 0.0 : _2110)) * _2080.y) * cbSceneParam._m0[72u].w)) * _2254;
    float _2257 = (_2237 + ((exp2(_2121 * (_2117 ? 0.0 : _2111)) * _2080.z) * cbSceneParam._m0[72u].w)) * _2254;
    float _2265 = (_2255 + (cbPerFrame._m0[3u].x * ((((_1846 * _1894.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0))) * _1640) * _1910)) + (((_2009 * cbLight._m0[_1956].x) * _2023) * _1937)))) + ((((isnan(1.0) ? _3497 : (isnan(_3497) ? 1.0 : min(_3497, 1.0))) * (((cbLight._m0[_1930].x * _1937) * _1950) + ((isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0))) * _796))) - _2255) * _645);
    float _2267 = (_2256 + (cbPerFrame._m0[3u].x * ((((_1846 * _1894.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0))) * _1640) * _1910)) + (((_2009 * cbLight._m0[_1956].y) * _2023) * _1937)))) + ((((isnan(1.0) ? _3508 : (isnan(_3508) ? 1.0 : min(_3508, 1.0))) * (((_1937 * cbLight._m0[_1930].y) * _1950) + ((isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0))) * _796))) - _2256) * _645);
    float _2269 = (_2257 + (cbPerFrame._m0[3u].x * ((((_1846 * _1894.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0))) * _1640) * _1910)) + (((_2009 * cbLight._m0[_1956].z) * _2023) * _1937)))) + ((((isnan(1.0) ? _3519 : (isnan(_3519) ? 1.0 : min(_3519, 1.0))) * (((_1937 * cbLight._m0[_1930].z) * _1950) + ((isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0))) * _796))) - _2257) * _645);
    float _2274 = cbInstanceData._m0[_771 + 6u].w * (isnan(1.0) ? _2921 : (isnan(_2921) ? 1.0 : min(_2921, 1.0)));
    float _2279 = _757 / cbSceneParam._m0[86u].x;
    float _2280 = _758 / cbSceneParam._m0[86u].y;
    vec4 _2294 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2279, _2280, (log2((isnan(cbSceneParam._m0[77u].w) ? _681 : (isnan(_681) ? cbSceneParam._m0[77u].w : min(_681, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2296 = _2294.x;
    float _2297 = _2294.y;
    float _2298 = _2294.z;
    float _2299 = _2294.w;
    float _2356;
    float _2358;
    float _2360;
    float _2362;
    if (_681 > cbSceneParam._m0[78u].w)
    {
        float _2320 = isnan(_681) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _681 : min(cbSceneParam._m0[80u].w, _681));
        float _2321 = _2320 / _681;
        float _2332 = _2321 * _730;
        float _2333 = _731 * _2321;
        float _2334 = (-0.0) - _2333;
        float _2335 = _2321 * _732;
        float _2337 = (cbSceneParam._m0[77u].w * _2334) / _2320;
        float _2338 = _2337 + cbSceneParam._m0[79u].w;
        float _2339 = cbSceneParam._m0[79u].w - _2333;
        float _2345 = sqrt(((_2332 * _2332) + (_2333 * _2333)) + (_2335 * _2335));
        float _2348 = (1.0 - (cbSceneParam._m0[77u].w / _2320)) * _2345;
        float _2354 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2355 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2557;
        if (abs((_2334 - _2337) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2557 = ((((_2338 > 0.0) ? exp2(_2354 * _2338) : (2.0 - exp2(_2355 * _2338))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2348;
        }
        else
        {
            float _2489 = 1.0 / cbSceneParam._m0[80u].x;
            float _2490 = isnan(_2339) ? _2338 : (isnan(_2338) ? _2339 : max(_2338, _2339));
            float _2491 = isnan(_2339) ? _2338 : (isnan(_2338) ? _2339 : min(_2338, _2339));
            float _2500 = isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : min(_2490, 0.0));
            float _2501 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : min(_2491, 0.0));
            _2557 = ((abs(_2345 / _2334) * cbSceneParam._m0[80u].y) * ((((_2500 - _2501) * 2.0) - ((exp2(_2354 * (isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : max(_2490, 0.0)))) - exp2(_2354 * (isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0))))) * _2489)) - ((exp2(_2355 * _2500) - exp2(_2355 * _2501)) * _2489))) + (_2348 * cbSceneParam._m0[80u].z);
        }
        vec4 _2559 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2279, _2280, 1.0), 0.0);
        float _2568 = exp2((_2557 * (-1.44269502162933349609375)) * (1.0 - _2559.w));
        float _2569 = log2(_2568);
        float _2585 = log2(_2299);
        _2356 = (exp2(_2585 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2569 * cbSceneParam._m0[78u].x)) * _2559.x) / cbSceneParam._m0[78u].x)) + _2296;
        _2358 = (exp2(_2585 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2569 * cbSceneParam._m0[78u].y)) * _2559.y) / cbSceneParam._m0[78u].y)) + _2297;
        _2360 = (exp2(_2585 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2569 * cbSceneParam._m0[78u].z)) * _2559.z) / cbSceneParam._m0[78u].z)) + _2298;
        _2362 = _2568 * _2299;
    }
    else
    {
        _2356 = _2296;
        _2358 = _2297;
        _2360 = _2298;
        _2362 = _2299;
    }
    bool _2595;
    float _2417;
    vec4 _2420;
    float _2422;
    vec4 _2424;
    float _2432;
    float _2433;
    float _2434;
    float _2435;
    bool _2445;
    for (;;)
    {
        bool _2374 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2375 = log2(_2362);
        float _2382 = exp2(_2375 * cbSceneParam._m0[78u].x) * _2265;
        float _2383 = exp2(_2375 * cbSceneParam._m0[78u].y) * _2267;
        float _2384 = exp2(_2375 * cbSceneParam._m0[78u].z) * _2269;
        vec4 _2392 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_757, _758));
        float _2394 = _2392.x;
        float _2415 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2394)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2394))) - _681) * 3.0;
        float _3585 = isnan(0.0) ? _2415 : (isnan(_2415) ? 0.0 : max(_2415, 0.0));
        _2417 = _2274 * (isnan(1.0) ? _3585 : (isnan(_3585) ? 1.0 : min(_3585, 1.0)));
        float _2418 = _746 + (-0.5);
        _2420 = cbMtdParam._m0[1u];
        _2422 = _2420.y * _2418;
        _2424 = cbMatDynParam._m0[0u];
        float _2431 = (roundEven(_2424.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2432 = _2431 * (_2374 ? _2382 : (_2382 + (cbSceneParam._m0[72u].w * _2356)));
        _2433 = _2431 * (_2374 ? _2383 : (_2383 + (cbSceneParam._m0[72u].w * _2358)));
        _2434 = _2431 * (_2374 ? _2384 : (_2384 + (cbSceneParam._m0[72u].w * _2360)));
        _2435 = _2418 * 0.999000012874603271484375;
        _2445 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2445)
        {
            if ((cbInstanceData._m0[_771 + 7u].x + _2435) < 0.5)
            {
                _2595 = true;
                break;
            }
        }
        uint _2524 = _772 + uint(_2424.w);
        if ((cbInstanceData._m0[_2524].w < 1.0) && ((cbInstanceData._m0[_2524].w + _2435) < 0.5))
        {
            _2595 = true;
            break;
        }
        if ((_2422 + 1.0) < _2420.x)
        {
            _2595 = true;
            break;
        }
        _2595 = false;
        break;
    }
    float _2626;
    if (_2595)
    {
        discard_state = true;
        _2626 = 0.0;
    }
    else
    {
        _2626 = _2417;
    }
    SV_Target.x = _2432;
    SV_Target.y = _2433;
    SV_Target.z = _2434;
    SV_Target.w = _2626;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2417;
    discard_exit();
}


