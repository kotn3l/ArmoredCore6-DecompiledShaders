#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[22];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_Water_oceanD_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_oceanD_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_oceanD_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1204;
float _2772;
float _2773;
float _2774;
float _2775;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _193 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _194 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _195 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _201 = inversesqrt(dot(vec3(_193, _194, _195), vec3(_193, _194, _195)));
    float _202 = _201 * _193;
    float _203 = _201 * _194;
    float _204 = _201 * _195;
    float _208 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _209 = _208 * NORMAL.x;
    float _210 = _208 * NORMAL.y;
    float _211 = _208 * NORMAL.z;
    float _215 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _223;
    float _224;
    float _225;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _223 = (-0.0) - _209;
        _224 = (-0.0) - _210;
        _225 = (-0.0) - _211;
    }
    else
    {
        _223 = _209;
        _224 = _210;
        _225 = _211;
    }
    float _269 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _279 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _269);
    float _280 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _269);
    float _281 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _269);
    float _297 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    vec4 _314 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_2, SS_BumpMap), vec2((((_297 * cbMtdParam._m0[17u].w) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_297 * cbMtdParam._m0[18u].x) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _317 = _314.x;
    float _318 = _314.y;
    float _338 = cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].w;
    float _340 = (sqrt(((_279 * _279) + (_280 * _280)) + (_281 * _281)) - cbMtdParam._m0[12u].w) / (isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0)));
    float _347 = (cbMtdParam._m0[13u].z + _340) * cbMtdParam._m0[15u].x;
    float _2789 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
    vec4 _361 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _363 = _361.x;
    bool _370 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _386 = ((_370 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _363)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _363))) - POSITION_1.w) / (((isnan(1.0) ? _2789 : (isnan(_2789) ? 1.0 : min(_2789, 1.0))) * (cbMtdParam._m0[12u].z - cbMtdParam._m0[12u].x)) + cbMtdParam._m0[12u].x);
    float _2800 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
    float _387 = isnan(1.0) ? _2800 : (isnan(_2800) ? 1.0 : min(_2800, 1.0));
    float _393 = 1.0 - (isnan(cbMtdParam._m0[16u].y) ? _387 : (isnan(_387) ? cbMtdParam._m0[16u].y : max(_387, cbMtdParam._m0[16u].y)));
    float _2816 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    float _394 = isnan(1.0) ? _2816 : (isnan(_2816) ? 1.0 : min(_2816, 1.0));
    float _395 = _314.z - _394;
    float _2827 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _396 = isnan(1.0) ? _2827 : (isnan(_2827) ? 1.0 : min(_2827, 1.0));
    float _407 = (_396 * 0.004999999888241291046142578125) + TEXCOORD.x;
    float _409 = (_396 * (-0.004999999888241291046142578125)) + TEXCOORD.y;
    vec4 _422 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((_407 + (cbMtdParam._m0[17u].y * _297)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_409 + (cbMtdParam._m0[17u].z * _297)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _426 = _422.z;
    vec4 _437 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((_407 + (cbMtdParam._m0[16u].w * _297)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_409 + (cbMtdParam._m0[17u].x * _297)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _441 = _437.z;
    float _444 = (_393 - _314.w) + (isnan(_441) ? _426 : (isnan(_426) ? _441 : max(_426, _441)));
    float _2843 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _448 = (TEXCOORD_5.x - _393) + cbMtdParam._m0[16u].x;
    float _449 = _448 * (isnan(1.0) ? _2843 : (isnan(_2843) ? 1.0 : min(_2843, 1.0)));
    float _461 = (_449 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[10u].x * _396);
    float _462 = (_449 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[10u].y * _396);
    float _463 = (_449 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[10u].z * _396);
    float _2854 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    float _465 = 1.0 - (isnan(1.0) ? _2854 : (isnan(_2854) ? 1.0 : min(_2854, 1.0)));
    float _472 = ((_465 - _461) * _394) + _461;
    float _473 = ((_465 - _462) * _394) + _462;
    float _474 = ((_465 - _463) * _394) + _463;
    float _479 = _340 / cbMtdParam._m0[15u].z;
    float _2865 = isnan(0.0) ? _479 : (isnan(_479) ? 0.0 : max(_479, 0.0));
    float _482 = (1.0 - (isnan(1.0) ? _2865 : (isnan(_2865) ? 1.0 : min(_2865, 1.0)))) * cbMtdParam._m0[15u].y;
    float _495 = (cbMtdParam._m0[14u].w + _340) * cbMtdParam._m0[14u].x;
    float _2876 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _499 = ((isnan(1.0) ? _2876 : (isnan(_2876) ? 1.0 : min(_2876, 1.0))) * (cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].x)) + cbMtdParam._m0[11u].x;
    float _2887 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _500 = isnan(1.0) ? _2887 : (isnan(_2887) ? 1.0 : min(_2887, 1.0));
    float _509 = _340 / cbMtdParam._m0[14u].z;
    float _2898 = isnan(0.0) ? _509 : (isnan(_509) ? 0.0 : max(_509, 0.0));
    float _510 = isnan(1.0) ? _2898 : (isnan(_2898) ? 1.0 : min(_2898, 1.0));
    vec4 _530 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[18u].y * _297) + TEXCOORD.z) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[18u].z * _297) + TEXCOORD.w) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _539 = ((_437.x + (-0.5)) * 0.5) + _422.x;
    float _540 = ((_437.y + (-0.5)) * 0.5) + _422.y;
    float _548 = _396 * 0.119999997317790985107421875;
    float _550 = _396 * (-0.100000001490116119384765625);
    float _561 = cbMtdParam._m0[19u].y * TEXCOORD.x;
    float _562 = cbMtdParam._m0[19u].z * TEXCOORD.y;
    vec4 _571 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[18u].w * _297) + _548) + _561) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[19u].x * _297) + _550) + _562) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _590 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2((((_561 + _548) + (cbMtdParam._m0[19u].w * _297)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_562 + _550) + (cbMtdParam._m0[20u].x * _297)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _602 = (((0.5 - _539) * 0.10999999940395355224609375) + _539) + (((_571.x + (-1.0)) + _590.x) * cbMtdParam._m0[15u].w);
    float _603 = (((0.5 - _540) * 0.10999999940395355224609375) + _540) + (((_571.y + (-1.0)) + _590.y) * cbMtdParam._m0[15u].w);
    float _608 = ((_530.x - _602) * _510) + _602;
    float _609 = ((_530.y - _603) * _510) + _603;
    float _611 = _340 / cbMtdParam._m0[14u].y;
    float _2909 = isnan(0.0) ? _611 : (isnan(_611) ? 0.0 : max(_611, 0.0));
    float _612 = isnan(1.0) ? _2909 : (isnan(_2909) ? 1.0 : min(_2909, 1.0));
    float _629 = ((((_500 * (0.5 - _317)) + _317) + (((_608 + (-0.5)) + ((0.5 - _608) * _612)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _630 = ((((_500 * (0.5 - _318)) + _318) + (((_609 + (-0.5)) + ((0.5 - _609) * _612)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _631 = dot(vec2(_629, _630), vec2(_629, _630));
    float _2920 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _636 = sqrt(1.0 - (isnan(1.0) ? _2920 : (isnan(_2920) ? 1.0 : min(_2920, 1.0))));
    float _644 = (cbMtdParam._m0[13u].y + _340) * cbMtdParam._m0[13u].w;
    float _2931 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    float _646 = (isnan(1.0) ? _2931 : (isnan(_2931) ? 1.0 : min(_2931, 1.0))) * cbMtdParam._m0[16u].z;
    float _2942 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
    float _647 = isnan(1.0) ? _2942 : (isnan(_2942) ? 1.0 : min(_2942, 1.0));
    float _660 = fma(_636, _223, fma(_630, _215 * TANGENT.x, _629 * _202));
    float _663 = fma(_636, _224, fma(_630, _215 * TANGENT.y, _629 * _203));
    float _666 = fma(_636, _225, fma(_630, _215 * TANGENT.z, _629 * _204));
    float _670 = inversesqrt(dot(vec3(_660, _663, _666), vec3(_660, _663, _666)));
    float _671 = _670 * _660;
    float _672 = _670 * _663;
    float _673 = _670 * _666;
    float _2953 = isnan(0.0) ? _482 : (isnan(_482) ? 0.0 : max(_482, 0.0));
    float _2964 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0));
    float _675 = isnan(1.0) ? _2964 : (isnan(_2964) ? 1.0 : min(_2964, 1.0));
    float _2975 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _2986 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _2997 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _683 = _370 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _723 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _732 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _723);
    float _733 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _723);
    float _734 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _723);
    float _738 = inversesqrt(dot(vec3(_732, _733, _734), vec3(_732, _733, _734)));
    float _739 = _732 * _738;
    float _740 = _733 * _738;
    float _741 = _734 * _738;
    vec4 _746 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _748 = _746.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _884 = sqrt(((_732 * _732) + (_733 * _733)) + (_734 * _734));
        float _891 = (cbMatDynParam._m0[5u].x * _884) + cbMatDynParam._m0[5u].y;
        float _3008 = isnan(0.0) ? _891 : (isnan(_891) ? 0.0 : max(_891, 0.0));
        float _892 = isnan(1.0) ? _3008 : (isnan(_3008) ? 1.0 : min(_3008, 1.0));
        float _896 = (cbMatDynParam._m0[5u].z * _884) + cbMatDynParam._m0[5u].w;
        float _3019 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3019 : (isnan(_3019) ? 1.0 : min(_3019, 1.0))) - _892)) + _892) < ((_748 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _759 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _760 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _773 = uint(roundEven(NORMAL.w)) * 13u;
    uint _774 = _773 + 9u;
    uint _775 = _774 + uint(cbMatDynParam._m0[0u].w);
    float _781 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2975 : (isnan(_2975) ? 1.0 : min(_2975, 1.0)))) * cbInstanceData._m0[_775].x;
    float _782 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2986 : (isnan(_2986) ? 1.0 : min(_2986, 1.0)))) * cbInstanceData._m0[_775].y;
    float _783 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2997 : (isnan(_2997) ? 1.0 : min(_2997, 1.0)))) * cbInstanceData._m0[_775].z;
    float _3030 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
    float _784 = isnan(1.0) ? _3030 : (isnan(_3030) ? 1.0 : min(_3030, 1.0));
    float _3041 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
    float _785 = isnan(1.0) ? _3041 : (isnan(_3041) ? 1.0 : min(_3041, 1.0));
    float _3052 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
    float _786 = isnan(1.0) ? _3052 : (isnan(_3052) ? 1.0 : min(_3052, 1.0));
    vec4 _795 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _759, cbSceneParam._m0[86u].y * _760));
    float _798 = _795.x * TEXCOORD_5.w;
    float _799 = dot(vec3(_671, _672, _673), vec3(_739, _740, _741));
    float _802 = _799 * 2.0;
    float _806 = (_802 * _671) - _739;
    float _807 = (_802 * _672) - _740;
    float _808 = (_802 * _673) - _741;
    float _812 = abs(dot(vec3(_739, _740, _741), vec3(_671, _672, _673)));
    float _3063 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
    float _813 = isnan(1.0) ? _3063 : (isnan(_3063) ? 1.0 : min(_3063, 1.0));
    float _821 = 10.0 / (_683 + 10.0);
    float _822 = sqrt(_675);
    float _834 = exp2((_822 * 5.0) * log2(1.0 - (_813 * 0.999000012874603271484375))) / (4.0 - (_822 * 3.0));
    float _865 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _869 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _873 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1203;
    float _1205;
    float _1206;
    float _1207;
    float _1208;
    float _1209;
    float _1210;
    float _1211;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _930 = fma(_873, cbModelParam._m0[26u].z, fma(_869, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _865));
        float _934 = fma(_873, cbModelParam._m0[27u].z, fma(_869, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _865));
        float _938 = fma(_873, cbModelParam._m0[28u].z, fma(_869, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _865));
        float _961 = _865 + _671;
        float _962 = _869 + _672;
        float _963 = _873 + _673;
        float _973 = fma(_963, cbModelParam._m0[26u].z, fma(_962, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _961)) - _930;
        float _974 = fma(_963, cbModelParam._m0[27u].z, fma(_962, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _961)) - _934;
        float _975 = fma(_963, cbModelParam._m0[28u].z, fma(_962, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _961)) - _938;
        float _979 = inversesqrt(dot(vec3(_973, _974, _975), vec3(_973, _974, _975)));
        float _992 = ((_979 * _973) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_930 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _993 = ((_979 * _974) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_934 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _994 = ((_979 * _975) / cbModelParam._m0[34u].z) + ((((((_938 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _997 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_992, _993, _994), 0.0);
        vec4 _1004 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_992, _993, _994), 0.0);
        vec4 _1011 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_992, _993, _994), 0.0);
        vec4 _1018 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_992, _993, _994), 0.0);
        float _1031 = exp2((_997.w + (-0.5)) * 20.0) * 2.0;
        float _1032 = _1031 * (_997.x + (-0.5));
        float _1033 = _1031 * (_997.y + (-0.5));
        float _1034 = _1031 * (_997.z + (-0.5));
        float _1041 = exp2((_1004.w + (-0.5)) * 20.0) * 2.0;
        float _1042 = _1041 * (_1004.x + (-0.5));
        float _1043 = _1041 * (_1004.y + (-0.5));
        float _1044 = _1041 * (_1004.z + (-0.5));
        float _1051 = exp2((_1011.w + (-0.5)) * 20.0) * 2.0;
        float _1052 = _1051 * (_1011.x + (-0.5));
        float _1053 = _1051 * (_1011.y + (-0.5));
        float _1054 = _1051 * (_1011.z + (-0.5));
        float _1061 = exp2((_1018.w + (-0.5)) * 20.0) * 2.0;
        float _1062 = _1061 * (_1018.x + (-0.5));
        float _1063 = _1061 * (_1018.y + (-0.5));
        float _1064 = _1061 * (_1018.z + (-0.5));
        float _1065 = isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0));
        float _1066 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
        float _1067 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
        float _1068 = _1032 * 0.5;
        float _1069 = _1042 * 0.5;
        float _1070 = _1052 * 0.5;
        float _1071 = dot(vec3(_1068, _1069, _1070), vec3(_1068, _1069, _1070));
        float _1076 = (_1071 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1071);
        float _1085 = (dot(vec3(_671, _672, _673), vec3(_1076 * _1068, _1076 * _1069, _1076 * _1070)) + 1.0) * 0.5;
        float _3089 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1095 = sqrt(((_1069 * _1069) + (_1068 * _1068)) + (_1070 * _1070)) / (_1065 + 9.9999997473787516355514526367188e-06);
        float _3100 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
        float _1096 = isnan(1.0) ? _3100 : (isnan(_3100) ? 1.0 : min(_3100, 1.0));
        float _1097 = _1096 * 2.0;
        float _1101 = (1.0 - _1096) / (_1096 + 1.0);
        float _3111 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1102 = isnan(1.0) ? _3111 : (isnan(_3111) ? 1.0 : min(_3111, 1.0));
        float _1111 = ((((1.0 - _1102) * (_1097 + 2.0)) * exp2(log2(isnan(1.0) ? _3089 : (isnan(_3089) ? 1.0 : min(_3089, 1.0))) * (_1097 + 1.0))) + _1102) * _1065;
        float _1112 = _1033 * 0.5;
        float _1113 = _1043 * 0.5;
        float _1114 = _1053 * 0.5;
        float _1115 = dot(vec3(_1112, _1113, _1114), vec3(_1112, _1113, _1114));
        float _1120 = (_1115 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1115);
        float _1128 = (dot(vec3(_671, _672, _673), vec3(_1120 * _1112, _1120 * _1113, _1120 * _1114)) + 1.0) * 0.5;
        float _3122 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
        float _1137 = sqrt(((_1113 * _1113) + (_1112 * _1112)) + (_1114 * _1114)) / (_1066 + 9.9999997473787516355514526367188e-06);
        float _3133 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
        float _1138 = isnan(1.0) ? _3133 : (isnan(_3133) ? 1.0 : min(_3133, 1.0));
        float _1139 = _1138 * 2.0;
        float _1143 = (1.0 - _1138) / (_1138 + 1.0);
        float _3144 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1144 = isnan(1.0) ? _3144 : (isnan(_3144) ? 1.0 : min(_3144, 1.0));
        float _1153 = ((((1.0 - _1144) * (_1139 + 2.0)) * exp2(log2(isnan(1.0) ? _3122 : (isnan(_3122) ? 1.0 : min(_3122, 1.0))) * (_1139 + 1.0))) + _1144) * _1066;
        float _1154 = _1034 * 0.5;
        float _1155 = _1044 * 0.5;
        float _1156 = _1054 * 0.5;
        float _1157 = dot(vec3(_1154, _1155, _1156), vec3(_1154, _1155, _1156));
        float _1162 = (_1157 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1157);
        float _1170 = (dot(vec3(_671, _672, _673), vec3(_1162 * _1154, _1162 * _1155, _1162 * _1156)) + 1.0) * 0.5;
        float _3155 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1179 = sqrt(((_1155 * _1155) + (_1154 * _1154)) + (_1156 * _1156)) / (_1067 + 9.9999997473787516355514526367188e-06);
        float _3166 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1180 = isnan(1.0) ? _3166 : (isnan(_3166) ? 1.0 : min(_3166, 1.0));
        float _1181 = _1180 * 2.0;
        float _1185 = (1.0 - _1180) / (_1180 + 1.0);
        float _3177 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1186 = isnan(1.0) ? _3177 : (isnan(_3177) ? 1.0 : min(_3177, 1.0));
        float _1195 = ((((1.0 - _1186) * (_1181 + 2.0)) * exp2(log2(isnan(1.0) ? _3155 : (isnan(_3155) ? 1.0 : min(_3155, 1.0))) * (_1181 + 1.0))) + _1186) * _1067;
        _1203 = _1034;
        _1205 = _1033;
        _1206 = _1032;
        _1207 = _1044;
        _1208 = _1043;
        _1209 = _1042;
        _1210 = _1054;
        _1211 = _1053;
        _1212 = _1052;
        _1213 = _1067;
        _1214 = _1066;
        _1215 = _1065;
        _1216 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0)));
        _1217 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0)));
        _1218 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0)));
    }
    else
    {
        _1203 = _1204;
        _1205 = _1204;
        _1206 = _1204;
        _1207 = _1204;
        _1208 = _1204;
        _1209 = _1204;
        _1210 = _1204;
        _1211 = _1204;
        _1212 = _1204;
        _1213 = _1204;
        _1214 = _1204;
        _1215 = _1204;
        _1216 = 0.0;
        _1217 = 0.0;
        _1218 = 0.0;
    }
    float _1516;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1247 = fma(_873, cbModelParam._m0[30u].z, fma(_869, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _865));
        float _1251 = fma(_873, cbModelParam._m0[31u].z, fma(_869, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _865));
        float _1255 = fma(_873, cbModelParam._m0[32u].z, fma(_869, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _865));
        float _1278 = _865 + _671;
        float _1279 = _869 + _672;
        float _1280 = _873 + _673;
        float _1290 = fma(_1280, cbModelParam._m0[30u].z, fma(_1279, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1278)) - _1247;
        float _1291 = fma(_1280, cbModelParam._m0[31u].z, fma(_1279, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1278)) - _1251;
        float _1292 = fma(_1280, cbModelParam._m0[32u].z, fma(_1279, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1278)) - _1255;
        float _1296 = inversesqrt(dot(vec3(_1290, _1291, _1292), vec3(_1290, _1291, _1292)));
        float _1309 = ((_1296 * _1290) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1247 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1310 = ((_1296 * _1291) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1251 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1311 = ((_1296 * _1292) / cbModelParam._m0[35u].z) + ((((((_1255 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1313 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1309, _1310, _1311), 0.0);
        vec4 _1320 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1309, _1310, _1311), 0.0);
        vec4 _1327 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1309, _1310, _1311), 0.0);
        vec4 _1334 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1309, _1310, _1311), 0.0);
        float _1346 = exp2((_1313.w + (-0.5)) * 20.0) * 2.0;
        float _1347 = _1346 * (_1313.x + (-0.5));
        float _1348 = _1346 * (_1313.y + (-0.5));
        float _1349 = _1346 * (_1313.z + (-0.5));
        float _1356 = exp2((_1320.w + (-0.5)) * 20.0) * 2.0;
        float _1357 = _1356 * (_1320.x + (-0.5));
        float _1358 = _1356 * (_1320.y + (-0.5));
        float _1359 = _1356 * (_1320.z + (-0.5));
        float _1366 = exp2((_1327.w + (-0.5)) * 20.0) * 2.0;
        float _1367 = _1366 * (_1327.x + (-0.5));
        float _1368 = _1366 * (_1327.y + (-0.5));
        float _1369 = _1366 * (_1327.z + (-0.5));
        float _1376 = exp2((_1334.w + (-0.5)) * 20.0) * 2.0;
        float _1377 = _1376 * (_1334.x + (-0.5));
        float _1378 = _1376 * (_1334.y + (-0.5));
        float _1379 = _1376 * (_1334.z + (-0.5));
        float _1380 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
        float _1381 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1382 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1383 = _1347 * 0.5;
        float _1384 = _1357 * 0.5;
        float _1385 = _1367 * 0.5;
        float _1386 = dot(vec3(_1383, _1384, _1385), vec3(_1383, _1384, _1385));
        float _1391 = (_1386 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1386);
        float _1399 = (dot(vec3(_671, _672, _673), vec3(_1391 * _1383, _1391 * _1384, _1391 * _1385)) + 1.0) * 0.5;
        float _3218 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1408 = sqrt(((_1384 * _1384) + (_1383 * _1383)) + (_1385 * _1385)) / (_1380 + 9.9999997473787516355514526367188e-06);
        float _3229 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
        float _1409 = isnan(1.0) ? _3229 : (isnan(_3229) ? 1.0 : min(_3229, 1.0));
        float _1410 = _1409 * 2.0;
        float _1414 = (1.0 - _1409) / (_1409 + 1.0);
        float _3240 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1415 = isnan(1.0) ? _3240 : (isnan(_3240) ? 1.0 : min(_3240, 1.0));
        float _1424 = ((((1.0 - _1415) * (_1410 + 2.0)) * exp2(log2(isnan(1.0) ? _3218 : (isnan(_3218) ? 1.0 : min(_3218, 1.0))) * (_1410 + 1.0))) + _1415) * _1380;
        float _1425 = _1348 * 0.5;
        float _1426 = _1358 * 0.5;
        float _1427 = _1368 * 0.5;
        float _1428 = dot(vec3(_1425, _1426, _1427), vec3(_1425, _1426, _1427));
        float _1433 = (_1428 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1428);
        float _1441 = (dot(vec3(_671, _672, _673), vec3(_1433 * _1425, _1433 * _1426, _1433 * _1427)) + 1.0) * 0.5;
        float _3251 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1450 = sqrt(((_1426 * _1426) + (_1425 * _1425)) + (_1427 * _1427)) / (_1381 + 9.9999997473787516355514526367188e-06);
        float _3262 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1451 = isnan(1.0) ? _3262 : (isnan(_3262) ? 1.0 : min(_3262, 1.0));
        float _1452 = _1451 * 2.0;
        float _1456 = (1.0 - _1451) / (_1451 + 1.0);
        float _3273 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1457 = isnan(1.0) ? _3273 : (isnan(_3273) ? 1.0 : min(_3273, 1.0));
        float _1466 = ((((1.0 - _1457) * (_1452 + 2.0)) * exp2(log2(isnan(1.0) ? _3251 : (isnan(_3251) ? 1.0 : min(_3251, 1.0))) * (_1452 + 1.0))) + _1457) * _1381;
        float _1467 = _1349 * 0.5;
        float _1468 = _1359 * 0.5;
        float _1469 = _1369 * 0.5;
        float _1470 = dot(vec3(_1467, _1468, _1469), vec3(_1467, _1468, _1469));
        float _1475 = (_1470 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1470);
        float _1483 = (dot(vec3(_671, _672, _673), vec3(_1475 * _1467, _1475 * _1468, _1475 * _1469)) + 1.0) * 0.5;
        float _3284 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1492 = sqrt(((_1468 * _1468) + (_1467 * _1467)) + (_1469 * _1469)) / (_1382 + 9.9999997473787516355514526367188e-06);
        float _3295 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1493 = isnan(1.0) ? _3295 : (isnan(_3295) ? 1.0 : min(_3295, 1.0));
        float _1494 = _1493 * 2.0;
        float _1498 = (1.0 - _1493) / (_1493 + 1.0);
        float _3306 = isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0));
        float _1499 = isnan(1.0) ? _3306 : (isnan(_3306) ? 1.0 : min(_3306, 1.0));
        float _1508 = ((((1.0 - _1499) * (_1494 + 2.0)) * exp2(log2(isnan(1.0) ? _3284 : (isnan(_3284) ? 1.0 : min(_3284, 1.0))) * (_1494 + 1.0))) + _1499) * _1382;
        _1516 = _1349;
        _1517 = _1348;
        _1518 = _1347;
        _1519 = _1359;
        _1520 = _1358;
        _1521 = _1357;
        _1522 = _1369;
        _1523 = _1368;
        _1524 = _1367;
        _1525 = _1382;
        _1526 = _1381;
        _1527 = _1380;
        _1528 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0)));
        _1529 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0)));
        _1530 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0)));
    }
    else
    {
        _1516 = _1204;
        _1517 = _1204;
        _1518 = _1204;
        _1519 = _1204;
        _1520 = _1204;
        _1521 = _1204;
        _1522 = _1204;
        _1523 = _1204;
        _1524 = _1204;
        _1525 = _1204;
        _1526 = _1204;
        _1527 = _1204;
        _1528 = 0.0;
        _1529 = 0.0;
        _1530 = 0.0;
    }
    float _1540 = (cbModelParam._m0[1u].x * (_1528 - _1216)) + _1216;
    float _1541 = (cbModelParam._m0[1u].x * (_1529 - _1217)) + _1217;
    float _1542 = (cbModelParam._m0[1u].x * (_1530 - _1218)) + _1218;
    float _1563 = fma(_1542, cbSceneParam._m0[89u].z, fma(_1541, cbSceneParam._m0[89u].y, _1540 * cbSceneParam._m0[89u].x));
    float _1566 = fma(_1542, cbSceneParam._m0[90u].z, fma(_1541, cbSceneParam._m0[90u].y, _1540 * cbSceneParam._m0[90u].x));
    float _1569 = fma(_1542, cbSceneParam._m0[91u].z, fma(_1541, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1540));
    float _1584 = _806 * 0.5;
    float _1585 = _807 * 0.5;
    float _1586 = _808 * 0.5;
    float _1587 = dot(vec4(_1584, _1585, _1586, 1.0), vec4(_1518, _1521, _1524, _1527));
    float _1590 = dot(vec4(_1584, _1585, _1586, 1.0), vec4(_1517, _1520, _1523, _1526));
    float _1593 = dot(vec4(_1584, _1585, _1586, 1.0), vec4(_1516, _1519, _1522, _1525));
    float _1627;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1600 = dot(vec4(_1584, _1585, _1586, 1.0), vec4(_1203, _1207, _1210, _1213));
        float _1604 = dot(vec4(_1584, _1585, _1586, 1.0), vec4(_1205, _1208, _1211, _1214));
        float _1608 = dot(vec4(_1584, _1585, _1586, 1.0), vec4(_1206, _1209, _1212, _1215));
        float _1615 = dot(vec4(cbModelParam._m0[39u]), vec4(_1584, _1585, _1586, 1.0));
        _1627 = dot(vec3(isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0)), isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0)), isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1615) ? 0.0 : (isnan(0.0) ? _1615 : max(0.0, _1615))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1627 = 1.0;
    }
    float _1638;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1629 = dot(vec4(cbModelParam._m0[40u]), vec4(_1584, _1585, _1586, 1.0));
        _1638 = dot(vec3(isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0)), isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0)), isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1629) ? 0.0 : (isnan(0.0) ? _1629 : max(0.0, _1629))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1638 = 1.0;
    }
    float _1642 = (_1638 * cbModelParam._m0[1u].x) + (_1627 * (1.0 - cbModelParam._m0[1u].x));
    float _1652 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _675);
    float _1653 = isnan(_1652) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1652 : min(cbModelParam._m0[25u].z, _1652));
    float _1734;
    float _1736;
    float _1738;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1701 = fma(_873, cbModelParam._m0[13u].z, fma(_869, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _865)) + cbModelParam._m0[13u].w;
        float _1705 = fma(_873, cbModelParam._m0[14u].z, fma(_869, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _865)) + cbModelParam._m0[14u].w;
        float _1709 = fma(_873, cbModelParam._m0[15u].z, fma(_869, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _865)) + cbModelParam._m0[15u].w;
        float _1712 = fma(_808, cbModelParam._m0[13u].z, fma(_807, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _806));
        float _1715 = fma(_808, cbModelParam._m0[14u].z, fma(_807, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _806));
        float _1718 = fma(_808, cbModelParam._m0[15u].z, fma(_807, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _806));
        float _1746;
        if (_1712 > 0.0)
        {
            _1746 = abs((1.0 - _1701) / _1712);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1712 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1701 + 1.0) / _1712);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1746 = frontier_phi_19_17_ladder;
        }
        float _2175;
        if (_1715 > 0.0)
        {
            _2175 = abs((1.0 - _1705) / _1715);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1715 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1705 + 1.0) / _1715);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2175 = frontier_phi_28_24_ladder;
        }
        float _2478;
        if (_1718 > 0.0)
        {
            _2478 = abs((1.0 - _1709) / _1718);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1718 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1709 + 1.0) / _1718);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2478 = frontier_phi_40_35_ladder;
        }
        float _2480 = isnan(_2175) ? _1746 : (isnan(_1746) ? _2175 : min(_1746, _2175));
        float _2481 = isnan(_2478) ? _2480 : (isnan(_2480) ? _2478 : min(_2480, _2478));
        float _2485 = (_2481 * _1712) + _1701;
        float _2486 = (_2481 * _1715) + _1705;
        float _2487 = (_2481 * _1718) + _1709;
        float _2488 = _2481 * 9.9999997473787516355514526367188e-05;
        float _2489 = (-1.0) - _2488;
        float _2491 = _2488 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2487 > _2491) || ((_2487 < _2489) || ((_2486 > _2491) || ((_2486 < _2489) || ((_2485 < _2489) || (_2485 > _2491))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2580 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2487, cbModelParam._m0[9u].z, fma(_2486, cbModelParam._m0[9u].y, _2485 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2487, cbModelParam._m0[10u].z, fma(_2486, cbModelParam._m0[10u].y, _2485 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2487, cbModelParam._m0[11u].z, fma(_2486, cbModelParam._m0[11u].y, _2485 * cbModelParam._m0[11u].x))), _1653);
            frontier_phi_18_40_ladder = _2580.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2580.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2580.x * cbModelParam._m0[1u].y;
        }
        _1734 = frontier_phi_18_40_ladder_2;
        _1736 = frontier_phi_18_40_ladder_1;
        _1738 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1722 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_806, _807, _808), _1653);
        _1734 = _1722.x * cbModelParam._m0[1u].y;
        _1736 = _1722.y * cbModelParam._m0[1u].y;
        _1738 = _1722.z * cbModelParam._m0[1u].y;
    }
    float _1742 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _675);
    float _1743 = isnan(_1742) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1742 : min(cbModelParam._m0[25u].w, _1742));
    float _1832;
    float _1834;
    float _1836;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1796 = fma(_873, cbModelParam._m0[21u].z, fma(_869, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _865)) + cbModelParam._m0[21u].w;
        float _1800 = fma(_873, cbModelParam._m0[22u].z, fma(_869, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _865)) + cbModelParam._m0[22u].w;
        float _1804 = fma(_873, cbModelParam._m0[23u].z, fma(_869, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _865)) + cbModelParam._m0[23u].w;
        float _1807 = fma(_808, cbModelParam._m0[21u].z, fma(_807, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _806));
        float _1810 = fma(_808, cbModelParam._m0[22u].z, fma(_807, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _806));
        float _1813 = fma(_808, cbModelParam._m0[23u].z, fma(_807, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _806));
        float _2180;
        if (_1807 > 0.0)
        {
            _2180 = abs((1.0 - _1796) / _1807);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1807 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1796 + 1.0) / _1807);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2180 = frontier_phi_30_26_ladder;
        }
        float _2504;
        if (_1810 > 0.0)
        {
            _2504 = abs((1.0 - _1800) / _1810);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1810 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1800 + 1.0) / _1810);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2504 = frontier_phi_42_37_ladder;
        }
        float _2632;
        if (_1813 > 0.0)
        {
            _2632 = abs((1.0 - _1804) / _1813);
        }
        else
        {
            float frontier_phi_54_50_ladder;
            if (_1813 < 0.0)
            {
                frontier_phi_54_50_ladder = abs((_1804 + 1.0) / _1813);
            }
            else
            {
                frontier_phi_54_50_ladder = 5000.0;
            }
            _2632 = frontier_phi_54_50_ladder;
        }
        float _2634 = isnan(_2504) ? _2180 : (isnan(_2180) ? _2504 : min(_2180, _2504));
        float _2635 = isnan(_2632) ? _2634 : (isnan(_2634) ? _2632 : min(_2634, _2632));
        float _2639 = (_2635 * _1807) + _1796;
        float _2640 = (_2635 * _1810) + _1800;
        float _2641 = (_2635 * _1813) + _1804;
        float _2642 = _2635 * 9.9999997473787516355514526367188e-05;
        float _2643 = (-1.0) - _2642;
        float _2645 = _2642 + 1.0;
        float frontier_phi_27_54_ladder;
        float frontier_phi_27_54_ladder_1;
        float frontier_phi_27_54_ladder_2;
        if ((_2641 > _2645) || ((_2641 < _2643) || ((_2640 > _2645) || ((_2640 < _2643) || ((_2639 < _2643) || (_2639 > _2645))))))
        {
            frontier_phi_27_54_ladder = 0.0;
            frontier_phi_27_54_ladder_1 = 0.0;
            frontier_phi_27_54_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2683 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2641, cbModelParam._m0[17u].z, fma(_2640, cbModelParam._m0[17u].y, _2639 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2641, cbModelParam._m0[18u].z, fma(_2640, cbModelParam._m0[18u].y, _2639 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2641, cbModelParam._m0[19u].z, fma(_2640, cbModelParam._m0[19u].y, _2639 * cbModelParam._m0[19u].x))), _1743);
            frontier_phi_27_54_ladder = _2683.z * cbModelParam._m0[1u].z;
            frontier_phi_27_54_ladder_1 = _2683.y * cbModelParam._m0[1u].z;
            frontier_phi_27_54_ladder_2 = _2683.x * cbModelParam._m0[1u].z;
        }
        _1832 = frontier_phi_27_54_ladder_2;
        _1834 = frontier_phi_27_54_ladder_1;
        _1836 = frontier_phi_27_54_ladder;
    }
    else
    {
        vec4 _1816 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_806, _807, _808), _1743);
        _1832 = _1816.x * cbModelParam._m0[1u].z;
        _1834 = _1816.y * cbModelParam._m0[1u].z;
        _1836 = _1816.z * cbModelParam._m0[1u].z;
    }
    float _1848 = ((((1.0 - _834) * ((_822 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_834 * _822)) * _798;
    float _1849 = _1848 * ((cbModelParam._m0[1u].w * (_1832 - _1734)) + _1734);
    float _1850 = _1848 * ((cbModelParam._m0[1u].w * (_1834 - _1736)) + _1736);
    float _1851 = _1848 * ((cbModelParam._m0[1u].w * (_1836 - _1738)) + _1738);
    float _1854 = fma(_1851, cbSceneParam._m0[89u].z, fma(_1850, cbSceneParam._m0[89u].y, _1849 * cbSceneParam._m0[89u].x));
    float _1857 = fma(_1851, cbSceneParam._m0[90u].z, fma(_1850, cbSceneParam._m0[90u].y, _1849 * cbSceneParam._m0[90u].x));
    float _1860 = fma(_1851, cbSceneParam._m0[91u].z, fma(_1850, cbSceneParam._m0[91u].y, _1849 * cbSceneParam._m0[91u].x));
    float _1871 = _759 / cbSceneParam._m0[86u].x;
    float _1879 = (cbSceneParam._m0[88u].y * (1.0 - _675)) + cbSceneParam._m0[88u].z;
    float _3432 = isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0));
    float _1881 = (isnan(1.0) ? _3432 : (isnan(_3432) ? 1.0 : min(_3432, 1.0))) * 5.0;
    float _1886 = (_821 * cbMtdParam._m0[11u].w) * dot(vec3(_671, _672, _673), vec3(1.0, 0.0, 0.0));
    vec4 _1896 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_1886 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_1886 + _1871) * cbSceneParam._m0[86u].x, _760), _1881).w) + _1871) * cbSceneParam._m0[86u].x, _760), _1881);
    float _1912 = 1.0 - _1896.w;
    vec4 _1920 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_759, _760));
    float _1922 = _1920.w;
    float _1934 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1922);
    float _1935 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1922);
    float _1936 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1922);
    uint _1937 = _773 + 5u;
    uint _1942 = floatBitsToUint(cbInstanceData._m0[_1937]).x * 14u;
    float _1949 = (cbLight._m0[_1942 + 13u].x * (_798 + (-1.0))) + 1.0;
    uint _1950 = _1942 + 4u;
    float _1960 = isnan(1.0) ? _1949 : (isnan(_1949) ? 1.0 : min(_1949, 1.0));
    float _1969 = dot(vec3(cbLight._m0[_1942].xyz), vec3(_671, _672, _673));
    float _3448 = isnan(0.0) ? _1969 : (isnan(_1969) ? 0.0 : max(_1969, 0.0));
    float _1973 = (isnan(1.0) ? _3448 : (isnan(_3448) ? 1.0 : min(_3448, 1.0))) * 0.3183098733425140380859375;
    uint _1979 = _1942 + 8u;
    float _1992 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1942].w)) * _675) * 0.949999988079071044921875);
    float _1993 = _1992 * _1992;
    float _1994 = cbLight._m0[_1942].x + _739;
    float _1995 = cbLight._m0[_1942].y + _740;
    float _1996 = cbLight._m0[_1942].z + _741;
    float _2000 = inversesqrt(dot(vec3(_1994, _1995, _1996), vec3(_1994, _1995, _1996)));
    float _2001 = _2000 * _1994;
    float _2002 = _2000 * _1995;
    float _2003 = _2000 * _1996;
    float _2004 = dot(vec3(_671, _672, _673), vec3(cbLight._m0[_1942].xyz));
    float _3459 = isnan(0.0) ? _2004 : (isnan(_2004) ? 0.0 : max(_2004, 0.0));
    float _2007 = isnan(1.0) ? _3459 : (isnan(_3459) ? 1.0 : min(_3459, 1.0));
    float _3470 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _2008 = isnan(1.0) ? _3470 : (isnan(_3470) ? 1.0 : min(_3470, 1.0));
    float _2009 = dot(vec3(_671, _672, _673), vec3(_2001, _2002, _2003));
    float _3481 = isnan(0.0) ? _2009 : (isnan(_2009) ? 0.0 : max(_2009, 0.0));
    float _2012 = isnan(1.0) ? _3481 : (isnan(_3481) ? 1.0 : min(_3481, 1.0));
    float _2013 = dot(vec3(cbLight._m0[_1942].xyz), vec3(_2001, _2002, _2003));
    float _3492 = isnan(0.0) ? _2013 : (isnan(_2013) ? 0.0 : max(_2013, 0.0));
    float _2017 = _1993 * _1993;
    float _2021 = ((_2012 * _2012) * (_2017 + (-1.0))) + 1.0;
    float _2032 = (exp2(log2(1.0 - (isnan(1.0) ? _3492 : (isnan(_3492) ? 1.0 : min(_3492, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2033 = 1.0 - _1993;
    float _2044 = (0.5 / (((_2008 * ((_2007 * _2033) + _1993)) + 9.9999999392252902907785028219223e-09) + (((_2008 * _2033) + _1993) * _2007))) * _2007;
    float _3503 = isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0));
    float _2046 = (isnan(1.0) ? _3503 : (isnan(_3503) ? 1.0 : min(_3503, 1.0))) * (_2017 / ((_2021 * _2021) * 3.141590118408203125));
    float _2080 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2081 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2082 = cbSceneParam._m0[86u].x * ((_759 / cbSceneParam._m0[86u].x) + ((_821 * cbMtdParam._m0[11u].y) * dot(vec3(_671, _672, _673), vec3(_202, _203, _204))));
    float _2083 = isnan(_2080) ? _2082 : (isnan(_2082) ? _2080 : min(_2082, _2080));
    float _2084 = isnan(_2081) ? _760 : (isnan(_760) ? _2081 : min(_760, _2081));
    vec4 _2086 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2083, _2084), 0.0);
    float _2088 = _2086.x;
    bool _2108 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2088)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2088))) > _683;
    float _2109 = _2108 ? _2083 : _759;
    float _2110 = _2108 ? _2084 : _760;
    vec4 _2112 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2109, _2110));
    vec4 _2117 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2109, _2110));
    float _2119 = _2117.x;
    bool _2124 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2133 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2139 = (_2124 ? (_2133 / (cbSceneParam._m0[2u].x - _2119)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2119))) - _683;
    float _2141 = cbMtdParam._m0[21u].x + cbMtdParam._m0[20u].y;
    float _2142 = cbMtdParam._m0[21u].y + cbMtdParam._m0[20u].z;
    float _2143 = cbMtdParam._m0[21u].z + cbMtdParam._m0[20u].w;
    bool _2149 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2153 = (isnan(_2139) ? 0.0 : (isnan(0.0) ? _2139 : max(0.0, _2139))) * (-1.44269502162933349609375);
    float _3529 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    float _3540 = isnan(0.0) ? _785 : (isnan(_785) ? 0.0 : max(_785, 0.0));
    float _3551 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
    float _2267;
    float _2268;
    float _2269;
    if ((1.0 - _647) > 0.00999999977648258209228515625)
    {
        vec4 _2186 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2109, _2110), 0.0);
        float _2188 = _2186.x;
        float _2194 = (_2124 ? (_2133 / (cbSceneParam._m0[2u].x - _2188)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2188))) - _683;
        uint _2200 = floatBitsToUint(cbInstanceData._m0[_1937]).x * 14u;
        uint _2206 = _2200 + 4u;
        float _2215 = dot(vec3(cbLight._m0[_2200].xyz), vec3(_223, _224, _225));
        float _2223 = dot(vec3((-0.0) - _739, (-0.0) - _740, (-0.0) - _741), vec3((-0.0) - _223, (-0.0) - _224, (-0.0) - _225));
        float _2228 = ((isnan(0.0) ? _2223 : (isnan(_2223) ? 0.0 : max(_2223, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2215 : (isnan(_2215) ? 0.001000000047497451305389404296875 : max(_2215, 0.001000000047497451305389404296875)))) + 1.0;
        float _2230 = (-0.0) - ((isnan(_2194) ? 0.0 : (isnan(0.0) ? _2194 : max(0.0, _2194))) * _2228);
        _2267 = _2149 ? 0.0 : ((((cbMtdParam._m0[20u].y * 0.079577468335628509521484375) * cbLight._m0[_2206].x) / ((_2228 * _2141) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2141 * 1.44269502162933349609375) * _2230)));
        _2268 = _2149 ? 0.0 : ((((cbMtdParam._m0[20u].z * 0.079577468335628509521484375) * cbLight._m0[_2206].y) / ((_2228 * _2142) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2142 * 1.44269502162933349609375) * _2230)));
        _2269 = _2149 ? 0.0 : ((((cbMtdParam._m0[20u].w * 0.079577468335628509521484375) * cbLight._m0[_2206].z) / ((_2228 * _2143) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2143 * 1.44269502162933349609375) * _2230)));
    }
    else
    {
        _2267 = 0.0;
        _2268 = 0.0;
        _2269 = 0.0;
    }
    float _2286 = 0.959999978542327880859375 - (exp2(log2(1.0 - _813) * 5.0) * 0.959999978542327880859375);
    float _2287 = (_2267 + ((exp2(_2153 * (_2149 ? 0.0 : _2141)) * _2112.x) * cbSceneParam._m0[72u].w)) * _2286;
    float _2288 = (_2268 + ((exp2(_2153 * (_2149 ? 0.0 : _2142)) * _2112.y) * cbSceneParam._m0[72u].w)) * _2286;
    float _2289 = (_2269 + ((exp2(_2153 * (_2149 ? 0.0 : _2143)) * _2112.z) * cbSceneParam._m0[72u].w)) * _2286;
    float _2297 = (_2287 + (((((_1848 * _1896.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0))) * _1642) * _1912)) + ((((cbLight._m0[_1979].x * _1934) * _2032) * _2046) * _1960)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3529 : (isnan(_3529) ? 1.0 : min(_3529, 1.0))) * ((((cbLight._m0[_1950].x * _1934) * _1960) * _1973) + ((isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0))) * _798))) - _2287) * _647);
    float _2299 = (_2288 + (((((_1848 * _1896.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0))) * _1642) * _1912)) + ((((cbLight._m0[_1979].y * _1935) * _2032) * _2046) * _1960)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3540 : (isnan(_3540) ? 1.0 : min(_3540, 1.0))) * ((((cbLight._m0[_1950].y * _1935) * _1960) * _1973) + ((isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0))) * _798))) - _2288) * _647);
    float _2301 = (_2289 + (((((_1848 * _1896.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0))) * _1642) * _1912)) + ((((cbLight._m0[_1979].z * _1936) * _2032) * _2046) * _1960)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3551 : (isnan(_3551) ? 1.0 : min(_3551, 1.0))) * ((((cbLight._m0[_1950].z * _1936) * _1960) * _1973) + ((isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0))) * _798))) - _2289) * _647);
    float _2306 = cbInstanceData._m0[_773 + 6u].w * (isnan(1.0) ? _2953 : (isnan(_2953) ? 1.0 : min(_2953, 1.0)));
    float _2311 = _759 / cbSceneParam._m0[86u].x;
    float _2312 = _760 / cbSceneParam._m0[86u].y;
    vec4 _2326 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2311, _2312, (log2((isnan(cbSceneParam._m0[77u].w) ? _683 : (isnan(_683) ? cbSceneParam._m0[77u].w : min(_683, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2328 = _2326.x;
    float _2329 = _2326.y;
    float _2330 = _2326.z;
    float _2331 = _2326.w;
    float _2388;
    float _2390;
    float _2392;
    float _2394;
    if (_683 > cbSceneParam._m0[78u].w)
    {
        float _2352 = isnan(_683) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _683 : min(cbSceneParam._m0[80u].w, _683));
        float _2353 = _2352 / _683;
        float _2364 = _2353 * _732;
        float _2365 = _733 * _2353;
        float _2366 = (-0.0) - _2365;
        float _2367 = _2353 * _734;
        float _2369 = (cbSceneParam._m0[77u].w * _2366) / _2352;
        float _2370 = _2369 + cbSceneParam._m0[79u].w;
        float _2371 = cbSceneParam._m0[79u].w - _2365;
        float _2377 = sqrt(((_2364 * _2364) + (_2365 * _2365)) + (_2367 * _2367));
        float _2380 = (1.0 - (cbSceneParam._m0[77u].w / _2352)) * _2377;
        float _2386 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2387 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2589;
        if (abs((_2366 - _2369) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2589 = ((((_2370 > 0.0) ? exp2(_2386 * _2370) : (2.0 - exp2(_2387 * _2370))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2380;
        }
        else
        {
            float _2521 = 1.0 / cbSceneParam._m0[80u].x;
            float _2522 = isnan(_2371) ? _2370 : (isnan(_2370) ? _2371 : max(_2370, _2371));
            float _2523 = isnan(_2371) ? _2370 : (isnan(_2370) ? _2371 : min(_2370, _2371));
            float _2532 = isnan(0.0) ? _2522 : (isnan(_2522) ? 0.0 : min(_2522, 0.0));
            float _2533 = isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : min(_2523, 0.0));
            _2589 = ((abs(_2377 / _2366) * cbSceneParam._m0[80u].y) * ((((_2532 - _2533) * 2.0) - ((exp2(_2386 * (isnan(0.0) ? _2522 : (isnan(_2522) ? 0.0 : max(_2522, 0.0)))) - exp2(_2386 * (isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : max(_2523, 0.0))))) * _2521)) - ((exp2(_2387 * _2532) - exp2(_2387 * _2533)) * _2521))) + (_2380 * cbSceneParam._m0[80u].z);
        }
        vec4 _2591 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2311, _2312, 1.0), 0.0);
        float _2600 = exp2((_2589 * (-1.44269502162933349609375)) * (1.0 - _2591.w));
        float _2601 = log2(_2600);
        float _2617 = log2(_2331);
        _2388 = (exp2(_2617 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2601 * cbSceneParam._m0[78u].x)) * _2591.x) / cbSceneParam._m0[78u].x)) + _2328;
        _2390 = (exp2(_2617 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2601 * cbSceneParam._m0[78u].y)) * _2591.y) / cbSceneParam._m0[78u].y)) + _2329;
        _2392 = (exp2(_2617 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2601 * cbSceneParam._m0[78u].z)) * _2591.z) / cbSceneParam._m0[78u].z)) + _2330;
        _2394 = _2600 * _2331;
    }
    else
    {
        _2388 = _2328;
        _2390 = _2329;
        _2392 = _2330;
        _2394 = _2331;
    }
    bool _2627;
    float _2449;
    vec4 _2452;
    float _2454;
    vec4 _2456;
    float _2464;
    float _2465;
    float _2466;
    float _2467;
    bool _2477;
    for (;;)
    {
        bool _2406 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2407 = log2(_2394);
        float _2414 = exp2(_2407 * cbSceneParam._m0[78u].x) * _2297;
        float _2415 = exp2(_2407 * cbSceneParam._m0[78u].y) * _2299;
        float _2416 = exp2(_2407 * cbSceneParam._m0[78u].z) * _2301;
        vec4 _2424 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_759, _760));
        float _2426 = _2424.x;
        float _2447 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2426)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2426))) - _683) * 3.0;
        float _3617 = isnan(0.0) ? _2447 : (isnan(_2447) ? 0.0 : max(_2447, 0.0));
        _2449 = _2306 * (isnan(1.0) ? _3617 : (isnan(_3617) ? 1.0 : min(_3617, 1.0)));
        float _2450 = _748 + (-0.5);
        _2452 = cbMtdParam._m0[1u];
        _2454 = _2452.y * _2450;
        _2456 = cbMatDynParam._m0[0u];
        float _2463 = (roundEven(_2456.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2464 = _2463 * (_2406 ? _2414 : (_2414 + (cbSceneParam._m0[72u].w * _2388)));
        _2465 = _2463 * (_2406 ? _2415 : (_2415 + (cbSceneParam._m0[72u].w * _2390)));
        _2466 = _2463 * (_2406 ? _2416 : (_2416 + (cbSceneParam._m0[72u].w * _2392)));
        _2467 = _2450 * 0.999000012874603271484375;
        _2477 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2477)
        {
            if ((cbInstanceData._m0[_773 + 7u].x + _2467) < 0.5)
            {
                _2627 = true;
                break;
            }
        }
        uint _2556 = _774 + uint(_2456.w);
        if ((cbInstanceData._m0[_2556].w < 1.0) && ((cbInstanceData._m0[_2556].w + _2467) < 0.5))
        {
            _2627 = true;
            break;
        }
        if ((_2454 + 1.0) < _2452.x)
        {
            _2627 = true;
            break;
        }
        _2627 = false;
        break;
    }
    float _2658;
    if (_2627)
    {
        discard_state = true;
        _2658 = 0.0;
    }
    else
    {
        _2658 = _2449;
    }
    SV_Target.x = _2464;
    SV_Target.y = _2465;
    SV_Target.z = _2466;
    SV_Target.w = _2658;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2449;
    discard_exit();
}


