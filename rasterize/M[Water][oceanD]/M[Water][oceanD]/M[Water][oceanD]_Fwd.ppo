#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[22];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_Water_oceanD_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_oceanD_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_oceanD_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1155;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _187 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _188 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _189 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _195 = inversesqrt(dot(vec3(_187, _188, _189), vec3(_187, _188, _189)));
    float _196 = _195 * _187;
    float _197 = _195 * _188;
    float _198 = _195 * _189;
    float _202 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _203 = _202 * NORMAL.x;
    float _204 = _202 * NORMAL.y;
    float _205 = _202 * NORMAL.z;
    float _209 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _217;
    float _218;
    float _219;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _217 = (-0.0) - _203;
        _218 = (-0.0) - _204;
        _219 = (-0.0) - _205;
    }
    else
    {
        _217 = _203;
        _218 = _204;
        _219 = _205;
    }
    float _263 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _273 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _263);
    float _274 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _263);
    float _275 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _263);
    float _291 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    vec4 _308 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_2, SS_BumpMap), vec2((((_291 * cbMtdParam._m0[17u].w) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_291 * cbMtdParam._m0[18u].x) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _311 = _308.x;
    float _312 = _308.y;
    float _332 = cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].w;
    float _334 = (sqrt(((_273 * _273) + (_274 * _274)) + (_275 * _275)) - cbMtdParam._m0[12u].w) / (isnan(0.0) ? _332 : (isnan(_332) ? 0.0 : max(_332, 0.0)));
    float _341 = (cbMtdParam._m0[13u].z + _334) * cbMtdParam._m0[15u].x;
    float _2647 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
    vec4 _355 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _357 = _355.x;
    bool _364 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _380 = ((_364 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _357)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _357))) - POSITION_1.w) / (((isnan(1.0) ? _2647 : (isnan(_2647) ? 1.0 : min(_2647, 1.0))) * (cbMtdParam._m0[12u].z - cbMtdParam._m0[12u].x)) + cbMtdParam._m0[12u].x);
    float _2658 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _381 = isnan(1.0) ? _2658 : (isnan(_2658) ? 1.0 : min(_2658, 1.0));
    float _387 = 1.0 - (isnan(cbMtdParam._m0[16u].y) ? _381 : (isnan(_381) ? cbMtdParam._m0[16u].y : max(_381, cbMtdParam._m0[16u].y)));
    float _2674 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _388 = isnan(1.0) ? _2674 : (isnan(_2674) ? 1.0 : min(_2674, 1.0));
    float _389 = _308.z - _388;
    float _2685 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _390 = isnan(1.0) ? _2685 : (isnan(_2685) ? 1.0 : min(_2685, 1.0));
    float _401 = (_390 * 0.004999999888241291046142578125) + TEXCOORD.x;
    float _403 = (_390 * (-0.004999999888241291046142578125)) + TEXCOORD.y;
    vec4 _416 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((_401 + (cbMtdParam._m0[17u].y * _291)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_403 + (cbMtdParam._m0[17u].z * _291)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _420 = _416.z;
    vec4 _431 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((_401 + (cbMtdParam._m0[16u].w * _291)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_403 + (cbMtdParam._m0[17u].x * _291)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _435 = _431.z;
    float _438 = (_387 - _308.w) + (isnan(_435) ? _420 : (isnan(_420) ? _435 : max(_420, _435)));
    float _2701 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _442 = (TEXCOORD_5.x - _387) + cbMtdParam._m0[16u].x;
    float _443 = _442 * (isnan(1.0) ? _2701 : (isnan(_2701) ? 1.0 : min(_2701, 1.0)));
    float _455 = (_443 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[10u].x * _390);
    float _456 = (_443 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[10u].y * _390);
    float _457 = (_443 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[10u].z * _390);
    float _2712 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _459 = 1.0 - (isnan(1.0) ? _2712 : (isnan(_2712) ? 1.0 : min(_2712, 1.0)));
    float _466 = ((_459 - _455) * _388) + _455;
    float _467 = ((_459 - _456) * _388) + _456;
    float _468 = ((_459 - _457) * _388) + _457;
    float _473 = _334 / cbMtdParam._m0[15u].z;
    float _2723 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _476 = (1.0 - (isnan(1.0) ? _2723 : (isnan(_2723) ? 1.0 : min(_2723, 1.0)))) * cbMtdParam._m0[15u].y;
    float _489 = (cbMtdParam._m0[14u].w + _334) * cbMtdParam._m0[14u].x;
    float _2734 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _493 = ((isnan(1.0) ? _2734 : (isnan(_2734) ? 1.0 : min(_2734, 1.0))) * (cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].x)) + cbMtdParam._m0[11u].x;
    float _2745 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _494 = isnan(1.0) ? _2745 : (isnan(_2745) ? 1.0 : min(_2745, 1.0));
    float _503 = _334 / cbMtdParam._m0[14u].z;
    float _2756 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0));
    float _504 = isnan(1.0) ? _2756 : (isnan(_2756) ? 1.0 : min(_2756, 1.0));
    vec4 _524 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[18u].y * _291) + TEXCOORD.z) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[18u].z * _291) + TEXCOORD.w) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _533 = ((_431.x + (-0.5)) * 0.5) + _416.x;
    float _534 = ((_431.y + (-0.5)) * 0.5) + _416.y;
    float _542 = _390 * 0.119999997317790985107421875;
    float _544 = _390 * (-0.100000001490116119384765625);
    float _555 = cbMtdParam._m0[19u].y * TEXCOORD.x;
    float _556 = cbMtdParam._m0[19u].z * TEXCOORD.y;
    vec4 _565 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[18u].w * _291) + _542) + _555) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[19u].x * _291) + _544) + _556) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _584 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2((((_555 + _542) + (cbMtdParam._m0[19u].w * _291)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_556 + _544) + (cbMtdParam._m0[20u].x * _291)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _596 = (((0.5 - _533) * 0.10999999940395355224609375) + _533) + (((_565.x + (-1.0)) + _584.x) * cbMtdParam._m0[15u].w);
    float _597 = (((0.5 - _534) * 0.10999999940395355224609375) + _534) + (((_565.y + (-1.0)) + _584.y) * cbMtdParam._m0[15u].w);
    float _602 = ((_524.x - _596) * _504) + _596;
    float _603 = ((_524.y - _597) * _504) + _597;
    float _605 = _334 / cbMtdParam._m0[14u].y;
    float _2767 = isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : max(_605, 0.0));
    float _606 = isnan(1.0) ? _2767 : (isnan(_2767) ? 1.0 : min(_2767, 1.0));
    float _623 = ((((_494 * (0.5 - _311)) + _311) + (((_602 + (-0.5)) + ((0.5 - _602) * _606)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _624 = ((((_494 * (0.5 - _312)) + _312) + (((_603 + (-0.5)) + ((0.5 - _603) * _606)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _625 = dot(vec2(_623, _624), vec2(_623, _624));
    float _2778 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _630 = sqrt(1.0 - (isnan(1.0) ? _2778 : (isnan(_2778) ? 1.0 : min(_2778, 1.0))));
    float _638 = (cbMtdParam._m0[13u].y + _334) * cbMtdParam._m0[13u].w;
    float _2789 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
    float _640 = (isnan(1.0) ? _2789 : (isnan(_2789) ? 1.0 : min(_2789, 1.0))) * cbMtdParam._m0[16u].z;
    float _2800 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _641 = isnan(1.0) ? _2800 : (isnan(_2800) ? 1.0 : min(_2800, 1.0));
    float _654 = fma(_630, _217, fma(_624, _209 * TANGENT.x, _623 * _196));
    float _657 = fma(_630, _218, fma(_624, _209 * TANGENT.y, _623 * _197));
    float _660 = fma(_630, _219, fma(_624, _209 * TANGENT.z, _623 * _198));
    float _664 = inversesqrt(dot(vec3(_654, _657, _660), vec3(_654, _657, _660)));
    float _665 = _664 * _654;
    float _666 = _664 * _657;
    float _667 = _664 * _660;
    float _2811 = isnan(0.0) ? _476 : (isnan(_476) ? 0.0 : max(_476, 0.0));
    float _2822 = isnan(0.0) ? _493 : (isnan(_493) ? 0.0 : max(_493, 0.0));
    float _669 = isnan(1.0) ? _2822 : (isnan(_2822) ? 1.0 : min(_2822, 1.0));
    float _2833 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _2844 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _2855 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _677 = _364 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _717 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _726 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _717);
    float _727 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _717);
    float _728 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _717);
    float _732 = inversesqrt(dot(vec3(_726, _727, _728), vec3(_726, _727, _728)));
    float _733 = _726 * _732;
    float _734 = _727 * _732;
    float _735 = _728 * _732;
    float _740 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _741 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _754 = uint(roundEven(NORMAL.w)) * 13u;
    uint _756 = (_754 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _762 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2833 : (isnan(_2833) ? 1.0 : min(_2833, 1.0)))) * cbInstanceData._m0[_756].x;
    float _763 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2844 : (isnan(_2844) ? 1.0 : min(_2844, 1.0)))) * cbInstanceData._m0[_756].y;
    float _764 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2855 : (isnan(_2855) ? 1.0 : min(_2855, 1.0)))) * cbInstanceData._m0[_756].z;
    float _2866 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _765 = isnan(1.0) ? _2866 : (isnan(_2866) ? 1.0 : min(_2866, 1.0));
    float _2877 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _766 = isnan(1.0) ? _2877 : (isnan(_2877) ? 1.0 : min(_2877, 1.0));
    float _2888 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _767 = isnan(1.0) ? _2888 : (isnan(_2888) ? 1.0 : min(_2888, 1.0));
    vec4 _776 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _740, cbSceneParam._m0[86u].y * _741));
    float _779 = _776.x * TEXCOORD_5.w;
    float _780 = dot(vec3(_665, _666, _667), vec3(_733, _734, _735));
    float _783 = _780 * 2.0;
    float _787 = (_783 * _665) - _733;
    float _788 = (_783 * _666) - _734;
    float _789 = (_783 * _667) - _735;
    float _793 = abs(dot(vec3(_733, _734, _735), vec3(_665, _666, _667)));
    float _2899 = isnan(0.0) ? _793 : (isnan(_793) ? 0.0 : max(_793, 0.0));
    float _794 = isnan(1.0) ? _2899 : (isnan(_2899) ? 1.0 : min(_2899, 1.0));
    float _802 = 10.0 / (_677 + 10.0);
    float _803 = sqrt(_669);
    float _815 = exp2((_803 * 5.0) * log2(1.0 - (_794 * 0.999000012874603271484375))) / (4.0 - (_803 * 3.0));
    float _846 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _850 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _854 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1154;
    float _1156;
    float _1157;
    float _1158;
    float _1159;
    float _1160;
    float _1161;
    float _1162;
    float _1163;
    float _1164;
    float _1165;
    float _1166;
    float _1167;
    float _1168;
    float _1169;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _881 = fma(_854, cbModelParam._m0[26u].z, fma(_850, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _846));
        float _885 = fma(_854, cbModelParam._m0[27u].z, fma(_850, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _846));
        float _889 = fma(_854, cbModelParam._m0[28u].z, fma(_850, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _846));
        float _912 = _846 + _665;
        float _913 = _850 + _666;
        float _914 = _854 + _667;
        float _924 = fma(_914, cbModelParam._m0[26u].z, fma(_913, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _912)) - _881;
        float _925 = fma(_914, cbModelParam._m0[27u].z, fma(_913, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _912)) - _885;
        float _926 = fma(_914, cbModelParam._m0[28u].z, fma(_913, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _912)) - _889;
        float _930 = inversesqrt(dot(vec3(_924, _925, _926), vec3(_924, _925, _926)));
        float _943 = ((_930 * _924) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_881 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _944 = ((_930 * _925) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_885 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _945 = ((_930 * _926) / cbModelParam._m0[34u].z) + ((((((_889 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _948 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_943, _944, _945), 0.0);
        vec4 _955 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_943, _944, _945), 0.0);
        vec4 _962 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_943, _944, _945), 0.0);
        vec4 _969 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_943, _944, _945), 0.0);
        float _982 = exp2((_948.w + (-0.5)) * 20.0) * 2.0;
        float _983 = _982 * (_948.x + (-0.5));
        float _984 = _982 * (_948.y + (-0.5));
        float _985 = _982 * (_948.z + (-0.5));
        float _992 = exp2((_955.w + (-0.5)) * 20.0) * 2.0;
        float _993 = _992 * (_955.x + (-0.5));
        float _994 = _992 * (_955.y + (-0.5));
        float _995 = _992 * (_955.z + (-0.5));
        float _1002 = exp2((_962.w + (-0.5)) * 20.0) * 2.0;
        float _1003 = _1002 * (_962.x + (-0.5));
        float _1004 = _1002 * (_962.y + (-0.5));
        float _1005 = _1002 * (_962.z + (-0.5));
        float _1012 = exp2((_969.w + (-0.5)) * 20.0) * 2.0;
        float _1013 = _1012 * (_969.x + (-0.5));
        float _1014 = _1012 * (_969.y + (-0.5));
        float _1015 = _1012 * (_969.z + (-0.5));
        float _1016 = isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0));
        float _1017 = isnan(0.0) ? _1014 : (isnan(_1014) ? 0.0 : max(_1014, 0.0));
        float _1018 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
        float _1019 = _983 * 0.5;
        float _1020 = _993 * 0.5;
        float _1021 = _1003 * 0.5;
        float _1022 = dot(vec3(_1019, _1020, _1021), vec3(_1019, _1020, _1021));
        float _1027 = (_1022 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1022);
        float _1036 = (dot(vec3(_665, _666, _667), vec3(_1027 * _1019, _1027 * _1020, _1027 * _1021)) + 1.0) * 0.5;
        float _2925 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
        float _1046 = sqrt(((_1020 * _1020) + (_1019 * _1019)) + (_1021 * _1021)) / (_1016 + 9.9999997473787516355514526367188e-06);
        float _2936 = isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0));
        float _1047 = isnan(1.0) ? _2936 : (isnan(_2936) ? 1.0 : min(_2936, 1.0));
        float _1048 = _1047 * 2.0;
        float _1052 = (1.0 - _1047) / (_1047 + 1.0);
        float _2947 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
        float _1053 = isnan(1.0) ? _2947 : (isnan(_2947) ? 1.0 : min(_2947, 1.0));
        float _1062 = ((((1.0 - _1053) * (_1048 + 2.0)) * exp2(log2(isnan(1.0) ? _2925 : (isnan(_2925) ? 1.0 : min(_2925, 1.0))) * (_1048 + 1.0))) + _1053) * _1016;
        float _1063 = _984 * 0.5;
        float _1064 = _994 * 0.5;
        float _1065 = _1004 * 0.5;
        float _1066 = dot(vec3(_1063, _1064, _1065), vec3(_1063, _1064, _1065));
        float _1071 = (_1066 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1066);
        float _1079 = (dot(vec3(_665, _666, _667), vec3(_1071 * _1063, _1071 * _1064, _1071 * _1065)) + 1.0) * 0.5;
        float _2958 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
        float _1088 = sqrt(((_1064 * _1064) + (_1063 * _1063)) + (_1065 * _1065)) / (_1017 + 9.9999997473787516355514526367188e-06);
        float _2969 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
        float _1089 = isnan(1.0) ? _2969 : (isnan(_2969) ? 1.0 : min(_2969, 1.0));
        float _1090 = _1089 * 2.0;
        float _1094 = (1.0 - _1089) / (_1089 + 1.0);
        float _2980 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
        float _1095 = isnan(1.0) ? _2980 : (isnan(_2980) ? 1.0 : min(_2980, 1.0));
        float _1104 = ((((1.0 - _1095) * (_1090 + 2.0)) * exp2(log2(isnan(1.0) ? _2958 : (isnan(_2958) ? 1.0 : min(_2958, 1.0))) * (_1090 + 1.0))) + _1095) * _1017;
        float _1105 = _985 * 0.5;
        float _1106 = _995 * 0.5;
        float _1107 = _1005 * 0.5;
        float _1108 = dot(vec3(_1105, _1106, _1107), vec3(_1105, _1106, _1107));
        float _1113 = (_1108 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1108);
        float _1121 = (dot(vec3(_665, _666, _667), vec3(_1113 * _1105, _1113 * _1106, _1113 * _1107)) + 1.0) * 0.5;
        float _2991 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
        float _1130 = sqrt(((_1106 * _1106) + (_1105 * _1105)) + (_1107 * _1107)) / (_1018 + 9.9999997473787516355514526367188e-06);
        float _3002 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
        float _1131 = isnan(1.0) ? _3002 : (isnan(_3002) ? 1.0 : min(_3002, 1.0));
        float _1132 = _1131 * 2.0;
        float _1136 = (1.0 - _1131) / (_1131 + 1.0);
        float _3013 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
        float _1137 = isnan(1.0) ? _3013 : (isnan(_3013) ? 1.0 : min(_3013, 1.0));
        float _1146 = ((((1.0 - _1137) * (_1132 + 2.0)) * exp2(log2(isnan(1.0) ? _2991 : (isnan(_2991) ? 1.0 : min(_2991, 1.0))) * (_1132 + 1.0))) + _1137) * _1018;
        _1154 = _985;
        _1156 = _984;
        _1157 = _983;
        _1158 = _995;
        _1159 = _994;
        _1160 = _993;
        _1161 = _1005;
        _1162 = _1004;
        _1163 = _1003;
        _1164 = _1018;
        _1165 = _1017;
        _1166 = _1016;
        _1167 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0)));
        _1168 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0)));
        _1169 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0)));
    }
    else
    {
        _1154 = _1155;
        _1156 = _1155;
        _1157 = _1155;
        _1158 = _1155;
        _1159 = _1155;
        _1160 = _1155;
        _1161 = _1155;
        _1162 = _1155;
        _1163 = _1155;
        _1164 = _1155;
        _1165 = _1155;
        _1166 = _1155;
        _1167 = 0.0;
        _1168 = 0.0;
        _1169 = 0.0;
    }
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1195 = fma(_854, cbModelParam._m0[30u].z, fma(_850, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _846));
        float _1199 = fma(_854, cbModelParam._m0[31u].z, fma(_850, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _846));
        float _1203 = fma(_854, cbModelParam._m0[32u].z, fma(_850, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _846));
        float _1226 = _846 + _665;
        float _1227 = _850 + _666;
        float _1228 = _854 + _667;
        float _1238 = fma(_1228, cbModelParam._m0[30u].z, fma(_1227, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1226)) - _1195;
        float _1239 = fma(_1228, cbModelParam._m0[31u].z, fma(_1227, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1226)) - _1199;
        float _1240 = fma(_1228, cbModelParam._m0[32u].z, fma(_1227, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1226)) - _1203;
        float _1244 = inversesqrt(dot(vec3(_1238, _1239, _1240), vec3(_1238, _1239, _1240)));
        float _1257 = ((_1244 * _1238) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1195 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1258 = ((_1244 * _1239) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1199 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1259 = ((_1244 * _1240) / cbModelParam._m0[35u].z) + ((((((_1203 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1261 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1257, _1258, _1259), 0.0);
        vec4 _1268 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1257, _1258, _1259), 0.0);
        vec4 _1275 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1257, _1258, _1259), 0.0);
        vec4 _1282 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1257, _1258, _1259), 0.0);
        float _1294 = exp2((_1261.w + (-0.5)) * 20.0) * 2.0;
        float _1295 = _1294 * (_1261.x + (-0.5));
        float _1296 = _1294 * (_1261.y + (-0.5));
        float _1297 = _1294 * (_1261.z + (-0.5));
        float _1304 = exp2((_1268.w + (-0.5)) * 20.0) * 2.0;
        float _1305 = _1304 * (_1268.x + (-0.5));
        float _1306 = _1304 * (_1268.y + (-0.5));
        float _1307 = _1304 * (_1268.z + (-0.5));
        float _1314 = exp2((_1275.w + (-0.5)) * 20.0) * 2.0;
        float _1315 = _1314 * (_1275.x + (-0.5));
        float _1316 = _1314 * (_1275.y + (-0.5));
        float _1317 = _1314 * (_1275.z + (-0.5));
        float _1324 = exp2((_1282.w + (-0.5)) * 20.0) * 2.0;
        float _1325 = _1324 * (_1282.x + (-0.5));
        float _1326 = _1324 * (_1282.y + (-0.5));
        float _1327 = _1324 * (_1282.z + (-0.5));
        float _1328 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1329 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1330 = isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0));
        float _1331 = _1295 * 0.5;
        float _1332 = _1305 * 0.5;
        float _1333 = _1315 * 0.5;
        float _1334 = dot(vec3(_1331, _1332, _1333), vec3(_1331, _1332, _1333));
        float _1339 = (_1334 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1334);
        float _1347 = (dot(vec3(_665, _666, _667), vec3(_1339 * _1331, _1339 * _1332, _1339 * _1333)) + 1.0) * 0.5;
        float _3054 = isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0));
        float _1356 = sqrt(((_1332 * _1332) + (_1331 * _1331)) + (_1333 * _1333)) / (_1328 + 9.9999997473787516355514526367188e-06);
        float _3065 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1357 = isnan(1.0) ? _3065 : (isnan(_3065) ? 1.0 : min(_3065, 1.0));
        float _1358 = _1357 * 2.0;
        float _1362 = (1.0 - _1357) / (_1357 + 1.0);
        float _3076 = isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0));
        float _1363 = isnan(1.0) ? _3076 : (isnan(_3076) ? 1.0 : min(_3076, 1.0));
        float _1372 = ((((1.0 - _1363) * (_1358 + 2.0)) * exp2(log2(isnan(1.0) ? _3054 : (isnan(_3054) ? 1.0 : min(_3054, 1.0))) * (_1358 + 1.0))) + _1363) * _1328;
        float _1373 = _1296 * 0.5;
        float _1374 = _1306 * 0.5;
        float _1375 = _1316 * 0.5;
        float _1376 = dot(vec3(_1373, _1374, _1375), vec3(_1373, _1374, _1375));
        float _1381 = (_1376 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1376);
        float _1389 = (dot(vec3(_665, _666, _667), vec3(_1381 * _1373, _1381 * _1374, _1381 * _1375)) + 1.0) * 0.5;
        float _3087 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
        float _1398 = sqrt(((_1374 * _1374) + (_1373 * _1373)) + (_1375 * _1375)) / (_1329 + 9.9999997473787516355514526367188e-06);
        float _3098 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1399 = isnan(1.0) ? _3098 : (isnan(_3098) ? 1.0 : min(_3098, 1.0));
        float _1400 = _1399 * 2.0;
        float _1404 = (1.0 - _1399) / (_1399 + 1.0);
        float _3109 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1405 = isnan(1.0) ? _3109 : (isnan(_3109) ? 1.0 : min(_3109, 1.0));
        float _1414 = ((((1.0 - _1405) * (_1400 + 2.0)) * exp2(log2(isnan(1.0) ? _3087 : (isnan(_3087) ? 1.0 : min(_3087, 1.0))) * (_1400 + 1.0))) + _1405) * _1329;
        float _1415 = _1297 * 0.5;
        float _1416 = _1307 * 0.5;
        float _1417 = _1317 * 0.5;
        float _1418 = dot(vec3(_1415, _1416, _1417), vec3(_1415, _1416, _1417));
        float _1423 = (_1418 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1418);
        float _1431 = (dot(vec3(_665, _666, _667), vec3(_1423 * _1415, _1423 * _1416, _1423 * _1417)) + 1.0) * 0.5;
        float _3120 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1440 = sqrt(((_1416 * _1416) + (_1415 * _1415)) + (_1417 * _1417)) / (_1330 + 9.9999997473787516355514526367188e-06);
        float _3131 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1441 = isnan(1.0) ? _3131 : (isnan(_3131) ? 1.0 : min(_3131, 1.0));
        float _1442 = _1441 * 2.0;
        float _1446 = (1.0 - _1441) / (_1441 + 1.0);
        float _3142 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1447 = isnan(1.0) ? _3142 : (isnan(_3142) ? 1.0 : min(_3142, 1.0));
        float _1456 = ((((1.0 - _1447) * (_1442 + 2.0)) * exp2(log2(isnan(1.0) ? _3120 : (isnan(_3120) ? 1.0 : min(_3120, 1.0))) * (_1442 + 1.0))) + _1447) * _1330;
        _1464 = _1297;
        _1465 = _1296;
        _1466 = _1295;
        _1467 = _1307;
        _1468 = _1306;
        _1469 = _1305;
        _1470 = _1317;
        _1471 = _1316;
        _1472 = _1315;
        _1473 = _1330;
        _1474 = _1329;
        _1475 = _1328;
        _1476 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0)));
        _1477 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0)));
        _1478 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0)));
    }
    else
    {
        _1464 = _1155;
        _1465 = _1155;
        _1466 = _1155;
        _1467 = _1155;
        _1468 = _1155;
        _1469 = _1155;
        _1470 = _1155;
        _1471 = _1155;
        _1472 = _1155;
        _1473 = _1155;
        _1474 = _1155;
        _1475 = _1155;
        _1476 = 0.0;
        _1477 = 0.0;
        _1478 = 0.0;
    }
    float _1488 = (cbModelParam._m0[1u].x * (_1476 - _1167)) + _1167;
    float _1489 = (cbModelParam._m0[1u].x * (_1477 - _1168)) + _1168;
    float _1490 = (cbModelParam._m0[1u].x * (_1478 - _1169)) + _1169;
    float _1511 = fma(_1490, cbSceneParam._m0[89u].z, fma(_1489, cbSceneParam._m0[89u].y, _1488 * cbSceneParam._m0[89u].x));
    float _1514 = fma(_1490, cbSceneParam._m0[90u].z, fma(_1489, cbSceneParam._m0[90u].y, _1488 * cbSceneParam._m0[90u].x));
    float _1517 = fma(_1490, cbSceneParam._m0[91u].z, fma(_1489, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1488));
    float _1532 = _787 * 0.5;
    float _1533 = _788 * 0.5;
    float _1534 = _789 * 0.5;
    float _1535 = dot(vec4(_1532, _1533, _1534, 1.0), vec4(_1466, _1469, _1472, _1475));
    float _1538 = dot(vec4(_1532, _1533, _1534, 1.0), vec4(_1465, _1468, _1471, _1474));
    float _1541 = dot(vec4(_1532, _1533, _1534, 1.0), vec4(_1464, _1467, _1470, _1473));
    float _1575;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1548 = dot(vec4(_1532, _1533, _1534, 1.0), vec4(_1154, _1158, _1161, _1164));
        float _1552 = dot(vec4(_1532, _1533, _1534, 1.0), vec4(_1156, _1159, _1162, _1165));
        float _1556 = dot(vec4(_1532, _1533, _1534, 1.0), vec4(_1157, _1160, _1163, _1166));
        float _1563 = dot(vec4(cbModelParam._m0[39u]), vec4(_1532, _1533, _1534, 1.0));
        _1575 = dot(vec3(isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0)), isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0)), isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1563) ? 0.0 : (isnan(0.0) ? _1563 : max(0.0, _1563))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1575 = 1.0;
    }
    float _1586;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1577 = dot(vec4(cbModelParam._m0[40u]), vec4(_1532, _1533, _1534, 1.0));
        _1586 = dot(vec3(isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0)), isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0)), isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1577) ? 0.0 : (isnan(0.0) ? _1577 : max(0.0, _1577))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1586 = 1.0;
    }
    float _1590 = (_1586 * cbModelParam._m0[1u].x) + (_1575 * (1.0 - cbModelParam._m0[1u].x));
    float _1600 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _669);
    float _1601 = isnan(_1600) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1600 : min(cbModelParam._m0[25u].z, _1600));
    float _1682;
    float _1684;
    float _1686;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1649 = fma(_854, cbModelParam._m0[13u].z, fma(_850, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _846)) + cbModelParam._m0[13u].w;
        float _1653 = fma(_854, cbModelParam._m0[14u].z, fma(_850, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _846)) + cbModelParam._m0[14u].w;
        float _1657 = fma(_854, cbModelParam._m0[15u].z, fma(_850, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _846)) + cbModelParam._m0[15u].w;
        float _1660 = fma(_789, cbModelParam._m0[13u].z, fma(_788, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _787));
        float _1663 = fma(_789, cbModelParam._m0[14u].z, fma(_788, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _787));
        float _1666 = fma(_789, cbModelParam._m0[15u].z, fma(_788, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _787));
        float _1694;
        if (_1660 > 0.0)
        {
            _1694 = abs((1.0 - _1649) / _1660);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1660 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1649 + 1.0) / _1660);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1694 = frontier_phi_16_14_ladder;
        }
        float _2095;
        if (_1663 > 0.0)
        {
            _2095 = abs((1.0 - _1653) / _1663);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1663 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1653 + 1.0) / _1663);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2095 = frontier_phi_25_21_ladder;
        }
        float _2391;
        if (_1666 > 0.0)
        {
            _2391 = abs((1.0 - _1657) / _1666);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1666 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1657 + 1.0) / _1666);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2391 = frontier_phi_37_32_ladder;
        }
        float _2393 = isnan(_2095) ? _1694 : (isnan(_1694) ? _2095 : min(_1694, _2095));
        float _2394 = isnan(_2391) ? _2393 : (isnan(_2393) ? _2391 : min(_2393, _2391));
        float _2398 = (_2394 * _1660) + _1649;
        float _2399 = (_2394 * _1663) + _1653;
        float _2400 = (_2394 * _1666) + _1657;
        float _2401 = _2394 * 9.9999997473787516355514526367188e-05;
        float _2402 = (-1.0) - _2401;
        float _2404 = _2401 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2400 > _2404) || ((_2400 < _2402) || ((_2399 > _2404) || ((_2399 < _2402) || ((_2398 < _2402) || (_2398 > _2404))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2477 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2400, cbModelParam._m0[9u].z, fma(_2399, cbModelParam._m0[9u].y, _2398 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2400, cbModelParam._m0[10u].z, fma(_2399, cbModelParam._m0[10u].y, _2398 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2400, cbModelParam._m0[11u].z, fma(_2399, cbModelParam._m0[11u].y, _2398 * cbModelParam._m0[11u].x))), _1601);
            frontier_phi_15_37_ladder = _2477.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2477.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2477.x * cbModelParam._m0[1u].y;
        }
        _1682 = frontier_phi_15_37_ladder_2;
        _1684 = frontier_phi_15_37_ladder_1;
        _1686 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1670 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_787, _788, _789), _1601);
        _1682 = _1670.x * cbModelParam._m0[1u].y;
        _1684 = _1670.y * cbModelParam._m0[1u].y;
        _1686 = _1670.z * cbModelParam._m0[1u].y;
    }
    float _1690 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _669);
    float _1691 = isnan(_1690) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1690 : min(cbModelParam._m0[25u].w, _1690));
    float _1780;
    float _1782;
    float _1784;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1744 = fma(_854, cbModelParam._m0[21u].z, fma(_850, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _846)) + cbModelParam._m0[21u].w;
        float _1748 = fma(_854, cbModelParam._m0[22u].z, fma(_850, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _846)) + cbModelParam._m0[22u].w;
        float _1752 = fma(_854, cbModelParam._m0[23u].z, fma(_850, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _846)) + cbModelParam._m0[23u].w;
        float _1755 = fma(_789, cbModelParam._m0[21u].z, fma(_788, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _787));
        float _1758 = fma(_789, cbModelParam._m0[22u].z, fma(_788, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _787));
        float _1761 = fma(_789, cbModelParam._m0[23u].z, fma(_788, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _787));
        float _2100;
        if (_1755 > 0.0)
        {
            _2100 = abs((1.0 - _1744) / _1755);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1755 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1744 + 1.0) / _1755);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2100 = frontier_phi_27_23_ladder;
        }
        float _2417;
        if (_1758 > 0.0)
        {
            _2417 = abs((1.0 - _1748) / _1758);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1758 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1748 + 1.0) / _1758);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2417 = frontier_phi_39_34_ladder;
        }
        float _2524;
        if (_1761 > 0.0)
        {
            _2524 = abs((1.0 - _1752) / _1761);
        }
        else
        {
            float frontier_phi_47_45_ladder;
            if (_1761 < 0.0)
            {
                frontier_phi_47_45_ladder = abs((_1752 + 1.0) / _1761);
            }
            else
            {
                frontier_phi_47_45_ladder = 5000.0;
            }
            _2524 = frontier_phi_47_45_ladder;
        }
        float _2526 = isnan(_2417) ? _2100 : (isnan(_2100) ? _2417 : min(_2100, _2417));
        float _2527 = isnan(_2524) ? _2526 : (isnan(_2526) ? _2524 : min(_2526, _2524));
        float _2531 = (_2527 * _1755) + _1744;
        float _2532 = (_2527 * _1758) + _1748;
        float _2533 = (_2527 * _1761) + _1752;
        float _2534 = _2527 * 9.9999997473787516355514526367188e-05;
        float _2535 = (-1.0) - _2534;
        float _2537 = _2534 + 1.0;
        float frontier_phi_24_47_ladder;
        float frontier_phi_24_47_ladder_1;
        float frontier_phi_24_47_ladder_2;
        if ((_2533 > _2537) || ((_2533 < _2535) || ((_2532 > _2537) || ((_2532 < _2535) || ((_2531 < _2535) || (_2531 > _2537))))))
        {
            frontier_phi_24_47_ladder = 0.0;
            frontier_phi_24_47_ladder_1 = 0.0;
            frontier_phi_24_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2566 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2533, cbModelParam._m0[17u].z, fma(_2532, cbModelParam._m0[17u].y, _2531 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2533, cbModelParam._m0[18u].z, fma(_2532, cbModelParam._m0[18u].y, _2531 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2533, cbModelParam._m0[19u].z, fma(_2532, cbModelParam._m0[19u].y, _2531 * cbModelParam._m0[19u].x))), _1691);
            frontier_phi_24_47_ladder = _2566.z * cbModelParam._m0[1u].z;
            frontier_phi_24_47_ladder_1 = _2566.y * cbModelParam._m0[1u].z;
            frontier_phi_24_47_ladder_2 = _2566.x * cbModelParam._m0[1u].z;
        }
        _1780 = frontier_phi_24_47_ladder_2;
        _1782 = frontier_phi_24_47_ladder_1;
        _1784 = frontier_phi_24_47_ladder;
    }
    else
    {
        vec4 _1764 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_787, _788, _789), _1691);
        _1780 = _1764.x * cbModelParam._m0[1u].z;
        _1782 = _1764.y * cbModelParam._m0[1u].z;
        _1784 = _1764.z * cbModelParam._m0[1u].z;
    }
    float _1796 = ((((1.0 - _815) * ((_803 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_815 * _803)) * _779;
    float _1797 = _1796 * ((cbModelParam._m0[1u].w * (_1780 - _1682)) + _1682);
    float _1798 = _1796 * ((cbModelParam._m0[1u].w * (_1782 - _1684)) + _1684);
    float _1799 = _1796 * ((cbModelParam._m0[1u].w * (_1784 - _1686)) + _1686);
    float _1802 = fma(_1799, cbSceneParam._m0[89u].z, fma(_1798, cbSceneParam._m0[89u].y, _1797 * cbSceneParam._m0[89u].x));
    float _1805 = fma(_1799, cbSceneParam._m0[90u].z, fma(_1798, cbSceneParam._m0[90u].y, _1797 * cbSceneParam._m0[90u].x));
    float _1808 = fma(_1799, cbSceneParam._m0[91u].z, fma(_1798, cbSceneParam._m0[91u].y, _1797 * cbSceneParam._m0[91u].x));
    float _1819 = _740 / cbSceneParam._m0[86u].x;
    float _1827 = (cbSceneParam._m0[88u].y * (1.0 - _669)) + cbSceneParam._m0[88u].z;
    float _3268 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
    float _1829 = (isnan(1.0) ? _3268 : (isnan(_3268) ? 1.0 : min(_3268, 1.0))) * 5.0;
    float _1834 = (_802 * cbMtdParam._m0[11u].w) * dot(vec3(_665, _666, _667), vec3(1.0, 0.0, 0.0));
    vec4 _1844 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_1834 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_1834 + _1819) * cbSceneParam._m0[86u].x, _741), _1829).w) + _1819) * cbSceneParam._m0[86u].x, _741), _1829);
    float _1860 = 1.0 - _1844.w;
    uint _1867 = _754 + 5u;
    uint _1873 = floatBitsToUint(cbInstanceData._m0[_1867]).x * 14u;
    float _1880 = (cbLight._m0[_1873 + 13u].x * (_779 + (-1.0))) + 1.0;
    uint _1881 = _1873 + 4u;
    float _1888 = isnan(1.0) ? _1880 : (isnan(_1880) ? 1.0 : min(_1880, 1.0));
    float _1897 = dot(vec3(cbLight._m0[_1873].xyz), vec3(_665, _666, _667));
    float _3284 = isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0));
    float _1901 = (isnan(1.0) ? _3284 : (isnan(_3284) ? 1.0 : min(_3284, 1.0))) * 0.3183098733425140380859375;
    uint _1907 = _1873 + 8u;
    float _1920 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1873].w)) * _669) * 0.949999988079071044921875);
    float _1921 = _1920 * _1920;
    float _1922 = cbLight._m0[_1873].x + _733;
    float _1923 = cbLight._m0[_1873].y + _734;
    float _1924 = cbLight._m0[_1873].z + _735;
    float _1928 = inversesqrt(dot(vec3(_1922, _1923, _1924), vec3(_1922, _1923, _1924)));
    float _1929 = _1928 * _1922;
    float _1930 = _1928 * _1923;
    float _1931 = _1928 * _1924;
    float _1932 = dot(vec3(_665, _666, _667), vec3(cbLight._m0[_1873].xyz));
    float _3295 = isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0));
    float _1935 = isnan(1.0) ? _3295 : (isnan(_3295) ? 1.0 : min(_3295, 1.0));
    float _3306 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _1936 = isnan(1.0) ? _3306 : (isnan(_3306) ? 1.0 : min(_3306, 1.0));
    float _1937 = dot(vec3(_665, _666, _667), vec3(_1929, _1930, _1931));
    float _3317 = isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0));
    float _1940 = isnan(1.0) ? _3317 : (isnan(_3317) ? 1.0 : min(_3317, 1.0));
    float _1941 = dot(vec3(cbLight._m0[_1873].xyz), vec3(_1929, _1930, _1931));
    float _3328 = isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0));
    float _1945 = _1921 * _1921;
    float _1949 = ((_1940 * _1940) * (_1945 + (-1.0))) + 1.0;
    float _1960 = (exp2(log2(1.0 - (isnan(1.0) ? _3328 : (isnan(_3328) ? 1.0 : min(_3328, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1961 = 1.0 - _1921;
    float _1972 = (0.5 / (((_1936 * ((_1935 * _1961) + _1921)) + 9.9999999392252902907785028219223e-09) + (((_1936 * _1961) + _1921) * _1935))) * _1935;
    float _3339 = isnan(0.0) ? _1972 : (isnan(_1972) ? 0.0 : max(_1972, 0.0));
    float _1974 = (isnan(1.0) ? _3339 : (isnan(_3339) ? 1.0 : min(_3339, 1.0))) * (_1945 / ((_1949 * _1949) * 3.141590118408203125));
    float _1999 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2000 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2001 = cbSceneParam._m0[86u].x * (_1819 + ((_802 * cbMtdParam._m0[11u].y) * dot(vec3(_665, _666, _667), vec3(_196, _197, _198))));
    float _2002 = isnan(_1999) ? _2001 : (isnan(_2001) ? _1999 : min(_2001, _1999));
    float _2003 = isnan(_2000) ? _741 : (isnan(_741) ? _2000 : min(_741, _2000));
    vec4 _2005 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2002, _2003), 0.0);
    float _2007 = _2005.x;
    bool _2027 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2007)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2007))) > _677;
    float _2028 = _2027 ? _2002 : _740;
    float _2029 = _2027 ? _2003 : _741;
    vec4 _2031 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2028, _2029));
    vec4 _2036 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2028, _2029));
    float _2038 = _2036.x;
    bool _2043 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2052 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2058 = (_2043 ? (_2052 / (cbSceneParam._m0[2u].x - _2038)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2038))) - _677;
    float _2060 = cbMtdParam._m0[21u].x + cbMtdParam._m0[20u].y;
    float _2061 = cbMtdParam._m0[21u].y + cbMtdParam._m0[20u].z;
    float _2062 = cbMtdParam._m0[21u].z + cbMtdParam._m0[20u].w;
    bool _2068 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2072 = (isnan(_2058) ? 0.0 : (isnan(0.0) ? _2058 : max(0.0, _2058))) * (-1.44269502162933349609375);
    float _3365 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
    float _3376 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    float _3387 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
    float _2187;
    float _2188;
    float _2189;
    if ((1.0 - _641) > 0.00999999977648258209228515625)
    {
        vec4 _2106 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2028, _2029), 0.0);
        float _2108 = _2106.x;
        float _2114 = (_2043 ? (_2052 / (cbSceneParam._m0[2u].x - _2108)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2108))) - _677;
        uint _2120 = floatBitsToUint(cbInstanceData._m0[_1867]).x * 14u;
        uint _2126 = _2120 + 4u;
        float _2135 = dot(vec3(cbLight._m0[_2120].xyz), vec3(_217, _218, _219));
        float _2143 = dot(vec3((-0.0) - _733, (-0.0) - _734, (-0.0) - _735), vec3((-0.0) - _217, (-0.0) - _218, (-0.0) - _219));
        float _2148 = ((isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : max(_2143, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2135 : (isnan(_2135) ? 0.001000000047497451305389404296875 : max(_2135, 0.001000000047497451305389404296875)))) + 1.0;
        float _2150 = (-0.0) - ((isnan(_2114) ? 0.0 : (isnan(0.0) ? _2114 : max(0.0, _2114))) * _2148);
        _2187 = _2068 ? 0.0 : ((((cbMtdParam._m0[20u].y * 0.079577468335628509521484375) * cbLight._m0[_2126].x) / ((_2148 * _2060) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2060 * 1.44269502162933349609375) * _2150)));
        _2188 = _2068 ? 0.0 : ((((cbMtdParam._m0[20u].z * 0.079577468335628509521484375) * cbLight._m0[_2126].y) / ((_2148 * _2061) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2061 * 1.44269502162933349609375) * _2150)));
        _2189 = _2068 ? 0.0 : ((((cbMtdParam._m0[20u].w * 0.079577468335628509521484375) * cbLight._m0[_2126].z) / ((_2148 * _2062) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2062 * 1.44269502162933349609375) * _2150)));
    }
    else
    {
        _2187 = 0.0;
        _2188 = 0.0;
        _2189 = 0.0;
    }
    float _2206 = 0.959999978542327880859375 - (exp2(log2(1.0 - _794) * 5.0) * 0.959999978542327880859375);
    float _2207 = (_2187 + ((exp2(_2072 * (_2068 ? 0.0 : _2060)) * _2031.x) * cbSceneParam._m0[72u].w)) * _2206;
    float _2208 = (_2188 + ((exp2(_2072 * (_2068 ? 0.0 : _2061)) * _2031.y) * cbSceneParam._m0[72u].w)) * _2206;
    float _2209 = (_2189 + ((exp2(_2072 * (_2068 ? 0.0 : _2062)) * _2031.z) * cbSceneParam._m0[72u].w)) * _2206;
    float _2232 = _740 / cbSceneParam._m0[86u].x;
    float _2233 = _741 / cbSceneParam._m0[86u].y;
    vec4 _2247 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2232, _2233, (log2((isnan(cbSceneParam._m0[77u].w) ? _677 : (isnan(_677) ? cbSceneParam._m0[77u].w : min(_677, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2249 = _2247.x;
    float _2250 = _2247.y;
    float _2251 = _2247.z;
    float _2252 = _2247.w;
    float _2309;
    float _2311;
    float _2313;
    float _2315;
    if (_677 > cbSceneParam._m0[78u].w)
    {
        float _2273 = isnan(_677) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _677 : min(cbSceneParam._m0[80u].w, _677));
        float _2274 = _2273 / _677;
        float _2285 = _2274 * _726;
        float _2286 = _727 * _2274;
        float _2287 = (-0.0) - _2286;
        float _2288 = _2274 * _728;
        float _2290 = (cbSceneParam._m0[77u].w * _2287) / _2273;
        float _2291 = _2290 + cbSceneParam._m0[79u].w;
        float _2292 = cbSceneParam._m0[79u].w - _2286;
        float _2298 = sqrt(((_2285 * _2285) + (_2286 * _2286)) + (_2288 * _2288));
        float _2301 = (1.0 - (cbSceneParam._m0[77u].w / _2273)) * _2298;
        float _2307 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2308 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2486;
        if (abs((_2287 - _2290) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2486 = ((((_2291 > 0.0) ? exp2(_2307 * _2291) : (2.0 - exp2(_2308 * _2291))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2301;
        }
        else
        {
            float _2434 = 1.0 / cbSceneParam._m0[80u].x;
            float _2435 = isnan(_2292) ? _2291 : (isnan(_2291) ? _2292 : max(_2291, _2292));
            float _2436 = isnan(_2292) ? _2291 : (isnan(_2291) ? _2292 : min(_2291, _2292));
            float _2445 = isnan(0.0) ? _2435 : (isnan(_2435) ? 0.0 : min(_2435, 0.0));
            float _2446 = isnan(0.0) ? _2436 : (isnan(_2436) ? 0.0 : min(_2436, 0.0));
            _2486 = ((abs(_2298 / _2287) * cbSceneParam._m0[80u].y) * ((((_2445 - _2446) * 2.0) - ((exp2(_2307 * (isnan(0.0) ? _2435 : (isnan(_2435) ? 0.0 : max(_2435, 0.0)))) - exp2(_2307 * (isnan(0.0) ? _2436 : (isnan(_2436) ? 0.0 : max(_2436, 0.0))))) * _2434)) - ((exp2(_2308 * _2445) - exp2(_2308 * _2446)) * _2434))) + (_2301 * cbSceneParam._m0[80u].z);
        }
        vec4 _2488 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2232, _2233, 1.0), 0.0);
        float _2497 = exp2((_2486 * (-1.44269502162933349609375)) * (1.0 - _2488.w));
        float _2498 = log2(_2497);
        float _2514 = log2(_2252);
        _2309 = (exp2(_2514 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2498 * cbSceneParam._m0[78u].x)) * _2488.x) / cbSceneParam._m0[78u].x)) + _2249;
        _2311 = (exp2(_2514 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2498 * cbSceneParam._m0[78u].y)) * _2488.y) / cbSceneParam._m0[78u].y)) + _2250;
        _2313 = (exp2(_2514 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2498 * cbSceneParam._m0[78u].z)) * _2488.z) / cbSceneParam._m0[78u].z)) + _2251;
        _2315 = _2497 * _2252;
    }
    else
    {
        _2309 = _2249;
        _2311 = _2250;
        _2313 = _2251;
        _2315 = _2252;
    }
    bool _2327 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2328 = log2(_2315);
    float _2335 = exp2(_2328 * cbSceneParam._m0[78u].x) * ((_2207 + (cbPerFrame._m0[3u].x * ((((_1796 * _1844.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0))) * _1590) * _1860)) + (((_1960 * cbLight._m0[_1907].x) * _1974) * _1888)))) + ((((isnan(1.0) ? _3365 : (isnan(_3365) ? 1.0 : min(_3365, 1.0))) * (((cbLight._m0[_1881].x * _1888) * _1901) + ((isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0))) * _779))) - _2207) * _641));
    float _2336 = exp2(_2328 * cbSceneParam._m0[78u].y) * ((_2208 + (cbPerFrame._m0[3u].x * ((((_1796 * _1844.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0))) * _1590) * _1860)) + (((_1960 * cbLight._m0[_1907].y) * _1974) * _1888)))) + ((((isnan(1.0) ? _3376 : (isnan(_3376) ? 1.0 : min(_3376, 1.0))) * (((_1888 * cbLight._m0[_1881].y) * _1901) + ((isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0))) * _779))) - _2208) * _641));
    float _2337 = exp2(_2328 * cbSceneParam._m0[78u].z) * ((_2209 + (cbPerFrame._m0[3u].x * ((((_1796 * _1844.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0))) * _1590) * _1860)) + (((_1960 * cbLight._m0[_1907].z) * _1974) * _1888)))) + ((((isnan(1.0) ? _3387 : (isnan(_3387) ? 1.0 : min(_3387, 1.0))) * (((_1888 * cbLight._m0[_1881].z) * _1901) + ((isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0))) * _779))) - _2209) * _641));
    vec4 _2345 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_740, _741));
    float _2347 = _2345.x;
    float _2368 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2347)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2347))) - _677) * 3.0;
    float _3453 = isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0));
    float _2370 = (cbInstanceData._m0[_754 + 6u].w * (isnan(1.0) ? _2811 : (isnan(_2811) ? 1.0 : min(_2811, 1.0)))) * (isnan(1.0) ? _3453 : (isnan(_3453) ? 1.0 : min(_3453, 1.0)));
    float _2379 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2379 * (_2327 ? _2335 : (_2335 + (cbSceneParam._m0[72u].w * _2309)));
    SV_Target.y = _2379 * (_2327 ? _2336 : (_2336 + (cbSceneParam._m0[72u].w * _2311)));
    SV_Target.z = _2379 * (_2327 ? _2337 : (_2337 + (cbSceneParam._m0[72u].w * _2313)));
    SV_Target.w = _2370;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2370;
}


