#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[22];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_Water_oceanD_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_oceanD_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_oceanD_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1157;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _189 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _190 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _191 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _197 = inversesqrt(dot(vec3(_189, _190, _191), vec3(_189, _190, _191)));
    float _198 = _197 * _189;
    float _199 = _197 * _190;
    float _200 = _197 * _191;
    float _204 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _205 = _204 * NORMAL.x;
    float _206 = _204 * NORMAL.y;
    float _207 = _204 * NORMAL.z;
    float _211 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _219;
    float _220;
    float _221;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _219 = (-0.0) - _205;
        _220 = (-0.0) - _206;
        _221 = (-0.0) - _207;
    }
    else
    {
        _219 = _205;
        _220 = _206;
        _221 = _207;
    }
    float _265 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _275 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _265);
    float _276 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _265);
    float _277 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _265);
    float _293 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    vec4 _310 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_2, SS_BumpMap), vec2((((_293 * cbMtdParam._m0[17u].w) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_293 * cbMtdParam._m0[18u].x) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _313 = _310.x;
    float _314 = _310.y;
    float _334 = cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].w;
    float _336 = (sqrt(((_275 * _275) + (_276 * _276)) + (_277 * _277)) - cbMtdParam._m0[12u].w) / (isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0)));
    float _343 = (cbMtdParam._m0[13u].z + _336) * cbMtdParam._m0[15u].x;
    float _2679 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    vec4 _357 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _359 = _357.x;
    bool _366 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _382 = ((_366 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _359)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _359))) - POSITION_1.w) / (((isnan(1.0) ? _2679 : (isnan(_2679) ? 1.0 : min(_2679, 1.0))) * (cbMtdParam._m0[12u].z - cbMtdParam._m0[12u].x)) + cbMtdParam._m0[12u].x);
    float _2690 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
    float _383 = isnan(1.0) ? _2690 : (isnan(_2690) ? 1.0 : min(_2690, 1.0));
    float _389 = 1.0 - (isnan(cbMtdParam._m0[16u].y) ? _383 : (isnan(_383) ? cbMtdParam._m0[16u].y : max(_383, cbMtdParam._m0[16u].y)));
    float _2706 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
    float _390 = isnan(1.0) ? _2706 : (isnan(_2706) ? 1.0 : min(_2706, 1.0));
    float _391 = _310.z - _390;
    float _2717 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
    float _392 = isnan(1.0) ? _2717 : (isnan(_2717) ? 1.0 : min(_2717, 1.0));
    float _403 = (_392 * 0.004999999888241291046142578125) + TEXCOORD.x;
    float _405 = (_392 * (-0.004999999888241291046142578125)) + TEXCOORD.y;
    vec4 _418 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((_403 + (cbMtdParam._m0[17u].y * _293)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_405 + (cbMtdParam._m0[17u].z * _293)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _422 = _418.z;
    vec4 _433 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((_403 + (cbMtdParam._m0[16u].w * _293)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_405 + (cbMtdParam._m0[17u].x * _293)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _437 = _433.z;
    float _440 = (_389 - _310.w) + (isnan(_437) ? _422 : (isnan(_422) ? _437 : max(_422, _437)));
    float _2733 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
    float _444 = (TEXCOORD_5.x - _389) + cbMtdParam._m0[16u].x;
    float _445 = _444 * (isnan(1.0) ? _2733 : (isnan(_2733) ? 1.0 : min(_2733, 1.0)));
    float _457 = (_445 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[10u].x * _392);
    float _458 = (_445 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[10u].y * _392);
    float _459 = (_445 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[10u].z * _392);
    float _2744 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _461 = 1.0 - (isnan(1.0) ? _2744 : (isnan(_2744) ? 1.0 : min(_2744, 1.0)));
    float _468 = ((_461 - _457) * _390) + _457;
    float _469 = ((_461 - _458) * _390) + _458;
    float _470 = ((_461 - _459) * _390) + _459;
    float _475 = _336 / cbMtdParam._m0[15u].z;
    float _2755 = isnan(0.0) ? _475 : (isnan(_475) ? 0.0 : max(_475, 0.0));
    float _478 = (1.0 - (isnan(1.0) ? _2755 : (isnan(_2755) ? 1.0 : min(_2755, 1.0)))) * cbMtdParam._m0[15u].y;
    float _491 = (cbMtdParam._m0[14u].w + _336) * cbMtdParam._m0[14u].x;
    float _2766 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _495 = ((isnan(1.0) ? _2766 : (isnan(_2766) ? 1.0 : min(_2766, 1.0))) * (cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].x)) + cbMtdParam._m0[11u].x;
    float _2777 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _496 = isnan(1.0) ? _2777 : (isnan(_2777) ? 1.0 : min(_2777, 1.0));
    float _505 = _336 / cbMtdParam._m0[14u].z;
    float _2788 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    float _506 = isnan(1.0) ? _2788 : (isnan(_2788) ? 1.0 : min(_2788, 1.0));
    vec4 _526 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[18u].y * _293) + TEXCOORD.z) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[18u].z * _293) + TEXCOORD.w) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _535 = ((_433.x + (-0.5)) * 0.5) + _418.x;
    float _536 = ((_433.y + (-0.5)) * 0.5) + _418.y;
    float _544 = _392 * 0.119999997317790985107421875;
    float _546 = _392 * (-0.100000001490116119384765625);
    float _557 = cbMtdParam._m0[19u].y * TEXCOORD.x;
    float _558 = cbMtdParam._m0[19u].z * TEXCOORD.y;
    vec4 _567 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[18u].w * _293) + _544) + _557) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[19u].x * _293) + _546) + _558) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _586 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2((((_557 + _544) + (cbMtdParam._m0[19u].w * _293)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_558 + _546) + (cbMtdParam._m0[20u].x * _293)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _598 = (((0.5 - _535) * 0.10999999940395355224609375) + _535) + (((_567.x + (-1.0)) + _586.x) * cbMtdParam._m0[15u].w);
    float _599 = (((0.5 - _536) * 0.10999999940395355224609375) + _536) + (((_567.y + (-1.0)) + _586.y) * cbMtdParam._m0[15u].w);
    float _604 = ((_526.x - _598) * _506) + _598;
    float _605 = ((_526.y - _599) * _506) + _599;
    float _607 = _336 / cbMtdParam._m0[14u].y;
    float _2799 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _608 = isnan(1.0) ? _2799 : (isnan(_2799) ? 1.0 : min(_2799, 1.0));
    float _625 = ((((_496 * (0.5 - _313)) + _313) + (((_604 + (-0.5)) + ((0.5 - _604) * _608)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _626 = ((((_496 * (0.5 - _314)) + _314) + (((_605 + (-0.5)) + ((0.5 - _605) * _608)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _627 = dot(vec2(_625, _626), vec2(_625, _626));
    float _2810 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _632 = sqrt(1.0 - (isnan(1.0) ? _2810 : (isnan(_2810) ? 1.0 : min(_2810, 1.0))));
    float _640 = (cbMtdParam._m0[13u].y + _336) * cbMtdParam._m0[13u].w;
    float _2821 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _642 = (isnan(1.0) ? _2821 : (isnan(_2821) ? 1.0 : min(_2821, 1.0))) * cbMtdParam._m0[16u].z;
    float _2832 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _643 = isnan(1.0) ? _2832 : (isnan(_2832) ? 1.0 : min(_2832, 1.0));
    float _656 = fma(_632, _219, fma(_626, _211 * TANGENT.x, _625 * _198));
    float _659 = fma(_632, _220, fma(_626, _211 * TANGENT.y, _625 * _199));
    float _662 = fma(_632, _221, fma(_626, _211 * TANGENT.z, _625 * _200));
    float _666 = inversesqrt(dot(vec3(_656, _659, _662), vec3(_656, _659, _662)));
    float _667 = _666 * _656;
    float _668 = _666 * _659;
    float _669 = _666 * _662;
    float _2843 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _2854 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _671 = isnan(1.0) ? _2854 : (isnan(_2854) ? 1.0 : min(_2854, 1.0));
    float _2865 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _2876 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
    float _2887 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _679 = _366 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _719 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _728 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _719);
    float _729 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _719);
    float _730 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _719);
    float _734 = inversesqrt(dot(vec3(_728, _729, _730), vec3(_728, _729, _730)));
    float _735 = _728 * _734;
    float _736 = _729 * _734;
    float _737 = _730 * _734;
    float _742 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _743 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _756 = uint(roundEven(NORMAL.w)) * 13u;
    uint _758 = (_756 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _764 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2865 : (isnan(_2865) ? 1.0 : min(_2865, 1.0)))) * cbInstanceData._m0[_758].x;
    float _765 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2876 : (isnan(_2876) ? 1.0 : min(_2876, 1.0)))) * cbInstanceData._m0[_758].y;
    float _766 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2887 : (isnan(_2887) ? 1.0 : min(_2887, 1.0)))) * cbInstanceData._m0[_758].z;
    float _2898 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _767 = isnan(1.0) ? _2898 : (isnan(_2898) ? 1.0 : min(_2898, 1.0));
    float _2909 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
    float _768 = isnan(1.0) ? _2909 : (isnan(_2909) ? 1.0 : min(_2909, 1.0));
    float _2920 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    float _769 = isnan(1.0) ? _2920 : (isnan(_2920) ? 1.0 : min(_2920, 1.0));
    vec4 _778 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _742, cbSceneParam._m0[86u].y * _743));
    float _781 = _778.x * TEXCOORD_5.w;
    float _782 = dot(vec3(_667, _668, _669), vec3(_735, _736, _737));
    float _785 = _782 * 2.0;
    float _789 = (_785 * _667) - _735;
    float _790 = (_785 * _668) - _736;
    float _791 = (_785 * _669) - _737;
    float _795 = abs(dot(vec3(_735, _736, _737), vec3(_667, _668, _669)));
    float _2931 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
    float _796 = isnan(1.0) ? _2931 : (isnan(_2931) ? 1.0 : min(_2931, 1.0));
    float _804 = 10.0 / (_679 + 10.0);
    float _805 = sqrt(_671);
    float _817 = exp2((_805 * 5.0) * log2(1.0 - (_796 * 0.999000012874603271484375))) / (4.0 - (_805 * 3.0));
    float _848 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _852 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _856 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1156;
    float _1158;
    float _1159;
    float _1160;
    float _1161;
    float _1162;
    float _1163;
    float _1164;
    float _1165;
    float _1166;
    float _1167;
    float _1168;
    float _1169;
    float _1170;
    float _1171;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _883 = fma(_856, cbModelParam._m0[26u].z, fma(_852, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _848));
        float _887 = fma(_856, cbModelParam._m0[27u].z, fma(_852, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _848));
        float _891 = fma(_856, cbModelParam._m0[28u].z, fma(_852, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _848));
        float _914 = _848 + _667;
        float _915 = _852 + _668;
        float _916 = _856 + _669;
        float _926 = fma(_916, cbModelParam._m0[26u].z, fma(_915, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _914)) - _883;
        float _927 = fma(_916, cbModelParam._m0[27u].z, fma(_915, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _914)) - _887;
        float _928 = fma(_916, cbModelParam._m0[28u].z, fma(_915, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _914)) - _891;
        float _932 = inversesqrt(dot(vec3(_926, _927, _928), vec3(_926, _927, _928)));
        float _945 = ((_932 * _926) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_883 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _946 = ((_932 * _927) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_887 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _947 = ((_932 * _928) / cbModelParam._m0[34u].z) + ((((((_891 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _950 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_945, _946, _947), 0.0);
        vec4 _957 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_945, _946, _947), 0.0);
        vec4 _964 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_945, _946, _947), 0.0);
        vec4 _971 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_945, _946, _947), 0.0);
        float _984 = exp2((_950.w + (-0.5)) * 20.0) * 2.0;
        float _985 = _984 * (_950.x + (-0.5));
        float _986 = _984 * (_950.y + (-0.5));
        float _987 = _984 * (_950.z + (-0.5));
        float _994 = exp2((_957.w + (-0.5)) * 20.0) * 2.0;
        float _995 = _994 * (_957.x + (-0.5));
        float _996 = _994 * (_957.y + (-0.5));
        float _997 = _994 * (_957.z + (-0.5));
        float _1004 = exp2((_964.w + (-0.5)) * 20.0) * 2.0;
        float _1005 = _1004 * (_964.x + (-0.5));
        float _1006 = _1004 * (_964.y + (-0.5));
        float _1007 = _1004 * (_964.z + (-0.5));
        float _1014 = exp2((_971.w + (-0.5)) * 20.0) * 2.0;
        float _1015 = _1014 * (_971.x + (-0.5));
        float _1016 = _1014 * (_971.y + (-0.5));
        float _1017 = _1014 * (_971.z + (-0.5));
        float _1018 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
        float _1019 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
        float _1020 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
        float _1021 = _985 * 0.5;
        float _1022 = _995 * 0.5;
        float _1023 = _1005 * 0.5;
        float _1024 = dot(vec3(_1021, _1022, _1023), vec3(_1021, _1022, _1023));
        float _1029 = (_1024 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1024);
        float _1038 = (dot(vec3(_667, _668, _669), vec3(_1029 * _1021, _1029 * _1022, _1029 * _1023)) + 1.0) * 0.5;
        float _2957 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
        float _1048 = sqrt(((_1022 * _1022) + (_1021 * _1021)) + (_1023 * _1023)) / (_1018 + 9.9999997473787516355514526367188e-06);
        float _2968 = isnan(0.0) ? _1048 : (isnan(_1048) ? 0.0 : max(_1048, 0.0));
        float _1049 = isnan(1.0) ? _2968 : (isnan(_2968) ? 1.0 : min(_2968, 1.0));
        float _1050 = _1049 * 2.0;
        float _1054 = (1.0 - _1049) / (_1049 + 1.0);
        float _2979 = isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0));
        float _1055 = isnan(1.0) ? _2979 : (isnan(_2979) ? 1.0 : min(_2979, 1.0));
        float _1064 = ((((1.0 - _1055) * (_1050 + 2.0)) * exp2(log2(isnan(1.0) ? _2957 : (isnan(_2957) ? 1.0 : min(_2957, 1.0))) * (_1050 + 1.0))) + _1055) * _1018;
        float _1065 = _986 * 0.5;
        float _1066 = _996 * 0.5;
        float _1067 = _1006 * 0.5;
        float _1068 = dot(vec3(_1065, _1066, _1067), vec3(_1065, _1066, _1067));
        float _1073 = (_1068 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1068);
        float _1081 = (dot(vec3(_667, _668, _669), vec3(_1073 * _1065, _1073 * _1066, _1073 * _1067)) + 1.0) * 0.5;
        float _2990 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1090 = sqrt(((_1066 * _1066) + (_1065 * _1065)) + (_1067 * _1067)) / (_1019 + 9.9999997473787516355514526367188e-06);
        float _3001 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
        float _1091 = isnan(1.0) ? _3001 : (isnan(_3001) ? 1.0 : min(_3001, 1.0));
        float _1092 = _1091 * 2.0;
        float _1096 = (1.0 - _1091) / (_1091 + 1.0);
        float _3012 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
        float _1097 = isnan(1.0) ? _3012 : (isnan(_3012) ? 1.0 : min(_3012, 1.0));
        float _1106 = ((((1.0 - _1097) * (_1092 + 2.0)) * exp2(log2(isnan(1.0) ? _2990 : (isnan(_2990) ? 1.0 : min(_2990, 1.0))) * (_1092 + 1.0))) + _1097) * _1019;
        float _1107 = _987 * 0.5;
        float _1108 = _997 * 0.5;
        float _1109 = _1007 * 0.5;
        float _1110 = dot(vec3(_1107, _1108, _1109), vec3(_1107, _1108, _1109));
        float _1115 = (_1110 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1110);
        float _1123 = (dot(vec3(_667, _668, _669), vec3(_1115 * _1107, _1115 * _1108, _1115 * _1109)) + 1.0) * 0.5;
        float _3023 = isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0));
        float _1132 = sqrt(((_1108 * _1108) + (_1107 * _1107)) + (_1109 * _1109)) / (_1020 + 9.9999997473787516355514526367188e-06);
        float _3034 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
        float _1133 = isnan(1.0) ? _3034 : (isnan(_3034) ? 1.0 : min(_3034, 1.0));
        float _1134 = _1133 * 2.0;
        float _1138 = (1.0 - _1133) / (_1133 + 1.0);
        float _3045 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
        float _1139 = isnan(1.0) ? _3045 : (isnan(_3045) ? 1.0 : min(_3045, 1.0));
        float _1148 = ((((1.0 - _1139) * (_1134 + 2.0)) * exp2(log2(isnan(1.0) ? _3023 : (isnan(_3023) ? 1.0 : min(_3023, 1.0))) * (_1134 + 1.0))) + _1139) * _1020;
        _1156 = _987;
        _1158 = _986;
        _1159 = _985;
        _1160 = _997;
        _1161 = _996;
        _1162 = _995;
        _1163 = _1007;
        _1164 = _1006;
        _1165 = _1005;
        _1166 = _1020;
        _1167 = _1019;
        _1168 = _1018;
        _1169 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0)));
        _1170 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0)));
        _1171 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0)));
    }
    else
    {
        _1156 = _1157;
        _1158 = _1157;
        _1159 = _1157;
        _1160 = _1157;
        _1161 = _1157;
        _1162 = _1157;
        _1163 = _1157;
        _1164 = _1157;
        _1165 = _1157;
        _1166 = _1157;
        _1167 = _1157;
        _1168 = _1157;
        _1169 = 0.0;
        _1170 = 0.0;
        _1171 = 0.0;
    }
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1197 = fma(_856, cbModelParam._m0[30u].z, fma(_852, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _848));
        float _1201 = fma(_856, cbModelParam._m0[31u].z, fma(_852, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _848));
        float _1205 = fma(_856, cbModelParam._m0[32u].z, fma(_852, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _848));
        float _1228 = _848 + _667;
        float _1229 = _852 + _668;
        float _1230 = _856 + _669;
        float _1240 = fma(_1230, cbModelParam._m0[30u].z, fma(_1229, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1228)) - _1197;
        float _1241 = fma(_1230, cbModelParam._m0[31u].z, fma(_1229, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1228)) - _1201;
        float _1242 = fma(_1230, cbModelParam._m0[32u].z, fma(_1229, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1228)) - _1205;
        float _1246 = inversesqrt(dot(vec3(_1240, _1241, _1242), vec3(_1240, _1241, _1242)));
        float _1259 = ((_1246 * _1240) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1197 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1260 = ((_1246 * _1241) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1201 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1261 = ((_1246 * _1242) / cbModelParam._m0[35u].z) + ((((((_1205 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1263 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1259, _1260, _1261), 0.0);
        vec4 _1270 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1259, _1260, _1261), 0.0);
        vec4 _1277 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1259, _1260, _1261), 0.0);
        vec4 _1284 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1259, _1260, _1261), 0.0);
        float _1296 = exp2((_1263.w + (-0.5)) * 20.0) * 2.0;
        float _1297 = _1296 * (_1263.x + (-0.5));
        float _1298 = _1296 * (_1263.y + (-0.5));
        float _1299 = _1296 * (_1263.z + (-0.5));
        float _1306 = exp2((_1270.w + (-0.5)) * 20.0) * 2.0;
        float _1307 = _1306 * (_1270.x + (-0.5));
        float _1308 = _1306 * (_1270.y + (-0.5));
        float _1309 = _1306 * (_1270.z + (-0.5));
        float _1316 = exp2((_1277.w + (-0.5)) * 20.0) * 2.0;
        float _1317 = _1316 * (_1277.x + (-0.5));
        float _1318 = _1316 * (_1277.y + (-0.5));
        float _1319 = _1316 * (_1277.z + (-0.5));
        float _1326 = exp2((_1284.w + (-0.5)) * 20.0) * 2.0;
        float _1327 = _1326 * (_1284.x + (-0.5));
        float _1328 = _1326 * (_1284.y + (-0.5));
        float _1329 = _1326 * (_1284.z + (-0.5));
        float _1330 = isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0));
        float _1331 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1332 = isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0));
        float _1333 = _1297 * 0.5;
        float _1334 = _1307 * 0.5;
        float _1335 = _1317 * 0.5;
        float _1336 = dot(vec3(_1333, _1334, _1335), vec3(_1333, _1334, _1335));
        float _1341 = (_1336 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1336);
        float _1349 = (dot(vec3(_667, _668, _669), vec3(_1341 * _1333, _1341 * _1334, _1341 * _1335)) + 1.0) * 0.5;
        float _3086 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1358 = sqrt(((_1334 * _1334) + (_1333 * _1333)) + (_1335 * _1335)) / (_1330 + 9.9999997473787516355514526367188e-06);
        float _3097 = isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0));
        float _1359 = isnan(1.0) ? _3097 : (isnan(_3097) ? 1.0 : min(_3097, 1.0));
        float _1360 = _1359 * 2.0;
        float _1364 = (1.0 - _1359) / (_1359 + 1.0);
        float _3108 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1365 = isnan(1.0) ? _3108 : (isnan(_3108) ? 1.0 : min(_3108, 1.0));
        float _1374 = ((((1.0 - _1365) * (_1360 + 2.0)) * exp2(log2(isnan(1.0) ? _3086 : (isnan(_3086) ? 1.0 : min(_3086, 1.0))) * (_1360 + 1.0))) + _1365) * _1330;
        float _1375 = _1298 * 0.5;
        float _1376 = _1308 * 0.5;
        float _1377 = _1318 * 0.5;
        float _1378 = dot(vec3(_1375, _1376, _1377), vec3(_1375, _1376, _1377));
        float _1383 = (_1378 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1378);
        float _1391 = (dot(vec3(_667, _668, _669), vec3(_1383 * _1375, _1383 * _1376, _1383 * _1377)) + 1.0) * 0.5;
        float _3119 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
        float _1400 = sqrt(((_1376 * _1376) + (_1375 * _1375)) + (_1377 * _1377)) / (_1331 + 9.9999997473787516355514526367188e-06);
        float _3130 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1401 = isnan(1.0) ? _3130 : (isnan(_3130) ? 1.0 : min(_3130, 1.0));
        float _1402 = _1401 * 2.0;
        float _1406 = (1.0 - _1401) / (_1401 + 1.0);
        float _3141 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1407 = isnan(1.0) ? _3141 : (isnan(_3141) ? 1.0 : min(_3141, 1.0));
        float _1416 = ((((1.0 - _1407) * (_1402 + 2.0)) * exp2(log2(isnan(1.0) ? _3119 : (isnan(_3119) ? 1.0 : min(_3119, 1.0))) * (_1402 + 1.0))) + _1407) * _1331;
        float _1417 = _1299 * 0.5;
        float _1418 = _1309 * 0.5;
        float _1419 = _1319 * 0.5;
        float _1420 = dot(vec3(_1417, _1418, _1419), vec3(_1417, _1418, _1419));
        float _1425 = (_1420 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1420);
        float _1433 = (dot(vec3(_667, _668, _669), vec3(_1425 * _1417, _1425 * _1418, _1425 * _1419)) + 1.0) * 0.5;
        float _3152 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
        float _1442 = sqrt(((_1418 * _1418) + (_1417 * _1417)) + (_1419 * _1419)) / (_1332 + 9.9999997473787516355514526367188e-06);
        float _3163 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1443 = isnan(1.0) ? _3163 : (isnan(_3163) ? 1.0 : min(_3163, 1.0));
        float _1444 = _1443 * 2.0;
        float _1448 = (1.0 - _1443) / (_1443 + 1.0);
        float _3174 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
        float _1449 = isnan(1.0) ? _3174 : (isnan(_3174) ? 1.0 : min(_3174, 1.0));
        float _1458 = ((((1.0 - _1449) * (_1444 + 2.0)) * exp2(log2(isnan(1.0) ? _3152 : (isnan(_3152) ? 1.0 : min(_3152, 1.0))) * (_1444 + 1.0))) + _1449) * _1332;
        _1466 = _1299;
        _1467 = _1298;
        _1468 = _1297;
        _1469 = _1309;
        _1470 = _1308;
        _1471 = _1307;
        _1472 = _1319;
        _1473 = _1318;
        _1474 = _1317;
        _1475 = _1332;
        _1476 = _1331;
        _1477 = _1330;
        _1478 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1374 : (isnan(_1374) ? 0.0 : max(_1374, 0.0)));
        _1479 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0)));
        _1480 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0)));
    }
    else
    {
        _1466 = _1157;
        _1467 = _1157;
        _1468 = _1157;
        _1469 = _1157;
        _1470 = _1157;
        _1471 = _1157;
        _1472 = _1157;
        _1473 = _1157;
        _1474 = _1157;
        _1475 = _1157;
        _1476 = _1157;
        _1477 = _1157;
        _1478 = 0.0;
        _1479 = 0.0;
        _1480 = 0.0;
    }
    float _1490 = (cbModelParam._m0[1u].x * (_1478 - _1169)) + _1169;
    float _1491 = (cbModelParam._m0[1u].x * (_1479 - _1170)) + _1170;
    float _1492 = (cbModelParam._m0[1u].x * (_1480 - _1171)) + _1171;
    float _1513 = fma(_1492, cbSceneParam._m0[89u].z, fma(_1491, cbSceneParam._m0[89u].y, _1490 * cbSceneParam._m0[89u].x));
    float _1516 = fma(_1492, cbSceneParam._m0[90u].z, fma(_1491, cbSceneParam._m0[90u].y, _1490 * cbSceneParam._m0[90u].x));
    float _1519 = fma(_1492, cbSceneParam._m0[91u].z, fma(_1491, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1490));
    float _1534 = _789 * 0.5;
    float _1535 = _790 * 0.5;
    float _1536 = _791 * 0.5;
    float _1537 = dot(vec4(_1534, _1535, _1536, 1.0), vec4(_1468, _1471, _1474, _1477));
    float _1540 = dot(vec4(_1534, _1535, _1536, 1.0), vec4(_1467, _1470, _1473, _1476));
    float _1543 = dot(vec4(_1534, _1535, _1536, 1.0), vec4(_1466, _1469, _1472, _1475));
    float _1577;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1550 = dot(vec4(_1534, _1535, _1536, 1.0), vec4(_1156, _1160, _1163, _1166));
        float _1554 = dot(vec4(_1534, _1535, _1536, 1.0), vec4(_1158, _1161, _1164, _1167));
        float _1558 = dot(vec4(_1534, _1535, _1536, 1.0), vec4(_1159, _1162, _1165, _1168));
        float _1565 = dot(vec4(cbModelParam._m0[39u]), vec4(_1534, _1535, _1536, 1.0));
        _1577 = dot(vec3(isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0)), isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0)), isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1565) ? 0.0 : (isnan(0.0) ? _1565 : max(0.0, _1565))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1577 = 1.0;
    }
    float _1588;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1579 = dot(vec4(cbModelParam._m0[40u]), vec4(_1534, _1535, _1536, 1.0));
        _1588 = dot(vec3(isnan(0.0) ? _1537 : (isnan(_1537) ? 0.0 : max(_1537, 0.0)), isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0)), isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1579) ? 0.0 : (isnan(0.0) ? _1579 : max(0.0, _1579))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1588 = 1.0;
    }
    float _1592 = (_1588 * cbModelParam._m0[1u].x) + (_1577 * (1.0 - cbModelParam._m0[1u].x));
    float _1602 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _671);
    float _1603 = isnan(_1602) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1602 : min(cbModelParam._m0[25u].z, _1602));
    float _1684;
    float _1686;
    float _1688;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1651 = fma(_856, cbModelParam._m0[13u].z, fma(_852, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _848)) + cbModelParam._m0[13u].w;
        float _1655 = fma(_856, cbModelParam._m0[14u].z, fma(_852, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _848)) + cbModelParam._m0[14u].w;
        float _1659 = fma(_856, cbModelParam._m0[15u].z, fma(_852, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _848)) + cbModelParam._m0[15u].w;
        float _1662 = fma(_791, cbModelParam._m0[13u].z, fma(_790, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _789));
        float _1665 = fma(_791, cbModelParam._m0[14u].z, fma(_790, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _789));
        float _1668 = fma(_791, cbModelParam._m0[15u].z, fma(_790, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _789));
        float _1696;
        if (_1662 > 0.0)
        {
            _1696 = abs((1.0 - _1651) / _1662);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1662 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1651 + 1.0) / _1662);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1696 = frontier_phi_16_14_ladder;
        }
        float _2127;
        if (_1665 > 0.0)
        {
            _2127 = abs((1.0 - _1655) / _1665);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1665 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1655 + 1.0) / _1665);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2127 = frontier_phi_25_21_ladder;
        }
        float _2423;
        if (_1668 > 0.0)
        {
            _2423 = abs((1.0 - _1659) / _1668);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1668 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1659 + 1.0) / _1668);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2423 = frontier_phi_37_32_ladder;
        }
        float _2425 = isnan(_2127) ? _1696 : (isnan(_1696) ? _2127 : min(_1696, _2127));
        float _2426 = isnan(_2423) ? _2425 : (isnan(_2425) ? _2423 : min(_2425, _2423));
        float _2430 = (_2426 * _1662) + _1651;
        float _2431 = (_2426 * _1665) + _1655;
        float _2432 = (_2426 * _1668) + _1659;
        float _2433 = _2426 * 9.9999997473787516355514526367188e-05;
        float _2434 = (-1.0) - _2433;
        float _2436 = _2433 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2432 > _2436) || ((_2432 < _2434) || ((_2431 > _2436) || ((_2431 < _2434) || ((_2430 < _2434) || (_2430 > _2436))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2509 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2432, cbModelParam._m0[9u].z, fma(_2431, cbModelParam._m0[9u].y, _2430 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2432, cbModelParam._m0[10u].z, fma(_2431, cbModelParam._m0[10u].y, _2430 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2432, cbModelParam._m0[11u].z, fma(_2431, cbModelParam._m0[11u].y, _2430 * cbModelParam._m0[11u].x))), _1603);
            frontier_phi_15_37_ladder = _2509.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2509.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2509.x * cbModelParam._m0[1u].y;
        }
        _1684 = frontier_phi_15_37_ladder_2;
        _1686 = frontier_phi_15_37_ladder_1;
        _1688 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1672 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_789, _790, _791), _1603);
        _1684 = _1672.x * cbModelParam._m0[1u].y;
        _1686 = _1672.y * cbModelParam._m0[1u].y;
        _1688 = _1672.z * cbModelParam._m0[1u].y;
    }
    float _1692 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _671);
    float _1693 = isnan(_1692) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1692 : min(cbModelParam._m0[25u].w, _1692));
    float _1782;
    float _1784;
    float _1786;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1746 = fma(_856, cbModelParam._m0[21u].z, fma(_852, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _848)) + cbModelParam._m0[21u].w;
        float _1750 = fma(_856, cbModelParam._m0[22u].z, fma(_852, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _848)) + cbModelParam._m0[22u].w;
        float _1754 = fma(_856, cbModelParam._m0[23u].z, fma(_852, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _848)) + cbModelParam._m0[23u].w;
        float _1757 = fma(_791, cbModelParam._m0[21u].z, fma(_790, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _789));
        float _1760 = fma(_791, cbModelParam._m0[22u].z, fma(_790, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _789));
        float _1763 = fma(_791, cbModelParam._m0[23u].z, fma(_790, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _789));
        float _2132;
        if (_1757 > 0.0)
        {
            _2132 = abs((1.0 - _1746) / _1757);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1757 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1746 + 1.0) / _1757);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2132 = frontier_phi_27_23_ladder;
        }
        float _2449;
        if (_1760 > 0.0)
        {
            _2449 = abs((1.0 - _1750) / _1760);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1760 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1750 + 1.0) / _1760);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2449 = frontier_phi_39_34_ladder;
        }
        float _2556;
        if (_1763 > 0.0)
        {
            _2556 = abs((1.0 - _1754) / _1763);
        }
        else
        {
            float frontier_phi_47_45_ladder;
            if (_1763 < 0.0)
            {
                frontier_phi_47_45_ladder = abs((_1754 + 1.0) / _1763);
            }
            else
            {
                frontier_phi_47_45_ladder = 5000.0;
            }
            _2556 = frontier_phi_47_45_ladder;
        }
        float _2558 = isnan(_2449) ? _2132 : (isnan(_2132) ? _2449 : min(_2132, _2449));
        float _2559 = isnan(_2556) ? _2558 : (isnan(_2558) ? _2556 : min(_2558, _2556));
        float _2563 = (_2559 * _1757) + _1746;
        float _2564 = (_2559 * _1760) + _1750;
        float _2565 = (_2559 * _1763) + _1754;
        float _2566 = _2559 * 9.9999997473787516355514526367188e-05;
        float _2567 = (-1.0) - _2566;
        float _2569 = _2566 + 1.0;
        float frontier_phi_24_47_ladder;
        float frontier_phi_24_47_ladder_1;
        float frontier_phi_24_47_ladder_2;
        if ((_2565 > _2569) || ((_2565 < _2567) || ((_2564 > _2569) || ((_2564 < _2567) || ((_2563 < _2567) || (_2563 > _2569))))))
        {
            frontier_phi_24_47_ladder = 0.0;
            frontier_phi_24_47_ladder_1 = 0.0;
            frontier_phi_24_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2598 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2565, cbModelParam._m0[17u].z, fma(_2564, cbModelParam._m0[17u].y, _2563 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2565, cbModelParam._m0[18u].z, fma(_2564, cbModelParam._m0[18u].y, _2563 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2565, cbModelParam._m0[19u].z, fma(_2564, cbModelParam._m0[19u].y, _2563 * cbModelParam._m0[19u].x))), _1693);
            frontier_phi_24_47_ladder = _2598.z * cbModelParam._m0[1u].z;
            frontier_phi_24_47_ladder_1 = _2598.y * cbModelParam._m0[1u].z;
            frontier_phi_24_47_ladder_2 = _2598.x * cbModelParam._m0[1u].z;
        }
        _1782 = frontier_phi_24_47_ladder_2;
        _1784 = frontier_phi_24_47_ladder_1;
        _1786 = frontier_phi_24_47_ladder;
    }
    else
    {
        vec4 _1766 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_789, _790, _791), _1693);
        _1782 = _1766.x * cbModelParam._m0[1u].z;
        _1784 = _1766.y * cbModelParam._m0[1u].z;
        _1786 = _1766.z * cbModelParam._m0[1u].z;
    }
    float _1798 = ((((1.0 - _817) * ((_805 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_817 * _805)) * _781;
    float _1799 = _1798 * ((cbModelParam._m0[1u].w * (_1782 - _1684)) + _1684);
    float _1800 = _1798 * ((cbModelParam._m0[1u].w * (_1784 - _1686)) + _1686);
    float _1801 = _1798 * ((cbModelParam._m0[1u].w * (_1786 - _1688)) + _1688);
    float _1804 = fma(_1801, cbSceneParam._m0[89u].z, fma(_1800, cbSceneParam._m0[89u].y, _1799 * cbSceneParam._m0[89u].x));
    float _1807 = fma(_1801, cbSceneParam._m0[90u].z, fma(_1800, cbSceneParam._m0[90u].y, _1799 * cbSceneParam._m0[90u].x));
    float _1810 = fma(_1801, cbSceneParam._m0[91u].z, fma(_1800, cbSceneParam._m0[91u].y, _1799 * cbSceneParam._m0[91u].x));
    float _1821 = _742 / cbSceneParam._m0[86u].x;
    float _1829 = (cbSceneParam._m0[88u].y * (1.0 - _671)) + cbSceneParam._m0[88u].z;
    float _3300 = isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0));
    float _1831 = (isnan(1.0) ? _3300 : (isnan(_3300) ? 1.0 : min(_3300, 1.0))) * 5.0;
    float _1836 = (_804 * cbMtdParam._m0[11u].w) * dot(vec3(_667, _668, _669), vec3(1.0, 0.0, 0.0));
    vec4 _1846 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_1836 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_1836 + _1821) * cbSceneParam._m0[86u].x, _743), _1831).w) + _1821) * cbSceneParam._m0[86u].x, _743), _1831);
    float _1862 = 1.0 - _1846.w;
    vec4 _1870 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_742, _743));
    float _1872 = _1870.w;
    float _1884 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1872);
    float _1885 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1872);
    float _1886 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1872);
    uint _1887 = _756 + 5u;
    uint _1893 = floatBitsToUint(cbInstanceData._m0[_1887]).x * 14u;
    float _1900 = (cbLight._m0[_1893 + 13u].x * (_781 + (-1.0))) + 1.0;
    uint _1901 = _1893 + 4u;
    float _1911 = isnan(1.0) ? _1900 : (isnan(_1900) ? 1.0 : min(_1900, 1.0));
    float _1920 = dot(vec3(cbLight._m0[_1893].xyz), vec3(_667, _668, _669));
    float _3316 = isnan(0.0) ? _1920 : (isnan(_1920) ? 0.0 : max(_1920, 0.0));
    float _1924 = (isnan(1.0) ? _3316 : (isnan(_3316) ? 1.0 : min(_3316, 1.0))) * 0.3183098733425140380859375;
    uint _1930 = _1893 + 8u;
    float _1943 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1893].w)) * _671) * 0.949999988079071044921875);
    float _1944 = _1943 * _1943;
    float _1945 = cbLight._m0[_1893].x + _735;
    float _1946 = cbLight._m0[_1893].y + _736;
    float _1947 = cbLight._m0[_1893].z + _737;
    float _1951 = inversesqrt(dot(vec3(_1945, _1946, _1947), vec3(_1945, _1946, _1947)));
    float _1952 = _1951 * _1945;
    float _1953 = _1951 * _1946;
    float _1954 = _1951 * _1947;
    float _1955 = dot(vec3(_667, _668, _669), vec3(cbLight._m0[_1893].xyz));
    float _3327 = isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0));
    float _1958 = isnan(1.0) ? _3327 : (isnan(_3327) ? 1.0 : min(_3327, 1.0));
    float _3338 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
    float _1959 = isnan(1.0) ? _3338 : (isnan(_3338) ? 1.0 : min(_3338, 1.0));
    float _1960 = dot(vec3(_667, _668, _669), vec3(_1952, _1953, _1954));
    float _3349 = isnan(0.0) ? _1960 : (isnan(_1960) ? 0.0 : max(_1960, 0.0));
    float _1963 = isnan(1.0) ? _3349 : (isnan(_3349) ? 1.0 : min(_3349, 1.0));
    float _1964 = dot(vec3(cbLight._m0[_1893].xyz), vec3(_1952, _1953, _1954));
    float _3360 = isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0));
    float _1968 = _1944 * _1944;
    float _1972 = ((_1963 * _1963) * (_1968 + (-1.0))) + 1.0;
    float _1983 = (exp2(log2(1.0 - (isnan(1.0) ? _3360 : (isnan(_3360) ? 1.0 : min(_3360, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1984 = 1.0 - _1944;
    float _1995 = (0.5 / (((_1959 * ((_1958 * _1984) + _1944)) + 9.9999999392252902907785028219223e-09) + (((_1959 * _1984) + _1944) * _1958))) * _1958;
    float _3371 = isnan(0.0) ? _1995 : (isnan(_1995) ? 0.0 : max(_1995, 0.0));
    float _1997 = (isnan(1.0) ? _3371 : (isnan(_3371) ? 1.0 : min(_3371, 1.0))) * (_1968 / ((_1972 * _1972) * 3.141590118408203125));
    float _2031 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2032 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2033 = cbSceneParam._m0[86u].x * ((_742 / cbSceneParam._m0[86u].x) + ((_804 * cbMtdParam._m0[11u].y) * dot(vec3(_667, _668, _669), vec3(_198, _199, _200))));
    float _2034 = isnan(_2031) ? _2033 : (isnan(_2033) ? _2031 : min(_2033, _2031));
    float _2035 = isnan(_2032) ? _743 : (isnan(_743) ? _2032 : min(_743, _2032));
    vec4 _2037 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2034, _2035), 0.0);
    float _2039 = _2037.x;
    bool _2059 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2039)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2039))) > _679;
    float _2060 = _2059 ? _2034 : _742;
    float _2061 = _2059 ? _2035 : _743;
    vec4 _2063 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2060, _2061));
    vec4 _2068 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2060, _2061));
    float _2070 = _2068.x;
    bool _2075 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2084 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2090 = (_2075 ? (_2084 / (cbSceneParam._m0[2u].x - _2070)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2070))) - _679;
    float _2092 = cbMtdParam._m0[21u].x + cbMtdParam._m0[20u].y;
    float _2093 = cbMtdParam._m0[21u].y + cbMtdParam._m0[20u].z;
    float _2094 = cbMtdParam._m0[21u].z + cbMtdParam._m0[20u].w;
    bool _2100 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2104 = (isnan(_2090) ? 0.0 : (isnan(0.0) ? _2090 : max(0.0, _2090))) * (-1.44269502162933349609375);
    float _3397 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
    float _3408 = isnan(0.0) ? _768 : (isnan(_768) ? 0.0 : max(_768, 0.0));
    float _3419 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
    float _2219;
    float _2220;
    float _2221;
    if ((1.0 - _643) > 0.00999999977648258209228515625)
    {
        vec4 _2138 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2060, _2061), 0.0);
        float _2140 = _2138.x;
        float _2146 = (_2075 ? (_2084 / (cbSceneParam._m0[2u].x - _2140)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2140))) - _679;
        uint _2152 = floatBitsToUint(cbInstanceData._m0[_1887]).x * 14u;
        uint _2158 = _2152 + 4u;
        float _2167 = dot(vec3(cbLight._m0[_2152].xyz), vec3(_219, _220, _221));
        float _2175 = dot(vec3((-0.0) - _735, (-0.0) - _736, (-0.0) - _737), vec3((-0.0) - _219, (-0.0) - _220, (-0.0) - _221));
        float _2180 = ((isnan(0.0) ? _2175 : (isnan(_2175) ? 0.0 : max(_2175, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2167 : (isnan(_2167) ? 0.001000000047497451305389404296875 : max(_2167, 0.001000000047497451305389404296875)))) + 1.0;
        float _2182 = (-0.0) - ((isnan(_2146) ? 0.0 : (isnan(0.0) ? _2146 : max(0.0, _2146))) * _2180);
        _2219 = _2100 ? 0.0 : ((((cbMtdParam._m0[20u].y * 0.079577468335628509521484375) * cbLight._m0[_2158].x) / ((_2180 * _2092) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2092 * 1.44269502162933349609375) * _2182)));
        _2220 = _2100 ? 0.0 : ((((cbMtdParam._m0[20u].z * 0.079577468335628509521484375) * cbLight._m0[_2158].y) / ((_2180 * _2093) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2093 * 1.44269502162933349609375) * _2182)));
        _2221 = _2100 ? 0.0 : ((((cbMtdParam._m0[20u].w * 0.079577468335628509521484375) * cbLight._m0[_2158].z) / ((_2180 * _2094) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2094 * 1.44269502162933349609375) * _2182)));
    }
    else
    {
        _2219 = 0.0;
        _2220 = 0.0;
        _2221 = 0.0;
    }
    float _2238 = 0.959999978542327880859375 - (exp2(log2(1.0 - _796) * 5.0) * 0.959999978542327880859375);
    float _2239 = (_2219 + ((exp2(_2104 * (_2100 ? 0.0 : _2092)) * _2063.x) * cbSceneParam._m0[72u].w)) * _2238;
    float _2240 = (_2220 + ((exp2(_2104 * (_2100 ? 0.0 : _2093)) * _2063.y) * cbSceneParam._m0[72u].w)) * _2238;
    float _2241 = (_2221 + ((exp2(_2104 * (_2100 ? 0.0 : _2094)) * _2063.z) * cbSceneParam._m0[72u].w)) * _2238;
    float _2264 = _742 / cbSceneParam._m0[86u].x;
    float _2265 = _743 / cbSceneParam._m0[86u].y;
    vec4 _2279 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2264, _2265, (log2((isnan(cbSceneParam._m0[77u].w) ? _679 : (isnan(_679) ? cbSceneParam._m0[77u].w : min(_679, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2281 = _2279.x;
    float _2282 = _2279.y;
    float _2283 = _2279.z;
    float _2284 = _2279.w;
    float _2341;
    float _2343;
    float _2345;
    float _2347;
    if (_679 > cbSceneParam._m0[78u].w)
    {
        float _2305 = isnan(_679) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _679 : min(cbSceneParam._m0[80u].w, _679));
        float _2306 = _2305 / _679;
        float _2317 = _2306 * _728;
        float _2318 = _729 * _2306;
        float _2319 = (-0.0) - _2318;
        float _2320 = _2306 * _730;
        float _2322 = (cbSceneParam._m0[77u].w * _2319) / _2305;
        float _2323 = _2322 + cbSceneParam._m0[79u].w;
        float _2324 = cbSceneParam._m0[79u].w - _2318;
        float _2330 = sqrt(((_2317 * _2317) + (_2318 * _2318)) + (_2320 * _2320));
        float _2333 = (1.0 - (cbSceneParam._m0[77u].w / _2305)) * _2330;
        float _2339 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2340 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2518;
        if (abs((_2319 - _2322) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2518 = ((((_2323 > 0.0) ? exp2(_2339 * _2323) : (2.0 - exp2(_2340 * _2323))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2333;
        }
        else
        {
            float _2466 = 1.0 / cbSceneParam._m0[80u].x;
            float _2467 = isnan(_2324) ? _2323 : (isnan(_2323) ? _2324 : max(_2323, _2324));
            float _2468 = isnan(_2324) ? _2323 : (isnan(_2323) ? _2324 : min(_2323, _2324));
            float _2477 = isnan(0.0) ? _2467 : (isnan(_2467) ? 0.0 : min(_2467, 0.0));
            float _2478 = isnan(0.0) ? _2468 : (isnan(_2468) ? 0.0 : min(_2468, 0.0));
            _2518 = ((abs(_2330 / _2319) * cbSceneParam._m0[80u].y) * ((((_2477 - _2478) * 2.0) - ((exp2(_2339 * (isnan(0.0) ? _2467 : (isnan(_2467) ? 0.0 : max(_2467, 0.0)))) - exp2(_2339 * (isnan(0.0) ? _2468 : (isnan(_2468) ? 0.0 : max(_2468, 0.0))))) * _2466)) - ((exp2(_2340 * _2477) - exp2(_2340 * _2478)) * _2466))) + (_2333 * cbSceneParam._m0[80u].z);
        }
        vec4 _2520 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2264, _2265, 1.0), 0.0);
        float _2529 = exp2((_2518 * (-1.44269502162933349609375)) * (1.0 - _2520.w));
        float _2530 = log2(_2529);
        float _2546 = log2(_2284);
        _2341 = (exp2(_2546 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2530 * cbSceneParam._m0[78u].x)) * _2520.x) / cbSceneParam._m0[78u].x)) + _2281;
        _2343 = (exp2(_2546 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2530 * cbSceneParam._m0[78u].y)) * _2520.y) / cbSceneParam._m0[78u].y)) + _2282;
        _2345 = (exp2(_2546 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2530 * cbSceneParam._m0[78u].z)) * _2520.z) / cbSceneParam._m0[78u].z)) + _2283;
        _2347 = _2529 * _2284;
    }
    else
    {
        _2341 = _2281;
        _2343 = _2282;
        _2345 = _2283;
        _2347 = _2284;
    }
    bool _2359 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2360 = log2(_2347);
    float _2367 = exp2(_2360 * cbSceneParam._m0[78u].x) * ((_2239 + (((((_1798 * _1846.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0))) * _1592) * _1862)) + ((((cbLight._m0[_1930].x * _1884) * _1983) * _1997) * _1911)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3397 : (isnan(_3397) ? 1.0 : min(_3397, 1.0))) * ((((cbLight._m0[_1901].x * _1884) * _1911) * _1924) + ((isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0))) * _781))) - _2239) * _643));
    float _2368 = exp2(_2360 * cbSceneParam._m0[78u].y) * ((_2240 + (((((_1798 * _1846.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0))) * _1592) * _1862)) + ((((cbLight._m0[_1930].y * _1885) * _1983) * _1997) * _1911)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3408 : (isnan(_3408) ? 1.0 : min(_3408, 1.0))) * ((((cbLight._m0[_1901].y * _1885) * _1911) * _1924) + ((isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0))) * _781))) - _2240) * _643));
    float _2369 = exp2(_2360 * cbSceneParam._m0[78u].z) * ((_2241 + (((((_1798 * _1846.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0))) * _1592) * _1862)) + ((((cbLight._m0[_1930].z * _1886) * _1983) * _1997) * _1911)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3419 : (isnan(_3419) ? 1.0 : min(_3419, 1.0))) * ((((cbLight._m0[_1901].z * _1886) * _1911) * _1924) + ((isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0))) * _781))) - _2241) * _643));
    vec4 _2377 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_742, _743));
    float _2379 = _2377.x;
    float _2400 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2379)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2379))) - _679) * 3.0;
    float _3485 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
    float _2402 = (cbInstanceData._m0[_756 + 6u].w * (isnan(1.0) ? _2843 : (isnan(_2843) ? 1.0 : min(_2843, 1.0)))) * (isnan(1.0) ? _3485 : (isnan(_3485) ? 1.0 : min(_3485, 1.0)));
    float _2411 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2411 * (_2359 ? _2367 : (_2367 + (cbSceneParam._m0[72u].w * _2341)));
    SV_Target.y = _2411 * (_2359 ? _2368 : (_2368 + (cbSceneParam._m0[72u].w * _2343)));
    SV_Target.z = _2411 * (_2359 ? _2369 : (_2369 + (cbSceneParam._m0[72u].w * _2345)));
    SV_Target.w = _2402;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2402;
}


