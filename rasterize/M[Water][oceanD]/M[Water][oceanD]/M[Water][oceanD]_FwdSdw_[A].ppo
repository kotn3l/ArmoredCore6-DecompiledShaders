#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[22];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_Water_oceanD_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_oceanD_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_oceanD_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1206;
float _3071;
float _3072;
float _3073;
float _3074;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _195 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _196 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _197 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _203 = inversesqrt(dot(vec3(_195, _196, _197), vec3(_195, _196, _197)));
    float _204 = _203 * _195;
    float _205 = _203 * _196;
    float _206 = _203 * _197;
    float _210 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _211 = _210 * NORMAL.x;
    float _212 = _210 * NORMAL.y;
    float _213 = _210 * NORMAL.z;
    float _217 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _225;
    float _226;
    float _227;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _225 = (-0.0) - _211;
        _226 = (-0.0) - _212;
        _227 = (-0.0) - _213;
    }
    else
    {
        _225 = _211;
        _226 = _212;
        _227 = _213;
    }
    float _271 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _281 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _271);
    float _282 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _271);
    float _283 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _271);
    float _299 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    vec4 _316 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_2, SS_BumpMap), vec2((((_299 * cbMtdParam._m0[17u].w) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_299 * cbMtdParam._m0[18u].x) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _319 = _316.x;
    float _320 = _316.y;
    float _340 = cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].w;
    float _342 = (sqrt(((_281 * _281) + (_282 * _282)) + (_283 * _283)) - cbMtdParam._m0[12u].w) / (isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0)));
    float _349 = (cbMtdParam._m0[13u].z + _342) * cbMtdParam._m0[15u].x;
    float _3088 = isnan(0.0) ? _349 : (isnan(_349) ? 0.0 : max(_349, 0.0));
    vec4 _363 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _365 = _363.x;
    bool _372 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _388 = ((_372 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _365)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _365))) - POSITION_1.w) / (((isnan(1.0) ? _3088 : (isnan(_3088) ? 1.0 : min(_3088, 1.0))) * (cbMtdParam._m0[12u].z - cbMtdParam._m0[12u].x)) + cbMtdParam._m0[12u].x);
    float _3099 = isnan(0.0) ? _388 : (isnan(_388) ? 0.0 : max(_388, 0.0));
    float _389 = isnan(1.0) ? _3099 : (isnan(_3099) ? 1.0 : min(_3099, 1.0));
    float _395 = 1.0 - (isnan(cbMtdParam._m0[16u].y) ? _389 : (isnan(_389) ? cbMtdParam._m0[16u].y : max(_389, cbMtdParam._m0[16u].y)));
    float _3115 = isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : max(_342, 0.0));
    float _396 = isnan(1.0) ? _3115 : (isnan(_3115) ? 1.0 : min(_3115, 1.0));
    float _397 = _316.z - _396;
    float _3126 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    float _398 = isnan(1.0) ? _3126 : (isnan(_3126) ? 1.0 : min(_3126, 1.0));
    float _409 = (_398 * 0.004999999888241291046142578125) + TEXCOORD.x;
    float _411 = (_398 * (-0.004999999888241291046142578125)) + TEXCOORD.y;
    vec4 _424 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((_409 + (cbMtdParam._m0[17u].y * _299)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_411 + (cbMtdParam._m0[17u].z * _299)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _428 = _424.z;
    vec4 _439 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((_409 + (cbMtdParam._m0[16u].w * _299)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_411 + (cbMtdParam._m0[17u].x * _299)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _443 = _439.z;
    float _446 = (_395 - _316.w) + (isnan(_443) ? _428 : (isnan(_428) ? _443 : max(_428, _443)));
    float _3142 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _450 = (TEXCOORD_5.x - _395) + cbMtdParam._m0[16u].x;
    float _451 = _450 * (isnan(1.0) ? _3142 : (isnan(_3142) ? 1.0 : min(_3142, 1.0)));
    float _463 = (_451 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[10u].x * _398);
    float _464 = (_451 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[10u].y * _398);
    float _465 = (_451 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[10u].z * _398);
    float _3153 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0));
    float _467 = 1.0 - (isnan(1.0) ? _3153 : (isnan(_3153) ? 1.0 : min(_3153, 1.0)));
    float _474 = ((_467 - _463) * _396) + _463;
    float _475 = ((_467 - _464) * _396) + _464;
    float _476 = ((_467 - _465) * _396) + _465;
    float _481 = _342 / cbMtdParam._m0[15u].z;
    float _3164 = isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0));
    float _484 = (1.0 - (isnan(1.0) ? _3164 : (isnan(_3164) ? 1.0 : min(_3164, 1.0)))) * cbMtdParam._m0[15u].y;
    float _497 = (cbMtdParam._m0[14u].w + _342) * cbMtdParam._m0[14u].x;
    float _3175 = isnan(0.0) ? _497 : (isnan(_497) ? 0.0 : max(_497, 0.0));
    float _501 = ((isnan(1.0) ? _3175 : (isnan(_3175) ? 1.0 : min(_3175, 1.0))) * (cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].x)) + cbMtdParam._m0[11u].x;
    float _3186 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _502 = isnan(1.0) ? _3186 : (isnan(_3186) ? 1.0 : min(_3186, 1.0));
    float _511 = _342 / cbMtdParam._m0[14u].z;
    float _3197 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    float _512 = isnan(1.0) ? _3197 : (isnan(_3197) ? 1.0 : min(_3197, 1.0));
    vec4 _532 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[18u].y * _299) + TEXCOORD.z) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[18u].z * _299) + TEXCOORD.w) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _541 = ((_439.x + (-0.5)) * 0.5) + _424.x;
    float _542 = ((_439.y + (-0.5)) * 0.5) + _424.y;
    float _550 = _398 * 0.119999997317790985107421875;
    float _552 = _398 * (-0.100000001490116119384765625);
    float _563 = cbMtdParam._m0[19u].y * TEXCOORD.x;
    float _564 = cbMtdParam._m0[19u].z * TEXCOORD.y;
    vec4 _573 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[18u].w * _299) + _550) + _563) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[19u].x * _299) + _552) + _564) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _592 = texture(sampler2D(M_Water_oceanD_snp_0_Texture2D_0, SS_BumpMap), vec2((((_563 + _550) + (cbMtdParam._m0[19u].w * _299)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_564 + _552) + (cbMtdParam._m0[20u].x * _299)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _604 = (((0.5 - _541) * 0.10999999940395355224609375) + _541) + (((_573.x + (-1.0)) + _592.x) * cbMtdParam._m0[15u].w);
    float _605 = (((0.5 - _542) * 0.10999999940395355224609375) + _542) + (((_573.y + (-1.0)) + _592.y) * cbMtdParam._m0[15u].w);
    float _610 = ((_532.x - _604) * _512) + _604;
    float _611 = ((_532.y - _605) * _512) + _605;
    float _613 = _342 / cbMtdParam._m0[14u].y;
    float _3208 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _614 = isnan(1.0) ? _3208 : (isnan(_3208) ? 1.0 : min(_3208, 1.0));
    float _631 = ((((_502 * (0.5 - _319)) + _319) + (((_610 + (-0.5)) + ((0.5 - _610) * _614)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _632 = ((((_502 * (0.5 - _320)) + _320) + (((_611 + (-0.5)) + ((0.5 - _611) * _614)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _633 = dot(vec2(_631, _632), vec2(_631, _632));
    float _3219 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
    float _638 = sqrt(1.0 - (isnan(1.0) ? _3219 : (isnan(_3219) ? 1.0 : min(_3219, 1.0))));
    float _646 = (cbMtdParam._m0[13u].y + _342) * cbMtdParam._m0[13u].w;
    float _3230 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
    float _648 = (isnan(1.0) ? _3230 : (isnan(_3230) ? 1.0 : min(_3230, 1.0))) * cbMtdParam._m0[16u].z;
    float _3241 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _649 = isnan(1.0) ? _3241 : (isnan(_3241) ? 1.0 : min(_3241, 1.0));
    float _662 = fma(_638, _225, fma(_632, _217 * TANGENT.x, _631 * _204));
    float _665 = fma(_638, _226, fma(_632, _217 * TANGENT.y, _631 * _205));
    float _668 = fma(_638, _227, fma(_632, _217 * TANGENT.z, _631 * _206));
    float _672 = inversesqrt(dot(vec3(_662, _665, _668), vec3(_662, _665, _668)));
    float _673 = _672 * _662;
    float _674 = _672 * _665;
    float _675 = _672 * _668;
    float _3252 = isnan(0.0) ? _484 : (isnan(_484) ? 0.0 : max(_484, 0.0));
    float _3263 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    float _677 = isnan(1.0) ? _3263 : (isnan(_3263) ? 1.0 : min(_3263, 1.0));
    float _3274 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _3285 = isnan(0.0) ? _475 : (isnan(_475) ? 0.0 : max(_475, 0.0));
    float _3296 = isnan(0.0) ? _476 : (isnan(_476) ? 0.0 : max(_476, 0.0));
    float _685 = _372 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _725 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _734 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _725);
    float _735 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _725);
    float _736 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _725);
    float _740 = inversesqrt(dot(vec3(_734, _735, _736), vec3(_734, _735, _736)));
    float _741 = _734 * _740;
    float _742 = _735 * _740;
    float _743 = _736 * _740;
    vec4 _748 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _750 = _748.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _886 = sqrt(((_734 * _734) + (_735 * _735)) + (_736 * _736));
        float _893 = (cbMatDynParam._m0[5u].x * _886) + cbMatDynParam._m0[5u].y;
        float _3307 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
        float _894 = isnan(1.0) ? _3307 : (isnan(_3307) ? 1.0 : min(_3307, 1.0));
        float _898 = (cbMatDynParam._m0[5u].z * _886) + cbMatDynParam._m0[5u].w;
        float _3318 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3318 : (isnan(_3318) ? 1.0 : min(_3318, 1.0))) - _894)) + _894) < ((_750 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _761 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _762 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _775 = uint(roundEven(NORMAL.w)) * 13u;
    uint _776 = _775 + 9u;
    uint _777 = _776 + uint(cbMatDynParam._m0[0u].w);
    float _783 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3274 : (isnan(_3274) ? 1.0 : min(_3274, 1.0)))) * cbInstanceData._m0[_777].x;
    float _784 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3285 : (isnan(_3285) ? 1.0 : min(_3285, 1.0)))) * cbInstanceData._m0[_777].y;
    float _785 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3296 : (isnan(_3296) ? 1.0 : min(_3296, 1.0)))) * cbInstanceData._m0[_777].z;
    float _3329 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
    float _786 = isnan(1.0) ? _3329 : (isnan(_3329) ? 1.0 : min(_3329, 1.0));
    float _3340 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    float _787 = isnan(1.0) ? _3340 : (isnan(_3340) ? 1.0 : min(_3340, 1.0));
    float _3351 = isnan(0.0) ? _785 : (isnan(_785) ? 0.0 : max(_785, 0.0));
    float _788 = isnan(1.0) ? _3351 : (isnan(_3351) ? 1.0 : min(_3351, 1.0));
    vec4 _797 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _761, cbSceneParam._m0[86u].y * _762));
    float _800 = _797.x * TEXCOORD_5.w;
    float _801 = dot(vec3(_673, _674, _675), vec3(_741, _742, _743));
    float _804 = _801 * 2.0;
    float _808 = (_804 * _673) - _741;
    float _809 = (_804 * _674) - _742;
    float _810 = (_804 * _675) - _743;
    float _814 = abs(dot(vec3(_741, _742, _743), vec3(_673, _674, _675)));
    float _3362 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _815 = isnan(1.0) ? _3362 : (isnan(_3362) ? 1.0 : min(_3362, 1.0));
    float _823 = 10.0 / (_685 + 10.0);
    float _824 = sqrt(_677);
    float _836 = exp2((_824 * 5.0) * log2(1.0 - (_815 * 0.999000012874603271484375))) / (4.0 - (_824 * 3.0));
    float _867 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _871 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _875 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1205;
    float _1207;
    float _1208;
    float _1209;
    float _1210;
    float _1211;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _932 = fma(_875, cbModelParam._m0[26u].z, fma(_871, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _867));
        float _936 = fma(_875, cbModelParam._m0[27u].z, fma(_871, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _867));
        float _940 = fma(_875, cbModelParam._m0[28u].z, fma(_871, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _867));
        float _963 = _867 + _673;
        float _964 = _871 + _674;
        float _965 = _875 + _675;
        float _975 = fma(_965, cbModelParam._m0[26u].z, fma(_964, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _963)) - _932;
        float _976 = fma(_965, cbModelParam._m0[27u].z, fma(_964, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _963)) - _936;
        float _977 = fma(_965, cbModelParam._m0[28u].z, fma(_964, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _963)) - _940;
        float _981 = inversesqrt(dot(vec3(_975, _976, _977), vec3(_975, _976, _977)));
        float _994 = ((_981 * _975) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_932 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _995 = ((_981 * _976) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_936 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _996 = ((_981 * _977) / cbModelParam._m0[34u].z) + ((((((_940 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _999 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_994, _995, _996), 0.0);
        vec4 _1006 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_994, _995, _996), 0.0);
        vec4 _1013 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_994, _995, _996), 0.0);
        vec4 _1020 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_994, _995, _996), 0.0);
        float _1033 = exp2((_999.w + (-0.5)) * 20.0) * 2.0;
        float _1034 = _1033 * (_999.x + (-0.5));
        float _1035 = _1033 * (_999.y + (-0.5));
        float _1036 = _1033 * (_999.z + (-0.5));
        float _1043 = exp2((_1006.w + (-0.5)) * 20.0) * 2.0;
        float _1044 = _1043 * (_1006.x + (-0.5));
        float _1045 = _1043 * (_1006.y + (-0.5));
        float _1046 = _1043 * (_1006.z + (-0.5));
        float _1053 = exp2((_1013.w + (-0.5)) * 20.0) * 2.0;
        float _1054 = _1053 * (_1013.x + (-0.5));
        float _1055 = _1053 * (_1013.y + (-0.5));
        float _1056 = _1053 * (_1013.z + (-0.5));
        float _1063 = exp2((_1020.w + (-0.5)) * 20.0) * 2.0;
        float _1064 = _1063 * (_1020.x + (-0.5));
        float _1065 = _1063 * (_1020.y + (-0.5));
        float _1066 = _1063 * (_1020.z + (-0.5));
        float _1067 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
        float _1068 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
        float _1069 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
        float _1070 = _1034 * 0.5;
        float _1071 = _1044 * 0.5;
        float _1072 = _1054 * 0.5;
        float _1073 = dot(vec3(_1070, _1071, _1072), vec3(_1070, _1071, _1072));
        float _1078 = (_1073 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1073);
        float _1087 = (dot(vec3(_673, _674, _675), vec3(_1078 * _1070, _1078 * _1071, _1078 * _1072)) + 1.0) * 0.5;
        float _3388 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
        float _1097 = sqrt(((_1071 * _1071) + (_1070 * _1070)) + (_1072 * _1072)) / (_1067 + 9.9999997473787516355514526367188e-06);
        float _3399 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
        float _1098 = isnan(1.0) ? _3399 : (isnan(_3399) ? 1.0 : min(_3399, 1.0));
        float _1099 = _1098 * 2.0;
        float _1103 = (1.0 - _1098) / (_1098 + 1.0);
        float _3410 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1104 = isnan(1.0) ? _3410 : (isnan(_3410) ? 1.0 : min(_3410, 1.0));
        float _1113 = ((((1.0 - _1104) * (_1099 + 2.0)) * exp2(log2(isnan(1.0) ? _3388 : (isnan(_3388) ? 1.0 : min(_3388, 1.0))) * (_1099 + 1.0))) + _1104) * _1067;
        float _1114 = _1035 * 0.5;
        float _1115 = _1045 * 0.5;
        float _1116 = _1055 * 0.5;
        float _1117 = dot(vec3(_1114, _1115, _1116), vec3(_1114, _1115, _1116));
        float _1122 = (_1117 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1117);
        float _1130 = (dot(vec3(_673, _674, _675), vec3(_1122 * _1114, _1122 * _1115, _1122 * _1116)) + 1.0) * 0.5;
        float _3421 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
        float _1139 = sqrt(((_1115 * _1115) + (_1114 * _1114)) + (_1116 * _1116)) / (_1068 + 9.9999997473787516355514526367188e-06);
        float _3432 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1140 = isnan(1.0) ? _3432 : (isnan(_3432) ? 1.0 : min(_3432, 1.0));
        float _1141 = _1140 * 2.0;
        float _1145 = (1.0 - _1140) / (_1140 + 1.0);
        float _3443 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
        float _1146 = isnan(1.0) ? _3443 : (isnan(_3443) ? 1.0 : min(_3443, 1.0));
        float _1155 = ((((1.0 - _1146) * (_1141 + 2.0)) * exp2(log2(isnan(1.0) ? _3421 : (isnan(_3421) ? 1.0 : min(_3421, 1.0))) * (_1141 + 1.0))) + _1146) * _1068;
        float _1156 = _1036 * 0.5;
        float _1157 = _1046 * 0.5;
        float _1158 = _1056 * 0.5;
        float _1159 = dot(vec3(_1156, _1157, _1158), vec3(_1156, _1157, _1158));
        float _1164 = (_1159 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1159);
        float _1172 = (dot(vec3(_673, _674, _675), vec3(_1164 * _1156, _1164 * _1157, _1164 * _1158)) + 1.0) * 0.5;
        float _3454 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1181 = sqrt(((_1157 * _1157) + (_1156 * _1156)) + (_1158 * _1158)) / (_1069 + 9.9999997473787516355514526367188e-06);
        float _3465 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
        float _1182 = isnan(1.0) ? _3465 : (isnan(_3465) ? 1.0 : min(_3465, 1.0));
        float _1183 = _1182 * 2.0;
        float _1187 = (1.0 - _1182) / (_1182 + 1.0);
        float _3476 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1188 = isnan(1.0) ? _3476 : (isnan(_3476) ? 1.0 : min(_3476, 1.0));
        float _1197 = ((((1.0 - _1188) * (_1183 + 2.0)) * exp2(log2(isnan(1.0) ? _3454 : (isnan(_3454) ? 1.0 : min(_3454, 1.0))) * (_1183 + 1.0))) + _1188) * _1069;
        _1205 = _1036;
        _1207 = _1035;
        _1208 = _1034;
        _1209 = _1046;
        _1210 = _1045;
        _1211 = _1044;
        _1212 = _1056;
        _1213 = _1055;
        _1214 = _1054;
        _1215 = _1069;
        _1216 = _1068;
        _1217 = _1067;
        _1218 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0)));
        _1219 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0)));
        _1220 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0)));
    }
    else
    {
        _1205 = _1206;
        _1207 = _1206;
        _1208 = _1206;
        _1209 = _1206;
        _1210 = _1206;
        _1211 = _1206;
        _1212 = _1206;
        _1213 = _1206;
        _1214 = _1206;
        _1215 = _1206;
        _1216 = _1206;
        _1217 = _1206;
        _1218 = 0.0;
        _1219 = 0.0;
        _1220 = 0.0;
    }
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1249 = fma(_875, cbModelParam._m0[30u].z, fma(_871, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _867));
        float _1253 = fma(_875, cbModelParam._m0[31u].z, fma(_871, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _867));
        float _1257 = fma(_875, cbModelParam._m0[32u].z, fma(_871, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _867));
        float _1280 = _867 + _673;
        float _1281 = _871 + _674;
        float _1282 = _875 + _675;
        float _1292 = fma(_1282, cbModelParam._m0[30u].z, fma(_1281, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1280)) - _1249;
        float _1293 = fma(_1282, cbModelParam._m0[31u].z, fma(_1281, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1280)) - _1253;
        float _1294 = fma(_1282, cbModelParam._m0[32u].z, fma(_1281, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1280)) - _1257;
        float _1298 = inversesqrt(dot(vec3(_1292, _1293, _1294), vec3(_1292, _1293, _1294)));
        float _1311 = ((_1298 * _1292) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1249 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1312 = ((_1298 * _1293) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1253 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1313 = ((_1298 * _1294) / cbModelParam._m0[35u].z) + ((((((_1257 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1315 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1311, _1312, _1313), 0.0);
        vec4 _1322 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1311, _1312, _1313), 0.0);
        vec4 _1329 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1311, _1312, _1313), 0.0);
        vec4 _1336 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1311, _1312, _1313), 0.0);
        float _1348 = exp2((_1315.w + (-0.5)) * 20.0) * 2.0;
        float _1349 = _1348 * (_1315.x + (-0.5));
        float _1350 = _1348 * (_1315.y + (-0.5));
        float _1351 = _1348 * (_1315.z + (-0.5));
        float _1358 = exp2((_1322.w + (-0.5)) * 20.0) * 2.0;
        float _1359 = _1358 * (_1322.x + (-0.5));
        float _1360 = _1358 * (_1322.y + (-0.5));
        float _1361 = _1358 * (_1322.z + (-0.5));
        float _1368 = exp2((_1329.w + (-0.5)) * 20.0) * 2.0;
        float _1369 = _1368 * (_1329.x + (-0.5));
        float _1370 = _1368 * (_1329.y + (-0.5));
        float _1371 = _1368 * (_1329.z + (-0.5));
        float _1378 = exp2((_1336.w + (-0.5)) * 20.0) * 2.0;
        float _1379 = _1378 * (_1336.x + (-0.5));
        float _1380 = _1378 * (_1336.y + (-0.5));
        float _1381 = _1378 * (_1336.z + (-0.5));
        float _1382 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1383 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1384 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1385 = _1349 * 0.5;
        float _1386 = _1359 * 0.5;
        float _1387 = _1369 * 0.5;
        float _1388 = dot(vec3(_1385, _1386, _1387), vec3(_1385, _1386, _1387));
        float _1393 = (_1388 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1388);
        float _1401 = (dot(vec3(_673, _674, _675), vec3(_1393 * _1385, _1393 * _1386, _1393 * _1387)) + 1.0) * 0.5;
        float _3517 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1410 = sqrt(((_1386 * _1386) + (_1385 * _1385)) + (_1387 * _1387)) / (_1382 + 9.9999997473787516355514526367188e-06);
        float _3528 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
        float _1411 = isnan(1.0) ? _3528 : (isnan(_3528) ? 1.0 : min(_3528, 1.0));
        float _1412 = _1411 * 2.0;
        float _1416 = (1.0 - _1411) / (_1411 + 1.0);
        float _3539 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1417 = isnan(1.0) ? _3539 : (isnan(_3539) ? 1.0 : min(_3539, 1.0));
        float _1426 = ((((1.0 - _1417) * (_1412 + 2.0)) * exp2(log2(isnan(1.0) ? _3517 : (isnan(_3517) ? 1.0 : min(_3517, 1.0))) * (_1412 + 1.0))) + _1417) * _1382;
        float _1427 = _1350 * 0.5;
        float _1428 = _1360 * 0.5;
        float _1429 = _1370 * 0.5;
        float _1430 = dot(vec3(_1427, _1428, _1429), vec3(_1427, _1428, _1429));
        float _1435 = (_1430 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1430);
        float _1443 = (dot(vec3(_673, _674, _675), vec3(_1435 * _1427, _1435 * _1428, _1435 * _1429)) + 1.0) * 0.5;
        float _3550 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1452 = sqrt(((_1428 * _1428) + (_1427 * _1427)) + (_1429 * _1429)) / (_1383 + 9.9999997473787516355514526367188e-06);
        float _3561 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
        float _1453 = isnan(1.0) ? _3561 : (isnan(_3561) ? 1.0 : min(_3561, 1.0));
        float _1454 = _1453 * 2.0;
        float _1458 = (1.0 - _1453) / (_1453 + 1.0);
        float _3572 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1459 = isnan(1.0) ? _3572 : (isnan(_3572) ? 1.0 : min(_3572, 1.0));
        float _1468 = ((((1.0 - _1459) * (_1454 + 2.0)) * exp2(log2(isnan(1.0) ? _3550 : (isnan(_3550) ? 1.0 : min(_3550, 1.0))) * (_1454 + 1.0))) + _1459) * _1383;
        float _1469 = _1351 * 0.5;
        float _1470 = _1361 * 0.5;
        float _1471 = _1371 * 0.5;
        float _1472 = dot(vec3(_1469, _1470, _1471), vec3(_1469, _1470, _1471));
        float _1477 = (_1472 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1472);
        float _1485 = (dot(vec3(_673, _674, _675), vec3(_1477 * _1469, _1477 * _1470, _1477 * _1471)) + 1.0) * 0.5;
        float _3583 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1494 = sqrt(((_1470 * _1470) + (_1469 * _1469)) + (_1471 * _1471)) / (_1384 + 9.9999997473787516355514526367188e-06);
        float _3594 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
        float _1495 = isnan(1.0) ? _3594 : (isnan(_3594) ? 1.0 : min(_3594, 1.0));
        float _1496 = _1495 * 2.0;
        float _1500 = (1.0 - _1495) / (_1495 + 1.0);
        float _3605 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _3605 : (isnan(_3605) ? 1.0 : min(_3605, 1.0));
        float _1510 = ((((1.0 - _1501) * (_1496 + 2.0)) * exp2(log2(isnan(1.0) ? _3583 : (isnan(_3583) ? 1.0 : min(_3583, 1.0))) * (_1496 + 1.0))) + _1501) * _1384;
        _1518 = _1351;
        _1519 = _1350;
        _1520 = _1349;
        _1521 = _1361;
        _1522 = _1360;
        _1523 = _1359;
        _1524 = _1371;
        _1525 = _1370;
        _1526 = _1369;
        _1527 = _1384;
        _1528 = _1383;
        _1529 = _1382;
        _1530 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0)));
        _1531 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0)));
        _1532 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0)));
    }
    else
    {
        _1518 = _1206;
        _1519 = _1206;
        _1520 = _1206;
        _1521 = _1206;
        _1522 = _1206;
        _1523 = _1206;
        _1524 = _1206;
        _1525 = _1206;
        _1526 = _1206;
        _1527 = _1206;
        _1528 = _1206;
        _1529 = _1206;
        _1530 = 0.0;
        _1531 = 0.0;
        _1532 = 0.0;
    }
    float _1542 = (cbModelParam._m0[1u].x * (_1530 - _1218)) + _1218;
    float _1543 = (cbModelParam._m0[1u].x * (_1531 - _1219)) + _1219;
    float _1544 = (cbModelParam._m0[1u].x * (_1532 - _1220)) + _1220;
    float _1565 = fma(_1544, cbSceneParam._m0[89u].z, fma(_1543, cbSceneParam._m0[89u].y, _1542 * cbSceneParam._m0[89u].x));
    float _1568 = fma(_1544, cbSceneParam._m0[90u].z, fma(_1543, cbSceneParam._m0[90u].y, _1542 * cbSceneParam._m0[90u].x));
    float _1571 = fma(_1544, cbSceneParam._m0[91u].z, fma(_1543, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1542));
    float _1586 = _808 * 0.5;
    float _1587 = _809 * 0.5;
    float _1588 = _810 * 0.5;
    float _1589 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1520, _1523, _1526, _1529));
    float _1592 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1519, _1522, _1525, _1528));
    float _1595 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1518, _1521, _1524, _1527));
    float _1629;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1602 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1205, _1209, _1212, _1215));
        float _1606 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1207, _1210, _1213, _1216));
        float _1610 = dot(vec4(_1586, _1587, _1588, 1.0), vec4(_1208, _1211, _1214, _1217));
        float _1617 = dot(vec4(cbModelParam._m0[39u]), vec4(_1586, _1587, _1588, 1.0));
        _1629 = dot(vec3(isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0)), isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0)), isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1617) ? 0.0 : (isnan(0.0) ? _1617 : max(0.0, _1617))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1629 = 1.0;
    }
    float _1640;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1631 = dot(vec4(cbModelParam._m0[40u]), vec4(_1586, _1587, _1588, 1.0));
        _1640 = dot(vec3(isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0)), isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0)), isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1631) ? 0.0 : (isnan(0.0) ? _1631 : max(0.0, _1631))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1640 = 1.0;
    }
    float _1644 = (_1640 * cbModelParam._m0[1u].x) + (_1629 * (1.0 - cbModelParam._m0[1u].x));
    float _1654 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _677);
    float _1655 = isnan(_1654) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1654 : min(cbModelParam._m0[25u].z, _1654));
    float _1736;
    float _1738;
    float _1740;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1703 = fma(_875, cbModelParam._m0[13u].z, fma(_871, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _867)) + cbModelParam._m0[13u].w;
        float _1707 = fma(_875, cbModelParam._m0[14u].z, fma(_871, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _867)) + cbModelParam._m0[14u].w;
        float _1711 = fma(_875, cbModelParam._m0[15u].z, fma(_871, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _867)) + cbModelParam._m0[15u].w;
        float _1714 = fma(_810, cbModelParam._m0[13u].z, fma(_809, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _808));
        float _1717 = fma(_810, cbModelParam._m0[14u].z, fma(_809, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _808));
        float _1720 = fma(_810, cbModelParam._m0[15u].z, fma(_809, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _808));
        float _1748;
        if (_1714 > 0.0)
        {
            _1748 = abs((1.0 - _1703) / _1714);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1714 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1703 + 1.0) / _1714);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1748 = frontier_phi_19_17_ladder;
        }
        float _1969;
        if (_1717 > 0.0)
        {
            _1969 = abs((1.0 - _1707) / _1717);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1717 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1707 + 1.0) / _1717);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1969 = frontier_phi_28_24_ladder;
        }
        float _2414;
        if (_1720 > 0.0)
        {
            _2414 = abs((1.0 - _1711) / _1720);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1720 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1711 + 1.0) / _1720);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2414 = frontier_phi_40_35_ladder;
        }
        float _2416 = isnan(_1969) ? _1748 : (isnan(_1748) ? _1969 : min(_1748, _1969));
        float _2417 = isnan(_2414) ? _2416 : (isnan(_2416) ? _2414 : min(_2416, _2414));
        float _2421 = (_2417 * _1714) + _1703;
        float _2422 = (_2417 * _1717) + _1707;
        float _2423 = (_2417 * _1720) + _1711;
        float _2424 = _2417 * 9.9999997473787516355514526367188e-05;
        float _2426 = (-1.0) - _2424;
        float _2428 = _2424 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2423 > _2428) || ((_2423 < _2426) || ((_2422 > _2428) || ((_2422 < _2426) || ((_2421 < _2426) || (_2421 > _2428))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2686 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2423, cbModelParam._m0[9u].z, fma(_2422, cbModelParam._m0[9u].y, _2421 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2423, cbModelParam._m0[10u].z, fma(_2422, cbModelParam._m0[10u].y, _2421 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2423, cbModelParam._m0[11u].z, fma(_2422, cbModelParam._m0[11u].y, _2421 * cbModelParam._m0[11u].x))), _1655);
            frontier_phi_18_40_ladder = _2686.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2686.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2686.x * cbModelParam._m0[1u].y;
        }
        _1736 = frontier_phi_18_40_ladder_2;
        _1738 = frontier_phi_18_40_ladder_1;
        _1740 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1724 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_808, _809, _810), _1655);
        _1736 = _1724.x * cbModelParam._m0[1u].y;
        _1738 = _1724.y * cbModelParam._m0[1u].y;
        _1740 = _1724.z * cbModelParam._m0[1u].y;
    }
    float _1744 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _677);
    float _1745 = isnan(_1744) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1744 : min(cbModelParam._m0[25u].w, _1744));
    float _1834;
    float _1836;
    float _1838;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1798 = fma(_875, cbModelParam._m0[21u].z, fma(_871, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _867)) + cbModelParam._m0[21u].w;
        float _1802 = fma(_875, cbModelParam._m0[22u].z, fma(_871, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _867)) + cbModelParam._m0[22u].w;
        float _1806 = fma(_875, cbModelParam._m0[23u].z, fma(_871, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _867)) + cbModelParam._m0[23u].w;
        float _1809 = fma(_810, cbModelParam._m0[21u].z, fma(_809, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _808));
        float _1812 = fma(_810, cbModelParam._m0[22u].z, fma(_809, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _808));
        float _1815 = fma(_810, cbModelParam._m0[23u].z, fma(_809, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _808));
        float _1974;
        if (_1809 > 0.0)
        {
            _1974 = abs((1.0 - _1798) / _1809);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1809 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1798 + 1.0) / _1809);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1974 = frontier_phi_30_26_ladder;
        }
        float _2441;
        if (_1812 > 0.0)
        {
            _2441 = abs((1.0 - _1802) / _1812);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1812 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1802 + 1.0) / _1812);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2441 = frontier_phi_42_37_ladder;
        }
        float _2824;
        if (_1815 > 0.0)
        {
            _2824 = abs((1.0 - _1806) / _1815);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_1815 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_1806 + 1.0) / _1815);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2824 = frontier_phi_52_49_ladder;
        }
        float _2826 = isnan(_2441) ? _1974 : (isnan(_1974) ? _2441 : min(_1974, _2441));
        float _2827 = isnan(_2824) ? _2826 : (isnan(_2826) ? _2824 : min(_2826, _2824));
        float _2831 = (_2827 * _1809) + _1798;
        float _2832 = (_2827 * _1812) + _1802;
        float _2833 = (_2827 * _1815) + _1806;
        float _2834 = _2827 * 9.9999997473787516355514526367188e-05;
        float _2835 = (-1.0) - _2834;
        float _2837 = _2834 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2833 > _2837) || ((_2833 < _2835) || ((_2832 > _2837) || ((_2832 < _2835) || ((_2831 < _2835) || (_2831 > _2837))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2921 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2833, cbModelParam._m0[17u].z, fma(_2832, cbModelParam._m0[17u].y, _2831 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2833, cbModelParam._m0[18u].z, fma(_2832, cbModelParam._m0[18u].y, _2831 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2833, cbModelParam._m0[19u].z, fma(_2832, cbModelParam._m0[19u].y, _2831 * cbModelParam._m0[19u].x))), _1745);
            frontier_phi_27_52_ladder = _2921.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2921.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2921.x * cbModelParam._m0[1u].z;
        }
        _1834 = frontier_phi_27_52_ladder_2;
        _1836 = frontier_phi_27_52_ladder_1;
        _1838 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1818 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_808, _809, _810), _1745);
        _1834 = _1818.x * cbModelParam._m0[1u].z;
        _1836 = _1818.y * cbModelParam._m0[1u].z;
        _1838 = _1818.z * cbModelParam._m0[1u].z;
    }
    float _1850 = ((((1.0 - _836) * ((_824 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_836 * _824)) * _800;
    float _1851 = _1850 * ((cbModelParam._m0[1u].w * (_1834 - _1736)) + _1736);
    float _1852 = _1850 * ((cbModelParam._m0[1u].w * (_1836 - _1738)) + _1738);
    float _1853 = _1850 * ((cbModelParam._m0[1u].w * (_1838 - _1740)) + _1740);
    float _1856 = fma(_1853, cbSceneParam._m0[89u].z, fma(_1852, cbSceneParam._m0[89u].y, _1851 * cbSceneParam._m0[89u].x));
    float _1859 = fma(_1853, cbSceneParam._m0[90u].z, fma(_1852, cbSceneParam._m0[90u].y, _1851 * cbSceneParam._m0[90u].x));
    float _1862 = fma(_1853, cbSceneParam._m0[91u].z, fma(_1852, cbSceneParam._m0[91u].y, _1851 * cbSceneParam._m0[91u].x));
    float _1873 = _761 / cbSceneParam._m0[86u].x;
    float _1881 = (cbSceneParam._m0[88u].y * (1.0 - _677)) + cbSceneParam._m0[88u].z;
    float _3731 = isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0));
    float _1883 = (isnan(1.0) ? _3731 : (isnan(_3731) ? 1.0 : min(_3731, 1.0))) * 5.0;
    float _1888 = (_823 * cbMtdParam._m0[11u].w) * dot(vec3(_673, _674, _675), vec3(1.0, 0.0, 0.0));
    vec4 _1898 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_1888 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_1888 + _1873) * cbSceneParam._m0[86u].x, _762), _1883).w) + _1873) * cbSceneParam._m0[86u].x, _762), _1883);
    float _1914 = 1.0 - _1898.w;
    float _1948 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1952 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1956 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1960 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1961 = _1948 / _1960;
    float _1962 = _1952 / _1960;
    float _1963 = _1956 / _1960;
    float _2110;
    float _2111;
    float _2112;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1990 = ((uint(_1963 > cbSceneParam._m0[59u].y) + uint(_1963 > cbSceneParam._m0[59u].x)) + uint(_1963 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1991 = _1990 + 43u;
        uint _1999 = _1990 + 44u;
        uint _2007 = _1990 + 45u;
        uint _2015 = _1990 + 46u;
        float _2026 = fma(_1960, cbSceneParam._m0[_1991].w, fma(_1956, cbSceneParam._m0[_1991].z, fma(_1952, cbSceneParam._m0[_1991].y, _1948 * cbSceneParam._m0[_1991].x)));
        float _2030 = fma(_1960, cbSceneParam._m0[_1999].w, fma(_1956, cbSceneParam._m0[_1999].z, fma(_1952, cbSceneParam._m0[_1999].y, _1948 * cbSceneParam._m0[_1999].x)));
        float _2038 = fma(_1960, cbSceneParam._m0[_2015].w, fma(_1956, cbSceneParam._m0[_2015].z, fma(_1952, cbSceneParam._m0[_2015].y, _1948 * cbSceneParam._m0[_2015].x)));
        float _2043 = cbSceneParam._m0[33u].z * _2038;
        float _2045 = cbSceneParam._m0[33u].w * _2038;
        float _2048 = fma(_1960, cbSceneParam._m0[_2007].w, fma(_1956, cbSceneParam._m0[_2007].z, fma(_1952, cbSceneParam._m0[_2007].y, _1948 * cbSceneParam._m0[_2007].x))) / _2038;
        float _2096 = (cbSceneParam._m0[33u].x - sqrt(((_1962 * _1962) + (_1961 * _1961)) + (_1963 * _1963))) * cbSceneParam._m0[33u].y;
        float _3742 = isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0));
        float _2103 = (isnan(1.0) ? _3742 : (isnan(_3742) ? 1.0 : min(_3742, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2043 + _2026) / _2038, (_2045 + _2030) / _2038), _2048), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2045 + _2026) / _2038, (_2030 - _2043) / _2038), _2048), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2026 - _2043) / _2038, (_2030 - _2045) / _2038), _2048), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2026 - _2045) / _2038, (_2043 + _2030) / _2038), _2048), 0.0)).x), vec4(0.25)));
        _2110 = 1.0 - (_2103 * cbSceneParam._m0[34u].x);
        _2111 = 1.0 - (_2103 * cbSceneParam._m0[34u].y);
        _2112 = 1.0 - (_2103 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2110 = 1.0;
        _2111 = 1.0;
        _2112 = 1.0;
    }
    float _2176;
    float _2178;
    float _2180;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2164 = fma(_1960, cbSceneParam._m0[63u].w, fma(_1956, cbSceneParam._m0[63u].z, fma(_1952, cbSceneParam._m0[63u].y, _1948 * cbSceneParam._m0[63u].x)));
        float _2165 = fma(_1960, cbSceneParam._m0[60u].w, fma(_1956, cbSceneParam._m0[60u].z, fma(_1952, cbSceneParam._m0[60u].y, _1948 * cbSceneParam._m0[60u].x))) / _2164;
        float _2166 = fma(_1960, cbSceneParam._m0[61u].w, fma(_1956, cbSceneParam._m0[61u].z, fma(_1952, cbSceneParam._m0[61u].y, _1948 * cbSceneParam._m0[61u].x))) / _2164;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2165 >= cbSceneParam._m0[64u].x) && (_2166 >= cbSceneParam._m0[64u].y)) && (_2165 <= cbSceneParam._m0[64u].z)) && (_2166 <= cbSceneParam._m0[64u].w))
        {
            float _2454 = fma(_1960, cbSceneParam._m0[62u].w, fma(_1956, cbSceneParam._m0[62u].z, fma(_1952, cbSceneParam._m0[62u].y, _1948 * cbSceneParam._m0[62u].x))) / _2164;
            float _2458 = isnan(cbSceneParam._m0[41u].w) ? _2454 : (isnan(_2454) ? cbSceneParam._m0[41u].w : max(_2454, cbSceneParam._m0[41u].w));
            float _2501 = (cbSceneParam._m0[33u].x - sqrt(((_1962 * _1962) + (_1961 * _1961)) + (_1963 * _1963))) * cbSceneParam._m0[33u].y;
            float _3758 = isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0));
            float _2508 = (isnan(1.0) ? _3758 : (isnan(_3758) ? 1.0 : min(_3758, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2165, cbSceneParam._m0[33u].w + _2166), _2458), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2165, _2166 - cbSceneParam._m0[33u].z), _2458), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2165 - cbSceneParam._m0[33u].z, _2166 - cbSceneParam._m0[33u].w), _2458), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2165 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2166), _2458), 0.0)).x), vec4(0.25)));
            float _2512 = 1.0 - (_2508 * cbSceneParam._m0[34u].x);
            float _2513 = 1.0 - (_2508 * cbSceneParam._m0[34u].y);
            float _2514 = 1.0 - (_2508 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2512) ? _2110 : (isnan(_2110) ? _2512 : min(_2110, _2512));
            frontier_phi_39_38_ladder_1 = isnan(_2513) ? _2111 : (isnan(_2111) ? _2513 : min(_2111, _2513));
            frontier_phi_39_38_ladder_2 = isnan(_2514) ? _2112 : (isnan(_2112) ? _2514 : min(_2112, _2514));
        }
        else
        {
            frontier_phi_39_38_ladder = _2110;
            frontier_phi_39_38_ladder_1 = _2111;
            frontier_phi_39_38_ladder_2 = _2112;
        }
        _2176 = frontier_phi_39_38_ladder;
        _2178 = frontier_phi_39_38_ladder_1;
        _2180 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _2176 = _2110;
        _2178 = _2111;
        _2180 = _2112;
    }
    uint _2182 = _775 + 5u;
    uint _2187 = floatBitsToUint(cbInstanceData._m0[_2182]).x * 14u;
    float _2194 = (cbLight._m0[_2187 + 13u].x * (_800 + (-1.0))) + 1.0;
    uint _2195 = _2187 + 4u;
    float _2205 = isnan(1.0) ? _2194 : (isnan(_2194) ? 1.0 : min(_2194, 1.0));
    float _2214 = dot(vec3(cbLight._m0[_2187].xyz), vec3(_673, _674, _675));
    float _3789 = isnan(0.0) ? _2214 : (isnan(_2214) ? 0.0 : max(_2214, 0.0));
    float _2218 = (isnan(1.0) ? _3789 : (isnan(_3789) ? 1.0 : min(_3789, 1.0))) * 0.3183098733425140380859375;
    uint _2224 = _2187 + 8u;
    float _2237 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2187].w)) * _677) * 0.949999988079071044921875);
    float _2238 = _2237 * _2237;
    float _2239 = cbLight._m0[_2187].x + _741;
    float _2240 = cbLight._m0[_2187].y + _742;
    float _2241 = cbLight._m0[_2187].z + _743;
    float _2245 = inversesqrt(dot(vec3(_2239, _2240, _2241), vec3(_2239, _2240, _2241)));
    float _2246 = _2245 * _2239;
    float _2247 = _2245 * _2240;
    float _2248 = _2245 * _2241;
    float _2249 = dot(vec3(_673, _674, _675), vec3(cbLight._m0[_2187].xyz));
    float _3800 = isnan(0.0) ? _2249 : (isnan(_2249) ? 0.0 : max(_2249, 0.0));
    float _2252 = isnan(1.0) ? _3800 : (isnan(_3800) ? 1.0 : min(_3800, 1.0));
    float _3811 = isnan(0.0) ? _801 : (isnan(_801) ? 0.0 : max(_801, 0.0));
    float _2253 = isnan(1.0) ? _3811 : (isnan(_3811) ? 1.0 : min(_3811, 1.0));
    float _2254 = dot(vec3(_673, _674, _675), vec3(_2246, _2247, _2248));
    float _3822 = isnan(0.0) ? _2254 : (isnan(_2254) ? 0.0 : max(_2254, 0.0));
    float _2257 = isnan(1.0) ? _3822 : (isnan(_3822) ? 1.0 : min(_3822, 1.0));
    float _2258 = dot(vec3(cbLight._m0[_2187].xyz), vec3(_2246, _2247, _2248));
    float _3833 = isnan(0.0) ? _2258 : (isnan(_2258) ? 0.0 : max(_2258, 0.0));
    float _2262 = _2238 * _2238;
    float _2266 = ((_2257 * _2257) * (_2262 + (-1.0))) + 1.0;
    float _2277 = (exp2(log2(1.0 - (isnan(1.0) ? _3833 : (isnan(_3833) ? 1.0 : min(_3833, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2278 = 1.0 - _2238;
    float _2289 = (0.5 / (((_2253 * ((_2252 * _2278) + _2238)) + 9.9999999392252902907785028219223e-09) + (((_2253 * _2278) + _2238) * _2252))) * _2252;
    float _3844 = isnan(0.0) ? _2289 : (isnan(_2289) ? 0.0 : max(_2289, 0.0));
    float _2291 = (isnan(1.0) ? _3844 : (isnan(_3844) ? 1.0 : min(_3844, 1.0))) * (_2262 / ((_2266 * _2266) * 3.141590118408203125));
    float _2319 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2320 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2321 = cbSceneParam._m0[86u].x * (_1873 + ((_823 * cbMtdParam._m0[11u].y) * dot(vec3(_673, _674, _675), vec3(_204, _205, _206))));
    float _2322 = isnan(_2319) ? _2321 : (isnan(_2321) ? _2319 : min(_2321, _2319));
    float _2323 = isnan(_2320) ? _762 : (isnan(_762) ? _2320 : min(_762, _2320));
    vec4 _2325 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2322, _2323), 0.0);
    float _2327 = _2325.x;
    bool _2347 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2327)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2327))) > _685;
    float _2348 = _2347 ? _2322 : _761;
    float _2349 = _2347 ? _2323 : _762;
    vec4 _2351 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2348, _2349));
    vec4 _2356 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2348, _2349));
    float _2358 = _2356.x;
    bool _2363 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2372 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2378 = (_2363 ? (_2372 / (cbSceneParam._m0[2u].x - _2358)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2358))) - _685;
    float _2380 = cbMtdParam._m0[21u].x + cbMtdParam._m0[20u].y;
    float _2381 = cbMtdParam._m0[21u].y + cbMtdParam._m0[20u].z;
    float _2382 = cbMtdParam._m0[21u].z + cbMtdParam._m0[20u].w;
    bool _2388 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2392 = (isnan(_2378) ? 0.0 : (isnan(0.0) ? _2378 : max(0.0, _2378))) * (-1.44269502162933349609375);
    float _3870 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
    float _3881 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    float _3892 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
    float _2597;
    float _2598;
    float _2599;
    if ((1.0 - _649) > 0.00999999977648258209228515625)
    {
        vec4 _2516 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2348, _2349), 0.0);
        float _2518 = _2516.x;
        float _2524 = (_2363 ? (_2372 / (cbSceneParam._m0[2u].x - _2518)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2518))) - _685;
        uint _2530 = floatBitsToUint(cbInstanceData._m0[_2182]).x * 14u;
        uint _2536 = _2530 + 4u;
        float _2545 = dot(vec3(cbLight._m0[_2530].xyz), vec3(_225, _226, _227));
        float _2553 = dot(vec3((-0.0) - _741, (-0.0) - _742, (-0.0) - _743), vec3((-0.0) - _225, (-0.0) - _226, (-0.0) - _227));
        float _2558 = ((isnan(0.0) ? _2553 : (isnan(_2553) ? 0.0 : max(_2553, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2545 : (isnan(_2545) ? 0.001000000047497451305389404296875 : max(_2545, 0.001000000047497451305389404296875)))) + 1.0;
        float _2560 = (-0.0) - ((isnan(_2524) ? 0.0 : (isnan(0.0) ? _2524 : max(0.0, _2524))) * _2558);
        _2597 = _2388 ? 0.0 : ((((cbMtdParam._m0[20u].y * 0.079577468335628509521484375) * cbLight._m0[_2536].x) / ((_2558 * _2380) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2380 * 1.44269502162933349609375) * _2560)));
        _2598 = _2388 ? 0.0 : ((((cbMtdParam._m0[20u].z * 0.079577468335628509521484375) * cbLight._m0[_2536].y) / ((_2558 * _2381) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2381 * 1.44269502162933349609375) * _2560)));
        _2599 = _2388 ? 0.0 : ((((cbMtdParam._m0[20u].w * 0.079577468335628509521484375) * cbLight._m0[_2536].z) / ((_2558 * _2382) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2382 * 1.44269502162933349609375) * _2560)));
    }
    else
    {
        _2597 = 0.0;
        _2598 = 0.0;
        _2599 = 0.0;
    }
    float _2616 = 0.959999978542327880859375 - (exp2(log2(1.0 - _815) * 5.0) * 0.959999978542327880859375);
    float _2617 = (_2597 + ((exp2(_2392 * (_2388 ? 0.0 : _2380)) * _2351.x) * cbSceneParam._m0[72u].w)) * _2616;
    float _2618 = (_2598 + ((exp2(_2392 * (_2388 ? 0.0 : _2381)) * _2351.y) * cbSceneParam._m0[72u].w)) * _2616;
    float _2619 = (_2599 + ((exp2(_2392 * (_2388 ? 0.0 : _2382)) * _2351.z) * cbSceneParam._m0[72u].w)) * _2616;
    float _2627 = (_2617 + (((((_1850 * _1898.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0))) * _1644) * _1914)) + ((((cbLight._m0[_2224].x * _2176) * _2277) * _2291) * _2205)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3870 : (isnan(_3870) ? 1.0 : min(_3870, 1.0))) * ((((cbLight._m0[_2195].x * _2176) * _2205) * _2218) + ((isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0))) * _800))) - _2617) * _649);
    float _2629 = (_2618 + (((((_1850 * _1898.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0))) * _1644) * _1914)) + ((((cbLight._m0[_2224].y * _2178) * _2277) * _2291) * _2205)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3881 : (isnan(_3881) ? 1.0 : min(_3881, 1.0))) * ((((cbLight._m0[_2195].y * _2178) * _2205) * _2218) + ((isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0))) * _800))) - _2618) * _649);
    float _2631 = (_2619 + (((((_1850 * _1898.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0))) * _1644) * _1914)) + ((((cbLight._m0[_2224].z * _2180) * _2277) * _2291) * _2205)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3892 : (isnan(_3892) ? 1.0 : min(_3892, 1.0))) * ((((cbLight._m0[_2195].z * _2180) * _2205) * _2218) + ((isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0))) * _800))) - _2619) * _649);
    float _2636 = cbInstanceData._m0[_775 + 6u].w * (isnan(1.0) ? _3252 : (isnan(_3252) ? 1.0 : min(_3252, 1.0)));
    float _2641 = _761 / cbSceneParam._m0[86u].x;
    float _2642 = _762 / cbSceneParam._m0[86u].y;
    vec4 _2656 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2641, _2642, (log2((isnan(cbSceneParam._m0[77u].w) ? _685 : (isnan(_685) ? cbSceneParam._m0[77u].w : min(_685, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2658 = _2656.x;
    float _2659 = _2656.y;
    float _2660 = _2656.z;
    float _2661 = _2656.w;
    float _2734;
    float _2736;
    float _2738;
    float _2740;
    if (_685 > cbSceneParam._m0[78u].w)
    {
        float _2699 = isnan(_685) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _685 : min(cbSceneParam._m0[80u].w, _685));
        float _2700 = _2699 / _685;
        float _2711 = _2700 * _734;
        float _2712 = _735 * _2700;
        float _2713 = (-0.0) - _2712;
        float _2714 = _2700 * _736;
        float _2716 = (cbSceneParam._m0[77u].w * _2713) / _2699;
        float _2717 = _2716 + cbSceneParam._m0[79u].w;
        float _2718 = cbSceneParam._m0[79u].w - _2712;
        float _2724 = sqrt(((_2711 * _2711) + (_2712 * _2712)) + (_2714 * _2714));
        float _2727 = (1.0 - (cbSceneParam._m0[77u].w / _2699)) * _2724;
        float _2732 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2733 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2926;
        if (abs((_2713 - _2716) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2926 = ((((_2717 > 0.0) ? exp2(_2732 * _2717) : (2.0 - exp2(_2733 * _2717))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2727;
        }
        else
        {
            float _2862 = 1.0 / cbSceneParam._m0[80u].x;
            float _2863 = isnan(_2718) ? _2717 : (isnan(_2717) ? _2718 : max(_2717, _2718));
            float _2864 = isnan(_2718) ? _2717 : (isnan(_2717) ? _2718 : min(_2717, _2718));
            float _2873 = isnan(0.0) ? _2863 : (isnan(_2863) ? 0.0 : min(_2863, 0.0));
            float _2874 = isnan(0.0) ? _2864 : (isnan(_2864) ? 0.0 : min(_2864, 0.0));
            _2926 = ((abs(_2724 / _2713) * cbSceneParam._m0[80u].y) * ((((_2873 - _2874) * 2.0) - ((exp2(_2732 * (isnan(0.0) ? _2863 : (isnan(_2863) ? 0.0 : max(_2863, 0.0)))) - exp2(_2732 * (isnan(0.0) ? _2864 : (isnan(_2864) ? 0.0 : max(_2864, 0.0))))) * _2862)) - ((exp2(_2733 * _2873) - exp2(_2733 * _2874)) * _2862))) + (_2727 * cbSceneParam._m0[80u].z);
        }
        vec4 _2928 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2641, _2642, 1.0), 0.0);
        float _2937 = exp2((_2926 * (-1.44269502162933349609375)) * (1.0 - _2928.w));
        float _2938 = log2(_2937);
        float _2954 = log2(_2661);
        _2734 = (exp2(_2954 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2938 * cbSceneParam._m0[78u].x)) * _2928.x) / cbSceneParam._m0[78u].x)) + _2658;
        _2736 = (exp2(_2954 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2938 * cbSceneParam._m0[78u].y)) * _2928.y) / cbSceneParam._m0[78u].y)) + _2659;
        _2738 = (exp2(_2954 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2938 * cbSceneParam._m0[78u].z)) * _2928.z) / cbSceneParam._m0[78u].z)) + _2660;
        _2740 = _2937 * _2661;
    }
    else
    {
        _2734 = _2658;
        _2736 = _2659;
        _2738 = _2660;
        _2740 = _2661;
    }
    bool _2964;
    float _2795;
    vec4 _2798;
    float _2800;
    vec4 _2802;
    float _2810;
    float _2811;
    float _2812;
    float _2813;
    bool _2823;
    for (;;)
    {
        bool _2752 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2753 = log2(_2740);
        float _2760 = exp2(_2753 * cbSceneParam._m0[78u].x) * _2627;
        float _2761 = exp2(_2753 * cbSceneParam._m0[78u].y) * _2629;
        float _2762 = exp2(_2753 * cbSceneParam._m0[78u].z) * _2631;
        vec4 _2770 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_761, _762));
        float _2772 = _2770.x;
        float _2793 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2772)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2772))) - _685) * 3.0;
        float _3958 = isnan(0.0) ? _2793 : (isnan(_2793) ? 0.0 : max(_2793, 0.0));
        _2795 = _2636 * (isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0)));
        float _2796 = _750 + (-0.5);
        _2798 = cbMtdParam._m0[1u];
        _2800 = _2798.y * _2796;
        _2802 = cbMatDynParam._m0[0u];
        float _2809 = (roundEven(_2802.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2810 = _2809 * (_2752 ? _2760 : (_2760 + (cbSceneParam._m0[72u].w * _2734)));
        _2811 = _2809 * (_2752 ? _2761 : (_2761 + (cbSceneParam._m0[72u].w * _2736)));
        _2812 = _2809 * (_2752 ? _2762 : (_2762 + (cbSceneParam._m0[72u].w * _2738)));
        _2813 = _2796 * 0.999000012874603271484375;
        _2823 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2823)
        {
            if ((cbInstanceData._m0[_775 + 7u].x + _2813) < 0.5)
            {
                _2964 = true;
                break;
            }
        }
        uint _2897 = _776 + uint(_2802.w);
        if ((cbInstanceData._m0[_2897].w < 1.0) && ((cbInstanceData._m0[_2897].w + _2813) < 0.5))
        {
            _2964 = true;
            break;
        }
        if ((_2800 + 1.0) < _2798.x)
        {
            _2964 = true;
            break;
        }
        _2964 = false;
        break;
    }
    float _2969;
    if (_2964)
    {
        discard_state = true;
        _2969 = 0.0;
    }
    else
    {
        _2969 = _2795;
    }
    SV_Target.x = _2810;
    SV_Target.y = _2811;
    SV_Target.z = _2812;
    SV_Target.w = _2969;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2795;
    discard_exit();
}


