#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M1_Scroll_Vatex_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M1_Scroll_Vatex_Alpha_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _143 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _144 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _145 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _151 = inversesqrt(dot(vec3(_143, _144, _145), vec3(_143, _144, _145)));
    float _158 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _159 = _158 * NORMAL.x;
    float _160 = _158 * NORMAL.y;
    float _161 = _158 * NORMAL.z;
    float _165 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _173;
    float _174;
    float _175;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _173 = (-0.0) - _159;
        _174 = (-0.0) - _160;
        _175 = (-0.0) - _161;
    }
    else
    {
        _173 = _159;
        _174 = _160;
        _175 = _161;
    }
    float _189 = (cbMtdParam._m0[10u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x;
    float _190 = (cbMtdParam._m0[10u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y;
    vec4 _203 = texture(sampler2D(M_AMSN_M1_Scroll_Vatex_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((_189 * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (_190 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _209 = _203.w;
    float _210 = _203.x * cbMtdParam._m0[9u].x;
    float _211 = _203.y * cbMtdParam._m0[9u].y;
    float _212 = _203.z * cbMtdParam._m0[9u].z;
    float _213 = _209 * TEXCOORD_1.z;
    vec4 _226 = texture(sampler2D(M_AMSN_M1_Scroll_Vatex_Alpha_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _189) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _190) + cbTextureTilingScale._m0[1u].w));
    float _230 = _226.z;
    float _234 = (_226.x * 2.0) + (-1.0);
    float _236 = (_226.y * 2.0) + (-1.0);
    float _237 = dot(vec2(_234, _236), vec2(_234, _236));
    float _445 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
    float _243 = sqrt(1.0 - (isnan(1.0) ? _445 : (isnan(_445) ? 1.0 : min(_445, 1.0))));
    float _246 = fma(_243, _173, fma(_236, _165 * TANGENT.x, (_151 * _143) * _234));
    float _249 = fma(_243, _174, fma(_236, _165 * TANGENT.y, (_151 * _144) * _234));
    float _252 = fma(_243, _175, fma(_236, _165 * TANGENT.z, (_151 * _145) * _234));
    float _256 = inversesqrt(dot(vec3(_246, _249, _252), vec3(_246, _249, _252)));
    float _456 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _257 = isnan(1.0) ? _456 : (isnan(_456) ? 1.0 : min(_456, 1.0));
    float _467 = isnan(0.0) ? _230 : (isnan(_230) ? 0.0 : max(_230, 0.0));
    float _478 = isnan(0.0) ? _210 : (isnan(_210) ? 0.0 : max(_210, 0.0));
    float _259 = isnan(1.0) ? _478 : (isnan(_478) ? 1.0 : min(_478, 1.0));
    float _489 = isnan(0.0) ? _211 : (isnan(_211) ? 0.0 : max(_211, 0.0));
    float _260 = isnan(1.0) ? _489 : (isnan(_489) ? 1.0 : min(_489, 1.0));
    float _500 = isnan(0.0) ? _212 : (isnan(_212) ? 0.0 : max(_212, 0.0));
    float _261 = isnan(1.0) ? _500 : (isnan(_500) ? 1.0 : min(_500, 1.0));
    float _511 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    uint _264 = uint(roundEven(NORMAL.w));
    vec4 _269 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _271 = _269.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _336 = (cbMatDynParam._m0[5u].x * TEXCOORD_9) + cbMatDynParam._m0[5u].y;
        float _522 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
        float _337 = isnan(1.0) ? _522 : (isnan(_522) ? 1.0 : min(_522, 1.0));
        float _341 = (cbMatDynParam._m0[5u].z * TEXCOORD_9) + cbMatDynParam._m0[5u].w;
        float _533 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _533 : (isnan(_533) ? 1.0 : min(_533, 1.0))) - _337)) + _337) < ((_271 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _370;
    uint _291;
    vec4 _296;
    float _303;
    float _304;
    float _305;
    float _311;
    vec4 _315;
    float _317;
    float _318;
    bool _329;
    for (;;)
    {
        _291 = _264 * 13u;
        _296 = cbInstanceData._m0[(_291 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _300 = (cbMtdParam._m0[0u].x * _259) * _296.x;
        float _301 = (cbMtdParam._m0[0u].y * _260) * _296.y;
        float _302 = (cbMtdParam._m0[0u].z * _261) * _296.z;
        float _544 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
        _303 = isnan(1.0) ? _544 : (isnan(_544) ? 1.0 : min(_544, 1.0));
        float _555 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
        _304 = isnan(1.0) ? _555 : (isnan(_555) ? 1.0 : min(_555, 1.0));
        float _566 = isnan(0.0) ? _302 : (isnan(_302) ? 0.0 : max(_302, 0.0));
        _305 = isnan(1.0) ? _566 : (isnan(_566) ? 1.0 : min(_566, 1.0));
        float _577 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
        _311 = cbInstanceData._m0[_291 + 6u].w * (isnan(1.0) ? _577 : (isnan(_577) ? 1.0 : min(_577, 1.0)));
        float _312 = _271 + (-0.5);
        _315 = cbMtdParam._m0[1u];
        _317 = _315.y * _312;
        _318 = _312 * 0.999000012874603271484375;
        _329 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_329)
        {
            if ((cbInstanceData._m0[_291 + 7u].x + _318) < 0.5)
            {
                _370 = true;
                break;
            }
        }
        if ((_296.w < 1.0) && ((_296.w + _318) < 0.5))
        {
            _370 = true;
            break;
        }
        if ((_317 + _209) < _315.x)
        {
            _370 = true;
            break;
        }
        _370 = false;
        break;
    }
    if (_370)
    {
        discard_state = true;
    }
    bool _396 = cbMtdParam._m0[1u].z != 0.0;
    float _397 = _396 ? _311 : 0.0;
    SV_Target.x = ((_246 * 0.5) * _256) + 0.500488758087158203125;
    SV_Target.y = ((_249 * 0.5) * _256) + 0.500488758087158203125;
    SV_Target.z = ((_252 * 0.5) * _256) + 0.500488758087158203125;
    SV_Target.w = _397;
    SV_Target_1.x = isnan(1.0) ? _511 : (isnan(_511) ? 1.0 : min(_511, 1.0));
    SV_Target_1.y = isnan(1.0) ? _467 : (isnan(_467) ? 1.0 : min(_467, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _396 ? _311 : TEXCOORD_1.w;
    SV_Target_2.x = _303;
    SV_Target_2.y = _304;
    SV_Target_2.z = _305;
    SV_Target_2.w = _396 ? _311 : (float(floatBitsToUint(cbInstanceData._m0[_291 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _397;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _397;
    discard_exit();
}


