#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_M1_Scroll_Vatex_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M1_Scroll_Vatex_Alpha_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M1_Scroll_Vatex_Alpha_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _134 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _135 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _141 = inversesqrt(dot(vec3(_133, _134, _135), vec3(_133, _134, _135)));
    float _148 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _149 = _148 * NORMAL.x;
    float _150 = _148 * NORMAL.y;
    float _151 = _148 * NORMAL.z;
    float _155 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _163;
    float _164;
    float _165;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _163 = (-0.0) - _149;
        _164 = (-0.0) - _150;
        _165 = (-0.0) - _151;
    }
    else
    {
        _163 = _149;
        _164 = _150;
        _165 = _151;
    }
    float _179 = (cbMtdParam._m0[10u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x;
    float _180 = (cbMtdParam._m0[10u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y;
    vec4 _193 = texture(sampler2D(M_AMSN_M1_Scroll_Vatex_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((_179 * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (_180 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _200 = _193.x * cbMtdParam._m0[9u].x;
    float _201 = _193.y * cbMtdParam._m0[9u].y;
    float _202 = _193.z * cbMtdParam._m0[9u].z;
    float _203 = _193.w * TEXCOORD_1.z;
    float _219 = cbMtdParam._m0[10u].x + texture(sampler2D(M_AMSN_M1_Scroll_Vatex_Alpha_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _179) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _180) + cbTextureTilingScale._m0[2u].w)).x;
    vec4 _231 = texture(sampler2D(M_AMSN_M1_Scroll_Vatex_Alpha_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _179) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _180) + cbTextureTilingScale._m0[1u].w));
    float _235 = _231.z;
    float _239 = (_231.x * 2.0) + (-1.0);
    float _241 = (_231.y * 2.0) + (-1.0);
    float _242 = dot(vec2(_239, _241), vec2(_239, _241));
    float _356 = isnan(0.0) ? _242 : (isnan(_242) ? 0.0 : max(_242, 0.0));
    float _248 = sqrt(1.0 - (isnan(1.0) ? _356 : (isnan(_356) ? 1.0 : min(_356, 1.0))));
    float _251 = fma(_248, _163, fma(_241, _155 * TANGENT.x, (_141 * _133) * _239));
    float _254 = fma(_248, _164, fma(_241, _155 * TANGENT.y, (_141 * _134) * _239));
    float _257 = fma(_248, _165, fma(_241, _155 * TANGENT.z, (_141 * _135) * _239));
    float _261 = inversesqrt(dot(vec3(_251, _254, _257), vec3(_251, _254, _257)));
    float _367 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _262 = isnan(1.0) ? _367 : (isnan(_367) ? 1.0 : min(_367, 1.0));
    float _378 = isnan(0.0) ? _235 : (isnan(_235) ? 0.0 : max(_235, 0.0));
    float _389 = isnan(0.0) ? _200 : (isnan(_200) ? 0.0 : max(_200, 0.0));
    float _400 = isnan(0.0) ? _201 : (isnan(_201) ? 0.0 : max(_201, 0.0));
    float _411 = isnan(0.0) ? _202 : (isnan(_202) ? 0.0 : max(_202, 0.0));
    float _422 = isnan(0.0) ? _219 : (isnan(_219) ? 0.0 : max(_219, 0.0));
    uint _282 = uint(roundEven(NORMAL.w)) * 13u;
    uint _285 = (_282 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _291 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _389 : (isnan(_389) ? 1.0 : min(_389, 1.0)))) * cbInstanceData._m0[_285].x;
    float _292 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _400 : (isnan(_400) ? 1.0 : min(_400, 1.0)))) * cbInstanceData._m0[_285].y;
    float _293 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _411 : (isnan(_411) ? 1.0 : min(_411, 1.0)))) * cbInstanceData._m0[_285].z;
    float _433 = isnan(0.0) ? _291 : (isnan(_291) ? 0.0 : max(_291, 0.0));
    float _444 = isnan(0.0) ? _292 : (isnan(_292) ? 0.0 : max(_292, 0.0));
    float _455 = isnan(0.0) ? _293 : (isnan(_293) ? 0.0 : max(_293, 0.0));
    float _466 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
    float _303 = cbInstanceData._m0[_282 + 6u].w * (isnan(1.0) ? _466 : (isnan(_466) ? 1.0 : min(_466, 1.0)));
    bool _328 = cbMtdParam._m0[1u].z != 0.0;
    float _329 = _328 ? _303 : 0.0;
    SV_Target.x = ((_251 * 0.5) * _261) + 0.500488758087158203125;
    SV_Target.y = ((_254 * 0.5) * _261) + 0.500488758087158203125;
    SV_Target.z = ((_257 * 0.5) * _261) + 0.500488758087158203125;
    SV_Target.w = _329;
    SV_Target_1.x = isnan(1.0) ? _422 : (isnan(_422) ? 1.0 : min(_422, 1.0));
    SV_Target_1.y = isnan(1.0) ? _378 : (isnan(_378) ? 1.0 : min(_378, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _328 ? _303 : TEXCOORD_1.w;
    SV_Target_2.x = isnan(1.0) ? _433 : (isnan(_433) ? 1.0 : min(_433, 1.0));
    SV_Target_2.y = isnan(1.0) ? _444 : (isnan(_444) ? 1.0 : min(_444, 1.0));
    SV_Target_2.z = isnan(1.0) ? _455 : (isnan(_455) ? 1.0 : min(_455, 1.0));
    SV_Target_2.w = _328 ? _303 : (float(floatBitsToUint(cbInstanceData._m0[_282 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _329;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _329;
}


