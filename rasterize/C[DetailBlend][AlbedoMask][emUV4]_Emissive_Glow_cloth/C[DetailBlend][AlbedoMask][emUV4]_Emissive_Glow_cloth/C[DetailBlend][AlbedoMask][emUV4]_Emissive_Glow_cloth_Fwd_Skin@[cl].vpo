#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec3 TEXCOORD_4;

void main()
{
    uint _79 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    float _208 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _210 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _211 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _219 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _220 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _460;
    float _461;
    float _462;
    float _463;
    float _464;
    float _465;
    float _466;
    float _467;
    float _468;
    float _469;
    float _470;
    float _471;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _244 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
        precise float _248 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _253 = isnan(_248) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _248 : max(0.001000000047497451305389404296875, _248));
        precise float _255 = BLENDWEIGHT.x / _253;
        precise float _256 = BLENDWEIGHT.y / _253;
        precise float _257 = BLENDWEIGHT.z / _253;
        precise float _258 = BLENDWEIGHT.w / _253;
        uvec4 _265 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_244)).x * 13u) + 4u]);
        uint _266 = _265.x;
        uint _268 = (_266 + uint(float(BLENDINDICES.x))) * 3u;
        uint _275 = _268 + 1u;
        uint _282 = _268 + 2u;
        precise float _289 = _255 * cbObjMatrix._m0[_268].x;
        precise float _290 = _255 * cbObjMatrix._m0[_275].x;
        precise float _291 = _255 * cbObjMatrix._m0[_282].x;
        precise float _292 = _255 * cbObjMatrix._m0[_268].y;
        precise float _293 = _255 * cbObjMatrix._m0[_275].y;
        precise float _294 = _255 * cbObjMatrix._m0[_282].y;
        precise float _295 = _255 * cbObjMatrix._m0[_268].z;
        precise float _296 = _255 * cbObjMatrix._m0[_275].z;
        precise float _297 = _255 * cbObjMatrix._m0[_282].z;
        precise float _298 = _255 * cbObjMatrix._m0[_268].w;
        precise float _299 = _255 * cbObjMatrix._m0[_275].w;
        precise float _300 = _255 * cbObjMatrix._m0[_282].w;
        uint _303 = (_266 + uint(float(BLENDINDICES.y))) * 3u;
        uint _310 = _303 + 1u;
        uint _317 = _303 + 2u;
        precise float _324 = _256 * cbObjMatrix._m0[_303].x;
        precise float _325 = _256 * cbObjMatrix._m0[_310].x;
        precise float _326 = _256 * cbObjMatrix._m0[_317].x;
        precise float _327 = _256 * cbObjMatrix._m0[_303].y;
        precise float _328 = _256 * cbObjMatrix._m0[_310].y;
        precise float _329 = _256 * cbObjMatrix._m0[_317].y;
        precise float _330 = _256 * cbObjMatrix._m0[_303].z;
        precise float _331 = _256 * cbObjMatrix._m0[_310].z;
        precise float _332 = _256 * cbObjMatrix._m0[_317].z;
        precise float _333 = _256 * cbObjMatrix._m0[_303].w;
        precise float _334 = _256 * cbObjMatrix._m0[_310].w;
        precise float _335 = _256 * cbObjMatrix._m0[_317].w;
        precise float _336 = _289 + _324;
        precise float _337 = _290 + _325;
        precise float _338 = _291 + _326;
        precise float _339 = _292 + _327;
        precise float _340 = _293 + _328;
        precise float _341 = _294 + _329;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        precise float _345 = _298 + _333;
        precise float _346 = _299 + _334;
        precise float _347 = _300 + _335;
        uint _350 = (_266 + uint(float(BLENDINDICES.z))) * 3u;
        uint _357 = _350 + 1u;
        uint _364 = _350 + 2u;
        precise float _371 = _257 * cbObjMatrix._m0[_350].x;
        precise float _372 = _257 * cbObjMatrix._m0[_357].x;
        precise float _373 = _257 * cbObjMatrix._m0[_364].x;
        precise float _374 = _257 * cbObjMatrix._m0[_350].y;
        precise float _375 = _257 * cbObjMatrix._m0[_357].y;
        precise float _376 = _257 * cbObjMatrix._m0[_364].y;
        precise float _377 = _257 * cbObjMatrix._m0[_350].z;
        precise float _378 = _257 * cbObjMatrix._m0[_357].z;
        precise float _379 = _257 * cbObjMatrix._m0[_364].z;
        precise float _380 = _257 * cbObjMatrix._m0[_350].w;
        precise float _381 = _257 * cbObjMatrix._m0[_357].w;
        precise float _382 = _257 * cbObjMatrix._m0[_364].w;
        precise float _383 = _336 + _371;
        precise float _384 = _337 + _372;
        precise float _385 = _338 + _373;
        precise float _386 = _339 + _374;
        precise float _387 = _340 + _375;
        precise float _388 = _341 + _376;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        precise float _392 = _345 + _380;
        precise float _393 = _346 + _381;
        precise float _394 = _347 + _382;
        uint _397 = (_266 + uint(float(BLENDINDICES.w))) * 3u;
        uint _404 = _397 + 1u;
        uint _411 = _397 + 2u;
        precise float _418 = _258 * cbObjMatrix._m0[_397].x;
        precise float _419 = _258 * cbObjMatrix._m0[_404].x;
        precise float _420 = _258 * cbObjMatrix._m0[_411].x;
        precise float _421 = _258 * cbObjMatrix._m0[_397].y;
        precise float _422 = _258 * cbObjMatrix._m0[_404].y;
        precise float _423 = _258 * cbObjMatrix._m0[_411].y;
        precise float _424 = _258 * cbObjMatrix._m0[_397].z;
        precise float _425 = _258 * cbObjMatrix._m0[_404].z;
        precise float _426 = _258 * cbObjMatrix._m0[_411].z;
        precise float _427 = _258 * cbObjMatrix._m0[_397].w;
        precise float _428 = _258 * cbObjMatrix._m0[_404].w;
        precise float _429 = _258 * cbObjMatrix._m0[_411].w;
        precise float _430 = _383 + _418;
        precise float _431 = _384 + _419;
        precise float _432 = _385 + _420;
        precise float _433 = _386 + _421;
        precise float _434 = _387 + _422;
        precise float _435 = _388 + _423;
        precise float _436 = _389 + _424;
        precise float _437 = _390 + _425;
        precise float _438 = _391 + _426;
        precise float _439 = _392 + _427;
        precise float _440 = _393 + _428;
        precise float _441 = _394 + _429;
        _460 = _430;
        _461 = _433;
        _462 = _436;
        _463 = _439;
        _464 = _431;
        _465 = _434;
        _466 = _437;
        _467 = _440;
        _468 = _432;
        _469 = _435;
        _470 = _438;
        _471 = _441;
    }
    else
    {
        _460 = cbvModelParam._m0[0u].x;
        _461 = cbvModelParam._m0[0u].y;
        _462 = cbvModelParam._m0[0u].z;
        _463 = cbvModelParam._m0[0u].w;
        _464 = cbvModelParam._m0[1u].x;
        _465 = cbvModelParam._m0[1u].y;
        _466 = cbvModelParam._m0[1u].z;
        _467 = cbvModelParam._m0[1u].w;
        _468 = cbvModelParam._m0[2u].x;
        _469 = cbvModelParam._m0[2u].y;
        _470 = cbvModelParam._m0[2u].z;
        _471 = cbvModelParam._m0[2u].w;
    }
    precise float _472 = POSITION.x * _460;
    precise float _473 = POSITION.y * _461;
    precise float _474 = _473 + _472;
    precise float _475 = POSITION.z * _462;
    precise float _476 = _475 + _474;
    precise float _477 = 1.0 * _463;
    precise float _478 = _477 + _476;
    precise float _479 = POSITION.x * _464;
    precise float _480 = POSITION.y * _465;
    precise float _481 = _480 + _479;
    precise float _482 = POSITION.z * _466;
    precise float _483 = _482 + _481;
    precise float _484 = 1.0 * _467;
    precise float _485 = _484 + _483;
    precise float _486 = POSITION.x * _468;
    precise float _487 = POSITION.y * _469;
    precise float _488 = _487 + _486;
    precise float _489 = POSITION.z * _470;
    precise float _490 = _489 + _488;
    precise float _491 = 1.0 * _471;
    precise float _492 = _491 + _490;
    uint _506 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
    precise float _525 = _478 - cbSceneParam._m0[3u].x;
    precise float _526 = _485 - cbSceneParam._m0[3u].y;
    precise float _527 = _492 - cbSceneParam._m0[3u].z;
    precise float _555 = _525 * cbSceneParam._m0[24u].x;
    precise float _556 = _526 * cbSceneParam._m0[24u].y;
    precise float _557 = _556 + _555;
    precise float _558 = _527 * cbSceneParam._m0[24u].z;
    precise float _559 = _558 + _557;
    precise float _560 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _561 = _560 + _559;
    precise float _562 = _525 * cbSceneParam._m0[25u].x;
    precise float _563 = _526 * cbSceneParam._m0[25u].y;
    precise float _564 = _563 + _562;
    precise float _565 = _527 * cbSceneParam._m0[25u].z;
    precise float _566 = _565 + _564;
    precise float _567 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _568 = _567 + _566;
    precise float _569 = _525 * cbSceneParam._m0[26u].x;
    precise float _570 = _526 * cbSceneParam._m0[26u].y;
    precise float _571 = _570 + _569;
    precise float _572 = _527 * cbSceneParam._m0[26u].z;
    precise float _573 = _572 + _571;
    precise float _574 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _575 = _574 + _573;
    precise float _576 = _525 * cbSceneParam._m0[27u].x;
    precise float _577 = _526 * cbSceneParam._m0[27u].y;
    precise float _578 = _577 + _576;
    precise float _579 = _527 * cbSceneParam._m0[27u].z;
    precise float _580 = _579 + _578;
    precise float _581 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _582 = _581 + _580;
    gl_Position.x = _561;
    gl_Position.y = _568;
    gl_Position.z = _575;
    gl_Position.w = _582;
    POSITION_1.x = _561;
    POSITION_1.y = _568;
    POSITION_1.z = _575;
    POSITION_1.w = _582;
    NORMAL_1.x = fma(_211, _462, fma(_210, _461, _460 * _208));
    NORMAL_1.y = fma(_211, _466, fma(_210, _465, _464 * _208));
    NORMAL_1.z = fma(_211, _470, fma(_210, _469, _468 * _208));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_506)).x);
    TANGENT_1.x = fma(_220, _462, fma(_219, _461, _460 * _218));
    TANGENT_1.y = fma(_220, _466, fma(_219, _465, _464 * _218));
    TANGENT_1.z = fma(_220, _470, fma(_219, _469, _468 * _218));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
}


