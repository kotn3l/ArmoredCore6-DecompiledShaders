#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_2;
layout(location = 4) out vec3 TEXCOORD_4;
layout(location = 4, component = 3) out float TEXCOORD_12;

void main()
{
    uint _80 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_12 = 0.0;
    float _204 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _214 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _215 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _456;
    float _457;
    float _458;
    float _459;
    float _460;
    float _461;
    float _462;
    float _463;
    float _464;
    float _465;
    float _466;
    float _467;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _240 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _80;
        precise float _244 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _249 = isnan(_244) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _244 : max(0.001000000047497451305389404296875, _244));
        precise float _251 = BLENDWEIGHT.x / _249;
        precise float _252 = BLENDWEIGHT.y / _249;
        precise float _253 = BLENDWEIGHT.z / _249;
        precise float _254 = BLENDWEIGHT.w / _249;
        uvec4 _261 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_240)).x * 13u) + 4u]);
        uint _262 = _261.x;
        uint _264 = (_262 + uint(float(BLENDINDICES.x))) * 3u;
        uint _271 = _264 + 1u;
        uint _278 = _264 + 2u;
        precise float _285 = _251 * cbObjMatrix._m0[_264].x;
        precise float _286 = _251 * cbObjMatrix._m0[_271].x;
        precise float _287 = _251 * cbObjMatrix._m0[_278].x;
        precise float _288 = _251 * cbObjMatrix._m0[_264].y;
        precise float _289 = _251 * cbObjMatrix._m0[_271].y;
        precise float _290 = _251 * cbObjMatrix._m0[_278].y;
        precise float _291 = _251 * cbObjMatrix._m0[_264].z;
        precise float _292 = _251 * cbObjMatrix._m0[_271].z;
        precise float _293 = _251 * cbObjMatrix._m0[_278].z;
        precise float _294 = _251 * cbObjMatrix._m0[_264].w;
        precise float _295 = _251 * cbObjMatrix._m0[_271].w;
        precise float _296 = _251 * cbObjMatrix._m0[_278].w;
        uint _299 = (_262 + uint(float(BLENDINDICES.y))) * 3u;
        uint _306 = _299 + 1u;
        uint _313 = _299 + 2u;
        precise float _320 = _252 * cbObjMatrix._m0[_299].x;
        precise float _321 = _252 * cbObjMatrix._m0[_306].x;
        precise float _322 = _252 * cbObjMatrix._m0[_313].x;
        precise float _323 = _252 * cbObjMatrix._m0[_299].y;
        precise float _324 = _252 * cbObjMatrix._m0[_306].y;
        precise float _325 = _252 * cbObjMatrix._m0[_313].y;
        precise float _326 = _252 * cbObjMatrix._m0[_299].z;
        precise float _327 = _252 * cbObjMatrix._m0[_306].z;
        precise float _328 = _252 * cbObjMatrix._m0[_313].z;
        precise float _329 = _252 * cbObjMatrix._m0[_299].w;
        precise float _330 = _252 * cbObjMatrix._m0[_306].w;
        precise float _331 = _252 * cbObjMatrix._m0[_313].w;
        precise float _332 = _285 + _320;
        precise float _333 = _286 + _321;
        precise float _334 = _287 + _322;
        precise float _335 = _288 + _323;
        precise float _336 = _289 + _324;
        precise float _337 = _290 + _325;
        precise float _338 = _291 + _326;
        precise float _339 = _292 + _327;
        precise float _340 = _293 + _328;
        precise float _341 = _294 + _329;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        uint _346 = (_262 + uint(float(BLENDINDICES.z))) * 3u;
        uint _353 = _346 + 1u;
        uint _360 = _346 + 2u;
        precise float _367 = _253 * cbObjMatrix._m0[_346].x;
        precise float _368 = _253 * cbObjMatrix._m0[_353].x;
        precise float _369 = _253 * cbObjMatrix._m0[_360].x;
        precise float _370 = _253 * cbObjMatrix._m0[_346].y;
        precise float _371 = _253 * cbObjMatrix._m0[_353].y;
        precise float _372 = _253 * cbObjMatrix._m0[_360].y;
        precise float _373 = _253 * cbObjMatrix._m0[_346].z;
        precise float _374 = _253 * cbObjMatrix._m0[_353].z;
        precise float _375 = _253 * cbObjMatrix._m0[_360].z;
        precise float _376 = _253 * cbObjMatrix._m0[_346].w;
        precise float _377 = _253 * cbObjMatrix._m0[_353].w;
        precise float _378 = _253 * cbObjMatrix._m0[_360].w;
        precise float _379 = _332 + _367;
        precise float _380 = _333 + _368;
        precise float _381 = _334 + _369;
        precise float _382 = _335 + _370;
        precise float _383 = _336 + _371;
        precise float _384 = _337 + _372;
        precise float _385 = _338 + _373;
        precise float _386 = _339 + _374;
        precise float _387 = _340 + _375;
        precise float _388 = _341 + _376;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        uint _393 = (_262 + uint(float(BLENDINDICES.w))) * 3u;
        uint _400 = _393 + 1u;
        uint _407 = _393 + 2u;
        precise float _414 = _254 * cbObjMatrix._m0[_393].x;
        precise float _415 = _254 * cbObjMatrix._m0[_400].x;
        precise float _416 = _254 * cbObjMatrix._m0[_407].x;
        precise float _417 = _254 * cbObjMatrix._m0[_393].y;
        precise float _418 = _254 * cbObjMatrix._m0[_400].y;
        precise float _419 = _254 * cbObjMatrix._m0[_407].y;
        precise float _420 = _254 * cbObjMatrix._m0[_393].z;
        precise float _421 = _254 * cbObjMatrix._m0[_400].z;
        precise float _422 = _254 * cbObjMatrix._m0[_407].z;
        precise float _423 = _254 * cbObjMatrix._m0[_393].w;
        precise float _424 = _254 * cbObjMatrix._m0[_400].w;
        precise float _425 = _254 * cbObjMatrix._m0[_407].w;
        precise float _426 = _379 + _414;
        precise float _427 = _380 + _415;
        precise float _428 = _381 + _416;
        precise float _429 = _382 + _417;
        precise float _430 = _383 + _418;
        precise float _431 = _384 + _419;
        precise float _432 = _385 + _420;
        precise float _433 = _386 + _421;
        precise float _434 = _387 + _422;
        precise float _435 = _388 + _423;
        precise float _436 = _389 + _424;
        precise float _437 = _390 + _425;
        _456 = _426;
        _457 = _429;
        _458 = _432;
        _459 = _435;
        _460 = _427;
        _461 = _430;
        _462 = _433;
        _463 = _436;
        _464 = _428;
        _465 = _431;
        _466 = _434;
        _467 = _437;
    }
    else
    {
        _456 = cbvModelParam._m0[0u].x;
        _457 = cbvModelParam._m0[0u].y;
        _458 = cbvModelParam._m0[0u].z;
        _459 = cbvModelParam._m0[0u].w;
        _460 = cbvModelParam._m0[1u].x;
        _461 = cbvModelParam._m0[1u].y;
        _462 = cbvModelParam._m0[1u].z;
        _463 = cbvModelParam._m0[1u].w;
        _464 = cbvModelParam._m0[2u].x;
        _465 = cbvModelParam._m0[2u].y;
        _466 = cbvModelParam._m0[2u].z;
        _467 = cbvModelParam._m0[2u].w;
    }
    precise float _468 = POSITION.x * _456;
    precise float _469 = POSITION.y * _457;
    precise float _470 = _469 + _468;
    precise float _471 = POSITION.z * _458;
    precise float _472 = _471 + _470;
    precise float _473 = 1.0 * _459;
    precise float _474 = _473 + _472;
    precise float _475 = POSITION.x * _460;
    precise float _476 = POSITION.y * _461;
    precise float _477 = _476 + _475;
    precise float _478 = POSITION.z * _462;
    precise float _479 = _478 + _477;
    precise float _480 = 1.0 * _463;
    precise float _481 = _480 + _479;
    precise float _482 = POSITION.x * _464;
    precise float _483 = POSITION.y * _465;
    precise float _484 = _483 + _482;
    precise float _485 = POSITION.z * _466;
    precise float _486 = _485 + _484;
    precise float _487 = 1.0 * _467;
    precise float _488 = _487 + _486;
    float _494 = cbSceneParam._m0[3u].x - _474;
    float _495 = cbSceneParam._m0[3u].y - _481;
    float _496 = cbSceneParam._m0[3u].z - _488;
    uint _516 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _80;
    precise float _530 = _474 - cbSceneParam._m0[3u].x;
    precise float _531 = _481 - cbSceneParam._m0[3u].y;
    precise float _532 = _488 - cbSceneParam._m0[3u].z;
    precise float _560 = _530 * cbSceneParam._m0[24u].x;
    precise float _561 = _531 * cbSceneParam._m0[24u].y;
    precise float _562 = _561 + _560;
    precise float _563 = _532 * cbSceneParam._m0[24u].z;
    precise float _564 = _563 + _562;
    precise float _565 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _566 = _565 + _564;
    precise float _567 = _530 * cbSceneParam._m0[25u].x;
    precise float _568 = _531 * cbSceneParam._m0[25u].y;
    precise float _569 = _568 + _567;
    precise float _570 = _532 * cbSceneParam._m0[25u].z;
    precise float _571 = _570 + _569;
    precise float _572 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _573 = _572 + _571;
    precise float _574 = _530 * cbSceneParam._m0[26u].x;
    precise float _575 = _531 * cbSceneParam._m0[26u].y;
    precise float _576 = _575 + _574;
    precise float _577 = _532 * cbSceneParam._m0[26u].z;
    precise float _578 = _577 + _576;
    precise float _579 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _580 = _579 + _578;
    precise float _581 = _530 * cbSceneParam._m0[27u].x;
    precise float _582 = _531 * cbSceneParam._m0[27u].y;
    precise float _583 = _582 + _581;
    precise float _584 = _532 * cbSceneParam._m0[27u].z;
    precise float _585 = _584 + _583;
    precise float _586 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _587 = _586 + _585;
    gl_Position.x = _566;
    gl_Position.y = _573;
    gl_Position.z = _580;
    gl_Position.w = _587;
    NORMAL_1.x = fma(_207, _458, fma(_206, _457, _456 * _204));
    NORMAL_1.y = fma(_207, _462, fma(_206, _461, _460 * _204));
    NORMAL_1.z = fma(_207, _466, fma(_206, _465, _464 * _204));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_516)).x);
    TANGENT_1.x = fma(_216, _458, fma(_215, _457, _456 * _214));
    TANGENT_1.y = fma(_216, _462, fma(_215, _461, _460 * _214));
    TANGENT_1.z = fma(_216, _466, fma(_215, _465, _464 * _214));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    TEXCOORD_12 = sqrt(((_494 * _494) + (_495 * _495)) + (_496 * _496));
}


