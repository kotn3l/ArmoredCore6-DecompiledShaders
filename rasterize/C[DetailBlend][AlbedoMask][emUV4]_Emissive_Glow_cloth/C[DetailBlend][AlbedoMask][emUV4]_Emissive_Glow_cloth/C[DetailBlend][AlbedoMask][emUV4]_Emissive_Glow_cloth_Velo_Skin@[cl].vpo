#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec3 TEXCOORD_4;
layout(location = 6) out vec4 TEXCOORD_9;
layout(location = 7) out vec4 TEXCOORD_10;
layout(location = 8) out vec3 TEXCOORD_11;

void main()
{
    uint _86 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    float _234 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _236 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _237 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _244 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _245 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _246 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _248 = float(BLENDINDICES.x);
    float _249 = float(BLENDINDICES.y);
    float _250 = float(BLENDINDICES.z);
    float _251 = float(BLENDINDICES.w);
    bool _257 = floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u;
    float _478;
    float _479;
    float _480;
    float _481;
    float _482;
    float _483;
    float _484;
    float _485;
    float _486;
    float _487;
    float _488;
    float _489;
    if (_257)
    {
        uint _262 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _86;
        precise float _266 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _271 = isnan(_266) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _266 : max(0.001000000047497451305389404296875, _266));
        precise float _273 = BLENDWEIGHT.x / _271;
        precise float _274 = BLENDWEIGHT.y / _271;
        precise float _275 = BLENDWEIGHT.z / _271;
        precise float _276 = BLENDWEIGHT.w / _271;
        uvec4 _283 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_262)).x * 13u) + 4u]);
        uint _284 = _283.x;
        uint _286 = (_284 + uint(_248)) * 3u;
        uint _293 = _286 + 1u;
        uint _300 = _286 + 2u;
        precise float _307 = _273 * cbObjMatrix._m0[_286].x;
        precise float _308 = _273 * cbObjMatrix._m0[_293].x;
        precise float _309 = _273 * cbObjMatrix._m0[_300].x;
        precise float _310 = _273 * cbObjMatrix._m0[_286].y;
        precise float _311 = _273 * cbObjMatrix._m0[_293].y;
        precise float _312 = _273 * cbObjMatrix._m0[_300].y;
        precise float _313 = _273 * cbObjMatrix._m0[_286].z;
        precise float _314 = _273 * cbObjMatrix._m0[_293].z;
        precise float _315 = _273 * cbObjMatrix._m0[_300].z;
        precise float _316 = _273 * cbObjMatrix._m0[_286].w;
        precise float _317 = _273 * cbObjMatrix._m0[_293].w;
        precise float _318 = _273 * cbObjMatrix._m0[_300].w;
        uint _321 = (_284 + uint(_249)) * 3u;
        uint _328 = _321 + 1u;
        uint _335 = _321 + 2u;
        precise float _342 = _274 * cbObjMatrix._m0[_321].x;
        precise float _343 = _274 * cbObjMatrix._m0[_328].x;
        precise float _344 = _274 * cbObjMatrix._m0[_335].x;
        precise float _345 = _274 * cbObjMatrix._m0[_321].y;
        precise float _346 = _274 * cbObjMatrix._m0[_328].y;
        precise float _347 = _274 * cbObjMatrix._m0[_335].y;
        precise float _348 = _274 * cbObjMatrix._m0[_321].z;
        precise float _349 = _274 * cbObjMatrix._m0[_328].z;
        precise float _350 = _274 * cbObjMatrix._m0[_335].z;
        precise float _351 = _274 * cbObjMatrix._m0[_321].w;
        precise float _352 = _274 * cbObjMatrix._m0[_328].w;
        precise float _353 = _274 * cbObjMatrix._m0[_335].w;
        precise float _354 = _307 + _342;
        precise float _355 = _308 + _343;
        precise float _356 = _309 + _344;
        precise float _357 = _310 + _345;
        precise float _358 = _311 + _346;
        precise float _359 = _312 + _347;
        precise float _360 = _313 + _348;
        precise float _361 = _314 + _349;
        precise float _362 = _315 + _350;
        precise float _363 = _316 + _351;
        precise float _364 = _317 + _352;
        precise float _365 = _318 + _353;
        uint _368 = (_284 + uint(_250)) * 3u;
        uint _375 = _368 + 1u;
        uint _382 = _368 + 2u;
        precise float _389 = _275 * cbObjMatrix._m0[_368].x;
        precise float _390 = _275 * cbObjMatrix._m0[_375].x;
        precise float _391 = _275 * cbObjMatrix._m0[_382].x;
        precise float _392 = _275 * cbObjMatrix._m0[_368].y;
        precise float _393 = _275 * cbObjMatrix._m0[_375].y;
        precise float _394 = _275 * cbObjMatrix._m0[_382].y;
        precise float _395 = _275 * cbObjMatrix._m0[_368].z;
        precise float _396 = _275 * cbObjMatrix._m0[_375].z;
        precise float _397 = _275 * cbObjMatrix._m0[_382].z;
        precise float _398 = _275 * cbObjMatrix._m0[_368].w;
        precise float _399 = _275 * cbObjMatrix._m0[_375].w;
        precise float _400 = _275 * cbObjMatrix._m0[_382].w;
        precise float _401 = _354 + _389;
        precise float _402 = _355 + _390;
        precise float _403 = _356 + _391;
        precise float _404 = _357 + _392;
        precise float _405 = _358 + _393;
        precise float _406 = _359 + _394;
        precise float _407 = _360 + _395;
        precise float _408 = _361 + _396;
        precise float _409 = _362 + _397;
        precise float _410 = _363 + _398;
        precise float _411 = _364 + _399;
        precise float _412 = _365 + _400;
        uint _415 = (_284 + uint(_251)) * 3u;
        uint _422 = _415 + 1u;
        uint _429 = _415 + 2u;
        precise float _436 = _276 * cbObjMatrix._m0[_415].x;
        precise float _437 = _276 * cbObjMatrix._m0[_422].x;
        precise float _438 = _276 * cbObjMatrix._m0[_429].x;
        precise float _439 = _276 * cbObjMatrix._m0[_415].y;
        precise float _440 = _276 * cbObjMatrix._m0[_422].y;
        precise float _441 = _276 * cbObjMatrix._m0[_429].y;
        precise float _442 = _276 * cbObjMatrix._m0[_415].z;
        precise float _443 = _276 * cbObjMatrix._m0[_422].z;
        precise float _444 = _276 * cbObjMatrix._m0[_429].z;
        precise float _445 = _276 * cbObjMatrix._m0[_415].w;
        precise float _446 = _276 * cbObjMatrix._m0[_422].w;
        precise float _447 = _276 * cbObjMatrix._m0[_429].w;
        precise float _448 = _401 + _436;
        precise float _449 = _402 + _437;
        precise float _450 = _403 + _438;
        precise float _451 = _404 + _439;
        precise float _452 = _405 + _440;
        precise float _453 = _406 + _441;
        precise float _454 = _407 + _442;
        precise float _455 = _408 + _443;
        precise float _456 = _409 + _444;
        precise float _457 = _410 + _445;
        precise float _458 = _411 + _446;
        precise float _459 = _412 + _447;
        _478 = _448;
        _479 = _451;
        _480 = _454;
        _481 = _457;
        _482 = _449;
        _483 = _452;
        _484 = _455;
        _485 = _458;
        _486 = _450;
        _487 = _453;
        _488 = _456;
        _489 = _459;
    }
    else
    {
        _478 = cbvModelParam._m0[0u].x;
        _479 = cbvModelParam._m0[0u].y;
        _480 = cbvModelParam._m0[0u].z;
        _481 = cbvModelParam._m0[0u].w;
        _482 = cbvModelParam._m0[1u].x;
        _483 = cbvModelParam._m0[1u].y;
        _484 = cbvModelParam._m0[1u].z;
        _485 = cbvModelParam._m0[1u].w;
        _486 = cbvModelParam._m0[2u].x;
        _487 = cbvModelParam._m0[2u].y;
        _488 = cbvModelParam._m0[2u].z;
        _489 = cbvModelParam._m0[2u].w;
    }
    precise float _490 = POSITION.x * _478;
    precise float _491 = POSITION.y * _479;
    precise float _492 = _491 + _490;
    precise float _493 = POSITION.z * _480;
    precise float _494 = _493 + _492;
    precise float _495 = 1.0 * _481;
    precise float _496 = _495 + _494;
    precise float _497 = POSITION.x * _482;
    precise float _498 = POSITION.y * _483;
    precise float _499 = _498 + _497;
    precise float _500 = POSITION.z * _484;
    precise float _501 = _500 + _499;
    precise float _502 = 1.0 * _485;
    precise float _503 = _502 + _501;
    precise float _504 = POSITION.x * _486;
    precise float _505 = POSITION.y * _487;
    precise float _506 = _505 + _504;
    precise float _507 = POSITION.z * _488;
    precise float _508 = _507 + _506;
    precise float _509 = 1.0 * _489;
    precise float _510 = _509 + _508;
    float _728;
    float _729;
    float _730;
    float _731;
    float _732;
    float _733;
    float _734;
    float _735;
    float _736;
    float _737;
    float _738;
    float _739;
    if (_257)
    {
        float _511 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _514 = isnan(_511) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _511 : max(0.001000000047497451305389404296875, _511));
        float _515 = BLENDWEIGHT.x / _514;
        float _516 = BLENDWEIGHT.y / _514;
        float _517 = BLENDWEIGHT.z / _514;
        float _518 = BLENDWEIGHT.w / _514;
        uint _524 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _86;
        uvec4 _532 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_524)).x * 13u) + 4u]);
        uint _533 = _532.x;
        uint _535 = (_533 + uint(_248)) * 3u;
        uint _542 = _535 + 1u;
        uint _549 = _535 + 2u;
        uint _570 = (_533 + uint(_249)) * 3u;
        uint _577 = _570 + 1u;
        uint _584 = _570 + 2u;
        uint _617 = (_533 + uint(_250)) * 3u;
        uint _624 = _617 + 1u;
        uint _631 = _617 + 2u;
        uint _664 = (_533 + uint(_251)) * 3u;
        uint _671 = _664 + 1u;
        uint _678 = _664 + 2u;
        _728 = (((cbPrevObjMatrix._m0[_570].x * _516) + (cbPrevObjMatrix._m0[_535].x * _515)) + (cbPrevObjMatrix._m0[_617].x * _517)) + (cbPrevObjMatrix._m0[_664].x * _518);
        _729 = (((cbPrevObjMatrix._m0[_570].y * _516) + (cbPrevObjMatrix._m0[_535].y * _515)) + (cbPrevObjMatrix._m0[_617].y * _517)) + (cbPrevObjMatrix._m0[_664].y * _518);
        _730 = (((cbPrevObjMatrix._m0[_570].z * _516) + (cbPrevObjMatrix._m0[_535].z * _515)) + (cbPrevObjMatrix._m0[_617].z * _517)) + (cbPrevObjMatrix._m0[_664].z * _518);
        _731 = (((cbPrevObjMatrix._m0[_570].w * _516) + (cbPrevObjMatrix._m0[_535].w * _515)) + (cbPrevObjMatrix._m0[_617].w * _517)) + (cbPrevObjMatrix._m0[_664].w * _518);
        _732 = (((cbPrevObjMatrix._m0[_577].x * _516) + (cbPrevObjMatrix._m0[_542].x * _515)) + (cbPrevObjMatrix._m0[_624].x * _517)) + (cbPrevObjMatrix._m0[_671].x * _518);
        _733 = (((cbPrevObjMatrix._m0[_577].y * _516) + (cbPrevObjMatrix._m0[_542].y * _515)) + (cbPrevObjMatrix._m0[_624].y * _517)) + (cbPrevObjMatrix._m0[_671].y * _518);
        _734 = (((cbPrevObjMatrix._m0[_577].z * _516) + (cbPrevObjMatrix._m0[_542].z * _515)) + (cbPrevObjMatrix._m0[_624].z * _517)) + (cbPrevObjMatrix._m0[_671].z * _518);
        _735 = (((cbPrevObjMatrix._m0[_577].w * _516) + (cbPrevObjMatrix._m0[_542].w * _515)) + (cbPrevObjMatrix._m0[_624].w * _517)) + (cbPrevObjMatrix._m0[_671].w * _518);
        _736 = (((cbPrevObjMatrix._m0[_584].x * _516) + (cbPrevObjMatrix._m0[_549].x * _515)) + (cbPrevObjMatrix._m0[_631].x * _517)) + (cbPrevObjMatrix._m0[_678].x * _518);
        _737 = (((cbPrevObjMatrix._m0[_584].y * _516) + (cbPrevObjMatrix._m0[_549].y * _515)) + (cbPrevObjMatrix._m0[_631].y * _517)) + (cbPrevObjMatrix._m0[_678].y * _518);
        _738 = (((cbPrevObjMatrix._m0[_584].z * _516) + (cbPrevObjMatrix._m0[_549].z * _515)) + (cbPrevObjMatrix._m0[_631].z * _517)) + (cbPrevObjMatrix._m0[_678].z * _518);
        _739 = (((cbPrevObjMatrix._m0[_584].w * _516) + (cbPrevObjMatrix._m0[_549].w * _515)) + (cbPrevObjMatrix._m0[_631].w * _517)) + (cbPrevObjMatrix._m0[_678].w * _518);
    }
    else
    {
        _728 = cbvModelParam._m0[3u].x;
        _729 = cbvModelParam._m0[3u].y;
        _730 = cbvModelParam._m0[3u].z;
        _731 = cbvModelParam._m0[3u].w;
        _732 = cbvModelParam._m0[4u].x;
        _733 = cbvModelParam._m0[4u].y;
        _734 = cbvModelParam._m0[4u].z;
        _735 = cbvModelParam._m0[4u].w;
        _736 = cbvModelParam._m0[5u].x;
        _737 = cbvModelParam._m0[5u].y;
        _738 = cbvModelParam._m0[5u].z;
        _739 = cbvModelParam._m0[5u].w;
    }
    float _758 = (fma(POSITION.z, _730, fma(POSITION.y, _729, _728 * POSITION.x)) + _731) - cbSceneParam._m0[28u].x;
    float _759 = (fma(POSITION.z, _734, fma(POSITION.y, _733, _732 * POSITION.x)) + _735) - cbSceneParam._m0[28u].y;
    float _760 = (fma(POSITION.z, _738, fma(POSITION.y, _737, _736 * POSITION.x)) + _739) - cbSceneParam._m0[28u].z;
    float _807 = fma(_237, _480, fma(_236, _479, _478 * _234));
    float _810 = fma(_237, _484, fma(_236, _483, _482 * _234));
    float _813 = fma(_237, _488, fma(_236, _487, _486 * _234));
    uint _818 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _86;
    precise float _837 = _496 - cbSceneParam._m0[3u].x;
    precise float _838 = _503 - cbSceneParam._m0[3u].y;
    precise float _839 = _510 - cbSceneParam._m0[3u].z;
    precise float _867 = _837 * cbSceneParam._m0[24u].x;
    precise float _868 = _838 * cbSceneParam._m0[24u].y;
    precise float _869 = _868 + _867;
    precise float _870 = _839 * cbSceneParam._m0[24u].z;
    precise float _871 = _870 + _869;
    precise float _872 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _873 = _872 + _871;
    precise float _874 = _837 * cbSceneParam._m0[25u].x;
    precise float _875 = _838 * cbSceneParam._m0[25u].y;
    precise float _876 = _875 + _874;
    precise float _877 = _839 * cbSceneParam._m0[25u].z;
    precise float _878 = _877 + _876;
    precise float _879 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _880 = _879 + _878;
    precise float _881 = _837 * cbSceneParam._m0[26u].x;
    precise float _882 = _838 * cbSceneParam._m0[26u].y;
    precise float _883 = _882 + _881;
    precise float _884 = _839 * cbSceneParam._m0[26u].z;
    precise float _885 = _884 + _883;
    precise float _886 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _887 = _886 + _885;
    precise float _888 = _837 * cbSceneParam._m0[27u].x;
    precise float _889 = _838 * cbSceneParam._m0[27u].y;
    precise float _890 = _889 + _888;
    precise float _891 = _839 * cbSceneParam._m0[27u].z;
    precise float _892 = _891 + _890;
    precise float _893 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _894 = _893 + _892;
    gl_Position.x = _873;
    gl_Position.y = _880;
    gl_Position.z = _887;
    gl_Position.w = _894;
    POSITION_1.x = _873;
    POSITION_1.y = _880;
    POSITION_1.z = _887;
    POSITION_1.w = _894;
    NORMAL_1.x = _807;
    NORMAL_1.y = _810;
    NORMAL_1.z = _813;
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_818)).x);
    TANGENT_1.x = fma(_246, _480, fma(_245, _479, _478 * _244));
    TANGENT_1.y = fma(_246, _484, fma(_245, _483, _482 * _244));
    TANGENT_1.z = fma(_246, _488, fma(_245, _487, _486 * _244));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    TEXCOORD_9.x = _873;
    TEXCOORD_9.y = _880;
    TEXCOORD_9.z = _887;
    TEXCOORD_9.w = _894;
    TEXCOORD_10.x = fma(_760, cbSceneParam._m0[29u].z, fma(_759, cbSceneParam._m0[29u].y, _758 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_10.y = fma(_760, cbSceneParam._m0[30u].z, fma(_759, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _758)) + cbSceneParam._m0[30u].w;
    TEXCOORD_10.z = fma(_760, cbSceneParam._m0[31u].z, fma(_759, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _758)) + cbSceneParam._m0[31u].w;
    TEXCOORD_10.w = fma(_760, cbSceneParam._m0[32u].z, fma(_759, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _758)) + cbSceneParam._m0[32u].w;
    TEXCOORD_11.x = _807;
    TEXCOORD_11.y = _810;
    TEXCOORD_11.z = _813;
}


