#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec3 TEXCOORD_4;

void main()
{
    uint _83 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _213 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _215 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _223 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _224 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _225 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _465;
    float _466;
    float _467;
    float _468;
    float _469;
    float _470;
    float _471;
    float _472;
    float _473;
    float _474;
    float _475;
    float _476;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _249 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _83;
        precise float _253 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _258 = isnan(_253) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _253 : max(0.001000000047497451305389404296875, _253));
        precise float _260 = BLENDWEIGHT.x / _258;
        precise float _261 = BLENDWEIGHT.y / _258;
        precise float _262 = BLENDWEIGHT.z / _258;
        precise float _263 = BLENDWEIGHT.w / _258;
        uvec4 _270 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_249)).x * 13u) + 4u]);
        uint _271 = _270.x;
        uint _273 = (_271 + uint(float(BLENDINDICES.x))) * 3u;
        uint _280 = _273 + 1u;
        uint _287 = _273 + 2u;
        precise float _294 = _260 * cbObjMatrix._m0[_273].x;
        precise float _295 = _260 * cbObjMatrix._m0[_280].x;
        precise float _296 = _260 * cbObjMatrix._m0[_287].x;
        precise float _297 = _260 * cbObjMatrix._m0[_273].y;
        precise float _298 = _260 * cbObjMatrix._m0[_280].y;
        precise float _299 = _260 * cbObjMatrix._m0[_287].y;
        precise float _300 = _260 * cbObjMatrix._m0[_273].z;
        precise float _301 = _260 * cbObjMatrix._m0[_280].z;
        precise float _302 = _260 * cbObjMatrix._m0[_287].z;
        precise float _303 = _260 * cbObjMatrix._m0[_273].w;
        precise float _304 = _260 * cbObjMatrix._m0[_280].w;
        precise float _305 = _260 * cbObjMatrix._m0[_287].w;
        uint _308 = (_271 + uint(float(BLENDINDICES.y))) * 3u;
        uint _315 = _308 + 1u;
        uint _322 = _308 + 2u;
        precise float _329 = _261 * cbObjMatrix._m0[_308].x;
        precise float _330 = _261 * cbObjMatrix._m0[_315].x;
        precise float _331 = _261 * cbObjMatrix._m0[_322].x;
        precise float _332 = _261 * cbObjMatrix._m0[_308].y;
        precise float _333 = _261 * cbObjMatrix._m0[_315].y;
        precise float _334 = _261 * cbObjMatrix._m0[_322].y;
        precise float _335 = _261 * cbObjMatrix._m0[_308].z;
        precise float _336 = _261 * cbObjMatrix._m0[_315].z;
        precise float _337 = _261 * cbObjMatrix._m0[_322].z;
        precise float _338 = _261 * cbObjMatrix._m0[_308].w;
        precise float _339 = _261 * cbObjMatrix._m0[_315].w;
        precise float _340 = _261 * cbObjMatrix._m0[_322].w;
        precise float _341 = _294 + _329;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        precise float _345 = _298 + _333;
        precise float _346 = _299 + _334;
        precise float _347 = _300 + _335;
        precise float _348 = _301 + _336;
        precise float _349 = _302 + _337;
        precise float _350 = _303 + _338;
        precise float _351 = _304 + _339;
        precise float _352 = _305 + _340;
        uint _355 = (_271 + uint(float(BLENDINDICES.z))) * 3u;
        uint _362 = _355 + 1u;
        uint _369 = _355 + 2u;
        precise float _376 = _262 * cbObjMatrix._m0[_355].x;
        precise float _377 = _262 * cbObjMatrix._m0[_362].x;
        precise float _378 = _262 * cbObjMatrix._m0[_369].x;
        precise float _379 = _262 * cbObjMatrix._m0[_355].y;
        precise float _380 = _262 * cbObjMatrix._m0[_362].y;
        precise float _381 = _262 * cbObjMatrix._m0[_369].y;
        precise float _382 = _262 * cbObjMatrix._m0[_355].z;
        precise float _383 = _262 * cbObjMatrix._m0[_362].z;
        precise float _384 = _262 * cbObjMatrix._m0[_369].z;
        precise float _385 = _262 * cbObjMatrix._m0[_355].w;
        precise float _386 = _262 * cbObjMatrix._m0[_362].w;
        precise float _387 = _262 * cbObjMatrix._m0[_369].w;
        precise float _388 = _341 + _376;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        precise float _392 = _345 + _380;
        precise float _393 = _346 + _381;
        precise float _394 = _347 + _382;
        precise float _395 = _348 + _383;
        precise float _396 = _349 + _384;
        precise float _397 = _350 + _385;
        precise float _398 = _351 + _386;
        precise float _399 = _352 + _387;
        uint _402 = (_271 + uint(float(BLENDINDICES.w))) * 3u;
        uint _409 = _402 + 1u;
        uint _416 = _402 + 2u;
        precise float _423 = _263 * cbObjMatrix._m0[_402].x;
        precise float _424 = _263 * cbObjMatrix._m0[_409].x;
        precise float _425 = _263 * cbObjMatrix._m0[_416].x;
        precise float _426 = _263 * cbObjMatrix._m0[_402].y;
        precise float _427 = _263 * cbObjMatrix._m0[_409].y;
        precise float _428 = _263 * cbObjMatrix._m0[_416].y;
        precise float _429 = _263 * cbObjMatrix._m0[_402].z;
        precise float _430 = _263 * cbObjMatrix._m0[_409].z;
        precise float _431 = _263 * cbObjMatrix._m0[_416].z;
        precise float _432 = _263 * cbObjMatrix._m0[_402].w;
        precise float _433 = _263 * cbObjMatrix._m0[_409].w;
        precise float _434 = _263 * cbObjMatrix._m0[_416].w;
        precise float _435 = _388 + _423;
        precise float _436 = _389 + _424;
        precise float _437 = _390 + _425;
        precise float _438 = _391 + _426;
        precise float _439 = _392 + _427;
        precise float _440 = _393 + _428;
        precise float _441 = _394 + _429;
        precise float _442 = _395 + _430;
        precise float _443 = _396 + _431;
        precise float _444 = _397 + _432;
        precise float _445 = _398 + _433;
        precise float _446 = _399 + _434;
        _465 = _435;
        _466 = _438;
        _467 = _441;
        _468 = _444;
        _469 = _436;
        _470 = _439;
        _471 = _442;
        _472 = _445;
        _473 = _437;
        _474 = _440;
        _475 = _443;
        _476 = _446;
    }
    else
    {
        _465 = cbvModelParam._m0[0u].x;
        _466 = cbvModelParam._m0[0u].y;
        _467 = cbvModelParam._m0[0u].z;
        _468 = cbvModelParam._m0[0u].w;
        _469 = cbvModelParam._m0[1u].x;
        _470 = cbvModelParam._m0[1u].y;
        _471 = cbvModelParam._m0[1u].z;
        _472 = cbvModelParam._m0[1u].w;
        _473 = cbvModelParam._m0[2u].x;
        _474 = cbvModelParam._m0[2u].y;
        _475 = cbvModelParam._m0[2u].z;
        _476 = cbvModelParam._m0[2u].w;
    }
    precise float _477 = POSITION.x * _465;
    precise float _478 = POSITION.y * _466;
    precise float _479 = _478 + _477;
    precise float _480 = POSITION.z * _467;
    precise float _481 = _480 + _479;
    precise float _482 = 1.0 * _468;
    precise float _483 = _482 + _481;
    precise float _484 = POSITION.x * _469;
    precise float _485 = POSITION.y * _470;
    precise float _486 = _485 + _484;
    precise float _487 = POSITION.z * _471;
    precise float _488 = _487 + _486;
    precise float _489 = 1.0 * _472;
    precise float _490 = _489 + _488;
    precise float _491 = POSITION.x * _473;
    precise float _492 = POSITION.y * _474;
    precise float _493 = _492 + _491;
    precise float _494 = POSITION.z * _475;
    precise float _495 = _494 + _493;
    precise float _496 = 1.0 * _476;
    precise float _497 = _496 + _495;
    uint _511 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _83;
    uvec4 _513 = texelFetch(g_InstanceIndexBuffer, int(_511));
    uint _514 = _513.x;
    precise float _530 = _483 - cbSceneParam._m0[3u].x;
    precise float _531 = _490 - cbSceneParam._m0[3u].y;
    precise float _532 = _497 - cbSceneParam._m0[3u].z;
    precise float _560 = _530 * cbSceneParam._m0[24u].x;
    precise float _561 = _531 * cbSceneParam._m0[24u].y;
    precise float _562 = _561 + _560;
    precise float _563 = _532 * cbSceneParam._m0[24u].z;
    precise float _564 = _563 + _562;
    precise float _565 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _566 = _565 + _564;
    precise float _567 = _530 * cbSceneParam._m0[25u].x;
    precise float _568 = _531 * cbSceneParam._m0[25u].y;
    precise float _569 = _568 + _567;
    precise float _570 = _532 * cbSceneParam._m0[25u].z;
    precise float _571 = _570 + _569;
    precise float _572 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _573 = _572 + _571;
    precise float _574 = _530 * cbSceneParam._m0[26u].x;
    precise float _575 = _531 * cbSceneParam._m0[26u].y;
    precise float _576 = _575 + _574;
    precise float _577 = _532 * cbSceneParam._m0[26u].z;
    precise float _578 = _577 + _576;
    precise float _579 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _580 = _579 + _578;
    precise float _581 = _530 * cbSceneParam._m0[27u].x;
    precise float _582 = _531 * cbSceneParam._m0[27u].y;
    precise float _583 = _582 + _581;
    precise float _584 = _532 * cbSceneParam._m0[27u].z;
    precise float _585 = _584 + _583;
    precise float _586 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _587 = _586 + _585;
    gl_Position.x = _566;
    gl_Position.y = _573;
    gl_Position.z = _580;
    gl_Position.w = _587;
    POSITION_1.x = _566;
    POSITION_1.y = _573;
    POSITION_1.z = _580;
    POSITION_1.w = _587;
    NORMAL_1.x = fma(_216, _467, fma(_215, _466, _465 * _213));
    NORMAL_1.y = fma(_216, _471, fma(_215, _470, _469 * _213));
    NORMAL_1.z = fma(_216, _475, fma(_215, _474, _473 * _213));
    NORMAL_1.w = float(_514);
    TANGENT_1.x = fma(_225, _467, fma(_224, _466, _465 * _223));
    TANGENT_1.y = fma(_225, _471, fma(_224, _470, _469 * _223));
    TANGENT_1.z = fma(_225, _475, fma(_224, _474, _473 * _223));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_566, _573, _580, _587), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_566, _573, _580, _587), vec4(cbInstanceData._m0[(_514 * 13u) + 3u]));
}


