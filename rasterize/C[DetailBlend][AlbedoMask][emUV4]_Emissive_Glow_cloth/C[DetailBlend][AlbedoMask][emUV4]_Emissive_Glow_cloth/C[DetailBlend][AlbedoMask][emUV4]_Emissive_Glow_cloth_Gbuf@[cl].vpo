#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_2;
layout(location = 4) out vec3 TEXCOORD_4;
layout(location = 4, component = 3) out float TEXCOORD_12;

void main()
{
    uint _78 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_12 = 0.0;
    float _194 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _204 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _205 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _273;
    float _274;
    float _275;
    float _276;
    float _277;
    float _278;
    float _279;
    float _280;
    float _281;
    float _282;
    float _283;
    float _284;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _221 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _78;
        uint _234 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_221)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _241 = _234 + 1u;
        uint _248 = _234 + 2u;
        _273 = cbObjMatrix._m0[_234].x;
        _274 = cbObjMatrix._m0[_234].y;
        _275 = cbObjMatrix._m0[_234].z;
        _276 = cbObjMatrix._m0[_234].w;
        _277 = cbObjMatrix._m0[_241].x;
        _278 = cbObjMatrix._m0[_241].y;
        _279 = cbObjMatrix._m0[_241].z;
        _280 = cbObjMatrix._m0[_241].w;
        _281 = cbObjMatrix._m0[_248].x;
        _282 = cbObjMatrix._m0[_248].y;
        _283 = cbObjMatrix._m0[_248].z;
        _284 = cbObjMatrix._m0[_248].w;
    }
    else
    {
        _273 = cbvModelParam._m0[0u].x;
        _274 = cbvModelParam._m0[0u].y;
        _275 = cbvModelParam._m0[0u].z;
        _276 = cbvModelParam._m0[0u].w;
        _277 = cbvModelParam._m0[1u].x;
        _278 = cbvModelParam._m0[1u].y;
        _279 = cbvModelParam._m0[1u].z;
        _280 = cbvModelParam._m0[1u].w;
        _281 = cbvModelParam._m0[2u].x;
        _282 = cbvModelParam._m0[2u].y;
        _283 = cbvModelParam._m0[2u].z;
        _284 = cbvModelParam._m0[2u].w;
    }
    precise float _285 = POSITION.x * _273;
    precise float _286 = POSITION.y * _274;
    precise float _287 = _286 + _285;
    precise float _288 = POSITION.z * _275;
    precise float _289 = _288 + _287;
    precise float _290 = 1.0 * _276;
    precise float _292 = _290 + _289;
    precise float _293 = POSITION.x * _277;
    precise float _294 = POSITION.y * _278;
    precise float _295 = _294 + _293;
    precise float _296 = POSITION.z * _279;
    precise float _297 = _296 + _295;
    precise float _298 = 1.0 * _280;
    precise float _299 = _298 + _297;
    precise float _300 = POSITION.x * _281;
    precise float _301 = POSITION.y * _282;
    precise float _302 = _301 + _300;
    precise float _303 = POSITION.z * _283;
    precise float _304 = _303 + _302;
    precise float _305 = 1.0 * _284;
    precise float _306 = _305 + _304;
    float _312 = cbSceneParam._m0[3u].x - _292;
    float _313 = cbSceneParam._m0[3u].y - _299;
    float _314 = cbSceneParam._m0[3u].z - _306;
    uint _335 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _78;
    precise float _349 = _292 - cbSceneParam._m0[3u].x;
    precise float _350 = _299 - cbSceneParam._m0[3u].y;
    precise float _351 = _306 - cbSceneParam._m0[3u].z;
    precise float _379 = _349 * cbSceneParam._m0[24u].x;
    precise float _380 = _350 * cbSceneParam._m0[24u].y;
    precise float _381 = _380 + _379;
    precise float _382 = _351 * cbSceneParam._m0[24u].z;
    precise float _383 = _382 + _381;
    precise float _384 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _385 = _384 + _383;
    precise float _386 = _349 * cbSceneParam._m0[25u].x;
    precise float _387 = _350 * cbSceneParam._m0[25u].y;
    precise float _388 = _387 + _386;
    precise float _389 = _351 * cbSceneParam._m0[25u].z;
    precise float _390 = _389 + _388;
    precise float _391 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _392 = _391 + _390;
    precise float _393 = _349 * cbSceneParam._m0[26u].x;
    precise float _394 = _350 * cbSceneParam._m0[26u].y;
    precise float _395 = _394 + _393;
    precise float _396 = _351 * cbSceneParam._m0[26u].z;
    precise float _397 = _396 + _395;
    precise float _398 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _399 = _398 + _397;
    precise float _400 = _349 * cbSceneParam._m0[27u].x;
    precise float _401 = _350 * cbSceneParam._m0[27u].y;
    precise float _402 = _401 + _400;
    precise float _403 = _351 * cbSceneParam._m0[27u].z;
    precise float _404 = _403 + _402;
    precise float _405 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _406 = _405 + _404;
    gl_Position.x = _385;
    gl_Position.y = _392;
    gl_Position.z = _399;
    gl_Position.w = _406;
    NORMAL_1.x = fma(_197, _275, fma(_196, _274, _273 * _194));
    NORMAL_1.y = fma(_197, _279, fma(_196, _278, _277 * _194));
    NORMAL_1.z = fma(_197, _283, fma(_196, _282, _281 * _194));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_335)).x);
    TANGENT_1.x = fma(_206, _275, fma(_205, _274, _273 * _204));
    TANGENT_1.y = fma(_206, _279, fma(_205, _278, _277 * _204));
    TANGENT_1.z = fma(_206, _283, fma(_205, _282, _281 * _204));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    TEXCOORD_12 = sqrt(((_312 * _312) + (_313 * _313)) + (_314 * _314));
}


