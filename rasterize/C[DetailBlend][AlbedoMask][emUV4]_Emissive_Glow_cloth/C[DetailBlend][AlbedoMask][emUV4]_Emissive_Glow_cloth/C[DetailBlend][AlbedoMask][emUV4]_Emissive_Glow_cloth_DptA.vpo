#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_2;
layout(location = 4) out vec3 TEXCOORD_4;
layout(location = 5) out vec2 TEXCOORD_8;
layout(location = 4, component = 3) out float TEXCOORD_12;

void main()
{
    uint _85 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_12 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _204 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _214 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _215 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _283;
    float _284;
    float _285;
    float _286;
    float _287;
    float _288;
    float _289;
    float _290;
    float _291;
    float _292;
    float _293;
    float _294;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _231 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _85;
        uint _244 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_231)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _251 = _244 + 1u;
        uint _258 = _244 + 2u;
        _283 = cbObjMatrix._m0[_244].x;
        _284 = cbObjMatrix._m0[_244].y;
        _285 = cbObjMatrix._m0[_244].z;
        _286 = cbObjMatrix._m0[_244].w;
        _287 = cbObjMatrix._m0[_251].x;
        _288 = cbObjMatrix._m0[_251].y;
        _289 = cbObjMatrix._m0[_251].z;
        _290 = cbObjMatrix._m0[_251].w;
        _291 = cbObjMatrix._m0[_258].x;
        _292 = cbObjMatrix._m0[_258].y;
        _293 = cbObjMatrix._m0[_258].z;
        _294 = cbObjMatrix._m0[_258].w;
    }
    else
    {
        _283 = cbvModelParam._m0[0u].x;
        _284 = cbvModelParam._m0[0u].y;
        _285 = cbvModelParam._m0[0u].z;
        _286 = cbvModelParam._m0[0u].w;
        _287 = cbvModelParam._m0[1u].x;
        _288 = cbvModelParam._m0[1u].y;
        _289 = cbvModelParam._m0[1u].z;
        _290 = cbvModelParam._m0[1u].w;
        _291 = cbvModelParam._m0[2u].x;
        _292 = cbvModelParam._m0[2u].y;
        _293 = cbvModelParam._m0[2u].z;
        _294 = cbvModelParam._m0[2u].w;
    }
    precise float _295 = POSITION.x * _283;
    precise float _296 = POSITION.y * _284;
    precise float _297 = _296 + _295;
    precise float _298 = POSITION.z * _285;
    precise float _299 = _298 + _297;
    precise float _300 = 1.0 * _286;
    precise float _302 = _300 + _299;
    precise float _303 = POSITION.x * _287;
    precise float _304 = POSITION.y * _288;
    precise float _305 = _304 + _303;
    precise float _306 = POSITION.z * _289;
    precise float _307 = _306 + _305;
    precise float _308 = 1.0 * _290;
    precise float _309 = _308 + _307;
    precise float _310 = POSITION.x * _291;
    precise float _311 = POSITION.y * _292;
    precise float _312 = _311 + _310;
    precise float _313 = POSITION.z * _293;
    precise float _314 = _313 + _312;
    precise float _315 = 1.0 * _294;
    precise float _316 = _315 + _314;
    float _322 = cbSceneParam._m0[3u].x - _302;
    float _323 = cbSceneParam._m0[3u].y - _309;
    float _324 = cbSceneParam._m0[3u].z - _316;
    uint _345 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _85;
    uvec4 _347 = texelFetch(g_InstanceIndexBuffer, int(_345));
    uint _348 = _347.x;
    precise float _359 = _302 - cbSceneParam._m0[3u].x;
    precise float _360 = _309 - cbSceneParam._m0[3u].y;
    precise float _361 = _316 - cbSceneParam._m0[3u].z;
    precise float _389 = _359 * cbSceneParam._m0[24u].x;
    precise float _390 = _360 * cbSceneParam._m0[24u].y;
    precise float _391 = _390 + _389;
    precise float _392 = _361 * cbSceneParam._m0[24u].z;
    precise float _393 = _392 + _391;
    precise float _394 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _395 = _394 + _393;
    precise float _396 = _359 * cbSceneParam._m0[25u].x;
    precise float _397 = _360 * cbSceneParam._m0[25u].y;
    precise float _398 = _397 + _396;
    precise float _399 = _361 * cbSceneParam._m0[25u].z;
    precise float _400 = _399 + _398;
    precise float _401 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _402 = _401 + _400;
    precise float _403 = _359 * cbSceneParam._m0[26u].x;
    precise float _404 = _360 * cbSceneParam._m0[26u].y;
    precise float _405 = _404 + _403;
    precise float _406 = _361 * cbSceneParam._m0[26u].z;
    precise float _407 = _406 + _405;
    precise float _408 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _409 = _408 + _407;
    precise float _410 = _359 * cbSceneParam._m0[27u].x;
    precise float _411 = _360 * cbSceneParam._m0[27u].y;
    precise float _412 = _411 + _410;
    precise float _413 = _361 * cbSceneParam._m0[27u].z;
    precise float _414 = _413 + _412;
    precise float _415 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _416 = _415 + _414;
    gl_Position.x = _395;
    gl_Position.y = _402;
    gl_Position.z = _409;
    gl_Position.w = _416;
    NORMAL_1.x = fma(_207, _285, fma(_206, _284, _283 * _204));
    NORMAL_1.y = fma(_207, _289, fma(_206, _288, _287 * _204));
    NORMAL_1.z = fma(_207, _293, fma(_206, _292, _291 * _204));
    NORMAL_1.w = float(_348);
    TANGENT_1.x = fma(_216, _285, fma(_215, _284, _283 * _214));
    TANGENT_1.y = fma(_216, _289, fma(_215, _288, _287 * _214));
    TANGENT_1.z = fma(_216, _293, fma(_215, _292, _291 * _214));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    TEXCOORD_8.x = _409;
    TEXCOORD_8.y = _416;
    TEXCOORD_12 = sqrt(((_322 * _322) + (_323 * _323)) + (_324 * _324));
    gl_ClipDistance[0u] = dot(vec4(_395, _402, _409, _416), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_395, _402, _409, _416), vec4(cbInstanceData._m0[(_348 * 13u) + 3u]));
}


