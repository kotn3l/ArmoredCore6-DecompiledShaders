#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_2;
layout(location = 4) out vec3 TEXCOORD_4;
layout(location = 5) out vec2 TEXCOORD_8;
layout(location = 4, component = 3) out float TEXCOORD_12;

void main()
{
    uint _87 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_12 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _214 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _224 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _225 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _226 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _466;
    float _467;
    float _468;
    float _469;
    float _470;
    float _471;
    float _472;
    float _473;
    float _474;
    float _475;
    float _476;
    float _477;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _250 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _87;
        precise float _254 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _259 = isnan(_254) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _254 : max(0.001000000047497451305389404296875, _254));
        precise float _261 = BLENDWEIGHT.x / _259;
        precise float _262 = BLENDWEIGHT.y / _259;
        precise float _263 = BLENDWEIGHT.z / _259;
        precise float _264 = BLENDWEIGHT.w / _259;
        uvec4 _271 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_250)).x * 13u) + 4u]);
        uint _272 = _271.x;
        uint _274 = (_272 + uint(float(BLENDINDICES.x))) * 3u;
        uint _281 = _274 + 1u;
        uint _288 = _274 + 2u;
        precise float _295 = _261 * cbObjMatrix._m0[_274].x;
        precise float _296 = _261 * cbObjMatrix._m0[_281].x;
        precise float _297 = _261 * cbObjMatrix._m0[_288].x;
        precise float _298 = _261 * cbObjMatrix._m0[_274].y;
        precise float _299 = _261 * cbObjMatrix._m0[_281].y;
        precise float _300 = _261 * cbObjMatrix._m0[_288].y;
        precise float _301 = _261 * cbObjMatrix._m0[_274].z;
        precise float _302 = _261 * cbObjMatrix._m0[_281].z;
        precise float _303 = _261 * cbObjMatrix._m0[_288].z;
        precise float _304 = _261 * cbObjMatrix._m0[_274].w;
        precise float _305 = _261 * cbObjMatrix._m0[_281].w;
        precise float _306 = _261 * cbObjMatrix._m0[_288].w;
        uint _309 = (_272 + uint(float(BLENDINDICES.y))) * 3u;
        uint _316 = _309 + 1u;
        uint _323 = _309 + 2u;
        precise float _330 = _262 * cbObjMatrix._m0[_309].x;
        precise float _331 = _262 * cbObjMatrix._m0[_316].x;
        precise float _332 = _262 * cbObjMatrix._m0[_323].x;
        precise float _333 = _262 * cbObjMatrix._m0[_309].y;
        precise float _334 = _262 * cbObjMatrix._m0[_316].y;
        precise float _335 = _262 * cbObjMatrix._m0[_323].y;
        precise float _336 = _262 * cbObjMatrix._m0[_309].z;
        precise float _337 = _262 * cbObjMatrix._m0[_316].z;
        precise float _338 = _262 * cbObjMatrix._m0[_323].z;
        precise float _339 = _262 * cbObjMatrix._m0[_309].w;
        precise float _340 = _262 * cbObjMatrix._m0[_316].w;
        precise float _341 = _262 * cbObjMatrix._m0[_323].w;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        precise float _345 = _298 + _333;
        precise float _346 = _299 + _334;
        precise float _347 = _300 + _335;
        precise float _348 = _301 + _336;
        precise float _349 = _302 + _337;
        precise float _350 = _303 + _338;
        precise float _351 = _304 + _339;
        precise float _352 = _305 + _340;
        precise float _353 = _306 + _341;
        uint _356 = (_272 + uint(float(BLENDINDICES.z))) * 3u;
        uint _363 = _356 + 1u;
        uint _370 = _356 + 2u;
        precise float _377 = _263 * cbObjMatrix._m0[_356].x;
        precise float _378 = _263 * cbObjMatrix._m0[_363].x;
        precise float _379 = _263 * cbObjMatrix._m0[_370].x;
        precise float _380 = _263 * cbObjMatrix._m0[_356].y;
        precise float _381 = _263 * cbObjMatrix._m0[_363].y;
        precise float _382 = _263 * cbObjMatrix._m0[_370].y;
        precise float _383 = _263 * cbObjMatrix._m0[_356].z;
        precise float _384 = _263 * cbObjMatrix._m0[_363].z;
        precise float _385 = _263 * cbObjMatrix._m0[_370].z;
        precise float _386 = _263 * cbObjMatrix._m0[_356].w;
        precise float _387 = _263 * cbObjMatrix._m0[_363].w;
        precise float _388 = _263 * cbObjMatrix._m0[_370].w;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        precise float _392 = _345 + _380;
        precise float _393 = _346 + _381;
        precise float _394 = _347 + _382;
        precise float _395 = _348 + _383;
        precise float _396 = _349 + _384;
        precise float _397 = _350 + _385;
        precise float _398 = _351 + _386;
        precise float _399 = _352 + _387;
        precise float _400 = _353 + _388;
        uint _403 = (_272 + uint(float(BLENDINDICES.w))) * 3u;
        uint _410 = _403 + 1u;
        uint _417 = _403 + 2u;
        precise float _424 = _264 * cbObjMatrix._m0[_403].x;
        precise float _425 = _264 * cbObjMatrix._m0[_410].x;
        precise float _426 = _264 * cbObjMatrix._m0[_417].x;
        precise float _427 = _264 * cbObjMatrix._m0[_403].y;
        precise float _428 = _264 * cbObjMatrix._m0[_410].y;
        precise float _429 = _264 * cbObjMatrix._m0[_417].y;
        precise float _430 = _264 * cbObjMatrix._m0[_403].z;
        precise float _431 = _264 * cbObjMatrix._m0[_410].z;
        precise float _432 = _264 * cbObjMatrix._m0[_417].z;
        precise float _433 = _264 * cbObjMatrix._m0[_403].w;
        precise float _434 = _264 * cbObjMatrix._m0[_410].w;
        precise float _435 = _264 * cbObjMatrix._m0[_417].w;
        precise float _436 = _389 + _424;
        precise float _437 = _390 + _425;
        precise float _438 = _391 + _426;
        precise float _439 = _392 + _427;
        precise float _440 = _393 + _428;
        precise float _441 = _394 + _429;
        precise float _442 = _395 + _430;
        precise float _443 = _396 + _431;
        precise float _444 = _397 + _432;
        precise float _445 = _398 + _433;
        precise float _446 = _399 + _434;
        precise float _447 = _400 + _435;
        _466 = _436;
        _467 = _439;
        _468 = _442;
        _469 = _445;
        _470 = _437;
        _471 = _440;
        _472 = _443;
        _473 = _446;
        _474 = _438;
        _475 = _441;
        _476 = _444;
        _477 = _447;
    }
    else
    {
        _466 = cbvModelParam._m0[0u].x;
        _467 = cbvModelParam._m0[0u].y;
        _468 = cbvModelParam._m0[0u].z;
        _469 = cbvModelParam._m0[0u].w;
        _470 = cbvModelParam._m0[1u].x;
        _471 = cbvModelParam._m0[1u].y;
        _472 = cbvModelParam._m0[1u].z;
        _473 = cbvModelParam._m0[1u].w;
        _474 = cbvModelParam._m0[2u].x;
        _475 = cbvModelParam._m0[2u].y;
        _476 = cbvModelParam._m0[2u].z;
        _477 = cbvModelParam._m0[2u].w;
    }
    precise float _478 = POSITION.x * _466;
    precise float _479 = POSITION.y * _467;
    precise float _480 = _479 + _478;
    precise float _481 = POSITION.z * _468;
    precise float _482 = _481 + _480;
    precise float _483 = 1.0 * _469;
    precise float _484 = _483 + _482;
    precise float _485 = POSITION.x * _470;
    precise float _486 = POSITION.y * _471;
    precise float _487 = _486 + _485;
    precise float _488 = POSITION.z * _472;
    precise float _489 = _488 + _487;
    precise float _490 = 1.0 * _473;
    precise float _491 = _490 + _489;
    precise float _492 = POSITION.x * _474;
    precise float _493 = POSITION.y * _475;
    precise float _494 = _493 + _492;
    precise float _495 = POSITION.z * _476;
    precise float _496 = _495 + _494;
    precise float _497 = 1.0 * _477;
    precise float _498 = _497 + _496;
    float _504 = cbSceneParam._m0[3u].x - _484;
    float _505 = cbSceneParam._m0[3u].y - _491;
    float _506 = cbSceneParam._m0[3u].z - _498;
    uint _526 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _87;
    uvec4 _528 = texelFetch(g_InstanceIndexBuffer, int(_526));
    uint _529 = _528.x;
    precise float _540 = _484 - cbSceneParam._m0[3u].x;
    precise float _541 = _491 - cbSceneParam._m0[3u].y;
    precise float _542 = _498 - cbSceneParam._m0[3u].z;
    precise float _570 = _540 * cbSceneParam._m0[24u].x;
    precise float _571 = _541 * cbSceneParam._m0[24u].y;
    precise float _572 = _571 + _570;
    precise float _573 = _542 * cbSceneParam._m0[24u].z;
    precise float _574 = _573 + _572;
    precise float _575 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _576 = _575 + _574;
    precise float _577 = _540 * cbSceneParam._m0[25u].x;
    precise float _578 = _541 * cbSceneParam._m0[25u].y;
    precise float _579 = _578 + _577;
    precise float _580 = _542 * cbSceneParam._m0[25u].z;
    precise float _581 = _580 + _579;
    precise float _582 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _583 = _582 + _581;
    precise float _584 = _540 * cbSceneParam._m0[26u].x;
    precise float _585 = _541 * cbSceneParam._m0[26u].y;
    precise float _586 = _585 + _584;
    precise float _587 = _542 * cbSceneParam._m0[26u].z;
    precise float _588 = _587 + _586;
    precise float _589 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _590 = _589 + _588;
    precise float _591 = _540 * cbSceneParam._m0[27u].x;
    precise float _592 = _541 * cbSceneParam._m0[27u].y;
    precise float _593 = _592 + _591;
    precise float _594 = _542 * cbSceneParam._m0[27u].z;
    precise float _595 = _594 + _593;
    precise float _596 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _597 = _596 + _595;
    gl_Position.x = _576;
    gl_Position.y = _583;
    gl_Position.z = _590;
    gl_Position.w = _597;
    NORMAL_1.x = fma(_217, _468, fma(_216, _467, _466 * _214));
    NORMAL_1.y = fma(_217, _472, fma(_216, _471, _470 * _214));
    NORMAL_1.z = fma(_217, _476, fma(_216, _475, _474 * _214));
    NORMAL_1.w = float(_529);
    TANGENT_1.x = fma(_226, _468, fma(_225, _467, _466 * _224));
    TANGENT_1.y = fma(_226, _472, fma(_225, _471, _470 * _224));
    TANGENT_1.z = fma(_226, _476, fma(_225, _475, _474 * _224));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    TEXCOORD_8.x = _590;
    TEXCOORD_8.y = _597;
    TEXCOORD_12 = sqrt(((_504 * _504) + (_505 * _505)) + (_506 * _506));
    gl_ClipDistance[0u] = dot(vec4(_576, _583, _590, _597), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_576, _583, _590, _597), vec4(cbInstanceData._m0[(_529 * 13u) + 3u]));
}


