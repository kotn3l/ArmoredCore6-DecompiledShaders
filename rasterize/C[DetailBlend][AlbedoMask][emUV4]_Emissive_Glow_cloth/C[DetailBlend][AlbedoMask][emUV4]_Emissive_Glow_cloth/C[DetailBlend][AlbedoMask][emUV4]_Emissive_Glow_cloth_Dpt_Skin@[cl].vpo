#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    float _333;
    float _334;
    float _335;
    float _336;
    float _337;
    float _338;
    float _339;
    float _340;
    float _341;
    float _342;
    float _343;
    float _344;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _116 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
        precise float _120 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _125 = isnan(_120) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _120 : max(0.001000000047497451305389404296875, _120));
        precise float _127 = BLENDWEIGHT.x / _125;
        precise float _128 = BLENDWEIGHT.y / _125;
        precise float _129 = BLENDWEIGHT.z / _125;
        precise float _130 = BLENDWEIGHT.w / _125;
        uvec4 _138 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_116)).x * 13u) + 4u]);
        uint _139 = _138.x;
        uint _141 = (_139 + uint(float(BLENDINDICES.x))) * 3u;
        uint _148 = _141 + 1u;
        uint _155 = _141 + 2u;
        precise float _162 = _127 * cbObjMatrix._m0[_141].x;
        precise float _163 = _127 * cbObjMatrix._m0[_148].x;
        precise float _164 = _127 * cbObjMatrix._m0[_155].x;
        precise float _165 = _127 * cbObjMatrix._m0[_141].y;
        precise float _166 = _127 * cbObjMatrix._m0[_148].y;
        precise float _167 = _127 * cbObjMatrix._m0[_155].y;
        precise float _168 = _127 * cbObjMatrix._m0[_141].z;
        precise float _169 = _127 * cbObjMatrix._m0[_148].z;
        precise float _170 = _127 * cbObjMatrix._m0[_155].z;
        precise float _171 = _127 * cbObjMatrix._m0[_141].w;
        precise float _172 = _127 * cbObjMatrix._m0[_148].w;
        precise float _173 = _127 * cbObjMatrix._m0[_155].w;
        uint _176 = (_139 + uint(float(BLENDINDICES.y))) * 3u;
        uint _183 = _176 + 1u;
        uint _190 = _176 + 2u;
        precise float _197 = _128 * cbObjMatrix._m0[_176].x;
        precise float _198 = _128 * cbObjMatrix._m0[_183].x;
        precise float _199 = _128 * cbObjMatrix._m0[_190].x;
        precise float _200 = _128 * cbObjMatrix._m0[_176].y;
        precise float _201 = _128 * cbObjMatrix._m0[_183].y;
        precise float _202 = _128 * cbObjMatrix._m0[_190].y;
        precise float _203 = _128 * cbObjMatrix._m0[_176].z;
        precise float _204 = _128 * cbObjMatrix._m0[_183].z;
        precise float _205 = _128 * cbObjMatrix._m0[_190].z;
        precise float _206 = _128 * cbObjMatrix._m0[_176].w;
        precise float _207 = _128 * cbObjMatrix._m0[_183].w;
        precise float _208 = _128 * cbObjMatrix._m0[_190].w;
        precise float _209 = _162 + _197;
        precise float _210 = _163 + _198;
        precise float _211 = _164 + _199;
        precise float _212 = _165 + _200;
        precise float _213 = _166 + _201;
        precise float _214 = _167 + _202;
        precise float _215 = _168 + _203;
        precise float _216 = _169 + _204;
        precise float _217 = _170 + _205;
        precise float _218 = _171 + _206;
        precise float _219 = _172 + _207;
        precise float _220 = _173 + _208;
        uint _223 = (_139 + uint(float(BLENDINDICES.z))) * 3u;
        uint _230 = _223 + 1u;
        uint _237 = _223 + 2u;
        precise float _244 = _129 * cbObjMatrix._m0[_223].x;
        precise float _245 = _129 * cbObjMatrix._m0[_230].x;
        precise float _246 = _129 * cbObjMatrix._m0[_237].x;
        precise float _247 = _129 * cbObjMatrix._m0[_223].y;
        precise float _248 = _129 * cbObjMatrix._m0[_230].y;
        precise float _249 = _129 * cbObjMatrix._m0[_237].y;
        precise float _250 = _129 * cbObjMatrix._m0[_223].z;
        precise float _251 = _129 * cbObjMatrix._m0[_230].z;
        precise float _252 = _129 * cbObjMatrix._m0[_237].z;
        precise float _253 = _129 * cbObjMatrix._m0[_223].w;
        precise float _254 = _129 * cbObjMatrix._m0[_230].w;
        precise float _255 = _129 * cbObjMatrix._m0[_237].w;
        precise float _256 = _209 + _244;
        precise float _257 = _210 + _245;
        precise float _258 = _211 + _246;
        precise float _259 = _212 + _247;
        precise float _260 = _213 + _248;
        precise float _261 = _214 + _249;
        precise float _262 = _215 + _250;
        precise float _263 = _216 + _251;
        precise float _264 = _217 + _252;
        precise float _265 = _218 + _253;
        precise float _266 = _219 + _254;
        precise float _267 = _220 + _255;
        uint _270 = (_139 + uint(float(BLENDINDICES.w))) * 3u;
        uint _277 = _270 + 1u;
        uint _284 = _270 + 2u;
        precise float _291 = _130 * cbObjMatrix._m0[_270].x;
        precise float _292 = _130 * cbObjMatrix._m0[_277].x;
        precise float _293 = _130 * cbObjMatrix._m0[_284].x;
        precise float _294 = _130 * cbObjMatrix._m0[_270].y;
        precise float _295 = _130 * cbObjMatrix._m0[_277].y;
        precise float _296 = _130 * cbObjMatrix._m0[_284].y;
        precise float _297 = _130 * cbObjMatrix._m0[_270].z;
        precise float _298 = _130 * cbObjMatrix._m0[_277].z;
        precise float _299 = _130 * cbObjMatrix._m0[_284].z;
        precise float _300 = _130 * cbObjMatrix._m0[_270].w;
        precise float _301 = _130 * cbObjMatrix._m0[_277].w;
        precise float _302 = _130 * cbObjMatrix._m0[_284].w;
        precise float _303 = _256 + _291;
        precise float _304 = _257 + _292;
        precise float _305 = _258 + _293;
        precise float _306 = _259 + _294;
        precise float _307 = _260 + _295;
        precise float _308 = _261 + _296;
        precise float _309 = _262 + _297;
        precise float _310 = _263 + _298;
        precise float _311 = _264 + _299;
        precise float _312 = _265 + _300;
        precise float _313 = _266 + _301;
        precise float _314 = _267 + _302;
        _333 = _303;
        _334 = _306;
        _335 = _309;
        _336 = _312;
        _337 = _304;
        _338 = _307;
        _339 = _310;
        _340 = _313;
        _341 = _305;
        _342 = _308;
        _343 = _311;
        _344 = _314;
    }
    else
    {
        _333 = cbvModelParam._m0[0u].x;
        _334 = cbvModelParam._m0[0u].y;
        _335 = cbvModelParam._m0[0u].z;
        _336 = cbvModelParam._m0[0u].w;
        _337 = cbvModelParam._m0[1u].x;
        _338 = cbvModelParam._m0[1u].y;
        _339 = cbvModelParam._m0[1u].z;
        _340 = cbvModelParam._m0[1u].w;
        _341 = cbvModelParam._m0[2u].x;
        _342 = cbvModelParam._m0[2u].y;
        _343 = cbvModelParam._m0[2u].z;
        _344 = cbvModelParam._m0[2u].w;
    }
    precise float _345 = POSITION.x * _333;
    precise float _346 = POSITION.y * _334;
    precise float _347 = _346 + _345;
    precise float _348 = POSITION.z * _335;
    precise float _349 = _348 + _347;
    precise float _350 = 1.0 * _336;
    precise float _351 = _350 + _349;
    precise float _352 = POSITION.x * _337;
    precise float _353 = POSITION.y * _338;
    precise float _354 = _353 + _352;
    precise float _355 = POSITION.z * _339;
    precise float _356 = _355 + _354;
    precise float _357 = 1.0 * _340;
    precise float _358 = _357 + _356;
    precise float _359 = POSITION.x * _341;
    precise float _360 = POSITION.y * _342;
    precise float _361 = _360 + _359;
    precise float _362 = POSITION.z * _343;
    precise float _363 = _362 + _361;
    precise float _364 = 1.0 * _344;
    precise float _365 = _364 + _363;
    precise float _371 = _351 - cbSceneParam._m0[3u].x;
    precise float _372 = _358 - cbSceneParam._m0[3u].y;
    precise float _373 = _365 - cbSceneParam._m0[3u].z;
    precise float _401 = _371 * cbSceneParam._m0[24u].x;
    precise float _402 = _372 * cbSceneParam._m0[24u].y;
    precise float _403 = _402 + _401;
    precise float _404 = _373 * cbSceneParam._m0[24u].z;
    precise float _405 = _404 + _403;
    precise float _406 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _407 = _406 + _405;
    precise float _408 = _371 * cbSceneParam._m0[25u].x;
    precise float _409 = _372 * cbSceneParam._m0[25u].y;
    precise float _410 = _409 + _408;
    precise float _411 = _373 * cbSceneParam._m0[25u].z;
    precise float _412 = _411 + _410;
    precise float _413 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _414 = _413 + _412;
    precise float _415 = _371 * cbSceneParam._m0[26u].x;
    precise float _416 = _372 * cbSceneParam._m0[26u].y;
    precise float _417 = _416 + _415;
    precise float _418 = _373 * cbSceneParam._m0[26u].z;
    precise float _419 = _418 + _417;
    precise float _420 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _421 = _420 + _419;
    precise float _422 = _371 * cbSceneParam._m0[27u].x;
    precise float _423 = _372 * cbSceneParam._m0[27u].y;
    precise float _424 = _423 + _422;
    precise float _425 = _373 * cbSceneParam._m0[27u].z;
    precise float _426 = _425 + _424;
    precise float _427 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _428 = _427 + _426;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_Position.x = _407;
    gl_Position.y = _414;
    gl_Position.z = _421;
    gl_Position.w = _428;
}


