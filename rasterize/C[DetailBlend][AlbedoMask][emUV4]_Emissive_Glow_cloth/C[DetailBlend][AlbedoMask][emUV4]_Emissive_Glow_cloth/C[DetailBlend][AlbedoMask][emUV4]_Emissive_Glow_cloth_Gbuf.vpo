#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_2;
layout(location = 4) out vec3 TEXCOORD_4;
layout(location = 4, component = 3) out float TEXCOORD_12;

void main()
{
    uint _82 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_12 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _199 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _201 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _202 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _209 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _210 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _211 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _278;
    float _279;
    float _280;
    float _281;
    float _282;
    float _283;
    float _284;
    float _285;
    float _286;
    float _287;
    float _288;
    float _289;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _226 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _82;
        uint _239 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_226)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _246 = _239 + 1u;
        uint _253 = _239 + 2u;
        _278 = cbObjMatrix._m0[_239].x;
        _279 = cbObjMatrix._m0[_239].y;
        _280 = cbObjMatrix._m0[_239].z;
        _281 = cbObjMatrix._m0[_239].w;
        _282 = cbObjMatrix._m0[_246].x;
        _283 = cbObjMatrix._m0[_246].y;
        _284 = cbObjMatrix._m0[_246].z;
        _285 = cbObjMatrix._m0[_246].w;
        _286 = cbObjMatrix._m0[_253].x;
        _287 = cbObjMatrix._m0[_253].y;
        _288 = cbObjMatrix._m0[_253].z;
        _289 = cbObjMatrix._m0[_253].w;
    }
    else
    {
        _278 = cbvModelParam._m0[0u].x;
        _279 = cbvModelParam._m0[0u].y;
        _280 = cbvModelParam._m0[0u].z;
        _281 = cbvModelParam._m0[0u].w;
        _282 = cbvModelParam._m0[1u].x;
        _283 = cbvModelParam._m0[1u].y;
        _284 = cbvModelParam._m0[1u].z;
        _285 = cbvModelParam._m0[1u].w;
        _286 = cbvModelParam._m0[2u].x;
        _287 = cbvModelParam._m0[2u].y;
        _288 = cbvModelParam._m0[2u].z;
        _289 = cbvModelParam._m0[2u].w;
    }
    precise float _290 = POSITION.x * _278;
    precise float _291 = POSITION.y * _279;
    precise float _292 = _291 + _290;
    precise float _293 = POSITION.z * _280;
    precise float _294 = _293 + _292;
    precise float _295 = 1.0 * _281;
    precise float _297 = _295 + _294;
    precise float _298 = POSITION.x * _282;
    precise float _299 = POSITION.y * _283;
    precise float _300 = _299 + _298;
    precise float _301 = POSITION.z * _284;
    precise float _302 = _301 + _300;
    precise float _303 = 1.0 * _285;
    precise float _304 = _303 + _302;
    precise float _305 = POSITION.x * _286;
    precise float _306 = POSITION.y * _287;
    precise float _307 = _306 + _305;
    precise float _308 = POSITION.z * _288;
    precise float _309 = _308 + _307;
    precise float _310 = 1.0 * _289;
    precise float _311 = _310 + _309;
    float _317 = cbSceneParam._m0[3u].x - _297;
    float _318 = cbSceneParam._m0[3u].y - _304;
    float _319 = cbSceneParam._m0[3u].z - _311;
    uint _340 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _82;
    uvec4 _342 = texelFetch(g_InstanceIndexBuffer, int(_340));
    uint _343 = _342.x;
    precise float _354 = _297 - cbSceneParam._m0[3u].x;
    precise float _355 = _304 - cbSceneParam._m0[3u].y;
    precise float _356 = _311 - cbSceneParam._m0[3u].z;
    precise float _384 = _354 * cbSceneParam._m0[24u].x;
    precise float _385 = _355 * cbSceneParam._m0[24u].y;
    precise float _386 = _385 + _384;
    precise float _387 = _356 * cbSceneParam._m0[24u].z;
    precise float _388 = _387 + _386;
    precise float _389 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _390 = _389 + _388;
    precise float _391 = _354 * cbSceneParam._m0[25u].x;
    precise float _392 = _355 * cbSceneParam._m0[25u].y;
    precise float _393 = _392 + _391;
    precise float _394 = _356 * cbSceneParam._m0[25u].z;
    precise float _395 = _394 + _393;
    precise float _396 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _397 = _396 + _395;
    precise float _398 = _354 * cbSceneParam._m0[26u].x;
    precise float _399 = _355 * cbSceneParam._m0[26u].y;
    precise float _400 = _399 + _398;
    precise float _401 = _356 * cbSceneParam._m0[26u].z;
    precise float _402 = _401 + _400;
    precise float _403 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _404 = _403 + _402;
    precise float _405 = _354 * cbSceneParam._m0[27u].x;
    precise float _406 = _355 * cbSceneParam._m0[27u].y;
    precise float _407 = _406 + _405;
    precise float _408 = _356 * cbSceneParam._m0[27u].z;
    precise float _409 = _408 + _407;
    precise float _410 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _411 = _410 + _409;
    gl_Position.x = _390;
    gl_Position.y = _397;
    gl_Position.z = _404;
    gl_Position.w = _411;
    NORMAL_1.x = fma(_202, _280, fma(_201, _279, _278 * _199));
    NORMAL_1.y = fma(_202, _284, fma(_201, _283, _282 * _199));
    NORMAL_1.z = fma(_202, _288, fma(_201, _287, _286 * _199));
    NORMAL_1.w = float(_343);
    TANGENT_1.x = fma(_211, _280, fma(_210, _279, _278 * _209));
    TANGENT_1.y = fma(_211, _284, fma(_210, _283, _282 * _209));
    TANGENT_1.z = fma(_211, _288, fma(_210, _287, _286 * _209));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    TEXCOORD_12 = sqrt(((_317 * _317) + (_318 * _318)) + (_319 * _319));
    gl_ClipDistance[0u] = dot(vec4(_390, _397, _404, _411), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_390, _397, _404, _411), vec4(cbInstanceData._m0[(_343 * 13u) + 3u]));
}


