#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec3 TEXCOORD_4;
layout(location = 6) out vec4 TEXCOORD_9;
layout(location = 7) out vec4 TEXCOORD_10;
layout(location = 8) out vec3 TEXCOORD_11;

void main()
{
    uint _90 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _239 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _241 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _242 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _249 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _250 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _251 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _253 = float(BLENDINDICES.x);
    float _254 = float(BLENDINDICES.y);
    float _255 = float(BLENDINDICES.z);
    float _256 = float(BLENDINDICES.w);
    bool _262 = floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u;
    float _483;
    float _484;
    float _485;
    float _486;
    float _487;
    float _488;
    float _489;
    float _490;
    float _491;
    float _492;
    float _493;
    float _494;
    if (_262)
    {
        uint _267 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _90;
        precise float _271 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _276 = isnan(_271) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _271 : max(0.001000000047497451305389404296875, _271));
        precise float _278 = BLENDWEIGHT.x / _276;
        precise float _279 = BLENDWEIGHT.y / _276;
        precise float _280 = BLENDWEIGHT.z / _276;
        precise float _281 = BLENDWEIGHT.w / _276;
        uvec4 _288 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_267)).x * 13u) + 4u]);
        uint _289 = _288.x;
        uint _291 = (_289 + uint(_253)) * 3u;
        uint _298 = _291 + 1u;
        uint _305 = _291 + 2u;
        precise float _312 = _278 * cbObjMatrix._m0[_291].x;
        precise float _313 = _278 * cbObjMatrix._m0[_298].x;
        precise float _314 = _278 * cbObjMatrix._m0[_305].x;
        precise float _315 = _278 * cbObjMatrix._m0[_291].y;
        precise float _316 = _278 * cbObjMatrix._m0[_298].y;
        precise float _317 = _278 * cbObjMatrix._m0[_305].y;
        precise float _318 = _278 * cbObjMatrix._m0[_291].z;
        precise float _319 = _278 * cbObjMatrix._m0[_298].z;
        precise float _320 = _278 * cbObjMatrix._m0[_305].z;
        precise float _321 = _278 * cbObjMatrix._m0[_291].w;
        precise float _322 = _278 * cbObjMatrix._m0[_298].w;
        precise float _323 = _278 * cbObjMatrix._m0[_305].w;
        uint _326 = (_289 + uint(_254)) * 3u;
        uint _333 = _326 + 1u;
        uint _340 = _326 + 2u;
        precise float _347 = _279 * cbObjMatrix._m0[_326].x;
        precise float _348 = _279 * cbObjMatrix._m0[_333].x;
        precise float _349 = _279 * cbObjMatrix._m0[_340].x;
        precise float _350 = _279 * cbObjMatrix._m0[_326].y;
        precise float _351 = _279 * cbObjMatrix._m0[_333].y;
        precise float _352 = _279 * cbObjMatrix._m0[_340].y;
        precise float _353 = _279 * cbObjMatrix._m0[_326].z;
        precise float _354 = _279 * cbObjMatrix._m0[_333].z;
        precise float _355 = _279 * cbObjMatrix._m0[_340].z;
        precise float _356 = _279 * cbObjMatrix._m0[_326].w;
        precise float _357 = _279 * cbObjMatrix._m0[_333].w;
        precise float _358 = _279 * cbObjMatrix._m0[_340].w;
        precise float _359 = _312 + _347;
        precise float _360 = _313 + _348;
        precise float _361 = _314 + _349;
        precise float _362 = _315 + _350;
        precise float _363 = _316 + _351;
        precise float _364 = _317 + _352;
        precise float _365 = _318 + _353;
        precise float _366 = _319 + _354;
        precise float _367 = _320 + _355;
        precise float _368 = _321 + _356;
        precise float _369 = _322 + _357;
        precise float _370 = _323 + _358;
        uint _373 = (_289 + uint(_255)) * 3u;
        uint _380 = _373 + 1u;
        uint _387 = _373 + 2u;
        precise float _394 = _280 * cbObjMatrix._m0[_373].x;
        precise float _395 = _280 * cbObjMatrix._m0[_380].x;
        precise float _396 = _280 * cbObjMatrix._m0[_387].x;
        precise float _397 = _280 * cbObjMatrix._m0[_373].y;
        precise float _398 = _280 * cbObjMatrix._m0[_380].y;
        precise float _399 = _280 * cbObjMatrix._m0[_387].y;
        precise float _400 = _280 * cbObjMatrix._m0[_373].z;
        precise float _401 = _280 * cbObjMatrix._m0[_380].z;
        precise float _402 = _280 * cbObjMatrix._m0[_387].z;
        precise float _403 = _280 * cbObjMatrix._m0[_373].w;
        precise float _404 = _280 * cbObjMatrix._m0[_380].w;
        precise float _405 = _280 * cbObjMatrix._m0[_387].w;
        precise float _406 = _359 + _394;
        precise float _407 = _360 + _395;
        precise float _408 = _361 + _396;
        precise float _409 = _362 + _397;
        precise float _410 = _363 + _398;
        precise float _411 = _364 + _399;
        precise float _412 = _365 + _400;
        precise float _413 = _366 + _401;
        precise float _414 = _367 + _402;
        precise float _415 = _368 + _403;
        precise float _416 = _369 + _404;
        precise float _417 = _370 + _405;
        uint _420 = (_289 + uint(_256)) * 3u;
        uint _427 = _420 + 1u;
        uint _434 = _420 + 2u;
        precise float _441 = _281 * cbObjMatrix._m0[_420].x;
        precise float _442 = _281 * cbObjMatrix._m0[_427].x;
        precise float _443 = _281 * cbObjMatrix._m0[_434].x;
        precise float _444 = _281 * cbObjMatrix._m0[_420].y;
        precise float _445 = _281 * cbObjMatrix._m0[_427].y;
        precise float _446 = _281 * cbObjMatrix._m0[_434].y;
        precise float _447 = _281 * cbObjMatrix._m0[_420].z;
        precise float _448 = _281 * cbObjMatrix._m0[_427].z;
        precise float _449 = _281 * cbObjMatrix._m0[_434].z;
        precise float _450 = _281 * cbObjMatrix._m0[_420].w;
        precise float _451 = _281 * cbObjMatrix._m0[_427].w;
        precise float _452 = _281 * cbObjMatrix._m0[_434].w;
        precise float _453 = _406 + _441;
        precise float _454 = _407 + _442;
        precise float _455 = _408 + _443;
        precise float _456 = _409 + _444;
        precise float _457 = _410 + _445;
        precise float _458 = _411 + _446;
        precise float _459 = _412 + _447;
        precise float _460 = _413 + _448;
        precise float _461 = _414 + _449;
        precise float _462 = _415 + _450;
        precise float _463 = _416 + _451;
        precise float _464 = _417 + _452;
        _483 = _453;
        _484 = _456;
        _485 = _459;
        _486 = _462;
        _487 = _454;
        _488 = _457;
        _489 = _460;
        _490 = _463;
        _491 = _455;
        _492 = _458;
        _493 = _461;
        _494 = _464;
    }
    else
    {
        _483 = cbvModelParam._m0[0u].x;
        _484 = cbvModelParam._m0[0u].y;
        _485 = cbvModelParam._m0[0u].z;
        _486 = cbvModelParam._m0[0u].w;
        _487 = cbvModelParam._m0[1u].x;
        _488 = cbvModelParam._m0[1u].y;
        _489 = cbvModelParam._m0[1u].z;
        _490 = cbvModelParam._m0[1u].w;
        _491 = cbvModelParam._m0[2u].x;
        _492 = cbvModelParam._m0[2u].y;
        _493 = cbvModelParam._m0[2u].z;
        _494 = cbvModelParam._m0[2u].w;
    }
    precise float _495 = POSITION.x * _483;
    precise float _496 = POSITION.y * _484;
    precise float _497 = _496 + _495;
    precise float _498 = POSITION.z * _485;
    precise float _499 = _498 + _497;
    precise float _500 = 1.0 * _486;
    precise float _501 = _500 + _499;
    precise float _502 = POSITION.x * _487;
    precise float _503 = POSITION.y * _488;
    precise float _504 = _503 + _502;
    precise float _505 = POSITION.z * _489;
    precise float _506 = _505 + _504;
    precise float _507 = 1.0 * _490;
    precise float _508 = _507 + _506;
    precise float _509 = POSITION.x * _491;
    precise float _510 = POSITION.y * _492;
    precise float _511 = _510 + _509;
    precise float _512 = POSITION.z * _493;
    precise float _513 = _512 + _511;
    precise float _514 = 1.0 * _494;
    precise float _515 = _514 + _513;
    float _733;
    float _734;
    float _735;
    float _736;
    float _737;
    float _738;
    float _739;
    float _740;
    float _741;
    float _742;
    float _743;
    float _744;
    if (_262)
    {
        float _516 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _519 = isnan(_516) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _516 : max(0.001000000047497451305389404296875, _516));
        float _520 = BLENDWEIGHT.x / _519;
        float _521 = BLENDWEIGHT.y / _519;
        float _522 = BLENDWEIGHT.z / _519;
        float _523 = BLENDWEIGHT.w / _519;
        uint _529 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _90;
        uvec4 _537 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_529)).x * 13u) + 4u]);
        uint _538 = _537.x;
        uint _540 = (_538 + uint(_253)) * 3u;
        uint _547 = _540 + 1u;
        uint _554 = _540 + 2u;
        uint _575 = (_538 + uint(_254)) * 3u;
        uint _582 = _575 + 1u;
        uint _589 = _575 + 2u;
        uint _622 = (_538 + uint(_255)) * 3u;
        uint _629 = _622 + 1u;
        uint _636 = _622 + 2u;
        uint _669 = (_538 + uint(_256)) * 3u;
        uint _676 = _669 + 1u;
        uint _683 = _669 + 2u;
        _733 = (((cbPrevObjMatrix._m0[_575].x * _521) + (cbPrevObjMatrix._m0[_540].x * _520)) + (cbPrevObjMatrix._m0[_622].x * _522)) + (cbPrevObjMatrix._m0[_669].x * _523);
        _734 = (((cbPrevObjMatrix._m0[_575].y * _521) + (cbPrevObjMatrix._m0[_540].y * _520)) + (cbPrevObjMatrix._m0[_622].y * _522)) + (cbPrevObjMatrix._m0[_669].y * _523);
        _735 = (((cbPrevObjMatrix._m0[_575].z * _521) + (cbPrevObjMatrix._m0[_540].z * _520)) + (cbPrevObjMatrix._m0[_622].z * _522)) + (cbPrevObjMatrix._m0[_669].z * _523);
        _736 = (((cbPrevObjMatrix._m0[_575].w * _521) + (cbPrevObjMatrix._m0[_540].w * _520)) + (cbPrevObjMatrix._m0[_622].w * _522)) + (cbPrevObjMatrix._m0[_669].w * _523);
        _737 = (((cbPrevObjMatrix._m0[_582].x * _521) + (cbPrevObjMatrix._m0[_547].x * _520)) + (cbPrevObjMatrix._m0[_629].x * _522)) + (cbPrevObjMatrix._m0[_676].x * _523);
        _738 = (((cbPrevObjMatrix._m0[_582].y * _521) + (cbPrevObjMatrix._m0[_547].y * _520)) + (cbPrevObjMatrix._m0[_629].y * _522)) + (cbPrevObjMatrix._m0[_676].y * _523);
        _739 = (((cbPrevObjMatrix._m0[_582].z * _521) + (cbPrevObjMatrix._m0[_547].z * _520)) + (cbPrevObjMatrix._m0[_629].z * _522)) + (cbPrevObjMatrix._m0[_676].z * _523);
        _740 = (((cbPrevObjMatrix._m0[_582].w * _521) + (cbPrevObjMatrix._m0[_547].w * _520)) + (cbPrevObjMatrix._m0[_629].w * _522)) + (cbPrevObjMatrix._m0[_676].w * _523);
        _741 = (((cbPrevObjMatrix._m0[_589].x * _521) + (cbPrevObjMatrix._m0[_554].x * _520)) + (cbPrevObjMatrix._m0[_636].x * _522)) + (cbPrevObjMatrix._m0[_683].x * _523);
        _742 = (((cbPrevObjMatrix._m0[_589].y * _521) + (cbPrevObjMatrix._m0[_554].y * _520)) + (cbPrevObjMatrix._m0[_636].y * _522)) + (cbPrevObjMatrix._m0[_683].y * _523);
        _743 = (((cbPrevObjMatrix._m0[_589].z * _521) + (cbPrevObjMatrix._m0[_554].z * _520)) + (cbPrevObjMatrix._m0[_636].z * _522)) + (cbPrevObjMatrix._m0[_683].z * _523);
        _744 = (((cbPrevObjMatrix._m0[_589].w * _521) + (cbPrevObjMatrix._m0[_554].w * _520)) + (cbPrevObjMatrix._m0[_636].w * _522)) + (cbPrevObjMatrix._m0[_683].w * _523);
    }
    else
    {
        _733 = cbvModelParam._m0[3u].x;
        _734 = cbvModelParam._m0[3u].y;
        _735 = cbvModelParam._m0[3u].z;
        _736 = cbvModelParam._m0[3u].w;
        _737 = cbvModelParam._m0[4u].x;
        _738 = cbvModelParam._m0[4u].y;
        _739 = cbvModelParam._m0[4u].z;
        _740 = cbvModelParam._m0[4u].w;
        _741 = cbvModelParam._m0[5u].x;
        _742 = cbvModelParam._m0[5u].y;
        _743 = cbvModelParam._m0[5u].z;
        _744 = cbvModelParam._m0[5u].w;
    }
    float _763 = (fma(POSITION.z, _735, fma(POSITION.y, _734, _733 * POSITION.x)) + _736) - cbSceneParam._m0[28u].x;
    float _764 = (fma(POSITION.z, _739, fma(POSITION.y, _738, _737 * POSITION.x)) + _740) - cbSceneParam._m0[28u].y;
    float _765 = (fma(POSITION.z, _743, fma(POSITION.y, _742, _741 * POSITION.x)) + _744) - cbSceneParam._m0[28u].z;
    float _812 = fma(_242, _485, fma(_241, _484, _483 * _239));
    float _815 = fma(_242, _489, fma(_241, _488, _487 * _239));
    float _818 = fma(_242, _493, fma(_241, _492, _491 * _239));
    uint _823 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _90;
    uvec4 _825 = texelFetch(g_InstanceIndexBuffer, int(_823));
    uint _826 = _825.x;
    precise float _842 = _501 - cbSceneParam._m0[3u].x;
    precise float _843 = _508 - cbSceneParam._m0[3u].y;
    precise float _844 = _515 - cbSceneParam._m0[3u].z;
    precise float _872 = _842 * cbSceneParam._m0[24u].x;
    precise float _873 = _843 * cbSceneParam._m0[24u].y;
    precise float _874 = _873 + _872;
    precise float _875 = _844 * cbSceneParam._m0[24u].z;
    precise float _876 = _875 + _874;
    precise float _877 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _878 = _877 + _876;
    precise float _879 = _842 * cbSceneParam._m0[25u].x;
    precise float _880 = _843 * cbSceneParam._m0[25u].y;
    precise float _881 = _880 + _879;
    precise float _882 = _844 * cbSceneParam._m0[25u].z;
    precise float _883 = _882 + _881;
    precise float _884 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _885 = _884 + _883;
    precise float _886 = _842 * cbSceneParam._m0[26u].x;
    precise float _887 = _843 * cbSceneParam._m0[26u].y;
    precise float _888 = _887 + _886;
    precise float _889 = _844 * cbSceneParam._m0[26u].z;
    precise float _890 = _889 + _888;
    precise float _891 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _892 = _891 + _890;
    precise float _893 = _842 * cbSceneParam._m0[27u].x;
    precise float _894 = _843 * cbSceneParam._m0[27u].y;
    precise float _895 = _894 + _893;
    precise float _896 = _844 * cbSceneParam._m0[27u].z;
    precise float _897 = _896 + _895;
    precise float _898 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _899 = _898 + _897;
    gl_Position.x = _878;
    gl_Position.y = _885;
    gl_Position.z = _892;
    gl_Position.w = _899;
    POSITION_1.x = _878;
    POSITION_1.y = _885;
    POSITION_1.z = _892;
    POSITION_1.w = _899;
    NORMAL_1.x = _812;
    NORMAL_1.y = _815;
    NORMAL_1.z = _818;
    NORMAL_1.w = float(_826);
    TANGENT_1.x = fma(_251, _485, fma(_250, _484, _483 * _249));
    TANGENT_1.y = fma(_251, _489, fma(_250, _488, _487 * _249));
    TANGENT_1.z = fma(_251, _493, fma(_250, _492, _491 * _249));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    TEXCOORD_9.x = _878;
    TEXCOORD_9.y = _885;
    TEXCOORD_9.z = _892;
    TEXCOORD_9.w = _899;
    TEXCOORD_10.x = fma(_765, cbSceneParam._m0[29u].z, fma(_764, cbSceneParam._m0[29u].y, _763 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_10.y = fma(_765, cbSceneParam._m0[30u].z, fma(_764, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _763)) + cbSceneParam._m0[30u].w;
    TEXCOORD_10.z = fma(_765, cbSceneParam._m0[31u].z, fma(_764, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _763)) + cbSceneParam._m0[31u].w;
    TEXCOORD_10.w = fma(_765, cbSceneParam._m0[32u].z, fma(_764, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _763)) + cbSceneParam._m0[32u].w;
    TEXCOORD_11.x = _812;
    TEXCOORD_11.y = _815;
    TEXCOORD_11.z = _818;
    gl_ClipDistance[0u] = dot(vec4(_878, _885, _892, _899), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_878, _885, _892, _899), vec4(cbInstanceData._m0[(_826 * 13u) + 3u]));
}


