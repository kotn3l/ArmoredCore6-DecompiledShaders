#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_M0_M1_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_M0_M1_Alpha_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _805;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _178 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _179 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _180 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _186 = inversesqrt(dot(vec3(_178, _179, _180), vec3(_178, _179, _180)));
    float _193 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _200 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _223 = texture(sampler2D(S_AMSN_M0_M1_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _230 = _223.x * cbMtdParam._m0[9u].x;
    float _231 = _223.y * cbMtdParam._m0[9u].y;
    float _232 = _223.z * cbMtdParam._m0[9u].z;
    float _233 = _223.w * TEXCOORD_1.z;
    vec4 _245 = texture(sampler2D(S_AMSN_M0_M1_Alpha_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _249 = _245.z;
    float _253 = (_245.x * 2.0) + (-1.0);
    float _255 = (_245.y * 2.0) + (-1.0);
    float _256 = dot(vec2(_253, _255), vec2(_253, _255));
    float _3406 = isnan(0.0) ? _256 : (isnan(_256) ? 0.0 : max(_256, 0.0));
    float _262 = sqrt(1.0 - (isnan(1.0) ? _3406 : (isnan(_3406) ? 1.0 : min(_3406, 1.0))));
    float _265 = fma(_262, _193 * NORMAL.x, fma(_255, _200 * TANGENT.x, (_186 * _178) * _253));
    float _268 = fma(_262, _193 * NORMAL.y, fma(_255, _200 * TANGENT.y, (_186 * _179) * _253));
    float _271 = fma(_262, _193 * NORMAL.z, fma(_255, _200 * TANGENT.z, (_186 * _180) * _253));
    float _275 = inversesqrt(dot(vec3(_265, _268, _271), vec3(_265, _268, _271)));
    float _276 = _275 * _265;
    float _277 = _275 * _268;
    float _278 = _275 * _271;
    float _3417 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
    float _279 = isnan(1.0) ? _3417 : (isnan(_3417) ? 1.0 : min(_3417, 1.0));
    float _3428 = isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0));
    float _280 = isnan(1.0) ? _3428 : (isnan(_3428) ? 1.0 : min(_3428, 1.0));
    float _3439 = isnan(0.0) ? _230 : (isnan(_230) ? 0.0 : max(_230, 0.0));
    float _3450 = isnan(0.0) ? _231 : (isnan(_231) ? 0.0 : max(_231, 0.0));
    float _3461 = isnan(0.0) ? _232 : (isnan(_232) ? 0.0 : max(_232, 0.0));
    float _299 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _341 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _351 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _341);
    float _352 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _341);
    float _353 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _341);
    float _357 = inversesqrt(dot(vec3(_351, _352, _353), vec3(_351, _352, _353)));
    float _358 = _351 * _357;
    float _359 = _352 * _357;
    float _360 = _353 * _357;
    float _366 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _367 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _388 = fma(_278, cbSceneParam._m0[5u].z, fma(_277, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _276));
    float _391 = fma(_278, cbSceneParam._m0[6u].z, fma(_277, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _276));
    float _394 = fma(_278, cbSceneParam._m0[7u].z, fma(_277, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _276));
    uint _407 = uint(roundEven(NORMAL.w)) * 13u;
    uint _410 = (_407 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _416 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3439 : (isnan(_3439) ? 1.0 : min(_3439, 1.0)))) * cbInstanceData._m0[_410].x;
    float _417 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3450 : (isnan(_3450) ? 1.0 : min(_3450, 1.0)))) * cbInstanceData._m0[_410].y;
    float _418 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3461 : (isnan(_3461) ? 1.0 : min(_3461, 1.0)))) * cbInstanceData._m0[_410].z;
    float _3472 = isnan(0.0) ? _416 : (isnan(_416) ? 0.0 : max(_416, 0.0));
    float _419 = isnan(1.0) ? _3472 : (isnan(_3472) ? 1.0 : min(_3472, 1.0));
    float _3483 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _420 = isnan(1.0) ? _3483 : (isnan(_3483) ? 1.0 : min(_3483, 1.0));
    float _3494 = isnan(0.0) ? _418 : (isnan(_418) ? 0.0 : max(_418, 0.0));
    float _421 = isnan(1.0) ? _3494 : (isnan(_3494) ? 1.0 : min(_3494, 1.0));
    vec4 _430 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _366, cbSceneParam._m0[86u].y * _367));
    float _433 = _430.x * TEXCOORD_1.w;
    float _434 = dot(vec3(_276, _277, _278), vec3(_358, _359, _360));
    float _437 = _434 * 2.0;
    float _441 = (_437 * _276) - _358;
    float _442 = (_437 * _277) - _359;
    float _443 = (_437 * _278) - _360;
    float _447 = abs(dot(vec3(_358, _359, _360), vec3(_276, _277, _278)));
    float _3505 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0));
    float _449 = sqrt(_280);
    float _462 = exp2((_449 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3505 : (isnan(_3505) ? 1.0 : min(_3505, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_449 * 3.0));
    float _494 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _498 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _502 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _804;
    float _806;
    float _807;
    float _808;
    float _809;
    float _810;
    float _811;
    float _812;
    float _813;
    float _814;
    float _815;
    float _816;
    float _817;
    float _818;
    float _819;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _529 = fma(_502, cbModelParam._m0[26u].z, fma(_498, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _494));
        float _533 = fma(_502, cbModelParam._m0[27u].z, fma(_498, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _494));
        float _537 = fma(_502, cbModelParam._m0[28u].z, fma(_498, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _494));
        float _562 = _494 + _276;
        float _563 = _498 + _277;
        float _564 = _502 + _278;
        float _574 = fma(_564, cbModelParam._m0[26u].z, fma(_563, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _562)) - _529;
        float _575 = fma(_564, cbModelParam._m0[27u].z, fma(_563, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _562)) - _533;
        float _576 = fma(_564, cbModelParam._m0[28u].z, fma(_563, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _562)) - _537;
        float _580 = inversesqrt(dot(vec3(_574, _575, _576), vec3(_574, _575, _576)));
        float _593 = ((_580 * _574) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_529 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _594 = ((_580 * _575) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_533 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _595 = ((_580 * _576) / cbModelParam._m0[34u].z) + ((((((_537 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _598 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_593, _594, _595), 0.0);
        vec4 _605 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_593, _594, _595), 0.0);
        vec4 _612 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_593, _594, _595), 0.0);
        vec4 _619 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_593, _594, _595), 0.0);
        float _632 = exp2((_598.w + (-0.5)) * 20.0) * 2.0;
        float _633 = _632 * (_598.x + (-0.5));
        float _634 = _632 * (_598.y + (-0.5));
        float _635 = _632 * (_598.z + (-0.5));
        float _642 = exp2((_605.w + (-0.5)) * 20.0) * 2.0;
        float _643 = _642 * (_605.x + (-0.5));
        float _644 = _642 * (_605.y + (-0.5));
        float _645 = _642 * (_605.z + (-0.5));
        float _652 = exp2((_612.w + (-0.5)) * 20.0) * 2.0;
        float _653 = _652 * (_612.x + (-0.5));
        float _654 = _652 * (_612.y + (-0.5));
        float _655 = _652 * (_612.z + (-0.5));
        float _662 = exp2((_619.w + (-0.5)) * 20.0) * 2.0;
        float _663 = _662 * (_619.x + (-0.5));
        float _664 = _662 * (_619.y + (-0.5));
        float _665 = _662 * (_619.z + (-0.5));
        float _666 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
        float _667 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
        float _668 = isnan(0.0) ? _665 : (isnan(_665) ? 0.0 : max(_665, 0.0));
        float _669 = _633 * 0.5;
        float _670 = _643 * 0.5;
        float _671 = _653 * 0.5;
        float _672 = dot(vec3(_669, _670, _671), vec3(_669, _670, _671));
        float _677 = (_672 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_672);
        float _686 = (dot(vec3(_276, _277, _278), vec3(_677 * _669, _677 * _670, _677 * _671)) + 1.0) * 0.5;
        float _3531 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
        float _696 = sqrt(((_670 * _670) + (_669 * _669)) + (_671 * _671)) / (_666 + 9.9999997473787516355514526367188e-06);
        float _3542 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
        float _697 = isnan(1.0) ? _3542 : (isnan(_3542) ? 1.0 : min(_3542, 1.0));
        float _698 = _697 * 2.0;
        float _702 = (1.0 - _697) / (_697 + 1.0);
        float _3553 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
        float _703 = isnan(1.0) ? _3553 : (isnan(_3553) ? 1.0 : min(_3553, 1.0));
        float _712 = ((((1.0 - _703) * (_698 + 2.0)) * exp2(log2(isnan(1.0) ? _3531 : (isnan(_3531) ? 1.0 : min(_3531, 1.0))) * (_698 + 1.0))) + _703) * _666;
        float _713 = _634 * 0.5;
        float _714 = _644 * 0.5;
        float _715 = _654 * 0.5;
        float _716 = dot(vec3(_713, _714, _715), vec3(_713, _714, _715));
        float _721 = (_716 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_716);
        float _729 = (dot(vec3(_276, _277, _278), vec3(_721 * _713, _721 * _714, _721 * _715)) + 1.0) * 0.5;
        float _3564 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
        float _738 = sqrt(((_714 * _714) + (_713 * _713)) + (_715 * _715)) / (_667 + 9.9999997473787516355514526367188e-06);
        float _3575 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
        float _739 = isnan(1.0) ? _3575 : (isnan(_3575) ? 1.0 : min(_3575, 1.0));
        float _740 = _739 * 2.0;
        float _744 = (1.0 - _739) / (_739 + 1.0);
        float _3586 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
        float _745 = isnan(1.0) ? _3586 : (isnan(_3586) ? 1.0 : min(_3586, 1.0));
        float _754 = ((((1.0 - _745) * (_740 + 2.0)) * exp2(log2(isnan(1.0) ? _3564 : (isnan(_3564) ? 1.0 : min(_3564, 1.0))) * (_740 + 1.0))) + _745) * _667;
        float _755 = _635 * 0.5;
        float _756 = _645 * 0.5;
        float _757 = _655 * 0.5;
        float _758 = dot(vec3(_755, _756, _757), vec3(_755, _756, _757));
        float _763 = (_758 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_758);
        float _771 = (dot(vec3(_276, _277, _278), vec3(_763 * _755, _763 * _756, _763 * _757)) + 1.0) * 0.5;
        float _3597 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
        float _780 = sqrt(((_756 * _756) + (_755 * _755)) + (_757 * _757)) / (_668 + 9.9999997473787516355514526367188e-06);
        float _3608 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
        float _781 = isnan(1.0) ? _3608 : (isnan(_3608) ? 1.0 : min(_3608, 1.0));
        float _782 = _781 * 2.0;
        float _786 = (1.0 - _781) / (_781 + 1.0);
        float _3619 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
        float _787 = isnan(1.0) ? _3619 : (isnan(_3619) ? 1.0 : min(_3619, 1.0));
        float _796 = ((((1.0 - _787) * (_782 + 2.0)) * exp2(log2(isnan(1.0) ? _3597 : (isnan(_3597) ? 1.0 : min(_3597, 1.0))) * (_782 + 1.0))) + _787) * _668;
        _804 = _635;
        _806 = _634;
        _807 = _633;
        _808 = _645;
        _809 = _644;
        _810 = _643;
        _811 = _655;
        _812 = _654;
        _813 = _653;
        _814 = _668;
        _815 = _667;
        _816 = _666;
        _817 = cbModelParam._m0[36u].z * (isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0)));
        _818 = cbModelParam._m0[36u].z * (isnan(0.0) ? _754 : (isnan(_754) ? 0.0 : max(_754, 0.0)));
        _819 = cbModelParam._m0[36u].z * (isnan(0.0) ? _796 : (isnan(_796) ? 0.0 : max(_796, 0.0)));
    }
    else
    {
        _804 = _805;
        _806 = _805;
        _807 = _805;
        _808 = _805;
        _809 = _805;
        _810 = _805;
        _811 = _805;
        _812 = _805;
        _813 = _805;
        _814 = _805;
        _815 = _805;
        _816 = _805;
        _817 = 0.0;
        _818 = 0.0;
        _819 = 0.0;
    }
    float _1114;
    float _1115;
    float _1116;
    float _1117;
    float _1118;
    float _1119;
    float _1120;
    float _1121;
    float _1122;
    float _1123;
    float _1124;
    float _1125;
    float _1126;
    float _1127;
    float _1128;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _845 = fma(_502, cbModelParam._m0[30u].z, fma(_498, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _494));
        float _849 = fma(_502, cbModelParam._m0[31u].z, fma(_498, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _494));
        float _853 = fma(_502, cbModelParam._m0[32u].z, fma(_498, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _494));
        float _876 = _494 + _276;
        float _877 = _498 + _277;
        float _878 = _502 + _278;
        float _888 = fma(_878, cbModelParam._m0[30u].z, fma(_877, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _876)) - _845;
        float _889 = fma(_878, cbModelParam._m0[31u].z, fma(_877, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _876)) - _849;
        float _890 = fma(_878, cbModelParam._m0[32u].z, fma(_877, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _876)) - _853;
        float _894 = inversesqrt(dot(vec3(_888, _889, _890), vec3(_888, _889, _890)));
        float _907 = ((_894 * _888) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_845 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _908 = ((_894 * _889) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_849 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _909 = ((_894 * _890) / cbModelParam._m0[35u].z) + ((((((_853 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _911 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_907, _908, _909), 0.0);
        vec4 _918 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_907, _908, _909), 0.0);
        vec4 _925 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_907, _908, _909), 0.0);
        vec4 _932 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_907, _908, _909), 0.0);
        float _944 = exp2((_911.w + (-0.5)) * 20.0) * 2.0;
        float _945 = _944 * (_911.x + (-0.5));
        float _946 = _944 * (_911.y + (-0.5));
        float _947 = _944 * (_911.z + (-0.5));
        float _954 = exp2((_918.w + (-0.5)) * 20.0) * 2.0;
        float _955 = _954 * (_918.x + (-0.5));
        float _956 = _954 * (_918.y + (-0.5));
        float _957 = _954 * (_918.z + (-0.5));
        float _964 = exp2((_925.w + (-0.5)) * 20.0) * 2.0;
        float _965 = _964 * (_925.x + (-0.5));
        float _966 = _964 * (_925.y + (-0.5));
        float _967 = _964 * (_925.z + (-0.5));
        float _974 = exp2((_932.w + (-0.5)) * 20.0) * 2.0;
        float _975 = _974 * (_932.x + (-0.5));
        float _976 = _974 * (_932.y + (-0.5));
        float _977 = _974 * (_932.z + (-0.5));
        float _978 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
        float _979 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
        float _980 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
        float _981 = _945 * 0.5;
        float _982 = _955 * 0.5;
        float _983 = _965 * 0.5;
        float _984 = dot(vec3(_981, _982, _983), vec3(_981, _982, _983));
        float _989 = (_984 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_984);
        float _997 = (dot(vec3(_276, _277, _278), vec3(_989 * _981, _989 * _982, _989 * _983)) + 1.0) * 0.5;
        float _3660 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
        float _1006 = sqrt(((_982 * _982) + (_981 * _981)) + (_983 * _983)) / (_978 + 9.9999997473787516355514526367188e-06);
        float _3671 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
        float _1007 = isnan(1.0) ? _3671 : (isnan(_3671) ? 1.0 : min(_3671, 1.0));
        float _1008 = _1007 * 2.0;
        float _1012 = (1.0 - _1007) / (_1007 + 1.0);
        float _3682 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0));
        float _1013 = isnan(1.0) ? _3682 : (isnan(_3682) ? 1.0 : min(_3682, 1.0));
        float _1022 = ((((1.0 - _1013) * (_1008 + 2.0)) * exp2(log2(isnan(1.0) ? _3660 : (isnan(_3660) ? 1.0 : min(_3660, 1.0))) * (_1008 + 1.0))) + _1013) * _978;
        float _1023 = _946 * 0.5;
        float _1024 = _956 * 0.5;
        float _1025 = _966 * 0.5;
        float _1026 = dot(vec3(_1023, _1024, _1025), vec3(_1023, _1024, _1025));
        float _1031 = (_1026 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1026);
        float _1039 = (dot(vec3(_276, _277, _278), vec3(_1031 * _1023, _1031 * _1024, _1031 * _1025)) + 1.0) * 0.5;
        float _3693 = isnan(0.0) ? _1039 : (isnan(_1039) ? 0.0 : max(_1039, 0.0));
        float _1048 = sqrt(((_1024 * _1024) + (_1023 * _1023)) + (_1025 * _1025)) / (_979 + 9.9999997473787516355514526367188e-06);
        float _3704 = isnan(0.0) ? _1048 : (isnan(_1048) ? 0.0 : max(_1048, 0.0));
        float _1049 = isnan(1.0) ? _3704 : (isnan(_3704) ? 1.0 : min(_3704, 1.0));
        float _1050 = _1049 * 2.0;
        float _1054 = (1.0 - _1049) / (_1049 + 1.0);
        float _3715 = isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0));
        float _1055 = isnan(1.0) ? _3715 : (isnan(_3715) ? 1.0 : min(_3715, 1.0));
        float _1064 = ((((1.0 - _1055) * (_1050 + 2.0)) * exp2(log2(isnan(1.0) ? _3693 : (isnan(_3693) ? 1.0 : min(_3693, 1.0))) * (_1050 + 1.0))) + _1055) * _979;
        float _1065 = _947 * 0.5;
        float _1066 = _957 * 0.5;
        float _1067 = _967 * 0.5;
        float _1068 = dot(vec3(_1065, _1066, _1067), vec3(_1065, _1066, _1067));
        float _1073 = (_1068 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1068);
        float _1081 = (dot(vec3(_276, _277, _278), vec3(_1073 * _1065, _1073 * _1066, _1073 * _1067)) + 1.0) * 0.5;
        float _3726 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1090 = sqrt(((_1066 * _1066) + (_1065 * _1065)) + (_1067 * _1067)) / (_980 + 9.9999997473787516355514526367188e-06);
        float _3737 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
        float _1091 = isnan(1.0) ? _3737 : (isnan(_3737) ? 1.0 : min(_3737, 1.0));
        float _1092 = _1091 * 2.0;
        float _1096 = (1.0 - _1091) / (_1091 + 1.0);
        float _3748 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
        float _1097 = isnan(1.0) ? _3748 : (isnan(_3748) ? 1.0 : min(_3748, 1.0));
        float _1106 = ((((1.0 - _1097) * (_1092 + 2.0)) * exp2(log2(isnan(1.0) ? _3726 : (isnan(_3726) ? 1.0 : min(_3726, 1.0))) * (_1092 + 1.0))) + _1097) * _980;
        _1114 = _947;
        _1115 = _946;
        _1116 = _945;
        _1117 = _957;
        _1118 = _956;
        _1119 = _955;
        _1120 = _967;
        _1121 = _966;
        _1122 = _965;
        _1123 = _980;
        _1124 = _979;
        _1125 = _978;
        _1126 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0)));
        _1127 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0)));
        _1128 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0)));
    }
    else
    {
        _1114 = _805;
        _1115 = _805;
        _1116 = _805;
        _1117 = _805;
        _1118 = _805;
        _1119 = _805;
        _1120 = _805;
        _1121 = _805;
        _1122 = _805;
        _1123 = _805;
        _1124 = _805;
        _1125 = _805;
        _1126 = 0.0;
        _1127 = 0.0;
        _1128 = 0.0;
    }
    float _1138 = (cbModelParam._m0[1u].x * (_1126 - _817)) + _817;
    float _1139 = (cbModelParam._m0[1u].x * (_1127 - _818)) + _818;
    float _1140 = (cbModelParam._m0[1u].x * (_1128 - _819)) + _819;
    float _1161 = fma(_1140, cbSceneParam._m0[89u].z, fma(_1139, cbSceneParam._m0[89u].y, _1138 * cbSceneParam._m0[89u].x));
    float _1164 = fma(_1140, cbSceneParam._m0[90u].z, fma(_1139, cbSceneParam._m0[90u].y, _1138 * cbSceneParam._m0[90u].x));
    float _1167 = fma(_1140, cbSceneParam._m0[91u].z, fma(_1139, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1138));
    float _1182 = _441 * 0.5;
    float _1183 = _442 * 0.5;
    float _1184 = _443 * 0.5;
    float _1185 = dot(vec4(_1182, _1183, _1184, 1.0), vec4(_1116, _1119, _1122, _1125));
    float _1188 = dot(vec4(_1182, _1183, _1184, 1.0), vec4(_1115, _1118, _1121, _1124));
    float _1191 = dot(vec4(_1182, _1183, _1184, 1.0), vec4(_1114, _1117, _1120, _1123));
    float _1225;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1198 = dot(vec4(_1182, _1183, _1184, 1.0), vec4(_804, _808, _811, _814));
        float _1202 = dot(vec4(_1182, _1183, _1184, 1.0), vec4(_806, _809, _812, _815));
        float _1206 = dot(vec4(_1182, _1183, _1184, 1.0), vec4(_807, _810, _813, _816));
        float _1213 = dot(vec4(cbModelParam._m0[39u]), vec4(_1182, _1183, _1184, 1.0));
        _1225 = dot(vec3(isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0)), isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0)), isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1213) ? 0.0 : (isnan(0.0) ? _1213 : max(0.0, _1213))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1225 = 1.0;
    }
    float _1236;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1227 = dot(vec4(cbModelParam._m0[40u]), vec4(_1182, _1183, _1184, 1.0));
        _1236 = dot(vec3(isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0)), isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0)), isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1227) ? 0.0 : (isnan(0.0) ? _1227 : max(0.0, _1227))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1236 = 1.0;
    }
    float _1240 = (_1236 * cbModelParam._m0[1u].x) + (_1225 * (1.0 - cbModelParam._m0[1u].x));
    float _1250 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _280);
    float _1251 = isnan(_1250) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1250 : min(cbModelParam._m0[25u].z, _1250));
    float _1333;
    float _1335;
    float _1337;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1300 = fma(_502, cbModelParam._m0[13u].z, fma(_498, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _494)) + cbModelParam._m0[13u].w;
        float _1304 = fma(_502, cbModelParam._m0[14u].z, fma(_498, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _494)) + cbModelParam._m0[14u].w;
        float _1308 = fma(_502, cbModelParam._m0[15u].z, fma(_498, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _494)) + cbModelParam._m0[15u].w;
        float _1311 = fma(_443, cbModelParam._m0[13u].z, fma(_442, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _441));
        float _1314 = fma(_443, cbModelParam._m0[14u].z, fma(_442, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _441));
        float _1317 = fma(_443, cbModelParam._m0[15u].z, fma(_442, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _441));
        float _1345;
        if (_1311 > 0.0)
        {
            _1345 = abs((1.0 - _1300) / _1311);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1311 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1300 + 1.0) / _1311);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1345 = frontier_phi_14_12_ladder;
        }
        float _1519;
        if (_1314 > 0.0)
        {
            _1519 = abs((1.0 - _1304) / _1314);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1314 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1304 + 1.0) / _1314);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1519 = frontier_phi_23_19_ladder;
        }
        float _1815;
        if (_1317 > 0.0)
        {
            _1815 = abs((1.0 - _1308) / _1317);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1317 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1308 + 1.0) / _1317);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _1815 = frontier_phi_35_30_ladder;
        }
        float _1817 = isnan(_1519) ? _1345 : (isnan(_1345) ? _1519 : min(_1345, _1519));
        float _1818 = isnan(_1815) ? _1817 : (isnan(_1817) ? _1815 : min(_1817, _1815));
        float _1822 = (_1818 * _1311) + _1300;
        float _1823 = (_1818 * _1314) + _1304;
        float _1824 = (_1818 * _1317) + _1308;
        float _1825 = _1818 * 9.9999997473787516355514526367188e-05;
        float _1827 = (-1.0) - _1825;
        float _1829 = _1825 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_1824 > _1829) || ((_1824 < _1827) || ((_1823 > _1829) || ((_1823 < _1827) || ((_1822 < _1827) || (_1822 > _1829))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1969 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1824, cbModelParam._m0[9u].z, fma(_1823, cbModelParam._m0[9u].y, _1822 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1824, cbModelParam._m0[10u].z, fma(_1823, cbModelParam._m0[10u].y, _1822 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1824, cbModelParam._m0[11u].z, fma(_1823, cbModelParam._m0[11u].y, _1822 * cbModelParam._m0[11u].x))), _1251);
            frontier_phi_13_35_ladder = _1969.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _1969.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _1969.x * cbModelParam._m0[1u].y;
        }
        _1333 = frontier_phi_13_35_ladder_2;
        _1335 = frontier_phi_13_35_ladder_1;
        _1337 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1321 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_441, _442, _443), _1251);
        _1333 = _1321.x * cbModelParam._m0[1u].y;
        _1335 = _1321.y * cbModelParam._m0[1u].y;
        _1337 = _1321.z * cbModelParam._m0[1u].y;
    }
    float _1341 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _280);
    float _1342 = isnan(_1341) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1341 : min(cbModelParam._m0[25u].w, _1341));
    float _1435;
    float _1437;
    float _1439;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1399 = fma(_502, cbModelParam._m0[21u].z, fma(_498, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _494)) + cbModelParam._m0[21u].w;
        float _1403 = fma(_502, cbModelParam._m0[22u].z, fma(_498, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _494)) + cbModelParam._m0[22u].w;
        float _1407 = fma(_502, cbModelParam._m0[23u].z, fma(_498, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _494)) + cbModelParam._m0[23u].w;
        float _1410 = fma(_443, cbModelParam._m0[21u].z, fma(_442, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _441));
        float _1413 = fma(_443, cbModelParam._m0[22u].z, fma(_442, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _441));
        float _1416 = fma(_443, cbModelParam._m0[23u].z, fma(_442, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _441));
        float _1524;
        if (_1410 > 0.0)
        {
            _1524 = abs((1.0 - _1399) / _1410);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1410 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1399 + 1.0) / _1410);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1524 = frontier_phi_25_21_ladder;
        }
        float _1842;
        if (_1413 > 0.0)
        {
            _1842 = abs((1.0 - _1403) / _1413);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1413 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1403 + 1.0) / _1413);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1842 = frontier_phi_37_32_ladder;
        }
        float _2169;
        if (_1416 > 0.0)
        {
            _2169 = abs((1.0 - _1407) / _1416);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1416 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1407 + 1.0) / _1416);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2169 = frontier_phi_47_44_ladder;
        }
        float _2171 = isnan(_1842) ? _1524 : (isnan(_1524) ? _1842 : min(_1524, _1842));
        float _2172 = isnan(_2169) ? _2171 : (isnan(_2171) ? _2169 : min(_2171, _2169));
        float _2176 = (_2172 * _1410) + _1399;
        float _2177 = (_2172 * _1413) + _1403;
        float _2178 = (_2172 * _1416) + _1407;
        float _2179 = _2172 * 9.9999997473787516355514526367188e-05;
        float _2180 = (-1.0) - _2179;
        float _2182 = _2179 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2178 > _2182) || ((_2178 < _2180) || ((_2177 > _2182) || ((_2177 < _2180) || ((_2176 < _2180) || (_2176 > _2182))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2296 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2178, cbModelParam._m0[17u].z, fma(_2177, cbModelParam._m0[17u].y, _2176 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2178, cbModelParam._m0[18u].z, fma(_2177, cbModelParam._m0[18u].y, _2176 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2178, cbModelParam._m0[19u].z, fma(_2177, cbModelParam._m0[19u].y, _2176 * cbModelParam._m0[19u].x))), _1342);
            frontier_phi_22_47_ladder = _2296.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2296.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2296.x * cbModelParam._m0[1u].z;
        }
        _1435 = frontier_phi_22_47_ladder_2;
        _1437 = frontier_phi_22_47_ladder_1;
        _1439 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1419 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_441, _442, _443), _1342);
        _1435 = _1419.x * cbModelParam._m0[1u].z;
        _1437 = _1419.y * cbModelParam._m0[1u].z;
        _1439 = _1419.z * cbModelParam._m0[1u].z;
    }
    float _1451 = ((((1.0 - _462) * ((_449 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_462 * _449)) * _433;
    float _1452 = _1451 * ((cbModelParam._m0[1u].w * (_1435 - _1333)) + _1333);
    float _1453 = _1451 * ((cbModelParam._m0[1u].w * (_1437 - _1335)) + _1335);
    float _1454 = _1451 * ((cbModelParam._m0[1u].w * (_1439 - _1337)) + _1337);
    float _1457 = fma(_1454, cbSceneParam._m0[89u].z, fma(_1453, cbSceneParam._m0[89u].y, _1452 * cbSceneParam._m0[89u].x));
    float _1460 = fma(_1454, cbSceneParam._m0[90u].z, fma(_1453, cbSceneParam._m0[90u].y, _1452 * cbSceneParam._m0[90u].x));
    float _1463 = fma(_1454, cbSceneParam._m0[91u].z, fma(_1453, cbSceneParam._m0[91u].y, _1452 * cbSceneParam._m0[91u].x));
    float _1498 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1502 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1506 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1510 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1511 = _1498 / _1510;
    float _1512 = _1502 / _1510;
    float _1513 = _1506 / _1510;
    float _1660;
    float _1661;
    float _1662;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1540 = ((uint(_1513 > cbSceneParam._m0[59u].y) + uint(_1513 > cbSceneParam._m0[59u].x)) + uint(_1513 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1541 = _1540 + 43u;
        uint _1549 = _1540 + 44u;
        uint _1557 = _1540 + 45u;
        uint _1565 = _1540 + 46u;
        float _1576 = fma(_1510, cbSceneParam._m0[_1541].w, fma(_1506, cbSceneParam._m0[_1541].z, fma(_1502, cbSceneParam._m0[_1541].y, _1498 * cbSceneParam._m0[_1541].x)));
        float _1580 = fma(_1510, cbSceneParam._m0[_1549].w, fma(_1506, cbSceneParam._m0[_1549].z, fma(_1502, cbSceneParam._m0[_1549].y, _1498 * cbSceneParam._m0[_1549].x)));
        float _1588 = fma(_1510, cbSceneParam._m0[_1565].w, fma(_1506, cbSceneParam._m0[_1565].z, fma(_1502, cbSceneParam._m0[_1565].y, _1498 * cbSceneParam._m0[_1565].x)));
        float _1593 = cbSceneParam._m0[33u].z * _1588;
        float _1595 = cbSceneParam._m0[33u].w * _1588;
        float _1598 = fma(_1510, cbSceneParam._m0[_1557].w, fma(_1506, cbSceneParam._m0[_1557].z, fma(_1502, cbSceneParam._m0[_1557].y, _1498 * cbSceneParam._m0[_1557].x))) / _1588;
        float _1646 = (cbSceneParam._m0[33u].x - sqrt(((_1512 * _1512) + (_1511 * _1511)) + (_1513 * _1513))) * cbSceneParam._m0[33u].y;
        float _3874 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
        float _1653 = (isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1593 + _1576) / _1588, (_1595 + _1580) / _1588), _1598), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1595 + _1576) / _1588, (_1580 - _1593) / _1588), _1598), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1576 - _1593) / _1588, (_1580 - _1595) / _1588), _1598), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1576 - _1595) / _1588, (_1593 + _1580) / _1588), _1598), 0.0)).x), vec4(0.25)));
        _1660 = 1.0 - (_1653 * cbSceneParam._m0[34u].x);
        _1661 = 1.0 - (_1653 * cbSceneParam._m0[34u].y);
        _1662 = 1.0 - (_1653 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1660 = 1.0;
        _1661 = 1.0;
        _1662 = 1.0;
    }
    float _1726;
    float _1728;
    float _1730;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1714 = fma(_1510, cbSceneParam._m0[63u].w, fma(_1506, cbSceneParam._m0[63u].z, fma(_1502, cbSceneParam._m0[63u].y, _1498 * cbSceneParam._m0[63u].x)));
        float _1715 = fma(_1510, cbSceneParam._m0[60u].w, fma(_1506, cbSceneParam._m0[60u].z, fma(_1502, cbSceneParam._m0[60u].y, _1498 * cbSceneParam._m0[60u].x))) / _1714;
        float _1716 = fma(_1510, cbSceneParam._m0[61u].w, fma(_1506, cbSceneParam._m0[61u].z, fma(_1502, cbSceneParam._m0[61u].y, _1498 * cbSceneParam._m0[61u].x))) / _1714;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_1715 >= cbSceneParam._m0[64u].x) && (_1716 >= cbSceneParam._m0[64u].y)) && (_1715 <= cbSceneParam._m0[64u].z)) && (_1716 <= cbSceneParam._m0[64u].w))
        {
            float _1855 = fma(_1510, cbSceneParam._m0[62u].w, fma(_1506, cbSceneParam._m0[62u].z, fma(_1502, cbSceneParam._m0[62u].y, _1498 * cbSceneParam._m0[62u].x))) / _1714;
            float _1859 = isnan(cbSceneParam._m0[41u].w) ? _1855 : (isnan(_1855) ? cbSceneParam._m0[41u].w : max(_1855, cbSceneParam._m0[41u].w));
            float _1902 = (cbSceneParam._m0[33u].x - sqrt(((_1512 * _1512) + (_1511 * _1511)) + (_1513 * _1513))) * cbSceneParam._m0[33u].y;
            float _3890 = isnan(0.0) ? _1902 : (isnan(_1902) ? 0.0 : max(_1902, 0.0));
            float _1909 = (isnan(1.0) ? _3890 : (isnan(_3890) ? 1.0 : min(_3890, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1715, cbSceneParam._m0[33u].w + _1716), _1859), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1715, _1716 - cbSceneParam._m0[33u].z), _1859), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1715 - cbSceneParam._m0[33u].z, _1716 - cbSceneParam._m0[33u].w), _1859), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1715 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1716), _1859), 0.0)).x), vec4(0.25)));
            float _1913 = 1.0 - (_1909 * cbSceneParam._m0[34u].x);
            float _1914 = 1.0 - (_1909 * cbSceneParam._m0[34u].y);
            float _1915 = 1.0 - (_1909 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_1915) ? _1662 : (isnan(_1662) ? _1915 : min(_1662, _1915));
            frontier_phi_34_33_ladder_1 = isnan(_1914) ? _1661 : (isnan(_1661) ? _1914 : min(_1661, _1914));
            frontier_phi_34_33_ladder_2 = isnan(_1913) ? _1660 : (isnan(_1660) ? _1913 : min(_1660, _1913));
        }
        else
        {
            frontier_phi_34_33_ladder = _1662;
            frontier_phi_34_33_ladder_1 = _1661;
            frontier_phi_34_33_ladder_2 = _1660;
        }
        _1726 = frontier_phi_34_33_ladder_2;
        _1728 = frontier_phi_34_33_ladder_1;
        _1730 = frontier_phi_34_33_ladder;
    }
    else
    {
        _1726 = _1660;
        _1728 = _1661;
        _1730 = _1662;
    }
    uvec4 _1735 = floatBitsToUint(cbInstanceData._m0[_407 + 5u]);
    uint _1737 = _1735.x * 14u;
    uint _1738 = _1737 + 13u;
    float _1745 = _433 + (-1.0);
    float _1750 = (cbLight._m0[_1738].x * _1745) + 1.0;
    float _1751 = (cbLight._m0[_1738].y * _1745) + 1.0;
    float _1752 = (cbLight._m0[_1738].z * _1745) + 1.0;
    float _1753 = (cbLight._m0[_1738].w * _1745) + 1.0;
    uint _1754 = _1737 + 5u;
    float _1760 = isnan(1.0) ? _1751 : (isnan(_1751) ? 1.0 : min(_1751, 1.0));
    uint _1764 = _1737 + 4u;
    float _1774 = isnan(1.0) ? _1750 : (isnan(_1750) ? 1.0 : min(_1750, 1.0));
    uint _1778 = _1737 | 1u;
    float _1789 = dot(vec3(cbLight._m0[_1737].xyz), vec3(_276, _277, _278));
    float _1792 = dot(vec3(cbLight._m0[_1778].xyz), vec3(_276, _277, _278));
    float _3926 = isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0));
    float _3937 = isnan(0.0) ? _1792 : (isnan(_1792) ? 0.0 : max(_1792, 0.0));
    float _1797 = (isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0))) * 0.3183098733425140380859375;
    float _1799 = (isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0))) * 0.3183098733425140380859375;
    float _1806 = ((cbLight._m0[_1754].x * _1760) * _1799) + (((cbLight._m0[_1764].x * _1726) * _1774) * _1797);
    float _1807 = ((_1760 * cbLight._m0[_1754].y) * _1799) + (((cbLight._m0[_1764].y * _1728) * _1774) * _1797);
    float _1808 = ((_1760 * cbLight._m0[_1754].z) * _1799) + (((cbLight._m0[_1764].z * _1730) * _1774) * _1797);
    uvec4 _1812 = floatBitsToUint(cbLight._m0[_1737 + 12u]);
    bool _1814 = _1812.x == 0u;
    float _1916;
    float _1918;
    float _1920;
    if (_1814)
    {
        _1916 = _1806;
        _1918 = _1807;
        _1920 = _1808;
    }
    else
    {
        uint _1924 = _1737 + 6u;
        float _1940 = (dot(vec3(cbLight._m0[_1737 + 2u].xyz), vec3(_276, _277, _278)) * 0.5) + 0.5;
        float _1941 = _1940 * _1940;
        float _3948 = isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0));
        float _1942 = isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0));
        float _1943 = isnan(1.0) ? _1752 : (isnan(_1752) ? 1.0 : min(_1752, 1.0));
        _1916 = (((cbLight._m0[_1924].x * 0.3183098733425140380859375) * _1942) * _1943) + _1806;
        _1918 = (((cbLight._m0[_1924].y * 0.3183098733425140380859375) * _1942) * _1943) + _1807;
        _1920 = (((cbLight._m0[_1924].z * 0.3183098733425140380859375) * _1942) * _1943) + _1808;
    }
    bool _1923 = _1812.y == 0u;
    float _1978;
    float _1980;
    float _1982;
    if (_1923)
    {
        _1978 = _1916;
        _1980 = _1918;
        _1982 = _1920;
    }
    else
    {
        uint _2140 = _1737 + 7u;
        float _2156 = (dot(vec3(cbLight._m0[_1737 + 3u].xyz), vec3(_276, _277, _278)) * 0.5) + 0.5;
        float _2157 = _2156 * _2156;
        float _3964 = isnan(0.0) ? _2157 : (isnan(_2157) ? 0.0 : max(_2157, 0.0));
        float _2158 = isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0));
        float _2159 = isnan(1.0) ? _1753 : (isnan(_1753) ? 1.0 : min(_1753, 1.0));
        _1978 = (((cbLight._m0[_2140].x * 0.3183098733425140380859375) * _2158) * _2159) + _1916;
        _1980 = (((cbLight._m0[_2140].y * 0.3183098733425140380859375) * _2158) * _2159) + _1918;
        _1982 = (((cbLight._m0[_2140].z * 0.3183098733425140380859375) * _2158) * _2159) + _1920;
    }
    uint _1985 = _1737 + 8u;
    float _1998 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1737].w)) * _280) * 0.949999988079071044921875);
    float _1999 = _1998 * _1998;
    float _2000 = cbLight._m0[_1737].x + _358;
    float _2001 = cbLight._m0[_1737].y + _359;
    float _2002 = cbLight._m0[_1737].z + _360;
    float _2006 = inversesqrt(dot(vec3(_2000, _2001, _2002), vec3(_2000, _2001, _2002)));
    float _2007 = _2006 * _2000;
    float _2008 = _2006 * _2001;
    float _2009 = _2006 * _2002;
    float _2010 = dot(vec3(_276, _277, _278), vec3(cbLight._m0[_1737].xyz));
    float _3980 = isnan(0.0) ? _2010 : (isnan(_2010) ? 0.0 : max(_2010, 0.0));
    float _2013 = isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0));
    float _3991 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _2014 = isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0));
    float _2015 = dot(vec3(_276, _277, _278), vec3(_2007, _2008, _2009));
    float _4002 = isnan(0.0) ? _2015 : (isnan(_2015) ? 0.0 : max(_2015, 0.0));
    float _2018 = isnan(1.0) ? _4002 : (isnan(_4002) ? 1.0 : min(_4002, 1.0));
    float _2019 = dot(vec3(cbLight._m0[_1737].xyz), vec3(_2007, _2008, _2009));
    float _4013 = isnan(0.0) ? _2019 : (isnan(_2019) ? 0.0 : max(_2019, 0.0));
    float _2023 = _1999 * _1999;
    float _2027 = ((_2018 * _2018) * (_2023 + (-1.0))) + 1.0;
    float _2038 = (exp2(log2(1.0 - (isnan(1.0) ? _4013 : (isnan(_4013) ? 1.0 : min(_4013, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2039 = 1.0 - _1999;
    float _2050 = (0.5 / (((_2014 * ((_2013 * _2039) + _1999)) + 9.9999999392252902907785028219223e-09) + (((_2014 * _2039) + _1999) * _2013))) * _2013;
    float _4024 = isnan(0.0) ? _2050 : (isnan(_2050) ? 0.0 : max(_2050, 0.0));
    float _2052 = (isnan(1.0) ? _4024 : (isnan(_4024) ? 1.0 : min(_4024, 1.0))) * (_2023 / ((_2027 * _2027) * 3.141590118408203125));
    uint _2066 = _1737 + 9u;
    float _2077 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1778].w)) * _280) * 0.949999988079071044921875);
    float _2078 = _2077 * _2077;
    float _2079 = cbLight._m0[_1778].x + _358;
    float _2080 = cbLight._m0[_1778].y + _359;
    float _2081 = cbLight._m0[_1778].z + _360;
    float _2085 = inversesqrt(dot(vec3(_2079, _2080, _2081), vec3(_2079, _2080, _2081)));
    float _2086 = _2085 * _2079;
    float _2087 = _2085 * _2080;
    float _2088 = _2085 * _2081;
    float _2089 = dot(vec3(_276, _277, _278), vec3(cbLight._m0[_1778].xyz));
    float _4035 = isnan(0.0) ? _2089 : (isnan(_2089) ? 0.0 : max(_2089, 0.0));
    float _2092 = isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0));
    float _2093 = dot(vec3(_276, _277, _278), vec3(_2086, _2087, _2088));
    float _4046 = isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0));
    float _2096 = isnan(1.0) ? _4046 : (isnan(_4046) ? 1.0 : min(_4046, 1.0));
    float _2097 = dot(vec3(cbLight._m0[_1778].xyz), vec3(_2086, _2087, _2088));
    float _4057 = isnan(0.0) ? _2097 : (isnan(_2097) ? 0.0 : max(_2097, 0.0));
    float _2101 = _2078 * _2078;
    float _2105 = ((_2096 * _2096) * (_2101 + (-1.0))) + 1.0;
    float _2114 = (exp2(log2(1.0 - (isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2115 = 1.0 - _2078;
    float _2125 = (0.5 / (((_2014 * ((_2092 * _2115) + _2078)) + 9.9999999392252902907785028219223e-09) + (((_2014 * _2115) + _2078) * _2092))) * _2092;
    float _4068 = isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0));
    float _2127 = (isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0))) * (_2101 / ((_2105 * _2105) * 3.141590118408203125));
    float _2137 = (((_2114 * cbLight._m0[_2066].x) * _2127) * _1760) + ((((cbLight._m0[_1985].x * _1726) * _2038) * _2052) * _1774);
    float _2138 = (((_2114 * cbLight._m0[_2066].y) * _2127) * _1760) + ((((cbLight._m0[_1985].y * _1728) * _2038) * _2052) * _1774);
    float _2139 = (((_2114 * cbLight._m0[_2066].z) * _2127) * _1760) + ((((cbLight._m0[_1985].z * _1730) * _2038) * _2052) * _1774);
    float _2195;
    float _2197;
    float _2199;
    if (_1814)
    {
        _2195 = _2137;
        _2197 = _2138;
        _2199 = _2139;
    }
    else
    {
        uint _2201 = _1737 + 2u;
        uint _2205 = _1737 + 10u;
        float _2219 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2201].w)) * _280) * 0.949999988079071044921875);
        float _2220 = _2219 * _2219;
        float _2221 = cbLight._m0[_2201].x + _358;
        float _2222 = cbLight._m0[_2201].y + _359;
        float _2223 = cbLight._m0[_2201].z + _360;
        float _2227 = inversesqrt(dot(vec3(_2221, _2222, _2223), vec3(_2221, _2222, _2223)));
        float _2228 = _2227 * _2221;
        float _2229 = _2227 * _2222;
        float _2230 = _2227 * _2223;
        float _2231 = dot(vec3(_276, _277, _278), vec3(cbLight._m0[_2201].xyz));
        float _4079 = isnan(0.0) ? _2231 : (isnan(_2231) ? 0.0 : max(_2231, 0.0));
        float _2234 = isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0));
        float _2235 = dot(vec3(_276, _277, _278), vec3(_2228, _2229, _2230));
        float _4090 = isnan(0.0) ? _2235 : (isnan(_2235) ? 0.0 : max(_2235, 0.0));
        float _2238 = isnan(1.0) ? _4090 : (isnan(_4090) ? 1.0 : min(_4090, 1.0));
        float _2239 = dot(vec3(cbLight._m0[_2201].xyz), vec3(_2228, _2229, _2230));
        float _4101 = isnan(0.0) ? _2239 : (isnan(_2239) ? 0.0 : max(_2239, 0.0));
        float _2243 = _2220 * _2220;
        float _2247 = ((_2238 * _2238) * (_2243 + (-1.0))) + 1.0;
        float _2256 = (exp2(log2(1.0 - (isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2257 = 1.0 - _2220;
        float _2267 = (0.5 / (((_2014 * ((_2234 * _2257) + _2220)) + 9.9999999392252902907785028219223e-09) + (((_2014 * _2257) + _2220) * _2234))) * _2234;
        float _4112 = isnan(0.0) ? _2267 : (isnan(_2267) ? 0.0 : max(_2267, 0.0));
        float _2269 = (isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0))) * (_2243 / ((_2247 * _2247) * 3.141590118408203125));
        float _2270 = isnan(1.0) ? _1752 : (isnan(_1752) ? 1.0 : min(_1752, 1.0));
        _2195 = (((_2256 * cbLight._m0[_2205].x) * _2269) * _2270) + _2137;
        _2197 = (((_2256 * cbLight._m0[_2205].y) * _2269) * _2270) + _2138;
        _2199 = (((_2256 * cbLight._m0[_2205].z) * _2269) * _2270) + _2139;
    }
    float _2301;
    float _2303;
    float _2305;
    if (_1923)
    {
        _2301 = _2195;
        _2303 = _2197;
        _2305 = _2199;
    }
    else
    {
        uint _2312 = _1737 + 3u;
        uint _2316 = _1737 + 11u;
        float _2330 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2312].w)) * _280) * 0.949999988079071044921875);
        float _2331 = _2330 * _2330;
        float _2332 = cbLight._m0[_2312].x + _358;
        float _2333 = cbLight._m0[_2312].y + _359;
        float _2334 = cbLight._m0[_2312].z + _360;
        float _2338 = inversesqrt(dot(vec3(_2332, _2333, _2334), vec3(_2332, _2333, _2334)));
        float _2339 = _2338 * _2332;
        float _2340 = _2338 * _2333;
        float _2341 = _2338 * _2334;
        float _2342 = dot(vec3(_276, _277, _278), vec3(cbLight._m0[_2312].xyz));
        float _4128 = isnan(0.0) ? _2342 : (isnan(_2342) ? 0.0 : max(_2342, 0.0));
        float _2345 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
        float _2346 = dot(vec3(_276, _277, _278), vec3(_2339, _2340, _2341));
        float _4139 = isnan(0.0) ? _2346 : (isnan(_2346) ? 0.0 : max(_2346, 0.0));
        float _2349 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
        float _2350 = dot(vec3(cbLight._m0[_2312].xyz), vec3(_2339, _2340, _2341));
        float _4150 = isnan(0.0) ? _2350 : (isnan(_2350) ? 0.0 : max(_2350, 0.0));
        float _2354 = _2331 * _2331;
        float _2358 = ((_2349 * _2349) * (_2354 + (-1.0))) + 1.0;
        float _2367 = (exp2(log2(1.0 - (isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2368 = 1.0 - _2331;
        float _2378 = (0.5 / (((_2014 * ((_2345 * _2368) + _2331)) + 9.9999999392252902907785028219223e-09) + (((_2014 * _2368) + _2331) * _2345))) * _2345;
        float _4161 = isnan(0.0) ? _2378 : (isnan(_2378) ? 0.0 : max(_2378, 0.0));
        float _2380 = (isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0))) * (_2354 / ((_2358 * _2358) * 3.141590118408203125));
        float _2381 = isnan(1.0) ? _1753 : (isnan(_1753) ? 1.0 : min(_1753, 1.0));
        _2301 = (((_2367 * cbLight._m0[_2316].x) * _2380) * _2381) + _2195;
        _2303 = (((_2367 * cbLight._m0[_2316].y) * _2380) * _2381) + _2197;
        _2305 = (((_2367 * cbLight._m0[_2316].z) * _2380) * _2381) + _2199;
    }
    float _2447;
    float _2449;
    float _2451;
    float _2453;
    float _2455;
    float _2457;
    if (_1735.y == 0u)
    {
        uvec4 _2402 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2403 = _2402.x;
        uint _2414 = uint((float(_2402.y) * floor(float(uint(cbSceneParam._m0[85u].y * _367) / _2403))) + floor(float(uint(cbSceneParam._m0[85u].x * _366) / _2403)));
        float _2424 = (log2(_1513 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2425 = isnan(0.0) ? _2424 : (isnan(_2424) ? 0.0 : max(_2424, 0.0));
        uint _2428 = uint(isnan(14.0) ? _2425 : (isnan(_2425) ? 14.0 : min(_2425, 14.0)));
        uvec4 _2433 = texelFetch(g_lightClusterGridBuffer, int(((_2428 << 2u) + (_2414 << 6u)) >> 2u));
        uint _2434 = _2433.x;
        uint _2435 = _2402.z;
        float _2516;
        float _2518;
        float _2520;
        float _2522;
        float _2524;
        float _2526;
        if (((((1u << ((_2435 >> 4u) & 15u)) + 4294967295u) & _2434) == 0u) || ((_2435 & 240u) == 0u))
        {
            _2516 = 0.0;
            _2518 = 0.0;
            _2520 = 0.0;
            _2522 = 0.0;
            _2524 = 0.0;
            _2526 = 0.0;
        }
        else
        {
            float _2517;
            float _2519;
            float _2521;
            float _2523;
            float _2525;
            float _2527;
            float _2661 = 0.0;
            float _2662 = 0.0;
            float _2663 = 0.0;
            float _2664 = 0.0;
            float _2665 = 0.0;
            float _2666 = 0.0;
            uint _2667 = 0u;
            uint _2676;
            bool _2677;
            for (;;)
            {
                _2676 = texelFetch(g_lightClassification, int((((_2428 << 5u) + (_2414 << 9u)) + (_2667 << 2u)) >> 2u)).x;
                _2677 = _2676 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2677)
                {
                    frontier_phi_66_pred = _2666;
                    frontier_phi_66_pred_1 = _2665;
                    frontier_phi_66_pred_2 = _2664;
                    frontier_phi_66_pred_3 = _2663;
                    frontier_phi_66_pred_4 = _2662;
                    frontier_phi_66_pred_5 = _2661;
                }
                else
                {
                    float _2785;
                    float _2786;
                    float _2787;
                    float _2788;
                    float _2789;
                    float _2790;
                    uint _2791;
                    _2785 = _2661;
                    _2786 = _2662;
                    _2787 = _2663;
                    _2788 = _2664;
                    _2789 = _2665;
                    _2790 = _2666;
                    _2791 = _2676;
                    float _2717;
                    float _2718;
                    float _2719;
                    float _2720;
                    float _2721;
                    float _2722;
                    for (;;)
                    {
                        uint _2795 = uint(findLSB(_2791)) + (_2667 << 5u);
                        uint _2792 = (_2791 + 4294967295u) & _2791;
                        uint _2797 = _2795 * 48u;
                        vec4 _2811 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2797)).x, texelFetch(g_PointLightRenderingBuffer, int(_2797 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2797 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2797 + 3u)).x));
                        uint _2817 = (_2795 * 48u) + 4u;
                        vec4 _2830 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2817)).x, texelFetch(g_PointLightRenderingBuffer, int(_2817 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2817 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2817 + 3u)).x));
                        uint _2836 = (_2795 * 48u) + 8u;
                        vec3 _2847 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2836)).x, texelFetch(g_PointLightRenderingBuffer, int(_2836 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2836 + 2u)).x));
                        float _2851 = _2811.x - _1511;
                        float _2852 = _2811.y - _1512;
                        float _2853 = _2811.z - _1513;
                        float _2854 = dot(vec3(_2851, _2852, _2853), vec3(_2851, _2852, _2853));
                        float _2857 = inversesqrt(_2854);
                        float _2858 = _2857 * _2851;
                        float _2859 = _2857 * _2852;
                        float _2860 = _2857 * _2853;
                        float _2861 = dot(vec3(_388, _391, _394), vec3(_2858, _2859, _2860));
                        float _2866 = 1.0 - (_2854 * _2811.w);
                        float _4187 = isnan(0.0) ? _2866 : (isnan(_2866) ? 0.0 : max(_2866, 0.0));
                        float _2867 = isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0));
                        float _2868 = sqrt(_2854) * _2830.w;
                        float _2871 = 1.39999997615814208984375 / (_2868 + 1.39999997615814208984375);
                        float _2872 = _2871 * _2871;
                        float _2875 = ((1.0 - _2872) * _2861) + _2872;
                        float _2878 = _2868 * _2868;
                        float _2882 = ((isnan(0.0) ? _2875 : (isnan(_2875) ? 0.0 : max(_2875, 0.0))) * _2867) / ((_2878 * 0.699999988079071044921875) + 1.0);
                        float _2886 = (-0.0) - _1511;
                        float _2887 = (-0.0) - _1512;
                        float _2888 = (-0.0) - _1513;
                        float _2892 = inversesqrt(dot(vec3(_2886, _2887, _2888), vec3(_2886, _2887, _2888)));
                        float _2893 = _2892 * _2886;
                        float _2894 = _2892 * _2887;
                        float _2895 = _2892 * _2888;
                        float _2902 = exp2(log2(1.0 / ((_2878 * 3.5) + 5.0)) * 0.25);
                        float _2903 = 1.0 - _449;
                        float _2910 = sqrt(1.0 - ((1.0 - (_2903 * _2903)) * (1.0 - (_2902 * _2902))));
                        float _2911 = _2910 * _2910;
                        float _2912 = _2911 * _2911;
                        float _2913 = _2893 + _2858;
                        float _2914 = _2894 + _2859;
                        float _2915 = _2895 + _2860;
                        float _2919 = inversesqrt(dot(vec3(_2913, _2914, _2915), vec3(_2913, _2914, _2915)));
                        float _2923 = dot(vec3(_388, _391, _394), vec3(_2893, _2894, _2895));
                        float _4203 = isnan(0.0) ? _2923 : (isnan(_2923) ? 0.0 : max(_2923, 0.0));
                        float _2926 = isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0));
                        float _2927 = dot(vec3(_388, _391, _394), vec3(_2919 * _2913, _2919 * _2914, _2919 * _2915));
                        float _4214 = isnan(0.0) ? _2927 : (isnan(_2927) ? 0.0 : max(_2927, 0.0));
                        float _2930 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
                        float _2934 = ((_2930 * _2930) * (_2912 + (-1.0))) + 1.0;
                        float _2935 = _2871 * _2911;
                        float _2936 = _2935 * _2935;
                        float _2939 = ((1.0 - _2936) * _2861) + _2936;
                        float _4225 = isnan(0.0) ? _2939 : (isnan(_2939) ? 0.0 : max(_2939, 0.0));
                        float _2940 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
                        float _2941 = 1.0 - _2911;
                        float _2951 = (0.5 / (((_2940 * ((_2926 * _2941) + _2911)) + 9.9999999392252902907785028219223e-09) + (((_2940 * _2941) + _2911) * _2926))) * _2940;
                        float _4236 = isnan(0.0) ? _2951 : (isnan(_2951) ? 0.0 : max(_2951, 0.0));
                        float _2962 = (((_2912 * 3.1415927410125732421875) * (isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0)))) / ((_2934 * _2934) * ((_2878 * 2.1991131305694580078125) + 3.141590118408203125))) * _2867;
                        _2720 = (_2882 * _2830.x) + _2788;
                        _2721 = (_2882 * _2830.y) + _2789;
                        _2722 = (_2882 * _2830.z) + _2790;
                        _2717 = (_2962 * _2847.x) + _2785;
                        _2718 = (_2962 * _2847.y) + _2786;
                        _2719 = (_2962 * _2847.z) + _2787;
                        if (_2792 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2785 = _2717;
                            _2786 = _2718;
                            _2787 = _2719;
                            _2788 = _2720;
                            _2789 = _2721;
                            _2790 = _2722;
                            _2791 = _2792;
                        }
                    }
                    frontier_phi_66_pred = _2722;
                    frontier_phi_66_pred_1 = _2721;
                    frontier_phi_66_pred_2 = _2720;
                    frontier_phi_66_pred_3 = _2719;
                    frontier_phi_66_pred_4 = _2718;
                    frontier_phi_66_pred_5 = _2717;
                }
                _2527 = frontier_phi_66_pred;
                _2525 = frontier_phi_66_pred_1;
                _2523 = frontier_phi_66_pred_2;
                _2521 = frontier_phi_66_pred_3;
                _2519 = frontier_phi_66_pred_4;
                _2517 = frontier_phi_66_pred_5;
                uint _2668 = _2667 + 1u;
                if (_2668 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2661 = _2517;
                    _2662 = _2519;
                    _2663 = _2521;
                    _2664 = _2523;
                    _2665 = _2525;
                    _2666 = _2527;
                    _2667 = _2668;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2516 = _2517;
            _2518 = _2519;
            _2520 = _2521;
            _2522 = _2523;
            _2524 = _2525;
            _2526 = _2527;
        }
        uvec4 _2530 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2531 = _2530.z;
        uint _2533 = (_2531 >> 8u) & 15u;
        float _2629;
        float _2631;
        float _2633;
        float _2635;
        float _2637;
        float _2639;
        if (((4294967295u << _2533) & _2434) == 0u)
        {
            _2629 = _2516;
            _2631 = _2518;
            _2633 = _2520;
            _2635 = _2522;
            _2637 = _2524;
            _2639 = _2526;
        }
        else
        {
            float _2654 = inversesqrt(dot(vec3(_1511, _1512, _1513), vec3(_1511, _1512, _1513)));
            float _2655 = _2654 * _1511;
            float _2656 = _2654 * _1512;
            float _2657 = _2654 * _1513;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2533 < ((_2531 >> 12u) & 15u))
            {
                float _2630;
                float _2632;
                float _2634;
                float _2636;
                float _2638;
                float _2640;
                float _2768 = _2516;
                float _2769 = _2518;
                float _2770 = _2520;
                float _2771 = _2522;
                float _2772 = _2524;
                float _2773 = _2526;
                uint _2774 = _2533;
                uint _2783;
                bool _2784;
                for (;;)
                {
                    _2783 = texelFetch(g_lightClassification, int((((_2428 << 5u) + (_2414 << 9u)) + (_2774 << 2u)) >> 2u)).x;
                    _2784 = _2783 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_2784)
                    {
                        frontier_phi_72_pred = _2773;
                        frontier_phi_72_pred_1 = _2772;
                        frontier_phi_72_pred_2 = _2771;
                        frontier_phi_72_pred_3 = _2770;
                        frontier_phi_72_pred_4 = _2769;
                        frontier_phi_72_pred_5 = _2768;
                    }
                    else
                    {
                        float _2967;
                        float _2968;
                        float _2969;
                        float _2970;
                        float _2971;
                        float _2972;
                        float _3263;
                        float _3264;
                        float _3265;
                        float _3266;
                        float _3267;
                        float _3268;
                        float _2980 = _2768;
                        float _2981 = _2769;
                        float _2982 = _2770;
                        float _2983 = _2771;
                        float _2984 = _2772;
                        float _2985 = _2773;
                        uint _2986 = _2783;
                        uint _2987;
                        vec4 _3012;
                        float _3013;
                        vec4 _3028;
                        vec3 _3040;
                        vec4 _3056;
                        vec4 _3072;
                        float _3119;
                        bool _3120;
                        for (;;)
                        {
                            uint _2997 = ((_2774 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2986));
                            _2987 = (_2986 + 4294967295u) & _2986;
                            uint _2999 = _2997 * 40u;
                            _3012 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2999)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2999 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2999 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2999 + 3u)).x));
                            _3013 = _3012.w;
                            uint _3015 = (_2997 * 40u) + 4u;
                            _3028 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3015)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3015 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3015 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3015 + 3u)).x));
                            uint _3030 = (_2997 * 40u) + 8u;
                            _3040 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3030)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3030 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3030 + 2u)).x));
                            uint _3043 = (_2997 * 40u) + 16u;
                            _3056 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3043)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3043 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3043 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3043 + 3u)).x));
                            uint _3059 = (_2997 * 40u) + 20u;
                            _3072 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3059)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3059 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3059 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3059 + 3u)).x));
                            uint _3075 = (_2997 * 40u) + 24u;
                            vec4 _3088 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3075)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3075 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3075 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3075 + 3u)).x));
                            uint _3094 = (_2997 * 40u) + 28u;
                            vec4 _3107 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3094)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3094 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3094 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3094 + 3u)).x));
                            _3119 = fma(_1513, _3107.z, fma(_1512, _3107.y, _3107.x * _1511)) + _3107.w;
                            _3120 = !((fma(_1513, _3088.z, fma(_1512, _3088.y, _3088.x * _1511)) + _3088.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3120)
                            {
                                float _3147 = _3012.x - _1511;
                                float _3148 = _3012.y - _1512;
                                float _3149 = _3012.z - _1513;
                                float _3150 = dot(vec3(_3147, _3148, _3149), vec3(_3147, _3148, _3149));
                                float _3153 = inversesqrt(_3150);
                                float _3154 = _3153 * _3147;
                                float _3155 = _3153 * _3148;
                                float _3156 = _3153 * _3149;
                                float _3160 = 1.0 - (_3150 / (_3013 * _3013));
                                float _4247 = isnan(0.0) ? _3160 : (isnan(_3160) ? 0.0 : max(_3160, 0.0));
                                float _3161 = isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0));
                                float _3165 = sqrt(_3150) * _3028.w;
                                float _3167 = 1.39999997615814208984375 / (_3165 + 1.39999997615814208984375);
                                float _3168 = _3167 * _3167;
                                float _3171 = ((1.0 - _3168) * dot(vec3(_3154, _3155, _3156), vec3(_388, _391, _394))) + _3168;
                                float _3174 = _3165 * _3165;
                                float _3178 = (fma(_1513, _3056.z, fma(_1512, _3056.y, _3056.x * _1511)) + _3056.w) / _3119;
                                float _3179 = (fma(_1513, _3072.z, fma(_1512, _3072.y, _3072.x * _1511)) + _3072.w) / _3119;
                                float _3183 = 1.0 - dot(vec2(_3178, _3179), vec2(_3178, _3179));
                                float _4263 = isnan(0.0) ? _3183 : (isnan(_3183) ? 0.0 : max(_3183, 0.0));
                                float _3184 = isnan(1.0) ? _4263 : (isnan(_4263) ? 1.0 : min(_4263, 1.0));
                                float _3185 = _3184 * (((isnan(0.0) ? _3171 : (isnan(_3171) ? 0.0 : max(_3171, 0.0))) * _3161) / ((_3174 * 0.699999988079071044921875) + 1.0));
                                float _3197 = exp2(log2(1.0 / ((_3174 * 3.5) + 5.0)) * 0.25);
                                float _3198 = 1.0 - _449;
                                float _3205 = sqrt(1.0 - ((1.0 - (_3198 * _3198)) * (1.0 - (_3197 * _3197))));
                                float _3206 = _3205 * _3205;
                                float _3207 = _3206 * _3206;
                                float _3208 = _3154 - _2655;
                                float _3209 = _3155 - _2656;
                                float _3210 = _3156 - _2657;
                                float _3214 = inversesqrt(dot(vec3(_3208, _3209, _3210), vec3(_3208, _3209, _3210)));
                                float _3218 = dot(vec3(_388, _391, _394), vec3((-0.0) - _2655, (-0.0) - _2656, (-0.0) - _2657));
                                float _4274 = isnan(0.0) ? _3218 : (isnan(_3218) ? 0.0 : max(_3218, 0.0));
                                float _3221 = isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0));
                                float _3222 = dot(vec3(_388, _391, _394), vec3(_3214 * _3208, _3214 * _3209, _3214 * _3210));
                                float _4285 = isnan(0.0) ? _3222 : (isnan(_3222) ? 0.0 : max(_3222, 0.0));
                                float _3225 = isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0));
                                float _3229 = ((_3225 * _3225) * (_3207 + (-1.0))) + 1.0;
                                float _3230 = _3167 * _3206;
                                float _3231 = _3230 * _3230;
                                float _3237 = ((1.0 - _3231) * dot(vec3(_388, _391, _394), vec3(_3154, _3155, _3156))) + _3231;
                                float _4296 = isnan(0.0) ? _3237 : (isnan(_3237) ? 0.0 : max(_3237, 0.0));
                                float _3238 = isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0));
                                float _3239 = 1.0 - _3206;
                                float _3249 = (0.5 / (((_3238 * ((_3221 * _3239) + _3206)) + 9.9999999392252902907785028219223e-09) + (((_3238 * _3239) + _3206) * _3221))) * _3238;
                                float _4307 = isnan(0.0) ? _3249 : (isnan(_3249) ? 0.0 : max(_3249, 0.0));
                                float _3259 = (_3184 * _3161) * (((_3207 * 3.1415927410125732421875) * (isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0)))) / ((_3229 * _3229) * ((_3174 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3185 * _3028.y;
                                frontier_phi_78_pred_1 = _3185 * _3028.x;
                                frontier_phi_78_pred_2 = _3259 * _3040.z;
                                frontier_phi_78_pred_3 = _3259 * _3040.y;
                                frontier_phi_78_pred_4 = _3259 * _3040.x;
                                frontier_phi_78_pred_5 = _3185 * _3028.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3267 = frontier_phi_78_pred;
                            _3266 = frontier_phi_78_pred_1;
                            _3265 = frontier_phi_78_pred_2;
                            _3264 = frontier_phi_78_pred_3;
                            _3263 = frontier_phi_78_pred_4;
                            _3268 = frontier_phi_78_pred_5;
                            _2970 = _3266 + _2983;
                            _2971 = _3267 + _2984;
                            _2972 = _3268 + _2985;
                            _2967 = _3263 + _2980;
                            _2968 = _3264 + _2981;
                            _2969 = _3265 + _2982;
                            if (_2987 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2980 = _2967;
                                _2981 = _2968;
                                _2982 = _2969;
                                _2983 = _2970;
                                _2984 = _2971;
                                _2985 = _2972;
                                _2986 = _2987;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _2972;
                        frontier_phi_72_pred_1 = _2971;
                        frontier_phi_72_pred_2 = _2970;
                        frontier_phi_72_pred_3 = _2969;
                        frontier_phi_72_pred_4 = _2968;
                        frontier_phi_72_pred_5 = _2967;
                    }
                    _2640 = frontier_phi_72_pred;
                    _2638 = frontier_phi_72_pred_1;
                    _2636 = frontier_phi_72_pred_2;
                    _2634 = frontier_phi_72_pred_3;
                    _2632 = frontier_phi_72_pred_4;
                    _2630 = frontier_phi_72_pred_5;
                    uint _2775 = _2774 + 1u;
                    if (_2775 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2768 = _2630;
                        _2769 = _2632;
                        _2770 = _2634;
                        _2771 = _2636;
                        _2772 = _2638;
                        _2773 = _2640;
                        _2774 = _2775;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _2640;
                frontier_phi_60_61_ladder_1 = _2638;
                frontier_phi_60_61_ladder_2 = _2634;
                frontier_phi_60_61_ladder_3 = _2632;
                frontier_phi_60_61_ladder_4 = _2630;
                frontier_phi_60_61_ladder_5 = _2636;
            }
            else
            {
                frontier_phi_60_61_ladder = _2526;
                frontier_phi_60_61_ladder_1 = _2524;
                frontier_phi_60_61_ladder_2 = _2520;
                frontier_phi_60_61_ladder_3 = _2518;
                frontier_phi_60_61_ladder_4 = _2516;
                frontier_phi_60_61_ladder_5 = _2522;
            }
            _2629 = frontier_phi_60_61_ladder_4;
            _2631 = frontier_phi_60_61_ladder_3;
            _2633 = frontier_phi_60_61_ladder_2;
            _2635 = frontier_phi_60_61_ladder_5;
            _2637 = frontier_phi_60_61_ladder_1;
            _2639 = frontier_phi_60_61_ladder;
        }
        float _2644 = isnan(1.0) ? _433 : (isnan(_433) ? 1.0 : min(_433, 1.0));
        _2447 = (_2644 * _2635) + _1978;
        _2449 = (_2644 * _2637) + _1980;
        _2451 = (_2644 * _2639) + _1982;
        _2453 = ((_2629 * 0.039999999105930328369140625) * _2644) + _2301;
        _2455 = ((_2631 * 0.039999999105930328369140625) * _2644) + _2303;
        _2457 = ((_2633 * 0.039999999105930328369140625) * _2644) + _2305;
    }
    else
    {
        _2447 = _1978;
        _2449 = _1980;
        _2451 = _1982;
        _2453 = _2301;
        _2455 = _2303;
        _2457 = _2305;
    }
    float _4323 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
    float _4334 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
    float _4345 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _4356 = isnan(0.0) ? _279 : (isnan(_279) ? 0.0 : max(_279, 0.0));
    float _2482 = cbInstanceData._m0[_407 + 6u].w * (isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0)));
    float _2487 = _366 / cbSceneParam._m0[86u].x;
    float _2488 = _367 / cbSceneParam._m0[86u].y;
    vec4 _2502 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2487, _2488, (log2((isnan(cbSceneParam._m0[77u].w) ? _299 : (isnan(_299) ? cbSceneParam._m0[77u].w : min(_299, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2504 = _2502.x;
    float _2505 = _2502.y;
    float _2506 = _2502.z;
    float _2507 = _2502.w;
    float _2579;
    float _2581;
    float _2583;
    float _2585;
    if (_299 > cbSceneParam._m0[78u].w)
    {
        float _2541 = isnan(_299) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _299 : min(cbSceneParam._m0[80u].w, _299));
        float _2542 = _2541 / _299;
        float _2553 = _2542 * _351;
        float _2554 = _352 * _2542;
        float _2555 = (-0.0) - _2554;
        float _2557 = _2542 * _353;
        float _2559 = (cbSceneParam._m0[77u].w * _2555) / _2541;
        float _2560 = _2559 + cbSceneParam._m0[79u].w;
        float _2561 = cbSceneParam._m0[79u].w - _2554;
        float _2567 = sqrt(((_2553 * _2553) + (_2554 * _2554)) + (_2557 * _2557));
        float _2570 = (1.0 - (cbSceneParam._m0[77u].w / _2541)) * _2567;
        float _2575 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2577 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2730;
        if (abs((_2555 - _2559) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2730 = ((((_2560 > 0.0) ? exp2(_2575 * _2560) : (2.0 - exp2(_2577 * _2560))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2570;
        }
        else
        {
            float _2690 = 1.0 / cbSceneParam._m0[80u].x;
            float _2691 = isnan(_2561) ? _2560 : (isnan(_2560) ? _2561 : max(_2560, _2561));
            float _2692 = isnan(_2561) ? _2560 : (isnan(_2560) ? _2561 : min(_2560, _2561));
            float _2701 = isnan(0.0) ? _2691 : (isnan(_2691) ? 0.0 : min(_2691, 0.0));
            float _2702 = isnan(0.0) ? _2692 : (isnan(_2692) ? 0.0 : min(_2692, 0.0));
            _2730 = ((abs(_2567 / _2555) * cbSceneParam._m0[80u].y) * ((((_2701 - _2702) * 2.0) - ((exp2(_2575 * (isnan(0.0) ? _2691 : (isnan(_2691) ? 0.0 : max(_2691, 0.0)))) - exp2(_2575 * (isnan(0.0) ? _2692 : (isnan(_2692) ? 0.0 : max(_2692, 0.0))))) * _2690)) - ((exp2(_2577 * _2701) - exp2(_2577 * _2702)) * _2690))) + (_2570 * cbSceneParam._m0[80u].z);
        }
        vec4 _2732 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2487, _2488, 1.0), 0.0);
        float _2741 = exp2((_2730 * (-1.44269502162933349609375)) * (1.0 - _2732.w));
        float _2742 = log2(_2741);
        float _2758 = log2(_2507);
        _2579 = (exp2(_2758 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2742 * cbSceneParam._m0[78u].x)) * _2732.x) / cbSceneParam._m0[78u].x)) + _2504;
        _2581 = (exp2(_2758 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2742 * cbSceneParam._m0[78u].y)) * _2732.y) / cbSceneParam._m0[78u].y)) + _2505;
        _2583 = (exp2(_2758 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2742 * cbSceneParam._m0[78u].z)) * _2732.z) / cbSceneParam._m0[78u].z)) + _2506;
        _2585 = _2741 * _2507;
    }
    else
    {
        _2579 = _2504;
        _2581 = _2505;
        _2583 = _2506;
        _2585 = _2507;
    }
    float _2597 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2598 = _2597 == 3.0;
    float _2599 = log2(_2585);
    float _2606 = exp2(_2599 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0))) * (_2447 + ((isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0))) * _433))) + ((_2453 + ((isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0))) * _1240)) * cbPerFrame._m0[3u].x));
    float _2607 = exp2(_2599 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0))) * (_2449 + ((isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0))) * _433))) + ((_2455 + ((isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0))) * _1240)) * cbPerFrame._m0[3u].x));
    float _2608 = exp2(_2599 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0))) * (_2451 + ((isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0))) * _433))) + ((_2457 + ((isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0))) * _1240)) * cbPerFrame._m0[3u].x));
    float _2617 = (_2597 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2617 * (_2598 ? _2606 : (_2606 + (cbSceneParam._m0[72u].w * _2579)));
    SV_Target.y = _2617 * (_2598 ? _2607 : (_2607 + (cbSceneParam._m0[72u].w * _2581)));
    SV_Target.z = _2617 * (_2598 ? _2608 : (_2608 + (cbSceneParam._m0[72u].w * _2583)));
    SV_Target.w = _2482;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2482;
}


