#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_23;
layout(set = 0, binding = 11) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_7;
layout(set = 0, binding = 14) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_8;
layout(set = 0, binding = 15) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_16;
layout(set = 0, binding = 4) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_17;
layout(set = 0, binding = 5) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_18;
layout(set = 0, binding = 6) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2DArray C_Enemy_ColorMaterial_PF_snp_0_Texture2DArray_0;
layout(set = 0, binding = 17) uniform texture2DArray C_Enemy_ColorMaterial_PF_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 4, component = 2) in float TEXCOORD_6;
layout(location = 4, component = 3) in float TEXCOORD_7;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1563;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _230 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _231 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _232 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _238 = inversesqrt(dot(vec3(_230, _231, _232), vec3(_230, _231, _232)));
    float _245 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _252 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _317 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _321 = _317.z;
    float _332 = exp2(log2((1.0 - _321) * cbMtdParam._m0[26u].w) * cbMtdParam._m0[26u].x);
    float _333 = isnan(0.0) ? _332 : (isnan(_332) ? 0.0 : max(_332, 0.0));
    float _334 = isnan(1.0) ? _333 : (isnan(_333) ? 1.0 : min(_333, 1.0));
    vec4 _348 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD_1) + cbTextureTilingScale._m0[13u].w));
    float _360 = exp2(log2(_348.w * cbMtdParam._m0[28u].w) * cbMtdParam._m0[23u].x);
    float _361 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    float _362 = isnan(1.0) ? _361 : (isnan(_361) ? 1.0 : min(_361, 1.0));
    float _371 = exp2(log2(cbMtdParam._m0[23u].y * _321) * cbMtdParam._m0[22u].y);
    float _372 = isnan(0.0) ? _371 : (isnan(_371) ? 0.0 : max(_371, 0.0));
    float _373 = isnan(1.0) ? _372 : (isnan(_372) ? 1.0 : min(_372, 1.0));
    vec4 _385 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w));
    float _388 = _385.y;
    float _391 = (_385.x + (-0.02500000037252902984619140625)) * 8.0;
    float _395 = roundEven(5.0 - _391);
    float _396 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _397 = isnan(4.0) ? _396 : (isnan(_396) ? 4.0 : min(_396, 4.0));
    float _410 = floor(_397);
    vec4 _413 = texture(sampler2DArray(C_Enemy_ColorMaterial_PF_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[16u].x * TEXCOORD) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_1) + cbTextureTilingScale._m0[16u].w, _410));
    float _208[6];
    float _209[6];
    float _210[6];
    _208[0u] = cbMtdParam._m0[17u].x;
    _209[0u] = cbMtdParam._m0[17u].y;
    _210[0u] = cbMtdParam._m0[17u].z;
    _208[1u] = cbMtdParam._m0[15u].x;
    _209[1u] = cbMtdParam._m0[15u].y;
    _210[1u] = cbMtdParam._m0[15u].z;
    _208[2u] = cbMtdParam._m0[14u].x;
    _209[2u] = cbMtdParam._m0[14u].y;
    _210[2u] = cbMtdParam._m0[14u].z;
    _208[3u] = cbMtdParam._m0[13u].x;
    _209[3u] = cbMtdParam._m0[13u].y;
    _210[3u] = cbMtdParam._m0[13u].z;
    _208[4u] = cbMtdParam._m0[12u].x;
    _209[4u] = cbMtdParam._m0[12u].y;
    _210[4u] = cbMtdParam._m0[12u].z;
    _208[5u] = cbMtdParam._m0[18u].x;
    _209[5u] = cbMtdParam._m0[18u].y;
    _210[5u] = cbMtdParam._m0[18u].z;
    float _477 = roundEven(_391);
    float _478 = isnan(0.0) ? _477 : (isnan(_477) ? 0.0 : max(_477, 0.0));
    uint _480 = uint(int(isnan(5.0) ? _478 : (isnan(_478) ? 5.0 : min(_478, 5.0))));
    vec4 _510 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _521 = cbMtdParam._m0[9u].x * _510.x;
    float _522 = cbMtdParam._m0[9u].y * _510.y;
    float _523 = cbMtdParam._m0[9u].z * _510.z;
    float _530 = ((((((_208[_480] - cbMtdParam._m0[10u].x) * _388) + cbMtdParam._m0[10u].x) * _413.x) - _521) * _373) + _521;
    float _531 = ((((((_209[_480] - cbMtdParam._m0[10u].y) * _388) + cbMtdParam._m0[10u].y) * _413.y) - _522) * _373) + _522;
    float _532 = ((((((_210[_480] - cbMtdParam._m0[10u].z) * _388) + cbMtdParam._m0[10u].z) * _413.z) - _523) * _373) + _523;
    float _538 = exp2(log2(_317.w) * cbMtdParam._m0[23u].w);
    vec4 _551 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w));
    float _570 = (((cbMtdParam._m0[16u].x * _551.x) - _530) * _538) + _530;
    float _571 = (((cbMtdParam._m0[16u].y * _551.y) - _531) * _538) + _531;
    float _572 = (((cbMtdParam._m0[16u].z * _551.z) - _532) * _538) + _532;
    vec4 _585 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_1) + cbTextureTilingScale._m0[11u].w));
    float _605 = (((cbMtdParam._m0[19u].x * _585.x) - _570) * _362) + _570;
    float _606 = (((cbMtdParam._m0[19u].y * _585.y) - _571) * _362) + _571;
    float _607 = (((cbMtdParam._m0[19u].z * _585.z) - _572) * _362) + _572;
    vec4 _619 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1) + cbTextureTilingScale._m0[6u].w));
    float _644 = (_348.x * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].x * _619.x) - _605) * _334) + _605);
    float _646 = (_348.y * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].y * _619.y) - _606) * _334) + _606);
    float _648 = (_348.z * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].z * _619.z) - _607) * _334) + _607);
    vec4 _660 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1) + cbTextureTilingScale._m0[4u].w));
    float _678 = TEXCOORD_3.x - ((cbMtdParam._m0[24u].x * (1.0 - TEXCOORD_3.x)) * (texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w)).x + 0.00999999977648258209228515625));
    float _680 = _678 * (cbMtdParam._m0[24u].z + 1.0);
    float _4219 = isnan(0.0) ? _680 : (isnan(_680) ? 0.0 : max(_680, 0.0));
    float _681 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
    float _688 = (_681 * ((cbMtdParam._m0[11u].x * _660.x) - _644)) + _644;
    float _689 = (((cbMtdParam._m0[11u].y * _660.y) - _646) * _681) + _646;
    float _690 = (((cbMtdParam._m0[11u].z * _660.z) - _648) * _681) + _648;
    float _694 = cbMtdParam._m0[28u].y * TEXCOORD_6;
    float _702 = (_694 - (((texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_1) + cbTextureTilingScale._m0[10u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[27u].w) * (1.0 - _694))) * (cbMtdParam._m0[28u].x + 1.0);
    float _4230 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _703 = isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0));
    float _710 = ((cbMtdParam._m0[21u].x - _688) * _703) + _688;
    float _711 = ((cbMtdParam._m0[21u].y - _689) * _703) + _689;
    float _712 = ((cbMtdParam._m0[21u].z - _690) * _703) + _690;
    float _203[5];
    float _204[5];
    _203[0u] = cbMtdParam._m0[29u].x;
    _204[0u] = cbMtdParam._m0[29u].y;
    _203[1u] = cbMtdParam._m0[31u].x;
    _204[1u] = cbMtdParam._m0[31u].y;
    _203[2u] = cbMtdParam._m0[30u].z;
    _204[2u] = cbMtdParam._m0[30u].w;
    _203[3u] = cbMtdParam._m0[30u].x;
    _204[3u] = cbMtdParam._m0[30u].y;
    _203[4u] = cbMtdParam._m0[29u].z;
    _204[4u] = cbMtdParam._m0[29u].w;
    float _752 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    uint _754 = uint(int(isnan(4.0) ? _752 : (isnan(_752) ? 4.0 : min(_752, 4.0))));
    float _761 = ((_204[_754] - cbMtdParam._m0[22u].z) * _373) + cbMtdParam._m0[22u].z;
    float _764 = ((cbMtdParam._m0[22u].w - _761) * _538) + _761;
    float _767 = ((cbMtdParam._m0[25u].y - _764) * _362) + _764;
    float _770 = ((cbMtdParam._m0[26u].y - _767) * _334) + _767;
    float _775 = (cbMtdParam._m0[24u].y + 1.0) * _678;
    float _4251 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _776 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
    float _778 = _770 - (_770 * _776);
    float _780 = _778 - (_778 * _694);
    vec4 _793 = texture(sampler2DArray(C_Enemy_ColorMaterial_PF_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[17u].x * TEXCOORD) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD_1) + cbTextureTilingScale._m0[17u].w, _410));
    vec4 _810 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD_1) + cbTextureTilingScale._m0[12u].w));
    float _812 = _810.x;
    float _813 = _810.y;
    float _818 = cbMtdParam._m0[22u].x + _810.z;
    float _821 = (((_793.z + _203[_754]) - _818) * _373) + _818;
    vec4 _833 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w));
    float _844 = (((_833.z - _821) + cbMtdParam._m0[28u].z) * _538) + _821;
    float _850 = ((((_321 * 2.0) * _844) - _844) * cbMtdParam._m0[24u].w) + _844;
    vec4 _862 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_1) + cbTextureTilingScale._m0[15u].w));
    float _873 = (((cbMtdParam._m0[23u].z + _862.z) - _850) * _362) + _850;
    vec4 _886 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_1) + cbTextureTilingScale._m0[8u].w));
    float _897 = (((_886.z - _873) + cbMtdParam._m0[26u].z) * _334) + _873;
    vec4 _909 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _921 = ((_909.z - _897) * _776) + _897;
    vec4 _936 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD_1) + cbTextureTilingScale._m0[9u].w));
    float _950 = ((cbMtdParam._m0[27u].z * _694) * ((_936.z * cbMtdParam._m0[27u].y) - _921)) + _921;
    float _965 = ((_793.x - _812) * _373) + _812;
    float _966 = ((_793.y - _813) * _373) + _813;
    float _971 = ((_833.x - _965) * _538) + _965;
    float _972 = ((_833.y - _966) * _538) + _966;
    float _977 = ((_862.x - _971) * _362) + _971;
    float _978 = ((_862.y - _972) * _362) + _972;
    float _987 = ((((_886.x - _977) * _334) + _977) * 2.0) + (-1.0);
    float _988 = ((((_886.y - _978) * _334) + _978) * 2.0) + (-1.0);
    float _989 = dot(vec2(_987, _988), vec2(_987, _988));
    float _4262 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    float _994 = sqrt(1.0 - (isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0))));
    float _1010 = (((cbMtdParam._m0[25u].z * ((_317.x * 2.0) + (-1.0))) + _987) + (((((_909.x * 2.0) + (-1.0)) * TEXCOORD_3.x) * cbMtdParam._m0[25u].w) * _776)) + ((((_936.x * 2.0) + (-1.0)) * _694) * cbMtdParam._m0[27u].x);
    float _1011 = (((cbMtdParam._m0[25u].z * ((_317.y * 2.0) + (-1.0))) + _988) + (((((_909.y * 2.0) + (-1.0)) * TEXCOORD_3.y) * cbMtdParam._m0[25u].w) * _776)) + (((cbMtdParam._m0[28u].y * TEXCOORD_7) * ((_936.y * 2.0) + (-1.0))) * cbMtdParam._m0[27u].x);
    float _1014 = fma(_994, _245 * NORMAL.x, fma(_1011, _252 * TANGENT.x, (_238 * _230) * _1010));
    float _1017 = fma(_994, _245 * NORMAL.y, fma(_1011, _252 * TANGENT.y, (_238 * _231) * _1010));
    float _1020 = fma(_994, _245 * NORMAL.z, fma(_1011, _252 * TANGENT.z, (_238 * _232) * _1010));
    float _1024 = inversesqrt(dot(vec3(_1014, _1017, _1020), vec3(_1014, _1017, _1020)));
    float _1025 = _1024 * _1014;
    float _1026 = _1024 * _1017;
    float _1027 = _1024 * _1020;
    float _4273 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
    float _1028 = isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0));
    float _4284 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    float _4295 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _4306 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
    float _4317 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _1032 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
    float _1048 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1088 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1098 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1088);
    float _1099 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1088);
    float _1100 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1088);
    float _1104 = inversesqrt(dot(vec3(_1098, _1099, _1100), vec3(_1098, _1099, _1100)));
    float _1105 = _1098 * _1104;
    float _1106 = _1099 * _1104;
    float _1107 = _1100 * _1104;
    float _1113 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1114 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1132 = fma(_1027, cbSceneParam._m0[5u].z, fma(_1026, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1025));
    float _1135 = fma(_1027, cbSceneParam._m0[6u].z, fma(_1026, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1025));
    float _1138 = fma(_1027, cbSceneParam._m0[7u].z, fma(_1026, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1025));
    uint _1151 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1153 = (_1151 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1159 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0)))) * cbInstanceData._m0[_1153].x;
    float _1160 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0)))) * cbInstanceData._m0[_1153].y;
    float _1161 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0)))) * cbInstanceData._m0[_1153].z;
    float _4328 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
    float _1162 = isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0));
    float _4339 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
    float _1163 = isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0));
    float _4350 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
    float _1164 = isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0));
    float _1165 = 1.0 - _1032;
    float _1166 = _1162 * _1165;
    float _1167 = _1163 * _1165;
    float _1168 = _1164 * _1165;
    float _1173 = (_1162 + (-0.039999999105930328369140625)) * _1032;
    float _1174 = (_1163 + (-0.039999999105930328369140625)) * _1032;
    float _1175 = (_1164 + (-0.039999999105930328369140625)) * _1032;
    float _1176 = _1173 + 0.039999999105930328369140625;
    float _1178 = _1174 + 0.039999999105930328369140625;
    float _1179 = _1175 + 0.039999999105930328369140625;
    vec4 _1188 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1113, cbSceneParam._m0[86u].y * _1114));
    float _1191 = _1188.x * TEXCOORD_3.w;
    float _1192 = dot(vec3(_1025, _1026, _1027), vec3(_1105, _1106, _1107));
    float _1195 = _1192 * 2.0;
    float _1199 = (_1195 * _1025) - _1105;
    float _1200 = (_1195 * _1026) - _1106;
    float _1201 = (_1195 * _1027) - _1107;
    float _1205 = abs(dot(vec3(_1105, _1106, _1107), vec3(_1025, _1026, _1027)));
    float _4361 = isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0));
    float _1207 = sqrt(_1028);
    float _1218 = exp2((_1207 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1207 * 3.0));
    float _1224 = (1.0 - _1218) * ((_1207 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1225 = _1218 * _1207;
    float _1253 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1257 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1261 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1562;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    float _1575;
    float _1576;
    float _1577;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1287 = fma(_1261, cbModelParam._m0[26u].z, fma(_1257, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1253));
        float _1291 = fma(_1261, cbModelParam._m0[27u].z, fma(_1257, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1253));
        float _1295 = fma(_1261, cbModelParam._m0[28u].z, fma(_1257, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1253));
        float _1320 = _1253 + _1025;
        float _1321 = _1257 + _1026;
        float _1322 = _1261 + _1027;
        float _1332 = fma(_1322, cbModelParam._m0[26u].z, fma(_1321, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1320)) - _1287;
        float _1333 = fma(_1322, cbModelParam._m0[27u].z, fma(_1321, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1320)) - _1291;
        float _1334 = fma(_1322, cbModelParam._m0[28u].z, fma(_1321, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1320)) - _1295;
        float _1338 = inversesqrt(dot(vec3(_1332, _1333, _1334), vec3(_1332, _1333, _1334)));
        float _1351 = ((_1338 * _1332) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1287 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1352 = ((_1338 * _1333) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1291 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1353 = ((_1338 * _1334) / cbModelParam._m0[34u].z) + ((((((_1295 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1356 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        vec4 _1363 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        vec4 _1370 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        vec4 _1377 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        float _1390 = exp2((_1356.w + (-0.5)) * 20.0) * 2.0;
        float _1391 = _1390 * (_1356.x + (-0.5));
        float _1392 = _1390 * (_1356.y + (-0.5));
        float _1393 = _1390 * (_1356.z + (-0.5));
        float _1400 = exp2((_1363.w + (-0.5)) * 20.0) * 2.0;
        float _1401 = _1400 * (_1363.x + (-0.5));
        float _1402 = _1400 * (_1363.y + (-0.5));
        float _1403 = _1400 * (_1363.z + (-0.5));
        float _1410 = exp2((_1370.w + (-0.5)) * 20.0) * 2.0;
        float _1411 = _1410 * (_1370.x + (-0.5));
        float _1412 = _1410 * (_1370.y + (-0.5));
        float _1413 = _1410 * (_1370.z + (-0.5));
        float _1420 = exp2((_1377.w + (-0.5)) * 20.0) * 2.0;
        float _1421 = _1420 * (_1377.x + (-0.5));
        float _1422 = _1420 * (_1377.y + (-0.5));
        float _1423 = _1420 * (_1377.z + (-0.5));
        float _1424 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1425 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1426 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1427 = _1391 * 0.5;
        float _1428 = _1401 * 0.5;
        float _1429 = _1411 * 0.5;
        float _1430 = dot(vec3(_1427, _1428, _1429), vec3(_1427, _1428, _1429));
        float _1435 = (_1430 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1430);
        float _1444 = (dot(vec3(_1025, _1026, _1027), vec3(_1435 * _1427, _1435 * _1428, _1435 * _1429)) + 1.0) * 0.5;
        float _4387 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1454 = sqrt(((_1428 * _1428) + (_1427 * _1427)) + (_1429 * _1429)) / (_1424 + 9.9999997473787516355514526367188e-06);
        float _4398 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1455 = isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0));
        float _1456 = _1455 * 2.0;
        float _1460 = (1.0 - _1455) / (_1455 + 1.0);
        float _4409 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1461 = isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0));
        float _1470 = ((((1.0 - _1461) * (_1456 + 2.0)) * exp2(log2(isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0))) * (_1456 + 1.0))) + _1461) * _1424;
        float _1471 = _1392 * 0.5;
        float _1472 = _1402 * 0.5;
        float _1473 = _1412 * 0.5;
        float _1474 = dot(vec3(_1471, _1472, _1473), vec3(_1471, _1472, _1473));
        float _1479 = (_1474 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1474);
        float _1487 = (dot(vec3(_1025, _1026, _1027), vec3(_1479 * _1471, _1479 * _1472, _1479 * _1473)) + 1.0) * 0.5;
        float _4420 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1496 = sqrt(((_1472 * _1472) + (_1471 * _1471)) + (_1473 * _1473)) / (_1425 + 9.9999997473787516355514526367188e-06);
        float _4431 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1497 = isnan(1.0) ? _4431 : (isnan(_4431) ? 1.0 : min(_4431, 1.0));
        float _1498 = _1497 * 2.0;
        float _1502 = (1.0 - _1497) / (_1497 + 1.0);
        float _4442 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1503 = isnan(1.0) ? _4442 : (isnan(_4442) ? 1.0 : min(_4442, 1.0));
        float _1512 = ((((1.0 - _1503) * (_1498 + 2.0)) * exp2(log2(isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0))) * (_1498 + 1.0))) + _1503) * _1425;
        float _1513 = _1393 * 0.5;
        float _1514 = _1403 * 0.5;
        float _1515 = _1413 * 0.5;
        float _1516 = dot(vec3(_1513, _1514, _1515), vec3(_1513, _1514, _1515));
        float _1521 = (_1516 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1516);
        float _1529 = (dot(vec3(_1025, _1026, _1027), vec3(_1521 * _1513, _1521 * _1514, _1521 * _1515)) + 1.0) * 0.5;
        float _4453 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1538 = sqrt(((_1514 * _1514) + (_1513 * _1513)) + (_1515 * _1515)) / (_1426 + 9.9999997473787516355514526367188e-06);
        float _4464 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1539 = isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0));
        float _1540 = _1539 * 2.0;
        float _1544 = (1.0 - _1539) / (_1539 + 1.0);
        float _4475 = isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0));
        float _1545 = isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0));
        float _1554 = ((((1.0 - _1545) * (_1540 + 2.0)) * exp2(log2(isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0))) * (_1540 + 1.0))) + _1545) * _1426;
        _1562 = _1393;
        _1564 = _1392;
        _1565 = _1391;
        _1566 = _1403;
        _1567 = _1402;
        _1568 = _1401;
        _1569 = _1413;
        _1570 = _1412;
        _1571 = _1411;
        _1572 = _1426;
        _1573 = _1425;
        _1574 = _1424;
        _1575 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0)));
        _1576 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0)));
        _1577 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0)));
    }
    else
    {
        _1562 = _1563;
        _1564 = _1563;
        _1565 = _1563;
        _1566 = _1563;
        _1567 = _1563;
        _1568 = _1563;
        _1569 = _1563;
        _1570 = _1563;
        _1571 = _1563;
        _1572 = _1563;
        _1573 = _1563;
        _1574 = _1563;
        _1575 = 0.0;
        _1576 = 0.0;
        _1577 = 0.0;
    }
    float _1869;
    float _1870;
    float _1871;
    float _1872;
    float _1873;
    float _1874;
    float _1875;
    float _1876;
    float _1877;
    float _1878;
    float _1879;
    float _1880;
    float _1881;
    float _1882;
    float _1883;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1600 = fma(_1261, cbModelParam._m0[30u].z, fma(_1257, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1253));
        float _1604 = fma(_1261, cbModelParam._m0[31u].z, fma(_1257, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1253));
        float _1608 = fma(_1261, cbModelParam._m0[32u].z, fma(_1257, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1253));
        float _1631 = _1253 + _1025;
        float _1632 = _1257 + _1026;
        float _1633 = _1261 + _1027;
        float _1643 = fma(_1633, cbModelParam._m0[30u].z, fma(_1632, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1631)) - _1600;
        float _1644 = fma(_1633, cbModelParam._m0[31u].z, fma(_1632, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1631)) - _1604;
        float _1645 = fma(_1633, cbModelParam._m0[32u].z, fma(_1632, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1631)) - _1608;
        float _1649 = inversesqrt(dot(vec3(_1643, _1644, _1645), vec3(_1643, _1644, _1645)));
        float _1662 = ((_1649 * _1643) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1600 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1663 = ((_1649 * _1644) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1604 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1664 = ((_1649 * _1645) / cbModelParam._m0[35u].z) + ((((((_1608 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1666 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1662, _1663, _1664), 0.0);
        vec4 _1673 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1662, _1663, _1664), 0.0);
        vec4 _1680 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1662, _1663, _1664), 0.0);
        vec4 _1687 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1662, _1663, _1664), 0.0);
        float _1699 = exp2((_1666.w + (-0.5)) * 20.0) * 2.0;
        float _1700 = _1699 * (_1666.x + (-0.5));
        float _1701 = _1699 * (_1666.y + (-0.5));
        float _1702 = _1699 * (_1666.z + (-0.5));
        float _1709 = exp2((_1673.w + (-0.5)) * 20.0) * 2.0;
        float _1710 = _1709 * (_1673.x + (-0.5));
        float _1711 = _1709 * (_1673.y + (-0.5));
        float _1712 = _1709 * (_1673.z + (-0.5));
        float _1719 = exp2((_1680.w + (-0.5)) * 20.0) * 2.0;
        float _1720 = _1719 * (_1680.x + (-0.5));
        float _1721 = _1719 * (_1680.y + (-0.5));
        float _1722 = _1719 * (_1680.z + (-0.5));
        float _1729 = exp2((_1687.w + (-0.5)) * 20.0) * 2.0;
        float _1730 = _1729 * (_1687.x + (-0.5));
        float _1731 = _1729 * (_1687.y + (-0.5));
        float _1732 = _1729 * (_1687.z + (-0.5));
        float _1733 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
        float _1734 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
        float _1735 = isnan(0.0) ? _1732 : (isnan(_1732) ? 0.0 : max(_1732, 0.0));
        float _1736 = _1700 * 0.5;
        float _1737 = _1710 * 0.5;
        float _1738 = _1720 * 0.5;
        float _1739 = dot(vec3(_1736, _1737, _1738), vec3(_1736, _1737, _1738));
        float _1744 = (_1739 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1739);
        float _1752 = (dot(vec3(_1025, _1026, _1027), vec3(_1744 * _1736, _1744 * _1737, _1744 * _1738)) + 1.0) * 0.5;
        float _4516 = isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0));
        float _1761 = sqrt(((_1737 * _1737) + (_1736 * _1736)) + (_1738 * _1738)) / (_1733 + 9.9999997473787516355514526367188e-06);
        float _4527 = isnan(0.0) ? _1761 : (isnan(_1761) ? 0.0 : max(_1761, 0.0));
        float _1762 = isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0));
        float _1763 = _1762 * 2.0;
        float _1767 = (1.0 - _1762) / (_1762 + 1.0);
        float _4538 = isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0));
        float _1768 = isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0));
        float _1777 = ((((1.0 - _1768) * (_1763 + 2.0)) * exp2(log2(isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0))) * (_1763 + 1.0))) + _1768) * _1733;
        float _1778 = _1701 * 0.5;
        float _1779 = _1711 * 0.5;
        float _1780 = _1721 * 0.5;
        float _1781 = dot(vec3(_1778, _1779, _1780), vec3(_1778, _1779, _1780));
        float _1786 = (_1781 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1781);
        float _1794 = (dot(vec3(_1025, _1026, _1027), vec3(_1786 * _1778, _1786 * _1779, _1786 * _1780)) + 1.0) * 0.5;
        float _4549 = isnan(0.0) ? _1794 : (isnan(_1794) ? 0.0 : max(_1794, 0.0));
        float _1803 = sqrt(((_1779 * _1779) + (_1778 * _1778)) + (_1780 * _1780)) / (_1734 + 9.9999997473787516355514526367188e-06);
        float _4560 = isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0));
        float _1804 = isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0));
        float _1805 = _1804 * 2.0;
        float _1809 = (1.0 - _1804) / (_1804 + 1.0);
        float _4571 = isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0));
        float _1810 = isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0));
        float _1819 = ((((1.0 - _1810) * (_1805 + 2.0)) * exp2(log2(isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0))) * (_1805 + 1.0))) + _1810) * _1734;
        float _1820 = _1702 * 0.5;
        float _1821 = _1712 * 0.5;
        float _1822 = _1722 * 0.5;
        float _1823 = dot(vec3(_1820, _1821, _1822), vec3(_1820, _1821, _1822));
        float _1828 = (_1823 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1823);
        float _1836 = (dot(vec3(_1025, _1026, _1027), vec3(_1828 * _1820, _1828 * _1821, _1828 * _1822)) + 1.0) * 0.5;
        float _4582 = isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0));
        float _1845 = sqrt(((_1821 * _1821) + (_1820 * _1820)) + (_1822 * _1822)) / (_1735 + 9.9999997473787516355514526367188e-06);
        float _4593 = isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0));
        float _1846 = isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0));
        float _1847 = _1846 * 2.0;
        float _1851 = (1.0 - _1846) / (_1846 + 1.0);
        float _4604 = isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0));
        float _1852 = isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0));
        float _1861 = ((((1.0 - _1852) * (_1847 + 2.0)) * exp2(log2(isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0))) * (_1847 + 1.0))) + _1852) * _1735;
        _1869 = _1702;
        _1870 = _1701;
        _1871 = _1700;
        _1872 = _1712;
        _1873 = _1711;
        _1874 = _1710;
        _1875 = _1722;
        _1876 = _1721;
        _1877 = _1720;
        _1878 = _1735;
        _1879 = _1734;
        _1880 = _1733;
        _1881 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0)));
        _1882 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0)));
        _1883 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0)));
    }
    else
    {
        _1869 = _1563;
        _1870 = _1563;
        _1871 = _1563;
        _1872 = _1563;
        _1873 = _1563;
        _1874 = _1563;
        _1875 = _1563;
        _1876 = _1563;
        _1877 = _1563;
        _1878 = _1563;
        _1879 = _1563;
        _1880 = _1563;
        _1881 = 0.0;
        _1882 = 0.0;
        _1883 = 0.0;
    }
    float _1893 = (cbModelParam._m0[1u].x * (_1881 - _1575)) + _1575;
    float _1894 = (cbModelParam._m0[1u].x * (_1882 - _1576)) + _1576;
    float _1895 = (cbModelParam._m0[1u].x * (_1883 - _1577)) + _1577;
    float _1916 = fma(_1895, cbSceneParam._m0[89u].z, fma(_1894, cbSceneParam._m0[89u].y, _1893 * cbSceneParam._m0[89u].x));
    float _1919 = fma(_1895, cbSceneParam._m0[90u].z, fma(_1894, cbSceneParam._m0[90u].y, _1893 * cbSceneParam._m0[90u].x));
    float _1922 = fma(_1895, cbSceneParam._m0[91u].z, fma(_1894, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1893));
    float _1937 = _1199 * 0.5;
    float _1938 = _1200 * 0.5;
    float _1939 = _1201 * 0.5;
    float _1940 = dot(vec4(_1937, _1938, _1939, 1.0), vec4(_1871, _1874, _1877, _1880));
    float _1943 = dot(vec4(_1937, _1938, _1939, 1.0), vec4(_1870, _1873, _1876, _1879));
    float _1946 = dot(vec4(_1937, _1938, _1939, 1.0), vec4(_1869, _1872, _1875, _1878));
    float _1980;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1953 = dot(vec4(_1937, _1938, _1939, 1.0), vec4(_1562, _1566, _1569, _1572));
        float _1957 = dot(vec4(_1937, _1938, _1939, 1.0), vec4(_1564, _1567, _1570, _1573));
        float _1961 = dot(vec4(_1937, _1938, _1939, 1.0), vec4(_1565, _1568, _1571, _1574));
        float _1968 = dot(vec4(cbModelParam._m0[39u]), vec4(_1937, _1938, _1939, 1.0));
        _1980 = dot(vec3(isnan(0.0) ? _1961 : (isnan(_1961) ? 0.0 : max(_1961, 0.0)), isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0)), isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1968) ? 0.0 : (isnan(0.0) ? _1968 : max(0.0, _1968))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1980 = 1.0;
    }
    float _1991;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1982 = dot(vec4(cbModelParam._m0[40u]), vec4(_1937, _1938, _1939, 1.0));
        _1991 = dot(vec3(isnan(0.0) ? _1940 : (isnan(_1940) ? 0.0 : max(_1940, 0.0)), isnan(0.0) ? _1943 : (isnan(_1943) ? 0.0 : max(_1943, 0.0)), isnan(0.0) ? _1946 : (isnan(_1946) ? 0.0 : max(_1946, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1982) ? 0.0 : (isnan(0.0) ? _1982 : max(0.0, _1982))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1991 = 1.0;
    }
    float _1995 = (_1991 * cbModelParam._m0[1u].x) + (_1980 * (1.0 - cbModelParam._m0[1u].x));
    float _2005 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1028);
    float _2006 = isnan(_2005) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2005 : min(cbModelParam._m0[25u].z, _2005));
    float _2086;
    float _2088;
    float _2090;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2053 = fma(_1261, cbModelParam._m0[13u].z, fma(_1257, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1253)) + cbModelParam._m0[13u].w;
        float _2057 = fma(_1261, cbModelParam._m0[14u].z, fma(_1257, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1253)) + cbModelParam._m0[14u].w;
        float _2061 = fma(_1261, cbModelParam._m0[15u].z, fma(_1257, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1253)) + cbModelParam._m0[15u].w;
        float _2064 = fma(_1201, cbModelParam._m0[13u].z, fma(_1200, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1199));
        float _2067 = fma(_1201, cbModelParam._m0[14u].z, fma(_1200, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1199));
        float _2070 = fma(_1201, cbModelParam._m0[15u].z, fma(_1200, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1199));
        float _2098;
        if (_2064 > 0.0)
        {
            _2098 = abs((1.0 - _2053) / _2064);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2064 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2053 + 1.0) / _2064);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2098 = frontier_phi_14_12_ladder;
        }
        float _2269;
        if (_2067 > 0.0)
        {
            _2269 = abs((1.0 - _2057) / _2067);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2067 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2057 + 1.0) / _2067);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2269 = frontier_phi_23_19_ladder;
        }
        float _2564;
        if (_2070 > 0.0)
        {
            _2564 = abs((1.0 - _2061) / _2070);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2070 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2061 + 1.0) / _2070);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2564 = frontier_phi_35_30_ladder;
        }
        float _2566 = isnan(_2269) ? _2098 : (isnan(_2098) ? _2269 : min(_2098, _2269));
        float _2567 = isnan(_2564) ? _2566 : (isnan(_2566) ? _2564 : min(_2566, _2564));
        float _2571 = (_2567 * _2064) + _2053;
        float _2572 = (_2567 * _2067) + _2057;
        float _2573 = (_2567 * _2070) + _2061;
        float _2574 = _2567 * 9.9999997473787516355514526367188e-05;
        float _2576 = (-1.0) - _2574;
        float _2578 = _2574 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2573 > _2578) || ((_2573 < _2576) || ((_2572 > _2578) || ((_2572 < _2576) || ((_2571 < _2576) || (_2571 > _2578))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2718 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2573, cbModelParam._m0[9u].z, fma(_2572, cbModelParam._m0[9u].y, _2571 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2573, cbModelParam._m0[10u].z, fma(_2572, cbModelParam._m0[10u].y, _2571 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2573, cbModelParam._m0[11u].z, fma(_2572, cbModelParam._m0[11u].y, _2571 * cbModelParam._m0[11u].x))), _2006);
            frontier_phi_13_35_ladder = _2718.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2718.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2718.x * cbModelParam._m0[1u].y;
        }
        _2086 = frontier_phi_13_35_ladder_2;
        _2088 = frontier_phi_13_35_ladder_1;
        _2090 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2074 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1199, _1200, _1201), _2006);
        _2086 = _2074.x * cbModelParam._m0[1u].y;
        _2088 = _2074.y * cbModelParam._m0[1u].y;
        _2090 = _2074.z * cbModelParam._m0[1u].y;
    }
    float _2094 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1028);
    float _2095 = isnan(_2094) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2094 : min(cbModelParam._m0[25u].w, _2094));
    float _2184;
    float _2186;
    float _2188;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2148 = fma(_1261, cbModelParam._m0[21u].z, fma(_1257, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1253)) + cbModelParam._m0[21u].w;
        float _2152 = fma(_1261, cbModelParam._m0[22u].z, fma(_1257, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1253)) + cbModelParam._m0[22u].w;
        float _2156 = fma(_1261, cbModelParam._m0[23u].z, fma(_1257, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1253)) + cbModelParam._m0[23u].w;
        float _2159 = fma(_1201, cbModelParam._m0[21u].z, fma(_1200, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1199));
        float _2162 = fma(_1201, cbModelParam._m0[22u].z, fma(_1200, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1199));
        float _2165 = fma(_1201, cbModelParam._m0[23u].z, fma(_1200, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1199));
        float _2274;
        if (_2159 > 0.0)
        {
            _2274 = abs((1.0 - _2148) / _2159);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2159 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2148 + 1.0) / _2159);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2274 = frontier_phi_25_21_ladder;
        }
        float _2591;
        if (_2162 > 0.0)
        {
            _2591 = abs((1.0 - _2152) / _2162);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2162 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2152 + 1.0) / _2162);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2591 = frontier_phi_37_32_ladder;
        }
        float _2929;
        if (_2165 > 0.0)
        {
            _2929 = abs((1.0 - _2156) / _2165);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2165 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2156 + 1.0) / _2165);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2929 = frontier_phi_47_44_ladder;
        }
        float _2931 = isnan(_2591) ? _2274 : (isnan(_2274) ? _2591 : min(_2274, _2591));
        float _2932 = isnan(_2929) ? _2931 : (isnan(_2931) ? _2929 : min(_2931, _2929));
        float _2936 = (_2932 * _2159) + _2148;
        float _2937 = (_2932 * _2162) + _2152;
        float _2938 = (_2932 * _2165) + _2156;
        float _2939 = _2932 * 9.9999997473787516355514526367188e-05;
        float _2940 = (-1.0) - _2939;
        float _2942 = _2939 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2938 > _2942) || ((_2938 < _2940) || ((_2937 > _2942) || ((_2937 < _2940) || ((_2936 < _2940) || (_2936 > _2942))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3060 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2938, cbModelParam._m0[17u].z, fma(_2937, cbModelParam._m0[17u].y, _2936 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2938, cbModelParam._m0[18u].z, fma(_2937, cbModelParam._m0[18u].y, _2936 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2938, cbModelParam._m0[19u].z, fma(_2937, cbModelParam._m0[19u].y, _2936 * cbModelParam._m0[19u].x))), _2095);
            frontier_phi_22_47_ladder = _3060.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3060.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3060.x * cbModelParam._m0[1u].z;
        }
        _2184 = frontier_phi_22_47_ladder_2;
        _2186 = frontier_phi_22_47_ladder_1;
        _2188 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2168 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1199, _1200, _1201), _2095);
        _2184 = _2168.x * cbModelParam._m0[1u].z;
        _2186 = _2168.y * cbModelParam._m0[1u].z;
        _2188 = _2168.z * cbModelParam._m0[1u].z;
    }
    float _2201 = (((_1224 * _1176) + _1225) * _1191) * ((cbModelParam._m0[1u].w * (_2184 - _2086)) + _2086);
    float _2203 = (((_1224 * _1178) + _1225) * _1191) * ((cbModelParam._m0[1u].w * (_2186 - _2088)) + _2088);
    float _2205 = (((_1224 * _1179) + _1225) * _1191) * ((cbModelParam._m0[1u].w * (_2188 - _2090)) + _2090);
    float _2208 = fma(_2205, cbSceneParam._m0[89u].z, fma(_2203, cbSceneParam._m0[89u].y, _2201 * cbSceneParam._m0[89u].x));
    float _2211 = fma(_2205, cbSceneParam._m0[90u].z, fma(_2203, cbSceneParam._m0[90u].y, _2201 * cbSceneParam._m0[90u].x));
    float _2214 = fma(_2205, cbSceneParam._m0[91u].z, fma(_2203, cbSceneParam._m0[91u].y, _2201 * cbSceneParam._m0[91u].x));
    float _2248 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2252 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2256 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2260 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2261 = _2248 / _2260;
    float _2262 = _2252 / _2260;
    float _2263 = _2256 / _2260;
    float _2410;
    float _2411;
    float _2412;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2290 = ((uint(_2263 > cbSceneParam._m0[59u].y) + uint(_2263 > cbSceneParam._m0[59u].x)) + uint(_2263 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2291 = _2290 + 43u;
        uint _2299 = _2290 + 44u;
        uint _2307 = _2290 + 45u;
        uint _2315 = _2290 + 46u;
        float _2326 = fma(_2260, cbSceneParam._m0[_2291].w, fma(_2256, cbSceneParam._m0[_2291].z, fma(_2252, cbSceneParam._m0[_2291].y, _2248 * cbSceneParam._m0[_2291].x)));
        float _2330 = fma(_2260, cbSceneParam._m0[_2299].w, fma(_2256, cbSceneParam._m0[_2299].z, fma(_2252, cbSceneParam._m0[_2299].y, _2248 * cbSceneParam._m0[_2299].x)));
        float _2338 = fma(_2260, cbSceneParam._m0[_2315].w, fma(_2256, cbSceneParam._m0[_2315].z, fma(_2252, cbSceneParam._m0[_2315].y, _2248 * cbSceneParam._m0[_2315].x)));
        float _2343 = cbSceneParam._m0[33u].z * _2338;
        float _2345 = cbSceneParam._m0[33u].w * _2338;
        float _2348 = fma(_2260, cbSceneParam._m0[_2307].w, fma(_2256, cbSceneParam._m0[_2307].z, fma(_2252, cbSceneParam._m0[_2307].y, _2248 * cbSceneParam._m0[_2307].x))) / _2338;
        float _2396 = (cbSceneParam._m0[33u].x - sqrt(((_2262 * _2262) + (_2261 * _2261)) + (_2263 * _2263))) * cbSceneParam._m0[33u].y;
        float _4730 = isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0));
        float _2403 = (isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2343 + _2326) / _2338, (_2345 + _2330) / _2338), _2348), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2345 + _2326) / _2338, (_2330 - _2343) / _2338), _2348), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2326 - _2343) / _2338, (_2330 - _2345) / _2338), _2348), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2326 - _2345) / _2338, (_2343 + _2330) / _2338), _2348), 0.0)).x), vec4(0.25)));
        _2410 = 1.0 - (_2403 * cbSceneParam._m0[34u].x);
        _2411 = 1.0 - (_2403 * cbSceneParam._m0[34u].y);
        _2412 = 1.0 - (_2403 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2410 = 1.0;
        _2411 = 1.0;
        _2412 = 1.0;
    }
    float _2476;
    float _2478;
    float _2480;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2464 = fma(_2260, cbSceneParam._m0[63u].w, fma(_2256, cbSceneParam._m0[63u].z, fma(_2252, cbSceneParam._m0[63u].y, _2248 * cbSceneParam._m0[63u].x)));
        float _2465 = fma(_2260, cbSceneParam._m0[60u].w, fma(_2256, cbSceneParam._m0[60u].z, fma(_2252, cbSceneParam._m0[60u].y, _2248 * cbSceneParam._m0[60u].x))) / _2464;
        float _2466 = fma(_2260, cbSceneParam._m0[61u].w, fma(_2256, cbSceneParam._m0[61u].z, fma(_2252, cbSceneParam._m0[61u].y, _2248 * cbSceneParam._m0[61u].x))) / _2464;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2465 >= cbSceneParam._m0[64u].x) && (_2466 >= cbSceneParam._m0[64u].y)) && (_2465 <= cbSceneParam._m0[64u].z)) && (_2466 <= cbSceneParam._m0[64u].w))
        {
            float _2604 = fma(_2260, cbSceneParam._m0[62u].w, fma(_2256, cbSceneParam._m0[62u].z, fma(_2252, cbSceneParam._m0[62u].y, _2248 * cbSceneParam._m0[62u].x))) / _2464;
            float _2608 = isnan(cbSceneParam._m0[41u].w) ? _2604 : (isnan(_2604) ? cbSceneParam._m0[41u].w : max(_2604, cbSceneParam._m0[41u].w));
            float _2651 = (cbSceneParam._m0[33u].x - sqrt(((_2262 * _2262) + (_2261 * _2261)) + (_2263 * _2263))) * cbSceneParam._m0[33u].y;
            float _4746 = isnan(0.0) ? _2651 : (isnan(_2651) ? 0.0 : max(_2651, 0.0));
            float _2658 = (isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2465, cbSceneParam._m0[33u].w + _2466), _2608), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2465, _2466 - cbSceneParam._m0[33u].z), _2608), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2465 - cbSceneParam._m0[33u].z, _2466 - cbSceneParam._m0[33u].w), _2608), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2465 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2466), _2608), 0.0)).x), vec4(0.25)));
            float _2662 = 1.0 - (_2658 * cbSceneParam._m0[34u].x);
            float _2663 = 1.0 - (_2658 * cbSceneParam._m0[34u].y);
            float _2664 = 1.0 - (_2658 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2664) ? _2412 : (isnan(_2412) ? _2664 : min(_2412, _2664));
            frontier_phi_34_33_ladder_1 = isnan(_2663) ? _2411 : (isnan(_2411) ? _2663 : min(_2411, _2663));
            frontier_phi_34_33_ladder_2 = isnan(_2662) ? _2410 : (isnan(_2410) ? _2662 : min(_2410, _2662));
        }
        else
        {
            frontier_phi_34_33_ladder = _2412;
            frontier_phi_34_33_ladder_1 = _2411;
            frontier_phi_34_33_ladder_2 = _2410;
        }
        _2476 = frontier_phi_34_33_ladder_2;
        _2478 = frontier_phi_34_33_ladder_1;
        _2480 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2476 = _2410;
        _2478 = _2411;
        _2480 = _2412;
    }
    uvec4 _2485 = floatBitsToUint(cbInstanceData._m0[_1151 + 5u]);
    uint _2487 = _2485.x * 14u;
    uint _2488 = _2487 + 13u;
    float _2495 = _1191 + (-1.0);
    float _2500 = (cbLight._m0[_2488].x * _2495) + 1.0;
    float _2501 = (cbLight._m0[_2488].y * _2495) + 1.0;
    float _2502 = (cbLight._m0[_2488].z * _2495) + 1.0;
    float _2503 = (cbLight._m0[_2488].w * _2495) + 1.0;
    uint _2504 = _2487 + 5u;
    float _2510 = isnan(1.0) ? _2501 : (isnan(_2501) ? 1.0 : min(_2501, 1.0));
    uint _2514 = _2487 + 4u;
    float _2523 = isnan(1.0) ? _2500 : (isnan(_2500) ? 1.0 : min(_2500, 1.0));
    uint _2527 = _2487 | 1u;
    float _2538 = dot(vec3(cbLight._m0[_2487].xyz), vec3(_1025, _1026, _1027));
    float _2541 = dot(vec3(cbLight._m0[_2527].xyz), vec3(_1025, _1026, _1027));
    float _4782 = isnan(0.0) ? _2538 : (isnan(_2538) ? 0.0 : max(_2538, 0.0));
    float _4793 = isnan(0.0) ? _2541 : (isnan(_2541) ? 0.0 : max(_2541, 0.0));
    float _2546 = (isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0))) * 0.3183098733425140380859375;
    float _2548 = (isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0))) * 0.3183098733425140380859375;
    float _2555 = ((cbLight._m0[_2504].x * _2510) * _2548) + (((cbLight._m0[_2514].x * _2476) * _2523) * _2546);
    float _2556 = ((_2510 * cbLight._m0[_2504].y) * _2548) + (((cbLight._m0[_2514].y * _2478) * _2523) * _2546);
    float _2557 = ((_2510 * cbLight._m0[_2504].z) * _2548) + (((cbLight._m0[_2514].z * _2480) * _2523) * _2546);
    uvec4 _2561 = floatBitsToUint(cbLight._m0[_2487 + 12u]);
    bool _2563 = _2561.x == 0u;
    float _2665;
    float _2667;
    float _2669;
    if (_2563)
    {
        _2665 = _2555;
        _2667 = _2556;
        _2669 = _2557;
    }
    else
    {
        uint _2673 = _2487 + 6u;
        float _2689 = (dot(vec3(cbLight._m0[_2487 + 2u].xyz), vec3(_1025, _1026, _1027)) * 0.5) + 0.5;
        float _2690 = _2689 * _2689;
        float _4804 = isnan(0.0) ? _2690 : (isnan(_2690) ? 0.0 : max(_2690, 0.0));
        float _2691 = isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0));
        float _2692 = isnan(1.0) ? _2502 : (isnan(_2502) ? 1.0 : min(_2502, 1.0));
        _2665 = (((cbLight._m0[_2673].x * 0.3183098733425140380859375) * _2691) * _2692) + _2555;
        _2667 = (((cbLight._m0[_2673].y * 0.3183098733425140380859375) * _2691) * _2692) + _2556;
        _2669 = (((cbLight._m0[_2673].z * 0.3183098733425140380859375) * _2691) * _2692) + _2557;
    }
    bool _2672 = _2561.y == 0u;
    float _2727;
    float _2729;
    float _2731;
    if (_2672)
    {
        _2727 = _2665;
        _2729 = _2667;
        _2731 = _2669;
    }
    else
    {
        uint _2900 = _2487 + 7u;
        float _2916 = (dot(vec3(cbLight._m0[_2487 + 3u].xyz), vec3(_1025, _1026, _1027)) * 0.5) + 0.5;
        float _2917 = _2916 * _2916;
        float _4820 = isnan(0.0) ? _2917 : (isnan(_2917) ? 0.0 : max(_2917, 0.0));
        float _2918 = isnan(1.0) ? _4820 : (isnan(_4820) ? 1.0 : min(_4820, 1.0));
        float _2919 = isnan(1.0) ? _2503 : (isnan(_2503) ? 1.0 : min(_2503, 1.0));
        _2727 = (((cbLight._m0[_2900].x * 0.3183098733425140380859375) * _2918) * _2919) + _2665;
        _2729 = (((cbLight._m0[_2900].y * 0.3183098733425140380859375) * _2918) * _2919) + _2667;
        _2731 = (((cbLight._m0[_2900].z * 0.3183098733425140380859375) * _2918) * _2919) + _2669;
    }
    uint _2734 = _2487 + 8u;
    float _2747 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2487].w)) * _1028) * 0.949999988079071044921875);
    float _2748 = _2747 * _2747;
    float _2749 = cbLight._m0[_2487].x + _1105;
    float _2750 = cbLight._m0[_2487].y + _1106;
    float _2751 = cbLight._m0[_2487].z + _1107;
    float _2755 = inversesqrt(dot(vec3(_2749, _2750, _2751), vec3(_2749, _2750, _2751)));
    float _2756 = _2755 * _2749;
    float _2757 = _2755 * _2750;
    float _2758 = _2755 * _2751;
    float _2759 = dot(vec3(_1025, _1026, _1027), vec3(cbLight._m0[_2487].xyz));
    float _4836 = isnan(0.0) ? _2759 : (isnan(_2759) ? 0.0 : max(_2759, 0.0));
    float _2762 = isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0));
    float _4847 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
    float _2763 = isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0));
    float _2764 = dot(vec3(_1025, _1026, _1027), vec3(_2756, _2757, _2758));
    float _4858 = isnan(0.0) ? _2764 : (isnan(_2764) ? 0.0 : max(_2764, 0.0));
    float _2767 = isnan(1.0) ? _4858 : (isnan(_4858) ? 1.0 : min(_4858, 1.0));
    float _2768 = dot(vec3(cbLight._m0[_2487].xyz), vec3(_2756, _2757, _2758));
    float _4869 = isnan(0.0) ? _2768 : (isnan(_2768) ? 0.0 : max(_2768, 0.0));
    float _2772 = _2748 * _2748;
    float _2776 = ((_2767 * _2767) * (_2772 + (-1.0))) + 1.0;
    float _2784 = exp2(log2(1.0 - (isnan(1.0) ? _4869 : (isnan(_4869) ? 1.0 : min(_4869, 1.0)))) * 5.0);
    float _2785 = 0.959999978542327880859375 - _1173;
    float _2787 = 0.959999978542327880859375 - _1174;
    float _2788 = 0.959999978542327880859375 - _1175;
    float _2795 = 1.0 - _2748;
    float _2806 = (0.5 / (((_2763 * ((_2762 * _2795) + _2748)) + 9.9999999392252902907785028219223e-09) + (((_2763 * _2795) + _2748) * _2762))) * _2762;
    float _4880 = isnan(0.0) ? _2806 : (isnan(_2806) ? 0.0 : max(_2806, 0.0));
    float _2808 = (isnan(1.0) ? _4880 : (isnan(_4880) ? 1.0 : min(_4880, 1.0))) * (_2772 / ((_2776 * _2776) * 3.141590118408203125));
    uint _2822 = _2487 + 9u;
    float _2833 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2527].w)) * _1028) * 0.949999988079071044921875);
    float _2834 = _2833 * _2833;
    float _2835 = cbLight._m0[_2527].x + _1105;
    float _2836 = cbLight._m0[_2527].y + _1106;
    float _2837 = cbLight._m0[_2527].z + _1107;
    float _2841 = inversesqrt(dot(vec3(_2835, _2836, _2837), vec3(_2835, _2836, _2837)));
    float _2842 = _2841 * _2835;
    float _2843 = _2841 * _2836;
    float _2844 = _2841 * _2837;
    float _2845 = dot(vec3(_1025, _1026, _1027), vec3(cbLight._m0[_2527].xyz));
    float _4891 = isnan(0.0) ? _2845 : (isnan(_2845) ? 0.0 : max(_2845, 0.0));
    float _2848 = isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0));
    float _2849 = dot(vec3(_1025, _1026, _1027), vec3(_2842, _2843, _2844));
    float _4902 = isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : max(_2849, 0.0));
    float _2852 = isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0));
    float _2853 = dot(vec3(cbLight._m0[_2527].xyz), vec3(_2842, _2843, _2844));
    float _4913 = isnan(0.0) ? _2853 : (isnan(_2853) ? 0.0 : max(_2853, 0.0));
    float _2857 = _2834 * _2834;
    float _2861 = ((_2852 * _2852) * (_2857 + (-1.0))) + 1.0;
    float _2868 = exp2(log2(1.0 - (isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0)))) * 5.0);
    float _2875 = 1.0 - _2834;
    float _2885 = (0.5 / (((_2763 * ((_2848 * _2875) + _2834)) + 9.9999999392252902907785028219223e-09) + (((_2763 * _2875) + _2834) * _2848))) * _2848;
    float _4924 = isnan(0.0) ? _2885 : (isnan(_2885) ? 0.0 : max(_2885, 0.0));
    float _2887 = (isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0))) * (_2857 / ((_2861 * _2861) * 3.141590118408203125));
    float _2897 = (((((_2868 * _2785) + _1176) * cbLight._m0[_2822].x) * _2887) * _2510) + ((((cbLight._m0[_2734].x * _2476) * ((_2784 * _2785) + _1176)) * _2808) * _2523);
    float _2898 = (((((_2868 * _2787) + _1178) * cbLight._m0[_2822].y) * _2887) * _2510) + ((((cbLight._m0[_2734].y * _2478) * ((_2784 * _2787) + _1178)) * _2808) * _2523);
    float _2899 = (((((_2868 * _2788) + _1179) * cbLight._m0[_2822].z) * _2887) * _2510) + ((((cbLight._m0[_2734].z * _2480) * ((_2784 * _2788) + _1179)) * _2808) * _2523);
    float _2955;
    float _2957;
    float _2959;
    if (_2563)
    {
        _2955 = _2897;
        _2957 = _2898;
        _2959 = _2899;
    }
    else
    {
        uint _2961 = _2487 + 2u;
        uint _2965 = _2487 + 10u;
        float _2979 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2961].w)) * _1028) * 0.949999988079071044921875);
        float _2980 = _2979 * _2979;
        float _2981 = cbLight._m0[_2961].x + _1105;
        float _2982 = cbLight._m0[_2961].y + _1106;
        float _2983 = cbLight._m0[_2961].z + _1107;
        float _2987 = inversesqrt(dot(vec3(_2981, _2982, _2983), vec3(_2981, _2982, _2983)));
        float _2988 = _2987 * _2981;
        float _2989 = _2987 * _2982;
        float _2990 = _2987 * _2983;
        float _2991 = dot(vec3(_1025, _1026, _1027), vec3(cbLight._m0[_2961].xyz));
        float _4935 = isnan(0.0) ? _2991 : (isnan(_2991) ? 0.0 : max(_2991, 0.0));
        float _2994 = isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0));
        float _2995 = dot(vec3(_1025, _1026, _1027), vec3(_2988, _2989, _2990));
        float _4946 = isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : max(_2995, 0.0));
        float _2998 = isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0));
        float _2999 = dot(vec3(cbLight._m0[_2961].xyz), vec3(_2988, _2989, _2990));
        float _4957 = isnan(0.0) ? _2999 : (isnan(_2999) ? 0.0 : max(_2999, 0.0));
        float _3003 = _2980 * _2980;
        float _3007 = ((_2998 * _2998) * (_3003 + (-1.0))) + 1.0;
        float _3014 = exp2(log2(1.0 - (isnan(1.0) ? _4957 : (isnan(_4957) ? 1.0 : min(_4957, 1.0)))) * 5.0);
        float _3021 = 1.0 - _2980;
        float _3031 = (0.5 / (((_2763 * ((_2994 * _3021) + _2980)) + 9.9999999392252902907785028219223e-09) + (((_2763 * _3021) + _2980) * _2994))) * _2994;
        float _4968 = isnan(0.0) ? _3031 : (isnan(_3031) ? 0.0 : max(_3031, 0.0));
        float _3033 = (isnan(1.0) ? _4968 : (isnan(_4968) ? 1.0 : min(_4968, 1.0))) * (_3003 / ((_3007 * _3007) * 3.141590118408203125));
        float _3034 = isnan(1.0) ? _2502 : (isnan(_2502) ? 1.0 : min(_2502, 1.0));
        _2955 = (((((_3014 * _2785) + _1176) * cbLight._m0[_2965].x) * _3033) * _3034) + _2897;
        _2957 = (((((_3014 * _2787) + _1178) * cbLight._m0[_2965].y) * _3033) * _3034) + _2898;
        _2959 = (((((_3014 * _2788) + _1179) * cbLight._m0[_2965].z) * _3033) * _3034) + _2899;
    }
    float _3065;
    float _3067;
    float _3069;
    if (_2672)
    {
        _3065 = _2955;
        _3067 = _2957;
        _3069 = _2959;
    }
    else
    {
        uint _3076 = _2487 + 3u;
        uint _3080 = _2487 + 11u;
        float _3094 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3076].w)) * _1028) * 0.949999988079071044921875);
        float _3095 = _3094 * _3094;
        float _3096 = cbLight._m0[_3076].x + _1105;
        float _3097 = cbLight._m0[_3076].y + _1106;
        float _3098 = cbLight._m0[_3076].z + _1107;
        float _3102 = inversesqrt(dot(vec3(_3096, _3097, _3098), vec3(_3096, _3097, _3098)));
        float _3103 = _3102 * _3096;
        float _3104 = _3102 * _3097;
        float _3105 = _3102 * _3098;
        float _3106 = dot(vec3(_1025, _1026, _1027), vec3(cbLight._m0[_3076].xyz));
        float _4984 = isnan(0.0) ? _3106 : (isnan(_3106) ? 0.0 : max(_3106, 0.0));
        float _3109 = isnan(1.0) ? _4984 : (isnan(_4984) ? 1.0 : min(_4984, 1.0));
        float _3110 = dot(vec3(_1025, _1026, _1027), vec3(_3103, _3104, _3105));
        float _4995 = isnan(0.0) ? _3110 : (isnan(_3110) ? 0.0 : max(_3110, 0.0));
        float _3113 = isnan(1.0) ? _4995 : (isnan(_4995) ? 1.0 : min(_4995, 1.0));
        float _3114 = dot(vec3(cbLight._m0[_3076].xyz), vec3(_3103, _3104, _3105));
        float _5006 = isnan(0.0) ? _3114 : (isnan(_3114) ? 0.0 : max(_3114, 0.0));
        float _3118 = _3095 * _3095;
        float _3122 = ((_3113 * _3113) * (_3118 + (-1.0))) + 1.0;
        float _3129 = exp2(log2(1.0 - (isnan(1.0) ? _5006 : (isnan(_5006) ? 1.0 : min(_5006, 1.0)))) * 5.0);
        float _3136 = 1.0 - _3095;
        float _3146 = (0.5 / (((_2763 * ((_3109 * _3136) + _3095)) + 9.9999999392252902907785028219223e-09) + (((_2763 * _3136) + _3095) * _3109))) * _3109;
        float _5017 = isnan(0.0) ? _3146 : (isnan(_3146) ? 0.0 : max(_3146, 0.0));
        float _3148 = (isnan(1.0) ? _5017 : (isnan(_5017) ? 1.0 : min(_5017, 1.0))) * (_3118 / ((_3122 * _3122) * 3.141590118408203125));
        float _3149 = isnan(1.0) ? _2503 : (isnan(_2503) ? 1.0 : min(_2503, 1.0));
        _3065 = (((((_3129 * _2785) + _1176) * cbLight._m0[_3080].x) * _3148) * _3149) + _2955;
        _3067 = (((((_3129 * _2787) + _1178) * cbLight._m0[_3080].y) * _3148) * _3149) + _2957;
        _3069 = (((((_3129 * _2788) + _1179) * cbLight._m0[_3080].z) * _3148) * _3149) + _2959;
    }
    float _3215;
    float _3217;
    float _3219;
    float _3221;
    float _3223;
    float _3225;
    if (_2485.y == 0u)
    {
        uvec4 _3170 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3171 = _3170.x;
        uint _3182 = uint((float(_3170.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1114) / _3171))) + floor(float(uint(cbSceneParam._m0[85u].x * _1113) / _3171)));
        float _3192 = (log2(_2263 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3193 = isnan(0.0) ? _3192 : (isnan(_3192) ? 0.0 : max(_3192, 0.0));
        uint _3196 = uint(isnan(14.0) ? _3193 : (isnan(_3193) ? 14.0 : min(_3193, 14.0)));
        uvec4 _3201 = texelFetch(g_lightClusterGridBuffer, int(((_3196 << 2u) + (_3182 << 6u)) >> 2u));
        uint _3202 = _3201.x;
        uint _3203 = _3170.z;
        float _3282;
        float _3284;
        float _3286;
        float _3288;
        float _3290;
        float _3292;
        if (((((1u << ((_3203 >> 4u) & 15u)) + 4294967295u) & _3202) == 0u) || ((_3203 & 240u) == 0u))
        {
            _3282 = 0.0;
            _3284 = 0.0;
            _3286 = 0.0;
            _3288 = 0.0;
            _3290 = 0.0;
            _3292 = 0.0;
        }
        else
        {
            float _3283;
            float _3285;
            float _3287;
            float _3289;
            float _3291;
            float _3293;
            float _3427 = 0.0;
            float _3428 = 0.0;
            float _3429 = 0.0;
            float _3430 = 0.0;
            float _3431 = 0.0;
            float _3432 = 0.0;
            uint _3433 = 0u;
            uint _3442;
            bool _3443;
            for (;;)
            {
                _3442 = texelFetch(g_lightClassification, int((((_3196 << 5u) + (_3182 << 9u)) + (_3433 << 2u)) >> 2u)).x;
                _3443 = _3442 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3443)
                {
                    frontier_phi_66_pred = _3432;
                    frontier_phi_66_pred_1 = _3431;
                    frontier_phi_66_pred_2 = _3430;
                    frontier_phi_66_pred_3 = _3429;
                    frontier_phi_66_pred_4 = _3428;
                    frontier_phi_66_pred_5 = _3427;
                }
                else
                {
                    float _3551;
                    float _3552;
                    float _3553;
                    float _3554;
                    float _3555;
                    float _3556;
                    uint _3557;
                    _3551 = _3427;
                    _3552 = _3428;
                    _3553 = _3429;
                    _3554 = _3430;
                    _3555 = _3431;
                    _3556 = _3432;
                    _3557 = _3442;
                    float _3483;
                    float _3484;
                    float _3485;
                    float _3486;
                    float _3487;
                    float _3488;
                    for (;;)
                    {
                        uint _3561 = uint(findLSB(_3557)) + (_3433 << 5u);
                        uint _3558 = (_3557 + 4294967295u) & _3557;
                        uint _3563 = _3561 * 48u;
                        vec4 _3577 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3563)).x, texelFetch(g_PointLightRenderingBuffer, int(_3563 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3563 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3563 + 3u)).x));
                        uint _3583 = (_3561 * 48u) + 4u;
                        vec4 _3596 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3583)).x, texelFetch(g_PointLightRenderingBuffer, int(_3583 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3583 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3583 + 3u)).x));
                        uint _3602 = (_3561 * 48u) + 8u;
                        vec3 _3613 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3602)).x, texelFetch(g_PointLightRenderingBuffer, int(_3602 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3602 + 2u)).x));
                        float _3617 = _3577.x - _2261;
                        float _3618 = _3577.y - _2262;
                        float _3619 = _3577.z - _2263;
                        float _3620 = dot(vec3(_3617, _3618, _3619), vec3(_3617, _3618, _3619));
                        float _3623 = inversesqrt(_3620);
                        float _3624 = _3623 * _3617;
                        float _3625 = _3623 * _3618;
                        float _3626 = _3623 * _3619;
                        float _3627 = dot(vec3(_1132, _1135, _1138), vec3(_3624, _3625, _3626));
                        float _3632 = 1.0 - (_3620 * _3577.w);
                        float _5043 = isnan(0.0) ? _3632 : (isnan(_3632) ? 0.0 : max(_3632, 0.0));
                        float _3633 = isnan(1.0) ? _5043 : (isnan(_5043) ? 1.0 : min(_5043, 1.0));
                        float _3634 = sqrt(_3620) * _3596.w;
                        float _3637 = 1.39999997615814208984375 / (_3634 + 1.39999997615814208984375);
                        float _3638 = _3637 * _3637;
                        float _3641 = ((1.0 - _3638) * _3627) + _3638;
                        float _3644 = _3634 * _3634;
                        float _3648 = ((isnan(0.0) ? _3641 : (isnan(_3641) ? 0.0 : max(_3641, 0.0))) * _3633) / ((_3644 * 0.699999988079071044921875) + 1.0);
                        float _3652 = (-0.0) - _2261;
                        float _3653 = (-0.0) - _2262;
                        float _3654 = (-0.0) - _2263;
                        float _3658 = inversesqrt(dot(vec3(_3652, _3653, _3654), vec3(_3652, _3653, _3654)));
                        float _3659 = _3658 * _3652;
                        float _3660 = _3658 * _3653;
                        float _3661 = _3658 * _3654;
                        float _3668 = exp2(log2(1.0 / ((_3644 * 3.5) + 5.0)) * 0.25);
                        float _3669 = 1.0 - _1207;
                        float _3676 = sqrt(1.0 - ((1.0 - (_3669 * _3669)) * (1.0 - (_3668 * _3668))));
                        float _3677 = _3676 * _3676;
                        float _3678 = _3677 * _3677;
                        float _3679 = _3659 + _3624;
                        float _3680 = _3660 + _3625;
                        float _3681 = _3661 + _3626;
                        float _3685 = inversesqrt(dot(vec3(_3679, _3680, _3681), vec3(_3679, _3680, _3681)));
                        float _3689 = dot(vec3(_1132, _1135, _1138), vec3(_3659, _3660, _3661));
                        float _5059 = isnan(0.0) ? _3689 : (isnan(_3689) ? 0.0 : max(_3689, 0.0));
                        float _3692 = isnan(1.0) ? _5059 : (isnan(_5059) ? 1.0 : min(_5059, 1.0));
                        float _3693 = dot(vec3(_1132, _1135, _1138), vec3(_3685 * _3679, _3685 * _3680, _3685 * _3681));
                        float _5070 = isnan(0.0) ? _3693 : (isnan(_3693) ? 0.0 : max(_3693, 0.0));
                        float _3696 = isnan(1.0) ? _5070 : (isnan(_5070) ? 1.0 : min(_5070, 1.0));
                        float _3700 = ((_3696 * _3696) * (_3678 + (-1.0))) + 1.0;
                        float _3701 = _3637 * _3677;
                        float _3702 = _3701 * _3701;
                        float _3705 = ((1.0 - _3702) * _3627) + _3702;
                        float _5081 = isnan(0.0) ? _3705 : (isnan(_3705) ? 0.0 : max(_3705, 0.0));
                        float _3706 = isnan(1.0) ? _5081 : (isnan(_5081) ? 1.0 : min(_5081, 1.0));
                        float _3707 = 1.0 - _3677;
                        float _3717 = (0.5 / (((_3706 * ((_3692 * _3707) + _3677)) + 9.9999999392252902907785028219223e-09) + (((_3706 * _3707) + _3677) * _3692))) * _3706;
                        float _5092 = isnan(0.0) ? _3717 : (isnan(_3717) ? 0.0 : max(_3717, 0.0));
                        float _3728 = (((_3678 * 3.1415927410125732421875) * (isnan(1.0) ? _5092 : (isnan(_5092) ? 1.0 : min(_5092, 1.0)))) / ((_3700 * _3700) * ((_3644 * 2.1991131305694580078125) + 3.141590118408203125))) * _3633;
                        _3486 = (_3648 * _3596.x) + _3554;
                        _3487 = (_3648 * _3596.y) + _3555;
                        _3488 = (_3648 * _3596.z) + _3556;
                        _3483 = (_3728 * _3613.x) + _3551;
                        _3484 = (_3728 * _3613.y) + _3552;
                        _3485 = (_3728 * _3613.z) + _3553;
                        if (_3558 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3551 = _3483;
                            _3552 = _3484;
                            _3553 = _3485;
                            _3554 = _3486;
                            _3555 = _3487;
                            _3556 = _3488;
                            _3557 = _3558;
                        }
                    }
                    frontier_phi_66_pred = _3488;
                    frontier_phi_66_pred_1 = _3487;
                    frontier_phi_66_pred_2 = _3486;
                    frontier_phi_66_pred_3 = _3485;
                    frontier_phi_66_pred_4 = _3484;
                    frontier_phi_66_pred_5 = _3483;
                }
                _3293 = frontier_phi_66_pred;
                _3291 = frontier_phi_66_pred_1;
                _3289 = frontier_phi_66_pred_2;
                _3287 = frontier_phi_66_pred_3;
                _3285 = frontier_phi_66_pred_4;
                _3283 = frontier_phi_66_pred_5;
                uint _3434 = _3433 + 1u;
                if (_3434 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3427 = _3283;
                    _3428 = _3285;
                    _3429 = _3287;
                    _3430 = _3289;
                    _3431 = _3291;
                    _3432 = _3293;
                    _3433 = _3434;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3282 = _3283;
            _3284 = _3285;
            _3286 = _3287;
            _3288 = _3289;
            _3290 = _3291;
            _3292 = _3293;
        }
        uvec4 _3296 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3297 = _3296.z;
        uint _3299 = (_3297 >> 8u) & 15u;
        float _3395;
        float _3397;
        float _3399;
        float _3401;
        float _3403;
        float _3405;
        if (((4294967295u << _3299) & _3202) == 0u)
        {
            _3395 = _3282;
            _3397 = _3284;
            _3399 = _3286;
            _3401 = _3288;
            _3403 = _3290;
            _3405 = _3292;
        }
        else
        {
            float _3420 = inversesqrt(dot(vec3(_2261, _2262, _2263), vec3(_2261, _2262, _2263)));
            float _3421 = _3420 * _2261;
            float _3422 = _3420 * _2262;
            float _3423 = _3420 * _2263;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3299 < ((_3297 >> 12u) & 15u))
            {
                float _3396;
                float _3398;
                float _3400;
                float _3402;
                float _3404;
                float _3406;
                float _3534 = _3282;
                float _3535 = _3284;
                float _3536 = _3286;
                float _3537 = _3288;
                float _3538 = _3290;
                float _3539 = _3292;
                uint _3540 = _3299;
                uint _3549;
                bool _3550;
                for (;;)
                {
                    _3549 = texelFetch(g_lightClassification, int((((_3196 << 5u) + (_3182 << 9u)) + (_3540 << 2u)) >> 2u)).x;
                    _3550 = _3549 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3550)
                    {
                        frontier_phi_72_pred = _3539;
                        frontier_phi_72_pred_1 = _3538;
                        frontier_phi_72_pred_2 = _3537;
                        frontier_phi_72_pred_3 = _3536;
                        frontier_phi_72_pred_4 = _3535;
                        frontier_phi_72_pred_5 = _3534;
                    }
                    else
                    {
                        float _3733;
                        float _3734;
                        float _3735;
                        float _3736;
                        float _3737;
                        float _3738;
                        float _4026;
                        float _4027;
                        float _4028;
                        float _4029;
                        float _4030;
                        float _4031;
                        float _3746 = _3534;
                        float _3747 = _3535;
                        float _3748 = _3536;
                        float _3749 = _3537;
                        float _3750 = _3538;
                        float _3751 = _3539;
                        uint _3752 = _3549;
                        uint _3753;
                        vec4 _3778;
                        float _3779;
                        vec4 _3794;
                        vec3 _3806;
                        vec4 _3821;
                        vec4 _3836;
                        float _3882;
                        bool _3883;
                        for (;;)
                        {
                            uint _3763 = ((_3540 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3752));
                            _3753 = (_3752 + 4294967295u) & _3752;
                            uint _3765 = _3763 * 40u;
                            _3778 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3765)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3765 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3765 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3765 + 3u)).x));
                            _3779 = _3778.w;
                            uint _3781 = (_3763 * 40u) + 4u;
                            _3794 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3781)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3781 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3781 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3781 + 3u)).x));
                            uint _3796 = (_3763 * 40u) + 8u;
                            _3806 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3796)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3796 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3796 + 2u)).x));
                            uint _3808 = (_3763 * 40u) + 16u;
                            _3821 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3808)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3808 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3808 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3808 + 3u)).x));
                            uint _3823 = (_3763 * 40u) + 20u;
                            _3836 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3823)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3823 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3823 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3823 + 3u)).x));
                            uint _3838 = (_3763 * 40u) + 24u;
                            vec4 _3851 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3838)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3838 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3838 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3838 + 3u)).x));
                            uint _3857 = (_3763 * 40u) + 28u;
                            vec4 _3870 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3857)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3857 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3857 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3857 + 3u)).x));
                            _3882 = fma(_2263, _3870.z, fma(_2262, _3870.y, _3870.x * _2261)) + _3870.w;
                            _3883 = !((fma(_2263, _3851.z, fma(_2262, _3851.y, _3851.x * _2261)) + _3851.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3883)
                            {
                                float _3910 = _3778.x - _2261;
                                float _3911 = _3778.y - _2262;
                                float _3912 = _3778.z - _2263;
                                float _3913 = dot(vec3(_3910, _3911, _3912), vec3(_3910, _3911, _3912));
                                float _3916 = inversesqrt(_3913);
                                float _3917 = _3916 * _3910;
                                float _3918 = _3916 * _3911;
                                float _3919 = _3916 * _3912;
                                float _3923 = 1.0 - (_3913 / (_3779 * _3779));
                                float _5103 = isnan(0.0) ? _3923 : (isnan(_3923) ? 0.0 : max(_3923, 0.0));
                                float _3924 = isnan(1.0) ? _5103 : (isnan(_5103) ? 1.0 : min(_5103, 1.0));
                                float _3928 = sqrt(_3913) * _3794.w;
                                float _3930 = 1.39999997615814208984375 / (_3928 + 1.39999997615814208984375);
                                float _3931 = _3930 * _3930;
                                float _3934 = ((1.0 - _3931) * dot(vec3(_3917, _3918, _3919), vec3(_1132, _1135, _1138))) + _3931;
                                float _3937 = _3928 * _3928;
                                float _3941 = (fma(_2263, _3821.z, fma(_2262, _3821.y, _3821.x * _2261)) + _3821.w) / _3882;
                                float _3942 = (fma(_2263, _3836.z, fma(_2262, _3836.y, _3836.x * _2261)) + _3836.w) / _3882;
                                float _3946 = 1.0 - dot(vec2(_3941, _3942), vec2(_3941, _3942));
                                float _5119 = isnan(0.0) ? _3946 : (isnan(_3946) ? 0.0 : max(_3946, 0.0));
                                float _3947 = isnan(1.0) ? _5119 : (isnan(_5119) ? 1.0 : min(_5119, 1.0));
                                float _3948 = _3947 * (((isnan(0.0) ? _3934 : (isnan(_3934) ? 0.0 : max(_3934, 0.0))) * _3924) / ((_3937 * 0.699999988079071044921875) + 1.0));
                                float _3960 = exp2(log2(1.0 / ((_3937 * 3.5) + 5.0)) * 0.25);
                                float _3961 = 1.0 - _1207;
                                float _3968 = sqrt(1.0 - ((1.0 - (_3961 * _3961)) * (1.0 - (_3960 * _3960))));
                                float _3969 = _3968 * _3968;
                                float _3970 = _3969 * _3969;
                                float _3971 = _3917 - _3421;
                                float _3972 = _3918 - _3422;
                                float _3973 = _3919 - _3423;
                                float _3977 = inversesqrt(dot(vec3(_3971, _3972, _3973), vec3(_3971, _3972, _3973)));
                                float _3981 = dot(vec3(_1132, _1135, _1138), vec3((-0.0) - _3421, (-0.0) - _3422, (-0.0) - _3423));
                                float _5130 = isnan(0.0) ? _3981 : (isnan(_3981) ? 0.0 : max(_3981, 0.0));
                                float _3984 = isnan(1.0) ? _5130 : (isnan(_5130) ? 1.0 : min(_5130, 1.0));
                                float _3985 = dot(vec3(_1132, _1135, _1138), vec3(_3977 * _3971, _3977 * _3972, _3977 * _3973));
                                float _5141 = isnan(0.0) ? _3985 : (isnan(_3985) ? 0.0 : max(_3985, 0.0));
                                float _3988 = isnan(1.0) ? _5141 : (isnan(_5141) ? 1.0 : min(_5141, 1.0));
                                float _3992 = ((_3988 * _3988) * (_3970 + (-1.0))) + 1.0;
                                float _3993 = _3930 * _3969;
                                float _3994 = _3993 * _3993;
                                float _4000 = ((1.0 - _3994) * dot(vec3(_1132, _1135, _1138), vec3(_3917, _3918, _3919))) + _3994;
                                float _5152 = isnan(0.0) ? _4000 : (isnan(_4000) ? 0.0 : max(_4000, 0.0));
                                float _4001 = isnan(1.0) ? _5152 : (isnan(_5152) ? 1.0 : min(_5152, 1.0));
                                float _4002 = 1.0 - _3969;
                                float _4012 = (0.5 / (((_4001 * ((_3984 * _4002) + _3969)) + 9.9999999392252902907785028219223e-09) + (((_4001 * _4002) + _3969) * _3984))) * _4001;
                                float _5163 = isnan(0.0) ? _4012 : (isnan(_4012) ? 0.0 : max(_4012, 0.0));
                                float _4022 = (_3947 * _3924) * (((_3970 * 3.1415927410125732421875) * (isnan(1.0) ? _5163 : (isnan(_5163) ? 1.0 : min(_5163, 1.0)))) / ((_3992 * _3992) * ((_3937 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3948 * _3794.y;
                                frontier_phi_78_pred_1 = _3948 * _3794.x;
                                frontier_phi_78_pred_2 = _4022 * _3806.z;
                                frontier_phi_78_pred_3 = _4022 * _3806.y;
                                frontier_phi_78_pred_4 = _4022 * _3806.x;
                                frontier_phi_78_pred_5 = _3948 * _3794.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4030 = frontier_phi_78_pred;
                            _4029 = frontier_phi_78_pred_1;
                            _4028 = frontier_phi_78_pred_2;
                            _4027 = frontier_phi_78_pred_3;
                            _4026 = frontier_phi_78_pred_4;
                            _4031 = frontier_phi_78_pred_5;
                            _3736 = _4029 + _3749;
                            _3737 = _4030 + _3750;
                            _3738 = _4031 + _3751;
                            _3733 = _4026 + _3746;
                            _3734 = _4027 + _3747;
                            _3735 = _4028 + _3748;
                            if (_3753 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3746 = _3733;
                                _3747 = _3734;
                                _3748 = _3735;
                                _3749 = _3736;
                                _3750 = _3737;
                                _3751 = _3738;
                                _3752 = _3753;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3738;
                        frontier_phi_72_pred_1 = _3737;
                        frontier_phi_72_pred_2 = _3736;
                        frontier_phi_72_pred_3 = _3735;
                        frontier_phi_72_pred_4 = _3734;
                        frontier_phi_72_pred_5 = _3733;
                    }
                    _3406 = frontier_phi_72_pred;
                    _3404 = frontier_phi_72_pred_1;
                    _3402 = frontier_phi_72_pred_2;
                    _3400 = frontier_phi_72_pred_3;
                    _3398 = frontier_phi_72_pred_4;
                    _3396 = frontier_phi_72_pred_5;
                    uint _3541 = _3540 + 1u;
                    if (_3541 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3534 = _3396;
                        _3535 = _3398;
                        _3536 = _3400;
                        _3537 = _3402;
                        _3538 = _3404;
                        _3539 = _3406;
                        _3540 = _3541;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3406;
                frontier_phi_60_61_ladder_1 = _3404;
                frontier_phi_60_61_ladder_2 = _3400;
                frontier_phi_60_61_ladder_3 = _3398;
                frontier_phi_60_61_ladder_4 = _3396;
                frontier_phi_60_61_ladder_5 = _3402;
            }
            else
            {
                frontier_phi_60_61_ladder = _3292;
                frontier_phi_60_61_ladder_1 = _3290;
                frontier_phi_60_61_ladder_2 = _3286;
                frontier_phi_60_61_ladder_3 = _3284;
                frontier_phi_60_61_ladder_4 = _3282;
                frontier_phi_60_61_ladder_5 = _3288;
            }
            _3395 = frontier_phi_60_61_ladder_4;
            _3397 = frontier_phi_60_61_ladder_3;
            _3399 = frontier_phi_60_61_ladder_2;
            _3401 = frontier_phi_60_61_ladder_5;
            _3403 = frontier_phi_60_61_ladder_1;
            _3405 = frontier_phi_60_61_ladder;
        }
        float _3410 = isnan(1.0) ? _1191 : (isnan(_1191) ? 1.0 : min(_1191, 1.0));
        _3215 = (_3410 * _3401) + _2727;
        _3217 = (_3410 * _3403) + _2729;
        _3219 = (_3410 * _3405) + _2731;
        _3221 = ((_3395 * _1176) * _3410) + _3065;
        _3223 = ((_3397 * _1178) * _3410) + _3067;
        _3225 = ((_3399 * _1179) * _3410) + _3069;
    }
    else
    {
        _3215 = _2727;
        _3217 = _2729;
        _3219 = _2731;
        _3221 = _3065;
        _3223 = _3067;
        _3225 = _3069;
    }
    float _5179 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
    float _5190 = isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0));
    float _5201 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
    uint _3245 = _1151 + 6u;
    float _3253 = _1113 / cbSceneParam._m0[86u].x;
    float _3254 = _1114 / cbSceneParam._m0[86u].y;
    vec4 _3268 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3253, _3254, (log2((isnan(cbSceneParam._m0[77u].w) ? _1048 : (isnan(_1048) ? cbSceneParam._m0[77u].w : min(_1048, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3270 = _3268.x;
    float _3271 = _3268.y;
    float _3272 = _3268.z;
    float _3273 = _3268.w;
    float _3345;
    float _3347;
    float _3349;
    float _3351;
    if (_1048 > cbSceneParam._m0[78u].w)
    {
        float _3307 = isnan(_1048) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1048 : min(cbSceneParam._m0[80u].w, _1048));
        float _3308 = _3307 / _1048;
        float _3319 = _3308 * _1098;
        float _3320 = _1099 * _3308;
        float _3321 = (-0.0) - _3320;
        float _3323 = _3308 * _1100;
        float _3325 = (cbSceneParam._m0[77u].w * _3321) / _3307;
        float _3326 = _3325 + cbSceneParam._m0[79u].w;
        float _3327 = cbSceneParam._m0[79u].w - _3320;
        float _3333 = sqrt(((_3319 * _3319) + (_3320 * _3320)) + (_3323 * _3323));
        float _3336 = (1.0 - (cbSceneParam._m0[77u].w / _3307)) * _3333;
        float _3341 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3343 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3496;
        if (abs((_3321 - _3325) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3496 = ((((_3326 > 0.0) ? exp2(_3341 * _3326) : (2.0 - exp2(_3343 * _3326))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3336;
        }
        else
        {
            float _3456 = 1.0 / cbSceneParam._m0[80u].x;
            float _3457 = isnan(_3327) ? _3326 : (isnan(_3326) ? _3327 : max(_3326, _3327));
            float _3458 = isnan(_3327) ? _3326 : (isnan(_3326) ? _3327 : min(_3326, _3327));
            float _3467 = isnan(0.0) ? _3457 : (isnan(_3457) ? 0.0 : min(_3457, 0.0));
            float _3468 = isnan(0.0) ? _3458 : (isnan(_3458) ? 0.0 : min(_3458, 0.0));
            _3496 = ((abs(_3333 / _3321) * cbSceneParam._m0[80u].y) * ((((_3467 - _3468) * 2.0) - ((exp2(_3341 * (isnan(0.0) ? _3457 : (isnan(_3457) ? 0.0 : max(_3457, 0.0)))) - exp2(_3341 * (isnan(0.0) ? _3458 : (isnan(_3458) ? 0.0 : max(_3458, 0.0))))) * _3456)) - ((exp2(_3343 * _3467) - exp2(_3343 * _3468)) * _3456))) + (_3336 * cbSceneParam._m0[80u].z);
        }
        vec4 _3498 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3253, _3254, 1.0), 0.0);
        float _3507 = exp2((_3496 * (-1.44269502162933349609375)) * (1.0 - _3498.w));
        float _3508 = log2(_3507);
        float _3524 = log2(_3273);
        _3345 = (exp2(_3524 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3508 * cbSceneParam._m0[78u].x)) * _3498.x) / cbSceneParam._m0[78u].x)) + _3270;
        _3347 = (exp2(_3524 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3508 * cbSceneParam._m0[78u].y)) * _3498.y) / cbSceneParam._m0[78u].y)) + _3271;
        _3349 = (exp2(_3524 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3508 * cbSceneParam._m0[78u].z)) * _3498.z) / cbSceneParam._m0[78u].z)) + _3272;
        _3351 = _3507 * _3273;
    }
    else
    {
        _3345 = _3270;
        _3347 = _3271;
        _3349 = _3272;
        _3351 = _3273;
    }
    float _3363 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3364 = _3363 == 3.0;
    float _3365 = log2(_3351);
    float _3372 = exp2(_3365 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5179 : (isnan(_5179) ? 1.0 : min(_5179, 1.0))) * (_3215 + ((isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0))) * _1191))) + ((_3221 + ((isnan(0.0) ? _2208 : (isnan(_2208) ? 0.0 : max(_2208, 0.0))) * _1995)) * cbPerFrame._m0[3u].x));
    float _3373 = exp2(_3365 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5190 : (isnan(_5190) ? 1.0 : min(_5190, 1.0))) * (_3217 + ((isnan(0.0) ? _1919 : (isnan(_1919) ? 0.0 : max(_1919, 0.0))) * _1191))) + ((_3223 + ((isnan(0.0) ? _2211 : (isnan(_2211) ? 0.0 : max(_2211, 0.0))) * _1995)) * cbPerFrame._m0[3u].x));
    float _3374 = exp2(_3365 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5201 : (isnan(_5201) ? 1.0 : min(_5201, 1.0))) * (_3219 + ((isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0))) * _1191))) + ((_3225 + ((isnan(0.0) ? _2214 : (isnan(_2214) ? 0.0 : max(_2214, 0.0))) * _1995)) * cbPerFrame._m0[3u].x));
    float _3383 = (_3363 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3383 * (_3364 ? _3372 : (_3372 + (cbSceneParam._m0[72u].w * _3345)));
    SV_Target.y = _3383 * (_3364 ? _3373 : (_3373 + (cbSceneParam._m0[72u].w * _3347)));
    SV_Target.z = _3383 * (_3364 ? _3374 : (_3374 + (cbSceneParam._m0[72u].w * _3349)));
    SV_Target.w = cbInstanceData._m0[_3245].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3245].w;
}


