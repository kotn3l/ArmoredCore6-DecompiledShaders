#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_23;
layout(set = 0, binding = 11) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_7;
layout(set = 0, binding = 14) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_8;
layout(set = 0, binding = 15) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_16;
layout(set = 0, binding = 4) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_17;
layout(set = 0, binding = 5) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_18;
layout(set = 0, binding = 6) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2DArray C_Enemy_ColorMaterial_PF_snp_0_Texture2DArray_0;
layout(set = 0, binding = 17) uniform texture2DArray C_Enemy_ColorMaterial_PF_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 4, component = 2) in float TEXCOORD_6;
layout(location = 4, component = 3) in float TEXCOORD_7;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1542;
float _3943;
float _3944;
float _3945;
float _3946;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _226 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _227 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _228 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _234 = inversesqrt(dot(vec3(_226, _227, _228), vec3(_226, _227, _228)));
    float _241 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _248 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _279 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_1) + cbTextureTilingScale._m0[10u].w));
    vec4 _313 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _317 = _313.z;
    float _328 = exp2(log2((1.0 - _317) * cbMtdParam._m0[26u].w) * cbMtdParam._m0[26u].x);
    float _329 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _330 = isnan(1.0) ? _329 : (isnan(_329) ? 1.0 : min(_329, 1.0));
    vec4 _344 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD_1) + cbTextureTilingScale._m0[13u].w));
    float _356 = exp2(log2(_344.w * cbMtdParam._m0[28u].w) * cbMtdParam._m0[23u].x);
    float _357 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _358 = isnan(1.0) ? _357 : (isnan(_357) ? 1.0 : min(_357, 1.0));
    float _367 = exp2(log2(cbMtdParam._m0[23u].y * _317) * cbMtdParam._m0[22u].y);
    float _368 = isnan(0.0) ? _367 : (isnan(_367) ? 0.0 : max(_367, 0.0));
    float _369 = isnan(1.0) ? _368 : (isnan(_368) ? 1.0 : min(_368, 1.0));
    float _390 = roundEven(5.0 - ((texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w)).x + (-0.02500000037252902984619140625)) * 8.0));
    float _391 = isnan(0.0) ? _390 : (isnan(_390) ? 0.0 : max(_390, 0.0));
    float _392 = isnan(4.0) ? _391 : (isnan(_391) ? 4.0 : min(_391, 4.0));
    float _405 = floor(_392);
    vec4 _408 = texture(sampler2DArray(C_Enemy_ColorMaterial_PF_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[16u].x * TEXCOORD) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_1) + cbTextureTilingScale._m0[16u].w, _405));
    vec4 _432 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _443 = cbMtdParam._m0[9u].x * _432.x;
    float _444 = cbMtdParam._m0[9u].y * _432.y;
    float _445 = cbMtdParam._m0[9u].z * _432.z;
    float _452 = (((cbMtdParam._m0[10u].x * _408.x) - _443) * _369) + _443;
    float _453 = (((cbMtdParam._m0[10u].y * _408.y) - _444) * _369) + _444;
    float _454 = (((cbMtdParam._m0[10u].z * _408.z) - _445) * _369) + _445;
    float _460 = exp2(log2(_313.w) * cbMtdParam._m0[23u].w);
    vec4 _473 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w));
    float _492 = (((cbMtdParam._m0[16u].x * _473.x) - _452) * _460) + _452;
    float _493 = (((cbMtdParam._m0[16u].y * _473.y) - _453) * _460) + _453;
    float _494 = (((cbMtdParam._m0[16u].z * _473.z) - _454) * _460) + _454;
    vec4 _507 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_1) + cbTextureTilingScale._m0[11u].w));
    float _527 = (((cbMtdParam._m0[19u].x * _507.x) - _492) * _358) + _492;
    float _528 = (((cbMtdParam._m0[19u].y * _507.y) - _493) * _358) + _493;
    float _529 = (((cbMtdParam._m0[19u].z * _507.z) - _494) * _358) + _494;
    vec4 _542 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1) + cbTextureTilingScale._m0[6u].w));
    float _567 = (_344.x * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].x * _542.x) - _527) * _330) + _527);
    float _569 = (_344.y * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].y * _542.y) - _528) * _330) + _528);
    float _571 = (_344.z * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].z * _542.z) - _529) * _330) + _529);
    vec4 _584 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1) + cbTextureTilingScale._m0[4u].w));
    float _602 = TEXCOORD_3.x - ((cbMtdParam._m0[24u].x * (1.0 - TEXCOORD_3.x)) * (texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w)).x + 0.00999999977648258209228515625));
    float _604 = _602 * (cbMtdParam._m0[24u].z + 1.0);
    float _3995 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _605 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
    float _612 = (_605 * ((cbMtdParam._m0[11u].x * _584.x) - _567)) + _567;
    float _613 = (((cbMtdParam._m0[11u].y * _584.y) - _569) * _605) + _569;
    float _614 = (((cbMtdParam._m0[11u].z * _584.z) - _571) * _605) + _571;
    float _618 = cbMtdParam._m0[28u].y * TEXCOORD_6;
    float _626 = (_618 - (((_279.x + 0.00999999977648258209228515625) * cbMtdParam._m0[27u].w) * (1.0 - _618))) * (cbMtdParam._m0[28u].x + 1.0);
    float _4006 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
    float _627 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
    float _634 = ((cbMtdParam._m0[21u].x - _612) * _627) + _612;
    float _635 = ((cbMtdParam._m0[21u].y - _613) * _627) + _613;
    float _636 = ((cbMtdParam._m0[21u].z - _614) * _627) + _614;
    float _205[5];
    float _206[5];
    _205[0u] = cbMtdParam._m0[29u].x;
    _206[0u] = cbMtdParam._m0[29u].y;
    _205[1u] = cbMtdParam._m0[31u].x;
    _206[1u] = cbMtdParam._m0[31u].y;
    _205[2u] = cbMtdParam._m0[30u].z;
    _206[2u] = cbMtdParam._m0[30u].w;
    _205[3u] = cbMtdParam._m0[30u].x;
    _206[3u] = cbMtdParam._m0[30u].y;
    _205[4u] = cbMtdParam._m0[29u].z;
    _206[4u] = cbMtdParam._m0[29u].w;
    float _677 = isnan(0.0) ? _392 : (isnan(_392) ? 0.0 : max(_392, 0.0));
    uint _679 = uint(int(isnan(4.0) ? _677 : (isnan(_677) ? 4.0 : min(_677, 4.0))));
    float _686 = ((_206[_679] - cbMtdParam._m0[22u].z) * _369) + cbMtdParam._m0[22u].z;
    float _689 = ((cbMtdParam._m0[22u].w - _686) * _460) + _686;
    float _692 = ((cbMtdParam._m0[25u].y - _689) * _358) + _689;
    float _695 = ((cbMtdParam._m0[26u].y - _692) * _330) + _692;
    float _700 = (cbMtdParam._m0[24u].y + 1.0) * _602;
    float _4027 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
    float _701 = isnan(1.0) ? _4027 : (isnan(_4027) ? 1.0 : min(_4027, 1.0));
    float _703 = _695 - (_695 * _701);
    float _705 = _703 - (_703 * _618);
    vec4 _718 = texture(sampler2DArray(C_Enemy_ColorMaterial_PF_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[17u].x * TEXCOORD) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD_1) + cbTextureTilingScale._m0[17u].w, _405));
    vec4 _736 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD_1) + cbTextureTilingScale._m0[12u].w));
    float _738 = _736.x;
    float _739 = _736.y;
    float _744 = cbMtdParam._m0[22u].x + _736.z;
    float _747 = (((_718.z + _205[_679]) - _744) * _369) + _744;
    vec4 _760 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w));
    float _771 = (((_760.z - _747) + cbMtdParam._m0[28u].z) * _460) + _747;
    float _777 = ((((_317 * 2.0) * _771) - _771) * cbMtdParam._m0[24u].w) + _771;
    vec4 _790 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_1) + cbTextureTilingScale._m0[15u].w));
    float _801 = (((cbMtdParam._m0[23u].z + _790.z) - _777) * _358) + _777;
    vec4 _814 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_1) + cbTextureTilingScale._m0[8u].w));
    float _825 = (((_814.z - _801) + cbMtdParam._m0[26u].z) * _330) + _801;
    vec4 _837 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _849 = ((_837.z - _825) * _701) + _825;
    vec4 _864 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD_1) + cbTextureTilingScale._m0[9u].w));
    float _878 = ((cbMtdParam._m0[27u].z * _618) * ((_864.z * cbMtdParam._m0[27u].y) - _849)) + _849;
    float _893 = ((_718.x - _738) * _369) + _738;
    float _894 = ((_718.y - _739) * _369) + _739;
    float _899 = ((_760.x - _893) * _460) + _893;
    float _900 = ((_760.y - _894) * _460) + _894;
    float _905 = ((_790.x - _899) * _358) + _899;
    float _906 = ((_790.y - _900) * _358) + _900;
    float _915 = ((((_814.x - _905) * _330) + _905) * 2.0) + (-1.0);
    float _916 = ((((_814.y - _906) * _330) + _906) * 2.0) + (-1.0);
    float _917 = dot(vec2(_915, _916), vec2(_915, _916));
    float _4038 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
    float _922 = sqrt(1.0 - (isnan(1.0) ? _4038 : (isnan(_4038) ? 1.0 : min(_4038, 1.0))));
    float _938 = (((cbMtdParam._m0[25u].z * ((_313.x * 2.0) + (-1.0))) + _915) + (((((_837.x * 2.0) + (-1.0)) * TEXCOORD_3.x) * cbMtdParam._m0[25u].w) * _701)) + ((((_864.x * 2.0) + (-1.0)) * _618) * cbMtdParam._m0[27u].x);
    float _939 = (((cbMtdParam._m0[25u].z * ((_313.y * 2.0) + (-1.0))) + _916) + (((((_837.y * 2.0) + (-1.0)) * TEXCOORD_3.y) * cbMtdParam._m0[25u].w) * _701)) + (((cbMtdParam._m0[28u].y * TEXCOORD_7) * ((_864.y * 2.0) + (-1.0))) * cbMtdParam._m0[27u].x);
    float _941 = gl_FragCoord.x * 0.125;
    float _943 = gl_FragCoord.y * 0.125;
    float _953 = fma(_922, _241 * NORMAL.x, fma(_939, _248 * TANGENT.x, (_234 * _226) * _938));
    float _956 = fma(_922, _241 * NORMAL.y, fma(_939, _248 * TANGENT.y, (_234 * _227) * _938));
    float _959 = fma(_922, _241 * NORMAL.z, fma(_939, _248 * TANGENT.z, (_234 * _228) * _938));
    float _963 = inversesqrt(dot(vec3(_953, _956, _959), vec3(_953, _956, _959)));
    float _964 = _963 * _953;
    float _965 = _963 * _956;
    float _966 = _963 * _959;
    float _4049 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    float _967 = isnan(1.0) ? _4049 : (isnan(_4049) ? 1.0 : min(_4049, 1.0));
    float _4060 = isnan(0.0) ? _634 : (isnan(_634) ? 0.0 : max(_634, 0.0));
    float _4071 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    float _4082 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
    float _4093 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    float _971 = isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0));
    if (!(cbMtdParam._m0[25u].x >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_941, _943)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625)))
    {
        discard_state = true;
    }
    float _991 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1031 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1041 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1031);
    float _1042 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1031);
    float _1043 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1031);
    float _1047 = inversesqrt(dot(vec3(_1041, _1042, _1043), vec3(_1041, _1042, _1043)));
    float _1048 = _1041 * _1047;
    float _1049 = _1042 * _1047;
    float _1050 = _1043 * _1047;
    vec4 _1052 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_941, _943));
    float _1054 = _1052.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1224 = sqrt(((_1041 * _1041) + (_1042 * _1042)) + (_1043 * _1043));
        float _1230 = (cbMatDynParam._m0[5u].x * _1224) + cbMatDynParam._m0[5u].y;
        float _4104 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
        float _1231 = isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0));
        float _1235 = (cbMatDynParam._m0[5u].z * _1224) + cbMatDynParam._m0[5u].w;
        float _4115 = isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0))) - _1231)) + _1231) < ((_1054 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1065 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1066 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1084 = fma(_966, cbSceneParam._m0[5u].z, fma(_965, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _964));
    float _1087 = fma(_966, cbSceneParam._m0[6u].z, fma(_965, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _964));
    float _1090 = fma(_966, cbSceneParam._m0[7u].z, fma(_965, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _964));
    uint _1103 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1104 = _1103 + 9u;
    uint _1105 = _1104 + uint(cbMatDynParam._m0[0u].w);
    float _1111 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4060 : (isnan(_4060) ? 1.0 : min(_4060, 1.0)))) * cbInstanceData._m0[_1105].x;
    float _1112 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4071 : (isnan(_4071) ? 1.0 : min(_4071, 1.0)))) * cbInstanceData._m0[_1105].y;
    float _1113 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4082 : (isnan(_4082) ? 1.0 : min(_4082, 1.0)))) * cbInstanceData._m0[_1105].z;
    float _4126 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
    float _1114 = isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0));
    float _4137 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
    float _1115 = isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0));
    float _4148 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
    float _1116 = isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0));
    float _1117 = 1.0 - _971;
    float _1118 = _1114 * _1117;
    float _1119 = _1115 * _1117;
    float _1120 = _1116 * _1117;
    float _1125 = (_1114 + (-0.039999999105930328369140625)) * _971;
    float _1126 = (_1115 + (-0.039999999105930328369140625)) * _971;
    float _1127 = (_1116 + (-0.039999999105930328369140625)) * _971;
    float _1128 = _1125 + 0.039999999105930328369140625;
    float _1130 = _1126 + 0.039999999105930328369140625;
    float _1131 = _1127 + 0.039999999105930328369140625;
    vec4 _1140 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1065, cbSceneParam._m0[86u].y * _1066));
    float _1143 = _1140.x * TEXCOORD_3.w;
    float _1144 = dot(vec3(_964, _965, _966), vec3(_1048, _1049, _1050));
    float _1147 = _1144 * 2.0;
    float _1151 = (_1147 * _964) - _1048;
    float _1152 = (_1147 * _965) - _1049;
    float _1153 = (_1147 * _966) - _1050;
    float _1157 = abs(dot(vec3(_1048, _1049, _1050), vec3(_964, _965, _966)));
    float _4159 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
    float _1159 = sqrt(_967);
    float _1170 = exp2((_1159 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1159 * 3.0));
    float _1176 = (1.0 - _1170) * ((_1159 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1177 = _1170 * _1159;
    float _1205 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1209 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1213 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1541;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    float _1551;
    float _1552;
    float _1553;
    float _1554;
    float _1555;
    float _1556;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1266 = fma(_1213, cbModelParam._m0[26u].z, fma(_1209, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1205));
        float _1270 = fma(_1213, cbModelParam._m0[27u].z, fma(_1209, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1205));
        float _1274 = fma(_1213, cbModelParam._m0[28u].z, fma(_1209, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1205));
        float _1299 = _1205 + _964;
        float _1300 = _1209 + _965;
        float _1301 = _1213 + _966;
        float _1311 = fma(_1301, cbModelParam._m0[26u].z, fma(_1300, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1299)) - _1266;
        float _1312 = fma(_1301, cbModelParam._m0[27u].z, fma(_1300, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1299)) - _1270;
        float _1313 = fma(_1301, cbModelParam._m0[28u].z, fma(_1300, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1299)) - _1274;
        float _1317 = inversesqrt(dot(vec3(_1311, _1312, _1313), vec3(_1311, _1312, _1313)));
        float _1330 = ((_1317 * _1311) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1266 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1331 = ((_1317 * _1312) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1270 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1332 = ((_1317 * _1313) / cbModelParam._m0[34u].z) + ((((((_1274 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1335 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        vec4 _1342 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        vec4 _1349 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        vec4 _1356 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        float _1369 = exp2((_1335.w + (-0.5)) * 20.0) * 2.0;
        float _1370 = _1369 * (_1335.x + (-0.5));
        float _1371 = _1369 * (_1335.y + (-0.5));
        float _1372 = _1369 * (_1335.z + (-0.5));
        float _1379 = exp2((_1342.w + (-0.5)) * 20.0) * 2.0;
        float _1380 = _1379 * (_1342.x + (-0.5));
        float _1381 = _1379 * (_1342.y + (-0.5));
        float _1382 = _1379 * (_1342.z + (-0.5));
        float _1389 = exp2((_1349.w + (-0.5)) * 20.0) * 2.0;
        float _1390 = _1389 * (_1349.x + (-0.5));
        float _1391 = _1389 * (_1349.y + (-0.5));
        float _1392 = _1389 * (_1349.z + (-0.5));
        float _1399 = exp2((_1356.w + (-0.5)) * 20.0) * 2.0;
        float _1400 = _1399 * (_1356.x + (-0.5));
        float _1401 = _1399 * (_1356.y + (-0.5));
        float _1402 = _1399 * (_1356.z + (-0.5));
        float _1403 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1404 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1405 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1406 = _1370 * 0.5;
        float _1407 = _1380 * 0.5;
        float _1408 = _1390 * 0.5;
        float _1409 = dot(vec3(_1406, _1407, _1408), vec3(_1406, _1407, _1408));
        float _1414 = (_1409 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1409);
        float _1423 = (dot(vec3(_964, _965, _966), vec3(_1414 * _1406, _1414 * _1407, _1414 * _1408)) + 1.0) * 0.5;
        float _4185 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1433 = sqrt(((_1407 * _1407) + (_1406 * _1406)) + (_1408 * _1408)) / (_1403 + 9.9999997473787516355514526367188e-06);
        float _4196 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
        float _1434 = isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0));
        float _1435 = _1434 * 2.0;
        float _1439 = (1.0 - _1434) / (_1434 + 1.0);
        float _4207 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1440 = isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0));
        float _1449 = ((((1.0 - _1440) * (_1435 + 2.0)) * exp2(log2(isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0))) * (_1435 + 1.0))) + _1440) * _1403;
        float _1450 = _1371 * 0.5;
        float _1451 = _1381 * 0.5;
        float _1452 = _1391 * 0.5;
        float _1453 = dot(vec3(_1450, _1451, _1452), vec3(_1450, _1451, _1452));
        float _1458 = (_1453 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1453);
        float _1466 = (dot(vec3(_964, _965, _966), vec3(_1458 * _1450, _1458 * _1451, _1458 * _1452)) + 1.0) * 0.5;
        float _4218 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1475 = sqrt(((_1451 * _1451) + (_1450 * _1450)) + (_1452 * _1452)) / (_1404 + 9.9999997473787516355514526367188e-06);
        float _4229 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1476 = isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0));
        float _1477 = _1476 * 2.0;
        float _1481 = (1.0 - _1476) / (_1476 + 1.0);
        float _4240 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1482 = isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0));
        float _1491 = ((((1.0 - _1482) * (_1477 + 2.0)) * exp2(log2(isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0))) * (_1477 + 1.0))) + _1482) * _1404;
        float _1492 = _1372 * 0.5;
        float _1493 = _1382 * 0.5;
        float _1494 = _1392 * 0.5;
        float _1495 = dot(vec3(_1492, _1493, _1494), vec3(_1492, _1493, _1494));
        float _1500 = (_1495 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1495);
        float _1508 = (dot(vec3(_964, _965, _966), vec3(_1500 * _1492, _1500 * _1493, _1500 * _1494)) + 1.0) * 0.5;
        float _4251 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1517 = sqrt(((_1493 * _1493) + (_1492 * _1492)) + (_1494 * _1494)) / (_1405 + 9.9999997473787516355514526367188e-06);
        float _4262 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        float _1518 = isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0));
        float _1519 = _1518 * 2.0;
        float _1523 = (1.0 - _1518) / (_1518 + 1.0);
        float _4273 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1524 = isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0));
        float _1533 = ((((1.0 - _1524) * (_1519 + 2.0)) * exp2(log2(isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0))) * (_1519 + 1.0))) + _1524) * _1405;
        _1541 = _1372;
        _1543 = _1371;
        _1544 = _1370;
        _1545 = _1382;
        _1546 = _1381;
        _1547 = _1380;
        _1548 = _1392;
        _1549 = _1391;
        _1550 = _1390;
        _1551 = _1405;
        _1552 = _1404;
        _1553 = _1403;
        _1554 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0)));
        _1555 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0)));
        _1556 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0)));
    }
    else
    {
        _1541 = _1542;
        _1543 = _1542;
        _1544 = _1542;
        _1545 = _1542;
        _1546 = _1542;
        _1547 = _1542;
        _1548 = _1542;
        _1549 = _1542;
        _1550 = _1542;
        _1551 = _1542;
        _1552 = _1542;
        _1553 = _1542;
        _1554 = 0.0;
        _1555 = 0.0;
        _1556 = 0.0;
    }
    float _1848;
    float _1849;
    float _1850;
    float _1851;
    float _1852;
    float _1853;
    float _1854;
    float _1855;
    float _1856;
    float _1857;
    float _1858;
    float _1859;
    float _1860;
    float _1861;
    float _1862;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1579 = fma(_1213, cbModelParam._m0[30u].z, fma(_1209, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1205));
        float _1583 = fma(_1213, cbModelParam._m0[31u].z, fma(_1209, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1205));
        float _1587 = fma(_1213, cbModelParam._m0[32u].z, fma(_1209, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1205));
        float _1610 = _1205 + _964;
        float _1611 = _1209 + _965;
        float _1612 = _1213 + _966;
        float _1622 = fma(_1612, cbModelParam._m0[30u].z, fma(_1611, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1610)) - _1579;
        float _1623 = fma(_1612, cbModelParam._m0[31u].z, fma(_1611, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1610)) - _1583;
        float _1624 = fma(_1612, cbModelParam._m0[32u].z, fma(_1611, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1610)) - _1587;
        float _1628 = inversesqrt(dot(vec3(_1622, _1623, _1624), vec3(_1622, _1623, _1624)));
        float _1641 = ((_1628 * _1622) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1579 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1642 = ((_1628 * _1623) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1583 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1643 = ((_1628 * _1624) / cbModelParam._m0[35u].z) + ((((((_1587 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1645 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1641, _1642, _1643), 0.0);
        vec4 _1652 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1641, _1642, _1643), 0.0);
        vec4 _1659 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1641, _1642, _1643), 0.0);
        vec4 _1666 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1641, _1642, _1643), 0.0);
        float _1678 = exp2((_1645.w + (-0.5)) * 20.0) * 2.0;
        float _1679 = _1678 * (_1645.x + (-0.5));
        float _1680 = _1678 * (_1645.y + (-0.5));
        float _1681 = _1678 * (_1645.z + (-0.5));
        float _1688 = exp2((_1652.w + (-0.5)) * 20.0) * 2.0;
        float _1689 = _1688 * (_1652.x + (-0.5));
        float _1690 = _1688 * (_1652.y + (-0.5));
        float _1691 = _1688 * (_1652.z + (-0.5));
        float _1698 = exp2((_1659.w + (-0.5)) * 20.0) * 2.0;
        float _1699 = _1698 * (_1659.x + (-0.5));
        float _1700 = _1698 * (_1659.y + (-0.5));
        float _1701 = _1698 * (_1659.z + (-0.5));
        float _1708 = exp2((_1666.w + (-0.5)) * 20.0) * 2.0;
        float _1709 = _1708 * (_1666.x + (-0.5));
        float _1710 = _1708 * (_1666.y + (-0.5));
        float _1711 = _1708 * (_1666.z + (-0.5));
        float _1712 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
        float _1713 = isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0));
        float _1714 = isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0));
        float _1715 = _1679 * 0.5;
        float _1716 = _1689 * 0.5;
        float _1717 = _1699 * 0.5;
        float _1718 = dot(vec3(_1715, _1716, _1717), vec3(_1715, _1716, _1717));
        float _1723 = (_1718 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1718);
        float _1731 = (dot(vec3(_964, _965, _966), vec3(_1723 * _1715, _1723 * _1716, _1723 * _1717)) + 1.0) * 0.5;
        float _4314 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
        float _1740 = sqrt(((_1716 * _1716) + (_1715 * _1715)) + (_1717 * _1717)) / (_1712 + 9.9999997473787516355514526367188e-06);
        float _4325 = isnan(0.0) ? _1740 : (isnan(_1740) ? 0.0 : max(_1740, 0.0));
        float _1741 = isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0));
        float _1742 = _1741 * 2.0;
        float _1746 = (1.0 - _1741) / (_1741 + 1.0);
        float _4336 = isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0));
        float _1747 = isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0));
        float _1756 = ((((1.0 - _1747) * (_1742 + 2.0)) * exp2(log2(isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0))) * (_1742 + 1.0))) + _1747) * _1712;
        float _1757 = _1680 * 0.5;
        float _1758 = _1690 * 0.5;
        float _1759 = _1700 * 0.5;
        float _1760 = dot(vec3(_1757, _1758, _1759), vec3(_1757, _1758, _1759));
        float _1765 = (_1760 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1760);
        float _1773 = (dot(vec3(_964, _965, _966), vec3(_1765 * _1757, _1765 * _1758, _1765 * _1759)) + 1.0) * 0.5;
        float _4347 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
        float _1782 = sqrt(((_1758 * _1758) + (_1757 * _1757)) + (_1759 * _1759)) / (_1713 + 9.9999997473787516355514526367188e-06);
        float _4358 = isnan(0.0) ? _1782 : (isnan(_1782) ? 0.0 : max(_1782, 0.0));
        float _1783 = isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0));
        float _1784 = _1783 * 2.0;
        float _1788 = (1.0 - _1783) / (_1783 + 1.0);
        float _4369 = isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0));
        float _1789 = isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0));
        float _1798 = ((((1.0 - _1789) * (_1784 + 2.0)) * exp2(log2(isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0))) * (_1784 + 1.0))) + _1789) * _1713;
        float _1799 = _1681 * 0.5;
        float _1800 = _1691 * 0.5;
        float _1801 = _1701 * 0.5;
        float _1802 = dot(vec3(_1799, _1800, _1801), vec3(_1799, _1800, _1801));
        float _1807 = (_1802 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1802);
        float _1815 = (dot(vec3(_964, _965, _966), vec3(_1807 * _1799, _1807 * _1800, _1807 * _1801)) + 1.0) * 0.5;
        float _4380 = isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0));
        float _1824 = sqrt(((_1800 * _1800) + (_1799 * _1799)) + (_1801 * _1801)) / (_1714 + 9.9999997473787516355514526367188e-06);
        float _4391 = isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0));
        float _1825 = isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0));
        float _1826 = _1825 * 2.0;
        float _1830 = (1.0 - _1825) / (_1825 + 1.0);
        float _4402 = isnan(0.0) ? _1830 : (isnan(_1830) ? 0.0 : max(_1830, 0.0));
        float _1831 = isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0));
        float _1840 = ((((1.0 - _1831) * (_1826 + 2.0)) * exp2(log2(isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0))) * (_1826 + 1.0))) + _1831) * _1714;
        _1848 = _1681;
        _1849 = _1680;
        _1850 = _1679;
        _1851 = _1691;
        _1852 = _1690;
        _1853 = _1689;
        _1854 = _1701;
        _1855 = _1700;
        _1856 = _1699;
        _1857 = _1714;
        _1858 = _1713;
        _1859 = _1712;
        _1860 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0)));
        _1861 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0)));
        _1862 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0)));
    }
    else
    {
        _1848 = _1542;
        _1849 = _1542;
        _1850 = _1542;
        _1851 = _1542;
        _1852 = _1542;
        _1853 = _1542;
        _1854 = _1542;
        _1855 = _1542;
        _1856 = _1542;
        _1857 = _1542;
        _1858 = _1542;
        _1859 = _1542;
        _1860 = 0.0;
        _1861 = 0.0;
        _1862 = 0.0;
    }
    float _1872 = (cbModelParam._m0[1u].x * (_1860 - _1554)) + _1554;
    float _1873 = (cbModelParam._m0[1u].x * (_1861 - _1555)) + _1555;
    float _1874 = (cbModelParam._m0[1u].x * (_1862 - _1556)) + _1556;
    float _1895 = fma(_1874, cbSceneParam._m0[89u].z, fma(_1873, cbSceneParam._m0[89u].y, _1872 * cbSceneParam._m0[89u].x));
    float _1898 = fma(_1874, cbSceneParam._m0[90u].z, fma(_1873, cbSceneParam._m0[90u].y, _1872 * cbSceneParam._m0[90u].x));
    float _1901 = fma(_1874, cbSceneParam._m0[91u].z, fma(_1873, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1872));
    float _1916 = _1151 * 0.5;
    float _1917 = _1152 * 0.5;
    float _1918 = _1153 * 0.5;
    float _1919 = dot(vec4(_1916, _1917, _1918, 1.0), vec4(_1850, _1853, _1856, _1859));
    float _1922 = dot(vec4(_1916, _1917, _1918, 1.0), vec4(_1849, _1852, _1855, _1858));
    float _1925 = dot(vec4(_1916, _1917, _1918, 1.0), vec4(_1848, _1851, _1854, _1857));
    float _1959;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1932 = dot(vec4(_1916, _1917, _1918, 1.0), vec4(_1541, _1545, _1548, _1551));
        float _1936 = dot(vec4(_1916, _1917, _1918, 1.0), vec4(_1543, _1546, _1549, _1552));
        float _1940 = dot(vec4(_1916, _1917, _1918, 1.0), vec4(_1544, _1547, _1550, _1553));
        float _1947 = dot(vec4(cbModelParam._m0[39u]), vec4(_1916, _1917, _1918, 1.0));
        _1959 = dot(vec3(isnan(0.0) ? _1940 : (isnan(_1940) ? 0.0 : max(_1940, 0.0)), isnan(0.0) ? _1936 : (isnan(_1936) ? 0.0 : max(_1936, 0.0)), isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1947) ? 0.0 : (isnan(0.0) ? _1947 : max(0.0, _1947))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1959 = 1.0;
    }
    float _1970;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1961 = dot(vec4(cbModelParam._m0[40u]), vec4(_1916, _1917, _1918, 1.0));
        _1970 = dot(vec3(isnan(0.0) ? _1919 : (isnan(_1919) ? 0.0 : max(_1919, 0.0)), isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0)), isnan(0.0) ? _1925 : (isnan(_1925) ? 0.0 : max(_1925, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1961) ? 0.0 : (isnan(0.0) ? _1961 : max(0.0, _1961))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1970 = 1.0;
    }
    float _1974 = (_1970 * cbModelParam._m0[1u].x) + (_1959 * (1.0 - cbModelParam._m0[1u].x));
    float _1984 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _967);
    float _1985 = isnan(_1984) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1984 : min(cbModelParam._m0[25u].z, _1984));
    float _2065;
    float _2067;
    float _2069;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2032 = fma(_1213, cbModelParam._m0[13u].z, fma(_1209, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1205)) + cbModelParam._m0[13u].w;
        float _2036 = fma(_1213, cbModelParam._m0[14u].z, fma(_1209, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1205)) + cbModelParam._m0[14u].w;
        float _2040 = fma(_1213, cbModelParam._m0[15u].z, fma(_1209, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1205)) + cbModelParam._m0[15u].w;
        float _2043 = fma(_1153, cbModelParam._m0[13u].z, fma(_1152, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1151));
        float _2046 = fma(_1153, cbModelParam._m0[14u].z, fma(_1152, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1151));
        float _2049 = fma(_1153, cbModelParam._m0[15u].z, fma(_1152, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1151));
        float _2077;
        if (_2043 > 0.0)
        {
            _2077 = abs((1.0 - _2032) / _2043);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_2043 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_2032 + 1.0) / _2043);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _2077 = frontier_phi_19_17_ladder;
        }
        float _2301;
        if (_2046 > 0.0)
        {
            _2301 = abs((1.0 - _2036) / _2046);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2046 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2036 + 1.0) / _2046);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2301 = frontier_phi_28_24_ladder;
        }
        float _2558;
        if (_2049 > 0.0)
        {
            _2558 = abs((1.0 - _2040) / _2049);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2049 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2040 + 1.0) / _2049);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2558 = frontier_phi_40_35_ladder;
        }
        float _2560 = isnan(_2301) ? _2077 : (isnan(_2077) ? _2301 : min(_2077, _2301));
        float _2561 = isnan(_2558) ? _2560 : (isnan(_2560) ? _2558 : min(_2560, _2558));
        float _2565 = (_2561 * _2043) + _2032;
        float _2566 = (_2561 * _2046) + _2036;
        float _2567 = (_2561 * _2049) + _2040;
        float _2568 = _2561 * 9.9999997473787516355514526367188e-05;
        float _2570 = (-1.0) - _2568;
        float _2572 = _2568 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2567 > _2572) || ((_2567 < _2570) || ((_2566 > _2572) || ((_2566 < _2570) || ((_2565 < _2570) || (_2565 > _2572))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2695 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2567, cbModelParam._m0[9u].z, fma(_2566, cbModelParam._m0[9u].y, _2565 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2567, cbModelParam._m0[10u].z, fma(_2566, cbModelParam._m0[10u].y, _2565 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2567, cbModelParam._m0[11u].z, fma(_2566, cbModelParam._m0[11u].y, _2565 * cbModelParam._m0[11u].x))), _1985);
            frontier_phi_18_40_ladder = _2695.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2695.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2695.x * cbModelParam._m0[1u].y;
        }
        _2065 = frontier_phi_18_40_ladder_2;
        _2067 = frontier_phi_18_40_ladder_1;
        _2069 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _2053 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1151, _1152, _1153), _1985);
        _2065 = _2053.x * cbModelParam._m0[1u].y;
        _2067 = _2053.y * cbModelParam._m0[1u].y;
        _2069 = _2053.z * cbModelParam._m0[1u].y;
    }
    float _2073 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _967);
    float _2074 = isnan(_2073) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2073 : min(cbModelParam._m0[25u].w, _2073));
    float _2164;
    float _2166;
    float _2168;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2128 = fma(_1213, cbModelParam._m0[21u].z, fma(_1209, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1205)) + cbModelParam._m0[21u].w;
        float _2132 = fma(_1213, cbModelParam._m0[22u].z, fma(_1209, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1205)) + cbModelParam._m0[22u].w;
        float _2136 = fma(_1213, cbModelParam._m0[23u].z, fma(_1209, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1205)) + cbModelParam._m0[23u].w;
        float _2139 = fma(_1153, cbModelParam._m0[21u].z, fma(_1152, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1151));
        float _2142 = fma(_1153, cbModelParam._m0[22u].z, fma(_1152, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1151));
        float _2145 = fma(_1153, cbModelParam._m0[23u].z, fma(_1152, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1151));
        float _2306;
        if (_2139 > 0.0)
        {
            _2306 = abs((1.0 - _2128) / _2139);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2139 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2128 + 1.0) / _2139);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2306 = frontier_phi_30_26_ladder;
        }
        float _2585;
        if (_2142 > 0.0)
        {
            _2585 = abs((1.0 - _2132) / _2142);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_2142 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_2132 + 1.0) / _2142);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2585 = frontier_phi_42_37_ladder;
        }
        float _2798;
        if (_2145 > 0.0)
        {
            _2798 = abs((1.0 - _2136) / _2145);
        }
        else
        {
            float frontier_phi_51_48_ladder;
            if (_2145 < 0.0)
            {
                frontier_phi_51_48_ladder = abs((_2136 + 1.0) / _2145);
            }
            else
            {
                frontier_phi_51_48_ladder = 5000.0;
            }
            _2798 = frontier_phi_51_48_ladder;
        }
        float _2800 = isnan(_2585) ? _2306 : (isnan(_2306) ? _2585 : min(_2306, _2585));
        float _2801 = isnan(_2798) ? _2800 : (isnan(_2800) ? _2798 : min(_2800, _2798));
        float _2805 = (_2801 * _2139) + _2128;
        float _2806 = (_2801 * _2142) + _2132;
        float _2807 = (_2801 * _2145) + _2136;
        float _2808 = _2801 * 9.9999997473787516355514526367188e-05;
        float _2809 = (-1.0) - _2808;
        float _2811 = _2808 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_2807 > _2811) || ((_2807 < _2809) || ((_2806 > _2811) || ((_2806 < _2809) || ((_2805 < _2809) || (_2805 > _2811))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3006 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2807, cbModelParam._m0[17u].z, fma(_2806, cbModelParam._m0[17u].y, _2805 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2807, cbModelParam._m0[18u].z, fma(_2806, cbModelParam._m0[18u].y, _2805 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2807, cbModelParam._m0[19u].z, fma(_2806, cbModelParam._m0[19u].y, _2805 * cbModelParam._m0[19u].x))), _2074);
            frontier_phi_27_51_ladder = _3006.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _3006.y * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _3006.x * cbModelParam._m0[1u].z;
        }
        _2164 = frontier_phi_27_51_ladder_2;
        _2166 = frontier_phi_27_51_ladder_1;
        _2168 = frontier_phi_27_51_ladder;
    }
    else
    {
        vec4 _2148 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1151, _1152, _1153), _2074);
        _2164 = _2148.x * cbModelParam._m0[1u].z;
        _2166 = _2148.y * cbModelParam._m0[1u].z;
        _2168 = _2148.z * cbModelParam._m0[1u].z;
    }
    float _2181 = (((_1176 * _1128) + _1177) * _1143) * ((cbModelParam._m0[1u].w * (_2164 - _2065)) + _2065);
    float _2183 = (((_1176 * _1130) + _1177) * _1143) * ((cbModelParam._m0[1u].w * (_2166 - _2067)) + _2067);
    float _2185 = (((_1176 * _1131) + _1177) * _1143) * ((cbModelParam._m0[1u].w * (_2168 - _2069)) + _2069);
    float _2188 = fma(_2185, cbSceneParam._m0[89u].z, fma(_2183, cbSceneParam._m0[89u].y, _2181 * cbSceneParam._m0[89u].x));
    float _2191 = fma(_2185, cbSceneParam._m0[90u].z, fma(_2183, cbSceneParam._m0[90u].y, _2181 * cbSceneParam._m0[90u].x));
    float _2194 = fma(_2185, cbSceneParam._m0[91u].z, fma(_2183, cbSceneParam._m0[91u].y, _2181 * cbSceneParam._m0[91u].x));
    vec4 _2202 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1065, _1066));
    float _2204 = _2202.w;
    float _2216 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2204);
    float _2217 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2204);
    float _2218 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2204);
    uvec4 _2222 = floatBitsToUint(cbInstanceData._m0[_1103 + 5u]);
    uint _2224 = _2222.x * 14u;
    uint _2225 = _2224 + 13u;
    float _2232 = _1143 + (-1.0);
    float _2237 = (cbLight._m0[_2225].x * _2232) + 1.0;
    float _2238 = (cbLight._m0[_2225].y * _2232) + 1.0;
    float _2239 = (cbLight._m0[_2225].z * _2232) + 1.0;
    float _2240 = (cbLight._m0[_2225].w * _2232) + 1.0;
    uint _2241 = _2224 + 5u;
    float _2247 = isnan(1.0) ? _2238 : (isnan(_2238) ? 1.0 : min(_2238, 1.0));
    uint _2251 = _2224 + 4u;
    float _2260 = isnan(1.0) ? _2237 : (isnan(_2237) ? 1.0 : min(_2237, 1.0));
    uint _2264 = _2224 | 1u;
    float _2275 = dot(vec3(cbLight._m0[_2224].xyz), vec3(_964, _965, _966));
    float _2278 = dot(vec3(cbLight._m0[_2264].xyz), vec3(_964, _965, _966));
    float _4538 = isnan(0.0) ? _2275 : (isnan(_2275) ? 0.0 : max(_2275, 0.0));
    float _4549 = isnan(0.0) ? _2278 : (isnan(_2278) ? 0.0 : max(_2278, 0.0));
    float _2283 = (isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0))) * 0.3183098733425140380859375;
    float _2285 = (isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0))) * 0.3183098733425140380859375;
    float _2292 = ((cbLight._m0[_2241].x * _2247) * _2285) + (((cbLight._m0[_2251].x * _2216) * _2260) * _2283);
    float _2293 = ((_2247 * cbLight._m0[_2241].y) * _2285) + (((cbLight._m0[_2251].y * _2217) * _2260) * _2283);
    float _2294 = ((_2247 * cbLight._m0[_2241].z) * _2285) + (((cbLight._m0[_2251].z * _2218) * _2260) * _2283);
    uvec4 _2298 = floatBitsToUint(cbLight._m0[_2224 + 12u]);
    bool _2300 = _2298.x == 0u;
    float _2311;
    float _2313;
    float _2315;
    if (_2300)
    {
        _2311 = _2292;
        _2313 = _2293;
        _2315 = _2294;
    }
    else
    {
        uint _2319 = _2224 + 6u;
        float _2335 = (dot(vec3(cbLight._m0[_2224 + 2u].xyz), vec3(_964, _965, _966)) * 0.5) + 0.5;
        float _2336 = _2335 * _2335;
        float _4560 = isnan(0.0) ? _2336 : (isnan(_2336) ? 0.0 : max(_2336, 0.0));
        float _2337 = isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0));
        float _2338 = isnan(1.0) ? _2239 : (isnan(_2239) ? 1.0 : min(_2239, 1.0));
        _2311 = (((cbLight._m0[_2319].x * 0.3183098733425140380859375) * _2337) * _2338) + _2292;
        _2313 = (((cbLight._m0[_2319].y * 0.3183098733425140380859375) * _2337) * _2338) + _2293;
        _2315 = (((cbLight._m0[_2319].z * 0.3183098733425140380859375) * _2337) * _2338) + _2294;
    }
    bool _2318 = _2298.y == 0u;
    float _2356;
    float _2358;
    float _2360;
    if (_2318)
    {
        _2356 = _2311;
        _2358 = _2313;
        _2360 = _2315;
    }
    else
    {
        uint _2529 = _2224 + 7u;
        float _2545 = (dot(vec3(cbLight._m0[_2224 + 3u].xyz), vec3(_964, _965, _966)) * 0.5) + 0.5;
        float _2546 = _2545 * _2545;
        float _4576 = isnan(0.0) ? _2546 : (isnan(_2546) ? 0.0 : max(_2546, 0.0));
        float _2547 = isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0));
        float _2548 = isnan(1.0) ? _2240 : (isnan(_2240) ? 1.0 : min(_2240, 1.0));
        _2356 = (((cbLight._m0[_2529].x * 0.3183098733425140380859375) * _2547) * _2548) + _2311;
        _2358 = (((cbLight._m0[_2529].y * 0.3183098733425140380859375) * _2547) * _2548) + _2313;
        _2360 = (((cbLight._m0[_2529].z * 0.3183098733425140380859375) * _2547) * _2548) + _2315;
    }
    uint _2363 = _2224 + 8u;
    float _2376 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2224].w)) * _967) * 0.949999988079071044921875);
    float _2377 = _2376 * _2376;
    float _2378 = cbLight._m0[_2224].x + _1048;
    float _2379 = cbLight._m0[_2224].y + _1049;
    float _2380 = cbLight._m0[_2224].z + _1050;
    float _2384 = inversesqrt(dot(vec3(_2378, _2379, _2380), vec3(_2378, _2379, _2380)));
    float _2385 = _2384 * _2378;
    float _2386 = _2384 * _2379;
    float _2387 = _2384 * _2380;
    float _2388 = dot(vec3(_964, _965, _966), vec3(cbLight._m0[_2224].xyz));
    float _4592 = isnan(0.0) ? _2388 : (isnan(_2388) ? 0.0 : max(_2388, 0.0));
    float _2391 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
    float _4603 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
    float _2392 = isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0));
    float _2393 = dot(vec3(_964, _965, _966), vec3(_2385, _2386, _2387));
    float _4614 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
    float _2396 = isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0));
    float _2397 = dot(vec3(cbLight._m0[_2224].xyz), vec3(_2385, _2386, _2387));
    float _4625 = isnan(0.0) ? _2397 : (isnan(_2397) ? 0.0 : max(_2397, 0.0));
    float _2401 = _2377 * _2377;
    float _2405 = ((_2396 * _2396) * (_2401 + (-1.0))) + 1.0;
    float _2413 = exp2(log2(1.0 - (isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0)))) * 5.0);
    float _2414 = 0.959999978542327880859375 - _1125;
    float _2416 = 0.959999978542327880859375 - _1126;
    float _2417 = 0.959999978542327880859375 - _1127;
    float _2424 = 1.0 - _2377;
    float _2435 = (0.5 / (((_2392 * ((_2391 * _2424) + _2377)) + 9.9999999392252902907785028219223e-09) + (((_2392 * _2424) + _2377) * _2391))) * _2391;
    float _4636 = isnan(0.0) ? _2435 : (isnan(_2435) ? 0.0 : max(_2435, 0.0));
    float _2437 = (isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0))) * (_2401 / ((_2405 * _2405) * 3.141590118408203125));
    uint _2451 = _2224 + 9u;
    float _2462 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2264].w)) * _967) * 0.949999988079071044921875);
    float _2463 = _2462 * _2462;
    float _2464 = cbLight._m0[_2264].x + _1048;
    float _2465 = cbLight._m0[_2264].y + _1049;
    float _2466 = cbLight._m0[_2264].z + _1050;
    float _2470 = inversesqrt(dot(vec3(_2464, _2465, _2466), vec3(_2464, _2465, _2466)));
    float _2471 = _2470 * _2464;
    float _2472 = _2470 * _2465;
    float _2473 = _2470 * _2466;
    float _2474 = dot(vec3(_964, _965, _966), vec3(cbLight._m0[_2264].xyz));
    float _4647 = isnan(0.0) ? _2474 : (isnan(_2474) ? 0.0 : max(_2474, 0.0));
    float _2477 = isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0));
    float _2478 = dot(vec3(_964, _965, _966), vec3(_2471, _2472, _2473));
    float _4658 = isnan(0.0) ? _2478 : (isnan(_2478) ? 0.0 : max(_2478, 0.0));
    float _2481 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
    float _2482 = dot(vec3(cbLight._m0[_2264].xyz), vec3(_2471, _2472, _2473));
    float _4669 = isnan(0.0) ? _2482 : (isnan(_2482) ? 0.0 : max(_2482, 0.0));
    float _2486 = _2463 * _2463;
    float _2490 = ((_2481 * _2481) * (_2486 + (-1.0))) + 1.0;
    float _2497 = exp2(log2(1.0 - (isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0)))) * 5.0);
    float _2504 = 1.0 - _2463;
    float _2514 = (0.5 / (((_2392 * ((_2477 * _2504) + _2463)) + 9.9999999392252902907785028219223e-09) + (((_2392 * _2504) + _2463) * _2477))) * _2477;
    float _4680 = isnan(0.0) ? _2514 : (isnan(_2514) ? 0.0 : max(_2514, 0.0));
    float _2516 = (isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0))) * (_2486 / ((_2490 * _2490) * 3.141590118408203125));
    float _2526 = (((((_2497 * _2414) + _1128) * cbLight._m0[_2451].x) * _2516) * _2247) + ((((cbLight._m0[_2363].x * _2216) * ((_2413 * _2414) + _1128)) * _2437) * _2260);
    float _2527 = (((((_2497 * _2416) + _1130) * cbLight._m0[_2451].y) * _2516) * _2247) + ((((cbLight._m0[_2363].y * _2217) * ((_2413 * _2416) + _1130)) * _2437) * _2260);
    float _2528 = (((((_2497 * _2417) + _1131) * cbLight._m0[_2451].z) * _2516) * _2247) + ((((cbLight._m0[_2363].z * _2218) * ((_2413 * _2417) + _1131)) * _2437) * _2260);
    float _2590;
    float _2592;
    float _2594;
    if (_2300)
    {
        _2590 = _2526;
        _2592 = _2527;
        _2594 = _2528;
    }
    else
    {
        uint _2596 = _2224 + 2u;
        uint _2600 = _2224 + 10u;
        float _2614 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2596].w)) * _967) * 0.949999988079071044921875);
        float _2615 = _2614 * _2614;
        float _2616 = cbLight._m0[_2596].x + _1048;
        float _2617 = cbLight._m0[_2596].y + _1049;
        float _2618 = cbLight._m0[_2596].z + _1050;
        float _2622 = inversesqrt(dot(vec3(_2616, _2617, _2618), vec3(_2616, _2617, _2618)));
        float _2623 = _2622 * _2616;
        float _2624 = _2622 * _2617;
        float _2625 = _2622 * _2618;
        float _2626 = dot(vec3(_964, _965, _966), vec3(cbLight._m0[_2596].xyz));
        float _4691 = isnan(0.0) ? _2626 : (isnan(_2626) ? 0.0 : max(_2626, 0.0));
        float _2629 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
        float _2630 = dot(vec3(_964, _965, _966), vec3(_2623, _2624, _2625));
        float _4702 = isnan(0.0) ? _2630 : (isnan(_2630) ? 0.0 : max(_2630, 0.0));
        float _2633 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
        float _2634 = dot(vec3(cbLight._m0[_2596].xyz), vec3(_2623, _2624, _2625));
        float _4713 = isnan(0.0) ? _2634 : (isnan(_2634) ? 0.0 : max(_2634, 0.0));
        float _2638 = _2615 * _2615;
        float _2642 = ((_2633 * _2633) * (_2638 + (-1.0))) + 1.0;
        float _2649 = exp2(log2(1.0 - (isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0)))) * 5.0);
        float _2656 = 1.0 - _2615;
        float _2666 = (0.5 / (((_2392 * ((_2629 * _2656) + _2615)) + 9.9999999392252902907785028219223e-09) + (((_2392 * _2656) + _2615) * _2629))) * _2629;
        float _4724 = isnan(0.0) ? _2666 : (isnan(_2666) ? 0.0 : max(_2666, 0.0));
        float _2668 = (isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0))) * (_2638 / ((_2642 * _2642) * 3.141590118408203125));
        float _2669 = isnan(1.0) ? _2239 : (isnan(_2239) ? 1.0 : min(_2239, 1.0));
        _2590 = (((((_2649 * _2414) + _1128) * cbLight._m0[_2600].x) * _2668) * _2669) + _2526;
        _2592 = (((((_2649 * _2416) + _1130) * cbLight._m0[_2600].y) * _2668) * _2669) + _2527;
        _2594 = (((((_2649 * _2417) + _1131) * cbLight._m0[_2600].z) * _2668) * _2669) + _2528;
    }
    float _2704;
    float _2706;
    float _2708;
    if (_2318)
    {
        _2704 = _2590;
        _2706 = _2592;
        _2708 = _2594;
    }
    else
    {
        uint _2715 = _2224 + 3u;
        uint _2719 = _2224 + 11u;
        float _2733 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2715].w)) * _967) * 0.949999988079071044921875);
        float _2734 = _2733 * _2733;
        float _2735 = cbLight._m0[_2715].x + _1048;
        float _2736 = cbLight._m0[_2715].y + _1049;
        float _2737 = cbLight._m0[_2715].z + _1050;
        float _2741 = inversesqrt(dot(vec3(_2735, _2736, _2737), vec3(_2735, _2736, _2737)));
        float _2742 = _2741 * _2735;
        float _2743 = _2741 * _2736;
        float _2744 = _2741 * _2737;
        float _2745 = dot(vec3(_964, _965, _966), vec3(cbLight._m0[_2715].xyz));
        float _4740 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0));
        float _2748 = isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0));
        float _2749 = dot(vec3(_964, _965, _966), vec3(_2742, _2743, _2744));
        float _4751 = isnan(0.0) ? _2749 : (isnan(_2749) ? 0.0 : max(_2749, 0.0));
        float _2752 = isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0));
        float _2753 = dot(vec3(cbLight._m0[_2715].xyz), vec3(_2742, _2743, _2744));
        float _4762 = isnan(0.0) ? _2753 : (isnan(_2753) ? 0.0 : max(_2753, 0.0));
        float _2757 = _2734 * _2734;
        float _2761 = ((_2752 * _2752) * (_2757 + (-1.0))) + 1.0;
        float _2768 = exp2(log2(1.0 - (isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0)))) * 5.0);
        float _2775 = 1.0 - _2734;
        float _2785 = (0.5 / (((_2392 * ((_2748 * _2775) + _2734)) + 9.9999999392252902907785028219223e-09) + (((_2392 * _2775) + _2734) * _2748))) * _2748;
        float _4773 = isnan(0.0) ? _2785 : (isnan(_2785) ? 0.0 : max(_2785, 0.0));
        float _2787 = (isnan(1.0) ? _4773 : (isnan(_4773) ? 1.0 : min(_4773, 1.0))) * (_2757 / ((_2761 * _2761) * 3.141590118408203125));
        float _2788 = isnan(1.0) ? _2240 : (isnan(_2240) ? 1.0 : min(_2240, 1.0));
        _2704 = (((((_2768 * _2414) + _1128) * cbLight._m0[_2719].x) * _2787) * _2788) + _2590;
        _2706 = (((((_2768 * _2416) + _1130) * cbLight._m0[_2719].y) * _2787) * _2788) + _2592;
        _2708 = (((((_2768 * _2417) + _1131) * cbLight._m0[_2719].z) * _2787) * _2788) + _2594;
    }
    float _2923;
    float _2925;
    float _2927;
    float _2929;
    float _2931;
    float _2933;
    if (_2222.y == 0u)
    {
        float _2863 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2864 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2863;
        float _2865 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2863;
        float _2866 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2863;
        uvec4 _2878 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2879 = _2878.x;
        uint _2890 = uint((float(_2878.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1066) / _2879))) + floor(float(uint(cbSceneParam._m0[85u].x * _1065) / _2879)));
        float _2900 = (log2(_2866 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2901 = isnan(0.0) ? _2900 : (isnan(_2900) ? 0.0 : max(_2900, 0.0));
        uint _2904 = uint(isnan(14.0) ? _2901 : (isnan(_2901) ? 14.0 : min(_2901, 14.0)));
        uvec4 _2909 = texelFetch(g_lightClusterGridBuffer, int(((_2904 << 2u) + (_2890 << 6u)) >> 2u));
        uint _2910 = _2909.x;
        uint _2911 = _2878.z;
        float _3011;
        float _3013;
        float _3015;
        float _3017;
        float _3019;
        float _3021;
        if (((((1u << ((_2911 >> 4u) & 15u)) + 4294967295u) & _2910) == 0u) || ((_2911 & 240u) == 0u))
        {
            _3011 = 0.0;
            _3013 = 0.0;
            _3015 = 0.0;
            _3017 = 0.0;
            _3019 = 0.0;
            _3021 = 0.0;
        }
        else
        {
            float _3012;
            float _3014;
            float _3016;
            float _3018;
            float _3020;
            float _3022;
            float _3164 = 0.0;
            float _3165 = 0.0;
            float _3166 = 0.0;
            float _3167 = 0.0;
            float _3168 = 0.0;
            float _3169 = 0.0;
            uint _3170 = 0u;
            uint _3179;
            bool _3180;
            for (;;)
            {
                _3179 = texelFetch(g_lightClassification, int((((_2904 << 5u) + (_2890 << 9u)) + (_3170 << 2u)) >> 2u)).x;
                _3180 = _3179 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3180)
                {
                    frontier_phi_68_pred = _3164;
                    frontier_phi_68_pred_1 = _3169;
                    frontier_phi_68_pred_2 = _3168;
                    frontier_phi_68_pred_3 = _3167;
                    frontier_phi_68_pred_4 = _3166;
                    frontier_phi_68_pred_5 = _3165;
                }
                else
                {
                    float _3309;
                    float _3310;
                    float _3311;
                    float _3312;
                    float _3313;
                    float _3314;
                    uint _3315;
                    _3309 = _3164;
                    _3310 = _3165;
                    _3311 = _3166;
                    _3312 = _3167;
                    _3313 = _3168;
                    _3314 = _3169;
                    _3315 = _3179;
                    float _3236;
                    float _3237;
                    float _3238;
                    float _3239;
                    float _3240;
                    float _3241;
                    for (;;)
                    {
                        uint _3319 = uint(findLSB(_3315)) + (_3170 << 5u);
                        uint _3316 = (_3315 + 4294967295u) & _3315;
                        uint _3321 = _3319 * 48u;
                        vec4 _3335 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3321)).x, texelFetch(g_PointLightRenderingBuffer, int(_3321 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3321 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3321 + 3u)).x));
                        uint _3341 = (_3319 * 48u) + 4u;
                        vec4 _3354 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3341)).x, texelFetch(g_PointLightRenderingBuffer, int(_3341 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3341 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3341 + 3u)).x));
                        uint _3360 = (_3319 * 48u) + 8u;
                        vec3 _3371 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3360)).x, texelFetch(g_PointLightRenderingBuffer, int(_3360 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3360 + 2u)).x));
                        float _3375 = _3335.x - _2864;
                        float _3376 = _3335.y - _2865;
                        float _3377 = _3335.z - _2866;
                        float _3378 = dot(vec3(_3375, _3376, _3377), vec3(_3375, _3376, _3377));
                        float _3381 = inversesqrt(_3378);
                        float _3382 = _3381 * _3375;
                        float _3383 = _3381 * _3376;
                        float _3384 = _3381 * _3377;
                        float _3385 = dot(vec3(_1084, _1087, _1090), vec3(_3382, _3383, _3384));
                        float _3390 = 1.0 - (_3378 * _3335.w);
                        float _4799 = isnan(0.0) ? _3390 : (isnan(_3390) ? 0.0 : max(_3390, 0.0));
                        float _3391 = isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0));
                        float _3392 = sqrt(_3378) * _3354.w;
                        float _3395 = 1.39999997615814208984375 / (_3392 + 1.39999997615814208984375);
                        float _3396 = _3395 * _3395;
                        float _3399 = ((1.0 - _3396) * _3385) + _3396;
                        float _3402 = _3392 * _3392;
                        float _3406 = ((isnan(0.0) ? _3399 : (isnan(_3399) ? 0.0 : max(_3399, 0.0))) * _3391) / ((_3402 * 0.699999988079071044921875) + 1.0);
                        float _3410 = (-0.0) - _2864;
                        float _3411 = (-0.0) - _2865;
                        float _3412 = (-0.0) - _2866;
                        float _3416 = inversesqrt(dot(vec3(_3410, _3411, _3412), vec3(_3410, _3411, _3412)));
                        float _3417 = _3416 * _3410;
                        float _3418 = _3416 * _3411;
                        float _3419 = _3416 * _3412;
                        float _3427 = exp2(log2(1.0 / ((_3402 * 3.5) + 5.0)) * 0.25);
                        float _3428 = 1.0 - _1159;
                        float _3435 = sqrt(1.0 - ((1.0 - (_3428 * _3428)) * (1.0 - (_3427 * _3427))));
                        float _3436 = _3435 * _3435;
                        float _3437 = _3436 * _3436;
                        float _3438 = _3417 + _3382;
                        float _3439 = _3418 + _3383;
                        float _3440 = _3419 + _3384;
                        float _3444 = inversesqrt(dot(vec3(_3438, _3439, _3440), vec3(_3438, _3439, _3440)));
                        float _3448 = dot(vec3(_1084, _1087, _1090), vec3(_3417, _3418, _3419));
                        float _4815 = isnan(0.0) ? _3448 : (isnan(_3448) ? 0.0 : max(_3448, 0.0));
                        float _3451 = isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0));
                        float _3452 = dot(vec3(_1084, _1087, _1090), vec3(_3444 * _3438, _3444 * _3439, _3444 * _3440));
                        float _4826 = isnan(0.0) ? _3452 : (isnan(_3452) ? 0.0 : max(_3452, 0.0));
                        float _3455 = isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0));
                        float _3459 = ((_3455 * _3455) * (_3437 + (-1.0))) + 1.0;
                        float _3460 = _3395 * _3436;
                        float _3461 = _3460 * _3460;
                        float _3464 = ((1.0 - _3461) * _3385) + _3461;
                        float _4837 = isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : max(_3464, 0.0));
                        float _3465 = isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0));
                        float _3466 = 1.0 - _3436;
                        float _3476 = (0.5 / (((_3465 * ((_3451 * _3466) + _3436)) + 9.9999999392252902907785028219223e-09) + (((_3465 * _3466) + _3436) * _3451))) * _3465;
                        float _4848 = isnan(0.0) ? _3476 : (isnan(_3476) ? 0.0 : max(_3476, 0.0));
                        float _3487 = (((_3437 * 3.1415927410125732421875) * (isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0)))) / ((_3459 * _3459) * ((_3402 * 2.1991131305694580078125) + 3.141590118408203125))) * _3391;
                        _3239 = (_3406 * _3354.x) + _3312;
                        _3240 = (_3406 * _3354.y) + _3313;
                        _3241 = (_3406 * _3354.z) + _3314;
                        _3236 = (_3487 * _3371.x) + _3309;
                        _3237 = (_3487 * _3371.y) + _3310;
                        _3238 = (_3487 * _3371.z) + _3311;
                        if (_3316 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3309 = _3236;
                            _3310 = _3237;
                            _3311 = _3238;
                            _3312 = _3239;
                            _3313 = _3240;
                            _3314 = _3241;
                            _3315 = _3316;
                        }
                    }
                    frontier_phi_68_pred = _3236;
                    frontier_phi_68_pred_1 = _3241;
                    frontier_phi_68_pred_2 = _3240;
                    frontier_phi_68_pred_3 = _3239;
                    frontier_phi_68_pred_4 = _3238;
                    frontier_phi_68_pred_5 = _3237;
                }
                _3012 = frontier_phi_68_pred;
                _3022 = frontier_phi_68_pred_1;
                _3020 = frontier_phi_68_pred_2;
                _3018 = frontier_phi_68_pred_3;
                _3016 = frontier_phi_68_pred_4;
                _3014 = frontier_phi_68_pred_5;
                uint _3171 = _3170 + 1u;
                if (_3171 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3164 = _3012;
                    _3165 = _3014;
                    _3166 = _3016;
                    _3167 = _3018;
                    _3168 = _3020;
                    _3169 = _3022;
                    _3170 = _3171;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3011 = _3012;
            _3013 = _3014;
            _3015 = _3016;
            _3017 = _3018;
            _3019 = _3020;
            _3021 = _3022;
        }
        uvec4 _3025 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3026 = _3025.z;
        uint _3028 = (_3026 >> 8u) & 15u;
        float _3132;
        float _3134;
        float _3136;
        float _3138;
        float _3140;
        float _3142;
        if (((4294967295u << _3028) & _2910) == 0u)
        {
            _3132 = _3011;
            _3134 = _3013;
            _3136 = _3015;
            _3138 = _3017;
            _3140 = _3019;
            _3142 = _3021;
        }
        else
        {
            float _3157 = inversesqrt(dot(vec3(_2864, _2865, _2866), vec3(_2864, _2865, _2866)));
            float _3158 = _3157 * _2864;
            float _3159 = _3157 * _2865;
            float _3160 = _3157 * _2866;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3028 < ((_3026 >> 12u) & 15u))
            {
                float _3133;
                float _3135;
                float _3137;
                float _3139;
                float _3141;
                float _3143;
                float _3292 = _3011;
                float _3293 = _3013;
                float _3294 = _3015;
                float _3295 = _3017;
                float _3296 = _3019;
                float _3297 = _3021;
                uint _3298 = _3028;
                uint _3307;
                bool _3308;
                for (;;)
                {
                    _3307 = texelFetch(g_lightClassification, int((((_2904 << 5u) + (_2890 << 9u)) + (_3298 << 2u)) >> 2u)).x;
                    _3308 = _3307 == 0u;
                    float frontier_phi_79_pred;
                    float frontier_phi_79_pred_1;
                    float frontier_phi_79_pred_2;
                    float frontier_phi_79_pred_3;
                    float frontier_phi_79_pred_4;
                    float frontier_phi_79_pred_5;
                    if (_3308)
                    {
                        frontier_phi_79_pred = _3297;
                        frontier_phi_79_pred_1 = _3296;
                        frontier_phi_79_pred_2 = _3295;
                        frontier_phi_79_pred_3 = _3294;
                        frontier_phi_79_pred_4 = _3293;
                        frontier_phi_79_pred_5 = _3292;
                    }
                    else
                    {
                        float _3501;
                        float _3502;
                        float _3503;
                        float _3504;
                        float _3505;
                        float _3506;
                        float _3794;
                        float _3795;
                        float _3796;
                        float _3797;
                        float _3798;
                        float _3799;
                        float _3514 = _3292;
                        float _3515 = _3293;
                        float _3516 = _3294;
                        float _3517 = _3295;
                        float _3518 = _3296;
                        float _3519 = _3297;
                        uint _3520 = _3307;
                        uint _3521;
                        vec4 _3546;
                        float _3547;
                        vec4 _3562;
                        vec3 _3574;
                        vec4 _3589;
                        vec4 _3604;
                        float _3650;
                        bool _3651;
                        for (;;)
                        {
                            uint _3531 = ((_3298 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3520));
                            _3521 = (_3520 + 4294967295u) & _3520;
                            uint _3533 = _3531 * 40u;
                            _3546 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3533)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 3u)).x));
                            _3547 = _3546.w;
                            uint _3549 = (_3531 * 40u) + 4u;
                            _3562 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3549)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3549 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3549 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3549 + 3u)).x));
                            uint _3564 = (_3531 * 40u) + 8u;
                            _3574 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3564)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3564 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3564 + 2u)).x));
                            uint _3576 = (_3531 * 40u) + 16u;
                            _3589 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3576)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 3u)).x));
                            uint _3591 = (_3531 * 40u) + 20u;
                            _3604 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3591)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3591 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3591 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3591 + 3u)).x));
                            uint _3606 = (_3531 * 40u) + 24u;
                            vec4 _3619 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3606)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 3u)).x));
                            uint _3625 = (_3531 * 40u) + 28u;
                            vec4 _3638 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3625)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 3u)).x));
                            _3650 = fma(_2866, _3638.z, fma(_2865, _3638.y, _3638.x * _2864)) + _3638.w;
                            _3651 = !((fma(_2866, _3619.z, fma(_2865, _3619.y, _3619.x * _2864)) + _3619.w) <= 0.0);
                            float frontier_phi_85_pred;
                            float frontier_phi_85_pred_1;
                            float frontier_phi_85_pred_2;
                            float frontier_phi_85_pred_3;
                            float frontier_phi_85_pred_4;
                            float frontier_phi_85_pred_5;
                            if (_3651)
                            {
                                float _3678 = _3546.x - _2864;
                                float _3679 = _3546.y - _2865;
                                float _3680 = _3546.z - _2866;
                                float _3681 = dot(vec3(_3678, _3679, _3680), vec3(_3678, _3679, _3680));
                                float _3684 = inversesqrt(_3681);
                                float _3685 = _3684 * _3678;
                                float _3686 = _3684 * _3679;
                                float _3687 = _3684 * _3680;
                                float _3691 = 1.0 - (_3681 / (_3547 * _3547));
                                float _4859 = isnan(0.0) ? _3691 : (isnan(_3691) ? 0.0 : max(_3691, 0.0));
                                float _3692 = isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0));
                                float _3696 = sqrt(_3681) * _3562.w;
                                float _3698 = 1.39999997615814208984375 / (_3696 + 1.39999997615814208984375);
                                float _3699 = _3698 * _3698;
                                float _3702 = ((1.0 - _3699) * dot(vec3(_3685, _3686, _3687), vec3(_1084, _1087, _1090))) + _3699;
                                float _3705 = _3696 * _3696;
                                float _3709 = (fma(_2866, _3589.z, fma(_2865, _3589.y, _3589.x * _2864)) + _3589.w) / _3650;
                                float _3710 = (fma(_2866, _3604.z, fma(_2865, _3604.y, _3604.x * _2864)) + _3604.w) / _3650;
                                float _3714 = 1.0 - dot(vec2(_3709, _3710), vec2(_3709, _3710));
                                float _4875 = isnan(0.0) ? _3714 : (isnan(_3714) ? 0.0 : max(_3714, 0.0));
                                float _3715 = isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0));
                                float _3716 = _3715 * (((isnan(0.0) ? _3702 : (isnan(_3702) ? 0.0 : max(_3702, 0.0))) * _3692) / ((_3705 * 0.699999988079071044921875) + 1.0));
                                float _3728 = exp2(log2(1.0 / ((_3705 * 3.5) + 5.0)) * 0.25);
                                float _3729 = 1.0 - _1159;
                                float _3736 = sqrt(1.0 - ((1.0 - (_3729 * _3729)) * (1.0 - (_3728 * _3728))));
                                float _3737 = _3736 * _3736;
                                float _3738 = _3737 * _3737;
                                float _3739 = _3685 - _3158;
                                float _3740 = _3686 - _3159;
                                float _3741 = _3687 - _3160;
                                float _3745 = inversesqrt(dot(vec3(_3739, _3740, _3741), vec3(_3739, _3740, _3741)));
                                float _3749 = dot(vec3(_1084, _1087, _1090), vec3((-0.0) - _3158, (-0.0) - _3159, (-0.0) - _3160));
                                float _4886 = isnan(0.0) ? _3749 : (isnan(_3749) ? 0.0 : max(_3749, 0.0));
                                float _3752 = isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0));
                                float _3753 = dot(vec3(_1084, _1087, _1090), vec3(_3745 * _3739, _3745 * _3740, _3745 * _3741));
                                float _4897 = isnan(0.0) ? _3753 : (isnan(_3753) ? 0.0 : max(_3753, 0.0));
                                float _3756 = isnan(1.0) ? _4897 : (isnan(_4897) ? 1.0 : min(_4897, 1.0));
                                float _3760 = ((_3756 * _3756) * (_3738 + (-1.0))) + 1.0;
                                float _3761 = _3698 * _3737;
                                float _3762 = _3761 * _3761;
                                float _3768 = ((1.0 - _3762) * dot(vec3(_1084, _1087, _1090), vec3(_3685, _3686, _3687))) + _3762;
                                float _4908 = isnan(0.0) ? _3768 : (isnan(_3768) ? 0.0 : max(_3768, 0.0));
                                float _3769 = isnan(1.0) ? _4908 : (isnan(_4908) ? 1.0 : min(_4908, 1.0));
                                float _3770 = 1.0 - _3737;
                                float _3780 = (0.5 / (((_3769 * ((_3752 * _3770) + _3737)) + 9.9999999392252902907785028219223e-09) + (((_3769 * _3770) + _3737) * _3752))) * _3769;
                                float _4919 = isnan(0.0) ? _3780 : (isnan(_3780) ? 0.0 : max(_3780, 0.0));
                                float _3790 = (_3715 * _3692) * (((_3738 * 3.1415927410125732421875) * (isnan(1.0) ? _4919 : (isnan(_4919) ? 1.0 : min(_4919, 1.0)))) / ((_3760 * _3760) * ((_3705 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_85_pred = _3716 * _3562.y;
                                frontier_phi_85_pred_1 = _3716 * _3562.x;
                                frontier_phi_85_pred_2 = _3790 * _3574.z;
                                frontier_phi_85_pred_3 = _3790 * _3574.y;
                                frontier_phi_85_pred_4 = _3790 * _3574.x;
                                frontier_phi_85_pred_5 = _3716 * _3562.z;
                            }
                            else
                            {
                                frontier_phi_85_pred = 0.0;
                                frontier_phi_85_pred_1 = 0.0;
                                frontier_phi_85_pred_2 = 0.0;
                                frontier_phi_85_pred_3 = 0.0;
                                frontier_phi_85_pred_4 = 0.0;
                                frontier_phi_85_pred_5 = 0.0;
                            }
                            _3798 = frontier_phi_85_pred;
                            _3797 = frontier_phi_85_pred_1;
                            _3796 = frontier_phi_85_pred_2;
                            _3795 = frontier_phi_85_pred_3;
                            _3794 = frontier_phi_85_pred_4;
                            _3799 = frontier_phi_85_pred_5;
                            _3504 = _3797 + _3517;
                            _3505 = _3798 + _3518;
                            _3506 = _3799 + _3519;
                            _3501 = _3794 + _3514;
                            _3502 = _3795 + _3515;
                            _3503 = _3796 + _3516;
                            if (_3521 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3514 = _3501;
                                _3515 = _3502;
                                _3516 = _3503;
                                _3517 = _3504;
                                _3518 = _3505;
                                _3519 = _3506;
                                _3520 = _3521;
                                continue;
                            }
                        }
                        frontier_phi_79_pred = _3506;
                        frontier_phi_79_pred_1 = _3505;
                        frontier_phi_79_pred_2 = _3504;
                        frontier_phi_79_pred_3 = _3503;
                        frontier_phi_79_pred_4 = _3502;
                        frontier_phi_79_pred_5 = _3501;
                    }
                    _3143 = frontier_phi_79_pred;
                    _3141 = frontier_phi_79_pred_1;
                    _3139 = frontier_phi_79_pred_2;
                    _3137 = frontier_phi_79_pred_3;
                    _3135 = frontier_phi_79_pred_4;
                    _3133 = frontier_phi_79_pred_5;
                    uint _3299 = _3298 + 1u;
                    if (_3299 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3292 = _3133;
                        _3293 = _3135;
                        _3294 = _3137;
                        _3295 = _3139;
                        _3296 = _3141;
                        _3297 = _3143;
                        _3298 = _3299;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3137;
                frontier_phi_60_61_ladder_1 = _3143;
                frontier_phi_60_61_ladder_2 = _3141;
                frontier_phi_60_61_ladder_3 = _3139;
                frontier_phi_60_61_ladder_4 = _3135;
                frontier_phi_60_61_ladder_5 = _3133;
            }
            else
            {
                frontier_phi_60_61_ladder = _3015;
                frontier_phi_60_61_ladder_1 = _3021;
                frontier_phi_60_61_ladder_2 = _3019;
                frontier_phi_60_61_ladder_3 = _3017;
                frontier_phi_60_61_ladder_4 = _3013;
                frontier_phi_60_61_ladder_5 = _3011;
            }
            _3132 = frontier_phi_60_61_ladder_5;
            _3134 = frontier_phi_60_61_ladder_4;
            _3136 = frontier_phi_60_61_ladder;
            _3138 = frontier_phi_60_61_ladder_3;
            _3140 = frontier_phi_60_61_ladder_2;
            _3142 = frontier_phi_60_61_ladder_1;
        }
        float _3147 = isnan(1.0) ? _1143 : (isnan(_1143) ? 1.0 : min(_1143, 1.0));
        _2923 = (_3147 * _3138) + _2356;
        _2925 = (_3147 * _3140) + _2358;
        _2927 = (_3147 * _3142) + _2360;
        _2929 = ((_3132 * _1128) * _3147) + _2704;
        _2931 = ((_3134 * _1130) * _3147) + _2706;
        _2933 = ((_3136 * _1131) * _3147) + _2708;
    }
    else
    {
        _2923 = _2356;
        _2925 = _2358;
        _2927 = _2360;
        _2929 = _2704;
        _2931 = _2706;
        _2933 = _2708;
    }
    float _4935 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
    float _4946 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
    float _4957 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
    float _2950 = ((isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0))) * (_2923 + ((isnan(0.0) ? _1895 : (isnan(_1895) ? 0.0 : max(_1895, 0.0))) * _1143))) + ((_2929 + ((isnan(0.0) ? _2188 : (isnan(_2188) ? 0.0 : max(_2188, 0.0))) * _1974)) * cbPerFrame._m0[3u].x);
    float _2951 = ((isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0))) * (_2925 + ((isnan(0.0) ? _1898 : (isnan(_1898) ? 0.0 : max(_1898, 0.0))) * _1143))) + ((_2931 + ((isnan(0.0) ? _2191 : (isnan(_2191) ? 0.0 : max(_2191, 0.0))) * _1974)) * cbPerFrame._m0[3u].x);
    float _2952 = ((isnan(1.0) ? _4957 : (isnan(_4957) ? 1.0 : min(_4957, 1.0))) * (_2927 + ((isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0))) * _1143))) + ((_2933 + ((isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0))) * _1974)) * cbPerFrame._m0[3u].x);
    uint _2953 = _1103 + 6u;
    float _2961 = _1065 / cbSceneParam._m0[86u].x;
    float _2962 = _1066 / cbSceneParam._m0[86u].y;
    vec4 _2976 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2961, _2962, (log2((isnan(cbSceneParam._m0[77u].w) ? _991 : (isnan(_991) ? cbSceneParam._m0[77u].w : min(_991, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2978 = _2976.x;
    float _2979 = _2976.y;
    float _2980 = _2976.z;
    float _2981 = _2976.w;
    float _3074;
    float _3076;
    float _3078;
    float _3080;
    if (_991 > cbSceneParam._m0[78u].w)
    {
        float _3036 = isnan(_991) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _991 : min(cbSceneParam._m0[80u].w, _991));
        float _3037 = _3036 / _991;
        float _3048 = _3037 * _1041;
        float _3049 = _1042 * _3037;
        float _3050 = (-0.0) - _3049;
        float _3052 = _3037 * _1043;
        float _3054 = (cbSceneParam._m0[77u].w * _3050) / _3036;
        float _3055 = _3054 + cbSceneParam._m0[79u].w;
        float _3056 = cbSceneParam._m0[79u].w - _3049;
        float _3062 = sqrt(((_3048 * _3048) + (_3049 * _3049)) + (_3052 * _3052));
        float _3065 = (1.0 - (cbSceneParam._m0[77u].w / _3036)) * _3062;
        float _3070 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3072 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3249;
        if (abs((_3050 - _3054) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3249 = ((((_3055 > 0.0) ? exp2(_3070 * _3055) : (2.0 - exp2(_3072 * _3055))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3065;
        }
        else
        {
            float _3193 = 1.0 / cbSceneParam._m0[80u].x;
            float _3194 = isnan(_3056) ? _3055 : (isnan(_3055) ? _3056 : max(_3055, _3056));
            float _3195 = isnan(_3056) ? _3055 : (isnan(_3055) ? _3056 : min(_3055, _3056));
            float _3204 = isnan(0.0) ? _3194 : (isnan(_3194) ? 0.0 : min(_3194, 0.0));
            float _3205 = isnan(0.0) ? _3195 : (isnan(_3195) ? 0.0 : min(_3195, 0.0));
            _3249 = ((abs(_3062 / _3050) * cbSceneParam._m0[80u].y) * ((((_3204 - _3205) * 2.0) - ((exp2(_3070 * (isnan(0.0) ? _3194 : (isnan(_3194) ? 0.0 : max(_3194, 0.0)))) - exp2(_3070 * (isnan(0.0) ? _3195 : (isnan(_3195) ? 0.0 : max(_3195, 0.0))))) * _3193)) - ((exp2(_3072 * _3204) - exp2(_3072 * _3205)) * _3193))) + (_3065 * cbSceneParam._m0[80u].z);
        }
        vec4 _3251 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2961, _2962, 1.0), 0.0);
        float _3260 = exp2((_3249 * (-1.44269502162933349609375)) * (1.0 - _3251.w));
        float _3261 = log2(_3260);
        float _3277 = log2(_2981);
        _3074 = (exp2(_3277 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3261 * cbSceneParam._m0[78u].x)) * _3251.x) / cbSceneParam._m0[78u].x)) + _2978;
        _3076 = (exp2(_3277 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3261 * cbSceneParam._m0[78u].y)) * _3251.y) / cbSceneParam._m0[78u].y)) + _2979;
        _3078 = (exp2(_3277 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3261 * cbSceneParam._m0[78u].z)) * _3251.z) / cbSceneParam._m0[78u].z)) + _2980;
        _3080 = _3260 * _2981;
    }
    else
    {
        _3074 = _2978;
        _3076 = _2979;
        _3078 = _2980;
        _3080 = _2981;
    }
    bool _3287;
    vec4 _3090;
    vec4 _3112;
    float _3114;
    float _3118;
    float _3119;
    float _3120;
    float _3121;
    bool _3131;
    for (;;)
    {
        _3090 = cbMatDynParam._m0[0u];
        float _3092 = roundEven(_3090.y);
        bool _3093 = _3092 == 3.0;
        float _3094 = log2(_3080);
        float _3101 = exp2(_3094 * cbSceneParam._m0[78u].x) * _2950;
        float _3102 = exp2(_3094 * cbSceneParam._m0[78u].y) * _2951;
        float _3103 = exp2(_3094 * cbSceneParam._m0[78u].z) * _2952;
        float _3110 = _1054 + (-0.5);
        _3112 = cbMtdParam._m0[1u];
        _3114 = _3112.y * _3110;
        float _3117 = (_3092 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3118 = _3117 * (_3093 ? _3101 : (_3101 + (cbSceneParam._m0[72u].w * _3074)));
        _3119 = _3117 * (_3093 ? _3102 : (_3102 + (cbSceneParam._m0[72u].w * _3076)));
        _3120 = _3117 * (_3093 ? _3103 : (_3103 + (cbSceneParam._m0[72u].w * _3078)));
        _3121 = _3110 * 0.999000012874603271484375;
        _3131 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3131)
        {
            if ((cbInstanceData._m0[_1103 + 7u].x + _3121) < 0.5)
            {
                _3287 = true;
                break;
            }
        }
        uint _3228 = _1104 + uint(_3090.w);
        if ((cbInstanceData._m0[_3228].w < 1.0) && ((cbInstanceData._m0[_3228].w + _3121) < 0.5))
        {
            _3287 = true;
            break;
        }
        if ((_3114 + 1.0) < _3112.x)
        {
            _3287 = true;
            break;
        }
        _3287 = false;
        break;
    }
    float _3492;
    if (_3287)
    {
        discard_state = true;
        _3492 = 0.0;
    }
    else
    {
        _3492 = cbInstanceData._m0[_2953].w;
    }
    SV_Target.x = _3118;
    SV_Target.y = _3119;
    SV_Target.z = _3120;
    SV_Target.w = _3492;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2953].w;
    discard_exit();
}


