#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_23;
layout(set = 0, binding = 11) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_7;
layout(set = 0, binding = 14) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_8;
layout(set = 0, binding = 15) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_16;
layout(set = 0, binding = 4) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_17;
layout(set = 0, binding = 5) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_18;
layout(set = 0, binding = 6) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_Enemy_ColorMaterial_PF_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2DArray C_Enemy_ColorMaterial_PF_snp_0_Texture2DArray_0;
layout(set = 0, binding = 17) uniform texture2DArray C_Enemy_ColorMaterial_PF_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 4, component = 2) in float TEXCOORD_6;
layout(location = 4, component = 3) in float TEXCOORD_7;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1544;
float _4204;
float _4205;
float _4206;
float _4207;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _228 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _229 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _230 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _236 = inversesqrt(dot(vec3(_228, _229, _230), vec3(_228, _229, _230)));
    float _243 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _281 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_1) + cbTextureTilingScale._m0[10u].w));
    vec4 _315 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _319 = _315.z;
    float _330 = exp2(log2((1.0 - _319) * cbMtdParam._m0[26u].w) * cbMtdParam._m0[26u].x);
    float _331 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
    float _332 = isnan(1.0) ? _331 : (isnan(_331) ? 1.0 : min(_331, 1.0));
    vec4 _346 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD_1) + cbTextureTilingScale._m0[13u].w));
    float _358 = exp2(log2(_346.w * cbMtdParam._m0[28u].w) * cbMtdParam._m0[23u].x);
    float _359 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
    float _360 = isnan(1.0) ? _359 : (isnan(_359) ? 1.0 : min(_359, 1.0));
    float _369 = exp2(log2(cbMtdParam._m0[23u].y * _319) * cbMtdParam._m0[22u].y);
    float _370 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
    float _371 = isnan(1.0) ? _370 : (isnan(_370) ? 1.0 : min(_370, 1.0));
    float _392 = roundEven(5.0 - ((texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w)).x + (-0.02500000037252902984619140625)) * 8.0));
    float _393 = isnan(0.0) ? _392 : (isnan(_392) ? 0.0 : max(_392, 0.0));
    float _394 = isnan(4.0) ? _393 : (isnan(_393) ? 4.0 : min(_393, 4.0));
    float _407 = floor(_394);
    vec4 _410 = texture(sampler2DArray(C_Enemy_ColorMaterial_PF_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[16u].x * TEXCOORD) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_1) + cbTextureTilingScale._m0[16u].w, _407));
    vec4 _434 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _445 = cbMtdParam._m0[9u].x * _434.x;
    float _446 = cbMtdParam._m0[9u].y * _434.y;
    float _447 = cbMtdParam._m0[9u].z * _434.z;
    float _454 = (((cbMtdParam._m0[10u].x * _410.x) - _445) * _371) + _445;
    float _455 = (((cbMtdParam._m0[10u].y * _410.y) - _446) * _371) + _446;
    float _456 = (((cbMtdParam._m0[10u].z * _410.z) - _447) * _371) + _447;
    float _462 = exp2(log2(_315.w) * cbMtdParam._m0[23u].w);
    vec4 _475 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w));
    float _494 = (((cbMtdParam._m0[16u].x * _475.x) - _454) * _462) + _454;
    float _495 = (((cbMtdParam._m0[16u].y * _475.y) - _455) * _462) + _455;
    float _496 = (((cbMtdParam._m0[16u].z * _475.z) - _456) * _462) + _456;
    vec4 _509 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_1) + cbTextureTilingScale._m0[11u].w));
    float _529 = (((cbMtdParam._m0[19u].x * _509.x) - _494) * _360) + _494;
    float _530 = (((cbMtdParam._m0[19u].y * _509.y) - _495) * _360) + _495;
    float _531 = (((cbMtdParam._m0[19u].z * _509.z) - _496) * _360) + _496;
    vec4 _544 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1) + cbTextureTilingScale._m0[6u].w));
    float _569 = (_346.x * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].x * _544.x) - _529) * _332) + _529);
    float _571 = (_346.y * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].y * _544.y) - _530) * _332) + _530);
    float _573 = (_346.z * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].z * _544.z) - _531) * _332) + _531);
    vec4 _586 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1) + cbTextureTilingScale._m0[4u].w));
    float _604 = TEXCOORD_3.x - ((cbMtdParam._m0[24u].x * (1.0 - TEXCOORD_3.x)) * (texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w)).x + 0.00999999977648258209228515625));
    float _606 = _604 * (cbMtdParam._m0[24u].z + 1.0);
    float _4256 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _607 = isnan(1.0) ? _4256 : (isnan(_4256) ? 1.0 : min(_4256, 1.0));
    float _614 = (_607 * ((cbMtdParam._m0[11u].x * _586.x) - _569)) + _569;
    float _615 = (((cbMtdParam._m0[11u].y * _586.y) - _571) * _607) + _571;
    float _616 = (((cbMtdParam._m0[11u].z * _586.z) - _573) * _607) + _573;
    float _620 = cbMtdParam._m0[28u].y * TEXCOORD_6;
    float _628 = (_620 - (((_281.x + 0.00999999977648258209228515625) * cbMtdParam._m0[27u].w) * (1.0 - _620))) * (cbMtdParam._m0[28u].x + 1.0);
    float _4267 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
    float _629 = isnan(1.0) ? _4267 : (isnan(_4267) ? 1.0 : min(_4267, 1.0));
    float _636 = ((cbMtdParam._m0[21u].x - _614) * _629) + _614;
    float _637 = ((cbMtdParam._m0[21u].y - _615) * _629) + _615;
    float _638 = ((cbMtdParam._m0[21u].z - _616) * _629) + _616;
    float _207[5];
    float _208[5];
    _207[0u] = cbMtdParam._m0[29u].x;
    _208[0u] = cbMtdParam._m0[29u].y;
    _207[1u] = cbMtdParam._m0[31u].x;
    _208[1u] = cbMtdParam._m0[31u].y;
    _207[2u] = cbMtdParam._m0[30u].z;
    _208[2u] = cbMtdParam._m0[30u].w;
    _207[3u] = cbMtdParam._m0[30u].x;
    _208[3u] = cbMtdParam._m0[30u].y;
    _207[4u] = cbMtdParam._m0[29u].z;
    _208[4u] = cbMtdParam._m0[29u].w;
    float _679 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
    uint _681 = uint(int(isnan(4.0) ? _679 : (isnan(_679) ? 4.0 : min(_679, 4.0))));
    float _688 = ((_208[_681] - cbMtdParam._m0[22u].z) * _371) + cbMtdParam._m0[22u].z;
    float _691 = ((cbMtdParam._m0[22u].w - _688) * _462) + _688;
    float _694 = ((cbMtdParam._m0[25u].y - _691) * _360) + _691;
    float _697 = ((cbMtdParam._m0[26u].y - _694) * _332) + _694;
    float _702 = (cbMtdParam._m0[24u].y + 1.0) * _604;
    float _4288 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _703 = isnan(1.0) ? _4288 : (isnan(_4288) ? 1.0 : min(_4288, 1.0));
    float _705 = _697 - (_697 * _703);
    float _707 = _705 - (_705 * _620);
    vec4 _720 = texture(sampler2DArray(C_Enemy_ColorMaterial_PF_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[17u].x * TEXCOORD) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD_1) + cbTextureTilingScale._m0[17u].w, _407));
    vec4 _738 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD_1) + cbTextureTilingScale._m0[12u].w));
    float _740 = _738.x;
    float _741 = _738.y;
    float _746 = cbMtdParam._m0[22u].x + _738.z;
    float _749 = (((_720.z + _207[_681]) - _746) * _371) + _746;
    vec4 _762 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w));
    float _773 = (((_762.z - _749) + cbMtdParam._m0[28u].z) * _462) + _749;
    float _779 = ((((_319 * 2.0) * _773) - _773) * cbMtdParam._m0[24u].w) + _773;
    vec4 _792 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_1) + cbTextureTilingScale._m0[15u].w));
    float _803 = (((cbMtdParam._m0[23u].z + _792.z) - _779) * _360) + _779;
    vec4 _816 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_1) + cbTextureTilingScale._m0[8u].w));
    float _827 = (((_816.z - _803) + cbMtdParam._m0[26u].z) * _332) + _803;
    vec4 _839 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _851 = ((_839.z - _827) * _703) + _827;
    vec4 _866 = texture(sampler2D(C_Enemy_ColorMaterial_PF_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD_1) + cbTextureTilingScale._m0[9u].w));
    float _880 = ((cbMtdParam._m0[27u].z * _620) * ((_866.z * cbMtdParam._m0[27u].y) - _851)) + _851;
    float _895 = ((_720.x - _740) * _371) + _740;
    float _896 = ((_720.y - _741) * _371) + _741;
    float _901 = ((_762.x - _895) * _462) + _895;
    float _902 = ((_762.y - _896) * _462) + _896;
    float _907 = ((_792.x - _901) * _360) + _901;
    float _908 = ((_792.y - _902) * _360) + _902;
    float _917 = ((((_816.x - _907) * _332) + _907) * 2.0) + (-1.0);
    float _918 = ((((_816.y - _908) * _332) + _908) * 2.0) + (-1.0);
    float _919 = dot(vec2(_917, _918), vec2(_917, _918));
    float _4299 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
    float _924 = sqrt(1.0 - (isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0))));
    float _940 = (((cbMtdParam._m0[25u].z * ((_315.x * 2.0) + (-1.0))) + _917) + (((((_839.x * 2.0) + (-1.0)) * TEXCOORD_3.x) * cbMtdParam._m0[25u].w) * _703)) + ((((_866.x * 2.0) + (-1.0)) * _620) * cbMtdParam._m0[27u].x);
    float _941 = (((cbMtdParam._m0[25u].z * ((_315.y * 2.0) + (-1.0))) + _918) + (((((_839.y * 2.0) + (-1.0)) * TEXCOORD_3.y) * cbMtdParam._m0[25u].w) * _703)) + (((cbMtdParam._m0[28u].y * TEXCOORD_7) * ((_866.y * 2.0) + (-1.0))) * cbMtdParam._m0[27u].x);
    float _943 = gl_FragCoord.x * 0.125;
    float _945 = gl_FragCoord.y * 0.125;
    float _955 = fma(_924, _243 * NORMAL.x, fma(_941, _250 * TANGENT.x, (_236 * _228) * _940));
    float _958 = fma(_924, _243 * NORMAL.y, fma(_941, _250 * TANGENT.y, (_236 * _229) * _940));
    float _961 = fma(_924, _243 * NORMAL.z, fma(_941, _250 * TANGENT.z, (_236 * _230) * _940));
    float _965 = inversesqrt(dot(vec3(_955, _958, _961), vec3(_955, _958, _961)));
    float _966 = _965 * _955;
    float _967 = _965 * _958;
    float _968 = _965 * _961;
    float _4310 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _969 = isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0));
    float _4321 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
    float _4332 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _4343 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
    float _4354 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _973 = isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0));
    if (!(cbMtdParam._m0[25u].x >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_943, _945)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625)))
    {
        discard_state = true;
    }
    float _993 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1033 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1043 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1033);
    float _1044 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1033);
    float _1045 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1033);
    float _1049 = inversesqrt(dot(vec3(_1043, _1044, _1045), vec3(_1043, _1044, _1045)));
    float _1050 = _1043 * _1049;
    float _1051 = _1044 * _1049;
    float _1052 = _1045 * _1049;
    vec4 _1054 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_943, _945));
    float _1056 = _1054.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1226 = sqrt(((_1043 * _1043) + (_1044 * _1044)) + (_1045 * _1045));
        float _1232 = (cbMatDynParam._m0[5u].x * _1226) + cbMatDynParam._m0[5u].y;
        float _4365 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
        float _1233 = isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0));
        float _1237 = (cbMatDynParam._m0[5u].z * _1226) + cbMatDynParam._m0[5u].w;
        float _4376 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0))) - _1233)) + _1233) < ((_1056 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1067 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1068 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1086 = fma(_968, cbSceneParam._m0[5u].z, fma(_967, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _966));
    float _1089 = fma(_968, cbSceneParam._m0[6u].z, fma(_967, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _966));
    float _1092 = fma(_968, cbSceneParam._m0[7u].z, fma(_967, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _966));
    uint _1105 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1106 = _1105 + 9u;
    uint _1107 = _1106 + uint(cbMatDynParam._m0[0u].w);
    float _1113 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0)))) * cbInstanceData._m0[_1107].x;
    float _1114 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0)))) * cbInstanceData._m0[_1107].y;
    float _1115 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0)))) * cbInstanceData._m0[_1107].z;
    float _4387 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
    float _1116 = isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0));
    float _4398 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
    float _1117 = isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0));
    float _4409 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
    float _1118 = isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0));
    float _1119 = 1.0 - _973;
    float _1120 = _1116 * _1119;
    float _1121 = _1117 * _1119;
    float _1122 = _1118 * _1119;
    float _1127 = (_1116 + (-0.039999999105930328369140625)) * _973;
    float _1128 = (_1117 + (-0.039999999105930328369140625)) * _973;
    float _1129 = (_1118 + (-0.039999999105930328369140625)) * _973;
    float _1130 = _1127 + 0.039999999105930328369140625;
    float _1132 = _1128 + 0.039999999105930328369140625;
    float _1133 = _1129 + 0.039999999105930328369140625;
    vec4 _1142 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1067, cbSceneParam._m0[86u].y * _1068));
    float _1145 = _1142.x * TEXCOORD_3.w;
    float _1146 = dot(vec3(_966, _967, _968), vec3(_1050, _1051, _1052));
    float _1149 = _1146 * 2.0;
    float _1153 = (_1149 * _966) - _1050;
    float _1154 = (_1149 * _967) - _1051;
    float _1155 = (_1149 * _968) - _1052;
    float _1159 = abs(dot(vec3(_1050, _1051, _1052), vec3(_966, _967, _968)));
    float _4420 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
    float _1161 = sqrt(_969);
    float _1172 = exp2((_1161 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1161 * 3.0));
    float _1178 = (1.0 - _1172) * ((_1161 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1179 = _1172 * _1161;
    float _1207 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1211 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1215 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1543;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    float _1551;
    float _1552;
    float _1553;
    float _1554;
    float _1555;
    float _1556;
    float _1557;
    float _1558;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1268 = fma(_1215, cbModelParam._m0[26u].z, fma(_1211, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1207));
        float _1272 = fma(_1215, cbModelParam._m0[27u].z, fma(_1211, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1207));
        float _1276 = fma(_1215, cbModelParam._m0[28u].z, fma(_1211, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1207));
        float _1301 = _1207 + _966;
        float _1302 = _1211 + _967;
        float _1303 = _1215 + _968;
        float _1313 = fma(_1303, cbModelParam._m0[26u].z, fma(_1302, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1301)) - _1268;
        float _1314 = fma(_1303, cbModelParam._m0[27u].z, fma(_1302, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1301)) - _1272;
        float _1315 = fma(_1303, cbModelParam._m0[28u].z, fma(_1302, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1301)) - _1276;
        float _1319 = inversesqrt(dot(vec3(_1313, _1314, _1315), vec3(_1313, _1314, _1315)));
        float _1332 = ((_1319 * _1313) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1268 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1333 = ((_1319 * _1314) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1272 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1334 = ((_1319 * _1315) / cbModelParam._m0[34u].z) + ((((((_1276 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1337 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1332, _1333, _1334), 0.0);
        vec4 _1344 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1332, _1333, _1334), 0.0);
        vec4 _1351 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1332, _1333, _1334), 0.0);
        vec4 _1358 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1332, _1333, _1334), 0.0);
        float _1371 = exp2((_1337.w + (-0.5)) * 20.0) * 2.0;
        float _1372 = _1371 * (_1337.x + (-0.5));
        float _1373 = _1371 * (_1337.y + (-0.5));
        float _1374 = _1371 * (_1337.z + (-0.5));
        float _1381 = exp2((_1344.w + (-0.5)) * 20.0) * 2.0;
        float _1382 = _1381 * (_1344.x + (-0.5));
        float _1383 = _1381 * (_1344.y + (-0.5));
        float _1384 = _1381 * (_1344.z + (-0.5));
        float _1391 = exp2((_1351.w + (-0.5)) * 20.0) * 2.0;
        float _1392 = _1391 * (_1351.x + (-0.5));
        float _1393 = _1391 * (_1351.y + (-0.5));
        float _1394 = _1391 * (_1351.z + (-0.5));
        float _1401 = exp2((_1358.w + (-0.5)) * 20.0) * 2.0;
        float _1402 = _1401 * (_1358.x + (-0.5));
        float _1403 = _1401 * (_1358.y + (-0.5));
        float _1404 = _1401 * (_1358.z + (-0.5));
        float _1405 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1406 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
        float _1407 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1408 = _1372 * 0.5;
        float _1409 = _1382 * 0.5;
        float _1410 = _1392 * 0.5;
        float _1411 = dot(vec3(_1408, _1409, _1410), vec3(_1408, _1409, _1410));
        float _1416 = (_1411 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1411);
        float _1425 = (dot(vec3(_966, _967, _968), vec3(_1416 * _1408, _1416 * _1409, _1416 * _1410)) + 1.0) * 0.5;
        float _4446 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1435 = sqrt(((_1409 * _1409) + (_1408 * _1408)) + (_1410 * _1410)) / (_1405 + 9.9999997473787516355514526367188e-06);
        float _4457 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1436 = isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0));
        float _1437 = _1436 * 2.0;
        float _1441 = (1.0 - _1436) / (_1436 + 1.0);
        float _4468 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1442 = isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0));
        float _1451 = ((((1.0 - _1442) * (_1437 + 2.0)) * exp2(log2(isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0))) * (_1437 + 1.0))) + _1442) * _1405;
        float _1452 = _1373 * 0.5;
        float _1453 = _1383 * 0.5;
        float _1454 = _1393 * 0.5;
        float _1455 = dot(vec3(_1452, _1453, _1454), vec3(_1452, _1453, _1454));
        float _1460 = (_1455 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1455);
        float _1468 = (dot(vec3(_966, _967, _968), vec3(_1460 * _1452, _1460 * _1453, _1460 * _1454)) + 1.0) * 0.5;
        float _4479 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
        float _1477 = sqrt(((_1453 * _1453) + (_1452 * _1452)) + (_1454 * _1454)) / (_1406 + 9.9999997473787516355514526367188e-06);
        float _4490 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1478 = isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0));
        float _1479 = _1478 * 2.0;
        float _1483 = (1.0 - _1478) / (_1478 + 1.0);
        float _4501 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1484 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
        float _1493 = ((((1.0 - _1484) * (_1479 + 2.0)) * exp2(log2(isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0))) * (_1479 + 1.0))) + _1484) * _1406;
        float _1494 = _1374 * 0.5;
        float _1495 = _1384 * 0.5;
        float _1496 = _1394 * 0.5;
        float _1497 = dot(vec3(_1494, _1495, _1496), vec3(_1494, _1495, _1496));
        float _1502 = (_1497 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1497);
        float _1510 = (dot(vec3(_966, _967, _968), vec3(_1502 * _1494, _1502 * _1495, _1502 * _1496)) + 1.0) * 0.5;
        float _4512 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
        float _1519 = sqrt(((_1495 * _1495) + (_1494 * _1494)) + (_1496 * _1496)) / (_1407 + 9.9999997473787516355514526367188e-06);
        float _4523 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
        float _1520 = isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0));
        float _1521 = _1520 * 2.0;
        float _1525 = (1.0 - _1520) / (_1520 + 1.0);
        float _4534 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
        float _1526 = isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0));
        float _1535 = ((((1.0 - _1526) * (_1521 + 2.0)) * exp2(log2(isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0))) * (_1521 + 1.0))) + _1526) * _1407;
        _1543 = _1374;
        _1545 = _1373;
        _1546 = _1372;
        _1547 = _1384;
        _1548 = _1383;
        _1549 = _1382;
        _1550 = _1394;
        _1551 = _1393;
        _1552 = _1392;
        _1553 = _1407;
        _1554 = _1406;
        _1555 = _1405;
        _1556 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0)));
        _1557 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0)));
        _1558 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0)));
    }
    else
    {
        _1543 = _1544;
        _1545 = _1544;
        _1546 = _1544;
        _1547 = _1544;
        _1548 = _1544;
        _1549 = _1544;
        _1550 = _1544;
        _1551 = _1544;
        _1552 = _1544;
        _1553 = _1544;
        _1554 = _1544;
        _1555 = _1544;
        _1556 = 0.0;
        _1557 = 0.0;
        _1558 = 0.0;
    }
    float _1850;
    float _1851;
    float _1852;
    float _1853;
    float _1854;
    float _1855;
    float _1856;
    float _1857;
    float _1858;
    float _1859;
    float _1860;
    float _1861;
    float _1862;
    float _1863;
    float _1864;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1581 = fma(_1215, cbModelParam._m0[30u].z, fma(_1211, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1207));
        float _1585 = fma(_1215, cbModelParam._m0[31u].z, fma(_1211, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1207));
        float _1589 = fma(_1215, cbModelParam._m0[32u].z, fma(_1211, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1207));
        float _1612 = _1207 + _966;
        float _1613 = _1211 + _967;
        float _1614 = _1215 + _968;
        float _1624 = fma(_1614, cbModelParam._m0[30u].z, fma(_1613, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1612)) - _1581;
        float _1625 = fma(_1614, cbModelParam._m0[31u].z, fma(_1613, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1612)) - _1585;
        float _1626 = fma(_1614, cbModelParam._m0[32u].z, fma(_1613, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1612)) - _1589;
        float _1630 = inversesqrt(dot(vec3(_1624, _1625, _1626), vec3(_1624, _1625, _1626)));
        float _1643 = ((_1630 * _1624) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1581 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1644 = ((_1630 * _1625) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1585 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1645 = ((_1630 * _1626) / cbModelParam._m0[35u].z) + ((((((_1589 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1647 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1643, _1644, _1645), 0.0);
        vec4 _1654 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1643, _1644, _1645), 0.0);
        vec4 _1661 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1643, _1644, _1645), 0.0);
        vec4 _1668 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1643, _1644, _1645), 0.0);
        float _1680 = exp2((_1647.w + (-0.5)) * 20.0) * 2.0;
        float _1681 = _1680 * (_1647.x + (-0.5));
        float _1682 = _1680 * (_1647.y + (-0.5));
        float _1683 = _1680 * (_1647.z + (-0.5));
        float _1690 = exp2((_1654.w + (-0.5)) * 20.0) * 2.0;
        float _1691 = _1690 * (_1654.x + (-0.5));
        float _1692 = _1690 * (_1654.y + (-0.5));
        float _1693 = _1690 * (_1654.z + (-0.5));
        float _1700 = exp2((_1661.w + (-0.5)) * 20.0) * 2.0;
        float _1701 = _1700 * (_1661.x + (-0.5));
        float _1702 = _1700 * (_1661.y + (-0.5));
        float _1703 = _1700 * (_1661.z + (-0.5));
        float _1710 = exp2((_1668.w + (-0.5)) * 20.0) * 2.0;
        float _1711 = _1710 * (_1668.x + (-0.5));
        float _1712 = _1710 * (_1668.y + (-0.5));
        float _1713 = _1710 * (_1668.z + (-0.5));
        float _1714 = isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0));
        float _1715 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
        float _1716 = isnan(0.0) ? _1713 : (isnan(_1713) ? 0.0 : max(_1713, 0.0));
        float _1717 = _1681 * 0.5;
        float _1718 = _1691 * 0.5;
        float _1719 = _1701 * 0.5;
        float _1720 = dot(vec3(_1717, _1718, _1719), vec3(_1717, _1718, _1719));
        float _1725 = (_1720 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1720);
        float _1733 = (dot(vec3(_966, _967, _968), vec3(_1725 * _1717, _1725 * _1718, _1725 * _1719)) + 1.0) * 0.5;
        float _4575 = isnan(0.0) ? _1733 : (isnan(_1733) ? 0.0 : max(_1733, 0.0));
        float _1742 = sqrt(((_1718 * _1718) + (_1717 * _1717)) + (_1719 * _1719)) / (_1714 + 9.9999997473787516355514526367188e-06);
        float _4586 = isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0));
        float _1743 = isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0));
        float _1744 = _1743 * 2.0;
        float _1748 = (1.0 - _1743) / (_1743 + 1.0);
        float _4597 = isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0));
        float _1749 = isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0));
        float _1758 = ((((1.0 - _1749) * (_1744 + 2.0)) * exp2(log2(isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0))) * (_1744 + 1.0))) + _1749) * _1714;
        float _1759 = _1682 * 0.5;
        float _1760 = _1692 * 0.5;
        float _1761 = _1702 * 0.5;
        float _1762 = dot(vec3(_1759, _1760, _1761), vec3(_1759, _1760, _1761));
        float _1767 = (_1762 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1762);
        float _1775 = (dot(vec3(_966, _967, _968), vec3(_1767 * _1759, _1767 * _1760, _1767 * _1761)) + 1.0) * 0.5;
        float _4608 = isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0));
        float _1784 = sqrt(((_1760 * _1760) + (_1759 * _1759)) + (_1761 * _1761)) / (_1715 + 9.9999997473787516355514526367188e-06);
        float _4619 = isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0));
        float _1785 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
        float _1786 = _1785 * 2.0;
        float _1790 = (1.0 - _1785) / (_1785 + 1.0);
        float _4630 = isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0));
        float _1791 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
        float _1800 = ((((1.0 - _1791) * (_1786 + 2.0)) * exp2(log2(isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0))) * (_1786 + 1.0))) + _1791) * _1715;
        float _1801 = _1683 * 0.5;
        float _1802 = _1693 * 0.5;
        float _1803 = _1703 * 0.5;
        float _1804 = dot(vec3(_1801, _1802, _1803), vec3(_1801, _1802, _1803));
        float _1809 = (_1804 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1804);
        float _1817 = (dot(vec3(_966, _967, _968), vec3(_1809 * _1801, _1809 * _1802, _1809 * _1803)) + 1.0) * 0.5;
        float _4641 = isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0));
        float _1826 = sqrt(((_1802 * _1802) + (_1801 * _1801)) + (_1803 * _1803)) / (_1716 + 9.9999997473787516355514526367188e-06);
        float _4652 = isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0));
        float _1827 = isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0));
        float _1828 = _1827 * 2.0;
        float _1832 = (1.0 - _1827) / (_1827 + 1.0);
        float _4663 = isnan(0.0) ? _1832 : (isnan(_1832) ? 0.0 : max(_1832, 0.0));
        float _1833 = isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0));
        float _1842 = ((((1.0 - _1833) * (_1828 + 2.0)) * exp2(log2(isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0))) * (_1828 + 1.0))) + _1833) * _1716;
        _1850 = _1683;
        _1851 = _1682;
        _1852 = _1681;
        _1853 = _1693;
        _1854 = _1692;
        _1855 = _1691;
        _1856 = _1703;
        _1857 = _1702;
        _1858 = _1701;
        _1859 = _1716;
        _1860 = _1715;
        _1861 = _1714;
        _1862 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1758 : (isnan(_1758) ? 0.0 : max(_1758, 0.0)));
        _1863 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0)));
        _1864 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0)));
    }
    else
    {
        _1850 = _1544;
        _1851 = _1544;
        _1852 = _1544;
        _1853 = _1544;
        _1854 = _1544;
        _1855 = _1544;
        _1856 = _1544;
        _1857 = _1544;
        _1858 = _1544;
        _1859 = _1544;
        _1860 = _1544;
        _1861 = _1544;
        _1862 = 0.0;
        _1863 = 0.0;
        _1864 = 0.0;
    }
    float _1874 = (cbModelParam._m0[1u].x * (_1862 - _1556)) + _1556;
    float _1875 = (cbModelParam._m0[1u].x * (_1863 - _1557)) + _1557;
    float _1876 = (cbModelParam._m0[1u].x * (_1864 - _1558)) + _1558;
    float _1897 = fma(_1876, cbSceneParam._m0[89u].z, fma(_1875, cbSceneParam._m0[89u].y, _1874 * cbSceneParam._m0[89u].x));
    float _1900 = fma(_1876, cbSceneParam._m0[90u].z, fma(_1875, cbSceneParam._m0[90u].y, _1874 * cbSceneParam._m0[90u].x));
    float _1903 = fma(_1876, cbSceneParam._m0[91u].z, fma(_1875, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1874));
    float _1918 = _1153 * 0.5;
    float _1919 = _1154 * 0.5;
    float _1920 = _1155 * 0.5;
    float _1921 = dot(vec4(_1918, _1919, _1920, 1.0), vec4(_1852, _1855, _1858, _1861));
    float _1924 = dot(vec4(_1918, _1919, _1920, 1.0), vec4(_1851, _1854, _1857, _1860));
    float _1927 = dot(vec4(_1918, _1919, _1920, 1.0), vec4(_1850, _1853, _1856, _1859));
    float _1961;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1934 = dot(vec4(_1918, _1919, _1920, 1.0), vec4(_1543, _1547, _1550, _1553));
        float _1938 = dot(vec4(_1918, _1919, _1920, 1.0), vec4(_1545, _1548, _1551, _1554));
        float _1942 = dot(vec4(_1918, _1919, _1920, 1.0), vec4(_1546, _1549, _1552, _1555));
        float _1949 = dot(vec4(cbModelParam._m0[39u]), vec4(_1918, _1919, _1920, 1.0));
        _1961 = dot(vec3(isnan(0.0) ? _1942 : (isnan(_1942) ? 0.0 : max(_1942, 0.0)), isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0)), isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1949) ? 0.0 : (isnan(0.0) ? _1949 : max(0.0, _1949))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1961 = 1.0;
    }
    float _1972;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1963 = dot(vec4(cbModelParam._m0[40u]), vec4(_1918, _1919, _1920, 1.0));
        _1972 = dot(vec3(isnan(0.0) ? _1921 : (isnan(_1921) ? 0.0 : max(_1921, 0.0)), isnan(0.0) ? _1924 : (isnan(_1924) ? 0.0 : max(_1924, 0.0)), isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1963) ? 0.0 : (isnan(0.0) ? _1963 : max(0.0, _1963))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1972 = 1.0;
    }
    float _1976 = (_1972 * cbModelParam._m0[1u].x) + (_1961 * (1.0 - cbModelParam._m0[1u].x));
    float _1986 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _969);
    float _1987 = isnan(_1986) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1986 : min(cbModelParam._m0[25u].z, _1986));
    float _2067;
    float _2069;
    float _2071;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2034 = fma(_1215, cbModelParam._m0[13u].z, fma(_1211, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1207)) + cbModelParam._m0[13u].w;
        float _2038 = fma(_1215, cbModelParam._m0[14u].z, fma(_1211, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1207)) + cbModelParam._m0[14u].w;
        float _2042 = fma(_1215, cbModelParam._m0[15u].z, fma(_1211, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1207)) + cbModelParam._m0[15u].w;
        float _2045 = fma(_1155, cbModelParam._m0[13u].z, fma(_1154, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1153));
        float _2048 = fma(_1155, cbModelParam._m0[14u].z, fma(_1154, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1153));
        float _2051 = fma(_1155, cbModelParam._m0[15u].z, fma(_1154, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1153));
        float _2079;
        if (_2045 > 0.0)
        {
            _2079 = abs((1.0 - _2034) / _2045);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_2045 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_2034 + 1.0) / _2045);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _2079 = frontier_phi_19_17_ladder;
        }
        float _2251;
        if (_2048 > 0.0)
        {
            _2251 = abs((1.0 - _2038) / _2048);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2048 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2038 + 1.0) / _2048);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2251 = frontier_phi_28_24_ladder;
        }
        float _2546;
        if (_2051 > 0.0)
        {
            _2546 = abs((1.0 - _2042) / _2051);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2051 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2042 + 1.0) / _2051);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2546 = frontier_phi_40_35_ladder;
        }
        float _2548 = isnan(_2251) ? _2079 : (isnan(_2079) ? _2251 : min(_2079, _2251));
        float _2549 = isnan(_2546) ? _2548 : (isnan(_2548) ? _2546 : min(_2548, _2546));
        float _2553 = (_2549 * _2045) + _2034;
        float _2554 = (_2549 * _2048) + _2038;
        float _2555 = (_2549 * _2051) + _2042;
        float _2556 = _2549 * 9.9999997473787516355514526367188e-05;
        float _2558 = (-1.0) - _2556;
        float _2560 = _2556 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2555 > _2560) || ((_2555 < _2558) || ((_2554 > _2560) || ((_2554 < _2558) || ((_2553 < _2558) || (_2553 > _2560))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2700 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2555, cbModelParam._m0[9u].z, fma(_2554, cbModelParam._m0[9u].y, _2553 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2555, cbModelParam._m0[10u].z, fma(_2554, cbModelParam._m0[10u].y, _2553 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2555, cbModelParam._m0[11u].z, fma(_2554, cbModelParam._m0[11u].y, _2553 * cbModelParam._m0[11u].x))), _1987);
            frontier_phi_18_40_ladder = _2700.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2700.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2700.x * cbModelParam._m0[1u].y;
        }
        _2067 = frontier_phi_18_40_ladder_2;
        _2069 = frontier_phi_18_40_ladder_1;
        _2071 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _2055 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1153, _1154, _1155), _1987);
        _2067 = _2055.x * cbModelParam._m0[1u].y;
        _2069 = _2055.y * cbModelParam._m0[1u].y;
        _2071 = _2055.z * cbModelParam._m0[1u].y;
    }
    float _2075 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _969);
    float _2076 = isnan(_2075) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2075 : min(cbModelParam._m0[25u].w, _2075));
    float _2166;
    float _2168;
    float _2170;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2130 = fma(_1215, cbModelParam._m0[21u].z, fma(_1211, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1207)) + cbModelParam._m0[21u].w;
        float _2134 = fma(_1215, cbModelParam._m0[22u].z, fma(_1211, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1207)) + cbModelParam._m0[22u].w;
        float _2138 = fma(_1215, cbModelParam._m0[23u].z, fma(_1211, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1207)) + cbModelParam._m0[23u].w;
        float _2141 = fma(_1155, cbModelParam._m0[21u].z, fma(_1154, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1153));
        float _2144 = fma(_1155, cbModelParam._m0[22u].z, fma(_1154, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1153));
        float _2147 = fma(_1155, cbModelParam._m0[23u].z, fma(_1154, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1153));
        float _2256;
        if (_2141 > 0.0)
        {
            _2256 = abs((1.0 - _2130) / _2141);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2141 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2130 + 1.0) / _2141);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2256 = frontier_phi_30_26_ladder;
        }
        float _2573;
        if (_2144 > 0.0)
        {
            _2573 = abs((1.0 - _2134) / _2144);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_2144 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_2134 + 1.0) / _2144);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2573 = frontier_phi_42_37_ladder;
        }
        float _2911;
        if (_2147 > 0.0)
        {
            _2911 = abs((1.0 - _2138) / _2147);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_2147 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_2138 + 1.0) / _2147);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2911 = frontier_phi_52_49_ladder;
        }
        float _2913 = isnan(_2573) ? _2256 : (isnan(_2256) ? _2573 : min(_2256, _2573));
        float _2914 = isnan(_2911) ? _2913 : (isnan(_2913) ? _2911 : min(_2913, _2911));
        float _2918 = (_2914 * _2141) + _2130;
        float _2919 = (_2914 * _2144) + _2134;
        float _2920 = (_2914 * _2147) + _2138;
        float _2921 = _2914 * 9.9999997473787516355514526367188e-05;
        float _2922 = (-1.0) - _2921;
        float _2924 = _2921 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2920 > _2924) || ((_2920 < _2922) || ((_2919 > _2924) || ((_2919 < _2922) || ((_2918 < _2922) || (_2918 > _2924))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3042 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2920, cbModelParam._m0[17u].z, fma(_2919, cbModelParam._m0[17u].y, _2918 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2920, cbModelParam._m0[18u].z, fma(_2919, cbModelParam._m0[18u].y, _2918 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2920, cbModelParam._m0[19u].z, fma(_2919, cbModelParam._m0[19u].y, _2918 * cbModelParam._m0[19u].x))), _2076);
            frontier_phi_27_52_ladder = _3042.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _3042.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _3042.x * cbModelParam._m0[1u].z;
        }
        _2166 = frontier_phi_27_52_ladder_2;
        _2168 = frontier_phi_27_52_ladder_1;
        _2170 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _2150 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1153, _1154, _1155), _2076);
        _2166 = _2150.x * cbModelParam._m0[1u].z;
        _2168 = _2150.y * cbModelParam._m0[1u].z;
        _2170 = _2150.z * cbModelParam._m0[1u].z;
    }
    float _2183 = (((_1178 * _1130) + _1179) * _1145) * ((cbModelParam._m0[1u].w * (_2166 - _2067)) + _2067);
    float _2185 = (((_1178 * _1132) + _1179) * _1145) * ((cbModelParam._m0[1u].w * (_2168 - _2069)) + _2069);
    float _2187 = (((_1178 * _1133) + _1179) * _1145) * ((cbModelParam._m0[1u].w * (_2170 - _2071)) + _2071);
    float _2190 = fma(_2187, cbSceneParam._m0[89u].z, fma(_2185, cbSceneParam._m0[89u].y, _2183 * cbSceneParam._m0[89u].x));
    float _2193 = fma(_2187, cbSceneParam._m0[90u].z, fma(_2185, cbSceneParam._m0[90u].y, _2183 * cbSceneParam._m0[90u].x));
    float _2196 = fma(_2187, cbSceneParam._m0[91u].z, fma(_2185, cbSceneParam._m0[91u].y, _2183 * cbSceneParam._m0[91u].x));
    float _2230 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2234 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2238 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2242 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2243 = _2230 / _2242;
    float _2244 = _2234 / _2242;
    float _2245 = _2238 / _2242;
    float _2392;
    float _2393;
    float _2394;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2272 = ((uint(_2245 > cbSceneParam._m0[59u].y) + uint(_2245 > cbSceneParam._m0[59u].x)) + uint(_2245 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2273 = _2272 + 43u;
        uint _2281 = _2272 + 44u;
        uint _2289 = _2272 + 45u;
        uint _2297 = _2272 + 46u;
        float _2308 = fma(_2242, cbSceneParam._m0[_2273].w, fma(_2238, cbSceneParam._m0[_2273].z, fma(_2234, cbSceneParam._m0[_2273].y, _2230 * cbSceneParam._m0[_2273].x)));
        float _2312 = fma(_2242, cbSceneParam._m0[_2281].w, fma(_2238, cbSceneParam._m0[_2281].z, fma(_2234, cbSceneParam._m0[_2281].y, _2230 * cbSceneParam._m0[_2281].x)));
        float _2320 = fma(_2242, cbSceneParam._m0[_2297].w, fma(_2238, cbSceneParam._m0[_2297].z, fma(_2234, cbSceneParam._m0[_2297].y, _2230 * cbSceneParam._m0[_2297].x)));
        float _2325 = cbSceneParam._m0[33u].z * _2320;
        float _2327 = cbSceneParam._m0[33u].w * _2320;
        float _2330 = fma(_2242, cbSceneParam._m0[_2289].w, fma(_2238, cbSceneParam._m0[_2289].z, fma(_2234, cbSceneParam._m0[_2289].y, _2230 * cbSceneParam._m0[_2289].x))) / _2320;
        float _2378 = (cbSceneParam._m0[33u].x - sqrt(((_2244 * _2244) + (_2243 * _2243)) + (_2245 * _2245))) * cbSceneParam._m0[33u].y;
        float _4789 = isnan(0.0) ? _2378 : (isnan(_2378) ? 0.0 : max(_2378, 0.0));
        float _2385 = (isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2325 + _2308) / _2320, (_2327 + _2312) / _2320), _2330), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2327 + _2308) / _2320, (_2312 - _2325) / _2320), _2330), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2308 - _2325) / _2320, (_2312 - _2327) / _2320), _2330), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2308 - _2327) / _2320, (_2325 + _2312) / _2320), _2330), 0.0)).x), vec4(0.25)));
        _2392 = 1.0 - (_2385 * cbSceneParam._m0[34u].x);
        _2393 = 1.0 - (_2385 * cbSceneParam._m0[34u].y);
        _2394 = 1.0 - (_2385 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2392 = 1.0;
        _2393 = 1.0;
        _2394 = 1.0;
    }
    float _2458;
    float _2460;
    float _2462;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2446 = fma(_2242, cbSceneParam._m0[63u].w, fma(_2238, cbSceneParam._m0[63u].z, fma(_2234, cbSceneParam._m0[63u].y, _2230 * cbSceneParam._m0[63u].x)));
        float _2447 = fma(_2242, cbSceneParam._m0[60u].w, fma(_2238, cbSceneParam._m0[60u].z, fma(_2234, cbSceneParam._m0[60u].y, _2230 * cbSceneParam._m0[60u].x))) / _2446;
        float _2448 = fma(_2242, cbSceneParam._m0[61u].w, fma(_2238, cbSceneParam._m0[61u].z, fma(_2234, cbSceneParam._m0[61u].y, _2230 * cbSceneParam._m0[61u].x))) / _2446;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2447 >= cbSceneParam._m0[64u].x) && (_2448 >= cbSceneParam._m0[64u].y)) && (_2447 <= cbSceneParam._m0[64u].z)) && (_2448 <= cbSceneParam._m0[64u].w))
        {
            float _2586 = fma(_2242, cbSceneParam._m0[62u].w, fma(_2238, cbSceneParam._m0[62u].z, fma(_2234, cbSceneParam._m0[62u].y, _2230 * cbSceneParam._m0[62u].x))) / _2446;
            float _2590 = isnan(cbSceneParam._m0[41u].w) ? _2586 : (isnan(_2586) ? cbSceneParam._m0[41u].w : max(_2586, cbSceneParam._m0[41u].w));
            float _2633 = (cbSceneParam._m0[33u].x - sqrt(((_2244 * _2244) + (_2243 * _2243)) + (_2245 * _2245))) * cbSceneParam._m0[33u].y;
            float _4805 = isnan(0.0) ? _2633 : (isnan(_2633) ? 0.0 : max(_2633, 0.0));
            float _2640 = (isnan(1.0) ? _4805 : (isnan(_4805) ? 1.0 : min(_4805, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2447, cbSceneParam._m0[33u].w + _2448), _2590), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2447, _2448 - cbSceneParam._m0[33u].z), _2590), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2447 - cbSceneParam._m0[33u].z, _2448 - cbSceneParam._m0[33u].w), _2590), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2447 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2448), _2590), 0.0)).x), vec4(0.25)));
            float _2644 = 1.0 - (_2640 * cbSceneParam._m0[34u].x);
            float _2645 = 1.0 - (_2640 * cbSceneParam._m0[34u].y);
            float _2646 = 1.0 - (_2640 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2646) ? _2394 : (isnan(_2394) ? _2646 : min(_2394, _2646));
            frontier_phi_39_38_ladder_1 = isnan(_2645) ? _2393 : (isnan(_2393) ? _2645 : min(_2393, _2645));
            frontier_phi_39_38_ladder_2 = isnan(_2644) ? _2392 : (isnan(_2392) ? _2644 : min(_2392, _2644));
        }
        else
        {
            frontier_phi_39_38_ladder = _2394;
            frontier_phi_39_38_ladder_1 = _2393;
            frontier_phi_39_38_ladder_2 = _2392;
        }
        _2458 = frontier_phi_39_38_ladder_2;
        _2460 = frontier_phi_39_38_ladder_1;
        _2462 = frontier_phi_39_38_ladder;
    }
    else
    {
        _2458 = _2392;
        _2460 = _2393;
        _2462 = _2394;
    }
    uvec4 _2467 = floatBitsToUint(cbInstanceData._m0[_1105 + 5u]);
    uint _2469 = _2467.x * 14u;
    uint _2470 = _2469 + 13u;
    float _2477 = _1145 + (-1.0);
    float _2482 = (cbLight._m0[_2470].x * _2477) + 1.0;
    float _2483 = (cbLight._m0[_2470].y * _2477) + 1.0;
    float _2484 = (cbLight._m0[_2470].z * _2477) + 1.0;
    float _2485 = (cbLight._m0[_2470].w * _2477) + 1.0;
    uint _2486 = _2469 + 5u;
    float _2492 = isnan(1.0) ? _2483 : (isnan(_2483) ? 1.0 : min(_2483, 1.0));
    uint _2496 = _2469 + 4u;
    float _2505 = isnan(1.0) ? _2482 : (isnan(_2482) ? 1.0 : min(_2482, 1.0));
    uint _2509 = _2469 | 1u;
    float _2520 = dot(vec3(cbLight._m0[_2469].xyz), vec3(_966, _967, _968));
    float _2523 = dot(vec3(cbLight._m0[_2509].xyz), vec3(_966, _967, _968));
    float _4841 = isnan(0.0) ? _2520 : (isnan(_2520) ? 0.0 : max(_2520, 0.0));
    float _4852 = isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : max(_2523, 0.0));
    float _2528 = (isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0))) * 0.3183098733425140380859375;
    float _2530 = (isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0))) * 0.3183098733425140380859375;
    float _2537 = ((cbLight._m0[_2486].x * _2492) * _2530) + (((cbLight._m0[_2496].x * _2458) * _2505) * _2528);
    float _2538 = ((_2492 * cbLight._m0[_2486].y) * _2530) + (((cbLight._m0[_2496].y * _2460) * _2505) * _2528);
    float _2539 = ((_2492 * cbLight._m0[_2486].z) * _2530) + (((cbLight._m0[_2496].z * _2462) * _2505) * _2528);
    uvec4 _2543 = floatBitsToUint(cbLight._m0[_2469 + 12u]);
    bool _2545 = _2543.x == 0u;
    float _2647;
    float _2649;
    float _2651;
    if (_2545)
    {
        _2647 = _2537;
        _2649 = _2538;
        _2651 = _2539;
    }
    else
    {
        uint _2655 = _2469 + 6u;
        float _2671 = (dot(vec3(cbLight._m0[_2469 + 2u].xyz), vec3(_966, _967, _968)) * 0.5) + 0.5;
        float _2672 = _2671 * _2671;
        float _4863 = isnan(0.0) ? _2672 : (isnan(_2672) ? 0.0 : max(_2672, 0.0));
        float _2673 = isnan(1.0) ? _4863 : (isnan(_4863) ? 1.0 : min(_4863, 1.0));
        float _2674 = isnan(1.0) ? _2484 : (isnan(_2484) ? 1.0 : min(_2484, 1.0));
        _2647 = (((cbLight._m0[_2655].x * 0.3183098733425140380859375) * _2673) * _2674) + _2537;
        _2649 = (((cbLight._m0[_2655].y * 0.3183098733425140380859375) * _2673) * _2674) + _2538;
        _2651 = (((cbLight._m0[_2655].z * 0.3183098733425140380859375) * _2673) * _2674) + _2539;
    }
    bool _2654 = _2543.y == 0u;
    float _2709;
    float _2711;
    float _2713;
    if (_2654)
    {
        _2709 = _2647;
        _2711 = _2649;
        _2713 = _2651;
    }
    else
    {
        uint _2882 = _2469 + 7u;
        float _2898 = (dot(vec3(cbLight._m0[_2469 + 3u].xyz), vec3(_966, _967, _968)) * 0.5) + 0.5;
        float _2899 = _2898 * _2898;
        float _4879 = isnan(0.0) ? _2899 : (isnan(_2899) ? 0.0 : max(_2899, 0.0));
        float _2900 = isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0));
        float _2901 = isnan(1.0) ? _2485 : (isnan(_2485) ? 1.0 : min(_2485, 1.0));
        _2709 = (((cbLight._m0[_2882].x * 0.3183098733425140380859375) * _2900) * _2901) + _2647;
        _2711 = (((cbLight._m0[_2882].y * 0.3183098733425140380859375) * _2900) * _2901) + _2649;
        _2713 = (((cbLight._m0[_2882].z * 0.3183098733425140380859375) * _2900) * _2901) + _2651;
    }
    uint _2716 = _2469 + 8u;
    float _2729 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2469].w)) * _969) * 0.949999988079071044921875);
    float _2730 = _2729 * _2729;
    float _2731 = cbLight._m0[_2469].x + _1050;
    float _2732 = cbLight._m0[_2469].y + _1051;
    float _2733 = cbLight._m0[_2469].z + _1052;
    float _2737 = inversesqrt(dot(vec3(_2731, _2732, _2733), vec3(_2731, _2732, _2733)));
    float _2738 = _2737 * _2731;
    float _2739 = _2737 * _2732;
    float _2740 = _2737 * _2733;
    float _2741 = dot(vec3(_966, _967, _968), vec3(cbLight._m0[_2469].xyz));
    float _4895 = isnan(0.0) ? _2741 : (isnan(_2741) ? 0.0 : max(_2741, 0.0));
    float _2744 = isnan(1.0) ? _4895 : (isnan(_4895) ? 1.0 : min(_4895, 1.0));
    float _4906 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
    float _2745 = isnan(1.0) ? _4906 : (isnan(_4906) ? 1.0 : min(_4906, 1.0));
    float _2746 = dot(vec3(_966, _967, _968), vec3(_2738, _2739, _2740));
    float _4917 = isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0));
    float _2749 = isnan(1.0) ? _4917 : (isnan(_4917) ? 1.0 : min(_4917, 1.0));
    float _2750 = dot(vec3(cbLight._m0[_2469].xyz), vec3(_2738, _2739, _2740));
    float _4928 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
    float _2754 = _2730 * _2730;
    float _2758 = ((_2749 * _2749) * (_2754 + (-1.0))) + 1.0;
    float _2766 = exp2(log2(1.0 - (isnan(1.0) ? _4928 : (isnan(_4928) ? 1.0 : min(_4928, 1.0)))) * 5.0);
    float _2767 = 0.959999978542327880859375 - _1127;
    float _2769 = 0.959999978542327880859375 - _1128;
    float _2770 = 0.959999978542327880859375 - _1129;
    float _2777 = 1.0 - _2730;
    float _2788 = (0.5 / (((_2745 * ((_2744 * _2777) + _2730)) + 9.9999999392252902907785028219223e-09) + (((_2745 * _2777) + _2730) * _2744))) * _2744;
    float _4939 = isnan(0.0) ? _2788 : (isnan(_2788) ? 0.0 : max(_2788, 0.0));
    float _2790 = (isnan(1.0) ? _4939 : (isnan(_4939) ? 1.0 : min(_4939, 1.0))) * (_2754 / ((_2758 * _2758) * 3.141590118408203125));
    uint _2804 = _2469 + 9u;
    float _2815 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2509].w)) * _969) * 0.949999988079071044921875);
    float _2816 = _2815 * _2815;
    float _2817 = cbLight._m0[_2509].x + _1050;
    float _2818 = cbLight._m0[_2509].y + _1051;
    float _2819 = cbLight._m0[_2509].z + _1052;
    float _2823 = inversesqrt(dot(vec3(_2817, _2818, _2819), vec3(_2817, _2818, _2819)));
    float _2824 = _2823 * _2817;
    float _2825 = _2823 * _2818;
    float _2826 = _2823 * _2819;
    float _2827 = dot(vec3(_966, _967, _968), vec3(cbLight._m0[_2509].xyz));
    float _4950 = isnan(0.0) ? _2827 : (isnan(_2827) ? 0.0 : max(_2827, 0.0));
    float _2830 = isnan(1.0) ? _4950 : (isnan(_4950) ? 1.0 : min(_4950, 1.0));
    float _2831 = dot(vec3(_966, _967, _968), vec3(_2824, _2825, _2826));
    float _4961 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
    float _2834 = isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0));
    float _2835 = dot(vec3(cbLight._m0[_2509].xyz), vec3(_2824, _2825, _2826));
    float _4972 = isnan(0.0) ? _2835 : (isnan(_2835) ? 0.0 : max(_2835, 0.0));
    float _2839 = _2816 * _2816;
    float _2843 = ((_2834 * _2834) * (_2839 + (-1.0))) + 1.0;
    float _2850 = exp2(log2(1.0 - (isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0)))) * 5.0);
    float _2857 = 1.0 - _2816;
    float _2867 = (0.5 / (((_2745 * ((_2830 * _2857) + _2816)) + 9.9999999392252902907785028219223e-09) + (((_2745 * _2857) + _2816) * _2830))) * _2830;
    float _4983 = isnan(0.0) ? _2867 : (isnan(_2867) ? 0.0 : max(_2867, 0.0));
    float _2869 = (isnan(1.0) ? _4983 : (isnan(_4983) ? 1.0 : min(_4983, 1.0))) * (_2839 / ((_2843 * _2843) * 3.141590118408203125));
    float _2879 = (((((_2850 * _2767) + _1130) * cbLight._m0[_2804].x) * _2869) * _2492) + ((((cbLight._m0[_2716].x * _2458) * ((_2766 * _2767) + _1130)) * _2790) * _2505);
    float _2880 = (((((_2850 * _2769) + _1132) * cbLight._m0[_2804].y) * _2869) * _2492) + ((((cbLight._m0[_2716].y * _2460) * ((_2766 * _2769) + _1132)) * _2790) * _2505);
    float _2881 = (((((_2850 * _2770) + _1133) * cbLight._m0[_2804].z) * _2869) * _2492) + ((((cbLight._m0[_2716].z * _2462) * ((_2766 * _2770) + _1133)) * _2790) * _2505);
    float _2937;
    float _2939;
    float _2941;
    if (_2545)
    {
        _2937 = _2879;
        _2939 = _2880;
        _2941 = _2881;
    }
    else
    {
        uint _2943 = _2469 + 2u;
        uint _2947 = _2469 + 10u;
        float _2961 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2943].w)) * _969) * 0.949999988079071044921875);
        float _2962 = _2961 * _2961;
        float _2963 = cbLight._m0[_2943].x + _1050;
        float _2964 = cbLight._m0[_2943].y + _1051;
        float _2965 = cbLight._m0[_2943].z + _1052;
        float _2969 = inversesqrt(dot(vec3(_2963, _2964, _2965), vec3(_2963, _2964, _2965)));
        float _2970 = _2969 * _2963;
        float _2971 = _2969 * _2964;
        float _2972 = _2969 * _2965;
        float _2973 = dot(vec3(_966, _967, _968), vec3(cbLight._m0[_2943].xyz));
        float _4994 = isnan(0.0) ? _2973 : (isnan(_2973) ? 0.0 : max(_2973, 0.0));
        float _2976 = isnan(1.0) ? _4994 : (isnan(_4994) ? 1.0 : min(_4994, 1.0));
        float _2977 = dot(vec3(_966, _967, _968), vec3(_2970, _2971, _2972));
        float _5005 = isnan(0.0) ? _2977 : (isnan(_2977) ? 0.0 : max(_2977, 0.0));
        float _2980 = isnan(1.0) ? _5005 : (isnan(_5005) ? 1.0 : min(_5005, 1.0));
        float _2981 = dot(vec3(cbLight._m0[_2943].xyz), vec3(_2970, _2971, _2972));
        float _5016 = isnan(0.0) ? _2981 : (isnan(_2981) ? 0.0 : max(_2981, 0.0));
        float _2985 = _2962 * _2962;
        float _2989 = ((_2980 * _2980) * (_2985 + (-1.0))) + 1.0;
        float _2996 = exp2(log2(1.0 - (isnan(1.0) ? _5016 : (isnan(_5016) ? 1.0 : min(_5016, 1.0)))) * 5.0);
        float _3003 = 1.0 - _2962;
        float _3013 = (0.5 / (((_2745 * ((_2976 * _3003) + _2962)) + 9.9999999392252902907785028219223e-09) + (((_2745 * _3003) + _2962) * _2976))) * _2976;
        float _5027 = isnan(0.0) ? _3013 : (isnan(_3013) ? 0.0 : max(_3013, 0.0));
        float _3015 = (isnan(1.0) ? _5027 : (isnan(_5027) ? 1.0 : min(_5027, 1.0))) * (_2985 / ((_2989 * _2989) * 3.141590118408203125));
        float _3016 = isnan(1.0) ? _2484 : (isnan(_2484) ? 1.0 : min(_2484, 1.0));
        _2937 = (((((_2996 * _2767) + _1130) * cbLight._m0[_2947].x) * _3015) * _3016) + _2879;
        _2939 = (((((_2996 * _2769) + _1132) * cbLight._m0[_2947].y) * _3015) * _3016) + _2880;
        _2941 = (((((_2996 * _2770) + _1133) * cbLight._m0[_2947].z) * _3015) * _3016) + _2881;
    }
    float _3047;
    float _3049;
    float _3051;
    if (_2654)
    {
        _3047 = _2937;
        _3049 = _2939;
        _3051 = _2941;
    }
    else
    {
        uint _3058 = _2469 + 3u;
        uint _3062 = _2469 + 11u;
        float _3076 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3058].w)) * _969) * 0.949999988079071044921875);
        float _3077 = _3076 * _3076;
        float _3078 = cbLight._m0[_3058].x + _1050;
        float _3079 = cbLight._m0[_3058].y + _1051;
        float _3080 = cbLight._m0[_3058].z + _1052;
        float _3084 = inversesqrt(dot(vec3(_3078, _3079, _3080), vec3(_3078, _3079, _3080)));
        float _3085 = _3084 * _3078;
        float _3086 = _3084 * _3079;
        float _3087 = _3084 * _3080;
        float _3088 = dot(vec3(_966, _967, _968), vec3(cbLight._m0[_3058].xyz));
        float _5043 = isnan(0.0) ? _3088 : (isnan(_3088) ? 0.0 : max(_3088, 0.0));
        float _3091 = isnan(1.0) ? _5043 : (isnan(_5043) ? 1.0 : min(_5043, 1.0));
        float _3092 = dot(vec3(_966, _967, _968), vec3(_3085, _3086, _3087));
        float _5054 = isnan(0.0) ? _3092 : (isnan(_3092) ? 0.0 : max(_3092, 0.0));
        float _3095 = isnan(1.0) ? _5054 : (isnan(_5054) ? 1.0 : min(_5054, 1.0));
        float _3096 = dot(vec3(cbLight._m0[_3058].xyz), vec3(_3085, _3086, _3087));
        float _5065 = isnan(0.0) ? _3096 : (isnan(_3096) ? 0.0 : max(_3096, 0.0));
        float _3100 = _3077 * _3077;
        float _3104 = ((_3095 * _3095) * (_3100 + (-1.0))) + 1.0;
        float _3111 = exp2(log2(1.0 - (isnan(1.0) ? _5065 : (isnan(_5065) ? 1.0 : min(_5065, 1.0)))) * 5.0);
        float _3118 = 1.0 - _3077;
        float _3128 = (0.5 / (((_2745 * ((_3091 * _3118) + _3077)) + 9.9999999392252902907785028219223e-09) + (((_2745 * _3118) + _3077) * _3091))) * _3091;
        float _5076 = isnan(0.0) ? _3128 : (isnan(_3128) ? 0.0 : max(_3128, 0.0));
        float _3130 = (isnan(1.0) ? _5076 : (isnan(_5076) ? 1.0 : min(_5076, 1.0))) * (_3100 / ((_3104 * _3104) * 3.141590118408203125));
        float _3131 = isnan(1.0) ? _2485 : (isnan(_2485) ? 1.0 : min(_2485, 1.0));
        _3047 = (((((_3111 * _2767) + _1130) * cbLight._m0[_3062].x) * _3130) * _3131) + _2937;
        _3049 = (((((_3111 * _2769) + _1132) * cbLight._m0[_3062].y) * _3130) * _3131) + _2939;
        _3051 = (((((_3111 * _2770) + _1133) * cbLight._m0[_3062].z) * _3130) * _3131) + _2941;
    }
    float _3197;
    float _3199;
    float _3201;
    float _3203;
    float _3205;
    float _3207;
    if (_2467.y == 0u)
    {
        uvec4 _3152 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3153 = _3152.x;
        uint _3164 = uint((float(_3152.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1068) / _3153))) + floor(float(uint(cbSceneParam._m0[85u].x * _1067) / _3153)));
        float _3174 = (log2(_2245 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3175 = isnan(0.0) ? _3174 : (isnan(_3174) ? 0.0 : max(_3174, 0.0));
        uint _3178 = uint(isnan(14.0) ? _3175 : (isnan(_3175) ? 14.0 : min(_3175, 14.0)));
        uvec4 _3183 = texelFetch(g_lightClusterGridBuffer, int(((_3178 << 2u) + (_3164 << 6u)) >> 2u));
        uint _3184 = _3183.x;
        uint _3185 = _3152.z;
        float _3264;
        float _3266;
        float _3268;
        float _3270;
        float _3272;
        float _3274;
        if (((((1u << ((_3185 >> 4u) & 15u)) + 4294967295u) & _3184) == 0u) || ((_3185 & 240u) == 0u))
        {
            _3264 = 0.0;
            _3266 = 0.0;
            _3268 = 0.0;
            _3270 = 0.0;
            _3272 = 0.0;
            _3274 = 0.0;
        }
        else
        {
            float _3265;
            float _3267;
            float _3269;
            float _3271;
            float _3273;
            float _3275;
            float _3417 = 0.0;
            float _3418 = 0.0;
            float _3419 = 0.0;
            float _3420 = 0.0;
            float _3421 = 0.0;
            float _3422 = 0.0;
            uint _3423 = 0u;
            uint _3432;
            bool _3433;
            for (;;)
            {
                _3432 = texelFetch(g_lightClassification, int((((_3178 << 5u) + (_3164 << 9u)) + (_3423 << 2u)) >> 2u)).x;
                _3433 = _3432 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_3433)
                {
                    frontier_phi_73_pred = _3422;
                    frontier_phi_73_pred_1 = _3421;
                    frontier_phi_73_pred_2 = _3420;
                    frontier_phi_73_pred_3 = _3419;
                    frontier_phi_73_pred_4 = _3418;
                    frontier_phi_73_pred_5 = _3417;
                }
                else
                {
                    float _3562;
                    float _3563;
                    float _3564;
                    float _3565;
                    float _3566;
                    float _3567;
                    uint _3568;
                    _3562 = _3417;
                    _3563 = _3418;
                    _3564 = _3419;
                    _3565 = _3420;
                    _3566 = _3421;
                    _3567 = _3422;
                    _3568 = _3432;
                    float _3489;
                    float _3490;
                    float _3491;
                    float _3492;
                    float _3493;
                    float _3494;
                    for (;;)
                    {
                        uint _3572 = uint(findLSB(_3568)) + (_3423 << 5u);
                        uint _3569 = (_3568 + 4294967295u) & _3568;
                        uint _3574 = _3572 * 48u;
                        vec4 _3588 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3574)).x, texelFetch(g_PointLightRenderingBuffer, int(_3574 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3574 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3574 + 3u)).x));
                        uint _3594 = (_3572 * 48u) + 4u;
                        vec4 _3607 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3594)).x, texelFetch(g_PointLightRenderingBuffer, int(_3594 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3594 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3594 + 3u)).x));
                        uint _3613 = (_3572 * 48u) + 8u;
                        vec3 _3624 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3613)).x, texelFetch(g_PointLightRenderingBuffer, int(_3613 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3613 + 2u)).x));
                        float _3628 = _3588.x - _2243;
                        float _3629 = _3588.y - _2244;
                        float _3630 = _3588.z - _2245;
                        float _3631 = dot(vec3(_3628, _3629, _3630), vec3(_3628, _3629, _3630));
                        float _3634 = inversesqrt(_3631);
                        float _3635 = _3634 * _3628;
                        float _3636 = _3634 * _3629;
                        float _3637 = _3634 * _3630;
                        float _3638 = dot(vec3(_1086, _1089, _1092), vec3(_3635, _3636, _3637));
                        float _3643 = 1.0 - (_3631 * _3588.w);
                        float _5102 = isnan(0.0) ? _3643 : (isnan(_3643) ? 0.0 : max(_3643, 0.0));
                        float _3644 = isnan(1.0) ? _5102 : (isnan(_5102) ? 1.0 : min(_5102, 1.0));
                        float _3645 = sqrt(_3631) * _3607.w;
                        float _3648 = 1.39999997615814208984375 / (_3645 + 1.39999997615814208984375);
                        float _3649 = _3648 * _3648;
                        float _3652 = ((1.0 - _3649) * _3638) + _3649;
                        float _3655 = _3645 * _3645;
                        float _3659 = ((isnan(0.0) ? _3652 : (isnan(_3652) ? 0.0 : max(_3652, 0.0))) * _3644) / ((_3655 * 0.699999988079071044921875) + 1.0);
                        float _3663 = (-0.0) - _2243;
                        float _3664 = (-0.0) - _2244;
                        float _3665 = (-0.0) - _2245;
                        float _3669 = inversesqrt(dot(vec3(_3663, _3664, _3665), vec3(_3663, _3664, _3665)));
                        float _3670 = _3669 * _3663;
                        float _3671 = _3669 * _3664;
                        float _3672 = _3669 * _3665;
                        float _3679 = exp2(log2(1.0 / ((_3655 * 3.5) + 5.0)) * 0.25);
                        float _3680 = 1.0 - _1161;
                        float _3687 = sqrt(1.0 - ((1.0 - (_3680 * _3680)) * (1.0 - (_3679 * _3679))));
                        float _3688 = _3687 * _3687;
                        float _3689 = _3688 * _3688;
                        float _3690 = _3670 + _3635;
                        float _3691 = _3671 + _3636;
                        float _3692 = _3672 + _3637;
                        float _3696 = inversesqrt(dot(vec3(_3690, _3691, _3692), vec3(_3690, _3691, _3692)));
                        float _3700 = dot(vec3(_1086, _1089, _1092), vec3(_3670, _3671, _3672));
                        float _5118 = isnan(0.0) ? _3700 : (isnan(_3700) ? 0.0 : max(_3700, 0.0));
                        float _3703 = isnan(1.0) ? _5118 : (isnan(_5118) ? 1.0 : min(_5118, 1.0));
                        float _3704 = dot(vec3(_1086, _1089, _1092), vec3(_3696 * _3690, _3696 * _3691, _3696 * _3692));
                        float _5129 = isnan(0.0) ? _3704 : (isnan(_3704) ? 0.0 : max(_3704, 0.0));
                        float _3707 = isnan(1.0) ? _5129 : (isnan(_5129) ? 1.0 : min(_5129, 1.0));
                        float _3711 = ((_3707 * _3707) * (_3689 + (-1.0))) + 1.0;
                        float _3712 = _3648 * _3688;
                        float _3713 = _3712 * _3712;
                        float _3716 = ((1.0 - _3713) * _3638) + _3713;
                        float _5140 = isnan(0.0) ? _3716 : (isnan(_3716) ? 0.0 : max(_3716, 0.0));
                        float _3717 = isnan(1.0) ? _5140 : (isnan(_5140) ? 1.0 : min(_5140, 1.0));
                        float _3718 = 1.0 - _3688;
                        float _3728 = (0.5 / (((_3717 * ((_3703 * _3718) + _3688)) + 9.9999999392252902907785028219223e-09) + (((_3717 * _3718) + _3688) * _3703))) * _3717;
                        float _5151 = isnan(0.0) ? _3728 : (isnan(_3728) ? 0.0 : max(_3728, 0.0));
                        float _3739 = (((_3689 * 3.1415927410125732421875) * (isnan(1.0) ? _5151 : (isnan(_5151) ? 1.0 : min(_5151, 1.0)))) / ((_3711 * _3711) * ((_3655 * 2.1991131305694580078125) + 3.141590118408203125))) * _3644;
                        _3492 = (_3659 * _3607.x) + _3565;
                        _3493 = (_3659 * _3607.y) + _3566;
                        _3494 = (_3659 * _3607.z) + _3567;
                        _3489 = (_3739 * _3624.x) + _3562;
                        _3490 = (_3739 * _3624.y) + _3563;
                        _3491 = (_3739 * _3624.z) + _3564;
                        if (_3569 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3562 = _3489;
                            _3563 = _3490;
                            _3564 = _3491;
                            _3565 = _3492;
                            _3566 = _3493;
                            _3567 = _3494;
                            _3568 = _3569;
                        }
                    }
                    frontier_phi_73_pred = _3494;
                    frontier_phi_73_pred_1 = _3493;
                    frontier_phi_73_pred_2 = _3492;
                    frontier_phi_73_pred_3 = _3491;
                    frontier_phi_73_pred_4 = _3490;
                    frontier_phi_73_pred_5 = _3489;
                }
                _3275 = frontier_phi_73_pred;
                _3273 = frontier_phi_73_pred_1;
                _3271 = frontier_phi_73_pred_2;
                _3269 = frontier_phi_73_pred_3;
                _3267 = frontier_phi_73_pred_4;
                _3265 = frontier_phi_73_pred_5;
                uint _3424 = _3423 + 1u;
                if (_3424 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3417 = _3265;
                    _3418 = _3267;
                    _3419 = _3269;
                    _3420 = _3271;
                    _3421 = _3273;
                    _3422 = _3275;
                    _3423 = _3424;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3264 = _3265;
            _3266 = _3267;
            _3268 = _3269;
            _3270 = _3271;
            _3272 = _3273;
            _3274 = _3275;
        }
        uvec4 _3278 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3279 = _3278.z;
        uint _3281 = (_3279 >> 8u) & 15u;
        float _3385;
        float _3387;
        float _3389;
        float _3391;
        float _3393;
        float _3395;
        if (((4294967295u << _3281) & _3184) == 0u)
        {
            _3385 = _3264;
            _3387 = _3266;
            _3389 = _3268;
            _3391 = _3270;
            _3393 = _3272;
            _3395 = _3274;
        }
        else
        {
            float _3410 = inversesqrt(dot(vec3(_2243, _2244, _2245), vec3(_2243, _2244, _2245)));
            float _3411 = _3410 * _2243;
            float _3412 = _3410 * _2244;
            float _3413 = _3410 * _2245;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_3281 < ((_3279 >> 12u) & 15u))
            {
                float _3386;
                float _3388;
                float _3390;
                float _3392;
                float _3394;
                float _3396;
                float _3545 = _3264;
                float _3546 = _3266;
                float _3547 = _3268;
                float _3548 = _3270;
                float _3549 = _3272;
                float _3550 = _3274;
                uint _3551 = _3281;
                uint _3560;
                bool _3561;
                for (;;)
                {
                    _3560 = texelFetch(g_lightClassification, int((((_3178 << 5u) + (_3164 << 9u)) + (_3551 << 2u)) >> 2u)).x;
                    _3561 = _3560 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3561)
                    {
                        frontier_phi_84_pred = _3550;
                        frontier_phi_84_pred_1 = _3549;
                        frontier_phi_84_pred_2 = _3548;
                        frontier_phi_84_pred_3 = _3547;
                        frontier_phi_84_pred_4 = _3546;
                        frontier_phi_84_pred_5 = _3545;
                    }
                    else
                    {
                        float _3753;
                        float _3754;
                        float _3755;
                        float _3756;
                        float _3757;
                        float _3758;
                        float _4046;
                        float _4047;
                        float _4048;
                        float _4049;
                        float _4050;
                        float _4051;
                        float _3766 = _3545;
                        float _3767 = _3546;
                        float _3768 = _3547;
                        float _3769 = _3548;
                        float _3770 = _3549;
                        float _3771 = _3550;
                        uint _3772 = _3560;
                        uint _3773;
                        vec4 _3798;
                        float _3799;
                        vec4 _3814;
                        vec3 _3826;
                        vec4 _3841;
                        vec4 _3856;
                        float _3902;
                        bool _3903;
                        for (;;)
                        {
                            uint _3783 = ((_3551 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3772));
                            _3773 = (_3772 + 4294967295u) & _3772;
                            uint _3785 = _3783 * 40u;
                            _3798 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3785)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3785 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3785 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3785 + 3u)).x));
                            _3799 = _3798.w;
                            uint _3801 = (_3783 * 40u) + 4u;
                            _3814 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3801)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3801 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3801 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3801 + 3u)).x));
                            uint _3816 = (_3783 * 40u) + 8u;
                            _3826 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3816)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3816 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3816 + 2u)).x));
                            uint _3828 = (_3783 * 40u) + 16u;
                            _3841 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3828)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3828 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3828 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3828 + 3u)).x));
                            uint _3843 = (_3783 * 40u) + 20u;
                            _3856 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3843)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3843 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3843 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3843 + 3u)).x));
                            uint _3858 = (_3783 * 40u) + 24u;
                            vec4 _3871 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3858)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3858 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3858 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3858 + 3u)).x));
                            uint _3877 = (_3783 * 40u) + 28u;
                            vec4 _3890 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3877)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3877 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3877 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3877 + 3u)).x));
                            _3902 = fma(_2245, _3890.z, fma(_2244, _3890.y, _3890.x * _2243)) + _3890.w;
                            _3903 = !((fma(_2245, _3871.z, fma(_2244, _3871.y, _3871.x * _2243)) + _3871.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_3903)
                            {
                                float _3930 = _3798.x - _2243;
                                float _3931 = _3798.y - _2244;
                                float _3932 = _3798.z - _2245;
                                float _3933 = dot(vec3(_3930, _3931, _3932), vec3(_3930, _3931, _3932));
                                float _3936 = inversesqrt(_3933);
                                float _3937 = _3936 * _3930;
                                float _3938 = _3936 * _3931;
                                float _3939 = _3936 * _3932;
                                float _3943 = 1.0 - (_3933 / (_3799 * _3799));
                                float _5162 = isnan(0.0) ? _3943 : (isnan(_3943) ? 0.0 : max(_3943, 0.0));
                                float _3944 = isnan(1.0) ? _5162 : (isnan(_5162) ? 1.0 : min(_5162, 1.0));
                                float _3948 = sqrt(_3933) * _3814.w;
                                float _3950 = 1.39999997615814208984375 / (_3948 + 1.39999997615814208984375);
                                float _3951 = _3950 * _3950;
                                float _3954 = ((1.0 - _3951) * dot(vec3(_3937, _3938, _3939), vec3(_1086, _1089, _1092))) + _3951;
                                float _3957 = _3948 * _3948;
                                float _3961 = (fma(_2245, _3841.z, fma(_2244, _3841.y, _3841.x * _2243)) + _3841.w) / _3902;
                                float _3962 = (fma(_2245, _3856.z, fma(_2244, _3856.y, _3856.x * _2243)) + _3856.w) / _3902;
                                float _3966 = 1.0 - dot(vec2(_3961, _3962), vec2(_3961, _3962));
                                float _5178 = isnan(0.0) ? _3966 : (isnan(_3966) ? 0.0 : max(_3966, 0.0));
                                float _3967 = isnan(1.0) ? _5178 : (isnan(_5178) ? 1.0 : min(_5178, 1.0));
                                float _3968 = _3967 * (((isnan(0.0) ? _3954 : (isnan(_3954) ? 0.0 : max(_3954, 0.0))) * _3944) / ((_3957 * 0.699999988079071044921875) + 1.0));
                                float _3980 = exp2(log2(1.0 / ((_3957 * 3.5) + 5.0)) * 0.25);
                                float _3981 = 1.0 - _1161;
                                float _3988 = sqrt(1.0 - ((1.0 - (_3981 * _3981)) * (1.0 - (_3980 * _3980))));
                                float _3989 = _3988 * _3988;
                                float _3990 = _3989 * _3989;
                                float _3991 = _3937 - _3411;
                                float _3992 = _3938 - _3412;
                                float _3993 = _3939 - _3413;
                                float _3997 = inversesqrt(dot(vec3(_3991, _3992, _3993), vec3(_3991, _3992, _3993)));
                                float _4001 = dot(vec3(_1086, _1089, _1092), vec3((-0.0) - _3411, (-0.0) - _3412, (-0.0) - _3413));
                                float _5189 = isnan(0.0) ? _4001 : (isnan(_4001) ? 0.0 : max(_4001, 0.0));
                                float _4004 = isnan(1.0) ? _5189 : (isnan(_5189) ? 1.0 : min(_5189, 1.0));
                                float _4005 = dot(vec3(_1086, _1089, _1092), vec3(_3997 * _3991, _3997 * _3992, _3997 * _3993));
                                float _5200 = isnan(0.0) ? _4005 : (isnan(_4005) ? 0.0 : max(_4005, 0.0));
                                float _4008 = isnan(1.0) ? _5200 : (isnan(_5200) ? 1.0 : min(_5200, 1.0));
                                float _4012 = ((_4008 * _4008) * (_3990 + (-1.0))) + 1.0;
                                float _4013 = _3950 * _3989;
                                float _4014 = _4013 * _4013;
                                float _4020 = ((1.0 - _4014) * dot(vec3(_1086, _1089, _1092), vec3(_3937, _3938, _3939))) + _4014;
                                float _5211 = isnan(0.0) ? _4020 : (isnan(_4020) ? 0.0 : max(_4020, 0.0));
                                float _4021 = isnan(1.0) ? _5211 : (isnan(_5211) ? 1.0 : min(_5211, 1.0));
                                float _4022 = 1.0 - _3989;
                                float _4032 = (0.5 / (((_4021 * ((_4004 * _4022) + _3989)) + 9.9999999392252902907785028219223e-09) + (((_4021 * _4022) + _3989) * _4004))) * _4021;
                                float _5222 = isnan(0.0) ? _4032 : (isnan(_4032) ? 0.0 : max(_4032, 0.0));
                                float _4042 = (_3967 * _3944) * (((_3990 * 3.1415927410125732421875) * (isnan(1.0) ? _5222 : (isnan(_5222) ? 1.0 : min(_5222, 1.0)))) / ((_4012 * _4012) * ((_3957 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _3968 * _3814.z;
                                frontier_phi_90_pred_1 = _3968 * _3814.y;
                                frontier_phi_90_pred_2 = _3968 * _3814.x;
                                frontier_phi_90_pred_3 = _4042 * _3826.z;
                                frontier_phi_90_pred_4 = _4042 * _3826.y;
                                frontier_phi_90_pred_5 = _4042 * _3826.x;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _4051 = frontier_phi_90_pred;
                            _4050 = frontier_phi_90_pred_1;
                            _4049 = frontier_phi_90_pred_2;
                            _4048 = frontier_phi_90_pred_3;
                            _4047 = frontier_phi_90_pred_4;
                            _4046 = frontier_phi_90_pred_5;
                            _3756 = _4049 + _3769;
                            _3757 = _4050 + _3770;
                            _3758 = _4051 + _3771;
                            _3753 = _4046 + _3766;
                            _3754 = _4047 + _3767;
                            _3755 = _4048 + _3768;
                            if (_3773 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3766 = _3753;
                                _3767 = _3754;
                                _3768 = _3755;
                                _3769 = _3756;
                                _3770 = _3757;
                                _3771 = _3758;
                                _3772 = _3773;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _3758;
                        frontier_phi_84_pred_1 = _3757;
                        frontier_phi_84_pred_2 = _3756;
                        frontier_phi_84_pred_3 = _3755;
                        frontier_phi_84_pred_4 = _3754;
                        frontier_phi_84_pred_5 = _3753;
                    }
                    _3396 = frontier_phi_84_pred;
                    _3394 = frontier_phi_84_pred_1;
                    _3392 = frontier_phi_84_pred_2;
                    _3390 = frontier_phi_84_pred_3;
                    _3388 = frontier_phi_84_pred_4;
                    _3386 = frontier_phi_84_pred_5;
                    uint _3552 = _3551 + 1u;
                    if (_3552 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3545 = _3386;
                        _3546 = _3388;
                        _3547 = _3390;
                        _3548 = _3392;
                        _3549 = _3394;
                        _3550 = _3396;
                        _3551 = _3552;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _3392;
                frontier_phi_65_66_ladder_1 = _3396;
                frontier_phi_65_66_ladder_2 = _3394;
                frontier_phi_65_66_ladder_3 = _3390;
                frontier_phi_65_66_ladder_4 = _3388;
                frontier_phi_65_66_ladder_5 = _3386;
            }
            else
            {
                frontier_phi_65_66_ladder = _3270;
                frontier_phi_65_66_ladder_1 = _3274;
                frontier_phi_65_66_ladder_2 = _3272;
                frontier_phi_65_66_ladder_3 = _3268;
                frontier_phi_65_66_ladder_4 = _3266;
                frontier_phi_65_66_ladder_5 = _3264;
            }
            _3385 = frontier_phi_65_66_ladder_5;
            _3387 = frontier_phi_65_66_ladder_4;
            _3389 = frontier_phi_65_66_ladder_3;
            _3391 = frontier_phi_65_66_ladder;
            _3393 = frontier_phi_65_66_ladder_2;
            _3395 = frontier_phi_65_66_ladder_1;
        }
        float _3400 = isnan(1.0) ? _1145 : (isnan(_1145) ? 1.0 : min(_1145, 1.0));
        _3197 = (_3400 * _3391) + _2709;
        _3199 = (_3400 * _3393) + _2711;
        _3201 = (_3400 * _3395) + _2713;
        _3203 = ((_3385 * _1130) * _3400) + _3047;
        _3205 = ((_3387 * _1132) * _3400) + _3049;
        _3207 = ((_3389 * _1133) * _3400) + _3051;
    }
    else
    {
        _3197 = _2709;
        _3199 = _2711;
        _3201 = _2713;
        _3203 = _3047;
        _3205 = _3049;
        _3207 = _3051;
    }
    float _5238 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
    float _5249 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
    float _5260 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
    float _3224 = ((isnan(1.0) ? _5238 : (isnan(_5238) ? 1.0 : min(_5238, 1.0))) * (_3197 + ((isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0))) * _1145))) + ((_3203 + ((isnan(0.0) ? _2190 : (isnan(_2190) ? 0.0 : max(_2190, 0.0))) * _1976)) * cbPerFrame._m0[3u].x);
    float _3225 = ((isnan(1.0) ? _5249 : (isnan(_5249) ? 1.0 : min(_5249, 1.0))) * (_3199 + ((isnan(0.0) ? _1900 : (isnan(_1900) ? 0.0 : max(_1900, 0.0))) * _1145))) + ((_3205 + ((isnan(0.0) ? _2193 : (isnan(_2193) ? 0.0 : max(_2193, 0.0))) * _1976)) * cbPerFrame._m0[3u].x);
    float _3226 = ((isnan(1.0) ? _5260 : (isnan(_5260) ? 1.0 : min(_5260, 1.0))) * (_3201 + ((isnan(0.0) ? _1903 : (isnan(_1903) ? 0.0 : max(_1903, 0.0))) * _1145))) + ((_3207 + ((isnan(0.0) ? _2196 : (isnan(_2196) ? 0.0 : max(_2196, 0.0))) * _1976)) * cbPerFrame._m0[3u].x);
    uint _3227 = _1105 + 6u;
    float _3235 = _1067 / cbSceneParam._m0[86u].x;
    float _3236 = _1068 / cbSceneParam._m0[86u].y;
    vec4 _3250 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3235, _3236, (log2((isnan(cbSceneParam._m0[77u].w) ? _993 : (isnan(_993) ? cbSceneParam._m0[77u].w : min(_993, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3252 = _3250.x;
    float _3253 = _3250.y;
    float _3254 = _3250.z;
    float _3255 = _3250.w;
    float _3327;
    float _3329;
    float _3331;
    float _3333;
    if (_993 > cbSceneParam._m0[78u].w)
    {
        float _3289 = isnan(_993) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _993 : min(cbSceneParam._m0[80u].w, _993));
        float _3290 = _3289 / _993;
        float _3301 = _3290 * _1043;
        float _3302 = _1044 * _3290;
        float _3303 = (-0.0) - _3302;
        float _3305 = _3290 * _1045;
        float _3307 = (cbSceneParam._m0[77u].w * _3303) / _3289;
        float _3308 = _3307 + cbSceneParam._m0[79u].w;
        float _3309 = cbSceneParam._m0[79u].w - _3302;
        float _3315 = sqrt(((_3301 * _3301) + (_3302 * _3302)) + (_3305 * _3305));
        float _3318 = (1.0 - (cbSceneParam._m0[77u].w / _3289)) * _3315;
        float _3323 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3325 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3502;
        if (abs((_3303 - _3307) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3502 = ((((_3308 > 0.0) ? exp2(_3323 * _3308) : (2.0 - exp2(_3325 * _3308))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3318;
        }
        else
        {
            float _3446 = 1.0 / cbSceneParam._m0[80u].x;
            float _3447 = isnan(_3309) ? _3308 : (isnan(_3308) ? _3309 : max(_3308, _3309));
            float _3448 = isnan(_3309) ? _3308 : (isnan(_3308) ? _3309 : min(_3308, _3309));
            float _3457 = isnan(0.0) ? _3447 : (isnan(_3447) ? 0.0 : min(_3447, 0.0));
            float _3458 = isnan(0.0) ? _3448 : (isnan(_3448) ? 0.0 : min(_3448, 0.0));
            _3502 = ((abs(_3315 / _3303) * cbSceneParam._m0[80u].y) * ((((_3457 - _3458) * 2.0) - ((exp2(_3323 * (isnan(0.0) ? _3447 : (isnan(_3447) ? 0.0 : max(_3447, 0.0)))) - exp2(_3323 * (isnan(0.0) ? _3448 : (isnan(_3448) ? 0.0 : max(_3448, 0.0))))) * _3446)) - ((exp2(_3325 * _3457) - exp2(_3325 * _3458)) * _3446))) + (_3318 * cbSceneParam._m0[80u].z);
        }
        vec4 _3504 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3235, _3236, 1.0), 0.0);
        float _3513 = exp2((_3502 * (-1.44269502162933349609375)) * (1.0 - _3504.w));
        float _3514 = log2(_3513);
        float _3530 = log2(_3255);
        _3327 = (exp2(_3530 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3514 * cbSceneParam._m0[78u].x)) * _3504.x) / cbSceneParam._m0[78u].x)) + _3252;
        _3329 = (exp2(_3530 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3514 * cbSceneParam._m0[78u].y)) * _3504.y) / cbSceneParam._m0[78u].y)) + _3253;
        _3331 = (exp2(_3530 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3514 * cbSceneParam._m0[78u].z)) * _3504.z) / cbSceneParam._m0[78u].z)) + _3254;
        _3333 = _3513 * _3255;
    }
    else
    {
        _3327 = _3252;
        _3329 = _3253;
        _3331 = _3254;
        _3333 = _3255;
    }
    bool _3540;
    vec4 _3343;
    vec4 _3365;
    float _3367;
    float _3371;
    float _3372;
    float _3373;
    float _3374;
    bool _3384;
    for (;;)
    {
        _3343 = cbMatDynParam._m0[0u];
        float _3345 = roundEven(_3343.y);
        bool _3346 = _3345 == 3.0;
        float _3347 = log2(_3333);
        float _3354 = exp2(_3347 * cbSceneParam._m0[78u].x) * _3224;
        float _3355 = exp2(_3347 * cbSceneParam._m0[78u].y) * _3225;
        float _3356 = exp2(_3347 * cbSceneParam._m0[78u].z) * _3226;
        float _3363 = _1056 + (-0.5);
        _3365 = cbMtdParam._m0[1u];
        _3367 = _3365.y * _3363;
        float _3370 = (_3345 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3371 = _3370 * (_3346 ? _3354 : (_3354 + (cbSceneParam._m0[72u].w * _3327)));
        _3372 = _3370 * (_3346 ? _3355 : (_3355 + (cbSceneParam._m0[72u].w * _3329)));
        _3373 = _3370 * (_3346 ? _3356 : (_3356 + (cbSceneParam._m0[72u].w * _3331)));
        _3374 = _3363 * 0.999000012874603271484375;
        _3384 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3384)
        {
            if ((cbInstanceData._m0[_1105 + 7u].x + _3374) < 0.5)
            {
                _3540 = true;
                break;
            }
        }
        uint _3481 = _1106 + uint(_3343.w);
        if ((cbInstanceData._m0[_3481].w < 1.0) && ((cbInstanceData._m0[_3481].w + _3374) < 0.5))
        {
            _3540 = true;
            break;
        }
        if ((_3367 + 1.0) < _3365.x)
        {
            _3540 = true;
            break;
        }
        _3540 = false;
        break;
    }
    float _3744;
    if (_3540)
    {
        discard_state = true;
        _3744 = 0.0;
    }
    else
    {
        _3744 = cbInstanceData._m0[_3227].w;
    }
    SV_Target.x = _3371;
    SV_Target.y = _3372;
    SV_Target.z = _3373;
    SV_Target.w = _3744;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3227].w;
    discard_exit();
}


