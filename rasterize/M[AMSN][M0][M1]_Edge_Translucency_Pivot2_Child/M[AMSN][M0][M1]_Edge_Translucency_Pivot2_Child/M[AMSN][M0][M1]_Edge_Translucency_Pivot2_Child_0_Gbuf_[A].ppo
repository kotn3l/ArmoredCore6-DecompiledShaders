#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Edge_Translucency_Pivot2_Child_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Edge_Translucency_Pivot2_Child_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_Edge_Translucency_Pivot2_Child_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_M0_M1_Edge_Translucency_Pivot2_Child_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in float TEXCOORD;
layout(location = 3, component = 1) in float TEXCOORD_1;
layout(location = 4) in vec4 TEXCOORD_3;
layout(location = 3, component = 2) in float TEXCOORD_11;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _134 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _135 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _141 = inversesqrt(dot(vec3(_133, _134, _135), vec3(_133, _134, _135)));
    float _148 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _155 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _178 = texture(sampler2D(M_AMSN_M0_M1_Edge_Translucency_Pivot2_Child_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _184 = _178.w;
    float _185 = _178.x * cbMtdParam._m0[9u].x;
    float _186 = _178.y * cbMtdParam._m0[9u].y;
    float _187 = _178.z * cbMtdParam._m0[9u].z;
    vec4 _199 = texture(sampler2D(M_AMSN_M0_M1_Edge_Translucency_Pivot2_Child_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w));
    float _201 = _199.x;
    vec4 _213 = texture(sampler2D(M_AMSN_M0_M1_Edge_Translucency_Pivot2_Child_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _217 = _213.z;
    float _221 = (_213.x * 2.0) + (-1.0);
    float _223 = (_213.y * 2.0) + (-1.0);
    float _224 = dot(vec2(_221, _223), vec2(_221, _223));
    float _452 = isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0));
    float _230 = sqrt(1.0 - (isnan(1.0) ? _452 : (isnan(_452) ? 1.0 : min(_452, 1.0))));
    vec4 _242 = texture(sampler2D(M_AMSN_M0_M1_Edge_Translucency_Pivot2_Child_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _249 = cbMtdParam._m0[10u].x * _242.x;
    float _252 = fma(_230, _148 * NORMAL.x, fma(_223, _155 * TANGENT.x, (_141 * _133) * _221));
    float _255 = fma(_230, _148 * NORMAL.y, fma(_223, _155 * TANGENT.y, (_141 * _134) * _221));
    float _258 = fma(_230, _148 * NORMAL.z, fma(_223, _155 * TANGENT.z, (_141 * _135) * _221));
    float _262 = inversesqrt(dot(vec3(_252, _255, _258), vec3(_252, _255, _258)));
    float _463 = isnan(0.0) ? _184 : (isnan(_184) ? 0.0 : max(_184, 0.0));
    float _263 = isnan(1.0) ? _463 : (isnan(_463) ? 1.0 : min(_463, 1.0));
    float _474 = isnan(0.0) ? _217 : (isnan(_217) ? 0.0 : max(_217, 0.0));
    float _490 = isnan(0.0) ? _185 : (isnan(_185) ? 0.0 : max(_185, 0.0));
    float _266 = isnan(1.0) ? _490 : (isnan(_490) ? 1.0 : min(_490, 1.0));
    float _501 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
    float _267 = isnan(1.0) ? _501 : (isnan(_501) ? 1.0 : min(_501, 1.0));
    float _512 = isnan(0.0) ? _187 : (isnan(_187) ? 0.0 : max(_187, 0.0));
    float _268 = isnan(1.0) ? _512 : (isnan(_512) ? 1.0 : min(_512, 1.0));
    float _523 = isnan(0.0) ? _201 : (isnan(_201) ? 0.0 : max(_201, 0.0));
    uint _271 = uint(roundEven(NORMAL.w));
    vec4 _276 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _278 = _276.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _343 = (cbMatDynParam._m0[5u].x * TEXCOORD_11) + cbMatDynParam._m0[5u].y;
        float _534 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
        float _344 = isnan(1.0) ? _534 : (isnan(_534) ? 1.0 : min(_534, 1.0));
        float _348 = (cbMatDynParam._m0[5u].z * TEXCOORD_11) + cbMatDynParam._m0[5u].w;
        float _545 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _545 : (isnan(_545) ? 1.0 : min(_545, 1.0))) - _344)) + _344) < ((_278 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _377;
    uint _298;
    vec4 _303;
    float _310;
    float _311;
    float _312;
    float _318;
    vec4 _322;
    float _324;
    float _325;
    bool _336;
    for (;;)
    {
        _298 = _271 * 13u;
        _303 = cbInstanceData._m0[(_298 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _307 = (cbMtdParam._m0[0u].x * _266) * _303.x;
        float _308 = (cbMtdParam._m0[0u].y * _267) * _303.y;
        float _309 = (cbMtdParam._m0[0u].z * _268) * _303.z;
        float _556 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
        _310 = isnan(1.0) ? _556 : (isnan(_556) ? 1.0 : min(_556, 1.0));
        float _567 = isnan(0.0) ? _308 : (isnan(_308) ? 0.0 : max(_308, 0.0));
        _311 = isnan(1.0) ? _567 : (isnan(_567) ? 1.0 : min(_567, 1.0));
        float _578 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
        _312 = isnan(1.0) ? _578 : (isnan(_578) ? 1.0 : min(_578, 1.0));
        float _589 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
        _318 = cbInstanceData._m0[_298 + 6u].w * (isnan(1.0) ? _589 : (isnan(_589) ? 1.0 : min(_589, 1.0)));
        float _319 = _278 + (-0.5);
        _322 = cbMtdParam._m0[1u];
        _324 = _322.y * _319;
        _325 = _319 * 0.999000012874603271484375;
        _336 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_336)
        {
            if ((cbInstanceData._m0[_298 + 7u].x + _325) < 0.5)
            {
                _377 = true;
                break;
            }
        }
        if ((_303.w < 1.0) && ((_303.w + _325) < 0.5))
        {
            _377 = true;
            break;
        }
        if ((_324 + _184) < _322.x)
        {
            _377 = true;
            break;
        }
        _377 = false;
        break;
    }
    if (_377)
    {
        discard_state = true;
    }
    bool _405 = cbMtdParam._m0[1u].z != 0.0;
    float _406 = _405 ? _318 : 0.0;
    SV_Target.x = ((_252 * 0.5) * _262) + 0.500488758087158203125;
    SV_Target.y = ((_255 * 0.5) * _262) + 0.500488758087158203125;
    SV_Target.z = ((_258 * 0.5) * _262) + 0.500488758087158203125;
    SV_Target.w = _406;
    SV_Target_1.x = isnan(1.0) ? _523 : (isnan(_523) ? 1.0 : min(_523, 1.0));
    SV_Target_1.y = isnan(1.0) ? _474 : (isnan(_474) ? 1.0 : min(_474, 1.0));
    SV_Target_1.z = (isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0))) * 0.100000001490116119384765625;
    SV_Target_1.w = _405 ? _318 : TEXCOORD_3.w;
    SV_Target_2.x = _310;
    SV_Target_2.y = _311;
    SV_Target_2.z = _312;
    SV_Target_2.w = _405 ? _318 : (float(floatBitsToUint(cbInstanceData._m0[_298 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _406;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _406;
    discard_exit();
}


