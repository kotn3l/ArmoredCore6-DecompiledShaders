#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_Circle_001_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_Circle_001_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_Blackhole_Circle_001_snp_0_Texture2D_5;
layout(set = 0, binding = 3) uniform texture2D M_Blackhole_Circle_001_snp_0_Texture2D_6;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _137 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    vec4 _158 = texture(sampler2D(M_Blackhole_Circle_001_snp_0_Texture2D_1, SS_WrapLinear), vec2((((_137 * cbMtdParam._m0[11u].w) + (cbMtdParam._m0[13u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[12u].x * _137) + (cbMtdParam._m0[13u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _160 = _158.x;
    vec4 _201 = texture(sampler2D(M_Blackhole_Circle_001_snp_0_Texture2D_2, SS_WrapLinear), vec2((((cbMtdParam._m0[12u].w * _137) + (cbMtdParam._m0[12u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[13u].x * _137) + (cbMtdParam._m0[12u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _203 = _201.x;
    float _209 = ((_203 * texture(sampler2D(M_Blackhole_Circle_001_snp_0_Texture2D_5, SS_ClampLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w)).x) * cbMtdParam._m0[11u].y) + ((_160 * texture(sampler2D(M_Blackhole_Circle_001_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w)).x) * cbMtdParam._m0[11u].x);
    float _572 = isnan(0.0) ? _209 : (isnan(_209) ? 0.0 : max(_209, 0.0));
    float _212 = isnan(1.0) ? _572 : (isnan(_572) ? 1.0 : min(_572, 1.0));
    float _231 = (cbMtdParam._m0[10u].x * _203) + (cbMtdParam._m0[9u].x * _160);
    float _232 = (cbMtdParam._m0[10u].y * _201.y) + (cbMtdParam._m0[9u].y * _158.y);
    float _233 = (cbMtdParam._m0[10u].z * _201.z) + (cbMtdParam._m0[9u].z * _158.z);
    float _598 = isnan(0.0) ? _212 : (isnan(_212) ? 0.0 : max(_212, 0.0));
    float _254 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _271 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _286 = uint(roundEven(NORMAL.w)) * 13u;
    uint _288 = (_286 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _294 = cbInstanceData._m0[_288].x * (isnan(4.0) ? _231 : (isnan(_231) ? 4.0 : min(_231, 4.0)));
    float _295 = cbInstanceData._m0[_288].y * (isnan(4.0) ? _232 : (isnan(_232) ? 4.0 : min(_232, 4.0)));
    float _296 = cbInstanceData._m0[_288].z * (isnan(4.0) ? _233 : (isnan(_233) ? 4.0 : min(_233, 4.0)));
    float _624 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _309 = isnan(1.0) ? _624 : (isnan(_624) ? 1.0 : min(_624, 1.0));
    float _315 = cbInstanceData._m0[_286 + 6u].w * (isnan(1.0) ? _598 : (isnan(_598) ? 1.0 : min(_598, 1.0)));
    float _321 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _322 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _337 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_321, _322, (log2((isnan(cbSceneParam._m0[77u].w) ? _254 : (isnan(_254) ? cbSceneParam._m0[77u].w : min(_254, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _339 = _337.x;
    float _340 = _337.y;
    float _341 = _337.z;
    float _342 = _337.w;
    float _427;
    float _429;
    float _431;
    float _433;
    if (_254 > cbSceneParam._m0[78u].w)
    {
        float _388 = isnan(_254) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _254 : min(cbSceneParam._m0[80u].w, _254));
        float _389 = _388 / _254;
        float _400 = _389 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _271));
        float _401 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _271)) * _389;
        float _402 = (-0.0) - _401;
        float _404 = _389 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _271));
        float _406 = (cbSceneParam._m0[77u].w * _402) / _388;
        float _407 = _406 + cbSceneParam._m0[79u].w;
        float _408 = cbSceneParam._m0[79u].w - _401;
        float _414 = sqrt(((_400 * _400) + (_401 * _401)) + (_404 * _404));
        float _417 = (1.0 - (cbSceneParam._m0[77u].w / _388)) * _414;
        float _423 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _425 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _527;
        if (abs((_402 - _406) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _527 = ((((_407 > 0.0) ? exp2(_423 * _407) : (2.0 - exp2(_425 * _407))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _417;
        }
        else
        {
            float _500 = 1.0 / cbSceneParam._m0[80u].x;
            float _501 = isnan(_408) ? _407 : (isnan(_407) ? _408 : max(_407, _408));
            float _502 = isnan(_408) ? _407 : (isnan(_407) ? _408 : min(_407, _408));
            float _511 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : min(_501, 0.0));
            float _512 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : min(_502, 0.0));
            _527 = ((abs(_414 / _402) * cbSceneParam._m0[80u].y) * ((((_511 - _512) * 2.0) - ((exp2(_423 * (isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0)))) - exp2(_423 * (isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0))))) * _500)) - ((exp2(_425 * _511) - exp2(_425 * _512)) * _500))) + (_417 * cbSceneParam._m0[80u].z);
        }
        vec4 _529 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_321, _322, 1.0), 0.0);
        float _538 = exp2((_527 * (-1.44269502162933349609375)) * (1.0 - _529.w));
        float _539 = log2(_538);
        float _555 = log2(_342);
        _427 = (exp2(_555 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_539 * cbSceneParam._m0[78u].x)) * _529.x) / cbSceneParam._m0[78u].x)) + _339;
        _429 = (exp2(_555 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_539 * cbSceneParam._m0[78u].y)) * _529.y) / cbSceneParam._m0[78u].y)) + _340;
        _431 = (exp2(_555 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_539 * cbSceneParam._m0[78u].z)) * _529.z) / cbSceneParam._m0[78u].z)) + _341;
        _433 = _538 * _342;
    }
    else
    {
        _427 = _339;
        _429 = _340;
        _431 = _341;
        _433 = _342;
    }
    float _445 = roundEven(cbMatDynParam._m0[0u].y);
    bool _446 = _445 == 3.0;
    float _448 = log2(_433);
    float _452 = exp2(_448 * cbSceneParam._m0[78u].x);
    float _453 = exp2(_448 * cbSceneParam._m0[78u].y);
    float _454 = exp2(_448 * cbSceneParam._m0[78u].z);
    float _455 = _452 * (isnan(0.0) ? _294 : (isnan(_294) ? 0.0 : max(_294, 0.0)));
    float _456 = _453 * (isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0)));
    float _457 = _454 * (isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0)));
    float _467 = (_445 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _467 * (_446 ? _455 : (_455 + (cbSceneParam._m0[72u].w * _427)));
    SV_Target.y = _467 * (_446 ? _456 : (_456 + (cbSceneParam._m0[72u].w * _429)));
    SV_Target.z = _467 * (_446 ? _457 : (_457 + (cbSceneParam._m0[72u].w * _431)));
    SV_Target.w = _315;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _294) * _309) * _452) * _467;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _295) * _309) * _453) * _467;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _296) * _309) * _454) * _467;
    SV_Target_1.w = _315;
}


