#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_Circle_001_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_Circle_001_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_Blackhole_Circle_001_snp_0_Texture2D_5;
layout(set = 0, binding = 3) uniform texture2D M_Blackhole_Circle_001_snp_0_Texture2D_6;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

float _360;
float _361;
float _362;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _132 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _133 = _132 * NORMAL.x;
    float _134 = _132 * NORMAL.y;
    float _135 = _132 * NORMAL.z;
    float _140;
    float _141;
    float _142;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _140 = (-0.0) - _133;
        _141 = (-0.0) - _134;
        _142 = (-0.0) - _135;
    }
    else
    {
        _140 = _133;
        _141 = _134;
        _142 = _135;
    }
    bool _303;
    float _244;
    uint _255;
    float _261;
    vec4 _265;
    float _267;
    float _268;
    bool _280;
    for (;;)
    {
        float _170 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
        float _238 = ((texture(sampler2D(M_Blackhole_Circle_001_snp_0_Texture2D_2, SS_WrapLinear), vec2((((cbMtdParam._m0[12u].w * _170) + (cbMtdParam._m0[12u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[13u].x * _170) + (cbMtdParam._m0[12u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w)).x * texture(sampler2D(M_Blackhole_Circle_001_snp_0_Texture2D_5, SS_ClampLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w)).x) * cbMtdParam._m0[11u].y) + ((texture(sampler2D(M_Blackhole_Circle_001_snp_0_Texture2D_1, SS_WrapLinear), vec2((((_170 * cbMtdParam._m0[11u].w) + (cbMtdParam._m0[13u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[12u].x * _170) + (cbMtdParam._m0[13u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).x * texture(sampler2D(M_Blackhole_Circle_001_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w)).x) * cbMtdParam._m0[11u].x);
        float _371 = isnan(0.0) ? _238 : (isnan(_238) ? 0.0 : max(_238, 0.0));
        float _240 = isnan(1.0) ? _371 : (isnan(_371) ? 1.0 : min(_371, 1.0));
        _244 = inversesqrt(dot(vec3(_140, _141, _142), vec3(_140, _141, _142)));
        float _382 = isnan(0.0) ? _240 : (isnan(_240) ? 0.0 : max(_240, 0.0));
        _255 = uint(roundEven(NORMAL.w)) * 13u;
        _261 = cbInstanceData._m0[_255 + 6u].w * (isnan(1.0) ? _382 : (isnan(_382) ? 1.0 : min(_382, 1.0)));
        float _262 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125)).w + (-0.5);
        _265 = cbMtdParam._m0[1u];
        _267 = _265.y * _262;
        _268 = _262 * 0.999000012874603271484375;
        _280 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_280)
        {
            if ((cbInstanceData._m0[_255 + 7u].x + _268) < 0.5)
            {
                _303 = true;
                break;
            }
        }
        uint _295 = (_255 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_295].w < 1.0) && ((cbInstanceData._m0[_295].w + _268) < 0.5))
        {
            _303 = true;
            break;
        }
        if ((_267 + 1.0) < _265.x)
        {
            _303 = true;
            break;
        }
        _303 = false;
        break;
    }
    if (_303)
    {
        discard_state = true;
    }
    bool _324 = cbMtdParam._m0[1u].z != 0.0;
    float _325 = _324 ? _261 : 0.0;
    SV_Target.x = ((_140 * 0.5) * _244) + 0.500488758087158203125;
    SV_Target.y = ((_141 * 0.5) * _244) + 0.500488758087158203125;
    SV_Target.z = ((_142 * 0.5) * _244) + 0.500488758087158203125;
    SV_Target.w = _325;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _324 ? _261 : TEXCOORD.z;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _261;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _325;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _325;
    discard_exit();
}


