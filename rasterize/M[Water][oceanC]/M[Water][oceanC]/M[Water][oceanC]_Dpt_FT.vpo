#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 0) out vec4 POSITION_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 3, component = 3) out float TEXCOORD_7;
layout(location = 4) out float TEXCOORD_11;

void main()
{
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_7 = 0.0;
    TEXCOORD_11 = 0.0;
    float _139 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _141 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _142 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _152 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _153 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _154 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _160 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _162 = texelFetch(g_InstanceIndexBuffer, int(_160));
    uint _163 = _162.x;
    uint _173 = (floatBitsToUint(cbInstanceData._m0[(_163 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _180 = _173 + 1u;
    uint _187 = _173 + 2u;
    float _198 = fma(POSITION.z, cbObjMatrix._m0[_173].z, fma(POSITION.y, cbObjMatrix._m0[_173].y, cbObjMatrix._m0[_173].x * POSITION.x)) + cbObjMatrix._m0[_173].w;
    float _202 = fma(POSITION.z, cbObjMatrix._m0[_180].z, fma(POSITION.y, cbObjMatrix._m0[_180].y, cbObjMatrix._m0[_180].x * POSITION.x)) + cbObjMatrix._m0[_180].w;
    float _206 = fma(POSITION.z, cbObjMatrix._m0[_187].z, fma(POSITION.y, cbObjMatrix._m0[_187].y, cbObjMatrix._m0[_187].x * POSITION.x)) + cbObjMatrix._m0[_187].w;
    float _212 = cbSceneParam._m0[3u].x - _198;
    float _213 = cbSceneParam._m0[3u].y - _202;
    float _214 = cbSceneParam._m0[3u].z - _206;
    POSITION_1.x = _198;
    POSITION_1.y = _202;
    POSITION_1.z = _206;
    POSITION_1.w = 1.0;
    NORMAL_1.x = fma(_142, cbObjMatrix._m0[_173].z, fma(_141, cbObjMatrix._m0[_173].y, cbObjMatrix._m0[_173].x * _139));
    NORMAL_1.y = fma(_142, cbObjMatrix._m0[_180].z, fma(_141, cbObjMatrix._m0[_180].y, cbObjMatrix._m0[_180].x * _139));
    NORMAL_1.z = fma(_142, cbObjMatrix._m0[_187].z, fma(_141, cbObjMatrix._m0[_187].y, cbObjMatrix._m0[_187].x * _139));
    NORMAL_1.w = float(_163);
    TANGENT_1.x = fma(_154, cbObjMatrix._m0[_173].z, fma(_153, cbObjMatrix._m0[_173].y, cbObjMatrix._m0[_173].x * _152));
    TANGENT_1.y = fma(_154, cbObjMatrix._m0[_180].z, fma(_153, cbObjMatrix._m0[_180].y, cbObjMatrix._m0[_180].x * _152));
    TANGENT_1.z = fma(_154, cbObjMatrix._m0[_187].z, fma(_153, cbObjMatrix._m0[_187].y, cbObjMatrix._m0[_187].x * _152));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_7 = 64.0;
    TEXCOORD_11 = sqrt(((_212 * _212) + (_213 * _213)) + (_214 * _214));
}


