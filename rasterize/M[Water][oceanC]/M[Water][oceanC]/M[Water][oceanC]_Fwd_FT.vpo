#version 460

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 0) out vec4 POSITION_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 3, component = 3) out float TEXCOORD_7;

void main()
{
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_7 = 0.0;
    float _133 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _135 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _136 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _146 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _147 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _148 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _154 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _156 = texelFetch(g_InstanceIndexBuffer, int(_154));
    uint _157 = _156.x;
    uint _167 = (floatBitsToUint(cbInstanceData._m0[(_157 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _174 = _167 + 1u;
    uint _181 = _167 + 2u;
    POSITION_1.x = fma(POSITION.z, cbObjMatrix._m0[_167].z, fma(POSITION.y, cbObjMatrix._m0[_167].y, cbObjMatrix._m0[_167].x * POSITION.x)) + cbObjMatrix._m0[_167].w;
    POSITION_1.y = fma(POSITION.z, cbObjMatrix._m0[_174].z, fma(POSITION.y, cbObjMatrix._m0[_174].y, cbObjMatrix._m0[_174].x * POSITION.x)) + cbObjMatrix._m0[_174].w;
    POSITION_1.z = fma(POSITION.z, cbObjMatrix._m0[_181].z, fma(POSITION.y, cbObjMatrix._m0[_181].y, cbObjMatrix._m0[_181].x * POSITION.x)) + cbObjMatrix._m0[_181].w;
    POSITION_1.w = 1.0;
    NORMAL_1.x = fma(_136, cbObjMatrix._m0[_167].z, fma(_135, cbObjMatrix._m0[_167].y, cbObjMatrix._m0[_167].x * _133));
    NORMAL_1.y = fma(_136, cbObjMatrix._m0[_174].z, fma(_135, cbObjMatrix._m0[_174].y, cbObjMatrix._m0[_174].x * _133));
    NORMAL_1.z = fma(_136, cbObjMatrix._m0[_181].z, fma(_135, cbObjMatrix._m0[_181].y, cbObjMatrix._m0[_181].x * _133));
    NORMAL_1.w = float(_157);
    TANGENT_1.x = fma(_148, cbObjMatrix._m0[_167].z, fma(_147, cbObjMatrix._m0[_167].y, cbObjMatrix._m0[_167].x * _146));
    TANGENT_1.y = fma(_148, cbObjMatrix._m0[_174].z, fma(_147, cbObjMatrix._m0[_174].y, cbObjMatrix._m0[_174].x * _146));
    TANGENT_1.z = fma(_148, cbObjMatrix._m0[_181].z, fma(_147, cbObjMatrix._m0[_181].y, cbObjMatrix._m0[_181].x * _146));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_7 = 64.0;
}


