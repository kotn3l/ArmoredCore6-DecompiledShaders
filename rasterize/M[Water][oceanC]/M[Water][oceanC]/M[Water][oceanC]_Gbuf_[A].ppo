#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_Water_oceanC_snp_0_Texture2D_18;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_11;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _139 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _140 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _141 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _146 = inversesqrt(dot(vec3(_139, _140, _141), vec3(_139, _140, _141)));
    float _153 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _154 = _153 * NORMAL.x;
    float _155 = _153 * NORMAL.y;
    float _156 = _153 * NORMAL.z;
    float _160 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _168;
    float _169;
    float _170;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _168 = (-0.0) - _154;
        _169 = (-0.0) - _155;
        _170 = (-0.0) - _156;
    }
    else
    {
        _168 = _154;
        _169 = _155;
        _170 = _156;
    }
    float _182 = cbPerFrame._m0[22u].x * 0.02999999932944774627685546875;
    float _184 = cbPerFrame._m0[22u].x * (-0.00999999977648258209228515625);
    float _188 = cbPerFrame._m0[22u].x * 6.5;
    uint _191 = uint(int(floor(_188)));
    float _192 = fract(_188);
    uint _193 = _191 + 1u;
    uint _194 = uint(int(cbMtdParam._m0[9u].z * cbMtdParam._m0[9u].y));
    float _197 = float(int(_191 - _194 * (_191 / _194)));
    float _198 = _197 - cbMtdParam._m0[9u].y * trunc(_197 / cbMtdParam._m0[9u].y);
    float _200 = floor(_197 / cbMtdParam._m0[9u].y);
    float _201 = float(int(_193 - _194 * (_193 / _194)));
    float _202 = _201 - cbMtdParam._m0[9u].y * trunc(_201 / cbMtdParam._m0[9u].y);
    float _204 = floor(_201 / cbMtdParam._m0[9u].y);
    float _205 = 1.0 / cbMtdParam._m0[9u].y;
    float _207 = 1.0 / cbMtdParam._m0[9u].z;
    float _208 = fract(_182 + (TEXCOORD.x * 2.0));
    float _209 = fract(_184 + (TEXCOORD.y * 5.0));
    vec4 _230 = texture(sampler2D(M_Water_oceanC_snp_0_Texture2D_18, SS_BumpMap), vec2((((_208 + _202) * _205) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_209 + _204) * _207) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _239 = texture(sampler2D(M_Water_oceanC_snp_0_Texture2D_18, SS_BumpMap), vec2((((_208 + _198) * _205) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_209 + _200) * _207) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _241 = _239.x;
    float _242 = _239.y;
    float _254 = fract(_182 + (TEXCOORD.x * 0.5));
    float _255 = fract(_184 + (TEXCOORD.y * 0.5));
    vec4 _268 = texture(sampler2D(M_Water_oceanC_snp_0_Texture2D_18, SS_BumpMap), vec2((((_254 + _202) * _205) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_255 + _204) * _207) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _276 = texture(sampler2D(M_Water_oceanC_snp_0_Texture2D_18, SS_BumpMap), vec2((((_254 + _198) * _205) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_255 + _200) * _207) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _278 = _276.x;
    float _279 = _276.y;
    float _284 = ((_268.x - _278) * _192) + _278;
    float _285 = ((_268.y - _279) * _192) + _279;
    float _294 = (((((((_230.x - _241) * _192) + _241) - _284) * cbMtdParam._m0[9u].x) + _284) * 2.0) + (-1.0);
    float _296 = (((((((_230.y - _242) * _192) + _242) - _285) * cbMtdParam._m0[9u].x) + _285) * 2.0) + (-1.0);
    float _297 = dot(vec2(_294, _296), vec2(_294, _296));
    float _499 = isnan(0.0) ? _297 : (isnan(_297) ? 0.0 : max(_297, 0.0));
    float _302 = sqrt(1.0 - (isnan(1.0) ? _499 : (isnan(_499) ? 1.0 : min(_499, 1.0))));
    float _305 = fma(_302, _168, fma(_296, _160 * TANGENT.x, (_146 * _139) * _294));
    float _308 = fma(_302, _169, fma(_296, _160 * TANGENT.y, (_146 * _140) * _294));
    float _311 = fma(_302, _170, fma(_296, _160 * TANGENT.z, (_146 * _141) * _294));
    float _315 = inversesqrt(dot(vec3(_305, _308, _311), vec3(_305, _308, _311)));
    uint _317 = uint(roundEven(NORMAL.w));
    vec4 _322 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _324 = _322.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _390 = (cbMatDynParam._m0[5u].x * TEXCOORD_11) + cbMatDynParam._m0[5u].y;
        float _510 = isnan(0.0) ? _390 : (isnan(_390) ? 0.0 : max(_390, 0.0));
        float _391 = isnan(1.0) ? _510 : (isnan(_510) ? 1.0 : min(_510, 1.0));
        float _395 = (cbMatDynParam._m0[5u].z * TEXCOORD_11) + cbMatDynParam._m0[5u].w;
        float _521 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _521 : (isnan(_521) ? 1.0 : min(_521, 1.0))) - _391)) + _391) < ((_324 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _423;
    uint _347;
    vec4 _352;
    float _359;
    float _360;
    float _361;
    float _365;
    vec4 _369;
    float _371;
    float _372;
    bool _383;
    for (;;)
    {
        _347 = _317 * 13u;
        _352 = cbInstanceData._m0[(_347 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _356 = (cbMtdParam._m0[0u].x * 0.00369799998588860034942626953125) * _352.x;
        float _357 = (cbMtdParam._m0[0u].y * 0.086921997368335723876953125) * _352.y;
        float _358 = (cbMtdParam._m0[0u].z * 0.1275610029697418212890625) * _352.z;
        float _532 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
        _359 = isnan(1.0) ? _532 : (isnan(_532) ? 1.0 : min(_532, 1.0));
        float _543 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
        _360 = isnan(1.0) ? _543 : (isnan(_543) ? 1.0 : min(_543, 1.0));
        float _554 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
        _361 = isnan(1.0) ? _554 : (isnan(_554) ? 1.0 : min(_554, 1.0));
        _365 = cbInstanceData._m0[_347 + 6u].w;
        float _366 = _324 + (-0.5);
        _369 = cbMtdParam._m0[1u];
        _371 = _369.y * _366;
        _372 = _366 * 0.999000012874603271484375;
        _383 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_383)
        {
            if ((cbInstanceData._m0[_347 + 7u].x + _372) < 0.5)
            {
                _423 = true;
                break;
            }
        }
        if ((_352.w < 1.0) && ((_352.w + _372) < 0.5))
        {
            _423 = true;
            break;
        }
        if ((_371 + 1.0) < _369.x)
        {
            _423 = true;
            break;
        }
        _423 = false;
        break;
    }
    if (_423)
    {
        discard_state = true;
    }
    bool _449 = cbMtdParam._m0[1u].z != 0.0;
    float _450 = _449 ? _365 : 0.0;
    SV_Target.x = ((_305 * 0.5) * _315) + 0.500488758087158203125;
    SV_Target.y = ((_308 * 0.5) * _315) + 0.500488758087158203125;
    SV_Target.z = ((_311 * 0.5) * _315) + 0.500488758087158203125;
    SV_Target.w = _450;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.980000019073486328125;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _449 ? _365 : TEXCOORD.z;
    SV_Target_2.x = _359;
    SV_Target_2.y = _360;
    SV_Target_2.z = _361;
    SV_Target_2.w = _449 ? _365 : (float(floatBitsToUint(cbInstanceData._m0[_347 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _450;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _450;
    discard_exit();
}


