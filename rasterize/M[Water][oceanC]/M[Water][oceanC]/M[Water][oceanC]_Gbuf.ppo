#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 1) uniform texture2D M_Water_oceanC_snp_0_Texture2D_18;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_11;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _125 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _126 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _127 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _132 = inversesqrt(dot(vec3(_125, _126, _127), vec3(_125, _126, _127)));
    float _139 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _140 = _139 * NORMAL.x;
    float _141 = _139 * NORMAL.y;
    float _142 = _139 * NORMAL.z;
    float _146 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _154;
    float _155;
    float _156;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _154 = (-0.0) - _140;
        _155 = (-0.0) - _141;
        _156 = (-0.0) - _142;
    }
    else
    {
        _154 = _140;
        _155 = _141;
        _156 = _142;
    }
    float _168 = cbPerFrame._m0[22u].x * 0.02999999932944774627685546875;
    float _170 = cbPerFrame._m0[22u].x * (-0.00999999977648258209228515625);
    float _174 = cbPerFrame._m0[22u].x * 6.5;
    uint _177 = uint(int(floor(_174)));
    float _178 = fract(_174);
    uint _179 = _177 + 1u;
    uint _180 = uint(int(cbMtdParam._m0[9u].z * cbMtdParam._m0[9u].y));
    float _183 = float(int(_177 - _180 * (_177 / _180)));
    float _184 = _183 - cbMtdParam._m0[9u].y * trunc(_183 / cbMtdParam._m0[9u].y);
    float _186 = floor(_183 / cbMtdParam._m0[9u].y);
    float _187 = float(int(_179 - _180 * (_179 / _180)));
    float _188 = _187 - cbMtdParam._m0[9u].y * trunc(_187 / cbMtdParam._m0[9u].y);
    float _190 = floor(_187 / cbMtdParam._m0[9u].y);
    float _191 = 1.0 / cbMtdParam._m0[9u].y;
    float _193 = 1.0 / cbMtdParam._m0[9u].z;
    float _194 = fract(_168 + (TEXCOORD.x * 2.0));
    float _195 = fract(_170 + (TEXCOORD.y * 5.0));
    vec4 _216 = texture(sampler2D(M_Water_oceanC_snp_0_Texture2D_18, SS_BumpMap), vec2((((_194 + _188) * _191) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_195 + _190) * _193) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _225 = texture(sampler2D(M_Water_oceanC_snp_0_Texture2D_18, SS_BumpMap), vec2((((_194 + _184) * _191) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_195 + _186) * _193) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _227 = _225.x;
    float _228 = _225.y;
    float _240 = fract(_168 + (TEXCOORD.x * 0.5));
    float _241 = fract(_170 + (TEXCOORD.y * 0.5));
    vec4 _254 = texture(sampler2D(M_Water_oceanC_snp_0_Texture2D_18, SS_BumpMap), vec2((((_240 + _188) * _191) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_241 + _190) * _193) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _262 = texture(sampler2D(M_Water_oceanC_snp_0_Texture2D_18, SS_BumpMap), vec2((((_240 + _184) * _191) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_241 + _186) * _193) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _264 = _262.x;
    float _265 = _262.y;
    float _270 = ((_254.x - _264) * _178) + _264;
    float _271 = ((_254.y - _265) * _178) + _265;
    float _280 = (((((((_216.x - _227) * _178) + _227) - _270) * cbMtdParam._m0[9u].x) + _270) * 2.0) + (-1.0);
    float _282 = (((((((_216.y - _228) * _178) + _228) - _271) * cbMtdParam._m0[9u].x) + _271) * 2.0) + (-1.0);
    float _283 = dot(vec2(_280, _282), vec2(_280, _282));
    float _391 = isnan(0.0) ? _283 : (isnan(_283) ? 0.0 : max(_283, 0.0));
    float _288 = sqrt(1.0 - (isnan(1.0) ? _391 : (isnan(_391) ? 1.0 : min(_391, 1.0))));
    float _291 = fma(_288, _154, fma(_282, _146 * TANGENT.x, (_132 * _125) * _280));
    float _294 = fma(_288, _155, fma(_282, _146 * TANGENT.y, (_132 * _126) * _280));
    float _297 = fma(_288, _156, fma(_282, _146 * TANGENT.z, (_132 * _127) * _280));
    float _301 = inversesqrt(dot(vec3(_291, _294, _297), vec3(_291, _294, _297)));
    uint _319 = uint(roundEven(NORMAL.w)) * 13u;
    uint _322 = (_319 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _328 = (cbMtdParam._m0[0u].x * 0.00369799998588860034942626953125) * cbInstanceData._m0[_322].x;
    float _329 = (cbMtdParam._m0[0u].y * 0.086921997368335723876953125) * cbInstanceData._m0[_322].y;
    float _330 = (cbMtdParam._m0[0u].z * 0.1275610029697418212890625) * cbInstanceData._m0[_322].z;
    float _402 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _413 = isnan(0.0) ? _329 : (isnan(_329) ? 0.0 : max(_329, 0.0));
    float _424 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
    uint _334 = _319 + 6u;
    bool _362 = cbMtdParam._m0[1u].z != 0.0;
    float _363 = _362 ? cbInstanceData._m0[_334].w : 0.0;
    SV_Target.x = ((_291 * 0.5) * _301) + 0.500488758087158203125;
    SV_Target.y = ((_294 * 0.5) * _301) + 0.500488758087158203125;
    SV_Target.z = ((_297 * 0.5) * _301) + 0.500488758087158203125;
    SV_Target.w = _363;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.980000019073486328125;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _362 ? cbInstanceData._m0[_334].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _402 : (isnan(_402) ? 1.0 : min(_402, 1.0));
    SV_Target_2.y = isnan(1.0) ? _413 : (isnan(_413) ? 1.0 : min(_413, 1.0));
    SV_Target_2.z = isnan(1.0) ? _424 : (isnan(_424) ? 1.0 : min(_424, 1.0));
    SV_Target_2.w = _362 ? cbInstanceData._m0[_334].w : (float(floatBitsToUint(cbInstanceData._m0[_319 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _363;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _363;
}


