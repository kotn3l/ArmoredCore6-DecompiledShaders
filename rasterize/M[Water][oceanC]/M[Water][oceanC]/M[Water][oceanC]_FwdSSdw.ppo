#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_Water_oceanC_snp_0_Texture2D_18;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _874;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _181 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _182 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _183 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _188 = inversesqrt(dot(vec3(_181, _182, _183), vec3(_181, _182, _183)));
    float _195 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _196 = _195 * NORMAL.x;
    float _197 = _195 * NORMAL.y;
    float _198 = _195 * NORMAL.z;
    float _202 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _210;
    float _211;
    float _212;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _210 = (-0.0) - _196;
        _211 = (-0.0) - _197;
        _212 = (-0.0) - _198;
    }
    else
    {
        _210 = _196;
        _211 = _197;
        _212 = _198;
    }
    float _224 = cbPerFrame._m0[22u].x * 0.02999999932944774627685546875;
    float _226 = cbPerFrame._m0[22u].x * (-0.00999999977648258209228515625);
    float _230 = cbPerFrame._m0[22u].x * 6.5;
    uint _233 = uint(int(floor(_230)));
    float _234 = fract(_230);
    uint _235 = _233 + 1u;
    uint _236 = uint(int(cbMtdParam._m0[9u].z * cbMtdParam._m0[9u].y));
    float _239 = float(int(_233 - _236 * (_233 / _236)));
    float _240 = _239 - cbMtdParam._m0[9u].y * trunc(_239 / cbMtdParam._m0[9u].y);
    float _242 = floor(_239 / cbMtdParam._m0[9u].y);
    float _243 = float(int(_235 - _236 * (_235 / _236)));
    float _244 = _243 - cbMtdParam._m0[9u].y * trunc(_243 / cbMtdParam._m0[9u].y);
    float _246 = floor(_243 / cbMtdParam._m0[9u].y);
    float _247 = 1.0 / cbMtdParam._m0[9u].y;
    float _249 = 1.0 / cbMtdParam._m0[9u].z;
    float _250 = fract(_224 + (TEXCOORD.x * 2.0));
    float _251 = fract(_226 + (TEXCOORD.y * 5.0));
    vec4 _272 = texture(sampler2D(M_Water_oceanC_snp_0_Texture2D_18, SS_BumpMap), vec2((((_250 + _244) * _247) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_251 + _246) * _249) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _281 = texture(sampler2D(M_Water_oceanC_snp_0_Texture2D_18, SS_BumpMap), vec2((((_250 + _240) * _247) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_251 + _242) * _249) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _283 = _281.x;
    float _284 = _281.y;
    float _296 = fract(_224 + (TEXCOORD.x * 0.5));
    float _297 = fract(_226 + (TEXCOORD.y * 0.5));
    vec4 _310 = texture(sampler2D(M_Water_oceanC_snp_0_Texture2D_18, SS_BumpMap), vec2((((_296 + _244) * _247) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_297 + _246) * _249) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _318 = texture(sampler2D(M_Water_oceanC_snp_0_Texture2D_18, SS_BumpMap), vec2((((_296 + _240) * _247) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_297 + _242) * _249) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _320 = _318.x;
    float _321 = _318.y;
    float _326 = ((_310.x - _320) * _234) + _320;
    float _327 = ((_310.y - _321) * _234) + _321;
    float _336 = (((((((_272.x - _283) * _234) + _283) - _326) * cbMtdParam._m0[9u].x) + _326) * 2.0) + (-1.0);
    float _338 = (((((((_272.y - _284) * _234) + _284) - _327) * cbMtdParam._m0[9u].x) + _327) * 2.0) + (-1.0);
    float _339 = dot(vec2(_336, _338), vec2(_336, _338));
    float _3206 = isnan(0.0) ? _339 : (isnan(_339) ? 0.0 : max(_339, 0.0));
    float _344 = sqrt(1.0 - (isnan(1.0) ? _3206 : (isnan(_3206) ? 1.0 : min(_3206, 1.0))));
    float _347 = fma(_344, _210, fma(_338, _202 * TANGENT.x, (_188 * _181) * _336));
    float _350 = fma(_344, _211, fma(_338, _202 * TANGENT.y, (_188 * _182) * _336));
    float _353 = fma(_344, _212, fma(_338, _202 * TANGENT.z, (_188 * _183) * _336));
    float _357 = inversesqrt(dot(vec3(_347, _350, _353), vec3(_347, _350, _353)));
    float _358 = _357 * _347;
    float _359 = _357 * _350;
    float _360 = _357 * _353;
    float _376 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _418 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _428 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _418);
    float _429 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _418);
    float _430 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _418);
    float _434 = inversesqrt(dot(vec3(_428, _429, _430), vec3(_428, _429, _430)));
    float _435 = _428 * _434;
    float _436 = _429 * _434;
    float _437 = _430 * _434;
    float _443 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _444 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _465 = fma(_360, cbSceneParam._m0[5u].z, fma(_359, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _358));
    float _468 = fma(_360, cbSceneParam._m0[6u].z, fma(_359, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _358));
    float _471 = fma(_360, cbSceneParam._m0[7u].z, fma(_359, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _358));
    uint _487 = uint(roundEven(NORMAL.w)) * 13u;
    uint _490 = (_487 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _496 = (cbMtdParam._m0[0u].x * 0.00369799998588860034942626953125) * cbInstanceData._m0[_490].x;
    float _497 = (cbMtdParam._m0[0u].y * 0.086921997368335723876953125) * cbInstanceData._m0[_490].y;
    float _498 = (cbMtdParam._m0[0u].z * 0.1275610029697418212890625) * cbInstanceData._m0[_490].z;
    float _3217 = isnan(0.0) ? _496 : (isnan(_496) ? 0.0 : max(_496, 0.0));
    float _499 = isnan(1.0) ? _3217 : (isnan(_3217) ? 1.0 : min(_3217, 1.0));
    float _3228 = isnan(0.0) ? _497 : (isnan(_497) ? 0.0 : max(_497, 0.0));
    float _500 = isnan(1.0) ? _3228 : (isnan(_3228) ? 1.0 : min(_3228, 1.0));
    float _3239 = isnan(0.0) ? _498 : (isnan(_498) ? 0.0 : max(_498, 0.0));
    float _501 = isnan(1.0) ? _3239 : (isnan(_3239) ? 1.0 : min(_3239, 1.0));
    vec4 _510 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _443, cbSceneParam._m0[86u].y * _444));
    float _513 = _510.x * TEXCOORD.z;
    float _514 = dot(vec3(_358, _359, _360), vec3(_435, _436, _437));
    float _517 = _514 * 2.0;
    float _521 = (_517 * _358) - _435;
    float _522 = (_517 * _359) - _436;
    float _523 = (_517 * _360) - _437;
    float _527 = abs(dot(vec3(_435, _436, _437), vec3(_358, _359, _360)));
    float _3250 = isnan(0.0) ? _527 : (isnan(_527) ? 0.0 : max(_527, 0.0));
    float _535 = exp2(log2(1.0 - ((isnan(1.0) ? _3250 : (isnan(_3250) ? 1.0 : min(_3250, 1.0))) * 0.999000012874603271484375)) * 4.949747562408447265625);
    float _564 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _568 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _572 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _873;
    float _875;
    float _876;
    float _877;
    float _878;
    float _879;
    float _880;
    float _881;
    float _882;
    float _883;
    float _884;
    float _885;
    float _886;
    float _887;
    float _888;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _599 = fma(_572, cbModelParam._m0[26u].z, fma(_568, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _564));
        float _603 = fma(_572, cbModelParam._m0[27u].z, fma(_568, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _564));
        float _607 = fma(_572, cbModelParam._m0[28u].z, fma(_568, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _564));
        float _631 = _564 + _358;
        float _632 = _568 + _359;
        float _633 = _572 + _360;
        float _643 = fma(_633, cbModelParam._m0[26u].z, fma(_632, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _631)) - _599;
        float _644 = fma(_633, cbModelParam._m0[27u].z, fma(_632, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _631)) - _603;
        float _645 = fma(_633, cbModelParam._m0[28u].z, fma(_632, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _631)) - _607;
        float _649 = inversesqrt(dot(vec3(_643, _644, _645), vec3(_643, _644, _645)));
        float _662 = ((_649 * _643) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_599 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _663 = ((_649 * _644) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_603 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _664 = ((_649 * _645) / cbModelParam._m0[34u].z) + ((((((_607 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _667 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_662, _663, _664), 0.0);
        vec4 _674 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_662, _663, _664), 0.0);
        vec4 _681 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_662, _663, _664), 0.0);
        vec4 _688 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_662, _663, _664), 0.0);
        float _701 = exp2((_667.w + (-0.5)) * 20.0) * 2.0;
        float _702 = _701 * (_667.x + (-0.5));
        float _703 = _701 * (_667.y + (-0.5));
        float _704 = _701 * (_667.z + (-0.5));
        float _711 = exp2((_674.w + (-0.5)) * 20.0) * 2.0;
        float _712 = _711 * (_674.x + (-0.5));
        float _713 = _711 * (_674.y + (-0.5));
        float _714 = _711 * (_674.z + (-0.5));
        float _721 = exp2((_681.w + (-0.5)) * 20.0) * 2.0;
        float _722 = _721 * (_681.x + (-0.5));
        float _723 = _721 * (_681.y + (-0.5));
        float _724 = _721 * (_681.z + (-0.5));
        float _731 = exp2((_688.w + (-0.5)) * 20.0) * 2.0;
        float _732 = _731 * (_688.x + (-0.5));
        float _733 = _731 * (_688.y + (-0.5));
        float _734 = _731 * (_688.z + (-0.5));
        float _735 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
        float _736 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
        float _737 = isnan(0.0) ? _734 : (isnan(_734) ? 0.0 : max(_734, 0.0));
        float _738 = _702 * 0.5;
        float _739 = _712 * 0.5;
        float _740 = _722 * 0.5;
        float _741 = dot(vec3(_738, _739, _740), vec3(_738, _739, _740));
        float _746 = (_741 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_741);
        float _755 = (dot(vec3(_358, _359, _360), vec3(_746 * _738, _746 * _739, _746 * _740)) + 1.0) * 0.5;
        float _3276 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
        float _765 = sqrt(((_739 * _739) + (_738 * _738)) + (_740 * _740)) / (_735 + 9.9999997473787516355514526367188e-06);
        float _3287 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
        float _766 = isnan(1.0) ? _3287 : (isnan(_3287) ? 1.0 : min(_3287, 1.0));
        float _767 = _766 * 2.0;
        float _771 = (1.0 - _766) / (_766 + 1.0);
        float _3298 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
        float _772 = isnan(1.0) ? _3298 : (isnan(_3298) ? 1.0 : min(_3298, 1.0));
        float _781 = ((((1.0 - _772) * (_767 + 2.0)) * exp2(log2(isnan(1.0) ? _3276 : (isnan(_3276) ? 1.0 : min(_3276, 1.0))) * (_767 + 1.0))) + _772) * _735;
        float _782 = _703 * 0.5;
        float _783 = _713 * 0.5;
        float _784 = _723 * 0.5;
        float _785 = dot(vec3(_782, _783, _784), vec3(_782, _783, _784));
        float _790 = (_785 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_785);
        float _798 = (dot(vec3(_358, _359, _360), vec3(_790 * _782, _790 * _783, _790 * _784)) + 1.0) * 0.5;
        float _3309 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
        float _807 = sqrt(((_783 * _783) + (_782 * _782)) + (_784 * _784)) / (_736 + 9.9999997473787516355514526367188e-06);
        float _3320 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
        float _808 = isnan(1.0) ? _3320 : (isnan(_3320) ? 1.0 : min(_3320, 1.0));
        float _809 = _808 * 2.0;
        float _813 = (1.0 - _808) / (_808 + 1.0);
        float _3331 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
        float _814 = isnan(1.0) ? _3331 : (isnan(_3331) ? 1.0 : min(_3331, 1.0));
        float _823 = ((((1.0 - _814) * (_809 + 2.0)) * exp2(log2(isnan(1.0) ? _3309 : (isnan(_3309) ? 1.0 : min(_3309, 1.0))) * (_809 + 1.0))) + _814) * _736;
        float _824 = _704 * 0.5;
        float _825 = _714 * 0.5;
        float _826 = _724 * 0.5;
        float _827 = dot(vec3(_824, _825, _826), vec3(_824, _825, _826));
        float _832 = (_827 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_827);
        float _840 = (dot(vec3(_358, _359, _360), vec3(_832 * _824, _832 * _825, _832 * _826)) + 1.0) * 0.5;
        float _3342 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
        float _849 = sqrt(((_825 * _825) + (_824 * _824)) + (_826 * _826)) / (_737 + 9.9999997473787516355514526367188e-06);
        float _3353 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
        float _850 = isnan(1.0) ? _3353 : (isnan(_3353) ? 1.0 : min(_3353, 1.0));
        float _851 = _850 * 2.0;
        float _855 = (1.0 - _850) / (_850 + 1.0);
        float _3364 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
        float _856 = isnan(1.0) ? _3364 : (isnan(_3364) ? 1.0 : min(_3364, 1.0));
        float _865 = ((((1.0 - _856) * (_851 + 2.0)) * exp2(log2(isnan(1.0) ? _3342 : (isnan(_3342) ? 1.0 : min(_3342, 1.0))) * (_851 + 1.0))) + _856) * _737;
        _873 = _704;
        _875 = _703;
        _876 = _702;
        _877 = _714;
        _878 = _713;
        _879 = _712;
        _880 = _724;
        _881 = _723;
        _882 = _722;
        _883 = _737;
        _884 = _736;
        _885 = _735;
        _886 = cbModelParam._m0[36u].z * (isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0)));
        _887 = cbModelParam._m0[36u].z * (isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0)));
        _888 = cbModelParam._m0[36u].z * (isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0)));
    }
    else
    {
        _873 = _874;
        _875 = _874;
        _876 = _874;
        _877 = _874;
        _878 = _874;
        _879 = _874;
        _880 = _874;
        _881 = _874;
        _882 = _874;
        _883 = _874;
        _884 = _874;
        _885 = _874;
        _886 = 0.0;
        _887 = 0.0;
        _888 = 0.0;
    }
    float _1183;
    float _1184;
    float _1185;
    float _1186;
    float _1187;
    float _1188;
    float _1189;
    float _1190;
    float _1191;
    float _1192;
    float _1193;
    float _1194;
    float _1195;
    float _1196;
    float _1197;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _914 = fma(_572, cbModelParam._m0[30u].z, fma(_568, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _564));
        float _918 = fma(_572, cbModelParam._m0[31u].z, fma(_568, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _564));
        float _922 = fma(_572, cbModelParam._m0[32u].z, fma(_568, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _564));
        float _945 = _564 + _358;
        float _946 = _568 + _359;
        float _947 = _572 + _360;
        float _957 = fma(_947, cbModelParam._m0[30u].z, fma(_946, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _945)) - _914;
        float _958 = fma(_947, cbModelParam._m0[31u].z, fma(_946, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _945)) - _918;
        float _959 = fma(_947, cbModelParam._m0[32u].z, fma(_946, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _945)) - _922;
        float _963 = inversesqrt(dot(vec3(_957, _958, _959), vec3(_957, _958, _959)));
        float _976 = ((_963 * _957) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_914 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _977 = ((_963 * _958) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_918 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _978 = ((_963 * _959) / cbModelParam._m0[35u].z) + ((((((_922 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _980 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_976, _977, _978), 0.0);
        vec4 _987 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_976, _977, _978), 0.0);
        vec4 _994 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_976, _977, _978), 0.0);
        vec4 _1001 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_976, _977, _978), 0.0);
        float _1013 = exp2((_980.w + (-0.5)) * 20.0) * 2.0;
        float _1014 = _1013 * (_980.x + (-0.5));
        float _1015 = _1013 * (_980.y + (-0.5));
        float _1016 = _1013 * (_980.z + (-0.5));
        float _1023 = exp2((_987.w + (-0.5)) * 20.0) * 2.0;
        float _1024 = _1023 * (_987.x + (-0.5));
        float _1025 = _1023 * (_987.y + (-0.5));
        float _1026 = _1023 * (_987.z + (-0.5));
        float _1033 = exp2((_994.w + (-0.5)) * 20.0) * 2.0;
        float _1034 = _1033 * (_994.x + (-0.5));
        float _1035 = _1033 * (_994.y + (-0.5));
        float _1036 = _1033 * (_994.z + (-0.5));
        float _1043 = exp2((_1001.w + (-0.5)) * 20.0) * 2.0;
        float _1044 = _1043 * (_1001.x + (-0.5));
        float _1045 = _1043 * (_1001.y + (-0.5));
        float _1046 = _1043 * (_1001.z + (-0.5));
        float _1047 = isnan(0.0) ? _1044 : (isnan(_1044) ? 0.0 : max(_1044, 0.0));
        float _1048 = isnan(0.0) ? _1045 : (isnan(_1045) ? 0.0 : max(_1045, 0.0));
        float _1049 = isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0));
        float _1050 = _1014 * 0.5;
        float _1051 = _1024 * 0.5;
        float _1052 = _1034 * 0.5;
        float _1053 = dot(vec3(_1050, _1051, _1052), vec3(_1050, _1051, _1052));
        float _1058 = (_1053 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1053);
        float _1066 = (dot(vec3(_358, _359, _360), vec3(_1058 * _1050, _1058 * _1051, _1058 * _1052)) + 1.0) * 0.5;
        float _3405 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
        float _1075 = sqrt(((_1051 * _1051) + (_1050 * _1050)) + (_1052 * _1052)) / (_1047 + 9.9999997473787516355514526367188e-06);
        float _3416 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
        float _1076 = isnan(1.0) ? _3416 : (isnan(_3416) ? 1.0 : min(_3416, 1.0));
        float _1077 = _1076 * 2.0;
        float _1081 = (1.0 - _1076) / (_1076 + 1.0);
        float _3427 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1082 = isnan(1.0) ? _3427 : (isnan(_3427) ? 1.0 : min(_3427, 1.0));
        float _1091 = ((((1.0 - _1082) * (_1077 + 2.0)) * exp2(log2(isnan(1.0) ? _3405 : (isnan(_3405) ? 1.0 : min(_3405, 1.0))) * (_1077 + 1.0))) + _1082) * _1047;
        float _1092 = _1015 * 0.5;
        float _1093 = _1025 * 0.5;
        float _1094 = _1035 * 0.5;
        float _1095 = dot(vec3(_1092, _1093, _1094), vec3(_1092, _1093, _1094));
        float _1100 = (_1095 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1095);
        float _1108 = (dot(vec3(_358, _359, _360), vec3(_1100 * _1092, _1100 * _1093, _1100 * _1094)) + 1.0) * 0.5;
        float _3438 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1117 = sqrt(((_1093 * _1093) + (_1092 * _1092)) + (_1094 * _1094)) / (_1048 + 9.9999997473787516355514526367188e-06);
        float _3449 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
        float _1118 = isnan(1.0) ? _3449 : (isnan(_3449) ? 1.0 : min(_3449, 1.0));
        float _1119 = _1118 * 2.0;
        float _1123 = (1.0 - _1118) / (_1118 + 1.0);
        float _3460 = isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0));
        float _1124 = isnan(1.0) ? _3460 : (isnan(_3460) ? 1.0 : min(_3460, 1.0));
        float _1133 = ((((1.0 - _1124) * (_1119 + 2.0)) * exp2(log2(isnan(1.0) ? _3438 : (isnan(_3438) ? 1.0 : min(_3438, 1.0))) * (_1119 + 1.0))) + _1124) * _1048;
        float _1134 = _1016 * 0.5;
        float _1135 = _1026 * 0.5;
        float _1136 = _1036 * 0.5;
        float _1137 = dot(vec3(_1134, _1135, _1136), vec3(_1134, _1135, _1136));
        float _1142 = (_1137 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1137);
        float _1150 = (dot(vec3(_358, _359, _360), vec3(_1142 * _1134, _1142 * _1135, _1142 * _1136)) + 1.0) * 0.5;
        float _3471 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        float _1159 = sqrt(((_1135 * _1135) + (_1134 * _1134)) + (_1136 * _1136)) / (_1049 + 9.9999997473787516355514526367188e-06);
        float _3482 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1160 = isnan(1.0) ? _3482 : (isnan(_3482) ? 1.0 : min(_3482, 1.0));
        float _1161 = _1160 * 2.0;
        float _1165 = (1.0 - _1160) / (_1160 + 1.0);
        float _3493 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1166 = isnan(1.0) ? _3493 : (isnan(_3493) ? 1.0 : min(_3493, 1.0));
        float _1175 = ((((1.0 - _1166) * (_1161 + 2.0)) * exp2(log2(isnan(1.0) ? _3471 : (isnan(_3471) ? 1.0 : min(_3471, 1.0))) * (_1161 + 1.0))) + _1166) * _1049;
        _1183 = _1016;
        _1184 = _1015;
        _1185 = _1014;
        _1186 = _1026;
        _1187 = _1025;
        _1188 = _1024;
        _1189 = _1036;
        _1190 = _1035;
        _1191 = _1034;
        _1192 = _1049;
        _1193 = _1048;
        _1194 = _1047;
        _1195 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0)));
        _1196 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0)));
        _1197 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0)));
    }
    else
    {
        _1183 = _874;
        _1184 = _874;
        _1185 = _874;
        _1186 = _874;
        _1187 = _874;
        _1188 = _874;
        _1189 = _874;
        _1190 = _874;
        _1191 = _874;
        _1192 = _874;
        _1193 = _874;
        _1194 = _874;
        _1195 = 0.0;
        _1196 = 0.0;
        _1197 = 0.0;
    }
    float _1207 = (cbModelParam._m0[1u].x * (_1195 - _886)) + _886;
    float _1208 = (cbModelParam._m0[1u].x * (_1196 - _887)) + _887;
    float _1209 = (cbModelParam._m0[1u].x * (_1197 - _888)) + _888;
    float _1230 = fma(_1209, cbSceneParam._m0[89u].z, fma(_1208, cbSceneParam._m0[89u].y, _1207 * cbSceneParam._m0[89u].x));
    float _1233 = fma(_1209, cbSceneParam._m0[90u].z, fma(_1208, cbSceneParam._m0[90u].y, _1207 * cbSceneParam._m0[90u].x));
    float _1236 = fma(_1209, cbSceneParam._m0[91u].z, fma(_1208, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1207));
    float _1251 = _521 * 0.5;
    float _1252 = _522 * 0.5;
    float _1253 = _523 * 0.5;
    float _1254 = dot(vec4(_1251, _1252, _1253, 1.0), vec4(_1185, _1188, _1191, _1194));
    float _1257 = dot(vec4(_1251, _1252, _1253, 1.0), vec4(_1184, _1187, _1190, _1193));
    float _1260 = dot(vec4(_1251, _1252, _1253, 1.0), vec4(_1183, _1186, _1189, _1192));
    float _1294;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1267 = dot(vec4(_1251, _1252, _1253, 1.0), vec4(_873, _877, _880, _883));
        float _1271 = dot(vec4(_1251, _1252, _1253, 1.0), vec4(_875, _878, _881, _884));
        float _1275 = dot(vec4(_1251, _1252, _1253, 1.0), vec4(_876, _879, _882, _885));
        float _1282 = dot(vec4(cbModelParam._m0[39u]), vec4(_1251, _1252, _1253, 1.0));
        _1294 = dot(vec3(isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0)), isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0)), isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1282) ? 0.0 : (isnan(0.0) ? _1282 : max(0.0, _1282))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1294 = 1.0;
    }
    float _1305;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1296 = dot(vec4(cbModelParam._m0[40u]), vec4(_1251, _1252, _1253, 1.0));
        _1305 = dot(vec3(isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0)), isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0)), isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1296) ? 0.0 : (isnan(0.0) ? _1296 : max(0.0, _1296))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1305 = 1.0;
    }
    float _1309 = (_1305 * cbModelParam._m0[1u].x) + (_1294 * (1.0 - cbModelParam._m0[1u].x));
    float _1318 = cbModelParam._m0[25u].z * 0.019999980926513671875;
    float _1320 = isnan(_1318) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1318 : min(cbModelParam._m0[25u].z, _1318));
    float _1402;
    float _1404;
    float _1406;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1369 = fma(_572, cbModelParam._m0[13u].z, fma(_568, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _564)) + cbModelParam._m0[13u].w;
        float _1373 = fma(_572, cbModelParam._m0[14u].z, fma(_568, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _564)) + cbModelParam._m0[14u].w;
        float _1377 = fma(_572, cbModelParam._m0[15u].z, fma(_568, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _564)) + cbModelParam._m0[15u].w;
        float _1380 = fma(_523, cbModelParam._m0[13u].z, fma(_522, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _521));
        float _1383 = fma(_523, cbModelParam._m0[14u].z, fma(_522, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _521));
        float _1386 = fma(_523, cbModelParam._m0[15u].z, fma(_522, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _521));
        float _1413;
        if (_1380 > 0.0)
        {
            _1413 = abs((1.0 - _1369) / _1380);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1380 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1369 + 1.0) / _1380);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1413 = frontier_phi_16_14_ladder;
        }
        float _1639;
        if (_1383 > 0.0)
        {
            _1639 = abs((1.0 - _1373) / _1383);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1383 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1373 + 1.0) / _1383);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1639 = frontier_phi_25_21_ladder;
        }
        float _1885;
        if (_1386 > 0.0)
        {
            _1885 = abs((1.0 - _1377) / _1386);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1386 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1377 + 1.0) / _1386);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1885 = frontier_phi_37_32_ladder;
        }
        float _1887 = isnan(_1639) ? _1413 : (isnan(_1413) ? _1639 : min(_1413, _1639));
        float _1888 = isnan(_1885) ? _1887 : (isnan(_1887) ? _1885 : min(_1887, _1885));
        float _1892 = (_1888 * _1380) + _1369;
        float _1893 = (_1888 * _1383) + _1373;
        float _1894 = (_1888 * _1386) + _1377;
        float _1895 = _1888 * 9.9999997473787516355514526367188e-05;
        float _1897 = (-1.0) - _1895;
        float _1899 = _1895 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1894 > _1899) || ((_1894 < _1897) || ((_1893 > _1899) || ((_1893 < _1897) || ((_1892 < _1897) || (_1892 > _1899))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2017 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1894, cbModelParam._m0[9u].z, fma(_1893, cbModelParam._m0[9u].y, _1892 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1894, cbModelParam._m0[10u].z, fma(_1893, cbModelParam._m0[10u].y, _1892 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1894, cbModelParam._m0[11u].z, fma(_1893, cbModelParam._m0[11u].y, _1892 * cbModelParam._m0[11u].x))), _1320);
            frontier_phi_15_37_ladder = _2017.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2017.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2017.x * cbModelParam._m0[1u].y;
        }
        _1402 = frontier_phi_15_37_ladder_2;
        _1404 = frontier_phi_15_37_ladder_1;
        _1406 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1390 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_521, _522, _523), _1320);
        _1402 = _1390.x * cbModelParam._m0[1u].y;
        _1404 = _1390.y * cbModelParam._m0[1u].y;
        _1406 = _1390.z * cbModelParam._m0[1u].y;
    }
    float _1409 = cbModelParam._m0[25u].w * 0.019999980926513671875;
    float _1410 = isnan(_1409) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1409 : min(cbModelParam._m0[25u].w, _1409));
    float _1502;
    float _1504;
    float _1506;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1466 = fma(_572, cbModelParam._m0[21u].z, fma(_568, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _564)) + cbModelParam._m0[21u].w;
        float _1470 = fma(_572, cbModelParam._m0[22u].z, fma(_568, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _564)) + cbModelParam._m0[22u].w;
        float _1474 = fma(_572, cbModelParam._m0[23u].z, fma(_568, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _564)) + cbModelParam._m0[23u].w;
        float _1477 = fma(_523, cbModelParam._m0[21u].z, fma(_522, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _521));
        float _1480 = fma(_523, cbModelParam._m0[22u].z, fma(_522, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _521));
        float _1483 = fma(_523, cbModelParam._m0[23u].z, fma(_522, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _521));
        float _1644;
        if (_1477 > 0.0)
        {
            _1644 = abs((1.0 - _1466) / _1477);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1477 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1466 + 1.0) / _1477);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1644 = frontier_phi_27_23_ladder;
        }
        float _1912;
        if (_1480 > 0.0)
        {
            _1912 = abs((1.0 - _1470) / _1480);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1480 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1470 + 1.0) / _1480);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1912 = frontier_phi_39_34_ladder;
        }
        float _2115;
        if (_1483 > 0.0)
        {
            _2115 = abs((1.0 - _1474) / _1483);
        }
        else
        {
            float frontier_phi_48_45_ladder;
            if (_1483 < 0.0)
            {
                frontier_phi_48_45_ladder = abs((_1474 + 1.0) / _1483);
            }
            else
            {
                frontier_phi_48_45_ladder = 5000.0;
            }
            _2115 = frontier_phi_48_45_ladder;
        }
        float _2117 = isnan(_1912) ? _1644 : (isnan(_1644) ? _1912 : min(_1644, _1912));
        float _2118 = isnan(_2115) ? _2117 : (isnan(_2117) ? _2115 : min(_2117, _2115));
        float _2122 = (_2118 * _1477) + _1466;
        float _2123 = (_2118 * _1480) + _1470;
        float _2124 = (_2118 * _1483) + _1474;
        float _2125 = _2118 * 9.9999997473787516355514526367188e-05;
        float _2126 = (-1.0) - _2125;
        float _2128 = _2125 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2124 > _2128) || ((_2124 < _2126) || ((_2123 > _2128) || ((_2123 < _2126) || ((_2122 < _2126) || (_2122 > _2128))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2322 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2124, cbModelParam._m0[17u].z, fma(_2123, cbModelParam._m0[17u].y, _2122 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2124, cbModelParam._m0[18u].z, fma(_2123, cbModelParam._m0[18u].y, _2122 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2124, cbModelParam._m0[19u].z, fma(_2123, cbModelParam._m0[19u].y, _2122 * cbModelParam._m0[19u].x))), _1410);
            frontier_phi_24_48_ladder = _2322.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2322.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2322.x * cbModelParam._m0[1u].z;
        }
        _1502 = frontier_phi_24_48_ladder_2;
        _1504 = frontier_phi_24_48_ladder_1;
        _1506 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1486 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_521, _522, _523), _1410);
        _1502 = _1486.x * cbModelParam._m0[1u].z;
        _1504 = _1486.y * cbModelParam._m0[1u].z;
        _1506 = _1486.z * cbModelParam._m0[1u].z;
    }
    float _1518 = ((0.0397587902843952178955078125 - (_535 * 0.03859509527683258056640625)) + (_535 * 0.96097481250762939453125)) * _513;
    float _1519 = _1518 * ((cbModelParam._m0[1u].w * (_1502 - _1402)) + _1402);
    float _1520 = _1518 * ((cbModelParam._m0[1u].w * (_1504 - _1404)) + _1404);
    float _1521 = _1518 * ((cbModelParam._m0[1u].w * (_1506 - _1406)) + _1406);
    float _1524 = fma(_1521, cbSceneParam._m0[89u].z, fma(_1520, cbSceneParam._m0[89u].y, _1519 * cbSceneParam._m0[89u].x));
    float _1527 = fma(_1521, cbSceneParam._m0[90u].z, fma(_1520, cbSceneParam._m0[90u].y, _1519 * cbSceneParam._m0[90u].x));
    float _1530 = fma(_1521, cbSceneParam._m0[91u].z, fma(_1520, cbSceneParam._m0[91u].y, _1519 * cbSceneParam._m0[91u].x));
    vec4 _1538 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_443, _444));
    float _1540 = _1538.w;
    float _1552 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1540);
    float _1553 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1540);
    float _1554 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1540);
    uvec4 _1558 = floatBitsToUint(cbInstanceData._m0[_487 + 5u]);
    uint _1560 = _1558.x * 14u;
    uint _1561 = _1560 + 13u;
    float _1568 = _513 + (-1.0);
    float _1573 = (cbLight._m0[_1561].x * _1568) + 1.0;
    float _1574 = (cbLight._m0[_1561].y * _1568) + 1.0;
    float _1575 = (cbLight._m0[_1561].z * _1568) + 1.0;
    float _1576 = (cbLight._m0[_1561].w * _1568) + 1.0;
    uint _1577 = _1560 + 5u;
    float _1583 = isnan(1.0) ? _1574 : (isnan(_1574) ? 1.0 : min(_1574, 1.0));
    uint _1587 = _1560 + 4u;
    float _1597 = isnan(1.0) ? _1573 : (isnan(_1573) ? 1.0 : min(_1573, 1.0));
    uint _1601 = _1560 | 1u;
    float _1612 = dot(vec3(cbLight._m0[_1560].xyz), vec3(_358, _359, _360));
    float _1615 = dot(vec3(cbLight._m0[_1601].xyz), vec3(_358, _359, _360));
    float _3629 = isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0));
    float _3640 = isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0));
    float _1620 = (isnan(1.0) ? _3629 : (isnan(_3629) ? 1.0 : min(_3629, 1.0))) * 0.3183098733425140380859375;
    float _1622 = (isnan(1.0) ? _3640 : (isnan(_3640) ? 1.0 : min(_3640, 1.0))) * 0.3183098733425140380859375;
    float _1629 = ((cbLight._m0[_1577].x * _1583) * _1622) + (((cbLight._m0[_1587].x * _1552) * _1597) * _1620);
    float _1630 = ((_1583 * cbLight._m0[_1577].y) * _1622) + (((cbLight._m0[_1587].y * _1553) * _1597) * _1620);
    float _1631 = ((_1583 * cbLight._m0[_1577].z) * _1622) + (((cbLight._m0[_1587].z * _1554) * _1597) * _1620);
    uvec4 _1636 = floatBitsToUint(cbLight._m0[_1560 + 12u]);
    bool _1638 = _1636.x == 0u;
    float _1649;
    float _1651;
    float _1653;
    if (_1638)
    {
        _1649 = _1629;
        _1651 = _1630;
        _1653 = _1631;
    }
    else
    {
        uint _1657 = _1560 + 6u;
        float _1673 = (dot(vec3(cbLight._m0[_1560 + 2u].xyz), vec3(_358, _359, _360)) * 0.5) + 0.5;
        float _1674 = _1673 * _1673;
        float _3651 = isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0));
        float _1675 = isnan(1.0) ? _3651 : (isnan(_3651) ? 1.0 : min(_3651, 1.0));
        float _1676 = isnan(1.0) ? _1575 : (isnan(_1575) ? 1.0 : min(_1575, 1.0));
        _1649 = (((cbLight._m0[_1657].x * 0.3183098733425140380859375) * _1675) * _1676) + _1629;
        _1651 = (((cbLight._m0[_1657].y * 0.3183098733425140380859375) * _1675) * _1676) + _1630;
        _1653 = (((cbLight._m0[_1657].z * 0.3183098733425140380859375) * _1675) * _1676) + _1631;
    }
    bool _1656 = _1636.y == 0u;
    float _1694;
    float _1696;
    float _1698;
    if (_1656)
    {
        _1694 = _1649;
        _1696 = _1651;
        _1698 = _1653;
    }
    else
    {
        uint _1856 = _1560 + 7u;
        float _1872 = (dot(vec3(cbLight._m0[_1560 + 3u].xyz), vec3(_358, _359, _360)) * 0.5) + 0.5;
        float _1873 = _1872 * _1872;
        float _3667 = isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0));
        float _1874 = isnan(1.0) ? _3667 : (isnan(_3667) ? 1.0 : min(_3667, 1.0));
        float _1875 = isnan(1.0) ? _1576 : (isnan(_1576) ? 1.0 : min(_1576, 1.0));
        _1694 = (((cbLight._m0[_1856].x * 0.3183098733425140380859375) * _1874) * _1875) + _1649;
        _1696 = (((cbLight._m0[_1856].y * 0.3183098733425140380859375) * _1874) * _1875) + _1651;
        _1698 = (((cbLight._m0[_1856].z * 0.3183098733425140380859375) * _1874) * _1875) + _1653;
    }
    uint _1701 = _1560 + 8u;
    float _1714 = 1.0 - (sqrt(0.980000019073486328125 - (0.0735000073909759521484375 / cbLight._m0[_1560].w)) * 0.949999988079071044921875);
    float _1715 = _1714 * _1714;
    float _1716 = cbLight._m0[_1560].x + _435;
    float _1717 = cbLight._m0[_1560].y + _436;
    float _1718 = cbLight._m0[_1560].z + _437;
    float _1722 = inversesqrt(dot(vec3(_1716, _1717, _1718), vec3(_1716, _1717, _1718)));
    float _1723 = _1722 * _1716;
    float _1724 = _1722 * _1717;
    float _1725 = _1722 * _1718;
    float _1726 = dot(vec3(_358, _359, _360), vec3(cbLight._m0[_1560].xyz));
    float _3683 = isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0));
    float _1729 = isnan(1.0) ? _3683 : (isnan(_3683) ? 1.0 : min(_3683, 1.0));
    float _3694 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _1730 = isnan(1.0) ? _3694 : (isnan(_3694) ? 1.0 : min(_3694, 1.0));
    float _1731 = dot(vec3(_358, _359, _360), vec3(_1723, _1724, _1725));
    float _3705 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
    float _1734 = isnan(1.0) ? _3705 : (isnan(_3705) ? 1.0 : min(_3705, 1.0));
    float _1735 = dot(vec3(cbLight._m0[_1560].xyz), vec3(_1723, _1724, _1725));
    float _3716 = isnan(0.0) ? _1735 : (isnan(_1735) ? 0.0 : max(_1735, 0.0));
    float _1739 = _1715 * _1715;
    float _1743 = ((_1734 * _1734) * (_1739 + (-1.0))) + 1.0;
    float _1754 = (exp2(log2(1.0 - (isnan(1.0) ? _3716 : (isnan(_3716) ? 1.0 : min(_3716, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1756 = 1.0 - _1715;
    float _1767 = (0.5 / (((_1730 * ((_1729 * _1756) + _1715)) + 9.9999999392252902907785028219223e-09) + (((_1730 * _1756) + _1715) * _1729))) * _1729;
    float _3727 = isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0));
    float _1769 = (isnan(1.0) ? _3727 : (isnan(_3727) ? 1.0 : min(_3727, 1.0))) * (_1739 / ((_1743 * _1743) * 3.141590118408203125));
    uint _1783 = _1560 + 9u;
    float _1793 = 1.0 - (sqrt(0.980000019073486328125 - (0.0735000073909759521484375 / cbLight._m0[_1601].w)) * 0.949999988079071044921875);
    float _1794 = _1793 * _1793;
    float _1795 = cbLight._m0[_1601].x + _435;
    float _1796 = cbLight._m0[_1601].y + _436;
    float _1797 = cbLight._m0[_1601].z + _437;
    float _1801 = inversesqrt(dot(vec3(_1795, _1796, _1797), vec3(_1795, _1796, _1797)));
    float _1802 = _1801 * _1795;
    float _1803 = _1801 * _1796;
    float _1804 = _1801 * _1797;
    float _1805 = dot(vec3(_358, _359, _360), vec3(cbLight._m0[_1601].xyz));
    float _3738 = isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0));
    float _1808 = isnan(1.0) ? _3738 : (isnan(_3738) ? 1.0 : min(_3738, 1.0));
    float _1809 = dot(vec3(_358, _359, _360), vec3(_1802, _1803, _1804));
    float _3749 = isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0));
    float _1812 = isnan(1.0) ? _3749 : (isnan(_3749) ? 1.0 : min(_3749, 1.0));
    float _1813 = dot(vec3(cbLight._m0[_1601].xyz), vec3(_1802, _1803, _1804));
    float _3760 = isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0));
    float _1817 = _1794 * _1794;
    float _1821 = ((_1812 * _1812) * (_1817 + (-1.0))) + 1.0;
    float _1830 = (exp2(log2(1.0 - (isnan(1.0) ? _3760 : (isnan(_3760) ? 1.0 : min(_3760, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1831 = 1.0 - _1794;
    float _1841 = (0.5 / (((_1730 * ((_1808 * _1831) + _1794)) + 9.9999999392252902907785028219223e-09) + (((_1730 * _1831) + _1794) * _1808))) * _1808;
    float _3771 = isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0));
    float _1843 = (isnan(1.0) ? _3771 : (isnan(_3771) ? 1.0 : min(_3771, 1.0))) * (_1817 / ((_1821 * _1821) * 3.141590118408203125));
    float _1853 = (((_1830 * cbLight._m0[_1783].x) * _1843) * _1583) + ((((cbLight._m0[_1701].x * _1552) * _1754) * _1769) * _1597);
    float _1854 = (((_1830 * cbLight._m0[_1783].y) * _1843) * _1583) + ((((cbLight._m0[_1701].y * _1553) * _1754) * _1769) * _1597);
    float _1855 = (((_1830 * cbLight._m0[_1783].z) * _1843) * _1583) + ((((cbLight._m0[_1701].z * _1554) * _1754) * _1769) * _1597);
    float _1917;
    float _1919;
    float _1921;
    if (_1638)
    {
        _1917 = _1853;
        _1919 = _1854;
        _1921 = _1855;
    }
    else
    {
        uint _1923 = _1560 + 2u;
        uint _1927 = _1560 + 10u;
        float _1940 = 1.0 - (sqrt(0.980000019073486328125 - (0.0735000073909759521484375 / cbLight._m0[_1923].w)) * 0.949999988079071044921875);
        float _1941 = _1940 * _1940;
        float _1942 = cbLight._m0[_1923].x + _435;
        float _1943 = cbLight._m0[_1923].y + _436;
        float _1944 = cbLight._m0[_1923].z + _437;
        float _1948 = inversesqrt(dot(vec3(_1942, _1943, _1944), vec3(_1942, _1943, _1944)));
        float _1949 = _1948 * _1942;
        float _1950 = _1948 * _1943;
        float _1951 = _1948 * _1944;
        float _1952 = dot(vec3(_358, _359, _360), vec3(cbLight._m0[_1923].xyz));
        float _3782 = isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0));
        float _1955 = isnan(1.0) ? _3782 : (isnan(_3782) ? 1.0 : min(_3782, 1.0));
        float _1956 = dot(vec3(_358, _359, _360), vec3(_1949, _1950, _1951));
        float _3793 = isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0));
        float _1959 = isnan(1.0) ? _3793 : (isnan(_3793) ? 1.0 : min(_3793, 1.0));
        float _1960 = dot(vec3(cbLight._m0[_1923].xyz), vec3(_1949, _1950, _1951));
        float _3804 = isnan(0.0) ? _1960 : (isnan(_1960) ? 0.0 : max(_1960, 0.0));
        float _1964 = _1941 * _1941;
        float _1968 = ((_1959 * _1959) * (_1964 + (-1.0))) + 1.0;
        float _1977 = (exp2(log2(1.0 - (isnan(1.0) ? _3804 : (isnan(_3804) ? 1.0 : min(_3804, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1978 = 1.0 - _1941;
        float _1988 = (0.5 / (((_1730 * ((_1955 * _1978) + _1941)) + 9.9999999392252902907785028219223e-09) + (((_1730 * _1978) + _1941) * _1955))) * _1955;
        float _3815 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
        float _1990 = (isnan(1.0) ? _3815 : (isnan(_3815) ? 1.0 : min(_3815, 1.0))) * (_1964 / ((_1968 * _1968) * 3.141590118408203125));
        float _1991 = isnan(1.0) ? _1575 : (isnan(_1575) ? 1.0 : min(_1575, 1.0));
        _1917 = (((_1977 * cbLight._m0[_1927].x) * _1990) * _1991) + _1853;
        _1919 = (((_1977 * cbLight._m0[_1927].y) * _1990) * _1991) + _1854;
        _1921 = (((_1977 * cbLight._m0[_1927].z) * _1990) * _1991) + _1855;
    }
    float _2026;
    float _2028;
    float _2030;
    if (_1656)
    {
        _2026 = _1917;
        _2028 = _1919;
        _2030 = _1921;
    }
    else
    {
        uint _2037 = _1560 + 3u;
        uint _2041 = _1560 + 11u;
        float _2054 = 1.0 - (sqrt(0.980000019073486328125 - (0.0735000073909759521484375 / cbLight._m0[_2037].w)) * 0.949999988079071044921875);
        float _2055 = _2054 * _2054;
        float _2056 = cbLight._m0[_2037].x + _435;
        float _2057 = cbLight._m0[_2037].y + _436;
        float _2058 = cbLight._m0[_2037].z + _437;
        float _2062 = inversesqrt(dot(vec3(_2056, _2057, _2058), vec3(_2056, _2057, _2058)));
        float _2063 = _2062 * _2056;
        float _2064 = _2062 * _2057;
        float _2065 = _2062 * _2058;
        float _2066 = dot(vec3(_358, _359, _360), vec3(cbLight._m0[_2037].xyz));
        float _3831 = isnan(0.0) ? _2066 : (isnan(_2066) ? 0.0 : max(_2066, 0.0));
        float _2069 = isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0));
        float _2070 = dot(vec3(_358, _359, _360), vec3(_2063, _2064, _2065));
        float _3842 = isnan(0.0) ? _2070 : (isnan(_2070) ? 0.0 : max(_2070, 0.0));
        float _2073 = isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0));
        float _2074 = dot(vec3(cbLight._m0[_2037].xyz), vec3(_2063, _2064, _2065));
        float _3853 = isnan(0.0) ? _2074 : (isnan(_2074) ? 0.0 : max(_2074, 0.0));
        float _2078 = _2055 * _2055;
        float _2082 = ((_2073 * _2073) * (_2078 + (-1.0))) + 1.0;
        float _2091 = (exp2(log2(1.0 - (isnan(1.0) ? _3853 : (isnan(_3853) ? 1.0 : min(_3853, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2092 = 1.0 - _2055;
        float _2102 = (0.5 / (((_1730 * ((_2069 * _2092) + _2055)) + 9.9999999392252902907785028219223e-09) + (((_1730 * _2092) + _2055) * _2069))) * _2069;
        float _3864 = isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0));
        float _2104 = (isnan(1.0) ? _3864 : (isnan(_3864) ? 1.0 : min(_3864, 1.0))) * (_2078 / ((_2082 * _2082) * 3.141590118408203125));
        float _2105 = isnan(1.0) ? _1576 : (isnan(_1576) ? 1.0 : min(_1576, 1.0));
        _2026 = (((_2091 * cbLight._m0[_2041].x) * _2104) * _2105) + _1917;
        _2028 = (((_2091 * cbLight._m0[_2041].y) * _2104) * _2105) + _1919;
        _2030 = (((_2091 * cbLight._m0[_2041].z) * _2104) * _2105) + _1921;
    }
    float _2239;
    float _2241;
    float _2243;
    float _2245;
    float _2247;
    float _2249;
    if (_1558.y == 0u)
    {
        float _2180 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2181 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2180;
        float _2182 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2180;
        float _2183 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2180;
        uvec4 _2195 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2196 = _2195.x;
        uint _2207 = uint((float(_2195.y) * floor(float(uint(cbSceneParam._m0[85u].y * _444) / _2196))) + floor(float(uint(cbSceneParam._m0[85u].x * _443) / _2196)));
        float _2217 = (log2(_2183 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2218 = isnan(0.0) ? _2217 : (isnan(_2217) ? 0.0 : max(_2217, 0.0));
        uint _2221 = uint(isnan(14.0) ? _2218 : (isnan(_2218) ? 14.0 : min(_2218, 14.0)));
        uvec4 _2226 = texelFetch(g_lightClusterGridBuffer, int(((_2221 << 2u) + (_2207 << 6u)) >> 2u));
        uint _2227 = _2226.x;
        uint _2228 = _2195.z;
        float _2327;
        float _2329;
        float _2331;
        float _2333;
        float _2335;
        float _2337;
        if (((((1u << ((_2228 >> 4u) & 15u)) + 4294967295u) & _2227) == 0u) || ((_2228 & 240u) == 0u))
        {
            _2327 = 0.0;
            _2329 = 0.0;
            _2331 = 0.0;
            _2333 = 0.0;
            _2335 = 0.0;
            _2337 = 0.0;
        }
        else
        {
            float _2328;
            float _2330;
            float _2332;
            float _2334;
            float _2336;
            float _2338;
            float _2472 = 0.0;
            float _2473 = 0.0;
            float _2474 = 0.0;
            float _2475 = 0.0;
            float _2476 = 0.0;
            float _2477 = 0.0;
            uint _2478 = 0u;
            uint _2487;
            bool _2488;
            for (;;)
            {
                _2487 = texelFetch(g_lightClassification, int((((_2221 << 5u) + (_2207 << 9u)) + (_2478 << 2u)) >> 2u)).x;
                _2488 = _2487 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2488)
                {
                    frontier_phi_63_pred = _2477;
                    frontier_phi_63_pred_1 = _2476;
                    frontier_phi_63_pred_2 = _2475;
                    frontier_phi_63_pred_3 = _2474;
                    frontier_phi_63_pred_4 = _2473;
                    frontier_phi_63_pred_5 = _2472;
                }
                else
                {
                    float _2596;
                    float _2597;
                    float _2598;
                    float _2599;
                    float _2600;
                    float _2601;
                    uint _2602;
                    _2596 = _2472;
                    _2597 = _2473;
                    _2598 = _2474;
                    _2599 = _2475;
                    _2600 = _2476;
                    _2601 = _2477;
                    _2602 = _2487;
                    float _2528;
                    float _2529;
                    float _2530;
                    float _2531;
                    float _2532;
                    float _2533;
                    for (;;)
                    {
                        uint _2606 = uint(findLSB(_2602)) + (_2478 << 5u);
                        uint _2603 = (_2602 + 4294967295u) & _2602;
                        uint _2608 = _2606 * 48u;
                        vec4 _2622 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2608)).x, texelFetch(g_PointLightRenderingBuffer, int(_2608 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2608 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2608 + 3u)).x));
                        uint _2628 = (_2606 * 48u) + 4u;
                        vec4 _2641 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2628)).x, texelFetch(g_PointLightRenderingBuffer, int(_2628 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2628 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2628 + 3u)).x));
                        uint _2647 = (_2606 * 48u) + 8u;
                        vec3 _2658 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2647)).x, texelFetch(g_PointLightRenderingBuffer, int(_2647 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2647 + 2u)).x));
                        float _2662 = _2622.x - _2181;
                        float _2663 = _2622.y - _2182;
                        float _2664 = _2622.z - _2183;
                        float _2665 = dot(vec3(_2662, _2663, _2664), vec3(_2662, _2663, _2664));
                        float _2668 = inversesqrt(_2665);
                        float _2669 = _2668 * _2662;
                        float _2670 = _2668 * _2663;
                        float _2671 = _2668 * _2664;
                        float _2672 = dot(vec3(_465, _468, _471), vec3(_2669, _2670, _2671));
                        float _2677 = 1.0 - (_2665 * _2622.w);
                        float _3890 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
                        float _2678 = isnan(1.0) ? _3890 : (isnan(_3890) ? 1.0 : min(_3890, 1.0));
                        float _2679 = sqrt(_2665) * _2641.w;
                        float _2682 = 1.39999997615814208984375 / (_2679 + 1.39999997615814208984375);
                        float _2683 = _2682 * _2682;
                        float _2686 = ((1.0 - _2683) * _2672) + _2683;
                        float _2689 = _2679 * _2679;
                        float _2693 = ((isnan(0.0) ? _2686 : (isnan(_2686) ? 0.0 : max(_2686, 0.0))) * _2678) / ((_2689 * 0.699999988079071044921875) + 1.0);
                        float _2697 = (-0.0) - _2181;
                        float _2698 = (-0.0) - _2182;
                        float _2699 = (-0.0) - _2183;
                        float _2703 = inversesqrt(dot(vec3(_2697, _2698, _2699), vec3(_2697, _2698, _2699)));
                        float _2704 = _2703 * _2697;
                        float _2705 = _2703 * _2698;
                        float _2706 = _2703 * _2699;
                        float _2714 = exp2(log2(1.0 / ((_2689 * 3.5) + 5.0)) * 0.25);
                        float _2720 = sqrt(1.0 - ((1.0 - (_2714 * _2714)) * 0.999898970127105712890625));
                        float _2721 = _2720 * _2720;
                        float _2722 = _2721 * _2721;
                        float _2723 = _2704 + _2669;
                        float _2724 = _2705 + _2670;
                        float _2725 = _2706 + _2671;
                        float _2729 = inversesqrt(dot(vec3(_2723, _2724, _2725), vec3(_2723, _2724, _2725)));
                        float _2733 = dot(vec3(_465, _468, _471), vec3(_2704, _2705, _2706));
                        float _3906 = isnan(0.0) ? _2733 : (isnan(_2733) ? 0.0 : max(_2733, 0.0));
                        float _2736 = isnan(1.0) ? _3906 : (isnan(_3906) ? 1.0 : min(_3906, 1.0));
                        float _2737 = dot(vec3(_465, _468, _471), vec3(_2729 * _2723, _2729 * _2724, _2729 * _2725));
                        float _3917 = isnan(0.0) ? _2737 : (isnan(_2737) ? 0.0 : max(_2737, 0.0));
                        float _2740 = isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0));
                        float _2744 = ((_2740 * _2740) * (_2722 + (-1.0))) + 1.0;
                        float _2745 = _2682 * _2721;
                        float _2746 = _2745 * _2745;
                        float _2749 = ((1.0 - _2746) * _2672) + _2746;
                        float _3928 = isnan(0.0) ? _2749 : (isnan(_2749) ? 0.0 : max(_2749, 0.0));
                        float _2750 = isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0));
                        float _2751 = 1.0 - _2721;
                        float _2761 = (0.5 / (((_2750 * ((_2736 * _2751) + _2721)) + 9.9999999392252902907785028219223e-09) + (((_2750 * _2751) + _2721) * _2736))) * _2750;
                        float _3939 = isnan(0.0) ? _2761 : (isnan(_2761) ? 0.0 : max(_2761, 0.0));
                        float _2772 = (((_2722 * 3.1415927410125732421875) * (isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0)))) / ((_2744 * _2744) * ((_2689 * 2.1991131305694580078125) + 3.141590118408203125))) * _2678;
                        _2531 = (_2693 * _2641.x) + _2599;
                        _2532 = (_2693 * _2641.y) + _2600;
                        _2533 = (_2693 * _2641.z) + _2601;
                        _2528 = (_2772 * _2658.x) + _2596;
                        _2529 = (_2772 * _2658.y) + _2597;
                        _2530 = (_2772 * _2658.z) + _2598;
                        if (_2603 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2596 = _2528;
                            _2597 = _2529;
                            _2598 = _2530;
                            _2599 = _2531;
                            _2600 = _2532;
                            _2601 = _2533;
                            _2602 = _2603;
                        }
                    }
                    frontier_phi_63_pred = _2533;
                    frontier_phi_63_pred_1 = _2532;
                    frontier_phi_63_pred_2 = _2531;
                    frontier_phi_63_pred_3 = _2530;
                    frontier_phi_63_pred_4 = _2529;
                    frontier_phi_63_pred_5 = _2528;
                }
                _2338 = frontier_phi_63_pred;
                _2336 = frontier_phi_63_pred_1;
                _2334 = frontier_phi_63_pred_2;
                _2332 = frontier_phi_63_pred_3;
                _2330 = frontier_phi_63_pred_4;
                _2328 = frontier_phi_63_pred_5;
                uint _2479 = _2478 + 1u;
                if (_2479 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2472 = _2328;
                    _2473 = _2330;
                    _2474 = _2332;
                    _2475 = _2334;
                    _2476 = _2336;
                    _2477 = _2338;
                    _2478 = _2479;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2327 = _2328;
            _2329 = _2330;
            _2331 = _2332;
            _2333 = _2334;
            _2335 = _2336;
            _2337 = _2338;
        }
        uvec4 _2341 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2342 = _2341.z;
        uint _2344 = (_2342 >> 8u) & 15u;
        float _2440;
        float _2442;
        float _2444;
        float _2446;
        float _2448;
        float _2450;
        if (((4294967295u << _2344) & _2227) == 0u)
        {
            _2440 = _2327;
            _2442 = _2329;
            _2444 = _2331;
            _2446 = _2333;
            _2448 = _2335;
            _2450 = _2337;
        }
        else
        {
            float _2465 = inversesqrt(dot(vec3(_2181, _2182, _2183), vec3(_2181, _2182, _2183)));
            float _2466 = _2465 * _2181;
            float _2467 = _2465 * _2182;
            float _2468 = _2465 * _2183;
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_2344 < ((_2342 >> 12u) & 15u))
            {
                float _2441;
                float _2443;
                float _2445;
                float _2447;
                float _2449;
                float _2451;
                float _2579 = _2327;
                float _2580 = _2329;
                float _2581 = _2331;
                float _2582 = _2333;
                float _2583 = _2335;
                float _2584 = _2337;
                uint _2585 = _2344;
                uint _2594;
                bool _2595;
                for (;;)
                {
                    _2594 = texelFetch(g_lightClassification, int((((_2221 << 5u) + (_2207 << 9u)) + (_2585 << 2u)) >> 2u)).x;
                    _2595 = _2594 == 0u;
                    float frontier_phi_69_pred;
                    float frontier_phi_69_pred_1;
                    float frontier_phi_69_pred_2;
                    float frontier_phi_69_pred_3;
                    float frontier_phi_69_pred_4;
                    float frontier_phi_69_pred_5;
                    if (_2595)
                    {
                        frontier_phi_69_pred = _2584;
                        frontier_phi_69_pred_1 = _2583;
                        frontier_phi_69_pred_2 = _2582;
                        frontier_phi_69_pred_3 = _2581;
                        frontier_phi_69_pred_4 = _2580;
                        frontier_phi_69_pred_5 = _2579;
                    }
                    else
                    {
                        float _2777;
                        float _2778;
                        float _2779;
                        float _2780;
                        float _2781;
                        float _2782;
                        float _3070;
                        float _3071;
                        float _3072;
                        float _3073;
                        float _3074;
                        float _3075;
                        float _2790 = _2579;
                        float _2791 = _2580;
                        float _2792 = _2581;
                        float _2793 = _2582;
                        float _2794 = _2583;
                        float _2795 = _2584;
                        uint _2796 = _2594;
                        uint _2797;
                        vec4 _2822;
                        float _2823;
                        vec4 _2838;
                        vec3 _2850;
                        vec4 _2866;
                        vec4 _2882;
                        float _2929;
                        bool _2930;
                        for (;;)
                        {
                            uint _2807 = ((_2585 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2796));
                            _2797 = (_2796 + 4294967295u) & _2796;
                            uint _2809 = _2807 * 40u;
                            _2822 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2809)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2809 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2809 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2809 + 3u)).x));
                            _2823 = _2822.w;
                            uint _2825 = (_2807 * 40u) + 4u;
                            _2838 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2825)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2825 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2825 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2825 + 3u)).x));
                            uint _2840 = (_2807 * 40u) + 8u;
                            _2850 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2840)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2840 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2840 + 2u)).x));
                            uint _2853 = (_2807 * 40u) + 16u;
                            _2866 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2853)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2853 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2853 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2853 + 3u)).x));
                            uint _2869 = (_2807 * 40u) + 20u;
                            _2882 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2869)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2869 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2869 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2869 + 3u)).x));
                            uint _2885 = (_2807 * 40u) + 24u;
                            vec4 _2898 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2885)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2885 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2885 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2885 + 3u)).x));
                            uint _2904 = (_2807 * 40u) + 28u;
                            vec4 _2917 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2904)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2904 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2904 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2904 + 3u)).x));
                            _2929 = fma(_2183, _2917.z, fma(_2182, _2917.y, _2917.x * _2181)) + _2917.w;
                            _2930 = !((fma(_2183, _2898.z, fma(_2182, _2898.y, _2898.x * _2181)) + _2898.w) <= 0.0);
                            float frontier_phi_75_pred;
                            float frontier_phi_75_pred_1;
                            float frontier_phi_75_pred_2;
                            float frontier_phi_75_pred_3;
                            float frontier_phi_75_pred_4;
                            float frontier_phi_75_pred_5;
                            if (_2930)
                            {
                                float _2957 = _2822.x - _2181;
                                float _2958 = _2822.y - _2182;
                                float _2959 = _2822.z - _2183;
                                float _2960 = dot(vec3(_2957, _2958, _2959), vec3(_2957, _2958, _2959));
                                float _2963 = inversesqrt(_2960);
                                float _2964 = _2963 * _2957;
                                float _2965 = _2963 * _2958;
                                float _2966 = _2963 * _2959;
                                float _2970 = 1.0 - (_2960 / (_2823 * _2823));
                                float _3950 = isnan(0.0) ? _2970 : (isnan(_2970) ? 0.0 : max(_2970, 0.0));
                                float _2971 = isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0));
                                float _2975 = sqrt(_2960) * _2838.w;
                                float _2977 = 1.39999997615814208984375 / (_2975 + 1.39999997615814208984375);
                                float _2978 = _2977 * _2977;
                                float _2981 = ((1.0 - _2978) * dot(vec3(_2964, _2965, _2966), vec3(_465, _468, _471))) + _2978;
                                float _2984 = _2975 * _2975;
                                float _2988 = (fma(_2183, _2866.z, fma(_2182, _2866.y, _2866.x * _2181)) + _2866.w) / _2929;
                                float _2989 = (fma(_2183, _2882.z, fma(_2182, _2882.y, _2882.x * _2181)) + _2882.w) / _2929;
                                float _2993 = 1.0 - dot(vec2(_2988, _2989), vec2(_2988, _2989));
                                float _3966 = isnan(0.0) ? _2993 : (isnan(_2993) ? 0.0 : max(_2993, 0.0));
                                float _2994 = isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0));
                                float _2995 = _2994 * (((isnan(0.0) ? _2981 : (isnan(_2981) ? 0.0 : max(_2981, 0.0))) * _2971) / ((_2984 * 0.699999988079071044921875) + 1.0));
                                float _3007 = exp2(log2(1.0 / ((_2984 * 3.5) + 5.0)) * 0.25);
                                float _3012 = sqrt(1.0 - ((1.0 - (_3007 * _3007)) * 0.999898970127105712890625));
                                float _3013 = _3012 * _3012;
                                float _3014 = _3013 * _3013;
                                float _3015 = _2964 - _2466;
                                float _3016 = _2965 - _2467;
                                float _3017 = _2966 - _2468;
                                float _3021 = inversesqrt(dot(vec3(_3015, _3016, _3017), vec3(_3015, _3016, _3017)));
                                float _3025 = dot(vec3(_465, _468, _471), vec3((-0.0) - _2466, (-0.0) - _2467, (-0.0) - _2468));
                                float _3977 = isnan(0.0) ? _3025 : (isnan(_3025) ? 0.0 : max(_3025, 0.0));
                                float _3028 = isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0));
                                float _3029 = dot(vec3(_465, _468, _471), vec3(_3021 * _3015, _3021 * _3016, _3021 * _3017));
                                float _3988 = isnan(0.0) ? _3029 : (isnan(_3029) ? 0.0 : max(_3029, 0.0));
                                float _3032 = isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0));
                                float _3036 = ((_3032 * _3032) * (_3014 + (-1.0))) + 1.0;
                                float _3037 = _2977 * _3013;
                                float _3038 = _3037 * _3037;
                                float _3044 = ((1.0 - _3038) * dot(vec3(_465, _468, _471), vec3(_2964, _2965, _2966))) + _3038;
                                float _3999 = isnan(0.0) ? _3044 : (isnan(_3044) ? 0.0 : max(_3044, 0.0));
                                float _3045 = isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0));
                                float _3046 = 1.0 - _3013;
                                float _3056 = (0.5 / (((_3045 * ((_3028 * _3046) + _3013)) + 9.9999999392252902907785028219223e-09) + (((_3045 * _3046) + _3013) * _3028))) * _3045;
                                float _4010 = isnan(0.0) ? _3056 : (isnan(_3056) ? 0.0 : max(_3056, 0.0));
                                float _3066 = (_2994 * _2971) * (((_3014 * 3.1415927410125732421875) * (isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0)))) / ((_3036 * _3036) * ((_2984 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_75_pred = _2995 * _2838.z;
                                frontier_phi_75_pred_1 = _2995 * _2838.y;
                                frontier_phi_75_pred_2 = _2995 * _2838.x;
                                frontier_phi_75_pred_3 = _3066 * _2850.z;
                                frontier_phi_75_pred_4 = _3066 * _2850.y;
                                frontier_phi_75_pred_5 = _3066 * _2850.x;
                            }
                            else
                            {
                                frontier_phi_75_pred = 0.0;
                                frontier_phi_75_pred_1 = 0.0;
                                frontier_phi_75_pred_2 = 0.0;
                                frontier_phi_75_pred_3 = 0.0;
                                frontier_phi_75_pred_4 = 0.0;
                                frontier_phi_75_pred_5 = 0.0;
                            }
                            _3075 = frontier_phi_75_pred;
                            _3074 = frontier_phi_75_pred_1;
                            _3073 = frontier_phi_75_pred_2;
                            _3072 = frontier_phi_75_pred_3;
                            _3071 = frontier_phi_75_pred_4;
                            _3070 = frontier_phi_75_pred_5;
                            _2780 = _3073 + _2793;
                            _2781 = _3074 + _2794;
                            _2782 = _3075 + _2795;
                            _2777 = _3070 + _2790;
                            _2778 = _3071 + _2791;
                            _2779 = _3072 + _2792;
                            if (_2797 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2790 = _2777;
                                _2791 = _2778;
                                _2792 = _2779;
                                _2793 = _2780;
                                _2794 = _2781;
                                _2795 = _2782;
                                _2796 = _2797;
                                continue;
                            }
                        }
                        frontier_phi_69_pred = _2782;
                        frontier_phi_69_pred_1 = _2781;
                        frontier_phi_69_pred_2 = _2780;
                        frontier_phi_69_pred_3 = _2779;
                        frontier_phi_69_pred_4 = _2778;
                        frontier_phi_69_pred_5 = _2777;
                    }
                    _2451 = frontier_phi_69_pred;
                    _2449 = frontier_phi_69_pred_1;
                    _2447 = frontier_phi_69_pred_2;
                    _2445 = frontier_phi_69_pred_3;
                    _2443 = frontier_phi_69_pred_4;
                    _2441 = frontier_phi_69_pred_5;
                    uint _2586 = _2585 + 1u;
                    if (_2586 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2579 = _2441;
                        _2580 = _2443;
                        _2581 = _2445;
                        _2582 = _2447;
                        _2583 = _2449;
                        _2584 = _2451;
                        _2585 = _2586;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _2451;
                frontier_phi_57_58_ladder_1 = _2449;
                frontier_phi_57_58_ladder_2 = _2447;
                frontier_phi_57_58_ladder_3 = _2445;
                frontier_phi_57_58_ladder_4 = _2443;
                frontier_phi_57_58_ladder_5 = _2441;
            }
            else
            {
                frontier_phi_57_58_ladder = _2337;
                frontier_phi_57_58_ladder_1 = _2335;
                frontier_phi_57_58_ladder_2 = _2333;
                frontier_phi_57_58_ladder_3 = _2331;
                frontier_phi_57_58_ladder_4 = _2329;
                frontier_phi_57_58_ladder_5 = _2327;
            }
            _2440 = frontier_phi_57_58_ladder_5;
            _2442 = frontier_phi_57_58_ladder_4;
            _2444 = frontier_phi_57_58_ladder_3;
            _2446 = frontier_phi_57_58_ladder_2;
            _2448 = frontier_phi_57_58_ladder_1;
            _2450 = frontier_phi_57_58_ladder;
        }
        float _2455 = isnan(1.0) ? _513 : (isnan(_513) ? 1.0 : min(_513, 1.0));
        _2239 = (_2455 * _2446) + _1694;
        _2241 = (_2455 * _2448) + _1696;
        _2243 = (_2455 * _2450) + _1698;
        _2245 = ((_2440 * 0.039999999105930328369140625) * _2455) + _2026;
        _2247 = ((_2442 * 0.039999999105930328369140625) * _2455) + _2028;
        _2249 = ((_2444 * 0.039999999105930328369140625) * _2455) + _2030;
    }
    else
    {
        _2239 = _1694;
        _2241 = _1696;
        _2243 = _1698;
        _2245 = _2026;
        _2247 = _2028;
        _2249 = _2030;
    }
    float _4026 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0));
    float _4037 = isnan(0.0) ? _500 : (isnan(_500) ? 0.0 : max(_500, 0.0));
    float _4048 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    uint _2269 = _487 + 6u;
    float _2277 = _443 / cbSceneParam._m0[86u].x;
    float _2278 = _444 / cbSceneParam._m0[86u].y;
    vec4 _2292 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2277, _2278, (log2((isnan(cbSceneParam._m0[77u].w) ? _376 : (isnan(_376) ? cbSceneParam._m0[77u].w : min(_376, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2294 = _2292.x;
    float _2295 = _2292.y;
    float _2296 = _2292.z;
    float _2297 = _2292.w;
    float _2389;
    float _2391;
    float _2393;
    float _2395;
    if (_376 > cbSceneParam._m0[78u].w)
    {
        float _2352 = isnan(_376) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _376 : min(cbSceneParam._m0[80u].w, _376));
        float _2353 = _2352 / _376;
        float _2364 = _2353 * _428;
        float _2365 = _429 * _2353;
        float _2366 = (-0.0) - _2365;
        float _2367 = _2353 * _430;
        float _2369 = (cbSceneParam._m0[77u].w * _2366) / _2352;
        float _2370 = _2369 + cbSceneParam._m0[79u].w;
        float _2371 = cbSceneParam._m0[79u].w - _2365;
        float _2377 = sqrt(((_2364 * _2364) + (_2365 * _2365)) + (_2367 * _2367));
        float _2380 = (1.0 - (cbSceneParam._m0[77u].w / _2352)) * _2377;
        float _2385 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2387 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2541;
        if (abs((_2366 - _2369) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2541 = ((((_2370 > 0.0) ? exp2(_2385 * _2370) : (2.0 - exp2(_2387 * _2370))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2380;
        }
        else
        {
            float _2501 = 1.0 / cbSceneParam._m0[80u].x;
            float _2502 = isnan(_2371) ? _2370 : (isnan(_2370) ? _2371 : max(_2370, _2371));
            float _2503 = isnan(_2371) ? _2370 : (isnan(_2370) ? _2371 : min(_2370, _2371));
            float _2512 = isnan(0.0) ? _2502 : (isnan(_2502) ? 0.0 : min(_2502, 0.0));
            float _2513 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : min(_2503, 0.0));
            _2541 = ((abs(_2377 / _2366) * cbSceneParam._m0[80u].y) * ((((_2512 - _2513) * 2.0) - ((exp2(_2385 * (isnan(0.0) ? _2502 : (isnan(_2502) ? 0.0 : max(_2502, 0.0)))) - exp2(_2385 * (isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0))))) * _2501)) - ((exp2(_2387 * _2512) - exp2(_2387 * _2513)) * _2501))) + (_2380 * cbSceneParam._m0[80u].z);
        }
        vec4 _2543 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2277, _2278, 1.0), 0.0);
        float _2552 = exp2((_2541 * (-1.44269502162933349609375)) * (1.0 - _2543.w));
        float _2553 = log2(_2552);
        float _2569 = log2(_2297);
        _2389 = (exp2(_2569 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2553 * cbSceneParam._m0[78u].x)) * _2543.x) / cbSceneParam._m0[78u].x)) + _2294;
        _2391 = (exp2(_2569 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2553 * cbSceneParam._m0[78u].y)) * _2543.y) / cbSceneParam._m0[78u].y)) + _2295;
        _2393 = (exp2(_2569 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2553 * cbSceneParam._m0[78u].z)) * _2543.z) / cbSceneParam._m0[78u].z)) + _2296;
        _2395 = _2552 * _2297;
    }
    else
    {
        _2389 = _2294;
        _2391 = _2295;
        _2393 = _2296;
        _2395 = _2297;
    }
    float _2407 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2408 = _2407 == 3.0;
    float _2410 = log2(_2395);
    float _2417 = exp2(_2410 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0))) * (_2239 + ((isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0))) * _513))) + ((_2245 + ((isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0))) * _1309)) * cbPerFrame._m0[3u].x));
    float _2418 = exp2(_2410 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0))) * (_2241 + ((isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0))) * _513))) + ((_2247 + ((isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0))) * _1309)) * cbPerFrame._m0[3u].x));
    float _2419 = exp2(_2410 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0))) * (_2243 + ((isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0))) * _513))) + ((_2249 + ((isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0))) * _1309)) * cbPerFrame._m0[3u].x));
    float _2428 = (_2407 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2428 * (_2408 ? _2417 : (_2417 + (cbSceneParam._m0[72u].w * _2389)));
    SV_Target.y = _2428 * (_2408 ? _2418 : (_2418 + (cbSceneParam._m0[72u].w * _2391)));
    SV_Target.z = _2428 * (_2408 ? _2419 : (_2419 + (cbSceneParam._m0[72u].w * _2393)));
    SV_Target.w = cbInstanceData._m0[_2269].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2269].w;
}


