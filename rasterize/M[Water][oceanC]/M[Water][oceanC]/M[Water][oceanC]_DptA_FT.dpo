#version 460
layout(triangles) in;

out float gl_ClipDistance[2];
out float gl_CullDistance[1];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 0) uniform texture2D M_Water_oceanC_snp_0_Texture2D_17;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec4 POSITION[];
layout(location = 1) in vec4 NORMAL[];
layout(location = 2) in vec4 TANGENT[];
layout(location = 3) in vec3 TEXCOORD[];
layout(location = 3, component = 3) in float TEXCOORD_11[];
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 4) out vec2 TEXCOORD_4;
layout(location = 3, component = 3) out float TEXCOORD_11_1;

void main()
{
    precise float _95 = gl_TessCoord.z * POSITION[0u].x;
    precise float _96 = gl_TessCoord.z * POSITION[0u].y;
    precise float _97 = gl_TessCoord.z * POSITION[0u].z;
    precise float _104 = gl_TessCoord.x * POSITION[1u].x;
    precise float _105 = gl_TessCoord.x * POSITION[1u].y;
    precise float _106 = gl_TessCoord.x * POSITION[1u].z;
    precise float _107 = _95 + _104;
    precise float _108 = _96 + _105;
    precise float _109 = _97 + _106;
    precise float _116 = gl_TessCoord.y * POSITION[2u].x;
    precise float _117 = gl_TessCoord.y * POSITION[2u].y;
    precise float _118 = gl_TessCoord.y * POSITION[2u].z;
    precise float _119 = _107 + _116;
    precise float _120 = _108 + _117;
    precise float _121 = _109 + _118;
    precise float _216 = gl_TessCoord.z * TEXCOORD[0u].x;
    precise float _217 = gl_TessCoord.z * TEXCOORD[0u].y;
    precise float _218 = gl_TessCoord.z * TEXCOORD[0u].z;
    precise float _225 = gl_TessCoord.x * TEXCOORD[1u].x;
    precise float _226 = gl_TessCoord.x * TEXCOORD[1u].y;
    precise float _227 = gl_TessCoord.x * TEXCOORD[1u].z;
    precise float _228 = _216 + _225;
    precise float _229 = _217 + _226;
    precise float _230 = _218 + _227;
    precise float _237 = gl_TessCoord.y * TEXCOORD[2u].x;
    precise float _238 = gl_TessCoord.y * TEXCOORD[2u].y;
    precise float _239 = gl_TessCoord.y * TEXCOORD[2u].z;
    precise float _240 = _228 + _237;
    precise float _241 = _229 + _238;
    precise float _242 = _230 + _239;
    precise float _259 = cbMtdParam._m0[9u].y * cbMtdParam._m0[9u].z;
    precise float _260 = _240 * 0.5;
    precise float _262 = _241 * 0.5;
    precise float _263 = cbPerFrame._m0[22u].x * 0.02999999932944774627685546875;
    precise float _265 = cbPerFrame._m0[22u].x * (-0.00999999977648258209228515625);
    precise float _267 = _263 + _260;
    precise float _268 = _265 + _262;
    precise float _269 = cbPerFrame._m0[22u].x * 6.5;
    uint _273 = uint(int(floor(_269)));
    float _274 = fract(_269);
    uint _275 = _273 + 1u;
    uint _276 = uint(int(_259));
    float _279 = float(int(_273 - _276 * (_273 / _276)));
    precise float _281 = _279 / cbMtdParam._m0[9u].y;
    float _283 = float(int(_275 - _276 * (_275 / _276)));
    precise float _285 = _283 / cbMtdParam._m0[9u].y;
    precise float _287 = 1.0 / cbMtdParam._m0[9u].y;
    precise float _289 = 1.0 / cbMtdParam._m0[9u].z;
    precise float _292 = _287 * fract(_267);
    precise float _293 = _289 * fract(_268);
    precise float _294 = (_279 - cbMtdParam._m0[9u].y * trunc(_279 / cbMtdParam._m0[9u].y)) * _287;
    precise float _295 = floor(_281) * _289;
    precise float _296 = _294 + _292;
    precise float _297 = _295 + _293;
    precise float _298 = (_283 - cbMtdParam._m0[9u].y * trunc(_283 / cbMtdParam._m0[9u].y)) * _287;
    precise float _299 = floor(_285) * _289;
    precise float _300 = _298 + _292;
    precise float _301 = _299 + _293;
    precise float _308 = _296 * cbTextureTilingScale._m0[0u].x;
    precise float _309 = _297 * cbTextureTilingScale._m0[0u].y;
    precise float _310 = cbTextureTilingScale._m0[0u].z + _308;
    precise float _311 = cbTextureTilingScale._m0[0u].w + _309;
    vec4 _315 = textureLod(sampler2D(M_Water_oceanC_snp_0_Texture2D_17, SS_WrapLinear), vec2(_310, _311), 0.0);
    float _317 = _315.x;
    float _318 = _315.y;
    float _319 = _315.z;
    precise float _320 = _300 * cbTextureTilingScale._m0[0u].x;
    precise float _321 = _301 * cbTextureTilingScale._m0[0u].y;
    precise float _322 = cbTextureTilingScale._m0[0u].z + _320;
    precise float _323 = cbTextureTilingScale._m0[0u].w + _321;
    vec4 _324 = textureLod(sampler2D(M_Water_oceanC_snp_0_Texture2D_17, SS_WrapLinear), vec2(_322, _323), 0.0);
    precise float _329 = _324.x - _317;
    precise float _330 = _324.y - _318;
    precise float _331 = _324.z - _319;
    precise float _332 = _274 * _329;
    precise float _333 = _274 * _330;
    precise float _334 = _274 * _331;
    precise float _335 = _317 + _332;
    precise float _336 = _318 + _333;
    precise float _337 = _319 + _334;
    precise float _338 = _335 + (-0.5);
    precise float _340 = _336 + (-0.5);
    precise float _341 = _337 + (-0.5);
    precise float _342 = _338 * 2.0;
    precise float _344 = _340 * 2.0;
    precise float _345 = _341 * 2.0;
    precise float _346 = _342 * 10.0;
    precise float _348 = _344 * 16.0;
    precise float _350 = _345 * 10.0;
    precise float _351 = _240 * 2.0;
    precise float _352 = _241 * 5.0;
    precise float _354 = _263 + _351;
    precise float _355 = _265 + _352;
    precise float _358 = _287 * fract(_354);
    precise float _359 = _289 * fract(_355);
    precise float _360 = _294 + _358;
    precise float _361 = _295 + _359;
    precise float _362 = _298 + _358;
    precise float _363 = _299 + _359;
    precise float _364 = _360 * cbTextureTilingScale._m0[0u].x;
    precise float _365 = _361 * cbTextureTilingScale._m0[0u].y;
    precise float _366 = cbTextureTilingScale._m0[0u].z + _364;
    precise float _367 = cbTextureTilingScale._m0[0u].w + _365;
    vec4 _368 = textureLod(sampler2D(M_Water_oceanC_snp_0_Texture2D_17, SS_WrapLinear), vec2(_366, _367), 0.0);
    float _370 = _368.x;
    float _371 = _368.y;
    float _372 = _368.z;
    precise float _373 = _362 * cbTextureTilingScale._m0[0u].x;
    precise float _374 = _363 * cbTextureTilingScale._m0[0u].y;
    precise float _375 = cbTextureTilingScale._m0[0u].z + _373;
    precise float _376 = cbTextureTilingScale._m0[0u].w + _374;
    vec4 _377 = textureLod(sampler2D(M_Water_oceanC_snp_0_Texture2D_17, SS_WrapLinear), vec2(_375, _376), 0.0);
    precise float _382 = _377.x - _370;
    precise float _383 = _377.y - _371;
    precise float _384 = _377.z - _372;
    precise float _385 = _274 * _382;
    precise float _386 = _274 * _383;
    precise float _387 = _274 * _384;
    precise float _388 = _370 + _385;
    precise float _389 = _371 + _386;
    precise float _390 = _372 + _387;
    precise float _391 = _388 + (-0.5);
    precise float _392 = _389 + (-0.5);
    precise float _393 = _390 + (-0.5);
    precise float _394 = _391 * 2.0;
    precise float _395 = _392 * 2.0;
    precise float _396 = _393 * 2.0;
    precise float _397 = _394 * 3.0;
    precise float _399 = _395 * 6.0;
    precise float _401 = _396 * 3.0;
    precise float _403 = _397 - _346;
    precise float _404 = _399 - _348;
    precise float _405 = _401 - _350;
    precise float _406 = cbMtdParam._m0[9u].x * _403;
    precise float _407 = cbMtdParam._m0[9u].x * _404;
    precise float _408 = cbMtdParam._m0[9u].x * _405;
    precise float _409 = _346 + _406;
    precise float _410 = _348 + _407;
    precise float _411 = _350 + _408;
    precise float _412 = _119 + _409;
    precise float _413 = _120 + _410;
    precise float _414 = _121 + _411;
    precise float _420 = _412 - cbSceneParam._m0[3u].x;
    precise float _421 = _413 - cbSceneParam._m0[3u].y;
    precise float _422 = _414 - cbSceneParam._m0[3u].z;
    precise float _450 = cbSceneParam._m0[24u].x * _420;
    precise float _451 = _421 * cbSceneParam._m0[24u].y;
    precise float _452 = _451 + _450;
    precise float _453 = _422 * cbSceneParam._m0[24u].z;
    precise float _454 = _453 + _452;
    precise float _455 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _456 = _455 + _454;
    precise float _457 = cbSceneParam._m0[25u].x * _420;
    precise float _458 = _421 * cbSceneParam._m0[25u].y;
    precise float _459 = _458 + _457;
    precise float _460 = _422 * cbSceneParam._m0[25u].z;
    precise float _461 = _460 + _459;
    precise float _462 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _463 = _462 + _461;
    precise float _464 = cbSceneParam._m0[26u].x * _420;
    precise float _465 = _421 * cbSceneParam._m0[26u].y;
    precise float _466 = _465 + _464;
    precise float _467 = _422 * cbSceneParam._m0[26u].z;
    precise float _468 = _467 + _466;
    precise float _469 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _470 = _469 + _468;
    precise float _471 = cbSceneParam._m0[27u].x * _420;
    precise float _472 = _421 * cbSceneParam._m0[27u].y;
    precise float _473 = _472 + _471;
    precise float _474 = _422 * cbSceneParam._m0[27u].z;
    precise float _475 = _474 + _473;
    precise float _476 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _477 = _476 + _475;
    gl_Position.x = _456;
    gl_Position.y = _463;
    gl_Position.z = _470;
    gl_Position.w = _477;
    NORMAL_1.x = ((NORMAL[1u].x * gl_TessCoord.x) + (NORMAL[0u].x * gl_TessCoord.z)) + (NORMAL[2u].x * gl_TessCoord.y);
    NORMAL_1.y = ((NORMAL[1u].y * gl_TessCoord.x) + (NORMAL[0u].y * gl_TessCoord.z)) + (NORMAL[2u].y * gl_TessCoord.y);
    NORMAL_1.z = ((NORMAL[1u].z * gl_TessCoord.x) + (NORMAL[0u].z * gl_TessCoord.z)) + (NORMAL[2u].z * gl_TessCoord.y);
    NORMAL_1.w = ((NORMAL[1u].w * gl_TessCoord.x) + (NORMAL[0u].w * gl_TessCoord.z)) + (NORMAL[2u].w * gl_TessCoord.y);
    TANGENT_1.x = ((TANGENT[1u].x * gl_TessCoord.x) + (TANGENT[0u].x * gl_TessCoord.z)) + (TANGENT[2u].x * gl_TessCoord.y);
    TANGENT_1.y = ((TANGENT[1u].y * gl_TessCoord.x) + (TANGENT[0u].y * gl_TessCoord.z)) + (TANGENT[2u].y * gl_TessCoord.y);
    TANGENT_1.z = ((TANGENT[1u].z * gl_TessCoord.x) + (TANGENT[0u].z * gl_TessCoord.z)) + (TANGENT[2u].z * gl_TessCoord.y);
    TANGENT_1.w = ((TANGENT[1u].w * gl_TessCoord.x) + (TANGENT[0u].w * gl_TessCoord.z)) + (TANGENT[2u].w * gl_TessCoord.y);
    TEXCOORD_1.x = _240;
    TEXCOORD_1.y = _241;
    TEXCOORD_1.z = _242;
    TEXCOORD_4.x = _470;
    TEXCOORD_4.y = _477;
    TEXCOORD_11_1 = ((TEXCOORD_11[1u] * gl_TessCoord.x) + (TEXCOORD_11[0u] * gl_TessCoord.z)) + (TEXCOORD_11[2u] * gl_TessCoord.y);
    gl_ClipDistance[0u] = dot(vec4(_456, _463, _470, _477), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_456, _463, _470, _477), vec4(0.0));
    gl_CullDistance[0u] = 0.0;
}


