#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Camouflage_test_Wep_01_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_Camouflage_test_Wep_01_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D C_Camouflage_test_Wep_01_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D C_Camouflage_test_Wep_01_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D C_Camouflage_test_Wep_01_snp_0_Texture2D_5;
layout(set = 0, binding = 45) uniform texture2D C_Camouflage_test_Wep_01_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1049;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _201 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _202 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _203 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _209 = inversesqrt(dot(vec3(_201, _202, _203), vec3(_201, _202, _203)));
    float _216 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _217 = _216 * NORMAL.x;
    float _218 = _216 * NORMAL.y;
    float _219 = _216 * NORMAL.z;
    float _223 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _231;
    float _232;
    float _233;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _231 = (-0.0) - _217;
        _232 = (-0.0) - _218;
        _233 = (-0.0) - _219;
    }
    else
    {
        _231 = _217;
        _232 = _218;
        _233 = _219;
    }
    float _278 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _288 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _278);
    float _289 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _278);
    float _290 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _278);
    vec4 _308 = texture(sampler2D(C_Camouflage_test_Wep_01_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[0u].w));
    float _314 = _308.w;
    float _315 = _308.x * cbMtdParam._m0[10u].x;
    float _316 = _308.y * cbMtdParam._m0[10u].y;
    float _317 = _308.z * cbMtdParam._m0[10u].z;
    vec4 _333 = texture(sampler2D(C_Camouflage_test_Wep_01_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[2u].w));
    float _336 = _333.x + cbMtdParam._m0[12u].w;
    vec4 _352 = texture(sampler2D(C_Camouflage_test_Wep_01_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[3u].w));
    float _360 = (_352.x * 2.0) + (-1.0);
    float _362 = (_352.y * 2.0) + (-1.0);
    float _363 = dot(vec2(_360, _362), vec2(_360, _362));
    float _3721 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _369 = sqrt(1.0 - (isnan(1.0) ? _3721 : (isnan(_3721) ? 1.0 : min(_3721, 1.0))));
    float _372 = fma(_369, _231, fma(_362, _223 * TANGENT.x, (_209 * _201) * _360));
    float _375 = fma(_369, _232, fma(_362, _223 * TANGENT.y, (_209 * _202) * _360));
    float _378 = fma(_369, _233, fma(_362, _223 * TANGENT.z, (_209 * _203) * _360));
    float _382 = inversesqrt(dot(vec3(_372, _375, _378), vec3(_372, _375, _378)));
    float _383 = _382 * _372;
    float _384 = _382 * _375;
    float _385 = _382 * _378;
    float _386 = _352.z + cbMtdParam._m0[13u].x;
    float _398 = inversesqrt(dot(vec3(_288, _289, _290), vec3(_288, _289, _290)));
    float _399 = _398 * _288;
    float _400 = _398 * _289;
    float _401 = _398 * _290;
    float _405 = dot(vec4(_399, _400, _401, 0.0), vec4(_383, _384, _385, 0.0)) - cbMtdParam._m0[13u].y;
    float _3732 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
    float _412 = exp2(log2(1.0 - (isnan(1.0) ? _3732 : (isnan(_3732) ? 1.0 : min(_3732, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[12u].z : (isnan(cbMtdParam._m0[12u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[12u].z, 0.001000000047497451305389404296875))));
    vec4 _442 = texture(sampler2D(C_Camouflage_test_Wep_01_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[1u].w));
    float _461 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _462 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _470 = (_461 / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[12u].y * _383);
    float _471 = (_462 / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[12u].y * _384);
    float _478 = isnan(cbInstanceData._m0[8u].x) ? _470 : (isnan(_470) ? cbInstanceData._m0[8u].x : max(_470, cbInstanceData._m0[8u].x));
    float _479 = isnan(cbInstanceData._m0[8u].y) ? _471 : (isnan(_471) ? cbInstanceData._m0[8u].y : max(_471, cbInstanceData._m0[8u].y));
    vec4 _483 = texture(sampler2D(C_Camouflage_test_Wep_01_snp_0_Texture2D_4, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _478 : (isnan(_478) ? cbInstanceData._m0[8u].z : min(_478, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _479 : (isnan(_479) ? cbInstanceData._m0[8u].w : min(_479, cbInstanceData._m0[8u].w))));
    vec4 _508 = texture(sampler2D(C_Camouflage_test_Wep_01_snp_0_Texture2D_5, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[4u].w));
    float _511 = _508.x + cbMtdParam._m0[12u].x;
    float _512 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    float _513 = isnan(1.0) ? _512 : (isnan(_512) ? 1.0 : min(_512, 1.0));
    float _517 = inversesqrt(dot(vec3(_383, _384, _385), vec3(_383, _384, _385)));
    float _518 = _517 * _383;
    float _519 = _517 * _384;
    float _520 = _517 * _385;
    float _3778 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
    float _521 = isnan(1.0) ? _3778 : (isnan(_3778) ? 1.0 : min(_3778, 1.0));
    float _3789 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
    float _522 = isnan(1.0) ? _3789 : (isnan(_3789) ? 1.0 : min(_3789, 1.0));
    float _3800 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    float _3811 = isnan(0.0) ? _316 : (isnan(_316) ? 0.0 : max(_316, 0.0));
    float _3822 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _3833 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
    float _526 = isnan(1.0) ? _3833 : (isnan(_3833) ? 1.0 : min(_3833, 1.0));
    float _542 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _544 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.z, TEXCOORD_4.w));
    float _546 = _544.w;
    float _567 = fma(_520, cbSceneParam._m0[5u].z, fma(_519, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _518));
    float _570 = fma(_520, cbSceneParam._m0[6u].z, fma(_519, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _518));
    float _573 = fma(_520, cbSceneParam._m0[7u].z, fma(_519, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _518));
    vec4 _575 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.z, TEXCOORD_4.w));
    float _586 = (((_575.y - _522) + (_575.w * _522)) * cbMtdParam._m0[3u].x) + _522;
    uint _599 = uint(roundEven(NORMAL.w)) * 13u;
    uint _600 = _599 + 9u;
    uint _601 = _600 + uint(cbMatDynParam._m0[0u].w);
    float _607 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3800 : (isnan(_3800) ? 1.0 : min(_3800, 1.0)))) * cbInstanceData._m0[_601].x;
    float _608 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3811 : (isnan(_3811) ? 1.0 : min(_3811, 1.0)))) * cbInstanceData._m0[_601].y;
    float _609 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3822 : (isnan(_3822) ? 1.0 : min(_3822, 1.0)))) * cbInstanceData._m0[_601].z;
    float _3844 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _610 = isnan(1.0) ? _3844 : (isnan(_3844) ? 1.0 : min(_3844, 1.0));
    float _3855 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _611 = isnan(1.0) ? _3855 : (isnan(_3855) ? 1.0 : min(_3855, 1.0));
    float _3866 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _612 = isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0));
    vec4 _613 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.z, TEXCOORD_4.w));
    vec4 _618 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.z, TEXCOORD_4.w));
    float _629 = (((_618.x - _526) + (_618.w * _526)) * cbMtdParam._m0[3u].x) + _526;
    float _642 = (cbMtdParam._m0[3u].x * (((_610 * _546) - _610) + _613.x)) + _610;
    float _643 = (cbMtdParam._m0[3u].x * (((_611 * _546) - _611) + _613.y)) + _611;
    float _644 = (cbMtdParam._m0[3u].x * (((_612 * _546) - _612) + _613.z)) + _612;
    float _645 = 1.0 - _629;
    float _646 = _645 * _642;
    float _647 = _645 * _643;
    float _648 = _645 * _644;
    float _653 = (_642 + (-0.039999999105930328369140625)) * _629;
    float _654 = (_643 + (-0.039999999105930328369140625)) * _629;
    float _655 = (_644 + (-0.039999999105930328369140625)) * _629;
    float _656 = _653 + 0.039999999105930328369140625;
    float _658 = _654 + 0.039999999105930328369140625;
    float _659 = _655 + 0.039999999105930328369140625;
    vec4 _667 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _461, cbSceneParam._m0[86u].y * _462));
    float _670 = _667.x * TEXCOORD_8;
    float _671 = dot(vec3(_518, _519, _520), vec3(_399, _400, _401));
    float _674 = _671 * 2.0;
    float _678 = (_674 * _518) - _399;
    float _679 = (_674 * _519) - _400;
    float _680 = (_674 * _520) - _401;
    float _684 = abs(dot(vec3(_399, _400, _401), vec3(_518, _519, _520)));
    float _3877 = isnan(0.0) ? _684 : (isnan(_684) ? 0.0 : max(_684, 0.0));
    float _685 = isnan(1.0) ? _3877 : (isnan(_3877) ? 1.0 : min(_3877, 1.0));
    float _691 = sqrt(_586);
    float _703 = exp2((_691 * 5.0) * log2(1.0 - (_685 * 0.999000012874603271484375))) / (4.0 - (_691 * 3.0));
    float _709 = (1.0 - _703) * ((_691 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _710 = _703 * _691;
    float _738 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _742 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _746 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1048;
    float _1050;
    float _1051;
    float _1052;
    float _1053;
    float _1054;
    float _1055;
    float _1056;
    float _1057;
    float _1058;
    float _1059;
    float _1060;
    float _1061;
    float _1062;
    float _1063;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _773 = fma(_746, cbModelParam._m0[26u].z, fma(_742, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _738));
        float _777 = fma(_746, cbModelParam._m0[27u].z, fma(_742, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _738));
        float _781 = fma(_746, cbModelParam._m0[28u].z, fma(_742, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _738));
        float _806 = _738 + _518;
        float _807 = _742 + _519;
        float _808 = _746 + _520;
        float _818 = fma(_808, cbModelParam._m0[26u].z, fma(_807, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _806)) - _773;
        float _819 = fma(_808, cbModelParam._m0[27u].z, fma(_807, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _806)) - _777;
        float _820 = fma(_808, cbModelParam._m0[28u].z, fma(_807, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _806)) - _781;
        float _824 = inversesqrt(dot(vec3(_818, _819, _820), vec3(_818, _819, _820)));
        float _837 = ((_824 * _818) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_773 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _838 = ((_824 * _819) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_777 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _839 = ((_824 * _820) / cbModelParam._m0[34u].z) + ((((((_781 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _842 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        vec4 _849 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        vec4 _856 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        vec4 _863 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        float _876 = exp2((_842.w + (-0.5)) * 20.0) * 2.0;
        float _877 = _876 * (_842.x + (-0.5));
        float _878 = _876 * (_842.y + (-0.5));
        float _879 = _876 * (_842.z + (-0.5));
        float _886 = exp2((_849.w + (-0.5)) * 20.0) * 2.0;
        float _887 = _886 * (_849.x + (-0.5));
        float _888 = _886 * (_849.y + (-0.5));
        float _889 = _886 * (_849.z + (-0.5));
        float _896 = exp2((_856.w + (-0.5)) * 20.0) * 2.0;
        float _897 = _896 * (_856.x + (-0.5));
        float _898 = _896 * (_856.y + (-0.5));
        float _899 = _896 * (_856.z + (-0.5));
        float _906 = exp2((_863.w + (-0.5)) * 20.0) * 2.0;
        float _907 = _906 * (_863.x + (-0.5));
        float _908 = _906 * (_863.y + (-0.5));
        float _909 = _906 * (_863.z + (-0.5));
        float _910 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
        float _911 = isnan(0.0) ? _908 : (isnan(_908) ? 0.0 : max(_908, 0.0));
        float _912 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
        float _913 = _877 * 0.5;
        float _914 = _887 * 0.5;
        float _915 = _897 * 0.5;
        float _916 = dot(vec3(_913, _914, _915), vec3(_913, _914, _915));
        float _921 = (_916 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_916);
        float _930 = (dot(vec3(_518, _519, _520), vec3(_921 * _913, _921 * _914, _921 * _915)) + 1.0) * 0.5;
        float _3903 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
        float _940 = sqrt(((_914 * _914) + (_913 * _913)) + (_915 * _915)) / (_910 + 9.9999997473787516355514526367188e-06);
        float _3914 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
        float _941 = isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0));
        float _942 = _941 * 2.0;
        float _946 = (1.0 - _941) / (_941 + 1.0);
        float _3925 = isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0));
        float _947 = isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0));
        float _956 = ((((1.0 - _947) * (_942 + 2.0)) * exp2(log2(isnan(1.0) ? _3903 : (isnan(_3903) ? 1.0 : min(_3903, 1.0))) * (_942 + 1.0))) + _947) * _910;
        float _957 = _878 * 0.5;
        float _958 = _888 * 0.5;
        float _959 = _898 * 0.5;
        float _960 = dot(vec3(_957, _958, _959), vec3(_957, _958, _959));
        float _965 = (_960 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_960);
        float _973 = (dot(vec3(_518, _519, _520), vec3(_965 * _957, _965 * _958, _965 * _959)) + 1.0) * 0.5;
        float _3936 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
        float _982 = sqrt(((_958 * _958) + (_957 * _957)) + (_959 * _959)) / (_911 + 9.9999997473787516355514526367188e-06);
        float _3947 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
        float _983 = isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0));
        float _984 = _983 * 2.0;
        float _988 = (1.0 - _983) / (_983 + 1.0);
        float _3958 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
        float _989 = isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0));
        float _998 = ((((1.0 - _989) * (_984 + 2.0)) * exp2(log2(isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0))) * (_984 + 1.0))) + _989) * _911;
        float _999 = _879 * 0.5;
        float _1000 = _889 * 0.5;
        float _1001 = _899 * 0.5;
        float _1002 = dot(vec3(_999, _1000, _1001), vec3(_999, _1000, _1001));
        float _1007 = (_1002 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1002);
        float _1015 = (dot(vec3(_518, _519, _520), vec3(_1007 * _999, _1007 * _1000, _1007 * _1001)) + 1.0) * 0.5;
        float _3969 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
        float _1024 = sqrt(((_1000 * _1000) + (_999 * _999)) + (_1001 * _1001)) / (_912 + 9.9999997473787516355514526367188e-06);
        float _3980 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
        float _1025 = isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0));
        float _1026 = _1025 * 2.0;
        float _1030 = (1.0 - _1025) / (_1025 + 1.0);
        float _3991 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
        float _1031 = isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0));
        float _1040 = ((((1.0 - _1031) * (_1026 + 2.0)) * exp2(log2(isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0))) * (_1026 + 1.0))) + _1031) * _912;
        _1048 = _879;
        _1050 = _878;
        _1051 = _877;
        _1052 = _889;
        _1053 = _888;
        _1054 = _887;
        _1055 = _899;
        _1056 = _898;
        _1057 = _897;
        _1058 = _912;
        _1059 = _911;
        _1060 = _910;
        _1061 = cbModelParam._m0[36u].z * (isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0)));
        _1062 = cbModelParam._m0[36u].z * (isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0)));
        _1063 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0)));
    }
    else
    {
        _1048 = _1049;
        _1050 = _1049;
        _1051 = _1049;
        _1052 = _1049;
        _1053 = _1049;
        _1054 = _1049;
        _1055 = _1049;
        _1056 = _1049;
        _1057 = _1049;
        _1058 = _1049;
        _1059 = _1049;
        _1060 = _1049;
        _1061 = 0.0;
        _1062 = 0.0;
        _1063 = 0.0;
    }
    float _1358;
    float _1359;
    float _1360;
    float _1361;
    float _1362;
    float _1363;
    float _1364;
    float _1365;
    float _1366;
    float _1367;
    float _1368;
    float _1369;
    float _1370;
    float _1371;
    float _1372;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1089 = fma(_746, cbModelParam._m0[30u].z, fma(_742, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _738));
        float _1093 = fma(_746, cbModelParam._m0[31u].z, fma(_742, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _738));
        float _1097 = fma(_746, cbModelParam._m0[32u].z, fma(_742, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _738));
        float _1120 = _738 + _518;
        float _1121 = _742 + _519;
        float _1122 = _746 + _520;
        float _1132 = fma(_1122, cbModelParam._m0[30u].z, fma(_1121, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1120)) - _1089;
        float _1133 = fma(_1122, cbModelParam._m0[31u].z, fma(_1121, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1120)) - _1093;
        float _1134 = fma(_1122, cbModelParam._m0[32u].z, fma(_1121, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1120)) - _1097;
        float _1138 = inversesqrt(dot(vec3(_1132, _1133, _1134), vec3(_1132, _1133, _1134)));
        float _1151 = ((_1138 * _1132) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1089 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1152 = ((_1138 * _1133) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1093 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1153 = ((_1138 * _1134) / cbModelParam._m0[35u].z) + ((((((_1097 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1155 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1151, _1152, _1153), 0.0);
        vec4 _1162 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1151, _1152, _1153), 0.0);
        vec4 _1169 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1151, _1152, _1153), 0.0);
        vec4 _1176 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1151, _1152, _1153), 0.0);
        float _1188 = exp2((_1155.w + (-0.5)) * 20.0) * 2.0;
        float _1189 = _1188 * (_1155.x + (-0.5));
        float _1190 = _1188 * (_1155.y + (-0.5));
        float _1191 = _1188 * (_1155.z + (-0.5));
        float _1198 = exp2((_1162.w + (-0.5)) * 20.0) * 2.0;
        float _1199 = _1198 * (_1162.x + (-0.5));
        float _1200 = _1198 * (_1162.y + (-0.5));
        float _1201 = _1198 * (_1162.z + (-0.5));
        float _1208 = exp2((_1169.w + (-0.5)) * 20.0) * 2.0;
        float _1209 = _1208 * (_1169.x + (-0.5));
        float _1210 = _1208 * (_1169.y + (-0.5));
        float _1211 = _1208 * (_1169.z + (-0.5));
        float _1218 = exp2((_1176.w + (-0.5)) * 20.0) * 2.0;
        float _1219 = _1218 * (_1176.x + (-0.5));
        float _1220 = _1218 * (_1176.y + (-0.5));
        float _1221 = _1218 * (_1176.z + (-0.5));
        float _1222 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
        float _1223 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
        float _1224 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1225 = _1189 * 0.5;
        float _1226 = _1199 * 0.5;
        float _1227 = _1209 * 0.5;
        float _1228 = dot(vec3(_1225, _1226, _1227), vec3(_1225, _1226, _1227));
        float _1233 = (_1228 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1228);
        float _1241 = (dot(vec3(_518, _519, _520), vec3(_1233 * _1225, _1233 * _1226, _1233 * _1227)) + 1.0) * 0.5;
        float _4032 = isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0));
        float _1250 = sqrt(((_1226 * _1226) + (_1225 * _1225)) + (_1227 * _1227)) / (_1222 + 9.9999997473787516355514526367188e-06);
        float _4043 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1251 = isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0));
        float _1252 = _1251 * 2.0;
        float _1256 = (1.0 - _1251) / (_1251 + 1.0);
        float _4054 = isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0));
        float _1257 = isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0));
        float _1266 = ((((1.0 - _1257) * (_1252 + 2.0)) * exp2(log2(isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0))) * (_1252 + 1.0))) + _1257) * _1222;
        float _1267 = _1190 * 0.5;
        float _1268 = _1200 * 0.5;
        float _1269 = _1210 * 0.5;
        float _1270 = dot(vec3(_1267, _1268, _1269), vec3(_1267, _1268, _1269));
        float _1275 = (_1270 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1270);
        float _1283 = (dot(vec3(_518, _519, _520), vec3(_1275 * _1267, _1275 * _1268, _1275 * _1269)) + 1.0) * 0.5;
        float _4065 = isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0));
        float _1292 = sqrt(((_1268 * _1268) + (_1267 * _1267)) + (_1269 * _1269)) / (_1223 + 9.9999997473787516355514526367188e-06);
        float _4076 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
        float _1293 = isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0));
        float _1294 = _1293 * 2.0;
        float _1298 = (1.0 - _1293) / (_1293 + 1.0);
        float _4087 = isnan(0.0) ? _1298 : (isnan(_1298) ? 0.0 : max(_1298, 0.0));
        float _1299 = isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0));
        float _1308 = ((((1.0 - _1299) * (_1294 + 2.0)) * exp2(log2(isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0))) * (_1294 + 1.0))) + _1299) * _1223;
        float _1309 = _1191 * 0.5;
        float _1310 = _1201 * 0.5;
        float _1311 = _1211 * 0.5;
        float _1312 = dot(vec3(_1309, _1310, _1311), vec3(_1309, _1310, _1311));
        float _1317 = (_1312 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1312);
        float _1325 = (dot(vec3(_518, _519, _520), vec3(_1317 * _1309, _1317 * _1310, _1317 * _1311)) + 1.0) * 0.5;
        float _4098 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1334 = sqrt(((_1310 * _1310) + (_1309 * _1309)) + (_1311 * _1311)) / (_1224 + 9.9999997473787516355514526367188e-06);
        float _4109 = isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0));
        float _1335 = isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0));
        float _1336 = _1335 * 2.0;
        float _1340 = (1.0 - _1335) / (_1335 + 1.0);
        float _4120 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
        float _1341 = isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0));
        float _1350 = ((((1.0 - _1341) * (_1336 + 2.0)) * exp2(log2(isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0))) * (_1336 + 1.0))) + _1341) * _1224;
        _1358 = _1191;
        _1359 = _1190;
        _1360 = _1189;
        _1361 = _1201;
        _1362 = _1200;
        _1363 = _1199;
        _1364 = _1211;
        _1365 = _1210;
        _1366 = _1209;
        _1367 = _1224;
        _1368 = _1223;
        _1369 = _1222;
        _1370 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0)));
        _1371 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1308 : (isnan(_1308) ? 0.0 : max(_1308, 0.0)));
        _1372 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0)));
    }
    else
    {
        _1358 = _1049;
        _1359 = _1049;
        _1360 = _1049;
        _1361 = _1049;
        _1362 = _1049;
        _1363 = _1049;
        _1364 = _1049;
        _1365 = _1049;
        _1366 = _1049;
        _1367 = _1049;
        _1368 = _1049;
        _1369 = _1049;
        _1370 = 0.0;
        _1371 = 0.0;
        _1372 = 0.0;
    }
    float _1382 = (cbModelParam._m0[1u].x * (_1370 - _1061)) + _1061;
    float _1383 = (cbModelParam._m0[1u].x * (_1371 - _1062)) + _1062;
    float _1384 = (cbModelParam._m0[1u].x * (_1372 - _1063)) + _1063;
    float _1405 = fma(_1384, cbSceneParam._m0[89u].z, fma(_1383, cbSceneParam._m0[89u].y, _1382 * cbSceneParam._m0[89u].x));
    float _1408 = fma(_1384, cbSceneParam._m0[90u].z, fma(_1383, cbSceneParam._m0[90u].y, _1382 * cbSceneParam._m0[90u].x));
    float _1411 = fma(_1384, cbSceneParam._m0[91u].z, fma(_1383, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1382));
    float _1426 = _678 * 0.5;
    float _1427 = _679 * 0.5;
    float _1428 = _680 * 0.5;
    float _1429 = dot(vec4(_1426, _1427, _1428, 1.0), vec4(_1360, _1363, _1366, _1369));
    float _1432 = dot(vec4(_1426, _1427, _1428, 1.0), vec4(_1359, _1362, _1365, _1368));
    float _1435 = dot(vec4(_1426, _1427, _1428, 1.0), vec4(_1358, _1361, _1364, _1367));
    float _1469;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1442 = dot(vec4(_1426, _1427, _1428, 1.0), vec4(_1048, _1052, _1055, _1058));
        float _1446 = dot(vec4(_1426, _1427, _1428, 1.0), vec4(_1050, _1053, _1056, _1059));
        float _1450 = dot(vec4(_1426, _1427, _1428, 1.0), vec4(_1051, _1054, _1057, _1060));
        float _1457 = dot(vec4(cbModelParam._m0[39u]), vec4(_1426, _1427, _1428, 1.0));
        _1469 = dot(vec3(isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0)), isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0)), isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1457) ? 0.0 : (isnan(0.0) ? _1457 : max(0.0, _1457))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1469 = 1.0;
    }
    float _1480;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1471 = dot(vec4(cbModelParam._m0[40u]), vec4(_1426, _1427, _1428, 1.0));
        _1480 = dot(vec3(isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0)), isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0)), isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1471) ? 0.0 : (isnan(0.0) ? _1471 : max(0.0, _1471))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1480 = 1.0;
    }
    float _1484 = (_1480 * cbModelParam._m0[1u].x) + (_1469 * (1.0 - cbModelParam._m0[1u].x));
    float _1494 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _586);
    float _1495 = isnan(_1494) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1494 : min(cbModelParam._m0[25u].z, _1494));
    float _1576;
    float _1578;
    float _1580;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1543 = fma(_746, cbModelParam._m0[13u].z, fma(_742, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _738)) + cbModelParam._m0[13u].w;
        float _1547 = fma(_746, cbModelParam._m0[14u].z, fma(_742, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _738)) + cbModelParam._m0[14u].w;
        float _1551 = fma(_746, cbModelParam._m0[15u].z, fma(_742, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _738)) + cbModelParam._m0[15u].w;
        float _1554 = fma(_680, cbModelParam._m0[13u].z, fma(_679, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _678));
        float _1557 = fma(_680, cbModelParam._m0[14u].z, fma(_679, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _678));
        float _1560 = fma(_680, cbModelParam._m0[15u].z, fma(_679, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _678));
        float _1588;
        if (_1554 > 0.0)
        {
            _1588 = abs((1.0 - _1543) / _1554);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1554 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1543 + 1.0) / _1554);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1588 = frontier_phi_16_14_ladder;
        }
        float _1763;
        if (_1557 > 0.0)
        {
            _1763 = abs((1.0 - _1547) / _1557);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1557 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1547 + 1.0) / _1557);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1763 = frontier_phi_25_21_ladder;
        }
        float _2058;
        if (_1560 > 0.0)
        {
            _2058 = abs((1.0 - _1551) / _1560);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1560 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1551 + 1.0) / _1560);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2058 = frontier_phi_37_32_ladder;
        }
        float _2060 = isnan(_1763) ? _1588 : (isnan(_1588) ? _1763 : min(_1588, _1763));
        float _2061 = isnan(_2058) ? _2060 : (isnan(_2060) ? _2058 : min(_2060, _2058));
        float _2065 = (_2061 * _1554) + _1543;
        float _2066 = (_2061 * _1557) + _1547;
        float _2067 = (_2061 * _1560) + _1551;
        float _2068 = _2061 * 9.9999997473787516355514526367188e-05;
        float _2070 = (-1.0) - _2068;
        float _2072 = _2068 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2067 > _2072) || ((_2067 < _2070) || ((_2066 > _2072) || ((_2066 < _2070) || ((_2065 < _2070) || (_2065 > _2072))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2212 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2067, cbModelParam._m0[9u].z, fma(_2066, cbModelParam._m0[9u].y, _2065 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2067, cbModelParam._m0[10u].z, fma(_2066, cbModelParam._m0[10u].y, _2065 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2067, cbModelParam._m0[11u].z, fma(_2066, cbModelParam._m0[11u].y, _2065 * cbModelParam._m0[11u].x))), _1495);
            frontier_phi_15_37_ladder = _2212.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2212.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2212.z * cbModelParam._m0[1u].y;
        }
        _1576 = frontier_phi_15_37_ladder_1;
        _1578 = frontier_phi_15_37_ladder;
        _1580 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1564 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_678, _679, _680), _1495);
        _1576 = _1564.x * cbModelParam._m0[1u].y;
        _1578 = _1564.y * cbModelParam._m0[1u].y;
        _1580 = _1564.z * cbModelParam._m0[1u].y;
    }
    float _1584 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _586);
    float _1585 = isnan(_1584) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1584 : min(cbModelParam._m0[25u].w, _1584));
    float _1678;
    float _1680;
    float _1682;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1642 = fma(_746, cbModelParam._m0[21u].z, fma(_742, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _738)) + cbModelParam._m0[21u].w;
        float _1646 = fma(_746, cbModelParam._m0[22u].z, fma(_742, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _738)) + cbModelParam._m0[22u].w;
        float _1650 = fma(_746, cbModelParam._m0[23u].z, fma(_742, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _738)) + cbModelParam._m0[23u].w;
        float _1653 = fma(_680, cbModelParam._m0[21u].z, fma(_679, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _678));
        float _1656 = fma(_680, cbModelParam._m0[22u].z, fma(_679, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _678));
        float _1659 = fma(_680, cbModelParam._m0[23u].z, fma(_679, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _678));
        float _1768;
        if (_1653 > 0.0)
        {
            _1768 = abs((1.0 - _1642) / _1653);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1653 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1642 + 1.0) / _1653);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1768 = frontier_phi_27_23_ladder;
        }
        float _2085;
        if (_1656 > 0.0)
        {
            _2085 = abs((1.0 - _1646) / _1656);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1656 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1646 + 1.0) / _1656);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2085 = frontier_phi_39_34_ladder;
        }
        float _2423;
        if (_1659 > 0.0)
        {
            _2423 = abs((1.0 - _1650) / _1659);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1659 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1650 + 1.0) / _1659);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2423 = frontier_phi_49_46_ladder;
        }
        float _2425 = isnan(_2085) ? _1768 : (isnan(_1768) ? _2085 : min(_1768, _2085));
        float _2426 = isnan(_2423) ? _2425 : (isnan(_2425) ? _2423 : min(_2425, _2423));
        float _2430 = (_2426 * _1653) + _1642;
        float _2431 = (_2426 * _1656) + _1646;
        float _2432 = (_2426 * _1659) + _1650;
        float _2433 = _2426 * 9.9999997473787516355514526367188e-05;
        float _2434 = (-1.0) - _2433;
        float _2436 = _2433 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2432 > _2436) || ((_2432 < _2434) || ((_2431 > _2436) || ((_2431 < _2434) || ((_2430 < _2434) || (_2430 > _2436))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2554 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2432, cbModelParam._m0[17u].z, fma(_2431, cbModelParam._m0[17u].y, _2430 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2432, cbModelParam._m0[18u].z, fma(_2431, cbModelParam._m0[18u].y, _2430 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2432, cbModelParam._m0[19u].z, fma(_2431, cbModelParam._m0[19u].y, _2430 * cbModelParam._m0[19u].x))), _1585);
            frontier_phi_24_49_ladder = _2554.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2554.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2554.x * cbModelParam._m0[1u].z;
        }
        _1678 = frontier_phi_24_49_ladder_2;
        _1680 = frontier_phi_24_49_ladder_1;
        _1682 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1662 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_678, _679, _680), _1585);
        _1678 = _1662.x * cbModelParam._m0[1u].z;
        _1680 = _1662.y * cbModelParam._m0[1u].z;
        _1682 = _1662.z * cbModelParam._m0[1u].z;
    }
    float _1695 = (((_709 * _656) + _710) * _670) * ((cbModelParam._m0[1u].w * (_1678 - _1576)) + _1576);
    float _1697 = (((_709 * _658) + _710) * _670) * ((cbModelParam._m0[1u].w * (_1680 - _1578)) + _1578);
    float _1699 = (((_709 * _659) + _710) * _670) * ((cbModelParam._m0[1u].w * (_1682 - _1580)) + _1580);
    float _1702 = fma(_1699, cbSceneParam._m0[89u].z, fma(_1697, cbSceneParam._m0[89u].y, _1695 * cbSceneParam._m0[89u].x));
    float _1705 = fma(_1699, cbSceneParam._m0[90u].z, fma(_1697, cbSceneParam._m0[90u].y, _1695 * cbSceneParam._m0[90u].x));
    float _1708 = fma(_1699, cbSceneParam._m0[91u].z, fma(_1697, cbSceneParam._m0[91u].y, _1695 * cbSceneParam._m0[91u].x));
    float _1742 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1746 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1750 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1754 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1755 = _1742 / _1754;
    float _1756 = _1746 / _1754;
    float _1757 = _1750 / _1754;
    float _1904;
    float _1905;
    float _1906;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1784 = ((uint(_1757 > cbSceneParam._m0[59u].y) + uint(_1757 > cbSceneParam._m0[59u].x)) + uint(_1757 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1785 = _1784 + 43u;
        uint _1793 = _1784 + 44u;
        uint _1801 = _1784 + 45u;
        uint _1809 = _1784 + 46u;
        float _1820 = fma(_1754, cbSceneParam._m0[_1785].w, fma(_1750, cbSceneParam._m0[_1785].z, fma(_1746, cbSceneParam._m0[_1785].y, _1742 * cbSceneParam._m0[_1785].x)));
        float _1824 = fma(_1754, cbSceneParam._m0[_1793].w, fma(_1750, cbSceneParam._m0[_1793].z, fma(_1746, cbSceneParam._m0[_1793].y, _1742 * cbSceneParam._m0[_1793].x)));
        float _1832 = fma(_1754, cbSceneParam._m0[_1809].w, fma(_1750, cbSceneParam._m0[_1809].z, fma(_1746, cbSceneParam._m0[_1809].y, _1742 * cbSceneParam._m0[_1809].x)));
        float _1837 = cbSceneParam._m0[33u].z * _1832;
        float _1839 = cbSceneParam._m0[33u].w * _1832;
        float _1842 = fma(_1754, cbSceneParam._m0[_1801].w, fma(_1750, cbSceneParam._m0[_1801].z, fma(_1746, cbSceneParam._m0[_1801].y, _1742 * cbSceneParam._m0[_1801].x))) / _1832;
        float _1890 = (cbSceneParam._m0[33u].x - sqrt(((_1756 * _1756) + (_1755 * _1755)) + (_1757 * _1757))) * cbSceneParam._m0[33u].y;
        float _4246 = isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0));
        float _1897 = (isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1837 + _1820) / _1832, (_1839 + _1824) / _1832), _1842), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1839 + _1820) / _1832, (_1824 - _1837) / _1832), _1842), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1820 - _1837) / _1832, (_1824 - _1839) / _1832), _1842), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1820 - _1839) / _1832, (_1837 + _1824) / _1832), _1842), 0.0)).x), vec4(0.25)));
        _1904 = 1.0 - (_1897 * cbSceneParam._m0[34u].x);
        _1905 = 1.0 - (_1897 * cbSceneParam._m0[34u].y);
        _1906 = 1.0 - (_1897 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1904 = 1.0;
        _1905 = 1.0;
        _1906 = 1.0;
    }
    float _1970;
    float _1972;
    float _1974;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1958 = fma(_1754, cbSceneParam._m0[63u].w, fma(_1750, cbSceneParam._m0[63u].z, fma(_1746, cbSceneParam._m0[63u].y, _1742 * cbSceneParam._m0[63u].x)));
        float _1959 = fma(_1754, cbSceneParam._m0[60u].w, fma(_1750, cbSceneParam._m0[60u].z, fma(_1746, cbSceneParam._m0[60u].y, _1742 * cbSceneParam._m0[60u].x))) / _1958;
        float _1960 = fma(_1754, cbSceneParam._m0[61u].w, fma(_1750, cbSceneParam._m0[61u].z, fma(_1746, cbSceneParam._m0[61u].y, _1742 * cbSceneParam._m0[61u].x))) / _1958;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1959 >= cbSceneParam._m0[64u].x) && (_1960 >= cbSceneParam._m0[64u].y)) && (_1959 <= cbSceneParam._m0[64u].z)) && (_1960 <= cbSceneParam._m0[64u].w))
        {
            float _2098 = fma(_1754, cbSceneParam._m0[62u].w, fma(_1750, cbSceneParam._m0[62u].z, fma(_1746, cbSceneParam._m0[62u].y, _1742 * cbSceneParam._m0[62u].x))) / _1958;
            float _2102 = isnan(cbSceneParam._m0[41u].w) ? _2098 : (isnan(_2098) ? cbSceneParam._m0[41u].w : max(_2098, cbSceneParam._m0[41u].w));
            float _2145 = (cbSceneParam._m0[33u].x - sqrt(((_1756 * _1756) + (_1755 * _1755)) + (_1757 * _1757))) * cbSceneParam._m0[33u].y;
            float _4262 = isnan(0.0) ? _2145 : (isnan(_2145) ? 0.0 : max(_2145, 0.0));
            float _2152 = (isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1959, cbSceneParam._m0[33u].w + _1960), _2102), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1959, _1960 - cbSceneParam._m0[33u].z), _2102), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1959 - cbSceneParam._m0[33u].z, _1960 - cbSceneParam._m0[33u].w), _2102), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1959 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1960), _2102), 0.0)).x), vec4(0.25)));
            float _2156 = 1.0 - (_2152 * cbSceneParam._m0[34u].x);
            float _2157 = 1.0 - (_2152 * cbSceneParam._m0[34u].y);
            float _2158 = 1.0 - (_2152 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2157) ? _1905 : (isnan(_1905) ? _2157 : min(_1905, _2157));
            frontier_phi_36_35_ladder_1 = isnan(_2158) ? _1906 : (isnan(_1906) ? _2158 : min(_1906, _2158));
            frontier_phi_36_35_ladder_2 = isnan(_2156) ? _1904 : (isnan(_1904) ? _2156 : min(_1904, _2156));
        }
        else
        {
            frontier_phi_36_35_ladder = _1905;
            frontier_phi_36_35_ladder_1 = _1906;
            frontier_phi_36_35_ladder_2 = _1904;
        }
        _1970 = frontier_phi_36_35_ladder_2;
        _1972 = frontier_phi_36_35_ladder;
        _1974 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _1970 = _1904;
        _1972 = _1905;
        _1974 = _1906;
    }
    uvec4 _1979 = floatBitsToUint(cbInstanceData._m0[_599 + 5u]);
    uint _1981 = _1979.x * 14u;
    uint _1982 = _1981 + 13u;
    float _1989 = _670 + (-1.0);
    float _1994 = (cbLight._m0[_1982].x * _1989) + 1.0;
    float _1995 = (cbLight._m0[_1982].y * _1989) + 1.0;
    float _1996 = (cbLight._m0[_1982].z * _1989) + 1.0;
    float _1997 = (cbLight._m0[_1982].w * _1989) + 1.0;
    uint _1998 = _1981 + 5u;
    float _2004 = isnan(1.0) ? _1995 : (isnan(_1995) ? 1.0 : min(_1995, 1.0));
    uint _2008 = _1981 + 4u;
    float _2017 = isnan(1.0) ? _1994 : (isnan(_1994) ? 1.0 : min(_1994, 1.0));
    uint _2021 = _1981 | 1u;
    float _2032 = dot(vec3(cbLight._m0[_1981].xyz), vec3(_518, _519, _520));
    float _2035 = dot(vec3(cbLight._m0[_2021].xyz), vec3(_518, _519, _520));
    float _4298 = isnan(0.0) ? _2032 : (isnan(_2032) ? 0.0 : max(_2032, 0.0));
    float _4309 = isnan(0.0) ? _2035 : (isnan(_2035) ? 0.0 : max(_2035, 0.0));
    float _2040 = (isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0))) * 0.3183098733425140380859375;
    float _2042 = (isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0))) * 0.3183098733425140380859375;
    float _2049 = ((cbLight._m0[_1998].x * _2004) * _2042) + (((cbLight._m0[_2008].x * _1970) * _2017) * _2040);
    float _2050 = ((_2004 * cbLight._m0[_1998].y) * _2042) + (((cbLight._m0[_2008].y * _1972) * _2017) * _2040);
    float _2051 = ((_2004 * cbLight._m0[_1998].z) * _2042) + (((cbLight._m0[_2008].z * _1974) * _2017) * _2040);
    uvec4 _2055 = floatBitsToUint(cbLight._m0[_1981 + 12u]);
    bool _2057 = _2055.x == 0u;
    float _2159;
    float _2161;
    float _2163;
    if (_2057)
    {
        _2159 = _2049;
        _2161 = _2050;
        _2163 = _2051;
    }
    else
    {
        uint _2167 = _1981 + 6u;
        float _2183 = (dot(vec3(cbLight._m0[_1981 + 2u].xyz), vec3(_518, _519, _520)) * 0.5) + 0.5;
        float _2184 = _2183 * _2183;
        float _4320 = isnan(0.0) ? _2184 : (isnan(_2184) ? 0.0 : max(_2184, 0.0));
        float _2185 = isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0));
        float _2186 = isnan(1.0) ? _1996 : (isnan(_1996) ? 1.0 : min(_1996, 1.0));
        _2159 = (((cbLight._m0[_2167].x * 0.3183098733425140380859375) * _2185) * _2186) + _2049;
        _2161 = (((cbLight._m0[_2167].y * 0.3183098733425140380859375) * _2185) * _2186) + _2050;
        _2163 = (((cbLight._m0[_2167].z * 0.3183098733425140380859375) * _2185) * _2186) + _2051;
    }
    bool _2166 = _2055.y == 0u;
    float _2221;
    float _2223;
    float _2225;
    if (_2166)
    {
        _2221 = _2159;
        _2223 = _2161;
        _2225 = _2163;
    }
    else
    {
        uint _2394 = _1981 + 7u;
        float _2410 = (dot(vec3(cbLight._m0[_1981 + 3u].xyz), vec3(_518, _519, _520)) * 0.5) + 0.5;
        float _2411 = _2410 * _2410;
        float _4336 = isnan(0.0) ? _2411 : (isnan(_2411) ? 0.0 : max(_2411, 0.0));
        float _2412 = isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0));
        float _2413 = isnan(1.0) ? _1997 : (isnan(_1997) ? 1.0 : min(_1997, 1.0));
        _2221 = (((cbLight._m0[_2394].x * 0.3183098733425140380859375) * _2412) * _2413) + _2159;
        _2223 = (((cbLight._m0[_2394].y * 0.3183098733425140380859375) * _2412) * _2413) + _2161;
        _2225 = (((cbLight._m0[_2394].z * 0.3183098733425140380859375) * _2412) * _2413) + _2163;
    }
    uint _2228 = _1981 + 8u;
    float _2241 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1981].w)) * _586) * 0.949999988079071044921875);
    float _2242 = _2241 * _2241;
    float _2243 = cbLight._m0[_1981].x + _399;
    float _2244 = cbLight._m0[_1981].y + _400;
    float _2245 = cbLight._m0[_1981].z + _401;
    float _2249 = inversesqrt(dot(vec3(_2243, _2244, _2245), vec3(_2243, _2244, _2245)));
    float _2250 = _2249 * _2243;
    float _2251 = _2249 * _2244;
    float _2252 = _2249 * _2245;
    float _2253 = dot(vec3(_518, _519, _520), vec3(cbLight._m0[_1981].xyz));
    float _4352 = isnan(0.0) ? _2253 : (isnan(_2253) ? 0.0 : max(_2253, 0.0));
    float _2256 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
    float _4363 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
    float _2257 = isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0));
    float _2258 = dot(vec3(_518, _519, _520), vec3(_2250, _2251, _2252));
    float _4374 = isnan(0.0) ? _2258 : (isnan(_2258) ? 0.0 : max(_2258, 0.0));
    float _2261 = isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0));
    float _2262 = dot(vec3(cbLight._m0[_1981].xyz), vec3(_2250, _2251, _2252));
    float _4385 = isnan(0.0) ? _2262 : (isnan(_2262) ? 0.0 : max(_2262, 0.0));
    float _2266 = _2242 * _2242;
    float _2270 = ((_2261 * _2261) * (_2266 + (-1.0))) + 1.0;
    float _2278 = exp2(log2(1.0 - (isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0)))) * 5.0);
    float _2279 = 0.959999978542327880859375 - _653;
    float _2281 = 0.959999978542327880859375 - _654;
    float _2282 = 0.959999978542327880859375 - _655;
    float _2289 = 1.0 - _2242;
    float _2300 = (0.5 / (((_2257 * ((_2256 * _2289) + _2242)) + 9.9999999392252902907785028219223e-09) + (((_2257 * _2289) + _2242) * _2256))) * _2256;
    float _4396 = isnan(0.0) ? _2300 : (isnan(_2300) ? 0.0 : max(_2300, 0.0));
    float _2302 = (isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0))) * (_2266 / ((_2270 * _2270) * 3.141590118408203125));
    uint _2316 = _1981 + 9u;
    float _2327 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2021].w)) * _586) * 0.949999988079071044921875);
    float _2328 = _2327 * _2327;
    float _2329 = cbLight._m0[_2021].x + _399;
    float _2330 = cbLight._m0[_2021].y + _400;
    float _2331 = cbLight._m0[_2021].z + _401;
    float _2335 = inversesqrt(dot(vec3(_2329, _2330, _2331), vec3(_2329, _2330, _2331)));
    float _2336 = _2335 * _2329;
    float _2337 = _2335 * _2330;
    float _2338 = _2335 * _2331;
    float _2339 = dot(vec3(_518, _519, _520), vec3(cbLight._m0[_2021].xyz));
    float _4407 = isnan(0.0) ? _2339 : (isnan(_2339) ? 0.0 : max(_2339, 0.0));
    float _2342 = isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0));
    float _2343 = dot(vec3(_518, _519, _520), vec3(_2336, _2337, _2338));
    float _4418 = isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0));
    float _2346 = isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0));
    float _2347 = dot(vec3(cbLight._m0[_2021].xyz), vec3(_2336, _2337, _2338));
    float _4429 = isnan(0.0) ? _2347 : (isnan(_2347) ? 0.0 : max(_2347, 0.0));
    float _2351 = _2328 * _2328;
    float _2355 = ((_2346 * _2346) * (_2351 + (-1.0))) + 1.0;
    float _2362 = exp2(log2(1.0 - (isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0)))) * 5.0);
    float _2369 = 1.0 - _2328;
    float _2379 = (0.5 / (((_2257 * ((_2342 * _2369) + _2328)) + 9.9999999392252902907785028219223e-09) + (((_2257 * _2369) + _2328) * _2342))) * _2342;
    float _4440 = isnan(0.0) ? _2379 : (isnan(_2379) ? 0.0 : max(_2379, 0.0));
    float _2381 = (isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0))) * (_2351 / ((_2355 * _2355) * 3.141590118408203125));
    float _2391 = (((((_2362 * _2279) + _656) * cbLight._m0[_2316].x) * _2381) * _2004) + ((((cbLight._m0[_2228].x * _1970) * ((_2278 * _2279) + _656)) * _2302) * _2017);
    float _2392 = (((((_2362 * _2281) + _658) * cbLight._m0[_2316].y) * _2381) * _2004) + ((((cbLight._m0[_2228].y * _1972) * ((_2278 * _2281) + _658)) * _2302) * _2017);
    float _2393 = (((((_2362 * _2282) + _659) * cbLight._m0[_2316].z) * _2381) * _2004) + ((((cbLight._m0[_2228].z * _1974) * ((_2278 * _2282) + _659)) * _2302) * _2017);
    float _2449;
    float _2451;
    float _2453;
    if (_2057)
    {
        _2449 = _2391;
        _2451 = _2392;
        _2453 = _2393;
    }
    else
    {
        uint _2455 = _1981 + 2u;
        uint _2459 = _1981 + 10u;
        float _2473 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2455].w)) * _586) * 0.949999988079071044921875);
        float _2474 = _2473 * _2473;
        float _2475 = cbLight._m0[_2455].x + _399;
        float _2476 = cbLight._m0[_2455].y + _400;
        float _2477 = cbLight._m0[_2455].z + _401;
        float _2481 = inversesqrt(dot(vec3(_2475, _2476, _2477), vec3(_2475, _2476, _2477)));
        float _2482 = _2481 * _2475;
        float _2483 = _2481 * _2476;
        float _2484 = _2481 * _2477;
        float _2485 = dot(vec3(_518, _519, _520), vec3(cbLight._m0[_2455].xyz));
        float _4451 = isnan(0.0) ? _2485 : (isnan(_2485) ? 0.0 : max(_2485, 0.0));
        float _2488 = isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0));
        float _2489 = dot(vec3(_518, _519, _520), vec3(_2482, _2483, _2484));
        float _4462 = isnan(0.0) ? _2489 : (isnan(_2489) ? 0.0 : max(_2489, 0.0));
        float _2492 = isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0));
        float _2493 = dot(vec3(cbLight._m0[_2455].xyz), vec3(_2482, _2483, _2484));
        float _4473 = isnan(0.0) ? _2493 : (isnan(_2493) ? 0.0 : max(_2493, 0.0));
        float _2497 = _2474 * _2474;
        float _2501 = ((_2492 * _2492) * (_2497 + (-1.0))) + 1.0;
        float _2508 = exp2(log2(1.0 - (isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0)))) * 5.0);
        float _2515 = 1.0 - _2474;
        float _2525 = (0.5 / (((_2257 * ((_2488 * _2515) + _2474)) + 9.9999999392252902907785028219223e-09) + (((_2257 * _2515) + _2474) * _2488))) * _2488;
        float _4484 = isnan(0.0) ? _2525 : (isnan(_2525) ? 0.0 : max(_2525, 0.0));
        float _2527 = (isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0))) * (_2497 / ((_2501 * _2501) * 3.141590118408203125));
        float _2528 = isnan(1.0) ? _1996 : (isnan(_1996) ? 1.0 : min(_1996, 1.0));
        _2449 = (((((_2508 * _2279) + _656) * cbLight._m0[_2459].x) * _2527) * _2528) + _2391;
        _2451 = (((((_2508 * _2281) + _658) * cbLight._m0[_2459].y) * _2527) * _2528) + _2392;
        _2453 = (((((_2508 * _2282) + _659) * cbLight._m0[_2459].z) * _2527) * _2528) + _2393;
    }
    float _2559;
    float _2561;
    float _2563;
    if (_2166)
    {
        _2559 = _2449;
        _2561 = _2451;
        _2563 = _2453;
    }
    else
    {
        uint _2570 = _1981 + 3u;
        uint _2574 = _1981 + 11u;
        float _2588 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2570].w)) * _586) * 0.949999988079071044921875);
        float _2589 = _2588 * _2588;
        float _2590 = cbLight._m0[_2570].x + _399;
        float _2591 = cbLight._m0[_2570].y + _400;
        float _2592 = cbLight._m0[_2570].z + _401;
        float _2596 = inversesqrt(dot(vec3(_2590, _2591, _2592), vec3(_2590, _2591, _2592)));
        float _2597 = _2596 * _2590;
        float _2598 = _2596 * _2591;
        float _2599 = _2596 * _2592;
        float _2600 = dot(vec3(_518, _519, _520), vec3(cbLight._m0[_2570].xyz));
        float _4500 = isnan(0.0) ? _2600 : (isnan(_2600) ? 0.0 : max(_2600, 0.0));
        float _2603 = isnan(1.0) ? _4500 : (isnan(_4500) ? 1.0 : min(_4500, 1.0));
        float _2604 = dot(vec3(_518, _519, _520), vec3(_2597, _2598, _2599));
        float _4511 = isnan(0.0) ? _2604 : (isnan(_2604) ? 0.0 : max(_2604, 0.0));
        float _2607 = isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0));
        float _2608 = dot(vec3(cbLight._m0[_2570].xyz), vec3(_2597, _2598, _2599));
        float _4522 = isnan(0.0) ? _2608 : (isnan(_2608) ? 0.0 : max(_2608, 0.0));
        float _2612 = _2589 * _2589;
        float _2616 = ((_2607 * _2607) * (_2612 + (-1.0))) + 1.0;
        float _2623 = exp2(log2(1.0 - (isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0)))) * 5.0);
        float _2630 = 1.0 - _2589;
        float _2640 = (0.5 / (((_2257 * ((_2603 * _2630) + _2589)) + 9.9999999392252902907785028219223e-09) + (((_2257 * _2630) + _2589) * _2603))) * _2603;
        float _4533 = isnan(0.0) ? _2640 : (isnan(_2640) ? 0.0 : max(_2640, 0.0));
        float _2642 = (isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0))) * (_2612 / ((_2616 * _2616) * 3.141590118408203125));
        float _2643 = isnan(1.0) ? _1997 : (isnan(_1997) ? 1.0 : min(_1997, 1.0));
        _2559 = (((((_2623 * _2279) + _656) * cbLight._m0[_2574].x) * _2642) * _2643) + _2449;
        _2561 = (((((_2623 * _2281) + _658) * cbLight._m0[_2574].y) * _2642) * _2643) + _2451;
        _2563 = (((((_2623 * _2282) + _659) * cbLight._m0[_2574].z) * _2642) * _2643) + _2453;
    }
    float _2708;
    float _2710;
    float _2712;
    float _2714;
    float _2716;
    float _2718;
    if (_1979.y == 0u)
    {
        uvec4 _2664 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2665 = _2664.x;
        uint _2676 = uint((float(_2664.y) * floor(float(uint(cbSceneParam._m0[85u].y * _462) / _2665))) + floor(float(uint(cbSceneParam._m0[85u].x * _461) / _2665)));
        float _2686 = (log2(_1757 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2687 = isnan(0.0) ? _2686 : (isnan(_2686) ? 0.0 : max(_2686, 0.0));
        uint _2690 = uint(isnan(14.0) ? _2687 : (isnan(_2687) ? 14.0 : min(_2687, 14.0)));
        uvec4 _2695 = texelFetch(g_lightClusterGridBuffer, int(((_2690 << 2u) + (_2676 << 6u)) >> 2u));
        uint _2696 = _2695.x;
        uint _2697 = _2664.z;
        float _2822;
        float _2824;
        float _2826;
        float _2828;
        float _2830;
        float _2832;
        if (((((1u << ((_2697 >> 4u) & 15u)) + 4294967295u) & _2696) == 0u) || ((_2697 & 240u) == 0u))
        {
            _2822 = 0.0;
            _2824 = 0.0;
            _2826 = 0.0;
            _2828 = 0.0;
            _2830 = 0.0;
            _2832 = 0.0;
        }
        else
        {
            float _2823;
            float _2825;
            float _2827;
            float _2829;
            float _2831;
            float _2833;
            float _2974 = 0.0;
            float _2975 = 0.0;
            float _2976 = 0.0;
            float _2977 = 0.0;
            float _2978 = 0.0;
            float _2979 = 0.0;
            uint _2980 = 0u;
            uint _2989;
            bool _2990;
            for (;;)
            {
                _2989 = texelFetch(g_lightClassification, int((((_2690 << 5u) + (_2676 << 9u)) + (_2980 << 2u)) >> 2u)).x;
                _2990 = _2989 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_2990)
                {
                    frontier_phi_68_pred = _2979;
                    frontier_phi_68_pred_1 = _2978;
                    frontier_phi_68_pred_2 = _2977;
                    frontier_phi_68_pred_3 = _2975;
                    frontier_phi_68_pred_4 = _2974;
                    frontier_phi_68_pred_5 = _2976;
                }
                else
                {
                    float _3098;
                    float _3099;
                    float _3100;
                    float _3101;
                    float _3102;
                    float _3103;
                    uint _3104;
                    _3098 = _2974;
                    _3099 = _2975;
                    _3100 = _2976;
                    _3101 = _2977;
                    _3102 = _2978;
                    _3103 = _2979;
                    _3104 = _2989;
                    float _3030;
                    float _3031;
                    float _3032;
                    float _3033;
                    float _3034;
                    float _3035;
                    for (;;)
                    {
                        uint _3108 = uint(findLSB(_3104)) + (_2980 << 5u);
                        uint _3105 = (_3104 + 4294967295u) & _3104;
                        uint _3110 = _3108 * 48u;
                        vec4 _3124 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3110)).x, texelFetch(g_PointLightRenderingBuffer, int(_3110 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3110 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3110 + 3u)).x));
                        uint _3130 = (_3108 * 48u) + 4u;
                        vec4 _3143 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3130)).x, texelFetch(g_PointLightRenderingBuffer, int(_3130 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3130 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3130 + 3u)).x));
                        uint _3149 = (_3108 * 48u) + 8u;
                        vec3 _3160 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3149)).x, texelFetch(g_PointLightRenderingBuffer, int(_3149 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3149 + 2u)).x));
                        float _3164 = _3124.x - _1755;
                        float _3165 = _3124.y - _1756;
                        float _3166 = _3124.z - _1757;
                        float _3167 = dot(vec3(_3164, _3165, _3166), vec3(_3164, _3165, _3166));
                        float _3170 = inversesqrt(_3167);
                        float _3171 = _3170 * _3164;
                        float _3172 = _3170 * _3165;
                        float _3173 = _3170 * _3166;
                        float _3174 = dot(vec3(_567, _570, _573), vec3(_3171, _3172, _3173));
                        float _3179 = 1.0 - (_3167 * _3124.w);
                        float _4559 = isnan(0.0) ? _3179 : (isnan(_3179) ? 0.0 : max(_3179, 0.0));
                        float _3180 = isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0));
                        float _3181 = sqrt(_3167) * _3143.w;
                        float _3184 = 1.39999997615814208984375 / (_3181 + 1.39999997615814208984375);
                        float _3185 = _3184 * _3184;
                        float _3188 = ((1.0 - _3185) * _3174) + _3185;
                        float _3191 = _3181 * _3181;
                        float _3195 = ((isnan(0.0) ? _3188 : (isnan(_3188) ? 0.0 : max(_3188, 0.0))) * _3180) / ((_3191 * 0.699999988079071044921875) + 1.0);
                        float _3199 = (-0.0) - _1755;
                        float _3200 = (-0.0) - _1756;
                        float _3201 = (-0.0) - _1757;
                        float _3205 = inversesqrt(dot(vec3(_3199, _3200, _3201), vec3(_3199, _3200, _3201)));
                        float _3206 = _3205 * _3199;
                        float _3207 = _3205 * _3200;
                        float _3208 = _3205 * _3201;
                        float _3215 = exp2(log2(1.0 / ((_3191 * 3.5) + 5.0)) * 0.25);
                        float _3216 = 1.0 - _691;
                        float _3223 = sqrt(1.0 - ((1.0 - (_3216 * _3216)) * (1.0 - (_3215 * _3215))));
                        float _3224 = _3223 * _3223;
                        float _3225 = _3224 * _3224;
                        float _3226 = _3206 + _3171;
                        float _3227 = _3207 + _3172;
                        float _3228 = _3208 + _3173;
                        float _3232 = inversesqrt(dot(vec3(_3226, _3227, _3228), vec3(_3226, _3227, _3228)));
                        float _3236 = dot(vec3(_567, _570, _573), vec3(_3206, _3207, _3208));
                        float _4575 = isnan(0.0) ? _3236 : (isnan(_3236) ? 0.0 : max(_3236, 0.0));
                        float _3239 = isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0));
                        float _3240 = dot(vec3(_567, _570, _573), vec3(_3232 * _3226, _3232 * _3227, _3232 * _3228));
                        float _4586 = isnan(0.0) ? _3240 : (isnan(_3240) ? 0.0 : max(_3240, 0.0));
                        float _3243 = isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0));
                        float _3247 = ((_3243 * _3243) * (_3225 + (-1.0))) + 1.0;
                        float _3248 = _3184 * _3224;
                        float _3249 = _3248 * _3248;
                        float _3252 = ((1.0 - _3249) * _3174) + _3249;
                        float _4597 = isnan(0.0) ? _3252 : (isnan(_3252) ? 0.0 : max(_3252, 0.0));
                        float _3253 = isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0));
                        float _3254 = 1.0 - _3224;
                        float _3264 = (0.5 / (((_3253 * ((_3239 * _3254) + _3224)) + 9.9999999392252902907785028219223e-09) + (((_3253 * _3254) + _3224) * _3239))) * _3253;
                        float _4608 = isnan(0.0) ? _3264 : (isnan(_3264) ? 0.0 : max(_3264, 0.0));
                        float _3275 = (((_3225 * 3.1415927410125732421875) * (isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0)))) / ((_3247 * _3247) * ((_3191 * 2.1991131305694580078125) + 3.141590118408203125))) * _3180;
                        _3033 = (_3195 * _3143.x) + _3101;
                        _3034 = (_3195 * _3143.y) + _3102;
                        _3035 = (_3195 * _3143.z) + _3103;
                        _3030 = (_3275 * _3160.x) + _3098;
                        _3031 = (_3275 * _3160.y) + _3099;
                        _3032 = (_3275 * _3160.z) + _3100;
                        if (_3105 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3098 = _3030;
                            _3099 = _3031;
                            _3100 = _3032;
                            _3101 = _3033;
                            _3102 = _3034;
                            _3103 = _3035;
                            _3104 = _3105;
                        }
                    }
                    frontier_phi_68_pred = _3035;
                    frontier_phi_68_pred_1 = _3034;
                    frontier_phi_68_pred_2 = _3033;
                    frontier_phi_68_pred_3 = _3031;
                    frontier_phi_68_pred_4 = _3030;
                    frontier_phi_68_pred_5 = _3032;
                }
                _2833 = frontier_phi_68_pred;
                _2831 = frontier_phi_68_pred_1;
                _2829 = frontier_phi_68_pred_2;
                _2825 = frontier_phi_68_pred_3;
                _2823 = frontier_phi_68_pred_4;
                _2827 = frontier_phi_68_pred_5;
                uint _2981 = _2980 + 1u;
                if (_2981 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2974 = _2823;
                    _2975 = _2825;
                    _2976 = _2827;
                    _2977 = _2829;
                    _2978 = _2831;
                    _2979 = _2833;
                    _2980 = _2981;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2822 = _2823;
            _2824 = _2825;
            _2826 = _2827;
            _2828 = _2829;
            _2830 = _2831;
            _2832 = _2833;
        }
        uvec4 _2836 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2837 = _2836.z;
        uint _2839 = (_2837 >> 8u) & 15u;
        float _2942;
        float _2944;
        float _2946;
        float _2948;
        float _2950;
        float _2952;
        if (((4294967295u << _2839) & _2696) == 0u)
        {
            _2942 = _2822;
            _2944 = _2824;
            _2946 = _2826;
            _2948 = _2828;
            _2950 = _2830;
            _2952 = _2832;
        }
        else
        {
            float _2967 = inversesqrt(dot(vec3(_1755, _1756, _1757), vec3(_1755, _1756, _1757)));
            float _2968 = _2967 * _1755;
            float _2969 = _2967 * _1756;
            float _2970 = _2967 * _1757;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2839 < ((_2837 >> 12u) & 15u))
            {
                float _2943;
                float _2945;
                float _2947;
                float _2949;
                float _2951;
                float _2953;
                float _3081 = _2822;
                float _3082 = _2824;
                float _3083 = _2826;
                float _3084 = _2828;
                float _3085 = _2830;
                float _3086 = _2832;
                uint _3087 = _2839;
                uint _3096;
                bool _3097;
                for (;;)
                {
                    _3096 = texelFetch(g_lightClassification, int((((_2690 << 5u) + (_2676 << 9u)) + (_3087 << 2u)) >> 2u)).x;
                    _3097 = _3096 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3097)
                    {
                        frontier_phi_74_pred = _3083;
                        frontier_phi_74_pred_1 = _3082;
                        frontier_phi_74_pred_2 = _3081;
                        frontier_phi_74_pred_3 = _3086;
                        frontier_phi_74_pred_4 = _3085;
                        frontier_phi_74_pred_5 = _3084;
                    }
                    else
                    {
                        float _3280;
                        float _3281;
                        float _3282;
                        float _3283;
                        float _3284;
                        float _3285;
                        float _3576;
                        float _3577;
                        float _3578;
                        float _3579;
                        float _3580;
                        float _3581;
                        float _3293 = _3081;
                        float _3294 = _3082;
                        float _3295 = _3083;
                        float _3296 = _3084;
                        float _3297 = _3085;
                        float _3298 = _3086;
                        uint _3299 = _3096;
                        uint _3300;
                        vec4 _3325;
                        float _3326;
                        vec4 _3341;
                        vec3 _3353;
                        vec4 _3369;
                        vec4 _3385;
                        float _3432;
                        bool _3433;
                        for (;;)
                        {
                            uint _3310 = ((_3087 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3299));
                            _3300 = (_3299 + 4294967295u) & _3299;
                            uint _3312 = _3310 * 40u;
                            _3325 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3312)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3312 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3312 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3312 + 3u)).x));
                            _3326 = _3325.w;
                            uint _3328 = (_3310 * 40u) + 4u;
                            _3341 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3328)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3328 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3328 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3328 + 3u)).x));
                            uint _3343 = (_3310 * 40u) + 8u;
                            _3353 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3343)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3343 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3343 + 2u)).x));
                            uint _3356 = (_3310 * 40u) + 16u;
                            _3369 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3356)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3356 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3356 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3356 + 3u)).x));
                            uint _3372 = (_3310 * 40u) + 20u;
                            _3385 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3372)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3372 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3372 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3372 + 3u)).x));
                            uint _3388 = (_3310 * 40u) + 24u;
                            vec4 _3401 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3388)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 3u)).x));
                            uint _3407 = (_3310 * 40u) + 28u;
                            vec4 _3420 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3407)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3407 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3407 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3407 + 3u)).x));
                            _3432 = fma(_1757, _3420.z, fma(_1756, _3420.y, _3420.x * _1755)) + _3420.w;
                            _3433 = !((fma(_1757, _3401.z, fma(_1756, _3401.y, _3401.x * _1755)) + _3401.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3433)
                            {
                                float _3460 = _3325.x - _1755;
                                float _3461 = _3325.y - _1756;
                                float _3462 = _3325.z - _1757;
                                float _3463 = dot(vec3(_3460, _3461, _3462), vec3(_3460, _3461, _3462));
                                float _3466 = inversesqrt(_3463);
                                float _3467 = _3466 * _3460;
                                float _3468 = _3466 * _3461;
                                float _3469 = _3466 * _3462;
                                float _3473 = 1.0 - (_3463 / (_3326 * _3326));
                                float _4619 = isnan(0.0) ? _3473 : (isnan(_3473) ? 0.0 : max(_3473, 0.0));
                                float _3474 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
                                float _3478 = sqrt(_3463) * _3341.w;
                                float _3480 = 1.39999997615814208984375 / (_3478 + 1.39999997615814208984375);
                                float _3481 = _3480 * _3480;
                                float _3484 = ((1.0 - _3481) * dot(vec3(_3467, _3468, _3469), vec3(_567, _570, _573))) + _3481;
                                float _3487 = _3478 * _3478;
                                float _3491 = (fma(_1757, _3369.z, fma(_1756, _3369.y, _3369.x * _1755)) + _3369.w) / _3432;
                                float _3492 = (fma(_1757, _3385.z, fma(_1756, _3385.y, _3385.x * _1755)) + _3385.w) / _3432;
                                float _3496 = 1.0 - dot(vec2(_3491, _3492), vec2(_3491, _3492));
                                float _4635 = isnan(0.0) ? _3496 : (isnan(_3496) ? 0.0 : max(_3496, 0.0));
                                float _3497 = isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0));
                                float _3498 = _3497 * (((isnan(0.0) ? _3484 : (isnan(_3484) ? 0.0 : max(_3484, 0.0))) * _3474) / ((_3487 * 0.699999988079071044921875) + 1.0));
                                float _3510 = exp2(log2(1.0 / ((_3487 * 3.5) + 5.0)) * 0.25);
                                float _3511 = 1.0 - _691;
                                float _3518 = sqrt(1.0 - ((1.0 - (_3511 * _3511)) * (1.0 - (_3510 * _3510))));
                                float _3519 = _3518 * _3518;
                                float _3520 = _3519 * _3519;
                                float _3521 = _3467 - _2968;
                                float _3522 = _3468 - _2969;
                                float _3523 = _3469 - _2970;
                                float _3527 = inversesqrt(dot(vec3(_3521, _3522, _3523), vec3(_3521, _3522, _3523)));
                                float _3531 = dot(vec3(_567, _570, _573), vec3((-0.0) - _2968, (-0.0) - _2969, (-0.0) - _2970));
                                float _4646 = isnan(0.0) ? _3531 : (isnan(_3531) ? 0.0 : max(_3531, 0.0));
                                float _3534 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
                                float _3535 = dot(vec3(_567, _570, _573), vec3(_3527 * _3521, _3527 * _3522, _3527 * _3523));
                                float _4657 = isnan(0.0) ? _3535 : (isnan(_3535) ? 0.0 : max(_3535, 0.0));
                                float _3538 = isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0));
                                float _3542 = ((_3538 * _3538) * (_3520 + (-1.0))) + 1.0;
                                float _3543 = _3480 * _3519;
                                float _3544 = _3543 * _3543;
                                float _3550 = ((1.0 - _3544) * dot(vec3(_567, _570, _573), vec3(_3467, _3468, _3469))) + _3544;
                                float _4668 = isnan(0.0) ? _3550 : (isnan(_3550) ? 0.0 : max(_3550, 0.0));
                                float _3551 = isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0));
                                float _3552 = 1.0 - _3519;
                                float _3562 = (0.5 / (((_3551 * ((_3534 * _3552) + _3519)) + 9.9999999392252902907785028219223e-09) + (((_3551 * _3552) + _3519) * _3534))) * _3551;
                                float _4679 = isnan(0.0) ? _3562 : (isnan(_3562) ? 0.0 : max(_3562, 0.0));
                                float _3572 = (_3497 * _3474) * (((_3520 * 3.1415927410125732421875) * (isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0)))) / ((_3542 * _3542) * ((_3487 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3572 * _3353.z;
                                frontier_phi_80_pred_1 = _3572 * _3353.y;
                                frontier_phi_80_pred_2 = _3572 * _3353.x;
                                frontier_phi_80_pred_3 = _3498 * _3341.z;
                                frontier_phi_80_pred_4 = _3498 * _3341.y;
                                frontier_phi_80_pred_5 = _3498 * _3341.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3578 = frontier_phi_80_pred;
                            _3577 = frontier_phi_80_pred_1;
                            _3576 = frontier_phi_80_pred_2;
                            _3581 = frontier_phi_80_pred_3;
                            _3580 = frontier_phi_80_pred_4;
                            _3579 = frontier_phi_80_pred_5;
                            _3283 = _3579 + _3296;
                            _3284 = _3580 + _3297;
                            _3285 = _3581 + _3298;
                            _3280 = _3576 + _3293;
                            _3281 = _3577 + _3294;
                            _3282 = _3578 + _3295;
                            if (_3300 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3293 = _3280;
                                _3294 = _3281;
                                _3295 = _3282;
                                _3296 = _3283;
                                _3297 = _3284;
                                _3298 = _3285;
                                _3299 = _3300;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3282;
                        frontier_phi_74_pred_1 = _3281;
                        frontier_phi_74_pred_2 = _3280;
                        frontier_phi_74_pred_3 = _3285;
                        frontier_phi_74_pred_4 = _3284;
                        frontier_phi_74_pred_5 = _3283;
                    }
                    _2947 = frontier_phi_74_pred;
                    _2945 = frontier_phi_74_pred_1;
                    _2943 = frontier_phi_74_pred_2;
                    _2953 = frontier_phi_74_pred_3;
                    _2951 = frontier_phi_74_pred_4;
                    _2949 = frontier_phi_74_pred_5;
                    uint _3088 = _3087 + 1u;
                    if (_3088 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3081 = _2943;
                        _3082 = _2945;
                        _3083 = _2947;
                        _3084 = _2949;
                        _3085 = _2951;
                        _3086 = _2953;
                        _3087 = _3088;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _2951;
                frontier_phi_62_63_ladder_1 = _2949;
                frontier_phi_62_63_ladder_2 = _2947;
                frontier_phi_62_63_ladder_3 = _2953;
                frontier_phi_62_63_ladder_4 = _2945;
                frontier_phi_62_63_ladder_5 = _2943;
            }
            else
            {
                frontier_phi_62_63_ladder = _2830;
                frontier_phi_62_63_ladder_1 = _2828;
                frontier_phi_62_63_ladder_2 = _2826;
                frontier_phi_62_63_ladder_3 = _2832;
                frontier_phi_62_63_ladder_4 = _2824;
                frontier_phi_62_63_ladder_5 = _2822;
            }
            _2942 = frontier_phi_62_63_ladder_5;
            _2944 = frontier_phi_62_63_ladder_4;
            _2946 = frontier_phi_62_63_ladder_2;
            _2948 = frontier_phi_62_63_ladder_1;
            _2950 = frontier_phi_62_63_ladder;
            _2952 = frontier_phi_62_63_ladder_3;
        }
        float _2957 = isnan(1.0) ? _670 : (isnan(_670) ? 1.0 : min(_670, 1.0));
        _2708 = (_2957 * _2948) + _2221;
        _2710 = (_2957 * _2950) + _2223;
        _2712 = (_2957 * _2952) + _2225;
        _2714 = ((_2942 * _656) * _2957) + _2559;
        _2716 = ((_2944 * _658) * _2957) + _2561;
        _2718 = ((_2946 * _659) * _2957) + _2563;
    }
    else
    {
        _2708 = _2221;
        _2710 = _2223;
        _2712 = _2225;
        _2714 = _2559;
        _2716 = _2561;
        _2718 = _2563;
    }
    uint _2724 = _600 + uint(cbMatDynParam._m0[0u].w);
    float _2730 = cbInstanceData._m0[_2724].x * (((cbMtdParam._m0[13u].w * cbMtdParam._m0[9u].x) * _442.x) + (((cbMtdParam._m0[11u].x * TEXCOORD.w) * cbMtdParam._m0[13u].z) * _412));
    float _2731 = cbInstanceData._m0[_2724].y * (((cbMtdParam._m0[13u].w * cbMtdParam._m0[9u].y) * _442.y) + (((cbMtdParam._m0[11u].y * TEXCOORD.w) * cbMtdParam._m0[13u].z) * _412));
    float _2732 = cbInstanceData._m0[_2724].z * (((cbMtdParam._m0[13u].w * cbMtdParam._m0[9u].z) * _442.z) + (((cbMtdParam._m0[11u].z * TEXCOORD.w) * cbMtdParam._m0[13u].z) * _412));
    float _4695 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
    float _4706 = isnan(0.0) ? _647 : (isnan(_647) ? 0.0 : max(_647, 0.0));
    float _4717 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _4728 = isnan(0.0) ? _521 : (isnan(_521) ? 0.0 : max(_521, 0.0));
    float _2738 = 0.959999978542327880859375 - (_629 * 0.959999978542327880859375);
    float _2746 = (isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0))) * (_2708 + ((isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0))) * _670));
    float _2747 = (isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0))) * (_2710 + ((isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0))) * _670));
    float _2748 = (isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0))) * (_2712 + ((isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0))) * _670));
    float _2752 = _2738 - (exp2(log2(1.0 - _685) * 5.0) * _2738);
    float _2764 = ((_2746 + ((_2714 + ((isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0))) * _1484)) * cbPerFrame._m0[3u].x)) + _2730) + ((((cbSceneParam._m0[72u].w * _483.x) * _2752) - _2746) * _513);
    float _2767 = ((_2731 + ((_2716 + ((isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0))) * _1484)) * cbPerFrame._m0[3u].x)) + _2747) + ((((cbSceneParam._m0[72u].w * _483.y) * _2752) - _2747) * _513);
    float _2770 = ((_2732 + ((_2718 + ((isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0))) * _1484)) * cbPerFrame._m0[3u].x)) + _2748) + ((((cbSceneParam._m0[72u].w * _483.z) * _2752) - _2748) * _513);
    float _4754 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2783 = isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0));
    float _2788 = cbInstanceData._m0[_599 + 6u].w * (isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0)));
    float _2793 = _461 / cbSceneParam._m0[86u].x;
    float _2794 = _462 / cbSceneParam._m0[86u].y;
    vec4 _2808 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2793, _2794, (log2((isnan(cbSceneParam._m0[77u].w) ? _542 : (isnan(_542) ? cbSceneParam._m0[77u].w : min(_542, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2810 = _2808.x;
    float _2811 = _2808.y;
    float _2812 = _2808.z;
    float _2813 = _2808.w;
    float _2884;
    float _2886;
    float _2888;
    float _2890;
    if (_542 > cbSceneParam._m0[78u].w)
    {
        float _2847 = isnan(_542) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _542 : min(cbSceneParam._m0[80u].w, _542));
        float _2848 = _2847 / _542;
        float _2859 = _2848 * _288;
        float _2860 = _289 * _2848;
        float _2861 = (-0.0) - _2860;
        float _2862 = _2848 * _290;
        float _2864 = (cbSceneParam._m0[77u].w * _2861) / _2847;
        float _2865 = _2864 + cbSceneParam._m0[79u].w;
        float _2866 = cbSceneParam._m0[79u].w - _2860;
        float _2872 = sqrt(((_2859 * _2859) + (_2860 * _2860)) + (_2862 * _2862));
        float _2875 = (1.0 - (cbSceneParam._m0[77u].w / _2847)) * _2872;
        float _2880 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2882 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3043;
        if (abs((_2861 - _2864) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3043 = ((((_2865 > 0.0) ? exp2(_2880 * _2865) : (2.0 - exp2(_2882 * _2865))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2875;
        }
        else
        {
            float _3003 = 1.0 / cbSceneParam._m0[80u].x;
            float _3004 = isnan(_2866) ? _2865 : (isnan(_2865) ? _2866 : max(_2865, _2866));
            float _3005 = isnan(_2866) ? _2865 : (isnan(_2865) ? _2866 : min(_2865, _2866));
            float _3014 = isnan(0.0) ? _3004 : (isnan(_3004) ? 0.0 : min(_3004, 0.0));
            float _3015 = isnan(0.0) ? _3005 : (isnan(_3005) ? 0.0 : min(_3005, 0.0));
            _3043 = ((abs(_2872 / _2861) * cbSceneParam._m0[80u].y) * ((((_3014 - _3015) * 2.0) - ((exp2(_2880 * (isnan(0.0) ? _3004 : (isnan(_3004) ? 0.0 : max(_3004, 0.0)))) - exp2(_2880 * (isnan(0.0) ? _3005 : (isnan(_3005) ? 0.0 : max(_3005, 0.0))))) * _3003)) - ((exp2(_2882 * _3014) - exp2(_2882 * _3015)) * _3003))) + (_2875 * cbSceneParam._m0[80u].z);
        }
        vec4 _3045 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2793, _2794, 1.0), 0.0);
        float _3054 = exp2((_3043 * (-1.44269502162933349609375)) * (1.0 - _3045.w));
        float _3055 = log2(_3054);
        float _3071 = log2(_2813);
        _2884 = (exp2(_3071 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3055 * cbSceneParam._m0[78u].x)) * _3045.x) / cbSceneParam._m0[78u].x)) + _2810;
        _2886 = (exp2(_3071 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3055 * cbSceneParam._m0[78u].y)) * _3045.y) / cbSceneParam._m0[78u].y)) + _2811;
        _2888 = (exp2(_3071 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3055 * cbSceneParam._m0[78u].z)) * _3045.z) / cbSceneParam._m0[78u].z)) + _2812;
        _2890 = _3054 * _2813;
    }
    else
    {
        _2884 = _2810;
        _2886 = _2811;
        _2888 = _2812;
        _2890 = _2813;
    }
    float _2901 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2902 = _2901 == 3.0;
    float _2903 = log2(_2890);
    float _2907 = exp2(_2903 * cbSceneParam._m0[78u].x);
    float _2908 = exp2(_2903 * cbSceneParam._m0[78u].y);
    float _2909 = exp2(_2903 * cbSceneParam._m0[78u].z);
    float _2910 = _2907 * (isnan(0.0) ? _2764 : (isnan(_2764) ? 0.0 : max(_2764, 0.0)));
    float _2911 = _2908 * (isnan(0.0) ? _2767 : (isnan(_2767) ? 0.0 : max(_2767, 0.0)));
    float _2912 = _2909 * (isnan(0.0) ? _2770 : (isnan(_2770) ? 0.0 : max(_2770, 0.0)));
    float _2921 = (_2901 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2921 * (_2902 ? _2910 : (_2910 + (cbSceneParam._m0[72u].w * _2884)));
    SV_Target.y = _2921 * (_2902 ? _2911 : (_2911 + (cbSceneParam._m0[72u].w * _2886)));
    SV_Target.z = _2921 * (_2902 ? _2912 : (_2912 + (cbSceneParam._m0[72u].w * _2888)));
    SV_Target.w = _2788;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2730) * _2783) * _2907) * _2921;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2731) * _2783) * _2908) * _2921;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2732) * _2783) * _2909) * _2921;
    SV_Target_1.w = _2788;
}


