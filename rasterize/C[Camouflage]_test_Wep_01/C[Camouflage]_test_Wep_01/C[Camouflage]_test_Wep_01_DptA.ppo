#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_Camouflage_test_Wep_01_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in vec2 TEXCOORD_10;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    vec4 _101 = texture(sampler2D(C_Camouflage_test_Wep_01_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[0u].w));
    float _103 = _101.w;
    uint _106 = uint(roundEven(NORMAL.w));
    float _150 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _160 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _150);
    float _161 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _150);
    float _162 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _150);
    vec4 _167 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _169 = _167.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _202 = sqrt(((_160 * _160) + (_161 * _161)) + (_162 * _162));
        float _209 = (cbMatDynParam._m0[5u].x * _202) + cbMatDynParam._m0[5u].y;
        float _280 = isnan(0.0) ? _209 : (isnan(_209) ? 0.0 : max(_209, 0.0));
        float _211 = isnan(1.0) ? _280 : (isnan(_280) ? 1.0 : min(_280, 1.0));
        float _215 = (cbMatDynParam._m0[5u].z * _202) + cbMatDynParam._m0[5u].w;
        float _291 = isnan(0.0) ? _215 : (isnan(_215) ? 0.0 : max(_215, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _291 : (isnan(_291) ? 1.0 : min(_291, 1.0))) - _211)) + _211) < ((_169 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _252;
    vec4 _180;
    float _182;
    float _183;
    bool _194;
    uint _195;
    for (;;)
    {
        float _177 = _169 + (-0.5);
        _180 = cbMtdParam._m0[1u];
        _182 = _180.y * _177;
        _183 = _177 * 0.999000012874603271484375;
        _194 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        _195 = _106 * 13u;
        if (_194)
        {
            if ((cbInstanceData._m0[_195 + 7u].x + _183) < 0.5)
            {
                _252 = true;
                break;
            }
        }
        uint _241 = (_195 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_241].w < 1.0) && ((cbInstanceData._m0[_241].w + _183) < 0.5))
        {
            _252 = true;
            break;
        }
        if ((_182 + _103) < _180.x)
        {
            _252 = true;
            break;
        }
        _252 = false;
        break;
    }
    if (_252)
    {
        discard_state = true;
    }
    discard_exit();
}


