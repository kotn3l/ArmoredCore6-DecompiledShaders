#version 460
layout(vertices = 3) out;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(location = 0) in vec4 POSITION[];
layout(location = 1) in vec4 NORMAL[];
layout(location = 2) in vec4 TANGENT[];
layout(location = 3) in float TEXCOORD[];
layout(location = 3, component = 1) in float TEXCOORD_1[];
layout(location = 4) in vec4 TEXCOORD_6[];
layout(location = 3, component = 2) in float TEXCOORD_9[];
layout(location = 3, component = 3) in float TEXCOORD_10[];
layout(location = 5) in float TEXCOORD_11[];
layout(location = 5, component = 1) in float TEXCOORD_13[];
layout(location = 0) out vec4 POSITION_1[3];
layout(location = 1) out vec4 NORMAL_1[3];
layout(location = 2) out vec4 TANGENT_1[3];
layout(location = 3) out float TEXCOORD_2[3];
layout(location = 3, component = 1) out float TEXCOORD_1_1[3];
layout(location = 4) out vec4 TEXCOORD_5[3];
layout(location = 3, component = 2) out float TEXCOORD_8[3];
layout(location = 3, component = 3) out float TEXCOORD_9_1[3];
layout(location = 5) out float TEXCOORD_10_1[3];

void hull_main()
{
    POSITION_1[gl_InvocationID].x = POSITION[gl_InvocationID].x;
    POSITION_1[gl_InvocationID].y = POSITION[gl_InvocationID].y;
    POSITION_1[gl_InvocationID].z = POSITION[gl_InvocationID].z;
    POSITION_1[gl_InvocationID].w = POSITION[gl_InvocationID].w;
    NORMAL_1[gl_InvocationID].x = NORMAL[gl_InvocationID].x;
    NORMAL_1[gl_InvocationID].y = NORMAL[gl_InvocationID].y;
    NORMAL_1[gl_InvocationID].z = NORMAL[gl_InvocationID].z;
    NORMAL_1[gl_InvocationID].w = NORMAL[gl_InvocationID].w;
    TANGENT_1[gl_InvocationID].x = TANGENT[gl_InvocationID].x;
    TANGENT_1[gl_InvocationID].y = TANGENT[gl_InvocationID].y;
    TANGENT_1[gl_InvocationID].z = TANGENT[gl_InvocationID].z;
    TANGENT_1[gl_InvocationID].w = TANGENT[gl_InvocationID].w;
    TEXCOORD_2[gl_InvocationID] = TEXCOORD[gl_InvocationID];
    TEXCOORD_1_1[gl_InvocationID] = TEXCOORD_1[gl_InvocationID];
    TEXCOORD_5[gl_InvocationID].x = TEXCOORD_6[gl_InvocationID].x;
    TEXCOORD_5[gl_InvocationID].y = TEXCOORD_6[gl_InvocationID].y;
    TEXCOORD_5[gl_InvocationID].z = TEXCOORD_6[gl_InvocationID].z;
    TEXCOORD_5[gl_InvocationID].w = TEXCOORD_6[gl_InvocationID].w;
    TEXCOORD_8[gl_InvocationID] = TEXCOORD_9[gl_InvocationID];
    TEXCOORD_9_1[gl_InvocationID] = TEXCOORD_10[gl_InvocationID];
    TEXCOORD_10_1[gl_InvocationID] = TEXCOORD_11[gl_InvocationID];
}

void patch_main()
{
    float _180 = (-0.0) - cbMtdParam._m0[4u].y;
    bool _275 = ((((float(dot(vec4(POSITION[1u].x, POSITION[1u].y, POSITION[1u].z, 1.0), vec4(cbSceneParam._m0[73u])) > _180) + float(dot(vec4(POSITION[0u].x, POSITION[0u].y, POSITION[0u].z, 1.0), vec4(cbSceneParam._m0[73u])) > _180)) + float(dot(vec4(POSITION[2u].x, POSITION[2u].y, POSITION[2u].z, 1.0), vec4(cbSceneParam._m0[73u])) > _180)) != 0.0) && (((float(dot(vec4(POSITION[1u].x, POSITION[1u].y, POSITION[1u].z, 1.0), vec4(cbSceneParam._m0[74u])) > _180) + float(dot(vec4(POSITION[0u].x, POSITION[0u].y, POSITION[0u].z, 1.0), vec4(cbSceneParam._m0[74u])) > _180)) + float(dot(vec4(POSITION[2u].x, POSITION[2u].y, POSITION[2u].z, 1.0), vec4(cbSceneParam._m0[74u])) > _180)) != 0.0)) && (((float(dot(vec4(POSITION[1u].x, POSITION[1u].y, POSITION[1u].z, 1.0), vec4(cbSceneParam._m0[75u])) > _180) + float(dot(vec4(POSITION[0u].x, POSITION[0u].y, POSITION[0u].z, 1.0), vec4(cbSceneParam._m0[75u])) > _180)) + float(dot(vec4(POSITION[2u].x, POSITION[2u].y, POSITION[2u].z, 1.0), vec4(cbSceneParam._m0[75u])) > _180)) != 0.0);
    float _302 = cbSceneParam._m0[3u].x - (((POSITION[1u].x + POSITION[0u].x) + POSITION[2u].x) * 0.333000004291534423828125);
    float _303 = cbSceneParam._m0[3u].y - (((POSITION[1u].y + POSITION[0u].y) + POSITION[2u].y) * 0.333000004291534423828125);
    float _304 = cbSceneParam._m0[3u].z - (((POSITION[1u].z + POSITION[0u].z) + POSITION[2u].z) * 0.333000004291534423828125);
    float _305 = cbSceneParam._m0[3u].w - (((POSITION[1u].w + POSITION[0u].w) + POSITION[2u].w) * 0.333000004291534423828125);
    float _310 = inversesqrt(dot(vec4(_302, _303, _304, _305), vec4(_302, _303, _304, _305)));
    float _314 = POSITION[2u].x - POSITION[0u].x;
    float _315 = POSITION[2u].y - POSITION[0u].y;
    float _316 = POSITION[2u].z - POSITION[0u].z;
    float _317 = POSITION[1u].x - POSITION[0u].x;
    float _318 = POSITION[1u].y - POSITION[0u].y;
    float _319 = POSITION[1u].z - POSITION[0u].z;
    float _329 = (-0.0) - ((_318 * _316) - (_319 * _315));
    float _330 = (-0.0) - ((_319 * _314) - (_317 * _316));
    float _331 = (-0.0) - ((_317 * _315) - (_318 * _314));
    float _336 = inversesqrt(dot(vec3(_329, _330, _331), vec3(_329, _330, _331)));
    float _352 = (TEXCOORD_13[2u] + TEXCOORD_13[0u]) * 0.5;
    float _355 = (TEXCOORD_13[1u] + TEXCOORD_13[0u]) * 0.5;
    float _357 = (TEXCOORD_13[2u] + TEXCOORD_13[1u]) * 0.5;
    float _488;
    float _489;
    float _490;
    if ((_275 && (((float(dot(vec4(POSITION[1u].x, POSITION[1u].y, POSITION[1u].z, 1.0), vec4(cbSceneParam._m0[76u])) > _180) + float(dot(vec4(POSITION[0u].x, POSITION[0u].y, POSITION[0u].z, 1.0), vec4(cbSceneParam._m0[76u])) > _180)) + float(dot(vec4(POSITION[2u].x, POSITION[2u].y, POSITION[2u].z, 1.0), vec4(cbSceneParam._m0[76u])) > _180)) != 0.0)) && ((dot(vec3(_336 * _329, _336 * _330, _336 * _331), vec3(_310 * _302, _310 * _303, _304 * _310)) + 1.0) > cbMtdParam._m0[4u].x))
    {
        float _385 = POSITION[0u].x - cbSceneParam._m0[3u].x;
        float _386 = POSITION[0u].y - cbSceneParam._m0[3u].y;
        float _387 = POSITION[0u].z - cbSceneParam._m0[3u].z;
        float _399 = fma(_387, cbSceneParam._m0[27u].z, fma(_386, cbSceneParam._m0[27u].y, _385 * cbSceneParam._m0[27u].x)) + cbSceneParam._m0[27u].w;
        float _402 = ((fma(_387, cbSceneParam._m0[24u].z, fma(_386, cbSceneParam._m0[24u].y, _385 * cbSceneParam._m0[24u].x)) + cbSceneParam._m0[24u].w) / _399) + 1.0;
        float _403 = ((fma(_387, cbSceneParam._m0[25u].z, fma(_386, cbSceneParam._m0[25u].y, _385 * cbSceneParam._m0[25u].x)) + cbSceneParam._m0[25u].w) / _399) + 1.0;
        float _404 = cbSceneParam._m0[1u].x * 0.5;
        float _405 = cbSceneParam._m0[1u].y * 0.5;
        float _406 = POSITION[1u].x - cbSceneParam._m0[3u].x;
        float _407 = POSITION[1u].y - cbSceneParam._m0[3u].y;
        float _408 = POSITION[1u].z - cbSceneParam._m0[3u].z;
        float _420 = fma(_408, cbSceneParam._m0[27u].z, fma(_407, cbSceneParam._m0[27u].y, _406 * cbSceneParam._m0[27u].x)) + cbSceneParam._m0[27u].w;
        float _423 = ((fma(_408, cbSceneParam._m0[24u].z, fma(_407, cbSceneParam._m0[24u].y, _406 * cbSceneParam._m0[24u].x)) + cbSceneParam._m0[24u].w) / _420) + 1.0;
        float _424 = ((fma(_408, cbSceneParam._m0[25u].z, fma(_407, cbSceneParam._m0[25u].y, _406 * cbSceneParam._m0[25u].x)) + cbSceneParam._m0[25u].w) / _420) + 1.0;
        float _425 = POSITION[2u].x - cbSceneParam._m0[3u].x;
        float _426 = POSITION[2u].y - cbSceneParam._m0[3u].y;
        float _427 = POSITION[2u].z - cbSceneParam._m0[3u].z;
        float _439 = fma(_427, cbSceneParam._m0[27u].z, fma(_426, cbSceneParam._m0[27u].y, _425 * cbSceneParam._m0[27u].x)) + cbSceneParam._m0[27u].w;
        float _442 = ((fma(_427, cbSceneParam._m0[24u].z, fma(_426, cbSceneParam._m0[24u].y, _425 * cbSceneParam._m0[24u].x)) + cbSceneParam._m0[24u].w) / _439) + 1.0;
        float _443 = ((fma(_427, cbSceneParam._m0[25u].z, fma(_426, cbSceneParam._m0[25u].y, _425 * cbSceneParam._m0[25u].x)) + cbSceneParam._m0[25u].w) / _439) + 1.0;
        float _445 = _404 * (_442 - _402);
        float _447 = _405 * (_403 - _443);
        float _454 = (sqrt((_447 * _447) + (_445 * _445)) * 0.066666670143604278564453125) / _352;
        float _512 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
        float _457 = _404 * (_402 - _423);
        float _459 = _405 * (_424 - _403);
        float _465 = (sqrt((_459 * _459) + (_457 * _457)) * 0.066666670143604278564453125) / _355;
        float _523 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
        float _468 = _404 * (_423 - _442);
        float _470 = _405 * (_443 - _424);
        float _476 = (sqrt((_470 * _470) + (_468 * _468)) * 0.066666670143604278564453125) / _357;
        float _534 = isnan(0.0) ? _476 : (isnan(_476) ? 0.0 : max(_476, 0.0));
        float _478 = (isnan(1.0) ? _512 : (isnan(_512) ? 1.0 : min(_512, 1.0))) * _352;
        float _479 = (isnan(1.0) ? _523 : (isnan(_523) ? 1.0 : min(_523, 1.0))) * _355;
        float _480 = (isnan(1.0) ? _534 : (isnan(_534) ? 1.0 : min(_534, 1.0))) * _357;
        float _481 = isnan(1.0) ? _478 : (isnan(_478) ? 1.0 : max(_478, 1.0));
        float _482 = isnan(1.0) ? _479 : (isnan(_479) ? 1.0 : max(_479, 1.0));
        float _483 = isnan(1.0) ? _480 : (isnan(_480) ? 1.0 : max(_480, 1.0));
        _488 = isnan(64.0) ? _483 : (isnan(_483) ? 64.0 : min(_483, 64.0));
        _489 = isnan(64.0) ? _482 : (isnan(_482) ? 64.0 : min(_482, 64.0));
        _490 = isnan(64.0) ? _481 : (isnan(_481) ? 64.0 : min(_481, 64.0));
    }
    else
    {
        _488 = 0.0;
        _489 = 0.0;
        _490 = 0.0;
    }
    gl_TessLevelOuter[0u] = _490;
    gl_TessLevelOuter[1u] = _489;
    gl_TessLevelOuter[2u] = _488;
    gl_TessLevelInner[0u] = ((_489 + _488) + _490) * 0.333000004291534423828125;
}

void main()
{
    hull_main();
    barrier();
    if (gl_InvocationID == 0u)
    {
        patch_main();
    }
}


