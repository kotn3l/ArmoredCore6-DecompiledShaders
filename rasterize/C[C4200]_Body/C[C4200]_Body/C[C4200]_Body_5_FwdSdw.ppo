#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[34];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_C4200_Body_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_C4200_Body_snp_0_Texture2D_1;
layout(set = 0, binding = 13) uniform texture2D C_C4200_Body_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_C4200_Body_snp_0_Texture2D_6;
layout(set = 0, binding = 15) uniform texture2D C_C4200_Body_snp_0_Texture2D_7;
layout(set = 0, binding = 16) uniform texture2D C_C4200_Body_snp_0_Texture2D_8;
layout(set = 0, binding = 17) uniform texture2D C_C4200_Body_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_C4200_Body_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform texture2D C_C4200_Body_snp_0_Texture2D_16;
layout(set = 0, binding = 4) uniform texture2D C_C4200_Body_snp_0_Texture2D_17;
layout(set = 0, binding = 5) uniform texture2D C_C4200_Body_snp_0_Texture2D_18;
layout(set = 0, binding = 6) uniform texture2D C_C4200_Body_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_C4200_Body_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_C4200_Body_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_C4200_Body_snp_0_Texture2D_21;
layout(set = 0, binding = 18) uniform texture2DArray C_C4200_Body_snp_0_Texture2DArray_0;
layout(set = 0, binding = 19) uniform texture2DArray C_C4200_Body_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1586;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _228 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _229 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _230 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _236 = inversesqrt(dot(vec3(_228, _229, _230), vec3(_228, _229, _230)));
    float _243 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _270 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w));
    vec4 _290 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_1) + cbTextureTilingScale._m0[15u].w));
    float _303 = exp2(log2(_290.w * cbMtdParam._m0[30u].y) * cbMtdParam._m0[24u].x);
    float _304 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _305 = isnan(1.0) ? _304 : (isnan(_304) ? 1.0 : min(_304, 1.0));
    vec4 _319 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _323 = _319.z;
    float _331 = exp2(log2(_323 * cbMtdParam._m0[24u].y) * cbMtdParam._m0[23u].y);
    float _332 = isnan(0.0) ? _331 : (isnan(_331) ? 0.0 : max(_331, 0.0));
    float _333 = isnan(1.0) ? _332 : (isnan(_332) ? 1.0 : min(_332, 1.0));
    vec4 _345 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w));
    float _348 = _345.y;
    float _351 = (_345.x + (-0.02500000037252902984619140625)) * 8.0;
    float _355 = roundEven(5.0 - _351);
    float _356 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _357 = isnan(4.0) ? _356 : (isnan(_356) ? 4.0 : min(_356, 4.0));
    float _370 = floor(_357);
    vec4 _373 = texture(sampler2DArray(C_C4200_Body_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[18u].x * TEXCOORD) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD_1) + cbTextureTilingScale._m0[18u].w, _370));
    float _201[6];
    float _202[6];
    float _203[6];
    _201[0u] = cbMtdParam._m0[17u].x;
    _202[0u] = cbMtdParam._m0[17u].y;
    _203[0u] = cbMtdParam._m0[17u].z;
    _201[1u] = cbMtdParam._m0[15u].x;
    _202[1u] = cbMtdParam._m0[15u].y;
    _203[1u] = cbMtdParam._m0[15u].z;
    _201[2u] = cbMtdParam._m0[14u].x;
    _202[2u] = cbMtdParam._m0[14u].y;
    _203[2u] = cbMtdParam._m0[14u].z;
    _201[3u] = cbMtdParam._m0[13u].x;
    _202[3u] = cbMtdParam._m0[13u].y;
    _203[3u] = cbMtdParam._m0[13u].z;
    _201[4u] = cbMtdParam._m0[12u].x;
    _202[4u] = cbMtdParam._m0[12u].y;
    _203[4u] = cbMtdParam._m0[12u].z;
    _201[5u] = cbMtdParam._m0[18u].x;
    _202[5u] = cbMtdParam._m0[18u].y;
    _203[5u] = cbMtdParam._m0[18u].z;
    float _437 = roundEven(_351);
    float _438 = isnan(0.0) ? _437 : (isnan(_437) ? 0.0 : max(_437, 0.0));
    uint _440 = uint(int(isnan(5.0) ? _438 : (isnan(_438) ? 5.0 : min(_438, 5.0))));
    vec4 _470 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _481 = cbMtdParam._m0[9u].x * _470.x;
    float _482 = cbMtdParam._m0[9u].y * _470.y;
    float _483 = cbMtdParam._m0[9u].z * _470.z;
    float _490 = ((((((_201[_440] - cbMtdParam._m0[10u].x) * _348) + cbMtdParam._m0[10u].x) * _373.x) - _481) * _333) + _481;
    float _491 = ((((((_202[_440] - cbMtdParam._m0[10u].y) * _348) + cbMtdParam._m0[10u].y) * _373.y) - _482) * _333) + _482;
    float _492 = ((((((_203[_440] - cbMtdParam._m0[10u].z) * _348) + cbMtdParam._m0[10u].z) * _373.z) - _483) * _333) + _483;
    float _498 = exp2(log2(_319.w) * cbMtdParam._m0[24u].w);
    vec4 _511 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w));
    float _531 = (((cbMtdParam._m0[16u].x * _511.x) - _490) * _498) + _490;
    float _532 = (((cbMtdParam._m0[16u].y * _511.y) - _491) * _498) + _491;
    float _533 = (((cbMtdParam._m0[16u].z * _511.z) - _492) * _498) + _492;
    vec4 _545 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD_1) + cbTextureTilingScale._m0[13u].w));
    float _570 = (_290.x * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].x * _545.x) - _531) * _305) + _531);
    float _572 = (_290.y * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].y * _545.y) - _532) * _305) + _532);
    float _574 = (_290.z * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].z * _545.z) - _533) * _305) + _533);
    vec4 _586 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1) + cbTextureTilingScale._m0[4u].w));
    float _605 = TEXCOORD_3.x - ((cbMtdParam._m0[25u].x * (1.0 - TEXCOORD_3.x)) * (_270.x + 0.00999999977648258209228515625));
    float _607 = _605 * (cbMtdParam._m0[25u].z + 1.0);
    float _4268 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _608 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
    float _615 = (_608 * ((cbMtdParam._m0[11u].x * _586.x) - _570)) + _570;
    float _616 = (((cbMtdParam._m0[11u].y * _586.y) - _572) * _608) + _572;
    float _617 = (((cbMtdParam._m0[11u].z * _586.z) - _574) * _608) + _574;
    float _196[5];
    float _197[5];
    _196[0u] = cbMtdParam._m0[30u].z;
    _197[0u] = cbMtdParam._m0[30u].w;
    _196[1u] = cbMtdParam._m0[32u].z;
    _197[1u] = cbMtdParam._m0[32u].w;
    _196[2u] = cbMtdParam._m0[32u].x;
    _197[2u] = cbMtdParam._m0[32u].y;
    _196[3u] = cbMtdParam._m0[31u].z;
    _197[3u] = cbMtdParam._m0[31u].w;
    _196[4u] = cbMtdParam._m0[31u].x;
    _197[4u] = cbMtdParam._m0[31u].y;
    float _653 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    uint _655 = uint(int(isnan(4.0) ? _653 : (isnan(_653) ? 4.0 : min(_653, 4.0))));
    float _662 = ((_197[_655] - cbMtdParam._m0[23u].z) * _333) + cbMtdParam._m0[23u].z;
    float _665 = ((cbMtdParam._m0[23u].w - _662) * _498) + _662;
    float _668 = ((cbMtdParam._m0[26u].y - _665) * _305) + _665;
    float _673 = (cbMtdParam._m0[25u].y + 1.0) * _605;
    float _4289 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
    float _674 = isnan(1.0) ? _4289 : (isnan(_4289) ? 1.0 : min(_4289, 1.0));
    float _676 = _668 - (_668 * _674);
    vec4 _689 = texture(sampler2DArray(C_C4200_Body_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[19u].x * TEXCOORD) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD_1) + cbTextureTilingScale._m0[19u].w, _370));
    vec4 _706 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w));
    float _708 = _706.x;
    float _709 = _706.y;
    float _714 = cbMtdParam._m0[23u].x + _706.z;
    float _717 = (((_689.z + _196[_655]) - _714) * _333) + _714;
    vec4 _729 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_1) + cbTextureTilingScale._m0[16u].w));
    float _740 = (((_729.z - _717) + cbMtdParam._m0[30u].x) * _498) + _717;
    float _746 = ((((_323 * 2.0) * _740) - _740) * cbMtdParam._m0[25u].w) + _740;
    vec4 _758 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD_1) + cbTextureTilingScale._m0[17u].w));
    float _769 = (((cbMtdParam._m0[24u].z + _758.z) - _746) * _305) + _746;
    vec4 _781 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _793 = ((_781.z - _769) * _674) + _769;
    float _806 = cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x;
    vec4 _829 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * ((_806 * cbMtdParam._m0[33u].z) + TEXCOORD)) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * ((cbMtdParam._m0[33u].w * _806) + TEXCOORD_1)) + cbTextureTilingScale._m0[9u].w));
    float _833 = cbPerFrame._m0[22u].x * 2.0;
    float _834 = _833 * cbMtdParam._m0[28u].z;
    float _837 = (_829.x * 0.5) + (-0.25);
    float _840 = (_829.y * 0.5) + (-0.25);
    float _841 = _840 * cbMtdParam._m0[28u].y;
    float _843 = (-0.0) - (cbMtdParam._m0[28u].y * _837);
    float _845 = fract(_834);
    float _847 = fract(_834 + 0.5);
    float _858 = abs((_845 * 2.0) + (-1.0));
    vec4 _874 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_19, SS_DiffuseMap), vec2((((_845 * _843) + TEXCOORD) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_841 * _845) + TEXCOORD_1) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _876 = _874.x;
    float _877 = _874.y;
    float _878 = _874.z;
    vec4 _879 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_19, SS_DiffuseMap), vec2((((_847 * _843) + TEXCOORD) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_841 * _847) + TEXCOORD_1) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _890 = ((_879.x - _876) * _858) + _876;
    float _897 = exp2(log2(_890 * cbMtdParam._m0[28u].w) * cbMtdParam._m0[29u].x);
    float _898 = isnan(cbMtdParam._m0[29u].y) ? _897 : (isnan(_897) ? cbMtdParam._m0[29u].y : max(_897, cbMtdParam._m0[29u].y));
    float _899 = isnan(cbMtdParam._m0[29u].z) ? _898 : (isnan(_898) ? cbMtdParam._m0[29u].z : min(_898, cbMtdParam._m0[29u].z));
    float _923 = (cbMtdParam._m0[33u].x * _806) + TEXCOORD;
    float _924 = (cbMtdParam._m0[33u].y * _806) + TEXCOORD_1;
    float _927 = _833 * cbMtdParam._m0[27u].w;
    float _928 = _840 * cbMtdParam._m0[27u].z;
    float _930 = (-0.0) - (cbMtdParam._m0[27u].z * _837);
    float _931 = fract(_927);
    float _933 = fract(_927 + 0.5);
    float _944 = abs((_931 * 2.0) + (-1.0));
    vec4 _961 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_20, SS_DiffuseMap), vec2((((_931 * _930) + _923) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_928 * _931) + _924) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    vec4 _966 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_20, SS_DiffuseMap), vec2((((_933 * _930) + _923) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_928 * _933) + _924) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _1003 = ((_689.x - _708) * _333) + _708;
    float _1004 = ((_689.y - _709) * _333) + _709;
    float _1009 = ((_729.x - _1003) * _498) + _1003;
    float _1010 = ((_729.y - _1004) * _498) + _1004;
    float _1019 = ((((_758.x - _1009) * _305) + _1009) * 2.0) + (-1.0);
    float _1020 = ((((_758.y - _1010) * _305) + _1010) * 2.0) + (-1.0);
    float _1021 = dot(vec2(_1019, _1020), vec2(_1019, _1020));
    float _4310 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
    float _1026 = sqrt(1.0 - (isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0))));
    float _1035 = ((cbMtdParam._m0[26u].z * ((_319.x * 2.0) + (-1.0))) + _1019) + (((((_781.x * 2.0) + (-1.0)) * TEXCOORD_3.x) * cbMtdParam._m0[26u].w) * _674);
    float _1036 = ((cbMtdParam._m0[26u].z * ((_319.y * 2.0) + (-1.0))) + _1020) + (((((_781.y * 2.0) + (-1.0)) * TEXCOORD_3.y) * cbMtdParam._m0[26u].w) * _674);
    float _1039 = fma(_1026, _243 * NORMAL.x, fma(_1036, _250 * TANGENT.x, (_236 * _228) * _1035));
    float _1042 = fma(_1026, _243 * NORMAL.y, fma(_1036, _250 * TANGENT.y, (_236 * _229) * _1035));
    float _1045 = fma(_1026, _243 * NORMAL.z, fma(_1036, _250 * TANGENT.z, (_236 * _230) * _1035));
    float _1049 = inversesqrt(dot(vec3(_1039, _1042, _1045), vec3(_1039, _1042, _1045)));
    float _1050 = _1049 * _1039;
    float _1051 = _1049 * _1042;
    float _1052 = _1049 * _1045;
    float _4321 = isnan(0.0) ? _793 : (isnan(_793) ? 0.0 : max(_793, 0.0));
    float _1053 = isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0));
    float _4332 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _4343 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _4354 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _4365 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
    float _1057 = isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0));
    float _1073 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1113 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1123 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1113);
    float _1124 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1113);
    float _1125 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1113);
    float _1129 = inversesqrt(dot(vec3(_1123, _1124, _1125), vec3(_1123, _1124, _1125)));
    float _1130 = _1123 * _1129;
    float _1131 = _1124 * _1129;
    float _1132 = _1125 * _1129;
    float _1138 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1139 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1157 = fma(_1052, cbSceneParam._m0[5u].z, fma(_1051, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1050));
    float _1160 = fma(_1052, cbSceneParam._m0[6u].z, fma(_1051, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1050));
    float _1163 = fma(_1052, cbSceneParam._m0[7u].z, fma(_1051, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1050));
    uint _1176 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1177 = _1176 + 9u;
    uint _1178 = _1177 + uint(cbMatDynParam._m0[0u].w);
    float _1184 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0)))) * cbInstanceData._m0[_1178].x;
    float _1185 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0)))) * cbInstanceData._m0[_1178].y;
    float _1186 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0)))) * cbInstanceData._m0[_1178].z;
    float _4376 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
    float _1187 = isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0));
    float _4387 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
    float _1188 = isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0));
    float _4398 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
    float _1189 = isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0));
    float _1190 = 1.0 - _1057;
    float _1191 = _1187 * _1190;
    float _1192 = _1188 * _1190;
    float _1193 = _1189 * _1190;
    float _1198 = (_1187 + (-0.039999999105930328369140625)) * _1057;
    float _1199 = (_1188 + (-0.039999999105930328369140625)) * _1057;
    float _1200 = (_1189 + (-0.039999999105930328369140625)) * _1057;
    float _1201 = _1198 + 0.039999999105930328369140625;
    float _1203 = _1199 + 0.039999999105930328369140625;
    float _1204 = _1200 + 0.039999999105930328369140625;
    vec4 _1213 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1138, cbSceneParam._m0[86u].y * _1139));
    float _1216 = _1213.x * TEXCOORD_3.w;
    float _1217 = dot(vec3(_1050, _1051, _1052), vec3(_1130, _1131, _1132));
    float _1220 = _1217 * 2.0;
    float _1224 = (_1220 * _1050) - _1130;
    float _1225 = (_1220 * _1051) - _1131;
    float _1226 = (_1220 * _1052) - _1132;
    float _1230 = abs(dot(vec3(_1130, _1131, _1132), vec3(_1050, _1051, _1052)));
    float _4409 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
    float _1232 = sqrt(_1053);
    float _1243 = exp2((_1232 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1232 * 3.0));
    float _1249 = (1.0 - _1243) * ((_1232 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1250 = _1243 * _1232;
    float _1278 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1282 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1286 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1585;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1312 = fma(_1286, cbModelParam._m0[26u].z, fma(_1282, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1278));
        float _1316 = fma(_1286, cbModelParam._m0[27u].z, fma(_1282, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1278));
        float _1320 = fma(_1286, cbModelParam._m0[28u].z, fma(_1282, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1278));
        float _1344 = _1278 + _1050;
        float _1345 = _1282 + _1051;
        float _1346 = _1286 + _1052;
        float _1356 = fma(_1346, cbModelParam._m0[26u].z, fma(_1345, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1344)) - _1312;
        float _1357 = fma(_1346, cbModelParam._m0[27u].z, fma(_1345, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1344)) - _1316;
        float _1358 = fma(_1346, cbModelParam._m0[28u].z, fma(_1345, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1344)) - _1320;
        float _1362 = inversesqrt(dot(vec3(_1356, _1357, _1358), vec3(_1356, _1357, _1358)));
        float _1374 = ((_1362 * _1356) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1312 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1375 = ((_1362 * _1357) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1316 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1376 = ((_1362 * _1358) / cbModelParam._m0[34u].z) + ((((((_1320 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1379 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1374, _1375, _1376), 0.0);
        vec4 _1386 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1374, _1375, _1376), 0.0);
        vec4 _1393 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1374, _1375, _1376), 0.0);
        vec4 _1400 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1374, _1375, _1376), 0.0);
        float _1413 = exp2((_1379.w + (-0.5)) * 20.0) * 2.0;
        float _1414 = _1413 * (_1379.x + (-0.5));
        float _1415 = _1413 * (_1379.y + (-0.5));
        float _1416 = _1413 * (_1379.z + (-0.5));
        float _1423 = exp2((_1386.w + (-0.5)) * 20.0) * 2.0;
        float _1424 = _1423 * (_1386.x + (-0.5));
        float _1425 = _1423 * (_1386.y + (-0.5));
        float _1426 = _1423 * (_1386.z + (-0.5));
        float _1433 = exp2((_1393.w + (-0.5)) * 20.0) * 2.0;
        float _1434 = _1433 * (_1393.x + (-0.5));
        float _1435 = _1433 * (_1393.y + (-0.5));
        float _1436 = _1433 * (_1393.z + (-0.5));
        float _1443 = exp2((_1400.w + (-0.5)) * 20.0) * 2.0;
        float _1444 = _1443 * (_1400.x + (-0.5));
        float _1445 = _1443 * (_1400.y + (-0.5));
        float _1446 = _1443 * (_1400.z + (-0.5));
        float _1447 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1448 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1449 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1450 = _1414 * 0.5;
        float _1451 = _1424 * 0.5;
        float _1452 = _1434 * 0.5;
        float _1453 = dot(vec3(_1450, _1451, _1452), vec3(_1450, _1451, _1452));
        float _1458 = (_1453 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1453);
        float _1467 = (dot(vec3(_1050, _1051, _1052), vec3(_1458 * _1450, _1458 * _1451, _1458 * _1452)) + 1.0) * 0.5;
        float _4435 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1477 = sqrt(((_1451 * _1451) + (_1450 * _1450)) + (_1452 * _1452)) / (_1447 + 9.9999997473787516355514526367188e-06);
        float _4446 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1478 = isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0));
        float _1479 = _1478 * 2.0;
        float _1483 = (1.0 - _1478) / (_1478 + 1.0);
        float _4457 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1484 = isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0));
        float _1493 = ((((1.0 - _1484) * (_1479 + 2.0)) * exp2(log2(isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0))) * (_1479 + 1.0))) + _1484) * _1447;
        float _1494 = _1415 * 0.5;
        float _1495 = _1425 * 0.5;
        float _1496 = _1435 * 0.5;
        float _1497 = dot(vec3(_1494, _1495, _1496), vec3(_1494, _1495, _1496));
        float _1502 = (_1497 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1497);
        float _1510 = (dot(vec3(_1050, _1051, _1052), vec3(_1502 * _1494, _1502 * _1495, _1502 * _1496)) + 1.0) * 0.5;
        float _4468 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
        float _1519 = sqrt(((_1495 * _1495) + (_1494 * _1494)) + (_1496 * _1496)) / (_1448 + 9.9999997473787516355514526367188e-06);
        float _4479 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
        float _1520 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
        float _1521 = _1520 * 2.0;
        float _1525 = (1.0 - _1520) / (_1520 + 1.0);
        float _4490 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
        float _1526 = isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0));
        float _1535 = ((((1.0 - _1526) * (_1521 + 2.0)) * exp2(log2(isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0))) * (_1521 + 1.0))) + _1526) * _1448;
        float _1536 = _1416 * 0.5;
        float _1537 = _1426 * 0.5;
        float _1538 = _1436 * 0.5;
        float _1539 = dot(vec3(_1536, _1537, _1538), vec3(_1536, _1537, _1538));
        float _1544 = (_1539 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1539);
        float _1552 = (dot(vec3(_1050, _1051, _1052), vec3(_1544 * _1536, _1544 * _1537, _1544 * _1538)) + 1.0) * 0.5;
        float _4501 = isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0));
        float _1561 = sqrt(((_1537 * _1537) + (_1536 * _1536)) + (_1538 * _1538)) / (_1449 + 9.9999997473787516355514526367188e-06);
        float _4512 = isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0));
        float _1562 = isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0));
        float _1563 = _1562 * 2.0;
        float _1567 = (1.0 - _1562) / (_1562 + 1.0);
        float _4523 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
        float _1568 = isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0));
        float _1577 = ((((1.0 - _1568) * (_1563 + 2.0)) * exp2(log2(isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0))) * (_1563 + 1.0))) + _1568) * _1449;
        _1585 = _1416;
        _1587 = _1415;
        _1588 = _1414;
        _1589 = _1426;
        _1590 = _1425;
        _1591 = _1424;
        _1592 = _1436;
        _1593 = _1435;
        _1594 = _1434;
        _1595 = _1449;
        _1596 = _1448;
        _1597 = _1447;
        _1598 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0)));
        _1599 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0)));
        _1600 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0)));
    }
    else
    {
        _1585 = _1586;
        _1587 = _1586;
        _1588 = _1586;
        _1589 = _1586;
        _1590 = _1586;
        _1591 = _1586;
        _1592 = _1586;
        _1593 = _1586;
        _1594 = _1586;
        _1595 = _1586;
        _1596 = _1586;
        _1597 = _1586;
        _1598 = 0.0;
        _1599 = 0.0;
        _1600 = 0.0;
    }
    float _1892;
    float _1893;
    float _1894;
    float _1895;
    float _1896;
    float _1897;
    float _1898;
    float _1899;
    float _1900;
    float _1901;
    float _1902;
    float _1903;
    float _1904;
    float _1905;
    float _1906;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1623 = fma(_1286, cbModelParam._m0[30u].z, fma(_1282, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1278));
        float _1627 = fma(_1286, cbModelParam._m0[31u].z, fma(_1282, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1278));
        float _1631 = fma(_1286, cbModelParam._m0[32u].z, fma(_1282, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1278));
        float _1654 = _1278 + _1050;
        float _1655 = _1282 + _1051;
        float _1656 = _1286 + _1052;
        float _1666 = fma(_1656, cbModelParam._m0[30u].z, fma(_1655, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1654)) - _1623;
        float _1667 = fma(_1656, cbModelParam._m0[31u].z, fma(_1655, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1654)) - _1627;
        float _1668 = fma(_1656, cbModelParam._m0[32u].z, fma(_1655, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1654)) - _1631;
        float _1672 = inversesqrt(dot(vec3(_1666, _1667, _1668), vec3(_1666, _1667, _1668)));
        float _1685 = ((_1672 * _1666) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1623 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1686 = ((_1672 * _1667) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1627 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1687 = ((_1672 * _1668) / cbModelParam._m0[35u].z) + ((((((_1631 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1689 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1685, _1686, _1687), 0.0);
        vec4 _1696 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1685, _1686, _1687), 0.0);
        vec4 _1703 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1685, _1686, _1687), 0.0);
        vec4 _1710 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1685, _1686, _1687), 0.0);
        float _1722 = exp2((_1689.w + (-0.5)) * 20.0) * 2.0;
        float _1723 = _1722 * (_1689.x + (-0.5));
        float _1724 = _1722 * (_1689.y + (-0.5));
        float _1725 = _1722 * (_1689.z + (-0.5));
        float _1732 = exp2((_1696.w + (-0.5)) * 20.0) * 2.0;
        float _1733 = _1732 * (_1696.x + (-0.5));
        float _1734 = _1732 * (_1696.y + (-0.5));
        float _1735 = _1732 * (_1696.z + (-0.5));
        float _1742 = exp2((_1703.w + (-0.5)) * 20.0) * 2.0;
        float _1743 = _1742 * (_1703.x + (-0.5));
        float _1744 = _1742 * (_1703.y + (-0.5));
        float _1745 = _1742 * (_1703.z + (-0.5));
        float _1752 = exp2((_1710.w + (-0.5)) * 20.0) * 2.0;
        float _1753 = _1752 * (_1710.x + (-0.5));
        float _1754 = _1752 * (_1710.y + (-0.5));
        float _1755 = _1752 * (_1710.z + (-0.5));
        float _1756 = isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0));
        float _1757 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
        float _1758 = isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0));
        float _1759 = _1723 * 0.5;
        float _1760 = _1733 * 0.5;
        float _1761 = _1743 * 0.5;
        float _1762 = dot(vec3(_1759, _1760, _1761), vec3(_1759, _1760, _1761));
        float _1767 = (_1762 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1762);
        float _1775 = (dot(vec3(_1050, _1051, _1052), vec3(_1767 * _1759, _1767 * _1760, _1767 * _1761)) + 1.0) * 0.5;
        float _4564 = isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0));
        float _1784 = sqrt(((_1760 * _1760) + (_1759 * _1759)) + (_1761 * _1761)) / (_1756 + 9.9999997473787516355514526367188e-06);
        float _4575 = isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0));
        float _1785 = isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0));
        float _1786 = _1785 * 2.0;
        float _1790 = (1.0 - _1785) / (_1785 + 1.0);
        float _4586 = isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0));
        float _1791 = isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0));
        float _1800 = ((((1.0 - _1791) * (_1786 + 2.0)) * exp2(log2(isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0))) * (_1786 + 1.0))) + _1791) * _1756;
        float _1801 = _1724 * 0.5;
        float _1802 = _1734 * 0.5;
        float _1803 = _1744 * 0.5;
        float _1804 = dot(vec3(_1801, _1802, _1803), vec3(_1801, _1802, _1803));
        float _1809 = (_1804 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1804);
        float _1817 = (dot(vec3(_1050, _1051, _1052), vec3(_1809 * _1801, _1809 * _1802, _1809 * _1803)) + 1.0) * 0.5;
        float _4597 = isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0));
        float _1826 = sqrt(((_1802 * _1802) + (_1801 * _1801)) + (_1803 * _1803)) / (_1757 + 9.9999997473787516355514526367188e-06);
        float _4608 = isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0));
        float _1827 = isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0));
        float _1828 = _1827 * 2.0;
        float _1832 = (1.0 - _1827) / (_1827 + 1.0);
        float _4619 = isnan(0.0) ? _1832 : (isnan(_1832) ? 0.0 : max(_1832, 0.0));
        float _1833 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
        float _1842 = ((((1.0 - _1833) * (_1828 + 2.0)) * exp2(log2(isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0))) * (_1828 + 1.0))) + _1833) * _1757;
        float _1843 = _1725 * 0.5;
        float _1844 = _1735 * 0.5;
        float _1845 = _1745 * 0.5;
        float _1846 = dot(vec3(_1843, _1844, _1845), vec3(_1843, _1844, _1845));
        float _1851 = (_1846 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1846);
        float _1859 = (dot(vec3(_1050, _1051, _1052), vec3(_1851 * _1843, _1851 * _1844, _1851 * _1845)) + 1.0) * 0.5;
        float _4630 = isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0));
        float _1868 = sqrt(((_1844 * _1844) + (_1843 * _1843)) + (_1845 * _1845)) / (_1758 + 9.9999997473787516355514526367188e-06);
        float _4641 = isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0));
        float _1869 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
        float _1870 = _1869 * 2.0;
        float _1874 = (1.0 - _1869) / (_1869 + 1.0);
        float _4652 = isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0));
        float _1875 = isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0));
        float _1884 = ((((1.0 - _1875) * (_1870 + 2.0)) * exp2(log2(isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0))) * (_1870 + 1.0))) + _1875) * _1758;
        _1892 = _1725;
        _1893 = _1724;
        _1894 = _1723;
        _1895 = _1735;
        _1896 = _1734;
        _1897 = _1733;
        _1898 = _1745;
        _1899 = _1744;
        _1900 = _1743;
        _1901 = _1758;
        _1902 = _1757;
        _1903 = _1756;
        _1904 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0)));
        _1905 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0)));
        _1906 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0)));
    }
    else
    {
        _1892 = _1586;
        _1893 = _1586;
        _1894 = _1586;
        _1895 = _1586;
        _1896 = _1586;
        _1897 = _1586;
        _1898 = _1586;
        _1899 = _1586;
        _1900 = _1586;
        _1901 = _1586;
        _1902 = _1586;
        _1903 = _1586;
        _1904 = 0.0;
        _1905 = 0.0;
        _1906 = 0.0;
    }
    float _1916 = (cbModelParam._m0[1u].x * (_1904 - _1598)) + _1598;
    float _1917 = (cbModelParam._m0[1u].x * (_1905 - _1599)) + _1599;
    float _1918 = (cbModelParam._m0[1u].x * (_1906 - _1600)) + _1600;
    float _1939 = fma(_1918, cbSceneParam._m0[89u].z, fma(_1917, cbSceneParam._m0[89u].y, _1916 * cbSceneParam._m0[89u].x));
    float _1942 = fma(_1918, cbSceneParam._m0[90u].z, fma(_1917, cbSceneParam._m0[90u].y, _1916 * cbSceneParam._m0[90u].x));
    float _1945 = fma(_1918, cbSceneParam._m0[91u].z, fma(_1917, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1916));
    float _1960 = _1224 * 0.5;
    float _1961 = _1225 * 0.5;
    float _1962 = _1226 * 0.5;
    float _1963 = dot(vec4(_1960, _1961, _1962, 1.0), vec4(_1894, _1897, _1900, _1903));
    float _1966 = dot(vec4(_1960, _1961, _1962, 1.0), vec4(_1893, _1896, _1899, _1902));
    float _1969 = dot(vec4(_1960, _1961, _1962, 1.0), vec4(_1892, _1895, _1898, _1901));
    float _2003;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1976 = dot(vec4(_1960, _1961, _1962, 1.0), vec4(_1585, _1589, _1592, _1595));
        float _1980 = dot(vec4(_1960, _1961, _1962, 1.0), vec4(_1587, _1590, _1593, _1596));
        float _1984 = dot(vec4(_1960, _1961, _1962, 1.0), vec4(_1588, _1591, _1594, _1597));
        float _1991 = dot(vec4(cbModelParam._m0[39u]), vec4(_1960, _1961, _1962, 1.0));
        _2003 = dot(vec3(isnan(0.0) ? _1984 : (isnan(_1984) ? 0.0 : max(_1984, 0.0)), isnan(0.0) ? _1980 : (isnan(_1980) ? 0.0 : max(_1980, 0.0)), isnan(0.0) ? _1976 : (isnan(_1976) ? 0.0 : max(_1976, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1991) ? 0.0 : (isnan(0.0) ? _1991 : max(0.0, _1991))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2003 = 1.0;
    }
    float _2014;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2005 = dot(vec4(cbModelParam._m0[40u]), vec4(_1960, _1961, _1962, 1.0));
        _2014 = dot(vec3(isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0)), isnan(0.0) ? _1966 : (isnan(_1966) ? 0.0 : max(_1966, 0.0)), isnan(0.0) ? _1969 : (isnan(_1969) ? 0.0 : max(_1969, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2005) ? 0.0 : (isnan(0.0) ? _2005 : max(0.0, _2005))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2014 = 1.0;
    }
    float _2018 = (_2014 * cbModelParam._m0[1u].x) + (_2003 * (1.0 - cbModelParam._m0[1u].x));
    float _2028 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1053);
    float _2029 = isnan(_2028) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2028 : min(cbModelParam._m0[25u].z, _2028));
    float _2109;
    float _2111;
    float _2113;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2076 = fma(_1286, cbModelParam._m0[13u].z, fma(_1282, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1278)) + cbModelParam._m0[13u].w;
        float _2080 = fma(_1286, cbModelParam._m0[14u].z, fma(_1282, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1278)) + cbModelParam._m0[14u].w;
        float _2084 = fma(_1286, cbModelParam._m0[15u].z, fma(_1282, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1278)) + cbModelParam._m0[15u].w;
        float _2087 = fma(_1226, cbModelParam._m0[13u].z, fma(_1225, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1224));
        float _2090 = fma(_1226, cbModelParam._m0[14u].z, fma(_1225, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1224));
        float _2093 = fma(_1226, cbModelParam._m0[15u].z, fma(_1225, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1224));
        float _2121;
        if (_2087 > 0.0)
        {
            _2121 = abs((1.0 - _2076) / _2087);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2087 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2076 + 1.0) / _2087);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2121 = frontier_phi_14_12_ladder;
        }
        float _2292;
        if (_2090 > 0.0)
        {
            _2292 = abs((1.0 - _2080) / _2090);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2090 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2080 + 1.0) / _2090);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2292 = frontier_phi_23_19_ladder;
        }
        float _2586;
        if (_2093 > 0.0)
        {
            _2586 = abs((1.0 - _2084) / _2093);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2093 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2084 + 1.0) / _2093);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2586 = frontier_phi_35_30_ladder;
        }
        float _2588 = isnan(_2292) ? _2121 : (isnan(_2121) ? _2292 : min(_2121, _2292));
        float _2589 = isnan(_2586) ? _2588 : (isnan(_2588) ? _2586 : min(_2588, _2586));
        float _2593 = (_2589 * _2087) + _2076;
        float _2594 = (_2589 * _2090) + _2080;
        float _2595 = (_2589 * _2093) + _2084;
        float _2596 = _2589 * 9.9999997473787516355514526367188e-05;
        float _2598 = (-1.0) - _2596;
        float _2600 = _2596 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2595 > _2600) || ((_2595 < _2598) || ((_2594 > _2600) || ((_2594 < _2598) || ((_2593 < _2598) || (_2593 > _2600))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2740 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2595, cbModelParam._m0[9u].z, fma(_2594, cbModelParam._m0[9u].y, _2593 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2595, cbModelParam._m0[10u].z, fma(_2594, cbModelParam._m0[10u].y, _2593 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2595, cbModelParam._m0[11u].z, fma(_2594, cbModelParam._m0[11u].y, _2593 * cbModelParam._m0[11u].x))), _2029);
            frontier_phi_13_35_ladder = _2740.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2740.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2740.x * cbModelParam._m0[1u].y;
        }
        _2109 = frontier_phi_13_35_ladder_2;
        _2111 = frontier_phi_13_35_ladder_1;
        _2113 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2097 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1224, _1225, _1226), _2029);
        _2109 = _2097.x * cbModelParam._m0[1u].y;
        _2111 = _2097.y * cbModelParam._m0[1u].y;
        _2113 = _2097.z * cbModelParam._m0[1u].y;
    }
    float _2117 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1053);
    float _2118 = isnan(_2117) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2117 : min(cbModelParam._m0[25u].w, _2117));
    float _2207;
    float _2209;
    float _2211;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2171 = fma(_1286, cbModelParam._m0[21u].z, fma(_1282, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1278)) + cbModelParam._m0[21u].w;
        float _2175 = fma(_1286, cbModelParam._m0[22u].z, fma(_1282, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1278)) + cbModelParam._m0[22u].w;
        float _2179 = fma(_1286, cbModelParam._m0[23u].z, fma(_1282, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1278)) + cbModelParam._m0[23u].w;
        float _2182 = fma(_1226, cbModelParam._m0[21u].z, fma(_1225, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1224));
        float _2185 = fma(_1226, cbModelParam._m0[22u].z, fma(_1225, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1224));
        float _2188 = fma(_1226, cbModelParam._m0[23u].z, fma(_1225, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1224));
        float _2297;
        if (_2182 > 0.0)
        {
            _2297 = abs((1.0 - _2171) / _2182);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2182 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2171 + 1.0) / _2182);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2297 = frontier_phi_25_21_ladder;
        }
        float _2613;
        if (_2185 > 0.0)
        {
            _2613 = abs((1.0 - _2175) / _2185);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2185 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2175 + 1.0) / _2185);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2613 = frontier_phi_37_32_ladder;
        }
        float _2951;
        if (_2188 > 0.0)
        {
            _2951 = abs((1.0 - _2179) / _2188);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2188 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2179 + 1.0) / _2188);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2951 = frontier_phi_47_44_ladder;
        }
        float _2953 = isnan(_2613) ? _2297 : (isnan(_2297) ? _2613 : min(_2297, _2613));
        float _2954 = isnan(_2951) ? _2953 : (isnan(_2953) ? _2951 : min(_2953, _2951));
        float _2958 = (_2954 * _2182) + _2171;
        float _2959 = (_2954 * _2185) + _2175;
        float _2960 = (_2954 * _2188) + _2179;
        float _2961 = _2954 * 9.9999997473787516355514526367188e-05;
        float _2962 = (-1.0) - _2961;
        float _2964 = _2961 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2960 > _2964) || ((_2960 < _2962) || ((_2959 > _2964) || ((_2959 < _2962) || ((_2958 < _2962) || (_2958 > _2964))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3082 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2960, cbModelParam._m0[17u].z, fma(_2959, cbModelParam._m0[17u].y, _2958 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2960, cbModelParam._m0[18u].z, fma(_2959, cbModelParam._m0[18u].y, _2958 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2960, cbModelParam._m0[19u].z, fma(_2959, cbModelParam._m0[19u].y, _2958 * cbModelParam._m0[19u].x))), _2118);
            frontier_phi_22_47_ladder = _3082.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3082.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3082.x * cbModelParam._m0[1u].z;
        }
        _2207 = frontier_phi_22_47_ladder_2;
        _2209 = frontier_phi_22_47_ladder_1;
        _2211 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2191 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1224, _1225, _1226), _2118);
        _2207 = _2191.x * cbModelParam._m0[1u].z;
        _2209 = _2191.y * cbModelParam._m0[1u].z;
        _2211 = _2191.z * cbModelParam._m0[1u].z;
    }
    float _2224 = (((_1249 * _1201) + _1250) * _1216) * ((cbModelParam._m0[1u].w * (_2207 - _2109)) + _2109);
    float _2226 = (((_1249 * _1203) + _1250) * _1216) * ((cbModelParam._m0[1u].w * (_2209 - _2111)) + _2111);
    float _2228 = (((_1249 * _1204) + _1250) * _1216) * ((cbModelParam._m0[1u].w * (_2211 - _2113)) + _2113);
    float _2231 = fma(_2228, cbSceneParam._m0[89u].z, fma(_2226, cbSceneParam._m0[89u].y, _2224 * cbSceneParam._m0[89u].x));
    float _2234 = fma(_2228, cbSceneParam._m0[90u].z, fma(_2226, cbSceneParam._m0[90u].y, _2224 * cbSceneParam._m0[90u].x));
    float _2237 = fma(_2228, cbSceneParam._m0[91u].z, fma(_2226, cbSceneParam._m0[91u].y, _2224 * cbSceneParam._m0[91u].x));
    float _2271 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2275 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2279 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2283 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2284 = _2271 / _2283;
    float _2285 = _2275 / _2283;
    float _2286 = _2279 / _2283;
    float _2432;
    float _2433;
    float _2434;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2313 = ((uint(_2286 > cbSceneParam._m0[59u].y) + uint(_2286 > cbSceneParam._m0[59u].x)) + uint(_2286 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2314 = _2313 + 43u;
        uint _2322 = _2313 + 44u;
        uint _2330 = _2313 + 45u;
        uint _2338 = _2313 + 46u;
        float _2349 = fma(_2283, cbSceneParam._m0[_2314].w, fma(_2279, cbSceneParam._m0[_2314].z, fma(_2275, cbSceneParam._m0[_2314].y, _2271 * cbSceneParam._m0[_2314].x)));
        float _2353 = fma(_2283, cbSceneParam._m0[_2322].w, fma(_2279, cbSceneParam._m0[_2322].z, fma(_2275, cbSceneParam._m0[_2322].y, _2271 * cbSceneParam._m0[_2322].x)));
        float _2361 = fma(_2283, cbSceneParam._m0[_2338].w, fma(_2279, cbSceneParam._m0[_2338].z, fma(_2275, cbSceneParam._m0[_2338].y, _2271 * cbSceneParam._m0[_2338].x)));
        float _2365 = cbSceneParam._m0[33u].z * _2361;
        float _2367 = cbSceneParam._m0[33u].w * _2361;
        float _2370 = fma(_2283, cbSceneParam._m0[_2330].w, fma(_2279, cbSceneParam._m0[_2330].z, fma(_2275, cbSceneParam._m0[_2330].y, _2271 * cbSceneParam._m0[_2330].x))) / _2361;
        float _2418 = (cbSceneParam._m0[33u].x - sqrt(((_2285 * _2285) + (_2284 * _2284)) + (_2286 * _2286))) * cbSceneParam._m0[33u].y;
        float _4778 = isnan(0.0) ? _2418 : (isnan(_2418) ? 0.0 : max(_2418, 0.0));
        float _2425 = (isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2365 + _2349) / _2361, (_2367 + _2353) / _2361), _2370), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2367 + _2349) / _2361, (_2353 - _2365) / _2361), _2370), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2349 - _2365) / _2361, (_2353 - _2367) / _2361), _2370), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2349 - _2367) / _2361, (_2365 + _2353) / _2361), _2370), 0.0)).x), vec4(0.25)));
        _2432 = 1.0 - (_2425 * cbSceneParam._m0[34u].x);
        _2433 = 1.0 - (_2425 * cbSceneParam._m0[34u].y);
        _2434 = 1.0 - (_2425 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2432 = 1.0;
        _2433 = 1.0;
        _2434 = 1.0;
    }
    float _2498;
    float _2500;
    float _2502;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2486 = fma(_2283, cbSceneParam._m0[63u].w, fma(_2279, cbSceneParam._m0[63u].z, fma(_2275, cbSceneParam._m0[63u].y, _2271 * cbSceneParam._m0[63u].x)));
        float _2487 = fma(_2283, cbSceneParam._m0[60u].w, fma(_2279, cbSceneParam._m0[60u].z, fma(_2275, cbSceneParam._m0[60u].y, _2271 * cbSceneParam._m0[60u].x))) / _2486;
        float _2488 = fma(_2283, cbSceneParam._m0[61u].w, fma(_2279, cbSceneParam._m0[61u].z, fma(_2275, cbSceneParam._m0[61u].y, _2271 * cbSceneParam._m0[61u].x))) / _2486;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2487 >= cbSceneParam._m0[64u].x) && (_2488 >= cbSceneParam._m0[64u].y)) && (_2487 <= cbSceneParam._m0[64u].z)) && (_2488 <= cbSceneParam._m0[64u].w))
        {
            float _2626 = fma(_2283, cbSceneParam._m0[62u].w, fma(_2279, cbSceneParam._m0[62u].z, fma(_2275, cbSceneParam._m0[62u].y, _2271 * cbSceneParam._m0[62u].x))) / _2486;
            float _2630 = isnan(cbSceneParam._m0[41u].w) ? _2626 : (isnan(_2626) ? cbSceneParam._m0[41u].w : max(_2626, cbSceneParam._m0[41u].w));
            float _2673 = (cbSceneParam._m0[33u].x - sqrt(((_2285 * _2285) + (_2284 * _2284)) + (_2286 * _2286))) * cbSceneParam._m0[33u].y;
            float _4794 = isnan(0.0) ? _2673 : (isnan(_2673) ? 0.0 : max(_2673, 0.0));
            float _2680 = (isnan(1.0) ? _4794 : (isnan(_4794) ? 1.0 : min(_4794, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2487, cbSceneParam._m0[33u].w + _2488), _2630), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2487, _2488 - cbSceneParam._m0[33u].z), _2630), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2487 - cbSceneParam._m0[33u].z, _2488 - cbSceneParam._m0[33u].w), _2630), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2487 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2488), _2630), 0.0)).x), vec4(0.25)));
            float _2684 = 1.0 - (_2680 * cbSceneParam._m0[34u].x);
            float _2685 = 1.0 - (_2680 * cbSceneParam._m0[34u].y);
            float _2686 = 1.0 - (_2680 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2686) ? _2434 : (isnan(_2434) ? _2686 : min(_2434, _2686));
            frontier_phi_34_33_ladder_1 = isnan(_2685) ? _2433 : (isnan(_2433) ? _2685 : min(_2433, _2685));
            frontier_phi_34_33_ladder_2 = isnan(_2684) ? _2432 : (isnan(_2432) ? _2684 : min(_2432, _2684));
        }
        else
        {
            frontier_phi_34_33_ladder = _2434;
            frontier_phi_34_33_ladder_1 = _2433;
            frontier_phi_34_33_ladder_2 = _2432;
        }
        _2498 = frontier_phi_34_33_ladder_2;
        _2500 = frontier_phi_34_33_ladder_1;
        _2502 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2498 = _2432;
        _2500 = _2433;
        _2502 = _2434;
    }
    uvec4 _2507 = floatBitsToUint(cbInstanceData._m0[_1176 + 5u]);
    uint _2509 = _2507.x * 14u;
    uint _2510 = _2509 + 13u;
    float _2517 = _1216 + (-1.0);
    float _2522 = (cbLight._m0[_2510].x * _2517) + 1.0;
    float _2523 = (cbLight._m0[_2510].y * _2517) + 1.0;
    float _2524 = (cbLight._m0[_2510].z * _2517) + 1.0;
    float _2525 = (cbLight._m0[_2510].w * _2517) + 1.0;
    uint _2526 = _2509 + 5u;
    float _2532 = isnan(1.0) ? _2523 : (isnan(_2523) ? 1.0 : min(_2523, 1.0));
    uint _2536 = _2509 + 4u;
    float _2545 = isnan(1.0) ? _2522 : (isnan(_2522) ? 1.0 : min(_2522, 1.0));
    uint _2549 = _2509 | 1u;
    float _2560 = dot(vec3(cbLight._m0[_2509].xyz), vec3(_1050, _1051, _1052));
    float _2563 = dot(vec3(cbLight._m0[_2549].xyz), vec3(_1050, _1051, _1052));
    float _4830 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
    float _4841 = isnan(0.0) ? _2563 : (isnan(_2563) ? 0.0 : max(_2563, 0.0));
    float _2568 = (isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0))) * 0.3183098733425140380859375;
    float _2570 = (isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0))) * 0.3183098733425140380859375;
    float _2577 = ((cbLight._m0[_2526].x * _2532) * _2570) + (((cbLight._m0[_2536].x * _2498) * _2545) * _2568);
    float _2578 = ((_2532 * cbLight._m0[_2526].y) * _2570) + (((cbLight._m0[_2536].y * _2500) * _2545) * _2568);
    float _2579 = ((_2532 * cbLight._m0[_2526].z) * _2570) + (((cbLight._m0[_2536].z * _2502) * _2545) * _2568);
    uvec4 _2583 = floatBitsToUint(cbLight._m0[_2509 + 12u]);
    bool _2585 = _2583.x == 0u;
    float _2687;
    float _2689;
    float _2691;
    if (_2585)
    {
        _2687 = _2577;
        _2689 = _2578;
        _2691 = _2579;
    }
    else
    {
        uint _2695 = _2509 + 6u;
        float _2711 = (dot(vec3(cbLight._m0[_2509 + 2u].xyz), vec3(_1050, _1051, _1052)) * 0.5) + 0.5;
        float _2712 = _2711 * _2711;
        float _4852 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
        float _2713 = isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0));
        float _2714 = isnan(1.0) ? _2524 : (isnan(_2524) ? 1.0 : min(_2524, 1.0));
        _2687 = (((cbLight._m0[_2695].x * 0.3183098733425140380859375) * _2713) * _2714) + _2577;
        _2689 = (((cbLight._m0[_2695].y * 0.3183098733425140380859375) * _2713) * _2714) + _2578;
        _2691 = (((cbLight._m0[_2695].z * 0.3183098733425140380859375) * _2713) * _2714) + _2579;
    }
    bool _2694 = _2583.y == 0u;
    float _2749;
    float _2751;
    float _2753;
    if (_2694)
    {
        _2749 = _2687;
        _2751 = _2689;
        _2753 = _2691;
    }
    else
    {
        uint _2922 = _2509 + 7u;
        float _2938 = (dot(vec3(cbLight._m0[_2509 + 3u].xyz), vec3(_1050, _1051, _1052)) * 0.5) + 0.5;
        float _2939 = _2938 * _2938;
        float _4868 = isnan(0.0) ? _2939 : (isnan(_2939) ? 0.0 : max(_2939, 0.0));
        float _2940 = isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0));
        float _2941 = isnan(1.0) ? _2525 : (isnan(_2525) ? 1.0 : min(_2525, 1.0));
        _2749 = (((cbLight._m0[_2922].x * 0.3183098733425140380859375) * _2940) * _2941) + _2687;
        _2751 = (((cbLight._m0[_2922].y * 0.3183098733425140380859375) * _2940) * _2941) + _2689;
        _2753 = (((cbLight._m0[_2922].z * 0.3183098733425140380859375) * _2940) * _2941) + _2691;
    }
    uint _2756 = _2509 + 8u;
    float _2769 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2509].w)) * _1053) * 0.949999988079071044921875);
    float _2770 = _2769 * _2769;
    float _2771 = cbLight._m0[_2509].x + _1130;
    float _2772 = cbLight._m0[_2509].y + _1131;
    float _2773 = cbLight._m0[_2509].z + _1132;
    float _2777 = inversesqrt(dot(vec3(_2771, _2772, _2773), vec3(_2771, _2772, _2773)));
    float _2778 = _2777 * _2771;
    float _2779 = _2777 * _2772;
    float _2780 = _2777 * _2773;
    float _2781 = dot(vec3(_1050, _1051, _1052), vec3(cbLight._m0[_2509].xyz));
    float _4884 = isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : max(_2781, 0.0));
    float _2784 = isnan(1.0) ? _4884 : (isnan(_4884) ? 1.0 : min(_4884, 1.0));
    float _4895 = isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0));
    float _2785 = isnan(1.0) ? _4895 : (isnan(_4895) ? 1.0 : min(_4895, 1.0));
    float _2786 = dot(vec3(_1050, _1051, _1052), vec3(_2778, _2779, _2780));
    float _4906 = isnan(0.0) ? _2786 : (isnan(_2786) ? 0.0 : max(_2786, 0.0));
    float _2789 = isnan(1.0) ? _4906 : (isnan(_4906) ? 1.0 : min(_4906, 1.0));
    float _2790 = dot(vec3(cbLight._m0[_2509].xyz), vec3(_2778, _2779, _2780));
    float _4917 = isnan(0.0) ? _2790 : (isnan(_2790) ? 0.0 : max(_2790, 0.0));
    float _2794 = _2770 * _2770;
    float _2798 = ((_2789 * _2789) * (_2794 + (-1.0))) + 1.0;
    float _2806 = exp2(log2(1.0 - (isnan(1.0) ? _4917 : (isnan(_4917) ? 1.0 : min(_4917, 1.0)))) * 5.0);
    float _2807 = 0.959999978542327880859375 - _1198;
    float _2809 = 0.959999978542327880859375 - _1199;
    float _2810 = 0.959999978542327880859375 - _1200;
    float _2817 = 1.0 - _2770;
    float _2828 = (0.5 / (((_2785 * ((_2784 * _2817) + _2770)) + 9.9999999392252902907785028219223e-09) + (((_2785 * _2817) + _2770) * _2784))) * _2784;
    float _4928 = isnan(0.0) ? _2828 : (isnan(_2828) ? 0.0 : max(_2828, 0.0));
    float _2830 = (isnan(1.0) ? _4928 : (isnan(_4928) ? 1.0 : min(_4928, 1.0))) * (_2794 / ((_2798 * _2798) * 3.141590118408203125));
    uint _2844 = _2509 + 9u;
    float _2855 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2549].w)) * _1053) * 0.949999988079071044921875);
    float _2856 = _2855 * _2855;
    float _2857 = cbLight._m0[_2549].x + _1130;
    float _2858 = cbLight._m0[_2549].y + _1131;
    float _2859 = cbLight._m0[_2549].z + _1132;
    float _2863 = inversesqrt(dot(vec3(_2857, _2858, _2859), vec3(_2857, _2858, _2859)));
    float _2864 = _2863 * _2857;
    float _2865 = _2863 * _2858;
    float _2866 = _2863 * _2859;
    float _2867 = dot(vec3(_1050, _1051, _1052), vec3(cbLight._m0[_2549].xyz));
    float _4939 = isnan(0.0) ? _2867 : (isnan(_2867) ? 0.0 : max(_2867, 0.0));
    float _2870 = isnan(1.0) ? _4939 : (isnan(_4939) ? 1.0 : min(_4939, 1.0));
    float _2871 = dot(vec3(_1050, _1051, _1052), vec3(_2864, _2865, _2866));
    float _4950 = isnan(0.0) ? _2871 : (isnan(_2871) ? 0.0 : max(_2871, 0.0));
    float _2874 = isnan(1.0) ? _4950 : (isnan(_4950) ? 1.0 : min(_4950, 1.0));
    float _2875 = dot(vec3(cbLight._m0[_2549].xyz), vec3(_2864, _2865, _2866));
    float _4961 = isnan(0.0) ? _2875 : (isnan(_2875) ? 0.0 : max(_2875, 0.0));
    float _2879 = _2856 * _2856;
    float _2883 = ((_2874 * _2874) * (_2879 + (-1.0))) + 1.0;
    float _2890 = exp2(log2(1.0 - (isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0)))) * 5.0);
    float _2897 = 1.0 - _2856;
    float _2907 = (0.5 / (((_2785 * ((_2870 * _2897) + _2856)) + 9.9999999392252902907785028219223e-09) + (((_2785 * _2897) + _2856) * _2870))) * _2870;
    float _4972 = isnan(0.0) ? _2907 : (isnan(_2907) ? 0.0 : max(_2907, 0.0));
    float _2909 = (isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0))) * (_2879 / ((_2883 * _2883) * 3.141590118408203125));
    float _2919 = (((((_2890 * _2807) + _1201) * cbLight._m0[_2844].x) * _2909) * _2532) + ((((cbLight._m0[_2756].x * _2498) * ((_2806 * _2807) + _1201)) * _2830) * _2545);
    float _2920 = (((((_2890 * _2809) + _1203) * cbLight._m0[_2844].y) * _2909) * _2532) + ((((cbLight._m0[_2756].y * _2500) * ((_2806 * _2809) + _1203)) * _2830) * _2545);
    float _2921 = (((((_2890 * _2810) + _1204) * cbLight._m0[_2844].z) * _2909) * _2532) + ((((cbLight._m0[_2756].z * _2502) * ((_2806 * _2810) + _1204)) * _2830) * _2545);
    float _2977;
    float _2979;
    float _2981;
    if (_2585)
    {
        _2977 = _2919;
        _2979 = _2920;
        _2981 = _2921;
    }
    else
    {
        uint _2983 = _2509 + 2u;
        uint _2987 = _2509 + 10u;
        float _3001 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2983].w)) * _1053) * 0.949999988079071044921875);
        float _3002 = _3001 * _3001;
        float _3003 = cbLight._m0[_2983].x + _1130;
        float _3004 = cbLight._m0[_2983].y + _1131;
        float _3005 = cbLight._m0[_2983].z + _1132;
        float _3009 = inversesqrt(dot(vec3(_3003, _3004, _3005), vec3(_3003, _3004, _3005)));
        float _3010 = _3009 * _3003;
        float _3011 = _3009 * _3004;
        float _3012 = _3009 * _3005;
        float _3013 = dot(vec3(_1050, _1051, _1052), vec3(cbLight._m0[_2983].xyz));
        float _4983 = isnan(0.0) ? _3013 : (isnan(_3013) ? 0.0 : max(_3013, 0.0));
        float _3016 = isnan(1.0) ? _4983 : (isnan(_4983) ? 1.0 : min(_4983, 1.0));
        float _3017 = dot(vec3(_1050, _1051, _1052), vec3(_3010, _3011, _3012));
        float _4994 = isnan(0.0) ? _3017 : (isnan(_3017) ? 0.0 : max(_3017, 0.0));
        float _3020 = isnan(1.0) ? _4994 : (isnan(_4994) ? 1.0 : min(_4994, 1.0));
        float _3021 = dot(vec3(cbLight._m0[_2983].xyz), vec3(_3010, _3011, _3012));
        float _5005 = isnan(0.0) ? _3021 : (isnan(_3021) ? 0.0 : max(_3021, 0.0));
        float _3025 = _3002 * _3002;
        float _3029 = ((_3020 * _3020) * (_3025 + (-1.0))) + 1.0;
        float _3036 = exp2(log2(1.0 - (isnan(1.0) ? _5005 : (isnan(_5005) ? 1.0 : min(_5005, 1.0)))) * 5.0);
        float _3043 = 1.0 - _3002;
        float _3053 = (0.5 / (((_2785 * ((_3016 * _3043) + _3002)) + 9.9999999392252902907785028219223e-09) + (((_2785 * _3043) + _3002) * _3016))) * _3016;
        float _5016 = isnan(0.0) ? _3053 : (isnan(_3053) ? 0.0 : max(_3053, 0.0));
        float _3055 = (isnan(1.0) ? _5016 : (isnan(_5016) ? 1.0 : min(_5016, 1.0))) * (_3025 / ((_3029 * _3029) * 3.141590118408203125));
        float _3056 = isnan(1.0) ? _2524 : (isnan(_2524) ? 1.0 : min(_2524, 1.0));
        _2977 = (((((_3036 * _2807) + _1201) * cbLight._m0[_2987].x) * _3055) * _3056) + _2919;
        _2979 = (((((_3036 * _2809) + _1203) * cbLight._m0[_2987].y) * _3055) * _3056) + _2920;
        _2981 = (((((_3036 * _2810) + _1204) * cbLight._m0[_2987].z) * _3055) * _3056) + _2921;
    }
    float _3087;
    float _3089;
    float _3091;
    if (_2694)
    {
        _3087 = _2977;
        _3089 = _2979;
        _3091 = _2981;
    }
    else
    {
        uint _3098 = _2509 + 3u;
        uint _3102 = _2509 + 11u;
        float _3116 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3098].w)) * _1053) * 0.949999988079071044921875);
        float _3117 = _3116 * _3116;
        float _3118 = cbLight._m0[_3098].x + _1130;
        float _3119 = cbLight._m0[_3098].y + _1131;
        float _3120 = cbLight._m0[_3098].z + _1132;
        float _3124 = inversesqrt(dot(vec3(_3118, _3119, _3120), vec3(_3118, _3119, _3120)));
        float _3125 = _3124 * _3118;
        float _3126 = _3124 * _3119;
        float _3127 = _3124 * _3120;
        float _3128 = dot(vec3(_1050, _1051, _1052), vec3(cbLight._m0[_3098].xyz));
        float _5032 = isnan(0.0) ? _3128 : (isnan(_3128) ? 0.0 : max(_3128, 0.0));
        float _3131 = isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0));
        float _3132 = dot(vec3(_1050, _1051, _1052), vec3(_3125, _3126, _3127));
        float _5043 = isnan(0.0) ? _3132 : (isnan(_3132) ? 0.0 : max(_3132, 0.0));
        float _3135 = isnan(1.0) ? _5043 : (isnan(_5043) ? 1.0 : min(_5043, 1.0));
        float _3136 = dot(vec3(cbLight._m0[_3098].xyz), vec3(_3125, _3126, _3127));
        float _5054 = isnan(0.0) ? _3136 : (isnan(_3136) ? 0.0 : max(_3136, 0.0));
        float _3140 = _3117 * _3117;
        float _3144 = ((_3135 * _3135) * (_3140 + (-1.0))) + 1.0;
        float _3151 = exp2(log2(1.0 - (isnan(1.0) ? _5054 : (isnan(_5054) ? 1.0 : min(_5054, 1.0)))) * 5.0);
        float _3158 = 1.0 - _3117;
        float _3168 = (0.5 / (((_2785 * ((_3131 * _3158) + _3117)) + 9.9999999392252902907785028219223e-09) + (((_2785 * _3158) + _3117) * _3131))) * _3131;
        float _5065 = isnan(0.0) ? _3168 : (isnan(_3168) ? 0.0 : max(_3168, 0.0));
        float _3170 = (isnan(1.0) ? _5065 : (isnan(_5065) ? 1.0 : min(_5065, 1.0))) * (_3140 / ((_3144 * _3144) * 3.141590118408203125));
        float _3171 = isnan(1.0) ? _2525 : (isnan(_2525) ? 1.0 : min(_2525, 1.0));
        _3087 = (((((_3151 * _2807) + _1201) * cbLight._m0[_3102].x) * _3170) * _3171) + _2977;
        _3089 = (((((_3151 * _2809) + _1203) * cbLight._m0[_3102].y) * _3170) * _3171) + _2979;
        _3091 = (((((_3151 * _2810) + _1204) * cbLight._m0[_3102].z) * _3170) * _3171) + _2981;
    }
    float _3237;
    float _3239;
    float _3241;
    float _3243;
    float _3245;
    float _3247;
    if (_2507.y == 0u)
    {
        uvec4 _3192 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3193 = _3192.x;
        uint _3204 = uint((float(_3192.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1139) / _3193))) + floor(float(uint(cbSceneParam._m0[85u].x * _1138) / _3193)));
        float _3214 = (log2(_2286 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3215 = isnan(0.0) ? _3214 : (isnan(_3214) ? 0.0 : max(_3214, 0.0));
        uint _3218 = uint(isnan(14.0) ? _3215 : (isnan(_3215) ? 14.0 : min(_3215, 14.0)));
        uvec4 _3223 = texelFetch(g_lightClusterGridBuffer, int(((_3218 << 2u) + (_3204 << 6u)) >> 2u));
        uint _3224 = _3223.x;
        uint _3225 = _3192.z;
        float _3333;
        float _3335;
        float _3337;
        float _3339;
        float _3341;
        float _3343;
        if (((((1u << ((_3225 >> 4u) & 15u)) + 4294967295u) & _3224) == 0u) || ((_3225 & 240u) == 0u))
        {
            _3333 = 0.0;
            _3335 = 0.0;
            _3337 = 0.0;
            _3339 = 0.0;
            _3341 = 0.0;
            _3343 = 0.0;
        }
        else
        {
            float _3334;
            float _3336;
            float _3338;
            float _3340;
            float _3342;
            float _3344;
            float _3486 = 0.0;
            float _3487 = 0.0;
            float _3488 = 0.0;
            float _3489 = 0.0;
            float _3490 = 0.0;
            float _3491 = 0.0;
            uint _3492 = 0u;
            uint _3501;
            bool _3502;
            for (;;)
            {
                _3501 = texelFetch(g_lightClassification, int((((_3218 << 5u) + (_3204 << 9u)) + (_3492 << 2u)) >> 2u)).x;
                _3502 = _3501 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3502)
                {
                    frontier_phi_66_pred = _3491;
                    frontier_phi_66_pred_1 = _3490;
                    frontier_phi_66_pred_2 = _3489;
                    frontier_phi_66_pred_3 = _3488;
                    frontier_phi_66_pred_4 = _3487;
                    frontier_phi_66_pred_5 = _3486;
                }
                else
                {
                    float _3610;
                    float _3611;
                    float _3612;
                    float _3613;
                    float _3614;
                    float _3615;
                    uint _3616;
                    _3610 = _3486;
                    _3611 = _3487;
                    _3612 = _3488;
                    _3613 = _3489;
                    _3614 = _3490;
                    _3615 = _3491;
                    _3616 = _3501;
                    float _3542;
                    float _3543;
                    float _3544;
                    float _3545;
                    float _3546;
                    float _3547;
                    for (;;)
                    {
                        uint _3620 = uint(findLSB(_3616)) + (_3492 << 5u);
                        uint _3617 = (_3616 + 4294967295u) & _3616;
                        uint _3622 = _3620 * 48u;
                        vec4 _3636 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3622)).x, texelFetch(g_PointLightRenderingBuffer, int(_3622 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3622 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3622 + 3u)).x));
                        uint _3642 = (_3620 * 48u) + 4u;
                        vec4 _3655 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3642)).x, texelFetch(g_PointLightRenderingBuffer, int(_3642 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3642 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3642 + 3u)).x));
                        uint _3661 = (_3620 * 48u) + 8u;
                        vec3 _3672 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3661)).x, texelFetch(g_PointLightRenderingBuffer, int(_3661 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3661 + 2u)).x));
                        float _3676 = _3636.x - _2284;
                        float _3677 = _3636.y - _2285;
                        float _3678 = _3636.z - _2286;
                        float _3679 = dot(vec3(_3676, _3677, _3678), vec3(_3676, _3677, _3678));
                        float _3682 = inversesqrt(_3679);
                        float _3683 = _3682 * _3676;
                        float _3684 = _3682 * _3677;
                        float _3685 = _3682 * _3678;
                        float _3686 = dot(vec3(_1157, _1160, _1163), vec3(_3683, _3684, _3685));
                        float _3691 = 1.0 - (_3679 * _3636.w);
                        float _5091 = isnan(0.0) ? _3691 : (isnan(_3691) ? 0.0 : max(_3691, 0.0));
                        float _3692 = isnan(1.0) ? _5091 : (isnan(_5091) ? 1.0 : min(_5091, 1.0));
                        float _3693 = sqrt(_3679) * _3655.w;
                        float _3696 = 1.39999997615814208984375 / (_3693 + 1.39999997615814208984375);
                        float _3697 = _3696 * _3696;
                        float _3700 = ((1.0 - _3697) * _3686) + _3697;
                        float _3703 = _3693 * _3693;
                        float _3707 = ((isnan(0.0) ? _3700 : (isnan(_3700) ? 0.0 : max(_3700, 0.0))) * _3692) / ((_3703 * 0.699999988079071044921875) + 1.0);
                        float _3711 = (-0.0) - _2284;
                        float _3712 = (-0.0) - _2285;
                        float _3713 = (-0.0) - _2286;
                        float _3717 = inversesqrt(dot(vec3(_3711, _3712, _3713), vec3(_3711, _3712, _3713)));
                        float _3718 = _3717 * _3711;
                        float _3719 = _3717 * _3712;
                        float _3720 = _3717 * _3713;
                        float _3727 = exp2(log2(1.0 / ((_3703 * 3.5) + 5.0)) * 0.25);
                        float _3728 = 1.0 - _1232;
                        float _3735 = sqrt(1.0 - ((1.0 - (_3728 * _3728)) * (1.0 - (_3727 * _3727))));
                        float _3736 = _3735 * _3735;
                        float _3737 = _3736 * _3736;
                        float _3738 = _3718 + _3683;
                        float _3739 = _3719 + _3684;
                        float _3740 = _3720 + _3685;
                        float _3744 = inversesqrt(dot(vec3(_3738, _3739, _3740), vec3(_3738, _3739, _3740)));
                        float _3748 = dot(vec3(_1157, _1160, _1163), vec3(_3718, _3719, _3720));
                        float _5107 = isnan(0.0) ? _3748 : (isnan(_3748) ? 0.0 : max(_3748, 0.0));
                        float _3751 = isnan(1.0) ? _5107 : (isnan(_5107) ? 1.0 : min(_5107, 1.0));
                        float _3752 = dot(vec3(_1157, _1160, _1163), vec3(_3744 * _3738, _3744 * _3739, _3744 * _3740));
                        float _5118 = isnan(0.0) ? _3752 : (isnan(_3752) ? 0.0 : max(_3752, 0.0));
                        float _3755 = isnan(1.0) ? _5118 : (isnan(_5118) ? 1.0 : min(_5118, 1.0));
                        float _3759 = ((_3755 * _3755) * (_3737 + (-1.0))) + 1.0;
                        float _3760 = _3696 * _3736;
                        float _3761 = _3760 * _3760;
                        float _3764 = ((1.0 - _3761) * _3686) + _3761;
                        float _5129 = isnan(0.0) ? _3764 : (isnan(_3764) ? 0.0 : max(_3764, 0.0));
                        float _3765 = isnan(1.0) ? _5129 : (isnan(_5129) ? 1.0 : min(_5129, 1.0));
                        float _3766 = 1.0 - _3736;
                        float _3776 = (0.5 / (((_3765 * ((_3751 * _3766) + _3736)) + 9.9999999392252902907785028219223e-09) + (((_3765 * _3766) + _3736) * _3751))) * _3765;
                        float _5140 = isnan(0.0) ? _3776 : (isnan(_3776) ? 0.0 : max(_3776, 0.0));
                        float _3787 = (((_3737 * 3.1415927410125732421875) * (isnan(1.0) ? _5140 : (isnan(_5140) ? 1.0 : min(_5140, 1.0)))) / ((_3759 * _3759) * ((_3703 * 2.1991131305694580078125) + 3.141590118408203125))) * _3692;
                        _3545 = (_3707 * _3655.x) + _3613;
                        _3546 = (_3707 * _3655.y) + _3614;
                        _3547 = (_3707 * _3655.z) + _3615;
                        _3542 = (_3787 * _3672.x) + _3610;
                        _3543 = (_3787 * _3672.y) + _3611;
                        _3544 = (_3787 * _3672.z) + _3612;
                        if (_3617 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3610 = _3542;
                            _3611 = _3543;
                            _3612 = _3544;
                            _3613 = _3545;
                            _3614 = _3546;
                            _3615 = _3547;
                            _3616 = _3617;
                        }
                    }
                    frontier_phi_66_pred = _3547;
                    frontier_phi_66_pred_1 = _3546;
                    frontier_phi_66_pred_2 = _3545;
                    frontier_phi_66_pred_3 = _3544;
                    frontier_phi_66_pred_4 = _3543;
                    frontier_phi_66_pred_5 = _3542;
                }
                _3344 = frontier_phi_66_pred;
                _3342 = frontier_phi_66_pred_1;
                _3340 = frontier_phi_66_pred_2;
                _3338 = frontier_phi_66_pred_3;
                _3336 = frontier_phi_66_pred_4;
                _3334 = frontier_phi_66_pred_5;
                uint _3493 = _3492 + 1u;
                if (_3493 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3486 = _3334;
                    _3487 = _3336;
                    _3488 = _3338;
                    _3489 = _3340;
                    _3490 = _3342;
                    _3491 = _3344;
                    _3492 = _3493;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3333 = _3334;
            _3335 = _3336;
            _3337 = _3338;
            _3339 = _3340;
            _3341 = _3342;
            _3343 = _3344;
        }
        uvec4 _3347 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3348 = _3347.z;
        uint _3350 = (_3348 >> 8u) & 15u;
        float _3454;
        float _3456;
        float _3458;
        float _3460;
        float _3462;
        float _3464;
        if (((4294967295u << _3350) & _3224) == 0u)
        {
            _3454 = _3333;
            _3456 = _3335;
            _3458 = _3337;
            _3460 = _3339;
            _3462 = _3341;
            _3464 = _3343;
        }
        else
        {
            float _3479 = inversesqrt(dot(vec3(_2284, _2285, _2286), vec3(_2284, _2285, _2286)));
            float _3480 = _3479 * _2284;
            float _3481 = _3479 * _2285;
            float _3482 = _3479 * _2286;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3350 < ((_3348 >> 12u) & 15u))
            {
                float _3455;
                float _3457;
                float _3459;
                float _3461;
                float _3463;
                float _3465;
                float _3593 = _3333;
                float _3594 = _3335;
                float _3595 = _3337;
                float _3596 = _3339;
                float _3597 = _3341;
                float _3598 = _3343;
                uint _3599 = _3350;
                uint _3608;
                bool _3609;
                for (;;)
                {
                    _3608 = texelFetch(g_lightClassification, int((((_3218 << 5u) + (_3204 << 9u)) + (_3599 << 2u)) >> 2u)).x;
                    _3609 = _3608 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3609)
                    {
                        frontier_phi_72_pred = _3598;
                        frontier_phi_72_pred_1 = _3597;
                        frontier_phi_72_pred_2 = _3596;
                        frontier_phi_72_pred_3 = _3595;
                        frontier_phi_72_pred_4 = _3594;
                        frontier_phi_72_pred_5 = _3593;
                    }
                    else
                    {
                        float _3792;
                        float _3793;
                        float _3794;
                        float _3795;
                        float _3796;
                        float _3797;
                        float _4085;
                        float _4086;
                        float _4087;
                        float _4088;
                        float _4089;
                        float _4090;
                        float _3805 = _3593;
                        float _3806 = _3594;
                        float _3807 = _3595;
                        float _3808 = _3596;
                        float _3809 = _3597;
                        float _3810 = _3598;
                        uint _3811 = _3608;
                        uint _3812;
                        vec4 _3837;
                        float _3838;
                        vec4 _3853;
                        vec3 _3865;
                        vec4 _3880;
                        vec4 _3895;
                        float _3941;
                        bool _3942;
                        for (;;)
                        {
                            uint _3822 = ((_3599 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3811));
                            _3812 = (_3811 + 4294967295u) & _3811;
                            uint _3824 = _3822 * 40u;
                            _3837 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3824)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3824 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3824 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3824 + 3u)).x));
                            _3838 = _3837.w;
                            uint _3840 = (_3822 * 40u) + 4u;
                            _3853 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3840)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3840 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3840 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3840 + 3u)).x));
                            uint _3855 = (_3822 * 40u) + 8u;
                            _3865 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3855)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3855 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3855 + 2u)).x));
                            uint _3867 = (_3822 * 40u) + 16u;
                            _3880 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3867)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3867 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3867 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3867 + 3u)).x));
                            uint _3882 = (_3822 * 40u) + 20u;
                            _3895 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3882)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3882 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3882 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3882 + 3u)).x));
                            uint _3897 = (_3822 * 40u) + 24u;
                            vec4 _3910 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3897)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3897 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3897 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3897 + 3u)).x));
                            uint _3916 = (_3822 * 40u) + 28u;
                            vec4 _3929 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3916)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3916 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3916 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3916 + 3u)).x));
                            _3941 = fma(_2286, _3929.z, fma(_2285, _3929.y, _3929.x * _2284)) + _3929.w;
                            _3942 = !((fma(_2286, _3910.z, fma(_2285, _3910.y, _3910.x * _2284)) + _3910.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3942)
                            {
                                float _3969 = _3837.x - _2284;
                                float _3970 = _3837.y - _2285;
                                float _3971 = _3837.z - _2286;
                                float _3972 = dot(vec3(_3969, _3970, _3971), vec3(_3969, _3970, _3971));
                                float _3975 = inversesqrt(_3972);
                                float _3976 = _3975 * _3969;
                                float _3977 = _3975 * _3970;
                                float _3978 = _3975 * _3971;
                                float _3982 = 1.0 - (_3972 / (_3838 * _3838));
                                float _5151 = isnan(0.0) ? _3982 : (isnan(_3982) ? 0.0 : max(_3982, 0.0));
                                float _3983 = isnan(1.0) ? _5151 : (isnan(_5151) ? 1.0 : min(_5151, 1.0));
                                float _3987 = sqrt(_3972) * _3853.w;
                                float _3989 = 1.39999997615814208984375 / (_3987 + 1.39999997615814208984375);
                                float _3990 = _3989 * _3989;
                                float _3993 = ((1.0 - _3990) * dot(vec3(_3976, _3977, _3978), vec3(_1157, _1160, _1163))) + _3990;
                                float _3996 = _3987 * _3987;
                                float _4000 = (fma(_2286, _3880.z, fma(_2285, _3880.y, _3880.x * _2284)) + _3880.w) / _3941;
                                float _4001 = (fma(_2286, _3895.z, fma(_2285, _3895.y, _3895.x * _2284)) + _3895.w) / _3941;
                                float _4005 = 1.0 - dot(vec2(_4000, _4001), vec2(_4000, _4001));
                                float _5167 = isnan(0.0) ? _4005 : (isnan(_4005) ? 0.0 : max(_4005, 0.0));
                                float _4006 = isnan(1.0) ? _5167 : (isnan(_5167) ? 1.0 : min(_5167, 1.0));
                                float _4007 = _4006 * (((isnan(0.0) ? _3993 : (isnan(_3993) ? 0.0 : max(_3993, 0.0))) * _3983) / ((_3996 * 0.699999988079071044921875) + 1.0));
                                float _4019 = exp2(log2(1.0 / ((_3996 * 3.5) + 5.0)) * 0.25);
                                float _4020 = 1.0 - _1232;
                                float _4027 = sqrt(1.0 - ((1.0 - (_4020 * _4020)) * (1.0 - (_4019 * _4019))));
                                float _4028 = _4027 * _4027;
                                float _4029 = _4028 * _4028;
                                float _4030 = _3976 - _3480;
                                float _4031 = _3977 - _3481;
                                float _4032 = _3978 - _3482;
                                float _4036 = inversesqrt(dot(vec3(_4030, _4031, _4032), vec3(_4030, _4031, _4032)));
                                float _4040 = dot(vec3(_1157, _1160, _1163), vec3((-0.0) - _3480, (-0.0) - _3481, (-0.0) - _3482));
                                float _5178 = isnan(0.0) ? _4040 : (isnan(_4040) ? 0.0 : max(_4040, 0.0));
                                float _4043 = isnan(1.0) ? _5178 : (isnan(_5178) ? 1.0 : min(_5178, 1.0));
                                float _4044 = dot(vec3(_1157, _1160, _1163), vec3(_4036 * _4030, _4036 * _4031, _4036 * _4032));
                                float _5189 = isnan(0.0) ? _4044 : (isnan(_4044) ? 0.0 : max(_4044, 0.0));
                                float _4047 = isnan(1.0) ? _5189 : (isnan(_5189) ? 1.0 : min(_5189, 1.0));
                                float _4051 = ((_4047 * _4047) * (_4029 + (-1.0))) + 1.0;
                                float _4052 = _3989 * _4028;
                                float _4053 = _4052 * _4052;
                                float _4059 = ((1.0 - _4053) * dot(vec3(_1157, _1160, _1163), vec3(_3976, _3977, _3978))) + _4053;
                                float _5200 = isnan(0.0) ? _4059 : (isnan(_4059) ? 0.0 : max(_4059, 0.0));
                                float _4060 = isnan(1.0) ? _5200 : (isnan(_5200) ? 1.0 : min(_5200, 1.0));
                                float _4061 = 1.0 - _4028;
                                float _4071 = (0.5 / (((_4060 * ((_4043 * _4061) + _4028)) + 9.9999999392252902907785028219223e-09) + (((_4060 * _4061) + _4028) * _4043))) * _4060;
                                float _5211 = isnan(0.0) ? _4071 : (isnan(_4071) ? 0.0 : max(_4071, 0.0));
                                float _4081 = (_4006 * _3983) * (((_4029 * 3.1415927410125732421875) * (isnan(1.0) ? _5211 : (isnan(_5211) ? 1.0 : min(_5211, 1.0)))) / ((_4051 * _4051) * ((_3996 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _4007 * _3853.y;
                                frontier_phi_78_pred_1 = _4007 * _3853.x;
                                frontier_phi_78_pred_2 = _4081 * _3865.z;
                                frontier_phi_78_pred_3 = _4081 * _3865.y;
                                frontier_phi_78_pred_4 = _4081 * _3865.x;
                                frontier_phi_78_pred_5 = _4007 * _3853.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4089 = frontier_phi_78_pred;
                            _4088 = frontier_phi_78_pred_1;
                            _4087 = frontier_phi_78_pred_2;
                            _4086 = frontier_phi_78_pred_3;
                            _4085 = frontier_phi_78_pred_4;
                            _4090 = frontier_phi_78_pred_5;
                            _3795 = _4088 + _3808;
                            _3796 = _4089 + _3809;
                            _3797 = _4090 + _3810;
                            _3792 = _4085 + _3805;
                            _3793 = _4086 + _3806;
                            _3794 = _4087 + _3807;
                            if (_3812 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3805 = _3792;
                                _3806 = _3793;
                                _3807 = _3794;
                                _3808 = _3795;
                                _3809 = _3796;
                                _3810 = _3797;
                                _3811 = _3812;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3797;
                        frontier_phi_72_pred_1 = _3796;
                        frontier_phi_72_pred_2 = _3795;
                        frontier_phi_72_pred_3 = _3794;
                        frontier_phi_72_pred_4 = _3793;
                        frontier_phi_72_pred_5 = _3792;
                    }
                    _3465 = frontier_phi_72_pred;
                    _3463 = frontier_phi_72_pred_1;
                    _3461 = frontier_phi_72_pred_2;
                    _3459 = frontier_phi_72_pred_3;
                    _3457 = frontier_phi_72_pred_4;
                    _3455 = frontier_phi_72_pred_5;
                    uint _3600 = _3599 + 1u;
                    if (_3600 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3593 = _3455;
                        _3594 = _3457;
                        _3595 = _3459;
                        _3596 = _3461;
                        _3597 = _3463;
                        _3598 = _3465;
                        _3599 = _3600;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3465;
                frontier_phi_60_61_ladder_1 = _3463;
                frontier_phi_60_61_ladder_2 = _3459;
                frontier_phi_60_61_ladder_3 = _3457;
                frontier_phi_60_61_ladder_4 = _3455;
                frontier_phi_60_61_ladder_5 = _3461;
            }
            else
            {
                frontier_phi_60_61_ladder = _3343;
                frontier_phi_60_61_ladder_1 = _3341;
                frontier_phi_60_61_ladder_2 = _3337;
                frontier_phi_60_61_ladder_3 = _3335;
                frontier_phi_60_61_ladder_4 = _3333;
                frontier_phi_60_61_ladder_5 = _3339;
            }
            _3454 = frontier_phi_60_61_ladder_4;
            _3456 = frontier_phi_60_61_ladder_3;
            _3458 = frontier_phi_60_61_ladder_2;
            _3460 = frontier_phi_60_61_ladder_5;
            _3462 = frontier_phi_60_61_ladder_1;
            _3464 = frontier_phi_60_61_ladder;
        }
        float _3469 = isnan(1.0) ? _1216 : (isnan(_1216) ? 1.0 : min(_1216, 1.0));
        _3237 = (_3469 * _3460) + _2749;
        _3239 = (_3469 * _3462) + _2751;
        _3241 = (_3469 * _3464) + _2753;
        _3243 = ((_3454 * _1201) * _3469) + _3087;
        _3245 = ((_3456 * _1203) * _3469) + _3089;
        _3247 = ((_3458 * _1204) * _3469) + _3091;
    }
    else
    {
        _3237 = _2749;
        _3239 = _2751;
        _3241 = _2753;
        _3243 = _3087;
        _3245 = _3089;
        _3247 = _3091;
    }
    uint _3253 = _1177 + uint(cbMatDynParam._m0[0u].w);
    float _3259 = ((((((_966.x - _961.x) * _944) + _961.x) * cbMtdParam._m0[21u].x) + ((cbMtdParam._m0[27u].x * _890) * cbMtdParam._m0[20u].x)) * _899) * cbInstanceData._m0[_3253].x;
    float _3260 = ((((((_966.y - _961.y) * _944) + _961.y) * cbMtdParam._m0[21u].y) + ((cbMtdParam._m0[27u].x * (((_879.y - _877) * _858) + _877)) * cbMtdParam._m0[20u].y)) * _899) * cbInstanceData._m0[_3253].y;
    float _3261 = ((((((_966.z - _961.z) * _944) + _961.z) * cbMtdParam._m0[21u].z) + ((cbMtdParam._m0[27u].x * (((_879.z - _878) * _858) + _878)) * cbMtdParam._m0[20u].z)) * _899) * cbInstanceData._m0[_3253].z;
    float _5227 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
    float _5238 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
    float _5249 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
    float _3278 = (((isnan(1.0) ? _5227 : (isnan(_5227) ? 1.0 : min(_5227, 1.0))) * (_3237 + ((isnan(0.0) ? _1939 : (isnan(_1939) ? 0.0 : max(_1939, 0.0))) * _1216))) + ((_3243 + ((isnan(0.0) ? _2231 : (isnan(_2231) ? 0.0 : max(_2231, 0.0))) * _2018)) * cbPerFrame._m0[3u].x)) + _3259;
    float _3280 = (_3260 + ((_3245 + ((isnan(0.0) ? _2234 : (isnan(_2234) ? 0.0 : max(_2234, 0.0))) * _2018)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5238 : (isnan(_5238) ? 1.0 : min(_5238, 1.0))) * (_3239 + ((isnan(0.0) ? _1942 : (isnan(_1942) ? 0.0 : max(_1942, 0.0))) * _1216)));
    float _3282 = (_3261 + ((_3247 + ((isnan(0.0) ? _2237 : (isnan(_2237) ? 0.0 : max(_2237, 0.0))) * _2018)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5249 : (isnan(_5249) ? 1.0 : min(_5249, 1.0))) * (_3241 + ((isnan(0.0) ? _1945 : (isnan(_1945) ? 0.0 : max(_1945, 0.0))) * _1216)));
    float _5275 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3295 = isnan(1.0) ? _5275 : (isnan(_5275) ? 1.0 : min(_5275, 1.0));
    uint _3296 = _1176 + 6u;
    float _3304 = _1138 / cbSceneParam._m0[86u].x;
    float _3305 = _1139 / cbSceneParam._m0[86u].y;
    vec4 _3319 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3304, _3305, (log2((isnan(cbSceneParam._m0[77u].w) ? _1073 : (isnan(_1073) ? cbSceneParam._m0[77u].w : min(_1073, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3321 = _3319.x;
    float _3322 = _3319.y;
    float _3323 = _3319.z;
    float _3324 = _3319.w;
    float _3395;
    float _3397;
    float _3399;
    float _3401;
    if (_1073 > cbSceneParam._m0[78u].w)
    {
        float _3358 = isnan(_1073) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1073 : min(cbSceneParam._m0[80u].w, _1073));
        float _3359 = _3358 / _1073;
        float _3370 = _3359 * _1123;
        float _3371 = _1124 * _3359;
        float _3372 = (-0.0) - _3371;
        float _3373 = _3359 * _1125;
        float _3375 = (cbSceneParam._m0[77u].w * _3372) / _3358;
        float _3376 = _3375 + cbSceneParam._m0[79u].w;
        float _3377 = cbSceneParam._m0[79u].w - _3371;
        float _3383 = sqrt(((_3370 * _3370) + (_3371 * _3371)) + (_3373 * _3373));
        float _3386 = (1.0 - (cbSceneParam._m0[77u].w / _3358)) * _3383;
        float _3391 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3393 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3555;
        if (abs((_3372 - _3375) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3555 = ((((_3376 > 0.0) ? exp2(_3391 * _3376) : (2.0 - exp2(_3393 * _3376))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3386;
        }
        else
        {
            float _3515 = 1.0 / cbSceneParam._m0[80u].x;
            float _3516 = isnan(_3377) ? _3376 : (isnan(_3376) ? _3377 : max(_3376, _3377));
            float _3517 = isnan(_3377) ? _3376 : (isnan(_3376) ? _3377 : min(_3376, _3377));
            float _3526 = isnan(0.0) ? _3516 : (isnan(_3516) ? 0.0 : min(_3516, 0.0));
            float _3527 = isnan(0.0) ? _3517 : (isnan(_3517) ? 0.0 : min(_3517, 0.0));
            _3555 = ((abs(_3383 / _3372) * cbSceneParam._m0[80u].y) * ((((_3526 - _3527) * 2.0) - ((exp2(_3391 * (isnan(0.0) ? _3516 : (isnan(_3516) ? 0.0 : max(_3516, 0.0)))) - exp2(_3391 * (isnan(0.0) ? _3517 : (isnan(_3517) ? 0.0 : max(_3517, 0.0))))) * _3515)) - ((exp2(_3393 * _3526) - exp2(_3393 * _3527)) * _3515))) + (_3386 * cbSceneParam._m0[80u].z);
        }
        vec4 _3557 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3304, _3305, 1.0), 0.0);
        float _3566 = exp2((_3555 * (-1.44269502162933349609375)) * (1.0 - _3557.w));
        float _3567 = log2(_3566);
        float _3583 = log2(_3324);
        _3395 = (exp2(_3583 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3567 * cbSceneParam._m0[78u].x)) * _3557.x) / cbSceneParam._m0[78u].x)) + _3321;
        _3397 = (exp2(_3583 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3567 * cbSceneParam._m0[78u].y)) * _3557.y) / cbSceneParam._m0[78u].y)) + _3322;
        _3399 = (exp2(_3583 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3567 * cbSceneParam._m0[78u].z)) * _3557.z) / cbSceneParam._m0[78u].z)) + _3323;
        _3401 = _3566 * _3324;
    }
    else
    {
        _3395 = _3321;
        _3397 = _3322;
        _3399 = _3323;
        _3401 = _3324;
    }
    float _3413 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3414 = _3413 == 3.0;
    float _3415 = log2(_3401);
    float _3419 = exp2(_3415 * cbSceneParam._m0[78u].x);
    float _3420 = exp2(_3415 * cbSceneParam._m0[78u].y);
    float _3421 = exp2(_3415 * cbSceneParam._m0[78u].z);
    float _3422 = _3419 * (isnan(0.0) ? _3278 : (isnan(_3278) ? 0.0 : max(_3278, 0.0)));
    float _3423 = _3420 * (isnan(0.0) ? _3280 : (isnan(_3280) ? 0.0 : max(_3280, 0.0)));
    float _3424 = _3421 * (isnan(0.0) ? _3282 : (isnan(_3282) ? 0.0 : max(_3282, 0.0)));
    float _3433 = (_3413 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3433 * (_3414 ? _3422 : (_3422 + (cbSceneParam._m0[72u].w * _3395)));
    SV_Target.y = _3433 * (_3414 ? _3423 : (_3423 + (cbSceneParam._m0[72u].w * _3397)));
    SV_Target.z = _3433 * (_3414 ? _3424 : (_3424 + (cbSceneParam._m0[72u].w * _3399)));
    SV_Target.w = cbInstanceData._m0[_3296].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _3259) * _3295) * _3419) * _3433;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3260) * _3295) * _3420) * _3433;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3261) * _3295) * _3421) * _3433;
    SV_Target_1.w = cbInstanceData._m0[_3296].w;
}


