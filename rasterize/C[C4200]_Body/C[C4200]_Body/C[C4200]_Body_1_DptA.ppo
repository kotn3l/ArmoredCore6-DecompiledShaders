#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[34];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 4, component = 2) in vec2 TEXCOORD_7;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    float _78 = gl_FragCoord.x * 0.125;
    float _80 = gl_FragCoord.y * 0.125;
    uint _93 = uint(roundEven(NORMAL.w));
    if (!(cbMtdParam._m0[26u].x >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_78, _80)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625)))
    {
        discard_state = true;
    }
    float _141 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _151 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _141);
    float _152 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _141);
    float _153 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _141);
    vec4 _155 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_78, _80));
    float _157 = _155.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _190 = sqrt(((_151 * _151) + (_152 * _152)) + (_153 * _153));
        float _197 = (cbMatDynParam._m0[5u].x * _190) + cbMatDynParam._m0[5u].y;
        float _265 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
        float _199 = isnan(1.0) ? _265 : (isnan(_265) ? 1.0 : min(_265, 1.0));
        float _203 = (cbMatDynParam._m0[5u].z * _190) + cbMatDynParam._m0[5u].w;
        float _276 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _276 : (isnan(_276) ? 1.0 : min(_276, 1.0))) - _199)) + _199) < ((_157 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _235;
    vec4 _168;
    float _170;
    float _171;
    bool _182;
    uint _183;
    for (;;)
    {
        float _165 = _157 + (-0.5);
        _168 = cbMtdParam._m0[1u];
        _170 = _168.y * _165;
        _171 = _165 * 0.999000012874603271484375;
        _182 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        _183 = _93 * 13u;
        if (_182)
        {
            if ((cbInstanceData._m0[_183 + 7u].x + _171) < 0.5)
            {
                _235 = true;
                break;
            }
        }
        uint _227 = (_183 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_227].w < 1.0) && ((cbInstanceData._m0[_227].w + _171) < 0.5))
        {
            _235 = true;
            break;
        }
        if ((_170 + 1.0) < _168.x)
        {
            _235 = true;
            break;
        }
        _235 = false;
        break;
    }
    if (_235)
    {
        discard_state = true;
    }
    discard_exit();
}


