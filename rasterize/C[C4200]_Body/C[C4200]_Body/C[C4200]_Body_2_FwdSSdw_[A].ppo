#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[34];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_C4200_Body_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_C4200_Body_snp_0_Texture2D_1;
layout(set = 0, binding = 13) uniform texture2D C_C4200_Body_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_C4200_Body_snp_0_Texture2D_6;
layout(set = 0, binding = 15) uniform texture2D C_C4200_Body_snp_0_Texture2D_7;
layout(set = 0, binding = 16) uniform texture2D C_C4200_Body_snp_0_Texture2D_8;
layout(set = 0, binding = 17) uniform texture2D C_C4200_Body_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_C4200_Body_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform texture2D C_C4200_Body_snp_0_Texture2D_16;
layout(set = 0, binding = 4) uniform texture2D C_C4200_Body_snp_0_Texture2D_17;
layout(set = 0, binding = 5) uniform texture2D C_C4200_Body_snp_0_Texture2D_18;
layout(set = 0, binding = 6) uniform texture2D C_C4200_Body_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_C4200_Body_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_C4200_Body_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_C4200_Body_snp_0_Texture2D_21;
layout(set = 0, binding = 18) uniform texture2DArray C_C4200_Body_snp_0_Texture2DArray_0;
layout(set = 0, binding = 19) uniform texture2DArray C_C4200_Body_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1565;
float _4003;
float _4004;
float _4005;
float _4006;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _224 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _225 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _226 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _232 = inversesqrt(dot(vec3(_224, _225, _226), vec3(_224, _225, _226)));
    float _239 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _246 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _266 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w));
    vec4 _286 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_1) + cbTextureTilingScale._m0[15u].w));
    float _299 = exp2(log2(_286.w * cbMtdParam._m0[30u].y) * cbMtdParam._m0[24u].x);
    float _300 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _301 = isnan(1.0) ? _300 : (isnan(_300) ? 1.0 : min(_300, 1.0));
    vec4 _315 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _319 = _315.z;
    float _327 = exp2(log2(_319 * cbMtdParam._m0[24u].y) * cbMtdParam._m0[23u].y);
    float _328 = isnan(0.0) ? _327 : (isnan(_327) ? 0.0 : max(_327, 0.0));
    float _329 = isnan(1.0) ? _328 : (isnan(_328) ? 1.0 : min(_328, 1.0));
    float _350 = roundEven(5.0 - ((texture(sampler2D(C_C4200_Body_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w)).x + (-0.02500000037252902984619140625)) * 8.0));
    float _351 = isnan(0.0) ? _350 : (isnan(_350) ? 0.0 : max(_350, 0.0));
    float _352 = isnan(4.0) ? _351 : (isnan(_351) ? 4.0 : min(_351, 4.0));
    float _365 = floor(_352);
    vec4 _368 = texture(sampler2DArray(C_C4200_Body_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[18u].x * TEXCOORD) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD_1) + cbTextureTilingScale._m0[18u].w, _365));
    vec4 _393 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _404 = cbMtdParam._m0[9u].x * _393.x;
    float _405 = cbMtdParam._m0[9u].y * _393.y;
    float _406 = cbMtdParam._m0[9u].z * _393.z;
    float _413 = (((cbMtdParam._m0[10u].x * _368.x) - _404) * _329) + _404;
    float _414 = (((cbMtdParam._m0[10u].y * _368.y) - _405) * _329) + _405;
    float _415 = (((cbMtdParam._m0[10u].z * _368.z) - _406) * _329) + _406;
    float _421 = exp2(log2(_315.w) * cbMtdParam._m0[24u].w);
    vec4 _434 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w));
    float _454 = (((cbMtdParam._m0[16u].x * _434.x) - _413) * _421) + _413;
    float _455 = (((cbMtdParam._m0[16u].y * _434.y) - _414) * _421) + _414;
    float _456 = (((cbMtdParam._m0[16u].z * _434.z) - _415) * _421) + _415;
    vec4 _469 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD_1) + cbTextureTilingScale._m0[13u].w));
    float _494 = (_286.x * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].x * _469.x) - _454) * _301) + _454);
    float _496 = (_286.y * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].y * _469.y) - _455) * _301) + _455);
    float _498 = (_286.z * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].z * _469.z) - _456) * _301) + _456);
    vec4 _511 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1) + cbTextureTilingScale._m0[4u].w));
    float _530 = TEXCOORD_3.x - ((cbMtdParam._m0[25u].x * (1.0 - TEXCOORD_3.x)) * (_266.x + 0.00999999977648258209228515625));
    float _532 = _530 * (cbMtdParam._m0[25u].z + 1.0);
    float _4045 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0));
    float _533 = isnan(1.0) ? _4045 : (isnan(_4045) ? 1.0 : min(_4045, 1.0));
    float _540 = (_533 * ((cbMtdParam._m0[11u].x * _511.x) - _494)) + _494;
    float _541 = (((cbMtdParam._m0[11u].y * _511.y) - _496) * _533) + _496;
    float _542 = (((cbMtdParam._m0[11u].z * _511.z) - _498) * _533) + _498;
    float _198[5];
    float _199[5];
    _198[0u] = cbMtdParam._m0[30u].z;
    _199[0u] = cbMtdParam._m0[30u].w;
    _198[1u] = cbMtdParam._m0[32u].z;
    _199[1u] = cbMtdParam._m0[32u].w;
    _198[2u] = cbMtdParam._m0[32u].x;
    _199[2u] = cbMtdParam._m0[32u].y;
    _198[3u] = cbMtdParam._m0[31u].z;
    _199[3u] = cbMtdParam._m0[31u].w;
    _198[4u] = cbMtdParam._m0[31u].x;
    _199[4u] = cbMtdParam._m0[31u].y;
    float _579 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    uint _581 = uint(int(isnan(4.0) ? _579 : (isnan(_579) ? 4.0 : min(_579, 4.0))));
    float _588 = ((_199[_581] - cbMtdParam._m0[23u].z) * _329) + cbMtdParam._m0[23u].z;
    float _591 = ((cbMtdParam._m0[23u].w - _588) * _421) + _588;
    float _594 = ((cbMtdParam._m0[26u].y - _591) * _301) + _591;
    float _599 = (cbMtdParam._m0[25u].y + 1.0) * _530;
    float _4066 = isnan(0.0) ? _599 : (isnan(_599) ? 0.0 : max(_599, 0.0));
    float _600 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
    float _602 = _594 - (_594 * _600);
    vec4 _615 = texture(sampler2DArray(C_C4200_Body_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[19u].x * TEXCOORD) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD_1) + cbTextureTilingScale._m0[19u].w, _365));
    vec4 _633 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w));
    float _635 = _633.x;
    float _636 = _633.y;
    float _641 = cbMtdParam._m0[23u].x + _633.z;
    float _644 = (((_615.z + _198[_581]) - _641) * _329) + _641;
    vec4 _656 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_1) + cbTextureTilingScale._m0[16u].w));
    float _667 = (((_656.z - _644) + cbMtdParam._m0[30u].x) * _421) + _644;
    float _673 = ((((_319 * 2.0) * _667) - _667) * cbMtdParam._m0[25u].w) + _667;
    vec4 _685 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD_1) + cbTextureTilingScale._m0[17u].w));
    float _696 = (((cbMtdParam._m0[24u].z + _685.z) - _673) * _301) + _673;
    vec4 _708 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _720 = ((_708.z - _696) * _600) + _696;
    float _733 = cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x;
    vec4 _756 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * ((_733 * cbMtdParam._m0[33u].z) + TEXCOORD)) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * ((cbMtdParam._m0[33u].w * _733) + TEXCOORD_1)) + cbTextureTilingScale._m0[9u].w));
    float _760 = cbPerFrame._m0[22u].x * 2.0;
    float _761 = _760 * cbMtdParam._m0[28u].z;
    float _764 = (_756.x * 0.5) + (-0.25);
    float _767 = (_756.y * 0.5) + (-0.25);
    float _768 = _767 * cbMtdParam._m0[28u].y;
    float _770 = (-0.0) - (cbMtdParam._m0[28u].y * _764);
    float _772 = fract(_761);
    float _774 = fract(_761 + 0.5);
    float _785 = abs((_772 * 2.0) + (-1.0));
    vec4 _802 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_19, SS_DiffuseMap), vec2((((_772 * _770) + TEXCOORD) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_768 * _772) + TEXCOORD_1) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _804 = _802.x;
    float _805 = _802.y;
    float _806 = _802.z;
    vec4 _807 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_19, SS_DiffuseMap), vec2((((_774 * _770) + TEXCOORD) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_768 * _774) + TEXCOORD_1) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _818 = ((_807.x - _804) * _785) + _804;
    float _825 = exp2(log2(_818 * cbMtdParam._m0[28u].w) * cbMtdParam._m0[29u].x);
    float _826 = isnan(cbMtdParam._m0[29u].y) ? _825 : (isnan(_825) ? cbMtdParam._m0[29u].y : max(_825, cbMtdParam._m0[29u].y));
    float _827 = isnan(cbMtdParam._m0[29u].z) ? _826 : (isnan(_826) ? cbMtdParam._m0[29u].z : min(_826, cbMtdParam._m0[29u].z));
    float _851 = (cbMtdParam._m0[33u].x * _733) + TEXCOORD;
    float _852 = (cbMtdParam._m0[33u].y * _733) + TEXCOORD_1;
    float _855 = _760 * cbMtdParam._m0[27u].w;
    float _856 = _767 * cbMtdParam._m0[27u].z;
    float _858 = (-0.0) - (cbMtdParam._m0[27u].z * _764);
    float _859 = fract(_855);
    float _861 = fract(_855 + 0.5);
    float _872 = abs((_859 * 2.0) + (-1.0));
    vec4 _889 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_20, SS_DiffuseMap), vec2((((_859 * _858) + _851) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_856 * _859) + _852) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    vec4 _894 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_20, SS_DiffuseMap), vec2((((_861 * _858) + _851) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_856 * _861) + _852) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _931 = ((_615.x - _635) * _329) + _635;
    float _932 = ((_615.y - _636) * _329) + _636;
    float _937 = ((_656.x - _931) * _421) + _931;
    float _938 = ((_656.y - _932) * _421) + _932;
    float _947 = ((((_685.x - _937) * _301) + _937) * 2.0) + (-1.0);
    float _948 = ((((_685.y - _938) * _301) + _938) * 2.0) + (-1.0);
    float _949 = dot(vec2(_947, _948), vec2(_947, _948));
    float _4087 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
    float _954 = sqrt(1.0 - (isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0))));
    float _963 = ((cbMtdParam._m0[26u].z * ((_315.x * 2.0) + (-1.0))) + _947) + (((((_708.x * 2.0) + (-1.0)) * TEXCOORD_3.x) * cbMtdParam._m0[26u].w) * _600);
    float _964 = ((cbMtdParam._m0[26u].z * ((_315.y * 2.0) + (-1.0))) + _948) + (((((_708.y * 2.0) + (-1.0)) * TEXCOORD_3.y) * cbMtdParam._m0[26u].w) * _600);
    float _966 = gl_FragCoord.x * 0.125;
    float _968 = gl_FragCoord.y * 0.125;
    float _978 = fma(_954, _239 * NORMAL.x, fma(_964, _246 * TANGENT.x, (_232 * _224) * _963));
    float _981 = fma(_954, _239 * NORMAL.y, fma(_964, _246 * TANGENT.y, (_232 * _225) * _963));
    float _984 = fma(_954, _239 * NORMAL.z, fma(_964, _246 * TANGENT.z, (_232 * _226) * _963));
    float _988 = inversesqrt(dot(vec3(_978, _981, _984), vec3(_978, _981, _984)));
    float _989 = _988 * _978;
    float _990 = _988 * _981;
    float _991 = _988 * _984;
    float _4098 = isnan(0.0) ? _720 : (isnan(_720) ? 0.0 : max(_720, 0.0));
    float _992 = isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0));
    float _4109 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _4120 = isnan(0.0) ? _541 : (isnan(_541) ? 0.0 : max(_541, 0.0));
    float _4131 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _4142 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _996 = isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0));
    if (!(cbMtdParam._m0[26u].x >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_966, _968)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625)))
    {
        discard_state = true;
    }
    float _1016 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1056 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1066 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1056);
    float _1067 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1056);
    float _1068 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1056);
    float _1072 = inversesqrt(dot(vec3(_1066, _1067, _1068), vec3(_1066, _1067, _1068)));
    float _1073 = _1066 * _1072;
    float _1074 = _1067 * _1072;
    float _1075 = _1068 * _1072;
    vec4 _1077 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_966, _968));
    float _1079 = _1077.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1249 = sqrt(((_1066 * _1066) + (_1067 * _1067)) + (_1068 * _1068));
        float _1255 = (cbMatDynParam._m0[5u].x * _1249) + cbMatDynParam._m0[5u].y;
        float _4153 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
        float _1256 = isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0));
        float _1260 = (cbMatDynParam._m0[5u].z * _1249) + cbMatDynParam._m0[5u].w;
        float _4164 = isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0))) - _1256)) + _1256) < ((_1079 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1090 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1091 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1109 = fma(_991, cbSceneParam._m0[5u].z, fma(_990, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _989));
    float _1112 = fma(_991, cbSceneParam._m0[6u].z, fma(_990, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _989));
    float _1115 = fma(_991, cbSceneParam._m0[7u].z, fma(_990, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _989));
    uint _1128 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1129 = _1128 + 9u;
    uint _1130 = _1129 + uint(cbMatDynParam._m0[0u].w);
    float _1136 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0)))) * cbInstanceData._m0[_1130].x;
    float _1137 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0)))) * cbInstanceData._m0[_1130].y;
    float _1138 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0)))) * cbInstanceData._m0[_1130].z;
    float _4175 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
    float _1139 = isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0));
    float _4186 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
    float _1140 = isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0));
    float _4197 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
    float _1141 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
    float _1142 = 1.0 - _996;
    float _1143 = _1139 * _1142;
    float _1144 = _1140 * _1142;
    float _1145 = _1141 * _1142;
    float _1150 = (_1139 + (-0.039999999105930328369140625)) * _996;
    float _1151 = (_1140 + (-0.039999999105930328369140625)) * _996;
    float _1152 = (_1141 + (-0.039999999105930328369140625)) * _996;
    float _1153 = _1150 + 0.039999999105930328369140625;
    float _1155 = _1151 + 0.039999999105930328369140625;
    float _1156 = _1152 + 0.039999999105930328369140625;
    vec4 _1165 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1090, cbSceneParam._m0[86u].y * _1091));
    float _1168 = _1165.x * TEXCOORD_3.w;
    float _1169 = dot(vec3(_989, _990, _991), vec3(_1073, _1074, _1075));
    float _1172 = _1169 * 2.0;
    float _1176 = (_1172 * _989) - _1073;
    float _1177 = (_1172 * _990) - _1074;
    float _1178 = (_1172 * _991) - _1075;
    float _1182 = abs(dot(vec3(_1073, _1074, _1075), vec3(_989, _990, _991)));
    float _4208 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
    float _1184 = sqrt(_992);
    float _1195 = exp2((_1184 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1184 * 3.0));
    float _1201 = (1.0 - _1195) * ((_1184 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1202 = _1195 * _1184;
    float _1230 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1234 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1238 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1564;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    float _1575;
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1291 = fma(_1238, cbModelParam._m0[26u].z, fma(_1234, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1230));
        float _1295 = fma(_1238, cbModelParam._m0[27u].z, fma(_1234, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1230));
        float _1299 = fma(_1238, cbModelParam._m0[28u].z, fma(_1234, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1230));
        float _1323 = _1230 + _989;
        float _1324 = _1234 + _990;
        float _1325 = _1238 + _991;
        float _1335 = fma(_1325, cbModelParam._m0[26u].z, fma(_1324, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1323)) - _1291;
        float _1336 = fma(_1325, cbModelParam._m0[27u].z, fma(_1324, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1323)) - _1295;
        float _1337 = fma(_1325, cbModelParam._m0[28u].z, fma(_1324, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1323)) - _1299;
        float _1341 = inversesqrt(dot(vec3(_1335, _1336, _1337), vec3(_1335, _1336, _1337)));
        float _1353 = ((_1341 * _1335) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1291 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1354 = ((_1341 * _1336) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1295 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1355 = ((_1341 * _1337) / cbModelParam._m0[34u].z) + ((((((_1299 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1358 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1353, _1354, _1355), 0.0);
        vec4 _1365 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1353, _1354, _1355), 0.0);
        vec4 _1372 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1353, _1354, _1355), 0.0);
        vec4 _1379 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1353, _1354, _1355), 0.0);
        float _1392 = exp2((_1358.w + (-0.5)) * 20.0) * 2.0;
        float _1393 = _1392 * (_1358.x + (-0.5));
        float _1394 = _1392 * (_1358.y + (-0.5));
        float _1395 = _1392 * (_1358.z + (-0.5));
        float _1402 = exp2((_1365.w + (-0.5)) * 20.0) * 2.0;
        float _1403 = _1402 * (_1365.x + (-0.5));
        float _1404 = _1402 * (_1365.y + (-0.5));
        float _1405 = _1402 * (_1365.z + (-0.5));
        float _1412 = exp2((_1372.w + (-0.5)) * 20.0) * 2.0;
        float _1413 = _1412 * (_1372.x + (-0.5));
        float _1414 = _1412 * (_1372.y + (-0.5));
        float _1415 = _1412 * (_1372.z + (-0.5));
        float _1422 = exp2((_1379.w + (-0.5)) * 20.0) * 2.0;
        float _1423 = _1422 * (_1379.x + (-0.5));
        float _1424 = _1422 * (_1379.y + (-0.5));
        float _1425 = _1422 * (_1379.z + (-0.5));
        float _1426 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1427 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1428 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1429 = _1393 * 0.5;
        float _1430 = _1403 * 0.5;
        float _1431 = _1413 * 0.5;
        float _1432 = dot(vec3(_1429, _1430, _1431), vec3(_1429, _1430, _1431));
        float _1437 = (_1432 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1432);
        float _1446 = (dot(vec3(_989, _990, _991), vec3(_1437 * _1429, _1437 * _1430, _1437 * _1431)) + 1.0) * 0.5;
        float _4234 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1456 = sqrt(((_1430 * _1430) + (_1429 * _1429)) + (_1431 * _1431)) / (_1426 + 9.9999997473787516355514526367188e-06);
        float _4245 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1457 = isnan(1.0) ? _4245 : (isnan(_4245) ? 1.0 : min(_4245, 1.0));
        float _1458 = _1457 * 2.0;
        float _1462 = (1.0 - _1457) / (_1457 + 1.0);
        float _4256 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
        float _1463 = isnan(1.0) ? _4256 : (isnan(_4256) ? 1.0 : min(_4256, 1.0));
        float _1472 = ((((1.0 - _1463) * (_1458 + 2.0)) * exp2(log2(isnan(1.0) ? _4234 : (isnan(_4234) ? 1.0 : min(_4234, 1.0))) * (_1458 + 1.0))) + _1463) * _1426;
        float _1473 = _1394 * 0.5;
        float _1474 = _1404 * 0.5;
        float _1475 = _1414 * 0.5;
        float _1476 = dot(vec3(_1473, _1474, _1475), vec3(_1473, _1474, _1475));
        float _1481 = (_1476 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1476);
        float _1489 = (dot(vec3(_989, _990, _991), vec3(_1481 * _1473, _1481 * _1474, _1481 * _1475)) + 1.0) * 0.5;
        float _4267 = isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0));
        float _1498 = sqrt(((_1474 * _1474) + (_1473 * _1473)) + (_1475 * _1475)) / (_1427 + 9.9999997473787516355514526367188e-06);
        float _4278 = isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0));
        float _1499 = isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0));
        float _1500 = _1499 * 2.0;
        float _1504 = (1.0 - _1499) / (_1499 + 1.0);
        float _4289 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
        float _1505 = isnan(1.0) ? _4289 : (isnan(_4289) ? 1.0 : min(_4289, 1.0));
        float _1514 = ((((1.0 - _1505) * (_1500 + 2.0)) * exp2(log2(isnan(1.0) ? _4267 : (isnan(_4267) ? 1.0 : min(_4267, 1.0))) * (_1500 + 1.0))) + _1505) * _1427;
        float _1515 = _1395 * 0.5;
        float _1516 = _1405 * 0.5;
        float _1517 = _1415 * 0.5;
        float _1518 = dot(vec3(_1515, _1516, _1517), vec3(_1515, _1516, _1517));
        float _1523 = (_1518 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1518);
        float _1531 = (dot(vec3(_989, _990, _991), vec3(_1523 * _1515, _1523 * _1516, _1523 * _1517)) + 1.0) * 0.5;
        float _4300 = isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0));
        float _1540 = sqrt(((_1516 * _1516) + (_1515 * _1515)) + (_1517 * _1517)) / (_1428 + 9.9999997473787516355514526367188e-06);
        float _4311 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0));
        float _1541 = isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0));
        float _1542 = _1541 * 2.0;
        float _1546 = (1.0 - _1541) / (_1541 + 1.0);
        float _4322 = isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0));
        float _1547 = isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0));
        float _1556 = ((((1.0 - _1547) * (_1542 + 2.0)) * exp2(log2(isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0))) * (_1542 + 1.0))) + _1547) * _1428;
        _1564 = _1395;
        _1566 = _1394;
        _1567 = _1393;
        _1568 = _1405;
        _1569 = _1404;
        _1570 = _1403;
        _1571 = _1415;
        _1572 = _1414;
        _1573 = _1413;
        _1574 = _1428;
        _1575 = _1427;
        _1576 = _1426;
        _1577 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0)));
        _1578 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0)));
        _1579 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0)));
    }
    else
    {
        _1564 = _1565;
        _1566 = _1565;
        _1567 = _1565;
        _1568 = _1565;
        _1569 = _1565;
        _1570 = _1565;
        _1571 = _1565;
        _1572 = _1565;
        _1573 = _1565;
        _1574 = _1565;
        _1575 = _1565;
        _1576 = _1565;
        _1577 = 0.0;
        _1578 = 0.0;
        _1579 = 0.0;
    }
    float _1871;
    float _1872;
    float _1873;
    float _1874;
    float _1875;
    float _1876;
    float _1877;
    float _1878;
    float _1879;
    float _1880;
    float _1881;
    float _1882;
    float _1883;
    float _1884;
    float _1885;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1602 = fma(_1238, cbModelParam._m0[30u].z, fma(_1234, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1230));
        float _1606 = fma(_1238, cbModelParam._m0[31u].z, fma(_1234, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1230));
        float _1610 = fma(_1238, cbModelParam._m0[32u].z, fma(_1234, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1230));
        float _1633 = _1230 + _989;
        float _1634 = _1234 + _990;
        float _1635 = _1238 + _991;
        float _1645 = fma(_1635, cbModelParam._m0[30u].z, fma(_1634, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1633)) - _1602;
        float _1646 = fma(_1635, cbModelParam._m0[31u].z, fma(_1634, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1633)) - _1606;
        float _1647 = fma(_1635, cbModelParam._m0[32u].z, fma(_1634, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1633)) - _1610;
        float _1651 = inversesqrt(dot(vec3(_1645, _1646, _1647), vec3(_1645, _1646, _1647)));
        float _1664 = ((_1651 * _1645) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1602 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1665 = ((_1651 * _1646) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1606 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1666 = ((_1651 * _1647) / cbModelParam._m0[35u].z) + ((((((_1610 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1668 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1664, _1665, _1666), 0.0);
        vec4 _1675 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1664, _1665, _1666), 0.0);
        vec4 _1682 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1664, _1665, _1666), 0.0);
        vec4 _1689 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1664, _1665, _1666), 0.0);
        float _1701 = exp2((_1668.w + (-0.5)) * 20.0) * 2.0;
        float _1702 = _1701 * (_1668.x + (-0.5));
        float _1703 = _1701 * (_1668.y + (-0.5));
        float _1704 = _1701 * (_1668.z + (-0.5));
        float _1711 = exp2((_1675.w + (-0.5)) * 20.0) * 2.0;
        float _1712 = _1711 * (_1675.x + (-0.5));
        float _1713 = _1711 * (_1675.y + (-0.5));
        float _1714 = _1711 * (_1675.z + (-0.5));
        float _1721 = exp2((_1682.w + (-0.5)) * 20.0) * 2.0;
        float _1722 = _1721 * (_1682.x + (-0.5));
        float _1723 = _1721 * (_1682.y + (-0.5));
        float _1724 = _1721 * (_1682.z + (-0.5));
        float _1731 = exp2((_1689.w + (-0.5)) * 20.0) * 2.0;
        float _1732 = _1731 * (_1689.x + (-0.5));
        float _1733 = _1731 * (_1689.y + (-0.5));
        float _1734 = _1731 * (_1689.z + (-0.5));
        float _1735 = isnan(0.0) ? _1732 : (isnan(_1732) ? 0.0 : max(_1732, 0.0));
        float _1736 = isnan(0.0) ? _1733 : (isnan(_1733) ? 0.0 : max(_1733, 0.0));
        float _1737 = isnan(0.0) ? _1734 : (isnan(_1734) ? 0.0 : max(_1734, 0.0));
        float _1738 = _1702 * 0.5;
        float _1739 = _1712 * 0.5;
        float _1740 = _1722 * 0.5;
        float _1741 = dot(vec3(_1738, _1739, _1740), vec3(_1738, _1739, _1740));
        float _1746 = (_1741 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1741);
        float _1754 = (dot(vec3(_989, _990, _991), vec3(_1746 * _1738, _1746 * _1739, _1746 * _1740)) + 1.0) * 0.5;
        float _4363 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
        float _1763 = sqrt(((_1739 * _1739) + (_1738 * _1738)) + (_1740 * _1740)) / (_1735 + 9.9999997473787516355514526367188e-06);
        float _4374 = isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0));
        float _1764 = isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0));
        float _1765 = _1764 * 2.0;
        float _1769 = (1.0 - _1764) / (_1764 + 1.0);
        float _4385 = isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0));
        float _1770 = isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0));
        float _1779 = ((((1.0 - _1770) * (_1765 + 2.0)) * exp2(log2(isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0))) * (_1765 + 1.0))) + _1770) * _1735;
        float _1780 = _1703 * 0.5;
        float _1781 = _1713 * 0.5;
        float _1782 = _1723 * 0.5;
        float _1783 = dot(vec3(_1780, _1781, _1782), vec3(_1780, _1781, _1782));
        float _1788 = (_1783 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1783);
        float _1796 = (dot(vec3(_989, _990, _991), vec3(_1788 * _1780, _1788 * _1781, _1788 * _1782)) + 1.0) * 0.5;
        float _4396 = isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0));
        float _1805 = sqrt(((_1781 * _1781) + (_1780 * _1780)) + (_1782 * _1782)) / (_1736 + 9.9999997473787516355514526367188e-06);
        float _4407 = isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0));
        float _1806 = isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0));
        float _1807 = _1806 * 2.0;
        float _1811 = (1.0 - _1806) / (_1806 + 1.0);
        float _4418 = isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0));
        float _1812 = isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0));
        float _1821 = ((((1.0 - _1812) * (_1807 + 2.0)) * exp2(log2(isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0))) * (_1807 + 1.0))) + _1812) * _1736;
        float _1822 = _1704 * 0.5;
        float _1823 = _1714 * 0.5;
        float _1824 = _1724 * 0.5;
        float _1825 = dot(vec3(_1822, _1823, _1824), vec3(_1822, _1823, _1824));
        float _1830 = (_1825 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1825);
        float _1838 = (dot(vec3(_989, _990, _991), vec3(_1830 * _1822, _1830 * _1823, _1830 * _1824)) + 1.0) * 0.5;
        float _4429 = isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0));
        float _1847 = sqrt(((_1823 * _1823) + (_1822 * _1822)) + (_1824 * _1824)) / (_1737 + 9.9999997473787516355514526367188e-06);
        float _4440 = isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0));
        float _1848 = isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0));
        float _1849 = _1848 * 2.0;
        float _1853 = (1.0 - _1848) / (_1848 + 1.0);
        float _4451 = isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0));
        float _1854 = isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0));
        float _1863 = ((((1.0 - _1854) * (_1849 + 2.0)) * exp2(log2(isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0))) * (_1849 + 1.0))) + _1854) * _1737;
        _1871 = _1704;
        _1872 = _1703;
        _1873 = _1702;
        _1874 = _1714;
        _1875 = _1713;
        _1876 = _1712;
        _1877 = _1724;
        _1878 = _1723;
        _1879 = _1722;
        _1880 = _1737;
        _1881 = _1736;
        _1882 = _1735;
        _1883 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0)));
        _1884 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0)));
        _1885 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0)));
    }
    else
    {
        _1871 = _1565;
        _1872 = _1565;
        _1873 = _1565;
        _1874 = _1565;
        _1875 = _1565;
        _1876 = _1565;
        _1877 = _1565;
        _1878 = _1565;
        _1879 = _1565;
        _1880 = _1565;
        _1881 = _1565;
        _1882 = _1565;
        _1883 = 0.0;
        _1884 = 0.0;
        _1885 = 0.0;
    }
    float _1895 = (cbModelParam._m0[1u].x * (_1883 - _1577)) + _1577;
    float _1896 = (cbModelParam._m0[1u].x * (_1884 - _1578)) + _1578;
    float _1897 = (cbModelParam._m0[1u].x * (_1885 - _1579)) + _1579;
    float _1918 = fma(_1897, cbSceneParam._m0[89u].z, fma(_1896, cbSceneParam._m0[89u].y, _1895 * cbSceneParam._m0[89u].x));
    float _1921 = fma(_1897, cbSceneParam._m0[90u].z, fma(_1896, cbSceneParam._m0[90u].y, _1895 * cbSceneParam._m0[90u].x));
    float _1924 = fma(_1897, cbSceneParam._m0[91u].z, fma(_1896, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1895));
    float _1939 = _1176 * 0.5;
    float _1940 = _1177 * 0.5;
    float _1941 = _1178 * 0.5;
    float _1942 = dot(vec4(_1939, _1940, _1941, 1.0), vec4(_1873, _1876, _1879, _1882));
    float _1945 = dot(vec4(_1939, _1940, _1941, 1.0), vec4(_1872, _1875, _1878, _1881));
    float _1948 = dot(vec4(_1939, _1940, _1941, 1.0), vec4(_1871, _1874, _1877, _1880));
    float _1982;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1955 = dot(vec4(_1939, _1940, _1941, 1.0), vec4(_1564, _1568, _1571, _1574));
        float _1959 = dot(vec4(_1939, _1940, _1941, 1.0), vec4(_1566, _1569, _1572, _1575));
        float _1963 = dot(vec4(_1939, _1940, _1941, 1.0), vec4(_1567, _1570, _1573, _1576));
        float _1970 = dot(vec4(cbModelParam._m0[39u]), vec4(_1939, _1940, _1941, 1.0));
        _1982 = dot(vec3(isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0)), isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0)), isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1970) ? 0.0 : (isnan(0.0) ? _1970 : max(0.0, _1970))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1982 = 1.0;
    }
    float _1993;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1984 = dot(vec4(cbModelParam._m0[40u]), vec4(_1939, _1940, _1941, 1.0));
        _1993 = dot(vec3(isnan(0.0) ? _1942 : (isnan(_1942) ? 0.0 : max(_1942, 0.0)), isnan(0.0) ? _1945 : (isnan(_1945) ? 0.0 : max(_1945, 0.0)), isnan(0.0) ? _1948 : (isnan(_1948) ? 0.0 : max(_1948, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1984) ? 0.0 : (isnan(0.0) ? _1984 : max(0.0, _1984))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1993 = 1.0;
    }
    float _1997 = (_1993 * cbModelParam._m0[1u].x) + (_1982 * (1.0 - cbModelParam._m0[1u].x));
    float _2007 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _992);
    float _2008 = isnan(_2007) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2007 : min(cbModelParam._m0[25u].z, _2007));
    float _2088;
    float _2090;
    float _2092;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2055 = fma(_1238, cbModelParam._m0[13u].z, fma(_1234, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1230)) + cbModelParam._m0[13u].w;
        float _2059 = fma(_1238, cbModelParam._m0[14u].z, fma(_1234, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1230)) + cbModelParam._m0[14u].w;
        float _2063 = fma(_1238, cbModelParam._m0[15u].z, fma(_1234, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1230)) + cbModelParam._m0[15u].w;
        float _2066 = fma(_1178, cbModelParam._m0[13u].z, fma(_1177, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1176));
        float _2069 = fma(_1178, cbModelParam._m0[14u].z, fma(_1177, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1176));
        float _2072 = fma(_1178, cbModelParam._m0[15u].z, fma(_1177, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1176));
        float _2100;
        if (_2066 > 0.0)
        {
            _2100 = abs((1.0 - _2055) / _2066);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_2066 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_2055 + 1.0) / _2066);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _2100 = frontier_phi_19_17_ladder;
        }
        float _2324;
        if (_2069 > 0.0)
        {
            _2324 = abs((1.0 - _2059) / _2069);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2069 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2059 + 1.0) / _2069);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2324 = frontier_phi_28_24_ladder;
        }
        float _2581;
        if (_2072 > 0.0)
        {
            _2581 = abs((1.0 - _2063) / _2072);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2072 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2063 + 1.0) / _2072);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2581 = frontier_phi_40_35_ladder;
        }
        float _2583 = isnan(_2324) ? _2100 : (isnan(_2100) ? _2324 : min(_2100, _2324));
        float _2584 = isnan(_2581) ? _2583 : (isnan(_2583) ? _2581 : min(_2583, _2581));
        float _2588 = (_2584 * _2066) + _2055;
        float _2589 = (_2584 * _2069) + _2059;
        float _2590 = (_2584 * _2072) + _2063;
        float _2591 = _2584 * 9.9999997473787516355514526367188e-05;
        float _2593 = (-1.0) - _2591;
        float _2595 = _2591 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2590 > _2595) || ((_2590 < _2593) || ((_2589 > _2595) || ((_2589 < _2593) || ((_2588 < _2593) || (_2588 > _2595))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2718 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2590, cbModelParam._m0[9u].z, fma(_2589, cbModelParam._m0[9u].y, _2588 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2590, cbModelParam._m0[10u].z, fma(_2589, cbModelParam._m0[10u].y, _2588 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2590, cbModelParam._m0[11u].z, fma(_2589, cbModelParam._m0[11u].y, _2588 * cbModelParam._m0[11u].x))), _2008);
            frontier_phi_18_40_ladder = _2718.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2718.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2718.x * cbModelParam._m0[1u].y;
        }
        _2088 = frontier_phi_18_40_ladder_2;
        _2090 = frontier_phi_18_40_ladder_1;
        _2092 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _2076 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1176, _1177, _1178), _2008);
        _2088 = _2076.x * cbModelParam._m0[1u].y;
        _2090 = _2076.y * cbModelParam._m0[1u].y;
        _2092 = _2076.z * cbModelParam._m0[1u].y;
    }
    float _2096 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _992);
    float _2097 = isnan(_2096) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2096 : min(cbModelParam._m0[25u].w, _2096));
    float _2186;
    float _2188;
    float _2190;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2150 = fma(_1238, cbModelParam._m0[21u].z, fma(_1234, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1230)) + cbModelParam._m0[21u].w;
        float _2154 = fma(_1238, cbModelParam._m0[22u].z, fma(_1234, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1230)) + cbModelParam._m0[22u].w;
        float _2158 = fma(_1238, cbModelParam._m0[23u].z, fma(_1234, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1230)) + cbModelParam._m0[23u].w;
        float _2161 = fma(_1178, cbModelParam._m0[21u].z, fma(_1177, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1176));
        float _2164 = fma(_1178, cbModelParam._m0[22u].z, fma(_1177, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1176));
        float _2167 = fma(_1178, cbModelParam._m0[23u].z, fma(_1177, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1176));
        float _2329;
        if (_2161 > 0.0)
        {
            _2329 = abs((1.0 - _2150) / _2161);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2161 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2150 + 1.0) / _2161);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2329 = frontier_phi_30_26_ladder;
        }
        float _2608;
        if (_2164 > 0.0)
        {
            _2608 = abs((1.0 - _2154) / _2164);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_2164 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_2154 + 1.0) / _2164);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2608 = frontier_phi_42_37_ladder;
        }
        float _2821;
        if (_2167 > 0.0)
        {
            _2821 = abs((1.0 - _2158) / _2167);
        }
        else
        {
            float frontier_phi_51_48_ladder;
            if (_2167 < 0.0)
            {
                frontier_phi_51_48_ladder = abs((_2158 + 1.0) / _2167);
            }
            else
            {
                frontier_phi_51_48_ladder = 5000.0;
            }
            _2821 = frontier_phi_51_48_ladder;
        }
        float _2823 = isnan(_2608) ? _2329 : (isnan(_2329) ? _2608 : min(_2329, _2608));
        float _2824 = isnan(_2821) ? _2823 : (isnan(_2823) ? _2821 : min(_2823, _2821));
        float _2828 = (_2824 * _2161) + _2150;
        float _2829 = (_2824 * _2164) + _2154;
        float _2830 = (_2824 * _2167) + _2158;
        float _2831 = _2824 * 9.9999997473787516355514526367188e-05;
        float _2832 = (-1.0) - _2831;
        float _2834 = _2831 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_2830 > _2834) || ((_2830 < _2832) || ((_2829 > _2834) || ((_2829 < _2832) || ((_2828 < _2832) || (_2828 > _2834))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3058 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2830, cbModelParam._m0[17u].z, fma(_2829, cbModelParam._m0[17u].y, _2828 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2830, cbModelParam._m0[18u].z, fma(_2829, cbModelParam._m0[18u].y, _2828 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2830, cbModelParam._m0[19u].z, fma(_2829, cbModelParam._m0[19u].y, _2828 * cbModelParam._m0[19u].x))), _2097);
            frontier_phi_27_51_ladder = _3058.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _3058.y * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _3058.x * cbModelParam._m0[1u].z;
        }
        _2186 = frontier_phi_27_51_ladder_2;
        _2188 = frontier_phi_27_51_ladder_1;
        _2190 = frontier_phi_27_51_ladder;
    }
    else
    {
        vec4 _2170 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1176, _1177, _1178), _2097);
        _2186 = _2170.x * cbModelParam._m0[1u].z;
        _2188 = _2170.y * cbModelParam._m0[1u].z;
        _2190 = _2170.z * cbModelParam._m0[1u].z;
    }
    float _2203 = (((_1201 * _1153) + _1202) * _1168) * ((cbModelParam._m0[1u].w * (_2186 - _2088)) + _2088);
    float _2205 = (((_1201 * _1155) + _1202) * _1168) * ((cbModelParam._m0[1u].w * (_2188 - _2090)) + _2090);
    float _2207 = (((_1201 * _1156) + _1202) * _1168) * ((cbModelParam._m0[1u].w * (_2190 - _2092)) + _2092);
    float _2210 = fma(_2207, cbSceneParam._m0[89u].z, fma(_2205, cbSceneParam._m0[89u].y, _2203 * cbSceneParam._m0[89u].x));
    float _2213 = fma(_2207, cbSceneParam._m0[90u].z, fma(_2205, cbSceneParam._m0[90u].y, _2203 * cbSceneParam._m0[90u].x));
    float _2216 = fma(_2207, cbSceneParam._m0[91u].z, fma(_2205, cbSceneParam._m0[91u].y, _2203 * cbSceneParam._m0[91u].x));
    vec4 _2224 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1090, _1091));
    float _2226 = _2224.w;
    float _2238 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2226);
    float _2239 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2226);
    float _2240 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2226);
    uvec4 _2244 = floatBitsToUint(cbInstanceData._m0[_1128 + 5u]);
    uint _2246 = _2244.x * 14u;
    uint _2247 = _2246 + 13u;
    float _2254 = _1168 + (-1.0);
    float _2259 = (cbLight._m0[_2247].x * _2254) + 1.0;
    float _2260 = (cbLight._m0[_2247].y * _2254) + 1.0;
    float _2261 = (cbLight._m0[_2247].z * _2254) + 1.0;
    float _2262 = (cbLight._m0[_2247].w * _2254) + 1.0;
    uint _2263 = _2246 + 5u;
    float _2269 = isnan(1.0) ? _2260 : (isnan(_2260) ? 1.0 : min(_2260, 1.0));
    uint _2273 = _2246 + 4u;
    float _2282 = isnan(1.0) ? _2259 : (isnan(_2259) ? 1.0 : min(_2259, 1.0));
    uint _2286 = _2246 | 1u;
    float _2297 = dot(vec3(cbLight._m0[_2246].xyz), vec3(_989, _990, _991));
    float _2300 = dot(vec3(cbLight._m0[_2286].xyz), vec3(_989, _990, _991));
    float _4587 = isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0));
    float _4598 = isnan(0.0) ? _2300 : (isnan(_2300) ? 0.0 : max(_2300, 0.0));
    float _2305 = (isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0))) * 0.3183098733425140380859375;
    float _2307 = (isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0))) * 0.3183098733425140380859375;
    float _2314 = ((cbLight._m0[_2263].x * _2269) * _2307) + (((cbLight._m0[_2273].x * _2238) * _2282) * _2305);
    float _2315 = ((_2269 * cbLight._m0[_2263].y) * _2307) + (((cbLight._m0[_2273].y * _2239) * _2282) * _2305);
    float _2316 = ((_2269 * cbLight._m0[_2263].z) * _2307) + (((cbLight._m0[_2273].z * _2240) * _2282) * _2305);
    uvec4 _2321 = floatBitsToUint(cbLight._m0[_2246 + 12u]);
    bool _2323 = _2321.x == 0u;
    float _2334;
    float _2336;
    float _2338;
    if (_2323)
    {
        _2334 = _2314;
        _2336 = _2315;
        _2338 = _2316;
    }
    else
    {
        uint _2342 = _2246 + 6u;
        float _2358 = (dot(vec3(cbLight._m0[_2246 + 2u].xyz), vec3(_989, _990, _991)) * 0.5) + 0.5;
        float _2359 = _2358 * _2358;
        float _4609 = isnan(0.0) ? _2359 : (isnan(_2359) ? 0.0 : max(_2359, 0.0));
        float _2360 = isnan(1.0) ? _4609 : (isnan(_4609) ? 1.0 : min(_4609, 1.0));
        float _2361 = isnan(1.0) ? _2261 : (isnan(_2261) ? 1.0 : min(_2261, 1.0));
        _2334 = (((cbLight._m0[_2342].x * 0.3183098733425140380859375) * _2360) * _2361) + _2314;
        _2336 = (((cbLight._m0[_2342].y * 0.3183098733425140380859375) * _2360) * _2361) + _2315;
        _2338 = (((cbLight._m0[_2342].z * 0.3183098733425140380859375) * _2360) * _2361) + _2316;
    }
    bool _2341 = _2321.y == 0u;
    float _2379;
    float _2381;
    float _2383;
    if (_2341)
    {
        _2379 = _2334;
        _2381 = _2336;
        _2383 = _2338;
    }
    else
    {
        uint _2552 = _2246 + 7u;
        float _2568 = (dot(vec3(cbLight._m0[_2246 + 3u].xyz), vec3(_989, _990, _991)) * 0.5) + 0.5;
        float _2569 = _2568 * _2568;
        float _4625 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
        float _2570 = isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0));
        float _2571 = isnan(1.0) ? _2262 : (isnan(_2262) ? 1.0 : min(_2262, 1.0));
        _2379 = (((cbLight._m0[_2552].x * 0.3183098733425140380859375) * _2570) * _2571) + _2334;
        _2381 = (((cbLight._m0[_2552].y * 0.3183098733425140380859375) * _2570) * _2571) + _2336;
        _2383 = (((cbLight._m0[_2552].z * 0.3183098733425140380859375) * _2570) * _2571) + _2338;
    }
    uint _2386 = _2246 + 8u;
    float _2399 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2246].w)) * _992) * 0.949999988079071044921875);
    float _2400 = _2399 * _2399;
    float _2401 = cbLight._m0[_2246].x + _1073;
    float _2402 = cbLight._m0[_2246].y + _1074;
    float _2403 = cbLight._m0[_2246].z + _1075;
    float _2407 = inversesqrt(dot(vec3(_2401, _2402, _2403), vec3(_2401, _2402, _2403)));
    float _2408 = _2407 * _2401;
    float _2409 = _2407 * _2402;
    float _2410 = _2407 * _2403;
    float _2411 = dot(vec3(_989, _990, _991), vec3(cbLight._m0[_2246].xyz));
    float _4641 = isnan(0.0) ? _2411 : (isnan(_2411) ? 0.0 : max(_2411, 0.0));
    float _2414 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
    float _4652 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
    float _2415 = isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0));
    float _2416 = dot(vec3(_989, _990, _991), vec3(_2408, _2409, _2410));
    float _4663 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
    float _2419 = isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0));
    float _2420 = dot(vec3(cbLight._m0[_2246].xyz), vec3(_2408, _2409, _2410));
    float _4674 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
    float _2424 = _2400 * _2400;
    float _2428 = ((_2419 * _2419) * (_2424 + (-1.0))) + 1.0;
    float _2436 = exp2(log2(1.0 - (isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0)))) * 5.0);
    float _2437 = 0.959999978542327880859375 - _1150;
    float _2439 = 0.959999978542327880859375 - _1151;
    float _2440 = 0.959999978542327880859375 - _1152;
    float _2447 = 1.0 - _2400;
    float _2458 = (0.5 / (((_2415 * ((_2414 * _2447) + _2400)) + 9.9999999392252902907785028219223e-09) + (((_2415 * _2447) + _2400) * _2414))) * _2414;
    float _4685 = isnan(0.0) ? _2458 : (isnan(_2458) ? 0.0 : max(_2458, 0.0));
    float _2460 = (isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0))) * (_2424 / ((_2428 * _2428) * 3.141590118408203125));
    uint _2474 = _2246 + 9u;
    float _2485 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2286].w)) * _992) * 0.949999988079071044921875);
    float _2486 = _2485 * _2485;
    float _2487 = cbLight._m0[_2286].x + _1073;
    float _2488 = cbLight._m0[_2286].y + _1074;
    float _2489 = cbLight._m0[_2286].z + _1075;
    float _2493 = inversesqrt(dot(vec3(_2487, _2488, _2489), vec3(_2487, _2488, _2489)));
    float _2494 = _2493 * _2487;
    float _2495 = _2493 * _2488;
    float _2496 = _2493 * _2489;
    float _2497 = dot(vec3(_989, _990, _991), vec3(cbLight._m0[_2286].xyz));
    float _4696 = isnan(0.0) ? _2497 : (isnan(_2497) ? 0.0 : max(_2497, 0.0));
    float _2500 = isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0));
    float _2501 = dot(vec3(_989, _990, _991), vec3(_2494, _2495, _2496));
    float _4707 = isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0));
    float _2504 = isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0));
    float _2505 = dot(vec3(cbLight._m0[_2286].xyz), vec3(_2494, _2495, _2496));
    float _4718 = isnan(0.0) ? _2505 : (isnan(_2505) ? 0.0 : max(_2505, 0.0));
    float _2509 = _2486 * _2486;
    float _2513 = ((_2504 * _2504) * (_2509 + (-1.0))) + 1.0;
    float _2520 = exp2(log2(1.0 - (isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0)))) * 5.0);
    float _2527 = 1.0 - _2486;
    float _2537 = (0.5 / (((_2415 * ((_2500 * _2527) + _2486)) + 9.9999999392252902907785028219223e-09) + (((_2415 * _2527) + _2486) * _2500))) * _2500;
    float _4729 = isnan(0.0) ? _2537 : (isnan(_2537) ? 0.0 : max(_2537, 0.0));
    float _2539 = (isnan(1.0) ? _4729 : (isnan(_4729) ? 1.0 : min(_4729, 1.0))) * (_2509 / ((_2513 * _2513) * 3.141590118408203125));
    float _2549 = (((((_2520 * _2437) + _1153) * cbLight._m0[_2474].x) * _2539) * _2269) + ((((cbLight._m0[_2386].x * _2238) * ((_2436 * _2437) + _1153)) * _2460) * _2282);
    float _2550 = (((((_2520 * _2439) + _1155) * cbLight._m0[_2474].y) * _2539) * _2269) + ((((cbLight._m0[_2386].y * _2239) * ((_2436 * _2439) + _1155)) * _2460) * _2282);
    float _2551 = (((((_2520 * _2440) + _1156) * cbLight._m0[_2474].z) * _2539) * _2269) + ((((cbLight._m0[_2386].z * _2240) * ((_2436 * _2440) + _1156)) * _2460) * _2282);
    float _2613;
    float _2615;
    float _2617;
    if (_2323)
    {
        _2613 = _2549;
        _2615 = _2550;
        _2617 = _2551;
    }
    else
    {
        uint _2619 = _2246 + 2u;
        uint _2623 = _2246 + 10u;
        float _2637 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2619].w)) * _992) * 0.949999988079071044921875);
        float _2638 = _2637 * _2637;
        float _2639 = cbLight._m0[_2619].x + _1073;
        float _2640 = cbLight._m0[_2619].y + _1074;
        float _2641 = cbLight._m0[_2619].z + _1075;
        float _2645 = inversesqrt(dot(vec3(_2639, _2640, _2641), vec3(_2639, _2640, _2641)));
        float _2646 = _2645 * _2639;
        float _2647 = _2645 * _2640;
        float _2648 = _2645 * _2641;
        float _2649 = dot(vec3(_989, _990, _991), vec3(cbLight._m0[_2619].xyz));
        float _4740 = isnan(0.0) ? _2649 : (isnan(_2649) ? 0.0 : max(_2649, 0.0));
        float _2652 = isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0));
        float _2653 = dot(vec3(_989, _990, _991), vec3(_2646, _2647, _2648));
        float _4751 = isnan(0.0) ? _2653 : (isnan(_2653) ? 0.0 : max(_2653, 0.0));
        float _2656 = isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0));
        float _2657 = dot(vec3(cbLight._m0[_2619].xyz), vec3(_2646, _2647, _2648));
        float _4762 = isnan(0.0) ? _2657 : (isnan(_2657) ? 0.0 : max(_2657, 0.0));
        float _2661 = _2638 * _2638;
        float _2665 = ((_2656 * _2656) * (_2661 + (-1.0))) + 1.0;
        float _2672 = exp2(log2(1.0 - (isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0)))) * 5.0);
        float _2679 = 1.0 - _2638;
        float _2689 = (0.5 / (((_2415 * ((_2652 * _2679) + _2638)) + 9.9999999392252902907785028219223e-09) + (((_2415 * _2679) + _2638) * _2652))) * _2652;
        float _4773 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
        float _2691 = (isnan(1.0) ? _4773 : (isnan(_4773) ? 1.0 : min(_4773, 1.0))) * (_2661 / ((_2665 * _2665) * 3.141590118408203125));
        float _2692 = isnan(1.0) ? _2261 : (isnan(_2261) ? 1.0 : min(_2261, 1.0));
        _2613 = (((((_2672 * _2437) + _1153) * cbLight._m0[_2623].x) * _2691) * _2692) + _2549;
        _2615 = (((((_2672 * _2439) + _1155) * cbLight._m0[_2623].y) * _2691) * _2692) + _2550;
        _2617 = (((((_2672 * _2440) + _1156) * cbLight._m0[_2623].z) * _2691) * _2692) + _2551;
    }
    float _2727;
    float _2729;
    float _2731;
    if (_2341)
    {
        _2727 = _2613;
        _2729 = _2615;
        _2731 = _2617;
    }
    else
    {
        uint _2738 = _2246 + 3u;
        uint _2742 = _2246 + 11u;
        float _2756 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2738].w)) * _992) * 0.949999988079071044921875);
        float _2757 = _2756 * _2756;
        float _2758 = cbLight._m0[_2738].x + _1073;
        float _2759 = cbLight._m0[_2738].y + _1074;
        float _2760 = cbLight._m0[_2738].z + _1075;
        float _2764 = inversesqrt(dot(vec3(_2758, _2759, _2760), vec3(_2758, _2759, _2760)));
        float _2765 = _2764 * _2758;
        float _2766 = _2764 * _2759;
        float _2767 = _2764 * _2760;
        float _2768 = dot(vec3(_989, _990, _991), vec3(cbLight._m0[_2738].xyz));
        float _4789 = isnan(0.0) ? _2768 : (isnan(_2768) ? 0.0 : max(_2768, 0.0));
        float _2771 = isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0));
        float _2772 = dot(vec3(_989, _990, _991), vec3(_2765, _2766, _2767));
        float _4800 = isnan(0.0) ? _2772 : (isnan(_2772) ? 0.0 : max(_2772, 0.0));
        float _2775 = isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0));
        float _2776 = dot(vec3(cbLight._m0[_2738].xyz), vec3(_2765, _2766, _2767));
        float _4811 = isnan(0.0) ? _2776 : (isnan(_2776) ? 0.0 : max(_2776, 0.0));
        float _2780 = _2757 * _2757;
        float _2784 = ((_2775 * _2775) * (_2780 + (-1.0))) + 1.0;
        float _2791 = exp2(log2(1.0 - (isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0)))) * 5.0);
        float _2798 = 1.0 - _2757;
        float _2808 = (0.5 / (((_2415 * ((_2771 * _2798) + _2757)) + 9.9999999392252902907785028219223e-09) + (((_2415 * _2798) + _2757) * _2771))) * _2771;
        float _4822 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0));
        float _2810 = (isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0))) * (_2780 / ((_2784 * _2784) * 3.141590118408203125));
        float _2811 = isnan(1.0) ? _2262 : (isnan(_2262) ? 1.0 : min(_2262, 1.0));
        _2727 = (((((_2791 * _2437) + _1153) * cbLight._m0[_2742].x) * _2810) * _2811) + _2613;
        _2729 = (((((_2791 * _2439) + _1155) * cbLight._m0[_2742].y) * _2810) * _2811) + _2615;
        _2731 = (((((_2791 * _2440) + _1156) * cbLight._m0[_2742].z) * _2810) * _2811) + _2617;
    }
    float _2946;
    float _2948;
    float _2950;
    float _2952;
    float _2954;
    float _2956;
    if (_2244.y == 0u)
    {
        float _2886 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2887 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2886;
        float _2888 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2886;
        float _2889 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2886;
        uvec4 _2901 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2902 = _2901.x;
        uint _2913 = uint((float(_2901.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1091) / _2902))) + floor(float(uint(cbSceneParam._m0[85u].x * _1090) / _2902)));
        float _2923 = (log2(_2889 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2924 = isnan(0.0) ? _2923 : (isnan(_2923) ? 0.0 : max(_2923, 0.0));
        uint _2927 = uint(isnan(14.0) ? _2924 : (isnan(_2924) ? 14.0 : min(_2924, 14.0)));
        uvec4 _2932 = texelFetch(g_lightClusterGridBuffer, int(((_2927 << 2u) + (_2913 << 6u)) >> 2u));
        uint _2933 = _2932.x;
        uint _2934 = _2901.z;
        float _3063;
        float _3065;
        float _3067;
        float _3069;
        float _3071;
        float _3073;
        if (((((1u << ((_2934 >> 4u) & 15u)) + 4294967295u) & _2933) == 0u) || ((_2934 & 240u) == 0u))
        {
            _3063 = 0.0;
            _3065 = 0.0;
            _3067 = 0.0;
            _3069 = 0.0;
            _3071 = 0.0;
            _3073 = 0.0;
        }
        else
        {
            float _3064;
            float _3066;
            float _3068;
            float _3070;
            float _3072;
            float _3074;
            float _3224 = 0.0;
            float _3225 = 0.0;
            float _3226 = 0.0;
            float _3227 = 0.0;
            float _3228 = 0.0;
            float _3229 = 0.0;
            uint _3230 = 0u;
            uint _3239;
            bool _3240;
            for (;;)
            {
                _3239 = texelFetch(g_lightClassification, int((((_2927 << 5u) + (_2913 << 9u)) + (_3230 << 2u)) >> 2u)).x;
                _3240 = _3239 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3240)
                {
                    frontier_phi_68_pred = _3224;
                    frontier_phi_68_pred_1 = _3229;
                    frontier_phi_68_pred_2 = _3228;
                    frontier_phi_68_pred_3 = _3227;
                    frontier_phi_68_pred_4 = _3226;
                    frontier_phi_68_pred_5 = _3225;
                }
                else
                {
                    float _3369;
                    float _3370;
                    float _3371;
                    float _3372;
                    float _3373;
                    float _3374;
                    uint _3375;
                    _3369 = _3224;
                    _3370 = _3225;
                    _3371 = _3226;
                    _3372 = _3227;
                    _3373 = _3228;
                    _3374 = _3229;
                    _3375 = _3239;
                    float _3296;
                    float _3297;
                    float _3298;
                    float _3299;
                    float _3300;
                    float _3301;
                    for (;;)
                    {
                        uint _3379 = uint(findLSB(_3375)) + (_3230 << 5u);
                        uint _3376 = (_3375 + 4294967295u) & _3375;
                        uint _3381 = _3379 * 48u;
                        vec4 _3395 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3381)).x, texelFetch(g_PointLightRenderingBuffer, int(_3381 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3381 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3381 + 3u)).x));
                        uint _3401 = (_3379 * 48u) + 4u;
                        vec4 _3414 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3401)).x, texelFetch(g_PointLightRenderingBuffer, int(_3401 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3401 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3401 + 3u)).x));
                        uint _3420 = (_3379 * 48u) + 8u;
                        vec3 _3431 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3420)).x, texelFetch(g_PointLightRenderingBuffer, int(_3420 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3420 + 2u)).x));
                        float _3435 = _3395.x - _2887;
                        float _3436 = _3395.y - _2888;
                        float _3437 = _3395.z - _2889;
                        float _3438 = dot(vec3(_3435, _3436, _3437), vec3(_3435, _3436, _3437));
                        float _3441 = inversesqrt(_3438);
                        float _3442 = _3441 * _3435;
                        float _3443 = _3441 * _3436;
                        float _3444 = _3441 * _3437;
                        float _3445 = dot(vec3(_1109, _1112, _1115), vec3(_3442, _3443, _3444));
                        float _3450 = 1.0 - (_3438 * _3395.w);
                        float _4848 = isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : max(_3450, 0.0));
                        float _3451 = isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0));
                        float _3452 = sqrt(_3438) * _3414.w;
                        float _3455 = 1.39999997615814208984375 / (_3452 + 1.39999997615814208984375);
                        float _3456 = _3455 * _3455;
                        float _3459 = ((1.0 - _3456) * _3445) + _3456;
                        float _3462 = _3452 * _3452;
                        float _3466 = ((isnan(0.0) ? _3459 : (isnan(_3459) ? 0.0 : max(_3459, 0.0))) * _3451) / ((_3462 * 0.699999988079071044921875) + 1.0);
                        float _3470 = (-0.0) - _2887;
                        float _3471 = (-0.0) - _2888;
                        float _3472 = (-0.0) - _2889;
                        float _3476 = inversesqrt(dot(vec3(_3470, _3471, _3472), vec3(_3470, _3471, _3472)));
                        float _3477 = _3476 * _3470;
                        float _3478 = _3476 * _3471;
                        float _3479 = _3476 * _3472;
                        float _3487 = exp2(log2(1.0 / ((_3462 * 3.5) + 5.0)) * 0.25);
                        float _3488 = 1.0 - _1184;
                        float _3495 = sqrt(1.0 - ((1.0 - (_3488 * _3488)) * (1.0 - (_3487 * _3487))));
                        float _3496 = _3495 * _3495;
                        float _3497 = _3496 * _3496;
                        float _3498 = _3477 + _3442;
                        float _3499 = _3478 + _3443;
                        float _3500 = _3479 + _3444;
                        float _3504 = inversesqrt(dot(vec3(_3498, _3499, _3500), vec3(_3498, _3499, _3500)));
                        float _3508 = dot(vec3(_1109, _1112, _1115), vec3(_3477, _3478, _3479));
                        float _4864 = isnan(0.0) ? _3508 : (isnan(_3508) ? 0.0 : max(_3508, 0.0));
                        float _3511 = isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0));
                        float _3512 = dot(vec3(_1109, _1112, _1115), vec3(_3504 * _3498, _3504 * _3499, _3504 * _3500));
                        float _4875 = isnan(0.0) ? _3512 : (isnan(_3512) ? 0.0 : max(_3512, 0.0));
                        float _3515 = isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0));
                        float _3519 = ((_3515 * _3515) * (_3497 + (-1.0))) + 1.0;
                        float _3520 = _3455 * _3496;
                        float _3521 = _3520 * _3520;
                        float _3524 = ((1.0 - _3521) * _3445) + _3521;
                        float _4886 = isnan(0.0) ? _3524 : (isnan(_3524) ? 0.0 : max(_3524, 0.0));
                        float _3525 = isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0));
                        float _3526 = 1.0 - _3496;
                        float _3536 = (0.5 / (((_3525 * ((_3511 * _3526) + _3496)) + 9.9999999392252902907785028219223e-09) + (((_3525 * _3526) + _3496) * _3511))) * _3525;
                        float _4897 = isnan(0.0) ? _3536 : (isnan(_3536) ? 0.0 : max(_3536, 0.0));
                        float _3547 = (((_3497 * 3.1415927410125732421875) * (isnan(1.0) ? _4897 : (isnan(_4897) ? 1.0 : min(_4897, 1.0)))) / ((_3519 * _3519) * ((_3462 * 2.1991131305694580078125) + 3.141590118408203125))) * _3451;
                        _3299 = (_3466 * _3414.x) + _3372;
                        _3300 = (_3466 * _3414.y) + _3373;
                        _3301 = (_3466 * _3414.z) + _3374;
                        _3296 = (_3547 * _3431.x) + _3369;
                        _3297 = (_3547 * _3431.y) + _3370;
                        _3298 = (_3547 * _3431.z) + _3371;
                        if (_3376 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3369 = _3296;
                            _3370 = _3297;
                            _3371 = _3298;
                            _3372 = _3299;
                            _3373 = _3300;
                            _3374 = _3301;
                            _3375 = _3376;
                        }
                    }
                    frontier_phi_68_pred = _3296;
                    frontier_phi_68_pred_1 = _3301;
                    frontier_phi_68_pred_2 = _3300;
                    frontier_phi_68_pred_3 = _3299;
                    frontier_phi_68_pred_4 = _3298;
                    frontier_phi_68_pred_5 = _3297;
                }
                _3064 = frontier_phi_68_pred;
                _3074 = frontier_phi_68_pred_1;
                _3072 = frontier_phi_68_pred_2;
                _3070 = frontier_phi_68_pred_3;
                _3068 = frontier_phi_68_pred_4;
                _3066 = frontier_phi_68_pred_5;
                uint _3231 = _3230 + 1u;
                if (_3231 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3224 = _3064;
                    _3225 = _3066;
                    _3226 = _3068;
                    _3227 = _3070;
                    _3228 = _3072;
                    _3229 = _3074;
                    _3230 = _3231;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3063 = _3064;
            _3065 = _3066;
            _3067 = _3068;
            _3069 = _3070;
            _3071 = _3072;
            _3073 = _3074;
        }
        uvec4 _3077 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3078 = _3077.z;
        uint _3080 = (_3078 >> 8u) & 15u;
        float _3192;
        float _3194;
        float _3196;
        float _3198;
        float _3200;
        float _3202;
        if (((4294967295u << _3080) & _2933) == 0u)
        {
            _3192 = _3063;
            _3194 = _3065;
            _3196 = _3067;
            _3198 = _3069;
            _3200 = _3071;
            _3202 = _3073;
        }
        else
        {
            float _3217 = inversesqrt(dot(vec3(_2887, _2888, _2889), vec3(_2887, _2888, _2889)));
            float _3218 = _3217 * _2887;
            float _3219 = _3217 * _2888;
            float _3220 = _3217 * _2889;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3080 < ((_3078 >> 12u) & 15u))
            {
                float _3193;
                float _3195;
                float _3197;
                float _3199;
                float _3201;
                float _3203;
                float _3352 = _3063;
                float _3353 = _3065;
                float _3354 = _3067;
                float _3355 = _3069;
                float _3356 = _3071;
                float _3357 = _3073;
                uint _3358 = _3080;
                uint _3367;
                bool _3368;
                for (;;)
                {
                    _3367 = texelFetch(g_lightClassification, int((((_2927 << 5u) + (_2913 << 9u)) + (_3358 << 2u)) >> 2u)).x;
                    _3368 = _3367 == 0u;
                    float frontier_phi_79_pred;
                    float frontier_phi_79_pred_1;
                    float frontier_phi_79_pred_2;
                    float frontier_phi_79_pred_3;
                    float frontier_phi_79_pred_4;
                    float frontier_phi_79_pred_5;
                    if (_3368)
                    {
                        frontier_phi_79_pred = _3357;
                        frontier_phi_79_pred_1 = _3356;
                        frontier_phi_79_pred_2 = _3355;
                        frontier_phi_79_pred_3 = _3354;
                        frontier_phi_79_pred_4 = _3353;
                        frontier_phi_79_pred_5 = _3352;
                    }
                    else
                    {
                        float _3561;
                        float _3562;
                        float _3563;
                        float _3564;
                        float _3565;
                        float _3566;
                        float _3854;
                        float _3855;
                        float _3856;
                        float _3857;
                        float _3858;
                        float _3859;
                        float _3574 = _3352;
                        float _3575 = _3353;
                        float _3576 = _3354;
                        float _3577 = _3355;
                        float _3578 = _3356;
                        float _3579 = _3357;
                        uint _3580 = _3367;
                        uint _3581;
                        vec4 _3606;
                        float _3607;
                        vec4 _3622;
                        vec3 _3634;
                        vec4 _3649;
                        vec4 _3664;
                        float _3710;
                        bool _3711;
                        for (;;)
                        {
                            uint _3591 = ((_3358 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3580));
                            _3581 = (_3580 + 4294967295u) & _3580;
                            uint _3593 = _3591 * 40u;
                            _3606 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3593)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 3u)).x));
                            _3607 = _3606.w;
                            uint _3609 = (_3591 * 40u) + 4u;
                            _3622 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3609)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 3u)).x));
                            uint _3624 = (_3591 * 40u) + 8u;
                            _3634 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3624)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3624 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3624 + 2u)).x));
                            uint _3636 = (_3591 * 40u) + 16u;
                            _3649 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3636)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 3u)).x));
                            uint _3651 = (_3591 * 40u) + 20u;
                            _3664 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3651)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3651 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3651 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3651 + 3u)).x));
                            uint _3666 = (_3591 * 40u) + 24u;
                            vec4 _3679 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3666)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3666 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3666 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3666 + 3u)).x));
                            uint _3685 = (_3591 * 40u) + 28u;
                            vec4 _3698 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3685)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3685 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3685 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3685 + 3u)).x));
                            _3710 = fma(_2889, _3698.z, fma(_2888, _3698.y, _3698.x * _2887)) + _3698.w;
                            _3711 = !((fma(_2889, _3679.z, fma(_2888, _3679.y, _3679.x * _2887)) + _3679.w) <= 0.0);
                            float frontier_phi_85_pred;
                            float frontier_phi_85_pred_1;
                            float frontier_phi_85_pred_2;
                            float frontier_phi_85_pred_3;
                            float frontier_phi_85_pred_4;
                            float frontier_phi_85_pred_5;
                            if (_3711)
                            {
                                float _3738 = _3606.x - _2887;
                                float _3739 = _3606.y - _2888;
                                float _3740 = _3606.z - _2889;
                                float _3741 = dot(vec3(_3738, _3739, _3740), vec3(_3738, _3739, _3740));
                                float _3744 = inversesqrt(_3741);
                                float _3745 = _3744 * _3738;
                                float _3746 = _3744 * _3739;
                                float _3747 = _3744 * _3740;
                                float _3751 = 1.0 - (_3741 / (_3607 * _3607));
                                float _4908 = isnan(0.0) ? _3751 : (isnan(_3751) ? 0.0 : max(_3751, 0.0));
                                float _3752 = isnan(1.0) ? _4908 : (isnan(_4908) ? 1.0 : min(_4908, 1.0));
                                float _3756 = sqrt(_3741) * _3622.w;
                                float _3758 = 1.39999997615814208984375 / (_3756 + 1.39999997615814208984375);
                                float _3759 = _3758 * _3758;
                                float _3762 = ((1.0 - _3759) * dot(vec3(_3745, _3746, _3747), vec3(_1109, _1112, _1115))) + _3759;
                                float _3765 = _3756 * _3756;
                                float _3769 = (fma(_2889, _3649.z, fma(_2888, _3649.y, _3649.x * _2887)) + _3649.w) / _3710;
                                float _3770 = (fma(_2889, _3664.z, fma(_2888, _3664.y, _3664.x * _2887)) + _3664.w) / _3710;
                                float _3774 = 1.0 - dot(vec2(_3769, _3770), vec2(_3769, _3770));
                                float _4924 = isnan(0.0) ? _3774 : (isnan(_3774) ? 0.0 : max(_3774, 0.0));
                                float _3775 = isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0));
                                float _3776 = _3775 * (((isnan(0.0) ? _3762 : (isnan(_3762) ? 0.0 : max(_3762, 0.0))) * _3752) / ((_3765 * 0.699999988079071044921875) + 1.0));
                                float _3788 = exp2(log2(1.0 / ((_3765 * 3.5) + 5.0)) * 0.25);
                                float _3789 = 1.0 - _1184;
                                float _3796 = sqrt(1.0 - ((1.0 - (_3789 * _3789)) * (1.0 - (_3788 * _3788))));
                                float _3797 = _3796 * _3796;
                                float _3798 = _3797 * _3797;
                                float _3799 = _3745 - _3218;
                                float _3800 = _3746 - _3219;
                                float _3801 = _3747 - _3220;
                                float _3805 = inversesqrt(dot(vec3(_3799, _3800, _3801), vec3(_3799, _3800, _3801)));
                                float _3809 = dot(vec3(_1109, _1112, _1115), vec3((-0.0) - _3218, (-0.0) - _3219, (-0.0) - _3220));
                                float _4935 = isnan(0.0) ? _3809 : (isnan(_3809) ? 0.0 : max(_3809, 0.0));
                                float _3812 = isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0));
                                float _3813 = dot(vec3(_1109, _1112, _1115), vec3(_3805 * _3799, _3805 * _3800, _3805 * _3801));
                                float _4946 = isnan(0.0) ? _3813 : (isnan(_3813) ? 0.0 : max(_3813, 0.0));
                                float _3816 = isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0));
                                float _3820 = ((_3816 * _3816) * (_3798 + (-1.0))) + 1.0;
                                float _3821 = _3758 * _3797;
                                float _3822 = _3821 * _3821;
                                float _3828 = ((1.0 - _3822) * dot(vec3(_1109, _1112, _1115), vec3(_3745, _3746, _3747))) + _3822;
                                float _4957 = isnan(0.0) ? _3828 : (isnan(_3828) ? 0.0 : max(_3828, 0.0));
                                float _3829 = isnan(1.0) ? _4957 : (isnan(_4957) ? 1.0 : min(_4957, 1.0));
                                float _3830 = 1.0 - _3797;
                                float _3840 = (0.5 / (((_3829 * ((_3812 * _3830) + _3797)) + 9.9999999392252902907785028219223e-09) + (((_3829 * _3830) + _3797) * _3812))) * _3829;
                                float _4968 = isnan(0.0) ? _3840 : (isnan(_3840) ? 0.0 : max(_3840, 0.0));
                                float _3850 = (_3775 * _3752) * (((_3798 * 3.1415927410125732421875) * (isnan(1.0) ? _4968 : (isnan(_4968) ? 1.0 : min(_4968, 1.0)))) / ((_3820 * _3820) * ((_3765 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_85_pred = _3776 * _3622.y;
                                frontier_phi_85_pred_1 = _3776 * _3622.x;
                                frontier_phi_85_pred_2 = _3850 * _3634.z;
                                frontier_phi_85_pred_3 = _3850 * _3634.y;
                                frontier_phi_85_pred_4 = _3850 * _3634.x;
                                frontier_phi_85_pred_5 = _3776 * _3622.z;
                            }
                            else
                            {
                                frontier_phi_85_pred = 0.0;
                                frontier_phi_85_pred_1 = 0.0;
                                frontier_phi_85_pred_2 = 0.0;
                                frontier_phi_85_pred_3 = 0.0;
                                frontier_phi_85_pred_4 = 0.0;
                                frontier_phi_85_pred_5 = 0.0;
                            }
                            _3858 = frontier_phi_85_pred;
                            _3857 = frontier_phi_85_pred_1;
                            _3856 = frontier_phi_85_pred_2;
                            _3855 = frontier_phi_85_pred_3;
                            _3854 = frontier_phi_85_pred_4;
                            _3859 = frontier_phi_85_pred_5;
                            _3564 = _3857 + _3577;
                            _3565 = _3858 + _3578;
                            _3566 = _3859 + _3579;
                            _3561 = _3854 + _3574;
                            _3562 = _3855 + _3575;
                            _3563 = _3856 + _3576;
                            if (_3581 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3574 = _3561;
                                _3575 = _3562;
                                _3576 = _3563;
                                _3577 = _3564;
                                _3578 = _3565;
                                _3579 = _3566;
                                _3580 = _3581;
                                continue;
                            }
                        }
                        frontier_phi_79_pred = _3566;
                        frontier_phi_79_pred_1 = _3565;
                        frontier_phi_79_pred_2 = _3564;
                        frontier_phi_79_pred_3 = _3563;
                        frontier_phi_79_pred_4 = _3562;
                        frontier_phi_79_pred_5 = _3561;
                    }
                    _3203 = frontier_phi_79_pred;
                    _3201 = frontier_phi_79_pred_1;
                    _3199 = frontier_phi_79_pred_2;
                    _3197 = frontier_phi_79_pred_3;
                    _3195 = frontier_phi_79_pred_4;
                    _3193 = frontier_phi_79_pred_5;
                    uint _3359 = _3358 + 1u;
                    if (_3359 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3352 = _3193;
                        _3353 = _3195;
                        _3354 = _3197;
                        _3355 = _3199;
                        _3356 = _3201;
                        _3357 = _3203;
                        _3358 = _3359;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3197;
                frontier_phi_60_61_ladder_1 = _3203;
                frontier_phi_60_61_ladder_2 = _3201;
                frontier_phi_60_61_ladder_3 = _3199;
                frontier_phi_60_61_ladder_4 = _3195;
                frontier_phi_60_61_ladder_5 = _3193;
            }
            else
            {
                frontier_phi_60_61_ladder = _3067;
                frontier_phi_60_61_ladder_1 = _3073;
                frontier_phi_60_61_ladder_2 = _3071;
                frontier_phi_60_61_ladder_3 = _3069;
                frontier_phi_60_61_ladder_4 = _3065;
                frontier_phi_60_61_ladder_5 = _3063;
            }
            _3192 = frontier_phi_60_61_ladder_5;
            _3194 = frontier_phi_60_61_ladder_4;
            _3196 = frontier_phi_60_61_ladder;
            _3198 = frontier_phi_60_61_ladder_3;
            _3200 = frontier_phi_60_61_ladder_2;
            _3202 = frontier_phi_60_61_ladder_1;
        }
        float _3207 = isnan(1.0) ? _1168 : (isnan(_1168) ? 1.0 : min(_1168, 1.0));
        _2946 = (_3207 * _3198) + _2379;
        _2948 = (_3207 * _3200) + _2381;
        _2950 = (_3207 * _3202) + _2383;
        _2952 = ((_3192 * _1153) * _3207) + _2727;
        _2954 = ((_3194 * _1155) * _3207) + _2729;
        _2956 = ((_3196 * _1156) * _3207) + _2731;
    }
    else
    {
        _2946 = _2379;
        _2948 = _2381;
        _2950 = _2383;
        _2952 = _2727;
        _2954 = _2729;
        _2956 = _2731;
    }
    uint _2962 = _1129 + uint(cbMatDynParam._m0[0u].w);
    float _2968 = ((((((_894.x - _889.x) * _872) + _889.x) * cbMtdParam._m0[21u].x) + ((cbMtdParam._m0[27u].x * _818) * cbMtdParam._m0[20u].x)) * _827) * cbInstanceData._m0[_2962].x;
    float _2969 = ((((((_894.y - _889.y) * _872) + _889.y) * cbMtdParam._m0[21u].y) + ((cbMtdParam._m0[27u].x * (((_807.y - _805) * _785) + _805)) * cbMtdParam._m0[20u].y)) * _827) * cbInstanceData._m0[_2962].y;
    float _2970 = ((((((_894.z - _889.z) * _872) + _889.z) * cbMtdParam._m0[21u].z) + ((cbMtdParam._m0[27u].x * (((_807.z - _806) * _785) + _806)) * cbMtdParam._m0[20u].z)) * _827) * cbInstanceData._m0[_2962].z;
    float _4984 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
    float _4995 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
    float _5006 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
    float _2987 = (((isnan(1.0) ? _4984 : (isnan(_4984) ? 1.0 : min(_4984, 1.0))) * (_2946 + ((isnan(0.0) ? _1918 : (isnan(_1918) ? 0.0 : max(_1918, 0.0))) * _1168))) + ((_2952 + ((isnan(0.0) ? _2210 : (isnan(_2210) ? 0.0 : max(_2210, 0.0))) * _1997)) * cbPerFrame._m0[3u].x)) + _2968;
    float _2989 = (_2969 + ((_2954 + ((isnan(0.0) ? _2213 : (isnan(_2213) ? 0.0 : max(_2213, 0.0))) * _1997)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4995 : (isnan(_4995) ? 1.0 : min(_4995, 1.0))) * (_2948 + ((isnan(0.0) ? _1921 : (isnan(_1921) ? 0.0 : max(_1921, 0.0))) * _1168)));
    float _2991 = (_2970 + ((_2956 + ((isnan(0.0) ? _2216 : (isnan(_2216) ? 0.0 : max(_2216, 0.0))) * _1997)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5006 : (isnan(_5006) ? 1.0 : min(_5006, 1.0))) * (_2950 + ((isnan(0.0) ? _1924 : (isnan(_1924) ? 0.0 : max(_1924, 0.0))) * _1168)));
    float _2992 = isnan(0.0) ? _2987 : (isnan(_2987) ? 0.0 : max(_2987, 0.0));
    float _2993 = isnan(0.0) ? _2989 : (isnan(_2989) ? 0.0 : max(_2989, 0.0));
    float _2994 = isnan(0.0) ? _2991 : (isnan(_2991) ? 0.0 : max(_2991, 0.0));
    float _3000 = cbMtdParam._m0[2u].x * _2968;
    float _3001 = cbMtdParam._m0[2u].y * _2969;
    float _3002 = cbMtdParam._m0[2u].z * _2970;
    float _5032 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3004 = isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0));
    uint _3005 = _1128 + 6u;
    float _3013 = _1090 / cbSceneParam._m0[86u].x;
    float _3014 = _1091 / cbSceneParam._m0[86u].y;
    vec4 _3028 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3013, _3014, (log2((isnan(cbSceneParam._m0[77u].w) ? _1016 : (isnan(_1016) ? cbSceneParam._m0[77u].w : min(_1016, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3030 = _3028.x;
    float _3031 = _3028.y;
    float _3032 = _3028.z;
    float _3033 = _3028.w;
    float _3125;
    float _3127;
    float _3129;
    float _3131;
    if (_1016 > cbSceneParam._m0[78u].w)
    {
        float _3088 = isnan(_1016) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1016 : min(cbSceneParam._m0[80u].w, _1016));
        float _3089 = _3088 / _1016;
        float _3100 = _3089 * _1066;
        float _3101 = _1067 * _3089;
        float _3102 = (-0.0) - _3101;
        float _3103 = _3089 * _1068;
        float _3105 = (cbSceneParam._m0[77u].w * _3102) / _3088;
        float _3106 = _3105 + cbSceneParam._m0[79u].w;
        float _3107 = cbSceneParam._m0[79u].w - _3101;
        float _3113 = sqrt(((_3100 * _3100) + (_3101 * _3101)) + (_3103 * _3103));
        float _3116 = (1.0 - (cbSceneParam._m0[77u].w / _3088)) * _3113;
        float _3121 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3123 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3309;
        if (abs((_3102 - _3105) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3309 = ((((_3106 > 0.0) ? exp2(_3121 * _3106) : (2.0 - exp2(_3123 * _3106))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3116;
        }
        else
        {
            float _3253 = 1.0 / cbSceneParam._m0[80u].x;
            float _3254 = isnan(_3107) ? _3106 : (isnan(_3106) ? _3107 : max(_3106, _3107));
            float _3255 = isnan(_3107) ? _3106 : (isnan(_3106) ? _3107 : min(_3106, _3107));
            float _3264 = isnan(0.0) ? _3254 : (isnan(_3254) ? 0.0 : min(_3254, 0.0));
            float _3265 = isnan(0.0) ? _3255 : (isnan(_3255) ? 0.0 : min(_3255, 0.0));
            _3309 = ((abs(_3113 / _3102) * cbSceneParam._m0[80u].y) * ((((_3264 - _3265) * 2.0) - ((exp2(_3121 * (isnan(0.0) ? _3254 : (isnan(_3254) ? 0.0 : max(_3254, 0.0)))) - exp2(_3121 * (isnan(0.0) ? _3255 : (isnan(_3255) ? 0.0 : max(_3255, 0.0))))) * _3253)) - ((exp2(_3123 * _3264) - exp2(_3123 * _3265)) * _3253))) + (_3116 * cbSceneParam._m0[80u].z);
        }
        vec4 _3311 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3013, _3014, 1.0), 0.0);
        float _3320 = exp2((_3309 * (-1.44269502162933349609375)) * (1.0 - _3311.w));
        float _3321 = log2(_3320);
        float _3337 = log2(_3033);
        _3125 = (exp2(_3337 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3321 * cbSceneParam._m0[78u].x)) * _3311.x) / cbSceneParam._m0[78u].x)) + _3030;
        _3127 = (exp2(_3337 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3321 * cbSceneParam._m0[78u].y)) * _3311.y) / cbSceneParam._m0[78u].y)) + _3031;
        _3129 = (exp2(_3337 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3321 * cbSceneParam._m0[78u].z)) * _3311.z) / cbSceneParam._m0[78u].z)) + _3032;
        _3131 = _3320 * _3033;
    }
    else
    {
        _3125 = _3030;
        _3127 = _3031;
        _3129 = _3032;
        _3131 = _3033;
    }
    bool _3347;
    vec4 _3141;
    vec4 _3163;
    float _3165;
    float _3169;
    float _3170;
    float _3171;
    float _3174;
    float _3177;
    float _3180;
    float _3181;
    bool _3191;
    for (;;)
    {
        _3141 = cbMatDynParam._m0[0u];
        float _3143 = roundEven(_3141.y);
        bool _3144 = _3143 == 3.0;
        float _3145 = log2(_3131);
        float _3149 = exp2(_3145 * cbSceneParam._m0[78u].x);
        float _3150 = exp2(_3145 * cbSceneParam._m0[78u].y);
        float _3151 = exp2(_3145 * cbSceneParam._m0[78u].z);
        float _3152 = _3149 * _2992;
        float _3153 = _3150 * _2993;
        float _3154 = _3151 * _2994;
        float _3161 = _1079 + (-0.5);
        _3163 = cbMtdParam._m0[1u];
        _3165 = _3163.y * _3161;
        float _3168 = (_3143 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3169 = _3168 * (_3144 ? _3152 : (_3152 + (cbSceneParam._m0[72u].w * _3125)));
        _3170 = _3168 * (_3144 ? _3153 : (_3153 + (cbSceneParam._m0[72u].w * _3127)));
        _3171 = _3168 * (_3144 ? _3154 : (_3154 + (cbSceneParam._m0[72u].w * _3129)));
        _3174 = ((_3000 * _3004) * _3149) * _3168;
        _3177 = ((_3001 * _3004) * _3150) * _3168;
        _3180 = ((_3002 * _3004) * _3151) * _3168;
        _3181 = _3161 * 0.999000012874603271484375;
        _3191 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3191)
        {
            if ((cbInstanceData._m0[_1128 + 7u].x + _3181) < 0.5)
            {
                _3347 = true;
                break;
            }
        }
        uint _3288 = _1129 + uint(_3141.w);
        if ((cbInstanceData._m0[_3288].w < 1.0) && ((cbInstanceData._m0[_3288].w + _3181) < 0.5))
        {
            _3347 = true;
            break;
        }
        if ((_3165 + 1.0) < _3163.x)
        {
            _3347 = true;
            break;
        }
        _3347 = false;
        break;
    }
    float _3552;
    if (_3347)
    {
        discard_state = true;
        _3552 = 0.0;
    }
    else
    {
        _3552 = cbInstanceData._m0[_3005].w;
    }
    SV_Target.x = _3169;
    SV_Target.y = _3170;
    SV_Target.z = _3171;
    SV_Target.w = _3552;
    SV_Target_1.x = _3174;
    SV_Target_1.y = _3177;
    SV_Target_1.z = _3180;
    SV_Target_1.w = cbInstanceData._m0[_3005].w;
    discard_exit();
}


