#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[34];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_C4200_Body_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_C4200_Body_snp_0_Texture2D_1;
layout(set = 0, binding = 13) uniform texture2D C_C4200_Body_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_C4200_Body_snp_0_Texture2D_6;
layout(set = 0, binding = 15) uniform texture2D C_C4200_Body_snp_0_Texture2D_7;
layout(set = 0, binding = 16) uniform texture2D C_C4200_Body_snp_0_Texture2D_8;
layout(set = 0, binding = 17) uniform texture2D C_C4200_Body_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_C4200_Body_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform texture2D C_C4200_Body_snp_0_Texture2D_16;
layout(set = 0, binding = 4) uniform texture2D C_C4200_Body_snp_0_Texture2D_17;
layout(set = 0, binding = 5) uniform texture2D C_C4200_Body_snp_0_Texture2D_18;
layout(set = 0, binding = 6) uniform texture2D C_C4200_Body_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_C4200_Body_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_C4200_Body_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_C4200_Body_snp_0_Texture2D_21;
layout(set = 0, binding = 18) uniform texture2DArray C_C4200_Body_snp_0_Texture2DArray_0;
layout(set = 0, binding = 19) uniform texture2DArray C_C4200_Body_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1567;
float _4263;
float _4264;
float _4265;
float _4266;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _226 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _227 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _228 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _234 = inversesqrt(dot(vec3(_226, _227, _228), vec3(_226, _227, _228)));
    float _241 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _248 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _268 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w));
    vec4 _288 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_1) + cbTextureTilingScale._m0[15u].w));
    float _301 = exp2(log2(_288.w * cbMtdParam._m0[30u].y) * cbMtdParam._m0[24u].x);
    float _302 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _303 = isnan(1.0) ? _302 : (isnan(_302) ? 1.0 : min(_302, 1.0));
    vec4 _317 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _321 = _317.z;
    float _329 = exp2(log2(_321 * cbMtdParam._m0[24u].y) * cbMtdParam._m0[23u].y);
    float _330 = isnan(0.0) ? _329 : (isnan(_329) ? 0.0 : max(_329, 0.0));
    float _331 = isnan(1.0) ? _330 : (isnan(_330) ? 1.0 : min(_330, 1.0));
    float _352 = roundEven(5.0 - ((texture(sampler2D(C_C4200_Body_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w)).x + (-0.02500000037252902984619140625)) * 8.0));
    float _353 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _354 = isnan(4.0) ? _353 : (isnan(_353) ? 4.0 : min(_353, 4.0));
    float _367 = floor(_354);
    vec4 _370 = texture(sampler2DArray(C_C4200_Body_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[18u].x * TEXCOORD) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD_1) + cbTextureTilingScale._m0[18u].w, _367));
    vec4 _395 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _406 = cbMtdParam._m0[9u].x * _395.x;
    float _407 = cbMtdParam._m0[9u].y * _395.y;
    float _408 = cbMtdParam._m0[9u].z * _395.z;
    float _415 = (((cbMtdParam._m0[10u].x * _370.x) - _406) * _331) + _406;
    float _416 = (((cbMtdParam._m0[10u].y * _370.y) - _407) * _331) + _407;
    float _417 = (((cbMtdParam._m0[10u].z * _370.z) - _408) * _331) + _408;
    float _423 = exp2(log2(_317.w) * cbMtdParam._m0[24u].w);
    vec4 _436 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w));
    float _456 = (((cbMtdParam._m0[16u].x * _436.x) - _415) * _423) + _415;
    float _457 = (((cbMtdParam._m0[16u].y * _436.y) - _416) * _423) + _416;
    float _458 = (((cbMtdParam._m0[16u].z * _436.z) - _417) * _423) + _417;
    vec4 _471 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD_1) + cbTextureTilingScale._m0[13u].w));
    float _496 = (_288.x * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].x * _471.x) - _456) * _303) + _456);
    float _498 = (_288.y * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].y * _471.y) - _457) * _303) + _457);
    float _500 = (_288.z * 4.55000019073486328125) * ((((cbMtdParam._m0[19u].z * _471.z) - _458) * _303) + _458);
    vec4 _513 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1) + cbTextureTilingScale._m0[4u].w));
    float _532 = TEXCOORD_3.x - ((cbMtdParam._m0[25u].x * (1.0 - TEXCOORD_3.x)) * (_268.x + 0.00999999977648258209228515625));
    float _534 = _532 * (cbMtdParam._m0[25u].z + 1.0);
    float _4305 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
    float _535 = isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0));
    float _542 = (_535 * ((cbMtdParam._m0[11u].x * _513.x) - _496)) + _496;
    float _543 = (((cbMtdParam._m0[11u].y * _513.y) - _498) * _535) + _498;
    float _544 = (((cbMtdParam._m0[11u].z * _513.z) - _500) * _535) + _500;
    float _200[5];
    float _201[5];
    _200[0u] = cbMtdParam._m0[30u].z;
    _201[0u] = cbMtdParam._m0[30u].w;
    _200[1u] = cbMtdParam._m0[32u].z;
    _201[1u] = cbMtdParam._m0[32u].w;
    _200[2u] = cbMtdParam._m0[32u].x;
    _201[2u] = cbMtdParam._m0[32u].y;
    _200[3u] = cbMtdParam._m0[31u].z;
    _201[3u] = cbMtdParam._m0[31u].w;
    _200[4u] = cbMtdParam._m0[31u].x;
    _201[4u] = cbMtdParam._m0[31u].y;
    float _581 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    uint _583 = uint(int(isnan(4.0) ? _581 : (isnan(_581) ? 4.0 : min(_581, 4.0))));
    float _590 = ((_201[_583] - cbMtdParam._m0[23u].z) * _331) + cbMtdParam._m0[23u].z;
    float _593 = ((cbMtdParam._m0[23u].w - _590) * _423) + _590;
    float _596 = ((cbMtdParam._m0[26u].y - _593) * _303) + _593;
    float _601 = (cbMtdParam._m0[25u].y + 1.0) * _532;
    float _4326 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _602 = isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0));
    float _604 = _596 - (_596 * _602);
    vec4 _617 = texture(sampler2DArray(C_C4200_Body_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[19u].x * TEXCOORD) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD_1) + cbTextureTilingScale._m0[19u].w, _367));
    vec4 _635 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w));
    float _637 = _635.x;
    float _638 = _635.y;
    float _643 = cbMtdParam._m0[23u].x + _635.z;
    float _646 = (((_617.z + _200[_583]) - _643) * _331) + _643;
    vec4 _658 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_1) + cbTextureTilingScale._m0[16u].w));
    float _669 = (((_658.z - _646) + cbMtdParam._m0[30u].x) * _423) + _646;
    float _675 = ((((_321 * 2.0) * _669) - _669) * cbMtdParam._m0[25u].w) + _669;
    vec4 _687 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD_1) + cbTextureTilingScale._m0[17u].w));
    float _698 = (((cbMtdParam._m0[24u].z + _687.z) - _675) * _303) + _675;
    vec4 _710 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _722 = ((_710.z - _698) * _602) + _698;
    float _735 = cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x;
    vec4 _758 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * ((_735 * cbMtdParam._m0[33u].z) + TEXCOORD)) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * ((cbMtdParam._m0[33u].w * _735) + TEXCOORD_1)) + cbTextureTilingScale._m0[9u].w));
    float _762 = cbPerFrame._m0[22u].x * 2.0;
    float _763 = _762 * cbMtdParam._m0[28u].z;
    float _766 = (_758.x * 0.5) + (-0.25);
    float _769 = (_758.y * 0.5) + (-0.25);
    float _770 = _769 * cbMtdParam._m0[28u].y;
    float _772 = (-0.0) - (cbMtdParam._m0[28u].y * _766);
    float _774 = fract(_763);
    float _776 = fract(_763 + 0.5);
    float _787 = abs((_774 * 2.0) + (-1.0));
    vec4 _804 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_19, SS_DiffuseMap), vec2((((_774 * _772) + TEXCOORD) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_770 * _774) + TEXCOORD_1) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _806 = _804.x;
    float _807 = _804.y;
    float _808 = _804.z;
    vec4 _809 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_19, SS_DiffuseMap), vec2((((_776 * _772) + TEXCOORD) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_770 * _776) + TEXCOORD_1) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _820 = ((_809.x - _806) * _787) + _806;
    float _827 = exp2(log2(_820 * cbMtdParam._m0[28u].w) * cbMtdParam._m0[29u].x);
    float _828 = isnan(cbMtdParam._m0[29u].y) ? _827 : (isnan(_827) ? cbMtdParam._m0[29u].y : max(_827, cbMtdParam._m0[29u].y));
    float _829 = isnan(cbMtdParam._m0[29u].z) ? _828 : (isnan(_828) ? cbMtdParam._m0[29u].z : min(_828, cbMtdParam._m0[29u].z));
    float _853 = (cbMtdParam._m0[33u].x * _735) + TEXCOORD;
    float _854 = (cbMtdParam._m0[33u].y * _735) + TEXCOORD_1;
    float _857 = _762 * cbMtdParam._m0[27u].w;
    float _858 = _769 * cbMtdParam._m0[27u].z;
    float _860 = (-0.0) - (cbMtdParam._m0[27u].z * _766);
    float _861 = fract(_857);
    float _863 = fract(_857 + 0.5);
    float _874 = abs((_861 * 2.0) + (-1.0));
    vec4 _891 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_20, SS_DiffuseMap), vec2((((_861 * _860) + _853) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_858 * _861) + _854) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    vec4 _896 = texture(sampler2D(C_C4200_Body_snp_0_Texture2D_20, SS_DiffuseMap), vec2((((_863 * _860) + _853) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_858 * _863) + _854) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _933 = ((_617.x - _637) * _331) + _637;
    float _934 = ((_617.y - _638) * _331) + _638;
    float _939 = ((_658.x - _933) * _423) + _933;
    float _940 = ((_658.y - _934) * _423) + _934;
    float _949 = ((((_687.x - _939) * _303) + _939) * 2.0) + (-1.0);
    float _950 = ((((_687.y - _940) * _303) + _940) * 2.0) + (-1.0);
    float _951 = dot(vec2(_949, _950), vec2(_949, _950));
    float _4347 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
    float _956 = sqrt(1.0 - (isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0))));
    float _965 = ((cbMtdParam._m0[26u].z * ((_317.x * 2.0) + (-1.0))) + _949) + (((((_710.x * 2.0) + (-1.0)) * TEXCOORD_3.x) * cbMtdParam._m0[26u].w) * _602);
    float _966 = ((cbMtdParam._m0[26u].z * ((_317.y * 2.0) + (-1.0))) + _950) + (((((_710.y * 2.0) + (-1.0)) * TEXCOORD_3.y) * cbMtdParam._m0[26u].w) * _602);
    float _968 = gl_FragCoord.x * 0.125;
    float _970 = gl_FragCoord.y * 0.125;
    float _980 = fma(_956, _241 * NORMAL.x, fma(_966, _248 * TANGENT.x, (_234 * _226) * _965));
    float _983 = fma(_956, _241 * NORMAL.y, fma(_966, _248 * TANGENT.y, (_234 * _227) * _965));
    float _986 = fma(_956, _241 * NORMAL.z, fma(_966, _248 * TANGENT.z, (_234 * _228) * _965));
    float _990 = inversesqrt(dot(vec3(_980, _983, _986), vec3(_980, _983, _986)));
    float _991 = _990 * _980;
    float _992 = _990 * _983;
    float _993 = _990 * _986;
    float _4358 = isnan(0.0) ? _722 : (isnan(_722) ? 0.0 : max(_722, 0.0));
    float _994 = isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0));
    float _4369 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _4380 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _4391 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _4402 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _998 = isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0));
    if (!(cbMtdParam._m0[26u].x >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_968, _970)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625)))
    {
        discard_state = true;
    }
    float _1018 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1058 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1068 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1058);
    float _1069 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1058);
    float _1070 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1058);
    float _1074 = inversesqrt(dot(vec3(_1068, _1069, _1070), vec3(_1068, _1069, _1070)));
    float _1075 = _1068 * _1074;
    float _1076 = _1069 * _1074;
    float _1077 = _1070 * _1074;
    vec4 _1079 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_968, _970));
    float _1081 = _1079.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1251 = sqrt(((_1068 * _1068) + (_1069 * _1069)) + (_1070 * _1070));
        float _1257 = (cbMatDynParam._m0[5u].x * _1251) + cbMatDynParam._m0[5u].y;
        float _4413 = isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0));
        float _1258 = isnan(1.0) ? _4413 : (isnan(_4413) ? 1.0 : min(_4413, 1.0));
        float _1262 = (cbMatDynParam._m0[5u].z * _1251) + cbMatDynParam._m0[5u].w;
        float _4424 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0))) - _1258)) + _1258) < ((_1081 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1092 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1093 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1111 = fma(_993, cbSceneParam._m0[5u].z, fma(_992, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _991));
    float _1114 = fma(_993, cbSceneParam._m0[6u].z, fma(_992, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _991));
    float _1117 = fma(_993, cbSceneParam._m0[7u].z, fma(_992, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _991));
    uint _1130 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1131 = _1130 + 9u;
    uint _1132 = _1131 + uint(cbMatDynParam._m0[0u].w);
    float _1138 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0)))) * cbInstanceData._m0[_1132].x;
    float _1139 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0)))) * cbInstanceData._m0[_1132].y;
    float _1140 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0)))) * cbInstanceData._m0[_1132].z;
    float _4435 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
    float _1141 = isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0));
    float _4446 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
    float _1142 = isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0));
    float _4457 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
    float _1143 = isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0));
    float _1144 = 1.0 - _998;
    float _1145 = _1141 * _1144;
    float _1146 = _1142 * _1144;
    float _1147 = _1143 * _1144;
    float _1152 = (_1141 + (-0.039999999105930328369140625)) * _998;
    float _1153 = (_1142 + (-0.039999999105930328369140625)) * _998;
    float _1154 = (_1143 + (-0.039999999105930328369140625)) * _998;
    float _1155 = _1152 + 0.039999999105930328369140625;
    float _1157 = _1153 + 0.039999999105930328369140625;
    float _1158 = _1154 + 0.039999999105930328369140625;
    vec4 _1167 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1092, cbSceneParam._m0[86u].y * _1093));
    float _1170 = _1167.x * TEXCOORD_3.w;
    float _1171 = dot(vec3(_991, _992, _993), vec3(_1075, _1076, _1077));
    float _1174 = _1171 * 2.0;
    float _1178 = (_1174 * _991) - _1075;
    float _1179 = (_1174 * _992) - _1076;
    float _1180 = (_1174 * _993) - _1077;
    float _1184 = abs(dot(vec3(_1075, _1076, _1077), vec3(_991, _992, _993)));
    float _4468 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
    float _1186 = sqrt(_994);
    float _1197 = exp2((_1186 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1186 * 3.0));
    float _1203 = (1.0 - _1197) * ((_1186 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1204 = _1197 * _1186;
    float _1232 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1236 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1240 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1566;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    float _1575;
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    float _1581;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1293 = fma(_1240, cbModelParam._m0[26u].z, fma(_1236, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1232));
        float _1297 = fma(_1240, cbModelParam._m0[27u].z, fma(_1236, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1232));
        float _1301 = fma(_1240, cbModelParam._m0[28u].z, fma(_1236, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1232));
        float _1325 = _1232 + _991;
        float _1326 = _1236 + _992;
        float _1327 = _1240 + _993;
        float _1337 = fma(_1327, cbModelParam._m0[26u].z, fma(_1326, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1325)) - _1293;
        float _1338 = fma(_1327, cbModelParam._m0[27u].z, fma(_1326, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1325)) - _1297;
        float _1339 = fma(_1327, cbModelParam._m0[28u].z, fma(_1326, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1325)) - _1301;
        float _1343 = inversesqrt(dot(vec3(_1337, _1338, _1339), vec3(_1337, _1338, _1339)));
        float _1355 = ((_1343 * _1337) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1293 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1356 = ((_1343 * _1338) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1297 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1357 = ((_1343 * _1339) / cbModelParam._m0[34u].z) + ((((((_1301 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1360 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1355, _1356, _1357), 0.0);
        vec4 _1367 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1355, _1356, _1357), 0.0);
        vec4 _1374 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1355, _1356, _1357), 0.0);
        vec4 _1381 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1355, _1356, _1357), 0.0);
        float _1394 = exp2((_1360.w + (-0.5)) * 20.0) * 2.0;
        float _1395 = _1394 * (_1360.x + (-0.5));
        float _1396 = _1394 * (_1360.y + (-0.5));
        float _1397 = _1394 * (_1360.z + (-0.5));
        float _1404 = exp2((_1367.w + (-0.5)) * 20.0) * 2.0;
        float _1405 = _1404 * (_1367.x + (-0.5));
        float _1406 = _1404 * (_1367.y + (-0.5));
        float _1407 = _1404 * (_1367.z + (-0.5));
        float _1414 = exp2((_1374.w + (-0.5)) * 20.0) * 2.0;
        float _1415 = _1414 * (_1374.x + (-0.5));
        float _1416 = _1414 * (_1374.y + (-0.5));
        float _1417 = _1414 * (_1374.z + (-0.5));
        float _1424 = exp2((_1381.w + (-0.5)) * 20.0) * 2.0;
        float _1425 = _1424 * (_1381.x + (-0.5));
        float _1426 = _1424 * (_1381.y + (-0.5));
        float _1427 = _1424 * (_1381.z + (-0.5));
        float _1428 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1429 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1430 = isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0));
        float _1431 = _1395 * 0.5;
        float _1432 = _1405 * 0.5;
        float _1433 = _1415 * 0.5;
        float _1434 = dot(vec3(_1431, _1432, _1433), vec3(_1431, _1432, _1433));
        float _1439 = (_1434 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1434);
        float _1448 = (dot(vec3(_991, _992, _993), vec3(_1439 * _1431, _1439 * _1432, _1439 * _1433)) + 1.0) * 0.5;
        float _4494 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
        float _1458 = sqrt(((_1432 * _1432) + (_1431 * _1431)) + (_1433 * _1433)) / (_1428 + 9.9999997473787516355514526367188e-06);
        float _4505 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1459 = isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0));
        float _1460 = _1459 * 2.0;
        float _1464 = (1.0 - _1459) / (_1459 + 1.0);
        float _4516 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
        float _1465 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
        float _1474 = ((((1.0 - _1465) * (_1460 + 2.0)) * exp2(log2(isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0))) * (_1460 + 1.0))) + _1465) * _1428;
        float _1475 = _1396 * 0.5;
        float _1476 = _1406 * 0.5;
        float _1477 = _1416 * 0.5;
        float _1478 = dot(vec3(_1475, _1476, _1477), vec3(_1475, _1476, _1477));
        float _1483 = (_1478 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1478);
        float _1491 = (dot(vec3(_991, _992, _993), vec3(_1483 * _1475, _1483 * _1476, _1483 * _1477)) + 1.0) * 0.5;
        float _4527 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1500 = sqrt(((_1476 * _1476) + (_1475 * _1475)) + (_1477 * _1477)) / (_1429 + 9.9999997473787516355514526367188e-06);
        float _4538 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0));
        float _1502 = _1501 * 2.0;
        float _1506 = (1.0 - _1501) / (_1501 + 1.0);
        float _4549 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1507 = isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0));
        float _1516 = ((((1.0 - _1507) * (_1502 + 2.0)) * exp2(log2(isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0))) * (_1502 + 1.0))) + _1507) * _1429;
        float _1517 = _1397 * 0.5;
        float _1518 = _1407 * 0.5;
        float _1519 = _1417 * 0.5;
        float _1520 = dot(vec3(_1517, _1518, _1519), vec3(_1517, _1518, _1519));
        float _1525 = (_1520 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1520);
        float _1533 = (dot(vec3(_991, _992, _993), vec3(_1525 * _1517, _1525 * _1518, _1525 * _1519)) + 1.0) * 0.5;
        float _4560 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1542 = sqrt(((_1518 * _1518) + (_1517 * _1517)) + (_1519 * _1519)) / (_1430 + 9.9999997473787516355514526367188e-06);
        float _4571 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1543 = isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0));
        float _1544 = _1543 * 2.0;
        float _1548 = (1.0 - _1543) / (_1543 + 1.0);
        float _4582 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
        float _1549 = isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0));
        float _1558 = ((((1.0 - _1549) * (_1544 + 2.0)) * exp2(log2(isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0))) * (_1544 + 1.0))) + _1549) * _1430;
        _1566 = _1397;
        _1568 = _1396;
        _1569 = _1395;
        _1570 = _1407;
        _1571 = _1406;
        _1572 = _1405;
        _1573 = _1417;
        _1574 = _1416;
        _1575 = _1415;
        _1576 = _1430;
        _1577 = _1429;
        _1578 = _1428;
        _1579 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0)));
        _1580 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0)));
        _1581 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0)));
    }
    else
    {
        _1566 = _1567;
        _1568 = _1567;
        _1569 = _1567;
        _1570 = _1567;
        _1571 = _1567;
        _1572 = _1567;
        _1573 = _1567;
        _1574 = _1567;
        _1575 = _1567;
        _1576 = _1567;
        _1577 = _1567;
        _1578 = _1567;
        _1579 = 0.0;
        _1580 = 0.0;
        _1581 = 0.0;
    }
    float _1873;
    float _1874;
    float _1875;
    float _1876;
    float _1877;
    float _1878;
    float _1879;
    float _1880;
    float _1881;
    float _1882;
    float _1883;
    float _1884;
    float _1885;
    float _1886;
    float _1887;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1604 = fma(_1240, cbModelParam._m0[30u].z, fma(_1236, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1232));
        float _1608 = fma(_1240, cbModelParam._m0[31u].z, fma(_1236, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1232));
        float _1612 = fma(_1240, cbModelParam._m0[32u].z, fma(_1236, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1232));
        float _1635 = _1232 + _991;
        float _1636 = _1236 + _992;
        float _1637 = _1240 + _993;
        float _1647 = fma(_1637, cbModelParam._m0[30u].z, fma(_1636, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1635)) - _1604;
        float _1648 = fma(_1637, cbModelParam._m0[31u].z, fma(_1636, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1635)) - _1608;
        float _1649 = fma(_1637, cbModelParam._m0[32u].z, fma(_1636, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1635)) - _1612;
        float _1653 = inversesqrt(dot(vec3(_1647, _1648, _1649), vec3(_1647, _1648, _1649)));
        float _1666 = ((_1653 * _1647) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1604 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1667 = ((_1653 * _1648) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1608 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1668 = ((_1653 * _1649) / cbModelParam._m0[35u].z) + ((((((_1612 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1670 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1666, _1667, _1668), 0.0);
        vec4 _1677 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1666, _1667, _1668), 0.0);
        vec4 _1684 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1666, _1667, _1668), 0.0);
        vec4 _1691 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1666, _1667, _1668), 0.0);
        float _1703 = exp2((_1670.w + (-0.5)) * 20.0) * 2.0;
        float _1704 = _1703 * (_1670.x + (-0.5));
        float _1705 = _1703 * (_1670.y + (-0.5));
        float _1706 = _1703 * (_1670.z + (-0.5));
        float _1713 = exp2((_1677.w + (-0.5)) * 20.0) * 2.0;
        float _1714 = _1713 * (_1677.x + (-0.5));
        float _1715 = _1713 * (_1677.y + (-0.5));
        float _1716 = _1713 * (_1677.z + (-0.5));
        float _1723 = exp2((_1684.w + (-0.5)) * 20.0) * 2.0;
        float _1724 = _1723 * (_1684.x + (-0.5));
        float _1725 = _1723 * (_1684.y + (-0.5));
        float _1726 = _1723 * (_1684.z + (-0.5));
        float _1733 = exp2((_1691.w + (-0.5)) * 20.0) * 2.0;
        float _1734 = _1733 * (_1691.x + (-0.5));
        float _1735 = _1733 * (_1691.y + (-0.5));
        float _1736 = _1733 * (_1691.z + (-0.5));
        float _1737 = isnan(0.0) ? _1734 : (isnan(_1734) ? 0.0 : max(_1734, 0.0));
        float _1738 = isnan(0.0) ? _1735 : (isnan(_1735) ? 0.0 : max(_1735, 0.0));
        float _1739 = isnan(0.0) ? _1736 : (isnan(_1736) ? 0.0 : max(_1736, 0.0));
        float _1740 = _1704 * 0.5;
        float _1741 = _1714 * 0.5;
        float _1742 = _1724 * 0.5;
        float _1743 = dot(vec3(_1740, _1741, _1742), vec3(_1740, _1741, _1742));
        float _1748 = (_1743 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1743);
        float _1756 = (dot(vec3(_991, _992, _993), vec3(_1748 * _1740, _1748 * _1741, _1748 * _1742)) + 1.0) * 0.5;
        float _4623 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
        float _1765 = sqrt(((_1741 * _1741) + (_1740 * _1740)) + (_1742 * _1742)) / (_1737 + 9.9999997473787516355514526367188e-06);
        float _4634 = isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0));
        float _1766 = isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0));
        float _1767 = _1766 * 2.0;
        float _1771 = (1.0 - _1766) / (_1766 + 1.0);
        float _4645 = isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0));
        float _1772 = isnan(1.0) ? _4645 : (isnan(_4645) ? 1.0 : min(_4645, 1.0));
        float _1781 = ((((1.0 - _1772) * (_1767 + 2.0)) * exp2(log2(isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0))) * (_1767 + 1.0))) + _1772) * _1737;
        float _1782 = _1705 * 0.5;
        float _1783 = _1715 * 0.5;
        float _1784 = _1725 * 0.5;
        float _1785 = dot(vec3(_1782, _1783, _1784), vec3(_1782, _1783, _1784));
        float _1790 = (_1785 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1785);
        float _1798 = (dot(vec3(_991, _992, _993), vec3(_1790 * _1782, _1790 * _1783, _1790 * _1784)) + 1.0) * 0.5;
        float _4656 = isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0));
        float _1807 = sqrt(((_1783 * _1783) + (_1782 * _1782)) + (_1784 * _1784)) / (_1738 + 9.9999997473787516355514526367188e-06);
        float _4667 = isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0));
        float _1808 = isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0));
        float _1809 = _1808 * 2.0;
        float _1813 = (1.0 - _1808) / (_1808 + 1.0);
        float _4678 = isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0));
        float _1814 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
        float _1823 = ((((1.0 - _1814) * (_1809 + 2.0)) * exp2(log2(isnan(1.0) ? _4656 : (isnan(_4656) ? 1.0 : min(_4656, 1.0))) * (_1809 + 1.0))) + _1814) * _1738;
        float _1824 = _1706 * 0.5;
        float _1825 = _1716 * 0.5;
        float _1826 = _1726 * 0.5;
        float _1827 = dot(vec3(_1824, _1825, _1826), vec3(_1824, _1825, _1826));
        float _1832 = (_1827 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1827);
        float _1840 = (dot(vec3(_991, _992, _993), vec3(_1832 * _1824, _1832 * _1825, _1832 * _1826)) + 1.0) * 0.5;
        float _4689 = isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0));
        float _1849 = sqrt(((_1825 * _1825) + (_1824 * _1824)) + (_1826 * _1826)) / (_1739 + 9.9999997473787516355514526367188e-06);
        float _4700 = isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0));
        float _1850 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
        float _1851 = _1850 * 2.0;
        float _1855 = (1.0 - _1850) / (_1850 + 1.0);
        float _4711 = isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0));
        float _1856 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
        float _1865 = ((((1.0 - _1856) * (_1851 + 2.0)) * exp2(log2(isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0))) * (_1851 + 1.0))) + _1856) * _1739;
        _1873 = _1706;
        _1874 = _1705;
        _1875 = _1704;
        _1876 = _1716;
        _1877 = _1715;
        _1878 = _1714;
        _1879 = _1726;
        _1880 = _1725;
        _1881 = _1724;
        _1882 = _1739;
        _1883 = _1738;
        _1884 = _1737;
        _1885 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0)));
        _1886 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0)));
        _1887 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1865 : (isnan(_1865) ? 0.0 : max(_1865, 0.0)));
    }
    else
    {
        _1873 = _1567;
        _1874 = _1567;
        _1875 = _1567;
        _1876 = _1567;
        _1877 = _1567;
        _1878 = _1567;
        _1879 = _1567;
        _1880 = _1567;
        _1881 = _1567;
        _1882 = _1567;
        _1883 = _1567;
        _1884 = _1567;
        _1885 = 0.0;
        _1886 = 0.0;
        _1887 = 0.0;
    }
    float _1897 = (cbModelParam._m0[1u].x * (_1885 - _1579)) + _1579;
    float _1898 = (cbModelParam._m0[1u].x * (_1886 - _1580)) + _1580;
    float _1899 = (cbModelParam._m0[1u].x * (_1887 - _1581)) + _1581;
    float _1920 = fma(_1899, cbSceneParam._m0[89u].z, fma(_1898, cbSceneParam._m0[89u].y, _1897 * cbSceneParam._m0[89u].x));
    float _1923 = fma(_1899, cbSceneParam._m0[90u].z, fma(_1898, cbSceneParam._m0[90u].y, _1897 * cbSceneParam._m0[90u].x));
    float _1926 = fma(_1899, cbSceneParam._m0[91u].z, fma(_1898, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1897));
    float _1941 = _1178 * 0.5;
    float _1942 = _1179 * 0.5;
    float _1943 = _1180 * 0.5;
    float _1944 = dot(vec4(_1941, _1942, _1943, 1.0), vec4(_1875, _1878, _1881, _1884));
    float _1947 = dot(vec4(_1941, _1942, _1943, 1.0), vec4(_1874, _1877, _1880, _1883));
    float _1950 = dot(vec4(_1941, _1942, _1943, 1.0), vec4(_1873, _1876, _1879, _1882));
    float _1984;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1957 = dot(vec4(_1941, _1942, _1943, 1.0), vec4(_1566, _1570, _1573, _1576));
        float _1961 = dot(vec4(_1941, _1942, _1943, 1.0), vec4(_1568, _1571, _1574, _1577));
        float _1965 = dot(vec4(_1941, _1942, _1943, 1.0), vec4(_1569, _1572, _1575, _1578));
        float _1972 = dot(vec4(cbModelParam._m0[39u]), vec4(_1941, _1942, _1943, 1.0));
        _1984 = dot(vec3(isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0)), isnan(0.0) ? _1961 : (isnan(_1961) ? 0.0 : max(_1961, 0.0)), isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1972) ? 0.0 : (isnan(0.0) ? _1972 : max(0.0, _1972))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1984 = 1.0;
    }
    float _1995;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1986 = dot(vec4(cbModelParam._m0[40u]), vec4(_1941, _1942, _1943, 1.0));
        _1995 = dot(vec3(isnan(0.0) ? _1944 : (isnan(_1944) ? 0.0 : max(_1944, 0.0)), isnan(0.0) ? _1947 : (isnan(_1947) ? 0.0 : max(_1947, 0.0)), isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1986) ? 0.0 : (isnan(0.0) ? _1986 : max(0.0, _1986))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1995 = 1.0;
    }
    float _1999 = (_1995 * cbModelParam._m0[1u].x) + (_1984 * (1.0 - cbModelParam._m0[1u].x));
    float _2009 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _994);
    float _2010 = isnan(_2009) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2009 : min(cbModelParam._m0[25u].z, _2009));
    float _2090;
    float _2092;
    float _2094;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2057 = fma(_1240, cbModelParam._m0[13u].z, fma(_1236, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1232)) + cbModelParam._m0[13u].w;
        float _2061 = fma(_1240, cbModelParam._m0[14u].z, fma(_1236, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1232)) + cbModelParam._m0[14u].w;
        float _2065 = fma(_1240, cbModelParam._m0[15u].z, fma(_1236, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1232)) + cbModelParam._m0[15u].w;
        float _2068 = fma(_1180, cbModelParam._m0[13u].z, fma(_1179, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1178));
        float _2071 = fma(_1180, cbModelParam._m0[14u].z, fma(_1179, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1178));
        float _2074 = fma(_1180, cbModelParam._m0[15u].z, fma(_1179, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1178));
        float _2102;
        if (_2068 > 0.0)
        {
            _2102 = abs((1.0 - _2057) / _2068);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_2068 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_2057 + 1.0) / _2068);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _2102 = frontier_phi_19_17_ladder;
        }
        float _2274;
        if (_2071 > 0.0)
        {
            _2274 = abs((1.0 - _2061) / _2071);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2071 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2061 + 1.0) / _2071);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2274 = frontier_phi_28_24_ladder;
        }
        float _2568;
        if (_2074 > 0.0)
        {
            _2568 = abs((1.0 - _2065) / _2074);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2074 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2065 + 1.0) / _2074);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2568 = frontier_phi_40_35_ladder;
        }
        float _2570 = isnan(_2274) ? _2102 : (isnan(_2102) ? _2274 : min(_2102, _2274));
        float _2571 = isnan(_2568) ? _2570 : (isnan(_2570) ? _2568 : min(_2570, _2568));
        float _2575 = (_2571 * _2068) + _2057;
        float _2576 = (_2571 * _2071) + _2061;
        float _2577 = (_2571 * _2074) + _2065;
        float _2578 = _2571 * 9.9999997473787516355514526367188e-05;
        float _2580 = (-1.0) - _2578;
        float _2582 = _2578 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2577 > _2582) || ((_2577 < _2580) || ((_2576 > _2582) || ((_2576 < _2580) || ((_2575 < _2580) || (_2575 > _2582))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2722 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2577, cbModelParam._m0[9u].z, fma(_2576, cbModelParam._m0[9u].y, _2575 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2577, cbModelParam._m0[10u].z, fma(_2576, cbModelParam._m0[10u].y, _2575 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2577, cbModelParam._m0[11u].z, fma(_2576, cbModelParam._m0[11u].y, _2575 * cbModelParam._m0[11u].x))), _2010);
            frontier_phi_18_40_ladder = _2722.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2722.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2722.x * cbModelParam._m0[1u].y;
        }
        _2090 = frontier_phi_18_40_ladder_2;
        _2092 = frontier_phi_18_40_ladder_1;
        _2094 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _2078 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1178, _1179, _1180), _2010);
        _2090 = _2078.x * cbModelParam._m0[1u].y;
        _2092 = _2078.y * cbModelParam._m0[1u].y;
        _2094 = _2078.z * cbModelParam._m0[1u].y;
    }
    float _2098 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _994);
    float _2099 = isnan(_2098) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2098 : min(cbModelParam._m0[25u].w, _2098));
    float _2188;
    float _2190;
    float _2192;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2152 = fma(_1240, cbModelParam._m0[21u].z, fma(_1236, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1232)) + cbModelParam._m0[21u].w;
        float _2156 = fma(_1240, cbModelParam._m0[22u].z, fma(_1236, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1232)) + cbModelParam._m0[22u].w;
        float _2160 = fma(_1240, cbModelParam._m0[23u].z, fma(_1236, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1232)) + cbModelParam._m0[23u].w;
        float _2163 = fma(_1180, cbModelParam._m0[21u].z, fma(_1179, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1178));
        float _2166 = fma(_1180, cbModelParam._m0[22u].z, fma(_1179, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1178));
        float _2169 = fma(_1180, cbModelParam._m0[23u].z, fma(_1179, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1178));
        float _2279;
        if (_2163 > 0.0)
        {
            _2279 = abs((1.0 - _2152) / _2163);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2163 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2152 + 1.0) / _2163);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2279 = frontier_phi_30_26_ladder;
        }
        float _2595;
        if (_2166 > 0.0)
        {
            _2595 = abs((1.0 - _2156) / _2166);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_2166 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_2156 + 1.0) / _2166);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2595 = frontier_phi_42_37_ladder;
        }
        float _2933;
        if (_2169 > 0.0)
        {
            _2933 = abs((1.0 - _2160) / _2169);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_2169 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_2160 + 1.0) / _2169);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2933 = frontier_phi_52_49_ladder;
        }
        float _2935 = isnan(_2595) ? _2279 : (isnan(_2279) ? _2595 : min(_2279, _2595));
        float _2936 = isnan(_2933) ? _2935 : (isnan(_2935) ? _2933 : min(_2935, _2933));
        float _2940 = (_2936 * _2163) + _2152;
        float _2941 = (_2936 * _2166) + _2156;
        float _2942 = (_2936 * _2169) + _2160;
        float _2943 = _2936 * 9.9999997473787516355514526367188e-05;
        float _2944 = (-1.0) - _2943;
        float _2946 = _2943 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2942 > _2946) || ((_2942 < _2944) || ((_2941 > _2946) || ((_2941 < _2944) || ((_2940 < _2944) || (_2940 > _2946))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3064 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2942, cbModelParam._m0[17u].z, fma(_2941, cbModelParam._m0[17u].y, _2940 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2942, cbModelParam._m0[18u].z, fma(_2941, cbModelParam._m0[18u].y, _2940 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2942, cbModelParam._m0[19u].z, fma(_2941, cbModelParam._m0[19u].y, _2940 * cbModelParam._m0[19u].x))), _2099);
            frontier_phi_27_52_ladder = _3064.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _3064.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _3064.x * cbModelParam._m0[1u].z;
        }
        _2188 = frontier_phi_27_52_ladder_2;
        _2190 = frontier_phi_27_52_ladder_1;
        _2192 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _2172 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1178, _1179, _1180), _2099);
        _2188 = _2172.x * cbModelParam._m0[1u].z;
        _2190 = _2172.y * cbModelParam._m0[1u].z;
        _2192 = _2172.z * cbModelParam._m0[1u].z;
    }
    float _2205 = (((_1203 * _1155) + _1204) * _1170) * ((cbModelParam._m0[1u].w * (_2188 - _2090)) + _2090);
    float _2207 = (((_1203 * _1157) + _1204) * _1170) * ((cbModelParam._m0[1u].w * (_2190 - _2092)) + _2092);
    float _2209 = (((_1203 * _1158) + _1204) * _1170) * ((cbModelParam._m0[1u].w * (_2192 - _2094)) + _2094);
    float _2212 = fma(_2209, cbSceneParam._m0[89u].z, fma(_2207, cbSceneParam._m0[89u].y, _2205 * cbSceneParam._m0[89u].x));
    float _2215 = fma(_2209, cbSceneParam._m0[90u].z, fma(_2207, cbSceneParam._m0[90u].y, _2205 * cbSceneParam._m0[90u].x));
    float _2218 = fma(_2209, cbSceneParam._m0[91u].z, fma(_2207, cbSceneParam._m0[91u].y, _2205 * cbSceneParam._m0[91u].x));
    float _2253 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2257 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2261 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2265 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2266 = _2253 / _2265;
    float _2267 = _2257 / _2265;
    float _2268 = _2261 / _2265;
    float _2414;
    float _2415;
    float _2416;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2295 = ((uint(_2268 > cbSceneParam._m0[59u].y) + uint(_2268 > cbSceneParam._m0[59u].x)) + uint(_2268 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2296 = _2295 + 43u;
        uint _2304 = _2295 + 44u;
        uint _2312 = _2295 + 45u;
        uint _2320 = _2295 + 46u;
        float _2331 = fma(_2265, cbSceneParam._m0[_2296].w, fma(_2261, cbSceneParam._m0[_2296].z, fma(_2257, cbSceneParam._m0[_2296].y, _2253 * cbSceneParam._m0[_2296].x)));
        float _2335 = fma(_2265, cbSceneParam._m0[_2304].w, fma(_2261, cbSceneParam._m0[_2304].z, fma(_2257, cbSceneParam._m0[_2304].y, _2253 * cbSceneParam._m0[_2304].x)));
        float _2343 = fma(_2265, cbSceneParam._m0[_2320].w, fma(_2261, cbSceneParam._m0[_2320].z, fma(_2257, cbSceneParam._m0[_2320].y, _2253 * cbSceneParam._m0[_2320].x)));
        float _2347 = cbSceneParam._m0[33u].z * _2343;
        float _2349 = cbSceneParam._m0[33u].w * _2343;
        float _2352 = fma(_2265, cbSceneParam._m0[_2312].w, fma(_2261, cbSceneParam._m0[_2312].z, fma(_2257, cbSceneParam._m0[_2312].y, _2253 * cbSceneParam._m0[_2312].x))) / _2343;
        float _2400 = (cbSceneParam._m0[33u].x - sqrt(((_2267 * _2267) + (_2266 * _2266)) + (_2268 * _2268))) * cbSceneParam._m0[33u].y;
        float _4837 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
        float _2407 = (isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2347 + _2331) / _2343, (_2349 + _2335) / _2343), _2352), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2349 + _2331) / _2343, (_2335 - _2347) / _2343), _2352), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2331 - _2347) / _2343, (_2335 - _2349) / _2343), _2352), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2331 - _2349) / _2343, (_2347 + _2335) / _2343), _2352), 0.0)).x), vec4(0.25)));
        _2414 = 1.0 - (_2407 * cbSceneParam._m0[34u].x);
        _2415 = 1.0 - (_2407 * cbSceneParam._m0[34u].y);
        _2416 = 1.0 - (_2407 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2414 = 1.0;
        _2415 = 1.0;
        _2416 = 1.0;
    }
    float _2480;
    float _2482;
    float _2484;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2468 = fma(_2265, cbSceneParam._m0[63u].w, fma(_2261, cbSceneParam._m0[63u].z, fma(_2257, cbSceneParam._m0[63u].y, _2253 * cbSceneParam._m0[63u].x)));
        float _2469 = fma(_2265, cbSceneParam._m0[60u].w, fma(_2261, cbSceneParam._m0[60u].z, fma(_2257, cbSceneParam._m0[60u].y, _2253 * cbSceneParam._m0[60u].x))) / _2468;
        float _2470 = fma(_2265, cbSceneParam._m0[61u].w, fma(_2261, cbSceneParam._m0[61u].z, fma(_2257, cbSceneParam._m0[61u].y, _2253 * cbSceneParam._m0[61u].x))) / _2468;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2469 >= cbSceneParam._m0[64u].x) && (_2470 >= cbSceneParam._m0[64u].y)) && (_2469 <= cbSceneParam._m0[64u].z)) && (_2470 <= cbSceneParam._m0[64u].w))
        {
            float _2608 = fma(_2265, cbSceneParam._m0[62u].w, fma(_2261, cbSceneParam._m0[62u].z, fma(_2257, cbSceneParam._m0[62u].y, _2253 * cbSceneParam._m0[62u].x))) / _2468;
            float _2612 = isnan(cbSceneParam._m0[41u].w) ? _2608 : (isnan(_2608) ? cbSceneParam._m0[41u].w : max(_2608, cbSceneParam._m0[41u].w));
            float _2655 = (cbSceneParam._m0[33u].x - sqrt(((_2267 * _2267) + (_2266 * _2266)) + (_2268 * _2268))) * cbSceneParam._m0[33u].y;
            float _4853 = isnan(0.0) ? _2655 : (isnan(_2655) ? 0.0 : max(_2655, 0.0));
            float _2662 = (isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2469, cbSceneParam._m0[33u].w + _2470), _2612), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2469, _2470 - cbSceneParam._m0[33u].z), _2612), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2469 - cbSceneParam._m0[33u].z, _2470 - cbSceneParam._m0[33u].w), _2612), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2469 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2470), _2612), 0.0)).x), vec4(0.25)));
            float _2666 = 1.0 - (_2662 * cbSceneParam._m0[34u].x);
            float _2667 = 1.0 - (_2662 * cbSceneParam._m0[34u].y);
            float _2668 = 1.0 - (_2662 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2668) ? _2416 : (isnan(_2416) ? _2668 : min(_2416, _2668));
            frontier_phi_39_38_ladder_1 = isnan(_2667) ? _2415 : (isnan(_2415) ? _2667 : min(_2415, _2667));
            frontier_phi_39_38_ladder_2 = isnan(_2666) ? _2414 : (isnan(_2414) ? _2666 : min(_2414, _2666));
        }
        else
        {
            frontier_phi_39_38_ladder = _2416;
            frontier_phi_39_38_ladder_1 = _2415;
            frontier_phi_39_38_ladder_2 = _2414;
        }
        _2480 = frontier_phi_39_38_ladder_2;
        _2482 = frontier_phi_39_38_ladder_1;
        _2484 = frontier_phi_39_38_ladder;
    }
    else
    {
        _2480 = _2414;
        _2482 = _2415;
        _2484 = _2416;
    }
    uvec4 _2489 = floatBitsToUint(cbInstanceData._m0[_1130 + 5u]);
    uint _2491 = _2489.x * 14u;
    uint _2492 = _2491 + 13u;
    float _2499 = _1170 + (-1.0);
    float _2504 = (cbLight._m0[_2492].x * _2499) + 1.0;
    float _2505 = (cbLight._m0[_2492].y * _2499) + 1.0;
    float _2506 = (cbLight._m0[_2492].z * _2499) + 1.0;
    float _2507 = (cbLight._m0[_2492].w * _2499) + 1.0;
    uint _2508 = _2491 + 5u;
    float _2514 = isnan(1.0) ? _2505 : (isnan(_2505) ? 1.0 : min(_2505, 1.0));
    uint _2518 = _2491 + 4u;
    float _2527 = isnan(1.0) ? _2504 : (isnan(_2504) ? 1.0 : min(_2504, 1.0));
    uint _2531 = _2491 | 1u;
    float _2542 = dot(vec3(cbLight._m0[_2491].xyz), vec3(_991, _992, _993));
    float _2545 = dot(vec3(cbLight._m0[_2531].xyz), vec3(_991, _992, _993));
    float _4889 = isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0));
    float _4900 = isnan(0.0) ? _2545 : (isnan(_2545) ? 0.0 : max(_2545, 0.0));
    float _2550 = (isnan(1.0) ? _4889 : (isnan(_4889) ? 1.0 : min(_4889, 1.0))) * 0.3183098733425140380859375;
    float _2552 = (isnan(1.0) ? _4900 : (isnan(_4900) ? 1.0 : min(_4900, 1.0))) * 0.3183098733425140380859375;
    float _2559 = ((cbLight._m0[_2508].x * _2514) * _2552) + (((cbLight._m0[_2518].x * _2480) * _2527) * _2550);
    float _2560 = ((_2514 * cbLight._m0[_2508].y) * _2552) + (((cbLight._m0[_2518].y * _2482) * _2527) * _2550);
    float _2561 = ((_2514 * cbLight._m0[_2508].z) * _2552) + (((cbLight._m0[_2518].z * _2484) * _2527) * _2550);
    uvec4 _2565 = floatBitsToUint(cbLight._m0[_2491 + 12u]);
    bool _2567 = _2565.x == 0u;
    float _2669;
    float _2671;
    float _2673;
    if (_2567)
    {
        _2669 = _2559;
        _2671 = _2560;
        _2673 = _2561;
    }
    else
    {
        uint _2677 = _2491 + 6u;
        float _2693 = (dot(vec3(cbLight._m0[_2491 + 2u].xyz), vec3(_991, _992, _993)) * 0.5) + 0.5;
        float _2694 = _2693 * _2693;
        float _4911 = isnan(0.0) ? _2694 : (isnan(_2694) ? 0.0 : max(_2694, 0.0));
        float _2695 = isnan(1.0) ? _4911 : (isnan(_4911) ? 1.0 : min(_4911, 1.0));
        float _2696 = isnan(1.0) ? _2506 : (isnan(_2506) ? 1.0 : min(_2506, 1.0));
        _2669 = (((cbLight._m0[_2677].x * 0.3183098733425140380859375) * _2695) * _2696) + _2559;
        _2671 = (((cbLight._m0[_2677].y * 0.3183098733425140380859375) * _2695) * _2696) + _2560;
        _2673 = (((cbLight._m0[_2677].z * 0.3183098733425140380859375) * _2695) * _2696) + _2561;
    }
    bool _2676 = _2565.y == 0u;
    float _2731;
    float _2733;
    float _2735;
    if (_2676)
    {
        _2731 = _2669;
        _2733 = _2671;
        _2735 = _2673;
    }
    else
    {
        uint _2904 = _2491 + 7u;
        float _2920 = (dot(vec3(cbLight._m0[_2491 + 3u].xyz), vec3(_991, _992, _993)) * 0.5) + 0.5;
        float _2921 = _2920 * _2920;
        float _4927 = isnan(0.0) ? _2921 : (isnan(_2921) ? 0.0 : max(_2921, 0.0));
        float _2922 = isnan(1.0) ? _4927 : (isnan(_4927) ? 1.0 : min(_4927, 1.0));
        float _2923 = isnan(1.0) ? _2507 : (isnan(_2507) ? 1.0 : min(_2507, 1.0));
        _2731 = (((cbLight._m0[_2904].x * 0.3183098733425140380859375) * _2922) * _2923) + _2669;
        _2733 = (((cbLight._m0[_2904].y * 0.3183098733425140380859375) * _2922) * _2923) + _2671;
        _2735 = (((cbLight._m0[_2904].z * 0.3183098733425140380859375) * _2922) * _2923) + _2673;
    }
    uint _2738 = _2491 + 8u;
    float _2751 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2491].w)) * _994) * 0.949999988079071044921875);
    float _2752 = _2751 * _2751;
    float _2753 = cbLight._m0[_2491].x + _1075;
    float _2754 = cbLight._m0[_2491].y + _1076;
    float _2755 = cbLight._m0[_2491].z + _1077;
    float _2759 = inversesqrt(dot(vec3(_2753, _2754, _2755), vec3(_2753, _2754, _2755)));
    float _2760 = _2759 * _2753;
    float _2761 = _2759 * _2754;
    float _2762 = _2759 * _2755;
    float _2763 = dot(vec3(_991, _992, _993), vec3(cbLight._m0[_2491].xyz));
    float _4943 = isnan(0.0) ? _2763 : (isnan(_2763) ? 0.0 : max(_2763, 0.0));
    float _2766 = isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0));
    float _4954 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
    float _2767 = isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0));
    float _2768 = dot(vec3(_991, _992, _993), vec3(_2760, _2761, _2762));
    float _4965 = isnan(0.0) ? _2768 : (isnan(_2768) ? 0.0 : max(_2768, 0.0));
    float _2771 = isnan(1.0) ? _4965 : (isnan(_4965) ? 1.0 : min(_4965, 1.0));
    float _2772 = dot(vec3(cbLight._m0[_2491].xyz), vec3(_2760, _2761, _2762));
    float _4976 = isnan(0.0) ? _2772 : (isnan(_2772) ? 0.0 : max(_2772, 0.0));
    float _2776 = _2752 * _2752;
    float _2780 = ((_2771 * _2771) * (_2776 + (-1.0))) + 1.0;
    float _2788 = exp2(log2(1.0 - (isnan(1.0) ? _4976 : (isnan(_4976) ? 1.0 : min(_4976, 1.0)))) * 5.0);
    float _2789 = 0.959999978542327880859375 - _1152;
    float _2791 = 0.959999978542327880859375 - _1153;
    float _2792 = 0.959999978542327880859375 - _1154;
    float _2799 = 1.0 - _2752;
    float _2810 = (0.5 / (((_2767 * ((_2766 * _2799) + _2752)) + 9.9999999392252902907785028219223e-09) + (((_2767 * _2799) + _2752) * _2766))) * _2766;
    float _4987 = isnan(0.0) ? _2810 : (isnan(_2810) ? 0.0 : max(_2810, 0.0));
    float _2812 = (isnan(1.0) ? _4987 : (isnan(_4987) ? 1.0 : min(_4987, 1.0))) * (_2776 / ((_2780 * _2780) * 3.141590118408203125));
    uint _2826 = _2491 + 9u;
    float _2837 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2531].w)) * _994) * 0.949999988079071044921875);
    float _2838 = _2837 * _2837;
    float _2839 = cbLight._m0[_2531].x + _1075;
    float _2840 = cbLight._m0[_2531].y + _1076;
    float _2841 = cbLight._m0[_2531].z + _1077;
    float _2845 = inversesqrt(dot(vec3(_2839, _2840, _2841), vec3(_2839, _2840, _2841)));
    float _2846 = _2845 * _2839;
    float _2847 = _2845 * _2840;
    float _2848 = _2845 * _2841;
    float _2849 = dot(vec3(_991, _992, _993), vec3(cbLight._m0[_2531].xyz));
    float _4998 = isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : max(_2849, 0.0));
    float _2852 = isnan(1.0) ? _4998 : (isnan(_4998) ? 1.0 : min(_4998, 1.0));
    float _2853 = dot(vec3(_991, _992, _993), vec3(_2846, _2847, _2848));
    float _5009 = isnan(0.0) ? _2853 : (isnan(_2853) ? 0.0 : max(_2853, 0.0));
    float _2856 = isnan(1.0) ? _5009 : (isnan(_5009) ? 1.0 : min(_5009, 1.0));
    float _2857 = dot(vec3(cbLight._m0[_2531].xyz), vec3(_2846, _2847, _2848));
    float _5020 = isnan(0.0) ? _2857 : (isnan(_2857) ? 0.0 : max(_2857, 0.0));
    float _2861 = _2838 * _2838;
    float _2865 = ((_2856 * _2856) * (_2861 + (-1.0))) + 1.0;
    float _2872 = exp2(log2(1.0 - (isnan(1.0) ? _5020 : (isnan(_5020) ? 1.0 : min(_5020, 1.0)))) * 5.0);
    float _2879 = 1.0 - _2838;
    float _2889 = (0.5 / (((_2767 * ((_2852 * _2879) + _2838)) + 9.9999999392252902907785028219223e-09) + (((_2767 * _2879) + _2838) * _2852))) * _2852;
    float _5031 = isnan(0.0) ? _2889 : (isnan(_2889) ? 0.0 : max(_2889, 0.0));
    float _2891 = (isnan(1.0) ? _5031 : (isnan(_5031) ? 1.0 : min(_5031, 1.0))) * (_2861 / ((_2865 * _2865) * 3.141590118408203125));
    float _2901 = (((((_2872 * _2789) + _1155) * cbLight._m0[_2826].x) * _2891) * _2514) + ((((cbLight._m0[_2738].x * _2480) * ((_2788 * _2789) + _1155)) * _2812) * _2527);
    float _2902 = (((((_2872 * _2791) + _1157) * cbLight._m0[_2826].y) * _2891) * _2514) + ((((cbLight._m0[_2738].y * _2482) * ((_2788 * _2791) + _1157)) * _2812) * _2527);
    float _2903 = (((((_2872 * _2792) + _1158) * cbLight._m0[_2826].z) * _2891) * _2514) + ((((cbLight._m0[_2738].z * _2484) * ((_2788 * _2792) + _1158)) * _2812) * _2527);
    float _2959;
    float _2961;
    float _2963;
    if (_2567)
    {
        _2959 = _2901;
        _2961 = _2902;
        _2963 = _2903;
    }
    else
    {
        uint _2965 = _2491 + 2u;
        uint _2969 = _2491 + 10u;
        float _2983 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2965].w)) * _994) * 0.949999988079071044921875);
        float _2984 = _2983 * _2983;
        float _2985 = cbLight._m0[_2965].x + _1075;
        float _2986 = cbLight._m0[_2965].y + _1076;
        float _2987 = cbLight._m0[_2965].z + _1077;
        float _2991 = inversesqrt(dot(vec3(_2985, _2986, _2987), vec3(_2985, _2986, _2987)));
        float _2992 = _2991 * _2985;
        float _2993 = _2991 * _2986;
        float _2994 = _2991 * _2987;
        float _2995 = dot(vec3(_991, _992, _993), vec3(cbLight._m0[_2965].xyz));
        float _5042 = isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : max(_2995, 0.0));
        float _2998 = isnan(1.0) ? _5042 : (isnan(_5042) ? 1.0 : min(_5042, 1.0));
        float _2999 = dot(vec3(_991, _992, _993), vec3(_2992, _2993, _2994));
        float _5053 = isnan(0.0) ? _2999 : (isnan(_2999) ? 0.0 : max(_2999, 0.0));
        float _3002 = isnan(1.0) ? _5053 : (isnan(_5053) ? 1.0 : min(_5053, 1.0));
        float _3003 = dot(vec3(cbLight._m0[_2965].xyz), vec3(_2992, _2993, _2994));
        float _5064 = isnan(0.0) ? _3003 : (isnan(_3003) ? 0.0 : max(_3003, 0.0));
        float _3007 = _2984 * _2984;
        float _3011 = ((_3002 * _3002) * (_3007 + (-1.0))) + 1.0;
        float _3018 = exp2(log2(1.0 - (isnan(1.0) ? _5064 : (isnan(_5064) ? 1.0 : min(_5064, 1.0)))) * 5.0);
        float _3025 = 1.0 - _2984;
        float _3035 = (0.5 / (((_2767 * ((_2998 * _3025) + _2984)) + 9.9999999392252902907785028219223e-09) + (((_2767 * _3025) + _2984) * _2998))) * _2998;
        float _5075 = isnan(0.0) ? _3035 : (isnan(_3035) ? 0.0 : max(_3035, 0.0));
        float _3037 = (isnan(1.0) ? _5075 : (isnan(_5075) ? 1.0 : min(_5075, 1.0))) * (_3007 / ((_3011 * _3011) * 3.141590118408203125));
        float _3038 = isnan(1.0) ? _2506 : (isnan(_2506) ? 1.0 : min(_2506, 1.0));
        _2959 = (((((_3018 * _2789) + _1155) * cbLight._m0[_2969].x) * _3037) * _3038) + _2901;
        _2961 = (((((_3018 * _2791) + _1157) * cbLight._m0[_2969].y) * _3037) * _3038) + _2902;
        _2963 = (((((_3018 * _2792) + _1158) * cbLight._m0[_2969].z) * _3037) * _3038) + _2903;
    }
    float _3069;
    float _3071;
    float _3073;
    if (_2676)
    {
        _3069 = _2959;
        _3071 = _2961;
        _3073 = _2963;
    }
    else
    {
        uint _3080 = _2491 + 3u;
        uint _3084 = _2491 + 11u;
        float _3098 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3080].w)) * _994) * 0.949999988079071044921875);
        float _3099 = _3098 * _3098;
        float _3100 = cbLight._m0[_3080].x + _1075;
        float _3101 = cbLight._m0[_3080].y + _1076;
        float _3102 = cbLight._m0[_3080].z + _1077;
        float _3106 = inversesqrt(dot(vec3(_3100, _3101, _3102), vec3(_3100, _3101, _3102)));
        float _3107 = _3106 * _3100;
        float _3108 = _3106 * _3101;
        float _3109 = _3106 * _3102;
        float _3110 = dot(vec3(_991, _992, _993), vec3(cbLight._m0[_3080].xyz));
        float _5091 = isnan(0.0) ? _3110 : (isnan(_3110) ? 0.0 : max(_3110, 0.0));
        float _3113 = isnan(1.0) ? _5091 : (isnan(_5091) ? 1.0 : min(_5091, 1.0));
        float _3114 = dot(vec3(_991, _992, _993), vec3(_3107, _3108, _3109));
        float _5102 = isnan(0.0) ? _3114 : (isnan(_3114) ? 0.0 : max(_3114, 0.0));
        float _3117 = isnan(1.0) ? _5102 : (isnan(_5102) ? 1.0 : min(_5102, 1.0));
        float _3118 = dot(vec3(cbLight._m0[_3080].xyz), vec3(_3107, _3108, _3109));
        float _5113 = isnan(0.0) ? _3118 : (isnan(_3118) ? 0.0 : max(_3118, 0.0));
        float _3122 = _3099 * _3099;
        float _3126 = ((_3117 * _3117) * (_3122 + (-1.0))) + 1.0;
        float _3133 = exp2(log2(1.0 - (isnan(1.0) ? _5113 : (isnan(_5113) ? 1.0 : min(_5113, 1.0)))) * 5.0);
        float _3140 = 1.0 - _3099;
        float _3150 = (0.5 / (((_2767 * ((_3113 * _3140) + _3099)) + 9.9999999392252902907785028219223e-09) + (((_2767 * _3140) + _3099) * _3113))) * _3113;
        float _5124 = isnan(0.0) ? _3150 : (isnan(_3150) ? 0.0 : max(_3150, 0.0));
        float _3152 = (isnan(1.0) ? _5124 : (isnan(_5124) ? 1.0 : min(_5124, 1.0))) * (_3122 / ((_3126 * _3126) * 3.141590118408203125));
        float _3153 = isnan(1.0) ? _2507 : (isnan(_2507) ? 1.0 : min(_2507, 1.0));
        _3069 = (((((_3133 * _2789) + _1155) * cbLight._m0[_3084].x) * _3152) * _3153) + _2959;
        _3071 = (((((_3133 * _2791) + _1157) * cbLight._m0[_3084].y) * _3152) * _3153) + _2961;
        _3073 = (((((_3133 * _2792) + _1158) * cbLight._m0[_3084].z) * _3152) * _3153) + _2963;
    }
    float _3219;
    float _3221;
    float _3223;
    float _3225;
    float _3227;
    float _3229;
    if (_2489.y == 0u)
    {
        uvec4 _3174 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3175 = _3174.x;
        uint _3186 = uint((float(_3174.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1093) / _3175))) + floor(float(uint(cbSceneParam._m0[85u].x * _1092) / _3175)));
        float _3196 = (log2(_2268 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3197 = isnan(0.0) ? _3196 : (isnan(_3196) ? 0.0 : max(_3196, 0.0));
        uint _3200 = uint(isnan(14.0) ? _3197 : (isnan(_3197) ? 14.0 : min(_3197, 14.0)));
        uvec4 _3205 = texelFetch(g_lightClusterGridBuffer, int(((_3200 << 2u) + (_3186 << 6u)) >> 2u));
        uint _3206 = _3205.x;
        uint _3207 = _3174.z;
        float _3315;
        float _3317;
        float _3319;
        float _3321;
        float _3323;
        float _3325;
        if (((((1u << ((_3207 >> 4u) & 15u)) + 4294967295u) & _3206) == 0u) || ((_3207 & 240u) == 0u))
        {
            _3315 = 0.0;
            _3317 = 0.0;
            _3319 = 0.0;
            _3321 = 0.0;
            _3323 = 0.0;
            _3325 = 0.0;
        }
        else
        {
            float _3316;
            float _3318;
            float _3320;
            float _3322;
            float _3324;
            float _3326;
            float _3476 = 0.0;
            float _3477 = 0.0;
            float _3478 = 0.0;
            float _3479 = 0.0;
            float _3480 = 0.0;
            float _3481 = 0.0;
            uint _3482 = 0u;
            uint _3491;
            bool _3492;
            for (;;)
            {
                _3491 = texelFetch(g_lightClassification, int((((_3200 << 5u) + (_3186 << 9u)) + (_3482 << 2u)) >> 2u)).x;
                _3492 = _3491 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_3492)
                {
                    frontier_phi_73_pred = _3481;
                    frontier_phi_73_pred_1 = _3480;
                    frontier_phi_73_pred_2 = _3479;
                    frontier_phi_73_pred_3 = _3478;
                    frontier_phi_73_pred_4 = _3477;
                    frontier_phi_73_pred_5 = _3476;
                }
                else
                {
                    float _3621;
                    float _3622;
                    float _3623;
                    float _3624;
                    float _3625;
                    float _3626;
                    uint _3627;
                    _3621 = _3476;
                    _3622 = _3477;
                    _3623 = _3478;
                    _3624 = _3479;
                    _3625 = _3480;
                    _3626 = _3481;
                    _3627 = _3491;
                    float _3548;
                    float _3549;
                    float _3550;
                    float _3551;
                    float _3552;
                    float _3553;
                    for (;;)
                    {
                        uint _3631 = uint(findLSB(_3627)) + (_3482 << 5u);
                        uint _3628 = (_3627 + 4294967295u) & _3627;
                        uint _3633 = _3631 * 48u;
                        vec4 _3647 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3633)).x, texelFetch(g_PointLightRenderingBuffer, int(_3633 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3633 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3633 + 3u)).x));
                        uint _3653 = (_3631 * 48u) + 4u;
                        vec4 _3666 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3653)).x, texelFetch(g_PointLightRenderingBuffer, int(_3653 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3653 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3653 + 3u)).x));
                        uint _3672 = (_3631 * 48u) + 8u;
                        vec3 _3683 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3672)).x, texelFetch(g_PointLightRenderingBuffer, int(_3672 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3672 + 2u)).x));
                        float _3687 = _3647.x - _2266;
                        float _3688 = _3647.y - _2267;
                        float _3689 = _3647.z - _2268;
                        float _3690 = dot(vec3(_3687, _3688, _3689), vec3(_3687, _3688, _3689));
                        float _3693 = inversesqrt(_3690);
                        float _3694 = _3693 * _3687;
                        float _3695 = _3693 * _3688;
                        float _3696 = _3693 * _3689;
                        float _3697 = dot(vec3(_1111, _1114, _1117), vec3(_3694, _3695, _3696));
                        float _3702 = 1.0 - (_3690 * _3647.w);
                        float _5150 = isnan(0.0) ? _3702 : (isnan(_3702) ? 0.0 : max(_3702, 0.0));
                        float _3703 = isnan(1.0) ? _5150 : (isnan(_5150) ? 1.0 : min(_5150, 1.0));
                        float _3704 = sqrt(_3690) * _3666.w;
                        float _3707 = 1.39999997615814208984375 / (_3704 + 1.39999997615814208984375);
                        float _3708 = _3707 * _3707;
                        float _3711 = ((1.0 - _3708) * _3697) + _3708;
                        float _3714 = _3704 * _3704;
                        float _3718 = ((isnan(0.0) ? _3711 : (isnan(_3711) ? 0.0 : max(_3711, 0.0))) * _3703) / ((_3714 * 0.699999988079071044921875) + 1.0);
                        float _3722 = (-0.0) - _2266;
                        float _3723 = (-0.0) - _2267;
                        float _3724 = (-0.0) - _2268;
                        float _3728 = inversesqrt(dot(vec3(_3722, _3723, _3724), vec3(_3722, _3723, _3724)));
                        float _3729 = _3728 * _3722;
                        float _3730 = _3728 * _3723;
                        float _3731 = _3728 * _3724;
                        float _3738 = exp2(log2(1.0 / ((_3714 * 3.5) + 5.0)) * 0.25);
                        float _3739 = 1.0 - _1186;
                        float _3746 = sqrt(1.0 - ((1.0 - (_3739 * _3739)) * (1.0 - (_3738 * _3738))));
                        float _3747 = _3746 * _3746;
                        float _3748 = _3747 * _3747;
                        float _3749 = _3729 + _3694;
                        float _3750 = _3730 + _3695;
                        float _3751 = _3731 + _3696;
                        float _3755 = inversesqrt(dot(vec3(_3749, _3750, _3751), vec3(_3749, _3750, _3751)));
                        float _3759 = dot(vec3(_1111, _1114, _1117), vec3(_3729, _3730, _3731));
                        float _5166 = isnan(0.0) ? _3759 : (isnan(_3759) ? 0.0 : max(_3759, 0.0));
                        float _3762 = isnan(1.0) ? _5166 : (isnan(_5166) ? 1.0 : min(_5166, 1.0));
                        float _3763 = dot(vec3(_1111, _1114, _1117), vec3(_3755 * _3749, _3755 * _3750, _3755 * _3751));
                        float _5177 = isnan(0.0) ? _3763 : (isnan(_3763) ? 0.0 : max(_3763, 0.0));
                        float _3766 = isnan(1.0) ? _5177 : (isnan(_5177) ? 1.0 : min(_5177, 1.0));
                        float _3770 = ((_3766 * _3766) * (_3748 + (-1.0))) + 1.0;
                        float _3771 = _3707 * _3747;
                        float _3772 = _3771 * _3771;
                        float _3775 = ((1.0 - _3772) * _3697) + _3772;
                        float _5188 = isnan(0.0) ? _3775 : (isnan(_3775) ? 0.0 : max(_3775, 0.0));
                        float _3776 = isnan(1.0) ? _5188 : (isnan(_5188) ? 1.0 : min(_5188, 1.0));
                        float _3777 = 1.0 - _3747;
                        float _3787 = (0.5 / (((_3776 * ((_3762 * _3777) + _3747)) + 9.9999999392252902907785028219223e-09) + (((_3776 * _3777) + _3747) * _3762))) * _3776;
                        float _5199 = isnan(0.0) ? _3787 : (isnan(_3787) ? 0.0 : max(_3787, 0.0));
                        float _3798 = (((_3748 * 3.1415927410125732421875) * (isnan(1.0) ? _5199 : (isnan(_5199) ? 1.0 : min(_5199, 1.0)))) / ((_3770 * _3770) * ((_3714 * 2.1991131305694580078125) + 3.141590118408203125))) * _3703;
                        _3551 = (_3718 * _3666.x) + _3624;
                        _3552 = (_3718 * _3666.y) + _3625;
                        _3553 = (_3718 * _3666.z) + _3626;
                        _3548 = (_3798 * _3683.x) + _3621;
                        _3549 = (_3798 * _3683.y) + _3622;
                        _3550 = (_3798 * _3683.z) + _3623;
                        if (_3628 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3621 = _3548;
                            _3622 = _3549;
                            _3623 = _3550;
                            _3624 = _3551;
                            _3625 = _3552;
                            _3626 = _3553;
                            _3627 = _3628;
                        }
                    }
                    frontier_phi_73_pred = _3553;
                    frontier_phi_73_pred_1 = _3552;
                    frontier_phi_73_pred_2 = _3551;
                    frontier_phi_73_pred_3 = _3550;
                    frontier_phi_73_pred_4 = _3549;
                    frontier_phi_73_pred_5 = _3548;
                }
                _3326 = frontier_phi_73_pred;
                _3324 = frontier_phi_73_pred_1;
                _3322 = frontier_phi_73_pred_2;
                _3320 = frontier_phi_73_pred_3;
                _3318 = frontier_phi_73_pred_4;
                _3316 = frontier_phi_73_pred_5;
                uint _3483 = _3482 + 1u;
                if (_3483 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3476 = _3316;
                    _3477 = _3318;
                    _3478 = _3320;
                    _3479 = _3322;
                    _3480 = _3324;
                    _3481 = _3326;
                    _3482 = _3483;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3315 = _3316;
            _3317 = _3318;
            _3319 = _3320;
            _3321 = _3322;
            _3323 = _3324;
            _3325 = _3326;
        }
        uvec4 _3329 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3330 = _3329.z;
        uint _3332 = (_3330 >> 8u) & 15u;
        float _3444;
        float _3446;
        float _3448;
        float _3450;
        float _3452;
        float _3454;
        if (((4294967295u << _3332) & _3206) == 0u)
        {
            _3444 = _3315;
            _3446 = _3317;
            _3448 = _3319;
            _3450 = _3321;
            _3452 = _3323;
            _3454 = _3325;
        }
        else
        {
            float _3469 = inversesqrt(dot(vec3(_2266, _2267, _2268), vec3(_2266, _2267, _2268)));
            float _3470 = _3469 * _2266;
            float _3471 = _3469 * _2267;
            float _3472 = _3469 * _2268;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_3332 < ((_3330 >> 12u) & 15u))
            {
                float _3445;
                float _3447;
                float _3449;
                float _3451;
                float _3453;
                float _3455;
                float _3604 = _3315;
                float _3605 = _3317;
                float _3606 = _3319;
                float _3607 = _3321;
                float _3608 = _3323;
                float _3609 = _3325;
                uint _3610 = _3332;
                uint _3619;
                bool _3620;
                for (;;)
                {
                    _3619 = texelFetch(g_lightClassification, int((((_3200 << 5u) + (_3186 << 9u)) + (_3610 << 2u)) >> 2u)).x;
                    _3620 = _3619 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3620)
                    {
                        frontier_phi_84_pred = _3609;
                        frontier_phi_84_pred_1 = _3608;
                        frontier_phi_84_pred_2 = _3607;
                        frontier_phi_84_pred_3 = _3606;
                        frontier_phi_84_pred_4 = _3605;
                        frontier_phi_84_pred_5 = _3604;
                    }
                    else
                    {
                        float _3812;
                        float _3813;
                        float _3814;
                        float _3815;
                        float _3816;
                        float _3817;
                        float _4105;
                        float _4106;
                        float _4107;
                        float _4108;
                        float _4109;
                        float _4110;
                        float _3825 = _3604;
                        float _3826 = _3605;
                        float _3827 = _3606;
                        float _3828 = _3607;
                        float _3829 = _3608;
                        float _3830 = _3609;
                        uint _3831 = _3619;
                        uint _3832;
                        vec4 _3857;
                        float _3858;
                        vec4 _3873;
                        vec3 _3885;
                        vec4 _3900;
                        vec4 _3915;
                        float _3961;
                        bool _3962;
                        for (;;)
                        {
                            uint _3842 = ((_3610 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3831));
                            _3832 = (_3831 + 4294967295u) & _3831;
                            uint _3844 = _3842 * 40u;
                            _3857 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3844)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3844 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3844 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3844 + 3u)).x));
                            _3858 = _3857.w;
                            uint _3860 = (_3842 * 40u) + 4u;
                            _3873 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3860)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3860 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3860 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3860 + 3u)).x));
                            uint _3875 = (_3842 * 40u) + 8u;
                            _3885 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3875)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3875 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3875 + 2u)).x));
                            uint _3887 = (_3842 * 40u) + 16u;
                            _3900 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3887)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3887 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3887 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3887 + 3u)).x));
                            uint _3902 = (_3842 * 40u) + 20u;
                            _3915 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3902)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3902 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3902 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3902 + 3u)).x));
                            uint _3917 = (_3842 * 40u) + 24u;
                            vec4 _3930 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3917)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3917 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3917 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3917 + 3u)).x));
                            uint _3936 = (_3842 * 40u) + 28u;
                            vec4 _3949 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3936)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3936 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3936 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3936 + 3u)).x));
                            _3961 = fma(_2268, _3949.z, fma(_2267, _3949.y, _3949.x * _2266)) + _3949.w;
                            _3962 = !((fma(_2268, _3930.z, fma(_2267, _3930.y, _3930.x * _2266)) + _3930.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_3962)
                            {
                                float _3989 = _3857.x - _2266;
                                float _3990 = _3857.y - _2267;
                                float _3991 = _3857.z - _2268;
                                float _3992 = dot(vec3(_3989, _3990, _3991), vec3(_3989, _3990, _3991));
                                float _3995 = inversesqrt(_3992);
                                float _3996 = _3995 * _3989;
                                float _3997 = _3995 * _3990;
                                float _3998 = _3995 * _3991;
                                float _4002 = 1.0 - (_3992 / (_3858 * _3858));
                                float _5210 = isnan(0.0) ? _4002 : (isnan(_4002) ? 0.0 : max(_4002, 0.0));
                                float _4003 = isnan(1.0) ? _5210 : (isnan(_5210) ? 1.0 : min(_5210, 1.0));
                                float _4007 = sqrt(_3992) * _3873.w;
                                float _4009 = 1.39999997615814208984375 / (_4007 + 1.39999997615814208984375);
                                float _4010 = _4009 * _4009;
                                float _4013 = ((1.0 - _4010) * dot(vec3(_3996, _3997, _3998), vec3(_1111, _1114, _1117))) + _4010;
                                float _4016 = _4007 * _4007;
                                float _4020 = (fma(_2268, _3900.z, fma(_2267, _3900.y, _3900.x * _2266)) + _3900.w) / _3961;
                                float _4021 = (fma(_2268, _3915.z, fma(_2267, _3915.y, _3915.x * _2266)) + _3915.w) / _3961;
                                float _4025 = 1.0 - dot(vec2(_4020, _4021), vec2(_4020, _4021));
                                float _5226 = isnan(0.0) ? _4025 : (isnan(_4025) ? 0.0 : max(_4025, 0.0));
                                float _4026 = isnan(1.0) ? _5226 : (isnan(_5226) ? 1.0 : min(_5226, 1.0));
                                float _4027 = _4026 * (((isnan(0.0) ? _4013 : (isnan(_4013) ? 0.0 : max(_4013, 0.0))) * _4003) / ((_4016 * 0.699999988079071044921875) + 1.0));
                                float _4039 = exp2(log2(1.0 / ((_4016 * 3.5) + 5.0)) * 0.25);
                                float _4040 = 1.0 - _1186;
                                float _4047 = sqrt(1.0 - ((1.0 - (_4040 * _4040)) * (1.0 - (_4039 * _4039))));
                                float _4048 = _4047 * _4047;
                                float _4049 = _4048 * _4048;
                                float _4050 = _3996 - _3470;
                                float _4051 = _3997 - _3471;
                                float _4052 = _3998 - _3472;
                                float _4056 = inversesqrt(dot(vec3(_4050, _4051, _4052), vec3(_4050, _4051, _4052)));
                                float _4060 = dot(vec3(_1111, _1114, _1117), vec3((-0.0) - _3470, (-0.0) - _3471, (-0.0) - _3472));
                                float _5237 = isnan(0.0) ? _4060 : (isnan(_4060) ? 0.0 : max(_4060, 0.0));
                                float _4063 = isnan(1.0) ? _5237 : (isnan(_5237) ? 1.0 : min(_5237, 1.0));
                                float _4064 = dot(vec3(_1111, _1114, _1117), vec3(_4056 * _4050, _4056 * _4051, _4056 * _4052));
                                float _5248 = isnan(0.0) ? _4064 : (isnan(_4064) ? 0.0 : max(_4064, 0.0));
                                float _4067 = isnan(1.0) ? _5248 : (isnan(_5248) ? 1.0 : min(_5248, 1.0));
                                float _4071 = ((_4067 * _4067) * (_4049 + (-1.0))) + 1.0;
                                float _4072 = _4009 * _4048;
                                float _4073 = _4072 * _4072;
                                float _4079 = ((1.0 - _4073) * dot(vec3(_1111, _1114, _1117), vec3(_3996, _3997, _3998))) + _4073;
                                float _5259 = isnan(0.0) ? _4079 : (isnan(_4079) ? 0.0 : max(_4079, 0.0));
                                float _4080 = isnan(1.0) ? _5259 : (isnan(_5259) ? 1.0 : min(_5259, 1.0));
                                float _4081 = 1.0 - _4048;
                                float _4091 = (0.5 / (((_4080 * ((_4063 * _4081) + _4048)) + 9.9999999392252902907785028219223e-09) + (((_4080 * _4081) + _4048) * _4063))) * _4080;
                                float _5270 = isnan(0.0) ? _4091 : (isnan(_4091) ? 0.0 : max(_4091, 0.0));
                                float _4101 = (_4026 * _4003) * (((_4049 * 3.1415927410125732421875) * (isnan(1.0) ? _5270 : (isnan(_5270) ? 1.0 : min(_5270, 1.0)))) / ((_4071 * _4071) * ((_4016 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _4027 * _3873.z;
                                frontier_phi_90_pred_1 = _4027 * _3873.y;
                                frontier_phi_90_pred_2 = _4027 * _3873.x;
                                frontier_phi_90_pred_3 = _4101 * _3885.z;
                                frontier_phi_90_pred_4 = _4101 * _3885.y;
                                frontier_phi_90_pred_5 = _4101 * _3885.x;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _4110 = frontier_phi_90_pred;
                            _4109 = frontier_phi_90_pred_1;
                            _4108 = frontier_phi_90_pred_2;
                            _4107 = frontier_phi_90_pred_3;
                            _4106 = frontier_phi_90_pred_4;
                            _4105 = frontier_phi_90_pred_5;
                            _3815 = _4108 + _3828;
                            _3816 = _4109 + _3829;
                            _3817 = _4110 + _3830;
                            _3812 = _4105 + _3825;
                            _3813 = _4106 + _3826;
                            _3814 = _4107 + _3827;
                            if (_3832 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3825 = _3812;
                                _3826 = _3813;
                                _3827 = _3814;
                                _3828 = _3815;
                                _3829 = _3816;
                                _3830 = _3817;
                                _3831 = _3832;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _3817;
                        frontier_phi_84_pred_1 = _3816;
                        frontier_phi_84_pred_2 = _3815;
                        frontier_phi_84_pred_3 = _3814;
                        frontier_phi_84_pred_4 = _3813;
                        frontier_phi_84_pred_5 = _3812;
                    }
                    _3455 = frontier_phi_84_pred;
                    _3453 = frontier_phi_84_pred_1;
                    _3451 = frontier_phi_84_pred_2;
                    _3449 = frontier_phi_84_pred_3;
                    _3447 = frontier_phi_84_pred_4;
                    _3445 = frontier_phi_84_pred_5;
                    uint _3611 = _3610 + 1u;
                    if (_3611 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3604 = _3445;
                        _3605 = _3447;
                        _3606 = _3449;
                        _3607 = _3451;
                        _3608 = _3453;
                        _3609 = _3455;
                        _3610 = _3611;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _3451;
                frontier_phi_65_66_ladder_1 = _3455;
                frontier_phi_65_66_ladder_2 = _3453;
                frontier_phi_65_66_ladder_3 = _3449;
                frontier_phi_65_66_ladder_4 = _3447;
                frontier_phi_65_66_ladder_5 = _3445;
            }
            else
            {
                frontier_phi_65_66_ladder = _3321;
                frontier_phi_65_66_ladder_1 = _3325;
                frontier_phi_65_66_ladder_2 = _3323;
                frontier_phi_65_66_ladder_3 = _3319;
                frontier_phi_65_66_ladder_4 = _3317;
                frontier_phi_65_66_ladder_5 = _3315;
            }
            _3444 = frontier_phi_65_66_ladder_5;
            _3446 = frontier_phi_65_66_ladder_4;
            _3448 = frontier_phi_65_66_ladder_3;
            _3450 = frontier_phi_65_66_ladder;
            _3452 = frontier_phi_65_66_ladder_2;
            _3454 = frontier_phi_65_66_ladder_1;
        }
        float _3459 = isnan(1.0) ? _1170 : (isnan(_1170) ? 1.0 : min(_1170, 1.0));
        _3219 = (_3459 * _3450) + _2731;
        _3221 = (_3459 * _3452) + _2733;
        _3223 = (_3459 * _3454) + _2735;
        _3225 = ((_3444 * _1155) * _3459) + _3069;
        _3227 = ((_3446 * _1157) * _3459) + _3071;
        _3229 = ((_3448 * _1158) * _3459) + _3073;
    }
    else
    {
        _3219 = _2731;
        _3221 = _2733;
        _3223 = _2735;
        _3225 = _3069;
        _3227 = _3071;
        _3229 = _3073;
    }
    uint _3235 = _1131 + uint(cbMatDynParam._m0[0u].w);
    float _3241 = ((((((_896.x - _891.x) * _874) + _891.x) * cbMtdParam._m0[21u].x) + ((cbMtdParam._m0[27u].x * _820) * cbMtdParam._m0[20u].x)) * _829) * cbInstanceData._m0[_3235].x;
    float _3242 = ((((((_896.y - _891.y) * _874) + _891.y) * cbMtdParam._m0[21u].y) + ((cbMtdParam._m0[27u].x * (((_809.y - _807) * _787) + _807)) * cbMtdParam._m0[20u].y)) * _829) * cbInstanceData._m0[_3235].y;
    float _3243 = ((((((_896.z - _891.z) * _874) + _891.z) * cbMtdParam._m0[21u].z) + ((cbMtdParam._m0[27u].x * (((_809.z - _808) * _787) + _808)) * cbMtdParam._m0[20u].z)) * _829) * cbInstanceData._m0[_3235].z;
    float _5286 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
    float _5297 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
    float _5308 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
    float _3260 = (((isnan(1.0) ? _5286 : (isnan(_5286) ? 1.0 : min(_5286, 1.0))) * (_3219 + ((isnan(0.0) ? _1920 : (isnan(_1920) ? 0.0 : max(_1920, 0.0))) * _1170))) + ((_3225 + ((isnan(0.0) ? _2212 : (isnan(_2212) ? 0.0 : max(_2212, 0.0))) * _1999)) * cbPerFrame._m0[3u].x)) + _3241;
    float _3262 = (_3242 + ((_3227 + ((isnan(0.0) ? _2215 : (isnan(_2215) ? 0.0 : max(_2215, 0.0))) * _1999)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5297 : (isnan(_5297) ? 1.0 : min(_5297, 1.0))) * (_3221 + ((isnan(0.0) ? _1923 : (isnan(_1923) ? 0.0 : max(_1923, 0.0))) * _1170)));
    float _3264 = (_3243 + ((_3229 + ((isnan(0.0) ? _2218 : (isnan(_2218) ? 0.0 : max(_2218, 0.0))) * _1999)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5308 : (isnan(_5308) ? 1.0 : min(_5308, 1.0))) * (_3223 + ((isnan(0.0) ? _1926 : (isnan(_1926) ? 0.0 : max(_1926, 0.0))) * _1170)));
    float _3265 = isnan(0.0) ? _3260 : (isnan(_3260) ? 0.0 : max(_3260, 0.0));
    float _3266 = isnan(0.0) ? _3262 : (isnan(_3262) ? 0.0 : max(_3262, 0.0));
    float _3267 = isnan(0.0) ? _3264 : (isnan(_3264) ? 0.0 : max(_3264, 0.0));
    float _3273 = cbMtdParam._m0[2u].x * _3241;
    float _3274 = cbMtdParam._m0[2u].y * _3242;
    float _3275 = cbMtdParam._m0[2u].z * _3243;
    float _5334 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3277 = isnan(1.0) ? _5334 : (isnan(_5334) ? 1.0 : min(_5334, 1.0));
    uint _3278 = _1130 + 6u;
    float _3286 = _1092 / cbSceneParam._m0[86u].x;
    float _3287 = _1093 / cbSceneParam._m0[86u].y;
    vec4 _3301 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3286, _3287, (log2((isnan(cbSceneParam._m0[77u].w) ? _1018 : (isnan(_1018) ? cbSceneParam._m0[77u].w : min(_1018, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3303 = _3301.x;
    float _3304 = _3301.y;
    float _3305 = _3301.z;
    float _3306 = _3301.w;
    float _3377;
    float _3379;
    float _3381;
    float _3383;
    if (_1018 > cbSceneParam._m0[78u].w)
    {
        float _3340 = isnan(_1018) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1018 : min(cbSceneParam._m0[80u].w, _1018));
        float _3341 = _3340 / _1018;
        float _3352 = _3341 * _1068;
        float _3353 = _1069 * _3341;
        float _3354 = (-0.0) - _3353;
        float _3355 = _3341 * _1070;
        float _3357 = (cbSceneParam._m0[77u].w * _3354) / _3340;
        float _3358 = _3357 + cbSceneParam._m0[79u].w;
        float _3359 = cbSceneParam._m0[79u].w - _3353;
        float _3365 = sqrt(((_3352 * _3352) + (_3353 * _3353)) + (_3355 * _3355));
        float _3368 = (1.0 - (cbSceneParam._m0[77u].w / _3340)) * _3365;
        float _3373 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3375 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3561;
        if (abs((_3354 - _3357) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3561 = ((((_3358 > 0.0) ? exp2(_3373 * _3358) : (2.0 - exp2(_3375 * _3358))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3368;
        }
        else
        {
            float _3505 = 1.0 / cbSceneParam._m0[80u].x;
            float _3506 = isnan(_3359) ? _3358 : (isnan(_3358) ? _3359 : max(_3358, _3359));
            float _3507 = isnan(_3359) ? _3358 : (isnan(_3358) ? _3359 : min(_3358, _3359));
            float _3516 = isnan(0.0) ? _3506 : (isnan(_3506) ? 0.0 : min(_3506, 0.0));
            float _3517 = isnan(0.0) ? _3507 : (isnan(_3507) ? 0.0 : min(_3507, 0.0));
            _3561 = ((abs(_3365 / _3354) * cbSceneParam._m0[80u].y) * ((((_3516 - _3517) * 2.0) - ((exp2(_3373 * (isnan(0.0) ? _3506 : (isnan(_3506) ? 0.0 : max(_3506, 0.0)))) - exp2(_3373 * (isnan(0.0) ? _3507 : (isnan(_3507) ? 0.0 : max(_3507, 0.0))))) * _3505)) - ((exp2(_3375 * _3516) - exp2(_3375 * _3517)) * _3505))) + (_3368 * cbSceneParam._m0[80u].z);
        }
        vec4 _3563 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3286, _3287, 1.0), 0.0);
        float _3572 = exp2((_3561 * (-1.44269502162933349609375)) * (1.0 - _3563.w));
        float _3573 = log2(_3572);
        float _3589 = log2(_3306);
        _3377 = (exp2(_3589 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3573 * cbSceneParam._m0[78u].x)) * _3563.x) / cbSceneParam._m0[78u].x)) + _3303;
        _3379 = (exp2(_3589 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3573 * cbSceneParam._m0[78u].y)) * _3563.y) / cbSceneParam._m0[78u].y)) + _3304;
        _3381 = (exp2(_3589 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3573 * cbSceneParam._m0[78u].z)) * _3563.z) / cbSceneParam._m0[78u].z)) + _3305;
        _3383 = _3572 * _3306;
    }
    else
    {
        _3377 = _3303;
        _3379 = _3304;
        _3381 = _3305;
        _3383 = _3306;
    }
    bool _3599;
    vec4 _3393;
    vec4 _3415;
    float _3417;
    float _3421;
    float _3422;
    float _3423;
    float _3426;
    float _3429;
    float _3432;
    float _3433;
    bool _3443;
    for (;;)
    {
        _3393 = cbMatDynParam._m0[0u];
        float _3395 = roundEven(_3393.y);
        bool _3396 = _3395 == 3.0;
        float _3397 = log2(_3383);
        float _3401 = exp2(_3397 * cbSceneParam._m0[78u].x);
        float _3402 = exp2(_3397 * cbSceneParam._m0[78u].y);
        float _3403 = exp2(_3397 * cbSceneParam._m0[78u].z);
        float _3404 = _3401 * _3265;
        float _3405 = _3402 * _3266;
        float _3406 = _3403 * _3267;
        float _3413 = _1081 + (-0.5);
        _3415 = cbMtdParam._m0[1u];
        _3417 = _3415.y * _3413;
        float _3420 = (_3395 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3421 = _3420 * (_3396 ? _3404 : (_3404 + (cbSceneParam._m0[72u].w * _3377)));
        _3422 = _3420 * (_3396 ? _3405 : (_3405 + (cbSceneParam._m0[72u].w * _3379)));
        _3423 = _3420 * (_3396 ? _3406 : (_3406 + (cbSceneParam._m0[72u].w * _3381)));
        _3426 = ((_3273 * _3277) * _3401) * _3420;
        _3429 = ((_3274 * _3277) * _3402) * _3420;
        _3432 = ((_3275 * _3277) * _3403) * _3420;
        _3433 = _3413 * 0.999000012874603271484375;
        _3443 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3443)
        {
            if ((cbInstanceData._m0[_1130 + 7u].x + _3433) < 0.5)
            {
                _3599 = true;
                break;
            }
        }
        uint _3540 = _1131 + uint(_3393.w);
        if ((cbInstanceData._m0[_3540].w < 1.0) && ((cbInstanceData._m0[_3540].w + _3433) < 0.5))
        {
            _3599 = true;
            break;
        }
        if ((_3417 + 1.0) < _3415.x)
        {
            _3599 = true;
            break;
        }
        _3599 = false;
        break;
    }
    float _3803;
    if (_3599)
    {
        discard_state = true;
        _3803 = 0.0;
    }
    else
    {
        _3803 = cbInstanceData._m0[_3278].w;
    }
    SV_Target.x = _3421;
    SV_Target.y = _3422;
    SV_Target.z = _3423;
    SV_Target.w = _3803;
    SV_Target_1.x = _3426;
    SV_Target_1.y = _3429;
    SV_Target_1.z = _3432;
    SV_Target_1.w = cbInstanceData._m0[_3278].w;
    discard_exit();
}


