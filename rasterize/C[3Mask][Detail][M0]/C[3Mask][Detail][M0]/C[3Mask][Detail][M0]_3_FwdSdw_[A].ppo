#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_5;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1247;
float _3893;
float _3894;
float _3895;
float _3896;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _211 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _212 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _213 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _219 = inversesqrt(dot(vec3(_211, _212, _213), vec3(_211, _212, _213)));
    float _226 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _233 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _256 = texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _262 = _256.x * cbMtdParam._m0[10u].x;
    float _263 = _256.y * cbMtdParam._m0[10u].y;
    float _264 = _256.z * cbMtdParam._m0[10u].z;
    vec4 _283 = texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _330 = cbMtdParam._m0[18u].y * texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x;
    float _341 = ((cbMtdParam._m0[15u].x * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[18u].z * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[18u].w * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).x) * 2.0) - _330)) + 1.0;
    float _3905 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
    float _342 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
    float _349 = (_342 * ((_283.x * cbMtdParam._m0[11u].x) - _262)) + _262;
    float _350 = (_342 * ((_283.y * cbMtdParam._m0[11u].y) - _263)) + _263;
    float _351 = (_342 * ((_283.z * cbMtdParam._m0[11u].z) - _264)) + _264;
    vec4 _370 = texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _400 = ((cbMtdParam._m0[17u].w * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[19u].x * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[19u].y * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).y) * 2.0) - _330)) + 1.0;
    float _3916 = isnan(0.0) ? _400 : (isnan(_400) ? 0.0 : max(_400, 0.0));
    float _401 = isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0));
    float _408 = (_401 * ((_370.x * cbMtdParam._m0[12u].x) - _349)) + _349;
    float _409 = (_401 * ((_370.y * cbMtdParam._m0[12u].y) - _350)) + _350;
    float _410 = (_401 * ((_370.z * cbMtdParam._m0[12u].z) - _351)) + _351;
    vec4 _427 = texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _452 = ((cbMtdParam._m0[18u].x * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[19u].z * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[19u].w * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z) * 2.0) - _330)) + 1.0;
    float _3927 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _453 = isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0));
    float _460 = (_453 * ((_427.x * cbMtdParam._m0[13u].x) - _408)) + _408;
    float _461 = (_453 * ((_427.y * cbMtdParam._m0[13u].y) - _409)) + _409;
    float _462 = (_453 * ((_427.z * cbMtdParam._m0[13u].z) - _410)) + _410;
    vec4 _483 = texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.w) + cbTextureTilingScale._m0[8u].w));
    float _512 = (TEXCOORD_5.x - ((cbMtdParam._m0[15u].w * (1.0 - TEXCOORD_5.x)) * (texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[15u].z + 1.0);
    float _3938 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    float _513 = isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0));
    float _520 = (_513 * ((_483.x * cbMtdParam._m0[14u].x) - _460)) + _460;
    float _521 = (_513 * ((_483.y * cbMtdParam._m0[14u].y) - _461)) + _461;
    float _522 = (_513 * ((_483.z * cbMtdParam._m0[14u].z) - _462)) + _462;
    vec4 _538 = texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    vec4 _560 = texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    vec4 _578 = texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _580 = _578.x;
    float _581 = _578.y;
    float _584 = cbMtdParam._m0[16u].w * _578.z;
    float _587 = (((cbMtdParam._m0[17u].x * _560.z) - _584) * _342) + _584;
    vec4 _600 = texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _609 = (((cbMtdParam._m0[17u].y * _600.z) - _587) * _401) + _587;
    vec4 _622 = texture(sampler2D(C_3Mask_Detail_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _631 = (((cbMtdParam._m0[17u].z * _622.z) - _609) * _453) + _609;
    float _636 = ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * ((_538.z * cbMtdParam._m0[16u].z) - _631)) + _631;
    float _641 = ((_560.x - _580) * _342) + _580;
    float _642 = ((_560.y - _581) * _342) + _581;
    float _647 = ((_600.x - _641) * _401) + _641;
    float _648 = ((_600.y - _642) * _401) + _642;
    float _657 = ((((_622.x - _647) * _453) + _647) * 2.0) + (-1.0);
    float _658 = ((((_622.y - _648) * _453) + _648) * 2.0) + (-1.0);
    float _659 = dot(vec2(_657, _658), vec2(_657, _658));
    float _3949 = isnan(0.0) ? _659 : (isnan(_659) ? 0.0 : max(_659, 0.0));
    float _664 = sqrt(1.0 - (isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0))));
    float _670 = ((((_538.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _657;
    float _671 = ((((_538.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _658;
    float _674 = fma(_664, _226 * NORMAL.x, fma(_671, _233 * TANGENT.x, (_219 * _211) * _670));
    float _677 = fma(_664, _226 * NORMAL.y, fma(_671, _233 * TANGENT.y, (_219 * _212) * _670));
    float _680 = fma(_664, _226 * NORMAL.z, fma(_671, _233 * TANGENT.z, (_219 * _213) * _670));
    float _684 = inversesqrt(dot(vec3(_674, _677, _680), vec3(_674, _677, _680)));
    float _685 = _684 * _674;
    float _686 = _684 * _677;
    float _687 = _684 * _680;
    float _3960 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
    float _688 = isnan(1.0) ? _3960 : (isnan(_3960) ? 1.0 : min(_3960, 1.0));
    float _3971 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _3982 = isnan(0.0) ? _521 : (isnan(_521) ? 0.0 : max(_521, 0.0));
    float _3993 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _707 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _747 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _757 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _747);
    float _758 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _747);
    float _759 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _747);
    float _763 = inversesqrt(dot(vec3(_757, _758, _759), vec3(_757, _758, _759)));
    float _764 = _757 * _763;
    float _765 = _758 * _763;
    float _766 = _759 * _763;
    vec4 _771 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _773 = _771.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _927 = sqrt(((_757 * _757) + (_758 * _758)) + (_759 * _759));
        float _933 = (cbMatDynParam._m0[5u].x * _927) + cbMatDynParam._m0[5u].y;
        float _4004 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
        float _934 = isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0));
        float _938 = (cbMatDynParam._m0[5u].z * _927) + cbMatDynParam._m0[5u].w;
        float _4015 = isnan(0.0) ? _938 : (isnan(_938) ? 0.0 : max(_938, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0))) - _934)) + _934) < ((_773 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _784 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _785 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _803 = fma(_687, cbSceneParam._m0[5u].z, fma(_686, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _685));
    float _806 = fma(_687, cbSceneParam._m0[6u].z, fma(_686, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _685));
    float _809 = fma(_687, cbSceneParam._m0[7u].z, fma(_686, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _685));
    uint _822 = uint(roundEven(NORMAL.w)) * 13u;
    uint _823 = _822 + 9u;
    uint _824 = _823 + uint(cbMatDynParam._m0[0u].w);
    float _830 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0)))) * cbInstanceData._m0[_824].x;
    float _831 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0)))) * cbInstanceData._m0[_824].y;
    float _832 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0)))) * cbInstanceData._m0[_824].z;
    float _4026 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
    float _833 = isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0));
    float _4037 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _834 = isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0));
    float _4048 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _835 = isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0));
    vec4 _844 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _784, cbSceneParam._m0[86u].y * _785));
    float _847 = _844.x * TEXCOORD_5.w;
    float _848 = dot(vec3(_685, _686, _687), vec3(_764, _765, _766));
    float _851 = _848 * 2.0;
    float _855 = (_851 * _685) - _764;
    float _856 = (_851 * _686) - _765;
    float _857 = (_851 * _687) - _766;
    float _861 = abs(dot(vec3(_764, _765, _766), vec3(_685, _686, _687)));
    float _4059 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
    float _863 = sqrt(_688);
    float _876 = exp2((_863 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4059 : (isnan(_4059) ? 1.0 : min(_4059, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_863 * 3.0));
    float _908 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _912 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _916 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1246;
    float _1248;
    float _1249;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    float _1256;
    float _1257;
    float _1258;
    float _1259;
    float _1260;
    float _1261;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _971 = fma(_916, cbModelParam._m0[26u].z, fma(_912, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _908));
        float _975 = fma(_916, cbModelParam._m0[27u].z, fma(_912, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _908));
        float _979 = fma(_916, cbModelParam._m0[28u].z, fma(_912, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _908));
        float _1004 = _908 + _685;
        float _1005 = _912 + _686;
        float _1006 = _916 + _687;
        float _1016 = fma(_1006, cbModelParam._m0[26u].z, fma(_1005, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1004)) - _971;
        float _1017 = fma(_1006, cbModelParam._m0[27u].z, fma(_1005, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1004)) - _975;
        float _1018 = fma(_1006, cbModelParam._m0[28u].z, fma(_1005, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1004)) - _979;
        float _1022 = inversesqrt(dot(vec3(_1016, _1017, _1018), vec3(_1016, _1017, _1018)));
        float _1035 = ((_1022 * _1016) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_971 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1036 = ((_1022 * _1017) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_975 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1037 = ((_1022 * _1018) / cbModelParam._m0[34u].z) + ((((((_979 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1040 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1035, _1036, _1037), 0.0);
        vec4 _1047 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1035, _1036, _1037), 0.0);
        vec4 _1054 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1035, _1036, _1037), 0.0);
        vec4 _1061 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1035, _1036, _1037), 0.0);
        float _1074 = exp2((_1040.w + (-0.5)) * 20.0) * 2.0;
        float _1075 = _1074 * (_1040.x + (-0.5));
        float _1076 = _1074 * (_1040.y + (-0.5));
        float _1077 = _1074 * (_1040.z + (-0.5));
        float _1084 = exp2((_1047.w + (-0.5)) * 20.0) * 2.0;
        float _1085 = _1084 * (_1047.x + (-0.5));
        float _1086 = _1084 * (_1047.y + (-0.5));
        float _1087 = _1084 * (_1047.z + (-0.5));
        float _1094 = exp2((_1054.w + (-0.5)) * 20.0) * 2.0;
        float _1095 = _1094 * (_1054.x + (-0.5));
        float _1096 = _1094 * (_1054.y + (-0.5));
        float _1097 = _1094 * (_1054.z + (-0.5));
        float _1104 = exp2((_1061.w + (-0.5)) * 20.0) * 2.0;
        float _1105 = _1104 * (_1061.x + (-0.5));
        float _1106 = _1104 * (_1061.y + (-0.5));
        float _1107 = _1104 * (_1061.z + (-0.5));
        float _1108 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
        float _1109 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
        float _1110 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
        float _1111 = _1075 * 0.5;
        float _1112 = _1085 * 0.5;
        float _1113 = _1095 * 0.5;
        float _1114 = dot(vec3(_1111, _1112, _1113), vec3(_1111, _1112, _1113));
        float _1119 = (_1114 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1114);
        float _1128 = (dot(vec3(_685, _686, _687), vec3(_1119 * _1111, _1119 * _1112, _1119 * _1113)) + 1.0) * 0.5;
        float _4085 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
        float _1138 = sqrt(((_1112 * _1112) + (_1111 * _1111)) + (_1113 * _1113)) / (_1108 + 9.9999997473787516355514526367188e-06);
        float _4096 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
        float _1139 = isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0));
        float _1140 = _1139 * 2.0;
        float _1144 = (1.0 - _1139) / (_1139 + 1.0);
        float _4107 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1145 = isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0));
        float _1154 = ((((1.0 - _1145) * (_1140 + 2.0)) * exp2(log2(isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0))) * (_1140 + 1.0))) + _1145) * _1108;
        float _1155 = _1076 * 0.5;
        float _1156 = _1086 * 0.5;
        float _1157 = _1096 * 0.5;
        float _1158 = dot(vec3(_1155, _1156, _1157), vec3(_1155, _1156, _1157));
        float _1163 = (_1158 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1158);
        float _1171 = (dot(vec3(_685, _686, _687), vec3(_1163 * _1155, _1163 * _1156, _1163 * _1157)) + 1.0) * 0.5;
        float _4118 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
        float _1180 = sqrt(((_1156 * _1156) + (_1155 * _1155)) + (_1157 * _1157)) / (_1109 + 9.9999997473787516355514526367188e-06);
        float _4129 = isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0));
        float _1181 = isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0));
        float _1182 = _1181 * 2.0;
        float _1186 = (1.0 - _1181) / (_1181 + 1.0);
        float _4140 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1187 = isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0));
        float _1196 = ((((1.0 - _1187) * (_1182 + 2.0)) * exp2(log2(isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0))) * (_1182 + 1.0))) + _1187) * _1109;
        float _1197 = _1077 * 0.5;
        float _1198 = _1087 * 0.5;
        float _1199 = _1097 * 0.5;
        float _1200 = dot(vec3(_1197, _1198, _1199), vec3(_1197, _1198, _1199));
        float _1205 = (_1200 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1200);
        float _1213 = (dot(vec3(_685, _686, _687), vec3(_1205 * _1197, _1205 * _1198, _1205 * _1199)) + 1.0) * 0.5;
        float _4151 = isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0));
        float _1222 = sqrt(((_1198 * _1198) + (_1197 * _1197)) + (_1199 * _1199)) / (_1110 + 9.9999997473787516355514526367188e-06);
        float _4162 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
        float _1223 = isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0));
        float _1224 = _1223 * 2.0;
        float _1228 = (1.0 - _1223) / (_1223 + 1.0);
        float _4173 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1229 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
        float _1238 = ((((1.0 - _1229) * (_1224 + 2.0)) * exp2(log2(isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0))) * (_1224 + 1.0))) + _1229) * _1110;
        _1246 = _1077;
        _1248 = _1076;
        _1249 = _1075;
        _1250 = _1087;
        _1251 = _1086;
        _1252 = _1085;
        _1253 = _1097;
        _1254 = _1096;
        _1255 = _1095;
        _1256 = _1110;
        _1257 = _1109;
        _1258 = _1108;
        _1259 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0)));
        _1260 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0)));
        _1261 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0)));
    }
    else
    {
        _1246 = _1247;
        _1248 = _1247;
        _1249 = _1247;
        _1250 = _1247;
        _1251 = _1247;
        _1252 = _1247;
        _1253 = _1247;
        _1254 = _1247;
        _1255 = _1247;
        _1256 = _1247;
        _1257 = _1247;
        _1258 = _1247;
        _1259 = 0.0;
        _1260 = 0.0;
        _1261 = 0.0;
    }
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1290 = fma(_916, cbModelParam._m0[30u].z, fma(_912, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _908));
        float _1294 = fma(_916, cbModelParam._m0[31u].z, fma(_912, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _908));
        float _1298 = fma(_916, cbModelParam._m0[32u].z, fma(_912, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _908));
        float _1321 = _908 + _685;
        float _1322 = _912 + _686;
        float _1323 = _916 + _687;
        float _1333 = fma(_1323, cbModelParam._m0[30u].z, fma(_1322, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1321)) - _1290;
        float _1334 = fma(_1323, cbModelParam._m0[31u].z, fma(_1322, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1321)) - _1294;
        float _1335 = fma(_1323, cbModelParam._m0[32u].z, fma(_1322, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1321)) - _1298;
        float _1339 = inversesqrt(dot(vec3(_1333, _1334, _1335), vec3(_1333, _1334, _1335)));
        float _1352 = ((_1339 * _1333) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1290 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1353 = ((_1339 * _1334) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1294 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1354 = ((_1339 * _1335) / cbModelParam._m0[35u].z) + ((((((_1298 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1356 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1352, _1353, _1354), 0.0);
        vec4 _1363 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1352, _1353, _1354), 0.0);
        vec4 _1370 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1352, _1353, _1354), 0.0);
        vec4 _1377 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1352, _1353, _1354), 0.0);
        float _1389 = exp2((_1356.w + (-0.5)) * 20.0) * 2.0;
        float _1390 = _1389 * (_1356.x + (-0.5));
        float _1391 = _1389 * (_1356.y + (-0.5));
        float _1392 = _1389 * (_1356.z + (-0.5));
        float _1399 = exp2((_1363.w + (-0.5)) * 20.0) * 2.0;
        float _1400 = _1399 * (_1363.x + (-0.5));
        float _1401 = _1399 * (_1363.y + (-0.5));
        float _1402 = _1399 * (_1363.z + (-0.5));
        float _1409 = exp2((_1370.w + (-0.5)) * 20.0) * 2.0;
        float _1410 = _1409 * (_1370.x + (-0.5));
        float _1411 = _1409 * (_1370.y + (-0.5));
        float _1412 = _1409 * (_1370.z + (-0.5));
        float _1419 = exp2((_1377.w + (-0.5)) * 20.0) * 2.0;
        float _1420 = _1419 * (_1377.x + (-0.5));
        float _1421 = _1419 * (_1377.y + (-0.5));
        float _1422 = _1419 * (_1377.z + (-0.5));
        float _1423 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1424 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1425 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1426 = _1390 * 0.5;
        float _1427 = _1400 * 0.5;
        float _1428 = _1410 * 0.5;
        float _1429 = dot(vec3(_1426, _1427, _1428), vec3(_1426, _1427, _1428));
        float _1434 = (_1429 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1429);
        float _1442 = (dot(vec3(_685, _686, _687), vec3(_1434 * _1426, _1434 * _1427, _1434 * _1428)) + 1.0) * 0.5;
        float _4214 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1451 = sqrt(((_1427 * _1427) + (_1426 * _1426)) + (_1428 * _1428)) / (_1423 + 9.9999997473787516355514526367188e-06);
        float _4225 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1452 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
        float _1453 = _1452 * 2.0;
        float _1457 = (1.0 - _1452) / (_1452 + 1.0);
        float _4236 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1458 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
        float _1467 = ((((1.0 - _1458) * (_1453 + 2.0)) * exp2(log2(isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0))) * (_1453 + 1.0))) + _1458) * _1423;
        float _1468 = _1391 * 0.5;
        float _1469 = _1401 * 0.5;
        float _1470 = _1411 * 0.5;
        float _1471 = dot(vec3(_1468, _1469, _1470), vec3(_1468, _1469, _1470));
        float _1476 = (_1471 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1471);
        float _1484 = (dot(vec3(_685, _686, _687), vec3(_1476 * _1468, _1476 * _1469, _1476 * _1470)) + 1.0) * 0.5;
        float _4247 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1493 = sqrt(((_1469 * _1469) + (_1468 * _1468)) + (_1470 * _1470)) / (_1424 + 9.9999997473787516355514526367188e-06);
        float _4258 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1494 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
        float _1495 = _1494 * 2.0;
        float _1499 = (1.0 - _1494) / (_1494 + 1.0);
        float _4269 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
        float _1500 = isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0));
        float _1509 = ((((1.0 - _1500) * (_1495 + 2.0)) * exp2(log2(isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0))) * (_1495 + 1.0))) + _1500) * _1424;
        float _1510 = _1392 * 0.5;
        float _1511 = _1402 * 0.5;
        float _1512 = _1412 * 0.5;
        float _1513 = dot(vec3(_1510, _1511, _1512), vec3(_1510, _1511, _1512));
        float _1518 = (_1513 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1513);
        float _1526 = (dot(vec3(_685, _686, _687), vec3(_1518 * _1510, _1518 * _1511, _1518 * _1512)) + 1.0) * 0.5;
        float _4280 = isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0));
        float _1535 = sqrt(((_1511 * _1511) + (_1510 * _1510)) + (_1512 * _1512)) / (_1425 + 9.9999997473787516355514526367188e-06);
        float _4291 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1536 = isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0));
        float _1537 = _1536 * 2.0;
        float _1541 = (1.0 - _1536) / (_1536 + 1.0);
        float _4302 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
        float _1542 = isnan(1.0) ? _4302 : (isnan(_4302) ? 1.0 : min(_4302, 1.0));
        float _1551 = ((((1.0 - _1542) * (_1537 + 2.0)) * exp2(log2(isnan(1.0) ? _4280 : (isnan(_4280) ? 1.0 : min(_4280, 1.0))) * (_1537 + 1.0))) + _1542) * _1425;
        _1559 = _1392;
        _1560 = _1391;
        _1561 = _1390;
        _1562 = _1402;
        _1563 = _1401;
        _1564 = _1400;
        _1565 = _1412;
        _1566 = _1411;
        _1567 = _1410;
        _1568 = _1425;
        _1569 = _1424;
        _1570 = _1423;
        _1571 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0)));
        _1572 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0)));
        _1573 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0)));
    }
    else
    {
        _1559 = _1247;
        _1560 = _1247;
        _1561 = _1247;
        _1562 = _1247;
        _1563 = _1247;
        _1564 = _1247;
        _1565 = _1247;
        _1566 = _1247;
        _1567 = _1247;
        _1568 = _1247;
        _1569 = _1247;
        _1570 = _1247;
        _1571 = 0.0;
        _1572 = 0.0;
        _1573 = 0.0;
    }
    float _1583 = (cbModelParam._m0[1u].x * (_1571 - _1259)) + _1259;
    float _1584 = (cbModelParam._m0[1u].x * (_1572 - _1260)) + _1260;
    float _1585 = (cbModelParam._m0[1u].x * (_1573 - _1261)) + _1261;
    float _1606 = fma(_1585, cbSceneParam._m0[89u].z, fma(_1584, cbSceneParam._m0[89u].y, _1583 * cbSceneParam._m0[89u].x));
    float _1609 = fma(_1585, cbSceneParam._m0[90u].z, fma(_1584, cbSceneParam._m0[90u].y, _1583 * cbSceneParam._m0[90u].x));
    float _1612 = fma(_1585, cbSceneParam._m0[91u].z, fma(_1584, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1583));
    float _1627 = _855 * 0.5;
    float _1628 = _856 * 0.5;
    float _1629 = _857 * 0.5;
    float _1630 = dot(vec4(_1627, _1628, _1629, 1.0), vec4(_1561, _1564, _1567, _1570));
    float _1633 = dot(vec4(_1627, _1628, _1629, 1.0), vec4(_1560, _1563, _1566, _1569));
    float _1636 = dot(vec4(_1627, _1628, _1629, 1.0), vec4(_1559, _1562, _1565, _1568));
    float _1670;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1643 = dot(vec4(_1627, _1628, _1629, 1.0), vec4(_1246, _1250, _1253, _1256));
        float _1647 = dot(vec4(_1627, _1628, _1629, 1.0), vec4(_1248, _1251, _1254, _1257));
        float _1651 = dot(vec4(_1627, _1628, _1629, 1.0), vec4(_1249, _1252, _1255, _1258));
        float _1658 = dot(vec4(cbModelParam._m0[39u]), vec4(_1627, _1628, _1629, 1.0));
        _1670 = dot(vec3(isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0)), isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0)), isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1658) ? 0.0 : (isnan(0.0) ? _1658 : max(0.0, _1658))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1670 = 1.0;
    }
    float _1681;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1672 = dot(vec4(cbModelParam._m0[40u]), vec4(_1627, _1628, _1629, 1.0));
        _1681 = dot(vec3(isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0)), isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0)), isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1672) ? 0.0 : (isnan(0.0) ? _1672 : max(0.0, _1672))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1681 = 1.0;
    }
    float _1685 = (_1681 * cbModelParam._m0[1u].x) + (_1670 * (1.0 - cbModelParam._m0[1u].x));
    float _1695 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _688);
    float _1696 = isnan(_1695) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1695 : min(cbModelParam._m0[25u].z, _1695));
    float _1776;
    float _1778;
    float _1780;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1743 = fma(_916, cbModelParam._m0[13u].z, fma(_912, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _908)) + cbModelParam._m0[13u].w;
        float _1747 = fma(_916, cbModelParam._m0[14u].z, fma(_912, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _908)) + cbModelParam._m0[14u].w;
        float _1751 = fma(_916, cbModelParam._m0[15u].z, fma(_912, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _908)) + cbModelParam._m0[15u].w;
        float _1754 = fma(_857, cbModelParam._m0[13u].z, fma(_856, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _855));
        float _1757 = fma(_857, cbModelParam._m0[14u].z, fma(_856, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _855));
        float _1760 = fma(_857, cbModelParam._m0[15u].z, fma(_856, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _855));
        float _1788;
        if (_1754 > 0.0)
        {
            _1788 = abs((1.0 - _1743) / _1754);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1754 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1743 + 1.0) / _1754);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1788 = frontier_phi_17_15_ladder;
        }
        float _1959;
        if (_1757 > 0.0)
        {
            _1959 = abs((1.0 - _1747) / _1757);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1757 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1747 + 1.0) / _1757);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1959 = frontier_phi_26_22_ladder;
        }
        float _2255;
        if (_1760 > 0.0)
        {
            _2255 = abs((1.0 - _1751) / _1760);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1760 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1751 + 1.0) / _1760);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2255 = frontier_phi_38_33_ladder;
        }
        float _2257 = isnan(_1959) ? _1788 : (isnan(_1788) ? _1959 : min(_1788, _1959));
        float _2258 = isnan(_2255) ? _2257 : (isnan(_2257) ? _2255 : min(_2257, _2255));
        float _2262 = (_2258 * _1754) + _1743;
        float _2263 = (_2258 * _1757) + _1747;
        float _2264 = (_2258 * _1760) + _1751;
        float _2265 = _2258 * 9.9999997473787516355514526367188e-05;
        float _2267 = (-1.0) - _2265;
        float _2269 = _2265 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2264 > _2269) || ((_2264 < _2267) || ((_2263 > _2269) || ((_2263 < _2267) || ((_2262 < _2267) || (_2262 > _2269))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2409 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2264, cbModelParam._m0[9u].z, fma(_2263, cbModelParam._m0[9u].y, _2262 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2264, cbModelParam._m0[10u].z, fma(_2263, cbModelParam._m0[10u].y, _2262 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2264, cbModelParam._m0[11u].z, fma(_2263, cbModelParam._m0[11u].y, _2262 * cbModelParam._m0[11u].x))), _1696);
            frontier_phi_16_38_ladder = _2409.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2409.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2409.x * cbModelParam._m0[1u].y;
        }
        _1776 = frontier_phi_16_38_ladder_2;
        _1778 = frontier_phi_16_38_ladder_1;
        _1780 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1764 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_855, _856, _857), _1696);
        _1776 = _1764.x * cbModelParam._m0[1u].y;
        _1778 = _1764.y * cbModelParam._m0[1u].y;
        _1780 = _1764.z * cbModelParam._m0[1u].y;
    }
    float _1784 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _688);
    float _1785 = isnan(_1784) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1784 : min(cbModelParam._m0[25u].w, _1784));
    float _1876;
    float _1878;
    float _1880;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1840 = fma(_916, cbModelParam._m0[21u].z, fma(_912, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _908)) + cbModelParam._m0[21u].w;
        float _1844 = fma(_916, cbModelParam._m0[22u].z, fma(_912, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _908)) + cbModelParam._m0[22u].w;
        float _1848 = fma(_916, cbModelParam._m0[23u].z, fma(_912, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _908)) + cbModelParam._m0[23u].w;
        float _1851 = fma(_857, cbModelParam._m0[21u].z, fma(_856, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _855));
        float _1854 = fma(_857, cbModelParam._m0[22u].z, fma(_856, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _855));
        float _1857 = fma(_857, cbModelParam._m0[23u].z, fma(_856, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _855));
        float _1964;
        if (_1851 > 0.0)
        {
            _1964 = abs((1.0 - _1840) / _1851);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1851 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1840 + 1.0) / _1851);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1964 = frontier_phi_28_24_ladder;
        }
        float _2282;
        if (_1854 > 0.0)
        {
            _2282 = abs((1.0 - _1844) / _1854);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1854 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1844 + 1.0) / _1854);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2282 = frontier_phi_40_35_ladder;
        }
        float _2609;
        if (_1857 > 0.0)
        {
            _2609 = abs((1.0 - _1848) / _1857);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1857 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1848 + 1.0) / _1857);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2609 = frontier_phi_50_47_ladder;
        }
        float _2611 = isnan(_2282) ? _1964 : (isnan(_1964) ? _2282 : min(_1964, _2282));
        float _2612 = isnan(_2609) ? _2611 : (isnan(_2611) ? _2609 : min(_2611, _2609));
        float _2616 = (_2612 * _1851) + _1840;
        float _2617 = (_2612 * _1854) + _1844;
        float _2618 = (_2612 * _1857) + _1848;
        float _2619 = _2612 * 9.9999997473787516355514526367188e-05;
        float _2620 = (-1.0) - _2619;
        float _2622 = _2619 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2618 > _2622) || ((_2618 < _2620) || ((_2617 > _2622) || ((_2617 < _2620) || ((_2616 < _2620) || (_2616 > _2622))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2736 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2618, cbModelParam._m0[17u].z, fma(_2617, cbModelParam._m0[17u].y, _2616 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2618, cbModelParam._m0[18u].z, fma(_2617, cbModelParam._m0[18u].y, _2616 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2618, cbModelParam._m0[19u].z, fma(_2617, cbModelParam._m0[19u].y, _2616 * cbModelParam._m0[19u].x))), _1785);
            frontier_phi_25_50_ladder = _2736.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2736.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2736.x * cbModelParam._m0[1u].z;
        }
        _1876 = frontier_phi_25_50_ladder_2;
        _1878 = frontier_phi_25_50_ladder_1;
        _1880 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1860 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_855, _856, _857), _1785);
        _1876 = _1860.x * cbModelParam._m0[1u].z;
        _1878 = _1860.y * cbModelParam._m0[1u].z;
        _1880 = _1860.z * cbModelParam._m0[1u].z;
    }
    float _1892 = ((((1.0 - _876) * ((_863 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_876 * _863)) * _847;
    float _1893 = _1892 * ((cbModelParam._m0[1u].w * (_1876 - _1776)) + _1776);
    float _1894 = _1892 * ((cbModelParam._m0[1u].w * (_1878 - _1778)) + _1778);
    float _1895 = _1892 * ((cbModelParam._m0[1u].w * (_1880 - _1780)) + _1780);
    float _1898 = fma(_1895, cbSceneParam._m0[89u].z, fma(_1894, cbSceneParam._m0[89u].y, _1893 * cbSceneParam._m0[89u].x));
    float _1901 = fma(_1895, cbSceneParam._m0[90u].z, fma(_1894, cbSceneParam._m0[90u].y, _1893 * cbSceneParam._m0[90u].x));
    float _1904 = fma(_1895, cbSceneParam._m0[91u].z, fma(_1894, cbSceneParam._m0[91u].y, _1893 * cbSceneParam._m0[91u].x));
    float _1938 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1942 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1946 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1950 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1951 = _1938 / _1950;
    float _1952 = _1942 / _1950;
    float _1953 = _1946 / _1950;
    float _2100;
    float _2101;
    float _2102;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1980 = ((uint(_1953 > cbSceneParam._m0[59u].y) + uint(_1953 > cbSceneParam._m0[59u].x)) + uint(_1953 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1981 = _1980 + 43u;
        uint _1989 = _1980 + 44u;
        uint _1997 = _1980 + 45u;
        uint _2005 = _1980 + 46u;
        float _2016 = fma(_1950, cbSceneParam._m0[_1981].w, fma(_1946, cbSceneParam._m0[_1981].z, fma(_1942, cbSceneParam._m0[_1981].y, _1938 * cbSceneParam._m0[_1981].x)));
        float _2020 = fma(_1950, cbSceneParam._m0[_1989].w, fma(_1946, cbSceneParam._m0[_1989].z, fma(_1942, cbSceneParam._m0[_1989].y, _1938 * cbSceneParam._m0[_1989].x)));
        float _2028 = fma(_1950, cbSceneParam._m0[_2005].w, fma(_1946, cbSceneParam._m0[_2005].z, fma(_1942, cbSceneParam._m0[_2005].y, _1938 * cbSceneParam._m0[_2005].x)));
        float _2033 = cbSceneParam._m0[33u].z * _2028;
        float _2035 = cbSceneParam._m0[33u].w * _2028;
        float _2038 = fma(_1950, cbSceneParam._m0[_1997].w, fma(_1946, cbSceneParam._m0[_1997].z, fma(_1942, cbSceneParam._m0[_1997].y, _1938 * cbSceneParam._m0[_1997].x))) / _2028;
        float _2086 = (cbSceneParam._m0[33u].x - sqrt(((_1952 * _1952) + (_1951 * _1951)) + (_1953 * _1953))) * cbSceneParam._m0[33u].y;
        float _4428 = isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0));
        float _2093 = (isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2033 + _2016) / _2028, (_2035 + _2020) / _2028), _2038), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2035 + _2016) / _2028, (_2020 - _2033) / _2028), _2038), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2016 - _2033) / _2028, (_2020 - _2035) / _2028), _2038), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2016 - _2035) / _2028, (_2033 + _2020) / _2028), _2038), 0.0)).x), vec4(0.25)));
        _2100 = 1.0 - (_2093 * cbSceneParam._m0[34u].x);
        _2101 = 1.0 - (_2093 * cbSceneParam._m0[34u].y);
        _2102 = 1.0 - (_2093 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2100 = 1.0;
        _2101 = 1.0;
        _2102 = 1.0;
    }
    float _2166;
    float _2168;
    float _2170;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2154 = fma(_1950, cbSceneParam._m0[63u].w, fma(_1946, cbSceneParam._m0[63u].z, fma(_1942, cbSceneParam._m0[63u].y, _1938 * cbSceneParam._m0[63u].x)));
        float _2155 = fma(_1950, cbSceneParam._m0[60u].w, fma(_1946, cbSceneParam._m0[60u].z, fma(_1942, cbSceneParam._m0[60u].y, _1938 * cbSceneParam._m0[60u].x))) / _2154;
        float _2156 = fma(_1950, cbSceneParam._m0[61u].w, fma(_1946, cbSceneParam._m0[61u].z, fma(_1942, cbSceneParam._m0[61u].y, _1938 * cbSceneParam._m0[61u].x))) / _2154;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2155 >= cbSceneParam._m0[64u].x) && (_2156 >= cbSceneParam._m0[64u].y)) && (_2155 <= cbSceneParam._m0[64u].z)) && (_2156 <= cbSceneParam._m0[64u].w))
        {
            float _2295 = fma(_1950, cbSceneParam._m0[62u].w, fma(_1946, cbSceneParam._m0[62u].z, fma(_1942, cbSceneParam._m0[62u].y, _1938 * cbSceneParam._m0[62u].x))) / _2154;
            float _2299 = isnan(cbSceneParam._m0[41u].w) ? _2295 : (isnan(_2295) ? cbSceneParam._m0[41u].w : max(_2295, cbSceneParam._m0[41u].w));
            float _2342 = (cbSceneParam._m0[33u].x - sqrt(((_1952 * _1952) + (_1951 * _1951)) + (_1953 * _1953))) * cbSceneParam._m0[33u].y;
            float _4444 = isnan(0.0) ? _2342 : (isnan(_2342) ? 0.0 : max(_2342, 0.0));
            float _2349 = (isnan(1.0) ? _4444 : (isnan(_4444) ? 1.0 : min(_4444, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2155, cbSceneParam._m0[33u].w + _2156), _2299), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2155, _2156 - cbSceneParam._m0[33u].z), _2299), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2155 - cbSceneParam._m0[33u].z, _2156 - cbSceneParam._m0[33u].w), _2299), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2155 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2156), _2299), 0.0)).x), vec4(0.25)));
            float _2353 = 1.0 - (_2349 * cbSceneParam._m0[34u].x);
            float _2354 = 1.0 - (_2349 * cbSceneParam._m0[34u].y);
            float _2355 = 1.0 - (_2349 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2355) ? _2102 : (isnan(_2102) ? _2355 : min(_2102, _2355));
            frontier_phi_37_36_ladder_1 = isnan(_2354) ? _2101 : (isnan(_2101) ? _2354 : min(_2101, _2354));
            frontier_phi_37_36_ladder_2 = isnan(_2353) ? _2100 : (isnan(_2100) ? _2353 : min(_2100, _2353));
        }
        else
        {
            frontier_phi_37_36_ladder = _2102;
            frontier_phi_37_36_ladder_1 = _2101;
            frontier_phi_37_36_ladder_2 = _2100;
        }
        _2166 = frontier_phi_37_36_ladder_2;
        _2168 = frontier_phi_37_36_ladder_1;
        _2170 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2166 = _2100;
        _2168 = _2101;
        _2170 = _2102;
    }
    uvec4 _2175 = floatBitsToUint(cbInstanceData._m0[_822 + 5u]);
    uint _2177 = _2175.x * 14u;
    uint _2178 = _2177 + 13u;
    float _2185 = _847 + (-1.0);
    float _2190 = (cbLight._m0[_2178].x * _2185) + 1.0;
    float _2191 = (cbLight._m0[_2178].y * _2185) + 1.0;
    float _2192 = (cbLight._m0[_2178].z * _2185) + 1.0;
    float _2193 = (cbLight._m0[_2178].w * _2185) + 1.0;
    uint _2194 = _2177 + 5u;
    float _2200 = isnan(1.0) ? _2191 : (isnan(_2191) ? 1.0 : min(_2191, 1.0));
    uint _2204 = _2177 + 4u;
    float _2214 = isnan(1.0) ? _2190 : (isnan(_2190) ? 1.0 : min(_2190, 1.0));
    uint _2218 = _2177 | 1u;
    float _2229 = dot(vec3(cbLight._m0[_2177].xyz), vec3(_685, _686, _687));
    float _2232 = dot(vec3(cbLight._m0[_2218].xyz), vec3(_685, _686, _687));
    float _4480 = isnan(0.0) ? _2229 : (isnan(_2229) ? 0.0 : max(_2229, 0.0));
    float _4491 = isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0));
    float _2237 = (isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0))) * 0.3183098733425140380859375;
    float _2239 = (isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0))) * 0.3183098733425140380859375;
    float _2246 = ((cbLight._m0[_2194].x * _2200) * _2239) + (((cbLight._m0[_2204].x * _2166) * _2214) * _2237);
    float _2247 = ((_2200 * cbLight._m0[_2194].y) * _2239) + (((cbLight._m0[_2204].y * _2168) * _2214) * _2237);
    float _2248 = ((_2200 * cbLight._m0[_2194].z) * _2239) + (((cbLight._m0[_2204].z * _2170) * _2214) * _2237);
    uvec4 _2252 = floatBitsToUint(cbLight._m0[_2177 + 12u]);
    bool _2254 = _2252.x == 0u;
    float _2356;
    float _2358;
    float _2360;
    if (_2254)
    {
        _2356 = _2246;
        _2358 = _2247;
        _2360 = _2248;
    }
    else
    {
        uint _2364 = _2177 + 6u;
        float _2380 = (dot(vec3(cbLight._m0[_2177 + 2u].xyz), vec3(_685, _686, _687)) * 0.5) + 0.5;
        float _2381 = _2380 * _2380;
        float _4502 = isnan(0.0) ? _2381 : (isnan(_2381) ? 0.0 : max(_2381, 0.0));
        float _2382 = isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0));
        float _2383 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
        _2356 = (((cbLight._m0[_2364].x * 0.3183098733425140380859375) * _2382) * _2383) + _2246;
        _2358 = (((cbLight._m0[_2364].y * 0.3183098733425140380859375) * _2382) * _2383) + _2247;
        _2360 = (((cbLight._m0[_2364].z * 0.3183098733425140380859375) * _2382) * _2383) + _2248;
    }
    bool _2363 = _2252.y == 0u;
    float _2418;
    float _2420;
    float _2422;
    if (_2363)
    {
        _2418 = _2356;
        _2420 = _2358;
        _2422 = _2360;
    }
    else
    {
        uint _2580 = _2177 + 7u;
        float _2596 = (dot(vec3(cbLight._m0[_2177 + 3u].xyz), vec3(_685, _686, _687)) * 0.5) + 0.5;
        float _2597 = _2596 * _2596;
        float _4518 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
        float _2598 = isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0));
        float _2599 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
        _2418 = (((cbLight._m0[_2580].x * 0.3183098733425140380859375) * _2598) * _2599) + _2356;
        _2420 = (((cbLight._m0[_2580].y * 0.3183098733425140380859375) * _2598) * _2599) + _2358;
        _2422 = (((cbLight._m0[_2580].z * 0.3183098733425140380859375) * _2598) * _2599) + _2360;
    }
    uint _2425 = _2177 + 8u;
    float _2438 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2177].w)) * _688) * 0.949999988079071044921875);
    float _2439 = _2438 * _2438;
    float _2440 = cbLight._m0[_2177].x + _764;
    float _2441 = cbLight._m0[_2177].y + _765;
    float _2442 = cbLight._m0[_2177].z + _766;
    float _2446 = inversesqrt(dot(vec3(_2440, _2441, _2442), vec3(_2440, _2441, _2442)));
    float _2447 = _2446 * _2440;
    float _2448 = _2446 * _2441;
    float _2449 = _2446 * _2442;
    float _2450 = dot(vec3(_685, _686, _687), vec3(cbLight._m0[_2177].xyz));
    float _4534 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
    float _2453 = isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0));
    float _4545 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _2454 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
    float _2455 = dot(vec3(_685, _686, _687), vec3(_2447, _2448, _2449));
    float _4556 = isnan(0.0) ? _2455 : (isnan(_2455) ? 0.0 : max(_2455, 0.0));
    float _2458 = isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0));
    float _2459 = dot(vec3(cbLight._m0[_2177].xyz), vec3(_2447, _2448, _2449));
    float _4567 = isnan(0.0) ? _2459 : (isnan(_2459) ? 0.0 : max(_2459, 0.0));
    float _2463 = _2439 * _2439;
    float _2467 = ((_2458 * _2458) * (_2463 + (-1.0))) + 1.0;
    float _2478 = (exp2(log2(1.0 - (isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2479 = 1.0 - _2439;
    float _2490 = (0.5 / (((_2454 * ((_2453 * _2479) + _2439)) + 9.9999999392252902907785028219223e-09) + (((_2454 * _2479) + _2439) * _2453))) * _2453;
    float _4578 = isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : max(_2490, 0.0));
    float _2492 = (isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0))) * (_2463 / ((_2467 * _2467) * 3.141590118408203125));
    uint _2506 = _2177 + 9u;
    float _2517 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2218].w)) * _688) * 0.949999988079071044921875);
    float _2518 = _2517 * _2517;
    float _2519 = cbLight._m0[_2218].x + _764;
    float _2520 = cbLight._m0[_2218].y + _765;
    float _2521 = cbLight._m0[_2218].z + _766;
    float _2525 = inversesqrt(dot(vec3(_2519, _2520, _2521), vec3(_2519, _2520, _2521)));
    float _2526 = _2525 * _2519;
    float _2527 = _2525 * _2520;
    float _2528 = _2525 * _2521;
    float _2529 = dot(vec3(_685, _686, _687), vec3(cbLight._m0[_2218].xyz));
    float _4589 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0));
    float _2532 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
    float _2533 = dot(vec3(_685, _686, _687), vec3(_2526, _2527, _2528));
    float _4600 = isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0));
    float _2536 = isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0));
    float _2537 = dot(vec3(cbLight._m0[_2218].xyz), vec3(_2526, _2527, _2528));
    float _4611 = isnan(0.0) ? _2537 : (isnan(_2537) ? 0.0 : max(_2537, 0.0));
    float _2541 = _2518 * _2518;
    float _2545 = ((_2536 * _2536) * (_2541 + (-1.0))) + 1.0;
    float _2554 = (exp2(log2(1.0 - (isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2555 = 1.0 - _2518;
    float _2565 = (0.5 / (((_2454 * ((_2532 * _2555) + _2518)) + 9.9999999392252902907785028219223e-09) + (((_2454 * _2555) + _2518) * _2532))) * _2532;
    float _4622 = isnan(0.0) ? _2565 : (isnan(_2565) ? 0.0 : max(_2565, 0.0));
    float _2567 = (isnan(1.0) ? _4622 : (isnan(_4622) ? 1.0 : min(_4622, 1.0))) * (_2541 / ((_2545 * _2545) * 3.141590118408203125));
    float _2577 = (((_2554 * cbLight._m0[_2506].x) * _2567) * _2200) + ((((cbLight._m0[_2425].x * _2166) * _2478) * _2492) * _2214);
    float _2578 = (((_2554 * cbLight._m0[_2506].y) * _2567) * _2200) + ((((cbLight._m0[_2425].y * _2168) * _2478) * _2492) * _2214);
    float _2579 = (((_2554 * cbLight._m0[_2506].z) * _2567) * _2200) + ((((cbLight._m0[_2425].z * _2170) * _2478) * _2492) * _2214);
    float _2635;
    float _2637;
    float _2639;
    if (_2254)
    {
        _2635 = _2577;
        _2637 = _2578;
        _2639 = _2579;
    }
    else
    {
        uint _2641 = _2177 + 2u;
        uint _2645 = _2177 + 10u;
        float _2659 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2641].w)) * _688) * 0.949999988079071044921875);
        float _2660 = _2659 * _2659;
        float _2661 = cbLight._m0[_2641].x + _764;
        float _2662 = cbLight._m0[_2641].y + _765;
        float _2663 = cbLight._m0[_2641].z + _766;
        float _2667 = inversesqrt(dot(vec3(_2661, _2662, _2663), vec3(_2661, _2662, _2663)));
        float _2668 = _2667 * _2661;
        float _2669 = _2667 * _2662;
        float _2670 = _2667 * _2663;
        float _2671 = dot(vec3(_685, _686, _687), vec3(cbLight._m0[_2641].xyz));
        float _4633 = isnan(0.0) ? _2671 : (isnan(_2671) ? 0.0 : max(_2671, 0.0));
        float _2674 = isnan(1.0) ? _4633 : (isnan(_4633) ? 1.0 : min(_4633, 1.0));
        float _2675 = dot(vec3(_685, _686, _687), vec3(_2668, _2669, _2670));
        float _4644 = isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : max(_2675, 0.0));
        float _2678 = isnan(1.0) ? _4644 : (isnan(_4644) ? 1.0 : min(_4644, 1.0));
        float _2679 = dot(vec3(cbLight._m0[_2641].xyz), vec3(_2668, _2669, _2670));
        float _4655 = isnan(0.0) ? _2679 : (isnan(_2679) ? 0.0 : max(_2679, 0.0));
        float _2683 = _2660 * _2660;
        float _2687 = ((_2678 * _2678) * (_2683 + (-1.0))) + 1.0;
        float _2696 = (exp2(log2(1.0 - (isnan(1.0) ? _4655 : (isnan(_4655) ? 1.0 : min(_4655, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2697 = 1.0 - _2660;
        float _2707 = (0.5 / (((_2454 * ((_2674 * _2697) + _2660)) + 9.9999999392252902907785028219223e-09) + (((_2454 * _2697) + _2660) * _2674))) * _2674;
        float _4666 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
        float _2709 = (isnan(1.0) ? _4666 : (isnan(_4666) ? 1.0 : min(_4666, 1.0))) * (_2683 / ((_2687 * _2687) * 3.141590118408203125));
        float _2710 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
        _2635 = (((_2696 * cbLight._m0[_2645].x) * _2709) * _2710) + _2577;
        _2637 = (((_2696 * cbLight._m0[_2645].y) * _2709) * _2710) + _2578;
        _2639 = (((_2696 * cbLight._m0[_2645].z) * _2709) * _2710) + _2579;
    }
    float _2741;
    float _2743;
    float _2745;
    if (_2363)
    {
        _2741 = _2635;
        _2743 = _2637;
        _2745 = _2639;
    }
    else
    {
        uint _2752 = _2177 + 3u;
        uint _2756 = _2177 + 11u;
        float _2770 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2752].w)) * _688) * 0.949999988079071044921875);
        float _2771 = _2770 * _2770;
        float _2772 = cbLight._m0[_2752].x + _764;
        float _2773 = cbLight._m0[_2752].y + _765;
        float _2774 = cbLight._m0[_2752].z + _766;
        float _2778 = inversesqrt(dot(vec3(_2772, _2773, _2774), vec3(_2772, _2773, _2774)));
        float _2779 = _2778 * _2772;
        float _2780 = _2778 * _2773;
        float _2781 = _2778 * _2774;
        float _2782 = dot(vec3(_685, _686, _687), vec3(cbLight._m0[_2752].xyz));
        float _4682 = isnan(0.0) ? _2782 : (isnan(_2782) ? 0.0 : max(_2782, 0.0));
        float _2785 = isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0));
        float _2786 = dot(vec3(_685, _686, _687), vec3(_2779, _2780, _2781));
        float _4693 = isnan(0.0) ? _2786 : (isnan(_2786) ? 0.0 : max(_2786, 0.0));
        float _2789 = isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0));
        float _2790 = dot(vec3(cbLight._m0[_2752].xyz), vec3(_2779, _2780, _2781));
        float _4704 = isnan(0.0) ? _2790 : (isnan(_2790) ? 0.0 : max(_2790, 0.0));
        float _2794 = _2771 * _2771;
        float _2798 = ((_2789 * _2789) * (_2794 + (-1.0))) + 1.0;
        float _2807 = (exp2(log2(1.0 - (isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2808 = 1.0 - _2771;
        float _2818 = (0.5 / (((_2454 * ((_2785 * _2808) + _2771)) + 9.9999999392252902907785028219223e-09) + (((_2454 * _2808) + _2771) * _2785))) * _2785;
        float _4715 = isnan(0.0) ? _2818 : (isnan(_2818) ? 0.0 : max(_2818, 0.0));
        float _2820 = (isnan(1.0) ? _4715 : (isnan(_4715) ? 1.0 : min(_4715, 1.0))) * (_2794 / ((_2798 * _2798) * 3.141590118408203125));
        float _2821 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
        _2741 = (((_2807 * cbLight._m0[_2756].x) * _2820) * _2821) + _2635;
        _2743 = (((_2807 * cbLight._m0[_2756].y) * _2820) * _2821) + _2637;
        _2745 = (((_2807 * cbLight._m0[_2756].z) * _2820) * _2821) + _2639;
    }
    float _2887;
    float _2889;
    float _2891;
    float _2893;
    float _2895;
    float _2897;
    if (_2175.y == 0u)
    {
        uvec4 _2842 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2843 = _2842.x;
        uint _2854 = uint((float(_2842.y) * floor(float(uint(cbSceneParam._m0[85u].y * _785) / _2843))) + floor(float(uint(cbSceneParam._m0[85u].x * _784) / _2843)));
        float _2864 = (log2(_1953 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2865 = isnan(0.0) ? _2864 : (isnan(_2864) ? 0.0 : max(_2864, 0.0));
        uint _2868 = uint(isnan(14.0) ? _2865 : (isnan(_2865) ? 14.0 : min(_2865, 14.0)));
        uvec4 _2873 = texelFetch(g_lightClusterGridBuffer, int(((_2868 << 2u) + (_2854 << 6u)) >> 2u));
        uint _2874 = _2873.x;
        uint _2875 = _2842.z;
        float _2954;
        float _2956;
        float _2958;
        float _2960;
        float _2962;
        float _2964;
        if (((((1u << ((_2875 >> 4u) & 15u)) + 4294967295u) & _2874) == 0u) || ((_2875 & 240u) == 0u))
        {
            _2954 = 0.0;
            _2956 = 0.0;
            _2958 = 0.0;
            _2960 = 0.0;
            _2962 = 0.0;
            _2964 = 0.0;
        }
        else
        {
            float _2955;
            float _2957;
            float _2959;
            float _2961;
            float _2963;
            float _2965;
            float _3107 = 0.0;
            float _3108 = 0.0;
            float _3109 = 0.0;
            float _3110 = 0.0;
            float _3111 = 0.0;
            float _3112 = 0.0;
            uint _3113 = 0u;
            uint _3122;
            bool _3123;
            for (;;)
            {
                _3122 = texelFetch(g_lightClassification, int((((_2868 << 5u) + (_2854 << 9u)) + (_3113 << 2u)) >> 2u)).x;
                _3123 = _3122 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3123)
                {
                    frontier_phi_71_pred = _3112;
                    frontier_phi_71_pred_1 = _3111;
                    frontier_phi_71_pred_2 = _3110;
                    frontier_phi_71_pred_3 = _3109;
                    frontier_phi_71_pred_4 = _3108;
                    frontier_phi_71_pred_5 = _3107;
                }
                else
                {
                    float _3252;
                    float _3253;
                    float _3254;
                    float _3255;
                    float _3256;
                    float _3257;
                    uint _3258;
                    _3252 = _3107;
                    _3253 = _3108;
                    _3254 = _3109;
                    _3255 = _3110;
                    _3256 = _3111;
                    _3257 = _3112;
                    _3258 = _3122;
                    float _3179;
                    float _3180;
                    float _3181;
                    float _3182;
                    float _3183;
                    float _3184;
                    for (;;)
                    {
                        uint _3262 = uint(findLSB(_3258)) + (_3113 << 5u);
                        uint _3259 = (_3258 + 4294967295u) & _3258;
                        uint _3264 = _3262 * 48u;
                        vec4 _3278 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3264)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 3u)).x));
                        uint _3284 = (_3262 * 48u) + 4u;
                        vec4 _3297 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3284)).x, texelFetch(g_PointLightRenderingBuffer, int(_3284 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3284 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3284 + 3u)).x));
                        uint _3303 = (_3262 * 48u) + 8u;
                        vec3 _3314 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3303)).x, texelFetch(g_PointLightRenderingBuffer, int(_3303 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3303 + 2u)).x));
                        float _3318 = _3278.x - _1951;
                        float _3319 = _3278.y - _1952;
                        float _3320 = _3278.z - _1953;
                        float _3321 = dot(vec3(_3318, _3319, _3320), vec3(_3318, _3319, _3320));
                        float _3324 = inversesqrt(_3321);
                        float _3325 = _3324 * _3318;
                        float _3326 = _3324 * _3319;
                        float _3327 = _3324 * _3320;
                        float _3328 = dot(vec3(_803, _806, _809), vec3(_3325, _3326, _3327));
                        float _3333 = 1.0 - (_3321 * _3278.w);
                        float _4741 = isnan(0.0) ? _3333 : (isnan(_3333) ? 0.0 : max(_3333, 0.0));
                        float _3334 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
                        float _3335 = sqrt(_3321) * _3297.w;
                        float _3338 = 1.39999997615814208984375 / (_3335 + 1.39999997615814208984375);
                        float _3339 = _3338 * _3338;
                        float _3342 = ((1.0 - _3339) * _3328) + _3339;
                        float _3345 = _3335 * _3335;
                        float _3349 = ((isnan(0.0) ? _3342 : (isnan(_3342) ? 0.0 : max(_3342, 0.0))) * _3334) / ((_3345 * 0.699999988079071044921875) + 1.0);
                        float _3353 = (-0.0) - _1951;
                        float _3354 = (-0.0) - _1952;
                        float _3355 = (-0.0) - _1953;
                        float _3359 = inversesqrt(dot(vec3(_3353, _3354, _3355), vec3(_3353, _3354, _3355)));
                        float _3360 = _3359 * _3353;
                        float _3361 = _3359 * _3354;
                        float _3362 = _3359 * _3355;
                        float _3369 = exp2(log2(1.0 / ((_3345 * 3.5) + 5.0)) * 0.25);
                        float _3370 = 1.0 - _863;
                        float _3377 = sqrt(1.0 - ((1.0 - (_3370 * _3370)) * (1.0 - (_3369 * _3369))));
                        float _3378 = _3377 * _3377;
                        float _3379 = _3378 * _3378;
                        float _3380 = _3360 + _3325;
                        float _3381 = _3361 + _3326;
                        float _3382 = _3362 + _3327;
                        float _3386 = inversesqrt(dot(vec3(_3380, _3381, _3382), vec3(_3380, _3381, _3382)));
                        float _3390 = dot(vec3(_803, _806, _809), vec3(_3360, _3361, _3362));
                        float _4757 = isnan(0.0) ? _3390 : (isnan(_3390) ? 0.0 : max(_3390, 0.0));
                        float _3393 = isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0));
                        float _3394 = dot(vec3(_803, _806, _809), vec3(_3386 * _3380, _3386 * _3381, _3386 * _3382));
                        float _4768 = isnan(0.0) ? _3394 : (isnan(_3394) ? 0.0 : max(_3394, 0.0));
                        float _3397 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
                        float _3401 = ((_3397 * _3397) * (_3379 + (-1.0))) + 1.0;
                        float _3402 = _3338 * _3378;
                        float _3403 = _3402 * _3402;
                        float _3406 = ((1.0 - _3403) * _3328) + _3403;
                        float _4779 = isnan(0.0) ? _3406 : (isnan(_3406) ? 0.0 : max(_3406, 0.0));
                        float _3407 = isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0));
                        float _3408 = 1.0 - _3378;
                        float _3418 = (0.5 / (((_3407 * ((_3393 * _3408) + _3378)) + 9.9999999392252902907785028219223e-09) + (((_3407 * _3408) + _3378) * _3393))) * _3407;
                        float _4790 = isnan(0.0) ? _3418 : (isnan(_3418) ? 0.0 : max(_3418, 0.0));
                        float _3429 = (((_3379 * 3.1415927410125732421875) * (isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0)))) / ((_3401 * _3401) * ((_3345 * 2.1991131305694580078125) + 3.141590118408203125))) * _3334;
                        _3182 = (_3349 * _3297.x) + _3255;
                        _3183 = (_3349 * _3297.y) + _3256;
                        _3184 = (_3349 * _3297.z) + _3257;
                        _3179 = (_3429 * _3314.x) + _3252;
                        _3180 = (_3429 * _3314.y) + _3253;
                        _3181 = (_3429 * _3314.z) + _3254;
                        if (_3259 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3252 = _3179;
                            _3253 = _3180;
                            _3254 = _3181;
                            _3255 = _3182;
                            _3256 = _3183;
                            _3257 = _3184;
                            _3258 = _3259;
                        }
                    }
                    frontier_phi_71_pred = _3184;
                    frontier_phi_71_pred_1 = _3183;
                    frontier_phi_71_pred_2 = _3182;
                    frontier_phi_71_pred_3 = _3181;
                    frontier_phi_71_pred_4 = _3180;
                    frontier_phi_71_pred_5 = _3179;
                }
                _2965 = frontier_phi_71_pred;
                _2963 = frontier_phi_71_pred_1;
                _2961 = frontier_phi_71_pred_2;
                _2959 = frontier_phi_71_pred_3;
                _2957 = frontier_phi_71_pred_4;
                _2955 = frontier_phi_71_pred_5;
                uint _3114 = _3113 + 1u;
                if (_3114 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3107 = _2955;
                    _3108 = _2957;
                    _3109 = _2959;
                    _3110 = _2961;
                    _3111 = _2963;
                    _3112 = _2965;
                    _3113 = _3114;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2954 = _2955;
            _2956 = _2957;
            _2958 = _2959;
            _2960 = _2961;
            _2962 = _2963;
            _2964 = _2965;
        }
        uvec4 _2968 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2969 = _2968.z;
        uint _2971 = (_2969 >> 8u) & 15u;
        float _3075;
        float _3077;
        float _3079;
        float _3081;
        float _3083;
        float _3085;
        if (((4294967295u << _2971) & _2874) == 0u)
        {
            _3075 = _2954;
            _3077 = _2956;
            _3079 = _2958;
            _3081 = _2960;
            _3083 = _2962;
            _3085 = _2964;
        }
        else
        {
            float _3100 = inversesqrt(dot(vec3(_1951, _1952, _1953), vec3(_1951, _1952, _1953)));
            float _3101 = _3100 * _1951;
            float _3102 = _3100 * _1952;
            float _3103 = _3100 * _1953;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_2971 < ((_2969 >> 12u) & 15u))
            {
                float _3076;
                float _3078;
                float _3080;
                float _3082;
                float _3084;
                float _3086;
                float _3235 = _2954;
                float _3236 = _2956;
                float _3237 = _2958;
                float _3238 = _2960;
                float _3239 = _2962;
                float _3240 = _2964;
                uint _3241 = _2971;
                uint _3250;
                bool _3251;
                for (;;)
                {
                    _3250 = texelFetch(g_lightClassification, int((((_2868 << 5u) + (_2854 << 9u)) + (_3241 << 2u)) >> 2u)).x;
                    _3251 = _3250 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3251)
                    {
                        frontier_phi_82_pred = _3240;
                        frontier_phi_82_pred_1 = _3239;
                        frontier_phi_82_pred_2 = _3238;
                        frontier_phi_82_pred_3 = _3237;
                        frontier_phi_82_pred_4 = _3236;
                        frontier_phi_82_pred_5 = _3235;
                    }
                    else
                    {
                        float _3443;
                        float _3444;
                        float _3445;
                        float _3446;
                        float _3447;
                        float _3448;
                        float _3737;
                        float _3738;
                        float _3739;
                        float _3740;
                        float _3741;
                        float _3742;
                        float _3456 = _3235;
                        float _3457 = _3236;
                        float _3458 = _3237;
                        float _3459 = _3238;
                        float _3460 = _3239;
                        float _3461 = _3240;
                        uint _3462 = _3250;
                        uint _3463;
                        vec4 _3488;
                        float _3489;
                        vec4 _3504;
                        vec3 _3516;
                        vec4 _3531;
                        vec4 _3546;
                        float _3593;
                        bool _3594;
                        for (;;)
                        {
                            uint _3473 = ((_3241 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3462));
                            _3463 = (_3462 + 4294967295u) & _3462;
                            uint _3475 = _3473 * 40u;
                            _3488 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3475)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 3u)).x));
                            _3489 = _3488.w;
                            uint _3491 = (_3473 * 40u) + 4u;
                            _3504 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3491)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 3u)).x));
                            uint _3506 = (_3473 * 40u) + 8u;
                            _3516 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3506)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 2u)).x));
                            uint _3518 = (_3473 * 40u) + 16u;
                            _3531 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3518)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3518 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3518 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3518 + 3u)).x));
                            uint _3533 = (_3473 * 40u) + 20u;
                            _3546 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3533)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 3u)).x));
                            uint _3549 = (_3473 * 40u) + 24u;
                            vec4 _3562 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3549)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3549 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3549 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3549 + 3u)).x));
                            uint _3568 = (_3473 * 40u) + 28u;
                            vec4 _3581 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3568)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3568 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3568 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3568 + 3u)).x));
                            _3593 = fma(_1953, _3581.z, fma(_1952, _3581.y, _3581.x * _1951)) + _3581.w;
                            _3594 = !((fma(_1953, _3562.z, fma(_1952, _3562.y, _3562.x * _1951)) + _3562.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3594)
                            {
                                float _3621 = _3488.x - _1951;
                                float _3622 = _3488.y - _1952;
                                float _3623 = _3488.z - _1953;
                                float _3624 = dot(vec3(_3621, _3622, _3623), vec3(_3621, _3622, _3623));
                                float _3627 = inversesqrt(_3624);
                                float _3628 = _3627 * _3621;
                                float _3629 = _3627 * _3622;
                                float _3630 = _3627 * _3623;
                                float _3634 = 1.0 - (_3624 / (_3489 * _3489));
                                float _4801 = isnan(0.0) ? _3634 : (isnan(_3634) ? 0.0 : max(_3634, 0.0));
                                float _3635 = isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0));
                                float _3639 = sqrt(_3624) * _3504.w;
                                float _3641 = 1.39999997615814208984375 / (_3639 + 1.39999997615814208984375);
                                float _3642 = _3641 * _3641;
                                float _3645 = ((1.0 - _3642) * dot(vec3(_3628, _3629, _3630), vec3(_803, _806, _809))) + _3642;
                                float _3648 = _3639 * _3639;
                                float _3652 = (fma(_1953, _3531.z, fma(_1952, _3531.y, _3531.x * _1951)) + _3531.w) / _3593;
                                float _3653 = (fma(_1953, _3546.z, fma(_1952, _3546.y, _3546.x * _1951)) + _3546.w) / _3593;
                                float _3657 = 1.0 - dot(vec2(_3652, _3653), vec2(_3652, _3653));
                                float _4817 = isnan(0.0) ? _3657 : (isnan(_3657) ? 0.0 : max(_3657, 0.0));
                                float _3658 = isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0));
                                float _3659 = _3658 * (((isnan(0.0) ? _3645 : (isnan(_3645) ? 0.0 : max(_3645, 0.0))) * _3635) / ((_3648 * 0.699999988079071044921875) + 1.0));
                                float _3671 = exp2(log2(1.0 / ((_3648 * 3.5) + 5.0)) * 0.25);
                                float _3672 = 1.0 - _863;
                                float _3679 = sqrt(1.0 - ((1.0 - (_3672 * _3672)) * (1.0 - (_3671 * _3671))));
                                float _3680 = _3679 * _3679;
                                float _3681 = _3680 * _3680;
                                float _3682 = _3628 - _3101;
                                float _3683 = _3629 - _3102;
                                float _3684 = _3630 - _3103;
                                float _3688 = inversesqrt(dot(vec3(_3682, _3683, _3684), vec3(_3682, _3683, _3684)));
                                float _3692 = dot(vec3(_803, _806, _809), vec3((-0.0) - _3101, (-0.0) - _3102, (-0.0) - _3103));
                                float _4828 = isnan(0.0) ? _3692 : (isnan(_3692) ? 0.0 : max(_3692, 0.0));
                                float _3695 = isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0));
                                float _3696 = dot(vec3(_803, _806, _809), vec3(_3688 * _3682, _3688 * _3683, _3688 * _3684));
                                float _4839 = isnan(0.0) ? _3696 : (isnan(_3696) ? 0.0 : max(_3696, 0.0));
                                float _3699 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
                                float _3703 = ((_3699 * _3699) * (_3681 + (-1.0))) + 1.0;
                                float _3704 = _3641 * _3680;
                                float _3705 = _3704 * _3704;
                                float _3711 = ((1.0 - _3705) * dot(vec3(_803, _806, _809), vec3(_3628, _3629, _3630))) + _3705;
                                float _4850 = isnan(0.0) ? _3711 : (isnan(_3711) ? 0.0 : max(_3711, 0.0));
                                float _3712 = isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0));
                                float _3713 = 1.0 - _3680;
                                float _3723 = (0.5 / (((_3712 * ((_3695 * _3713) + _3680)) + 9.9999999392252902907785028219223e-09) + (((_3712 * _3713) + _3680) * _3695))) * _3712;
                                float _4861 = isnan(0.0) ? _3723 : (isnan(_3723) ? 0.0 : max(_3723, 0.0));
                                float _3733 = (_3658 * _3635) * (((_3681 * 3.1415927410125732421875) * (isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0)))) / ((_3703 * _3703) * ((_3648 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3659 * _3504.z;
                                frontier_phi_88_pred_1 = _3659 * _3504.y;
                                frontier_phi_88_pred_2 = _3659 * _3504.x;
                                frontier_phi_88_pred_3 = _3733 * _3516.z;
                                frontier_phi_88_pred_4 = _3733 * _3516.y;
                                frontier_phi_88_pred_5 = _3733 * _3516.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3742 = frontier_phi_88_pred;
                            _3741 = frontier_phi_88_pred_1;
                            _3740 = frontier_phi_88_pred_2;
                            _3739 = frontier_phi_88_pred_3;
                            _3738 = frontier_phi_88_pred_4;
                            _3737 = frontier_phi_88_pred_5;
                            _3446 = _3740 + _3459;
                            _3447 = _3741 + _3460;
                            _3448 = _3742 + _3461;
                            _3443 = _3737 + _3456;
                            _3444 = _3738 + _3457;
                            _3445 = _3739 + _3458;
                            if (_3463 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3456 = _3443;
                                _3457 = _3444;
                                _3458 = _3445;
                                _3459 = _3446;
                                _3460 = _3447;
                                _3461 = _3448;
                                _3462 = _3463;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3448;
                        frontier_phi_82_pred_1 = _3447;
                        frontier_phi_82_pred_2 = _3446;
                        frontier_phi_82_pred_3 = _3445;
                        frontier_phi_82_pred_4 = _3444;
                        frontier_phi_82_pred_5 = _3443;
                    }
                    _3086 = frontier_phi_82_pred;
                    _3084 = frontier_phi_82_pred_1;
                    _3082 = frontier_phi_82_pred_2;
                    _3080 = frontier_phi_82_pred_3;
                    _3078 = frontier_phi_82_pred_4;
                    _3076 = frontier_phi_82_pred_5;
                    uint _3242 = _3241 + 1u;
                    if (_3242 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3235 = _3076;
                        _3236 = _3078;
                        _3237 = _3080;
                        _3238 = _3082;
                        _3239 = _3084;
                        _3240 = _3086;
                        _3241 = _3242;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3082;
                frontier_phi_63_64_ladder_1 = _3086;
                frontier_phi_63_64_ladder_2 = _3084;
                frontier_phi_63_64_ladder_3 = _3080;
                frontier_phi_63_64_ladder_4 = _3078;
                frontier_phi_63_64_ladder_5 = _3076;
            }
            else
            {
                frontier_phi_63_64_ladder = _2960;
                frontier_phi_63_64_ladder_1 = _2964;
                frontier_phi_63_64_ladder_2 = _2962;
                frontier_phi_63_64_ladder_3 = _2958;
                frontier_phi_63_64_ladder_4 = _2956;
                frontier_phi_63_64_ladder_5 = _2954;
            }
            _3075 = frontier_phi_63_64_ladder_5;
            _3077 = frontier_phi_63_64_ladder_4;
            _3079 = frontier_phi_63_64_ladder_3;
            _3081 = frontier_phi_63_64_ladder;
            _3083 = frontier_phi_63_64_ladder_2;
            _3085 = frontier_phi_63_64_ladder_1;
        }
        float _3090 = isnan(1.0) ? _847 : (isnan(_847) ? 1.0 : min(_847, 1.0));
        _2887 = (_3090 * _3081) + _2418;
        _2889 = (_3090 * _3083) + _2420;
        _2891 = (_3090 * _3085) + _2422;
        _2893 = ((_3075 * 0.039999999105930328369140625) * _3090) + _2741;
        _2895 = ((_3077 * 0.039999999105930328369140625) * _3090) + _2743;
        _2897 = ((_3079 * 0.039999999105930328369140625) * _3090) + _2745;
    }
    else
    {
        _2887 = _2418;
        _2889 = _2420;
        _2891 = _2422;
        _2893 = _2741;
        _2895 = _2743;
        _2897 = _2745;
    }
    float _4877 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _4888 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _4899 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
    float _2914 = ((isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0))) * (_2887 + ((isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0))) * _847))) + ((_2893 + ((isnan(0.0) ? _1898 : (isnan(_1898) ? 0.0 : max(_1898, 0.0))) * _1685)) * cbPerFrame._m0[3u].x);
    float _2915 = ((isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0))) * (_2889 + ((isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0))) * _847))) + ((_2895 + ((isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0))) * _1685)) * cbPerFrame._m0[3u].x);
    float _2916 = ((isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0))) * (_2891 + ((isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0))) * _847))) + ((_2897 + ((isnan(0.0) ? _1904 : (isnan(_1904) ? 0.0 : max(_1904, 0.0))) * _1685)) * cbPerFrame._m0[3u].x);
    uint _2917 = _822 + 6u;
    float _2925 = _784 / cbSceneParam._m0[86u].x;
    float _2926 = _785 / cbSceneParam._m0[86u].y;
    vec4 _2940 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2925, _2926, (log2((isnan(cbSceneParam._m0[77u].w) ? _707 : (isnan(_707) ? cbSceneParam._m0[77u].w : min(_707, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2942 = _2940.x;
    float _2943 = _2940.y;
    float _2944 = _2940.z;
    float _2945 = _2940.w;
    float _3017;
    float _3019;
    float _3021;
    float _3023;
    if (_707 > cbSceneParam._m0[78u].w)
    {
        float _2979 = isnan(_707) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _707 : min(cbSceneParam._m0[80u].w, _707));
        float _2980 = _2979 / _707;
        float _2991 = _2980 * _757;
        float _2992 = _758 * _2980;
        float _2993 = (-0.0) - _2992;
        float _2995 = _2980 * _759;
        float _2997 = (cbSceneParam._m0[77u].w * _2993) / _2979;
        float _2998 = _2997 + cbSceneParam._m0[79u].w;
        float _2999 = cbSceneParam._m0[79u].w - _2992;
        float _3005 = sqrt(((_2991 * _2991) + (_2992 * _2992)) + (_2995 * _2995));
        float _3008 = (1.0 - (cbSceneParam._m0[77u].w / _2979)) * _3005;
        float _3013 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3015 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3192;
        if (abs((_2993 - _2997) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3192 = ((((_2998 > 0.0) ? exp2(_3013 * _2998) : (2.0 - exp2(_3015 * _2998))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3008;
        }
        else
        {
            float _3136 = 1.0 / cbSceneParam._m0[80u].x;
            float _3137 = isnan(_2999) ? _2998 : (isnan(_2998) ? _2999 : max(_2998, _2999));
            float _3138 = isnan(_2999) ? _2998 : (isnan(_2998) ? _2999 : min(_2998, _2999));
            float _3147 = isnan(0.0) ? _3137 : (isnan(_3137) ? 0.0 : min(_3137, 0.0));
            float _3148 = isnan(0.0) ? _3138 : (isnan(_3138) ? 0.0 : min(_3138, 0.0));
            _3192 = ((abs(_3005 / _2993) * cbSceneParam._m0[80u].y) * ((((_3147 - _3148) * 2.0) - ((exp2(_3013 * (isnan(0.0) ? _3137 : (isnan(_3137) ? 0.0 : max(_3137, 0.0)))) - exp2(_3013 * (isnan(0.0) ? _3138 : (isnan(_3138) ? 0.0 : max(_3138, 0.0))))) * _3136)) - ((exp2(_3015 * _3147) - exp2(_3015 * _3148)) * _3136))) + (_3008 * cbSceneParam._m0[80u].z);
        }
        vec4 _3194 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2925, _2926, 1.0), 0.0);
        float _3203 = exp2((_3192 * (-1.44269502162933349609375)) * (1.0 - _3194.w));
        float _3204 = log2(_3203);
        float _3220 = log2(_2945);
        _3017 = (exp2(_3220 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3204 * cbSceneParam._m0[78u].x)) * _3194.x) / cbSceneParam._m0[78u].x)) + _2942;
        _3019 = (exp2(_3220 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3204 * cbSceneParam._m0[78u].y)) * _3194.y) / cbSceneParam._m0[78u].y)) + _2943;
        _3021 = (exp2(_3220 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3204 * cbSceneParam._m0[78u].z)) * _3194.z) / cbSceneParam._m0[78u].z)) + _2944;
        _3023 = _3203 * _2945;
    }
    else
    {
        _3017 = _2942;
        _3019 = _2943;
        _3021 = _2944;
        _3023 = _2945;
    }
    bool _3230;
    vec4 _3033;
    vec4 _3055;
    float _3057;
    float _3061;
    float _3062;
    float _3063;
    float _3064;
    bool _3074;
    for (;;)
    {
        _3033 = cbMatDynParam._m0[0u];
        float _3035 = roundEven(_3033.y);
        bool _3036 = _3035 == 3.0;
        float _3037 = log2(_3023);
        float _3044 = exp2(_3037 * cbSceneParam._m0[78u].x) * _2914;
        float _3045 = exp2(_3037 * cbSceneParam._m0[78u].y) * _2915;
        float _3046 = exp2(_3037 * cbSceneParam._m0[78u].z) * _2916;
        float _3053 = _773 + (-0.5);
        _3055 = cbMtdParam._m0[1u];
        _3057 = _3055.y * _3053;
        float _3060 = (_3035 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3061 = _3060 * (_3036 ? _3044 : (_3044 + (cbSceneParam._m0[72u].w * _3017)));
        _3062 = _3060 * (_3036 ? _3045 : (_3045 + (cbSceneParam._m0[72u].w * _3019)));
        _3063 = _3060 * (_3036 ? _3046 : (_3046 + (cbSceneParam._m0[72u].w * _3021)));
        _3064 = _3053 * 0.999000012874603271484375;
        _3074 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3074)
        {
            if ((cbInstanceData._m0[_822 + 7u].x + _3064) < 0.5)
            {
                _3230 = true;
                break;
            }
        }
        uint _3171 = _823 + uint(_3033.w);
        if ((cbInstanceData._m0[_3171].w < 1.0) && ((cbInstanceData._m0[_3171].w + _3064) < 0.5))
        {
            _3230 = true;
            break;
        }
        if ((_3057 + 1.0) < _3055.x)
        {
            _3230 = true;
            break;
        }
        _3230 = false;
        break;
    }
    float _3434;
    if (_3230)
    {
        discard_state = true;
        _3434 = 0.0;
    }
    else
    {
        _3434 = cbInstanceData._m0[_2917].w;
    }
    SV_Target.x = _3061;
    SV_Target.y = _3062;
    SV_Target.z = _3063;
    SV_Target.w = _3434;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2917].w;
    discard_exit();
}


