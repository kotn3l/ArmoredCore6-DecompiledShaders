#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 0, std140) uniform cbPerSceneUBO
{
    vec4 _m0[39];
} cbPerScene;

layout(set = 0, binding = 26) uniform texture2D g_PrevFrameTexture;
layout(set = 0, binding = 27) uniform texture2D g_ConvertedDepthTexture;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    float _78 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _79 = _78 * NORMAL.x;
    float _80 = _78 * NORMAL.y;
    float _81 = _78 * NORMAL.z;
    float _643 = isnan(0.0) ? cbMtdParam._m0[11u].x : (isnan(cbMtdParam._m0[11u].x) ? 0.0 : max(cbMtdParam._m0[11u].x, 0.0));
    float _88 = isnan(1.0) ? _643 : (isnan(_643) ? 1.0 : min(_643, 1.0));
    float _102 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _103 = POSITION_1.x / POSITION_1.w;
    float _104 = POSITION_1.y / POSITION_1.w;
    float _108 = (_103 * 0.5) + 0.5;
    float _109 = 0.5 - (_104 * 0.5);
    float _115;
    float _117;
    float _119;
    float _121;
    if (_88 < cbPerScene._m0[22u].z)
    {
        _115 = 0.0;
        _117 = 0.0;
        _119 = 0.0;
        _121 = 0.0;
    }
    else
    {
        float _127 = 1.0 / _102;
        float frontier_phi_1_2_ladder;
        float frontier_phi_1_2_ladder_1;
        float frontier_phi_1_2_ladder_2;
        float frontier_phi_1_2_ladder_3;
        if (!(cbPerScene._m0[21u].y >= _127))
        {
            float _153 = fma(_81, cbPerScene._m0[8u].z, fma(_80, cbPerScene._m0[8u].y, cbPerScene._m0[8u].x * _79));
            float _156 = fma(_81, cbPerScene._m0[9u].z, fma(_80, cbPerScene._m0[9u].y, cbPerScene._m0[9u].x * _79));
            float _159 = fma(_81, cbPerScene._m0[10u].z, fma(_80, cbPerScene._m0[10u].y, cbPerScene._m0[10u].x * _79));
            float _166 = (_102 * _103) * cbPerScene._m0[28u].x;
            float _168 = (_102 * _104) * cbPerScene._m0[28u].y;
            float _172 = inversesqrt(dot(vec3(_166, _168, _102), vec3(_166, _168, _102)));
            float _173 = _166 * _172;
            float _174 = _168 * _172;
            float _175 = _172 * _102;
            float _179 = dot(vec3(_173, _174, _175), vec3(_153, _156, _159)) * 2.0;
            float _184 = _173 - (_179 * _153);
            float _185 = _174 - (_179 * _156);
            float _186 = _175 - (_179 * _159);
            float _190 = inversesqrt(dot(vec3(_184, _185, _186), vec3(_184, _185, _186)));
            float _193 = _186 * _190;
            float frontier_phi_1_2_ladder_3_ladder;
            float frontier_phi_1_2_ladder_3_ladder_1;
            float frontier_phi_1_2_ladder_3_ladder_2;
            float frontier_phi_1_2_ladder_3_ladder_3;
            if (_193 < cbPerScene._m0[16u].x)
            {
                frontier_phi_1_2_ladder_3_ladder = 0.0;
                frontier_phi_1_2_ladder_3_ladder_1 = 0.0;
                frontier_phi_1_2_ladder_3_ladder_2 = 0.0;
                frontier_phi_1_2_ladder_3_ladder_3 = 0.0;
            }
            else
            {
                float _206 = abs(dot(vec3((-0.0) - _173, (-0.0) - _174, (-0.0) - _175), vec3(_153, _156, _159)));
                float _654 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
                float _217 = (((_88 * _88) * 0.959999978542327880859375) * exp2(log2(1.0 - (isnan(1.0) ? _654 : (isnan(_654) ? 1.0 : min(_654, 1.0)))) * 5.0)) + 0.039999999105930328369140625;
                float _226 = (cbPerScene._m0[29u].x * (1.0 - _88)) + cbPerScene._m0[29u].y;
                float _665 = isnan(0.0) ? _226 : (isnan(_226) ? 0.0 : max(_226, 0.0));
                float _235 = ((cbPerScene._m0[23u].w - cbPerScene._m0[23u].z) * (isnan(1.0) ? _665 : (isnan(_665) ? 1.0 : min(_665, 1.0)))) + cbPerScene._m0[23u].z;
                float frontier_phi_1_2_ladder_3_ladder_4_ladder;
                float frontier_phi_1_2_ladder_3_ladder_4_ladder_1;
                float frontier_phi_1_2_ladder_3_ladder_4_ladder_2;
                float frontier_phi_1_2_ladder_3_ladder_4_ladder_3;
                if (_217 < cbPerScene._m0[22u].x)
                {
                    frontier_phi_1_2_ladder_3_ladder_4_ladder = 0.0;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_1 = 0.0;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_2 = 0.0;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_3 = 0.0;
                }
                else
                {
                    float _238 = _193 - cbPerScene._m0[16u].x;
                    float _676 = isnan(0.0) ? _238 : (isnan(_238) ? 0.0 : max(_238, 0.0));
                    float _239 = isnan(1.0) ? _676 : (isnan(_676) ? 1.0 : min(_676, 1.0));
                    float _240 = _239 * _239;
                    float _242 = (_217 - cbPerScene._m0[22u].x) * 10.0;
                    float _687 = isnan(0.0) ? _242 : (isnan(_242) ? 0.0 : max(_242, 0.0));
                    float _244 = isnan(1.0) ? _687 : (isnan(_687) ? 1.0 : min(_687, 1.0));
                    float _245 = isnan(_244) ? _240 : (isnan(_240) ? _244 : min(_240, _244));
                    float _249 = (cbPerScene._m0[21u].x - _102) * cbPerScene._m0[21u].z;
                    float _703 = isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0));
                    float _250 = isnan(1.0) ? _703 : (isnan(_703) ? 1.0 : min(_703, 1.0));
                    float _251 = isnan(_250) ? _245 : (isnan(_245) ? _250 : min(_245, _250));
                    float _252 = (_184 * _190) + _166;
                    float _253 = (_185 * _190) + _168;
                    float _254 = _193 + _102;
                    float _287 = fma(_254, cbPerScene._m0[7u].z, fma(_253, cbPerScene._m0[7u].y, cbPerScene._m0[7u].x * _252)) + cbPerScene._m0[7u].w;
                    float _291 = ((fma(_254, cbPerScene._m0[4u].z, fma(_253, cbPerScene._m0[4u].y, cbPerScene._m0[4u].x * _252)) + cbPerScene._m0[4u].w) / _287) - _108;
                    float _292 = ((fma(_254, cbPerScene._m0[5u].z, fma(_253, cbPerScene._m0[5u].y, cbPerScene._m0[5u].x * _252)) + cbPerScene._m0[5u].w) / _287) - _109;
                    float _299 = cbPerScene._m0[18u].x * _291;
                    float _300 = cbPerScene._m0[18u].y * _292;
                    float _305 = sqrt((_299 * _299) + (_300 * _300)) + 9.9999997473787516355514526367188e-06;
                    float _310 = (_291 / _305) * _235;
                    float _311 = (_292 / _305) * _235;
                    float _312 = (((1.0 / _254) - _127) / _305) * _235;
                    float _340 = abs(float(_310 > 0.0) - _108) / (abs(_310) + 1.0000000116860974230803549289703e-07);
                    float _341 = abs(float(_311 > 0.0) - _109) / (abs(_311) + 1.0000000116860974230803549289703e-07);
                    float _343 = (abs(((_312 > 0.0) ? cbPerScene._m0[20u].x : cbPerScene._m0[20u].y) - _127) / (abs(_312) + 1.0000000116860974230803549289703e-07)) + 2.0;
                    float _344 = isnan(_341) ? _340 : (isnan(_340) ? _341 : min(_340, _341));
                    float _345 = isnan(_343) ? _344 : (isnan(_344) ? _343 : min(_344, _343));
                    uint _348 = uint(int(isnan(cbPerScene._m0[23u].y) ? _345 : (isnan(_345) ? cbPerScene._m0[23u].y : min(_345, cbPerScene._m0[23u].y))));
                    float _122;
                    float _353;
                    float _355;
                    float _357;
                    if (int(_348) > int(0u))
                    {
                        float _350 = _312 + _127;
                        float _351 = _311 + _109;
                        float _352 = _310 + _108;
                        float _354;
                        float _356;
                        float _358;
                        float _359;
                        uint _370;
                        float _372;
                        float _374;
                        float _376;
                        float _378;
                        float _380;
                        float _382;
                        float _384;
                        uint _386;
                        float _388;
                        float _390;
                        float _392;
                        float _365 = 0.0;
                        float _366 = 0.0;
                        float _367 = 0.0;
                        float _368 = 0.0;
                        uint _369 = 0u;
                        float _371 = _127;
                        float _373 = _352;
                        float _375 = _351;
                        float _377 = _350;
                        float _379 = _108;
                        float _381 = _109;
                        float _383 = _127;
                        uint _385 = 1u;
                        float _387 = 0.0;
                        float _389 = 0.0;
                        float _391 = 0.0;
                        float _405;
                        float _412;
                        float _413;
                        float _414;
                        float _415;
                        float _416;
                        float _417;
                        uint _418;
                        float _419;
                        bool _426;
                        for (;;)
                        {
                            _405 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _373, cbSceneParam._m0[86u].y * _375), 0.0).x;
                            bool _411 = _369 == (_348 + 4294967295u);
                            _412 = _411 ? _387 : _373;
                            _413 = _411 ? _389 : _375;
                            _414 = _411 ? _391 : _377;
                            _415 = _411 ? _387 : _379;
                            _416 = _411 ? _389 : _381;
                            _417 = _411 ? _391 : _383;
                            _418 = _411 ? 1u : _385;
                            _419 = _411 ? (-1.0) : (_377 - _405);
                            _426 = (_418 != 0u) && ((_419 <= 0.0) && ((_411 ? (-1.0) : (_405 - (_371 * cbPerScene._m0[19u].y))) < 0.0));
                            float frontier_phi_14_pred;
                            float frontier_phi_14_pred_1;
                            float frontier_phi_14_pred_2;
                            uint frontier_phi_14_pred_3;
                            float frontier_phi_14_pred_4;
                            float frontier_phi_14_pred_5;
                            float frontier_phi_14_pred_6;
                            float frontier_phi_14_pred_7;
                            float frontier_phi_14_pred_8;
                            float frontier_phi_14_pred_9;
                            float frontier_phi_14_pred_10;
                            float frontier_phi_14_pred_11;
                            float frontier_phi_14_pred_12;
                            float frontier_phi_14_pred_13;
                            float frontier_phi_14_pred_14;
                            uint frontier_phi_14_pred_15;
                            if (_426)
                            {
                                uint _436 = uint(int(log2(_235) + 0.999000012874603271484375));
                                float _447;
                                float _449;
                                float _451;
                                float _453;
                                float _455;
                                float _457;
                                float _459;
                                if (int(_436) > int(0u))
                                {
                                    uint _558;
                                    float _560;
                                    float _561;
                                    float _562;
                                    float _563;
                                    float _564;
                                    float _565;
                                    float _566;
                                    _558 = 0u;
                                    _560 = _412;
                                    _561 = _413;
                                    _562 = _414;
                                    _563 = _415;
                                    _564 = _416;
                                    _565 = _417;
                                    _566 = _405;
                                    float _448;
                                    float _450;
                                    float _452;
                                    float _454;
                                    float _456;
                                    float _458;
                                    float _460;
                                    for (;;)
                                    {
                                        float _570 = (_563 + _560) * 0.5;
                                        float _571 = (_564 + _561) * 0.5;
                                        float _572 = (_565 + _562) * 0.5;
                                        vec4 _580 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _570, cbSceneParam._m0[86u].y * _571), 0.0);
                                        float _582 = _580.x;
                                        bool _584 = (_572 - _582) < 0.0;
                                        _448 = _584 ? _570 : _560;
                                        _450 = _584 ? _571 : _561;
                                        _452 = _584 ? _572 : _562;
                                        _454 = _584 ? _563 : _570;
                                        _456 = _584 ? _564 : _571;
                                        _458 = _584 ? _565 : _572;
                                        _460 = _584 ? _582 : _566;
                                        uint _559 = _558 + 1u;
                                        if (_559 == _436)
                                        {
                                            break;
                                        }
                                        else
                                        {
                                            _558 = _559;
                                            _560 = _448;
                                            _561 = _450;
                                            _562 = _452;
                                            _563 = _454;
                                            _564 = _456;
                                            _565 = _458;
                                            _566 = _460;
                                        }
                                    }
                                    _447 = _448;
                                    _449 = _450;
                                    _451 = _452;
                                    _453 = _454;
                                    _455 = _456;
                                    _457 = _458;
                                    _459 = _460;
                                }
                                else
                                {
                                    _447 = _412;
                                    _449 = _413;
                                    _451 = _414;
                                    _453 = _415;
                                    _455 = _416;
                                    _457 = _417;
                                    _459 = _405;
                                }
                                float _469 = cbPerScene._m0[28u].x * ((_447 * 2.0) + (-1.0));
                                float _470 = cbPerScene._m0[28u].y * (1.0 - (_449 * 2.0));
                                float _503 = fma(_459, cbPerScene._m0[27u].w, fma(_470, cbPerScene._m0[27u].y, cbPerScene._m0[27u].x * _469) + cbPerScene._m0[27u].z);
                                float _504 = fma(_459, cbPerScene._m0[24u].w, fma(_470, cbPerScene._m0[24u].y, _469 * cbPerScene._m0[24u].x) + cbPerScene._m0[24u].z) / _503;
                                float _505 = fma(_459, cbPerScene._m0[25u].w, fma(_470, cbPerScene._m0[25u].y, cbPerScene._m0[25u].x * _469) + cbPerScene._m0[25u].z) / _503;
                                vec4 _514 = textureLod(sampler2D(g_PrevFrameTexture, SS_ClampLinear), vec2(cbSceneParam._m0[87u].z * _504, cbSceneParam._m0[87u].w * _505), 0.0);
                                float _519 = isnan(_251) ? 1.0 : (isnan(1.0) ? _251 : min(1.0, _251));
                                float _520 = 0.5 - _504;
                                float _521 = 0.5 - _505;
                                float _522 = _520 * 2.0;
                                float _523 = _521 * 2.0;
                                float _524 = _522 * _522;
                                float _525 = _523 * _523;
                                float _739 = isnan(0.0) ? _524 : (isnan(_524) ? 0.0 : max(_524, 0.0));
                                float _750 = isnan(0.0) ? _525 : (isnan(_525) ? 0.0 : max(_525, 0.0));
                                float _534 = inversesqrt(dot(vec2(_310, _311), vec2(_310, _311)));
                                float _540 = inversesqrt(dot(vec2(_522, _523), vec2(_522, _523)));
                                float _546 = dot(vec2((_520 * (-2.0)) * _540, (_521 * (-2.0)) * _540), vec2(_534 * _310, _534 * _311));
                                float _761 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
                                float _553 = ((1.0 - (isnan(1.0) ? _750 : (isnan(_750) ? 1.0 : min(_750, 1.0)))) * (1.0 - (isnan(1.0) ? _739 : (isnan(_739) ? 1.0 : min(_739, 1.0))))) * (4.0 - ((isnan(1.0) ? _761 : (isnan(_761) ? 1.0 : min(_761, 1.0))) * 2.0));
                                float _772 = isnan(0.0) ? _553 : (isnan(_553) ? 0.0 : max(_553, 0.0));
                                float _554 = isnan(1.0) ? _772 : (isnan(_772) ? 1.0 : min(_772, 1.0));
                                float _555 = _554 * _554;
                                frontier_phi_14_pred = _391;
                                frontier_phi_14_pred_1 = _389;
                                frontier_phi_14_pred_2 = _387;
                                frontier_phi_14_pred_3 = _418;
                                frontier_phi_14_pred_4 = _457;
                                frontier_phi_14_pred_5 = _455;
                                frontier_phi_14_pred_6 = _453;
                                frontier_phi_14_pred_7 = _451;
                                frontier_phi_14_pred_8 = _449;
                                frontier_phi_14_pred_9 = _447;
                                frontier_phi_14_pred_10 = _371;
                                frontier_phi_14_pred_11 = isnan(_555) ? _519 : (isnan(_519) ? _555 : min(_519, _555));
                                frontier_phi_14_pred_12 = _514.z;
                                frontier_phi_14_pred_13 = _514.y;
                                frontier_phi_14_pred_14 = _514.x;
                                frontier_phi_14_pred_15 = _348;
                            }
                            else
                            {
                                bool _438 = _419 > 0.0;
                                frontier_phi_14_pred = _438 ? _414 : _391;
                                frontier_phi_14_pred_1 = _438 ? _413 : _389;
                                frontier_phi_14_pred_2 = _438 ? _412 : _387;
                                frontier_phi_14_pred_3 = uint(_438);
                                frontier_phi_14_pred_4 = _414;
                                frontier_phi_14_pred_5 = _413;
                                frontier_phi_14_pred_6 = _412;
                                frontier_phi_14_pred_7 = _414 + _312;
                                frontier_phi_14_pred_8 = _413 + _311;
                                frontier_phi_14_pred_9 = _412 + _310;
                                frontier_phi_14_pred_10 = _405;
                                frontier_phi_14_pred_11 = _368;
                                frontier_phi_14_pred_12 = _367;
                                frontier_phi_14_pred_13 = _366;
                                frontier_phi_14_pred_14 = _365;
                                frontier_phi_14_pred_15 = _369 + 1u;
                            }
                            _392 = frontier_phi_14_pred;
                            _390 = frontier_phi_14_pred_1;
                            _388 = frontier_phi_14_pred_2;
                            _386 = frontier_phi_14_pred_3;
                            _384 = frontier_phi_14_pred_4;
                            _382 = frontier_phi_14_pred_5;
                            _380 = frontier_phi_14_pred_6;
                            _378 = frontier_phi_14_pred_7;
                            _376 = frontier_phi_14_pred_8;
                            _374 = frontier_phi_14_pred_9;
                            _372 = frontier_phi_14_pred_10;
                            _359 = frontier_phi_14_pred_11;
                            _358 = frontier_phi_14_pred_12;
                            _356 = frontier_phi_14_pred_13;
                            _354 = frontier_phi_14_pred_14;
                            _370 = frontier_phi_14_pred_15;
                            if (int(_370) < int(_348))
                            {
                                _365 = _354;
                                _366 = _356;
                                _367 = _358;
                                _368 = _359;
                                _369 = _370;
                                _371 = _372;
                                _373 = _374;
                                _375 = _376;
                                _377 = _378;
                                _379 = _380;
                                _381 = _382;
                                _383 = _384;
                                _385 = _386;
                                _387 = _388;
                                _389 = _390;
                                _391 = _392;
                                continue;
                            }
                            else
                            {
                                break;
                            }
                        }
                        _353 = _354;
                        _355 = _356;
                        _357 = _358;
                        _122 = _359;
                    }
                    else
                    {
                        _353 = 0.0;
                        _355 = 0.0;
                        _357 = 0.0;
                        _122 = 0.0;
                    }
                    float frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder;
                    float frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_1;
                    float frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_2;
                    float frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_3;
                    if ((isnan(_353) || isnan(_355)) || isnan(_357))
                    {
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder = 0.0;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_1 = 0.0;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_2 = 0.0;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_3 = 0.0;
                    }
                    else
                    {
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder = (_122 * _353) * cbPerScene._m0[28u].w;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_1 = _122;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_2 = (_122 * _357) * cbPerScene._m0[28u].w;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_3 = (_122 * _355) * cbPerScene._m0[28u].w;
                    }
                    frontier_phi_1_2_ladder_3_ladder_4_ladder = frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_1 = frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_1;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_2 = frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_2;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_3 = frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_3;
                }
                frontier_phi_1_2_ladder_3_ladder = frontier_phi_1_2_ladder_3_ladder_4_ladder;
                frontier_phi_1_2_ladder_3_ladder_1 = frontier_phi_1_2_ladder_3_ladder_4_ladder_1;
                frontier_phi_1_2_ladder_3_ladder_2 = frontier_phi_1_2_ladder_3_ladder_4_ladder_2;
                frontier_phi_1_2_ladder_3_ladder_3 = frontier_phi_1_2_ladder_3_ladder_4_ladder_3;
            }
            frontier_phi_1_2_ladder = frontier_phi_1_2_ladder_3_ladder;
            frontier_phi_1_2_ladder_1 = frontier_phi_1_2_ladder_3_ladder_1;
            frontier_phi_1_2_ladder_2 = frontier_phi_1_2_ladder_3_ladder_2;
            frontier_phi_1_2_ladder_3 = frontier_phi_1_2_ladder_3_ladder_3;
        }
        else
        {
            frontier_phi_1_2_ladder = 0.0;
            frontier_phi_1_2_ladder_1 = 0.0;
            frontier_phi_1_2_ladder_2 = 0.0;
            frontier_phi_1_2_ladder_3 = 0.0;
        }
        _115 = frontier_phi_1_2_ladder;
        _117 = frontier_phi_1_2_ladder_3;
        _119 = frontier_phi_1_2_ladder_2;
        _121 = frontier_phi_1_2_ladder_1;
    }
    SV_Target.x = _115;
    SV_Target.y = _117;
    SV_Target.z = _119;
    SV_Target.w = _121;
}


