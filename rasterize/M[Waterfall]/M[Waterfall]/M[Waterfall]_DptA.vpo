#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Waterfall_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_4;
layout(location = 6) out vec2 TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _173 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _175 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _180 = _173 * cbTexScroll._m0[0u].x;
    precise float _181 = _175 * cbTexScroll._m0[0u].y;
    precise float _184 = _180 + cbTexScroll._m0[0u].z;
    precise float _185 = _181 + cbTexScroll._m0[0u].w;
    precise float _189 = float(NORMAL.x) + (-127.0);
    precise float _191 = float(NORMAL.y) + (-127.0);
    precise float _192 = float(NORMAL.z) + (-127.0);
    precise float _193 = _189 * 0.0078740157186985015869140625;
    precise float _195 = _191 * 0.0078740157186985015869140625;
    precise float _196 = _192 * 0.0078740157186985015869140625;
    float _206 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _208 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _210 = POSITION.x + 0.0;
    precise float _211 = POSITION.y + 0.0;
    precise float _212 = POSITION.z + 0.0;
    uint _217 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _219 = texelFetch(g_InstanceIndexBuffer, int(_217));
    uint _220 = _219.x;
    uint _222 = _220 * 13u;
    uint _230 = (floatBitsToUint(cbInstanceData._m0[_222 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _237 = _230 + 1u;
    uint _244 = _230 + 2u;
    precise float _251 = _210 * cbObjMatrix._m0[_230].x;
    precise float _252 = _211 * cbObjMatrix._m0[_230].y;
    precise float _253 = _252 + _251;
    precise float _254 = _212 * cbObjMatrix._m0[_230].z;
    precise float _255 = _254 + _253;
    precise float _256 = 1.0 * cbObjMatrix._m0[_230].w;
    precise float _258 = _256 + _255;
    precise float _259 = _210 * cbObjMatrix._m0[_237].x;
    precise float _260 = _211 * cbObjMatrix._m0[_237].y;
    precise float _261 = _260 + _259;
    precise float _262 = _212 * cbObjMatrix._m0[_237].z;
    precise float _263 = _262 + _261;
    precise float _264 = 1.0 * cbObjMatrix._m0[_237].w;
    precise float _265 = _264 + _263;
    precise float _266 = _210 * cbObjMatrix._m0[_244].x;
    precise float _267 = _211 * cbObjMatrix._m0[_244].y;
    precise float _268 = _267 + _266;
    precise float _269 = _212 * cbObjMatrix._m0[_244].z;
    precise float _270 = _269 + _268;
    precise float _271 = 1.0 * cbObjMatrix._m0[_244].w;
    precise float _272 = _271 + _270;
    precise float _273 = _193 * cbObjMatrix._m0[_230].x;
    precise float _274 = _195 * cbObjMatrix._m0[_230].y;
    precise float _275 = _274 + _273;
    precise float _276 = _196 * cbObjMatrix._m0[_230].z;
    precise float _277 = _276 + _275;
    precise float _278 = _193 * cbObjMatrix._m0[_237].x;
    precise float _279 = _195 * cbObjMatrix._m0[_237].y;
    precise float _280 = _279 + _278;
    precise float _281 = _196 * cbObjMatrix._m0[_237].z;
    precise float _282 = _281 + _280;
    precise float _283 = _193 * cbObjMatrix._m0[_244].x;
    precise float _284 = _195 * cbObjMatrix._m0[_244].y;
    precise float _285 = _284 + _283;
    precise float _286 = _196 * cbObjMatrix._m0[_244].z;
    precise float _287 = _286 + _285;
    precise float _303 = cbPerFrame._m0[22u].x * cbMtdParam._m0[11u].w;
    precise float _309 = _303 * cbMtdParam._m0[15u].x;
    precise float _310 = _303 * cbMtdParam._m0[15u].y;
    precise float _311 = _184 + _309;
    precise float _312 = _185 + _310;
    precise float _319 = _311 * cbTextureTilingScale._m0[3u].x;
    precise float _320 = cbTextureTilingScale._m0[3u].y * _312;
    precise float _321 = cbTextureTilingScale._m0[3u].z + _319;
    precise float _322 = cbTextureTilingScale._m0[3u].w + _320;
    vec4 _325 = textureLod(sampler2D(M_Waterfall_snp_0_Texture2D_2, SS_WrapLinear), vec2(_321, _322), 0.0);
    float _327 = _325.x;
    precise float _334 = _277 * cbMtdParam._m0[18u].x;
    precise float _335 = _282 * cbMtdParam._m0[18u].y;
    precise float _336 = _287 * cbMtdParam._m0[18u].z;
    precise float _337 = _327 * _334;
    precise float _338 = _327 * _335;
    precise float _339 = _327 * _336;
    precise float _340 = _258 + _337;
    precise float _341 = _265 + _338;
    precise float _342 = _272 + _339;
    precise float _348 = _340 - cbSceneParam._m0[3u].x;
    precise float _349 = _341 - cbSceneParam._m0[3u].y;
    precise float _350 = _342 - cbSceneParam._m0[3u].z;
    precise float _377 = _348 * cbSceneParam._m0[24u].x;
    precise float _378 = _349 * cbSceneParam._m0[24u].y;
    precise float _379 = _378 + _377;
    precise float _380 = _350 * cbSceneParam._m0[24u].z;
    precise float _381 = _380 + _379;
    precise float _382 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _383 = _382 + _381;
    precise float _384 = _348 * cbSceneParam._m0[25u].x;
    precise float _385 = _349 * cbSceneParam._m0[25u].y;
    precise float _386 = _385 + _384;
    precise float _387 = _350 * cbSceneParam._m0[25u].z;
    precise float _388 = _387 + _386;
    precise float _389 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _390 = _389 + _388;
    precise float _391 = _348 * cbSceneParam._m0[26u].x;
    precise float _392 = _349 * cbSceneParam._m0[26u].y;
    precise float _393 = _392 + _391;
    precise float _394 = _350 * cbSceneParam._m0[26u].z;
    precise float _395 = _394 + _393;
    precise float _396 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _397 = _396 + _395;
    precise float _398 = _348 * cbSceneParam._m0[27u].x;
    precise float _399 = _349 * cbSceneParam._m0[27u].y;
    precise float _400 = _399 + _398;
    precise float _401 = _350 * cbSceneParam._m0[27u].z;
    precise float _402 = _401 + _400;
    precise float _403 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _404 = _403 + _402;
    gl_Position.x = _383;
    gl_Position.y = _390;
    gl_Position.z = _397;
    gl_Position.w = _404;
    POSITION_1.x = _383;
    POSITION_1.y = _390;
    POSITION_1.z = _397;
    POSITION_1.w = _404;
    NORMAL_1.x = _277;
    NORMAL_1.y = _282;
    NORMAL_1.z = _287;
    NORMAL_1.w = float(_220);
    TANGENT_1.x = fma(_208, cbObjMatrix._m0[_230].z, fma(_207, cbObjMatrix._m0[_230].y, cbObjMatrix._m0[_230].x * _206));
    TANGENT_1.y = fma(_208, cbObjMatrix._m0[_237].z, fma(_207, cbObjMatrix._m0[_237].y, cbObjMatrix._m0[_237].x * _206));
    TANGENT_1.z = fma(_208, cbObjMatrix._m0[_244].z, fma(_207, cbObjMatrix._m0[_244].y, cbObjMatrix._m0[_244].x * _206));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = _184;
    TEXCOORD_1_1.y = _185;
    TEXCOORD_1_1.z = COLOR_1.x;
    TEXCOORD_4.x = TEXCOORD_1.x;
    TEXCOORD_4.y = TEXCOORD_1.y;
    TEXCOORD_4.z = TEXCOORD_1.z;
    TEXCOORD_4.w = COLOR_1.w;
    TEXCOORD_8.x = _397;
    TEXCOORD_8.y = _404;
    gl_ClipDistance[0u] = dot(vec4(_383, _390, _397, _404), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_383, _390, _397, _404), vec4(cbInstanceData._m0[_222 + 3u]));
}


