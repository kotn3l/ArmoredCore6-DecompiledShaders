#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Waterfall_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec2 TEXCOORD_8;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    float _106 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _116 = exp2(log2(abs(_106 * NORMAL.x)) * 2.2000000476837158203125);
    float _117 = exp2(log2(abs(_106 * NORMAL.z)) * 2.2000000476837158203125);
    float _355 = isnan(0.0) ? _116 : (isnan(_116) ? 0.0 : max(_116, 0.0));
    float _366 = isnan(0.0) ? _117 : (isnan(_117) ? 0.0 : max(_117, 0.0));
    float _136 = (cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].w;
    float _167 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _171 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _175 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _192 = ((((_171 / cbMtdParam._m0[13u].z) + ((cbMtdParam._m0[16u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].w)) * cbMtdParam._m0[17u].y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w;
    float _212 = ((texture(sampler2D(M_Waterfall_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((((_167 / cbMtdParam._m0[13u].z) + _136) * cbMtdParam._m0[17u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _192)).w * (isnan(1.0) ? _366 : (isnan(_366) ? 1.0 : min(_366, 1.0)))) + (texture(sampler2D(M_Waterfall_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((((_175 / cbMtdParam._m0[13u].z) + _136) * cbMtdParam._m0[17u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _192)).w * (isnan(1.0) ? _355 : (isnan(_355) ? 1.0 : min(_355, 1.0))))) * cbMtdParam._m0[12u].z;
    uint _214 = uint(roundEven(NORMAL.w));
    float _224 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _234 = cbSceneParam._m0[71u].x - (_167 / _224);
    float _235 = cbSceneParam._m0[71u].y - (_171 / _224);
    float _236 = cbSceneParam._m0[71u].z - (_175 / _224);
    vec4 _241 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _243 = _241.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _275 = sqrt(((_234 * _234) + (_235 * _235)) + (_236 * _236));
        float _282 = (cbMatDynParam._m0[5u].x * _275) + cbMatDynParam._m0[5u].y;
        float _377 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
        float _283 = isnan(1.0) ? _377 : (isnan(_377) ? 1.0 : min(_377, 1.0));
        float _287 = (cbMatDynParam._m0[5u].z * _275) + cbMatDynParam._m0[5u].w;
        float _388 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _388 : (isnan(_388) ? 1.0 : min(_388, 1.0))) - _283)) + _283) < ((_243 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _324;
    vec4 _254;
    float _256;
    float _257;
    bool _268;
    uint _269;
    for (;;)
    {
        float _251 = _243 + (-0.5);
        _254 = cbMtdParam._m0[1u];
        _256 = _254.y * _251;
        _257 = _251 * 0.999000012874603271484375;
        _268 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        _269 = _214 * 13u;
        if (_268)
        {
            if ((cbInstanceData._m0[_269 + 7u].x + _257) < 0.5)
            {
                _324 = true;
                break;
            }
        }
        uint _313 = (_269 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_313].w < 1.0) && ((cbInstanceData._m0[_313].w + _257) < 0.5))
        {
            _324 = true;
            break;
        }
        if (((_256 - _212) + (TEXCOORD_4.w * 2.0)) < _254.x)
        {
            _324 = true;
            break;
        }
        _324 = false;
        break;
    }
    if (_324)
    {
        discard_state = true;
    }
    discard_exit();
}


