#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D P_LaserBlade_001_snp_0_Texture2D_10;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 10) in vec4 TEXCOORD_4;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out float TEXCOORD_1_1;
layout(location = 4, component = 1) out float TEXCOORD_2_1;
layout(location = 5) out vec4 TEXCOORD_4_1;
layout(location = 6) out vec4 TEXCOORD_8;
layout(location = 7) out vec4 TEXCOORD_11;
layout(location = 8) out vec4 TEXCOORD_16;
layout(location = 9) out vec4 TEXCOORD_17;
layout(location = 10) out vec3 TEXCOORD_18;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_2_1 = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_16.x = 0.0;
    TEXCOORD_16.y = 0.0;
    TEXCOORD_16.z = 0.0;
    TEXCOORD_16.w = 0.0;
    TEXCOORD_17.x = 0.0;
    TEXCOORD_17.y = 0.0;
    TEXCOORD_17.z = 0.0;
    TEXCOORD_17.w = 0.0;
    TEXCOORD_18.x = 0.0;
    TEXCOORD_18.y = 0.0;
    TEXCOORD_18.z = 0.0;
    precise float _221 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _223 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _228 = _221 * cbTexScroll._m0[0u].x;
    precise float _229 = _223 * cbTexScroll._m0[0u].y;
    precise float _232 = _228 + cbTexScroll._m0[0u].z;
    precise float _233 = _229 + cbTexScroll._m0[0u].w;
    precise float _237 = float(NORMAL.x) + (-127.0);
    precise float _239 = float(NORMAL.y) + (-127.0);
    precise float _240 = float(NORMAL.z) + (-127.0);
    precise float _241 = _237 * 0.0078740157186985015869140625;
    precise float _243 = _239 * 0.0078740157186985015869140625;
    precise float _244 = _240 * 0.0078740157186985015869140625;
    float _253 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _254 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _255 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _266 = _241 * cbMtdParam._m0[25u].x;
    precise float _267 = _243 * cbMtdParam._m0[25u].y;
    precise float _268 = _244 * cbMtdParam._m0[25u].z;
    precise float _273 = cbPerFrame._m0[22u].x * cbMtdParam._m0[21u].y;
    precise float _279 = _273 * cbMtdParam._m0[24u].x;
    precise float _280 = _273 * cbMtdParam._m0[24u].y;
    precise float _281 = _232 + _279;
    precise float _282 = _233 + _280;
    precise float _289 = _281 * cbTextureTilingScale._m0[0u].x;
    precise float _290 = cbTextureTilingScale._m0[0u].y * _282;
    precise float _291 = cbTextureTilingScale._m0[0u].z + _289;
    precise float _292 = cbTextureTilingScale._m0[0u].w + _290;
    precise float _303 = textureLod(sampler2D(P_LaserBlade_001_snp_0_Texture2D_10, SS_DiffuseMap), vec2(_291, _292), 0.0).x * cbMtdParam._m0[19u].x;
    precise float _304 = _266 * _303;
    precise float _305 = _267 * _303;
    precise float _306 = _268 * _303;
    precise float _307 = _266 + _304;
    precise float _308 = _267 + _305;
    precise float _309 = _268 + _306;
    precise float _310 = _266 * 0.0;
    precise float _311 = _267 * 0.0;
    precise float _312 = _268 * 0.0;
    precise float _313 = _310 + _307;
    precise float _314 = _311 + _308;
    precise float _315 = _312 + _309;
    precise float _316 = TEXCOORD_4.x * _313;
    precise float _317 = TEXCOORD_4.y * _314;
    precise float _318 = TEXCOORD_4.z * _315;
    precise float _319 = POSITION.x + _316;
    precise float _320 = POSITION.y + _317;
    precise float _321 = POSITION.z + _318;
    uint _326 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _328 = texelFetch(g_InstanceIndexBuffer, int(_326));
    uint _329 = _328.x;
    precise float _330 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _335 = isnan(_330) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _330 : max(0.001000000047497451305389404296875, _330));
    precise float _337 = BLENDWEIGHT.x / _335;
    precise float _338 = BLENDWEIGHT.y / _335;
    precise float _339 = BLENDWEIGHT.z / _335;
    precise float _340 = BLENDWEIGHT.w / _335;
    uvec4 _347 = floatBitsToUint(cbInstanceData._m0[(_329 * 13u) + 4u]);
    uint _348 = _347.x;
    uint _350 = (_348 + uint(float(BLENDINDICES.x))) * 3u;
    uint _357 = _350 + 1u;
    uint _364 = _350 + 2u;
    precise float _371 = _337 * cbObjMatrix._m0[_350].x;
    precise float _372 = _337 * cbObjMatrix._m0[_357].x;
    precise float _373 = _337 * cbObjMatrix._m0[_364].x;
    precise float _374 = _337 * cbObjMatrix._m0[_350].y;
    precise float _375 = _337 * cbObjMatrix._m0[_357].y;
    precise float _376 = _337 * cbObjMatrix._m0[_364].y;
    precise float _377 = _337 * cbObjMatrix._m0[_350].z;
    precise float _378 = _337 * cbObjMatrix._m0[_357].z;
    precise float _379 = _337 * cbObjMatrix._m0[_364].z;
    precise float _380 = _337 * cbObjMatrix._m0[_350].w;
    precise float _381 = _337 * cbObjMatrix._m0[_357].w;
    precise float _382 = _337 * cbObjMatrix._m0[_364].w;
    uint _385 = (_348 + uint(float(BLENDINDICES.y))) * 3u;
    uint _392 = _385 + 1u;
    uint _399 = _385 + 2u;
    precise float _406 = _338 * cbObjMatrix._m0[_385].x;
    precise float _407 = _338 * cbObjMatrix._m0[_392].x;
    precise float _408 = _338 * cbObjMatrix._m0[_399].x;
    precise float _409 = _338 * cbObjMatrix._m0[_385].y;
    precise float _410 = _338 * cbObjMatrix._m0[_392].y;
    precise float _411 = _338 * cbObjMatrix._m0[_399].y;
    precise float _412 = _338 * cbObjMatrix._m0[_385].z;
    precise float _413 = _338 * cbObjMatrix._m0[_392].z;
    precise float _414 = _338 * cbObjMatrix._m0[_399].z;
    precise float _415 = _338 * cbObjMatrix._m0[_385].w;
    precise float _416 = _338 * cbObjMatrix._m0[_392].w;
    precise float _417 = _338 * cbObjMatrix._m0[_399].w;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    uint _432 = (_348 + uint(float(BLENDINDICES.z))) * 3u;
    uint _439 = _432 + 1u;
    uint _446 = _432 + 2u;
    precise float _453 = _339 * cbObjMatrix._m0[_432].x;
    precise float _454 = _339 * cbObjMatrix._m0[_439].x;
    precise float _455 = _339 * cbObjMatrix._m0[_446].x;
    precise float _456 = _339 * cbObjMatrix._m0[_432].y;
    precise float _457 = _339 * cbObjMatrix._m0[_439].y;
    precise float _458 = _339 * cbObjMatrix._m0[_446].y;
    precise float _459 = _339 * cbObjMatrix._m0[_432].z;
    precise float _460 = _339 * cbObjMatrix._m0[_439].z;
    precise float _461 = _339 * cbObjMatrix._m0[_446].z;
    precise float _462 = _339 * cbObjMatrix._m0[_432].w;
    precise float _463 = _339 * cbObjMatrix._m0[_439].w;
    precise float _464 = _339 * cbObjMatrix._m0[_446].w;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    uint _479 = (_348 + uint(float(BLENDINDICES.w))) * 3u;
    uint _486 = _479 + 1u;
    uint _493 = _479 + 2u;
    precise float _500 = _340 * cbObjMatrix._m0[_479].x;
    precise float _501 = _340 * cbObjMatrix._m0[_486].x;
    precise float _502 = _340 * cbObjMatrix._m0[_493].x;
    precise float _503 = _340 * cbObjMatrix._m0[_479].y;
    precise float _504 = _340 * cbObjMatrix._m0[_486].y;
    precise float _505 = _340 * cbObjMatrix._m0[_493].y;
    precise float _506 = _340 * cbObjMatrix._m0[_479].z;
    precise float _507 = _340 * cbObjMatrix._m0[_486].z;
    precise float _508 = _340 * cbObjMatrix._m0[_493].z;
    precise float _509 = _340 * cbObjMatrix._m0[_479].w;
    precise float _510 = _340 * cbObjMatrix._m0[_486].w;
    precise float _511 = _340 * cbObjMatrix._m0[_493].w;
    precise float _512 = _465 + _500;
    precise float _513 = _466 + _501;
    precise float _514 = _467 + _502;
    precise float _515 = _468 + _503;
    precise float _516 = _469 + _504;
    precise float _517 = _470 + _505;
    precise float _518 = _471 + _506;
    precise float _519 = _472 + _507;
    precise float _520 = _473 + _508;
    precise float _521 = _474 + _509;
    precise float _522 = _475 + _510;
    precise float _523 = _476 + _511;
    precise float _524 = _319 * _512;
    precise float _525 = _320 * _515;
    precise float _526 = _525 + _524;
    precise float _527 = _321 * _518;
    precise float _528 = _527 + _526;
    precise float _529 = 1.0 * _521;
    precise float _530 = _529 + _528;
    precise float _531 = _319 * _513;
    precise float _532 = _320 * _516;
    precise float _533 = _532 + _531;
    precise float _534 = _321 * _519;
    precise float _535 = _534 + _533;
    precise float _536 = 1.0 * _522;
    precise float _537 = _536 + _535;
    precise float _538 = _319 * _514;
    precise float _539 = _320 * _517;
    precise float _540 = _539 + _538;
    precise float _541 = _321 * _520;
    precise float _542 = _541 + _540;
    precise float _543 = 1.0 * _523;
    precise float _544 = _543 + _542;
    float _715 = fma(_244, _518, fma(_243, _515, _512 * _241));
    float _718 = fma(_244, _519, fma(_243, _516, _513 * _241));
    float _721 = fma(_244, _520, fma(_243, _517, _514 * _241));
    precise float _732 = _530 + 0.0;
    precise float _733 = _537 + 0.0;
    precise float _734 = _544 + 0.0;
    float _741 = (((((cbPrevObjMatrix._m0[_385].w * _338) + (cbPrevObjMatrix._m0[_350].w * _337)) + (cbPrevObjMatrix._m0[_432].w * _339)) + (cbPrevObjMatrix._m0[_479].w * _340)) + fma(_321, (((cbPrevObjMatrix._m0[_385].z * _338) + (cbPrevObjMatrix._m0[_350].z * _337)) + (cbPrevObjMatrix._m0[_432].z * _339)) + (cbPrevObjMatrix._m0[_479].z * _340), fma(_320, (((cbPrevObjMatrix._m0[_385].y * _338) + (cbPrevObjMatrix._m0[_350].y * _337)) + (cbPrevObjMatrix._m0[_432].y * _339)) + (cbPrevObjMatrix._m0[_479].y * _340), ((((cbPrevObjMatrix._m0[_385].x * _338) + (cbPrevObjMatrix._m0[_350].x * _337)) + (cbPrevObjMatrix._m0[_432].x * _339)) + (cbPrevObjMatrix._m0[_479].x * _340)) * _319))) - cbSceneParam._m0[28u].x;
    float _742 = (((((cbPrevObjMatrix._m0[_392].w * _338) + (cbPrevObjMatrix._m0[_357].w * _337)) + (cbPrevObjMatrix._m0[_439].w * _339)) + (cbPrevObjMatrix._m0[_486].w * _340)) + fma(_321, (((cbPrevObjMatrix._m0[_392].z * _338) + (cbPrevObjMatrix._m0[_357].z * _337)) + (cbPrevObjMatrix._m0[_439].z * _339)) + (cbPrevObjMatrix._m0[_486].z * _340), fma(_320, (((cbPrevObjMatrix._m0[_392].y * _338) + (cbPrevObjMatrix._m0[_357].y * _337)) + (cbPrevObjMatrix._m0[_439].y * _339)) + (cbPrevObjMatrix._m0[_486].y * _340), ((((cbPrevObjMatrix._m0[_392].x * _338) + (cbPrevObjMatrix._m0[_357].x * _337)) + (cbPrevObjMatrix._m0[_439].x * _339)) + (cbPrevObjMatrix._m0[_486].x * _340)) * _319))) - cbSceneParam._m0[28u].y;
    float _743 = (((((cbPrevObjMatrix._m0[_399].w * _338) + (cbPrevObjMatrix._m0[_364].w * _337)) + (cbPrevObjMatrix._m0[_446].w * _339)) + (cbPrevObjMatrix._m0[_493].w * _340)) + fma(_321, (((cbPrevObjMatrix._m0[_399].z * _338) + (cbPrevObjMatrix._m0[_364].z * _337)) + (cbPrevObjMatrix._m0[_446].z * _339)) + (cbPrevObjMatrix._m0[_493].z * _340), fma(_320, (((cbPrevObjMatrix._m0[_399].y * _338) + (cbPrevObjMatrix._m0[_364].y * _337)) + (cbPrevObjMatrix._m0[_446].y * _339)) + (cbPrevObjMatrix._m0[_493].y * _340), ((((cbPrevObjMatrix._m0[_399].x * _338) + (cbPrevObjMatrix._m0[_364].x * _337)) + (cbPrevObjMatrix._m0[_446].x * _339)) + (cbPrevObjMatrix._m0[_493].x * _340)) * _319))) - cbSceneParam._m0[28u].z;
    precise float _793 = _732 - cbSceneParam._m0[3u].x;
    precise float _794 = _733 - cbSceneParam._m0[3u].y;
    precise float _795 = _734 - cbSceneParam._m0[3u].z;
    precise float _821 = _793 * cbSceneParam._m0[24u].x;
    precise float _822 = _794 * cbSceneParam._m0[24u].y;
    precise float _823 = _822 + _821;
    precise float _824 = _795 * cbSceneParam._m0[24u].z;
    precise float _825 = _824 + _823;
    precise float _826 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _827 = _826 + _825;
    precise float _828 = _793 * cbSceneParam._m0[25u].x;
    precise float _829 = _794 * cbSceneParam._m0[25u].y;
    precise float _830 = _829 + _828;
    precise float _831 = _795 * cbSceneParam._m0[25u].z;
    precise float _832 = _831 + _830;
    precise float _833 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _834 = _833 + _832;
    precise float _835 = _793 * cbSceneParam._m0[26u].x;
    precise float _836 = _794 * cbSceneParam._m0[26u].y;
    precise float _837 = _836 + _835;
    precise float _838 = _795 * cbSceneParam._m0[26u].z;
    precise float _839 = _838 + _837;
    precise float _840 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _841 = _840 + _839;
    precise float _842 = _793 * cbSceneParam._m0[27u].x;
    precise float _843 = _794 * cbSceneParam._m0[27u].y;
    precise float _844 = _843 + _842;
    precise float _845 = _795 * cbSceneParam._m0[27u].z;
    precise float _846 = _845 + _844;
    precise float _847 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _848 = _847 + _846;
    gl_Position.x = _827;
    gl_Position.y = _834;
    gl_Position.z = _841;
    gl_Position.w = _848;
    POSITION_1.x = _827;
    POSITION_1.y = _834;
    POSITION_1.z = _841;
    POSITION_1.w = _848;
    NORMAL_1.x = _715;
    NORMAL_1.y = _718;
    NORMAL_1.z = _721;
    NORMAL_1.w = float(_329);
    TANGENT_1.x = fma(_255, _518, fma(_254, _515, _512 * _253));
    TANGENT_1.y = fma(_255, _519, fma(_254, _516, _513 * _253));
    TANGENT_1.z = fma(_255, _520, fma(_254, _517, _514 * _253));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1 = _232;
    TEXCOORD_2_1 = _233;
    TEXCOORD_4_1.x = TEXCOORD_1.x;
    TEXCOORD_4_1.y = TEXCOORD_1.y;
    TEXCOORD_4_1.z = TEXCOORD_1.z;
    TEXCOORD_4_1.w = COLOR_1.w;
    TEXCOORD_8.x = TEXCOORD_3.x;
    TEXCOORD_8.y = TEXCOORD_3.y;
    TEXCOORD_8.z = TEXCOORD_3.z;
    TEXCOORD_8.w = COLOR_1.x;
    TEXCOORD_11.x = TEXCOORD_4.x;
    TEXCOORD_11.y = TEXCOORD_4.y;
    TEXCOORD_11.z = TEXCOORD_4.z;
    TEXCOORD_11.w = TEXCOORD_2.x;
    TEXCOORD_16.x = _827;
    TEXCOORD_16.y = _834;
    TEXCOORD_16.z = _841;
    TEXCOORD_16.w = _848;
    TEXCOORD_17.x = fma(_743, cbSceneParam._m0[29u].z, fma(_742, cbSceneParam._m0[29u].y, _741 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_17.y = fma(_743, cbSceneParam._m0[30u].z, fma(_742, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _741)) + cbSceneParam._m0[30u].w;
    TEXCOORD_17.z = fma(_743, cbSceneParam._m0[31u].z, fma(_742, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _741)) + cbSceneParam._m0[31u].w;
    TEXCOORD_17.w = fma(_743, cbSceneParam._m0[32u].z, fma(_742, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _741)) + cbSceneParam._m0[32u].w;
    TEXCOORD_18.x = _715;
    TEXCOORD_18.y = _718;
    TEXCOORD_18.z = _721;
}


