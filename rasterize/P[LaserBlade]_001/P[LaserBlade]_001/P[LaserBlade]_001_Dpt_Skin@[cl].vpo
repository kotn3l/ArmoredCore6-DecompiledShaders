#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D P_LaserBlade_001_snp_0_Texture2D_10;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 10) in vec4 TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    precise float _144 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _146 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _151 = _144 * cbTexScroll._m0[0u].x;
    precise float _152 = _146 * cbTexScroll._m0[0u].y;
    precise float _155 = _151 + cbTexScroll._m0[0u].z;
    precise float _156 = _152 + cbTexScroll._m0[0u].w;
    precise float _160 = float(NORMAL.x) + (-127.0);
    precise float _162 = float(NORMAL.y) + (-127.0);
    precise float _163 = float(NORMAL.z) + (-127.0);
    precise float _164 = _160 * 0.0078740157186985015869140625;
    precise float _166 = _162 * 0.0078740157186985015869140625;
    precise float _167 = _163 * 0.0078740157186985015869140625;
    precise float _177 = _164 * cbMtdParam._m0[25u].x;
    precise float _178 = _166 * cbMtdParam._m0[25u].y;
    precise float _179 = _167 * cbMtdParam._m0[25u].z;
    precise float _184 = cbPerFrame._m0[22u].x * cbMtdParam._m0[21u].y;
    precise float _190 = _184 * cbMtdParam._m0[24u].x;
    precise float _191 = _184 * cbMtdParam._m0[24u].y;
    precise float _192 = _155 + _190;
    precise float _193 = _156 + _191;
    precise float _200 = _192 * cbTextureTilingScale._m0[0u].x;
    precise float _201 = cbTextureTilingScale._m0[0u].y * _193;
    precise float _202 = cbTextureTilingScale._m0[0u].z + _200;
    precise float _203 = cbTextureTilingScale._m0[0u].w + _201;
    precise float _214 = textureLod(sampler2D(P_LaserBlade_001_snp_0_Texture2D_10, SS_DiffuseMap), vec2(_202, _203), 0.0).x * cbMtdParam._m0[19u].x;
    precise float _215 = _177 * _214;
    precise float _216 = _178 * _214;
    precise float _217 = _179 * _214;
    precise float _218 = _177 + _215;
    precise float _219 = _178 + _216;
    precise float _220 = _179 + _217;
    precise float _221 = _177 * 0.0;
    precise float _222 = _178 * 0.0;
    precise float _223 = _179 * 0.0;
    precise float _224 = _221 + _218;
    precise float _225 = _222 + _219;
    precise float _226 = _223 + _220;
    precise float _227 = TEXCOORD_4.x * _224;
    precise float _228 = TEXCOORD_4.y * _225;
    precise float _229 = TEXCOORD_4.z * _226;
    precise float _230 = POSITION.x + _227;
    precise float _231 = POSITION.y + _228;
    precise float _232 = POSITION.z + _229;
    uint _237 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _241 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _246 = isnan(_241) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _241 : max(0.001000000047497451305389404296875, _241));
    precise float _248 = BLENDWEIGHT.x / _246;
    precise float _249 = BLENDWEIGHT.y / _246;
    precise float _250 = BLENDWEIGHT.z / _246;
    precise float _251 = BLENDWEIGHT.w / _246;
    uvec4 _258 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_237)).x * 13u) + 4u]);
    uint _259 = _258.x;
    uint _261 = (_259 + uint(float(BLENDINDICES.x))) * 3u;
    uint _268 = _261 + 1u;
    uint _275 = _261 + 2u;
    precise float _282 = _248 * cbObjMatrix._m0[_261].x;
    precise float _283 = _248 * cbObjMatrix._m0[_268].x;
    precise float _284 = _248 * cbObjMatrix._m0[_275].x;
    precise float _285 = _248 * cbObjMatrix._m0[_261].y;
    precise float _286 = _248 * cbObjMatrix._m0[_268].y;
    precise float _287 = _248 * cbObjMatrix._m0[_275].y;
    precise float _288 = _248 * cbObjMatrix._m0[_261].z;
    precise float _289 = _248 * cbObjMatrix._m0[_268].z;
    precise float _290 = _248 * cbObjMatrix._m0[_275].z;
    precise float _291 = _248 * cbObjMatrix._m0[_261].w;
    precise float _292 = _248 * cbObjMatrix._m0[_268].w;
    precise float _293 = _248 * cbObjMatrix._m0[_275].w;
    uint _296 = (_259 + uint(float(BLENDINDICES.y))) * 3u;
    uint _303 = _296 + 1u;
    uint _310 = _296 + 2u;
    precise float _317 = _249 * cbObjMatrix._m0[_296].x;
    precise float _318 = _249 * cbObjMatrix._m0[_303].x;
    precise float _319 = _249 * cbObjMatrix._m0[_310].x;
    precise float _320 = _249 * cbObjMatrix._m0[_296].y;
    precise float _321 = _249 * cbObjMatrix._m0[_303].y;
    precise float _322 = _249 * cbObjMatrix._m0[_310].y;
    precise float _323 = _249 * cbObjMatrix._m0[_296].z;
    precise float _324 = _249 * cbObjMatrix._m0[_303].z;
    precise float _325 = _249 * cbObjMatrix._m0[_310].z;
    precise float _326 = _249 * cbObjMatrix._m0[_296].w;
    precise float _327 = _249 * cbObjMatrix._m0[_303].w;
    precise float _328 = _249 * cbObjMatrix._m0[_310].w;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    uint _343 = (_259 + uint(float(BLENDINDICES.z))) * 3u;
    uint _350 = _343 + 1u;
    uint _357 = _343 + 2u;
    precise float _364 = _250 * cbObjMatrix._m0[_343].x;
    precise float _365 = _250 * cbObjMatrix._m0[_350].x;
    precise float _366 = _250 * cbObjMatrix._m0[_357].x;
    precise float _367 = _250 * cbObjMatrix._m0[_343].y;
    precise float _368 = _250 * cbObjMatrix._m0[_350].y;
    precise float _369 = _250 * cbObjMatrix._m0[_357].y;
    precise float _370 = _250 * cbObjMatrix._m0[_343].z;
    precise float _371 = _250 * cbObjMatrix._m0[_350].z;
    precise float _372 = _250 * cbObjMatrix._m0[_357].z;
    precise float _373 = _250 * cbObjMatrix._m0[_343].w;
    precise float _374 = _250 * cbObjMatrix._m0[_350].w;
    precise float _375 = _250 * cbObjMatrix._m0[_357].w;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    uint _390 = (_259 + uint(float(BLENDINDICES.w))) * 3u;
    uint _397 = _390 + 1u;
    uint _404 = _390 + 2u;
    precise float _411 = _251 * cbObjMatrix._m0[_390].x;
    precise float _412 = _251 * cbObjMatrix._m0[_397].x;
    precise float _413 = _251 * cbObjMatrix._m0[_404].x;
    precise float _414 = _251 * cbObjMatrix._m0[_390].y;
    precise float _415 = _251 * cbObjMatrix._m0[_397].y;
    precise float _416 = _251 * cbObjMatrix._m0[_404].y;
    precise float _417 = _251 * cbObjMatrix._m0[_390].z;
    precise float _418 = _251 * cbObjMatrix._m0[_397].z;
    precise float _419 = _251 * cbObjMatrix._m0[_404].z;
    precise float _420 = _251 * cbObjMatrix._m0[_390].w;
    precise float _421 = _251 * cbObjMatrix._m0[_397].w;
    precise float _422 = _251 * cbObjMatrix._m0[_404].w;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _230 * _423;
    precise float _436 = _231 * _426;
    precise float _437 = _436 + _435;
    precise float _438 = _232 * _429;
    precise float _439 = _438 + _437;
    precise float _440 = 1.0 * _432;
    precise float _441 = _440 + _439;
    precise float _442 = _230 * _424;
    precise float _443 = _231 * _427;
    precise float _444 = _443 + _442;
    precise float _445 = _232 * _430;
    precise float _446 = _445 + _444;
    precise float _447 = 1.0 * _433;
    precise float _448 = _447 + _446;
    precise float _449 = _230 * _425;
    precise float _450 = _231 * _428;
    precise float _451 = _450 + _449;
    precise float _452 = _232 * _431;
    precise float _453 = _452 + _451;
    precise float _454 = 1.0 * _434;
    precise float _455 = _454 + _453;
    precise float _456 = _441 + 0.0;
    precise float _457 = _448 + 0.0;
    precise float _458 = _455 + 0.0;
    precise float _464 = _456 - cbSceneParam._m0[3u].x;
    precise float _465 = _457 - cbSceneParam._m0[3u].y;
    precise float _466 = _458 - cbSceneParam._m0[3u].z;
    precise float _492 = _464 * cbSceneParam._m0[24u].x;
    precise float _493 = _465 * cbSceneParam._m0[24u].y;
    precise float _494 = _493 + _492;
    precise float _495 = _466 * cbSceneParam._m0[24u].z;
    precise float _496 = _495 + _494;
    precise float _497 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _498 = _497 + _496;
    precise float _499 = _464 * cbSceneParam._m0[25u].x;
    precise float _500 = _465 * cbSceneParam._m0[25u].y;
    precise float _501 = _500 + _499;
    precise float _502 = _466 * cbSceneParam._m0[25u].z;
    precise float _503 = _502 + _501;
    precise float _504 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _505 = _504 + _503;
    precise float _506 = _464 * cbSceneParam._m0[26u].x;
    precise float _507 = _465 * cbSceneParam._m0[26u].y;
    precise float _508 = _507 + _506;
    precise float _509 = _466 * cbSceneParam._m0[26u].z;
    precise float _510 = _509 + _508;
    precise float _511 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _512 = _511 + _510;
    precise float _513 = _464 * cbSceneParam._m0[27u].x;
    precise float _514 = _465 * cbSceneParam._m0[27u].y;
    precise float _515 = _514 + _513;
    precise float _516 = _466 * cbSceneParam._m0[27u].z;
    precise float _517 = _516 + _515;
    precise float _518 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _519 = _518 + _517;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_Position.x = _498;
    gl_Position.y = _505;
    gl_Position.z = _512;
    gl_Position.w = _519;
}


