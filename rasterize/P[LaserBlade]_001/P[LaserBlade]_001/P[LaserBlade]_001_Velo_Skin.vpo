#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D P_LaserBlade_001_snp_0_Texture2D_10;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 10) in vec4 TEXCOORD_4;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out float TEXCOORD_1_1;
layout(location = 4, component = 1) out float TEXCOORD_2_1;
layout(location = 5) out vec4 TEXCOORD_4_1;
layout(location = 6) out vec4 TEXCOORD_8;
layout(location = 7) out vec4 TEXCOORD_11;
layout(location = 8) out vec4 TEXCOORD_16;
layout(location = 9) out vec4 TEXCOORD_17;
layout(location = 10) out vec3 TEXCOORD_18;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_2_1 = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_16.x = 0.0;
    TEXCOORD_16.y = 0.0;
    TEXCOORD_16.z = 0.0;
    TEXCOORD_16.w = 0.0;
    TEXCOORD_17.x = 0.0;
    TEXCOORD_17.y = 0.0;
    TEXCOORD_17.z = 0.0;
    TEXCOORD_17.w = 0.0;
    TEXCOORD_18.x = 0.0;
    TEXCOORD_18.y = 0.0;
    TEXCOORD_18.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _226 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _228 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _233 = _226 * cbTexScroll._m0[0u].x;
    precise float _234 = _228 * cbTexScroll._m0[0u].y;
    precise float _237 = _233 + cbTexScroll._m0[0u].z;
    precise float _238 = _234 + cbTexScroll._m0[0u].w;
    precise float _242 = float(NORMAL.x) + (-127.0);
    precise float _244 = float(NORMAL.y) + (-127.0);
    precise float _245 = float(NORMAL.z) + (-127.0);
    precise float _246 = _242 * 0.0078740157186985015869140625;
    precise float _248 = _244 * 0.0078740157186985015869140625;
    precise float _249 = _245 * 0.0078740157186985015869140625;
    float _258 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _259 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _260 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _271 = _246 * cbMtdParam._m0[25u].x;
    precise float _272 = _248 * cbMtdParam._m0[25u].y;
    precise float _273 = _249 * cbMtdParam._m0[25u].z;
    precise float _278 = cbPerFrame._m0[22u].x * cbMtdParam._m0[21u].y;
    precise float _284 = _278 * cbMtdParam._m0[24u].x;
    precise float _285 = _278 * cbMtdParam._m0[24u].y;
    precise float _286 = _237 + _284;
    precise float _287 = _238 + _285;
    precise float _294 = _286 * cbTextureTilingScale._m0[0u].x;
    precise float _295 = cbTextureTilingScale._m0[0u].y * _287;
    precise float _296 = cbTextureTilingScale._m0[0u].z + _294;
    precise float _297 = cbTextureTilingScale._m0[0u].w + _295;
    precise float _308 = textureLod(sampler2D(P_LaserBlade_001_snp_0_Texture2D_10, SS_DiffuseMap), vec2(_296, _297), 0.0).x * cbMtdParam._m0[19u].x;
    precise float _309 = _271 * _308;
    precise float _310 = _272 * _308;
    precise float _311 = _273 * _308;
    precise float _312 = _271 + _309;
    precise float _313 = _272 + _310;
    precise float _314 = _273 + _311;
    precise float _315 = _271 * 0.0;
    precise float _316 = _272 * 0.0;
    precise float _317 = _273 * 0.0;
    precise float _318 = _315 + _312;
    precise float _319 = _316 + _313;
    precise float _320 = _317 + _314;
    precise float _321 = TEXCOORD_4.x * _318;
    precise float _322 = TEXCOORD_4.y * _319;
    precise float _323 = TEXCOORD_4.z * _320;
    precise float _324 = POSITION.x + _321;
    precise float _325 = POSITION.y + _322;
    precise float _326 = POSITION.z + _323;
    uint _331 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _333 = texelFetch(g_InstanceIndexBuffer, int(_331));
    uint _334 = _333.x;
    precise float _335 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _340 = isnan(_335) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _335 : max(0.001000000047497451305389404296875, _335));
    precise float _342 = BLENDWEIGHT.x / _340;
    precise float _343 = BLENDWEIGHT.y / _340;
    precise float _344 = BLENDWEIGHT.z / _340;
    precise float _345 = BLENDWEIGHT.w / _340;
    uint _347 = _334 * 13u;
    uvec4 _352 = floatBitsToUint(cbInstanceData._m0[_347 + 4u]);
    uint _353 = _352.x;
    uint _355 = (_353 + uint(float(BLENDINDICES.x))) * 3u;
    uint _362 = _355 + 1u;
    uint _369 = _355 + 2u;
    precise float _376 = _342 * cbObjMatrix._m0[_355].x;
    precise float _377 = _342 * cbObjMatrix._m0[_362].x;
    precise float _378 = _342 * cbObjMatrix._m0[_369].x;
    precise float _379 = _342 * cbObjMatrix._m0[_355].y;
    precise float _380 = _342 * cbObjMatrix._m0[_362].y;
    precise float _381 = _342 * cbObjMatrix._m0[_369].y;
    precise float _382 = _342 * cbObjMatrix._m0[_355].z;
    precise float _383 = _342 * cbObjMatrix._m0[_362].z;
    precise float _384 = _342 * cbObjMatrix._m0[_369].z;
    precise float _385 = _342 * cbObjMatrix._m0[_355].w;
    precise float _386 = _342 * cbObjMatrix._m0[_362].w;
    precise float _387 = _342 * cbObjMatrix._m0[_369].w;
    uint _390 = (_353 + uint(float(BLENDINDICES.y))) * 3u;
    uint _397 = _390 + 1u;
    uint _404 = _390 + 2u;
    precise float _411 = _343 * cbObjMatrix._m0[_390].x;
    precise float _412 = _343 * cbObjMatrix._m0[_397].x;
    precise float _413 = _343 * cbObjMatrix._m0[_404].x;
    precise float _414 = _343 * cbObjMatrix._m0[_390].y;
    precise float _415 = _343 * cbObjMatrix._m0[_397].y;
    precise float _416 = _343 * cbObjMatrix._m0[_404].y;
    precise float _417 = _343 * cbObjMatrix._m0[_390].z;
    precise float _418 = _343 * cbObjMatrix._m0[_397].z;
    precise float _419 = _343 * cbObjMatrix._m0[_404].z;
    precise float _420 = _343 * cbObjMatrix._m0[_390].w;
    precise float _421 = _343 * cbObjMatrix._m0[_397].w;
    precise float _422 = _343 * cbObjMatrix._m0[_404].w;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    uint _437 = (_353 + uint(float(BLENDINDICES.z))) * 3u;
    uint _444 = _437 + 1u;
    uint _451 = _437 + 2u;
    precise float _458 = _344 * cbObjMatrix._m0[_437].x;
    precise float _459 = _344 * cbObjMatrix._m0[_444].x;
    precise float _460 = _344 * cbObjMatrix._m0[_451].x;
    precise float _461 = _344 * cbObjMatrix._m0[_437].y;
    precise float _462 = _344 * cbObjMatrix._m0[_444].y;
    precise float _463 = _344 * cbObjMatrix._m0[_451].y;
    precise float _464 = _344 * cbObjMatrix._m0[_437].z;
    precise float _465 = _344 * cbObjMatrix._m0[_444].z;
    precise float _466 = _344 * cbObjMatrix._m0[_451].z;
    precise float _467 = _344 * cbObjMatrix._m0[_437].w;
    precise float _468 = _344 * cbObjMatrix._m0[_444].w;
    precise float _469 = _344 * cbObjMatrix._m0[_451].w;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = _431 + _466;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    uint _484 = (_353 + uint(float(BLENDINDICES.w))) * 3u;
    uint _491 = _484 + 1u;
    uint _498 = _484 + 2u;
    precise float _505 = _345 * cbObjMatrix._m0[_484].x;
    precise float _506 = _345 * cbObjMatrix._m0[_491].x;
    precise float _507 = _345 * cbObjMatrix._m0[_498].x;
    precise float _508 = _345 * cbObjMatrix._m0[_484].y;
    precise float _509 = _345 * cbObjMatrix._m0[_491].y;
    precise float _510 = _345 * cbObjMatrix._m0[_498].y;
    precise float _511 = _345 * cbObjMatrix._m0[_484].z;
    precise float _512 = _345 * cbObjMatrix._m0[_491].z;
    precise float _513 = _345 * cbObjMatrix._m0[_498].z;
    precise float _514 = _345 * cbObjMatrix._m0[_484].w;
    precise float _515 = _345 * cbObjMatrix._m0[_491].w;
    precise float _516 = _345 * cbObjMatrix._m0[_498].w;
    precise float _517 = _470 + _505;
    precise float _518 = _471 + _506;
    precise float _519 = _472 + _507;
    precise float _520 = _473 + _508;
    precise float _521 = _474 + _509;
    precise float _522 = _475 + _510;
    precise float _523 = _476 + _511;
    precise float _524 = _477 + _512;
    precise float _525 = _478 + _513;
    precise float _526 = _479 + _514;
    precise float _527 = _480 + _515;
    precise float _528 = _481 + _516;
    precise float _529 = _324 * _517;
    precise float _530 = _325 * _520;
    precise float _531 = _530 + _529;
    precise float _532 = _326 * _523;
    precise float _533 = _532 + _531;
    precise float _534 = 1.0 * _526;
    precise float _535 = _534 + _533;
    precise float _536 = _324 * _518;
    precise float _537 = _325 * _521;
    precise float _538 = _537 + _536;
    precise float _539 = _326 * _524;
    precise float _540 = _539 + _538;
    precise float _541 = 1.0 * _527;
    precise float _542 = _541 + _540;
    precise float _543 = _324 * _519;
    precise float _544 = _325 * _522;
    precise float _545 = _544 + _543;
    precise float _546 = _326 * _525;
    precise float _547 = _546 + _545;
    precise float _548 = 1.0 * _528;
    precise float _549 = _548 + _547;
    float _720 = fma(_249, _523, fma(_248, _520, _517 * _246));
    float _723 = fma(_249, _524, fma(_248, _521, _518 * _246));
    float _726 = fma(_249, _525, fma(_248, _522, _519 * _246));
    precise float _737 = _535 + 0.0;
    precise float _738 = _542 + 0.0;
    precise float _739 = _549 + 0.0;
    float _746 = (((((cbPrevObjMatrix._m0[_390].w * _343) + (cbPrevObjMatrix._m0[_355].w * _342)) + (cbPrevObjMatrix._m0[_437].w * _344)) + (cbPrevObjMatrix._m0[_484].w * _345)) + fma(_326, (((cbPrevObjMatrix._m0[_390].z * _343) + (cbPrevObjMatrix._m0[_355].z * _342)) + (cbPrevObjMatrix._m0[_437].z * _344)) + (cbPrevObjMatrix._m0[_484].z * _345), fma(_325, (((cbPrevObjMatrix._m0[_390].y * _343) + (cbPrevObjMatrix._m0[_355].y * _342)) + (cbPrevObjMatrix._m0[_437].y * _344)) + (cbPrevObjMatrix._m0[_484].y * _345), ((((cbPrevObjMatrix._m0[_390].x * _343) + (cbPrevObjMatrix._m0[_355].x * _342)) + (cbPrevObjMatrix._m0[_437].x * _344)) + (cbPrevObjMatrix._m0[_484].x * _345)) * _324))) - cbSceneParam._m0[28u].x;
    float _747 = (((((cbPrevObjMatrix._m0[_397].w * _343) + (cbPrevObjMatrix._m0[_362].w * _342)) + (cbPrevObjMatrix._m0[_444].w * _344)) + (cbPrevObjMatrix._m0[_491].w * _345)) + fma(_326, (((cbPrevObjMatrix._m0[_397].z * _343) + (cbPrevObjMatrix._m0[_362].z * _342)) + (cbPrevObjMatrix._m0[_444].z * _344)) + (cbPrevObjMatrix._m0[_491].z * _345), fma(_325, (((cbPrevObjMatrix._m0[_397].y * _343) + (cbPrevObjMatrix._m0[_362].y * _342)) + (cbPrevObjMatrix._m0[_444].y * _344)) + (cbPrevObjMatrix._m0[_491].y * _345), ((((cbPrevObjMatrix._m0[_397].x * _343) + (cbPrevObjMatrix._m0[_362].x * _342)) + (cbPrevObjMatrix._m0[_444].x * _344)) + (cbPrevObjMatrix._m0[_491].x * _345)) * _324))) - cbSceneParam._m0[28u].y;
    float _748 = (((((cbPrevObjMatrix._m0[_404].w * _343) + (cbPrevObjMatrix._m0[_369].w * _342)) + (cbPrevObjMatrix._m0[_451].w * _344)) + (cbPrevObjMatrix._m0[_498].w * _345)) + fma(_326, (((cbPrevObjMatrix._m0[_404].z * _343) + (cbPrevObjMatrix._m0[_369].z * _342)) + (cbPrevObjMatrix._m0[_451].z * _344)) + (cbPrevObjMatrix._m0[_498].z * _345), fma(_325, (((cbPrevObjMatrix._m0[_404].y * _343) + (cbPrevObjMatrix._m0[_369].y * _342)) + (cbPrevObjMatrix._m0[_451].y * _344)) + (cbPrevObjMatrix._m0[_498].y * _345), ((((cbPrevObjMatrix._m0[_404].x * _343) + (cbPrevObjMatrix._m0[_369].x * _342)) + (cbPrevObjMatrix._m0[_451].x * _344)) + (cbPrevObjMatrix._m0[_498].x * _345)) * _324))) - cbSceneParam._m0[28u].z;
    precise float _798 = _737 - cbSceneParam._m0[3u].x;
    precise float _799 = _738 - cbSceneParam._m0[3u].y;
    precise float _800 = _739 - cbSceneParam._m0[3u].z;
    precise float _826 = _798 * cbSceneParam._m0[24u].x;
    precise float _827 = _799 * cbSceneParam._m0[24u].y;
    precise float _828 = _827 + _826;
    precise float _829 = _800 * cbSceneParam._m0[24u].z;
    precise float _830 = _829 + _828;
    precise float _831 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _832 = _831 + _830;
    precise float _833 = _798 * cbSceneParam._m0[25u].x;
    precise float _834 = _799 * cbSceneParam._m0[25u].y;
    precise float _835 = _834 + _833;
    precise float _836 = _800 * cbSceneParam._m0[25u].z;
    precise float _837 = _836 + _835;
    precise float _838 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _839 = _838 + _837;
    precise float _840 = _798 * cbSceneParam._m0[26u].x;
    precise float _841 = _799 * cbSceneParam._m0[26u].y;
    precise float _842 = _841 + _840;
    precise float _843 = _800 * cbSceneParam._m0[26u].z;
    precise float _844 = _843 + _842;
    precise float _845 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _846 = _845 + _844;
    precise float _847 = _798 * cbSceneParam._m0[27u].x;
    precise float _848 = _799 * cbSceneParam._m0[27u].y;
    precise float _849 = _848 + _847;
    precise float _850 = _800 * cbSceneParam._m0[27u].z;
    precise float _851 = _850 + _849;
    precise float _852 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _853 = _852 + _851;
    gl_Position.x = _832;
    gl_Position.y = _839;
    gl_Position.z = _846;
    gl_Position.w = _853;
    POSITION_1.x = _832;
    POSITION_1.y = _839;
    POSITION_1.z = _846;
    POSITION_1.w = _853;
    NORMAL_1.x = _720;
    NORMAL_1.y = _723;
    NORMAL_1.z = _726;
    NORMAL_1.w = float(_334);
    TANGENT_1.x = fma(_260, _523, fma(_259, _520, _517 * _258));
    TANGENT_1.y = fma(_260, _524, fma(_259, _521, _518 * _258));
    TANGENT_1.z = fma(_260, _525, fma(_259, _522, _519 * _258));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1 = _237;
    TEXCOORD_2_1 = _238;
    TEXCOORD_4_1.x = TEXCOORD_1.x;
    TEXCOORD_4_1.y = TEXCOORD_1.y;
    TEXCOORD_4_1.z = TEXCOORD_1.z;
    TEXCOORD_4_1.w = COLOR_1.w;
    TEXCOORD_8.x = TEXCOORD_3.x;
    TEXCOORD_8.y = TEXCOORD_3.y;
    TEXCOORD_8.z = TEXCOORD_3.z;
    TEXCOORD_8.w = COLOR_1.x;
    TEXCOORD_11.x = TEXCOORD_4.x;
    TEXCOORD_11.y = TEXCOORD_4.y;
    TEXCOORD_11.z = TEXCOORD_4.z;
    TEXCOORD_11.w = TEXCOORD_2.x;
    TEXCOORD_16.x = _832;
    TEXCOORD_16.y = _839;
    TEXCOORD_16.z = _846;
    TEXCOORD_16.w = _853;
    TEXCOORD_17.x = fma(_748, cbSceneParam._m0[29u].z, fma(_747, cbSceneParam._m0[29u].y, _746 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_17.y = fma(_748, cbSceneParam._m0[30u].z, fma(_747, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _746)) + cbSceneParam._m0[30u].w;
    TEXCOORD_17.z = fma(_748, cbSceneParam._m0[31u].z, fma(_747, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _746)) + cbSceneParam._m0[31u].w;
    TEXCOORD_17.w = fma(_748, cbSceneParam._m0[32u].z, fma(_747, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _746)) + cbSceneParam._m0[32u].w;
    TEXCOORD_18.x = _720;
    TEXCOORD_18.y = _723;
    TEXCOORD_18.z = _726;
    gl_ClipDistance[0u] = dot(vec4(_832, _839, _846, _853), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_832, _839, _846, _853), vec4(cbInstanceData._m0[_347 + 3u]));
}


