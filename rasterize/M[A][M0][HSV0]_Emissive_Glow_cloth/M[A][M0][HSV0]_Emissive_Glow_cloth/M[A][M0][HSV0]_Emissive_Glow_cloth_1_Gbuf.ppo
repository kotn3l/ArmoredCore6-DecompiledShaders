#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _109 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _110 = _109 * NORMAL.x;
    float _111 = _109 * NORMAL.y;
    float _112 = _109 * NORMAL.z;
    float _117;
    float _118;
    float _119;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _117 = (-0.0) - _110;
        _118 = (-0.0) - _111;
        _119 = (-0.0) - _112;
    }
    else
    {
        _117 = _110;
        _118 = _111;
        _119 = _112;
    }
    vec4 _139 = texture(sampler2D(M_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _145 = _139.x * cbMtdParam._m0[9u].x;
    float _146 = _139.y * cbMtdParam._m0[9u].y;
    float _147 = _139.z * cbMtdParam._m0[9u].z;
    vec4 _168 = texture(sampler2D(M_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _170 = _168.x;
    float _171 = _168.y;
    float _172 = _168.z;
    float _173 = cbMtdParam._m0[11u].w * cbMtdParam._m0[12u].x;
    float _174 = _173 * _170;
    float _175 = _173 * _171;
    float _176 = _173 * _172;
    float _177 = isnan(_175) ? _174 : (isnan(_174) ? _175 : max(_174, _175));
    float _178 = isnan(_176) ? _177 : (isnan(_177) ? _176 : max(_177, _176));
    float _181;
    float _183;
    if (_178 < 1.1920928955078125e-07)
    {
        _181 = 0.0;
        _183 = 0.0;
    }
    else
    {
        float _209 = isnan(_175) ? _174 : (isnan(_174) ? _175 : min(_174, _175));
        float _211 = _178 - (isnan(_176) ? _209 : (isnan(_209) ? _176 : min(_209, _176)));
        float _184 = _211 / _178;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        if (_211 < 1.1920928955078125e-07)
        {
            frontier_phi_3_4_ladder = 0.0;
            frontier_phi_3_4_ladder_1 = _184;
        }
        else
        {
            float _329;
            if (_178 == _174)
            {
                _329 = ((_173 * (_171 - _172)) / _211) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_14_12_ladder;
                if (_178 == _175)
                {
                    frontier_phi_14_12_ladder = (((_173 * (_172 - _170)) / _211) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_14_12_ladder = (((_173 * (_170 - _171)) / _211) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _329 = frontier_phi_14_12_ladder;
            }
            float _334 = (_329 < 0.0) ? (_329 + 1.0) : _329;
            frontier_phi_3_4_ladder = _334 - floor(_334);
            frontier_phi_3_4_ladder_1 = _184;
        }
        _181 = frontier_phi_3_4_ladder;
        _183 = frontier_phi_3_4_ladder_1;
    }
    float _185 = _183 + cbMtdParam._m0[11u].y;
    float _189 = fract(cbMtdParam._m0[11u].z + _181) * 6.0;
    uint _192 = uint(int(floor(_189)));
    float _194 = _189 - float(int(_192));
    float _197 = (1.0 - _185) * _178;
    float _200 = (1.0 - (_194 * _185)) * _178;
    float _204 = (1.0 - ((1.0 - _194) * _185)) * _178;
    float _213;
    float _215;
    float _216;
    if ((_192 == 0u) || (_192 == 6u))
    {
        _213 = _178;
        _215 = _204;
        _216 = _197;
    }
    else
    {
        float frontier_phi_5_6_ladder;
        float frontier_phi_5_6_ladder_1;
        float frontier_phi_5_6_ladder_2;
        if (_192 == 1u)
        {
            frontier_phi_5_6_ladder = _200;
            frontier_phi_5_6_ladder_1 = _178;
            frontier_phi_5_6_ladder_2 = _197;
        }
        else
        {
            float frontier_phi_5_6_ladder_10_ladder;
            float frontier_phi_5_6_ladder_10_ladder_1;
            float frontier_phi_5_6_ladder_10_ladder_2;
            if (_192 == 2u)
            {
                frontier_phi_5_6_ladder_10_ladder = _197;
                frontier_phi_5_6_ladder_10_ladder_1 = _178;
                frontier_phi_5_6_ladder_10_ladder_2 = _204;
            }
            else
            {
                float frontier_phi_5_6_ladder_10_ladder_13_ladder;
                float frontier_phi_5_6_ladder_10_ladder_13_ladder_1;
                float frontier_phi_5_6_ladder_10_ladder_13_ladder_2;
                if (_192 == 3u)
                {
                    frontier_phi_5_6_ladder_10_ladder_13_ladder = _197;
                    frontier_phi_5_6_ladder_10_ladder_13_ladder_1 = _200;
                    frontier_phi_5_6_ladder_10_ladder_13_ladder_2 = _178;
                }
                else
                {
                    bool _346 = _192 == 4u;
                    frontier_phi_5_6_ladder_10_ladder_13_ladder = _346 ? _204 : _178;
                    frontier_phi_5_6_ladder_10_ladder_13_ladder_1 = _197;
                    frontier_phi_5_6_ladder_10_ladder_13_ladder_2 = _346 ? _178 : _200;
                }
                frontier_phi_5_6_ladder_10_ladder = frontier_phi_5_6_ladder_10_ladder_13_ladder;
                frontier_phi_5_6_ladder_10_ladder_1 = frontier_phi_5_6_ladder_10_ladder_13_ladder_1;
                frontier_phi_5_6_ladder_10_ladder_2 = frontier_phi_5_6_ladder_10_ladder_13_ladder_2;
            }
            frontier_phi_5_6_ladder = frontier_phi_5_6_ladder_10_ladder;
            frontier_phi_5_6_ladder_1 = frontier_phi_5_6_ladder_10_ladder_1;
            frontier_phi_5_6_ladder_2 = frontier_phi_5_6_ladder_10_ladder_2;
        }
        _213 = frontier_phi_5_6_ladder;
        _215 = frontier_phi_5_6_ladder_1;
        _216 = frontier_phi_5_6_ladder_2;
    }
    float _221 = inversesqrt(dot(vec3(_117, _118, _119), vec3(_117, _118, _119)));
    float _404 = isnan(0.0) ? _145 : (isnan(_145) ? 0.0 : max(_145, 0.0));
    float _415 = isnan(0.0) ? _146 : (isnan(_146) ? 0.0 : max(_146, 0.0));
    float _426 = isnan(0.0) ? _147 : (isnan(_147) ? 0.0 : max(_147, 0.0));
    uint _239 = uint(roundEven(NORMAL.w)) * 13u;
    uint _241 = (_239 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _247 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _404 : (isnan(_404) ? 1.0 : min(_404, 1.0)))) * cbInstanceData._m0[_241].x;
    float _248 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _415 : (isnan(_415) ? 1.0 : min(_415, 1.0)))) * cbInstanceData._m0[_241].y;
    float _249 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _426 : (isnan(_426) ? 1.0 : min(_426, 1.0)))) * cbInstanceData._m0[_241].z;
    float _437 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
    float _448 = isnan(0.0) ? _248 : (isnan(_248) ? 0.0 : max(_248, 0.0));
    float _459 = isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0));
    uint _259 = _239 + 6u;
    float _297;
    float _298;
    float _299;
    float _300;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _297 = cbInstanceData._m0[_259].w;
        _298 = cbInstanceData._m0[_259].w;
        _299 = cbInstanceData._m0[_259].w;
        _300 = cbInstanceData._m0[_259].w;
    }
    else
    {
        _297 = cbMtdParam._m0[2u].w;
        _298 = 0.0;
        _299 = float(floatBitsToUint(cbInstanceData._m0[_239 + 5u]).x) * 0.0039215688593685626983642578125;
        _300 = TEXCOORD.z;
    }
    SV_Target.x = ((_117 * 0.5) * _221) + 0.500488758087158203125;
    SV_Target.y = ((_118 * 0.5) * _221) + 0.500488758087158203125;
    SV_Target.z = ((_119 * 0.5) * _221) + 0.500488758087158203125;
    SV_Target.w = _298;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _300;
    SV_Target_2.x = isnan(1.0) ? _437 : (isnan(_437) ? 1.0 : min(_437, 1.0));
    SV_Target_2.y = isnan(1.0) ? _448 : (isnan(_448) ? 1.0 : min(_448, 1.0));
    SV_Target_2.z = isnan(1.0) ? _459 : (isnan(_459) ? 1.0 : min(_459, 1.0));
    SV_Target_2.w = _299;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _298;
    SV_Target_4.x = (cbInstanceData._m0[_241].x * _213) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (cbInstanceData._m0[_241].y * _215) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (cbInstanceData._m0[_241].z * _216) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _297;
}


