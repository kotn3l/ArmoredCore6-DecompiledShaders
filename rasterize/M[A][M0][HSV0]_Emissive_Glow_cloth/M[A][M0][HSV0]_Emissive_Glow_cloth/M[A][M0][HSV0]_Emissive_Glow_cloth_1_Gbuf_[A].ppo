#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _124 = _123 * NORMAL.x;
    float _125 = _123 * NORMAL.y;
    float _126 = _123 * NORMAL.z;
    float _131;
    float _132;
    float _133;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _131 = (-0.0) - _124;
        _132 = (-0.0) - _125;
        _133 = (-0.0) - _126;
    }
    else
    {
        _131 = _124;
        _132 = _125;
        _133 = _126;
    }
    vec4 _153 = texture(sampler2D(M_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _159 = _153.x * cbMtdParam._m0[9u].x;
    float _160 = _153.y * cbMtdParam._m0[9u].y;
    float _161 = _153.z * cbMtdParam._m0[9u].z;
    vec4 _182 = texture(sampler2D(M_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _184 = _182.x;
    float _185 = _182.y;
    float _186 = _182.z;
    float _187 = cbMtdParam._m0[11u].w * cbMtdParam._m0[12u].x;
    float _188 = _187 * _184;
    float _189 = _187 * _185;
    float _190 = _187 * _186;
    float _191 = isnan(_189) ? _188 : (isnan(_188) ? _189 : max(_188, _189));
    float _192 = isnan(_190) ? _191 : (isnan(_191) ? _190 : max(_191, _190));
    float _195;
    float _197;
    if (_192 < 1.1920928955078125e-07)
    {
        _195 = 0.0;
        _197 = 0.0;
    }
    else
    {
        float _223 = isnan(_189) ? _188 : (isnan(_188) ? _189 : min(_188, _189));
        float _225 = _192 - (isnan(_190) ? _223 : (isnan(_223) ? _190 : min(_223, _190)));
        float _198 = _225 / _192;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        if (_225 < 1.1920928955078125e-07)
        {
            frontier_phi_3_4_ladder = 0.0;
            frontier_phi_3_4_ladder_1 = _198;
        }
        else
        {
            float _358;
            if (_192 == _188)
            {
                _358 = ((_187 * (_185 - _186)) / _225) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_17_12_ladder;
                if (_192 == _189)
                {
                    frontier_phi_17_12_ladder = (((_187 * (_186 - _184)) / _225) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_17_12_ladder = (((_187 * (_184 - _185)) / _225) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _358 = frontier_phi_17_12_ladder;
            }
            float _363 = (_358 < 0.0) ? (_358 + 1.0) : _358;
            frontier_phi_3_4_ladder = _363 - floor(_363);
            frontier_phi_3_4_ladder_1 = _198;
        }
        _195 = frontier_phi_3_4_ladder;
        _197 = frontier_phi_3_4_ladder_1;
    }
    float _199 = _197 + cbMtdParam._m0[11u].y;
    float _203 = fract(cbMtdParam._m0[11u].z + _195) * 6.0;
    uint _206 = uint(int(floor(_203)));
    float _208 = _203 - float(int(_206));
    float _211 = (1.0 - _199) * _192;
    float _214 = (1.0 - (_208 * _199)) * _192;
    float _218 = (1.0 - ((1.0 - _208) * _199)) * _192;
    float _227;
    float _229;
    float _230;
    if ((_206 == 0u) || (_206 == 6u))
    {
        _227 = _192;
        _229 = _218;
        _230 = _211;
    }
    else
    {
        float frontier_phi_5_6_ladder;
        float frontier_phi_5_6_ladder_1;
        float frontier_phi_5_6_ladder_2;
        if (_206 == 1u)
        {
            frontier_phi_5_6_ladder = _214;
            frontier_phi_5_6_ladder_1 = _192;
            frontier_phi_5_6_ladder_2 = _211;
        }
        else
        {
            float frontier_phi_5_6_ladder_10_ladder;
            float frontier_phi_5_6_ladder_10_ladder_1;
            float frontier_phi_5_6_ladder_10_ladder_2;
            if (_206 == 2u)
            {
                frontier_phi_5_6_ladder_10_ladder = _211;
                frontier_phi_5_6_ladder_10_ladder_1 = _192;
                frontier_phi_5_6_ladder_10_ladder_2 = _218;
            }
            else
            {
                float frontier_phi_5_6_ladder_10_ladder_16_ladder;
                float frontier_phi_5_6_ladder_10_ladder_16_ladder_1;
                float frontier_phi_5_6_ladder_10_ladder_16_ladder_2;
                if (_206 == 3u)
                {
                    frontier_phi_5_6_ladder_10_ladder_16_ladder = _211;
                    frontier_phi_5_6_ladder_10_ladder_16_ladder_1 = _214;
                    frontier_phi_5_6_ladder_10_ladder_16_ladder_2 = _192;
                }
                else
                {
                    bool _380 = _206 == 4u;
                    frontier_phi_5_6_ladder_10_ladder_16_ladder = _380 ? _218 : _192;
                    frontier_phi_5_6_ladder_10_ladder_16_ladder_1 = _211;
                    frontier_phi_5_6_ladder_10_ladder_16_ladder_2 = _380 ? _192 : _214;
                }
                frontier_phi_5_6_ladder_10_ladder = frontier_phi_5_6_ladder_10_ladder_16_ladder;
                frontier_phi_5_6_ladder_10_ladder_1 = frontier_phi_5_6_ladder_10_ladder_16_ladder_1;
                frontier_phi_5_6_ladder_10_ladder_2 = frontier_phi_5_6_ladder_10_ladder_16_ladder_2;
            }
            frontier_phi_5_6_ladder = frontier_phi_5_6_ladder_10_ladder;
            frontier_phi_5_6_ladder_1 = frontier_phi_5_6_ladder_10_ladder_1;
            frontier_phi_5_6_ladder_2 = frontier_phi_5_6_ladder_10_ladder_2;
        }
        _227 = frontier_phi_5_6_ladder;
        _229 = frontier_phi_5_6_ladder_1;
        _230 = frontier_phi_5_6_ladder_2;
    }
    float _235 = inversesqrt(dot(vec3(_131, _132, _133), vec3(_131, _132, _133)));
    float _512 = isnan(0.0) ? _159 : (isnan(_159) ? 0.0 : max(_159, 0.0));
    float _236 = isnan(1.0) ? _512 : (isnan(_512) ? 1.0 : min(_512, 1.0));
    float _523 = isnan(0.0) ? _160 : (isnan(_160) ? 0.0 : max(_160, 0.0));
    float _237 = isnan(1.0) ? _523 : (isnan(_523) ? 1.0 : min(_523, 1.0));
    float _534 = isnan(0.0) ? _161 : (isnan(_161) ? 0.0 : max(_161, 0.0));
    float _238 = isnan(1.0) ? _534 : (isnan(_534) ? 1.0 : min(_534, 1.0));
    uint _240 = uint(roundEven(NORMAL.w));
    vec4 _245 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _247 = _245.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _316 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _545 = isnan(0.0) ? _316 : (isnan(_316) ? 0.0 : max(_316, 0.0));
        float _317 = isnan(1.0) ? _545 : (isnan(_545) ? 1.0 : min(_545, 1.0));
        float _321 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _556 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _556 : (isnan(_556) ? 1.0 : min(_556, 1.0))) - _317)) + _317) < ((_247 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _375;
    uint _268;
    vec4 _272;
    float _279;
    float _280;
    float _281;
    float _282;
    float _283;
    float _284;
    float _287;
    float _291;
    vec4 _295;
    float _297;
    float _298;
    bool _309;
    for (;;)
    {
        _268 = _240 * 13u;
        _272 = cbInstanceData._m0[(_268 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _276 = (cbMtdParam._m0[0u].x * _236) * _272.x;
        float _277 = (cbMtdParam._m0[0u].y * _237) * _272.y;
        float _278 = (cbMtdParam._m0[0u].z * _238) * _272.z;
        float _567 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
        _279 = isnan(1.0) ? _567 : (isnan(_567) ? 1.0 : min(_567, 1.0));
        float _578 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
        _280 = isnan(1.0) ? _578 : (isnan(_578) ? 1.0 : min(_578, 1.0));
        float _589 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
        _281 = isnan(1.0) ? _589 : (isnan(_589) ? 1.0 : min(_589, 1.0));
        _282 = _272.x * _227;
        _283 = _272.y * _229;
        _284 = _272.z * _230;
        _287 = cbMtdParam._m0[2u].w;
        _291 = cbInstanceData._m0[_268 + 6u].w;
        float _292 = _247 + (-0.5);
        _295 = cbMtdParam._m0[1u];
        _297 = _295.y * _292;
        _298 = _292 * 0.999000012874603271484375;
        _309 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_309)
        {
            if ((cbInstanceData._m0[_268 + 7u].x + _298) < 0.5)
            {
                _375 = true;
                break;
            }
        }
        if ((_272.w < 1.0) && ((_272.w + _298) < 0.5))
        {
            _375 = true;
            break;
        }
        if ((_297 + 1.0) < _295.x)
        {
            _375 = true;
            break;
        }
        _375 = false;
        break;
    }
    if (_375)
    {
        discard_state = true;
    }
    float _411;
    float _412;
    float _413;
    float _414;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _411 = _291;
        _412 = _291;
        _413 = _291;
        _414 = _291;
    }
    else
    {
        _411 = _287;
        _412 = 0.0;
        _413 = float(floatBitsToUint(cbInstanceData._m0[_268 + 5u]).x) * 0.0039215688593685626983642578125;
        _414 = TEXCOORD.z;
    }
    SV_Target.x = ((_131 * 0.5) * _235) + 0.500488758087158203125;
    SV_Target.y = ((_132 * 0.5) * _235) + 0.500488758087158203125;
    SV_Target.z = ((_133 * 0.5) * _235) + 0.500488758087158203125;
    SV_Target.w = _412;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _414;
    SV_Target_2.x = _279;
    SV_Target_2.y = _280;
    SV_Target_2.z = _281;
    SV_Target_2.w = _413;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _412;
    SV_Target_4.x = _282 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _283 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _284 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _411;
    discard_exit();
}


