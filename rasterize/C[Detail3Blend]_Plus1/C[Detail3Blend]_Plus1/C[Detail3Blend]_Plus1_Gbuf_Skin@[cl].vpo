#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_4;
layout(location = 4, component = 1) out float TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_10 = 0.0;
    float _175 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _177 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _178 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _187 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _199 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _201 = texelFetch(g_InstanceIndexBuffer, int(_199));
    uint _202 = _201.x;
    precise float _203 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _208 = isnan(_203) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _203 : max(0.001000000047497451305389404296875, _203));
    precise float _210 = BLENDWEIGHT.x / _208;
    precise float _211 = BLENDWEIGHT.y / _208;
    precise float _212 = BLENDWEIGHT.z / _208;
    precise float _213 = BLENDWEIGHT.w / _208;
    uvec4 _220 = floatBitsToUint(cbInstanceData._m0[(_202 * 13u) + 4u]);
    uint _221 = _220.x;
    uint _223 = (_221 + uint(float(BLENDINDICES.x))) * 3u;
    uint _230 = _223 + 1u;
    uint _237 = _223 + 2u;
    precise float _244 = _210 * cbObjMatrix._m0[_223].x;
    precise float _245 = _210 * cbObjMatrix._m0[_230].x;
    precise float _246 = _210 * cbObjMatrix._m0[_237].x;
    precise float _247 = _210 * cbObjMatrix._m0[_223].y;
    precise float _248 = _210 * cbObjMatrix._m0[_230].y;
    precise float _249 = _210 * cbObjMatrix._m0[_237].y;
    precise float _250 = _210 * cbObjMatrix._m0[_223].z;
    precise float _251 = _210 * cbObjMatrix._m0[_230].z;
    precise float _252 = _210 * cbObjMatrix._m0[_237].z;
    precise float _253 = _210 * cbObjMatrix._m0[_223].w;
    precise float _254 = _210 * cbObjMatrix._m0[_230].w;
    precise float _255 = _210 * cbObjMatrix._m0[_237].w;
    uint _258 = (_221 + uint(float(BLENDINDICES.y))) * 3u;
    uint _265 = _258 + 1u;
    uint _272 = _258 + 2u;
    precise float _279 = _211 * cbObjMatrix._m0[_258].x;
    precise float _280 = _211 * cbObjMatrix._m0[_265].x;
    precise float _281 = _211 * cbObjMatrix._m0[_272].x;
    precise float _282 = _211 * cbObjMatrix._m0[_258].y;
    precise float _283 = _211 * cbObjMatrix._m0[_265].y;
    precise float _284 = _211 * cbObjMatrix._m0[_272].y;
    precise float _285 = _211 * cbObjMatrix._m0[_258].z;
    precise float _286 = _211 * cbObjMatrix._m0[_265].z;
    precise float _287 = _211 * cbObjMatrix._m0[_272].z;
    precise float _288 = _211 * cbObjMatrix._m0[_258].w;
    precise float _289 = _211 * cbObjMatrix._m0[_265].w;
    precise float _290 = _211 * cbObjMatrix._m0[_272].w;
    precise float _291 = _244 + _279;
    precise float _292 = _245 + _280;
    precise float _293 = _246 + _281;
    precise float _294 = _247 + _282;
    precise float _295 = _248 + _283;
    precise float _296 = _249 + _284;
    precise float _297 = _250 + _285;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    uint _305 = (_221 + uint(float(BLENDINDICES.z))) * 3u;
    uint _312 = _305 + 1u;
    uint _319 = _305 + 2u;
    precise float _326 = _212 * cbObjMatrix._m0[_305].x;
    precise float _327 = _212 * cbObjMatrix._m0[_312].x;
    precise float _328 = _212 * cbObjMatrix._m0[_319].x;
    precise float _329 = _212 * cbObjMatrix._m0[_305].y;
    precise float _330 = _212 * cbObjMatrix._m0[_312].y;
    precise float _331 = _212 * cbObjMatrix._m0[_319].y;
    precise float _332 = _212 * cbObjMatrix._m0[_305].z;
    precise float _333 = _212 * cbObjMatrix._m0[_312].z;
    precise float _334 = _212 * cbObjMatrix._m0[_319].z;
    precise float _335 = _212 * cbObjMatrix._m0[_305].w;
    precise float _336 = _212 * cbObjMatrix._m0[_312].w;
    precise float _337 = _212 * cbObjMatrix._m0[_319].w;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    uint _352 = (_221 + uint(float(BLENDINDICES.w))) * 3u;
    uint _359 = _352 + 1u;
    uint _366 = _352 + 2u;
    precise float _373 = _213 * cbObjMatrix._m0[_352].x;
    precise float _374 = _213 * cbObjMatrix._m0[_359].x;
    precise float _375 = _213 * cbObjMatrix._m0[_366].x;
    precise float _376 = _213 * cbObjMatrix._m0[_352].y;
    precise float _377 = _213 * cbObjMatrix._m0[_359].y;
    precise float _378 = _213 * cbObjMatrix._m0[_366].y;
    precise float _379 = _213 * cbObjMatrix._m0[_352].z;
    precise float _380 = _213 * cbObjMatrix._m0[_359].z;
    precise float _381 = _213 * cbObjMatrix._m0[_366].z;
    precise float _382 = _213 * cbObjMatrix._m0[_352].w;
    precise float _383 = _213 * cbObjMatrix._m0[_359].w;
    precise float _384 = _213 * cbObjMatrix._m0[_366].w;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = POSITION.x * _385;
    precise float _398 = POSITION.y * _388;
    precise float _399 = _398 + _397;
    precise float _400 = POSITION.z * _391;
    precise float _401 = _400 + _399;
    precise float _402 = 1.0 * _394;
    precise float _403 = _402 + _401;
    precise float _404 = POSITION.x * _386;
    precise float _405 = POSITION.y * _389;
    precise float _406 = _405 + _404;
    precise float _407 = POSITION.z * _392;
    precise float _408 = _407 + _406;
    precise float _409 = 1.0 * _395;
    precise float _410 = _409 + _408;
    precise float _411 = POSITION.x * _387;
    precise float _412 = POSITION.y * _390;
    precise float _413 = _412 + _411;
    precise float _414 = POSITION.z * _393;
    precise float _415 = _414 + _413;
    precise float _416 = 1.0 * _396;
    precise float _417 = _416 + _415;
    float _423 = cbSceneParam._m0[3u].x - _403;
    float _424 = cbSceneParam._m0[3u].y - _410;
    float _425 = cbSceneParam._m0[3u].z - _417;
    precise float _451 = _403 - cbSceneParam._m0[3u].x;
    precise float _452 = _410 - cbSceneParam._m0[3u].y;
    precise float _453 = _417 - cbSceneParam._m0[3u].z;
    precise float _481 = _451 * cbSceneParam._m0[24u].x;
    precise float _482 = _452 * cbSceneParam._m0[24u].y;
    precise float _483 = _482 + _481;
    precise float _484 = _453 * cbSceneParam._m0[24u].z;
    precise float _485 = _484 + _483;
    precise float _486 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _487 = _486 + _485;
    precise float _488 = _451 * cbSceneParam._m0[25u].x;
    precise float _489 = _452 * cbSceneParam._m0[25u].y;
    precise float _490 = _489 + _488;
    precise float _491 = _453 * cbSceneParam._m0[25u].z;
    precise float _492 = _491 + _490;
    precise float _493 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _494 = _493 + _492;
    precise float _495 = _451 * cbSceneParam._m0[26u].x;
    precise float _496 = _452 * cbSceneParam._m0[26u].y;
    precise float _497 = _496 + _495;
    precise float _498 = _453 * cbSceneParam._m0[26u].z;
    precise float _499 = _498 + _497;
    precise float _500 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _501 = _500 + _499;
    precise float _502 = _451 * cbSceneParam._m0[27u].x;
    precise float _503 = _452 * cbSceneParam._m0[27u].y;
    precise float _504 = _503 + _502;
    precise float _505 = _453 * cbSceneParam._m0[27u].z;
    precise float _506 = _505 + _504;
    precise float _507 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _508 = _507 + _506;
    gl_Position.x = _487;
    gl_Position.y = _494;
    gl_Position.z = _501;
    gl_Position.w = _508;
    NORMAL_1.x = fma(_178, _391, fma(_177, _388, _385 * _175));
    NORMAL_1.y = fma(_178, _392, fma(_177, _389, _386 * _175));
    NORMAL_1.z = fma(_178, _393, fma(_177, _390, _387 * _175));
    NORMAL_1.w = float(_202);
    TANGENT_1.x = fma(_189, _391, fma(_188, _388, _385 * _187));
    TANGENT_1.y = fma(_189, _392, fma(_188, _389, _386 * _187));
    TANGENT_1.z = fma(_189, _393, fma(_188, _390, _387 * _187));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_10 = sqrt(((_423 * _423) + (_424 * _424)) + (_425 * _425));
}


