#version 460

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 1) out vec4 COLOR;
layout(location = 2) out vec3 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    precise float _101 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _103 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _104 = _101 + 0.0;
    precise float _105 = _103 + 0.0;
    uint _115 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _119 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _124 = isnan(_119) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _119 : max(0.001000000047497451305389404296875, _119));
    precise float _126 = BLENDWEIGHT.x / _124;
    precise float _127 = BLENDWEIGHT.y / _124;
    precise float _128 = BLENDWEIGHT.z / _124;
    precise float _129 = BLENDWEIGHT.w / _124;
    uvec4 _137 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_115)).x * 13u) + 4u]);
    uint _138 = _137.x;
    uint _140 = (_138 + uint(float(BLENDINDICES.x))) * 3u;
    uint _147 = _140 + 1u;
    uint _154 = _140 + 2u;
    precise float _161 = _126 * cbObjMatrix._m0[_140].x;
    precise float _162 = _126 * cbObjMatrix._m0[_147].x;
    precise float _163 = _126 * cbObjMatrix._m0[_154].x;
    precise float _164 = _126 * cbObjMatrix._m0[_140].y;
    precise float _165 = _126 * cbObjMatrix._m0[_147].y;
    precise float _166 = _126 * cbObjMatrix._m0[_154].y;
    precise float _167 = _126 * cbObjMatrix._m0[_140].z;
    precise float _168 = _126 * cbObjMatrix._m0[_147].z;
    precise float _169 = _126 * cbObjMatrix._m0[_154].z;
    precise float _170 = _126 * cbObjMatrix._m0[_140].w;
    precise float _171 = _126 * cbObjMatrix._m0[_147].w;
    precise float _172 = _126 * cbObjMatrix._m0[_154].w;
    uint _175 = (_138 + uint(float(BLENDINDICES.y))) * 3u;
    uint _182 = _175 + 1u;
    uint _189 = _175 + 2u;
    precise float _196 = _127 * cbObjMatrix._m0[_175].x;
    precise float _197 = _127 * cbObjMatrix._m0[_182].x;
    precise float _198 = _127 * cbObjMatrix._m0[_189].x;
    precise float _199 = _127 * cbObjMatrix._m0[_175].y;
    precise float _200 = _127 * cbObjMatrix._m0[_182].y;
    precise float _201 = _127 * cbObjMatrix._m0[_189].y;
    precise float _202 = _127 * cbObjMatrix._m0[_175].z;
    precise float _203 = _127 * cbObjMatrix._m0[_182].z;
    precise float _204 = _127 * cbObjMatrix._m0[_189].z;
    precise float _205 = _127 * cbObjMatrix._m0[_175].w;
    precise float _206 = _127 * cbObjMatrix._m0[_182].w;
    precise float _207 = _127 * cbObjMatrix._m0[_189].w;
    precise float _208 = _161 + _196;
    precise float _209 = _162 + _197;
    precise float _210 = _163 + _198;
    precise float _211 = _164 + _199;
    precise float _212 = _165 + _200;
    precise float _213 = _166 + _201;
    precise float _214 = _167 + _202;
    precise float _215 = _168 + _203;
    precise float _216 = _169 + _204;
    precise float _217 = _170 + _205;
    precise float _218 = _171 + _206;
    precise float _219 = _172 + _207;
    uint _222 = (_138 + uint(float(BLENDINDICES.z))) * 3u;
    uint _229 = _222 + 1u;
    uint _236 = _222 + 2u;
    precise float _243 = _128 * cbObjMatrix._m0[_222].x;
    precise float _244 = _128 * cbObjMatrix._m0[_229].x;
    precise float _245 = _128 * cbObjMatrix._m0[_236].x;
    precise float _246 = _128 * cbObjMatrix._m0[_222].y;
    precise float _247 = _128 * cbObjMatrix._m0[_229].y;
    precise float _248 = _128 * cbObjMatrix._m0[_236].y;
    precise float _249 = _128 * cbObjMatrix._m0[_222].z;
    precise float _250 = _128 * cbObjMatrix._m0[_229].z;
    precise float _251 = _128 * cbObjMatrix._m0[_236].z;
    precise float _252 = _128 * cbObjMatrix._m0[_222].w;
    precise float _253 = _128 * cbObjMatrix._m0[_229].w;
    precise float _254 = _128 * cbObjMatrix._m0[_236].w;
    precise float _255 = _208 + _243;
    precise float _256 = _209 + _244;
    precise float _257 = _210 + _245;
    precise float _258 = _211 + _246;
    precise float _259 = _212 + _247;
    precise float _260 = _213 + _248;
    precise float _261 = _214 + _249;
    precise float _262 = _215 + _250;
    precise float _263 = _216 + _251;
    precise float _264 = _217 + _252;
    precise float _265 = _218 + _253;
    precise float _266 = _219 + _254;
    uint _269 = (_138 + uint(float(BLENDINDICES.w))) * 3u;
    uint _276 = _269 + 1u;
    uint _283 = _269 + 2u;
    precise float _290 = _129 * cbObjMatrix._m0[_269].x;
    precise float _291 = _129 * cbObjMatrix._m0[_276].x;
    precise float _292 = _129 * cbObjMatrix._m0[_283].x;
    precise float _293 = _129 * cbObjMatrix._m0[_269].y;
    precise float _294 = _129 * cbObjMatrix._m0[_276].y;
    precise float _295 = _129 * cbObjMatrix._m0[_283].y;
    precise float _296 = _129 * cbObjMatrix._m0[_269].z;
    precise float _297 = _129 * cbObjMatrix._m0[_276].z;
    precise float _298 = _129 * cbObjMatrix._m0[_283].z;
    precise float _299 = _129 * cbObjMatrix._m0[_269].w;
    precise float _300 = _129 * cbObjMatrix._m0[_276].w;
    precise float _301 = _129 * cbObjMatrix._m0[_283].w;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    precise float _308 = _261 + _296;
    precise float _309 = _262 + _297;
    precise float _310 = _263 + _298;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    precise float _314 = POSITION.x * _302;
    precise float _315 = POSITION.y * _305;
    precise float _316 = _315 + _314;
    precise float _317 = POSITION.z * _308;
    precise float _318 = _317 + _316;
    precise float _319 = 1.0 * _311;
    precise float _320 = _319 + _318;
    precise float _321 = POSITION.x * _303;
    precise float _322 = POSITION.y * _306;
    precise float _323 = _322 + _321;
    precise float _324 = POSITION.z * _309;
    precise float _325 = _324 + _323;
    precise float _326 = 1.0 * _312;
    precise float _327 = _326 + _325;
    precise float _328 = POSITION.x * _304;
    precise float _329 = POSITION.y * _307;
    precise float _330 = _329 + _328;
    precise float _331 = POSITION.z * _310;
    precise float _332 = _331 + _330;
    precise float _333 = 1.0 * _313;
    precise float _334 = _333 + _332;
    precise float _335 = _104 * 2.0;
    precise float _337 = _105 * 2.0;
    precise float _338 = _335 + (-1.0);
    precise float _340 = 1.0 - _337;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    gl_Position.x = _338;
    gl_Position.y = _340;
    gl_Position.z = 0.0;
    gl_Position.w = 1.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_1.x = _320;
    TEXCOORD_1.y = _327;
    TEXCOORD_1.z = _334;
}


