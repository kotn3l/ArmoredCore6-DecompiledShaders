#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1149;
float _3376;
float _3377;
float _3378;
float _3379;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _206 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _207 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _208 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _214 = inversesqrt(dot(vec3(_206, _207, _208), vec3(_206, _207, _208)));
    float _215 = _214 * _206;
    float _216 = _214 * _207;
    float _217 = _214 * _208;
    float _221 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _222 = _221 * NORMAL.x;
    float _223 = _221 * NORMAL.y;
    float _224 = _221 * NORMAL.z;
    float _228 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _229 = _228 * TANGENT.x;
    float _230 = _228 * TANGENT.y;
    float _231 = _228 * TANGENT.z;
    float _236;
    float _237;
    float _238;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _236 = (-0.0) - _222;
        _237 = (-0.0) - _223;
        _238 = (-0.0) - _224;
    }
    else
    {
        _236 = _222;
        _237 = _223;
        _238 = _224;
    }
    float _283 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _293 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _283);
    float _294 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _283);
    float _295 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _283);
    vec4 _309 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _318 = (_309.x * 2.0) + (-1.0);
    float _320 = (_309.y * 2.0) + (-1.0);
    float _321 = dot(vec2(_318, _320), vec2(_318, _320));
    float _3388 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
    float _327 = sqrt(1.0 - (isnan(1.0) ? _3388 : (isnan(_3388) ? 1.0 : min(_3388, 1.0))));
    float _330 = fma(_327, _236, fma(_320, _229, _318 * _215));
    float _333 = fma(_327, _237, fma(_320, _230, _318 * _216));
    float _336 = fma(_327, _238, fma(_320, _231, _318 * _217));
    float _340 = inversesqrt(dot(vec3(_330, _333, _336), vec3(_330, _333, _336)));
    vec4 _354 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _359 = _354.w;
    float _371 = dot(vec3(_293, _294, _295), vec3(_215, _216, _217));
    float _374 = dot(vec3(_293, _294, _295), vec3(_229, _230, _231));
    float _377 = dot(vec3(_293, _294, _295), vec3(_236, _237, _238));
    float _383 = inversesqrt(dot(vec3(_371, _374, _377), vec3(_371, _374, _377)));
    float _405 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _425 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_371 * cbMtdParam._m0[14u].x) * _383) * _405) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_374 * cbMtdParam._m0[14u].x) * _383) * _405) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _449 = inversesqrt(dot(vec3(_293, _294, _295), vec3(_293, _294, _295)));
    float _450 = _449 * _293;
    float _451 = _449 * _294;
    float _452 = _449 * _295;
    float _453 = dot(vec4(_450, _451, _452, 0.0), vec4(_236, _237, _238, 0.0));
    float _456 = _453 - cbMtdParam._m0[15u].z;
    float _3399 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
    float _463 = exp2(log2(1.0 - (isnan(1.0) ? _3399 : (isnan(_3399) ? 1.0 : min(_3399, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _478 = ((((_354.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _425.x) * cbMtdParam._m0[9u].x) * ((_463 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _483 = ((((_354.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _425.y) * cbMtdParam._m0[9u].y) * ((_463 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _488 = ((((_354.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _425.z) * cbMtdParam._m0[9u].z) * ((_463 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    vec4 _504 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _516 = cbMtdParam._m0[17u].z + _309.z;
    float _522 = (_516 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_504.z - _516));
    float _528 = ((((_504.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _318;
    float _529 = ((((_504.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _320;
    vec4 _541 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _545 = cbMtdParam._m0[16u].w * _541.x;
    float _568 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + ((_340 * _330) * cbMtdParam._m0[18u].y));
    float _569 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + ((_340 * _333) * cbMtdParam._m0[18u].y));
    float _576 = isnan(cbInstanceData._m0[8u].x) ? _568 : (isnan(_568) ? cbInstanceData._m0[8u].x : max(_568, cbInstanceData._m0[8u].x));
    float _577 = isnan(cbInstanceData._m0[8u].y) ? _569 : (isnan(_569) ? cbInstanceData._m0[8u].y : max(_569, cbInstanceData._m0[8u].y));
    vec4 _581 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _576 : (isnan(_576) ? cbInstanceData._m0[8u].z : min(_576, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _577 : (isnan(_577) ? cbInstanceData._m0[8u].w : min(_577, cbInstanceData._m0[8u].w))));
    float _614 = _453 - cbMtdParam._m0[15u].x;
    float _3435 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _624 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3435 : (isnan(_3435) ? 1.0 : min(_3435, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3451 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
    float _625 = isnan(1.0) ? _3451 : (isnan(_3451) ? 1.0 : min(_3451, 1.0));
    float _629 = fma(_327, _236, fma(_529, _229, _528 * _215));
    float _632 = fma(_327, _237, fma(_529, _230, _528 * _216));
    float _635 = fma(_327, _238, fma(_529, _231, _528 * _217));
    float _639 = inversesqrt(dot(vec3(_629, _632, _635), vec3(_629, _632, _635)));
    float _640 = _639 * _629;
    float _641 = _639 * _632;
    float _642 = _639 * _635;
    float _3462 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _643 = isnan(1.0) ? _3462 : (isnan(_3462) ? 1.0 : min(_3462, 1.0));
    float _3473 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _644 = isnan(1.0) ? _3473 : (isnan(_3473) ? 1.0 : min(_3473, 1.0));
    float _645 = isnan(0.0) ? _545 : (isnan(_545) ? 0.0 : max(_545, 0.0));
    float _3489 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _3500 = isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0));
    float _3511 = isnan(0.0) ? _488 : (isnan(_488) ? 0.0 : max(_488, 0.0));
    float _664 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _669 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _671 = _669.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _828 = sqrt(((_293 * _293) + (_294 * _294)) + (_295 * _295));
        float _834 = (cbMatDynParam._m0[5u].x * _828) + cbMatDynParam._m0[5u].y;
        float _3522 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
        float _835 = isnan(1.0) ? _3522 : (isnan(_3522) ? 1.0 : min(_3522, 1.0));
        float _839 = (cbMatDynParam._m0[5u].z * _828) + cbMatDynParam._m0[5u].w;
        float _3533 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3533 : (isnan(_3533) ? 1.0 : min(_3533, 1.0))) - _835)) + _835) < ((_671 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _682 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _683 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _701 = fma(_642, cbSceneParam._m0[5u].z, fma(_641, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _640));
    float _704 = fma(_642, cbSceneParam._m0[6u].z, fma(_641, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _640));
    float _707 = fma(_642, cbSceneParam._m0[7u].z, fma(_641, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _640));
    uint _720 = uint(roundEven(NORMAL.w)) * 13u;
    uint _721 = _720 + 9u;
    uint _722 = _721 + uint(cbMatDynParam._m0[0u].w);
    float _728 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3489 : (isnan(_3489) ? 1.0 : min(_3489, 1.0)))) * cbInstanceData._m0[_722].x;
    float _729 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3500 : (isnan(_3500) ? 1.0 : min(_3500, 1.0)))) * cbInstanceData._m0[_722].y;
    float _730 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3511 : (isnan(_3511) ? 1.0 : min(_3511, 1.0)))) * cbInstanceData._m0[_722].z;
    float _3544 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _731 = isnan(1.0) ? _3544 : (isnan(_3544) ? 1.0 : min(_3544, 1.0));
    float _3555 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
    float _732 = isnan(1.0) ? _3555 : (isnan(_3555) ? 1.0 : min(_3555, 1.0));
    float _3566 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _733 = isnan(1.0) ? _3566 : (isnan(_3566) ? 1.0 : min(_3566, 1.0));
    vec4 _741 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _682, cbSceneParam._m0[86u].y * _683));
    float _744 = _741.x * TEXCOORD_5.w;
    float _745 = dot(vec3(_640, _641, _642), vec3(_450, _451, _452));
    float _748 = _745 * 2.0;
    float _752 = (_748 * _640) - _450;
    float _753 = (_748 * _641) - _451;
    float _754 = (_748 * _642) - _452;
    float _755 = dot(vec3(_450, _451, _452), vec3(_640, _641, _642));
    float _758 = abs(_755);
    float _3577 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
    float _759 = isnan(1.0) ? _3577 : (isnan(_3577) ? 1.0 : min(_3577, 1.0));
    float _765 = sqrt(_644);
    float _777 = exp2((_765 * 5.0) * log2(1.0 - (_759 * 0.999000012874603271484375))) / (4.0 - (_765 * 3.0));
    float _809 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _813 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _817 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1148;
    float _1150;
    float _1151;
    float _1152;
    float _1153;
    float _1154;
    float _1155;
    float _1156;
    float _1157;
    float _1158;
    float _1159;
    float _1160;
    float _1161;
    float _1162;
    float _1163;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _873 = fma(_817, cbModelParam._m0[26u].z, fma(_813, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _809));
        float _877 = fma(_817, cbModelParam._m0[27u].z, fma(_813, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _809));
        float _881 = fma(_817, cbModelParam._m0[28u].z, fma(_813, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _809));
        float _906 = _809 + _640;
        float _907 = _813 + _641;
        float _908 = _817 + _642;
        float _918 = fma(_908, cbModelParam._m0[26u].z, fma(_907, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _906)) - _873;
        float _919 = fma(_908, cbModelParam._m0[27u].z, fma(_907, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _906)) - _877;
        float _920 = fma(_908, cbModelParam._m0[28u].z, fma(_907, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _906)) - _881;
        float _924 = inversesqrt(dot(vec3(_918, _919, _920), vec3(_918, _919, _920)));
        float _937 = ((_924 * _918) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_873 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _938 = ((_924 * _919) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_877 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _939 = ((_924 * _920) / cbModelParam._m0[34u].z) + ((((((_881 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _942 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_937, _938, _939), 0.0);
        vec4 _949 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_937, _938, _939), 0.0);
        vec4 _956 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_937, _938, _939), 0.0);
        vec4 _963 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_937, _938, _939), 0.0);
        float _976 = exp2((_942.w + (-0.5)) * 20.0) * 2.0;
        float _977 = _976 * (_942.x + (-0.5));
        float _978 = _976 * (_942.y + (-0.5));
        float _979 = _976 * (_942.z + (-0.5));
        float _986 = exp2((_949.w + (-0.5)) * 20.0) * 2.0;
        float _987 = _986 * (_949.x + (-0.5));
        float _988 = _986 * (_949.y + (-0.5));
        float _989 = _986 * (_949.z + (-0.5));
        float _996 = exp2((_956.w + (-0.5)) * 20.0) * 2.0;
        float _997 = _996 * (_956.x + (-0.5));
        float _998 = _996 * (_956.y + (-0.5));
        float _999 = _996 * (_956.z + (-0.5));
        float _1006 = exp2((_963.w + (-0.5)) * 20.0) * 2.0;
        float _1007 = _1006 * (_963.x + (-0.5));
        float _1008 = _1006 * (_963.y + (-0.5));
        float _1009 = _1006 * (_963.z + (-0.5));
        float _1010 = isnan(0.0) ? _1007 : (isnan(_1007) ? 0.0 : max(_1007, 0.0));
        float _1011 = isnan(0.0) ? _1008 : (isnan(_1008) ? 0.0 : max(_1008, 0.0));
        float _1012 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
        float _1013 = _977 * 0.5;
        float _1014 = _987 * 0.5;
        float _1015 = _997 * 0.5;
        float _1016 = dot(vec3(_1013, _1014, _1015), vec3(_1013, _1014, _1015));
        float _1021 = (_1016 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1016);
        float _1030 = (dot(vec3(_640, _641, _642), vec3(_1021 * _1013, _1021 * _1014, _1021 * _1015)) + 1.0) * 0.5;
        float _3603 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
        float _1040 = sqrt(((_1014 * _1014) + (_1013 * _1013)) + (_1015 * _1015)) / (_1010 + 9.9999997473787516355514526367188e-06);
        float _3614 = isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0));
        float _1041 = isnan(1.0) ? _3614 : (isnan(_3614) ? 1.0 : min(_3614, 1.0));
        float _1042 = _1041 * 2.0;
        float _1046 = (1.0 - _1041) / (_1041 + 1.0);
        float _3625 = isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0));
        float _1047 = isnan(1.0) ? _3625 : (isnan(_3625) ? 1.0 : min(_3625, 1.0));
        float _1056 = ((((1.0 - _1047) * (_1042 + 2.0)) * exp2(log2(isnan(1.0) ? _3603 : (isnan(_3603) ? 1.0 : min(_3603, 1.0))) * (_1042 + 1.0))) + _1047) * _1010;
        float _1057 = _978 * 0.5;
        float _1058 = _988 * 0.5;
        float _1059 = _998 * 0.5;
        float _1060 = dot(vec3(_1057, _1058, _1059), vec3(_1057, _1058, _1059));
        float _1065 = (_1060 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1060);
        float _1073 = (dot(vec3(_640, _641, _642), vec3(_1065 * _1057, _1065 * _1058, _1065 * _1059)) + 1.0) * 0.5;
        float _3636 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
        float _1082 = sqrt(((_1058 * _1058) + (_1057 * _1057)) + (_1059 * _1059)) / (_1011 + 9.9999997473787516355514526367188e-06);
        float _3647 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
        float _1083 = isnan(1.0) ? _3647 : (isnan(_3647) ? 1.0 : min(_3647, 1.0));
        float _1084 = _1083 * 2.0;
        float _1088 = (1.0 - _1083) / (_1083 + 1.0);
        float _3658 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
        float _1089 = isnan(1.0) ? _3658 : (isnan(_3658) ? 1.0 : min(_3658, 1.0));
        float _1098 = ((((1.0 - _1089) * (_1084 + 2.0)) * exp2(log2(isnan(1.0) ? _3636 : (isnan(_3636) ? 1.0 : min(_3636, 1.0))) * (_1084 + 1.0))) + _1089) * _1011;
        float _1099 = _979 * 0.5;
        float _1100 = _989 * 0.5;
        float _1101 = _999 * 0.5;
        float _1102 = dot(vec3(_1099, _1100, _1101), vec3(_1099, _1100, _1101));
        float _1107 = (_1102 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1102);
        float _1115 = (dot(vec3(_640, _641, _642), vec3(_1107 * _1099, _1107 * _1100, _1107 * _1101)) + 1.0) * 0.5;
        float _3669 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
        float _1124 = sqrt(((_1100 * _1100) + (_1099 * _1099)) + (_1101 * _1101)) / (_1012 + 9.9999997473787516355514526367188e-06);
        float _3680 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1125 = isnan(1.0) ? _3680 : (isnan(_3680) ? 1.0 : min(_3680, 1.0));
        float _1126 = _1125 * 2.0;
        float _1130 = (1.0 - _1125) / (_1125 + 1.0);
        float _3691 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
        float _1131 = isnan(1.0) ? _3691 : (isnan(_3691) ? 1.0 : min(_3691, 1.0));
        float _1140 = ((((1.0 - _1131) * (_1126 + 2.0)) * exp2(log2(isnan(1.0) ? _3669 : (isnan(_3669) ? 1.0 : min(_3669, 1.0))) * (_1126 + 1.0))) + _1131) * _1012;
        _1148 = _979;
        _1150 = _978;
        _1151 = _977;
        _1152 = _989;
        _1153 = _988;
        _1154 = _987;
        _1155 = _999;
        _1156 = _998;
        _1157 = _997;
        _1158 = _1012;
        _1159 = _1011;
        _1160 = _1010;
        _1161 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0)));
        _1162 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0)));
        _1163 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0)));
    }
    else
    {
        _1148 = _1149;
        _1150 = _1149;
        _1151 = _1149;
        _1152 = _1149;
        _1153 = _1149;
        _1154 = _1149;
        _1155 = _1149;
        _1156 = _1149;
        _1157 = _1149;
        _1158 = _1149;
        _1159 = _1149;
        _1160 = _1149;
        _1161 = 0.0;
        _1162 = 0.0;
        _1163 = 0.0;
    }
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1192 = fma(_817, cbModelParam._m0[30u].z, fma(_813, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _809));
        float _1196 = fma(_817, cbModelParam._m0[31u].z, fma(_813, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _809));
        float _1200 = fma(_817, cbModelParam._m0[32u].z, fma(_813, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _809));
        float _1223 = _809 + _640;
        float _1224 = _813 + _641;
        float _1225 = _817 + _642;
        float _1235 = fma(_1225, cbModelParam._m0[30u].z, fma(_1224, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1223)) - _1192;
        float _1236 = fma(_1225, cbModelParam._m0[31u].z, fma(_1224, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1223)) - _1196;
        float _1237 = fma(_1225, cbModelParam._m0[32u].z, fma(_1224, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1223)) - _1200;
        float _1241 = inversesqrt(dot(vec3(_1235, _1236, _1237), vec3(_1235, _1236, _1237)));
        float _1254 = ((_1241 * _1235) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1192 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1255 = ((_1241 * _1236) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1196 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1256 = ((_1241 * _1237) / cbModelParam._m0[35u].z) + ((((((_1200 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1258 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1254, _1255, _1256), 0.0);
        vec4 _1265 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1254, _1255, _1256), 0.0);
        vec4 _1272 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1254, _1255, _1256), 0.0);
        vec4 _1279 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1254, _1255, _1256), 0.0);
        float _1291 = exp2((_1258.w + (-0.5)) * 20.0) * 2.0;
        float _1292 = _1291 * (_1258.x + (-0.5));
        float _1293 = _1291 * (_1258.y + (-0.5));
        float _1294 = _1291 * (_1258.z + (-0.5));
        float _1301 = exp2((_1265.w + (-0.5)) * 20.0) * 2.0;
        float _1302 = _1301 * (_1265.x + (-0.5));
        float _1303 = _1301 * (_1265.y + (-0.5));
        float _1304 = _1301 * (_1265.z + (-0.5));
        float _1311 = exp2((_1272.w + (-0.5)) * 20.0) * 2.0;
        float _1312 = _1311 * (_1272.x + (-0.5));
        float _1313 = _1311 * (_1272.y + (-0.5));
        float _1314 = _1311 * (_1272.z + (-0.5));
        float _1321 = exp2((_1279.w + (-0.5)) * 20.0) * 2.0;
        float _1322 = _1321 * (_1279.x + (-0.5));
        float _1323 = _1321 * (_1279.y + (-0.5));
        float _1324 = _1321 * (_1279.z + (-0.5));
        float _1325 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1326 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
        float _1327 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1328 = _1292 * 0.5;
        float _1329 = _1302 * 0.5;
        float _1330 = _1312 * 0.5;
        float _1331 = dot(vec3(_1328, _1329, _1330), vec3(_1328, _1329, _1330));
        float _1336 = (_1331 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1331);
        float _1344 = (dot(vec3(_640, _641, _642), vec3(_1336 * _1328, _1336 * _1329, _1336 * _1330)) + 1.0) * 0.5;
        float _3732 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
        float _1353 = sqrt(((_1329 * _1329) + (_1328 * _1328)) + (_1330 * _1330)) / (_1325 + 9.9999997473787516355514526367188e-06);
        float _3743 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1354 = isnan(1.0) ? _3743 : (isnan(_3743) ? 1.0 : min(_3743, 1.0));
        float _1355 = _1354 * 2.0;
        float _1359 = (1.0 - _1354) / (_1354 + 1.0);
        float _3754 = isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0));
        float _1360 = isnan(1.0) ? _3754 : (isnan(_3754) ? 1.0 : min(_3754, 1.0));
        float _1369 = ((((1.0 - _1360) * (_1355 + 2.0)) * exp2(log2(isnan(1.0) ? _3732 : (isnan(_3732) ? 1.0 : min(_3732, 1.0))) * (_1355 + 1.0))) + _1360) * _1325;
        float _1370 = _1293 * 0.5;
        float _1371 = _1303 * 0.5;
        float _1372 = _1313 * 0.5;
        float _1373 = dot(vec3(_1370, _1371, _1372), vec3(_1370, _1371, _1372));
        float _1378 = (_1373 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1373);
        float _1386 = (dot(vec3(_640, _641, _642), vec3(_1378 * _1370, _1378 * _1371, _1378 * _1372)) + 1.0) * 0.5;
        float _3765 = isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0));
        float _1395 = sqrt(((_1371 * _1371) + (_1370 * _1370)) + (_1372 * _1372)) / (_1326 + 9.9999997473787516355514526367188e-06);
        float _3776 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1396 = isnan(1.0) ? _3776 : (isnan(_3776) ? 1.0 : min(_3776, 1.0));
        float _1397 = _1396 * 2.0;
        float _1401 = (1.0 - _1396) / (_1396 + 1.0);
        float _3787 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1402 = isnan(1.0) ? _3787 : (isnan(_3787) ? 1.0 : min(_3787, 1.0));
        float _1411 = ((((1.0 - _1402) * (_1397 + 2.0)) * exp2(log2(isnan(1.0) ? _3765 : (isnan(_3765) ? 1.0 : min(_3765, 1.0))) * (_1397 + 1.0))) + _1402) * _1326;
        float _1412 = _1294 * 0.5;
        float _1413 = _1304 * 0.5;
        float _1414 = _1314 * 0.5;
        float _1415 = dot(vec3(_1412, _1413, _1414), vec3(_1412, _1413, _1414));
        float _1420 = (_1415 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1415);
        float _1428 = (dot(vec3(_640, _641, _642), vec3(_1420 * _1412, _1420 * _1413, _1420 * _1414)) + 1.0) * 0.5;
        float _3798 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1437 = sqrt(((_1413 * _1413) + (_1412 * _1412)) + (_1414 * _1414)) / (_1327 + 9.9999997473787516355514526367188e-06);
        float _3809 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1438 = isnan(1.0) ? _3809 : (isnan(_3809) ? 1.0 : min(_3809, 1.0));
        float _1439 = _1438 * 2.0;
        float _1443 = (1.0 - _1438) / (_1438 + 1.0);
        float _3820 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1444 = isnan(1.0) ? _3820 : (isnan(_3820) ? 1.0 : min(_3820, 1.0));
        float _1453 = ((((1.0 - _1444) * (_1439 + 2.0)) * exp2(log2(isnan(1.0) ? _3798 : (isnan(_3798) ? 1.0 : min(_3798, 1.0))) * (_1439 + 1.0))) + _1444) * _1327;
        _1461 = _1294;
        _1462 = _1293;
        _1463 = _1292;
        _1464 = _1304;
        _1465 = _1303;
        _1466 = _1302;
        _1467 = _1314;
        _1468 = _1313;
        _1469 = _1312;
        _1470 = _1327;
        _1471 = _1326;
        _1472 = _1325;
        _1473 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0)));
        _1474 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0)));
        _1475 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0)));
    }
    else
    {
        _1461 = _1149;
        _1462 = _1149;
        _1463 = _1149;
        _1464 = _1149;
        _1465 = _1149;
        _1466 = _1149;
        _1467 = _1149;
        _1468 = _1149;
        _1469 = _1149;
        _1470 = _1149;
        _1471 = _1149;
        _1472 = _1149;
        _1473 = 0.0;
        _1474 = 0.0;
        _1475 = 0.0;
    }
    float _1485 = (cbModelParam._m0[1u].x * (_1473 - _1161)) + _1161;
    float _1486 = (cbModelParam._m0[1u].x * (_1474 - _1162)) + _1162;
    float _1487 = (cbModelParam._m0[1u].x * (_1475 - _1163)) + _1163;
    float _1508 = fma(_1487, cbSceneParam._m0[89u].z, fma(_1486, cbSceneParam._m0[89u].y, _1485 * cbSceneParam._m0[89u].x));
    float _1511 = fma(_1487, cbSceneParam._m0[90u].z, fma(_1486, cbSceneParam._m0[90u].y, _1485 * cbSceneParam._m0[90u].x));
    float _1514 = fma(_1487, cbSceneParam._m0[91u].z, fma(_1486, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1485));
    float _1529 = _752 * 0.5;
    float _1530 = _753 * 0.5;
    float _1531 = _754 * 0.5;
    float _1532 = dot(vec4(_1529, _1530, _1531, 1.0), vec4(_1463, _1466, _1469, _1472));
    float _1535 = dot(vec4(_1529, _1530, _1531, 1.0), vec4(_1462, _1465, _1468, _1471));
    float _1538 = dot(vec4(_1529, _1530, _1531, 1.0), vec4(_1461, _1464, _1467, _1470));
    float _1572;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1545 = dot(vec4(_1529, _1530, _1531, 1.0), vec4(_1148, _1152, _1155, _1158));
        float _1549 = dot(vec4(_1529, _1530, _1531, 1.0), vec4(_1150, _1153, _1156, _1159));
        float _1553 = dot(vec4(_1529, _1530, _1531, 1.0), vec4(_1151, _1154, _1157, _1160));
        float _1560 = dot(vec4(cbModelParam._m0[39u]), vec4(_1529, _1530, _1531, 1.0));
        _1572 = dot(vec3(isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0)), isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0)), isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1560) ? 0.0 : (isnan(0.0) ? _1560 : max(0.0, _1560))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1572 = 1.0;
    }
    float _1583;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1574 = dot(vec4(cbModelParam._m0[40u]), vec4(_1529, _1530, _1531, 1.0));
        _1583 = dot(vec3(isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0)), isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0)), isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1574) ? 0.0 : (isnan(0.0) ? _1574 : max(0.0, _1574))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1583 = 1.0;
    }
    float _1587 = (_1583 * cbModelParam._m0[1u].x) + (_1572 * (1.0 - cbModelParam._m0[1u].x));
    float _1597 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _644);
    float _1598 = isnan(_1597) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1597 : min(cbModelParam._m0[25u].z, _1597));
    float _1678;
    float _1680;
    float _1682;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1645 = fma(_817, cbModelParam._m0[13u].z, fma(_813, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _809)) + cbModelParam._m0[13u].w;
        float _1649 = fma(_817, cbModelParam._m0[14u].z, fma(_813, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _809)) + cbModelParam._m0[14u].w;
        float _1653 = fma(_817, cbModelParam._m0[15u].z, fma(_813, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _809)) + cbModelParam._m0[15u].w;
        float _1656 = fma(_754, cbModelParam._m0[13u].z, fma(_753, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _752));
        float _1659 = fma(_754, cbModelParam._m0[14u].z, fma(_753, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _752));
        float _1662 = fma(_754, cbModelParam._m0[15u].z, fma(_753, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _752));
        float _1690;
        if (_1656 > 0.0)
        {
            _1690 = abs((1.0 - _1645) / _1656);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1656 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1645 + 1.0) / _1656);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1690 = frontier_phi_19_17_ladder;
        }
        float _1862;
        if (_1659 > 0.0)
        {
            _1862 = abs((1.0 - _1649) / _1659);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1659 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1649 + 1.0) / _1659);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1862 = frontier_phi_28_24_ladder;
        }
        float _2126;
        if (_1662 > 0.0)
        {
            _2126 = abs((1.0 - _1653) / _1662);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1662 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1653 + 1.0) / _1662);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2126 = frontier_phi_40_35_ladder;
        }
        float _2128 = isnan(_1862) ? _1690 : (isnan(_1690) ? _1862 : min(_1690, _1862));
        float _2129 = isnan(_2126) ? _2128 : (isnan(_2128) ? _2126 : min(_2128, _2126));
        float _2133 = (_2129 * _1656) + _1645;
        float _2134 = (_2129 * _1659) + _1649;
        float _2135 = (_2129 * _1662) + _1653;
        float _2136 = _2129 * 9.9999997473787516355514526367188e-05;
        float _2138 = (-1.0) - _2136;
        float _2140 = _2136 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2135 > _2140) || ((_2135 < _2138) || ((_2134 > _2140) || ((_2134 < _2138) || ((_2133 < _2138) || (_2133 > _2140))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2289 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2135, cbModelParam._m0[9u].z, fma(_2134, cbModelParam._m0[9u].y, _2133 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2135, cbModelParam._m0[10u].z, fma(_2134, cbModelParam._m0[10u].y, _2133 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2135, cbModelParam._m0[11u].z, fma(_2134, cbModelParam._m0[11u].y, _2133 * cbModelParam._m0[11u].x))), _1598);
            frontier_phi_18_40_ladder = _2289.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2289.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2289.x * cbModelParam._m0[1u].y;
        }
        _1678 = frontier_phi_18_40_ladder_2;
        _1680 = frontier_phi_18_40_ladder_1;
        _1682 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1666 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_752, _753, _754), _1598);
        _1678 = _1666.x * cbModelParam._m0[1u].y;
        _1680 = _1666.y * cbModelParam._m0[1u].y;
        _1682 = _1666.z * cbModelParam._m0[1u].y;
    }
    float _1686 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _644);
    float _1687 = isnan(_1686) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1686 : min(cbModelParam._m0[25u].w, _1686));
    float _1779;
    float _1781;
    float _1783;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1743 = fma(_817, cbModelParam._m0[21u].z, fma(_813, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _809)) + cbModelParam._m0[21u].w;
        float _1747 = fma(_817, cbModelParam._m0[22u].z, fma(_813, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _809)) + cbModelParam._m0[22u].w;
        float _1751 = fma(_817, cbModelParam._m0[23u].z, fma(_813, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _809)) + cbModelParam._m0[23u].w;
        float _1754 = fma(_754, cbModelParam._m0[21u].z, fma(_753, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _752));
        float _1757 = fma(_754, cbModelParam._m0[22u].z, fma(_753, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _752));
        float _1760 = fma(_754, cbModelParam._m0[23u].z, fma(_753, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _752));
        float _1867;
        if (_1754 > 0.0)
        {
            _1867 = abs((1.0 - _1743) / _1754);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1754 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1743 + 1.0) / _1754);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1867 = frontier_phi_30_26_ladder;
        }
        float _2153;
        if (_1757 > 0.0)
        {
            _2153 = abs((1.0 - _1747) / _1757);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1757 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1747 + 1.0) / _1757);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2153 = frontier_phi_42_37_ladder;
        }
        float _2472;
        if (_1760 > 0.0)
        {
            _2472 = abs((1.0 - _1751) / _1760);
        }
        else
        {
            float frontier_phi_51_49_ladder;
            if (_1760 < 0.0)
            {
                frontier_phi_51_49_ladder = abs((_1751 + 1.0) / _1760);
            }
            else
            {
                frontier_phi_51_49_ladder = 5000.0;
            }
            _2472 = frontier_phi_51_49_ladder;
        }
        float _2474 = isnan(_2153) ? _1867 : (isnan(_1867) ? _2153 : min(_1867, _2153));
        float _2475 = isnan(_2472) ? _2474 : (isnan(_2474) ? _2472 : min(_2474, _2472));
        float _2479 = (_2475 * _1754) + _1743;
        float _2480 = (_2475 * _1757) + _1747;
        float _2481 = (_2475 * _1760) + _1751;
        float _2482 = _2475 * 9.9999997473787516355514526367188e-05;
        float _2483 = (-1.0) - _2482;
        float _2485 = _2482 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_2481 > _2485) || ((_2481 < _2483) || ((_2480 > _2485) || ((_2480 < _2483) || ((_2479 < _2483) || (_2479 > _2485))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2582 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2481, cbModelParam._m0[17u].z, fma(_2480, cbModelParam._m0[17u].y, _2479 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2481, cbModelParam._m0[18u].z, fma(_2480, cbModelParam._m0[18u].y, _2479 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2481, cbModelParam._m0[19u].z, fma(_2480, cbModelParam._m0[19u].y, _2479 * cbModelParam._m0[19u].x))), _1687);
            frontier_phi_27_51_ladder = _2582.x * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _2582.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _2582.y * cbModelParam._m0[1u].z;
        }
        _1779 = frontier_phi_27_51_ladder;
        _1781 = frontier_phi_27_51_ladder_2;
        _1783 = frontier_phi_27_51_ladder_1;
    }
    else
    {
        vec4 _1763 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_752, _753, _754), _1687);
        _1779 = _1763.x * cbModelParam._m0[1u].z;
        _1781 = _1763.y * cbModelParam._m0[1u].z;
        _1783 = _1763.z * cbModelParam._m0[1u].z;
    }
    float _1795 = ((((1.0 - _777) * ((_765 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_777 * _765)) * _744;
    float _1796 = _1795 * ((cbModelParam._m0[1u].w * (_1779 - _1678)) + _1678);
    float _1797 = _1795 * ((cbModelParam._m0[1u].w * (_1781 - _1680)) + _1680);
    float _1798 = _1795 * ((cbModelParam._m0[1u].w * (_1783 - _1682)) + _1682);
    float _1801 = fma(_1798, cbSceneParam._m0[89u].z, fma(_1797, cbSceneParam._m0[89u].y, _1796 * cbSceneParam._m0[89u].x));
    float _1804 = fma(_1798, cbSceneParam._m0[90u].z, fma(_1797, cbSceneParam._m0[90u].y, _1796 * cbSceneParam._m0[90u].x));
    float _1807 = fma(_1798, cbSceneParam._m0[91u].z, fma(_1797, cbSceneParam._m0[91u].y, _1796 * cbSceneParam._m0[91u].x));
    float _1841 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1845 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1849 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1853 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1854 = _1841 / _1853;
    float _1855 = _1845 / _1853;
    float _1856 = _1849 / _1853;
    float _2003;
    float _2004;
    float _2005;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1883 = ((uint(_1856 > cbSceneParam._m0[59u].y) + uint(_1856 > cbSceneParam._m0[59u].x)) + uint(_1856 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1884 = _1883 + 43u;
        uint _1892 = _1883 + 44u;
        uint _1900 = _1883 + 45u;
        uint _1908 = _1883 + 46u;
        float _1919 = fma(_1853, cbSceneParam._m0[_1884].w, fma(_1849, cbSceneParam._m0[_1884].z, fma(_1845, cbSceneParam._m0[_1884].y, _1841 * cbSceneParam._m0[_1884].x)));
        float _1923 = fma(_1853, cbSceneParam._m0[_1892].w, fma(_1849, cbSceneParam._m0[_1892].z, fma(_1845, cbSceneParam._m0[_1892].y, _1841 * cbSceneParam._m0[_1892].x)));
        float _1931 = fma(_1853, cbSceneParam._m0[_1908].w, fma(_1849, cbSceneParam._m0[_1908].z, fma(_1845, cbSceneParam._m0[_1908].y, _1841 * cbSceneParam._m0[_1908].x)));
        float _1936 = cbSceneParam._m0[33u].z * _1931;
        float _1938 = cbSceneParam._m0[33u].w * _1931;
        float _1941 = fma(_1853, cbSceneParam._m0[_1900].w, fma(_1849, cbSceneParam._m0[_1900].z, fma(_1845, cbSceneParam._m0[_1900].y, _1841 * cbSceneParam._m0[_1900].x))) / _1931;
        float _1989 = (cbSceneParam._m0[33u].x - sqrt(((_1855 * _1855) + (_1854 * _1854)) + (_1856 * _1856))) * cbSceneParam._m0[33u].y;
        float _3946 = isnan(0.0) ? _1989 : (isnan(_1989) ? 0.0 : max(_1989, 0.0));
        float _1996 = (isnan(1.0) ? _3946 : (isnan(_3946) ? 1.0 : min(_3946, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1936 + _1919) / _1931, (_1938 + _1923) / _1931), _1941), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1938 + _1919) / _1931, (_1923 - _1936) / _1931), _1941), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1919 - _1936) / _1931, (_1923 - _1938) / _1931), _1941), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1919 - _1938) / _1931, (_1936 + _1923) / _1931), _1941), 0.0)).x), vec4(0.25)));
        _2003 = 1.0 - (_1996 * cbSceneParam._m0[34u].x);
        _2004 = 1.0 - (_1996 * cbSceneParam._m0[34u].y);
        _2005 = 1.0 - (_1996 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2003 = 1.0;
        _2004 = 1.0;
        _2005 = 1.0;
    }
    float _2069;
    float _2071;
    float _2073;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2057 = fma(_1853, cbSceneParam._m0[63u].w, fma(_1849, cbSceneParam._m0[63u].z, fma(_1845, cbSceneParam._m0[63u].y, _1841 * cbSceneParam._m0[63u].x)));
        float _2058 = fma(_1853, cbSceneParam._m0[60u].w, fma(_1849, cbSceneParam._m0[60u].z, fma(_1845, cbSceneParam._m0[60u].y, _1841 * cbSceneParam._m0[60u].x))) / _2057;
        float _2059 = fma(_1853, cbSceneParam._m0[61u].w, fma(_1849, cbSceneParam._m0[61u].z, fma(_1845, cbSceneParam._m0[61u].y, _1841 * cbSceneParam._m0[61u].x))) / _2057;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2058 >= cbSceneParam._m0[64u].x) && (_2059 >= cbSceneParam._m0[64u].y)) && (_2058 <= cbSceneParam._m0[64u].z)) && (_2059 <= cbSceneParam._m0[64u].w))
        {
            float _2166 = fma(_1853, cbSceneParam._m0[62u].w, fma(_1849, cbSceneParam._m0[62u].z, fma(_1845, cbSceneParam._m0[62u].y, _1841 * cbSceneParam._m0[62u].x))) / _2057;
            float _2170 = isnan(cbSceneParam._m0[41u].w) ? _2166 : (isnan(_2166) ? cbSceneParam._m0[41u].w : max(_2166, cbSceneParam._m0[41u].w));
            float _2213 = (cbSceneParam._m0[33u].x - sqrt(((_1855 * _1855) + (_1854 * _1854)) + (_1856 * _1856))) * cbSceneParam._m0[33u].y;
            float _3962 = isnan(0.0) ? _2213 : (isnan(_2213) ? 0.0 : max(_2213, 0.0));
            float _2220 = (isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2058, cbSceneParam._m0[33u].w + _2059), _2170), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2058, _2059 - cbSceneParam._m0[33u].z), _2170), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2058 - cbSceneParam._m0[33u].z, _2059 - cbSceneParam._m0[33u].w), _2170), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2058 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2059), _2170), 0.0)).x), vec4(0.25)));
            float _2224 = 1.0 - (_2220 * cbSceneParam._m0[34u].x);
            float _2225 = 1.0 - (_2220 * cbSceneParam._m0[34u].y);
            float _2226 = 1.0 - (_2220 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2226) ? _2005 : (isnan(_2005) ? _2226 : min(_2005, _2226));
            frontier_phi_39_38_ladder_1 = isnan(_2225) ? _2004 : (isnan(_2004) ? _2225 : min(_2004, _2225));
            frontier_phi_39_38_ladder_2 = isnan(_2224) ? _2003 : (isnan(_2003) ? _2224 : min(_2003, _2224));
        }
        else
        {
            frontier_phi_39_38_ladder = _2005;
            frontier_phi_39_38_ladder_1 = _2004;
            frontier_phi_39_38_ladder_2 = _2003;
        }
        _2069 = frontier_phi_39_38_ladder_2;
        _2071 = frontier_phi_39_38_ladder_1;
        _2073 = frontier_phi_39_38_ladder;
    }
    else
    {
        _2069 = _2003;
        _2071 = _2004;
        _2073 = _2005;
    }
    uvec4 _2078 = floatBitsToUint(cbInstanceData._m0[_720 + 5u]);
    uint _2080 = _2078.x * 14u;
    uint _2081 = _2080 + 13u;
    float _2086 = _744 + (-1.0);
    float _2089 = (cbLight._m0[_2081].x * _2086) + 1.0;
    float _2090 = (cbLight._m0[_2081].y * _2086) + 1.0;
    uint _2092 = _2080 + 4u;
    float _2103 = dot(vec3(cbLight._m0[_2080].xyz), vec3(_640, _641, _642));
    float _2106 = isnan(1.0) ? _2089 : (isnan(_2089) ? 1.0 : min(_2089, 1.0));
    float _2107 = cbLight._m0[_2092].x * _2069;
    float _2108 = cbLight._m0[_2092].y * _2071;
    float _2109 = cbLight._m0[_2092].z * _2073;
    uint _2110 = _2080 + 5u;
    uint _2116 = _2080 | 1u;
    float _2122 = dot(vec3(cbLight._m0[_2116].xyz), vec3(_640, _641, _642));
    float _2125 = isnan(1.0) ? _2090 : (isnan(_2090) ? 1.0 : min(_2090, 1.0));
    float _2298;
    float _2299;
    float _2300;
    if (_645 == 0.0)
    {
        float _3998 = isnan(0.0) ? _2103 : (isnan(_2103) ? 0.0 : max(_2103, 0.0));
        float _4009 = isnan(0.0) ? _2122 : (isnan(_2122) ? 0.0 : max(_2122, 0.0));
        float _2235 = (isnan(1.0) ? _3998 : (isnan(_3998) ? 1.0 : min(_3998, 1.0))) * 0.3183098733425140380859375;
        float _2237 = (isnan(1.0) ? _4009 : (isnan(_4009) ? 1.0 : min(_4009, 1.0))) * 0.3183098733425140380859375;
        _2298 = ((cbLight._m0[_2110].x * _2125) * _2237) + ((_2107 * _2106) * _2235);
        _2299 = ((_2125 * cbLight._m0[_2110].y) * _2237) + ((_2108 * _2106) * _2235);
        _2300 = ((_2125 * cbLight._m0[_2110].z) * _2237) + ((_2109 * _2106) * _2235);
    }
    else
    {
        float _2247 = _2103 + _645;
        float _2250 = (_645 * 2.0) + 1.0;
        float _2251 = (isnan(0.0) ? _2247 : (isnan(_2247) ? 0.0 : max(_2247, 0.0))) / _2250;
        float _2258 = _2122 + _645;
        float _2260 = (isnan(0.0) ? _2258 : (isnan(_2258) ? 0.0 : max(_2258, 0.0))) / _2250;
        _2298 = (((_2260 * cbLight._m0[_2110].x) * _2125) + ((_2107 * _2251) * _2106)) * 0.3183098733425140380859375;
        _2299 = (((_2260 * cbLight._m0[_2110].y) * _2125) + ((_2108 * _2251) * _2106)) * 0.3183098733425140380859375;
        _2300 = (((_2260 * cbLight._m0[_2110].z) * _2125) + ((_2109 * _2251) * _2106)) * 0.3183098733425140380859375;
    }
    uint _2304 = _2080 + 8u;
    float _2320 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2080].w)) * _644) * 0.949999988079071044921875);
    float _2321 = _2320 * _2320;
    float _2322 = cbLight._m0[_2080].x + _450;
    float _2323 = cbLight._m0[_2080].y + _451;
    float _2324 = cbLight._m0[_2080].z + _452;
    float _2328 = inversesqrt(dot(vec3(_2322, _2323, _2324), vec3(_2322, _2323, _2324)));
    float _2329 = _2328 * _2322;
    float _2330 = _2328 * _2323;
    float _2331 = _2328 * _2324;
    float _2332 = dot(vec3(_640, _641, _642), vec3(cbLight._m0[_2080].xyz));
    float _4030 = isnan(0.0) ? _2332 : (isnan(_2332) ? 0.0 : max(_2332, 0.0));
    float _2335 = isnan(1.0) ? _4030 : (isnan(_4030) ? 1.0 : min(_4030, 1.0));
    float _4041 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
    float _2336 = isnan(1.0) ? _4041 : (isnan(_4041) ? 1.0 : min(_4041, 1.0));
    float _2337 = dot(vec3(_640, _641, _642), vec3(_2329, _2330, _2331));
    float _4052 = isnan(0.0) ? _2337 : (isnan(_2337) ? 0.0 : max(_2337, 0.0));
    float _2340 = isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0));
    float _2341 = dot(vec3(cbLight._m0[_2080].xyz), vec3(_2329, _2330, _2331));
    float _4063 = isnan(0.0) ? _2341 : (isnan(_2341) ? 0.0 : max(_2341, 0.0));
    float _2345 = _2321 * _2321;
    float _2349 = ((_2340 * _2340) * (_2345 + (-1.0))) + 1.0;
    float _2360 = (exp2(log2(1.0 - (isnan(1.0) ? _4063 : (isnan(_4063) ? 1.0 : min(_4063, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2361 = 1.0 - _2321;
    float _2372 = (0.5 / (((_2336 * ((_2335 * _2361) + _2321)) + 9.9999999392252902907785028219223e-09) + (((_2336 * _2361) + _2321) * _2335))) * _2335;
    float _4074 = isnan(0.0) ? _2372 : (isnan(_2372) ? 0.0 : max(_2372, 0.0));
    float _2374 = (isnan(1.0) ? _4074 : (isnan(_4074) ? 1.0 : min(_4074, 1.0))) * (_2345 / ((_2349 * _2349) * 3.141590118408203125));
    uint _2390 = _2080 + 9u;
    float _2404 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2116].w)) * _644) * 0.949999988079071044921875);
    float _2405 = _2404 * _2404;
    float _2406 = cbLight._m0[_2116].x + _450;
    float _2407 = cbLight._m0[_2116].y + _451;
    float _2408 = cbLight._m0[_2116].z + _452;
    float _2412 = inversesqrt(dot(vec3(_2406, _2407, _2408), vec3(_2406, _2407, _2408)));
    float _2413 = _2412 * _2406;
    float _2414 = _2412 * _2407;
    float _2415 = _2412 * _2408;
    float _2416 = dot(vec3(_640, _641, _642), vec3(cbLight._m0[_2116].xyz));
    float _4085 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
    float _2419 = isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0));
    float _2420 = dot(vec3(_640, _641, _642), vec3(_2413, _2414, _2415));
    float _4096 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
    float _2423 = isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0));
    float _2424 = dot(vec3(cbLight._m0[_2116].xyz), vec3(_2413, _2414, _2415));
    float _4107 = isnan(0.0) ? _2424 : (isnan(_2424) ? 0.0 : max(_2424, 0.0));
    float _2428 = _2405 * _2405;
    float _2432 = ((_2423 * _2423) * (_2428 + (-1.0))) + 1.0;
    float _2441 = (exp2(log2(1.0 - (isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2442 = 1.0 - _2405;
    float _2452 = (0.5 / (((_2336 * ((_2419 * _2442) + _2405)) + 9.9999999392252902907785028219223e-09) + (((_2336 * _2442) + _2405) * _2419))) * _2419;
    float _4118 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
    float _2454 = (isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0))) * (_2428 / ((_2432 * _2432) * 3.141590118408203125));
    float _2464 = (((_2441 * cbLight._m0[_2390].x) * _2454) * _2125) + ((((cbLight._m0[_2304].x * _2069) * _2360) * _2374) * _2106);
    float _2465 = (((_2441 * cbLight._m0[_2390].y) * _2454) * _2125) + ((((cbLight._m0[_2304].y * _2071) * _2360) * _2374) * _2106);
    float _2466 = (((_2441 * cbLight._m0[_2390].z) * _2454) * _2125) + ((((cbLight._m0[_2304].z * _2073) * _2360) * _2374) * _2106);
    float _2553;
    float _2555;
    float _2557;
    float _2559;
    float _2561;
    float _2563;
    if (_2078.y == 0u)
    {
        uvec4 _2509 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2510 = _2509.x;
        uint _2521 = uint((float(_2509.y) * floor(float(uint(cbSceneParam._m0[85u].y * _683) / _2510))) + floor(float(uint(cbSceneParam._m0[85u].x * _682) / _2510)));
        float _2531 = (log2(_1856 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2532 = isnan(0.0) ? _2531 : (isnan(_2531) ? 0.0 : max(_2531, 0.0));
        uint _2535 = uint(isnan(14.0) ? _2532 : (isnan(_2532) ? 14.0 : min(_2532, 14.0)));
        uint _2542 = _2509.z;
        float _2587;
        float _2589;
        float _2591;
        float _2593;
        float _2595;
        float _2597;
        if (((((1u << ((_2542 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2535 << 2u) + (_2521 << 6u)) >> 2u)).x) == 0u) || ((_2542 & 240u) == 0u))
        {
            _2587 = 0.0;
            _2589 = 0.0;
            _2591 = 0.0;
            _2593 = 0.0;
            _2595 = 0.0;
            _2597 = 0.0;
        }
        else
        {
            float _2588;
            float _2590;
            float _2592;
            float _2594;
            float _2596;
            float _2598;
            float _2753 = 0.0;
            float _2754 = 0.0;
            float _2755 = 0.0;
            float _2756 = 0.0;
            float _2757 = 0.0;
            float _2758 = 0.0;
            uint _2759 = 0u;
            uint _2768;
            bool _2769;
            for (;;)
            {
                _2768 = texelFetch(g_lightClassification, int((((_2535 << 5u) + (_2521 << 9u)) + (_2759 << 2u)) >> 2u)).x;
                _2769 = _2768 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2769)
                {
                    frontier_phi_63_pred = _2755;
                    frontier_phi_63_pred_1 = _2758;
                    frontier_phi_63_pred_2 = _2757;
                    frontier_phi_63_pred_3 = _2756;
                    frontier_phi_63_pred_4 = _2754;
                    frontier_phi_63_pred_5 = _2753;
                }
                else
                {
                    float _2969;
                    float _2970;
                    float _2971;
                    float _2972;
                    float _2973;
                    float _2974;
                    uint _2975;
                    _2969 = _2753;
                    _2970 = _2754;
                    _2971 = _2755;
                    _2972 = _2756;
                    _2973 = _2757;
                    _2974 = _2758;
                    _2975 = _2768;
                    float _2901;
                    float _2902;
                    float _2903;
                    float _2904;
                    float _2905;
                    float _2906;
                    for (;;)
                    {
                        uint _2979 = uint(findLSB(_2975)) + (_2759 << 5u);
                        uint _2976 = (_2975 + 4294967295u) & _2975;
                        uint _2981 = _2979 * 48u;
                        vec4 _2995 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2981)).x, texelFetch(g_PointLightRenderingBuffer, int(_2981 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2981 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2981 + 3u)).x));
                        uint _3001 = (_2979 * 48u) + 4u;
                        vec4 _3014 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3001)).x, texelFetch(g_PointLightRenderingBuffer, int(_3001 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3001 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3001 + 3u)).x));
                        float _3015 = _3014.x;
                        float _3016 = _3014.y;
                        float _3017 = _3014.z;
                        uint _3020 = (_2979 * 48u) + 8u;
                        vec3 _3031 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3020)).x, texelFetch(g_PointLightRenderingBuffer, int(_3020 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3020 + 2u)).x));
                        uint _3036 = (_2979 * 48u) + 12u;
                        vec2 _3044 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_3036)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 1u)).x));
                        float _3050 = inversesqrt(dot(vec3(_1854, _1855, _1856), vec3(_1854, _1855, _1856)));
                        float _3051 = _3050 * _1854;
                        float _3052 = _3050 * _1855;
                        float _3053 = _3050 * _1856;
                        float _3054 = _2995.x - _1854;
                        float _3055 = _2995.y - _1855;
                        float _3056 = _2995.z - _1856;
                        float _3057 = dot(vec3(_3054, _3055, _3056), vec3(_3054, _3055, _3056));
                        float _3060 = inversesqrt(_3057);
                        float _3061 = _3060 * _3054;
                        float _3062 = _3060 * _3055;
                        float _3063 = _3060 * _3056;
                        float _3064 = dot(vec3(_701, _704, _707), vec3(_3061, _3062, _3063));
                        float _3069 = 1.0 - (_3057 * _2995.w);
                        float _4139 = isnan(0.0) ? _3069 : (isnan(_3069) ? 0.0 : max(_3069, 0.0));
                        float _3070 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
                        float _3071 = sqrt(_3057) * _3014.w;
                        float _3074 = 1.39999997615814208984375 / (_3071 + 1.39999997615814208984375);
                        float _3075 = _3074 * _3074;
                        float _3076 = 1.0 - _3075;
                        float _3078 = (_3076 * _3076) * _645;
                        float _3081 = ((_3076 * _3064) + _3075) + _3078;
                        float _3086 = _3071 * _3071;
                        float _3091 = ((isnan(0.0) ? _3081 : (isnan(_3081) ? 0.0 : max(_3081, 0.0))) * _3070) / (((_3078 * 2.0) + 1.0) * ((_3086 * 0.699999988079071044921875) + 1.0));
                        float _3095 = dot(vec3(_3061, _3062, _3063), vec3(_3051, _3052, _3053));
                        float _4155 = isnan(0.0) ? _3095 : (isnan(_3095) ? 0.0 : max(_3095, 0.0));
                        float _3102 = dot(vec3((-0.0) - _3051, (-0.0) - _3052, (-0.0) - _3053), vec3(_701, _704, _707)) + 1.0;
                        float _3104 = (isnan(0.0) ? _3102 : (isnan(_3102) ? 0.0 : max(_3102, 0.0))) * 0.5;
                        float _3111 = ((_3104 * _3104) * _3044.x) * exp2((_3044.y * 32.0) * log2(isnan(1.0) ? _4155 : (isnan(_4155) ? 1.0 : min(_4155, 1.0))));
                        float _3113 = _645 / (_645 + 1.0);
                        float _3129 = (-0.0) - _1854;
                        float _3130 = (-0.0) - _1855;
                        float _3131 = (-0.0) - _1856;
                        float _3135 = inversesqrt(dot(vec3(_3129, _3130, _3131), vec3(_3129, _3130, _3131)));
                        float _3136 = _3135 * _3129;
                        float _3137 = _3135 * _3130;
                        float _3138 = _3135 * _3131;
                        float _3145 = exp2(log2(1.0 / ((_3086 * 3.5) + 5.0)) * 0.25);
                        float _3146 = 1.0 - _765;
                        float _3153 = sqrt(1.0 - ((1.0 - (_3146 * _3146)) * (1.0 - (_3145 * _3145))));
                        float _3154 = _3153 * _3153;
                        float _3155 = _3154 * _3154;
                        float _3156 = _3136 + _3061;
                        float _3157 = _3137 + _3062;
                        float _3158 = _3138 + _3063;
                        float _3162 = inversesqrt(dot(vec3(_3156, _3157, _3158), vec3(_3156, _3157, _3158)));
                        float _3166 = dot(vec3(_701, _704, _707), vec3(_3136, _3137, _3138));
                        float _4171 = isnan(0.0) ? _3166 : (isnan(_3166) ? 0.0 : max(_3166, 0.0));
                        float _3169 = isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0));
                        float _3170 = dot(vec3(_701, _704, _707), vec3(_3162 * _3156, _3162 * _3157, _3162 * _3158));
                        float _4182 = isnan(0.0) ? _3170 : (isnan(_3170) ? 0.0 : max(_3170, 0.0));
                        float _3173 = isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0));
                        float _3177 = ((_3173 * _3173) * (_3155 + (-1.0))) + 1.0;
                        float _3178 = _3074 * _3154;
                        float _3179 = _3178 * _3178;
                        float _3182 = ((1.0 - _3179) * _3064) + _3179;
                        float _4193 = isnan(0.0) ? _3182 : (isnan(_3182) ? 0.0 : max(_3182, 0.0));
                        float _3183 = isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0));
                        float _3184 = 1.0 - _3154;
                        float _3194 = (0.5 / (((_3183 * ((_3169 * _3184) + _3154)) + 9.9999999392252902907785028219223e-09) + (((_3183 * _3184) + _3154) * _3169))) * _3183;
                        float _4204 = isnan(0.0) ? _3194 : (isnan(_3194) ? 0.0 : max(_3194, 0.0));
                        float _3205 = (((_3155 * 3.1415927410125732421875) * (isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0)))) / ((_3177 * _3177) * ((_3086 * 2.1991131305694580078125) + 3.141590118408203125))) * _3070;
                        _2904 = (((((_3015 * 0.3183098733425140380859375) * _3113) * _3111) + _3015) * _3091) + _2972;
                        _2905 = (((((_3016 * 0.3183098733425140380859375) * _3113) * _3111) + _3016) * _3091) + _2973;
                        _2906 = (((((_3017 * 0.3183098733425140380859375) * _3113) * _3111) + _3017) * _3091) + _2974;
                        _2901 = (_3205 * _3031.x) + _2969;
                        _2902 = (_3205 * _3031.y) + _2970;
                        _2903 = (_3205 * _3031.z) + _2971;
                        if (_2976 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2969 = _2901;
                            _2970 = _2902;
                            _2971 = _2903;
                            _2972 = _2904;
                            _2973 = _2905;
                            _2974 = _2906;
                            _2975 = _2976;
                        }
                    }
                    frontier_phi_63_pred = _2903;
                    frontier_phi_63_pred_1 = _2906;
                    frontier_phi_63_pred_2 = _2905;
                    frontier_phi_63_pred_3 = _2904;
                    frontier_phi_63_pred_4 = _2902;
                    frontier_phi_63_pred_5 = _2901;
                }
                _2592 = frontier_phi_63_pred;
                _2598 = frontier_phi_63_pred_1;
                _2596 = frontier_phi_63_pred_2;
                _2594 = frontier_phi_63_pred_3;
                _2590 = frontier_phi_63_pred_4;
                _2588 = frontier_phi_63_pred_5;
                uint _2760 = _2759 + 1u;
                if (_2760 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2753 = _2588;
                    _2754 = _2590;
                    _2755 = _2592;
                    _2756 = _2594;
                    _2757 = _2596;
                    _2758 = _2598;
                    _2759 = _2760;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2587 = _2588;
            _2589 = _2590;
            _2591 = _2592;
            _2593 = _2594;
            _2595 = _2596;
            _2597 = _2598;
        }
        float _2602 = isnan(1.0) ? _744 : (isnan(_744) ? 1.0 : min(_744, 1.0));
        _2553 = (_2602 * _2593) + _2298;
        _2555 = (_2602 * _2595) + _2299;
        _2557 = (_2602 * _2597) + _2300;
        _2559 = ((_2587 * 0.039999999105930328369140625) * _2602) + _2464;
        _2561 = ((_2589 * 0.039999999105930328369140625) * _2602) + _2465;
        _2563 = ((_2591 * 0.039999999105930328369140625) * _2602) + _2466;
    }
    else
    {
        _2553 = _2298;
        _2555 = _2299;
        _2557 = _2300;
        _2559 = _2464;
        _2561 = _2465;
        _2563 = _2466;
    }
    float _2676;
    float _2677;
    float _2678;
    if (_645 > 0.0)
    {
        uint _2609 = _2080 + 4u;
        float _2615 = (-0.0) - _450;
        float _2616 = (-0.0) - _451;
        float _2617 = (-0.0) - _452;
        float _2618 = dot(vec3(cbLight._m0[_2080].xyz), vec3(_2615, _2616, _2617));
        float _4220 = isnan(0.0) ? _2618 : (isnan(_2618) ? 0.0 : max(_2618, 0.0));
        float _2622 = _755 + 1.0;
        float _2624 = (isnan(0.0) ? _2622 : (isnan(_2622) ? 0.0 : max(_2622, 0.0))) * 0.5;
        float _2629 = _2624 * _2624;
        float _2630 = _2629 * exp2(log2(isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0))) * 32.0);
        float _2632 = _645 / (_645 + 1.0);
        float _2633 = isnan(_2089) ? 1.0 : (isnan(1.0) ? _2089 : min(1.0, _2089));
        uint _2646 = _2080 + 5u;
        float _2652 = dot(vec3(cbLight._m0[_2116].xyz), vec3(_2615, _2616, _2617));
        float _4241 = isnan(0.0) ? _2652 : (isnan(_2652) ? 0.0 : max(_2652, 0.0));
        float _2659 = _2629 * exp2(log2(isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0))) * 32.0);
        float _2660 = isnan(_2090) ? 1.0 : (isnan(1.0) ? _2090 : min(1.0, _2090));
        _2676 = ((((_2659 * cbLight._m0[_2646].x) * _2632) * _2660) + ((((cbLight._m0[_2609].x * _2069) * _2630) * _2632) * _2633)) * 0.3183098733425140380859375;
        _2677 = ((((_2659 * cbLight._m0[_2646].y) * _2632) * _2660) + ((((cbLight._m0[_2609].y * _2071) * _2630) * _2632) * _2633)) * 0.3183098733425140380859375;
        _2678 = ((((_2659 * cbLight._m0[_2646].z) * _2632) * _2660) + ((((cbLight._m0[_2609].z * _2073) * _2630) * _2632) * _2633)) * 0.3183098733425140380859375;
    }
    else
    {
        _2676 = 0.0;
        _2677 = 0.0;
        _2678 = 0.0;
    }
    float _4257 = isnan(0.0) ? _731 : (isnan(_731) ? 0.0 : max(_731, 0.0));
    float _4268 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
    float _4279 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _4290 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _2693 = (isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0))) * ((_2553 + ((isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0))) * _744)) + _2676);
    float _2694 = (isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0))) * ((_2555 + ((isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0))) * _744)) + _2677);
    float _2695 = (isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0))) * ((_2557 + ((isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0))) * _744)) + _2678);
    float _2699 = 0.959999978542327880859375 - (exp2(log2(1.0 - _759) * 5.0) * 0.959999978542327880859375);
    float _2710 = (_2693 + ((_2559 + ((isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0))) * _1587)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _581.x) * _2699) - _2693) * _625);
    float _2712 = (_2694 + ((_2561 + ((isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0))) * _1587)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _581.y) * _2699) - _2694) * _625);
    float _2714 = (_2695 + ((_2563 + ((isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0))) * _1587)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _581.z) * _2699) - _2695) * _625);
    float _2719 = cbInstanceData._m0[_720 + 6u].w * (isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0)));
    float _2724 = _682 / cbSceneParam._m0[86u].x;
    float _2725 = _683 / cbSceneParam._m0[86u].y;
    vec4 _2739 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2724, _2725, (log2((isnan(cbSceneParam._m0[77u].w) ? _664 : (isnan(_664) ? cbSceneParam._m0[77u].w : min(_664, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2741 = _2739.x;
    float _2742 = _2739.y;
    float _2743 = _2739.z;
    float _2744 = _2739.w;
    float _2811;
    float _2813;
    float _2815;
    float _2817;
    if (_664 > cbSceneParam._m0[78u].w)
    {
        float _2774 = isnan(_664) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _664 : min(cbSceneParam._m0[80u].w, _664));
        float _2775 = _2774 / _664;
        float _2786 = _2775 * _293;
        float _2787 = _294 * _2775;
        float _2788 = (-0.0) - _2787;
        float _2789 = _2775 * _295;
        float _2791 = (cbSceneParam._m0[77u].w * _2788) / _2774;
        float _2792 = _2791 + cbSceneParam._m0[79u].w;
        float _2793 = cbSceneParam._m0[79u].w - _2787;
        float _2799 = sqrt(((_2786 * _2786) + (_2787 * _2787)) + (_2789 * _2789));
        float _2802 = (1.0 - (cbSceneParam._m0[77u].w / _2774)) * _2799;
        float _2807 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2809 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3210;
        if (abs((_2788 - _2791) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3210 = ((((_2792 > 0.0) ? exp2(_2807 * _2792) : (2.0 - exp2(_2809 * _2792))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2802;
        }
        else
        {
            float _2926 = 1.0 / cbSceneParam._m0[80u].x;
            float _2927 = isnan(_2793) ? _2792 : (isnan(_2792) ? _2793 : max(_2792, _2793));
            float _2928 = isnan(_2793) ? _2792 : (isnan(_2792) ? _2793 : min(_2792, _2793));
            float _2937 = isnan(0.0) ? _2927 : (isnan(_2927) ? 0.0 : min(_2927, 0.0));
            float _2938 = isnan(0.0) ? _2928 : (isnan(_2928) ? 0.0 : min(_2928, 0.0));
            _3210 = ((abs(_2799 / _2788) * cbSceneParam._m0[80u].y) * ((((_2937 - _2938) * 2.0) - ((exp2(_2807 * (isnan(0.0) ? _2927 : (isnan(_2927) ? 0.0 : max(_2927, 0.0)))) - exp2(_2807 * (isnan(0.0) ? _2928 : (isnan(_2928) ? 0.0 : max(_2928, 0.0))))) * _2926)) - ((exp2(_2809 * _2937) - exp2(_2809 * _2938)) * _2926))) + (_2802 * cbSceneParam._m0[80u].z);
        }
        vec4 _3212 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2724, _2725, 1.0), 0.0);
        float _3221 = exp2((_3210 * (-1.44269502162933349609375)) * (1.0 - _3212.w));
        float _3222 = log2(_3221);
        float _3238 = log2(_2744);
        _2811 = (exp2(_3238 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3222 * cbSceneParam._m0[78u].x)) * _3212.x) / cbSceneParam._m0[78u].x)) + _2741;
        _2813 = (exp2(_3238 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3222 * cbSceneParam._m0[78u].y)) * _3212.y) / cbSceneParam._m0[78u].y)) + _2742;
        _2815 = (exp2(_3238 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3222 * cbSceneParam._m0[78u].z)) * _3212.z) / cbSceneParam._m0[78u].z)) + _2743;
        _2817 = _3221 * _2744;
    }
    else
    {
        _2811 = _2741;
        _2813 = _2742;
        _2815 = _2743;
        _2817 = _2744;
    }
    bool _3248;
    float _2872;
    vec4 _2875;
    float _2877;
    vec4 _2879;
    float _2887;
    float _2888;
    float _2889;
    float _2890;
    bool _2900;
    for (;;)
    {
        bool _2829 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2830 = log2(_2817);
        float _2837 = exp2(_2830 * cbSceneParam._m0[78u].x) * _2710;
        float _2838 = exp2(_2830 * cbSceneParam._m0[78u].y) * _2712;
        float _2839 = exp2(_2830 * cbSceneParam._m0[78u].z) * _2714;
        vec4 _2847 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_682, _683));
        float _2849 = _2847.x;
        float _2870 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2849)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2849))) - _664) * cbMtdParam._m0[17u].y;
        float _4341 = isnan(0.0) ? _2870 : (isnan(_2870) ? 0.0 : max(_2870, 0.0));
        _2872 = _2719 * (isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0)));
        float _2873 = _671 + (-0.5);
        _2875 = cbMtdParam._m0[1u];
        _2877 = _2875.y * _2873;
        _2879 = cbMatDynParam._m0[0u];
        float _2886 = (roundEven(_2879.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2887 = _2886 * (_2829 ? _2837 : (_2837 + (cbSceneParam._m0[72u].w * _2811)));
        _2888 = _2886 * (_2829 ? _2838 : (_2838 + (cbSceneParam._m0[72u].w * _2813)));
        _2889 = _2886 * (_2829 ? _2839 : (_2839 + (cbSceneParam._m0[72u].w * _2815)));
        _2890 = _2873 * 0.999000012874603271484375;
        _2900 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2900)
        {
            if ((cbInstanceData._m0[_720 + 7u].x + _2890) < 0.5)
            {
                _3248 = true;
                break;
            }
        }
        uint _2961 = _721 + uint(_2879.w);
        if ((cbInstanceData._m0[_2961].w < 1.0) && ((cbInstanceData._m0[_2961].w + _2890) < 0.5))
        {
            _3248 = true;
            break;
        }
        if ((_2877 + _359) < _2875.x)
        {
            _3248 = true;
            break;
        }
        _3248 = false;
        break;
    }
    float _3253;
    if (_3248)
    {
        discard_state = true;
        _3253 = 0.0;
    }
    else
    {
        _3253 = _2872;
    }
    SV_Target.x = _2887;
    SV_Target.y = _2888;
    SV_Target.z = _2889;
    SV_Target.w = _3253;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2872;
    discard_exit();
}


