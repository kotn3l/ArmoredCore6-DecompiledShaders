#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1208;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _206 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _207 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _208 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _214 = inversesqrt(dot(vec3(_206, _207, _208), vec3(_206, _207, _208)));
    float _215 = _214 * _206;
    float _216 = _214 * _207;
    float _217 = _214 * _208;
    float _221 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _222 = _221 * NORMAL.x;
    float _223 = _221 * NORMAL.y;
    float _224 = _221 * NORMAL.z;
    float _228 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _229 = _228 * TANGENT.x;
    float _230 = _228 * TANGENT.y;
    float _231 = _228 * TANGENT.z;
    float _236;
    float _237;
    float _238;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _236 = (-0.0) - _222;
        _237 = (-0.0) - _223;
        _238 = (-0.0) - _224;
    }
    else
    {
        _236 = _222;
        _237 = _223;
        _238 = _224;
    }
    float _285 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _295 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _285);
    float _296 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _285);
    float _297 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _285);
    uint _303 = uint(roundEven(NORMAL.w)) * 13u;
    uint _308 = _303 + 1u;
    uint _312 = _303 + 2u;
    float _321 = sqrt(((cbInstanceData._m0[_308].x * cbInstanceData._m0[_308].x) + (cbInstanceData._m0[_303].x * cbInstanceData._m0[_303].x)) + (cbInstanceData._m0[_312].x * cbInstanceData._m0[_312].x));
    float _322 = _321 * TEXCOORD.z;
    float _323 = _321 * TEXCOORD.w;
    vec4 _343 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _352 = (_343.x * 2.0) + (-1.0);
    float _354 = (_343.y * 2.0) + (-1.0);
    float _355 = dot(vec2(_352, _354), vec2(_352, _354));
    float _3094 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _361 = sqrt(1.0 - (isnan(1.0) ? _3094 : (isnan(_3094) ? 1.0 : min(_3094, 1.0))));
    float _364 = fma(_361, _236, fma(_354, _229, _352 * _215));
    float _367 = fma(_361, _237, fma(_354, _230, _352 * _216));
    float _370 = fma(_361, _238, fma(_354, _231, _352 * _217));
    float _374 = inversesqrt(dot(vec3(_364, _367, _370), vec3(_364, _367, _370)));
    float _375 = _374 * _364;
    float _376 = _374 * _367;
    float _405 = (cbMtdParam._m0[17u].w + dot(vec4(_375, _376, _374 * _370, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _322) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _323) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3105 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
    float _406 = isnan(1.0) ? _3105 : (isnan(_3105) ? 1.0 : min(_3105, 1.0));
    vec4 _418 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _423 = _418.w;
    float _435 = dot(vec3(_295, _296, _297), vec3(_215, _216, _217));
    float _438 = dot(vec3(_295, _296, _297), vec3(_229, _230, _231));
    float _441 = dot(vec3(_295, _296, _297), vec3(_236, _237, _238));
    float _447 = inversesqrt(dot(vec3(_435, _438, _441), vec3(_435, _438, _441)));
    float _469 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _489 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_435 * cbMtdParam._m0[14u].x) * _447) * _469) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_438 * cbMtdParam._m0[14u].x) * _447) * _469) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _512 = inversesqrt(dot(vec3(_295, _296, _297), vec3(_295, _296, _297)));
    float _513 = _512 * _295;
    float _514 = _512 * _296;
    float _515 = _512 * _297;
    float _516 = dot(vec4(_513, _514, _515, 0.0), vec4(_236, _237, _238, 0.0));
    float _519 = _516 - cbMtdParam._m0[15u].z;
    float _3116 = isnan(0.0) ? _519 : (isnan(_519) ? 0.0 : max(_519, 0.0));
    float _526 = exp2(log2(1.0 - (isnan(1.0) ? _3116 : (isnan(_3116) ? 1.0 : min(_3116, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _541 = ((((_418.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _489.x) * cbMtdParam._m0[9u].x) * ((_526 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _546 = ((((_418.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _489.y) * cbMtdParam._m0[9u].y) * ((_526 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _551 = ((((_418.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _489.z) * cbMtdParam._m0[9u].z) * ((_526 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _558 = ((cbMtdParam._m0[11u].x - _541) * _406) + _541;
    float _559 = ((cbMtdParam._m0[11u].y - _546) * _406) + _546;
    float _560 = ((cbMtdParam._m0[11u].z - _551) * _406) + _551;
    vec4 _572 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _322) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _323) + cbTextureTilingScale._m0[9u].w));
    float _579 = (_572.x * 2.0) + (-1.0);
    float _580 = (_572.y * 2.0) + (-1.0);
    float _581 = dot(vec2(_579, _580), vec2(_579, _580));
    float _3132 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    vec4 _602 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _612 = cbMtdParam._m0[17u].z + _343.z;
    float _618 = (_612 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_602.z - _612));
    float _621 = ((_572.z - _618) * _406) + _618;
    float _627 = ((((_602.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _352;
    float _628 = ((((_602.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _354;
    float _636 = ((sqrt(1.0 - (isnan(1.0) ? _3132 : (isnan(_3132) ? 1.0 : min(_3132, 1.0)))) - _361) * _406) + _361;
    float _640 = ((_627 * cbMtdParam._m0[14u].z) + _627) + ((_579 - _627) * _406);
    float _642 = ((_628 * cbMtdParam._m0[14u].z) + _628) + ((_580 - _628) * _406);
    vec4 _654 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _658 = cbMtdParam._m0[16u].w * _654.x;
    float _660 = _658 - (_658 * _406);
    float _669 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _670 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _680 = cbSceneParam._m0[86u].x * ((_669 / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _375));
    float _681 = cbSceneParam._m0[86u].y * ((_670 / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _376));
    float _688 = isnan(cbInstanceData._m0[8u].x) ? _680 : (isnan(_680) ? cbInstanceData._m0[8u].x : max(_680, cbInstanceData._m0[8u].x));
    float _689 = isnan(cbInstanceData._m0[8u].y) ? _681 : (isnan(_681) ? cbInstanceData._m0[8u].y : max(_681, cbInstanceData._m0[8u].y));
    vec4 _693 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _688 : (isnan(_688) ? cbInstanceData._m0[8u].z : min(_688, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _689 : (isnan(_689) ? cbInstanceData._m0[8u].w : min(_689, cbInstanceData._m0[8u].w))));
    float _726 = _516 - cbMtdParam._m0[15u].x;
    float _3163 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
    float _736 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3163 : (isnan(_3163) ? 1.0 : min(_3163, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3179 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
    float _737 = isnan(1.0) ? _3179 : (isnan(_3179) ? 1.0 : min(_3179, 1.0));
    float _739 = _737 - (_737 * _406);
    float _743 = fma(_636, _236, fma(_642, _229, _640 * _215));
    float _746 = fma(_636, _237, fma(_642, _230, _640 * _216));
    float _749 = fma(_636, _238, fma(_642, _231, _640 * _217));
    float _753 = inversesqrt(dot(vec3(_743, _746, _749), vec3(_743, _746, _749)));
    float _754 = _753 * _743;
    float _755 = _753 * _746;
    float _756 = _753 * _749;
    float _3190 = isnan(0.0) ? _423 : (isnan(_423) ? 0.0 : max(_423, 0.0));
    float _757 = isnan(1.0) ? _3190 : (isnan(_3190) ? 1.0 : min(_3190, 1.0));
    float _3201 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
    float _758 = isnan(1.0) ? _3201 : (isnan(_3201) ? 1.0 : min(_3201, 1.0));
    float _759 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _3217 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
    float _3228 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
    float _3239 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _776 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _794 = fma(_756, cbSceneParam._m0[5u].z, fma(_755, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _754));
    float _797 = fma(_756, cbSceneParam._m0[6u].z, fma(_755, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _754));
    float _800 = fma(_756, cbSceneParam._m0[7u].z, fma(_755, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _754));
    uint _814 = (_303 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _820 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3217 : (isnan(_3217) ? 1.0 : min(_3217, 1.0)))) * cbInstanceData._m0[_814].x;
    float _821 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3228 : (isnan(_3228) ? 1.0 : min(_3228, 1.0)))) * cbInstanceData._m0[_814].y;
    float _822 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3239 : (isnan(_3239) ? 1.0 : min(_3239, 1.0)))) * cbInstanceData._m0[_814].z;
    float _3250 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
    float _823 = isnan(1.0) ? _3250 : (isnan(_3250) ? 1.0 : min(_3250, 1.0));
    float _3261 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _824 = isnan(1.0) ? _3261 : (isnan(_3261) ? 1.0 : min(_3261, 1.0));
    float _3272 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _825 = isnan(1.0) ? _3272 : (isnan(_3272) ? 1.0 : min(_3272, 1.0));
    vec4 _829 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _669, cbSceneParam._m0[86u].y * _670));
    float _832 = _829.x * TEXCOORD_5.w;
    float _833 = dot(vec3(_754, _755, _756), vec3(_513, _514, _515));
    float _836 = _833 * 2.0;
    float _840 = (_836 * _754) - _513;
    float _841 = (_836 * _755) - _514;
    float _842 = (_836 * _756) - _515;
    float _843 = dot(vec3(_513, _514, _515), vec3(_754, _755, _756));
    float _846 = abs(_843);
    float _3283 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _847 = isnan(1.0) ? _3283 : (isnan(_3283) ? 1.0 : min(_3283, 1.0));
    float _853 = sqrt(_758);
    float _865 = exp2((_853 * 5.0) * log2(1.0 - (_847 * 0.999000012874603271484375))) / (4.0 - (_853 * 3.0));
    float _897 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _901 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _905 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1207;
    float _1209;
    float _1210;
    float _1211;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _932 = fma(_905, cbModelParam._m0[26u].z, fma(_901, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _897));
        float _936 = fma(_905, cbModelParam._m0[27u].z, fma(_901, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _897));
        float _940 = fma(_905, cbModelParam._m0[28u].z, fma(_901, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _897));
        float _965 = _897 + _754;
        float _966 = _901 + _755;
        float _967 = _905 + _756;
        float _977 = fma(_967, cbModelParam._m0[26u].z, fma(_966, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _965)) - _932;
        float _978 = fma(_967, cbModelParam._m0[27u].z, fma(_966, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _965)) - _936;
        float _979 = fma(_967, cbModelParam._m0[28u].z, fma(_966, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _965)) - _940;
        float _983 = inversesqrt(dot(vec3(_977, _978, _979), vec3(_977, _978, _979)));
        float _996 = ((_983 * _977) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_932 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _997 = ((_983 * _978) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_936 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _998 = ((_983 * _979) / cbModelParam._m0[34u].z) + ((((((_940 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1001 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_996, _997, _998), 0.0);
        vec4 _1008 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_996, _997, _998), 0.0);
        vec4 _1015 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_996, _997, _998), 0.0);
        vec4 _1022 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_996, _997, _998), 0.0);
        float _1035 = exp2((_1001.w + (-0.5)) * 20.0) * 2.0;
        float _1036 = _1035 * (_1001.x + (-0.5));
        float _1037 = _1035 * (_1001.y + (-0.5));
        float _1038 = _1035 * (_1001.z + (-0.5));
        float _1045 = exp2((_1008.w + (-0.5)) * 20.0) * 2.0;
        float _1046 = _1045 * (_1008.x + (-0.5));
        float _1047 = _1045 * (_1008.y + (-0.5));
        float _1048 = _1045 * (_1008.z + (-0.5));
        float _1055 = exp2((_1015.w + (-0.5)) * 20.0) * 2.0;
        float _1056 = _1055 * (_1015.x + (-0.5));
        float _1057 = _1055 * (_1015.y + (-0.5));
        float _1058 = _1055 * (_1015.z + (-0.5));
        float _1065 = exp2((_1022.w + (-0.5)) * 20.0) * 2.0;
        float _1066 = _1065 * (_1022.x + (-0.5));
        float _1067 = _1065 * (_1022.y + (-0.5));
        float _1068 = _1065 * (_1022.z + (-0.5));
        float _1069 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
        float _1070 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
        float _1071 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
        float _1072 = _1036 * 0.5;
        float _1073 = _1046 * 0.5;
        float _1074 = _1056 * 0.5;
        float _1075 = dot(vec3(_1072, _1073, _1074), vec3(_1072, _1073, _1074));
        float _1080 = (_1075 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1075);
        float _1089 = (dot(vec3(_754, _755, _756), vec3(_1080 * _1072, _1080 * _1073, _1080 * _1074)) + 1.0) * 0.5;
        float _3309 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
        float _1099 = sqrt(((_1073 * _1073) + (_1072 * _1072)) + (_1074 * _1074)) / (_1069 + 9.9999997473787516355514526367188e-06);
        float _3320 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1100 = isnan(1.0) ? _3320 : (isnan(_3320) ? 1.0 : min(_3320, 1.0));
        float _1101 = _1100 * 2.0;
        float _1105 = (1.0 - _1100) / (_1100 + 1.0);
        float _3331 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
        float _1106 = isnan(1.0) ? _3331 : (isnan(_3331) ? 1.0 : min(_3331, 1.0));
        float _1115 = ((((1.0 - _1106) * (_1101 + 2.0)) * exp2(log2(isnan(1.0) ? _3309 : (isnan(_3309) ? 1.0 : min(_3309, 1.0))) * (_1101 + 1.0))) + _1106) * _1069;
        float _1116 = _1037 * 0.5;
        float _1117 = _1047 * 0.5;
        float _1118 = _1057 * 0.5;
        float _1119 = dot(vec3(_1116, _1117, _1118), vec3(_1116, _1117, _1118));
        float _1124 = (_1119 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1119);
        float _1132 = (dot(vec3(_754, _755, _756), vec3(_1124 * _1116, _1124 * _1117, _1124 * _1118)) + 1.0) * 0.5;
        float _3342 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
        float _1141 = sqrt(((_1117 * _1117) + (_1116 * _1116)) + (_1118 * _1118)) / (_1070 + 9.9999997473787516355514526367188e-06);
        float _3353 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1142 = isnan(1.0) ? _3353 : (isnan(_3353) ? 1.0 : min(_3353, 1.0));
        float _1143 = _1142 * 2.0;
        float _1147 = (1.0 - _1142) / (_1142 + 1.0);
        float _3364 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
        float _1148 = isnan(1.0) ? _3364 : (isnan(_3364) ? 1.0 : min(_3364, 1.0));
        float _1157 = ((((1.0 - _1148) * (_1143 + 2.0)) * exp2(log2(isnan(1.0) ? _3342 : (isnan(_3342) ? 1.0 : min(_3342, 1.0))) * (_1143 + 1.0))) + _1148) * _1070;
        float _1158 = _1038 * 0.5;
        float _1159 = _1048 * 0.5;
        float _1160 = _1058 * 0.5;
        float _1161 = dot(vec3(_1158, _1159, _1160), vec3(_1158, _1159, _1160));
        float _1166 = (_1161 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1161);
        float _1174 = (dot(vec3(_754, _755, _756), vec3(_1166 * _1158, _1166 * _1159, _1166 * _1160)) + 1.0) * 0.5;
        float _3375 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
        float _1183 = sqrt(((_1159 * _1159) + (_1158 * _1158)) + (_1160 * _1160)) / (_1071 + 9.9999997473787516355514526367188e-06);
        float _3386 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1184 = isnan(1.0) ? _3386 : (isnan(_3386) ? 1.0 : min(_3386, 1.0));
        float _1185 = _1184 * 2.0;
        float _1189 = (1.0 - _1184) / (_1184 + 1.0);
        float _3397 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
        float _1190 = isnan(1.0) ? _3397 : (isnan(_3397) ? 1.0 : min(_3397, 1.0));
        float _1199 = ((((1.0 - _1190) * (_1185 + 2.0)) * exp2(log2(isnan(1.0) ? _3375 : (isnan(_3375) ? 1.0 : min(_3375, 1.0))) * (_1185 + 1.0))) + _1190) * _1071;
        _1207 = _1038;
        _1209 = _1037;
        _1210 = _1036;
        _1211 = _1048;
        _1212 = _1047;
        _1213 = _1046;
        _1214 = _1058;
        _1215 = _1057;
        _1216 = _1056;
        _1217 = _1071;
        _1218 = _1070;
        _1219 = _1069;
        _1220 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0)));
        _1221 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0)));
        _1222 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0)));
    }
    else
    {
        _1207 = _1208;
        _1209 = _1208;
        _1210 = _1208;
        _1211 = _1208;
        _1212 = _1208;
        _1213 = _1208;
        _1214 = _1208;
        _1215 = _1208;
        _1216 = _1208;
        _1217 = _1208;
        _1218 = _1208;
        _1219 = _1208;
        _1220 = 0.0;
        _1221 = 0.0;
        _1222 = 0.0;
    }
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1248 = fma(_905, cbModelParam._m0[30u].z, fma(_901, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _897));
        float _1252 = fma(_905, cbModelParam._m0[31u].z, fma(_901, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _897));
        float _1256 = fma(_905, cbModelParam._m0[32u].z, fma(_901, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _897));
        float _1279 = _897 + _754;
        float _1280 = _901 + _755;
        float _1281 = _905 + _756;
        float _1291 = fma(_1281, cbModelParam._m0[30u].z, fma(_1280, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1279)) - _1248;
        float _1292 = fma(_1281, cbModelParam._m0[31u].z, fma(_1280, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1279)) - _1252;
        float _1293 = fma(_1281, cbModelParam._m0[32u].z, fma(_1280, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1279)) - _1256;
        float _1297 = inversesqrt(dot(vec3(_1291, _1292, _1293), vec3(_1291, _1292, _1293)));
        float _1310 = ((_1297 * _1291) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1248 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1311 = ((_1297 * _1292) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1252 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1312 = ((_1297 * _1293) / cbModelParam._m0[35u].z) + ((((((_1256 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1314 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1310, _1311, _1312), 0.0);
        vec4 _1321 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1310, _1311, _1312), 0.0);
        vec4 _1328 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1310, _1311, _1312), 0.0);
        vec4 _1335 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1310, _1311, _1312), 0.0);
        float _1347 = exp2((_1314.w + (-0.5)) * 20.0) * 2.0;
        float _1348 = _1347 * (_1314.x + (-0.5));
        float _1349 = _1347 * (_1314.y + (-0.5));
        float _1350 = _1347 * (_1314.z + (-0.5));
        float _1357 = exp2((_1321.w + (-0.5)) * 20.0) * 2.0;
        float _1358 = _1357 * (_1321.x + (-0.5));
        float _1359 = _1357 * (_1321.y + (-0.5));
        float _1360 = _1357 * (_1321.z + (-0.5));
        float _1367 = exp2((_1328.w + (-0.5)) * 20.0) * 2.0;
        float _1368 = _1367 * (_1328.x + (-0.5));
        float _1369 = _1367 * (_1328.y + (-0.5));
        float _1370 = _1367 * (_1328.z + (-0.5));
        float _1377 = exp2((_1335.w + (-0.5)) * 20.0) * 2.0;
        float _1378 = _1377 * (_1335.x + (-0.5));
        float _1379 = _1377 * (_1335.y + (-0.5));
        float _1380 = _1377 * (_1335.z + (-0.5));
        float _1381 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1382 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1383 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1384 = _1348 * 0.5;
        float _1385 = _1358 * 0.5;
        float _1386 = _1368 * 0.5;
        float _1387 = dot(vec3(_1384, _1385, _1386), vec3(_1384, _1385, _1386));
        float _1392 = (_1387 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1387);
        float _1400 = (dot(vec3(_754, _755, _756), vec3(_1392 * _1384, _1392 * _1385, _1392 * _1386)) + 1.0) * 0.5;
        float _3438 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1409 = sqrt(((_1385 * _1385) + (_1384 * _1384)) + (_1386 * _1386)) / (_1381 + 9.9999997473787516355514526367188e-06);
        float _3449 = isnan(0.0) ? _1409 : (isnan(_1409) ? 0.0 : max(_1409, 0.0));
        float _1410 = isnan(1.0) ? _3449 : (isnan(_3449) ? 1.0 : min(_3449, 1.0));
        float _1411 = _1410 * 2.0;
        float _1415 = (1.0 - _1410) / (_1410 + 1.0);
        float _3460 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1416 = isnan(1.0) ? _3460 : (isnan(_3460) ? 1.0 : min(_3460, 1.0));
        float _1425 = ((((1.0 - _1416) * (_1411 + 2.0)) * exp2(log2(isnan(1.0) ? _3438 : (isnan(_3438) ? 1.0 : min(_3438, 1.0))) * (_1411 + 1.0))) + _1416) * _1381;
        float _1426 = _1349 * 0.5;
        float _1427 = _1359 * 0.5;
        float _1428 = _1369 * 0.5;
        float _1429 = dot(vec3(_1426, _1427, _1428), vec3(_1426, _1427, _1428));
        float _1434 = (_1429 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1429);
        float _1442 = (dot(vec3(_754, _755, _756), vec3(_1434 * _1426, _1434 * _1427, _1434 * _1428)) + 1.0) * 0.5;
        float _3471 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1451 = sqrt(((_1427 * _1427) + (_1426 * _1426)) + (_1428 * _1428)) / (_1382 + 9.9999997473787516355514526367188e-06);
        float _3482 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1452 = isnan(1.0) ? _3482 : (isnan(_3482) ? 1.0 : min(_3482, 1.0));
        float _1453 = _1452 * 2.0;
        float _1457 = (1.0 - _1452) / (_1452 + 1.0);
        float _3493 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1458 = isnan(1.0) ? _3493 : (isnan(_3493) ? 1.0 : min(_3493, 1.0));
        float _1467 = ((((1.0 - _1458) * (_1453 + 2.0)) * exp2(log2(isnan(1.0) ? _3471 : (isnan(_3471) ? 1.0 : min(_3471, 1.0))) * (_1453 + 1.0))) + _1458) * _1382;
        float _1468 = _1350 * 0.5;
        float _1469 = _1360 * 0.5;
        float _1470 = _1370 * 0.5;
        float _1471 = dot(vec3(_1468, _1469, _1470), vec3(_1468, _1469, _1470));
        float _1476 = (_1471 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1471);
        float _1484 = (dot(vec3(_754, _755, _756), vec3(_1476 * _1468, _1476 * _1469, _1476 * _1470)) + 1.0) * 0.5;
        float _3504 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1493 = sqrt(((_1469 * _1469) + (_1468 * _1468)) + (_1470 * _1470)) / (_1383 + 9.9999997473787516355514526367188e-06);
        float _3515 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1494 = isnan(1.0) ? _3515 : (isnan(_3515) ? 1.0 : min(_3515, 1.0));
        float _1495 = _1494 * 2.0;
        float _1499 = (1.0 - _1494) / (_1494 + 1.0);
        float _3526 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
        float _1500 = isnan(1.0) ? _3526 : (isnan(_3526) ? 1.0 : min(_3526, 1.0));
        float _1509 = ((((1.0 - _1500) * (_1495 + 2.0)) * exp2(log2(isnan(1.0) ? _3504 : (isnan(_3504) ? 1.0 : min(_3504, 1.0))) * (_1495 + 1.0))) + _1500) * _1383;
        _1517 = _1350;
        _1518 = _1349;
        _1519 = _1348;
        _1520 = _1360;
        _1521 = _1359;
        _1522 = _1358;
        _1523 = _1370;
        _1524 = _1369;
        _1525 = _1368;
        _1526 = _1383;
        _1527 = _1382;
        _1528 = _1381;
        _1529 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0)));
        _1530 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0)));
        _1531 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0)));
    }
    else
    {
        _1517 = _1208;
        _1518 = _1208;
        _1519 = _1208;
        _1520 = _1208;
        _1521 = _1208;
        _1522 = _1208;
        _1523 = _1208;
        _1524 = _1208;
        _1525 = _1208;
        _1526 = _1208;
        _1527 = _1208;
        _1528 = _1208;
        _1529 = 0.0;
        _1530 = 0.0;
        _1531 = 0.0;
    }
    float _1541 = (cbModelParam._m0[1u].x * (_1529 - _1220)) + _1220;
    float _1542 = (cbModelParam._m0[1u].x * (_1530 - _1221)) + _1221;
    float _1543 = (cbModelParam._m0[1u].x * (_1531 - _1222)) + _1222;
    float _1564 = fma(_1543, cbSceneParam._m0[89u].z, fma(_1542, cbSceneParam._m0[89u].y, _1541 * cbSceneParam._m0[89u].x));
    float _1567 = fma(_1543, cbSceneParam._m0[90u].z, fma(_1542, cbSceneParam._m0[90u].y, _1541 * cbSceneParam._m0[90u].x));
    float _1570 = fma(_1543, cbSceneParam._m0[91u].z, fma(_1542, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1541));
    float _1585 = _840 * 0.5;
    float _1586 = _841 * 0.5;
    float _1587 = _842 * 0.5;
    float _1588 = dot(vec4(_1585, _1586, _1587, 1.0), vec4(_1519, _1522, _1525, _1528));
    float _1591 = dot(vec4(_1585, _1586, _1587, 1.0), vec4(_1518, _1521, _1524, _1527));
    float _1594 = dot(vec4(_1585, _1586, _1587, 1.0), vec4(_1517, _1520, _1523, _1526));
    float _1628;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1601 = dot(vec4(_1585, _1586, _1587, 1.0), vec4(_1207, _1211, _1214, _1217));
        float _1605 = dot(vec4(_1585, _1586, _1587, 1.0), vec4(_1209, _1212, _1215, _1218));
        float _1609 = dot(vec4(_1585, _1586, _1587, 1.0), vec4(_1210, _1213, _1216, _1219));
        float _1616 = dot(vec4(cbModelParam._m0[39u]), vec4(_1585, _1586, _1587, 1.0));
        _1628 = dot(vec3(isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0)), isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0)), isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1616) ? 0.0 : (isnan(0.0) ? _1616 : max(0.0, _1616))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1628 = 1.0;
    }
    float _1639;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1630 = dot(vec4(cbModelParam._m0[40u]), vec4(_1585, _1586, _1587, 1.0));
        _1639 = dot(vec3(isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0)), isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0)), isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1630) ? 0.0 : (isnan(0.0) ? _1630 : max(0.0, _1630))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1639 = 1.0;
    }
    float _1643 = (_1639 * cbModelParam._m0[1u].x) + (_1628 * (1.0 - cbModelParam._m0[1u].x));
    float _1653 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _758);
    float _1654 = isnan(_1653) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1653 : min(cbModelParam._m0[25u].z, _1653));
    float _1734;
    float _1736;
    float _1738;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1701 = fma(_905, cbModelParam._m0[13u].z, fma(_901, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _897)) + cbModelParam._m0[13u].w;
        float _1705 = fma(_905, cbModelParam._m0[14u].z, fma(_901, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _897)) + cbModelParam._m0[14u].w;
        float _1709 = fma(_905, cbModelParam._m0[15u].z, fma(_901, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _897)) + cbModelParam._m0[15u].w;
        float _1712 = fma(_842, cbModelParam._m0[13u].z, fma(_841, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _840));
        float _1715 = fma(_842, cbModelParam._m0[14u].z, fma(_841, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _840));
        float _1718 = fma(_842, cbModelParam._m0[15u].z, fma(_841, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _840));
        float _1746;
        if (_1712 > 0.0)
        {
            _1746 = abs((1.0 - _1701) / _1712);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1712 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1701 + 1.0) / _1712);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1746 = frontier_phi_16_14_ladder;
        }
        float _1917;
        if (_1715 > 0.0)
        {
            _1917 = abs((1.0 - _1705) / _1715);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1715 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1705 + 1.0) / _1715);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1917 = frontier_phi_25_21_ladder;
        }
        float _2152;
        if (_1718 > 0.0)
        {
            _2152 = abs((1.0 - _1709) / _1718);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1718 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1709 + 1.0) / _1718);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2152 = frontier_phi_36_32_ladder;
        }
        float _2154 = isnan(_1917) ? _1746 : (isnan(_1746) ? _1917 : min(_1746, _1917));
        float _2155 = isnan(_2152) ? _2154 : (isnan(_2154) ? _2152 : min(_2154, _2152));
        float _2159 = (_2155 * _1712) + _1701;
        float _2160 = (_2155 * _1715) + _1705;
        float _2161 = (_2155 * _1718) + _1709;
        float _2162 = _2155 * 9.9999997473787516355514526367188e-05;
        float _2164 = (-1.0) - _2162;
        float _2166 = _2162 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2161 > _2166) || ((_2161 < _2164) || ((_2160 > _2166) || ((_2160 < _2164) || ((_2159 < _2164) || (_2159 > _2166))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2311 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2161, cbModelParam._m0[9u].z, fma(_2160, cbModelParam._m0[9u].y, _2159 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2161, cbModelParam._m0[10u].z, fma(_2160, cbModelParam._m0[10u].y, _2159 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2161, cbModelParam._m0[11u].z, fma(_2160, cbModelParam._m0[11u].y, _2159 * cbModelParam._m0[11u].x))), _1654);
            frontier_phi_15_36_ladder = _2311.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2311.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2311.y * cbModelParam._m0[1u].y;
        }
        _1734 = frontier_phi_15_36_ladder_1;
        _1736 = frontier_phi_15_36_ladder_2;
        _1738 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1722 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_840, _841, _842), _1654);
        _1734 = _1722.x * cbModelParam._m0[1u].y;
        _1736 = _1722.y * cbModelParam._m0[1u].y;
        _1738 = _1722.z * cbModelParam._m0[1u].y;
    }
    float _1742 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _758);
    float _1743 = isnan(_1742) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1742 : min(cbModelParam._m0[25u].w, _1742));
    float _1834;
    float _1836;
    float _1838;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1798 = fma(_905, cbModelParam._m0[21u].z, fma(_901, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _897)) + cbModelParam._m0[21u].w;
        float _1802 = fma(_905, cbModelParam._m0[22u].z, fma(_901, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _897)) + cbModelParam._m0[22u].w;
        float _1806 = fma(_905, cbModelParam._m0[23u].z, fma(_901, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _897)) + cbModelParam._m0[23u].w;
        float _1809 = fma(_842, cbModelParam._m0[21u].z, fma(_841, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _840));
        float _1812 = fma(_842, cbModelParam._m0[22u].z, fma(_841, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _840));
        float _1815 = fma(_842, cbModelParam._m0[23u].z, fma(_841, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _840));
        float _1922;
        if (_1809 > 0.0)
        {
            _1922 = abs((1.0 - _1798) / _1809);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1809 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1798 + 1.0) / _1809);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1922 = frontier_phi_27_23_ladder;
        }
        float _2179;
        if (_1812 > 0.0)
        {
            _2179 = abs((1.0 - _1802) / _1812);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1812 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1802 + 1.0) / _1812);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2179 = frontier_phi_38_34_ladder;
        }
        float _2483;
        if (_1815 > 0.0)
        {
            _2483 = abs((1.0 - _1806) / _1815);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1815 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1806 + 1.0) / _1815);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2483 = frontier_phi_49_44_ladder;
        }
        float _2485 = isnan(_2179) ? _1922 : (isnan(_1922) ? _2179 : min(_1922, _2179));
        float _2486 = isnan(_2483) ? _2485 : (isnan(_2485) ? _2483 : min(_2485, _2483));
        float _2490 = (_2486 * _1809) + _1798;
        float _2491 = (_2486 * _1812) + _1802;
        float _2492 = (_2486 * _1815) + _1806;
        float _2493 = _2486 * 9.9999997473787516355514526367188e-05;
        float _2494 = (-1.0) - _2493;
        float _2496 = _2493 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2492 > _2496) || ((_2492 < _2494) || ((_2491 > _2496) || ((_2491 < _2494) || ((_2490 < _2494) || (_2490 > _2496))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2665 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2492, cbModelParam._m0[17u].z, fma(_2491, cbModelParam._m0[17u].y, _2490 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2492, cbModelParam._m0[18u].z, fma(_2491, cbModelParam._m0[18u].y, _2490 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2492, cbModelParam._m0[19u].z, fma(_2491, cbModelParam._m0[19u].y, _2490 * cbModelParam._m0[19u].x))), _1743);
            frontier_phi_24_49_ladder = _2665.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2665.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2665.x * cbModelParam._m0[1u].z;
        }
        _1834 = frontier_phi_24_49_ladder_2;
        _1836 = frontier_phi_24_49_ladder;
        _1838 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1818 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_840, _841, _842), _1743);
        _1834 = _1818.x * cbModelParam._m0[1u].z;
        _1836 = _1818.y * cbModelParam._m0[1u].z;
        _1838 = _1818.z * cbModelParam._m0[1u].z;
    }
    float _1850 = ((((1.0 - _865) * ((_853 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_865 * _853)) * _832;
    float _1851 = _1850 * ((cbModelParam._m0[1u].w * (_1834 - _1734)) + _1734);
    float _1852 = _1850 * ((cbModelParam._m0[1u].w * (_1836 - _1736)) + _1736);
    float _1853 = _1850 * ((cbModelParam._m0[1u].w * (_1838 - _1738)) + _1738);
    float _1856 = fma(_1853, cbSceneParam._m0[89u].z, fma(_1852, cbSceneParam._m0[89u].y, _1851 * cbSceneParam._m0[89u].x));
    float _1859 = fma(_1853, cbSceneParam._m0[90u].z, fma(_1852, cbSceneParam._m0[90u].y, _1851 * cbSceneParam._m0[90u].x));
    float _1862 = fma(_1853, cbSceneParam._m0[91u].z, fma(_1852, cbSceneParam._m0[91u].y, _1851 * cbSceneParam._m0[91u].x));
    uvec4 _1872 = floatBitsToUint(cbInstanceData._m0[_303 + 5u]);
    uint _1874 = _1872.x * 14u;
    uint _1875 = _1874 + 13u;
    float _1880 = _832 + (-1.0);
    float _1883 = (cbLight._m0[_1875].x * _1880) + 1.0;
    float _1884 = (cbLight._m0[_1875].y * _1880) + 1.0;
    uint _1886 = _1874 + 4u;
    float _1897 = dot(vec3(cbLight._m0[_1874].xyz), vec3(_754, _755, _756));
    float _1900 = isnan(1.0) ? _1883 : (isnan(_1883) ? 1.0 : min(_1883, 1.0));
    uint _1901 = _1874 + 5u;
    uint _1907 = _1874 | 1u;
    float _1913 = dot(vec3(cbLight._m0[_1907].xyz), vec3(_754, _755, _756));
    float _1916 = isnan(1.0) ? _1884 : (isnan(_1884) ? 1.0 : min(_1884, 1.0));
    float _1981;
    float _1982;
    float _1983;
    if (_759 == 0.0)
    {
        float _3662 = isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0));
        float _3673 = isnan(0.0) ? _1913 : (isnan(_1913) ? 0.0 : max(_1913, 0.0));
        float _1935 = (isnan(1.0) ? _3662 : (isnan(_3662) ? 1.0 : min(_3662, 1.0))) * 0.3183098733425140380859375;
        float _1937 = (isnan(1.0) ? _3673 : (isnan(_3673) ? 1.0 : min(_3673, 1.0))) * 0.3183098733425140380859375;
        _1981 = ((cbLight._m0[_1901].x * _1916) * _1937) + ((cbLight._m0[_1886].x * _1900) * _1935);
        _1982 = ((_1916 * cbLight._m0[_1901].y) * _1937) + ((_1900 * cbLight._m0[_1886].y) * _1935);
        _1983 = ((_1916 * cbLight._m0[_1901].z) * _1937) + ((_1900 * cbLight._m0[_1886].z) * _1935);
    }
    else
    {
        float _1947 = _1897 + _759;
        float _1950 = (_759 * 2.0) + 1.0;
        float _1951 = (isnan(0.0) ? _1947 : (isnan(_1947) ? 0.0 : max(_1947, 0.0))) / _1950;
        float _1958 = _1913 + _759;
        float _1960 = (isnan(0.0) ? _1958 : (isnan(_1958) ? 0.0 : max(_1958, 0.0))) / _1950;
        _1981 = (((_1960 * cbLight._m0[_1901].x) * _1916) + ((_1951 * cbLight._m0[_1886].x) * _1900)) * 0.3183098733425140380859375;
        _1982 = (((_1960 * cbLight._m0[_1901].y) * _1916) + ((_1951 * cbLight._m0[_1886].y) * _1900)) * 0.3183098733425140380859375;
        _1983 = (((_1960 * cbLight._m0[_1901].z) * _1916) + ((_1951 * cbLight._m0[_1886].z) * _1900)) * 0.3183098733425140380859375;
    }
    uint _1987 = _1874 + 8u;
    float _2003 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1874].w)) * _758) * 0.949999988079071044921875);
    float _2004 = _2003 * _2003;
    float _2005 = cbLight._m0[_1874].x + _513;
    float _2006 = cbLight._m0[_1874].y + _514;
    float _2007 = cbLight._m0[_1874].z + _515;
    float _2011 = inversesqrt(dot(vec3(_2005, _2006, _2007), vec3(_2005, _2006, _2007)));
    float _2012 = _2011 * _2005;
    float _2013 = _2011 * _2006;
    float _2014 = _2011 * _2007;
    float _2015 = dot(vec3(_754, _755, _756), vec3(cbLight._m0[_1874].xyz));
    float _3694 = isnan(0.0) ? _2015 : (isnan(_2015) ? 0.0 : max(_2015, 0.0));
    float _2018 = isnan(1.0) ? _3694 : (isnan(_3694) ? 1.0 : min(_3694, 1.0));
    float _3705 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _2019 = isnan(1.0) ? _3705 : (isnan(_3705) ? 1.0 : min(_3705, 1.0));
    float _2020 = dot(vec3(_754, _755, _756), vec3(_2012, _2013, _2014));
    float _3716 = isnan(0.0) ? _2020 : (isnan(_2020) ? 0.0 : max(_2020, 0.0));
    float _2023 = isnan(1.0) ? _3716 : (isnan(_3716) ? 1.0 : min(_3716, 1.0));
    float _2024 = dot(vec3(cbLight._m0[_1874].xyz), vec3(_2012, _2013, _2014));
    float _3727 = isnan(0.0) ? _2024 : (isnan(_2024) ? 0.0 : max(_2024, 0.0));
    float _2028 = _2004 * _2004;
    float _2032 = ((_2023 * _2023) * (_2028 + (-1.0))) + 1.0;
    float _2043 = (exp2(log2(1.0 - (isnan(1.0) ? _3727 : (isnan(_3727) ? 1.0 : min(_3727, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2044 = 1.0 - _2004;
    float _2055 = (0.5 / (((_2019 * ((_2018 * _2044) + _2004)) + 9.9999999392252902907785028219223e-09) + (((_2019 * _2044) + _2004) * _2018))) * _2018;
    float _3738 = isnan(0.0) ? _2055 : (isnan(_2055) ? 0.0 : max(_2055, 0.0));
    float _2057 = (isnan(1.0) ? _3738 : (isnan(_3738) ? 1.0 : min(_3738, 1.0))) * (_2028 / ((_2032 * _2032) * 3.141590118408203125));
    uint _2070 = _1874 + 9u;
    float _2084 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1907].w)) * _758) * 0.949999988079071044921875);
    float _2085 = _2084 * _2084;
    float _2086 = cbLight._m0[_1907].x + _513;
    float _2087 = cbLight._m0[_1907].y + _514;
    float _2088 = cbLight._m0[_1907].z + _515;
    float _2092 = inversesqrt(dot(vec3(_2086, _2087, _2088), vec3(_2086, _2087, _2088)));
    float _2093 = _2092 * _2086;
    float _2094 = _2092 * _2087;
    float _2095 = _2092 * _2088;
    float _2096 = dot(vec3(_754, _755, _756), vec3(cbLight._m0[_1907].xyz));
    float _3749 = isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0));
    float _2099 = isnan(1.0) ? _3749 : (isnan(_3749) ? 1.0 : min(_3749, 1.0));
    float _2100 = dot(vec3(_754, _755, _756), vec3(_2093, _2094, _2095));
    float _3760 = isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0));
    float _2103 = isnan(1.0) ? _3760 : (isnan(_3760) ? 1.0 : min(_3760, 1.0));
    float _2104 = dot(vec3(cbLight._m0[_1907].xyz), vec3(_2093, _2094, _2095));
    float _3771 = isnan(0.0) ? _2104 : (isnan(_2104) ? 0.0 : max(_2104, 0.0));
    float _2108 = _2085 * _2085;
    float _2112 = ((_2103 * _2103) * (_2108 + (-1.0))) + 1.0;
    float _2121 = (exp2(log2(1.0 - (isnan(1.0) ? _3771 : (isnan(_3771) ? 1.0 : min(_3771, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2122 = 1.0 - _2085;
    float _2132 = (0.5 / (((_2019 * ((_2099 * _2122) + _2085)) + 9.9999999392252902907785028219223e-09) + (((_2019 * _2122) + _2085) * _2099))) * _2099;
    float _3782 = isnan(0.0) ? _2132 : (isnan(_2132) ? 0.0 : max(_2132, 0.0));
    float _2134 = (isnan(1.0) ? _3782 : (isnan(_3782) ? 1.0 : min(_3782, 1.0))) * (_2108 / ((_2112 * _2112) * 3.141590118408203125));
    float _2144 = (((_2121 * cbLight._m0[_2070].x) * _2134) * _1916) + (((_2043 * cbLight._m0[_1987].x) * _2057) * _1900);
    float _2145 = (((_2121 * cbLight._m0[_2070].y) * _2134) * _1916) + (((_2043 * cbLight._m0[_1987].y) * _2057) * _1900);
    float _2146 = (((_2121 * cbLight._m0[_2070].z) * _2134) * _1916) + (((_2043 * cbLight._m0[_1987].z) * _2057) * _1900);
    float _2282;
    float _2284;
    float _2286;
    float _2288;
    float _2290;
    float _2292;
    if (_1872.y == 0u)
    {
        float _2223 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2224 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2223;
        float _2225 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2223;
        float _2226 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2223;
        uvec4 _2238 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2239 = _2238.x;
        uint _2250 = uint((float(_2238.y) * floor(float(uint(cbSceneParam._m0[85u].y * _670) / _2239))) + floor(float(uint(cbSceneParam._m0[85u].x * _669) / _2239)));
        float _2260 = (log2(_2226 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2261 = isnan(0.0) ? _2260 : (isnan(_2260) ? 0.0 : max(_2260, 0.0));
        uint _2264 = uint(isnan(14.0) ? _2261 : (isnan(_2261) ? 14.0 : min(_2261, 14.0)));
        uint _2271 = _2238.z;
        float _2320;
        float _2322;
        float _2324;
        float _2326;
        float _2328;
        float _2330;
        if (((((1u << ((_2271 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2264 << 2u) + (_2250 << 6u)) >> 2u)).x) == 0u) || ((_2271 & 240u) == 0u))
        {
            _2320 = 0.0;
            _2322 = 0.0;
            _2324 = 0.0;
            _2326 = 0.0;
            _2328 = 0.0;
            _2330 = 0.0;
        }
        else
        {
            float _2321;
            float _2323;
            float _2325;
            float _2327;
            float _2329;
            float _2331;
            float _2509 = 0.0;
            float _2510 = 0.0;
            float _2511 = 0.0;
            float _2512 = 0.0;
            float _2513 = 0.0;
            float _2514 = 0.0;
            uint _2515 = 0u;
            uint _2524;
            bool _2525;
            for (;;)
            {
                _2524 = texelFetch(g_lightClassification, int((((_2264 << 5u) + (_2250 << 9u)) + (_2515 << 2u)) >> 2u)).x;
                _2525 = _2524 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2525)
                {
                    frontier_phi_55_pred = _2514;
                    frontier_phi_55_pred_1 = _2513;
                    frontier_phi_55_pred_2 = _2512;
                    frontier_phi_55_pred_3 = _2510;
                    frontier_phi_55_pred_4 = _2509;
                    frontier_phi_55_pred_5 = _2511;
                }
                else
                {
                    float _2722;
                    float _2723;
                    float _2724;
                    float _2725;
                    float _2726;
                    float _2727;
                    uint _2728;
                    _2722 = _2509;
                    _2723 = _2510;
                    _2724 = _2511;
                    _2725 = _2512;
                    _2726 = _2513;
                    _2727 = _2514;
                    _2728 = _2524;
                    float _2670;
                    float _2671;
                    float _2672;
                    float _2673;
                    float _2674;
                    float _2675;
                    for (;;)
                    {
                        uint _2732 = uint(findLSB(_2728)) + (_2515 << 5u);
                        uint _2729 = (_2728 + 4294967295u) & _2728;
                        uint _2734 = _2732 * 48u;
                        vec4 _2748 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2734)).x, texelFetch(g_PointLightRenderingBuffer, int(_2734 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2734 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2734 + 3u)).x));
                        uint _2754 = (_2732 * 48u) + 4u;
                        vec4 _2767 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2754)).x, texelFetch(g_PointLightRenderingBuffer, int(_2754 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2754 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2754 + 3u)).x));
                        float _2768 = _2767.x;
                        float _2769 = _2767.y;
                        float _2770 = _2767.z;
                        uint _2773 = (_2732 * 48u) + 8u;
                        vec3 _2784 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2773)).x, texelFetch(g_PointLightRenderingBuffer, int(_2773 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2773 + 2u)).x));
                        uint _2789 = (_2732 * 48u) + 12u;
                        vec2 _2797 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2789)).x, texelFetch(g_PointLightRenderingBuffer, int(_2789 + 1u)).x));
                        float _2803 = inversesqrt(dot(vec3(_2224, _2225, _2226), vec3(_2224, _2225, _2226)));
                        float _2804 = _2803 * _2224;
                        float _2805 = _2803 * _2225;
                        float _2806 = _2803 * _2226;
                        float _2807 = _2748.x - _2224;
                        float _2808 = _2748.y - _2225;
                        float _2809 = _2748.z - _2226;
                        float _2810 = dot(vec3(_2807, _2808, _2809), vec3(_2807, _2808, _2809));
                        float _2813 = inversesqrt(_2810);
                        float _2814 = _2813 * _2807;
                        float _2815 = _2813 * _2808;
                        float _2816 = _2813 * _2809;
                        float _2817 = dot(vec3(_794, _797, _800), vec3(_2814, _2815, _2816));
                        float _2822 = 1.0 - (_2810 * _2748.w);
                        float _3803 = isnan(0.0) ? _2822 : (isnan(_2822) ? 0.0 : max(_2822, 0.0));
                        float _2823 = isnan(1.0) ? _3803 : (isnan(_3803) ? 1.0 : min(_3803, 1.0));
                        float _2824 = sqrt(_2810) * _2767.w;
                        float _2827 = 1.39999997615814208984375 / (_2824 + 1.39999997615814208984375);
                        float _2828 = _2827 * _2827;
                        float _2829 = 1.0 - _2828;
                        float _2831 = (_2829 * _2829) * _759;
                        float _2834 = ((_2829 * _2817) + _2828) + _2831;
                        float _2839 = _2824 * _2824;
                        float _2844 = ((isnan(0.0) ? _2834 : (isnan(_2834) ? 0.0 : max(_2834, 0.0))) * _2823) / (((_2831 * 2.0) + 1.0) * ((_2839 * 0.699999988079071044921875) + 1.0));
                        float _2848 = dot(vec3(_2814, _2815, _2816), vec3(_2804, _2805, _2806));
                        float _3819 = isnan(0.0) ? _2848 : (isnan(_2848) ? 0.0 : max(_2848, 0.0));
                        float _2855 = dot(vec3((-0.0) - _2804, (-0.0) - _2805, (-0.0) - _2806), vec3(_794, _797, _800)) + 1.0;
                        float _2857 = (isnan(0.0) ? _2855 : (isnan(_2855) ? 0.0 : max(_2855, 0.0))) * 0.5;
                        float _2864 = ((_2857 * _2857) * _2797.x) * exp2((_2797.y * 32.0) * log2(isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0))));
                        float _2866 = _759 / (_759 + 1.0);
                        float _2882 = (-0.0) - _2224;
                        float _2883 = (-0.0) - _2225;
                        float _2884 = (-0.0) - _2226;
                        float _2888 = inversesqrt(dot(vec3(_2882, _2883, _2884), vec3(_2882, _2883, _2884)));
                        float _2889 = _2888 * _2882;
                        float _2890 = _2888 * _2883;
                        float _2891 = _2888 * _2884;
                        float _2899 = exp2(log2(1.0 / ((_2839 * 3.5) + 5.0)) * 0.25);
                        float _2900 = 1.0 - _853;
                        float _2907 = sqrt(1.0 - ((1.0 - (_2900 * _2900)) * (1.0 - (_2899 * _2899))));
                        float _2908 = _2907 * _2907;
                        float _2909 = _2908 * _2908;
                        float _2910 = _2889 + _2814;
                        float _2911 = _2890 + _2815;
                        float _2912 = _2891 + _2816;
                        float _2916 = inversesqrt(dot(vec3(_2910, _2911, _2912), vec3(_2910, _2911, _2912)));
                        float _2920 = dot(vec3(_794, _797, _800), vec3(_2889, _2890, _2891));
                        float _3835 = isnan(0.0) ? _2920 : (isnan(_2920) ? 0.0 : max(_2920, 0.0));
                        float _2923 = isnan(1.0) ? _3835 : (isnan(_3835) ? 1.0 : min(_3835, 1.0));
                        float _2924 = dot(vec3(_794, _797, _800), vec3(_2916 * _2910, _2916 * _2911, _2916 * _2912));
                        float _3846 = isnan(0.0) ? _2924 : (isnan(_2924) ? 0.0 : max(_2924, 0.0));
                        float _2927 = isnan(1.0) ? _3846 : (isnan(_3846) ? 1.0 : min(_3846, 1.0));
                        float _2931 = ((_2927 * _2927) * (_2909 + (-1.0))) + 1.0;
                        float _2932 = _2827 * _2908;
                        float _2933 = _2932 * _2932;
                        float _2936 = ((1.0 - _2933) * _2817) + _2933;
                        float _3857 = isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : max(_2936, 0.0));
                        float _2937 = isnan(1.0) ? _3857 : (isnan(_3857) ? 1.0 : min(_3857, 1.0));
                        float _2938 = 1.0 - _2908;
                        float _2948 = (0.5 / (((_2937 * ((_2923 * _2938) + _2908)) + 9.9999999392252902907785028219223e-09) + (((_2937 * _2938) + _2908) * _2923))) * _2937;
                        float _3868 = isnan(0.0) ? _2948 : (isnan(_2948) ? 0.0 : max(_2948, 0.0));
                        float _2959 = (((_2909 * 3.1415927410125732421875) * (isnan(1.0) ? _3868 : (isnan(_3868) ? 1.0 : min(_3868, 1.0)))) / ((_2931 * _2931) * ((_2839 * 2.1991131305694580078125) + 3.141590118408203125))) * _2823;
                        _2673 = (((((_2768 * 0.3183098733425140380859375) * _2866) * _2864) + _2768) * _2844) + _2725;
                        _2674 = (((((_2769 * 0.3183098733425140380859375) * _2866) * _2864) + _2769) * _2844) + _2726;
                        _2675 = (((((_2770 * 0.3183098733425140380859375) * _2866) * _2864) + _2770) * _2844) + _2727;
                        _2670 = (_2959 * _2784.x) + _2722;
                        _2671 = (_2959 * _2784.y) + _2723;
                        _2672 = (_2959 * _2784.z) + _2724;
                        if (_2729 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2722 = _2670;
                            _2723 = _2671;
                            _2724 = _2672;
                            _2725 = _2673;
                            _2726 = _2674;
                            _2727 = _2675;
                            _2728 = _2729;
                        }
                    }
                    frontier_phi_55_pred = _2675;
                    frontier_phi_55_pred_1 = _2674;
                    frontier_phi_55_pred_2 = _2673;
                    frontier_phi_55_pred_3 = _2671;
                    frontier_phi_55_pred_4 = _2670;
                    frontier_phi_55_pred_5 = _2672;
                }
                _2331 = frontier_phi_55_pred;
                _2329 = frontier_phi_55_pred_1;
                _2327 = frontier_phi_55_pred_2;
                _2323 = frontier_phi_55_pred_3;
                _2321 = frontier_phi_55_pred_4;
                _2325 = frontier_phi_55_pred_5;
                uint _2516 = _2515 + 1u;
                if (_2516 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2509 = _2321;
                    _2510 = _2323;
                    _2511 = _2325;
                    _2512 = _2327;
                    _2513 = _2329;
                    _2514 = _2331;
                    _2515 = _2516;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2320 = _2321;
            _2322 = _2323;
            _2324 = _2325;
            _2326 = _2327;
            _2328 = _2329;
            _2330 = _2331;
        }
        float _2335 = isnan(1.0) ? _832 : (isnan(_832) ? 1.0 : min(_832, 1.0));
        _2282 = (_2335 * _2326) + _1981;
        _2284 = (_2335 * _2328) + _1982;
        _2286 = (_2335 * _2330) + _1983;
        _2288 = ((_2320 * 0.039999999105930328369140625) * _2335) + _2144;
        _2290 = ((_2322 * 0.039999999105930328369140625) * _2335) + _2145;
        _2292 = ((_2324 * 0.039999999105930328369140625) * _2335) + _2146;
    }
    else
    {
        _2282 = _1981;
        _2284 = _1982;
        _2286 = _1983;
        _2288 = _2144;
        _2290 = _2145;
        _2292 = _2146;
    }
    float _2406;
    float _2407;
    float _2408;
    if (_759 > 0.0)
    {
        uint _2342 = _1874 + 4u;
        float _2348 = (-0.0) - _513;
        float _2349 = (-0.0) - _514;
        float _2350 = (-0.0) - _515;
        float _2351 = dot(vec3(cbLight._m0[_1874].xyz), vec3(_2348, _2349, _2350));
        float _3884 = isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0));
        float _2355 = _843 + 1.0;
        float _2357 = (isnan(0.0) ? _2355 : (isnan(_2355) ? 0.0 : max(_2355, 0.0))) * 0.5;
        float _2362 = _2357 * _2357;
        float _2363 = _2362 * exp2(log2(isnan(1.0) ? _3884 : (isnan(_3884) ? 1.0 : min(_3884, 1.0))) * 32.0);
        float _2365 = _759 / (_759 + 1.0);
        float _2366 = isnan(_1883) ? 1.0 : (isnan(1.0) ? _1883 : min(1.0, _1883));
        uint _2376 = _1874 + 5u;
        float _2382 = dot(vec3(cbLight._m0[_1907].xyz), vec3(_2348, _2349, _2350));
        float _3905 = isnan(0.0) ? _2382 : (isnan(_2382) ? 0.0 : max(_2382, 0.0));
        float _2389 = _2362 * exp2(log2(isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0))) * 32.0);
        float _2390 = isnan(_1884) ? 1.0 : (isnan(1.0) ? _1884 : min(1.0, _1884));
        _2406 = ((((_2389 * cbLight._m0[_2376].x) * _2365) * _2390) + (((_2363 * cbLight._m0[_2342].x) * _2365) * _2366)) * 0.3183098733425140380859375;
        _2407 = ((((_2389 * cbLight._m0[_2376].y) * _2365) * _2390) + (((_2363 * cbLight._m0[_2342].y) * _2365) * _2366)) * 0.3183098733425140380859375;
        _2408 = ((((_2389 * cbLight._m0[_2376].z) * _2365) * _2390) + (((_2363 * cbLight._m0[_2342].z) * _2365) * _2366)) * 0.3183098733425140380859375;
    }
    else
    {
        _2406 = 0.0;
        _2407 = 0.0;
        _2408 = 0.0;
    }
    float _3921 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _3932 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _3943 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _3954 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    float _2423 = (isnan(1.0) ? _3921 : (isnan(_3921) ? 1.0 : min(_3921, 1.0))) * ((_2282 + ((isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0))) * _832)) + _2406);
    float _2424 = (isnan(1.0) ? _3932 : (isnan(_3932) ? 1.0 : min(_3932, 1.0))) * ((_2284 + ((isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0))) * _832)) + _2407);
    float _2425 = (isnan(1.0) ? _3943 : (isnan(_3943) ? 1.0 : min(_3943, 1.0))) * ((_2286 + ((isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0))) * _832)) + _2408);
    float _2429 = 0.959999978542327880859375 - (exp2(log2(1.0 - _847) * 5.0) * 0.959999978542327880859375);
    float _2454 = _669 / cbSceneParam._m0[86u].x;
    float _2455 = _670 / cbSceneParam._m0[86u].y;
    vec4 _2469 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2454, _2455, (log2((isnan(cbSceneParam._m0[77u].w) ? _776 : (isnan(_776) ? cbSceneParam._m0[77u].w : min(_776, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2471 = _2469.x;
    float _2472 = _2469.y;
    float _2473 = _2469.z;
    float _2474 = _2469.w;
    float _2567;
    float _2569;
    float _2571;
    float _2573;
    if (_776 > cbSceneParam._m0[78u].w)
    {
        float _2530 = isnan(_776) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _776 : min(cbSceneParam._m0[80u].w, _776));
        float _2531 = _2530 / _776;
        float _2542 = _2531 * _295;
        float _2543 = _296 * _2531;
        float _2544 = (-0.0) - _2543;
        float _2545 = _2531 * _297;
        float _2547 = (cbSceneParam._m0[77u].w * _2544) / _2530;
        float _2548 = _2547 + cbSceneParam._m0[79u].w;
        float _2549 = cbSceneParam._m0[79u].w - _2543;
        float _2555 = sqrt(((_2542 * _2542) + (_2543 * _2543)) + (_2545 * _2545));
        float _2558 = (1.0 - (cbSceneParam._m0[77u].w / _2530)) * _2555;
        float _2563 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2565 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2964;
        if (abs((_2544 - _2547) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2964 = ((((_2548 > 0.0) ? exp2(_2563 * _2548) : (2.0 - exp2(_2565 * _2548))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2558;
        }
        else
        {
            float _2695 = 1.0 / cbSceneParam._m0[80u].x;
            float _2696 = isnan(_2549) ? _2548 : (isnan(_2548) ? _2549 : max(_2548, _2549));
            float _2697 = isnan(_2549) ? _2548 : (isnan(_2548) ? _2549 : min(_2548, _2549));
            float _2706 = isnan(0.0) ? _2696 : (isnan(_2696) ? 0.0 : min(_2696, 0.0));
            float _2707 = isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : min(_2697, 0.0));
            _2964 = ((abs(_2555 / _2544) * cbSceneParam._m0[80u].y) * ((((_2706 - _2707) * 2.0) - ((exp2(_2563 * (isnan(0.0) ? _2696 : (isnan(_2696) ? 0.0 : max(_2696, 0.0)))) - exp2(_2563 * (isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : max(_2697, 0.0))))) * _2695)) - ((exp2(_2565 * _2706) - exp2(_2565 * _2707)) * _2695))) + (_2558 * cbSceneParam._m0[80u].z);
        }
        vec4 _2966 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2454, _2455, 1.0), 0.0);
        float _2975 = exp2((_2964 * (-1.44269502162933349609375)) * (1.0 - _2966.w));
        float _2976 = log2(_2975);
        float _2992 = log2(_2474);
        _2567 = (exp2(_2992 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2976 * cbSceneParam._m0[78u].x)) * _2966.x) / cbSceneParam._m0[78u].x)) + _2471;
        _2569 = (exp2(_2992 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2976 * cbSceneParam._m0[78u].y)) * _2966.y) / cbSceneParam._m0[78u].y)) + _2472;
        _2571 = (exp2(_2992 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2976 * cbSceneParam._m0[78u].z)) * _2966.z) / cbSceneParam._m0[78u].z)) + _2473;
        _2573 = _2975 * _2474;
    }
    else
    {
        _2567 = _2471;
        _2569 = _2472;
        _2571 = _2473;
        _2573 = _2474;
    }
    bool _2585 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2586 = log2(_2573);
    float _2593 = exp2(_2586 * cbSceneParam._m0[78u].x) * ((_2423 + ((_2288 + ((isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0))) * _1643)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _693.x) * _2429) - _2423) * _739));
    float _2594 = exp2(_2586 * cbSceneParam._m0[78u].y) * ((_2424 + ((_2290 + ((isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0))) * _1643)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _693.y) * _2429) - _2424) * _739));
    float _2595 = exp2(_2586 * cbSceneParam._m0[78u].z) * ((_2425 + ((_2292 + ((isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0))) * _1643)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _693.z) * _2429) - _2425) * _739));
    vec4 _2603 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_669, _670));
    float _2605 = _2603.x;
    float _2626 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2605)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2605))) - _776) * cbMtdParam._m0[17u].y;
    float _4005 = isnan(0.0) ? _2626 : (isnan(_2626) ? 0.0 : max(_2626, 0.0));
    float _2628 = (cbInstanceData._m0[_303 + 6u].w * (isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0)))) * (isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0)));
    float _2637 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2637 * (_2585 ? _2593 : (_2593 + (cbSceneParam._m0[72u].w * _2567)));
    SV_Target.y = _2637 * (_2585 ? _2594 : (_2594 + (cbSceneParam._m0[72u].w * _2569)));
    SV_Target.z = _2637 * (_2585 ? _2595 : (_2595 + (cbSceneParam._m0[72u].w * _2571)));
    SV_Target.w = _2628;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2628;
}


