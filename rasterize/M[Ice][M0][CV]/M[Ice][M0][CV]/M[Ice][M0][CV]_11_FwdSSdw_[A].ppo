#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1147;
float _3115;
float _3116;
float _3117;
float _3118;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _204 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _205 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _206 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _212 = inversesqrt(dot(vec3(_204, _205, _206), vec3(_204, _205, _206)));
    float _213 = _212 * _204;
    float _214 = _212 * _205;
    float _215 = _212 * _206;
    float _219 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _220 = _219 * NORMAL.x;
    float _221 = _219 * NORMAL.y;
    float _222 = _219 * NORMAL.z;
    float _226 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _227 = _226 * TANGENT.x;
    float _228 = _226 * TANGENT.y;
    float _229 = _226 * TANGENT.z;
    float _234;
    float _235;
    float _236;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _234 = (-0.0) - _220;
        _235 = (-0.0) - _221;
        _236 = (-0.0) - _222;
    }
    else
    {
        _234 = _220;
        _235 = _221;
        _236 = _222;
    }
    float _281 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _291 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _281);
    float _292 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _281);
    float _293 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _281);
    vec4 _307 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _316 = (_307.x * 2.0) + (-1.0);
    float _318 = (_307.y * 2.0) + (-1.0);
    float _319 = dot(vec2(_316, _318), vec2(_316, _318));
    float _3127 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
    float _325 = sqrt(1.0 - (isnan(1.0) ? _3127 : (isnan(_3127) ? 1.0 : min(_3127, 1.0))));
    float _328 = fma(_325, _234, fma(_318, _227, _316 * _213));
    float _331 = fma(_325, _235, fma(_318, _228, _316 * _214));
    float _334 = fma(_325, _236, fma(_318, _229, _316 * _215));
    float _338 = inversesqrt(dot(vec3(_328, _331, _334), vec3(_328, _331, _334)));
    vec4 _352 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _357 = _352.w;
    float _369 = dot(vec3(_291, _292, _293), vec3(_213, _214, _215));
    float _372 = dot(vec3(_291, _292, _293), vec3(_227, _228, _229));
    float _375 = dot(vec3(_291, _292, _293), vec3(_234, _235, _236));
    float _381 = inversesqrt(dot(vec3(_369, _372, _375), vec3(_369, _372, _375)));
    float _403 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _423 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_369 * cbMtdParam._m0[14u].x) * _381) * _403) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_372 * cbMtdParam._m0[14u].x) * _381) * _403) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _447 = inversesqrt(dot(vec3(_291, _292, _293), vec3(_291, _292, _293)));
    float _448 = _447 * _291;
    float _449 = _447 * _292;
    float _450 = _447 * _293;
    float _451 = dot(vec4(_448, _449, _450, 0.0), vec4(_234, _235, _236, 0.0));
    float _454 = _451 - cbMtdParam._m0[15u].z;
    float _3138 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _461 = exp2(log2(1.0 - (isnan(1.0) ? _3138 : (isnan(_3138) ? 1.0 : min(_3138, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _476 = ((((_352.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _423.x) * cbMtdParam._m0[9u].x) * ((_461 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _481 = ((((_352.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _423.y) * cbMtdParam._m0[9u].y) * ((_461 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _486 = ((((_352.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _423.z) * cbMtdParam._m0[9u].z) * ((_461 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    vec4 _502 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _514 = cbMtdParam._m0[17u].z + _307.z;
    float _520 = (_514 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_502.z - _514));
    float _526 = ((((_502.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _316;
    float _527 = ((((_502.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _318;
    vec4 _539 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _543 = cbMtdParam._m0[16u].w * _539.x;
    float _566 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + ((_338 * _328) * cbMtdParam._m0[18u].y));
    float _567 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + ((_338 * _331) * cbMtdParam._m0[18u].y));
    float _574 = isnan(cbInstanceData._m0[8u].x) ? _566 : (isnan(_566) ? cbInstanceData._m0[8u].x : max(_566, cbInstanceData._m0[8u].x));
    float _575 = isnan(cbInstanceData._m0[8u].y) ? _567 : (isnan(_567) ? cbInstanceData._m0[8u].y : max(_567, cbInstanceData._m0[8u].y));
    vec4 _579 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _574 : (isnan(_574) ? cbInstanceData._m0[8u].z : min(_574, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _575 : (isnan(_575) ? cbInstanceData._m0[8u].w : min(_575, cbInstanceData._m0[8u].w))));
    float _612 = _451 - cbMtdParam._m0[15u].x;
    float _3174 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    float _622 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3174 : (isnan(_3174) ? 1.0 : min(_3174, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3190 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _623 = isnan(1.0) ? _3190 : (isnan(_3190) ? 1.0 : min(_3190, 1.0));
    float _627 = fma(_325, _234, fma(_527, _227, _526 * _213));
    float _630 = fma(_325, _235, fma(_527, _228, _526 * _214));
    float _633 = fma(_325, _236, fma(_527, _229, _526 * _215));
    float _637 = inversesqrt(dot(vec3(_627, _630, _633), vec3(_627, _630, _633)));
    float _638 = _637 * _627;
    float _639 = _637 * _630;
    float _640 = _637 * _633;
    float _3201 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    float _641 = isnan(1.0) ? _3201 : (isnan(_3201) ? 1.0 : min(_3201, 1.0));
    float _3212 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _642 = isnan(1.0) ? _3212 : (isnan(_3212) ? 1.0 : min(_3212, 1.0));
    float _643 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _3228 = isnan(0.0) ? _476 : (isnan(_476) ? 0.0 : max(_476, 0.0));
    float _3239 = isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0));
    float _3250 = isnan(0.0) ? _486 : (isnan(_486) ? 0.0 : max(_486, 0.0));
    float _662 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _667 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _669 = _667.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _826 = sqrt(((_291 * _291) + (_292 * _292)) + (_293 * _293));
        float _832 = (cbMatDynParam._m0[5u].x * _826) + cbMatDynParam._m0[5u].y;
        float _3261 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
        float _833 = isnan(1.0) ? _3261 : (isnan(_3261) ? 1.0 : min(_3261, 1.0));
        float _837 = (cbMatDynParam._m0[5u].z * _826) + cbMatDynParam._m0[5u].w;
        float _3272 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3272 : (isnan(_3272) ? 1.0 : min(_3272, 1.0))) - _833)) + _833) < ((_669 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _680 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _681 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _699 = fma(_640, cbSceneParam._m0[5u].z, fma(_639, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _638));
    float _702 = fma(_640, cbSceneParam._m0[6u].z, fma(_639, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _638));
    float _705 = fma(_640, cbSceneParam._m0[7u].z, fma(_639, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _638));
    uint _718 = uint(roundEven(NORMAL.w)) * 13u;
    uint _719 = _718 + 9u;
    uint _720 = _719 + uint(cbMatDynParam._m0[0u].w);
    float _726 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3228 : (isnan(_3228) ? 1.0 : min(_3228, 1.0)))) * cbInstanceData._m0[_720].x;
    float _727 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3239 : (isnan(_3239) ? 1.0 : min(_3239, 1.0)))) * cbInstanceData._m0[_720].y;
    float _728 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3250 : (isnan(_3250) ? 1.0 : min(_3250, 1.0)))) * cbInstanceData._m0[_720].z;
    float _3283 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
    float _729 = isnan(1.0) ? _3283 : (isnan(_3283) ? 1.0 : min(_3283, 1.0));
    float _3294 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
    float _730 = isnan(1.0) ? _3294 : (isnan(_3294) ? 1.0 : min(_3294, 1.0));
    float _3305 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _731 = isnan(1.0) ? _3305 : (isnan(_3305) ? 1.0 : min(_3305, 1.0));
    vec4 _739 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _680, cbSceneParam._m0[86u].y * _681));
    float _742 = _739.x * TEXCOORD_5.w;
    float _743 = dot(vec3(_638, _639, _640), vec3(_448, _449, _450));
    float _746 = _743 * 2.0;
    float _750 = (_746 * _638) - _448;
    float _751 = (_746 * _639) - _449;
    float _752 = (_746 * _640) - _450;
    float _753 = dot(vec3(_448, _449, _450), vec3(_638, _639, _640));
    float _756 = abs(_753);
    float _3316 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    float _757 = isnan(1.0) ? _3316 : (isnan(_3316) ? 1.0 : min(_3316, 1.0));
    float _763 = sqrt(_642);
    float _775 = exp2((_763 * 5.0) * log2(1.0 - (_757 * 0.999000012874603271484375))) / (4.0 - (_763 * 3.0));
    float _807 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _811 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _815 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1146;
    float _1148;
    float _1149;
    float _1150;
    float _1151;
    float _1152;
    float _1153;
    float _1154;
    float _1155;
    float _1156;
    float _1157;
    float _1158;
    float _1159;
    float _1160;
    float _1161;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _871 = fma(_815, cbModelParam._m0[26u].z, fma(_811, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _807));
        float _875 = fma(_815, cbModelParam._m0[27u].z, fma(_811, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _807));
        float _879 = fma(_815, cbModelParam._m0[28u].z, fma(_811, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _807));
        float _904 = _807 + _638;
        float _905 = _811 + _639;
        float _906 = _815 + _640;
        float _916 = fma(_906, cbModelParam._m0[26u].z, fma(_905, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _904)) - _871;
        float _917 = fma(_906, cbModelParam._m0[27u].z, fma(_905, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _904)) - _875;
        float _918 = fma(_906, cbModelParam._m0[28u].z, fma(_905, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _904)) - _879;
        float _922 = inversesqrt(dot(vec3(_916, _917, _918), vec3(_916, _917, _918)));
        float _935 = ((_922 * _916) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_871 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _936 = ((_922 * _917) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_875 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _937 = ((_922 * _918) / cbModelParam._m0[34u].z) + ((((((_879 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _940 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_935, _936, _937), 0.0);
        vec4 _947 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_935, _936, _937), 0.0);
        vec4 _954 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_935, _936, _937), 0.0);
        vec4 _961 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_935, _936, _937), 0.0);
        float _974 = exp2((_940.w + (-0.5)) * 20.0) * 2.0;
        float _975 = _974 * (_940.x + (-0.5));
        float _976 = _974 * (_940.y + (-0.5));
        float _977 = _974 * (_940.z + (-0.5));
        float _984 = exp2((_947.w + (-0.5)) * 20.0) * 2.0;
        float _985 = _984 * (_947.x + (-0.5));
        float _986 = _984 * (_947.y + (-0.5));
        float _987 = _984 * (_947.z + (-0.5));
        float _994 = exp2((_954.w + (-0.5)) * 20.0) * 2.0;
        float _995 = _994 * (_954.x + (-0.5));
        float _996 = _994 * (_954.y + (-0.5));
        float _997 = _994 * (_954.z + (-0.5));
        float _1004 = exp2((_961.w + (-0.5)) * 20.0) * 2.0;
        float _1005 = _1004 * (_961.x + (-0.5));
        float _1006 = _1004 * (_961.y + (-0.5));
        float _1007 = _1004 * (_961.z + (-0.5));
        float _1008 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
        float _1009 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
        float _1010 = isnan(0.0) ? _1007 : (isnan(_1007) ? 0.0 : max(_1007, 0.0));
        float _1011 = _975 * 0.5;
        float _1012 = _985 * 0.5;
        float _1013 = _995 * 0.5;
        float _1014 = dot(vec3(_1011, _1012, _1013), vec3(_1011, _1012, _1013));
        float _1019 = (_1014 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1014);
        float _1028 = (dot(vec3(_638, _639, _640), vec3(_1019 * _1011, _1019 * _1012, _1019 * _1013)) + 1.0) * 0.5;
        float _3342 = isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0));
        float _1038 = sqrt(((_1012 * _1012) + (_1011 * _1011)) + (_1013 * _1013)) / (_1008 + 9.9999997473787516355514526367188e-06);
        float _3353 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
        float _1039 = isnan(1.0) ? _3353 : (isnan(_3353) ? 1.0 : min(_3353, 1.0));
        float _1040 = _1039 * 2.0;
        float _1044 = (1.0 - _1039) / (_1039 + 1.0);
        float _3364 = isnan(0.0) ? _1044 : (isnan(_1044) ? 0.0 : max(_1044, 0.0));
        float _1045 = isnan(1.0) ? _3364 : (isnan(_3364) ? 1.0 : min(_3364, 1.0));
        float _1054 = ((((1.0 - _1045) * (_1040 + 2.0)) * exp2(log2(isnan(1.0) ? _3342 : (isnan(_3342) ? 1.0 : min(_3342, 1.0))) * (_1040 + 1.0))) + _1045) * _1008;
        float _1055 = _976 * 0.5;
        float _1056 = _986 * 0.5;
        float _1057 = _996 * 0.5;
        float _1058 = dot(vec3(_1055, _1056, _1057), vec3(_1055, _1056, _1057));
        float _1063 = (_1058 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1058);
        float _1071 = (dot(vec3(_638, _639, _640), vec3(_1063 * _1055, _1063 * _1056, _1063 * _1057)) + 1.0) * 0.5;
        float _3375 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
        float _1080 = sqrt(((_1056 * _1056) + (_1055 * _1055)) + (_1057 * _1057)) / (_1009 + 9.9999997473787516355514526367188e-06);
        float _3386 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
        float _1081 = isnan(1.0) ? _3386 : (isnan(_3386) ? 1.0 : min(_3386, 1.0));
        float _1082 = _1081 * 2.0;
        float _1086 = (1.0 - _1081) / (_1081 + 1.0);
        float _3397 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
        float _1087 = isnan(1.0) ? _3397 : (isnan(_3397) ? 1.0 : min(_3397, 1.0));
        float _1096 = ((((1.0 - _1087) * (_1082 + 2.0)) * exp2(log2(isnan(1.0) ? _3375 : (isnan(_3375) ? 1.0 : min(_3375, 1.0))) * (_1082 + 1.0))) + _1087) * _1009;
        float _1097 = _977 * 0.5;
        float _1098 = _987 * 0.5;
        float _1099 = _997 * 0.5;
        float _1100 = dot(vec3(_1097, _1098, _1099), vec3(_1097, _1098, _1099));
        float _1105 = (_1100 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1100);
        float _1113 = (dot(vec3(_638, _639, _640), vec3(_1105 * _1097, _1105 * _1098, _1105 * _1099)) + 1.0) * 0.5;
        float _3408 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
        float _1122 = sqrt(((_1098 * _1098) + (_1097 * _1097)) + (_1099 * _1099)) / (_1010 + 9.9999997473787516355514526367188e-06);
        float _3419 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
        float _1123 = isnan(1.0) ? _3419 : (isnan(_3419) ? 1.0 : min(_3419, 1.0));
        float _1124 = _1123 * 2.0;
        float _1128 = (1.0 - _1123) / (_1123 + 1.0);
        float _3430 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
        float _1129 = isnan(1.0) ? _3430 : (isnan(_3430) ? 1.0 : min(_3430, 1.0));
        float _1138 = ((((1.0 - _1129) * (_1124 + 2.0)) * exp2(log2(isnan(1.0) ? _3408 : (isnan(_3408) ? 1.0 : min(_3408, 1.0))) * (_1124 + 1.0))) + _1129) * _1010;
        _1146 = _977;
        _1148 = _976;
        _1149 = _975;
        _1150 = _987;
        _1151 = _986;
        _1152 = _985;
        _1153 = _997;
        _1154 = _996;
        _1155 = _995;
        _1156 = _1010;
        _1157 = _1009;
        _1158 = _1008;
        _1159 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0)));
        _1160 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0)));
        _1161 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0)));
    }
    else
    {
        _1146 = _1147;
        _1148 = _1147;
        _1149 = _1147;
        _1150 = _1147;
        _1151 = _1147;
        _1152 = _1147;
        _1153 = _1147;
        _1154 = _1147;
        _1155 = _1147;
        _1156 = _1147;
        _1157 = _1147;
        _1158 = _1147;
        _1159 = 0.0;
        _1160 = 0.0;
        _1161 = 0.0;
    }
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1190 = fma(_815, cbModelParam._m0[30u].z, fma(_811, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _807));
        float _1194 = fma(_815, cbModelParam._m0[31u].z, fma(_811, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _807));
        float _1198 = fma(_815, cbModelParam._m0[32u].z, fma(_811, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _807));
        float _1221 = _807 + _638;
        float _1222 = _811 + _639;
        float _1223 = _815 + _640;
        float _1233 = fma(_1223, cbModelParam._m0[30u].z, fma(_1222, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1221)) - _1190;
        float _1234 = fma(_1223, cbModelParam._m0[31u].z, fma(_1222, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1221)) - _1194;
        float _1235 = fma(_1223, cbModelParam._m0[32u].z, fma(_1222, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1221)) - _1198;
        float _1239 = inversesqrt(dot(vec3(_1233, _1234, _1235), vec3(_1233, _1234, _1235)));
        float _1252 = ((_1239 * _1233) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1190 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1253 = ((_1239 * _1234) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1194 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1254 = ((_1239 * _1235) / cbModelParam._m0[35u].z) + ((((((_1198 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1256 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1252, _1253, _1254), 0.0);
        vec4 _1263 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1252, _1253, _1254), 0.0);
        vec4 _1270 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1252, _1253, _1254), 0.0);
        vec4 _1277 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1252, _1253, _1254), 0.0);
        float _1289 = exp2((_1256.w + (-0.5)) * 20.0) * 2.0;
        float _1290 = _1289 * (_1256.x + (-0.5));
        float _1291 = _1289 * (_1256.y + (-0.5));
        float _1292 = _1289 * (_1256.z + (-0.5));
        float _1299 = exp2((_1263.w + (-0.5)) * 20.0) * 2.0;
        float _1300 = _1299 * (_1263.x + (-0.5));
        float _1301 = _1299 * (_1263.y + (-0.5));
        float _1302 = _1299 * (_1263.z + (-0.5));
        float _1309 = exp2((_1270.w + (-0.5)) * 20.0) * 2.0;
        float _1310 = _1309 * (_1270.x + (-0.5));
        float _1311 = _1309 * (_1270.y + (-0.5));
        float _1312 = _1309 * (_1270.z + (-0.5));
        float _1319 = exp2((_1277.w + (-0.5)) * 20.0) * 2.0;
        float _1320 = _1319 * (_1277.x + (-0.5));
        float _1321 = _1319 * (_1277.y + (-0.5));
        float _1322 = _1319 * (_1277.z + (-0.5));
        float _1323 = isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0));
        float _1324 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
        float _1325 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1326 = _1290 * 0.5;
        float _1327 = _1300 * 0.5;
        float _1328 = _1310 * 0.5;
        float _1329 = dot(vec3(_1326, _1327, _1328), vec3(_1326, _1327, _1328));
        float _1334 = (_1329 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1329);
        float _1342 = (dot(vec3(_638, _639, _640), vec3(_1334 * _1326, _1334 * _1327, _1334 * _1328)) + 1.0) * 0.5;
        float _3471 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1351 = sqrt(((_1327 * _1327) + (_1326 * _1326)) + (_1328 * _1328)) / (_1323 + 9.9999997473787516355514526367188e-06);
        float _3482 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1352 = isnan(1.0) ? _3482 : (isnan(_3482) ? 1.0 : min(_3482, 1.0));
        float _1353 = _1352 * 2.0;
        float _1357 = (1.0 - _1352) / (_1352 + 1.0);
        float _3493 = isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0));
        float _1358 = isnan(1.0) ? _3493 : (isnan(_3493) ? 1.0 : min(_3493, 1.0));
        float _1367 = ((((1.0 - _1358) * (_1353 + 2.0)) * exp2(log2(isnan(1.0) ? _3471 : (isnan(_3471) ? 1.0 : min(_3471, 1.0))) * (_1353 + 1.0))) + _1358) * _1323;
        float _1368 = _1291 * 0.5;
        float _1369 = _1301 * 0.5;
        float _1370 = _1311 * 0.5;
        float _1371 = dot(vec3(_1368, _1369, _1370), vec3(_1368, _1369, _1370));
        float _1376 = (_1371 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1371);
        float _1384 = (dot(vec3(_638, _639, _640), vec3(_1376 * _1368, _1376 * _1369, _1376 * _1370)) + 1.0) * 0.5;
        float _3504 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
        float _1393 = sqrt(((_1369 * _1369) + (_1368 * _1368)) + (_1370 * _1370)) / (_1324 + 9.9999997473787516355514526367188e-06);
        float _3515 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
        float _1394 = isnan(1.0) ? _3515 : (isnan(_3515) ? 1.0 : min(_3515, 1.0));
        float _1395 = _1394 * 2.0;
        float _1399 = (1.0 - _1394) / (_1394 + 1.0);
        float _3526 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1400 = isnan(1.0) ? _3526 : (isnan(_3526) ? 1.0 : min(_3526, 1.0));
        float _1409 = ((((1.0 - _1400) * (_1395 + 2.0)) * exp2(log2(isnan(1.0) ? _3504 : (isnan(_3504) ? 1.0 : min(_3504, 1.0))) * (_1395 + 1.0))) + _1400) * _1324;
        float _1410 = _1292 * 0.5;
        float _1411 = _1302 * 0.5;
        float _1412 = _1312 * 0.5;
        float _1413 = dot(vec3(_1410, _1411, _1412), vec3(_1410, _1411, _1412));
        float _1418 = (_1413 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1413);
        float _1426 = (dot(vec3(_638, _639, _640), vec3(_1418 * _1410, _1418 * _1411, _1418 * _1412)) + 1.0) * 0.5;
        float _3537 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1435 = sqrt(((_1411 * _1411) + (_1410 * _1410)) + (_1412 * _1412)) / (_1325 + 9.9999997473787516355514526367188e-06);
        float _3548 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1436 = isnan(1.0) ? _3548 : (isnan(_3548) ? 1.0 : min(_3548, 1.0));
        float _1437 = _1436 * 2.0;
        float _1441 = (1.0 - _1436) / (_1436 + 1.0);
        float _3559 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1442 = isnan(1.0) ? _3559 : (isnan(_3559) ? 1.0 : min(_3559, 1.0));
        float _1451 = ((((1.0 - _1442) * (_1437 + 2.0)) * exp2(log2(isnan(1.0) ? _3537 : (isnan(_3537) ? 1.0 : min(_3537, 1.0))) * (_1437 + 1.0))) + _1442) * _1325;
        _1459 = _1292;
        _1460 = _1291;
        _1461 = _1290;
        _1462 = _1302;
        _1463 = _1301;
        _1464 = _1300;
        _1465 = _1312;
        _1466 = _1311;
        _1467 = _1310;
        _1468 = _1325;
        _1469 = _1324;
        _1470 = _1323;
        _1471 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1367 : (isnan(_1367) ? 0.0 : max(_1367, 0.0)));
        _1472 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1409 : (isnan(_1409) ? 0.0 : max(_1409, 0.0)));
        _1473 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0)));
    }
    else
    {
        _1459 = _1147;
        _1460 = _1147;
        _1461 = _1147;
        _1462 = _1147;
        _1463 = _1147;
        _1464 = _1147;
        _1465 = _1147;
        _1466 = _1147;
        _1467 = _1147;
        _1468 = _1147;
        _1469 = _1147;
        _1470 = _1147;
        _1471 = 0.0;
        _1472 = 0.0;
        _1473 = 0.0;
    }
    float _1483 = (cbModelParam._m0[1u].x * (_1471 - _1159)) + _1159;
    float _1484 = (cbModelParam._m0[1u].x * (_1472 - _1160)) + _1160;
    float _1485 = (cbModelParam._m0[1u].x * (_1473 - _1161)) + _1161;
    float _1506 = fma(_1485, cbSceneParam._m0[89u].z, fma(_1484, cbSceneParam._m0[89u].y, _1483 * cbSceneParam._m0[89u].x));
    float _1509 = fma(_1485, cbSceneParam._m0[90u].z, fma(_1484, cbSceneParam._m0[90u].y, _1483 * cbSceneParam._m0[90u].x));
    float _1512 = fma(_1485, cbSceneParam._m0[91u].z, fma(_1484, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1483));
    float _1527 = _750 * 0.5;
    float _1528 = _751 * 0.5;
    float _1529 = _752 * 0.5;
    float _1530 = dot(vec4(_1527, _1528, _1529, 1.0), vec4(_1461, _1464, _1467, _1470));
    float _1533 = dot(vec4(_1527, _1528, _1529, 1.0), vec4(_1460, _1463, _1466, _1469));
    float _1536 = dot(vec4(_1527, _1528, _1529, 1.0), vec4(_1459, _1462, _1465, _1468));
    float _1570;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1543 = dot(vec4(_1527, _1528, _1529, 1.0), vec4(_1146, _1150, _1153, _1156));
        float _1547 = dot(vec4(_1527, _1528, _1529, 1.0), vec4(_1148, _1151, _1154, _1157));
        float _1551 = dot(vec4(_1527, _1528, _1529, 1.0), vec4(_1149, _1152, _1155, _1158));
        float _1558 = dot(vec4(cbModelParam._m0[39u]), vec4(_1527, _1528, _1529, 1.0));
        _1570 = dot(vec3(isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0)), isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0)), isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1558) ? 0.0 : (isnan(0.0) ? _1558 : max(0.0, _1558))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1570 = 1.0;
    }
    float _1581;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1572 = dot(vec4(cbModelParam._m0[40u]), vec4(_1527, _1528, _1529, 1.0));
        _1581 = dot(vec3(isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0)), isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0)), isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1572) ? 0.0 : (isnan(0.0) ? _1572 : max(0.0, _1572))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1581 = 1.0;
    }
    float _1585 = (_1581 * cbModelParam._m0[1u].x) + (_1570 * (1.0 - cbModelParam._m0[1u].x));
    float _1595 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _642);
    float _1596 = isnan(_1595) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1595 : min(cbModelParam._m0[25u].z, _1595));
    float _1676;
    float _1678;
    float _1680;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1643 = fma(_815, cbModelParam._m0[13u].z, fma(_811, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _807)) + cbModelParam._m0[13u].w;
        float _1647 = fma(_815, cbModelParam._m0[14u].z, fma(_811, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _807)) + cbModelParam._m0[14u].w;
        float _1651 = fma(_815, cbModelParam._m0[15u].z, fma(_811, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _807)) + cbModelParam._m0[15u].w;
        float _1654 = fma(_752, cbModelParam._m0[13u].z, fma(_751, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _750));
        float _1657 = fma(_752, cbModelParam._m0[14u].z, fma(_751, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _750));
        float _1660 = fma(_752, cbModelParam._m0[15u].z, fma(_751, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _750));
        float _1688;
        if (_1654 > 0.0)
        {
            _1688 = abs((1.0 - _1643) / _1654);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1654 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1643 + 1.0) / _1654);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1688 = frontier_phi_19_17_ladder;
        }
        float _1881;
        if (_1657 > 0.0)
        {
            _1881 = abs((1.0 - _1647) / _1657);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1657 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1647 + 1.0) / _1657);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1881 = frontier_phi_28_24_ladder;
        }
        float _2119;
        if (_1660 > 0.0)
        {
            _2119 = abs((1.0 - _1651) / _1660);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1660 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1651 + 1.0) / _1660);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2119 = frontier_phi_39_35_ladder;
        }
        float _2121 = isnan(_1881) ? _1688 : (isnan(_1688) ? _1881 : min(_1688, _1881));
        float _2122 = isnan(_2119) ? _2121 : (isnan(_2121) ? _2119 : min(_2121, _2119));
        float _2126 = (_2122 * _1654) + _1643;
        float _2127 = (_2122 * _1657) + _1647;
        float _2128 = (_2122 * _1660) + _1651;
        float _2129 = _2122 * 9.9999997473787516355514526367188e-05;
        float _2131 = (-1.0) - _2129;
        float _2133 = _2129 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2128 > _2133) || ((_2128 < _2131) || ((_2127 > _2133) || ((_2127 < _2131) || ((_2126 < _2131) || (_2126 > _2133))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2278 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2128, cbModelParam._m0[9u].z, fma(_2127, cbModelParam._m0[9u].y, _2126 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2128, cbModelParam._m0[10u].z, fma(_2127, cbModelParam._m0[10u].y, _2126 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2128, cbModelParam._m0[11u].z, fma(_2127, cbModelParam._m0[11u].y, _2126 * cbModelParam._m0[11u].x))), _1596);
            frontier_phi_18_39_ladder = _2278.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2278.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2278.x * cbModelParam._m0[1u].y;
        }
        _1676 = frontier_phi_18_39_ladder_2;
        _1678 = frontier_phi_18_39_ladder_1;
        _1680 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1664 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_750, _751, _752), _1596);
        _1676 = _1664.x * cbModelParam._m0[1u].y;
        _1678 = _1664.y * cbModelParam._m0[1u].y;
        _1680 = _1664.z * cbModelParam._m0[1u].y;
    }
    float _1684 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _642);
    float _1685 = isnan(_1684) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1684 : min(cbModelParam._m0[25u].w, _1684));
    float _1777;
    float _1779;
    float _1781;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1741 = fma(_815, cbModelParam._m0[21u].z, fma(_811, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _807)) + cbModelParam._m0[21u].w;
        float _1745 = fma(_815, cbModelParam._m0[22u].z, fma(_811, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _807)) + cbModelParam._m0[22u].w;
        float _1749 = fma(_815, cbModelParam._m0[23u].z, fma(_811, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _807)) + cbModelParam._m0[23u].w;
        float _1752 = fma(_752, cbModelParam._m0[21u].z, fma(_751, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _750));
        float _1755 = fma(_752, cbModelParam._m0[22u].z, fma(_751, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _750));
        float _1758 = fma(_752, cbModelParam._m0[23u].z, fma(_751, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _750));
        float _1886;
        if (_1752 > 0.0)
        {
            _1886 = abs((1.0 - _1741) / _1752);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1752 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1741 + 1.0) / _1752);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1886 = frontier_phi_30_26_ladder;
        }
        float _2146;
        if (_1755 > 0.0)
        {
            _2146 = abs((1.0 - _1745) / _1755);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1755 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1745 + 1.0) / _1755);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2146 = frontier_phi_41_37_ladder;
        }
        float _2453;
        if (_1758 > 0.0)
        {
            _2453 = abs((1.0 - _1749) / _1758);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1758 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1749 + 1.0) / _1758);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2453 = frontier_phi_52_47_ladder;
        }
        float _2455 = isnan(_2146) ? _1886 : (isnan(_1886) ? _2146 : min(_1886, _2146));
        float _2456 = isnan(_2453) ? _2455 : (isnan(_2455) ? _2453 : min(_2455, _2453));
        float _2460 = (_2456 * _1752) + _1741;
        float _2461 = (_2456 * _1755) + _1745;
        float _2462 = (_2456 * _1758) + _1749;
        float _2463 = _2456 * 9.9999997473787516355514526367188e-05;
        float _2464 = (-1.0) - _2463;
        float _2466 = _2463 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2462 > _2466) || ((_2462 < _2464) || ((_2461 > _2466) || ((_2461 < _2464) || ((_2460 < _2464) || (_2460 > _2466))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2643 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2462, cbModelParam._m0[17u].z, fma(_2461, cbModelParam._m0[17u].y, _2460 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2462, cbModelParam._m0[18u].z, fma(_2461, cbModelParam._m0[18u].y, _2460 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2462, cbModelParam._m0[19u].z, fma(_2461, cbModelParam._m0[19u].y, _2460 * cbModelParam._m0[19u].x))), _1685);
            frontier_phi_27_52_ladder = _2643.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2643.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2643.y * cbModelParam._m0[1u].z;
        }
        _1777 = frontier_phi_27_52_ladder_1;
        _1779 = frontier_phi_27_52_ladder_2;
        _1781 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1761 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_750, _751, _752), _1685);
        _1777 = _1761.x * cbModelParam._m0[1u].z;
        _1779 = _1761.y * cbModelParam._m0[1u].z;
        _1781 = _1761.z * cbModelParam._m0[1u].z;
    }
    float _1793 = ((((1.0 - _775) * ((_763 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_775 * _763)) * _742;
    float _1794 = _1793 * ((cbModelParam._m0[1u].w * (_1777 - _1676)) + _1676);
    float _1795 = _1793 * ((cbModelParam._m0[1u].w * (_1779 - _1678)) + _1678);
    float _1796 = _1793 * ((cbModelParam._m0[1u].w * (_1781 - _1680)) + _1680);
    float _1799 = fma(_1796, cbSceneParam._m0[89u].z, fma(_1795, cbSceneParam._m0[89u].y, _1794 * cbSceneParam._m0[89u].x));
    float _1802 = fma(_1796, cbSceneParam._m0[90u].z, fma(_1795, cbSceneParam._m0[90u].y, _1794 * cbSceneParam._m0[90u].x));
    float _1805 = fma(_1796, cbSceneParam._m0[91u].z, fma(_1795, cbSceneParam._m0[91u].y, _1794 * cbSceneParam._m0[91u].x));
    vec4 _1813 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_680, _681));
    float _1815 = _1813.w;
    float _1827 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1815);
    float _1828 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1815);
    float _1829 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1815);
    uvec4 _1833 = floatBitsToUint(cbInstanceData._m0[_718 + 5u]);
    uint _1835 = _1833.x * 14u;
    uint _1836 = _1835 + 13u;
    float _1841 = _742 + (-1.0);
    float _1844 = (cbLight._m0[_1836].x * _1841) + 1.0;
    float _1845 = (cbLight._m0[_1836].y * _1841) + 1.0;
    uint _1847 = _1835 + 4u;
    float _1858 = dot(vec3(cbLight._m0[_1835].xyz), vec3(_638, _639, _640));
    float _1861 = isnan(1.0) ? _1844 : (isnan(_1844) ? 1.0 : min(_1844, 1.0));
    float _1862 = cbLight._m0[_1847].x * _1827;
    float _1863 = cbLight._m0[_1847].y * _1828;
    float _1864 = cbLight._m0[_1847].z * _1829;
    uint _1865 = _1835 + 5u;
    uint _1871 = _1835 | 1u;
    float _1877 = dot(vec3(cbLight._m0[_1871].xyz), vec3(_638, _639, _640));
    float _1880 = isnan(1.0) ? _1845 : (isnan(_1845) ? 1.0 : min(_1845, 1.0));
    float _1945;
    float _1946;
    float _1947;
    if (_643 == 0.0)
    {
        float _3695 = isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0));
        float _3706 = isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0));
        float _1899 = (isnan(1.0) ? _3695 : (isnan(_3695) ? 1.0 : min(_3695, 1.0))) * 0.3183098733425140380859375;
        float _1901 = (isnan(1.0) ? _3706 : (isnan(_3706) ? 1.0 : min(_3706, 1.0))) * 0.3183098733425140380859375;
        _1945 = ((cbLight._m0[_1865].x * _1880) * _1901) + ((_1862 * _1861) * _1899);
        _1946 = ((_1880 * cbLight._m0[_1865].y) * _1901) + ((_1863 * _1861) * _1899);
        _1947 = ((_1880 * cbLight._m0[_1865].z) * _1901) + ((_1864 * _1861) * _1899);
    }
    else
    {
        float _1911 = _1858 + _643;
        float _1914 = (_643 * 2.0) + 1.0;
        float _1915 = (isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0))) / _1914;
        float _1922 = _1877 + _643;
        float _1924 = (isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0))) / _1914;
        _1945 = (((_1924 * cbLight._m0[_1865].x) * _1880) + ((_1862 * _1915) * _1861)) * 0.3183098733425140380859375;
        _1946 = (((_1924 * cbLight._m0[_1865].y) * _1880) + ((_1863 * _1915) * _1861)) * 0.3183098733425140380859375;
        _1947 = (((_1924 * cbLight._m0[_1865].z) * _1880) + ((_1864 * _1915) * _1861)) * 0.3183098733425140380859375;
    }
    uint _1951 = _1835 + 8u;
    float _1967 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1835].w)) * _642) * 0.949999988079071044921875);
    float _1968 = _1967 * _1967;
    float _1969 = cbLight._m0[_1835].x + _448;
    float _1970 = cbLight._m0[_1835].y + _449;
    float _1971 = cbLight._m0[_1835].z + _450;
    float _1975 = inversesqrt(dot(vec3(_1969, _1970, _1971), vec3(_1969, _1970, _1971)));
    float _1976 = _1975 * _1969;
    float _1977 = _1975 * _1970;
    float _1978 = _1975 * _1971;
    float _1979 = dot(vec3(_638, _639, _640), vec3(cbLight._m0[_1835].xyz));
    float _3727 = isnan(0.0) ? _1979 : (isnan(_1979) ? 0.0 : max(_1979, 0.0));
    float _1982 = isnan(1.0) ? _3727 : (isnan(_3727) ? 1.0 : min(_3727, 1.0));
    float _3738 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _1983 = isnan(1.0) ? _3738 : (isnan(_3738) ? 1.0 : min(_3738, 1.0));
    float _1984 = dot(vec3(_638, _639, _640), vec3(_1976, _1977, _1978));
    float _3749 = isnan(0.0) ? _1984 : (isnan(_1984) ? 0.0 : max(_1984, 0.0));
    float _1987 = isnan(1.0) ? _3749 : (isnan(_3749) ? 1.0 : min(_3749, 1.0));
    float _1988 = dot(vec3(cbLight._m0[_1835].xyz), vec3(_1976, _1977, _1978));
    float _3760 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
    float _1992 = _1968 * _1968;
    float _1996 = ((_1987 * _1987) * (_1992 + (-1.0))) + 1.0;
    float _2007 = (exp2(log2(1.0 - (isnan(1.0) ? _3760 : (isnan(_3760) ? 1.0 : min(_3760, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2008 = 1.0 - _1968;
    float _2019 = (0.5 / (((_1983 * ((_1982 * _2008) + _1968)) + 9.9999999392252902907785028219223e-09) + (((_1983 * _2008) + _1968) * _1982))) * _1982;
    float _3771 = isnan(0.0) ? _2019 : (isnan(_2019) ? 0.0 : max(_2019, 0.0));
    float _2021 = (isnan(1.0) ? _3771 : (isnan(_3771) ? 1.0 : min(_3771, 1.0))) * (_1992 / ((_1996 * _1996) * 3.141590118408203125));
    uint _2037 = _1835 + 9u;
    float _2051 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1871].w)) * _642) * 0.949999988079071044921875);
    float _2052 = _2051 * _2051;
    float _2053 = cbLight._m0[_1871].x + _448;
    float _2054 = cbLight._m0[_1871].y + _449;
    float _2055 = cbLight._m0[_1871].z + _450;
    float _2059 = inversesqrt(dot(vec3(_2053, _2054, _2055), vec3(_2053, _2054, _2055)));
    float _2060 = _2059 * _2053;
    float _2061 = _2059 * _2054;
    float _2062 = _2059 * _2055;
    float _2063 = dot(vec3(_638, _639, _640), vec3(cbLight._m0[_1871].xyz));
    float _3782 = isnan(0.0) ? _2063 : (isnan(_2063) ? 0.0 : max(_2063, 0.0));
    float _2066 = isnan(1.0) ? _3782 : (isnan(_3782) ? 1.0 : min(_3782, 1.0));
    float _2067 = dot(vec3(_638, _639, _640), vec3(_2060, _2061, _2062));
    float _3793 = isnan(0.0) ? _2067 : (isnan(_2067) ? 0.0 : max(_2067, 0.0));
    float _2070 = isnan(1.0) ? _3793 : (isnan(_3793) ? 1.0 : min(_3793, 1.0));
    float _2071 = dot(vec3(cbLight._m0[_1871].xyz), vec3(_2060, _2061, _2062));
    float _3804 = isnan(0.0) ? _2071 : (isnan(_2071) ? 0.0 : max(_2071, 0.0));
    float _2075 = _2052 * _2052;
    float _2079 = ((_2070 * _2070) * (_2075 + (-1.0))) + 1.0;
    float _2088 = (exp2(log2(1.0 - (isnan(1.0) ? _3804 : (isnan(_3804) ? 1.0 : min(_3804, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2089 = 1.0 - _2052;
    float _2099 = (0.5 / (((_1983 * ((_2066 * _2089) + _2052)) + 9.9999999392252902907785028219223e-09) + (((_1983 * _2089) + _2052) * _2066))) * _2066;
    float _3815 = isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0));
    float _2101 = (isnan(1.0) ? _3815 : (isnan(_3815) ? 1.0 : min(_3815, 1.0))) * (_2075 / ((_2079 * _2079) * 3.141590118408203125));
    float _2111 = (((_2088 * cbLight._m0[_2037].x) * _2101) * _1880) + ((((cbLight._m0[_1951].x * _1827) * _2007) * _2021) * _1861);
    float _2112 = (((_2088 * cbLight._m0[_2037].y) * _2101) * _1880) + ((((cbLight._m0[_1951].y * _1828) * _2007) * _2021) * _1861);
    float _2113 = (((_2088 * cbLight._m0[_2037].z) * _2101) * _1880) + ((((cbLight._m0[_1951].z * _1829) * _2007) * _2021) * _1861);
    float _2249;
    float _2251;
    float _2253;
    float _2255;
    float _2257;
    float _2259;
    if (_1833.y == 0u)
    {
        float _2190 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2191 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2190;
        float _2192 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2190;
        float _2193 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2190;
        uvec4 _2205 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2206 = _2205.x;
        uint _2217 = uint((float(_2205.y) * floor(float(uint(cbSceneParam._m0[85u].y * _681) / _2206))) + floor(float(uint(cbSceneParam._m0[85u].x * _680) / _2206)));
        float _2227 = (log2(_2193 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2228 = isnan(0.0) ? _2227 : (isnan(_2227) ? 0.0 : max(_2227, 0.0));
        uint _2231 = uint(isnan(14.0) ? _2228 : (isnan(_2228) ? 14.0 : min(_2228, 14.0)));
        uint _2238 = _2205.z;
        float _2287;
        float _2289;
        float _2291;
        float _2293;
        float _2295;
        float _2297;
        if (((((1u << ((_2238 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2231 << 2u) + (_2217 << 6u)) >> 2u)).x) == 0u) || ((_2238 & 240u) == 0u))
        {
            _2287 = 0.0;
            _2289 = 0.0;
            _2291 = 0.0;
            _2293 = 0.0;
            _2295 = 0.0;
            _2297 = 0.0;
        }
        else
        {
            float _2288;
            float _2290;
            float _2292;
            float _2294;
            float _2296;
            float _2298;
            float _2479 = 0.0;
            float _2480 = 0.0;
            float _2481 = 0.0;
            float _2482 = 0.0;
            float _2483 = 0.0;
            float _2484 = 0.0;
            uint _2485 = 0u;
            uint _2494;
            bool _2495;
            for (;;)
            {
                _2494 = texelFetch(g_lightClassification, int((((_2231 << 5u) + (_2217 << 9u)) + (_2485 << 2u)) >> 2u)).x;
                _2495 = _2494 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2495)
                {
                    frontier_phi_58_pred = _2479;
                    frontier_phi_58_pred_1 = _2484;
                    frontier_phi_58_pred_2 = _2483;
                    frontier_phi_58_pred_3 = _2482;
                    frontier_phi_58_pred_4 = _2481;
                    frontier_phi_58_pred_5 = _2480;
                }
                else
                {
                    float _2716;
                    float _2717;
                    float _2718;
                    float _2719;
                    float _2720;
                    float _2721;
                    uint _2722;
                    _2716 = _2479;
                    _2717 = _2480;
                    _2718 = _2481;
                    _2719 = _2482;
                    _2720 = _2483;
                    _2721 = _2484;
                    _2722 = _2494;
                    float _2648;
                    float _2649;
                    float _2650;
                    float _2651;
                    float _2652;
                    float _2653;
                    for (;;)
                    {
                        uint _2726 = uint(findLSB(_2722)) + (_2485 << 5u);
                        uint _2723 = (_2722 + 4294967295u) & _2722;
                        uint _2728 = _2726 * 48u;
                        vec4 _2742 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2728)).x, texelFetch(g_PointLightRenderingBuffer, int(_2728 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2728 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2728 + 3u)).x));
                        uint _2748 = (_2726 * 48u) + 4u;
                        vec4 _2761 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2748)).x, texelFetch(g_PointLightRenderingBuffer, int(_2748 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2748 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2748 + 3u)).x));
                        float _2762 = _2761.x;
                        float _2763 = _2761.y;
                        float _2764 = _2761.z;
                        uint _2767 = (_2726 * 48u) + 8u;
                        vec3 _2778 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2767)).x, texelFetch(g_PointLightRenderingBuffer, int(_2767 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2767 + 2u)).x));
                        uint _2783 = (_2726 * 48u) + 12u;
                        vec2 _2791 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2783)).x, texelFetch(g_PointLightRenderingBuffer, int(_2783 + 1u)).x));
                        float _2797 = inversesqrt(dot(vec3(_2191, _2192, _2193), vec3(_2191, _2192, _2193)));
                        float _2798 = _2797 * _2191;
                        float _2799 = _2797 * _2192;
                        float _2800 = _2797 * _2193;
                        float _2801 = _2742.x - _2191;
                        float _2802 = _2742.y - _2192;
                        float _2803 = _2742.z - _2193;
                        float _2804 = dot(vec3(_2801, _2802, _2803), vec3(_2801, _2802, _2803));
                        float _2807 = inversesqrt(_2804);
                        float _2808 = _2807 * _2801;
                        float _2809 = _2807 * _2802;
                        float _2810 = _2807 * _2803;
                        float _2811 = dot(vec3(_699, _702, _705), vec3(_2808, _2809, _2810));
                        float _2816 = 1.0 - (_2804 * _2742.w);
                        float _3836 = isnan(0.0) ? _2816 : (isnan(_2816) ? 0.0 : max(_2816, 0.0));
                        float _2817 = isnan(1.0) ? _3836 : (isnan(_3836) ? 1.0 : min(_3836, 1.0));
                        float _2818 = sqrt(_2804) * _2761.w;
                        float _2821 = 1.39999997615814208984375 / (_2818 + 1.39999997615814208984375);
                        float _2822 = _2821 * _2821;
                        float _2823 = 1.0 - _2822;
                        float _2825 = (_2823 * _2823) * _643;
                        float _2828 = ((_2823 * _2811) + _2822) + _2825;
                        float _2833 = _2818 * _2818;
                        float _2838 = ((isnan(0.0) ? _2828 : (isnan(_2828) ? 0.0 : max(_2828, 0.0))) * _2817) / (((_2825 * 2.0) + 1.0) * ((_2833 * 0.699999988079071044921875) + 1.0));
                        float _2842 = dot(vec3(_2808, _2809, _2810), vec3(_2798, _2799, _2800));
                        float _3852 = isnan(0.0) ? _2842 : (isnan(_2842) ? 0.0 : max(_2842, 0.0));
                        float _2849 = dot(vec3((-0.0) - _2798, (-0.0) - _2799, (-0.0) - _2800), vec3(_699, _702, _705)) + 1.0;
                        float _2851 = (isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : max(_2849, 0.0))) * 0.5;
                        float _2858 = ((_2851 * _2851) * _2791.x) * exp2((_2791.y * 32.0) * log2(isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0))));
                        float _2860 = _643 / (_643 + 1.0);
                        float _2876 = (-0.0) - _2191;
                        float _2877 = (-0.0) - _2192;
                        float _2878 = (-0.0) - _2193;
                        float _2882 = inversesqrt(dot(vec3(_2876, _2877, _2878), vec3(_2876, _2877, _2878)));
                        float _2883 = _2882 * _2876;
                        float _2884 = _2882 * _2877;
                        float _2885 = _2882 * _2878;
                        float _2893 = exp2(log2(1.0 / ((_2833 * 3.5) + 5.0)) * 0.25);
                        float _2894 = 1.0 - _763;
                        float _2901 = sqrt(1.0 - ((1.0 - (_2894 * _2894)) * (1.0 - (_2893 * _2893))));
                        float _2902 = _2901 * _2901;
                        float _2903 = _2902 * _2902;
                        float _2904 = _2883 + _2808;
                        float _2905 = _2884 + _2809;
                        float _2906 = _2885 + _2810;
                        float _2910 = inversesqrt(dot(vec3(_2904, _2905, _2906), vec3(_2904, _2905, _2906)));
                        float _2914 = dot(vec3(_699, _702, _705), vec3(_2883, _2884, _2885));
                        float _3868 = isnan(0.0) ? _2914 : (isnan(_2914) ? 0.0 : max(_2914, 0.0));
                        float _2917 = isnan(1.0) ? _3868 : (isnan(_3868) ? 1.0 : min(_3868, 1.0));
                        float _2918 = dot(vec3(_699, _702, _705), vec3(_2910 * _2904, _2910 * _2905, _2910 * _2906));
                        float _3879 = isnan(0.0) ? _2918 : (isnan(_2918) ? 0.0 : max(_2918, 0.0));
                        float _2921 = isnan(1.0) ? _3879 : (isnan(_3879) ? 1.0 : min(_3879, 1.0));
                        float _2925 = ((_2921 * _2921) * (_2903 + (-1.0))) + 1.0;
                        float _2926 = _2821 * _2902;
                        float _2927 = _2926 * _2926;
                        float _2930 = ((1.0 - _2927) * _2811) + _2927;
                        float _3890 = isnan(0.0) ? _2930 : (isnan(_2930) ? 0.0 : max(_2930, 0.0));
                        float _2931 = isnan(1.0) ? _3890 : (isnan(_3890) ? 1.0 : min(_3890, 1.0));
                        float _2932 = 1.0 - _2902;
                        float _2942 = (0.5 / (((_2931 * ((_2917 * _2932) + _2902)) + 9.9999999392252902907785028219223e-09) + (((_2931 * _2932) + _2902) * _2917))) * _2931;
                        float _3901 = isnan(0.0) ? _2942 : (isnan(_2942) ? 0.0 : max(_2942, 0.0));
                        float _2953 = (((_2903 * 3.1415927410125732421875) * (isnan(1.0) ? _3901 : (isnan(_3901) ? 1.0 : min(_3901, 1.0)))) / ((_2925 * _2925) * ((_2833 * 2.1991131305694580078125) + 3.141590118408203125))) * _2817;
                        _2651 = (((((_2762 * 0.3183098733425140380859375) * _2860) * _2858) + _2762) * _2838) + _2719;
                        _2652 = (((((_2763 * 0.3183098733425140380859375) * _2860) * _2858) + _2763) * _2838) + _2720;
                        _2653 = (((((_2764 * 0.3183098733425140380859375) * _2860) * _2858) + _2764) * _2838) + _2721;
                        _2648 = (_2953 * _2778.x) + _2716;
                        _2649 = (_2953 * _2778.y) + _2717;
                        _2650 = (_2953 * _2778.z) + _2718;
                        if (_2723 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2716 = _2648;
                            _2717 = _2649;
                            _2718 = _2650;
                            _2719 = _2651;
                            _2720 = _2652;
                            _2721 = _2653;
                            _2722 = _2723;
                        }
                    }
                    frontier_phi_58_pred = _2648;
                    frontier_phi_58_pred_1 = _2653;
                    frontier_phi_58_pred_2 = _2652;
                    frontier_phi_58_pred_3 = _2651;
                    frontier_phi_58_pred_4 = _2650;
                    frontier_phi_58_pred_5 = _2649;
                }
                _2288 = frontier_phi_58_pred;
                _2298 = frontier_phi_58_pred_1;
                _2296 = frontier_phi_58_pred_2;
                _2294 = frontier_phi_58_pred_3;
                _2292 = frontier_phi_58_pred_4;
                _2290 = frontier_phi_58_pred_5;
                uint _2486 = _2485 + 1u;
                if (_2486 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2479 = _2288;
                    _2480 = _2290;
                    _2481 = _2292;
                    _2482 = _2294;
                    _2483 = _2296;
                    _2484 = _2298;
                    _2485 = _2486;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2287 = _2288;
            _2289 = _2290;
            _2291 = _2292;
            _2293 = _2294;
            _2295 = _2296;
            _2297 = _2298;
        }
        float _2302 = isnan(1.0) ? _742 : (isnan(_742) ? 1.0 : min(_742, 1.0));
        _2249 = (_2302 * _2293) + _1945;
        _2251 = (_2302 * _2295) + _1946;
        _2253 = (_2302 * _2297) + _1947;
        _2255 = ((_2287 * 0.039999999105930328369140625) * _2302) + _2111;
        _2257 = ((_2289 * 0.039999999105930328369140625) * _2302) + _2112;
        _2259 = ((_2291 * 0.039999999105930328369140625) * _2302) + _2113;
    }
    else
    {
        _2249 = _1945;
        _2251 = _1946;
        _2253 = _1947;
        _2255 = _2111;
        _2257 = _2112;
        _2259 = _2113;
    }
    float _2376;
    float _2377;
    float _2378;
    if (_643 > 0.0)
    {
        uint _2309 = _1835 + 4u;
        float _2315 = (-0.0) - _448;
        float _2316 = (-0.0) - _449;
        float _2317 = (-0.0) - _450;
        float _2318 = dot(vec3(cbLight._m0[_1835].xyz), vec3(_2315, _2316, _2317));
        float _3917 = isnan(0.0) ? _2318 : (isnan(_2318) ? 0.0 : max(_2318, 0.0));
        float _2322 = _753 + 1.0;
        float _2324 = (isnan(0.0) ? _2322 : (isnan(_2322) ? 0.0 : max(_2322, 0.0))) * 0.5;
        float _2329 = _2324 * _2324;
        float _2330 = _2329 * exp2(log2(isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0))) * 32.0);
        float _2332 = _643 / (_643 + 1.0);
        float _2333 = isnan(_1844) ? 1.0 : (isnan(1.0) ? _1844 : min(1.0, _1844));
        uint _2346 = _1835 + 5u;
        float _2352 = dot(vec3(cbLight._m0[_1871].xyz), vec3(_2315, _2316, _2317));
        float _3938 = isnan(0.0) ? _2352 : (isnan(_2352) ? 0.0 : max(_2352, 0.0));
        float _2359 = _2329 * exp2(log2(isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0))) * 32.0);
        float _2360 = isnan(_1845) ? 1.0 : (isnan(1.0) ? _1845 : min(1.0, _1845));
        _2376 = ((((_2359 * cbLight._m0[_2346].x) * _2332) * _2360) + ((((cbLight._m0[_2309].x * _1827) * _2330) * _2332) * _2333)) * 0.3183098733425140380859375;
        _2377 = ((((_2359 * cbLight._m0[_2346].y) * _2332) * _2360) + ((((cbLight._m0[_2309].y * _1828) * _2330) * _2332) * _2333)) * 0.3183098733425140380859375;
        _2378 = ((((_2359 * cbLight._m0[_2346].z) * _2332) * _2360) + ((((cbLight._m0[_2309].z * _1829) * _2330) * _2332) * _2333)) * 0.3183098733425140380859375;
    }
    else
    {
        _2376 = 0.0;
        _2377 = 0.0;
        _2378 = 0.0;
    }
    float _3954 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
    float _3965 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _3976 = isnan(0.0) ? _731 : (isnan(_731) ? 0.0 : max(_731, 0.0));
    float _3987 = isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : max(_641, 0.0));
    float _2393 = (isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0))) * ((_2249 + ((isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0))) * _742)) + _2376);
    float _2394 = (isnan(1.0) ? _3965 : (isnan(_3965) ? 1.0 : min(_3965, 1.0))) * ((_2251 + ((isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0))) * _742)) + _2377);
    float _2395 = (isnan(1.0) ? _3976 : (isnan(_3976) ? 1.0 : min(_3976, 1.0))) * ((_2253 + ((isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0))) * _742)) + _2378);
    float _2399 = 0.959999978542327880859375 - (exp2(log2(1.0 - _757) * 5.0) * 0.959999978542327880859375);
    float _2410 = (_2393 + ((_2255 + ((isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0))) * _1585)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _579.x) * _2399) - _2393) * _623);
    float _2412 = (_2394 + ((_2257 + ((isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0))) * _1585)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _579.y) * _2399) - _2394) * _623);
    float _2414 = (_2395 + ((_2259 + ((isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0))) * _1585)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _579.z) * _2399) - _2395) * _623);
    float _2419 = cbInstanceData._m0[_718 + 6u].w * (isnan(1.0) ? _3987 : (isnan(_3987) ? 1.0 : min(_3987, 1.0)));
    float _2424 = _680 / cbSceneParam._m0[86u].x;
    float _2425 = _681 / cbSceneParam._m0[86u].y;
    vec4 _2439 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2424, _2425, (log2((isnan(cbSceneParam._m0[77u].w) ? _662 : (isnan(_662) ? cbSceneParam._m0[77u].w : min(_662, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2441 = _2439.x;
    float _2442 = _2439.y;
    float _2443 = _2439.z;
    float _2444 = _2439.w;
    float _2537;
    float _2539;
    float _2541;
    float _2543;
    if (_662 > cbSceneParam._m0[78u].w)
    {
        float _2500 = isnan(_662) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _662 : min(cbSceneParam._m0[80u].w, _662));
        float _2501 = _2500 / _662;
        float _2512 = _2501 * _291;
        float _2513 = _292 * _2501;
        float _2514 = (-0.0) - _2513;
        float _2515 = _2501 * _293;
        float _2517 = (cbSceneParam._m0[77u].w * _2514) / _2500;
        float _2518 = _2517 + cbSceneParam._m0[79u].w;
        float _2519 = cbSceneParam._m0[79u].w - _2513;
        float _2525 = sqrt(((_2512 * _2512) + (_2513 * _2513)) + (_2515 * _2515));
        float _2528 = (1.0 - (cbSceneParam._m0[77u].w / _2500)) * _2525;
        float _2533 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2535 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2958;
        if (abs((_2514 - _2517) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2958 = ((((_2518 > 0.0) ? exp2(_2533 * _2518) : (2.0 - exp2(_2535 * _2518))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2528;
        }
        else
        {
            float _2673 = 1.0 / cbSceneParam._m0[80u].x;
            float _2674 = isnan(_2519) ? _2518 : (isnan(_2518) ? _2519 : max(_2518, _2519));
            float _2675 = isnan(_2519) ? _2518 : (isnan(_2518) ? _2519 : min(_2518, _2519));
            float _2684 = isnan(0.0) ? _2674 : (isnan(_2674) ? 0.0 : min(_2674, 0.0));
            float _2685 = isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : min(_2675, 0.0));
            _2958 = ((abs(_2525 / _2514) * cbSceneParam._m0[80u].y) * ((((_2684 - _2685) * 2.0) - ((exp2(_2533 * (isnan(0.0) ? _2674 : (isnan(_2674) ? 0.0 : max(_2674, 0.0)))) - exp2(_2533 * (isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : max(_2675, 0.0))))) * _2673)) - ((exp2(_2535 * _2684) - exp2(_2535 * _2685)) * _2673))) + (_2528 * cbSceneParam._m0[80u].z);
        }
        vec4 _2960 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2424, _2425, 1.0), 0.0);
        float _2969 = exp2((_2958 * (-1.44269502162933349609375)) * (1.0 - _2960.w));
        float _2970 = log2(_2969);
        float _2986 = log2(_2444);
        _2537 = (exp2(_2986 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2970 * cbSceneParam._m0[78u].x)) * _2960.x) / cbSceneParam._m0[78u].x)) + _2441;
        _2539 = (exp2(_2986 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2970 * cbSceneParam._m0[78u].y)) * _2960.y) / cbSceneParam._m0[78u].y)) + _2442;
        _2541 = (exp2(_2986 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2970 * cbSceneParam._m0[78u].z)) * _2960.z) / cbSceneParam._m0[78u].z)) + _2443;
        _2543 = _2969 * _2444;
    }
    else
    {
        _2537 = _2441;
        _2539 = _2442;
        _2541 = _2443;
        _2543 = _2444;
    }
    bool _2996;
    float _2598;
    vec4 _2601;
    float _2603;
    vec4 _2605;
    float _2613;
    float _2614;
    float _2615;
    float _2616;
    bool _2626;
    for (;;)
    {
        bool _2555 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2556 = log2(_2543);
        float _2563 = exp2(_2556 * cbSceneParam._m0[78u].x) * _2410;
        float _2564 = exp2(_2556 * cbSceneParam._m0[78u].y) * _2412;
        float _2565 = exp2(_2556 * cbSceneParam._m0[78u].z) * _2414;
        vec4 _2573 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_680, _681));
        float _2575 = _2573.x;
        float _2596 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2575)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2575))) - _662) * cbMtdParam._m0[17u].y;
        float _4038 = isnan(0.0) ? _2596 : (isnan(_2596) ? 0.0 : max(_2596, 0.0));
        _2598 = _2419 * (isnan(1.0) ? _4038 : (isnan(_4038) ? 1.0 : min(_4038, 1.0)));
        float _2599 = _669 + (-0.5);
        _2601 = cbMtdParam._m0[1u];
        _2603 = _2601.y * _2599;
        _2605 = cbMatDynParam._m0[0u];
        float _2612 = (roundEven(_2605.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2613 = _2612 * (_2555 ? _2563 : (_2563 + (cbSceneParam._m0[72u].w * _2537)));
        _2614 = _2612 * (_2555 ? _2564 : (_2564 + (cbSceneParam._m0[72u].w * _2539)));
        _2615 = _2612 * (_2555 ? _2565 : (_2565 + (cbSceneParam._m0[72u].w * _2541)));
        _2616 = _2599 * 0.999000012874603271484375;
        _2626 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2626)
        {
            if ((cbInstanceData._m0[_718 + 7u].x + _2616) < 0.5)
            {
                _2996 = true;
                break;
            }
        }
        uint _2708 = _719 + uint(_2605.w);
        if ((cbInstanceData._m0[_2708].w < 1.0) && ((cbInstanceData._m0[_2708].w + _2616) < 0.5))
        {
            _2996 = true;
            break;
        }
        if ((_2603 + _357) < _2601.x)
        {
            _2996 = true;
            break;
        }
        _2996 = false;
        break;
    }
    float _3001;
    if (_2996)
    {
        discard_state = true;
        _3001 = 0.0;
    }
    else
    {
        _3001 = _2598;
    }
    SV_Target.x = _2613;
    SV_Target.y = _2614;
    SV_Target.z = _2615;
    SV_Target.w = _3001;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2598;
    discard_exit();
}


