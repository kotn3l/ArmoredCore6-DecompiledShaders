#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1193;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _204 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _205 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _206 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _212 = inversesqrt(dot(vec3(_204, _205, _206), vec3(_204, _205, _206)));
    float _213 = _212 * _204;
    float _214 = _212 * _205;
    float _215 = _212 * _206;
    float _219 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _220 = _219 * NORMAL.x;
    float _221 = _219 * NORMAL.y;
    float _222 = _219 * NORMAL.z;
    float _226 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _227 = _226 * TANGENT.x;
    float _228 = _226 * TANGENT.y;
    float _229 = _226 * TANGENT.z;
    float _234;
    float _235;
    float _236;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _234 = (-0.0) - _220;
        _235 = (-0.0) - _221;
        _236 = (-0.0) - _222;
    }
    else
    {
        _234 = _220;
        _235 = _221;
        _236 = _222;
    }
    float _283 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _293 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _283);
    float _294 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _283);
    float _295 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _283);
    uint _301 = uint(roundEven(NORMAL.w)) * 13u;
    uint _306 = _301 + 1u;
    uint _310 = _301 + 2u;
    float _319 = sqrt(((cbInstanceData._m0[_306].x * cbInstanceData._m0[_306].x) + (cbInstanceData._m0[_301].x * cbInstanceData._m0[_301].x)) + (cbInstanceData._m0[_310].x * cbInstanceData._m0[_310].x));
    float _320 = _319 * TEXCOORD.z;
    float _321 = _319 * TEXCOORD.w;
    vec4 _334 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _320) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _321) + cbTextureTilingScale._m0[8u].w));
    vec4 _361 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _369 = (_361.x * 2.0) + (-1.0);
    float _371 = (_361.y * 2.0) + (-1.0);
    float _372 = dot(vec2(_369, _371), vec2(_369, _371));
    float _3106 = isnan(0.0) ? _372 : (isnan(_372) ? 0.0 : max(_372, 0.0));
    float _378 = sqrt(1.0 - (isnan(1.0) ? _3106 : (isnan(_3106) ? 1.0 : min(_3106, 1.0))));
    float _381 = fma(_378, _234, fma(_371, _227, _369 * _213));
    float _384 = fma(_378, _235, fma(_371, _228, _369 * _214));
    float _387 = fma(_378, _236, fma(_371, _229, _369 * _215));
    float _391 = inversesqrt(dot(vec3(_381, _384, _387), vec3(_381, _384, _387)));
    float _392 = _391 * _381;
    float _393 = _391 * _384;
    float _422 = (cbMtdParam._m0[17u].w + dot(vec4(_392, _393, _391 * _387, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _320) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _321) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3117 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _423 = isnan(1.0) ? _3117 : (isnan(_3117) ? 1.0 : min(_3117, 1.0));
    vec4 _435 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _440 = _435.w;
    float _452 = dot(vec3(_293, _294, _295), vec3(_213, _214, _215));
    float _455 = dot(vec3(_293, _294, _295), vec3(_227, _228, _229));
    float _458 = dot(vec3(_293, _294, _295), vec3(_234, _235, _236));
    float _464 = inversesqrt(dot(vec3(_452, _455, _458), vec3(_452, _455, _458)));
    float _486 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _506 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_452 * cbMtdParam._m0[14u].x) * _464) * _486) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_455 * cbMtdParam._m0[14u].x) * _464) * _486) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _529 = inversesqrt(dot(vec3(_293, _294, _295), vec3(_293, _294, _295)));
    float _530 = _529 * _293;
    float _531 = _529 * _294;
    float _532 = _529 * _295;
    float _533 = dot(vec4(_530, _531, _532, 0.0), vec4(_234, _235, _236, 0.0));
    float _536 = _533 - cbMtdParam._m0[15u].z;
    float _3128 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _543 = exp2(log2(1.0 - (isnan(1.0) ? _3128 : (isnan(_3128) ? 1.0 : min(_3128, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _558 = ((((_435.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _506.x) * cbMtdParam._m0[9u].x) * ((_543 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _563 = ((((_435.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _506.y) * cbMtdParam._m0[9u].y) * ((_543 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _568 = ((((_435.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _506.z) * cbMtdParam._m0[9u].z) * ((_543 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _575 = (((_334.x * cbMtdParam._m0[10u].x) - _558) * _423) + _558;
    float _576 = (((_334.y * cbMtdParam._m0[10u].y) - _563) * _423) + _563;
    float _577 = (((_334.z * cbMtdParam._m0[10u].z) - _568) * _423) + _568;
    vec4 _589 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _320) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _321) + cbTextureTilingScale._m0[9u].w));
    float _596 = (_589.x * 2.0) + (-1.0);
    float _597 = (_589.y * 2.0) + (-1.0);
    float _598 = dot(vec2(_596, _597), vec2(_596, _597));
    float _3144 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _610 = (cbMtdParam._m0[16u].y + _361.z) + cbMtdParam._m0[17u].z;
    float _613 = ((_589.z - _610) * _423) + _610;
    float _623 = ((sqrt(1.0 - (isnan(1.0) ? _3144 : (isnan(_3144) ? 1.0 : min(_3144, 1.0)))) - _378) * _423) + _378;
    float _626 = (((_596 - _369) * _423) + _369) + (cbMtdParam._m0[14u].z * _369);
    float _627 = (((_597 - _371) * _423) + _371) + (cbMtdParam._m0[14u].z * _371);
    vec4 _639 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _643 = cbMtdParam._m0[16u].w * _639.x;
    float _645 = _643 - (_643 * _423);
    float _654 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _655 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _665 = cbSceneParam._m0[86u].x * ((_654 / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _392));
    float _666 = cbSceneParam._m0[86u].y * ((_655 / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _393));
    float _673 = isnan(cbInstanceData._m0[8u].x) ? _665 : (isnan(_665) ? cbInstanceData._m0[8u].x : max(_665, cbInstanceData._m0[8u].x));
    float _674 = isnan(cbInstanceData._m0[8u].y) ? _666 : (isnan(_666) ? cbInstanceData._m0[8u].y : max(_666, cbInstanceData._m0[8u].y));
    vec4 _678 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _673 : (isnan(_673) ? cbInstanceData._m0[8u].z : min(_673, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _674 : (isnan(_674) ? cbInstanceData._m0[8u].w : min(_674, cbInstanceData._m0[8u].w))));
    float _711 = _533 - cbMtdParam._m0[15u].x;
    float _3175 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _721 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3175 : (isnan(_3175) ? 1.0 : min(_3175, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3191 = isnan(0.0) ? _721 : (isnan(_721) ? 0.0 : max(_721, 0.0));
    float _722 = isnan(1.0) ? _3191 : (isnan(_3191) ? 1.0 : min(_3191, 1.0));
    float _724 = _722 - (_722 * _423);
    float _728 = fma(_623, _234, fma(_627, _227, _626 * _213));
    float _731 = fma(_623, _235, fma(_627, _228, _626 * _214));
    float _734 = fma(_623, _236, fma(_627, _229, _626 * _215));
    float _738 = inversesqrt(dot(vec3(_728, _731, _734), vec3(_728, _731, _734)));
    float _739 = _738 * _728;
    float _740 = _738 * _731;
    float _741 = _738 * _734;
    float _3202 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
    float _742 = isnan(1.0) ? _3202 : (isnan(_3202) ? 1.0 : min(_3202, 1.0));
    float _3213 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _743 = isnan(1.0) ? _3213 : (isnan(_3213) ? 1.0 : min(_3213, 1.0));
    float _744 = isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : max(_645, 0.0));
    float _3229 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _3240 = isnan(0.0) ? _576 : (isnan(_576) ? 0.0 : max(_576, 0.0));
    float _3251 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _761 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _779 = fma(_741, cbSceneParam._m0[5u].z, fma(_740, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _739));
    float _782 = fma(_741, cbSceneParam._m0[6u].z, fma(_740, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _739));
    float _785 = fma(_741, cbSceneParam._m0[7u].z, fma(_740, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _739));
    uint _799 = (_301 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _805 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3229 : (isnan(_3229) ? 1.0 : min(_3229, 1.0)))) * cbInstanceData._m0[_799].x;
    float _806 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3240 : (isnan(_3240) ? 1.0 : min(_3240, 1.0)))) * cbInstanceData._m0[_799].y;
    float _807 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3251 : (isnan(_3251) ? 1.0 : min(_3251, 1.0)))) * cbInstanceData._m0[_799].z;
    float _3262 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _808 = isnan(1.0) ? _3262 : (isnan(_3262) ? 1.0 : min(_3262, 1.0));
    float _3273 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _809 = isnan(1.0) ? _3273 : (isnan(_3273) ? 1.0 : min(_3273, 1.0));
    float _3284 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
    float _810 = isnan(1.0) ? _3284 : (isnan(_3284) ? 1.0 : min(_3284, 1.0));
    vec4 _814 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _654, cbSceneParam._m0[86u].y * _655));
    float _817 = _814.x * TEXCOORD_5.w;
    float _818 = dot(vec3(_739, _740, _741), vec3(_530, _531, _532));
    float _821 = _818 * 2.0;
    float _825 = (_821 * _739) - _530;
    float _826 = (_821 * _740) - _531;
    float _827 = (_821 * _741) - _532;
    float _828 = dot(vec3(_530, _531, _532), vec3(_739, _740, _741));
    float _831 = abs(_828);
    float _3295 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _832 = isnan(1.0) ? _3295 : (isnan(_3295) ? 1.0 : min(_3295, 1.0));
    float _838 = sqrt(_743);
    float _850 = exp2((_838 * 5.0) * log2(1.0 - (_832 * 0.999000012874603271484375))) / (4.0 - (_838 * 3.0));
    float _882 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _886 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _890 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1192;
    float _1194;
    float _1195;
    float _1196;
    float _1197;
    float _1198;
    float _1199;
    float _1200;
    float _1201;
    float _1202;
    float _1203;
    float _1204;
    float _1205;
    float _1206;
    float _1207;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _917 = fma(_890, cbModelParam._m0[26u].z, fma(_886, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _882));
        float _921 = fma(_890, cbModelParam._m0[27u].z, fma(_886, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _882));
        float _925 = fma(_890, cbModelParam._m0[28u].z, fma(_886, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _882));
        float _950 = _882 + _739;
        float _951 = _886 + _740;
        float _952 = _890 + _741;
        float _962 = fma(_952, cbModelParam._m0[26u].z, fma(_951, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _950)) - _917;
        float _963 = fma(_952, cbModelParam._m0[27u].z, fma(_951, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _950)) - _921;
        float _964 = fma(_952, cbModelParam._m0[28u].z, fma(_951, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _950)) - _925;
        float _968 = inversesqrt(dot(vec3(_962, _963, _964), vec3(_962, _963, _964)));
        float _981 = ((_968 * _962) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_917 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _982 = ((_968 * _963) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_921 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _983 = ((_968 * _964) / cbModelParam._m0[34u].z) + ((((((_925 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _986 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_981, _982, _983), 0.0);
        vec4 _993 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_981, _982, _983), 0.0);
        vec4 _1000 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_981, _982, _983), 0.0);
        vec4 _1007 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_981, _982, _983), 0.0);
        float _1020 = exp2((_986.w + (-0.5)) * 20.0) * 2.0;
        float _1021 = _1020 * (_986.x + (-0.5));
        float _1022 = _1020 * (_986.y + (-0.5));
        float _1023 = _1020 * (_986.z + (-0.5));
        float _1030 = exp2((_993.w + (-0.5)) * 20.0) * 2.0;
        float _1031 = _1030 * (_993.x + (-0.5));
        float _1032 = _1030 * (_993.y + (-0.5));
        float _1033 = _1030 * (_993.z + (-0.5));
        float _1040 = exp2((_1000.w + (-0.5)) * 20.0) * 2.0;
        float _1041 = _1040 * (_1000.x + (-0.5));
        float _1042 = _1040 * (_1000.y + (-0.5));
        float _1043 = _1040 * (_1000.z + (-0.5));
        float _1050 = exp2((_1007.w + (-0.5)) * 20.0) * 2.0;
        float _1051 = _1050 * (_1007.x + (-0.5));
        float _1052 = _1050 * (_1007.y + (-0.5));
        float _1053 = _1050 * (_1007.z + (-0.5));
        float _1054 = isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0));
        float _1055 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
        float _1056 = isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0));
        float _1057 = _1021 * 0.5;
        float _1058 = _1031 * 0.5;
        float _1059 = _1041 * 0.5;
        float _1060 = dot(vec3(_1057, _1058, _1059), vec3(_1057, _1058, _1059));
        float _1065 = (_1060 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1060);
        float _1074 = (dot(vec3(_739, _740, _741), vec3(_1065 * _1057, _1065 * _1058, _1065 * _1059)) + 1.0) * 0.5;
        float _3321 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
        float _1084 = sqrt(((_1058 * _1058) + (_1057 * _1057)) + (_1059 * _1059)) / (_1054 + 9.9999997473787516355514526367188e-06);
        float _3332 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
        float _1085 = isnan(1.0) ? _3332 : (isnan(_3332) ? 1.0 : min(_3332, 1.0));
        float _1086 = _1085 * 2.0;
        float _1090 = (1.0 - _1085) / (_1085 + 1.0);
        float _3343 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
        float _1091 = isnan(1.0) ? _3343 : (isnan(_3343) ? 1.0 : min(_3343, 1.0));
        float _1100 = ((((1.0 - _1091) * (_1086 + 2.0)) * exp2(log2(isnan(1.0) ? _3321 : (isnan(_3321) ? 1.0 : min(_3321, 1.0))) * (_1086 + 1.0))) + _1091) * _1054;
        float _1101 = _1022 * 0.5;
        float _1102 = _1032 * 0.5;
        float _1103 = _1042 * 0.5;
        float _1104 = dot(vec3(_1101, _1102, _1103), vec3(_1101, _1102, _1103));
        float _1109 = (_1104 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1104);
        float _1117 = (dot(vec3(_739, _740, _741), vec3(_1109 * _1101, _1109 * _1102, _1109 * _1103)) + 1.0) * 0.5;
        float _3354 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
        float _1126 = sqrt(((_1102 * _1102) + (_1101 * _1101)) + (_1103 * _1103)) / (_1055 + 9.9999997473787516355514526367188e-06);
        float _3365 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1127 = isnan(1.0) ? _3365 : (isnan(_3365) ? 1.0 : min(_3365, 1.0));
        float _1128 = _1127 * 2.0;
        float _1132 = (1.0 - _1127) / (_1127 + 1.0);
        float _3376 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
        float _1133 = isnan(1.0) ? _3376 : (isnan(_3376) ? 1.0 : min(_3376, 1.0));
        float _1142 = ((((1.0 - _1133) * (_1128 + 2.0)) * exp2(log2(isnan(1.0) ? _3354 : (isnan(_3354) ? 1.0 : min(_3354, 1.0))) * (_1128 + 1.0))) + _1133) * _1055;
        float _1143 = _1023 * 0.5;
        float _1144 = _1033 * 0.5;
        float _1145 = _1043 * 0.5;
        float _1146 = dot(vec3(_1143, _1144, _1145), vec3(_1143, _1144, _1145));
        float _1151 = (_1146 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1146);
        float _1159 = (dot(vec3(_739, _740, _741), vec3(_1151 * _1143, _1151 * _1144, _1151 * _1145)) + 1.0) * 0.5;
        float _3387 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1168 = sqrt(((_1144 * _1144) + (_1143 * _1143)) + (_1145 * _1145)) / (_1056 + 9.9999997473787516355514526367188e-06);
        float _3398 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
        float _1169 = isnan(1.0) ? _3398 : (isnan(_3398) ? 1.0 : min(_3398, 1.0));
        float _1170 = _1169 * 2.0;
        float _1174 = (1.0 - _1169) / (_1169 + 1.0);
        float _3409 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
        float _1175 = isnan(1.0) ? _3409 : (isnan(_3409) ? 1.0 : min(_3409, 1.0));
        float _1184 = ((((1.0 - _1175) * (_1170 + 2.0)) * exp2(log2(isnan(1.0) ? _3387 : (isnan(_3387) ? 1.0 : min(_3387, 1.0))) * (_1170 + 1.0))) + _1175) * _1056;
        _1192 = _1023;
        _1194 = _1022;
        _1195 = _1021;
        _1196 = _1033;
        _1197 = _1032;
        _1198 = _1031;
        _1199 = _1043;
        _1200 = _1042;
        _1201 = _1041;
        _1202 = _1056;
        _1203 = _1055;
        _1204 = _1054;
        _1205 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0)));
        _1206 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0)));
        _1207 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0)));
    }
    else
    {
        _1192 = _1193;
        _1194 = _1193;
        _1195 = _1193;
        _1196 = _1193;
        _1197 = _1193;
        _1198 = _1193;
        _1199 = _1193;
        _1200 = _1193;
        _1201 = _1193;
        _1202 = _1193;
        _1203 = _1193;
        _1204 = _1193;
        _1205 = 0.0;
        _1206 = 0.0;
        _1207 = 0.0;
    }
    float _1502;
    float _1503;
    float _1504;
    float _1505;
    float _1506;
    float _1507;
    float _1508;
    float _1509;
    float _1510;
    float _1511;
    float _1512;
    float _1513;
    float _1514;
    float _1515;
    float _1516;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1233 = fma(_890, cbModelParam._m0[30u].z, fma(_886, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _882));
        float _1237 = fma(_890, cbModelParam._m0[31u].z, fma(_886, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _882));
        float _1241 = fma(_890, cbModelParam._m0[32u].z, fma(_886, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _882));
        float _1264 = _882 + _739;
        float _1265 = _886 + _740;
        float _1266 = _890 + _741;
        float _1276 = fma(_1266, cbModelParam._m0[30u].z, fma(_1265, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1264)) - _1233;
        float _1277 = fma(_1266, cbModelParam._m0[31u].z, fma(_1265, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1264)) - _1237;
        float _1278 = fma(_1266, cbModelParam._m0[32u].z, fma(_1265, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1264)) - _1241;
        float _1282 = inversesqrt(dot(vec3(_1276, _1277, _1278), vec3(_1276, _1277, _1278)));
        float _1295 = ((_1282 * _1276) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1233 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1296 = ((_1282 * _1277) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1237 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1297 = ((_1282 * _1278) / cbModelParam._m0[35u].z) + ((((((_1241 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1299 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1295, _1296, _1297), 0.0);
        vec4 _1306 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1295, _1296, _1297), 0.0);
        vec4 _1313 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1295, _1296, _1297), 0.0);
        vec4 _1320 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1295, _1296, _1297), 0.0);
        float _1332 = exp2((_1299.w + (-0.5)) * 20.0) * 2.0;
        float _1333 = _1332 * (_1299.x + (-0.5));
        float _1334 = _1332 * (_1299.y + (-0.5));
        float _1335 = _1332 * (_1299.z + (-0.5));
        float _1342 = exp2((_1306.w + (-0.5)) * 20.0) * 2.0;
        float _1343 = _1342 * (_1306.x + (-0.5));
        float _1344 = _1342 * (_1306.y + (-0.5));
        float _1345 = _1342 * (_1306.z + (-0.5));
        float _1352 = exp2((_1313.w + (-0.5)) * 20.0) * 2.0;
        float _1353 = _1352 * (_1313.x + (-0.5));
        float _1354 = _1352 * (_1313.y + (-0.5));
        float _1355 = _1352 * (_1313.z + (-0.5));
        float _1362 = exp2((_1320.w + (-0.5)) * 20.0) * 2.0;
        float _1363 = _1362 * (_1320.x + (-0.5));
        float _1364 = _1362 * (_1320.y + (-0.5));
        float _1365 = _1362 * (_1320.z + (-0.5));
        float _1366 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
        float _1367 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1368 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
        float _1369 = _1333 * 0.5;
        float _1370 = _1343 * 0.5;
        float _1371 = _1353 * 0.5;
        float _1372 = dot(vec3(_1369, _1370, _1371), vec3(_1369, _1370, _1371));
        float _1377 = (_1372 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1372);
        float _1385 = (dot(vec3(_739, _740, _741), vec3(_1377 * _1369, _1377 * _1370, _1377 * _1371)) + 1.0) * 0.5;
        float _3450 = isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0));
        float _1394 = sqrt(((_1370 * _1370) + (_1369 * _1369)) + (_1371 * _1371)) / (_1366 + 9.9999997473787516355514526367188e-06);
        float _3461 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1395 = isnan(1.0) ? _3461 : (isnan(_3461) ? 1.0 : min(_3461, 1.0));
        float _1396 = _1395 * 2.0;
        float _1400 = (1.0 - _1395) / (_1395 + 1.0);
        float _3472 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1401 = isnan(1.0) ? _3472 : (isnan(_3472) ? 1.0 : min(_3472, 1.0));
        float _1410 = ((((1.0 - _1401) * (_1396 + 2.0)) * exp2(log2(isnan(1.0) ? _3450 : (isnan(_3450) ? 1.0 : min(_3450, 1.0))) * (_1396 + 1.0))) + _1401) * _1366;
        float _1411 = _1334 * 0.5;
        float _1412 = _1344 * 0.5;
        float _1413 = _1354 * 0.5;
        float _1414 = dot(vec3(_1411, _1412, _1413), vec3(_1411, _1412, _1413));
        float _1419 = (_1414 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1414);
        float _1427 = (dot(vec3(_739, _740, _741), vec3(_1419 * _1411, _1419 * _1412, _1419 * _1413)) + 1.0) * 0.5;
        float _3483 = isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0));
        float _1436 = sqrt(((_1412 * _1412) + (_1411 * _1411)) + (_1413 * _1413)) / (_1367 + 9.9999997473787516355514526367188e-06);
        float _3494 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1437 = isnan(1.0) ? _3494 : (isnan(_3494) ? 1.0 : min(_3494, 1.0));
        float _1438 = _1437 * 2.0;
        float _1442 = (1.0 - _1437) / (_1437 + 1.0);
        float _3505 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1443 = isnan(1.0) ? _3505 : (isnan(_3505) ? 1.0 : min(_3505, 1.0));
        float _1452 = ((((1.0 - _1443) * (_1438 + 2.0)) * exp2(log2(isnan(1.0) ? _3483 : (isnan(_3483) ? 1.0 : min(_3483, 1.0))) * (_1438 + 1.0))) + _1443) * _1367;
        float _1453 = _1335 * 0.5;
        float _1454 = _1345 * 0.5;
        float _1455 = _1355 * 0.5;
        float _1456 = dot(vec3(_1453, _1454, _1455), vec3(_1453, _1454, _1455));
        float _1461 = (_1456 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1456);
        float _1469 = (dot(vec3(_739, _740, _741), vec3(_1461 * _1453, _1461 * _1454, _1461 * _1455)) + 1.0) * 0.5;
        float _3516 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
        float _1478 = sqrt(((_1454 * _1454) + (_1453 * _1453)) + (_1455 * _1455)) / (_1368 + 9.9999997473787516355514526367188e-06);
        float _3527 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1479 = isnan(1.0) ? _3527 : (isnan(_3527) ? 1.0 : min(_3527, 1.0));
        float _1480 = _1479 * 2.0;
        float _1484 = (1.0 - _1479) / (_1479 + 1.0);
        float _3538 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1485 = isnan(1.0) ? _3538 : (isnan(_3538) ? 1.0 : min(_3538, 1.0));
        float _1494 = ((((1.0 - _1485) * (_1480 + 2.0)) * exp2(log2(isnan(1.0) ? _3516 : (isnan(_3516) ? 1.0 : min(_3516, 1.0))) * (_1480 + 1.0))) + _1485) * _1368;
        _1502 = _1335;
        _1503 = _1334;
        _1504 = _1333;
        _1505 = _1345;
        _1506 = _1344;
        _1507 = _1343;
        _1508 = _1355;
        _1509 = _1354;
        _1510 = _1353;
        _1511 = _1368;
        _1512 = _1367;
        _1513 = _1366;
        _1514 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0)));
        _1515 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0)));
        _1516 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0)));
    }
    else
    {
        _1502 = _1193;
        _1503 = _1193;
        _1504 = _1193;
        _1505 = _1193;
        _1506 = _1193;
        _1507 = _1193;
        _1508 = _1193;
        _1509 = _1193;
        _1510 = _1193;
        _1511 = _1193;
        _1512 = _1193;
        _1513 = _1193;
        _1514 = 0.0;
        _1515 = 0.0;
        _1516 = 0.0;
    }
    float _1526 = (cbModelParam._m0[1u].x * (_1514 - _1205)) + _1205;
    float _1527 = (cbModelParam._m0[1u].x * (_1515 - _1206)) + _1206;
    float _1528 = (cbModelParam._m0[1u].x * (_1516 - _1207)) + _1207;
    float _1549 = fma(_1528, cbSceneParam._m0[89u].z, fma(_1527, cbSceneParam._m0[89u].y, _1526 * cbSceneParam._m0[89u].x));
    float _1552 = fma(_1528, cbSceneParam._m0[90u].z, fma(_1527, cbSceneParam._m0[90u].y, _1526 * cbSceneParam._m0[90u].x));
    float _1555 = fma(_1528, cbSceneParam._m0[91u].z, fma(_1527, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1526));
    float _1570 = _825 * 0.5;
    float _1571 = _826 * 0.5;
    float _1572 = _827 * 0.5;
    float _1573 = dot(vec4(_1570, _1571, _1572, 1.0), vec4(_1504, _1507, _1510, _1513));
    float _1576 = dot(vec4(_1570, _1571, _1572, 1.0), vec4(_1503, _1506, _1509, _1512));
    float _1579 = dot(vec4(_1570, _1571, _1572, 1.0), vec4(_1502, _1505, _1508, _1511));
    float _1613;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1586 = dot(vec4(_1570, _1571, _1572, 1.0), vec4(_1192, _1196, _1199, _1202));
        float _1590 = dot(vec4(_1570, _1571, _1572, 1.0), vec4(_1194, _1197, _1200, _1203));
        float _1594 = dot(vec4(_1570, _1571, _1572, 1.0), vec4(_1195, _1198, _1201, _1204));
        float _1601 = dot(vec4(cbModelParam._m0[39u]), vec4(_1570, _1571, _1572, 1.0));
        _1613 = dot(vec3(isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0)), isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0)), isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1601) ? 0.0 : (isnan(0.0) ? _1601 : max(0.0, _1601))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1613 = 1.0;
    }
    float _1624;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1615 = dot(vec4(cbModelParam._m0[40u]), vec4(_1570, _1571, _1572, 1.0));
        _1624 = dot(vec3(isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0)), isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0)), isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1615) ? 0.0 : (isnan(0.0) ? _1615 : max(0.0, _1615))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1624 = 1.0;
    }
    float _1628 = (_1624 * cbModelParam._m0[1u].x) + (_1613 * (1.0 - cbModelParam._m0[1u].x));
    float _1638 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _743);
    float _1639 = isnan(_1638) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1638 : min(cbModelParam._m0[25u].z, _1638));
    float _1719;
    float _1721;
    float _1723;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1686 = fma(_890, cbModelParam._m0[13u].z, fma(_886, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _882)) + cbModelParam._m0[13u].w;
        float _1690 = fma(_890, cbModelParam._m0[14u].z, fma(_886, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _882)) + cbModelParam._m0[14u].w;
        float _1694 = fma(_890, cbModelParam._m0[15u].z, fma(_886, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _882)) + cbModelParam._m0[15u].w;
        float _1697 = fma(_827, cbModelParam._m0[13u].z, fma(_826, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _825));
        float _1700 = fma(_827, cbModelParam._m0[14u].z, fma(_826, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _825));
        float _1703 = fma(_827, cbModelParam._m0[15u].z, fma(_826, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _825));
        float _1731;
        if (_1697 > 0.0)
        {
            _1731 = abs((1.0 - _1686) / _1697);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1697 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1686 + 1.0) / _1697);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1731 = frontier_phi_16_14_ladder;
        }
        float _1923;
        if (_1700 > 0.0)
        {
            _1923 = abs((1.0 - _1690) / _1700);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1700 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1690 + 1.0) / _1700);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1923 = frontier_phi_25_21_ladder;
        }
        float _2161;
        if (_1703 > 0.0)
        {
            _2161 = abs((1.0 - _1694) / _1703);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1703 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1694 + 1.0) / _1703);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2161 = frontier_phi_36_32_ladder;
        }
        float _2163 = isnan(_1923) ? _1731 : (isnan(_1731) ? _1923 : min(_1731, _1923));
        float _2164 = isnan(_2161) ? _2163 : (isnan(_2163) ? _2161 : min(_2163, _2161));
        float _2168 = (_2164 * _1697) + _1686;
        float _2169 = (_2164 * _1700) + _1690;
        float _2170 = (_2164 * _1703) + _1694;
        float _2171 = _2164 * 9.9999997473787516355514526367188e-05;
        float _2173 = (-1.0) - _2171;
        float _2175 = _2171 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2170 > _2175) || ((_2170 < _2173) || ((_2169 > _2175) || ((_2169 < _2173) || ((_2168 < _2173) || (_2168 > _2175))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2320 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2170, cbModelParam._m0[9u].z, fma(_2169, cbModelParam._m0[9u].y, _2168 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2170, cbModelParam._m0[10u].z, fma(_2169, cbModelParam._m0[10u].y, _2168 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2170, cbModelParam._m0[11u].z, fma(_2169, cbModelParam._m0[11u].y, _2168 * cbModelParam._m0[11u].x))), _1639);
            frontier_phi_15_36_ladder = _2320.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2320.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2320.y * cbModelParam._m0[1u].y;
        }
        _1719 = frontier_phi_15_36_ladder_1;
        _1721 = frontier_phi_15_36_ladder_2;
        _1723 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1707 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_825, _826, _827), _1639);
        _1719 = _1707.x * cbModelParam._m0[1u].y;
        _1721 = _1707.y * cbModelParam._m0[1u].y;
        _1723 = _1707.z * cbModelParam._m0[1u].y;
    }
    float _1727 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _743);
    float _1728 = isnan(_1727) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1727 : min(cbModelParam._m0[25u].w, _1727));
    float _1819;
    float _1821;
    float _1823;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1783 = fma(_890, cbModelParam._m0[21u].z, fma(_886, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _882)) + cbModelParam._m0[21u].w;
        float _1787 = fma(_890, cbModelParam._m0[22u].z, fma(_886, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _882)) + cbModelParam._m0[22u].w;
        float _1791 = fma(_890, cbModelParam._m0[23u].z, fma(_886, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _882)) + cbModelParam._m0[23u].w;
        float _1794 = fma(_827, cbModelParam._m0[21u].z, fma(_826, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _825));
        float _1797 = fma(_827, cbModelParam._m0[22u].z, fma(_826, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _825));
        float _1800 = fma(_827, cbModelParam._m0[23u].z, fma(_826, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _825));
        float _1928;
        if (_1794 > 0.0)
        {
            _1928 = abs((1.0 - _1783) / _1794);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1794 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1783 + 1.0) / _1794);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1928 = frontier_phi_27_23_ladder;
        }
        float _2188;
        if (_1797 > 0.0)
        {
            _2188 = abs((1.0 - _1787) / _1797);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1797 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1787 + 1.0) / _1797);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2188 = frontier_phi_38_34_ladder;
        }
        float _2495;
        if (_1800 > 0.0)
        {
            _2495 = abs((1.0 - _1791) / _1800);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1800 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1791 + 1.0) / _1800);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2495 = frontier_phi_49_44_ladder;
        }
        float _2497 = isnan(_2188) ? _1928 : (isnan(_1928) ? _2188 : min(_1928, _2188));
        float _2498 = isnan(_2495) ? _2497 : (isnan(_2497) ? _2495 : min(_2497, _2495));
        float _2502 = (_2498 * _1794) + _1783;
        float _2503 = (_2498 * _1797) + _1787;
        float _2504 = (_2498 * _1800) + _1791;
        float _2505 = _2498 * 9.9999997473787516355514526367188e-05;
        float _2506 = (-1.0) - _2505;
        float _2508 = _2505 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2504 > _2508) || ((_2504 < _2506) || ((_2503 > _2508) || ((_2503 < _2506) || ((_2502 < _2506) || (_2502 > _2508))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2677 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2504, cbModelParam._m0[17u].z, fma(_2503, cbModelParam._m0[17u].y, _2502 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2504, cbModelParam._m0[18u].z, fma(_2503, cbModelParam._m0[18u].y, _2502 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2504, cbModelParam._m0[19u].z, fma(_2503, cbModelParam._m0[19u].y, _2502 * cbModelParam._m0[19u].x))), _1728);
            frontier_phi_24_49_ladder = _2677.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2677.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2677.x * cbModelParam._m0[1u].z;
        }
        _1819 = frontier_phi_24_49_ladder_2;
        _1821 = frontier_phi_24_49_ladder;
        _1823 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1803 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_825, _826, _827), _1728);
        _1819 = _1803.x * cbModelParam._m0[1u].z;
        _1821 = _1803.y * cbModelParam._m0[1u].z;
        _1823 = _1803.z * cbModelParam._m0[1u].z;
    }
    float _1835 = ((((1.0 - _850) * ((_838 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_850 * _838)) * _817;
    float _1836 = _1835 * ((cbModelParam._m0[1u].w * (_1819 - _1719)) + _1719);
    float _1837 = _1835 * ((cbModelParam._m0[1u].w * (_1821 - _1721)) + _1721);
    float _1838 = _1835 * ((cbModelParam._m0[1u].w * (_1823 - _1723)) + _1723);
    float _1841 = fma(_1838, cbSceneParam._m0[89u].z, fma(_1837, cbSceneParam._m0[89u].y, _1836 * cbSceneParam._m0[89u].x));
    float _1844 = fma(_1838, cbSceneParam._m0[90u].z, fma(_1837, cbSceneParam._m0[90u].y, _1836 * cbSceneParam._m0[90u].x));
    float _1847 = fma(_1838, cbSceneParam._m0[91u].z, fma(_1837, cbSceneParam._m0[91u].y, _1836 * cbSceneParam._m0[91u].x));
    vec4 _1855 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_654, _655));
    float _1857 = _1855.w;
    float _1869 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1857);
    float _1870 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1857);
    float _1871 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1857);
    uvec4 _1875 = floatBitsToUint(cbInstanceData._m0[_301 + 5u]);
    uint _1877 = _1875.x * 14u;
    uint _1878 = _1877 + 13u;
    float _1883 = _817 + (-1.0);
    float _1886 = (cbLight._m0[_1878].x * _1883) + 1.0;
    float _1887 = (cbLight._m0[_1878].y * _1883) + 1.0;
    uint _1889 = _1877 + 4u;
    float _1900 = dot(vec3(cbLight._m0[_1877].xyz), vec3(_739, _740, _741));
    float _1903 = isnan(1.0) ? _1886 : (isnan(_1886) ? 1.0 : min(_1886, 1.0));
    float _1904 = cbLight._m0[_1889].x * _1869;
    float _1905 = cbLight._m0[_1889].y * _1870;
    float _1906 = cbLight._m0[_1889].z * _1871;
    uint _1907 = _1877 + 5u;
    uint _1913 = _1877 | 1u;
    float _1919 = dot(vec3(cbLight._m0[_1913].xyz), vec3(_739, _740, _741));
    float _1922 = isnan(1.0) ? _1887 : (isnan(_1887) ? 1.0 : min(_1887, 1.0));
    float _1987;
    float _1988;
    float _1989;
    if (_744 == 0.0)
    {
        float _3674 = isnan(0.0) ? _1900 : (isnan(_1900) ? 0.0 : max(_1900, 0.0));
        float _3685 = isnan(0.0) ? _1919 : (isnan(_1919) ? 0.0 : max(_1919, 0.0));
        float _1941 = (isnan(1.0) ? _3674 : (isnan(_3674) ? 1.0 : min(_3674, 1.0))) * 0.3183098733425140380859375;
        float _1943 = (isnan(1.0) ? _3685 : (isnan(_3685) ? 1.0 : min(_3685, 1.0))) * 0.3183098733425140380859375;
        _1987 = ((cbLight._m0[_1907].x * _1922) * _1943) + ((_1904 * _1903) * _1941);
        _1988 = ((_1922 * cbLight._m0[_1907].y) * _1943) + ((_1905 * _1903) * _1941);
        _1989 = ((_1922 * cbLight._m0[_1907].z) * _1943) + ((_1906 * _1903) * _1941);
    }
    else
    {
        float _1953 = _1900 + _744;
        float _1956 = (_744 * 2.0) + 1.0;
        float _1957 = (isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0))) / _1956;
        float _1964 = _1919 + _744;
        float _1966 = (isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0))) / _1956;
        _1987 = (((_1966 * cbLight._m0[_1907].x) * _1922) + ((_1904 * _1957) * _1903)) * 0.3183098733425140380859375;
        _1988 = (((_1966 * cbLight._m0[_1907].y) * _1922) + ((_1905 * _1957) * _1903)) * 0.3183098733425140380859375;
        _1989 = (((_1966 * cbLight._m0[_1907].z) * _1922) + ((_1906 * _1957) * _1903)) * 0.3183098733425140380859375;
    }
    uint _1993 = _1877 + 8u;
    float _2009 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1877].w)) * _743) * 0.949999988079071044921875);
    float _2010 = _2009 * _2009;
    float _2011 = cbLight._m0[_1877].x + _530;
    float _2012 = cbLight._m0[_1877].y + _531;
    float _2013 = cbLight._m0[_1877].z + _532;
    float _2017 = inversesqrt(dot(vec3(_2011, _2012, _2013), vec3(_2011, _2012, _2013)));
    float _2018 = _2017 * _2011;
    float _2019 = _2017 * _2012;
    float _2020 = _2017 * _2013;
    float _2021 = dot(vec3(_739, _740, _741), vec3(cbLight._m0[_1877].xyz));
    float _3706 = isnan(0.0) ? _2021 : (isnan(_2021) ? 0.0 : max(_2021, 0.0));
    float _2024 = isnan(1.0) ? _3706 : (isnan(_3706) ? 1.0 : min(_3706, 1.0));
    float _3717 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
    float _2025 = isnan(1.0) ? _3717 : (isnan(_3717) ? 1.0 : min(_3717, 1.0));
    float _2026 = dot(vec3(_739, _740, _741), vec3(_2018, _2019, _2020));
    float _3728 = isnan(0.0) ? _2026 : (isnan(_2026) ? 0.0 : max(_2026, 0.0));
    float _2029 = isnan(1.0) ? _3728 : (isnan(_3728) ? 1.0 : min(_3728, 1.0));
    float _2030 = dot(vec3(cbLight._m0[_1877].xyz), vec3(_2018, _2019, _2020));
    float _3739 = isnan(0.0) ? _2030 : (isnan(_2030) ? 0.0 : max(_2030, 0.0));
    float _2034 = _2010 * _2010;
    float _2038 = ((_2029 * _2029) * (_2034 + (-1.0))) + 1.0;
    float _2049 = (exp2(log2(1.0 - (isnan(1.0) ? _3739 : (isnan(_3739) ? 1.0 : min(_3739, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2050 = 1.0 - _2010;
    float _2061 = (0.5 / (((_2025 * ((_2024 * _2050) + _2010)) + 9.9999999392252902907785028219223e-09) + (((_2025 * _2050) + _2010) * _2024))) * _2024;
    float _3750 = isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : max(_2061, 0.0));
    float _2063 = (isnan(1.0) ? _3750 : (isnan(_3750) ? 1.0 : min(_3750, 1.0))) * (_2034 / ((_2038 * _2038) * 3.141590118408203125));
    uint _2079 = _1877 + 9u;
    float _2093 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1913].w)) * _743) * 0.949999988079071044921875);
    float _2094 = _2093 * _2093;
    float _2095 = cbLight._m0[_1913].x + _530;
    float _2096 = cbLight._m0[_1913].y + _531;
    float _2097 = cbLight._m0[_1913].z + _532;
    float _2101 = inversesqrt(dot(vec3(_2095, _2096, _2097), vec3(_2095, _2096, _2097)));
    float _2102 = _2101 * _2095;
    float _2103 = _2101 * _2096;
    float _2104 = _2101 * _2097;
    float _2105 = dot(vec3(_739, _740, _741), vec3(cbLight._m0[_1913].xyz));
    float _3761 = isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0));
    float _2108 = isnan(1.0) ? _3761 : (isnan(_3761) ? 1.0 : min(_3761, 1.0));
    float _2109 = dot(vec3(_739, _740, _741), vec3(_2102, _2103, _2104));
    float _3772 = isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0));
    float _2112 = isnan(1.0) ? _3772 : (isnan(_3772) ? 1.0 : min(_3772, 1.0));
    float _2113 = dot(vec3(cbLight._m0[_1913].xyz), vec3(_2102, _2103, _2104));
    float _3783 = isnan(0.0) ? _2113 : (isnan(_2113) ? 0.0 : max(_2113, 0.0));
    float _2117 = _2094 * _2094;
    float _2121 = ((_2112 * _2112) * (_2117 + (-1.0))) + 1.0;
    float _2130 = (exp2(log2(1.0 - (isnan(1.0) ? _3783 : (isnan(_3783) ? 1.0 : min(_3783, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2131 = 1.0 - _2094;
    float _2141 = (0.5 / (((_2025 * ((_2108 * _2131) + _2094)) + 9.9999999392252902907785028219223e-09) + (((_2025 * _2131) + _2094) * _2108))) * _2108;
    float _3794 = isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0));
    float _2143 = (isnan(1.0) ? _3794 : (isnan(_3794) ? 1.0 : min(_3794, 1.0))) * (_2117 / ((_2121 * _2121) * 3.141590118408203125));
    float _2153 = (((_2130 * cbLight._m0[_2079].x) * _2143) * _1922) + ((((cbLight._m0[_1993].x * _1869) * _2049) * _2063) * _1903);
    float _2154 = (((_2130 * cbLight._m0[_2079].y) * _2143) * _1922) + ((((cbLight._m0[_1993].y * _1870) * _2049) * _2063) * _1903);
    float _2155 = (((_2130 * cbLight._m0[_2079].z) * _2143) * _1922) + ((((cbLight._m0[_1993].z * _1871) * _2049) * _2063) * _1903);
    float _2291;
    float _2293;
    float _2295;
    float _2297;
    float _2299;
    float _2301;
    if (_1875.y == 0u)
    {
        float _2232 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2233 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2232;
        float _2234 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2232;
        float _2235 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2232;
        uvec4 _2247 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2248 = _2247.x;
        uint _2259 = uint((float(_2247.y) * floor(float(uint(cbSceneParam._m0[85u].y * _655) / _2248))) + floor(float(uint(cbSceneParam._m0[85u].x * _654) / _2248)));
        float _2269 = (log2(_2235 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2270 = isnan(0.0) ? _2269 : (isnan(_2269) ? 0.0 : max(_2269, 0.0));
        uint _2273 = uint(isnan(14.0) ? _2270 : (isnan(_2270) ? 14.0 : min(_2270, 14.0)));
        uint _2280 = _2247.z;
        float _2329;
        float _2331;
        float _2333;
        float _2335;
        float _2337;
        float _2339;
        if (((((1u << ((_2280 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2273 << 2u) + (_2259 << 6u)) >> 2u)).x) == 0u) || ((_2280 & 240u) == 0u))
        {
            _2329 = 0.0;
            _2331 = 0.0;
            _2333 = 0.0;
            _2335 = 0.0;
            _2337 = 0.0;
            _2339 = 0.0;
        }
        else
        {
            float _2330;
            float _2332;
            float _2334;
            float _2336;
            float _2338;
            float _2340;
            float _2521 = 0.0;
            float _2522 = 0.0;
            float _2523 = 0.0;
            float _2524 = 0.0;
            float _2525 = 0.0;
            float _2526 = 0.0;
            uint _2527 = 0u;
            uint _2536;
            bool _2537;
            for (;;)
            {
                _2536 = texelFetch(g_lightClassification, int((((_2273 << 5u) + (_2259 << 9u)) + (_2527 << 2u)) >> 2u)).x;
                _2537 = _2536 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2537)
                {
                    frontier_phi_55_pred = _2526;
                    frontier_phi_55_pred_1 = _2525;
                    frontier_phi_55_pred_2 = _2524;
                    frontier_phi_55_pred_3 = _2522;
                    frontier_phi_55_pred_4 = _2521;
                    frontier_phi_55_pred_5 = _2523;
                }
                else
                {
                    float _2734;
                    float _2735;
                    float _2736;
                    float _2737;
                    float _2738;
                    float _2739;
                    uint _2740;
                    _2734 = _2521;
                    _2735 = _2522;
                    _2736 = _2523;
                    _2737 = _2524;
                    _2738 = _2525;
                    _2739 = _2526;
                    _2740 = _2536;
                    float _2682;
                    float _2683;
                    float _2684;
                    float _2685;
                    float _2686;
                    float _2687;
                    for (;;)
                    {
                        uint _2744 = uint(findLSB(_2740)) + (_2527 << 5u);
                        uint _2741 = (_2740 + 4294967295u) & _2740;
                        uint _2746 = _2744 * 48u;
                        vec4 _2760 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2746)).x, texelFetch(g_PointLightRenderingBuffer, int(_2746 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2746 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2746 + 3u)).x));
                        uint _2766 = (_2744 * 48u) + 4u;
                        vec4 _2779 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2766)).x, texelFetch(g_PointLightRenderingBuffer, int(_2766 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2766 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2766 + 3u)).x));
                        float _2780 = _2779.x;
                        float _2781 = _2779.y;
                        float _2782 = _2779.z;
                        uint _2785 = (_2744 * 48u) + 8u;
                        vec3 _2796 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2785)).x, texelFetch(g_PointLightRenderingBuffer, int(_2785 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2785 + 2u)).x));
                        uint _2801 = (_2744 * 48u) + 12u;
                        vec2 _2809 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2801)).x, texelFetch(g_PointLightRenderingBuffer, int(_2801 + 1u)).x));
                        float _2815 = inversesqrt(dot(vec3(_2233, _2234, _2235), vec3(_2233, _2234, _2235)));
                        float _2816 = _2815 * _2233;
                        float _2817 = _2815 * _2234;
                        float _2818 = _2815 * _2235;
                        float _2819 = _2760.x - _2233;
                        float _2820 = _2760.y - _2234;
                        float _2821 = _2760.z - _2235;
                        float _2822 = dot(vec3(_2819, _2820, _2821), vec3(_2819, _2820, _2821));
                        float _2825 = inversesqrt(_2822);
                        float _2826 = _2825 * _2819;
                        float _2827 = _2825 * _2820;
                        float _2828 = _2825 * _2821;
                        float _2829 = dot(vec3(_779, _782, _785), vec3(_2826, _2827, _2828));
                        float _2834 = 1.0 - (_2822 * _2760.w);
                        float _3815 = isnan(0.0) ? _2834 : (isnan(_2834) ? 0.0 : max(_2834, 0.0));
                        float _2835 = isnan(1.0) ? _3815 : (isnan(_3815) ? 1.0 : min(_3815, 1.0));
                        float _2836 = sqrt(_2822) * _2779.w;
                        float _2839 = 1.39999997615814208984375 / (_2836 + 1.39999997615814208984375);
                        float _2840 = _2839 * _2839;
                        float _2841 = 1.0 - _2840;
                        float _2843 = (_2841 * _2841) * _744;
                        float _2846 = ((_2841 * _2829) + _2840) + _2843;
                        float _2851 = _2836 * _2836;
                        float _2856 = ((isnan(0.0) ? _2846 : (isnan(_2846) ? 0.0 : max(_2846, 0.0))) * _2835) / (((_2843 * 2.0) + 1.0) * ((_2851 * 0.699999988079071044921875) + 1.0));
                        float _2860 = dot(vec3(_2826, _2827, _2828), vec3(_2816, _2817, _2818));
                        float _3831 = isnan(0.0) ? _2860 : (isnan(_2860) ? 0.0 : max(_2860, 0.0));
                        float _2867 = dot(vec3((-0.0) - _2816, (-0.0) - _2817, (-0.0) - _2818), vec3(_779, _782, _785)) + 1.0;
                        float _2869 = (isnan(0.0) ? _2867 : (isnan(_2867) ? 0.0 : max(_2867, 0.0))) * 0.5;
                        float _2876 = ((_2869 * _2869) * _2809.x) * exp2((_2809.y * 32.0) * log2(isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0))));
                        float _2878 = _744 / (_744 + 1.0);
                        float _2894 = (-0.0) - _2233;
                        float _2895 = (-0.0) - _2234;
                        float _2896 = (-0.0) - _2235;
                        float _2900 = inversesqrt(dot(vec3(_2894, _2895, _2896), vec3(_2894, _2895, _2896)));
                        float _2901 = _2900 * _2894;
                        float _2902 = _2900 * _2895;
                        float _2903 = _2900 * _2896;
                        float _2911 = exp2(log2(1.0 / ((_2851 * 3.5) + 5.0)) * 0.25);
                        float _2912 = 1.0 - _838;
                        float _2919 = sqrt(1.0 - ((1.0 - (_2912 * _2912)) * (1.0 - (_2911 * _2911))));
                        float _2920 = _2919 * _2919;
                        float _2921 = _2920 * _2920;
                        float _2922 = _2901 + _2826;
                        float _2923 = _2902 + _2827;
                        float _2924 = _2903 + _2828;
                        float _2928 = inversesqrt(dot(vec3(_2922, _2923, _2924), vec3(_2922, _2923, _2924)));
                        float _2932 = dot(vec3(_779, _782, _785), vec3(_2901, _2902, _2903));
                        float _3847 = isnan(0.0) ? _2932 : (isnan(_2932) ? 0.0 : max(_2932, 0.0));
                        float _2935 = isnan(1.0) ? _3847 : (isnan(_3847) ? 1.0 : min(_3847, 1.0));
                        float _2936 = dot(vec3(_779, _782, _785), vec3(_2928 * _2922, _2928 * _2923, _2928 * _2924));
                        float _3858 = isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : max(_2936, 0.0));
                        float _2939 = isnan(1.0) ? _3858 : (isnan(_3858) ? 1.0 : min(_3858, 1.0));
                        float _2943 = ((_2939 * _2939) * (_2921 + (-1.0))) + 1.0;
                        float _2944 = _2839 * _2920;
                        float _2945 = _2944 * _2944;
                        float _2948 = ((1.0 - _2945) * _2829) + _2945;
                        float _3869 = isnan(0.0) ? _2948 : (isnan(_2948) ? 0.0 : max(_2948, 0.0));
                        float _2949 = isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0));
                        float _2950 = 1.0 - _2920;
                        float _2960 = (0.5 / (((_2949 * ((_2935 * _2950) + _2920)) + 9.9999999392252902907785028219223e-09) + (((_2949 * _2950) + _2920) * _2935))) * _2949;
                        float _3880 = isnan(0.0) ? _2960 : (isnan(_2960) ? 0.0 : max(_2960, 0.0));
                        float _2971 = (((_2921 * 3.1415927410125732421875) * (isnan(1.0) ? _3880 : (isnan(_3880) ? 1.0 : min(_3880, 1.0)))) / ((_2943 * _2943) * ((_2851 * 2.1991131305694580078125) + 3.141590118408203125))) * _2835;
                        _2685 = (((((_2780 * 0.3183098733425140380859375) * _2878) * _2876) + _2780) * _2856) + _2737;
                        _2686 = (((((_2781 * 0.3183098733425140380859375) * _2878) * _2876) + _2781) * _2856) + _2738;
                        _2687 = (((((_2782 * 0.3183098733425140380859375) * _2878) * _2876) + _2782) * _2856) + _2739;
                        _2682 = (_2971 * _2796.x) + _2734;
                        _2683 = (_2971 * _2796.y) + _2735;
                        _2684 = (_2971 * _2796.z) + _2736;
                        if (_2741 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2734 = _2682;
                            _2735 = _2683;
                            _2736 = _2684;
                            _2737 = _2685;
                            _2738 = _2686;
                            _2739 = _2687;
                            _2740 = _2741;
                        }
                    }
                    frontier_phi_55_pred = _2687;
                    frontier_phi_55_pred_1 = _2686;
                    frontier_phi_55_pred_2 = _2685;
                    frontier_phi_55_pred_3 = _2683;
                    frontier_phi_55_pred_4 = _2682;
                    frontier_phi_55_pred_5 = _2684;
                }
                _2340 = frontier_phi_55_pred;
                _2338 = frontier_phi_55_pred_1;
                _2336 = frontier_phi_55_pred_2;
                _2332 = frontier_phi_55_pred_3;
                _2330 = frontier_phi_55_pred_4;
                _2334 = frontier_phi_55_pred_5;
                uint _2528 = _2527 + 1u;
                if (_2528 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2521 = _2330;
                    _2522 = _2332;
                    _2523 = _2334;
                    _2524 = _2336;
                    _2525 = _2338;
                    _2526 = _2340;
                    _2527 = _2528;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2329 = _2330;
            _2331 = _2332;
            _2333 = _2334;
            _2335 = _2336;
            _2337 = _2338;
            _2339 = _2340;
        }
        float _2344 = isnan(1.0) ? _817 : (isnan(_817) ? 1.0 : min(_817, 1.0));
        _2291 = (_2344 * _2335) + _1987;
        _2293 = (_2344 * _2337) + _1988;
        _2295 = (_2344 * _2339) + _1989;
        _2297 = ((_2329 * 0.039999999105930328369140625) * _2344) + _2153;
        _2299 = ((_2331 * 0.039999999105930328369140625) * _2344) + _2154;
        _2301 = ((_2333 * 0.039999999105930328369140625) * _2344) + _2155;
    }
    else
    {
        _2291 = _1987;
        _2293 = _1988;
        _2295 = _1989;
        _2297 = _2153;
        _2299 = _2154;
        _2301 = _2155;
    }
    float _2418;
    float _2419;
    float _2420;
    if (_744 > 0.0)
    {
        uint _2351 = _1877 + 4u;
        float _2357 = (-0.0) - _530;
        float _2358 = (-0.0) - _531;
        float _2359 = (-0.0) - _532;
        float _2360 = dot(vec3(cbLight._m0[_1877].xyz), vec3(_2357, _2358, _2359));
        float _3896 = isnan(0.0) ? _2360 : (isnan(_2360) ? 0.0 : max(_2360, 0.0));
        float _2364 = _828 + 1.0;
        float _2366 = (isnan(0.0) ? _2364 : (isnan(_2364) ? 0.0 : max(_2364, 0.0))) * 0.5;
        float _2371 = _2366 * _2366;
        float _2372 = _2371 * exp2(log2(isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0))) * 32.0);
        float _2374 = _744 / (_744 + 1.0);
        float _2375 = isnan(_1886) ? 1.0 : (isnan(1.0) ? _1886 : min(1.0, _1886));
        uint _2388 = _1877 + 5u;
        float _2394 = dot(vec3(cbLight._m0[_1913].xyz), vec3(_2357, _2358, _2359));
        float _3917 = isnan(0.0) ? _2394 : (isnan(_2394) ? 0.0 : max(_2394, 0.0));
        float _2401 = _2371 * exp2(log2(isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0))) * 32.0);
        float _2402 = isnan(_1887) ? 1.0 : (isnan(1.0) ? _1887 : min(1.0, _1887));
        _2418 = ((((_2401 * cbLight._m0[_2388].x) * _2374) * _2402) + ((((cbLight._m0[_2351].x * _1869) * _2372) * _2374) * _2375)) * 0.3183098733425140380859375;
        _2419 = ((((_2401 * cbLight._m0[_2388].y) * _2374) * _2402) + ((((cbLight._m0[_2351].y * _1870) * _2372) * _2374) * _2375)) * 0.3183098733425140380859375;
        _2420 = ((((_2401 * cbLight._m0[_2388].z) * _2374) * _2402) + ((((cbLight._m0[_2351].z * _1871) * _2372) * _2374) * _2375)) * 0.3183098733425140380859375;
    }
    else
    {
        _2418 = 0.0;
        _2419 = 0.0;
        _2420 = 0.0;
    }
    float _3933 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _3944 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
    float _3955 = isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0));
    float _3966 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _2435 = (isnan(1.0) ? _3933 : (isnan(_3933) ? 1.0 : min(_3933, 1.0))) * ((_2291 + ((isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0))) * _817)) + _2418);
    float _2436 = (isnan(1.0) ? _3944 : (isnan(_3944) ? 1.0 : min(_3944, 1.0))) * ((_2293 + ((isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0))) * _817)) + _2419);
    float _2437 = (isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0))) * ((_2295 + ((isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0))) * _817)) + _2420);
    float _2441 = 0.959999978542327880859375 - (exp2(log2(1.0 - _832) * 5.0) * 0.959999978542327880859375);
    float _2466 = _654 / cbSceneParam._m0[86u].x;
    float _2467 = _655 / cbSceneParam._m0[86u].y;
    vec4 _2481 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2466, _2467, (log2((isnan(cbSceneParam._m0[77u].w) ? _761 : (isnan(_761) ? cbSceneParam._m0[77u].w : min(_761, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2483 = _2481.x;
    float _2484 = _2481.y;
    float _2485 = _2481.z;
    float _2486 = _2481.w;
    float _2579;
    float _2581;
    float _2583;
    float _2585;
    if (_761 > cbSceneParam._m0[78u].w)
    {
        float _2542 = isnan(_761) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _761 : min(cbSceneParam._m0[80u].w, _761));
        float _2543 = _2542 / _761;
        float _2554 = _2543 * _293;
        float _2555 = _294 * _2543;
        float _2556 = (-0.0) - _2555;
        float _2557 = _2543 * _295;
        float _2559 = (cbSceneParam._m0[77u].w * _2556) / _2542;
        float _2560 = _2559 + cbSceneParam._m0[79u].w;
        float _2561 = cbSceneParam._m0[79u].w - _2555;
        float _2567 = sqrt(((_2554 * _2554) + (_2555 * _2555)) + (_2557 * _2557));
        float _2570 = (1.0 - (cbSceneParam._m0[77u].w / _2542)) * _2567;
        float _2575 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2577 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2976;
        if (abs((_2556 - _2559) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2976 = ((((_2560 > 0.0) ? exp2(_2575 * _2560) : (2.0 - exp2(_2577 * _2560))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2570;
        }
        else
        {
            float _2707 = 1.0 / cbSceneParam._m0[80u].x;
            float _2708 = isnan(_2561) ? _2560 : (isnan(_2560) ? _2561 : max(_2560, _2561));
            float _2709 = isnan(_2561) ? _2560 : (isnan(_2560) ? _2561 : min(_2560, _2561));
            float _2718 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : min(_2708, 0.0));
            float _2719 = isnan(0.0) ? _2709 : (isnan(_2709) ? 0.0 : min(_2709, 0.0));
            _2976 = ((abs(_2567 / _2556) * cbSceneParam._m0[80u].y) * ((((_2718 - _2719) * 2.0) - ((exp2(_2575 * (isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0)))) - exp2(_2575 * (isnan(0.0) ? _2709 : (isnan(_2709) ? 0.0 : max(_2709, 0.0))))) * _2707)) - ((exp2(_2577 * _2718) - exp2(_2577 * _2719)) * _2707))) + (_2570 * cbSceneParam._m0[80u].z);
        }
        vec4 _2978 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2466, _2467, 1.0), 0.0);
        float _2987 = exp2((_2976 * (-1.44269502162933349609375)) * (1.0 - _2978.w));
        float _2988 = log2(_2987);
        float _3004 = log2(_2486);
        _2579 = (exp2(_3004 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2988 * cbSceneParam._m0[78u].x)) * _2978.x) / cbSceneParam._m0[78u].x)) + _2483;
        _2581 = (exp2(_3004 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2988 * cbSceneParam._m0[78u].y)) * _2978.y) / cbSceneParam._m0[78u].y)) + _2484;
        _2583 = (exp2(_3004 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2988 * cbSceneParam._m0[78u].z)) * _2978.z) / cbSceneParam._m0[78u].z)) + _2485;
        _2585 = _2987 * _2486;
    }
    else
    {
        _2579 = _2483;
        _2581 = _2484;
        _2583 = _2485;
        _2585 = _2486;
    }
    bool _2597 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2598 = log2(_2585);
    float _2605 = exp2(_2598 * cbSceneParam._m0[78u].x) * ((_2435 + ((_2297 + ((isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0))) * _1628)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _678.x) * _2441) - _2435) * _724));
    float _2606 = exp2(_2598 * cbSceneParam._m0[78u].y) * ((_2436 + ((_2299 + ((isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0))) * _1628)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _678.y) * _2441) - _2436) * _724));
    float _2607 = exp2(_2598 * cbSceneParam._m0[78u].z) * ((_2437 + ((_2301 + ((isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0))) * _1628)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _678.z) * _2441) - _2437) * _724));
    vec4 _2615 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_654, _655));
    float _2617 = _2615.x;
    float _2638 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2617)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2617))) - _761) * cbMtdParam._m0[17u].y;
    float _4017 = isnan(0.0) ? _2638 : (isnan(_2638) ? 0.0 : max(_2638, 0.0));
    float _2640 = (cbInstanceData._m0[_301 + 6u].w * (isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0)))) * (isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0)));
    float _2649 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2649 * (_2597 ? _2605 : (_2605 + (cbSceneParam._m0[72u].w * _2579)));
    SV_Target.y = _2649 * (_2597 ? _2606 : (_2606 + (cbSceneParam._m0[72u].w * _2581)));
    SV_Target.z = _2649 * (_2597 ? _2607 : (_2607 + (cbSceneParam._m0[72u].w * _2583)));
    SV_Target.w = _2640;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2640;
}


