#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1168;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _203 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _204 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _205 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _211 = inversesqrt(dot(vec3(_203, _204, _205), vec3(_203, _204, _205)));
    float _212 = _211 * _203;
    float _213 = _211 * _204;
    float _214 = _211 * _205;
    float _218 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _219 = _218 * NORMAL.x;
    float _220 = _218 * NORMAL.y;
    float _221 = _218 * NORMAL.z;
    float _225 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _226 = _225 * TANGENT.x;
    float _227 = _225 * TANGENT.y;
    float _228 = _225 * TANGENT.z;
    float _233;
    float _234;
    float _235;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _233 = (-0.0) - _219;
        _234 = (-0.0) - _220;
        _235 = (-0.0) - _221;
    }
    else
    {
        _233 = _219;
        _234 = _220;
        _235 = _221;
    }
    float _282 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _292 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _282);
    float _293 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _282);
    float _294 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _282);
    uint _300 = uint(roundEven(NORMAL.w)) * 13u;
    uint _305 = _300 + 1u;
    uint _309 = _300 + 2u;
    float _318 = sqrt(((cbInstanceData._m0[_305].x * cbInstanceData._m0[_305].x) + (cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x)) + (cbInstanceData._m0[_309].x * cbInstanceData._m0[_309].x));
    float _319 = _318 * TEXCOORD.z;
    float _320 = _318 * TEXCOORD.w;
    vec4 _334 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _343 = (_334.x * 2.0) + (-1.0);
    float _345 = (_334.y * 2.0) + (-1.0);
    float _346 = dot(vec2(_343, _345), vec2(_343, _345));
    float _3082 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
    float _352 = sqrt(1.0 - (isnan(1.0) ? _3082 : (isnan(_3082) ? 1.0 : min(_3082, 1.0))));
    float _355 = fma(_352, _233, fma(_345, _226, _343 * _212));
    float _358 = fma(_352, _234, fma(_345, _227, _343 * _213));
    float _361 = fma(_352, _235, fma(_345, _228, _343 * _214));
    float _365 = inversesqrt(dot(vec3(_355, _358, _361), vec3(_355, _358, _361)));
    vec4 _398 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _403 = _398.w;
    float _415 = dot(vec3(_292, _293, _294), vec3(_212, _213, _214));
    float _418 = dot(vec3(_292, _293, _294), vec3(_226, _227, _228));
    float _421 = dot(vec3(_292, _293, _294), vec3(_233, _234, _235));
    float _427 = inversesqrt(dot(vec3(_415, _418, _421), vec3(_415, _418, _421)));
    float _449 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _469 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_415 * cbMtdParam._m0[14u].x) * _427) * _449) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_418 * cbMtdParam._m0[14u].x) * _427) * _449) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _492 = inversesqrt(dot(vec3(_292, _293, _294), vec3(_292, _293, _294)));
    float _493 = _492 * _292;
    float _494 = _492 * _293;
    float _495 = _492 * _294;
    float _496 = dot(vec4(_493, _494, _495, 0.0), vec4(_233, _234, _235, 0.0));
    float _499 = _496 - cbMtdParam._m0[15u].z;
    float _3093 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0));
    float _506 = exp2(log2(1.0 - (isnan(1.0) ? _3093 : (isnan(_3093) ? 1.0 : min(_3093, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _521 = ((((_398.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _469.x) * cbMtdParam._m0[9u].x) * ((_506 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _526 = ((((_398.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _469.y) * cbMtdParam._m0[9u].y) * ((_506 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _531 = ((((_398.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _469.z) * cbMtdParam._m0[9u].z) * ((_506 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _540 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _319) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _320) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3109 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _541 = isnan(1.0) ? _3109 : (isnan(_3109) ? 1.0 : min(_3109, 1.0));
    float _548 = (_541 * (cbMtdParam._m0[11u].x - _521)) + _521;
    float _549 = ((cbMtdParam._m0[11u].y - _526) * _541) + _526;
    float _550 = ((cbMtdParam._m0[11u].z - _531) * _541) + _531;
    vec4 _562 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _319) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _320) + cbTextureTilingScale._m0[9u].w));
    float _569 = (_562.x * 2.0) + (-1.0);
    float _570 = (_562.y * 2.0) + (-1.0);
    float _571 = dot(vec2(_569, _570), vec2(_569, _570));
    float _3120 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
    float _585 = (cbMtdParam._m0[16u].y + _334.z) + cbMtdParam._m0[17u].z;
    float _588 = ((_562.z - _585) * _541) + _585;
    float _600 = (((_569 - _343) + (cbMtdParam._m0[14u].z * _343)) * _541) + _343;
    float _601 = (((_570 - _345) + (cbMtdParam._m0[14u].z * _345)) * _541) + _345;
    float _602 = (_541 * (sqrt(1.0 - (isnan(1.0) ? _3120 : (isnan(_3120) ? 1.0 : min(_3120, 1.0)))) - _352)) + _352;
    float _618 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _620 = _618 - (_618 * _541);
    float _629 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _630 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _640 = cbSceneParam._m0[86u].x * ((_629 / cbSceneParam._m0[86u].x) + ((_365 * _355) * cbMtdParam._m0[18u].y));
    float _641 = cbSceneParam._m0[86u].y * ((_630 / cbSceneParam._m0[86u].y) + ((_365 * _358) * cbMtdParam._m0[18u].y));
    float _648 = isnan(cbInstanceData._m0[8u].x) ? _640 : (isnan(_640) ? cbInstanceData._m0[8u].x : max(_640, cbInstanceData._m0[8u].x));
    float _649 = isnan(cbInstanceData._m0[8u].y) ? _641 : (isnan(_641) ? cbInstanceData._m0[8u].y : max(_641, cbInstanceData._m0[8u].y));
    vec4 _653 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _648 : (isnan(_648) ? cbInstanceData._m0[8u].z : min(_648, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _649 : (isnan(_649) ? cbInstanceData._m0[8u].w : min(_649, cbInstanceData._m0[8u].w))));
    float _686 = _496 - cbMtdParam._m0[15u].x;
    float _3151 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    float _696 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3151 : (isnan(_3151) ? 1.0 : min(_3151, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3167 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
    float _697 = isnan(1.0) ? _3167 : (isnan(_3167) ? 1.0 : min(_3167, 1.0));
    float _699 = _697 - (_541 * _697);
    float _703 = fma(_602, _233, fma(_601, _226, _600 * _212));
    float _706 = fma(_602, _234, fma(_601, _227, _600 * _213));
    float _709 = fma(_602, _235, fma(_601, _228, _600 * _214));
    float _713 = inversesqrt(dot(vec3(_703, _706, _709), vec3(_703, _706, _709)));
    float _714 = _713 * _703;
    float _715 = _713 * _706;
    float _716 = _713 * _709;
    float _3178 = isnan(0.0) ? _403 : (isnan(_403) ? 0.0 : max(_403, 0.0));
    float _717 = isnan(1.0) ? _3178 : (isnan(_3178) ? 1.0 : min(_3178, 1.0));
    float _3189 = isnan(0.0) ? _588 : (isnan(_588) ? 0.0 : max(_588, 0.0));
    float _718 = isnan(1.0) ? _3189 : (isnan(_3189) ? 1.0 : min(_3189, 1.0));
    float _719 = isnan(0.0) ? _620 : (isnan(_620) ? 0.0 : max(_620, 0.0));
    float _3205 = isnan(0.0) ? _548 : (isnan(_548) ? 0.0 : max(_548, 0.0));
    float _3216 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    float _3227 = isnan(0.0) ? _550 : (isnan(_550) ? 0.0 : max(_550, 0.0));
    float _736 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _754 = fma(_716, cbSceneParam._m0[5u].z, fma(_715, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _714));
    float _757 = fma(_716, cbSceneParam._m0[6u].z, fma(_715, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _714));
    float _760 = fma(_716, cbSceneParam._m0[7u].z, fma(_715, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _714));
    uint _774 = (_300 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _780 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3205 : (isnan(_3205) ? 1.0 : min(_3205, 1.0)))) * cbInstanceData._m0[_774].x;
    float _781 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3216 : (isnan(_3216) ? 1.0 : min(_3216, 1.0)))) * cbInstanceData._m0[_774].y;
    float _782 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3227 : (isnan(_3227) ? 1.0 : min(_3227, 1.0)))) * cbInstanceData._m0[_774].z;
    float _3238 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _783 = isnan(1.0) ? _3238 : (isnan(_3238) ? 1.0 : min(_3238, 1.0));
    float _3249 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
    float _784 = isnan(1.0) ? _3249 : (isnan(_3249) ? 1.0 : min(_3249, 1.0));
    float _3260 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
    float _785 = isnan(1.0) ? _3260 : (isnan(_3260) ? 1.0 : min(_3260, 1.0));
    vec4 _789 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _629, cbSceneParam._m0[86u].y * _630));
    float _792 = _789.x * TEXCOORD_5.w;
    float _793 = dot(vec3(_714, _715, _716), vec3(_493, _494, _495));
    float _796 = _793 * 2.0;
    float _800 = (_796 * _714) - _493;
    float _801 = (_796 * _715) - _494;
    float _802 = (_796 * _716) - _495;
    float _803 = dot(vec3(_493, _494, _495), vec3(_714, _715, _716));
    float _806 = abs(_803);
    float _3271 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _807 = isnan(1.0) ? _3271 : (isnan(_3271) ? 1.0 : min(_3271, 1.0));
    float _813 = sqrt(_718);
    float _825 = exp2((_813 * 5.0) * log2(1.0 - (_807 * 0.999000012874603271484375))) / (4.0 - (_813 * 3.0));
    float _857 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _861 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _865 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1167;
    float _1169;
    float _1170;
    float _1171;
    float _1172;
    float _1173;
    float _1174;
    float _1175;
    float _1176;
    float _1177;
    float _1178;
    float _1179;
    float _1180;
    float _1181;
    float _1182;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _892 = fma(_865, cbModelParam._m0[26u].z, fma(_861, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _857));
        float _896 = fma(_865, cbModelParam._m0[27u].z, fma(_861, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _857));
        float _900 = fma(_865, cbModelParam._m0[28u].z, fma(_861, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _857));
        float _925 = _857 + _714;
        float _926 = _861 + _715;
        float _927 = _865 + _716;
        float _937 = fma(_927, cbModelParam._m0[26u].z, fma(_926, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _925)) - _892;
        float _938 = fma(_927, cbModelParam._m0[27u].z, fma(_926, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _925)) - _896;
        float _939 = fma(_927, cbModelParam._m0[28u].z, fma(_926, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _925)) - _900;
        float _943 = inversesqrt(dot(vec3(_937, _938, _939), vec3(_937, _938, _939)));
        float _956 = ((_943 * _937) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_892 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _957 = ((_943 * _938) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_896 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _958 = ((_943 * _939) / cbModelParam._m0[34u].z) + ((((((_900 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _961 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_956, _957, _958), 0.0);
        vec4 _968 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_956, _957, _958), 0.0);
        vec4 _975 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_956, _957, _958), 0.0);
        vec4 _982 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_956, _957, _958), 0.0);
        float _995 = exp2((_961.w + (-0.5)) * 20.0) * 2.0;
        float _996 = _995 * (_961.x + (-0.5));
        float _997 = _995 * (_961.y + (-0.5));
        float _998 = _995 * (_961.z + (-0.5));
        float _1005 = exp2((_968.w + (-0.5)) * 20.0) * 2.0;
        float _1006 = _1005 * (_968.x + (-0.5));
        float _1007 = _1005 * (_968.y + (-0.5));
        float _1008 = _1005 * (_968.z + (-0.5));
        float _1015 = exp2((_975.w + (-0.5)) * 20.0) * 2.0;
        float _1016 = _1015 * (_975.x + (-0.5));
        float _1017 = _1015 * (_975.y + (-0.5));
        float _1018 = _1015 * (_975.z + (-0.5));
        float _1025 = exp2((_982.w + (-0.5)) * 20.0) * 2.0;
        float _1026 = _1025 * (_982.x + (-0.5));
        float _1027 = _1025 * (_982.y + (-0.5));
        float _1028 = _1025 * (_982.z + (-0.5));
        float _1029 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
        float _1030 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
        float _1031 = isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0));
        float _1032 = _996 * 0.5;
        float _1033 = _1006 * 0.5;
        float _1034 = _1016 * 0.5;
        float _1035 = dot(vec3(_1032, _1033, _1034), vec3(_1032, _1033, _1034));
        float _1040 = (_1035 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1035);
        float _1049 = (dot(vec3(_714, _715, _716), vec3(_1040 * _1032, _1040 * _1033, _1040 * _1034)) + 1.0) * 0.5;
        float _3297 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
        float _1059 = sqrt(((_1033 * _1033) + (_1032 * _1032)) + (_1034 * _1034)) / (_1029 + 9.9999997473787516355514526367188e-06);
        float _3308 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
        float _1060 = isnan(1.0) ? _3308 : (isnan(_3308) ? 1.0 : min(_3308, 1.0));
        float _1061 = _1060 * 2.0;
        float _1065 = (1.0 - _1060) / (_1060 + 1.0);
        float _3319 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
        float _1066 = isnan(1.0) ? _3319 : (isnan(_3319) ? 1.0 : min(_3319, 1.0));
        float _1075 = ((((1.0 - _1066) * (_1061 + 2.0)) * exp2(log2(isnan(1.0) ? _3297 : (isnan(_3297) ? 1.0 : min(_3297, 1.0))) * (_1061 + 1.0))) + _1066) * _1029;
        float _1076 = _997 * 0.5;
        float _1077 = _1007 * 0.5;
        float _1078 = _1017 * 0.5;
        float _1079 = dot(vec3(_1076, _1077, _1078), vec3(_1076, _1077, _1078));
        float _1084 = (_1079 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1079);
        float _1092 = (dot(vec3(_714, _715, _716), vec3(_1084 * _1076, _1084 * _1077, _1084 * _1078)) + 1.0) * 0.5;
        float _3330 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
        float _1101 = sqrt(((_1077 * _1077) + (_1076 * _1076)) + (_1078 * _1078)) / (_1030 + 9.9999997473787516355514526367188e-06);
        float _3341 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1102 = isnan(1.0) ? _3341 : (isnan(_3341) ? 1.0 : min(_3341, 1.0));
        float _1103 = _1102 * 2.0;
        float _1107 = (1.0 - _1102) / (_1102 + 1.0);
        float _3352 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
        float _1108 = isnan(1.0) ? _3352 : (isnan(_3352) ? 1.0 : min(_3352, 1.0));
        float _1117 = ((((1.0 - _1108) * (_1103 + 2.0)) * exp2(log2(isnan(1.0) ? _3330 : (isnan(_3330) ? 1.0 : min(_3330, 1.0))) * (_1103 + 1.0))) + _1108) * _1030;
        float _1118 = _998 * 0.5;
        float _1119 = _1008 * 0.5;
        float _1120 = _1018 * 0.5;
        float _1121 = dot(vec3(_1118, _1119, _1120), vec3(_1118, _1119, _1120));
        float _1126 = (_1121 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1121);
        float _1134 = (dot(vec3(_714, _715, _716), vec3(_1126 * _1118, _1126 * _1119, _1126 * _1120)) + 1.0) * 0.5;
        float _3363 = isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0));
        float _1143 = sqrt(((_1119 * _1119) + (_1118 * _1118)) + (_1120 * _1120)) / (_1031 + 9.9999997473787516355514526367188e-06);
        float _3374 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1144 = isnan(1.0) ? _3374 : (isnan(_3374) ? 1.0 : min(_3374, 1.0));
        float _1145 = _1144 * 2.0;
        float _1149 = (1.0 - _1144) / (_1144 + 1.0);
        float _3385 = isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0));
        float _1150 = isnan(1.0) ? _3385 : (isnan(_3385) ? 1.0 : min(_3385, 1.0));
        float _1159 = ((((1.0 - _1150) * (_1145 + 2.0)) * exp2(log2(isnan(1.0) ? _3363 : (isnan(_3363) ? 1.0 : min(_3363, 1.0))) * (_1145 + 1.0))) + _1150) * _1031;
        _1167 = _998;
        _1169 = _997;
        _1170 = _996;
        _1171 = _1008;
        _1172 = _1007;
        _1173 = _1006;
        _1174 = _1018;
        _1175 = _1017;
        _1176 = _1016;
        _1177 = _1031;
        _1178 = _1030;
        _1179 = _1029;
        _1180 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0)));
        _1181 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0)));
        _1182 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0)));
    }
    else
    {
        _1167 = _1168;
        _1169 = _1168;
        _1170 = _1168;
        _1171 = _1168;
        _1172 = _1168;
        _1173 = _1168;
        _1174 = _1168;
        _1175 = _1168;
        _1176 = _1168;
        _1177 = _1168;
        _1178 = _1168;
        _1179 = _1168;
        _1180 = 0.0;
        _1181 = 0.0;
        _1182 = 0.0;
    }
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    float _1483;
    float _1484;
    float _1485;
    float _1486;
    float _1487;
    float _1488;
    float _1489;
    float _1490;
    float _1491;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1208 = fma(_865, cbModelParam._m0[30u].z, fma(_861, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _857));
        float _1212 = fma(_865, cbModelParam._m0[31u].z, fma(_861, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _857));
        float _1216 = fma(_865, cbModelParam._m0[32u].z, fma(_861, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _857));
        float _1239 = _857 + _714;
        float _1240 = _861 + _715;
        float _1241 = _865 + _716;
        float _1251 = fma(_1241, cbModelParam._m0[30u].z, fma(_1240, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1239)) - _1208;
        float _1252 = fma(_1241, cbModelParam._m0[31u].z, fma(_1240, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1239)) - _1212;
        float _1253 = fma(_1241, cbModelParam._m0[32u].z, fma(_1240, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1239)) - _1216;
        float _1257 = inversesqrt(dot(vec3(_1251, _1252, _1253), vec3(_1251, _1252, _1253)));
        float _1270 = ((_1257 * _1251) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1208 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1271 = ((_1257 * _1252) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1212 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1272 = ((_1257 * _1253) / cbModelParam._m0[35u].z) + ((((((_1216 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1274 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1270, _1271, _1272), 0.0);
        vec4 _1281 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1270, _1271, _1272), 0.0);
        vec4 _1288 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1270, _1271, _1272), 0.0);
        vec4 _1295 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1270, _1271, _1272), 0.0);
        float _1307 = exp2((_1274.w + (-0.5)) * 20.0) * 2.0;
        float _1308 = _1307 * (_1274.x + (-0.5));
        float _1309 = _1307 * (_1274.y + (-0.5));
        float _1310 = _1307 * (_1274.z + (-0.5));
        float _1317 = exp2((_1281.w + (-0.5)) * 20.0) * 2.0;
        float _1318 = _1317 * (_1281.x + (-0.5));
        float _1319 = _1317 * (_1281.y + (-0.5));
        float _1320 = _1317 * (_1281.z + (-0.5));
        float _1327 = exp2((_1288.w + (-0.5)) * 20.0) * 2.0;
        float _1328 = _1327 * (_1288.x + (-0.5));
        float _1329 = _1327 * (_1288.y + (-0.5));
        float _1330 = _1327 * (_1288.z + (-0.5));
        float _1337 = exp2((_1295.w + (-0.5)) * 20.0) * 2.0;
        float _1338 = _1337 * (_1295.x + (-0.5));
        float _1339 = _1337 * (_1295.y + (-0.5));
        float _1340 = _1337 * (_1295.z + (-0.5));
        float _1341 = isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0));
        float _1342 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
        float _1343 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
        float _1344 = _1308 * 0.5;
        float _1345 = _1318 * 0.5;
        float _1346 = _1328 * 0.5;
        float _1347 = dot(vec3(_1344, _1345, _1346), vec3(_1344, _1345, _1346));
        float _1352 = (_1347 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1347);
        float _1360 = (dot(vec3(_714, _715, _716), vec3(_1352 * _1344, _1352 * _1345, _1352 * _1346)) + 1.0) * 0.5;
        float _3426 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1369 = sqrt(((_1345 * _1345) + (_1344 * _1344)) + (_1346 * _1346)) / (_1341 + 9.9999997473787516355514526367188e-06);
        float _3437 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
        float _1370 = isnan(1.0) ? _3437 : (isnan(_3437) ? 1.0 : min(_3437, 1.0));
        float _1371 = _1370 * 2.0;
        float _1375 = (1.0 - _1370) / (_1370 + 1.0);
        float _3448 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
        float _1376 = isnan(1.0) ? _3448 : (isnan(_3448) ? 1.0 : min(_3448, 1.0));
        float _1385 = ((((1.0 - _1376) * (_1371 + 2.0)) * exp2(log2(isnan(1.0) ? _3426 : (isnan(_3426) ? 1.0 : min(_3426, 1.0))) * (_1371 + 1.0))) + _1376) * _1341;
        float _1386 = _1309 * 0.5;
        float _1387 = _1319 * 0.5;
        float _1388 = _1329 * 0.5;
        float _1389 = dot(vec3(_1386, _1387, _1388), vec3(_1386, _1387, _1388));
        float _1394 = (_1389 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1389);
        float _1402 = (dot(vec3(_714, _715, _716), vec3(_1394 * _1386, _1394 * _1387, _1394 * _1388)) + 1.0) * 0.5;
        float _3459 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1411 = sqrt(((_1387 * _1387) + (_1386 * _1386)) + (_1388 * _1388)) / (_1342 + 9.9999997473787516355514526367188e-06);
        float _3470 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
        float _1412 = isnan(1.0) ? _3470 : (isnan(_3470) ? 1.0 : min(_3470, 1.0));
        float _1413 = _1412 * 2.0;
        float _1417 = (1.0 - _1412) / (_1412 + 1.0);
        float _3481 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
        float _1418 = isnan(1.0) ? _3481 : (isnan(_3481) ? 1.0 : min(_3481, 1.0));
        float _1427 = ((((1.0 - _1418) * (_1413 + 2.0)) * exp2(log2(isnan(1.0) ? _3459 : (isnan(_3459) ? 1.0 : min(_3459, 1.0))) * (_1413 + 1.0))) + _1418) * _1342;
        float _1428 = _1310 * 0.5;
        float _1429 = _1320 * 0.5;
        float _1430 = _1330 * 0.5;
        float _1431 = dot(vec3(_1428, _1429, _1430), vec3(_1428, _1429, _1430));
        float _1436 = (_1431 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1431);
        float _1444 = (dot(vec3(_714, _715, _716), vec3(_1436 * _1428, _1436 * _1429, _1436 * _1430)) + 1.0) * 0.5;
        float _3492 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1453 = sqrt(((_1429 * _1429) + (_1428 * _1428)) + (_1430 * _1430)) / (_1343 + 9.9999997473787516355514526367188e-06);
        float _3503 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1454 = isnan(1.0) ? _3503 : (isnan(_3503) ? 1.0 : min(_3503, 1.0));
        float _1455 = _1454 * 2.0;
        float _1459 = (1.0 - _1454) / (_1454 + 1.0);
        float _3514 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1460 = isnan(1.0) ? _3514 : (isnan(_3514) ? 1.0 : min(_3514, 1.0));
        float _1469 = ((((1.0 - _1460) * (_1455 + 2.0)) * exp2(log2(isnan(1.0) ? _3492 : (isnan(_3492) ? 1.0 : min(_3492, 1.0))) * (_1455 + 1.0))) + _1460) * _1343;
        _1477 = _1310;
        _1478 = _1309;
        _1479 = _1308;
        _1480 = _1320;
        _1481 = _1319;
        _1482 = _1318;
        _1483 = _1330;
        _1484 = _1329;
        _1485 = _1328;
        _1486 = _1343;
        _1487 = _1342;
        _1488 = _1341;
        _1489 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0)));
        _1490 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0)));
        _1491 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0)));
    }
    else
    {
        _1477 = _1168;
        _1478 = _1168;
        _1479 = _1168;
        _1480 = _1168;
        _1481 = _1168;
        _1482 = _1168;
        _1483 = _1168;
        _1484 = _1168;
        _1485 = _1168;
        _1486 = _1168;
        _1487 = _1168;
        _1488 = _1168;
        _1489 = 0.0;
        _1490 = 0.0;
        _1491 = 0.0;
    }
    float _1501 = (cbModelParam._m0[1u].x * (_1489 - _1180)) + _1180;
    float _1502 = (cbModelParam._m0[1u].x * (_1490 - _1181)) + _1181;
    float _1503 = (cbModelParam._m0[1u].x * (_1491 - _1182)) + _1182;
    float _1524 = fma(_1503, cbSceneParam._m0[89u].z, fma(_1502, cbSceneParam._m0[89u].y, _1501 * cbSceneParam._m0[89u].x));
    float _1527 = fma(_1503, cbSceneParam._m0[90u].z, fma(_1502, cbSceneParam._m0[90u].y, _1501 * cbSceneParam._m0[90u].x));
    float _1530 = fma(_1503, cbSceneParam._m0[91u].z, fma(_1502, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1501));
    float _1545 = _800 * 0.5;
    float _1546 = _801 * 0.5;
    float _1547 = _802 * 0.5;
    float _1548 = dot(vec4(_1545, _1546, _1547, 1.0), vec4(_1479, _1482, _1485, _1488));
    float _1551 = dot(vec4(_1545, _1546, _1547, 1.0), vec4(_1478, _1481, _1484, _1487));
    float _1554 = dot(vec4(_1545, _1546, _1547, 1.0), vec4(_1477, _1480, _1483, _1486));
    float _1588;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1561 = dot(vec4(_1545, _1546, _1547, 1.0), vec4(_1167, _1171, _1174, _1177));
        float _1565 = dot(vec4(_1545, _1546, _1547, 1.0), vec4(_1169, _1172, _1175, _1178));
        float _1569 = dot(vec4(_1545, _1546, _1547, 1.0), vec4(_1170, _1173, _1176, _1179));
        float _1576 = dot(vec4(cbModelParam._m0[39u]), vec4(_1545, _1546, _1547, 1.0));
        _1588 = dot(vec3(isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0)), isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0)), isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1576) ? 0.0 : (isnan(0.0) ? _1576 : max(0.0, _1576))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1588 = 1.0;
    }
    float _1599;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1590 = dot(vec4(cbModelParam._m0[40u]), vec4(_1545, _1546, _1547, 1.0));
        _1599 = dot(vec3(isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0)), isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0)), isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1590) ? 0.0 : (isnan(0.0) ? _1590 : max(0.0, _1590))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1599 = 1.0;
    }
    float _1603 = (_1599 * cbModelParam._m0[1u].x) + (_1588 * (1.0 - cbModelParam._m0[1u].x));
    float _1613 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _718);
    float _1614 = isnan(_1613) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1613 : min(cbModelParam._m0[25u].z, _1613));
    float _1694;
    float _1696;
    float _1698;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1661 = fma(_865, cbModelParam._m0[13u].z, fma(_861, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _857)) + cbModelParam._m0[13u].w;
        float _1665 = fma(_865, cbModelParam._m0[14u].z, fma(_861, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _857)) + cbModelParam._m0[14u].w;
        float _1669 = fma(_865, cbModelParam._m0[15u].z, fma(_861, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _857)) + cbModelParam._m0[15u].w;
        float _1672 = fma(_802, cbModelParam._m0[13u].z, fma(_801, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _800));
        float _1675 = fma(_802, cbModelParam._m0[14u].z, fma(_801, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _800));
        float _1678 = fma(_802, cbModelParam._m0[15u].z, fma(_801, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _800));
        float _1706;
        if (_1672 > 0.0)
        {
            _1706 = abs((1.0 - _1661) / _1672);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1672 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1661 + 1.0) / _1672);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1706 = frontier_phi_16_14_ladder;
        }
        float _1899;
        if (_1675 > 0.0)
        {
            _1899 = abs((1.0 - _1665) / _1675);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1675 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1665 + 1.0) / _1675);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1899 = frontier_phi_25_21_ladder;
        }
        float _2137;
        if (_1678 > 0.0)
        {
            _2137 = abs((1.0 - _1669) / _1678);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1678 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1669 + 1.0) / _1678);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2137 = frontier_phi_36_32_ladder;
        }
        float _2139 = isnan(_1899) ? _1706 : (isnan(_1706) ? _1899 : min(_1706, _1899));
        float _2140 = isnan(_2137) ? _2139 : (isnan(_2139) ? _2137 : min(_2139, _2137));
        float _2144 = (_2140 * _1672) + _1661;
        float _2145 = (_2140 * _1675) + _1665;
        float _2146 = (_2140 * _1678) + _1669;
        float _2147 = _2140 * 9.9999997473787516355514526367188e-05;
        float _2149 = (-1.0) - _2147;
        float _2151 = _2147 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2146 > _2151) || ((_2146 < _2149) || ((_2145 > _2151) || ((_2145 < _2149) || ((_2144 < _2149) || (_2144 > _2151))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2296 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2146, cbModelParam._m0[9u].z, fma(_2145, cbModelParam._m0[9u].y, _2144 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2146, cbModelParam._m0[10u].z, fma(_2145, cbModelParam._m0[10u].y, _2144 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2146, cbModelParam._m0[11u].z, fma(_2145, cbModelParam._m0[11u].y, _2144 * cbModelParam._m0[11u].x))), _1614);
            frontier_phi_15_36_ladder = _2296.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2296.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2296.y * cbModelParam._m0[1u].y;
        }
        _1694 = frontier_phi_15_36_ladder_1;
        _1696 = frontier_phi_15_36_ladder_2;
        _1698 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1682 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_800, _801, _802), _1614);
        _1694 = _1682.x * cbModelParam._m0[1u].y;
        _1696 = _1682.y * cbModelParam._m0[1u].y;
        _1698 = _1682.z * cbModelParam._m0[1u].y;
    }
    float _1702 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _718);
    float _1703 = isnan(_1702) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1702 : min(cbModelParam._m0[25u].w, _1702));
    float _1795;
    float _1797;
    float _1799;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1759 = fma(_865, cbModelParam._m0[21u].z, fma(_861, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _857)) + cbModelParam._m0[21u].w;
        float _1763 = fma(_865, cbModelParam._m0[22u].z, fma(_861, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _857)) + cbModelParam._m0[22u].w;
        float _1767 = fma(_865, cbModelParam._m0[23u].z, fma(_861, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _857)) + cbModelParam._m0[23u].w;
        float _1770 = fma(_802, cbModelParam._m0[21u].z, fma(_801, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _800));
        float _1773 = fma(_802, cbModelParam._m0[22u].z, fma(_801, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _800));
        float _1776 = fma(_802, cbModelParam._m0[23u].z, fma(_801, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _800));
        float _1904;
        if (_1770 > 0.0)
        {
            _1904 = abs((1.0 - _1759) / _1770);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1770 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1759 + 1.0) / _1770);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1904 = frontier_phi_27_23_ladder;
        }
        float _2164;
        if (_1773 > 0.0)
        {
            _2164 = abs((1.0 - _1763) / _1773);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1773 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1763 + 1.0) / _1773);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2164 = frontier_phi_38_34_ladder;
        }
        float _2471;
        if (_1776 > 0.0)
        {
            _2471 = abs((1.0 - _1767) / _1776);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1776 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1767 + 1.0) / _1776);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2471 = frontier_phi_49_44_ladder;
        }
        float _2473 = isnan(_2164) ? _1904 : (isnan(_1904) ? _2164 : min(_1904, _2164));
        float _2474 = isnan(_2471) ? _2473 : (isnan(_2473) ? _2471 : min(_2473, _2471));
        float _2478 = (_2474 * _1770) + _1759;
        float _2479 = (_2474 * _1773) + _1763;
        float _2480 = (_2474 * _1776) + _1767;
        float _2481 = _2474 * 9.9999997473787516355514526367188e-05;
        float _2482 = (-1.0) - _2481;
        float _2484 = _2481 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2480 > _2484) || ((_2480 < _2482) || ((_2479 > _2484) || ((_2479 < _2482) || ((_2478 < _2482) || (_2478 > _2484))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2653 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2480, cbModelParam._m0[17u].z, fma(_2479, cbModelParam._m0[17u].y, _2478 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2480, cbModelParam._m0[18u].z, fma(_2479, cbModelParam._m0[18u].y, _2478 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2480, cbModelParam._m0[19u].z, fma(_2479, cbModelParam._m0[19u].y, _2478 * cbModelParam._m0[19u].x))), _1703);
            frontier_phi_24_49_ladder = _2653.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2653.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2653.x * cbModelParam._m0[1u].z;
        }
        _1795 = frontier_phi_24_49_ladder_2;
        _1797 = frontier_phi_24_49_ladder;
        _1799 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1779 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_800, _801, _802), _1703);
        _1795 = _1779.x * cbModelParam._m0[1u].z;
        _1797 = _1779.y * cbModelParam._m0[1u].z;
        _1799 = _1779.z * cbModelParam._m0[1u].z;
    }
    float _1811 = ((((1.0 - _825) * ((_813 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_825 * _813)) * _792;
    float _1812 = _1811 * ((cbModelParam._m0[1u].w * (_1795 - _1694)) + _1694);
    float _1813 = _1811 * ((cbModelParam._m0[1u].w * (_1797 - _1696)) + _1696);
    float _1814 = _1811 * ((cbModelParam._m0[1u].w * (_1799 - _1698)) + _1698);
    float _1817 = fma(_1814, cbSceneParam._m0[89u].z, fma(_1813, cbSceneParam._m0[89u].y, _1812 * cbSceneParam._m0[89u].x));
    float _1820 = fma(_1814, cbSceneParam._m0[90u].z, fma(_1813, cbSceneParam._m0[90u].y, _1812 * cbSceneParam._m0[90u].x));
    float _1823 = fma(_1814, cbSceneParam._m0[91u].z, fma(_1813, cbSceneParam._m0[91u].y, _1812 * cbSceneParam._m0[91u].x));
    vec4 _1831 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_629, _630));
    float _1833 = _1831.w;
    float _1845 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1833);
    float _1846 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1833);
    float _1847 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1833);
    uvec4 _1851 = floatBitsToUint(cbInstanceData._m0[_300 + 5u]);
    uint _1853 = _1851.x * 14u;
    uint _1854 = _1853 + 13u;
    float _1859 = _792 + (-1.0);
    float _1862 = (cbLight._m0[_1854].x * _1859) + 1.0;
    float _1863 = (cbLight._m0[_1854].y * _1859) + 1.0;
    uint _1865 = _1853 + 4u;
    float _1876 = dot(vec3(cbLight._m0[_1853].xyz), vec3(_714, _715, _716));
    float _1879 = isnan(1.0) ? _1862 : (isnan(_1862) ? 1.0 : min(_1862, 1.0));
    float _1880 = cbLight._m0[_1865].x * _1845;
    float _1881 = cbLight._m0[_1865].y * _1846;
    float _1882 = cbLight._m0[_1865].z * _1847;
    uint _1883 = _1853 + 5u;
    uint _1889 = _1853 | 1u;
    float _1895 = dot(vec3(cbLight._m0[_1889].xyz), vec3(_714, _715, _716));
    float _1898 = isnan(1.0) ? _1863 : (isnan(_1863) ? 1.0 : min(_1863, 1.0));
    float _1963;
    float _1964;
    float _1965;
    if (_719 == 0.0)
    {
        float _3650 = isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0));
        float _3661 = isnan(0.0) ? _1895 : (isnan(_1895) ? 0.0 : max(_1895, 0.0));
        float _1917 = (isnan(1.0) ? _3650 : (isnan(_3650) ? 1.0 : min(_3650, 1.0))) * 0.3183098733425140380859375;
        float _1919 = (isnan(1.0) ? _3661 : (isnan(_3661) ? 1.0 : min(_3661, 1.0))) * 0.3183098733425140380859375;
        _1963 = ((cbLight._m0[_1883].x * _1898) * _1919) + ((_1880 * _1879) * _1917);
        _1964 = ((_1898 * cbLight._m0[_1883].y) * _1919) + ((_1881 * _1879) * _1917);
        _1965 = ((_1898 * cbLight._m0[_1883].z) * _1919) + ((_1882 * _1879) * _1917);
    }
    else
    {
        float _1929 = _1876 + _719;
        float _1932 = (_719 * 2.0) + 1.0;
        float _1933 = (isnan(0.0) ? _1929 : (isnan(_1929) ? 0.0 : max(_1929, 0.0))) / _1932;
        float _1940 = _1895 + _719;
        float _1942 = (isnan(0.0) ? _1940 : (isnan(_1940) ? 0.0 : max(_1940, 0.0))) / _1932;
        _1963 = (((_1942 * cbLight._m0[_1883].x) * _1898) + ((_1880 * _1933) * _1879)) * 0.3183098733425140380859375;
        _1964 = (((_1942 * cbLight._m0[_1883].y) * _1898) + ((_1881 * _1933) * _1879)) * 0.3183098733425140380859375;
        _1965 = (((_1942 * cbLight._m0[_1883].z) * _1898) + ((_1882 * _1933) * _1879)) * 0.3183098733425140380859375;
    }
    uint _1969 = _1853 + 8u;
    float _1985 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1853].w)) * _718) * 0.949999988079071044921875);
    float _1986 = _1985 * _1985;
    float _1987 = cbLight._m0[_1853].x + _493;
    float _1988 = cbLight._m0[_1853].y + _494;
    float _1989 = cbLight._m0[_1853].z + _495;
    float _1993 = inversesqrt(dot(vec3(_1987, _1988, _1989), vec3(_1987, _1988, _1989)));
    float _1994 = _1993 * _1987;
    float _1995 = _1993 * _1988;
    float _1996 = _1993 * _1989;
    float _1997 = dot(vec3(_714, _715, _716), vec3(cbLight._m0[_1853].xyz));
    float _3682 = isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0));
    float _2000 = isnan(1.0) ? _3682 : (isnan(_3682) ? 1.0 : min(_3682, 1.0));
    float _3693 = isnan(0.0) ? _793 : (isnan(_793) ? 0.0 : max(_793, 0.0));
    float _2001 = isnan(1.0) ? _3693 : (isnan(_3693) ? 1.0 : min(_3693, 1.0));
    float _2002 = dot(vec3(_714, _715, _716), vec3(_1994, _1995, _1996));
    float _3704 = isnan(0.0) ? _2002 : (isnan(_2002) ? 0.0 : max(_2002, 0.0));
    float _2005 = isnan(1.0) ? _3704 : (isnan(_3704) ? 1.0 : min(_3704, 1.0));
    float _2006 = dot(vec3(cbLight._m0[_1853].xyz), vec3(_1994, _1995, _1996));
    float _3715 = isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0));
    float _2010 = _1986 * _1986;
    float _2014 = ((_2005 * _2005) * (_2010 + (-1.0))) + 1.0;
    float _2025 = (exp2(log2(1.0 - (isnan(1.0) ? _3715 : (isnan(_3715) ? 1.0 : min(_3715, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2026 = 1.0 - _1986;
    float _2037 = (0.5 / (((_2001 * ((_2000 * _2026) + _1986)) + 9.9999999392252902907785028219223e-09) + (((_2001 * _2026) + _1986) * _2000))) * _2000;
    float _3726 = isnan(0.0) ? _2037 : (isnan(_2037) ? 0.0 : max(_2037, 0.0));
    float _2039 = (isnan(1.0) ? _3726 : (isnan(_3726) ? 1.0 : min(_3726, 1.0))) * (_2010 / ((_2014 * _2014) * 3.141590118408203125));
    uint _2055 = _1853 + 9u;
    float _2069 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1889].w)) * _718) * 0.949999988079071044921875);
    float _2070 = _2069 * _2069;
    float _2071 = cbLight._m0[_1889].x + _493;
    float _2072 = cbLight._m0[_1889].y + _494;
    float _2073 = cbLight._m0[_1889].z + _495;
    float _2077 = inversesqrt(dot(vec3(_2071, _2072, _2073), vec3(_2071, _2072, _2073)));
    float _2078 = _2077 * _2071;
    float _2079 = _2077 * _2072;
    float _2080 = _2077 * _2073;
    float _2081 = dot(vec3(_714, _715, _716), vec3(cbLight._m0[_1889].xyz));
    float _3737 = isnan(0.0) ? _2081 : (isnan(_2081) ? 0.0 : max(_2081, 0.0));
    float _2084 = isnan(1.0) ? _3737 : (isnan(_3737) ? 1.0 : min(_3737, 1.0));
    float _2085 = dot(vec3(_714, _715, _716), vec3(_2078, _2079, _2080));
    float _3748 = isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0));
    float _2088 = isnan(1.0) ? _3748 : (isnan(_3748) ? 1.0 : min(_3748, 1.0));
    float _2089 = dot(vec3(cbLight._m0[_1889].xyz), vec3(_2078, _2079, _2080));
    float _3759 = isnan(0.0) ? _2089 : (isnan(_2089) ? 0.0 : max(_2089, 0.0));
    float _2093 = _2070 * _2070;
    float _2097 = ((_2088 * _2088) * (_2093 + (-1.0))) + 1.0;
    float _2106 = (exp2(log2(1.0 - (isnan(1.0) ? _3759 : (isnan(_3759) ? 1.0 : min(_3759, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2107 = 1.0 - _2070;
    float _2117 = (0.5 / (((_2001 * ((_2084 * _2107) + _2070)) + 9.9999999392252902907785028219223e-09) + (((_2001 * _2107) + _2070) * _2084))) * _2084;
    float _3770 = isnan(0.0) ? _2117 : (isnan(_2117) ? 0.0 : max(_2117, 0.0));
    float _2119 = (isnan(1.0) ? _3770 : (isnan(_3770) ? 1.0 : min(_3770, 1.0))) * (_2093 / ((_2097 * _2097) * 3.141590118408203125));
    float _2129 = (((_2106 * cbLight._m0[_2055].x) * _2119) * _1898) + ((((cbLight._m0[_1969].x * _1845) * _2025) * _2039) * _1879);
    float _2130 = (((_2106 * cbLight._m0[_2055].y) * _2119) * _1898) + ((((cbLight._m0[_1969].y * _1846) * _2025) * _2039) * _1879);
    float _2131 = (((_2106 * cbLight._m0[_2055].z) * _2119) * _1898) + ((((cbLight._m0[_1969].z * _1847) * _2025) * _2039) * _1879);
    float _2267;
    float _2269;
    float _2271;
    float _2273;
    float _2275;
    float _2277;
    if (_1851.y == 0u)
    {
        float _2208 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2209 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2208;
        float _2210 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2208;
        float _2211 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2208;
        uvec4 _2223 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2224 = _2223.x;
        uint _2235 = uint((float(_2223.y) * floor(float(uint(cbSceneParam._m0[85u].y * _630) / _2224))) + floor(float(uint(cbSceneParam._m0[85u].x * _629) / _2224)));
        float _2245 = (log2(_2211 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2246 = isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0));
        uint _2249 = uint(isnan(14.0) ? _2246 : (isnan(_2246) ? 14.0 : min(_2246, 14.0)));
        uint _2256 = _2223.z;
        float _2305;
        float _2307;
        float _2309;
        float _2311;
        float _2313;
        float _2315;
        if (((((1u << ((_2256 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2249 << 2u) + (_2235 << 6u)) >> 2u)).x) == 0u) || ((_2256 & 240u) == 0u))
        {
            _2305 = 0.0;
            _2307 = 0.0;
            _2309 = 0.0;
            _2311 = 0.0;
            _2313 = 0.0;
            _2315 = 0.0;
        }
        else
        {
            float _2306;
            float _2308;
            float _2310;
            float _2312;
            float _2314;
            float _2316;
            float _2497 = 0.0;
            float _2498 = 0.0;
            float _2499 = 0.0;
            float _2500 = 0.0;
            float _2501 = 0.0;
            float _2502 = 0.0;
            uint _2503 = 0u;
            uint _2512;
            bool _2513;
            for (;;)
            {
                _2512 = texelFetch(g_lightClassification, int((((_2249 << 5u) + (_2235 << 9u)) + (_2503 << 2u)) >> 2u)).x;
                _2513 = _2512 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2513)
                {
                    frontier_phi_55_pred = _2502;
                    frontier_phi_55_pred_1 = _2501;
                    frontier_phi_55_pred_2 = _2500;
                    frontier_phi_55_pred_3 = _2498;
                    frontier_phi_55_pred_4 = _2497;
                    frontier_phi_55_pred_5 = _2499;
                }
                else
                {
                    float _2710;
                    float _2711;
                    float _2712;
                    float _2713;
                    float _2714;
                    float _2715;
                    uint _2716;
                    _2710 = _2497;
                    _2711 = _2498;
                    _2712 = _2499;
                    _2713 = _2500;
                    _2714 = _2501;
                    _2715 = _2502;
                    _2716 = _2512;
                    float _2658;
                    float _2659;
                    float _2660;
                    float _2661;
                    float _2662;
                    float _2663;
                    for (;;)
                    {
                        uint _2720 = uint(findLSB(_2716)) + (_2503 << 5u);
                        uint _2717 = (_2716 + 4294967295u) & _2716;
                        uint _2722 = _2720 * 48u;
                        vec4 _2736 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2722)).x, texelFetch(g_PointLightRenderingBuffer, int(_2722 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2722 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2722 + 3u)).x));
                        uint _2742 = (_2720 * 48u) + 4u;
                        vec4 _2755 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2742)).x, texelFetch(g_PointLightRenderingBuffer, int(_2742 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2742 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2742 + 3u)).x));
                        float _2756 = _2755.x;
                        float _2757 = _2755.y;
                        float _2758 = _2755.z;
                        uint _2761 = (_2720 * 48u) + 8u;
                        vec3 _2772 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2761)).x, texelFetch(g_PointLightRenderingBuffer, int(_2761 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2761 + 2u)).x));
                        uint _2777 = (_2720 * 48u) + 12u;
                        vec2 _2785 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2777)).x, texelFetch(g_PointLightRenderingBuffer, int(_2777 + 1u)).x));
                        float _2791 = inversesqrt(dot(vec3(_2209, _2210, _2211), vec3(_2209, _2210, _2211)));
                        float _2792 = _2791 * _2209;
                        float _2793 = _2791 * _2210;
                        float _2794 = _2791 * _2211;
                        float _2795 = _2736.x - _2209;
                        float _2796 = _2736.y - _2210;
                        float _2797 = _2736.z - _2211;
                        float _2798 = dot(vec3(_2795, _2796, _2797), vec3(_2795, _2796, _2797));
                        float _2801 = inversesqrt(_2798);
                        float _2802 = _2801 * _2795;
                        float _2803 = _2801 * _2796;
                        float _2804 = _2801 * _2797;
                        float _2805 = dot(vec3(_754, _757, _760), vec3(_2802, _2803, _2804));
                        float _2810 = 1.0 - (_2798 * _2736.w);
                        float _3791 = isnan(0.0) ? _2810 : (isnan(_2810) ? 0.0 : max(_2810, 0.0));
                        float _2811 = isnan(1.0) ? _3791 : (isnan(_3791) ? 1.0 : min(_3791, 1.0));
                        float _2812 = sqrt(_2798) * _2755.w;
                        float _2815 = 1.39999997615814208984375 / (_2812 + 1.39999997615814208984375);
                        float _2816 = _2815 * _2815;
                        float _2817 = 1.0 - _2816;
                        float _2819 = (_2817 * _2817) * _719;
                        float _2822 = ((_2817 * _2805) + _2816) + _2819;
                        float _2827 = _2812 * _2812;
                        float _2832 = ((isnan(0.0) ? _2822 : (isnan(_2822) ? 0.0 : max(_2822, 0.0))) * _2811) / (((_2819 * 2.0) + 1.0) * ((_2827 * 0.699999988079071044921875) + 1.0));
                        float _2836 = dot(vec3(_2802, _2803, _2804), vec3(_2792, _2793, _2794));
                        float _3807 = isnan(0.0) ? _2836 : (isnan(_2836) ? 0.0 : max(_2836, 0.0));
                        float _2843 = dot(vec3((-0.0) - _2792, (-0.0) - _2793, (-0.0) - _2794), vec3(_754, _757, _760)) + 1.0;
                        float _2845 = (isnan(0.0) ? _2843 : (isnan(_2843) ? 0.0 : max(_2843, 0.0))) * 0.5;
                        float _2852 = ((_2845 * _2845) * _2785.x) * exp2((_2785.y * 32.0) * log2(isnan(1.0) ? _3807 : (isnan(_3807) ? 1.0 : min(_3807, 1.0))));
                        float _2854 = _719 / (_719 + 1.0);
                        float _2870 = (-0.0) - _2209;
                        float _2871 = (-0.0) - _2210;
                        float _2872 = (-0.0) - _2211;
                        float _2876 = inversesqrt(dot(vec3(_2870, _2871, _2872), vec3(_2870, _2871, _2872)));
                        float _2877 = _2876 * _2870;
                        float _2878 = _2876 * _2871;
                        float _2879 = _2876 * _2872;
                        float _2887 = exp2(log2(1.0 / ((_2827 * 3.5) + 5.0)) * 0.25);
                        float _2888 = 1.0 - _813;
                        float _2895 = sqrt(1.0 - ((1.0 - (_2888 * _2888)) * (1.0 - (_2887 * _2887))));
                        float _2896 = _2895 * _2895;
                        float _2897 = _2896 * _2896;
                        float _2898 = _2877 + _2802;
                        float _2899 = _2878 + _2803;
                        float _2900 = _2879 + _2804;
                        float _2904 = inversesqrt(dot(vec3(_2898, _2899, _2900), vec3(_2898, _2899, _2900)));
                        float _2908 = dot(vec3(_754, _757, _760), vec3(_2877, _2878, _2879));
                        float _3823 = isnan(0.0) ? _2908 : (isnan(_2908) ? 0.0 : max(_2908, 0.0));
                        float _2911 = isnan(1.0) ? _3823 : (isnan(_3823) ? 1.0 : min(_3823, 1.0));
                        float _2912 = dot(vec3(_754, _757, _760), vec3(_2904 * _2898, _2904 * _2899, _2904 * _2900));
                        float _3834 = isnan(0.0) ? _2912 : (isnan(_2912) ? 0.0 : max(_2912, 0.0));
                        float _2915 = isnan(1.0) ? _3834 : (isnan(_3834) ? 1.0 : min(_3834, 1.0));
                        float _2919 = ((_2915 * _2915) * (_2897 + (-1.0))) + 1.0;
                        float _2920 = _2815 * _2896;
                        float _2921 = _2920 * _2920;
                        float _2924 = ((1.0 - _2921) * _2805) + _2921;
                        float _3845 = isnan(0.0) ? _2924 : (isnan(_2924) ? 0.0 : max(_2924, 0.0));
                        float _2925 = isnan(1.0) ? _3845 : (isnan(_3845) ? 1.0 : min(_3845, 1.0));
                        float _2926 = 1.0 - _2896;
                        float _2936 = (0.5 / (((_2925 * ((_2911 * _2926) + _2896)) + 9.9999999392252902907785028219223e-09) + (((_2925 * _2926) + _2896) * _2911))) * _2925;
                        float _3856 = isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : max(_2936, 0.0));
                        float _2947 = (((_2897 * 3.1415927410125732421875) * (isnan(1.0) ? _3856 : (isnan(_3856) ? 1.0 : min(_3856, 1.0)))) / ((_2919 * _2919) * ((_2827 * 2.1991131305694580078125) + 3.141590118408203125))) * _2811;
                        _2661 = (((((_2756 * 0.3183098733425140380859375) * _2854) * _2852) + _2756) * _2832) + _2713;
                        _2662 = (((((_2757 * 0.3183098733425140380859375) * _2854) * _2852) + _2757) * _2832) + _2714;
                        _2663 = (((((_2758 * 0.3183098733425140380859375) * _2854) * _2852) + _2758) * _2832) + _2715;
                        _2658 = (_2947 * _2772.x) + _2710;
                        _2659 = (_2947 * _2772.y) + _2711;
                        _2660 = (_2947 * _2772.z) + _2712;
                        if (_2717 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2710 = _2658;
                            _2711 = _2659;
                            _2712 = _2660;
                            _2713 = _2661;
                            _2714 = _2662;
                            _2715 = _2663;
                            _2716 = _2717;
                        }
                    }
                    frontier_phi_55_pred = _2663;
                    frontier_phi_55_pred_1 = _2662;
                    frontier_phi_55_pred_2 = _2661;
                    frontier_phi_55_pred_3 = _2659;
                    frontier_phi_55_pred_4 = _2658;
                    frontier_phi_55_pred_5 = _2660;
                }
                _2316 = frontier_phi_55_pred;
                _2314 = frontier_phi_55_pred_1;
                _2312 = frontier_phi_55_pred_2;
                _2308 = frontier_phi_55_pred_3;
                _2306 = frontier_phi_55_pred_4;
                _2310 = frontier_phi_55_pred_5;
                uint _2504 = _2503 + 1u;
                if (_2504 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2497 = _2306;
                    _2498 = _2308;
                    _2499 = _2310;
                    _2500 = _2312;
                    _2501 = _2314;
                    _2502 = _2316;
                    _2503 = _2504;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2305 = _2306;
            _2307 = _2308;
            _2309 = _2310;
            _2311 = _2312;
            _2313 = _2314;
            _2315 = _2316;
        }
        float _2320 = isnan(1.0) ? _792 : (isnan(_792) ? 1.0 : min(_792, 1.0));
        _2267 = (_2320 * _2311) + _1963;
        _2269 = (_2320 * _2313) + _1964;
        _2271 = (_2320 * _2315) + _1965;
        _2273 = ((_2305 * 0.039999999105930328369140625) * _2320) + _2129;
        _2275 = ((_2307 * 0.039999999105930328369140625) * _2320) + _2130;
        _2277 = ((_2309 * 0.039999999105930328369140625) * _2320) + _2131;
    }
    else
    {
        _2267 = _1963;
        _2269 = _1964;
        _2271 = _1965;
        _2273 = _2129;
        _2275 = _2130;
        _2277 = _2131;
    }
    float _2394;
    float _2395;
    float _2396;
    if (_719 > 0.0)
    {
        uint _2327 = _1853 + 4u;
        float _2333 = (-0.0) - _493;
        float _2334 = (-0.0) - _494;
        float _2335 = (-0.0) - _495;
        float _2336 = dot(vec3(cbLight._m0[_1853].xyz), vec3(_2333, _2334, _2335));
        float _3872 = isnan(0.0) ? _2336 : (isnan(_2336) ? 0.0 : max(_2336, 0.0));
        float _2340 = _803 + 1.0;
        float _2342 = (isnan(0.0) ? _2340 : (isnan(_2340) ? 0.0 : max(_2340, 0.0))) * 0.5;
        float _2347 = _2342 * _2342;
        float _2348 = _2347 * exp2(log2(isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0))) * 32.0);
        float _2350 = _719 / (_719 + 1.0);
        float _2351 = isnan(_1862) ? 1.0 : (isnan(1.0) ? _1862 : min(1.0, _1862));
        uint _2364 = _1853 + 5u;
        float _2370 = dot(vec3(cbLight._m0[_1889].xyz), vec3(_2333, _2334, _2335));
        float _3893 = isnan(0.0) ? _2370 : (isnan(_2370) ? 0.0 : max(_2370, 0.0));
        float _2377 = _2347 * exp2(log2(isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0))) * 32.0);
        float _2378 = isnan(_1863) ? 1.0 : (isnan(1.0) ? _1863 : min(1.0, _1863));
        _2394 = ((((_2377 * cbLight._m0[_2364].x) * _2350) * _2378) + ((((cbLight._m0[_2327].x * _1845) * _2348) * _2350) * _2351)) * 0.3183098733425140380859375;
        _2395 = ((((_2377 * cbLight._m0[_2364].y) * _2350) * _2378) + ((((cbLight._m0[_2327].y * _1846) * _2348) * _2350) * _2351)) * 0.3183098733425140380859375;
        _2396 = ((((_2377 * cbLight._m0[_2364].z) * _2350) * _2378) + ((((cbLight._m0[_2327].z * _1847) * _2348) * _2350) * _2351)) * 0.3183098733425140380859375;
    }
    else
    {
        _2394 = 0.0;
        _2395 = 0.0;
        _2396 = 0.0;
    }
    float _3909 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
    float _3920 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    float _3931 = isnan(0.0) ? _785 : (isnan(_785) ? 0.0 : max(_785, 0.0));
    float _3942 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _2411 = (isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0))) * ((_2267 + ((isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0))) * _792)) + _2394);
    float _2412 = (isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0))) * ((_2269 + ((isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0))) * _792)) + _2395);
    float _2413 = (isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0))) * ((_2271 + ((isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0))) * _792)) + _2396);
    float _2417 = 0.959999978542327880859375 - (exp2(log2(1.0 - _807) * 5.0) * 0.959999978542327880859375);
    float _2442 = _629 / cbSceneParam._m0[86u].x;
    float _2443 = _630 / cbSceneParam._m0[86u].y;
    vec4 _2457 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2442, _2443, (log2((isnan(cbSceneParam._m0[77u].w) ? _736 : (isnan(_736) ? cbSceneParam._m0[77u].w : min(_736, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2459 = _2457.x;
    float _2460 = _2457.y;
    float _2461 = _2457.z;
    float _2462 = _2457.w;
    float _2555;
    float _2557;
    float _2559;
    float _2561;
    if (_736 > cbSceneParam._m0[78u].w)
    {
        float _2518 = isnan(_736) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _736 : min(cbSceneParam._m0[80u].w, _736));
        float _2519 = _2518 / _736;
        float _2530 = _2519 * _292;
        float _2531 = _293 * _2519;
        float _2532 = (-0.0) - _2531;
        float _2533 = _2519 * _294;
        float _2535 = (cbSceneParam._m0[77u].w * _2532) / _2518;
        float _2536 = _2535 + cbSceneParam._m0[79u].w;
        float _2537 = cbSceneParam._m0[79u].w - _2531;
        float _2543 = sqrt(((_2530 * _2530) + (_2531 * _2531)) + (_2533 * _2533));
        float _2546 = (1.0 - (cbSceneParam._m0[77u].w / _2518)) * _2543;
        float _2551 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2553 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2952;
        if (abs((_2532 - _2535) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2952 = ((((_2536 > 0.0) ? exp2(_2551 * _2536) : (2.0 - exp2(_2553 * _2536))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2546;
        }
        else
        {
            float _2683 = 1.0 / cbSceneParam._m0[80u].x;
            float _2684 = isnan(_2537) ? _2536 : (isnan(_2536) ? _2537 : max(_2536, _2537));
            float _2685 = isnan(_2537) ? _2536 : (isnan(_2536) ? _2537 : min(_2536, _2537));
            float _2694 = isnan(0.0) ? _2684 : (isnan(_2684) ? 0.0 : min(_2684, 0.0));
            float _2695 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : min(_2685, 0.0));
            _2952 = ((abs(_2543 / _2532) * cbSceneParam._m0[80u].y) * ((((_2694 - _2695) * 2.0) - ((exp2(_2551 * (isnan(0.0) ? _2684 : (isnan(_2684) ? 0.0 : max(_2684, 0.0)))) - exp2(_2551 * (isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0))))) * _2683)) - ((exp2(_2553 * _2694) - exp2(_2553 * _2695)) * _2683))) + (_2546 * cbSceneParam._m0[80u].z);
        }
        vec4 _2954 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2442, _2443, 1.0), 0.0);
        float _2963 = exp2((_2952 * (-1.44269502162933349609375)) * (1.0 - _2954.w));
        float _2964 = log2(_2963);
        float _2980 = log2(_2462);
        _2555 = (exp2(_2980 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2964 * cbSceneParam._m0[78u].x)) * _2954.x) / cbSceneParam._m0[78u].x)) + _2459;
        _2557 = (exp2(_2980 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2964 * cbSceneParam._m0[78u].y)) * _2954.y) / cbSceneParam._m0[78u].y)) + _2460;
        _2559 = (exp2(_2980 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2964 * cbSceneParam._m0[78u].z)) * _2954.z) / cbSceneParam._m0[78u].z)) + _2461;
        _2561 = _2963 * _2462;
    }
    else
    {
        _2555 = _2459;
        _2557 = _2460;
        _2559 = _2461;
        _2561 = _2462;
    }
    bool _2573 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2574 = log2(_2561);
    float _2581 = exp2(_2574 * cbSceneParam._m0[78u].x) * ((_2411 + ((_2273 + ((isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0))) * _1603)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _653.x) * _2417) - _2411) * _699));
    float _2582 = exp2(_2574 * cbSceneParam._m0[78u].y) * ((_2412 + ((_2275 + ((isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0))) * _1603)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _653.y) * _2417) - _2412) * _699));
    float _2583 = exp2(_2574 * cbSceneParam._m0[78u].z) * ((_2413 + ((_2277 + ((isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0))) * _1603)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _653.z) * _2417) - _2413) * _699));
    vec4 _2591 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_629, _630));
    float _2593 = _2591.x;
    float _2614 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2593)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2593))) - _736) * cbMtdParam._m0[17u].y;
    float _3993 = isnan(0.0) ? _2614 : (isnan(_2614) ? 0.0 : max(_2614, 0.0));
    float _2616 = (cbInstanceData._m0[_300 + 6u].w * (isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0)))) * (isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0)));
    float _2625 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2625 * (_2573 ? _2581 : (_2581 + (cbSceneParam._m0[72u].w * _2555)));
    SV_Target.y = _2625 * (_2573 ? _2582 : (_2582 + (cbSceneParam._m0[72u].w * _2557)));
    SV_Target.z = _2625 * (_2573 ? _2583 : (_2583 + (cbSceneParam._m0[72u].w * _2559)));
    SV_Target.w = _2616;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2616;
}


