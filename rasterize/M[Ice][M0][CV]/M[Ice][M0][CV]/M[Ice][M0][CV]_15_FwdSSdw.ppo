#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1227;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _211 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _212 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _213 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _219 = inversesqrt(dot(vec3(_211, _212, _213), vec3(_211, _212, _213)));
    float _220 = _219 * _211;
    float _221 = _219 * _212;
    float _222 = _219 * _213;
    float _226 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _227 = _226 * NORMAL.x;
    float _228 = _226 * NORMAL.y;
    float _229 = _226 * NORMAL.z;
    float _233 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _234 = _233 * TANGENT.x;
    float _235 = _233 * TANGENT.y;
    float _236 = _233 * TANGENT.z;
    float _241;
    float _242;
    float _243;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _241 = (-0.0) - _227;
        _242 = (-0.0) - _228;
        _243 = (-0.0) - _229;
    }
    else
    {
        _241 = _227;
        _242 = _228;
        _243 = _229;
    }
    float _290 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _300 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _290);
    float _301 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _290);
    float _302 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _290);
    uint _308 = uint(roundEven(NORMAL.w)) * 13u;
    uint _313 = _308 + 1u;
    uint _317 = _308 + 2u;
    float _326 = sqrt(((cbInstanceData._m0[_313].x * cbInstanceData._m0[_313].x) + (cbInstanceData._m0[_308].x * cbInstanceData._m0[_308].x)) + (cbInstanceData._m0[_317].x * cbInstanceData._m0[_317].x));
    float _327 = _326 * TEXCOORD.z;
    float _328 = _326 * TEXCOORD.w;
    vec4 _341 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _327) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _328) + cbTextureTilingScale._m0[8u].w));
    vec4 _362 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _370 = (_362.x * 2.0) + (-1.0);
    float _372 = (_362.y * 2.0) + (-1.0);
    float _373 = dot(vec2(_370, _372), vec2(_370, _372));
    float _3141 = isnan(0.0) ? _373 : (isnan(_373) ? 0.0 : max(_373, 0.0));
    float _379 = sqrt(1.0 - (isnan(1.0) ? _3141 : (isnan(_3141) ? 1.0 : min(_3141, 1.0))));
    float _382 = fma(_379, _241, fma(_372, _234, _370 * _220));
    float _385 = fma(_379, _242, fma(_372, _235, _370 * _221));
    float _388 = fma(_379, _243, fma(_372, _236, _370 * _222));
    float _392 = inversesqrt(dot(vec3(_382, _385, _388), vec3(_382, _385, _388)));
    vec4 _425 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _430 = _425.w;
    float _442 = dot(vec3(_300, _301, _302), vec3(_220, _221, _222));
    float _445 = dot(vec3(_300, _301, _302), vec3(_234, _235, _236));
    float _448 = dot(vec3(_300, _301, _302), vec3(_241, _242, _243));
    float _454 = inversesqrt(dot(vec3(_442, _445, _448), vec3(_442, _445, _448)));
    float _476 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _496 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_442 * cbMtdParam._m0[14u].x) * _454) * _476) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_445 * cbMtdParam._m0[14u].x) * _454) * _476) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _519 = inversesqrt(dot(vec3(_300, _301, _302), vec3(_300, _301, _302)));
    float _520 = _519 * _300;
    float _521 = _519 * _301;
    float _522 = _519 * _302;
    float _523 = dot(vec4(_520, _521, _522, 0.0), vec4(_241, _242, _243, 0.0));
    float _526 = _523 - cbMtdParam._m0[15u].z;
    float _3152 = isnan(0.0) ? _526 : (isnan(_526) ? 0.0 : max(_526, 0.0));
    float _533 = exp2(log2(1.0 - (isnan(1.0) ? _3152 : (isnan(_3152) ? 1.0 : min(_3152, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _548 = ((((_425.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _496.x) * cbMtdParam._m0[9u].x) * ((_533 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _553 = ((((_425.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _496.y) * cbMtdParam._m0[9u].y) * ((_533 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _558 = ((((_425.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _496.z) * cbMtdParam._m0[9u].z) * ((_533 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _567 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _327) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _328) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3168 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _568 = isnan(1.0) ? _3168 : (isnan(_3168) ? 1.0 : min(_3168, 1.0));
    float _575 = (_568 * ((_341.x * cbMtdParam._m0[10u].x) - _548)) + _548;
    float _576 = (((_341.y * cbMtdParam._m0[10u].y) - _553) * _568) + _553;
    float _577 = (((_341.z * cbMtdParam._m0[10u].z) - _558) * _568) + _558;
    vec4 _589 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _327) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _328) + cbTextureTilingScale._m0[9u].w));
    float _596 = (_589.x * 2.0) + (-1.0);
    float _597 = (_589.y * 2.0) + (-1.0);
    float _598 = dot(vec2(_596, _597), vec2(_596, _597));
    float _3179 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    vec4 _619 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _631 = cbMtdParam._m0[17u].z + _362.z;
    float _637 = (_631 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_619.z - _631));
    float _640 = ((_589.z - _637) * _568) + _637;
    float _646 = ((((_619.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _370;
    float _647 = ((((_619.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _372;
    float _659 = (((_596 - _646) + (_646 * cbMtdParam._m0[14u].z)) * _568) + _646;
    float _660 = (((_597 - _647) + (_647 * cbMtdParam._m0[14u].z)) * _568) + _647;
    float _661 = (_568 * (sqrt(1.0 - (isnan(1.0) ? _3179 : (isnan(_3179) ? 1.0 : min(_3179, 1.0)))) - _379)) + _379;
    float _677 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _679 = _677 - (_677 * _568);
    float _688 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _689 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _699 = cbSceneParam._m0[86u].x * ((_688 / cbSceneParam._m0[86u].x) + ((_392 * _382) * cbMtdParam._m0[18u].y));
    float _700 = cbSceneParam._m0[86u].y * ((_689 / cbSceneParam._m0[86u].y) + ((_392 * _385) * cbMtdParam._m0[18u].y));
    float _707 = isnan(cbInstanceData._m0[8u].x) ? _699 : (isnan(_699) ? cbInstanceData._m0[8u].x : max(_699, cbInstanceData._m0[8u].x));
    float _708 = isnan(cbInstanceData._m0[8u].y) ? _700 : (isnan(_700) ? cbInstanceData._m0[8u].y : max(_700, cbInstanceData._m0[8u].y));
    vec4 _712 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _707 : (isnan(_707) ? cbInstanceData._m0[8u].z : min(_707, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _708 : (isnan(_708) ? cbInstanceData._m0[8u].w : min(_708, cbInstanceData._m0[8u].w))));
    float _745 = _523 - cbMtdParam._m0[15u].x;
    float _3210 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
    float _755 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3210 : (isnan(_3210) ? 1.0 : min(_3210, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3226 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    float _756 = isnan(1.0) ? _3226 : (isnan(_3226) ? 1.0 : min(_3226, 1.0));
    float _758 = _756 - (_568 * _756);
    float _762 = fma(_661, _241, fma(_660, _234, _659 * _220));
    float _765 = fma(_661, _242, fma(_660, _235, _659 * _221));
    float _768 = fma(_661, _243, fma(_660, _236, _659 * _222));
    float _772 = inversesqrt(dot(vec3(_762, _765, _768), vec3(_762, _765, _768)));
    float _773 = _772 * _762;
    float _774 = _772 * _765;
    float _775 = _772 * _768;
    float _3237 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _776 = isnan(1.0) ? _3237 : (isnan(_3237) ? 1.0 : min(_3237, 1.0));
    float _3248 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _777 = isnan(1.0) ? _3248 : (isnan(_3248) ? 1.0 : min(_3248, 1.0));
    float _778 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _3264 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _3275 = isnan(0.0) ? _576 : (isnan(_576) ? 0.0 : max(_576, 0.0));
    float _3286 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _795 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _813 = fma(_775, cbSceneParam._m0[5u].z, fma(_774, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _773));
    float _816 = fma(_775, cbSceneParam._m0[6u].z, fma(_774, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _773));
    float _819 = fma(_775, cbSceneParam._m0[7u].z, fma(_774, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _773));
    uint _833 = (_308 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _839 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3264 : (isnan(_3264) ? 1.0 : min(_3264, 1.0)))) * cbInstanceData._m0[_833].x;
    float _840 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3275 : (isnan(_3275) ? 1.0 : min(_3275, 1.0)))) * cbInstanceData._m0[_833].y;
    float _841 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3286 : (isnan(_3286) ? 1.0 : min(_3286, 1.0)))) * cbInstanceData._m0[_833].z;
    float _3297 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
    float _842 = isnan(1.0) ? _3297 : (isnan(_3297) ? 1.0 : min(_3297, 1.0));
    float _3308 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    float _843 = isnan(1.0) ? _3308 : (isnan(_3308) ? 1.0 : min(_3308, 1.0));
    float _3319 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
    float _844 = isnan(1.0) ? _3319 : (isnan(_3319) ? 1.0 : min(_3319, 1.0));
    vec4 _848 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _688, cbSceneParam._m0[86u].y * _689));
    float _851 = _848.x * TEXCOORD_5.w;
    float _852 = dot(vec3(_773, _774, _775), vec3(_520, _521, _522));
    float _855 = _852 * 2.0;
    float _859 = (_855 * _773) - _520;
    float _860 = (_855 * _774) - _521;
    float _861 = (_855 * _775) - _522;
    float _862 = dot(vec3(_520, _521, _522), vec3(_773, _774, _775));
    float _865 = abs(_862);
    float _3330 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    float _866 = isnan(1.0) ? _3330 : (isnan(_3330) ? 1.0 : min(_3330, 1.0));
    float _872 = sqrt(_777);
    float _884 = exp2((_872 * 5.0) * log2(1.0 - (_866 * 0.999000012874603271484375))) / (4.0 - (_872 * 3.0));
    float _916 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _920 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _924 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1226;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    float _1239;
    float _1240;
    float _1241;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _951 = fma(_924, cbModelParam._m0[26u].z, fma(_920, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _916));
        float _955 = fma(_924, cbModelParam._m0[27u].z, fma(_920, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _916));
        float _959 = fma(_924, cbModelParam._m0[28u].z, fma(_920, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _916));
        float _984 = _916 + _773;
        float _985 = _920 + _774;
        float _986 = _924 + _775;
        float _996 = fma(_986, cbModelParam._m0[26u].z, fma(_985, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _984)) - _951;
        float _997 = fma(_986, cbModelParam._m0[27u].z, fma(_985, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _984)) - _955;
        float _998 = fma(_986, cbModelParam._m0[28u].z, fma(_985, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _984)) - _959;
        float _1002 = inversesqrt(dot(vec3(_996, _997, _998), vec3(_996, _997, _998)));
        float _1015 = ((_1002 * _996) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_951 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1016 = ((_1002 * _997) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_955 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1017 = ((_1002 * _998) / cbModelParam._m0[34u].z) + ((((((_959 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1020 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1015, _1016, _1017), 0.0);
        vec4 _1027 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1015, _1016, _1017), 0.0);
        vec4 _1034 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1015, _1016, _1017), 0.0);
        vec4 _1041 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1015, _1016, _1017), 0.0);
        float _1054 = exp2((_1020.w + (-0.5)) * 20.0) * 2.0;
        float _1055 = _1054 * (_1020.x + (-0.5));
        float _1056 = _1054 * (_1020.y + (-0.5));
        float _1057 = _1054 * (_1020.z + (-0.5));
        float _1064 = exp2((_1027.w + (-0.5)) * 20.0) * 2.0;
        float _1065 = _1064 * (_1027.x + (-0.5));
        float _1066 = _1064 * (_1027.y + (-0.5));
        float _1067 = _1064 * (_1027.z + (-0.5));
        float _1074 = exp2((_1034.w + (-0.5)) * 20.0) * 2.0;
        float _1075 = _1074 * (_1034.x + (-0.5));
        float _1076 = _1074 * (_1034.y + (-0.5));
        float _1077 = _1074 * (_1034.z + (-0.5));
        float _1084 = exp2((_1041.w + (-0.5)) * 20.0) * 2.0;
        float _1085 = _1084 * (_1041.x + (-0.5));
        float _1086 = _1084 * (_1041.y + (-0.5));
        float _1087 = _1084 * (_1041.z + (-0.5));
        float _1088 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1089 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
        float _1090 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
        float _1091 = _1055 * 0.5;
        float _1092 = _1065 * 0.5;
        float _1093 = _1075 * 0.5;
        float _1094 = dot(vec3(_1091, _1092, _1093), vec3(_1091, _1092, _1093));
        float _1099 = (_1094 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1094);
        float _1108 = (dot(vec3(_773, _774, _775), vec3(_1099 * _1091, _1099 * _1092, _1099 * _1093)) + 1.0) * 0.5;
        float _3356 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1118 = sqrt(((_1092 * _1092) + (_1091 * _1091)) + (_1093 * _1093)) / (_1088 + 9.9999997473787516355514526367188e-06);
        float _3367 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
        float _1119 = isnan(1.0) ? _3367 : (isnan(_3367) ? 1.0 : min(_3367, 1.0));
        float _1120 = _1119 * 2.0;
        float _1124 = (1.0 - _1119) / (_1119 + 1.0);
        float _3378 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1125 = isnan(1.0) ? _3378 : (isnan(_3378) ? 1.0 : min(_3378, 1.0));
        float _1134 = ((((1.0 - _1125) * (_1120 + 2.0)) * exp2(log2(isnan(1.0) ? _3356 : (isnan(_3356) ? 1.0 : min(_3356, 1.0))) * (_1120 + 1.0))) + _1125) * _1088;
        float _1135 = _1056 * 0.5;
        float _1136 = _1066 * 0.5;
        float _1137 = _1076 * 0.5;
        float _1138 = dot(vec3(_1135, _1136, _1137), vec3(_1135, _1136, _1137));
        float _1143 = (_1138 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1138);
        float _1151 = (dot(vec3(_773, _774, _775), vec3(_1143 * _1135, _1143 * _1136, _1143 * _1137)) + 1.0) * 0.5;
        float _3389 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
        float _1160 = sqrt(((_1136 * _1136) + (_1135 * _1135)) + (_1137 * _1137)) / (_1089 + 9.9999997473787516355514526367188e-06);
        float _3400 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1161 = isnan(1.0) ? _3400 : (isnan(_3400) ? 1.0 : min(_3400, 1.0));
        float _1162 = _1161 * 2.0;
        float _1166 = (1.0 - _1161) / (_1161 + 1.0);
        float _3411 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1167 = isnan(1.0) ? _3411 : (isnan(_3411) ? 1.0 : min(_3411, 1.0));
        float _1176 = ((((1.0 - _1167) * (_1162 + 2.0)) * exp2(log2(isnan(1.0) ? _3389 : (isnan(_3389) ? 1.0 : min(_3389, 1.0))) * (_1162 + 1.0))) + _1167) * _1089;
        float _1177 = _1057 * 0.5;
        float _1178 = _1067 * 0.5;
        float _1179 = _1077 * 0.5;
        float _1180 = dot(vec3(_1177, _1178, _1179), vec3(_1177, _1178, _1179));
        float _1185 = (_1180 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1180);
        float _1193 = (dot(vec3(_773, _774, _775), vec3(_1185 * _1177, _1185 * _1178, _1185 * _1179)) + 1.0) * 0.5;
        float _3422 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
        float _1202 = sqrt(((_1178 * _1178) + (_1177 * _1177)) + (_1179 * _1179)) / (_1090 + 9.9999997473787516355514526367188e-06);
        float _3433 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1203 = isnan(1.0) ? _3433 : (isnan(_3433) ? 1.0 : min(_3433, 1.0));
        float _1204 = _1203 * 2.0;
        float _1208 = (1.0 - _1203) / (_1203 + 1.0);
        float _3444 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1209 = isnan(1.0) ? _3444 : (isnan(_3444) ? 1.0 : min(_3444, 1.0));
        float _1218 = ((((1.0 - _1209) * (_1204 + 2.0)) * exp2(log2(isnan(1.0) ? _3422 : (isnan(_3422) ? 1.0 : min(_3422, 1.0))) * (_1204 + 1.0))) + _1209) * _1090;
        _1226 = _1057;
        _1228 = _1056;
        _1229 = _1055;
        _1230 = _1067;
        _1231 = _1066;
        _1232 = _1065;
        _1233 = _1077;
        _1234 = _1076;
        _1235 = _1075;
        _1236 = _1090;
        _1237 = _1089;
        _1238 = _1088;
        _1239 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0)));
        _1240 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0)));
        _1241 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0)));
    }
    else
    {
        _1226 = _1227;
        _1228 = _1227;
        _1229 = _1227;
        _1230 = _1227;
        _1231 = _1227;
        _1232 = _1227;
        _1233 = _1227;
        _1234 = _1227;
        _1235 = _1227;
        _1236 = _1227;
        _1237 = _1227;
        _1238 = _1227;
        _1239 = 0.0;
        _1240 = 0.0;
        _1241 = 0.0;
    }
    float _1536;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1267 = fma(_924, cbModelParam._m0[30u].z, fma(_920, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _916));
        float _1271 = fma(_924, cbModelParam._m0[31u].z, fma(_920, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _916));
        float _1275 = fma(_924, cbModelParam._m0[32u].z, fma(_920, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _916));
        float _1298 = _916 + _773;
        float _1299 = _920 + _774;
        float _1300 = _924 + _775;
        float _1310 = fma(_1300, cbModelParam._m0[30u].z, fma(_1299, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1298)) - _1267;
        float _1311 = fma(_1300, cbModelParam._m0[31u].z, fma(_1299, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1298)) - _1271;
        float _1312 = fma(_1300, cbModelParam._m0[32u].z, fma(_1299, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1298)) - _1275;
        float _1316 = inversesqrt(dot(vec3(_1310, _1311, _1312), vec3(_1310, _1311, _1312)));
        float _1329 = ((_1316 * _1310) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1267 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1330 = ((_1316 * _1311) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1271 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1331 = ((_1316 * _1312) / cbModelParam._m0[35u].z) + ((((((_1275 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1333 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1329, _1330, _1331), 0.0);
        vec4 _1340 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1329, _1330, _1331), 0.0);
        vec4 _1347 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1329, _1330, _1331), 0.0);
        vec4 _1354 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1329, _1330, _1331), 0.0);
        float _1366 = exp2((_1333.w + (-0.5)) * 20.0) * 2.0;
        float _1367 = _1366 * (_1333.x + (-0.5));
        float _1368 = _1366 * (_1333.y + (-0.5));
        float _1369 = _1366 * (_1333.z + (-0.5));
        float _1376 = exp2((_1340.w + (-0.5)) * 20.0) * 2.0;
        float _1377 = _1376 * (_1340.x + (-0.5));
        float _1378 = _1376 * (_1340.y + (-0.5));
        float _1379 = _1376 * (_1340.z + (-0.5));
        float _1386 = exp2((_1347.w + (-0.5)) * 20.0) * 2.0;
        float _1387 = _1386 * (_1347.x + (-0.5));
        float _1388 = _1386 * (_1347.y + (-0.5));
        float _1389 = _1386 * (_1347.z + (-0.5));
        float _1396 = exp2((_1354.w + (-0.5)) * 20.0) * 2.0;
        float _1397 = _1396 * (_1354.x + (-0.5));
        float _1398 = _1396 * (_1354.y + (-0.5));
        float _1399 = _1396 * (_1354.z + (-0.5));
        float _1400 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1401 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1402 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1403 = _1367 * 0.5;
        float _1404 = _1377 * 0.5;
        float _1405 = _1387 * 0.5;
        float _1406 = dot(vec3(_1403, _1404, _1405), vec3(_1403, _1404, _1405));
        float _1411 = (_1406 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1406);
        float _1419 = (dot(vec3(_773, _774, _775), vec3(_1411 * _1403, _1411 * _1404, _1411 * _1405)) + 1.0) * 0.5;
        float _3485 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1428 = sqrt(((_1404 * _1404) + (_1403 * _1403)) + (_1405 * _1405)) / (_1400 + 9.9999997473787516355514526367188e-06);
        float _3496 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1429 = isnan(1.0) ? _3496 : (isnan(_3496) ? 1.0 : min(_3496, 1.0));
        float _1430 = _1429 * 2.0;
        float _1434 = (1.0 - _1429) / (_1429 + 1.0);
        float _3507 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1435 = isnan(1.0) ? _3507 : (isnan(_3507) ? 1.0 : min(_3507, 1.0));
        float _1444 = ((((1.0 - _1435) * (_1430 + 2.0)) * exp2(log2(isnan(1.0) ? _3485 : (isnan(_3485) ? 1.0 : min(_3485, 1.0))) * (_1430 + 1.0))) + _1435) * _1400;
        float _1445 = _1368 * 0.5;
        float _1446 = _1378 * 0.5;
        float _1447 = _1388 * 0.5;
        float _1448 = dot(vec3(_1445, _1446, _1447), vec3(_1445, _1446, _1447));
        float _1453 = (_1448 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1448);
        float _1461 = (dot(vec3(_773, _774, _775), vec3(_1453 * _1445, _1453 * _1446, _1453 * _1447)) + 1.0) * 0.5;
        float _3518 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1470 = sqrt(((_1446 * _1446) + (_1445 * _1445)) + (_1447 * _1447)) / (_1401 + 9.9999997473787516355514526367188e-06);
        float _3529 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1471 = isnan(1.0) ? _3529 : (isnan(_3529) ? 1.0 : min(_3529, 1.0));
        float _1472 = _1471 * 2.0;
        float _1476 = (1.0 - _1471) / (_1471 + 1.0);
        float _3540 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1477 = isnan(1.0) ? _3540 : (isnan(_3540) ? 1.0 : min(_3540, 1.0));
        float _1486 = ((((1.0 - _1477) * (_1472 + 2.0)) * exp2(log2(isnan(1.0) ? _3518 : (isnan(_3518) ? 1.0 : min(_3518, 1.0))) * (_1472 + 1.0))) + _1477) * _1401;
        float _1487 = _1369 * 0.5;
        float _1488 = _1379 * 0.5;
        float _1489 = _1389 * 0.5;
        float _1490 = dot(vec3(_1487, _1488, _1489), vec3(_1487, _1488, _1489));
        float _1495 = (_1490 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1490);
        float _1503 = (dot(vec3(_773, _774, _775), vec3(_1495 * _1487, _1495 * _1488, _1495 * _1489)) + 1.0) * 0.5;
        float _3551 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
        float _1512 = sqrt(((_1488 * _1488) + (_1487 * _1487)) + (_1489 * _1489)) / (_1402 + 9.9999997473787516355514526367188e-06);
        float _3562 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
        float _1513 = isnan(1.0) ? _3562 : (isnan(_3562) ? 1.0 : min(_3562, 1.0));
        float _1514 = _1513 * 2.0;
        float _1518 = (1.0 - _1513) / (_1513 + 1.0);
        float _3573 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
        float _1519 = isnan(1.0) ? _3573 : (isnan(_3573) ? 1.0 : min(_3573, 1.0));
        float _1528 = ((((1.0 - _1519) * (_1514 + 2.0)) * exp2(log2(isnan(1.0) ? _3551 : (isnan(_3551) ? 1.0 : min(_3551, 1.0))) * (_1514 + 1.0))) + _1519) * _1402;
        _1536 = _1369;
        _1537 = _1368;
        _1538 = _1367;
        _1539 = _1379;
        _1540 = _1378;
        _1541 = _1377;
        _1542 = _1389;
        _1543 = _1388;
        _1544 = _1387;
        _1545 = _1402;
        _1546 = _1401;
        _1547 = _1400;
        _1548 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0)));
        _1549 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0)));
        _1550 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0)));
    }
    else
    {
        _1536 = _1227;
        _1537 = _1227;
        _1538 = _1227;
        _1539 = _1227;
        _1540 = _1227;
        _1541 = _1227;
        _1542 = _1227;
        _1543 = _1227;
        _1544 = _1227;
        _1545 = _1227;
        _1546 = _1227;
        _1547 = _1227;
        _1548 = 0.0;
        _1549 = 0.0;
        _1550 = 0.0;
    }
    float _1560 = (cbModelParam._m0[1u].x * (_1548 - _1239)) + _1239;
    float _1561 = (cbModelParam._m0[1u].x * (_1549 - _1240)) + _1240;
    float _1562 = (cbModelParam._m0[1u].x * (_1550 - _1241)) + _1241;
    float _1583 = fma(_1562, cbSceneParam._m0[89u].z, fma(_1561, cbSceneParam._m0[89u].y, _1560 * cbSceneParam._m0[89u].x));
    float _1586 = fma(_1562, cbSceneParam._m0[90u].z, fma(_1561, cbSceneParam._m0[90u].y, _1560 * cbSceneParam._m0[90u].x));
    float _1589 = fma(_1562, cbSceneParam._m0[91u].z, fma(_1561, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1560));
    float _1604 = _859 * 0.5;
    float _1605 = _860 * 0.5;
    float _1606 = _861 * 0.5;
    float _1607 = dot(vec4(_1604, _1605, _1606, 1.0), vec4(_1538, _1541, _1544, _1547));
    float _1610 = dot(vec4(_1604, _1605, _1606, 1.0), vec4(_1537, _1540, _1543, _1546));
    float _1613 = dot(vec4(_1604, _1605, _1606, 1.0), vec4(_1536, _1539, _1542, _1545));
    float _1647;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1620 = dot(vec4(_1604, _1605, _1606, 1.0), vec4(_1226, _1230, _1233, _1236));
        float _1624 = dot(vec4(_1604, _1605, _1606, 1.0), vec4(_1228, _1231, _1234, _1237));
        float _1628 = dot(vec4(_1604, _1605, _1606, 1.0), vec4(_1229, _1232, _1235, _1238));
        float _1635 = dot(vec4(cbModelParam._m0[39u]), vec4(_1604, _1605, _1606, 1.0));
        _1647 = dot(vec3(isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0)), isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0)), isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1635) ? 0.0 : (isnan(0.0) ? _1635 : max(0.0, _1635))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1647 = 1.0;
    }
    float _1658;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1649 = dot(vec4(cbModelParam._m0[40u]), vec4(_1604, _1605, _1606, 1.0));
        _1658 = dot(vec3(isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0)), isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0)), isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1649) ? 0.0 : (isnan(0.0) ? _1649 : max(0.0, _1649))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1658 = 1.0;
    }
    float _1662 = (_1658 * cbModelParam._m0[1u].x) + (_1647 * (1.0 - cbModelParam._m0[1u].x));
    float _1672 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _777);
    float _1673 = isnan(_1672) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1672 : min(cbModelParam._m0[25u].z, _1672));
    float _1753;
    float _1755;
    float _1757;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1720 = fma(_924, cbModelParam._m0[13u].z, fma(_920, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _916)) + cbModelParam._m0[13u].w;
        float _1724 = fma(_924, cbModelParam._m0[14u].z, fma(_920, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _916)) + cbModelParam._m0[14u].w;
        float _1728 = fma(_924, cbModelParam._m0[15u].z, fma(_920, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _916)) + cbModelParam._m0[15u].w;
        float _1731 = fma(_861, cbModelParam._m0[13u].z, fma(_860, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _859));
        float _1734 = fma(_861, cbModelParam._m0[14u].z, fma(_860, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _859));
        float _1737 = fma(_861, cbModelParam._m0[15u].z, fma(_860, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _859));
        float _1765;
        if (_1731 > 0.0)
        {
            _1765 = abs((1.0 - _1720) / _1731);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1731 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1720 + 1.0) / _1731);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1765 = frontier_phi_16_14_ladder;
        }
        float _1958;
        if (_1734 > 0.0)
        {
            _1958 = abs((1.0 - _1724) / _1734);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1734 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1724 + 1.0) / _1734);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1958 = frontier_phi_25_21_ladder;
        }
        float _2196;
        if (_1737 > 0.0)
        {
            _2196 = abs((1.0 - _1728) / _1737);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1737 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1728 + 1.0) / _1737);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2196 = frontier_phi_36_32_ladder;
        }
        float _2198 = isnan(_1958) ? _1765 : (isnan(_1765) ? _1958 : min(_1765, _1958));
        float _2199 = isnan(_2196) ? _2198 : (isnan(_2198) ? _2196 : min(_2198, _2196));
        float _2203 = (_2199 * _1731) + _1720;
        float _2204 = (_2199 * _1734) + _1724;
        float _2205 = (_2199 * _1737) + _1728;
        float _2206 = _2199 * 9.9999997473787516355514526367188e-05;
        float _2208 = (-1.0) - _2206;
        float _2210 = _2206 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2205 > _2210) || ((_2205 < _2208) || ((_2204 > _2210) || ((_2204 < _2208) || ((_2203 < _2208) || (_2203 > _2210))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2355 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2205, cbModelParam._m0[9u].z, fma(_2204, cbModelParam._m0[9u].y, _2203 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2205, cbModelParam._m0[10u].z, fma(_2204, cbModelParam._m0[10u].y, _2203 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2205, cbModelParam._m0[11u].z, fma(_2204, cbModelParam._m0[11u].y, _2203 * cbModelParam._m0[11u].x))), _1673);
            frontier_phi_15_36_ladder = _2355.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2355.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2355.y * cbModelParam._m0[1u].y;
        }
        _1753 = frontier_phi_15_36_ladder_1;
        _1755 = frontier_phi_15_36_ladder_2;
        _1757 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1741 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_859, _860, _861), _1673);
        _1753 = _1741.x * cbModelParam._m0[1u].y;
        _1755 = _1741.y * cbModelParam._m0[1u].y;
        _1757 = _1741.z * cbModelParam._m0[1u].y;
    }
    float _1761 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _777);
    float _1762 = isnan(_1761) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1761 : min(cbModelParam._m0[25u].w, _1761));
    float _1854;
    float _1856;
    float _1858;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1818 = fma(_924, cbModelParam._m0[21u].z, fma(_920, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _916)) + cbModelParam._m0[21u].w;
        float _1822 = fma(_924, cbModelParam._m0[22u].z, fma(_920, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _916)) + cbModelParam._m0[22u].w;
        float _1826 = fma(_924, cbModelParam._m0[23u].z, fma(_920, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _916)) + cbModelParam._m0[23u].w;
        float _1829 = fma(_861, cbModelParam._m0[21u].z, fma(_860, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _859));
        float _1832 = fma(_861, cbModelParam._m0[22u].z, fma(_860, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _859));
        float _1835 = fma(_861, cbModelParam._m0[23u].z, fma(_860, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _859));
        float _1963;
        if (_1829 > 0.0)
        {
            _1963 = abs((1.0 - _1818) / _1829);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1829 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1818 + 1.0) / _1829);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1963 = frontier_phi_27_23_ladder;
        }
        float _2223;
        if (_1832 > 0.0)
        {
            _2223 = abs((1.0 - _1822) / _1832);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1832 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1822 + 1.0) / _1832);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2223 = frontier_phi_38_34_ladder;
        }
        float _2530;
        if (_1835 > 0.0)
        {
            _2530 = abs((1.0 - _1826) / _1835);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1835 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1826 + 1.0) / _1835);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2530 = frontier_phi_49_44_ladder;
        }
        float _2532 = isnan(_2223) ? _1963 : (isnan(_1963) ? _2223 : min(_1963, _2223));
        float _2533 = isnan(_2530) ? _2532 : (isnan(_2532) ? _2530 : min(_2532, _2530));
        float _2537 = (_2533 * _1829) + _1818;
        float _2538 = (_2533 * _1832) + _1822;
        float _2539 = (_2533 * _1835) + _1826;
        float _2540 = _2533 * 9.9999997473787516355514526367188e-05;
        float _2541 = (-1.0) - _2540;
        float _2543 = _2540 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2539 > _2543) || ((_2539 < _2541) || ((_2538 > _2543) || ((_2538 < _2541) || ((_2537 < _2541) || (_2537 > _2543))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2712 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2539, cbModelParam._m0[17u].z, fma(_2538, cbModelParam._m0[17u].y, _2537 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2539, cbModelParam._m0[18u].z, fma(_2538, cbModelParam._m0[18u].y, _2537 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2539, cbModelParam._m0[19u].z, fma(_2538, cbModelParam._m0[19u].y, _2537 * cbModelParam._m0[19u].x))), _1762);
            frontier_phi_24_49_ladder = _2712.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2712.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2712.x * cbModelParam._m0[1u].z;
        }
        _1854 = frontier_phi_24_49_ladder_2;
        _1856 = frontier_phi_24_49_ladder;
        _1858 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1838 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_859, _860, _861), _1762);
        _1854 = _1838.x * cbModelParam._m0[1u].z;
        _1856 = _1838.y * cbModelParam._m0[1u].z;
        _1858 = _1838.z * cbModelParam._m0[1u].z;
    }
    float _1870 = ((((1.0 - _884) * ((_872 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_884 * _872)) * _851;
    float _1871 = _1870 * ((cbModelParam._m0[1u].w * (_1854 - _1753)) + _1753);
    float _1872 = _1870 * ((cbModelParam._m0[1u].w * (_1856 - _1755)) + _1755);
    float _1873 = _1870 * ((cbModelParam._m0[1u].w * (_1858 - _1757)) + _1757);
    float _1876 = fma(_1873, cbSceneParam._m0[89u].z, fma(_1872, cbSceneParam._m0[89u].y, _1871 * cbSceneParam._m0[89u].x));
    float _1879 = fma(_1873, cbSceneParam._m0[90u].z, fma(_1872, cbSceneParam._m0[90u].y, _1871 * cbSceneParam._m0[90u].x));
    float _1882 = fma(_1873, cbSceneParam._m0[91u].z, fma(_1872, cbSceneParam._m0[91u].y, _1871 * cbSceneParam._m0[91u].x));
    vec4 _1890 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_688, _689));
    float _1892 = _1890.w;
    float _1904 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1892);
    float _1905 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1892);
    float _1906 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1892);
    uvec4 _1910 = floatBitsToUint(cbInstanceData._m0[_308 + 5u]);
    uint _1912 = _1910.x * 14u;
    uint _1913 = _1912 + 13u;
    float _1918 = _851 + (-1.0);
    float _1921 = (cbLight._m0[_1913].x * _1918) + 1.0;
    float _1922 = (cbLight._m0[_1913].y * _1918) + 1.0;
    uint _1924 = _1912 + 4u;
    float _1935 = dot(vec3(cbLight._m0[_1912].xyz), vec3(_773, _774, _775));
    float _1938 = isnan(1.0) ? _1921 : (isnan(_1921) ? 1.0 : min(_1921, 1.0));
    float _1939 = cbLight._m0[_1924].x * _1904;
    float _1940 = cbLight._m0[_1924].y * _1905;
    float _1941 = cbLight._m0[_1924].z * _1906;
    uint _1942 = _1912 + 5u;
    uint _1948 = _1912 | 1u;
    float _1954 = dot(vec3(cbLight._m0[_1948].xyz), vec3(_773, _774, _775));
    float _1957 = isnan(1.0) ? _1922 : (isnan(_1922) ? 1.0 : min(_1922, 1.0));
    float _2022;
    float _2023;
    float _2024;
    if (_778 == 0.0)
    {
        float _3709 = isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0));
        float _3720 = isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0));
        float _1976 = (isnan(1.0) ? _3709 : (isnan(_3709) ? 1.0 : min(_3709, 1.0))) * 0.3183098733425140380859375;
        float _1978 = (isnan(1.0) ? _3720 : (isnan(_3720) ? 1.0 : min(_3720, 1.0))) * 0.3183098733425140380859375;
        _2022 = ((cbLight._m0[_1942].x * _1957) * _1978) + ((_1939 * _1938) * _1976);
        _2023 = ((_1957 * cbLight._m0[_1942].y) * _1978) + ((_1940 * _1938) * _1976);
        _2024 = ((_1957 * cbLight._m0[_1942].z) * _1978) + ((_1941 * _1938) * _1976);
    }
    else
    {
        float _1988 = _1935 + _778;
        float _1991 = (_778 * 2.0) + 1.0;
        float _1992 = (isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0))) / _1991;
        float _1999 = _1954 + _778;
        float _2001 = (isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0))) / _1991;
        _2022 = (((_2001 * cbLight._m0[_1942].x) * _1957) + ((_1939 * _1992) * _1938)) * 0.3183098733425140380859375;
        _2023 = (((_2001 * cbLight._m0[_1942].y) * _1957) + ((_1940 * _1992) * _1938)) * 0.3183098733425140380859375;
        _2024 = (((_2001 * cbLight._m0[_1942].z) * _1957) + ((_1941 * _1992) * _1938)) * 0.3183098733425140380859375;
    }
    uint _2028 = _1912 + 8u;
    float _2044 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1912].w)) * _777) * 0.949999988079071044921875);
    float _2045 = _2044 * _2044;
    float _2046 = cbLight._m0[_1912].x + _520;
    float _2047 = cbLight._m0[_1912].y + _521;
    float _2048 = cbLight._m0[_1912].z + _522;
    float _2052 = inversesqrt(dot(vec3(_2046, _2047, _2048), vec3(_2046, _2047, _2048)));
    float _2053 = _2052 * _2046;
    float _2054 = _2052 * _2047;
    float _2055 = _2052 * _2048;
    float _2056 = dot(vec3(_773, _774, _775), vec3(cbLight._m0[_1912].xyz));
    float _3741 = isnan(0.0) ? _2056 : (isnan(_2056) ? 0.0 : max(_2056, 0.0));
    float _2059 = isnan(1.0) ? _3741 : (isnan(_3741) ? 1.0 : min(_3741, 1.0));
    float _3752 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _2060 = isnan(1.0) ? _3752 : (isnan(_3752) ? 1.0 : min(_3752, 1.0));
    float _2061 = dot(vec3(_773, _774, _775), vec3(_2053, _2054, _2055));
    float _3763 = isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : max(_2061, 0.0));
    float _2064 = isnan(1.0) ? _3763 : (isnan(_3763) ? 1.0 : min(_3763, 1.0));
    float _2065 = dot(vec3(cbLight._m0[_1912].xyz), vec3(_2053, _2054, _2055));
    float _3774 = isnan(0.0) ? _2065 : (isnan(_2065) ? 0.0 : max(_2065, 0.0));
    float _2069 = _2045 * _2045;
    float _2073 = ((_2064 * _2064) * (_2069 + (-1.0))) + 1.0;
    float _2084 = (exp2(log2(1.0 - (isnan(1.0) ? _3774 : (isnan(_3774) ? 1.0 : min(_3774, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2085 = 1.0 - _2045;
    float _2096 = (0.5 / (((_2060 * ((_2059 * _2085) + _2045)) + 9.9999999392252902907785028219223e-09) + (((_2060 * _2085) + _2045) * _2059))) * _2059;
    float _3785 = isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0));
    float _2098 = (isnan(1.0) ? _3785 : (isnan(_3785) ? 1.0 : min(_3785, 1.0))) * (_2069 / ((_2073 * _2073) * 3.141590118408203125));
    uint _2114 = _1912 + 9u;
    float _2128 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1948].w)) * _777) * 0.949999988079071044921875);
    float _2129 = _2128 * _2128;
    float _2130 = cbLight._m0[_1948].x + _520;
    float _2131 = cbLight._m0[_1948].y + _521;
    float _2132 = cbLight._m0[_1948].z + _522;
    float _2136 = inversesqrt(dot(vec3(_2130, _2131, _2132), vec3(_2130, _2131, _2132)));
    float _2137 = _2136 * _2130;
    float _2138 = _2136 * _2131;
    float _2139 = _2136 * _2132;
    float _2140 = dot(vec3(_773, _774, _775), vec3(cbLight._m0[_1948].xyz));
    float _3796 = isnan(0.0) ? _2140 : (isnan(_2140) ? 0.0 : max(_2140, 0.0));
    float _2143 = isnan(1.0) ? _3796 : (isnan(_3796) ? 1.0 : min(_3796, 1.0));
    float _2144 = dot(vec3(_773, _774, _775), vec3(_2137, _2138, _2139));
    float _3807 = isnan(0.0) ? _2144 : (isnan(_2144) ? 0.0 : max(_2144, 0.0));
    float _2147 = isnan(1.0) ? _3807 : (isnan(_3807) ? 1.0 : min(_3807, 1.0));
    float _2148 = dot(vec3(cbLight._m0[_1948].xyz), vec3(_2137, _2138, _2139));
    float _3818 = isnan(0.0) ? _2148 : (isnan(_2148) ? 0.0 : max(_2148, 0.0));
    float _2152 = _2129 * _2129;
    float _2156 = ((_2147 * _2147) * (_2152 + (-1.0))) + 1.0;
    float _2165 = (exp2(log2(1.0 - (isnan(1.0) ? _3818 : (isnan(_3818) ? 1.0 : min(_3818, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2166 = 1.0 - _2129;
    float _2176 = (0.5 / (((_2060 * ((_2143 * _2166) + _2129)) + 9.9999999392252902907785028219223e-09) + (((_2060 * _2166) + _2129) * _2143))) * _2143;
    float _3829 = isnan(0.0) ? _2176 : (isnan(_2176) ? 0.0 : max(_2176, 0.0));
    float _2178 = (isnan(1.0) ? _3829 : (isnan(_3829) ? 1.0 : min(_3829, 1.0))) * (_2152 / ((_2156 * _2156) * 3.141590118408203125));
    float _2188 = (((_2165 * cbLight._m0[_2114].x) * _2178) * _1957) + ((((cbLight._m0[_2028].x * _1904) * _2084) * _2098) * _1938);
    float _2189 = (((_2165 * cbLight._m0[_2114].y) * _2178) * _1957) + ((((cbLight._m0[_2028].y * _1905) * _2084) * _2098) * _1938);
    float _2190 = (((_2165 * cbLight._m0[_2114].z) * _2178) * _1957) + ((((cbLight._m0[_2028].z * _1906) * _2084) * _2098) * _1938);
    float _2326;
    float _2328;
    float _2330;
    float _2332;
    float _2334;
    float _2336;
    if (_1910.y == 0u)
    {
        float _2267 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2268 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2267;
        float _2269 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2267;
        float _2270 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2267;
        uvec4 _2282 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2283 = _2282.x;
        uint _2294 = uint((float(_2282.y) * floor(float(uint(cbSceneParam._m0[85u].y * _689) / _2283))) + floor(float(uint(cbSceneParam._m0[85u].x * _688) / _2283)));
        float _2304 = (log2(_2270 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2305 = isnan(0.0) ? _2304 : (isnan(_2304) ? 0.0 : max(_2304, 0.0));
        uint _2308 = uint(isnan(14.0) ? _2305 : (isnan(_2305) ? 14.0 : min(_2305, 14.0)));
        uint _2315 = _2282.z;
        float _2364;
        float _2366;
        float _2368;
        float _2370;
        float _2372;
        float _2374;
        if (((((1u << ((_2315 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2308 << 2u) + (_2294 << 6u)) >> 2u)).x) == 0u) || ((_2315 & 240u) == 0u))
        {
            _2364 = 0.0;
            _2366 = 0.0;
            _2368 = 0.0;
            _2370 = 0.0;
            _2372 = 0.0;
            _2374 = 0.0;
        }
        else
        {
            float _2365;
            float _2367;
            float _2369;
            float _2371;
            float _2373;
            float _2375;
            float _2556 = 0.0;
            float _2557 = 0.0;
            float _2558 = 0.0;
            float _2559 = 0.0;
            float _2560 = 0.0;
            float _2561 = 0.0;
            uint _2562 = 0u;
            uint _2571;
            bool _2572;
            for (;;)
            {
                _2571 = texelFetch(g_lightClassification, int((((_2308 << 5u) + (_2294 << 9u)) + (_2562 << 2u)) >> 2u)).x;
                _2572 = _2571 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2572)
                {
                    frontier_phi_55_pred = _2561;
                    frontier_phi_55_pred_1 = _2560;
                    frontier_phi_55_pred_2 = _2559;
                    frontier_phi_55_pred_3 = _2557;
                    frontier_phi_55_pred_4 = _2556;
                    frontier_phi_55_pred_5 = _2558;
                }
                else
                {
                    float _2769;
                    float _2770;
                    float _2771;
                    float _2772;
                    float _2773;
                    float _2774;
                    uint _2775;
                    _2769 = _2556;
                    _2770 = _2557;
                    _2771 = _2558;
                    _2772 = _2559;
                    _2773 = _2560;
                    _2774 = _2561;
                    _2775 = _2571;
                    float _2717;
                    float _2718;
                    float _2719;
                    float _2720;
                    float _2721;
                    float _2722;
                    for (;;)
                    {
                        uint _2779 = uint(findLSB(_2775)) + (_2562 << 5u);
                        uint _2776 = (_2775 + 4294967295u) & _2775;
                        uint _2781 = _2779 * 48u;
                        vec4 _2795 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2781)).x, texelFetch(g_PointLightRenderingBuffer, int(_2781 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2781 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2781 + 3u)).x));
                        uint _2801 = (_2779 * 48u) + 4u;
                        vec4 _2814 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2801)).x, texelFetch(g_PointLightRenderingBuffer, int(_2801 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2801 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2801 + 3u)).x));
                        float _2815 = _2814.x;
                        float _2816 = _2814.y;
                        float _2817 = _2814.z;
                        uint _2820 = (_2779 * 48u) + 8u;
                        vec3 _2831 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2820)).x, texelFetch(g_PointLightRenderingBuffer, int(_2820 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2820 + 2u)).x));
                        uint _2836 = (_2779 * 48u) + 12u;
                        vec2 _2844 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2836)).x, texelFetch(g_PointLightRenderingBuffer, int(_2836 + 1u)).x));
                        float _2850 = inversesqrt(dot(vec3(_2268, _2269, _2270), vec3(_2268, _2269, _2270)));
                        float _2851 = _2850 * _2268;
                        float _2852 = _2850 * _2269;
                        float _2853 = _2850 * _2270;
                        float _2854 = _2795.x - _2268;
                        float _2855 = _2795.y - _2269;
                        float _2856 = _2795.z - _2270;
                        float _2857 = dot(vec3(_2854, _2855, _2856), vec3(_2854, _2855, _2856));
                        float _2860 = inversesqrt(_2857);
                        float _2861 = _2860 * _2854;
                        float _2862 = _2860 * _2855;
                        float _2863 = _2860 * _2856;
                        float _2864 = dot(vec3(_813, _816, _819), vec3(_2861, _2862, _2863));
                        float _2869 = 1.0 - (_2857 * _2795.w);
                        float _3850 = isnan(0.0) ? _2869 : (isnan(_2869) ? 0.0 : max(_2869, 0.0));
                        float _2870 = isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0));
                        float _2871 = sqrt(_2857) * _2814.w;
                        float _2874 = 1.39999997615814208984375 / (_2871 + 1.39999997615814208984375);
                        float _2875 = _2874 * _2874;
                        float _2876 = 1.0 - _2875;
                        float _2878 = (_2876 * _2876) * _778;
                        float _2881 = ((_2876 * _2864) + _2875) + _2878;
                        float _2886 = _2871 * _2871;
                        float _2891 = ((isnan(0.0) ? _2881 : (isnan(_2881) ? 0.0 : max(_2881, 0.0))) * _2870) / (((_2878 * 2.0) + 1.0) * ((_2886 * 0.699999988079071044921875) + 1.0));
                        float _2895 = dot(vec3(_2861, _2862, _2863), vec3(_2851, _2852, _2853));
                        float _3866 = isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0));
                        float _2902 = dot(vec3((-0.0) - _2851, (-0.0) - _2852, (-0.0) - _2853), vec3(_813, _816, _819)) + 1.0;
                        float _2904 = (isnan(0.0) ? _2902 : (isnan(_2902) ? 0.0 : max(_2902, 0.0))) * 0.5;
                        float _2911 = ((_2904 * _2904) * _2844.x) * exp2((_2844.y * 32.0) * log2(isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0))));
                        float _2913 = _778 / (_778 + 1.0);
                        float _2929 = (-0.0) - _2268;
                        float _2930 = (-0.0) - _2269;
                        float _2931 = (-0.0) - _2270;
                        float _2935 = inversesqrt(dot(vec3(_2929, _2930, _2931), vec3(_2929, _2930, _2931)));
                        float _2936 = _2935 * _2929;
                        float _2937 = _2935 * _2930;
                        float _2938 = _2935 * _2931;
                        float _2946 = exp2(log2(1.0 / ((_2886 * 3.5) + 5.0)) * 0.25);
                        float _2947 = 1.0 - _872;
                        float _2954 = sqrt(1.0 - ((1.0 - (_2947 * _2947)) * (1.0 - (_2946 * _2946))));
                        float _2955 = _2954 * _2954;
                        float _2956 = _2955 * _2955;
                        float _2957 = _2936 + _2861;
                        float _2958 = _2937 + _2862;
                        float _2959 = _2938 + _2863;
                        float _2963 = inversesqrt(dot(vec3(_2957, _2958, _2959), vec3(_2957, _2958, _2959)));
                        float _2967 = dot(vec3(_813, _816, _819), vec3(_2936, _2937, _2938));
                        float _3882 = isnan(0.0) ? _2967 : (isnan(_2967) ? 0.0 : max(_2967, 0.0));
                        float _2970 = isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0));
                        float _2971 = dot(vec3(_813, _816, _819), vec3(_2963 * _2957, _2963 * _2958, _2963 * _2959));
                        float _3893 = isnan(0.0) ? _2971 : (isnan(_2971) ? 0.0 : max(_2971, 0.0));
                        float _2974 = isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0));
                        float _2978 = ((_2974 * _2974) * (_2956 + (-1.0))) + 1.0;
                        float _2979 = _2874 * _2955;
                        float _2980 = _2979 * _2979;
                        float _2983 = ((1.0 - _2980) * _2864) + _2980;
                        float _3904 = isnan(0.0) ? _2983 : (isnan(_2983) ? 0.0 : max(_2983, 0.0));
                        float _2984 = isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0));
                        float _2985 = 1.0 - _2955;
                        float _2995 = (0.5 / (((_2984 * ((_2970 * _2985) + _2955)) + 9.9999999392252902907785028219223e-09) + (((_2984 * _2985) + _2955) * _2970))) * _2984;
                        float _3915 = isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : max(_2995, 0.0));
                        float _3006 = (((_2956 * 3.1415927410125732421875) * (isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0)))) / ((_2978 * _2978) * ((_2886 * 2.1991131305694580078125) + 3.141590118408203125))) * _2870;
                        _2720 = (((((_2815 * 0.3183098733425140380859375) * _2913) * _2911) + _2815) * _2891) + _2772;
                        _2721 = (((((_2816 * 0.3183098733425140380859375) * _2913) * _2911) + _2816) * _2891) + _2773;
                        _2722 = (((((_2817 * 0.3183098733425140380859375) * _2913) * _2911) + _2817) * _2891) + _2774;
                        _2717 = (_3006 * _2831.x) + _2769;
                        _2718 = (_3006 * _2831.y) + _2770;
                        _2719 = (_3006 * _2831.z) + _2771;
                        if (_2776 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2769 = _2717;
                            _2770 = _2718;
                            _2771 = _2719;
                            _2772 = _2720;
                            _2773 = _2721;
                            _2774 = _2722;
                            _2775 = _2776;
                        }
                    }
                    frontier_phi_55_pred = _2722;
                    frontier_phi_55_pred_1 = _2721;
                    frontier_phi_55_pred_2 = _2720;
                    frontier_phi_55_pred_3 = _2718;
                    frontier_phi_55_pred_4 = _2717;
                    frontier_phi_55_pred_5 = _2719;
                }
                _2375 = frontier_phi_55_pred;
                _2373 = frontier_phi_55_pred_1;
                _2371 = frontier_phi_55_pred_2;
                _2367 = frontier_phi_55_pred_3;
                _2365 = frontier_phi_55_pred_4;
                _2369 = frontier_phi_55_pred_5;
                uint _2563 = _2562 + 1u;
                if (_2563 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2556 = _2365;
                    _2557 = _2367;
                    _2558 = _2369;
                    _2559 = _2371;
                    _2560 = _2373;
                    _2561 = _2375;
                    _2562 = _2563;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2364 = _2365;
            _2366 = _2367;
            _2368 = _2369;
            _2370 = _2371;
            _2372 = _2373;
            _2374 = _2375;
        }
        float _2379 = isnan(1.0) ? _851 : (isnan(_851) ? 1.0 : min(_851, 1.0));
        _2326 = (_2379 * _2370) + _2022;
        _2328 = (_2379 * _2372) + _2023;
        _2330 = (_2379 * _2374) + _2024;
        _2332 = ((_2364 * 0.039999999105930328369140625) * _2379) + _2188;
        _2334 = ((_2366 * 0.039999999105930328369140625) * _2379) + _2189;
        _2336 = ((_2368 * 0.039999999105930328369140625) * _2379) + _2190;
    }
    else
    {
        _2326 = _2022;
        _2328 = _2023;
        _2330 = _2024;
        _2332 = _2188;
        _2334 = _2189;
        _2336 = _2190;
    }
    float _2453;
    float _2454;
    float _2455;
    if (_778 > 0.0)
    {
        uint _2386 = _1912 + 4u;
        float _2392 = (-0.0) - _520;
        float _2393 = (-0.0) - _521;
        float _2394 = (-0.0) - _522;
        float _2395 = dot(vec3(cbLight._m0[_1912].xyz), vec3(_2392, _2393, _2394));
        float _3931 = isnan(0.0) ? _2395 : (isnan(_2395) ? 0.0 : max(_2395, 0.0));
        float _2399 = _862 + 1.0;
        float _2401 = (isnan(0.0) ? _2399 : (isnan(_2399) ? 0.0 : max(_2399, 0.0))) * 0.5;
        float _2406 = _2401 * _2401;
        float _2407 = _2406 * exp2(log2(isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0))) * 32.0);
        float _2409 = _778 / (_778 + 1.0);
        float _2410 = isnan(_1921) ? 1.0 : (isnan(1.0) ? _1921 : min(1.0, _1921));
        uint _2423 = _1912 + 5u;
        float _2429 = dot(vec3(cbLight._m0[_1948].xyz), vec3(_2392, _2393, _2394));
        float _3952 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
        float _2436 = _2406 * exp2(log2(isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0))) * 32.0);
        float _2437 = isnan(_1922) ? 1.0 : (isnan(1.0) ? _1922 : min(1.0, _1922));
        _2453 = ((((_2436 * cbLight._m0[_2423].x) * _2409) * _2437) + ((((cbLight._m0[_2386].x * _1904) * _2407) * _2409) * _2410)) * 0.3183098733425140380859375;
        _2454 = ((((_2436 * cbLight._m0[_2423].y) * _2409) * _2437) + ((((cbLight._m0[_2386].y * _1905) * _2407) * _2409) * _2410)) * 0.3183098733425140380859375;
        _2455 = ((((_2436 * cbLight._m0[_2423].z) * _2409) * _2437) + ((((cbLight._m0[_2386].z * _1906) * _2407) * _2409) * _2410)) * 0.3183098733425140380859375;
    }
    else
    {
        _2453 = 0.0;
        _2454 = 0.0;
        _2455 = 0.0;
    }
    float _3968 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _3979 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    float _3990 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _4001 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    float _2470 = (isnan(1.0) ? _3968 : (isnan(_3968) ? 1.0 : min(_3968, 1.0))) * ((_2326 + ((isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0))) * _851)) + _2453);
    float _2471 = (isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0))) * ((_2328 + ((isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0))) * _851)) + _2454);
    float _2472 = (isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0))) * ((_2330 + ((isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0))) * _851)) + _2455);
    float _2476 = 0.959999978542327880859375 - (exp2(log2(1.0 - _866) * 5.0) * 0.959999978542327880859375);
    float _2501 = _688 / cbSceneParam._m0[86u].x;
    float _2502 = _689 / cbSceneParam._m0[86u].y;
    vec4 _2516 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2501, _2502, (log2((isnan(cbSceneParam._m0[77u].w) ? _795 : (isnan(_795) ? cbSceneParam._m0[77u].w : min(_795, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2518 = _2516.x;
    float _2519 = _2516.y;
    float _2520 = _2516.z;
    float _2521 = _2516.w;
    float _2614;
    float _2616;
    float _2618;
    float _2620;
    if (_795 > cbSceneParam._m0[78u].w)
    {
        float _2577 = isnan(_795) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _795 : min(cbSceneParam._m0[80u].w, _795));
        float _2578 = _2577 / _795;
        float _2589 = _2578 * _300;
        float _2590 = _301 * _2578;
        float _2591 = (-0.0) - _2590;
        float _2592 = _2578 * _302;
        float _2594 = (cbSceneParam._m0[77u].w * _2591) / _2577;
        float _2595 = _2594 + cbSceneParam._m0[79u].w;
        float _2596 = cbSceneParam._m0[79u].w - _2590;
        float _2602 = sqrt(((_2589 * _2589) + (_2590 * _2590)) + (_2592 * _2592));
        float _2605 = (1.0 - (cbSceneParam._m0[77u].w / _2577)) * _2602;
        float _2610 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2612 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3011;
        if (abs((_2591 - _2594) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3011 = ((((_2595 > 0.0) ? exp2(_2610 * _2595) : (2.0 - exp2(_2612 * _2595))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2605;
        }
        else
        {
            float _2742 = 1.0 / cbSceneParam._m0[80u].x;
            float _2743 = isnan(_2596) ? _2595 : (isnan(_2595) ? _2596 : max(_2595, _2596));
            float _2744 = isnan(_2596) ? _2595 : (isnan(_2595) ? _2596 : min(_2595, _2596));
            float _2753 = isnan(0.0) ? _2743 : (isnan(_2743) ? 0.0 : min(_2743, 0.0));
            float _2754 = isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : min(_2744, 0.0));
            _3011 = ((abs(_2602 / _2591) * cbSceneParam._m0[80u].y) * ((((_2753 - _2754) * 2.0) - ((exp2(_2610 * (isnan(0.0) ? _2743 : (isnan(_2743) ? 0.0 : max(_2743, 0.0)))) - exp2(_2610 * (isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : max(_2744, 0.0))))) * _2742)) - ((exp2(_2612 * _2753) - exp2(_2612 * _2754)) * _2742))) + (_2605 * cbSceneParam._m0[80u].z);
        }
        vec4 _3013 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2501, _2502, 1.0), 0.0);
        float _3022 = exp2((_3011 * (-1.44269502162933349609375)) * (1.0 - _3013.w));
        float _3023 = log2(_3022);
        float _3039 = log2(_2521);
        _2614 = (exp2(_3039 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3023 * cbSceneParam._m0[78u].x)) * _3013.x) / cbSceneParam._m0[78u].x)) + _2518;
        _2616 = (exp2(_3039 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3023 * cbSceneParam._m0[78u].y)) * _3013.y) / cbSceneParam._m0[78u].y)) + _2519;
        _2618 = (exp2(_3039 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3023 * cbSceneParam._m0[78u].z)) * _3013.z) / cbSceneParam._m0[78u].z)) + _2520;
        _2620 = _3022 * _2521;
    }
    else
    {
        _2614 = _2518;
        _2616 = _2519;
        _2618 = _2520;
        _2620 = _2521;
    }
    bool _2632 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2633 = log2(_2620);
    float _2640 = exp2(_2633 * cbSceneParam._m0[78u].x) * ((_2470 + ((_2332 + ((isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0))) * _1662)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _712.x) * _2476) - _2470) * _758));
    float _2641 = exp2(_2633 * cbSceneParam._m0[78u].y) * ((_2471 + ((_2334 + ((isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0))) * _1662)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _712.y) * _2476) - _2471) * _758));
    float _2642 = exp2(_2633 * cbSceneParam._m0[78u].z) * ((_2472 + ((_2336 + ((isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0))) * _1662)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _712.z) * _2476) - _2472) * _758));
    vec4 _2650 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_688, _689));
    float _2652 = _2650.x;
    float _2673 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2652)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2652))) - _795) * cbMtdParam._m0[17u].y;
    float _4052 = isnan(0.0) ? _2673 : (isnan(_2673) ? 0.0 : max(_2673, 0.0));
    float _2675 = (cbInstanceData._m0[_308 + 6u].w * (isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0)))) * (isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0)));
    float _2684 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2684 * (_2632 ? _2640 : (_2640 + (cbSceneParam._m0[72u].w * _2614)));
    SV_Target.y = _2684 * (_2632 ? _2641 : (_2641 + (cbSceneParam._m0[72u].w * _2616)));
    SV_Target.z = _2684 * (_2632 ? _2642 : (_2642 + (cbSceneParam._m0[72u].w * _2618)));
    SV_Target.w = _2675;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2675;
}


