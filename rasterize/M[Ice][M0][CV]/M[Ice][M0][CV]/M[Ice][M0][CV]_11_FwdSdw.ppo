#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1094;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _202 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _203 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _204 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _210 = inversesqrt(dot(vec3(_202, _203, _204), vec3(_202, _203, _204)));
    float _211 = _210 * _202;
    float _212 = _210 * _203;
    float _213 = _210 * _204;
    float _217 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _218 = _217 * NORMAL.x;
    float _219 = _217 * NORMAL.y;
    float _220 = _217 * NORMAL.z;
    float _224 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _225 = _224 * TANGENT.x;
    float _226 = _224 * TANGENT.y;
    float _227 = _224 * TANGENT.z;
    float _232;
    float _233;
    float _234;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _232 = (-0.0) - _218;
        _233 = (-0.0) - _219;
        _234 = (-0.0) - _220;
    }
    else
    {
        _232 = _218;
        _233 = _219;
        _234 = _220;
    }
    float _279 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _289 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _279);
    float _290 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _279);
    float _291 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _279);
    vec4 _305 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _314 = (_305.x * 2.0) + (-1.0);
    float _316 = (_305.y * 2.0) + (-1.0);
    float _317 = dot(vec2(_314, _316), vec2(_314, _316));
    float _3267 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _323 = sqrt(1.0 - (isnan(1.0) ? _3267 : (isnan(_3267) ? 1.0 : min(_3267, 1.0))));
    float _326 = fma(_323, _232, fma(_316, _225, _314 * _211));
    float _329 = fma(_323, _233, fma(_316, _226, _314 * _212));
    float _332 = fma(_323, _234, fma(_316, _227, _314 * _213));
    float _336 = inversesqrt(dot(vec3(_326, _329, _332), vec3(_326, _329, _332)));
    vec4 _350 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _355 = _350.w;
    float _367 = dot(vec3(_289, _290, _291), vec3(_211, _212, _213));
    float _370 = dot(vec3(_289, _290, _291), vec3(_225, _226, _227));
    float _373 = dot(vec3(_289, _290, _291), vec3(_232, _233, _234));
    float _379 = inversesqrt(dot(vec3(_367, _370, _373), vec3(_367, _370, _373)));
    float _401 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _421 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_367 * cbMtdParam._m0[14u].x) * _379) * _401) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_370 * cbMtdParam._m0[14u].x) * _379) * _401) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _445 = inversesqrt(dot(vec3(_289, _290, _291), vec3(_289, _290, _291)));
    float _446 = _445 * _289;
    float _447 = _445 * _290;
    float _448 = _445 * _291;
    float _449 = dot(vec4(_446, _447, _448, 0.0), vec4(_232, _233, _234, 0.0));
    float _452 = _449 - cbMtdParam._m0[15u].z;
    float _3278 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _459 = exp2(log2(1.0 - (isnan(1.0) ? _3278 : (isnan(_3278) ? 1.0 : min(_3278, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _474 = ((((_350.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _421.x) * cbMtdParam._m0[9u].x) * ((_459 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _479 = ((((_350.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _421.y) * cbMtdParam._m0[9u].y) * ((_459 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _484 = ((((_350.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _421.z) * cbMtdParam._m0[9u].z) * ((_459 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    vec4 _500 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _512 = cbMtdParam._m0[17u].z + _305.z;
    float _518 = (_512 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_500.z - _512));
    float _524 = ((((_500.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _314;
    float _525 = ((((_500.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _316;
    vec4 _537 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _541 = cbMtdParam._m0[16u].w * _537.x;
    float _553 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _554 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _564 = cbSceneParam._m0[86u].x * ((_553 / cbSceneParam._m0[86u].x) + ((_336 * _326) * cbMtdParam._m0[18u].y));
    float _565 = cbSceneParam._m0[86u].y * ((_554 / cbSceneParam._m0[86u].y) + ((_336 * _329) * cbMtdParam._m0[18u].y));
    float _572 = isnan(cbInstanceData._m0[8u].x) ? _564 : (isnan(_564) ? cbInstanceData._m0[8u].x : max(_564, cbInstanceData._m0[8u].x));
    float _573 = isnan(cbInstanceData._m0[8u].y) ? _565 : (isnan(_565) ? cbInstanceData._m0[8u].y : max(_565, cbInstanceData._m0[8u].y));
    vec4 _577 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _572 : (isnan(_572) ? cbInstanceData._m0[8u].z : min(_572, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _573 : (isnan(_573) ? cbInstanceData._m0[8u].w : min(_573, cbInstanceData._m0[8u].w))));
    float _610 = _449 - cbMtdParam._m0[15u].x;
    float _3314 = isnan(0.0) ? _610 : (isnan(_610) ? 0.0 : max(_610, 0.0));
    float _620 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3314 : (isnan(_3314) ? 1.0 : min(_3314, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3330 = isnan(0.0) ? _620 : (isnan(_620) ? 0.0 : max(_620, 0.0));
    float _621 = isnan(1.0) ? _3330 : (isnan(_3330) ? 1.0 : min(_3330, 1.0));
    float _625 = fma(_323, _232, fma(_525, _225, _524 * _211));
    float _628 = fma(_323, _233, fma(_525, _226, _524 * _212));
    float _631 = fma(_323, _234, fma(_525, _227, _524 * _213));
    float _635 = inversesqrt(dot(vec3(_625, _628, _631), vec3(_625, _628, _631)));
    float _636 = _635 * _625;
    float _637 = _635 * _628;
    float _638 = _635 * _631;
    float _3341 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _639 = isnan(1.0) ? _3341 : (isnan(_3341) ? 1.0 : min(_3341, 1.0));
    float _3352 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _640 = isnan(1.0) ? _3352 : (isnan(_3352) ? 1.0 : min(_3352, 1.0));
    float _641 = isnan(0.0) ? _541 : (isnan(_541) ? 0.0 : max(_541, 0.0));
    float _3368 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _3379 = isnan(0.0) ? _479 : (isnan(_479) ? 0.0 : max(_479, 0.0));
    float _3390 = isnan(0.0) ? _484 : (isnan(_484) ? 0.0 : max(_484, 0.0));
    float _660 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _679 = fma(_638, cbSceneParam._m0[5u].z, fma(_637, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _636));
    float _682 = fma(_638, cbSceneParam._m0[6u].z, fma(_637, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _636));
    float _685 = fma(_638, cbSceneParam._m0[7u].z, fma(_637, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _636));
    uint _698 = uint(roundEven(NORMAL.w)) * 13u;
    uint _700 = (_698 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _706 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3368 : (isnan(_3368) ? 1.0 : min(_3368, 1.0)))) * cbInstanceData._m0[_700].x;
    float _707 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3379 : (isnan(_3379) ? 1.0 : min(_3379, 1.0)))) * cbInstanceData._m0[_700].y;
    float _708 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3390 : (isnan(_3390) ? 1.0 : min(_3390, 1.0)))) * cbInstanceData._m0[_700].z;
    float _3401 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _709 = isnan(1.0) ? _3401 : (isnan(_3401) ? 1.0 : min(_3401, 1.0));
    float _3412 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _710 = isnan(1.0) ? _3412 : (isnan(_3412) ? 1.0 : min(_3412, 1.0));
    float _3423 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _711 = isnan(1.0) ? _3423 : (isnan(_3423) ? 1.0 : min(_3423, 1.0));
    vec4 _715 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _553, cbSceneParam._m0[86u].y * _554));
    float _718 = _715.x * TEXCOORD_5.w;
    float _719 = dot(vec3(_636, _637, _638), vec3(_446, _447, _448));
    float _722 = _719 * 2.0;
    float _726 = (_722 * _636) - _446;
    float _727 = (_722 * _637) - _447;
    float _728 = (_722 * _638) - _448;
    float _729 = dot(vec3(_446, _447, _448), vec3(_636, _637, _638));
    float _732 = abs(_729);
    float _3434 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
    float _733 = isnan(1.0) ? _3434 : (isnan(_3434) ? 1.0 : min(_3434, 1.0));
    float _739 = sqrt(_640);
    float _751 = exp2((_739 * 5.0) * log2(1.0 - (_733 * 0.999000012874603271484375))) / (4.0 - (_739 * 3.0));
    float _783 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _787 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _791 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1093;
    float _1095;
    float _1096;
    float _1097;
    float _1098;
    float _1099;
    float _1100;
    float _1101;
    float _1102;
    float _1103;
    float _1104;
    float _1105;
    float _1106;
    float _1107;
    float _1108;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _818 = fma(_791, cbModelParam._m0[26u].z, fma(_787, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _783));
        float _822 = fma(_791, cbModelParam._m0[27u].z, fma(_787, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _783));
        float _826 = fma(_791, cbModelParam._m0[28u].z, fma(_787, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _783));
        float _851 = _783 + _636;
        float _852 = _787 + _637;
        float _853 = _791 + _638;
        float _863 = fma(_853, cbModelParam._m0[26u].z, fma(_852, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _851)) - _818;
        float _864 = fma(_853, cbModelParam._m0[27u].z, fma(_852, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _851)) - _822;
        float _865 = fma(_853, cbModelParam._m0[28u].z, fma(_852, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _851)) - _826;
        float _869 = inversesqrt(dot(vec3(_863, _864, _865), vec3(_863, _864, _865)));
        float _882 = ((_869 * _863) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_818 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _883 = ((_869 * _864) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_822 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _884 = ((_869 * _865) / cbModelParam._m0[34u].z) + ((((((_826 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _887 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_882, _883, _884), 0.0);
        vec4 _894 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_882, _883, _884), 0.0);
        vec4 _901 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_882, _883, _884), 0.0);
        vec4 _908 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_882, _883, _884), 0.0);
        float _921 = exp2((_887.w + (-0.5)) * 20.0) * 2.0;
        float _922 = _921 * (_887.x + (-0.5));
        float _923 = _921 * (_887.y + (-0.5));
        float _924 = _921 * (_887.z + (-0.5));
        float _931 = exp2((_894.w + (-0.5)) * 20.0) * 2.0;
        float _932 = _931 * (_894.x + (-0.5));
        float _933 = _931 * (_894.y + (-0.5));
        float _934 = _931 * (_894.z + (-0.5));
        float _941 = exp2((_901.w + (-0.5)) * 20.0) * 2.0;
        float _942 = _941 * (_901.x + (-0.5));
        float _943 = _941 * (_901.y + (-0.5));
        float _944 = _941 * (_901.z + (-0.5));
        float _951 = exp2((_908.w + (-0.5)) * 20.0) * 2.0;
        float _952 = _951 * (_908.x + (-0.5));
        float _953 = _951 * (_908.y + (-0.5));
        float _954 = _951 * (_908.z + (-0.5));
        float _955 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
        float _956 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
        float _957 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
        float _958 = _922 * 0.5;
        float _959 = _932 * 0.5;
        float _960 = _942 * 0.5;
        float _961 = dot(vec3(_958, _959, _960), vec3(_958, _959, _960));
        float _966 = (_961 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_961);
        float _975 = (dot(vec3(_636, _637, _638), vec3(_966 * _958, _966 * _959, _966 * _960)) + 1.0) * 0.5;
        float _3460 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
        float _985 = sqrt(((_959 * _959) + (_958 * _958)) + (_960 * _960)) / (_955 + 9.9999997473787516355514526367188e-06);
        float _3471 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
        float _986 = isnan(1.0) ? _3471 : (isnan(_3471) ? 1.0 : min(_3471, 1.0));
        float _987 = _986 * 2.0;
        float _991 = (1.0 - _986) / (_986 + 1.0);
        float _3482 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
        float _992 = isnan(1.0) ? _3482 : (isnan(_3482) ? 1.0 : min(_3482, 1.0));
        float _1001 = ((((1.0 - _992) * (_987 + 2.0)) * exp2(log2(isnan(1.0) ? _3460 : (isnan(_3460) ? 1.0 : min(_3460, 1.0))) * (_987 + 1.0))) + _992) * _955;
        float _1002 = _923 * 0.5;
        float _1003 = _933 * 0.5;
        float _1004 = _943 * 0.5;
        float _1005 = dot(vec3(_1002, _1003, _1004), vec3(_1002, _1003, _1004));
        float _1010 = (_1005 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1005);
        float _1018 = (dot(vec3(_636, _637, _638), vec3(_1010 * _1002, _1010 * _1003, _1010 * _1004)) + 1.0) * 0.5;
        float _3493 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
        float _1027 = sqrt(((_1003 * _1003) + (_1002 * _1002)) + (_1004 * _1004)) / (_956 + 9.9999997473787516355514526367188e-06);
        float _3504 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
        float _1028 = isnan(1.0) ? _3504 : (isnan(_3504) ? 1.0 : min(_3504, 1.0));
        float _1029 = _1028 * 2.0;
        float _1033 = (1.0 - _1028) / (_1028 + 1.0);
        float _3515 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
        float _1034 = isnan(1.0) ? _3515 : (isnan(_3515) ? 1.0 : min(_3515, 1.0));
        float _1043 = ((((1.0 - _1034) * (_1029 + 2.0)) * exp2(log2(isnan(1.0) ? _3493 : (isnan(_3493) ? 1.0 : min(_3493, 1.0))) * (_1029 + 1.0))) + _1034) * _956;
        float _1044 = _924 * 0.5;
        float _1045 = _934 * 0.5;
        float _1046 = _944 * 0.5;
        float _1047 = dot(vec3(_1044, _1045, _1046), vec3(_1044, _1045, _1046));
        float _1052 = (_1047 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1047);
        float _1060 = (dot(vec3(_636, _637, _638), vec3(_1052 * _1044, _1052 * _1045, _1052 * _1046)) + 1.0) * 0.5;
        float _3526 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
        float _1069 = sqrt(((_1045 * _1045) + (_1044 * _1044)) + (_1046 * _1046)) / (_957 + 9.9999997473787516355514526367188e-06);
        float _3537 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
        float _1070 = isnan(1.0) ? _3537 : (isnan(_3537) ? 1.0 : min(_3537, 1.0));
        float _1071 = _1070 * 2.0;
        float _1075 = (1.0 - _1070) / (_1070 + 1.0);
        float _3548 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
        float _1076 = isnan(1.0) ? _3548 : (isnan(_3548) ? 1.0 : min(_3548, 1.0));
        float _1085 = ((((1.0 - _1076) * (_1071 + 2.0)) * exp2(log2(isnan(1.0) ? _3526 : (isnan(_3526) ? 1.0 : min(_3526, 1.0))) * (_1071 + 1.0))) + _1076) * _957;
        _1093 = _924;
        _1095 = _923;
        _1096 = _922;
        _1097 = _934;
        _1098 = _933;
        _1099 = _932;
        _1100 = _944;
        _1101 = _943;
        _1102 = _942;
        _1103 = _957;
        _1104 = _956;
        _1105 = _955;
        _1106 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0)));
        _1107 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0)));
        _1108 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0)));
    }
    else
    {
        _1093 = _1094;
        _1095 = _1094;
        _1096 = _1094;
        _1097 = _1094;
        _1098 = _1094;
        _1099 = _1094;
        _1100 = _1094;
        _1101 = _1094;
        _1102 = _1094;
        _1103 = _1094;
        _1104 = _1094;
        _1105 = _1094;
        _1106 = 0.0;
        _1107 = 0.0;
        _1108 = 0.0;
    }
    float _1403;
    float _1404;
    float _1405;
    float _1406;
    float _1407;
    float _1408;
    float _1409;
    float _1410;
    float _1411;
    float _1412;
    float _1413;
    float _1414;
    float _1415;
    float _1416;
    float _1417;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1134 = fma(_791, cbModelParam._m0[30u].z, fma(_787, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _783));
        float _1138 = fma(_791, cbModelParam._m0[31u].z, fma(_787, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _783));
        float _1142 = fma(_791, cbModelParam._m0[32u].z, fma(_787, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _783));
        float _1165 = _783 + _636;
        float _1166 = _787 + _637;
        float _1167 = _791 + _638;
        float _1177 = fma(_1167, cbModelParam._m0[30u].z, fma(_1166, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1165)) - _1134;
        float _1178 = fma(_1167, cbModelParam._m0[31u].z, fma(_1166, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1165)) - _1138;
        float _1179 = fma(_1167, cbModelParam._m0[32u].z, fma(_1166, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1165)) - _1142;
        float _1183 = inversesqrt(dot(vec3(_1177, _1178, _1179), vec3(_1177, _1178, _1179)));
        float _1196 = ((_1183 * _1177) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1134 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1197 = ((_1183 * _1178) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1138 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1198 = ((_1183 * _1179) / cbModelParam._m0[35u].z) + ((((((_1142 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1200 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1196, _1197, _1198), 0.0);
        vec4 _1207 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1196, _1197, _1198), 0.0);
        vec4 _1214 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1196, _1197, _1198), 0.0);
        vec4 _1221 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1196, _1197, _1198), 0.0);
        float _1233 = exp2((_1200.w + (-0.5)) * 20.0) * 2.0;
        float _1234 = _1233 * (_1200.x + (-0.5));
        float _1235 = _1233 * (_1200.y + (-0.5));
        float _1236 = _1233 * (_1200.z + (-0.5));
        float _1243 = exp2((_1207.w + (-0.5)) * 20.0) * 2.0;
        float _1244 = _1243 * (_1207.x + (-0.5));
        float _1245 = _1243 * (_1207.y + (-0.5));
        float _1246 = _1243 * (_1207.z + (-0.5));
        float _1253 = exp2((_1214.w + (-0.5)) * 20.0) * 2.0;
        float _1254 = _1253 * (_1214.x + (-0.5));
        float _1255 = _1253 * (_1214.y + (-0.5));
        float _1256 = _1253 * (_1214.z + (-0.5));
        float _1263 = exp2((_1221.w + (-0.5)) * 20.0) * 2.0;
        float _1264 = _1263 * (_1221.x + (-0.5));
        float _1265 = _1263 * (_1221.y + (-0.5));
        float _1266 = _1263 * (_1221.z + (-0.5));
        float _1267 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
        float _1268 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1269 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
        float _1270 = _1234 * 0.5;
        float _1271 = _1244 * 0.5;
        float _1272 = _1254 * 0.5;
        float _1273 = dot(vec3(_1270, _1271, _1272), vec3(_1270, _1271, _1272));
        float _1278 = (_1273 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1273);
        float _1286 = (dot(vec3(_636, _637, _638), vec3(_1278 * _1270, _1278 * _1271, _1278 * _1272)) + 1.0) * 0.5;
        float _3589 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
        float _1295 = sqrt(((_1271 * _1271) + (_1270 * _1270)) + (_1272 * _1272)) / (_1267 + 9.9999997473787516355514526367188e-06);
        float _3600 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
        float _1296 = isnan(1.0) ? _3600 : (isnan(_3600) ? 1.0 : min(_3600, 1.0));
        float _1297 = _1296 * 2.0;
        float _1301 = (1.0 - _1296) / (_1296 + 1.0);
        float _3611 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
        float _1302 = isnan(1.0) ? _3611 : (isnan(_3611) ? 1.0 : min(_3611, 1.0));
        float _1311 = ((((1.0 - _1302) * (_1297 + 2.0)) * exp2(log2(isnan(1.0) ? _3589 : (isnan(_3589) ? 1.0 : min(_3589, 1.0))) * (_1297 + 1.0))) + _1302) * _1267;
        float _1312 = _1235 * 0.5;
        float _1313 = _1245 * 0.5;
        float _1314 = _1255 * 0.5;
        float _1315 = dot(vec3(_1312, _1313, _1314), vec3(_1312, _1313, _1314));
        float _1320 = (_1315 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1315);
        float _1328 = (dot(vec3(_636, _637, _638), vec3(_1320 * _1312, _1320 * _1313, _1320 * _1314)) + 1.0) * 0.5;
        float _3622 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1337 = sqrt(((_1313 * _1313) + (_1312 * _1312)) + (_1314 * _1314)) / (_1268 + 9.9999997473787516355514526367188e-06);
        float _3633 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
        float _1338 = isnan(1.0) ? _3633 : (isnan(_3633) ? 1.0 : min(_3633, 1.0));
        float _1339 = _1338 * 2.0;
        float _1343 = (1.0 - _1338) / (_1338 + 1.0);
        float _3644 = isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0));
        float _1344 = isnan(1.0) ? _3644 : (isnan(_3644) ? 1.0 : min(_3644, 1.0));
        float _1353 = ((((1.0 - _1344) * (_1339 + 2.0)) * exp2(log2(isnan(1.0) ? _3622 : (isnan(_3622) ? 1.0 : min(_3622, 1.0))) * (_1339 + 1.0))) + _1344) * _1268;
        float _1354 = _1236 * 0.5;
        float _1355 = _1246 * 0.5;
        float _1356 = _1256 * 0.5;
        float _1357 = dot(vec3(_1354, _1355, _1356), vec3(_1354, _1355, _1356));
        float _1362 = (_1357 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1357);
        float _1370 = (dot(vec3(_636, _637, _638), vec3(_1362 * _1354, _1362 * _1355, _1362 * _1356)) + 1.0) * 0.5;
        float _3655 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1379 = sqrt(((_1355 * _1355) + (_1354 * _1354)) + (_1356 * _1356)) / (_1269 + 9.9999997473787516355514526367188e-06);
        float _3666 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1380 = isnan(1.0) ? _3666 : (isnan(_3666) ? 1.0 : min(_3666, 1.0));
        float _1381 = _1380 * 2.0;
        float _1385 = (1.0 - _1380) / (_1380 + 1.0);
        float _3677 = isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0));
        float _1386 = isnan(1.0) ? _3677 : (isnan(_3677) ? 1.0 : min(_3677, 1.0));
        float _1395 = ((((1.0 - _1386) * (_1381 + 2.0)) * exp2(log2(isnan(1.0) ? _3655 : (isnan(_3655) ? 1.0 : min(_3655, 1.0))) * (_1381 + 1.0))) + _1386) * _1269;
        _1403 = _1236;
        _1404 = _1235;
        _1405 = _1234;
        _1406 = _1246;
        _1407 = _1245;
        _1408 = _1244;
        _1409 = _1256;
        _1410 = _1255;
        _1411 = _1254;
        _1412 = _1269;
        _1413 = _1268;
        _1414 = _1267;
        _1415 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0)));
        _1416 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0)));
        _1417 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0)));
    }
    else
    {
        _1403 = _1094;
        _1404 = _1094;
        _1405 = _1094;
        _1406 = _1094;
        _1407 = _1094;
        _1408 = _1094;
        _1409 = _1094;
        _1410 = _1094;
        _1411 = _1094;
        _1412 = _1094;
        _1413 = _1094;
        _1414 = _1094;
        _1415 = 0.0;
        _1416 = 0.0;
        _1417 = 0.0;
    }
    float _1427 = (cbModelParam._m0[1u].x * (_1415 - _1106)) + _1106;
    float _1428 = (cbModelParam._m0[1u].x * (_1416 - _1107)) + _1107;
    float _1429 = (cbModelParam._m0[1u].x * (_1417 - _1108)) + _1108;
    float _1450 = fma(_1429, cbSceneParam._m0[89u].z, fma(_1428, cbSceneParam._m0[89u].y, _1427 * cbSceneParam._m0[89u].x));
    float _1453 = fma(_1429, cbSceneParam._m0[90u].z, fma(_1428, cbSceneParam._m0[90u].y, _1427 * cbSceneParam._m0[90u].x));
    float _1456 = fma(_1429, cbSceneParam._m0[91u].z, fma(_1428, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1427));
    float _1471 = _726 * 0.5;
    float _1472 = _727 * 0.5;
    float _1473 = _728 * 0.5;
    float _1474 = dot(vec4(_1471, _1472, _1473, 1.0), vec4(_1405, _1408, _1411, _1414));
    float _1477 = dot(vec4(_1471, _1472, _1473, 1.0), vec4(_1404, _1407, _1410, _1413));
    float _1480 = dot(vec4(_1471, _1472, _1473, 1.0), vec4(_1403, _1406, _1409, _1412));
    float _1514;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1487 = dot(vec4(_1471, _1472, _1473, 1.0), vec4(_1093, _1097, _1100, _1103));
        float _1491 = dot(vec4(_1471, _1472, _1473, 1.0), vec4(_1095, _1098, _1101, _1104));
        float _1495 = dot(vec4(_1471, _1472, _1473, 1.0), vec4(_1096, _1099, _1102, _1105));
        float _1502 = dot(vec4(cbModelParam._m0[39u]), vec4(_1471, _1472, _1473, 1.0));
        _1514 = dot(vec3(isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0)), isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0)), isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1502) ? 0.0 : (isnan(0.0) ? _1502 : max(0.0, _1502))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1514 = 1.0;
    }
    float _1525;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1516 = dot(vec4(cbModelParam._m0[40u]), vec4(_1471, _1472, _1473, 1.0));
        _1525 = dot(vec3(isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0)), isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0)), isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1516) ? 0.0 : (isnan(0.0) ? _1516 : max(0.0, _1516))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1525 = 1.0;
    }
    float _1529 = (_1525 * cbModelParam._m0[1u].x) + (_1514 * (1.0 - cbModelParam._m0[1u].x));
    float _1539 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _640);
    float _1540 = isnan(_1539) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1539 : min(cbModelParam._m0[25u].z, _1539));
    float _1620;
    float _1622;
    float _1624;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1587 = fma(_791, cbModelParam._m0[13u].z, fma(_787, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _783)) + cbModelParam._m0[13u].w;
        float _1591 = fma(_791, cbModelParam._m0[14u].z, fma(_787, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _783)) + cbModelParam._m0[14u].w;
        float _1595 = fma(_791, cbModelParam._m0[15u].z, fma(_787, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _783)) + cbModelParam._m0[15u].w;
        float _1598 = fma(_728, cbModelParam._m0[13u].z, fma(_727, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _726));
        float _1601 = fma(_728, cbModelParam._m0[14u].z, fma(_727, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _726));
        float _1604 = fma(_728, cbModelParam._m0[15u].z, fma(_727, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _726));
        float _1632;
        if (_1598 > 0.0)
        {
            _1632 = abs((1.0 - _1587) / _1598);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1598 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1587 + 1.0) / _1598);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1632 = frontier_phi_16_14_ladder;
        }
        float _1804;
        if (_1601 > 0.0)
        {
            _1804 = abs((1.0 - _1591) / _1601);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1601 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1591 + 1.0) / _1601);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1804 = frontier_phi_25_21_ladder;
        }
        float _2068;
        if (_1604 > 0.0)
        {
            _2068 = abs((1.0 - _1595) / _1604);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1604 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1595 + 1.0) / _1604);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2068 = frontier_phi_37_32_ladder;
        }
        float _2070 = isnan(_1804) ? _1632 : (isnan(_1632) ? _1804 : min(_1632, _1804));
        float _2071 = isnan(_2068) ? _2070 : (isnan(_2070) ? _2068 : min(_2070, _2068));
        float _2075 = (_2071 * _1598) + _1587;
        float _2076 = (_2071 * _1601) + _1591;
        float _2077 = (_2071 * _1604) + _1595;
        float _2078 = _2071 * 9.9999997473787516355514526367188e-05;
        float _2080 = (-1.0) - _2078;
        float _2082 = _2078 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2077 > _2082) || ((_2077 < _2080) || ((_2076 > _2082) || ((_2076 < _2080) || ((_2075 < _2080) || (_2075 > _2082))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2231 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2077, cbModelParam._m0[9u].z, fma(_2076, cbModelParam._m0[9u].y, _2075 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2077, cbModelParam._m0[10u].z, fma(_2076, cbModelParam._m0[10u].y, _2075 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2077, cbModelParam._m0[11u].z, fma(_2076, cbModelParam._m0[11u].y, _2075 * cbModelParam._m0[11u].x))), _1540);
            frontier_phi_15_37_ladder = _2231.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2231.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2231.x * cbModelParam._m0[1u].y;
        }
        _1620 = frontier_phi_15_37_ladder_2;
        _1622 = frontier_phi_15_37_ladder_1;
        _1624 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1608 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_726, _727, _728), _1540);
        _1620 = _1608.x * cbModelParam._m0[1u].y;
        _1622 = _1608.y * cbModelParam._m0[1u].y;
        _1624 = _1608.z * cbModelParam._m0[1u].y;
    }
    float _1628 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _640);
    float _1629 = isnan(_1628) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1628 : min(cbModelParam._m0[25u].w, _1628));
    float _1721;
    float _1723;
    float _1725;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1685 = fma(_791, cbModelParam._m0[21u].z, fma(_787, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _783)) + cbModelParam._m0[21u].w;
        float _1689 = fma(_791, cbModelParam._m0[22u].z, fma(_787, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _783)) + cbModelParam._m0[22u].w;
        float _1693 = fma(_791, cbModelParam._m0[23u].z, fma(_787, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _783)) + cbModelParam._m0[23u].w;
        float _1696 = fma(_728, cbModelParam._m0[21u].z, fma(_727, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _726));
        float _1699 = fma(_728, cbModelParam._m0[22u].z, fma(_727, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _726));
        float _1702 = fma(_728, cbModelParam._m0[23u].z, fma(_727, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _726));
        float _1809;
        if (_1696 > 0.0)
        {
            _1809 = abs((1.0 - _1685) / _1696);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1696 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1685 + 1.0) / _1696);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1809 = frontier_phi_27_23_ladder;
        }
        float _2095;
        if (_1699 > 0.0)
        {
            _2095 = abs((1.0 - _1689) / _1699);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1699 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1689 + 1.0) / _1699);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2095 = frontier_phi_39_34_ladder;
        }
        float _2414;
        if (_1702 > 0.0)
        {
            _2414 = abs((1.0 - _1693) / _1702);
        }
        else
        {
            float frontier_phi_48_46_ladder;
            if (_1702 < 0.0)
            {
                frontier_phi_48_46_ladder = abs((_1693 + 1.0) / _1702);
            }
            else
            {
                frontier_phi_48_46_ladder = 5000.0;
            }
            _2414 = frontier_phi_48_46_ladder;
        }
        float _2416 = isnan(_2095) ? _1809 : (isnan(_1809) ? _2095 : min(_1809, _2095));
        float _2417 = isnan(_2414) ? _2416 : (isnan(_2416) ? _2414 : min(_2416, _2414));
        float _2421 = (_2417 * _1696) + _1685;
        float _2422 = (_2417 * _1699) + _1689;
        float _2423 = (_2417 * _1702) + _1693;
        float _2424 = _2417 * 9.9999997473787516355514526367188e-05;
        float _2425 = (-1.0) - _2424;
        float _2427 = _2424 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2423 > _2427) || ((_2423 < _2425) || ((_2422 > _2427) || ((_2422 < _2425) || ((_2421 < _2425) || (_2421 > _2427))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2524 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2423, cbModelParam._m0[17u].z, fma(_2422, cbModelParam._m0[17u].y, _2421 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2423, cbModelParam._m0[18u].z, fma(_2422, cbModelParam._m0[18u].y, _2421 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2423, cbModelParam._m0[19u].z, fma(_2422, cbModelParam._m0[19u].y, _2421 * cbModelParam._m0[19u].x))), _1629);
            frontier_phi_24_48_ladder = _2524.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2524.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2524.x * cbModelParam._m0[1u].z;
        }
        _1721 = frontier_phi_24_48_ladder_2;
        _1723 = frontier_phi_24_48_ladder_1;
        _1725 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1705 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_726, _727, _728), _1629);
        _1721 = _1705.x * cbModelParam._m0[1u].z;
        _1723 = _1705.y * cbModelParam._m0[1u].z;
        _1725 = _1705.z * cbModelParam._m0[1u].z;
    }
    float _1737 = ((((1.0 - _751) * ((_739 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_751 * _739)) * _718;
    float _1738 = _1737 * ((cbModelParam._m0[1u].w * (_1721 - _1620)) + _1620);
    float _1739 = _1737 * ((cbModelParam._m0[1u].w * (_1723 - _1622)) + _1622);
    float _1740 = _1737 * ((cbModelParam._m0[1u].w * (_1725 - _1624)) + _1624);
    float _1743 = fma(_1740, cbSceneParam._m0[89u].z, fma(_1739, cbSceneParam._m0[89u].y, _1738 * cbSceneParam._m0[89u].x));
    float _1746 = fma(_1740, cbSceneParam._m0[90u].z, fma(_1739, cbSceneParam._m0[90u].y, _1738 * cbSceneParam._m0[90u].x));
    float _1749 = fma(_1740, cbSceneParam._m0[91u].z, fma(_1739, cbSceneParam._m0[91u].y, _1738 * cbSceneParam._m0[91u].x));
    float _1783 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1787 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1791 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1795 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1796 = _1783 / _1795;
    float _1797 = _1787 / _1795;
    float _1798 = _1791 / _1795;
    float _1945;
    float _1946;
    float _1947;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1825 = ((uint(_1798 > cbSceneParam._m0[59u].y) + uint(_1798 > cbSceneParam._m0[59u].x)) + uint(_1798 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1826 = _1825 + 43u;
        uint _1834 = _1825 + 44u;
        uint _1842 = _1825 + 45u;
        uint _1850 = _1825 + 46u;
        float _1861 = fma(_1795, cbSceneParam._m0[_1826].w, fma(_1791, cbSceneParam._m0[_1826].z, fma(_1787, cbSceneParam._m0[_1826].y, _1783 * cbSceneParam._m0[_1826].x)));
        float _1865 = fma(_1795, cbSceneParam._m0[_1834].w, fma(_1791, cbSceneParam._m0[_1834].z, fma(_1787, cbSceneParam._m0[_1834].y, _1783 * cbSceneParam._m0[_1834].x)));
        float _1873 = fma(_1795, cbSceneParam._m0[_1850].w, fma(_1791, cbSceneParam._m0[_1850].z, fma(_1787, cbSceneParam._m0[_1850].y, _1783 * cbSceneParam._m0[_1850].x)));
        float _1878 = cbSceneParam._m0[33u].z * _1873;
        float _1880 = cbSceneParam._m0[33u].w * _1873;
        float _1883 = fma(_1795, cbSceneParam._m0[_1842].w, fma(_1791, cbSceneParam._m0[_1842].z, fma(_1787, cbSceneParam._m0[_1842].y, _1783 * cbSceneParam._m0[_1842].x))) / _1873;
        float _1931 = (cbSceneParam._m0[33u].x - sqrt(((_1797 * _1797) + (_1796 * _1796)) + (_1798 * _1798))) * cbSceneParam._m0[33u].y;
        float _3803 = isnan(0.0) ? _1931 : (isnan(_1931) ? 0.0 : max(_1931, 0.0));
        float _1938 = (isnan(1.0) ? _3803 : (isnan(_3803) ? 1.0 : min(_3803, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1878 + _1861) / _1873, (_1880 + _1865) / _1873), _1883), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1880 + _1861) / _1873, (_1865 - _1878) / _1873), _1883), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1861 - _1878) / _1873, (_1865 - _1880) / _1873), _1883), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1861 - _1880) / _1873, (_1878 + _1865) / _1873), _1883), 0.0)).x), vec4(0.25)));
        _1945 = 1.0 - (_1938 * cbSceneParam._m0[34u].x);
        _1946 = 1.0 - (_1938 * cbSceneParam._m0[34u].y);
        _1947 = 1.0 - (_1938 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1945 = 1.0;
        _1946 = 1.0;
        _1947 = 1.0;
    }
    float _2011;
    float _2013;
    float _2015;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1999 = fma(_1795, cbSceneParam._m0[63u].w, fma(_1791, cbSceneParam._m0[63u].z, fma(_1787, cbSceneParam._m0[63u].y, _1783 * cbSceneParam._m0[63u].x)));
        float _2000 = fma(_1795, cbSceneParam._m0[60u].w, fma(_1791, cbSceneParam._m0[60u].z, fma(_1787, cbSceneParam._m0[60u].y, _1783 * cbSceneParam._m0[60u].x))) / _1999;
        float _2001 = fma(_1795, cbSceneParam._m0[61u].w, fma(_1791, cbSceneParam._m0[61u].z, fma(_1787, cbSceneParam._m0[61u].y, _1783 * cbSceneParam._m0[61u].x))) / _1999;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2000 >= cbSceneParam._m0[64u].x) && (_2001 >= cbSceneParam._m0[64u].y)) && (_2000 <= cbSceneParam._m0[64u].z)) && (_2001 <= cbSceneParam._m0[64u].w))
        {
            float _2108 = fma(_1795, cbSceneParam._m0[62u].w, fma(_1791, cbSceneParam._m0[62u].z, fma(_1787, cbSceneParam._m0[62u].y, _1783 * cbSceneParam._m0[62u].x))) / _1999;
            float _2112 = isnan(cbSceneParam._m0[41u].w) ? _2108 : (isnan(_2108) ? cbSceneParam._m0[41u].w : max(_2108, cbSceneParam._m0[41u].w));
            float _2155 = (cbSceneParam._m0[33u].x - sqrt(((_1797 * _1797) + (_1796 * _1796)) + (_1798 * _1798))) * cbSceneParam._m0[33u].y;
            float _3819 = isnan(0.0) ? _2155 : (isnan(_2155) ? 0.0 : max(_2155, 0.0));
            float _2162 = (isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2000, cbSceneParam._m0[33u].w + _2001), _2112), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2000, _2001 - cbSceneParam._m0[33u].z), _2112), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2000 - cbSceneParam._m0[33u].z, _2001 - cbSceneParam._m0[33u].w), _2112), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2000 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2001), _2112), 0.0)).x), vec4(0.25)));
            float _2166 = 1.0 - (_2162 * cbSceneParam._m0[34u].x);
            float _2167 = 1.0 - (_2162 * cbSceneParam._m0[34u].y);
            float _2168 = 1.0 - (_2162 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2167) ? _1946 : (isnan(_1946) ? _2167 : min(_1946, _2167));
            frontier_phi_36_35_ladder_1 = isnan(_2166) ? _1945 : (isnan(_1945) ? _2166 : min(_1945, _2166));
            frontier_phi_36_35_ladder_2 = isnan(_2168) ? _1947 : (isnan(_1947) ? _2168 : min(_1947, _2168));
        }
        else
        {
            frontier_phi_36_35_ladder = _1946;
            frontier_phi_36_35_ladder_1 = _1945;
            frontier_phi_36_35_ladder_2 = _1947;
        }
        _2011 = frontier_phi_36_35_ladder_1;
        _2013 = frontier_phi_36_35_ladder;
        _2015 = frontier_phi_36_35_ladder_2;
    }
    else
    {
        _2011 = _1945;
        _2013 = _1946;
        _2015 = _1947;
    }
    uvec4 _2020 = floatBitsToUint(cbInstanceData._m0[_698 + 5u]);
    uint _2022 = _2020.x * 14u;
    uint _2023 = _2022 + 13u;
    float _2028 = _718 + (-1.0);
    float _2031 = (cbLight._m0[_2023].x * _2028) + 1.0;
    float _2032 = (cbLight._m0[_2023].y * _2028) + 1.0;
    uint _2034 = _2022 + 4u;
    float _2045 = dot(vec3(cbLight._m0[_2022].xyz), vec3(_636, _637, _638));
    float _2048 = isnan(1.0) ? _2031 : (isnan(_2031) ? 1.0 : min(_2031, 1.0));
    float _2049 = cbLight._m0[_2034].x * _2011;
    float _2050 = cbLight._m0[_2034].y * _2013;
    float _2051 = cbLight._m0[_2034].z * _2015;
    uint _2052 = _2022 + 5u;
    uint _2058 = _2022 | 1u;
    float _2064 = dot(vec3(cbLight._m0[_2058].xyz), vec3(_636, _637, _638));
    float _2067 = isnan(1.0) ? _2032 : (isnan(_2032) ? 1.0 : min(_2032, 1.0));
    float _2240;
    float _2241;
    float _2242;
    if (_641 == 0.0)
    {
        float _3855 = isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : max(_2045, 0.0));
        float _3866 = isnan(0.0) ? _2064 : (isnan(_2064) ? 0.0 : max(_2064, 0.0));
        float _2177 = (isnan(1.0) ? _3855 : (isnan(_3855) ? 1.0 : min(_3855, 1.0))) * 0.3183098733425140380859375;
        float _2179 = (isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0))) * 0.3183098733425140380859375;
        _2240 = ((cbLight._m0[_2052].x * _2067) * _2179) + ((_2049 * _2048) * _2177);
        _2241 = ((_2067 * cbLight._m0[_2052].y) * _2179) + ((_2050 * _2048) * _2177);
        _2242 = ((_2067 * cbLight._m0[_2052].z) * _2179) + ((_2051 * _2048) * _2177);
    }
    else
    {
        float _2189 = _2045 + _641;
        float _2192 = (_641 * 2.0) + 1.0;
        float _2193 = (isnan(0.0) ? _2189 : (isnan(_2189) ? 0.0 : max(_2189, 0.0))) / _2192;
        float _2200 = _2064 + _641;
        float _2202 = (isnan(0.0) ? _2200 : (isnan(_2200) ? 0.0 : max(_2200, 0.0))) / _2192;
        _2240 = (((_2202 * cbLight._m0[_2052].x) * _2067) + ((_2049 * _2193) * _2048)) * 0.3183098733425140380859375;
        _2241 = (((_2202 * cbLight._m0[_2052].y) * _2067) + ((_2050 * _2193) * _2048)) * 0.3183098733425140380859375;
        _2242 = (((_2202 * cbLight._m0[_2052].z) * _2067) + ((_2051 * _2193) * _2048)) * 0.3183098733425140380859375;
    }
    uint _2246 = _2022 + 8u;
    float _2262 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2022].w)) * _640) * 0.949999988079071044921875);
    float _2263 = _2262 * _2262;
    float _2264 = cbLight._m0[_2022].x + _446;
    float _2265 = cbLight._m0[_2022].y + _447;
    float _2266 = cbLight._m0[_2022].z + _448;
    float _2270 = inversesqrt(dot(vec3(_2264, _2265, _2266), vec3(_2264, _2265, _2266)));
    float _2271 = _2270 * _2264;
    float _2272 = _2270 * _2265;
    float _2273 = _2270 * _2266;
    float _2274 = dot(vec3(_636, _637, _638), vec3(cbLight._m0[_2022].xyz));
    float _3887 = isnan(0.0) ? _2274 : (isnan(_2274) ? 0.0 : max(_2274, 0.0));
    float _2277 = isnan(1.0) ? _3887 : (isnan(_3887) ? 1.0 : min(_3887, 1.0));
    float _3898 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _2278 = isnan(1.0) ? _3898 : (isnan(_3898) ? 1.0 : min(_3898, 1.0));
    float _2279 = dot(vec3(_636, _637, _638), vec3(_2271, _2272, _2273));
    float _3909 = isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : max(_2279, 0.0));
    float _2282 = isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0));
    float _2283 = dot(vec3(cbLight._m0[_2022].xyz), vec3(_2271, _2272, _2273));
    float _3920 = isnan(0.0) ? _2283 : (isnan(_2283) ? 0.0 : max(_2283, 0.0));
    float _2287 = _2263 * _2263;
    float _2291 = ((_2282 * _2282) * (_2287 + (-1.0))) + 1.0;
    float _2302 = (exp2(log2(1.0 - (isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2303 = 1.0 - _2263;
    float _2314 = (0.5 / (((_2278 * ((_2277 * _2303) + _2263)) + 9.9999999392252902907785028219223e-09) + (((_2278 * _2303) + _2263) * _2277))) * _2277;
    float _3931 = isnan(0.0) ? _2314 : (isnan(_2314) ? 0.0 : max(_2314, 0.0));
    float _2316 = (isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0))) * (_2287 / ((_2291 * _2291) * 3.141590118408203125));
    uint _2332 = _2022 + 9u;
    float _2346 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2058].w)) * _640) * 0.949999988079071044921875);
    float _2347 = _2346 * _2346;
    float _2348 = cbLight._m0[_2058].x + _446;
    float _2349 = cbLight._m0[_2058].y + _447;
    float _2350 = cbLight._m0[_2058].z + _448;
    float _2354 = inversesqrt(dot(vec3(_2348, _2349, _2350), vec3(_2348, _2349, _2350)));
    float _2355 = _2354 * _2348;
    float _2356 = _2354 * _2349;
    float _2357 = _2354 * _2350;
    float _2358 = dot(vec3(_636, _637, _638), vec3(cbLight._m0[_2058].xyz));
    float _3942 = isnan(0.0) ? _2358 : (isnan(_2358) ? 0.0 : max(_2358, 0.0));
    float _2361 = isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0));
    float _2362 = dot(vec3(_636, _637, _638), vec3(_2355, _2356, _2357));
    float _3953 = isnan(0.0) ? _2362 : (isnan(_2362) ? 0.0 : max(_2362, 0.0));
    float _2365 = isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0));
    float _2366 = dot(vec3(cbLight._m0[_2058].xyz), vec3(_2355, _2356, _2357));
    float _3964 = isnan(0.0) ? _2366 : (isnan(_2366) ? 0.0 : max(_2366, 0.0));
    float _2370 = _2347 * _2347;
    float _2374 = ((_2365 * _2365) * (_2370 + (-1.0))) + 1.0;
    float _2383 = (exp2(log2(1.0 - (isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2384 = 1.0 - _2347;
    float _2394 = (0.5 / (((_2278 * ((_2361 * _2384) + _2347)) + 9.9999999392252902907785028219223e-09) + (((_2278 * _2384) + _2347) * _2361))) * _2361;
    float _3975 = isnan(0.0) ? _2394 : (isnan(_2394) ? 0.0 : max(_2394, 0.0));
    float _2396 = (isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0))) * (_2370 / ((_2374 * _2374) * 3.141590118408203125));
    float _2406 = (((_2383 * cbLight._m0[_2332].x) * _2396) * _2067) + ((((cbLight._m0[_2246].x * _2011) * _2302) * _2316) * _2048);
    float _2407 = (((_2383 * cbLight._m0[_2332].y) * _2396) * _2067) + ((((cbLight._m0[_2246].y * _2013) * _2302) * _2316) * _2048);
    float _2408 = (((_2383 * cbLight._m0[_2332].z) * _2396) * _2067) + ((((cbLight._m0[_2246].z * _2015) * _2302) * _2316) * _2048);
    float _2495;
    float _2497;
    float _2499;
    float _2501;
    float _2503;
    float _2505;
    if (_2020.y == 0u)
    {
        uvec4 _2451 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2452 = _2451.x;
        uint _2463 = uint((float(_2451.y) * floor(float(uint(cbSceneParam._m0[85u].y * _554) / _2452))) + floor(float(uint(cbSceneParam._m0[85u].x * _553) / _2452)));
        float _2473 = (log2(_1798 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2474 = isnan(0.0) ? _2473 : (isnan(_2473) ? 0.0 : max(_2473, 0.0));
        uint _2477 = uint(isnan(14.0) ? _2474 : (isnan(_2474) ? 14.0 : min(_2474, 14.0)));
        uint _2484 = _2451.z;
        float _2529;
        float _2531;
        float _2533;
        float _2535;
        float _2537;
        float _2539;
        if (((((1u << ((_2484 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2477 << 2u) + (_2463 << 6u)) >> 2u)).x) == 0u) || ((_2484 & 240u) == 0u))
        {
            _2529 = 0.0;
            _2531 = 0.0;
            _2533 = 0.0;
            _2535 = 0.0;
            _2537 = 0.0;
            _2539 = 0.0;
        }
        else
        {
            float _2530;
            float _2532;
            float _2534;
            float _2536;
            float _2538;
            float _2540;
            float _2695 = 0.0;
            float _2696 = 0.0;
            float _2697 = 0.0;
            float _2698 = 0.0;
            float _2699 = 0.0;
            float _2700 = 0.0;
            uint _2701 = 0u;
            uint _2710;
            bool _2711;
            for (;;)
            {
                _2710 = texelFetch(g_lightClassification, int((((_2477 << 5u) + (_2463 << 9u)) + (_2701 << 2u)) >> 2u)).x;
                _2711 = _2710 == 0u;
                float frontier_phi_60_pred;
                float frontier_phi_60_pred_1;
                float frontier_phi_60_pred_2;
                float frontier_phi_60_pred_3;
                float frontier_phi_60_pred_4;
                float frontier_phi_60_pred_5;
                if (_2711)
                {
                    frontier_phi_60_pred = _2700;
                    frontier_phi_60_pred_1 = _2698;
                    frontier_phi_60_pred_2 = _2697;
                    frontier_phi_60_pred_3 = _2696;
                    frontier_phi_60_pred_4 = _2695;
                    frontier_phi_60_pred_5 = _2699;
                }
                else
                {
                    float _2887;
                    float _2888;
                    float _2889;
                    float _2890;
                    float _2891;
                    float _2892;
                    uint _2893;
                    _2887 = _2695;
                    _2888 = _2696;
                    _2889 = _2697;
                    _2890 = _2698;
                    _2891 = _2699;
                    _2892 = _2700;
                    _2893 = _2710;
                    float _2835;
                    float _2836;
                    float _2837;
                    float _2838;
                    float _2839;
                    float _2840;
                    for (;;)
                    {
                        uint _2897 = uint(findLSB(_2893)) + (_2701 << 5u);
                        uint _2894 = (_2893 + 4294967295u) & _2893;
                        uint _2899 = _2897 * 48u;
                        vec4 _2913 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2899)).x, texelFetch(g_PointLightRenderingBuffer, int(_2899 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2899 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2899 + 3u)).x));
                        uint _2919 = (_2897 * 48u) + 4u;
                        vec4 _2932 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2919)).x, texelFetch(g_PointLightRenderingBuffer, int(_2919 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2919 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2919 + 3u)).x));
                        float _2933 = _2932.x;
                        float _2934 = _2932.y;
                        float _2935 = _2932.z;
                        uint _2938 = (_2897 * 48u) + 8u;
                        vec3 _2949 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2938)).x, texelFetch(g_PointLightRenderingBuffer, int(_2938 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2938 + 2u)).x));
                        uint _2954 = (_2897 * 48u) + 12u;
                        vec2 _2962 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2954)).x, texelFetch(g_PointLightRenderingBuffer, int(_2954 + 1u)).x));
                        float _2968 = inversesqrt(dot(vec3(_1796, _1797, _1798), vec3(_1796, _1797, _1798)));
                        float _2969 = _2968 * _1796;
                        float _2970 = _2968 * _1797;
                        float _2971 = _2968 * _1798;
                        float _2972 = _2913.x - _1796;
                        float _2973 = _2913.y - _1797;
                        float _2974 = _2913.z - _1798;
                        float _2975 = dot(vec3(_2972, _2973, _2974), vec3(_2972, _2973, _2974));
                        float _2978 = inversesqrt(_2975);
                        float _2979 = _2978 * _2972;
                        float _2980 = _2978 * _2973;
                        float _2981 = _2978 * _2974;
                        float _2982 = dot(vec3(_679, _682, _685), vec3(_2979, _2980, _2981));
                        float _2987 = 1.0 - (_2975 * _2913.w);
                        float _3996 = isnan(0.0) ? _2987 : (isnan(_2987) ? 0.0 : max(_2987, 0.0));
                        float _2988 = isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0));
                        float _2989 = sqrt(_2975) * _2932.w;
                        float _2992 = 1.39999997615814208984375 / (_2989 + 1.39999997615814208984375);
                        float _2993 = _2992 * _2992;
                        float _2994 = 1.0 - _2993;
                        float _2996 = (_2994 * _2994) * _641;
                        float _2999 = ((_2994 * _2982) + _2993) + _2996;
                        float _3004 = _2989 * _2989;
                        float _3009 = ((isnan(0.0) ? _2999 : (isnan(_2999) ? 0.0 : max(_2999, 0.0))) * _2988) / (((_2996 * 2.0) + 1.0) * ((_3004 * 0.699999988079071044921875) + 1.0));
                        float _3013 = dot(vec3(_2979, _2980, _2981), vec3(_2969, _2970, _2971));
                        float _4012 = isnan(0.0) ? _3013 : (isnan(_3013) ? 0.0 : max(_3013, 0.0));
                        float _3020 = dot(vec3((-0.0) - _2969, (-0.0) - _2970, (-0.0) - _2971), vec3(_679, _682, _685)) + 1.0;
                        float _3022 = (isnan(0.0) ? _3020 : (isnan(_3020) ? 0.0 : max(_3020, 0.0))) * 0.5;
                        float _3029 = ((_3022 * _3022) * _2962.x) * exp2((_2962.y * 32.0) * log2(isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0))));
                        float _3031 = _641 / (_641 + 1.0);
                        float _3047 = (-0.0) - _1796;
                        float _3048 = (-0.0) - _1797;
                        float _3049 = (-0.0) - _1798;
                        float _3053 = inversesqrt(dot(vec3(_3047, _3048, _3049), vec3(_3047, _3048, _3049)));
                        float _3054 = _3053 * _3047;
                        float _3055 = _3053 * _3048;
                        float _3056 = _3053 * _3049;
                        float _3063 = exp2(log2(1.0 / ((_3004 * 3.5) + 5.0)) * 0.25);
                        float _3064 = 1.0 - _739;
                        float _3071 = sqrt(1.0 - ((1.0 - (_3064 * _3064)) * (1.0 - (_3063 * _3063))));
                        float _3072 = _3071 * _3071;
                        float _3073 = _3072 * _3072;
                        float _3074 = _3054 + _2979;
                        float _3075 = _3055 + _2980;
                        float _3076 = _3056 + _2981;
                        float _3080 = inversesqrt(dot(vec3(_3074, _3075, _3076), vec3(_3074, _3075, _3076)));
                        float _3084 = dot(vec3(_679, _682, _685), vec3(_3054, _3055, _3056));
                        float _4028 = isnan(0.0) ? _3084 : (isnan(_3084) ? 0.0 : max(_3084, 0.0));
                        float _3087 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
                        float _3088 = dot(vec3(_679, _682, _685), vec3(_3080 * _3074, _3080 * _3075, _3080 * _3076));
                        float _4039 = isnan(0.0) ? _3088 : (isnan(_3088) ? 0.0 : max(_3088, 0.0));
                        float _3091 = isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0));
                        float _3095 = ((_3091 * _3091) * (_3073 + (-1.0))) + 1.0;
                        float _3096 = _2992 * _3072;
                        float _3097 = _3096 * _3096;
                        float _3100 = ((1.0 - _3097) * _2982) + _3097;
                        float _4050 = isnan(0.0) ? _3100 : (isnan(_3100) ? 0.0 : max(_3100, 0.0));
                        float _3101 = isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0));
                        float _3102 = 1.0 - _3072;
                        float _3112 = (0.5 / (((_3101 * ((_3087 * _3102) + _3072)) + 9.9999999392252902907785028219223e-09) + (((_3101 * _3102) + _3072) * _3087))) * _3101;
                        float _4061 = isnan(0.0) ? _3112 : (isnan(_3112) ? 0.0 : max(_3112, 0.0));
                        float _3123 = (((_3073 * 3.1415927410125732421875) * (isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0)))) / ((_3095 * _3095) * ((_3004 * 2.1991131305694580078125) + 3.141590118408203125))) * _2988;
                        _2838 = (((((_2933 * 0.3183098733425140380859375) * _3031) * _3029) + _2933) * _3009) + _2890;
                        _2839 = (((((_2934 * 0.3183098733425140380859375) * _3031) * _3029) + _2934) * _3009) + _2891;
                        _2840 = (((((_2935 * 0.3183098733425140380859375) * _3031) * _3029) + _2935) * _3009) + _2892;
                        _2835 = (_3123 * _2949.x) + _2887;
                        _2836 = (_3123 * _2949.y) + _2888;
                        _2837 = (_3123 * _2949.z) + _2889;
                        if (_2894 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2887 = _2835;
                            _2888 = _2836;
                            _2889 = _2837;
                            _2890 = _2838;
                            _2891 = _2839;
                            _2892 = _2840;
                            _2893 = _2894;
                        }
                    }
                    frontier_phi_60_pred = _2840;
                    frontier_phi_60_pred_1 = _2838;
                    frontier_phi_60_pred_2 = _2837;
                    frontier_phi_60_pred_3 = _2836;
                    frontier_phi_60_pred_4 = _2835;
                    frontier_phi_60_pred_5 = _2839;
                }
                _2540 = frontier_phi_60_pred;
                _2536 = frontier_phi_60_pred_1;
                _2534 = frontier_phi_60_pred_2;
                _2532 = frontier_phi_60_pred_3;
                _2530 = frontier_phi_60_pred_4;
                _2538 = frontier_phi_60_pred_5;
                uint _2702 = _2701 + 1u;
                if (_2702 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2695 = _2530;
                    _2696 = _2532;
                    _2697 = _2534;
                    _2698 = _2536;
                    _2699 = _2538;
                    _2700 = _2540;
                    _2701 = _2702;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2529 = _2530;
            _2531 = _2532;
            _2533 = _2534;
            _2535 = _2536;
            _2537 = _2538;
            _2539 = _2540;
        }
        float _2544 = isnan(1.0) ? _718 : (isnan(_718) ? 1.0 : min(_718, 1.0));
        _2495 = (_2544 * _2535) + _2240;
        _2497 = (_2544 * _2537) + _2241;
        _2499 = (_2544 * _2539) + _2242;
        _2501 = ((_2529 * 0.039999999105930328369140625) * _2544) + _2406;
        _2503 = ((_2531 * 0.039999999105930328369140625) * _2544) + _2407;
        _2505 = ((_2533 * 0.039999999105930328369140625) * _2544) + _2408;
    }
    else
    {
        _2495 = _2240;
        _2497 = _2241;
        _2499 = _2242;
        _2501 = _2406;
        _2503 = _2407;
        _2505 = _2408;
    }
    float _2618;
    float _2619;
    float _2620;
    if (_641 > 0.0)
    {
        uint _2551 = _2022 + 4u;
        float _2557 = (-0.0) - _446;
        float _2558 = (-0.0) - _447;
        float _2559 = (-0.0) - _448;
        float _2560 = dot(vec3(cbLight._m0[_2022].xyz), vec3(_2557, _2558, _2559));
        float _4077 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
        float _2564 = _729 + 1.0;
        float _2566 = (isnan(0.0) ? _2564 : (isnan(_2564) ? 0.0 : max(_2564, 0.0))) * 0.5;
        float _2571 = _2566 * _2566;
        float _2572 = _2571 * exp2(log2(isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0))) * 32.0);
        float _2574 = _641 / (_641 + 1.0);
        float _2575 = isnan(_2031) ? 1.0 : (isnan(1.0) ? _2031 : min(1.0, _2031));
        uint _2588 = _2022 + 5u;
        float _2594 = dot(vec3(cbLight._m0[_2058].xyz), vec3(_2557, _2558, _2559));
        float _4098 = isnan(0.0) ? _2594 : (isnan(_2594) ? 0.0 : max(_2594, 0.0));
        float _2601 = _2571 * exp2(log2(isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0))) * 32.0);
        float _2602 = isnan(_2032) ? 1.0 : (isnan(1.0) ? _2032 : min(1.0, _2032));
        _2618 = ((((_2601 * cbLight._m0[_2588].x) * _2574) * _2602) + ((((cbLight._m0[_2551].x * _2011) * _2572) * _2574) * _2575)) * 0.3183098733425140380859375;
        _2619 = ((((_2601 * cbLight._m0[_2588].y) * _2574) * _2602) + ((((cbLight._m0[_2551].y * _2013) * _2572) * _2574) * _2575)) * 0.3183098733425140380859375;
        _2620 = ((((_2601 * cbLight._m0[_2588].z) * _2574) * _2602) + ((((cbLight._m0[_2551].z * _2015) * _2572) * _2574) * _2575)) * 0.3183098733425140380859375;
    }
    else
    {
        _2618 = 0.0;
        _2619 = 0.0;
        _2620 = 0.0;
    }
    float _4114 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _4125 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    float _4136 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _4147 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
    float _2635 = (isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0))) * ((_2495 + ((isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0))) * _718)) + _2618);
    float _2636 = (isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0))) * ((_2497 + ((isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0))) * _718)) + _2619);
    float _2637 = (isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0))) * ((_2499 + ((isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0))) * _718)) + _2620);
    float _2641 = 0.959999978542327880859375 - (exp2(log2(1.0 - _733) * 5.0) * 0.959999978542327880859375);
    float _2666 = _553 / cbSceneParam._m0[86u].x;
    float _2667 = _554 / cbSceneParam._m0[86u].y;
    vec4 _2681 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2666, _2667, (log2((isnan(cbSceneParam._m0[77u].w) ? _660 : (isnan(_660) ? cbSceneParam._m0[77u].w : min(_660, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2683 = _2681.x;
    float _2684 = _2681.y;
    float _2685 = _2681.z;
    float _2686 = _2681.w;
    float _2753;
    float _2755;
    float _2757;
    float _2759;
    if (_660 > cbSceneParam._m0[78u].w)
    {
        float _2716 = isnan(_660) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _660 : min(cbSceneParam._m0[80u].w, _660));
        float _2717 = _2716 / _660;
        float _2728 = _2717 * _289;
        float _2729 = _290 * _2717;
        float _2730 = (-0.0) - _2729;
        float _2731 = _2717 * _291;
        float _2733 = (cbSceneParam._m0[77u].w * _2730) / _2716;
        float _2734 = _2733 + cbSceneParam._m0[79u].w;
        float _2735 = cbSceneParam._m0[79u].w - _2729;
        float _2741 = sqrt(((_2728 * _2728) + (_2729 * _2729)) + (_2731 * _2731));
        float _2744 = (1.0 - (cbSceneParam._m0[77u].w / _2716)) * _2741;
        float _2749 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2751 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3128;
        if (abs((_2730 - _2733) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3128 = ((((_2734 > 0.0) ? exp2(_2749 * _2734) : (2.0 - exp2(_2751 * _2734))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2744;
        }
        else
        {
            float _2860 = 1.0 / cbSceneParam._m0[80u].x;
            float _2861 = isnan(_2735) ? _2734 : (isnan(_2734) ? _2735 : max(_2734, _2735));
            float _2862 = isnan(_2735) ? _2734 : (isnan(_2734) ? _2735 : min(_2734, _2735));
            float _2871 = isnan(0.0) ? _2861 : (isnan(_2861) ? 0.0 : min(_2861, 0.0));
            float _2872 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : min(_2862, 0.0));
            _3128 = ((abs(_2741 / _2730) * cbSceneParam._m0[80u].y) * ((((_2871 - _2872) * 2.0) - ((exp2(_2749 * (isnan(0.0) ? _2861 : (isnan(_2861) ? 0.0 : max(_2861, 0.0)))) - exp2(_2749 * (isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0))))) * _2860)) - ((exp2(_2751 * _2871) - exp2(_2751 * _2872)) * _2860))) + (_2744 * cbSceneParam._m0[80u].z);
        }
        vec4 _3130 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2666, _2667, 1.0), 0.0);
        float _3139 = exp2((_3128 * (-1.44269502162933349609375)) * (1.0 - _3130.w));
        float _3140 = log2(_3139);
        float _3156 = log2(_2686);
        _2753 = (exp2(_3156 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3140 * cbSceneParam._m0[78u].x)) * _3130.x) / cbSceneParam._m0[78u].x)) + _2683;
        _2755 = (exp2(_3156 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3140 * cbSceneParam._m0[78u].y)) * _3130.y) / cbSceneParam._m0[78u].y)) + _2684;
        _2757 = (exp2(_3156 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3140 * cbSceneParam._m0[78u].z)) * _3130.z) / cbSceneParam._m0[78u].z)) + _2685;
        _2759 = _3139 * _2686;
    }
    else
    {
        _2753 = _2683;
        _2755 = _2684;
        _2757 = _2685;
        _2759 = _2686;
    }
    bool _2771 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2772 = log2(_2759);
    float _2779 = exp2(_2772 * cbSceneParam._m0[78u].x) * ((_2635 + ((_2501 + ((isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0))) * _1529)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _577.x) * _2641) - _2635) * _621));
    float _2780 = exp2(_2772 * cbSceneParam._m0[78u].y) * ((_2636 + ((_2503 + ((isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0))) * _1529)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _577.y) * _2641) - _2636) * _621));
    float _2781 = exp2(_2772 * cbSceneParam._m0[78u].z) * ((_2637 + ((_2505 + ((isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0))) * _1529)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _577.z) * _2641) - _2637) * _621));
    vec4 _2789 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_553, _554));
    float _2791 = _2789.x;
    float _2812 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2791)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2791))) - _660) * cbMtdParam._m0[17u].y;
    float _4198 = isnan(0.0) ? _2812 : (isnan(_2812) ? 0.0 : max(_2812, 0.0));
    float _2814 = (cbInstanceData._m0[_698 + 6u].w * (isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0)))) * (isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0)));
    float _2823 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2823 * (_2771 ? _2779 : (_2779 + (cbSceneParam._m0[72u].w * _2753)));
    SV_Target.y = _2823 * (_2771 ? _2780 : (_2780 + (cbSceneParam._m0[72u].w * _2755)));
    SV_Target.z = _2823 * (_2771 ? _2781 : (_2781 + (cbSceneParam._m0[72u].w * _2757)));
    SV_Target.w = _2814;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2814;
}


