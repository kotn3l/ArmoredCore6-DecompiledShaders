#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1243;
float _3211;
float _3212;
float _3213;
float _3214;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _209 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _210 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _211 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _217 = inversesqrt(dot(vec3(_209, _210, _211), vec3(_209, _210, _211)));
    float _218 = _217 * _209;
    float _219 = _217 * _210;
    float _220 = _217 * _211;
    float _224 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _225 = _224 * NORMAL.x;
    float _226 = _224 * NORMAL.y;
    float _227 = _224 * NORMAL.z;
    float _231 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _232 = _231 * TANGENT.x;
    float _233 = _231 * TANGENT.y;
    float _234 = _231 * TANGENT.z;
    float _239;
    float _240;
    float _241;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _239 = (-0.0) - _225;
        _240 = (-0.0) - _226;
        _241 = (-0.0) - _227;
    }
    else
    {
        _239 = _225;
        _240 = _226;
        _241 = _227;
    }
    float _288 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _298 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _288);
    float _299 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _288);
    float _300 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _288);
    uint _306 = uint(roundEven(NORMAL.w)) * 13u;
    uint _311 = _306 + 1u;
    uint _315 = _306 + 2u;
    float _324 = sqrt(((cbInstanceData._m0[_311].x * cbInstanceData._m0[_311].x) + (cbInstanceData._m0[_306].x * cbInstanceData._m0[_306].x)) + (cbInstanceData._m0[_315].x * cbInstanceData._m0[_315].x));
    float _325 = _324 * TEXCOORD.z;
    float _326 = _324 * TEXCOORD.w;
    vec4 _339 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _325) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _326) + cbTextureTilingScale._m0[8u].w));
    vec4 _360 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _368 = (_360.x * 2.0) + (-1.0);
    float _370 = (_360.y * 2.0) + (-1.0);
    float _371 = dot(vec2(_368, _370), vec2(_368, _370));
    float _3223 = isnan(0.0) ? _371 : (isnan(_371) ? 0.0 : max(_371, 0.0));
    float _377 = sqrt(1.0 - (isnan(1.0) ? _3223 : (isnan(_3223) ? 1.0 : min(_3223, 1.0))));
    float _380 = fma(_377, _239, fma(_370, _232, _368 * _218));
    float _383 = fma(_377, _240, fma(_370, _233, _368 * _219));
    float _386 = fma(_377, _241, fma(_370, _234, _368 * _220));
    float _390 = inversesqrt(dot(vec3(_380, _383, _386), vec3(_380, _383, _386)));
    vec4 _423 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _428 = _423.w;
    float _440 = dot(vec3(_298, _299, _300), vec3(_218, _219, _220));
    float _443 = dot(vec3(_298, _299, _300), vec3(_232, _233, _234));
    float _446 = dot(vec3(_298, _299, _300), vec3(_239, _240, _241));
    float _452 = inversesqrt(dot(vec3(_440, _443, _446), vec3(_440, _443, _446)));
    float _474 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _494 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_440 * cbMtdParam._m0[14u].x) * _452) * _474) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_443 * cbMtdParam._m0[14u].x) * _452) * _474) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _517 = inversesqrt(dot(vec3(_298, _299, _300), vec3(_298, _299, _300)));
    float _518 = _517 * _298;
    float _519 = _517 * _299;
    float _520 = _517 * _300;
    float _521 = dot(vec4(_518, _519, _520, 0.0), vec4(_239, _240, _241, 0.0));
    float _524 = _521 - cbMtdParam._m0[15u].z;
    float _3234 = isnan(0.0) ? _524 : (isnan(_524) ? 0.0 : max(_524, 0.0));
    float _531 = exp2(log2(1.0 - (isnan(1.0) ? _3234 : (isnan(_3234) ? 1.0 : min(_3234, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _546 = ((((_423.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _494.x) * cbMtdParam._m0[9u].x) * ((_531 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _551 = ((((_423.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _494.y) * cbMtdParam._m0[9u].y) * ((_531 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _556 = ((((_423.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _494.z) * cbMtdParam._m0[9u].z) * ((_531 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _565 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _325) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _326) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3250 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _566 = isnan(1.0) ? _3250 : (isnan(_3250) ? 1.0 : min(_3250, 1.0));
    float _573 = (_566 * ((_339.x * cbMtdParam._m0[10u].x) - _546)) + _546;
    float _574 = (((_339.y * cbMtdParam._m0[10u].y) - _551) * _566) + _551;
    float _575 = (((_339.z * cbMtdParam._m0[10u].z) - _556) * _566) + _556;
    vec4 _587 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _325) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _326) + cbTextureTilingScale._m0[9u].w));
    float _594 = (_587.x * 2.0) + (-1.0);
    float _595 = (_587.y * 2.0) + (-1.0);
    float _596 = dot(vec2(_594, _595), vec2(_594, _595));
    float _3261 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    float _610 = (cbMtdParam._m0[16u].y + _360.z) + cbMtdParam._m0[17u].z;
    float _613 = ((_587.z - _610) * _566) + _610;
    float _625 = (((_594 - _368) + (cbMtdParam._m0[14u].z * _368)) * _566) + _368;
    float _626 = (((_595 - _370) + (cbMtdParam._m0[14u].z * _370)) * _566) + _370;
    float _627 = (_566 * (sqrt(1.0 - (isnan(1.0) ? _3261 : (isnan(_3261) ? 1.0 : min(_3261, 1.0)))) - _377)) + _377;
    float _643 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _645 = _643 - (_643 * _566);
    float _665 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + ((_390 * _380) * cbMtdParam._m0[18u].y));
    float _666 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + ((_390 * _383) * cbMtdParam._m0[18u].y));
    float _673 = isnan(cbInstanceData._m0[8u].x) ? _665 : (isnan(_665) ? cbInstanceData._m0[8u].x : max(_665, cbInstanceData._m0[8u].x));
    float _674 = isnan(cbInstanceData._m0[8u].y) ? _666 : (isnan(_666) ? cbInstanceData._m0[8u].y : max(_666, cbInstanceData._m0[8u].y));
    vec4 _678 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _673 : (isnan(_673) ? cbInstanceData._m0[8u].z : min(_673, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _674 : (isnan(_674) ? cbInstanceData._m0[8u].w : min(_674, cbInstanceData._m0[8u].w))));
    float _711 = _521 - cbMtdParam._m0[15u].x;
    float _3292 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _721 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3292 : (isnan(_3292) ? 1.0 : min(_3292, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3308 = isnan(0.0) ? _721 : (isnan(_721) ? 0.0 : max(_721, 0.0));
    float _722 = isnan(1.0) ? _3308 : (isnan(_3308) ? 1.0 : min(_3308, 1.0));
    float _724 = _722 - (_566 * _722);
    float _728 = fma(_627, _239, fma(_626, _232, _625 * _218));
    float _731 = fma(_627, _240, fma(_626, _233, _625 * _219));
    float _734 = fma(_627, _241, fma(_626, _234, _625 * _220));
    float _738 = inversesqrt(dot(vec3(_728, _731, _734), vec3(_728, _731, _734)));
    float _739 = _738 * _728;
    float _740 = _738 * _731;
    float _741 = _738 * _734;
    float _3319 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _742 = isnan(1.0) ? _3319 : (isnan(_3319) ? 1.0 : min(_3319, 1.0));
    float _3330 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _743 = isnan(1.0) ? _3330 : (isnan(_3330) ? 1.0 : min(_3330, 1.0));
    float _744 = isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : max(_645, 0.0));
    float _3346 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    float _3357 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
    float _3368 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _761 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _766 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _768 = _766.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _923 = sqrt(((_298 * _298) + (_299 * _299)) + (_300 * _300));
        float _929 = (cbMatDynParam._m0[5u].x * _923) + cbMatDynParam._m0[5u].y;
        float _3379 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
        float _930 = isnan(1.0) ? _3379 : (isnan(_3379) ? 1.0 : min(_3379, 1.0));
        float _934 = (cbMatDynParam._m0[5u].z * _923) + cbMatDynParam._m0[5u].w;
        float _3390 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3390 : (isnan(_3390) ? 1.0 : min(_3390, 1.0))) - _930)) + _930) < ((_768 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _778 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _779 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _797 = fma(_741, cbSceneParam._m0[5u].z, fma(_740, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _739));
    float _800 = fma(_741, cbSceneParam._m0[6u].z, fma(_740, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _739));
    float _803 = fma(_741, cbSceneParam._m0[7u].z, fma(_740, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _739));
    uint _816 = _306 + 9u;
    uint _817 = _816 + uint(cbMatDynParam._m0[0u].w);
    float _823 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3346 : (isnan(_3346) ? 1.0 : min(_3346, 1.0)))) * cbInstanceData._m0[_817].x;
    float _824 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3357 : (isnan(_3357) ? 1.0 : min(_3357, 1.0)))) * cbInstanceData._m0[_817].y;
    float _825 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3368 : (isnan(_3368) ? 1.0 : min(_3368, 1.0)))) * cbInstanceData._m0[_817].z;
    float _3401 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _826 = isnan(1.0) ? _3401 : (isnan(_3401) ? 1.0 : min(_3401, 1.0));
    float _3412 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _827 = isnan(1.0) ? _3412 : (isnan(_3412) ? 1.0 : min(_3412, 1.0));
    float _3423 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _828 = isnan(1.0) ? _3423 : (isnan(_3423) ? 1.0 : min(_3423, 1.0));
    vec4 _836 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _778, cbSceneParam._m0[86u].y * _779));
    float _839 = _836.x * TEXCOORD_5.w;
    float _840 = dot(vec3(_739, _740, _741), vec3(_518, _519, _520));
    float _843 = _840 * 2.0;
    float _847 = (_843 * _739) - _518;
    float _848 = (_843 * _740) - _519;
    float _849 = (_843 * _741) - _520;
    float _850 = dot(vec3(_518, _519, _520), vec3(_739, _740, _741));
    float _853 = abs(_850);
    float _3434 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
    float _854 = isnan(1.0) ? _3434 : (isnan(_3434) ? 1.0 : min(_3434, 1.0));
    float _860 = sqrt(_743);
    float _872 = exp2((_860 * 5.0) * log2(1.0 - (_854 * 0.999000012874603271484375))) / (4.0 - (_860 * 3.0));
    float _904 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _908 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _912 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1242;
    float _1244;
    float _1245;
    float _1246;
    float _1247;
    float _1248;
    float _1249;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    float _1256;
    float _1257;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _967 = fma(_912, cbModelParam._m0[26u].z, fma(_908, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _904));
        float _971 = fma(_912, cbModelParam._m0[27u].z, fma(_908, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _904));
        float _975 = fma(_912, cbModelParam._m0[28u].z, fma(_908, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _904));
        float _1000 = _904 + _739;
        float _1001 = _908 + _740;
        float _1002 = _912 + _741;
        float _1012 = fma(_1002, cbModelParam._m0[26u].z, fma(_1001, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1000)) - _967;
        float _1013 = fma(_1002, cbModelParam._m0[27u].z, fma(_1001, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1000)) - _971;
        float _1014 = fma(_1002, cbModelParam._m0[28u].z, fma(_1001, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1000)) - _975;
        float _1018 = inversesqrt(dot(vec3(_1012, _1013, _1014), vec3(_1012, _1013, _1014)));
        float _1031 = ((_1018 * _1012) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_967 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1032 = ((_1018 * _1013) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_971 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1033 = ((_1018 * _1014) / cbModelParam._m0[34u].z) + ((((((_975 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1036 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1031, _1032, _1033), 0.0);
        vec4 _1043 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1031, _1032, _1033), 0.0);
        vec4 _1050 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1031, _1032, _1033), 0.0);
        vec4 _1057 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1031, _1032, _1033), 0.0);
        float _1070 = exp2((_1036.w + (-0.5)) * 20.0) * 2.0;
        float _1071 = _1070 * (_1036.x + (-0.5));
        float _1072 = _1070 * (_1036.y + (-0.5));
        float _1073 = _1070 * (_1036.z + (-0.5));
        float _1080 = exp2((_1043.w + (-0.5)) * 20.0) * 2.0;
        float _1081 = _1080 * (_1043.x + (-0.5));
        float _1082 = _1080 * (_1043.y + (-0.5));
        float _1083 = _1080 * (_1043.z + (-0.5));
        float _1090 = exp2((_1050.w + (-0.5)) * 20.0) * 2.0;
        float _1091 = _1090 * (_1050.x + (-0.5));
        float _1092 = _1090 * (_1050.y + (-0.5));
        float _1093 = _1090 * (_1050.z + (-0.5));
        float _1100 = exp2((_1057.w + (-0.5)) * 20.0) * 2.0;
        float _1101 = _1100 * (_1057.x + (-0.5));
        float _1102 = _1100 * (_1057.y + (-0.5));
        float _1103 = _1100 * (_1057.z + (-0.5));
        float _1104 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1105 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1106 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1107 = _1071 * 0.5;
        float _1108 = _1081 * 0.5;
        float _1109 = _1091 * 0.5;
        float _1110 = dot(vec3(_1107, _1108, _1109), vec3(_1107, _1108, _1109));
        float _1115 = (_1110 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1110);
        float _1124 = (dot(vec3(_739, _740, _741), vec3(_1115 * _1107, _1115 * _1108, _1115 * _1109)) + 1.0) * 0.5;
        float _3460 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1134 = sqrt(((_1108 * _1108) + (_1107 * _1107)) + (_1109 * _1109)) / (_1104 + 9.9999997473787516355514526367188e-06);
        float _3471 = isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0));
        float _1135 = isnan(1.0) ? _3471 : (isnan(_3471) ? 1.0 : min(_3471, 1.0));
        float _1136 = _1135 * 2.0;
        float _1140 = (1.0 - _1135) / (_1135 + 1.0);
        float _3482 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1141 = isnan(1.0) ? _3482 : (isnan(_3482) ? 1.0 : min(_3482, 1.0));
        float _1150 = ((((1.0 - _1141) * (_1136 + 2.0)) * exp2(log2(isnan(1.0) ? _3460 : (isnan(_3460) ? 1.0 : min(_3460, 1.0))) * (_1136 + 1.0))) + _1141) * _1104;
        float _1151 = _1072 * 0.5;
        float _1152 = _1082 * 0.5;
        float _1153 = _1092 * 0.5;
        float _1154 = dot(vec3(_1151, _1152, _1153), vec3(_1151, _1152, _1153));
        float _1159 = (_1154 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1154);
        float _1167 = (dot(vec3(_739, _740, _741), vec3(_1159 * _1151, _1159 * _1152, _1159 * _1153)) + 1.0) * 0.5;
        float _3493 = isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0));
        float _1176 = sqrt(((_1152 * _1152) + (_1151 * _1151)) + (_1153 * _1153)) / (_1105 + 9.9999997473787516355514526367188e-06);
        float _3504 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
        float _1177 = isnan(1.0) ? _3504 : (isnan(_3504) ? 1.0 : min(_3504, 1.0));
        float _1178 = _1177 * 2.0;
        float _1182 = (1.0 - _1177) / (_1177 + 1.0);
        float _3515 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
        float _1183 = isnan(1.0) ? _3515 : (isnan(_3515) ? 1.0 : min(_3515, 1.0));
        float _1192 = ((((1.0 - _1183) * (_1178 + 2.0)) * exp2(log2(isnan(1.0) ? _3493 : (isnan(_3493) ? 1.0 : min(_3493, 1.0))) * (_1178 + 1.0))) + _1183) * _1105;
        float _1193 = _1073 * 0.5;
        float _1194 = _1083 * 0.5;
        float _1195 = _1093 * 0.5;
        float _1196 = dot(vec3(_1193, _1194, _1195), vec3(_1193, _1194, _1195));
        float _1201 = (_1196 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1196);
        float _1209 = (dot(vec3(_739, _740, _741), vec3(_1201 * _1193, _1201 * _1194, _1201 * _1195)) + 1.0) * 0.5;
        float _3526 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
        float _1218 = sqrt(((_1194 * _1194) + (_1193 * _1193)) + (_1195 * _1195)) / (_1106 + 9.9999997473787516355514526367188e-06);
        float _3537 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
        float _1219 = isnan(1.0) ? _3537 : (isnan(_3537) ? 1.0 : min(_3537, 1.0));
        float _1220 = _1219 * 2.0;
        float _1224 = (1.0 - _1219) / (_1219 + 1.0);
        float _3548 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
        float _1225 = isnan(1.0) ? _3548 : (isnan(_3548) ? 1.0 : min(_3548, 1.0));
        float _1234 = ((((1.0 - _1225) * (_1220 + 2.0)) * exp2(log2(isnan(1.0) ? _3526 : (isnan(_3526) ? 1.0 : min(_3526, 1.0))) * (_1220 + 1.0))) + _1225) * _1106;
        _1242 = _1073;
        _1244 = _1072;
        _1245 = _1071;
        _1246 = _1083;
        _1247 = _1082;
        _1248 = _1081;
        _1249 = _1093;
        _1250 = _1092;
        _1251 = _1091;
        _1252 = _1106;
        _1253 = _1105;
        _1254 = _1104;
        _1255 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0)));
        _1256 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0)));
        _1257 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0)));
    }
    else
    {
        _1242 = _1243;
        _1244 = _1243;
        _1245 = _1243;
        _1246 = _1243;
        _1247 = _1243;
        _1248 = _1243;
        _1249 = _1243;
        _1250 = _1243;
        _1251 = _1243;
        _1252 = _1243;
        _1253 = _1243;
        _1254 = _1243;
        _1255 = 0.0;
        _1256 = 0.0;
        _1257 = 0.0;
    }
    float _1555;
    float _1556;
    float _1557;
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1286 = fma(_912, cbModelParam._m0[30u].z, fma(_908, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _904));
        float _1290 = fma(_912, cbModelParam._m0[31u].z, fma(_908, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _904));
        float _1294 = fma(_912, cbModelParam._m0[32u].z, fma(_908, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _904));
        float _1317 = _904 + _739;
        float _1318 = _908 + _740;
        float _1319 = _912 + _741;
        float _1329 = fma(_1319, cbModelParam._m0[30u].z, fma(_1318, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1317)) - _1286;
        float _1330 = fma(_1319, cbModelParam._m0[31u].z, fma(_1318, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1317)) - _1290;
        float _1331 = fma(_1319, cbModelParam._m0[32u].z, fma(_1318, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1317)) - _1294;
        float _1335 = inversesqrt(dot(vec3(_1329, _1330, _1331), vec3(_1329, _1330, _1331)));
        float _1348 = ((_1335 * _1329) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1286 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1349 = ((_1335 * _1330) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1290 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1350 = ((_1335 * _1331) / cbModelParam._m0[35u].z) + ((((((_1294 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1352 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1348, _1349, _1350), 0.0);
        vec4 _1359 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1348, _1349, _1350), 0.0);
        vec4 _1366 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1348, _1349, _1350), 0.0);
        vec4 _1373 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1348, _1349, _1350), 0.0);
        float _1385 = exp2((_1352.w + (-0.5)) * 20.0) * 2.0;
        float _1386 = _1385 * (_1352.x + (-0.5));
        float _1387 = _1385 * (_1352.y + (-0.5));
        float _1388 = _1385 * (_1352.z + (-0.5));
        float _1395 = exp2((_1359.w + (-0.5)) * 20.0) * 2.0;
        float _1396 = _1395 * (_1359.x + (-0.5));
        float _1397 = _1395 * (_1359.y + (-0.5));
        float _1398 = _1395 * (_1359.z + (-0.5));
        float _1405 = exp2((_1366.w + (-0.5)) * 20.0) * 2.0;
        float _1406 = _1405 * (_1366.x + (-0.5));
        float _1407 = _1405 * (_1366.y + (-0.5));
        float _1408 = _1405 * (_1366.z + (-0.5));
        float _1415 = exp2((_1373.w + (-0.5)) * 20.0) * 2.0;
        float _1416 = _1415 * (_1373.x + (-0.5));
        float _1417 = _1415 * (_1373.y + (-0.5));
        float _1418 = _1415 * (_1373.z + (-0.5));
        float _1419 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1420 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
        float _1421 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1422 = _1386 * 0.5;
        float _1423 = _1396 * 0.5;
        float _1424 = _1406 * 0.5;
        float _1425 = dot(vec3(_1422, _1423, _1424), vec3(_1422, _1423, _1424));
        float _1430 = (_1425 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1425);
        float _1438 = (dot(vec3(_739, _740, _741), vec3(_1430 * _1422, _1430 * _1423, _1430 * _1424)) + 1.0) * 0.5;
        float _3589 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1447 = sqrt(((_1423 * _1423) + (_1422 * _1422)) + (_1424 * _1424)) / (_1419 + 9.9999997473787516355514526367188e-06);
        float _3600 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
        float _1448 = isnan(1.0) ? _3600 : (isnan(_3600) ? 1.0 : min(_3600, 1.0));
        float _1449 = _1448 * 2.0;
        float _1453 = (1.0 - _1448) / (_1448 + 1.0);
        float _3611 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1454 = isnan(1.0) ? _3611 : (isnan(_3611) ? 1.0 : min(_3611, 1.0));
        float _1463 = ((((1.0 - _1454) * (_1449 + 2.0)) * exp2(log2(isnan(1.0) ? _3589 : (isnan(_3589) ? 1.0 : min(_3589, 1.0))) * (_1449 + 1.0))) + _1454) * _1419;
        float _1464 = _1387 * 0.5;
        float _1465 = _1397 * 0.5;
        float _1466 = _1407 * 0.5;
        float _1467 = dot(vec3(_1464, _1465, _1466), vec3(_1464, _1465, _1466));
        float _1472 = (_1467 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1467);
        float _1480 = (dot(vec3(_739, _740, _741), vec3(_1472 * _1464, _1472 * _1465, _1472 * _1466)) + 1.0) * 0.5;
        float _3622 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1489 = sqrt(((_1465 * _1465) + (_1464 * _1464)) + (_1466 * _1466)) / (_1420 + 9.9999997473787516355514526367188e-06);
        float _3633 = isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0));
        float _1490 = isnan(1.0) ? _3633 : (isnan(_3633) ? 1.0 : min(_3633, 1.0));
        float _1491 = _1490 * 2.0;
        float _1495 = (1.0 - _1490) / (_1490 + 1.0);
        float _3644 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
        float _1496 = isnan(1.0) ? _3644 : (isnan(_3644) ? 1.0 : min(_3644, 1.0));
        float _1505 = ((((1.0 - _1496) * (_1491 + 2.0)) * exp2(log2(isnan(1.0) ? _3622 : (isnan(_3622) ? 1.0 : min(_3622, 1.0))) * (_1491 + 1.0))) + _1496) * _1420;
        float _1506 = _1388 * 0.5;
        float _1507 = _1398 * 0.5;
        float _1508 = _1408 * 0.5;
        float _1509 = dot(vec3(_1506, _1507, _1508), vec3(_1506, _1507, _1508));
        float _1514 = (_1509 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1509);
        float _1522 = (dot(vec3(_739, _740, _741), vec3(_1514 * _1506, _1514 * _1507, _1514 * _1508)) + 1.0) * 0.5;
        float _3655 = isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0));
        float _1531 = sqrt(((_1507 * _1507) + (_1506 * _1506)) + (_1508 * _1508)) / (_1421 + 9.9999997473787516355514526367188e-06);
        float _3666 = isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0));
        float _1532 = isnan(1.0) ? _3666 : (isnan(_3666) ? 1.0 : min(_3666, 1.0));
        float _1533 = _1532 * 2.0;
        float _1537 = (1.0 - _1532) / (_1532 + 1.0);
        float _3677 = isnan(0.0) ? _1537 : (isnan(_1537) ? 0.0 : max(_1537, 0.0));
        float _1538 = isnan(1.0) ? _3677 : (isnan(_3677) ? 1.0 : min(_3677, 1.0));
        float _1547 = ((((1.0 - _1538) * (_1533 + 2.0)) * exp2(log2(isnan(1.0) ? _3655 : (isnan(_3655) ? 1.0 : min(_3655, 1.0))) * (_1533 + 1.0))) + _1538) * _1421;
        _1555 = _1388;
        _1556 = _1387;
        _1557 = _1386;
        _1558 = _1398;
        _1559 = _1397;
        _1560 = _1396;
        _1561 = _1408;
        _1562 = _1407;
        _1563 = _1406;
        _1564 = _1421;
        _1565 = _1420;
        _1566 = _1419;
        _1567 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0)));
        _1568 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0)));
        _1569 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0)));
    }
    else
    {
        _1555 = _1243;
        _1556 = _1243;
        _1557 = _1243;
        _1558 = _1243;
        _1559 = _1243;
        _1560 = _1243;
        _1561 = _1243;
        _1562 = _1243;
        _1563 = _1243;
        _1564 = _1243;
        _1565 = _1243;
        _1566 = _1243;
        _1567 = 0.0;
        _1568 = 0.0;
        _1569 = 0.0;
    }
    float _1579 = (cbModelParam._m0[1u].x * (_1567 - _1255)) + _1255;
    float _1580 = (cbModelParam._m0[1u].x * (_1568 - _1256)) + _1256;
    float _1581 = (cbModelParam._m0[1u].x * (_1569 - _1257)) + _1257;
    float _1602 = fma(_1581, cbSceneParam._m0[89u].z, fma(_1580, cbSceneParam._m0[89u].y, _1579 * cbSceneParam._m0[89u].x));
    float _1605 = fma(_1581, cbSceneParam._m0[90u].z, fma(_1580, cbSceneParam._m0[90u].y, _1579 * cbSceneParam._m0[90u].x));
    float _1608 = fma(_1581, cbSceneParam._m0[91u].z, fma(_1580, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1579));
    float _1623 = _847 * 0.5;
    float _1624 = _848 * 0.5;
    float _1625 = _849 * 0.5;
    float _1626 = dot(vec4(_1623, _1624, _1625, 1.0), vec4(_1557, _1560, _1563, _1566));
    float _1629 = dot(vec4(_1623, _1624, _1625, 1.0), vec4(_1556, _1559, _1562, _1565));
    float _1632 = dot(vec4(_1623, _1624, _1625, 1.0), vec4(_1555, _1558, _1561, _1564));
    float _1666;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1639 = dot(vec4(_1623, _1624, _1625, 1.0), vec4(_1242, _1246, _1249, _1252));
        float _1643 = dot(vec4(_1623, _1624, _1625, 1.0), vec4(_1244, _1247, _1250, _1253));
        float _1647 = dot(vec4(_1623, _1624, _1625, 1.0), vec4(_1245, _1248, _1251, _1254));
        float _1654 = dot(vec4(cbModelParam._m0[39u]), vec4(_1623, _1624, _1625, 1.0));
        _1666 = dot(vec3(isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0)), isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0)), isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1654) ? 0.0 : (isnan(0.0) ? _1654 : max(0.0, _1654))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1666 = 1.0;
    }
    float _1677;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1668 = dot(vec4(cbModelParam._m0[40u]), vec4(_1623, _1624, _1625, 1.0));
        _1677 = dot(vec3(isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0)), isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0)), isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1668) ? 0.0 : (isnan(0.0) ? _1668 : max(0.0, _1668))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1677 = 1.0;
    }
    float _1681 = (_1677 * cbModelParam._m0[1u].x) + (_1666 * (1.0 - cbModelParam._m0[1u].x));
    float _1691 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _743);
    float _1692 = isnan(_1691) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1691 : min(cbModelParam._m0[25u].z, _1691));
    float _1772;
    float _1774;
    float _1776;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1739 = fma(_912, cbModelParam._m0[13u].z, fma(_908, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _904)) + cbModelParam._m0[13u].w;
        float _1743 = fma(_912, cbModelParam._m0[14u].z, fma(_908, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _904)) + cbModelParam._m0[14u].w;
        float _1747 = fma(_912, cbModelParam._m0[15u].z, fma(_908, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _904)) + cbModelParam._m0[15u].w;
        float _1750 = fma(_849, cbModelParam._m0[13u].z, fma(_848, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _847));
        float _1753 = fma(_849, cbModelParam._m0[14u].z, fma(_848, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _847));
        float _1756 = fma(_849, cbModelParam._m0[15u].z, fma(_848, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _847));
        float _1784;
        if (_1750 > 0.0)
        {
            _1784 = abs((1.0 - _1739) / _1750);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1750 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1739 + 1.0) / _1750);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1784 = frontier_phi_19_17_ladder;
        }
        float _1977;
        if (_1753 > 0.0)
        {
            _1977 = abs((1.0 - _1743) / _1753);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1753 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1743 + 1.0) / _1753);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1977 = frontier_phi_28_24_ladder;
        }
        float _2215;
        if (_1756 > 0.0)
        {
            _2215 = abs((1.0 - _1747) / _1756);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1756 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1747 + 1.0) / _1756);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2215 = frontier_phi_39_35_ladder;
        }
        float _2217 = isnan(_1977) ? _1784 : (isnan(_1784) ? _1977 : min(_1784, _1977));
        float _2218 = isnan(_2215) ? _2217 : (isnan(_2217) ? _2215 : min(_2217, _2215));
        float _2222 = (_2218 * _1750) + _1739;
        float _2223 = (_2218 * _1753) + _1743;
        float _2224 = (_2218 * _1756) + _1747;
        float _2225 = _2218 * 9.9999997473787516355514526367188e-05;
        float _2227 = (-1.0) - _2225;
        float _2229 = _2225 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2224 > _2229) || ((_2224 < _2227) || ((_2223 > _2229) || ((_2223 < _2227) || ((_2222 < _2227) || (_2222 > _2229))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2374 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2224, cbModelParam._m0[9u].z, fma(_2223, cbModelParam._m0[9u].y, _2222 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2224, cbModelParam._m0[10u].z, fma(_2223, cbModelParam._m0[10u].y, _2222 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2224, cbModelParam._m0[11u].z, fma(_2223, cbModelParam._m0[11u].y, _2222 * cbModelParam._m0[11u].x))), _1692);
            frontier_phi_18_39_ladder = _2374.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2374.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2374.x * cbModelParam._m0[1u].y;
        }
        _1772 = frontier_phi_18_39_ladder_2;
        _1774 = frontier_phi_18_39_ladder_1;
        _1776 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1760 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_847, _848, _849), _1692);
        _1772 = _1760.x * cbModelParam._m0[1u].y;
        _1774 = _1760.y * cbModelParam._m0[1u].y;
        _1776 = _1760.z * cbModelParam._m0[1u].y;
    }
    float _1780 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _743);
    float _1781 = isnan(_1780) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1780 : min(cbModelParam._m0[25u].w, _1780));
    float _1873;
    float _1875;
    float _1877;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1837 = fma(_912, cbModelParam._m0[21u].z, fma(_908, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _904)) + cbModelParam._m0[21u].w;
        float _1841 = fma(_912, cbModelParam._m0[22u].z, fma(_908, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _904)) + cbModelParam._m0[22u].w;
        float _1845 = fma(_912, cbModelParam._m0[23u].z, fma(_908, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _904)) + cbModelParam._m0[23u].w;
        float _1848 = fma(_849, cbModelParam._m0[21u].z, fma(_848, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _847));
        float _1851 = fma(_849, cbModelParam._m0[22u].z, fma(_848, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _847));
        float _1854 = fma(_849, cbModelParam._m0[23u].z, fma(_848, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _847));
        float _1982;
        if (_1848 > 0.0)
        {
            _1982 = abs((1.0 - _1837) / _1848);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1848 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1837 + 1.0) / _1848);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1982 = frontier_phi_30_26_ladder;
        }
        float _2242;
        if (_1851 > 0.0)
        {
            _2242 = abs((1.0 - _1841) / _1851);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1851 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1841 + 1.0) / _1851);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2242 = frontier_phi_41_37_ladder;
        }
        float _2549;
        if (_1854 > 0.0)
        {
            _2549 = abs((1.0 - _1845) / _1854);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1854 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1845 + 1.0) / _1854);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2549 = frontier_phi_52_47_ladder;
        }
        float _2551 = isnan(_2242) ? _1982 : (isnan(_1982) ? _2242 : min(_1982, _2242));
        float _2552 = isnan(_2549) ? _2551 : (isnan(_2551) ? _2549 : min(_2551, _2549));
        float _2556 = (_2552 * _1848) + _1837;
        float _2557 = (_2552 * _1851) + _1841;
        float _2558 = (_2552 * _1854) + _1845;
        float _2559 = _2552 * 9.9999997473787516355514526367188e-05;
        float _2560 = (-1.0) - _2559;
        float _2562 = _2559 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2558 > _2562) || ((_2558 < _2560) || ((_2557 > _2562) || ((_2557 < _2560) || ((_2556 < _2560) || (_2556 > _2562))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2739 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2558, cbModelParam._m0[17u].z, fma(_2557, cbModelParam._m0[17u].y, _2556 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2558, cbModelParam._m0[18u].z, fma(_2557, cbModelParam._m0[18u].y, _2556 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2558, cbModelParam._m0[19u].z, fma(_2557, cbModelParam._m0[19u].y, _2556 * cbModelParam._m0[19u].x))), _1781);
            frontier_phi_27_52_ladder = _2739.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2739.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2739.y * cbModelParam._m0[1u].z;
        }
        _1873 = frontier_phi_27_52_ladder_1;
        _1875 = frontier_phi_27_52_ladder_2;
        _1877 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1857 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_847, _848, _849), _1781);
        _1873 = _1857.x * cbModelParam._m0[1u].z;
        _1875 = _1857.y * cbModelParam._m0[1u].z;
        _1877 = _1857.z * cbModelParam._m0[1u].z;
    }
    float _1889 = ((((1.0 - _872) * ((_860 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_872 * _860)) * _839;
    float _1890 = _1889 * ((cbModelParam._m0[1u].w * (_1873 - _1772)) + _1772);
    float _1891 = _1889 * ((cbModelParam._m0[1u].w * (_1875 - _1774)) + _1774);
    float _1892 = _1889 * ((cbModelParam._m0[1u].w * (_1877 - _1776)) + _1776);
    float _1895 = fma(_1892, cbSceneParam._m0[89u].z, fma(_1891, cbSceneParam._m0[89u].y, _1890 * cbSceneParam._m0[89u].x));
    float _1898 = fma(_1892, cbSceneParam._m0[90u].z, fma(_1891, cbSceneParam._m0[90u].y, _1890 * cbSceneParam._m0[90u].x));
    float _1901 = fma(_1892, cbSceneParam._m0[91u].z, fma(_1891, cbSceneParam._m0[91u].y, _1890 * cbSceneParam._m0[91u].x));
    vec4 _1909 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_778, _779));
    float _1911 = _1909.w;
    float _1923 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1911);
    float _1924 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1911);
    float _1925 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1911);
    uvec4 _1929 = floatBitsToUint(cbInstanceData._m0[_306 + 5u]);
    uint _1931 = _1929.x * 14u;
    uint _1932 = _1931 + 13u;
    float _1937 = _839 + (-1.0);
    float _1940 = (cbLight._m0[_1932].x * _1937) + 1.0;
    float _1941 = (cbLight._m0[_1932].y * _1937) + 1.0;
    uint _1943 = _1931 + 4u;
    float _1954 = dot(vec3(cbLight._m0[_1931].xyz), vec3(_739, _740, _741));
    float _1957 = isnan(1.0) ? _1940 : (isnan(_1940) ? 1.0 : min(_1940, 1.0));
    float _1958 = cbLight._m0[_1943].x * _1923;
    float _1959 = cbLight._m0[_1943].y * _1924;
    float _1960 = cbLight._m0[_1943].z * _1925;
    uint _1961 = _1931 + 5u;
    uint _1967 = _1931 | 1u;
    float _1973 = dot(vec3(cbLight._m0[_1967].xyz), vec3(_739, _740, _741));
    float _1976 = isnan(1.0) ? _1941 : (isnan(_1941) ? 1.0 : min(_1941, 1.0));
    float _2041;
    float _2042;
    float _2043;
    if (_744 == 0.0)
    {
        float _3813 = isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0));
        float _3824 = isnan(0.0) ? _1973 : (isnan(_1973) ? 0.0 : max(_1973, 0.0));
        float _1995 = (isnan(1.0) ? _3813 : (isnan(_3813) ? 1.0 : min(_3813, 1.0))) * 0.3183098733425140380859375;
        float _1997 = (isnan(1.0) ? _3824 : (isnan(_3824) ? 1.0 : min(_3824, 1.0))) * 0.3183098733425140380859375;
        _2041 = ((cbLight._m0[_1961].x * _1976) * _1997) + ((_1958 * _1957) * _1995);
        _2042 = ((_1976 * cbLight._m0[_1961].y) * _1997) + ((_1959 * _1957) * _1995);
        _2043 = ((_1976 * cbLight._m0[_1961].z) * _1997) + ((_1960 * _1957) * _1995);
    }
    else
    {
        float _2007 = _1954 + _744;
        float _2010 = (_744 * 2.0) + 1.0;
        float _2011 = (isnan(0.0) ? _2007 : (isnan(_2007) ? 0.0 : max(_2007, 0.0))) / _2010;
        float _2018 = _1973 + _744;
        float _2020 = (isnan(0.0) ? _2018 : (isnan(_2018) ? 0.0 : max(_2018, 0.0))) / _2010;
        _2041 = (((_2020 * cbLight._m0[_1961].x) * _1976) + ((_1958 * _2011) * _1957)) * 0.3183098733425140380859375;
        _2042 = (((_2020 * cbLight._m0[_1961].y) * _1976) + ((_1959 * _2011) * _1957)) * 0.3183098733425140380859375;
        _2043 = (((_2020 * cbLight._m0[_1961].z) * _1976) + ((_1960 * _2011) * _1957)) * 0.3183098733425140380859375;
    }
    uint _2047 = _1931 + 8u;
    float _2063 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1931].w)) * _743) * 0.949999988079071044921875);
    float _2064 = _2063 * _2063;
    float _2065 = cbLight._m0[_1931].x + _518;
    float _2066 = cbLight._m0[_1931].y + _519;
    float _2067 = cbLight._m0[_1931].z + _520;
    float _2071 = inversesqrt(dot(vec3(_2065, _2066, _2067), vec3(_2065, _2066, _2067)));
    float _2072 = _2071 * _2065;
    float _2073 = _2071 * _2066;
    float _2074 = _2071 * _2067;
    float _2075 = dot(vec3(_739, _740, _741), vec3(cbLight._m0[_1931].xyz));
    float _3845 = isnan(0.0) ? _2075 : (isnan(_2075) ? 0.0 : max(_2075, 0.0));
    float _2078 = isnan(1.0) ? _3845 : (isnan(_3845) ? 1.0 : min(_3845, 1.0));
    float _3856 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    float _2079 = isnan(1.0) ? _3856 : (isnan(_3856) ? 1.0 : min(_3856, 1.0));
    float _2080 = dot(vec3(_739, _740, _741), vec3(_2072, _2073, _2074));
    float _3867 = isnan(0.0) ? _2080 : (isnan(_2080) ? 0.0 : max(_2080, 0.0));
    float _2083 = isnan(1.0) ? _3867 : (isnan(_3867) ? 1.0 : min(_3867, 1.0));
    float _2084 = dot(vec3(cbLight._m0[_1931].xyz), vec3(_2072, _2073, _2074));
    float _3878 = isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0));
    float _2088 = _2064 * _2064;
    float _2092 = ((_2083 * _2083) * (_2088 + (-1.0))) + 1.0;
    float _2103 = (exp2(log2(1.0 - (isnan(1.0) ? _3878 : (isnan(_3878) ? 1.0 : min(_3878, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2104 = 1.0 - _2064;
    float _2115 = (0.5 / (((_2079 * ((_2078 * _2104) + _2064)) + 9.9999999392252902907785028219223e-09) + (((_2079 * _2104) + _2064) * _2078))) * _2078;
    float _3889 = isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0));
    float _2117 = (isnan(1.0) ? _3889 : (isnan(_3889) ? 1.0 : min(_3889, 1.0))) * (_2088 / ((_2092 * _2092) * 3.141590118408203125));
    uint _2133 = _1931 + 9u;
    float _2147 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1967].w)) * _743) * 0.949999988079071044921875);
    float _2148 = _2147 * _2147;
    float _2149 = cbLight._m0[_1967].x + _518;
    float _2150 = cbLight._m0[_1967].y + _519;
    float _2151 = cbLight._m0[_1967].z + _520;
    float _2155 = inversesqrt(dot(vec3(_2149, _2150, _2151), vec3(_2149, _2150, _2151)));
    float _2156 = _2155 * _2149;
    float _2157 = _2155 * _2150;
    float _2158 = _2155 * _2151;
    float _2159 = dot(vec3(_739, _740, _741), vec3(cbLight._m0[_1967].xyz));
    float _3900 = isnan(0.0) ? _2159 : (isnan(_2159) ? 0.0 : max(_2159, 0.0));
    float _2162 = isnan(1.0) ? _3900 : (isnan(_3900) ? 1.0 : min(_3900, 1.0));
    float _2163 = dot(vec3(_739, _740, _741), vec3(_2156, _2157, _2158));
    float _3911 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
    float _2166 = isnan(1.0) ? _3911 : (isnan(_3911) ? 1.0 : min(_3911, 1.0));
    float _2167 = dot(vec3(cbLight._m0[_1967].xyz), vec3(_2156, _2157, _2158));
    float _3922 = isnan(0.0) ? _2167 : (isnan(_2167) ? 0.0 : max(_2167, 0.0));
    float _2171 = _2148 * _2148;
    float _2175 = ((_2166 * _2166) * (_2171 + (-1.0))) + 1.0;
    float _2184 = (exp2(log2(1.0 - (isnan(1.0) ? _3922 : (isnan(_3922) ? 1.0 : min(_3922, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2185 = 1.0 - _2148;
    float _2195 = (0.5 / (((_2079 * ((_2162 * _2185) + _2148)) + 9.9999999392252902907785028219223e-09) + (((_2079 * _2185) + _2148) * _2162))) * _2162;
    float _3933 = isnan(0.0) ? _2195 : (isnan(_2195) ? 0.0 : max(_2195, 0.0));
    float _2197 = (isnan(1.0) ? _3933 : (isnan(_3933) ? 1.0 : min(_3933, 1.0))) * (_2171 / ((_2175 * _2175) * 3.141590118408203125));
    float _2207 = (((_2184 * cbLight._m0[_2133].x) * _2197) * _1976) + ((((cbLight._m0[_2047].x * _1923) * _2103) * _2117) * _1957);
    float _2208 = (((_2184 * cbLight._m0[_2133].y) * _2197) * _1976) + ((((cbLight._m0[_2047].y * _1924) * _2103) * _2117) * _1957);
    float _2209 = (((_2184 * cbLight._m0[_2133].z) * _2197) * _1976) + ((((cbLight._m0[_2047].z * _1925) * _2103) * _2117) * _1957);
    float _2345;
    float _2347;
    float _2349;
    float _2351;
    float _2353;
    float _2355;
    if (_1929.y == 0u)
    {
        float _2286 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2287 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2286;
        float _2288 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2286;
        float _2289 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2286;
        uvec4 _2301 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2302 = _2301.x;
        uint _2313 = uint((float(_2301.y) * floor(float(uint(cbSceneParam._m0[85u].y * _779) / _2302))) + floor(float(uint(cbSceneParam._m0[85u].x * _778) / _2302)));
        float _2323 = (log2(_2289 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2324 = isnan(0.0) ? _2323 : (isnan(_2323) ? 0.0 : max(_2323, 0.0));
        uint _2327 = uint(isnan(14.0) ? _2324 : (isnan(_2324) ? 14.0 : min(_2324, 14.0)));
        uint _2334 = _2301.z;
        float _2383;
        float _2385;
        float _2387;
        float _2389;
        float _2391;
        float _2393;
        if (((((1u << ((_2334 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2327 << 2u) + (_2313 << 6u)) >> 2u)).x) == 0u) || ((_2334 & 240u) == 0u))
        {
            _2383 = 0.0;
            _2385 = 0.0;
            _2387 = 0.0;
            _2389 = 0.0;
            _2391 = 0.0;
            _2393 = 0.0;
        }
        else
        {
            float _2384;
            float _2386;
            float _2388;
            float _2390;
            float _2392;
            float _2394;
            float _2575 = 0.0;
            float _2576 = 0.0;
            float _2577 = 0.0;
            float _2578 = 0.0;
            float _2579 = 0.0;
            float _2580 = 0.0;
            uint _2581 = 0u;
            uint _2590;
            bool _2591;
            for (;;)
            {
                _2590 = texelFetch(g_lightClassification, int((((_2327 << 5u) + (_2313 << 9u)) + (_2581 << 2u)) >> 2u)).x;
                _2591 = _2590 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2591)
                {
                    frontier_phi_58_pred = _2575;
                    frontier_phi_58_pred_1 = _2580;
                    frontier_phi_58_pred_2 = _2579;
                    frontier_phi_58_pred_3 = _2578;
                    frontier_phi_58_pred_4 = _2577;
                    frontier_phi_58_pred_5 = _2576;
                }
                else
                {
                    float _2812;
                    float _2813;
                    float _2814;
                    float _2815;
                    float _2816;
                    float _2817;
                    uint _2818;
                    _2812 = _2575;
                    _2813 = _2576;
                    _2814 = _2577;
                    _2815 = _2578;
                    _2816 = _2579;
                    _2817 = _2580;
                    _2818 = _2590;
                    float _2744;
                    float _2745;
                    float _2746;
                    float _2747;
                    float _2748;
                    float _2749;
                    for (;;)
                    {
                        uint _2822 = uint(findLSB(_2818)) + (_2581 << 5u);
                        uint _2819 = (_2818 + 4294967295u) & _2818;
                        uint _2824 = _2822 * 48u;
                        vec4 _2838 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2824)).x, texelFetch(g_PointLightRenderingBuffer, int(_2824 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2824 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2824 + 3u)).x));
                        uint _2844 = (_2822 * 48u) + 4u;
                        vec4 _2857 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2844)).x, texelFetch(g_PointLightRenderingBuffer, int(_2844 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2844 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2844 + 3u)).x));
                        float _2858 = _2857.x;
                        float _2859 = _2857.y;
                        float _2860 = _2857.z;
                        uint _2863 = (_2822 * 48u) + 8u;
                        vec3 _2874 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2863)).x, texelFetch(g_PointLightRenderingBuffer, int(_2863 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2863 + 2u)).x));
                        uint _2879 = (_2822 * 48u) + 12u;
                        vec2 _2887 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2879)).x, texelFetch(g_PointLightRenderingBuffer, int(_2879 + 1u)).x));
                        float _2893 = inversesqrt(dot(vec3(_2287, _2288, _2289), vec3(_2287, _2288, _2289)));
                        float _2894 = _2893 * _2287;
                        float _2895 = _2893 * _2288;
                        float _2896 = _2893 * _2289;
                        float _2897 = _2838.x - _2287;
                        float _2898 = _2838.y - _2288;
                        float _2899 = _2838.z - _2289;
                        float _2900 = dot(vec3(_2897, _2898, _2899), vec3(_2897, _2898, _2899));
                        float _2903 = inversesqrt(_2900);
                        float _2904 = _2903 * _2897;
                        float _2905 = _2903 * _2898;
                        float _2906 = _2903 * _2899;
                        float _2907 = dot(vec3(_797, _800, _803), vec3(_2904, _2905, _2906));
                        float _2912 = 1.0 - (_2900 * _2838.w);
                        float _3954 = isnan(0.0) ? _2912 : (isnan(_2912) ? 0.0 : max(_2912, 0.0));
                        float _2913 = isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0));
                        float _2914 = sqrt(_2900) * _2857.w;
                        float _2917 = 1.39999997615814208984375 / (_2914 + 1.39999997615814208984375);
                        float _2918 = _2917 * _2917;
                        float _2919 = 1.0 - _2918;
                        float _2921 = (_2919 * _2919) * _744;
                        float _2924 = ((_2919 * _2907) + _2918) + _2921;
                        float _2929 = _2914 * _2914;
                        float _2934 = ((isnan(0.0) ? _2924 : (isnan(_2924) ? 0.0 : max(_2924, 0.0))) * _2913) / (((_2921 * 2.0) + 1.0) * ((_2929 * 0.699999988079071044921875) + 1.0));
                        float _2938 = dot(vec3(_2904, _2905, _2906), vec3(_2894, _2895, _2896));
                        float _3970 = isnan(0.0) ? _2938 : (isnan(_2938) ? 0.0 : max(_2938, 0.0));
                        float _2945 = dot(vec3((-0.0) - _2894, (-0.0) - _2895, (-0.0) - _2896), vec3(_797, _800, _803)) + 1.0;
                        float _2947 = (isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : max(_2945, 0.0))) * 0.5;
                        float _2954 = ((_2947 * _2947) * _2887.x) * exp2((_2887.y * 32.0) * log2(isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0))));
                        float _2956 = _744 / (_744 + 1.0);
                        float _2972 = (-0.0) - _2287;
                        float _2973 = (-0.0) - _2288;
                        float _2974 = (-0.0) - _2289;
                        float _2978 = inversesqrt(dot(vec3(_2972, _2973, _2974), vec3(_2972, _2973, _2974)));
                        float _2979 = _2978 * _2972;
                        float _2980 = _2978 * _2973;
                        float _2981 = _2978 * _2974;
                        float _2989 = exp2(log2(1.0 / ((_2929 * 3.5) + 5.0)) * 0.25);
                        float _2990 = 1.0 - _860;
                        float _2997 = sqrt(1.0 - ((1.0 - (_2990 * _2990)) * (1.0 - (_2989 * _2989))));
                        float _2998 = _2997 * _2997;
                        float _2999 = _2998 * _2998;
                        float _3000 = _2979 + _2904;
                        float _3001 = _2980 + _2905;
                        float _3002 = _2981 + _2906;
                        float _3006 = inversesqrt(dot(vec3(_3000, _3001, _3002), vec3(_3000, _3001, _3002)));
                        float _3010 = dot(vec3(_797, _800, _803), vec3(_2979, _2980, _2981));
                        float _3986 = isnan(0.0) ? _3010 : (isnan(_3010) ? 0.0 : max(_3010, 0.0));
                        float _3013 = isnan(1.0) ? _3986 : (isnan(_3986) ? 1.0 : min(_3986, 1.0));
                        float _3014 = dot(vec3(_797, _800, _803), vec3(_3006 * _3000, _3006 * _3001, _3006 * _3002));
                        float _3997 = isnan(0.0) ? _3014 : (isnan(_3014) ? 0.0 : max(_3014, 0.0));
                        float _3017 = isnan(1.0) ? _3997 : (isnan(_3997) ? 1.0 : min(_3997, 1.0));
                        float _3021 = ((_3017 * _3017) * (_2999 + (-1.0))) + 1.0;
                        float _3022 = _2917 * _2998;
                        float _3023 = _3022 * _3022;
                        float _3026 = ((1.0 - _3023) * _2907) + _3023;
                        float _4008 = isnan(0.0) ? _3026 : (isnan(_3026) ? 0.0 : max(_3026, 0.0));
                        float _3027 = isnan(1.0) ? _4008 : (isnan(_4008) ? 1.0 : min(_4008, 1.0));
                        float _3028 = 1.0 - _2998;
                        float _3038 = (0.5 / (((_3027 * ((_3013 * _3028) + _2998)) + 9.9999999392252902907785028219223e-09) + (((_3027 * _3028) + _2998) * _3013))) * _3027;
                        float _4019 = isnan(0.0) ? _3038 : (isnan(_3038) ? 0.0 : max(_3038, 0.0));
                        float _3049 = (((_2999 * 3.1415927410125732421875) * (isnan(1.0) ? _4019 : (isnan(_4019) ? 1.0 : min(_4019, 1.0)))) / ((_3021 * _3021) * ((_2929 * 2.1991131305694580078125) + 3.141590118408203125))) * _2913;
                        _2747 = (((((_2858 * 0.3183098733425140380859375) * _2956) * _2954) + _2858) * _2934) + _2815;
                        _2748 = (((((_2859 * 0.3183098733425140380859375) * _2956) * _2954) + _2859) * _2934) + _2816;
                        _2749 = (((((_2860 * 0.3183098733425140380859375) * _2956) * _2954) + _2860) * _2934) + _2817;
                        _2744 = (_3049 * _2874.x) + _2812;
                        _2745 = (_3049 * _2874.y) + _2813;
                        _2746 = (_3049 * _2874.z) + _2814;
                        if (_2819 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2812 = _2744;
                            _2813 = _2745;
                            _2814 = _2746;
                            _2815 = _2747;
                            _2816 = _2748;
                            _2817 = _2749;
                            _2818 = _2819;
                        }
                    }
                    frontier_phi_58_pred = _2744;
                    frontier_phi_58_pred_1 = _2749;
                    frontier_phi_58_pred_2 = _2748;
                    frontier_phi_58_pred_3 = _2747;
                    frontier_phi_58_pred_4 = _2746;
                    frontier_phi_58_pred_5 = _2745;
                }
                _2384 = frontier_phi_58_pred;
                _2394 = frontier_phi_58_pred_1;
                _2392 = frontier_phi_58_pred_2;
                _2390 = frontier_phi_58_pred_3;
                _2388 = frontier_phi_58_pred_4;
                _2386 = frontier_phi_58_pred_5;
                uint _2582 = _2581 + 1u;
                if (_2582 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2575 = _2384;
                    _2576 = _2386;
                    _2577 = _2388;
                    _2578 = _2390;
                    _2579 = _2392;
                    _2580 = _2394;
                    _2581 = _2582;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2383 = _2384;
            _2385 = _2386;
            _2387 = _2388;
            _2389 = _2390;
            _2391 = _2392;
            _2393 = _2394;
        }
        float _2398 = isnan(1.0) ? _839 : (isnan(_839) ? 1.0 : min(_839, 1.0));
        _2345 = (_2398 * _2389) + _2041;
        _2347 = (_2398 * _2391) + _2042;
        _2349 = (_2398 * _2393) + _2043;
        _2351 = ((_2383 * 0.039999999105930328369140625) * _2398) + _2207;
        _2353 = ((_2385 * 0.039999999105930328369140625) * _2398) + _2208;
        _2355 = ((_2387 * 0.039999999105930328369140625) * _2398) + _2209;
    }
    else
    {
        _2345 = _2041;
        _2347 = _2042;
        _2349 = _2043;
        _2351 = _2207;
        _2353 = _2208;
        _2355 = _2209;
    }
    float _2472;
    float _2473;
    float _2474;
    if (_744 > 0.0)
    {
        uint _2405 = _1931 + 4u;
        float _2411 = (-0.0) - _518;
        float _2412 = (-0.0) - _519;
        float _2413 = (-0.0) - _520;
        float _2414 = dot(vec3(cbLight._m0[_1931].xyz), vec3(_2411, _2412, _2413));
        float _4035 = isnan(0.0) ? _2414 : (isnan(_2414) ? 0.0 : max(_2414, 0.0));
        float _2418 = _850 + 1.0;
        float _2420 = (isnan(0.0) ? _2418 : (isnan(_2418) ? 0.0 : max(_2418, 0.0))) * 0.5;
        float _2425 = _2420 * _2420;
        float _2426 = _2425 * exp2(log2(isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0))) * 32.0);
        float _2428 = _744 / (_744 + 1.0);
        float _2429 = isnan(_1940) ? 1.0 : (isnan(1.0) ? _1940 : min(1.0, _1940));
        uint _2442 = _1931 + 5u;
        float _2448 = dot(vec3(cbLight._m0[_1967].xyz), vec3(_2411, _2412, _2413));
        float _4056 = isnan(0.0) ? _2448 : (isnan(_2448) ? 0.0 : max(_2448, 0.0));
        float _2455 = _2425 * exp2(log2(isnan(1.0) ? _4056 : (isnan(_4056) ? 1.0 : min(_4056, 1.0))) * 32.0);
        float _2456 = isnan(_1941) ? 1.0 : (isnan(1.0) ? _1941 : min(1.0, _1941));
        _2472 = ((((_2455 * cbLight._m0[_2442].x) * _2428) * _2456) + ((((cbLight._m0[_2405].x * _1923) * _2426) * _2428) * _2429)) * 0.3183098733425140380859375;
        _2473 = ((((_2455 * cbLight._m0[_2442].y) * _2428) * _2456) + ((((cbLight._m0[_2405].y * _1924) * _2426) * _2428) * _2429)) * 0.3183098733425140380859375;
        _2474 = ((((_2455 * cbLight._m0[_2442].z) * _2428) * _2456) + ((((cbLight._m0[_2405].z * _1925) * _2426) * _2428) * _2429)) * 0.3183098733425140380859375;
    }
    else
    {
        _2472 = 0.0;
        _2473 = 0.0;
        _2474 = 0.0;
    }
    float _4072 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _4083 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _4094 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    float _4105 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _2489 = (isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0))) * ((_2345 + ((isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0))) * _839)) + _2472);
    float _2490 = (isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0))) * ((_2347 + ((isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0))) * _839)) + _2473);
    float _2491 = (isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0))) * ((_2349 + ((isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0))) * _839)) + _2474);
    float _2495 = 0.959999978542327880859375 - (exp2(log2(1.0 - _854) * 5.0) * 0.959999978542327880859375);
    float _2506 = (_2489 + ((_2351 + ((isnan(0.0) ? _1895 : (isnan(_1895) ? 0.0 : max(_1895, 0.0))) * _1681)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _678.x) * _2495) - _2489) * _724);
    float _2508 = (_2490 + ((_2353 + ((isnan(0.0) ? _1898 : (isnan(_1898) ? 0.0 : max(_1898, 0.0))) * _1681)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _678.y) * _2495) - _2490) * _724);
    float _2510 = (_2491 + ((_2355 + ((isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0))) * _1681)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _678.z) * _2495) - _2491) * _724);
    float _2515 = cbInstanceData._m0[_306 + 6u].w * (isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0)));
    float _2520 = _778 / cbSceneParam._m0[86u].x;
    float _2521 = _779 / cbSceneParam._m0[86u].y;
    vec4 _2535 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2520, _2521, (log2((isnan(cbSceneParam._m0[77u].w) ? _761 : (isnan(_761) ? cbSceneParam._m0[77u].w : min(_761, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2537 = _2535.x;
    float _2538 = _2535.y;
    float _2539 = _2535.z;
    float _2540 = _2535.w;
    float _2633;
    float _2635;
    float _2637;
    float _2639;
    if (_761 > cbSceneParam._m0[78u].w)
    {
        float _2596 = isnan(_761) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _761 : min(cbSceneParam._m0[80u].w, _761));
        float _2597 = _2596 / _761;
        float _2608 = _2597 * _298;
        float _2609 = _299 * _2597;
        float _2610 = (-0.0) - _2609;
        float _2611 = _2597 * _300;
        float _2613 = (cbSceneParam._m0[77u].w * _2610) / _2596;
        float _2614 = _2613 + cbSceneParam._m0[79u].w;
        float _2615 = cbSceneParam._m0[79u].w - _2609;
        float _2621 = sqrt(((_2608 * _2608) + (_2609 * _2609)) + (_2611 * _2611));
        float _2624 = (1.0 - (cbSceneParam._m0[77u].w / _2596)) * _2621;
        float _2629 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2631 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3054;
        if (abs((_2610 - _2613) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3054 = ((((_2614 > 0.0) ? exp2(_2629 * _2614) : (2.0 - exp2(_2631 * _2614))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2624;
        }
        else
        {
            float _2769 = 1.0 / cbSceneParam._m0[80u].x;
            float _2770 = isnan(_2615) ? _2614 : (isnan(_2614) ? _2615 : max(_2614, _2615));
            float _2771 = isnan(_2615) ? _2614 : (isnan(_2614) ? _2615 : min(_2614, _2615));
            float _2780 = isnan(0.0) ? _2770 : (isnan(_2770) ? 0.0 : min(_2770, 0.0));
            float _2781 = isnan(0.0) ? _2771 : (isnan(_2771) ? 0.0 : min(_2771, 0.0));
            _3054 = ((abs(_2621 / _2610) * cbSceneParam._m0[80u].y) * ((((_2780 - _2781) * 2.0) - ((exp2(_2629 * (isnan(0.0) ? _2770 : (isnan(_2770) ? 0.0 : max(_2770, 0.0)))) - exp2(_2629 * (isnan(0.0) ? _2771 : (isnan(_2771) ? 0.0 : max(_2771, 0.0))))) * _2769)) - ((exp2(_2631 * _2780) - exp2(_2631 * _2781)) * _2769))) + (_2624 * cbSceneParam._m0[80u].z);
        }
        vec4 _3056 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2520, _2521, 1.0), 0.0);
        float _3065 = exp2((_3054 * (-1.44269502162933349609375)) * (1.0 - _3056.w));
        float _3066 = log2(_3065);
        float _3082 = log2(_2540);
        _2633 = (exp2(_3082 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3066 * cbSceneParam._m0[78u].x)) * _3056.x) / cbSceneParam._m0[78u].x)) + _2537;
        _2635 = (exp2(_3082 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3066 * cbSceneParam._m0[78u].y)) * _3056.y) / cbSceneParam._m0[78u].y)) + _2538;
        _2637 = (exp2(_3082 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3066 * cbSceneParam._m0[78u].z)) * _3056.z) / cbSceneParam._m0[78u].z)) + _2539;
        _2639 = _3065 * _2540;
    }
    else
    {
        _2633 = _2537;
        _2635 = _2538;
        _2637 = _2539;
        _2639 = _2540;
    }
    bool _3092;
    float _2694;
    vec4 _2697;
    float _2699;
    vec4 _2701;
    float _2709;
    float _2710;
    float _2711;
    float _2712;
    bool _2722;
    for (;;)
    {
        bool _2651 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2652 = log2(_2639);
        float _2659 = exp2(_2652 * cbSceneParam._m0[78u].x) * _2506;
        float _2660 = exp2(_2652 * cbSceneParam._m0[78u].y) * _2508;
        float _2661 = exp2(_2652 * cbSceneParam._m0[78u].z) * _2510;
        vec4 _2669 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_778, _779));
        float _2671 = _2669.x;
        float _2692 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2671)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2671))) - _761) * cbMtdParam._m0[17u].y;
        float _4156 = isnan(0.0) ? _2692 : (isnan(_2692) ? 0.0 : max(_2692, 0.0));
        _2694 = _2515 * (isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0)));
        float _2695 = _768 + (-0.5);
        _2697 = cbMtdParam._m0[1u];
        _2699 = _2697.y * _2695;
        _2701 = cbMatDynParam._m0[0u];
        float _2708 = (roundEven(_2701.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2709 = _2708 * (_2651 ? _2659 : (_2659 + (cbSceneParam._m0[72u].w * _2633)));
        _2710 = _2708 * (_2651 ? _2660 : (_2660 + (cbSceneParam._m0[72u].w * _2635)));
        _2711 = _2708 * (_2651 ? _2661 : (_2661 + (cbSceneParam._m0[72u].w * _2637)));
        _2712 = _2695 * 0.999000012874603271484375;
        _2722 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2722)
        {
            if ((cbInstanceData._m0[_306 + 7u].x + _2712) < 0.5)
            {
                _3092 = true;
                break;
            }
        }
        uint _2804 = _816 + uint(_2701.w);
        if ((cbInstanceData._m0[_2804].w < 1.0) && ((cbInstanceData._m0[_2804].w + _2712) < 0.5))
        {
            _3092 = true;
            break;
        }
        if ((_2699 + _428) < _2697.x)
        {
            _3092 = true;
            break;
        }
        _3092 = false;
        break;
    }
    float _3097;
    if (_3092)
    {
        discard_state = true;
        _3097 = 0.0;
    }
    else
    {
        _3097 = _2694;
    }
    SV_Target.x = _2709;
    SV_Target.y = _2710;
    SV_Target.z = _2711;
    SV_Target.w = _3097;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2694;
    discard_exit();
}


