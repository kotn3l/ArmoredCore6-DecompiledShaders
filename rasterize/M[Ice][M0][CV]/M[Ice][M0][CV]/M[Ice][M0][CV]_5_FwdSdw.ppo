#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1191;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _207 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _208 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _209 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _215 = inversesqrt(dot(vec3(_207, _208, _209), vec3(_207, _208, _209)));
    float _216 = _215 * _207;
    float _217 = _215 * _208;
    float _218 = _215 * _209;
    float _222 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _223 = _222 * NORMAL.x;
    float _224 = _222 * NORMAL.y;
    float _225 = _222 * NORMAL.z;
    float _229 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _230 = _229 * TANGENT.x;
    float _231 = _229 * TANGENT.y;
    float _232 = _229 * TANGENT.z;
    float _237;
    float _238;
    float _239;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _237 = (-0.0) - _223;
        _238 = (-0.0) - _224;
        _239 = (-0.0) - _225;
    }
    else
    {
        _237 = _223;
        _238 = _224;
        _239 = _225;
    }
    float _286 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _296 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _286);
    float _297 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _286);
    float _298 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _286);
    uint _304 = uint(roundEven(NORMAL.w)) * 13u;
    uint _309 = _304 + 1u;
    uint _313 = _304 + 2u;
    float _322 = sqrt(((cbInstanceData._m0[_309].x * cbInstanceData._m0[_309].x) + (cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x)) + (cbInstanceData._m0[_313].x * cbInstanceData._m0[_313].x));
    float _323 = _322 * TEXCOORD.z;
    float _324 = _322 * TEXCOORD.w;
    vec4 _337 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _323) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _324) + cbTextureTilingScale._m0[8u].w));
    vec4 _358 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _366 = (_358.x * 2.0) + (-1.0);
    float _368 = (_358.y * 2.0) + (-1.0);
    float _369 = dot(vec2(_366, _368), vec2(_366, _368));
    float _3364 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
    float _375 = sqrt(1.0 - (isnan(1.0) ? _3364 : (isnan(_3364) ? 1.0 : min(_3364, 1.0))));
    float _378 = fma(_375, _237, fma(_368, _230, _366 * _216));
    float _381 = fma(_375, _238, fma(_368, _231, _366 * _217));
    float _384 = fma(_375, _239, fma(_368, _232, _366 * _218));
    float _388 = inversesqrt(dot(vec3(_378, _381, _384), vec3(_378, _381, _384)));
    vec4 _421 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _426 = _421.w;
    float _438 = dot(vec3(_296, _297, _298), vec3(_216, _217, _218));
    float _441 = dot(vec3(_296, _297, _298), vec3(_230, _231, _232));
    float _444 = dot(vec3(_296, _297, _298), vec3(_237, _238, _239));
    float _450 = inversesqrt(dot(vec3(_438, _441, _444), vec3(_438, _441, _444)));
    float _472 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _492 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_438 * cbMtdParam._m0[14u].x) * _450) * _472) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_441 * cbMtdParam._m0[14u].x) * _450) * _472) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _515 = inversesqrt(dot(vec3(_296, _297, _298), vec3(_296, _297, _298)));
    float _516 = _515 * _296;
    float _517 = _515 * _297;
    float _518 = _515 * _298;
    float _519 = dot(vec4(_516, _517, _518, 0.0), vec4(_237, _238, _239, 0.0));
    float _522 = _519 - cbMtdParam._m0[15u].z;
    float _3375 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _529 = exp2(log2(1.0 - (isnan(1.0) ? _3375 : (isnan(_3375) ? 1.0 : min(_3375, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _544 = ((((_421.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _492.x) * cbMtdParam._m0[9u].x) * ((_529 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _549 = ((((_421.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _492.y) * cbMtdParam._m0[9u].y) * ((_529 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _554 = ((((_421.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _492.z) * cbMtdParam._m0[9u].z) * ((_529 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _563 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _323) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _324) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3391 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _564 = isnan(1.0) ? _3391 : (isnan(_3391) ? 1.0 : min(_3391, 1.0));
    float _571 = (_564 * ((_337.x * cbMtdParam._m0[10u].x) - _544)) + _544;
    float _572 = (((_337.y * cbMtdParam._m0[10u].y) - _549) * _564) + _549;
    float _573 = (((_337.z * cbMtdParam._m0[10u].z) - _554) * _564) + _554;
    vec4 _585 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _323) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _324) + cbTextureTilingScale._m0[9u].w));
    float _592 = (_585.x * 2.0) + (-1.0);
    float _593 = (_585.y * 2.0) + (-1.0);
    float _594 = dot(vec2(_592, _593), vec2(_592, _593));
    float _3402 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _608 = (cbMtdParam._m0[16u].y + _358.z) + cbMtdParam._m0[17u].z;
    float _611 = ((_585.z - _608) * _564) + _608;
    float _623 = (((_592 - _366) + (cbMtdParam._m0[14u].z * _366)) * _564) + _366;
    float _624 = (((_593 - _368) + (cbMtdParam._m0[14u].z * _368)) * _564) + _368;
    float _625 = (_564 * (sqrt(1.0 - (isnan(1.0) ? _3402 : (isnan(_3402) ? 1.0 : min(_3402, 1.0)))) - _375)) + _375;
    float _641 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _643 = _641 - (_641 * _564);
    float _652 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _653 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _663 = cbSceneParam._m0[86u].x * ((_652 / cbSceneParam._m0[86u].x) + ((_388 * _378) * cbMtdParam._m0[18u].y));
    float _664 = cbSceneParam._m0[86u].y * ((_653 / cbSceneParam._m0[86u].y) + ((_388 * _381) * cbMtdParam._m0[18u].y));
    float _671 = isnan(cbInstanceData._m0[8u].x) ? _663 : (isnan(_663) ? cbInstanceData._m0[8u].x : max(_663, cbInstanceData._m0[8u].x));
    float _672 = isnan(cbInstanceData._m0[8u].y) ? _664 : (isnan(_664) ? cbInstanceData._m0[8u].y : max(_664, cbInstanceData._m0[8u].y));
    vec4 _676 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _671 : (isnan(_671) ? cbInstanceData._m0[8u].z : min(_671, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _672 : (isnan(_672) ? cbInstanceData._m0[8u].w : min(_672, cbInstanceData._m0[8u].w))));
    float _709 = _519 - cbMtdParam._m0[15u].x;
    float _3433 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _719 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3433 : (isnan(_3433) ? 1.0 : min(_3433, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3449 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _720 = isnan(1.0) ? _3449 : (isnan(_3449) ? 1.0 : min(_3449, 1.0));
    float _722 = _720 - (_564 * _720);
    float _726 = fma(_625, _237, fma(_624, _230, _623 * _216));
    float _729 = fma(_625, _238, fma(_624, _231, _623 * _217));
    float _732 = fma(_625, _239, fma(_624, _232, _623 * _218));
    float _736 = inversesqrt(dot(vec3(_726, _729, _732), vec3(_726, _729, _732)));
    float _737 = _736 * _726;
    float _738 = _736 * _729;
    float _739 = _736 * _732;
    float _3460 = isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0));
    float _740 = isnan(1.0) ? _3460 : (isnan(_3460) ? 1.0 : min(_3460, 1.0));
    float _3471 = isnan(0.0) ? _611 : (isnan(_611) ? 0.0 : max(_611, 0.0));
    float _741 = isnan(1.0) ? _3471 : (isnan(_3471) ? 1.0 : min(_3471, 1.0));
    float _742 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _3487 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
    float _3498 = isnan(0.0) ? _572 : (isnan(_572) ? 0.0 : max(_572, 0.0));
    float _3509 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    float _759 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _777 = fma(_739, cbSceneParam._m0[5u].z, fma(_738, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _737));
    float _780 = fma(_739, cbSceneParam._m0[6u].z, fma(_738, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _737));
    float _783 = fma(_739, cbSceneParam._m0[7u].z, fma(_738, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _737));
    uint _797 = (_304 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _803 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3487 : (isnan(_3487) ? 1.0 : min(_3487, 1.0)))) * cbInstanceData._m0[_797].x;
    float _804 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3498 : (isnan(_3498) ? 1.0 : min(_3498, 1.0)))) * cbInstanceData._m0[_797].y;
    float _805 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3509 : (isnan(_3509) ? 1.0 : min(_3509, 1.0)))) * cbInstanceData._m0[_797].z;
    float _3520 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
    float _806 = isnan(1.0) ? _3520 : (isnan(_3520) ? 1.0 : min(_3520, 1.0));
    float _3531 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
    float _807 = isnan(1.0) ? _3531 : (isnan(_3531) ? 1.0 : min(_3531, 1.0));
    float _3542 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _808 = isnan(1.0) ? _3542 : (isnan(_3542) ? 1.0 : min(_3542, 1.0));
    vec4 _812 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _652, cbSceneParam._m0[86u].y * _653));
    float _815 = _812.x * TEXCOORD_5.w;
    float _816 = dot(vec3(_737, _738, _739), vec3(_516, _517, _518));
    float _819 = _816 * 2.0;
    float _823 = (_819 * _737) - _516;
    float _824 = (_819 * _738) - _517;
    float _825 = (_819 * _739) - _518;
    float _826 = dot(vec3(_516, _517, _518), vec3(_737, _738, _739));
    float _829 = abs(_826);
    float _3553 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _830 = isnan(1.0) ? _3553 : (isnan(_3553) ? 1.0 : min(_3553, 1.0));
    float _836 = sqrt(_741);
    float _848 = exp2((_836 * 5.0) * log2(1.0 - (_830 * 0.999000012874603271484375))) / (4.0 - (_836 * 3.0));
    float _880 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _884 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _888 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1190;
    float _1192;
    float _1193;
    float _1194;
    float _1195;
    float _1196;
    float _1197;
    float _1198;
    float _1199;
    float _1200;
    float _1201;
    float _1202;
    float _1203;
    float _1204;
    float _1205;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _915 = fma(_888, cbModelParam._m0[26u].z, fma(_884, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _880));
        float _919 = fma(_888, cbModelParam._m0[27u].z, fma(_884, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _880));
        float _923 = fma(_888, cbModelParam._m0[28u].z, fma(_884, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _880));
        float _948 = _880 + _737;
        float _949 = _884 + _738;
        float _950 = _888 + _739;
        float _960 = fma(_950, cbModelParam._m0[26u].z, fma(_949, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _948)) - _915;
        float _961 = fma(_950, cbModelParam._m0[27u].z, fma(_949, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _948)) - _919;
        float _962 = fma(_950, cbModelParam._m0[28u].z, fma(_949, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _948)) - _923;
        float _966 = inversesqrt(dot(vec3(_960, _961, _962), vec3(_960, _961, _962)));
        float _979 = ((_966 * _960) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_915 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _980 = ((_966 * _961) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_919 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _981 = ((_966 * _962) / cbModelParam._m0[34u].z) + ((((((_923 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _984 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_979, _980, _981), 0.0);
        vec4 _991 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_979, _980, _981), 0.0);
        vec4 _998 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_979, _980, _981), 0.0);
        vec4 _1005 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_979, _980, _981), 0.0);
        float _1018 = exp2((_984.w + (-0.5)) * 20.0) * 2.0;
        float _1019 = _1018 * (_984.x + (-0.5));
        float _1020 = _1018 * (_984.y + (-0.5));
        float _1021 = _1018 * (_984.z + (-0.5));
        float _1028 = exp2((_991.w + (-0.5)) * 20.0) * 2.0;
        float _1029 = _1028 * (_991.x + (-0.5));
        float _1030 = _1028 * (_991.y + (-0.5));
        float _1031 = _1028 * (_991.z + (-0.5));
        float _1038 = exp2((_998.w + (-0.5)) * 20.0) * 2.0;
        float _1039 = _1038 * (_998.x + (-0.5));
        float _1040 = _1038 * (_998.y + (-0.5));
        float _1041 = _1038 * (_998.z + (-0.5));
        float _1048 = exp2((_1005.w + (-0.5)) * 20.0) * 2.0;
        float _1049 = _1048 * (_1005.x + (-0.5));
        float _1050 = _1048 * (_1005.y + (-0.5));
        float _1051 = _1048 * (_1005.z + (-0.5));
        float _1052 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
        float _1053 = isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0));
        float _1054 = isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0));
        float _1055 = _1019 * 0.5;
        float _1056 = _1029 * 0.5;
        float _1057 = _1039 * 0.5;
        float _1058 = dot(vec3(_1055, _1056, _1057), vec3(_1055, _1056, _1057));
        float _1063 = (_1058 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1058);
        float _1072 = (dot(vec3(_737, _738, _739), vec3(_1063 * _1055, _1063 * _1056, _1063 * _1057)) + 1.0) * 0.5;
        float _3579 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
        float _1082 = sqrt(((_1056 * _1056) + (_1055 * _1055)) + (_1057 * _1057)) / (_1052 + 9.9999997473787516355514526367188e-06);
        float _3590 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
        float _1083 = isnan(1.0) ? _3590 : (isnan(_3590) ? 1.0 : min(_3590, 1.0));
        float _1084 = _1083 * 2.0;
        float _1088 = (1.0 - _1083) / (_1083 + 1.0);
        float _3601 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
        float _1089 = isnan(1.0) ? _3601 : (isnan(_3601) ? 1.0 : min(_3601, 1.0));
        float _1098 = ((((1.0 - _1089) * (_1084 + 2.0)) * exp2(log2(isnan(1.0) ? _3579 : (isnan(_3579) ? 1.0 : min(_3579, 1.0))) * (_1084 + 1.0))) + _1089) * _1052;
        float _1099 = _1020 * 0.5;
        float _1100 = _1030 * 0.5;
        float _1101 = _1040 * 0.5;
        float _1102 = dot(vec3(_1099, _1100, _1101), vec3(_1099, _1100, _1101));
        float _1107 = (_1102 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1102);
        float _1115 = (dot(vec3(_737, _738, _739), vec3(_1107 * _1099, _1107 * _1100, _1107 * _1101)) + 1.0) * 0.5;
        float _3612 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
        float _1124 = sqrt(((_1100 * _1100) + (_1099 * _1099)) + (_1101 * _1101)) / (_1053 + 9.9999997473787516355514526367188e-06);
        float _3623 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1125 = isnan(1.0) ? _3623 : (isnan(_3623) ? 1.0 : min(_3623, 1.0));
        float _1126 = _1125 * 2.0;
        float _1130 = (1.0 - _1125) / (_1125 + 1.0);
        float _3634 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
        float _1131 = isnan(1.0) ? _3634 : (isnan(_3634) ? 1.0 : min(_3634, 1.0));
        float _1140 = ((((1.0 - _1131) * (_1126 + 2.0)) * exp2(log2(isnan(1.0) ? _3612 : (isnan(_3612) ? 1.0 : min(_3612, 1.0))) * (_1126 + 1.0))) + _1131) * _1053;
        float _1141 = _1021 * 0.5;
        float _1142 = _1031 * 0.5;
        float _1143 = _1041 * 0.5;
        float _1144 = dot(vec3(_1141, _1142, _1143), vec3(_1141, _1142, _1143));
        float _1149 = (_1144 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1144);
        float _1157 = (dot(vec3(_737, _738, _739), vec3(_1149 * _1141, _1149 * _1142, _1149 * _1143)) + 1.0) * 0.5;
        float _3645 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1166 = sqrt(((_1142 * _1142) + (_1141 * _1141)) + (_1143 * _1143)) / (_1054 + 9.9999997473787516355514526367188e-06);
        float _3656 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1167 = isnan(1.0) ? _3656 : (isnan(_3656) ? 1.0 : min(_3656, 1.0));
        float _1168 = _1167 * 2.0;
        float _1172 = (1.0 - _1167) / (_1167 + 1.0);
        float _3667 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1173 = isnan(1.0) ? _3667 : (isnan(_3667) ? 1.0 : min(_3667, 1.0));
        float _1182 = ((((1.0 - _1173) * (_1168 + 2.0)) * exp2(log2(isnan(1.0) ? _3645 : (isnan(_3645) ? 1.0 : min(_3645, 1.0))) * (_1168 + 1.0))) + _1173) * _1054;
        _1190 = _1021;
        _1192 = _1020;
        _1193 = _1019;
        _1194 = _1031;
        _1195 = _1030;
        _1196 = _1029;
        _1197 = _1041;
        _1198 = _1040;
        _1199 = _1039;
        _1200 = _1054;
        _1201 = _1053;
        _1202 = _1052;
        _1203 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0)));
        _1204 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0)));
        _1205 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0)));
    }
    else
    {
        _1190 = _1191;
        _1192 = _1191;
        _1193 = _1191;
        _1194 = _1191;
        _1195 = _1191;
        _1196 = _1191;
        _1197 = _1191;
        _1198 = _1191;
        _1199 = _1191;
        _1200 = _1191;
        _1201 = _1191;
        _1202 = _1191;
        _1203 = 0.0;
        _1204 = 0.0;
        _1205 = 0.0;
    }
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    float _1504;
    float _1505;
    float _1506;
    float _1507;
    float _1508;
    float _1509;
    float _1510;
    float _1511;
    float _1512;
    float _1513;
    float _1514;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1231 = fma(_888, cbModelParam._m0[30u].z, fma(_884, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _880));
        float _1235 = fma(_888, cbModelParam._m0[31u].z, fma(_884, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _880));
        float _1239 = fma(_888, cbModelParam._m0[32u].z, fma(_884, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _880));
        float _1262 = _880 + _737;
        float _1263 = _884 + _738;
        float _1264 = _888 + _739;
        float _1274 = fma(_1264, cbModelParam._m0[30u].z, fma(_1263, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1262)) - _1231;
        float _1275 = fma(_1264, cbModelParam._m0[31u].z, fma(_1263, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1262)) - _1235;
        float _1276 = fma(_1264, cbModelParam._m0[32u].z, fma(_1263, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1262)) - _1239;
        float _1280 = inversesqrt(dot(vec3(_1274, _1275, _1276), vec3(_1274, _1275, _1276)));
        float _1293 = ((_1280 * _1274) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1231 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1294 = ((_1280 * _1275) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1235 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1295 = ((_1280 * _1276) / cbModelParam._m0[35u].z) + ((((((_1239 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1297 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1293, _1294, _1295), 0.0);
        vec4 _1304 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1293, _1294, _1295), 0.0);
        vec4 _1311 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1293, _1294, _1295), 0.0);
        vec4 _1318 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1293, _1294, _1295), 0.0);
        float _1330 = exp2((_1297.w + (-0.5)) * 20.0) * 2.0;
        float _1331 = _1330 * (_1297.x + (-0.5));
        float _1332 = _1330 * (_1297.y + (-0.5));
        float _1333 = _1330 * (_1297.z + (-0.5));
        float _1340 = exp2((_1304.w + (-0.5)) * 20.0) * 2.0;
        float _1341 = _1340 * (_1304.x + (-0.5));
        float _1342 = _1340 * (_1304.y + (-0.5));
        float _1343 = _1340 * (_1304.z + (-0.5));
        float _1350 = exp2((_1311.w + (-0.5)) * 20.0) * 2.0;
        float _1351 = _1350 * (_1311.x + (-0.5));
        float _1352 = _1350 * (_1311.y + (-0.5));
        float _1353 = _1350 * (_1311.z + (-0.5));
        float _1360 = exp2((_1318.w + (-0.5)) * 20.0) * 2.0;
        float _1361 = _1360 * (_1318.x + (-0.5));
        float _1362 = _1360 * (_1318.y + (-0.5));
        float _1363 = _1360 * (_1318.z + (-0.5));
        float _1364 = isnan(0.0) ? _1361 : (isnan(_1361) ? 0.0 : max(_1361, 0.0));
        float _1365 = isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0));
        float _1366 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
        float _1367 = _1331 * 0.5;
        float _1368 = _1341 * 0.5;
        float _1369 = _1351 * 0.5;
        float _1370 = dot(vec3(_1367, _1368, _1369), vec3(_1367, _1368, _1369));
        float _1375 = (_1370 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1370);
        float _1383 = (dot(vec3(_737, _738, _739), vec3(_1375 * _1367, _1375 * _1368, _1375 * _1369)) + 1.0) * 0.5;
        float _3708 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1392 = sqrt(((_1368 * _1368) + (_1367 * _1367)) + (_1369 * _1369)) / (_1364 + 9.9999997473787516355514526367188e-06);
        float _3719 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1393 = isnan(1.0) ? _3719 : (isnan(_3719) ? 1.0 : min(_3719, 1.0));
        float _1394 = _1393 * 2.0;
        float _1398 = (1.0 - _1393) / (_1393 + 1.0);
        float _3730 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1399 = isnan(1.0) ? _3730 : (isnan(_3730) ? 1.0 : min(_3730, 1.0));
        float _1408 = ((((1.0 - _1399) * (_1394 + 2.0)) * exp2(log2(isnan(1.0) ? _3708 : (isnan(_3708) ? 1.0 : min(_3708, 1.0))) * (_1394 + 1.0))) + _1399) * _1364;
        float _1409 = _1332 * 0.5;
        float _1410 = _1342 * 0.5;
        float _1411 = _1352 * 0.5;
        float _1412 = dot(vec3(_1409, _1410, _1411), vec3(_1409, _1410, _1411));
        float _1417 = (_1412 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1412);
        float _1425 = (dot(vec3(_737, _738, _739), vec3(_1417 * _1409, _1417 * _1410, _1417 * _1411)) + 1.0) * 0.5;
        float _3741 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1434 = sqrt(((_1410 * _1410) + (_1409 * _1409)) + (_1411 * _1411)) / (_1365 + 9.9999997473787516355514526367188e-06);
        float _3752 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1435 = isnan(1.0) ? _3752 : (isnan(_3752) ? 1.0 : min(_3752, 1.0));
        float _1436 = _1435 * 2.0;
        float _1440 = (1.0 - _1435) / (_1435 + 1.0);
        float _3763 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1441 = isnan(1.0) ? _3763 : (isnan(_3763) ? 1.0 : min(_3763, 1.0));
        float _1450 = ((((1.0 - _1441) * (_1436 + 2.0)) * exp2(log2(isnan(1.0) ? _3741 : (isnan(_3741) ? 1.0 : min(_3741, 1.0))) * (_1436 + 1.0))) + _1441) * _1365;
        float _1451 = _1333 * 0.5;
        float _1452 = _1343 * 0.5;
        float _1453 = _1353 * 0.5;
        float _1454 = dot(vec3(_1451, _1452, _1453), vec3(_1451, _1452, _1453));
        float _1459 = (_1454 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1454);
        float _1467 = (dot(vec3(_737, _738, _739), vec3(_1459 * _1451, _1459 * _1452, _1459 * _1453)) + 1.0) * 0.5;
        float _3774 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1476 = sqrt(((_1452 * _1452) + (_1451 * _1451)) + (_1453 * _1453)) / (_1366 + 9.9999997473787516355514526367188e-06);
        float _3785 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1477 = isnan(1.0) ? _3785 : (isnan(_3785) ? 1.0 : min(_3785, 1.0));
        float _1478 = _1477 * 2.0;
        float _1482 = (1.0 - _1477) / (_1477 + 1.0);
        float _3796 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1483 = isnan(1.0) ? _3796 : (isnan(_3796) ? 1.0 : min(_3796, 1.0));
        float _1492 = ((((1.0 - _1483) * (_1478 + 2.0)) * exp2(log2(isnan(1.0) ? _3774 : (isnan(_3774) ? 1.0 : min(_3774, 1.0))) * (_1478 + 1.0))) + _1483) * _1366;
        _1500 = _1333;
        _1501 = _1332;
        _1502 = _1331;
        _1503 = _1343;
        _1504 = _1342;
        _1505 = _1341;
        _1506 = _1353;
        _1507 = _1352;
        _1508 = _1351;
        _1509 = _1366;
        _1510 = _1365;
        _1511 = _1364;
        _1512 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0)));
        _1513 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0)));
        _1514 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0)));
    }
    else
    {
        _1500 = _1191;
        _1501 = _1191;
        _1502 = _1191;
        _1503 = _1191;
        _1504 = _1191;
        _1505 = _1191;
        _1506 = _1191;
        _1507 = _1191;
        _1508 = _1191;
        _1509 = _1191;
        _1510 = _1191;
        _1511 = _1191;
        _1512 = 0.0;
        _1513 = 0.0;
        _1514 = 0.0;
    }
    float _1524 = (cbModelParam._m0[1u].x * (_1512 - _1203)) + _1203;
    float _1525 = (cbModelParam._m0[1u].x * (_1513 - _1204)) + _1204;
    float _1526 = (cbModelParam._m0[1u].x * (_1514 - _1205)) + _1205;
    float _1547 = fma(_1526, cbSceneParam._m0[89u].z, fma(_1525, cbSceneParam._m0[89u].y, _1524 * cbSceneParam._m0[89u].x));
    float _1550 = fma(_1526, cbSceneParam._m0[90u].z, fma(_1525, cbSceneParam._m0[90u].y, _1524 * cbSceneParam._m0[90u].x));
    float _1553 = fma(_1526, cbSceneParam._m0[91u].z, fma(_1525, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1524));
    float _1568 = _823 * 0.5;
    float _1569 = _824 * 0.5;
    float _1570 = _825 * 0.5;
    float _1571 = dot(vec4(_1568, _1569, _1570, 1.0), vec4(_1502, _1505, _1508, _1511));
    float _1574 = dot(vec4(_1568, _1569, _1570, 1.0), vec4(_1501, _1504, _1507, _1510));
    float _1577 = dot(vec4(_1568, _1569, _1570, 1.0), vec4(_1500, _1503, _1506, _1509));
    float _1611;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1584 = dot(vec4(_1568, _1569, _1570, 1.0), vec4(_1190, _1194, _1197, _1200));
        float _1588 = dot(vec4(_1568, _1569, _1570, 1.0), vec4(_1192, _1195, _1198, _1201));
        float _1592 = dot(vec4(_1568, _1569, _1570, 1.0), vec4(_1193, _1196, _1199, _1202));
        float _1599 = dot(vec4(cbModelParam._m0[39u]), vec4(_1568, _1569, _1570, 1.0));
        _1611 = dot(vec3(isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0)), isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0)), isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1599) ? 0.0 : (isnan(0.0) ? _1599 : max(0.0, _1599))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1611 = 1.0;
    }
    float _1622;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1613 = dot(vec4(cbModelParam._m0[40u]), vec4(_1568, _1569, _1570, 1.0));
        _1622 = dot(vec3(isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0)), isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0)), isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1613) ? 0.0 : (isnan(0.0) ? _1613 : max(0.0, _1613))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1622 = 1.0;
    }
    float _1626 = (_1622 * cbModelParam._m0[1u].x) + (_1611 * (1.0 - cbModelParam._m0[1u].x));
    float _1636 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _741);
    float _1637 = isnan(_1636) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1636 : min(cbModelParam._m0[25u].z, _1636));
    float _1717;
    float _1719;
    float _1721;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1684 = fma(_888, cbModelParam._m0[13u].z, fma(_884, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _880)) + cbModelParam._m0[13u].w;
        float _1688 = fma(_888, cbModelParam._m0[14u].z, fma(_884, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _880)) + cbModelParam._m0[14u].w;
        float _1692 = fma(_888, cbModelParam._m0[15u].z, fma(_884, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _880)) + cbModelParam._m0[15u].w;
        float _1695 = fma(_825, cbModelParam._m0[13u].z, fma(_824, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _823));
        float _1698 = fma(_825, cbModelParam._m0[14u].z, fma(_824, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _823));
        float _1701 = fma(_825, cbModelParam._m0[15u].z, fma(_824, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _823));
        float _1729;
        if (_1695 > 0.0)
        {
            _1729 = abs((1.0 - _1684) / _1695);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1695 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1684 + 1.0) / _1695);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1729 = frontier_phi_16_14_ladder;
        }
        float _1901;
        if (_1698 > 0.0)
        {
            _1901 = abs((1.0 - _1688) / _1698);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1698 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1688 + 1.0) / _1698);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1901 = frontier_phi_25_21_ladder;
        }
        float _2165;
        if (_1701 > 0.0)
        {
            _2165 = abs((1.0 - _1692) / _1701);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1701 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1692 + 1.0) / _1701);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2165 = frontier_phi_37_32_ladder;
        }
        float _2167 = isnan(_1901) ? _1729 : (isnan(_1729) ? _1901 : min(_1729, _1901));
        float _2168 = isnan(_2165) ? _2167 : (isnan(_2167) ? _2165 : min(_2167, _2165));
        float _2172 = (_2168 * _1695) + _1684;
        float _2173 = (_2168 * _1698) + _1688;
        float _2174 = (_2168 * _1701) + _1692;
        float _2175 = _2168 * 9.9999997473787516355514526367188e-05;
        float _2177 = (-1.0) - _2175;
        float _2179 = _2175 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2174 > _2179) || ((_2174 < _2177) || ((_2173 > _2179) || ((_2173 < _2177) || ((_2172 < _2177) || (_2172 > _2179))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2328 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2174, cbModelParam._m0[9u].z, fma(_2173, cbModelParam._m0[9u].y, _2172 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2174, cbModelParam._m0[10u].z, fma(_2173, cbModelParam._m0[10u].y, _2172 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2174, cbModelParam._m0[11u].z, fma(_2173, cbModelParam._m0[11u].y, _2172 * cbModelParam._m0[11u].x))), _1637);
            frontier_phi_15_37_ladder = _2328.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2328.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2328.x * cbModelParam._m0[1u].y;
        }
        _1717 = frontier_phi_15_37_ladder_2;
        _1719 = frontier_phi_15_37_ladder_1;
        _1721 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1705 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_823, _824, _825), _1637);
        _1717 = _1705.x * cbModelParam._m0[1u].y;
        _1719 = _1705.y * cbModelParam._m0[1u].y;
        _1721 = _1705.z * cbModelParam._m0[1u].y;
    }
    float _1725 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _741);
    float _1726 = isnan(_1725) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1725 : min(cbModelParam._m0[25u].w, _1725));
    float _1818;
    float _1820;
    float _1822;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1782 = fma(_888, cbModelParam._m0[21u].z, fma(_884, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _880)) + cbModelParam._m0[21u].w;
        float _1786 = fma(_888, cbModelParam._m0[22u].z, fma(_884, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _880)) + cbModelParam._m0[22u].w;
        float _1790 = fma(_888, cbModelParam._m0[23u].z, fma(_884, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _880)) + cbModelParam._m0[23u].w;
        float _1793 = fma(_825, cbModelParam._m0[21u].z, fma(_824, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _823));
        float _1796 = fma(_825, cbModelParam._m0[22u].z, fma(_824, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _823));
        float _1799 = fma(_825, cbModelParam._m0[23u].z, fma(_824, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _823));
        float _1906;
        if (_1793 > 0.0)
        {
            _1906 = abs((1.0 - _1782) / _1793);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1793 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1782 + 1.0) / _1793);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1906 = frontier_phi_27_23_ladder;
        }
        float _2192;
        if (_1796 > 0.0)
        {
            _2192 = abs((1.0 - _1786) / _1796);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1796 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1786 + 1.0) / _1796);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2192 = frontier_phi_39_34_ladder;
        }
        float _2511;
        if (_1799 > 0.0)
        {
            _2511 = abs((1.0 - _1790) / _1799);
        }
        else
        {
            float frontier_phi_48_46_ladder;
            if (_1799 < 0.0)
            {
                frontier_phi_48_46_ladder = abs((_1790 + 1.0) / _1799);
            }
            else
            {
                frontier_phi_48_46_ladder = 5000.0;
            }
            _2511 = frontier_phi_48_46_ladder;
        }
        float _2513 = isnan(_2192) ? _1906 : (isnan(_1906) ? _2192 : min(_1906, _2192));
        float _2514 = isnan(_2511) ? _2513 : (isnan(_2513) ? _2511 : min(_2513, _2511));
        float _2518 = (_2514 * _1793) + _1782;
        float _2519 = (_2514 * _1796) + _1786;
        float _2520 = (_2514 * _1799) + _1790;
        float _2521 = _2514 * 9.9999997473787516355514526367188e-05;
        float _2522 = (-1.0) - _2521;
        float _2524 = _2521 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2520 > _2524) || ((_2520 < _2522) || ((_2519 > _2524) || ((_2519 < _2522) || ((_2518 < _2522) || (_2518 > _2524))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2621 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2520, cbModelParam._m0[17u].z, fma(_2519, cbModelParam._m0[17u].y, _2518 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2520, cbModelParam._m0[18u].z, fma(_2519, cbModelParam._m0[18u].y, _2518 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2520, cbModelParam._m0[19u].z, fma(_2519, cbModelParam._m0[19u].y, _2518 * cbModelParam._m0[19u].x))), _1726);
            frontier_phi_24_48_ladder = _2621.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2621.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2621.x * cbModelParam._m0[1u].z;
        }
        _1818 = frontier_phi_24_48_ladder_2;
        _1820 = frontier_phi_24_48_ladder_1;
        _1822 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1802 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_823, _824, _825), _1726);
        _1818 = _1802.x * cbModelParam._m0[1u].z;
        _1820 = _1802.y * cbModelParam._m0[1u].z;
        _1822 = _1802.z * cbModelParam._m0[1u].z;
    }
    float _1834 = ((((1.0 - _848) * ((_836 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_848 * _836)) * _815;
    float _1835 = _1834 * ((cbModelParam._m0[1u].w * (_1818 - _1717)) + _1717);
    float _1836 = _1834 * ((cbModelParam._m0[1u].w * (_1820 - _1719)) + _1719);
    float _1837 = _1834 * ((cbModelParam._m0[1u].w * (_1822 - _1721)) + _1721);
    float _1840 = fma(_1837, cbSceneParam._m0[89u].z, fma(_1836, cbSceneParam._m0[89u].y, _1835 * cbSceneParam._m0[89u].x));
    float _1843 = fma(_1837, cbSceneParam._m0[90u].z, fma(_1836, cbSceneParam._m0[90u].y, _1835 * cbSceneParam._m0[90u].x));
    float _1846 = fma(_1837, cbSceneParam._m0[91u].z, fma(_1836, cbSceneParam._m0[91u].y, _1835 * cbSceneParam._m0[91u].x));
    float _1880 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1884 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1888 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1892 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1893 = _1880 / _1892;
    float _1894 = _1884 / _1892;
    float _1895 = _1888 / _1892;
    float _2042;
    float _2043;
    float _2044;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1922 = ((uint(_1895 > cbSceneParam._m0[59u].y) + uint(_1895 > cbSceneParam._m0[59u].x)) + uint(_1895 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1923 = _1922 + 43u;
        uint _1931 = _1922 + 44u;
        uint _1939 = _1922 + 45u;
        uint _1947 = _1922 + 46u;
        float _1958 = fma(_1892, cbSceneParam._m0[_1923].w, fma(_1888, cbSceneParam._m0[_1923].z, fma(_1884, cbSceneParam._m0[_1923].y, _1880 * cbSceneParam._m0[_1923].x)));
        float _1962 = fma(_1892, cbSceneParam._m0[_1931].w, fma(_1888, cbSceneParam._m0[_1931].z, fma(_1884, cbSceneParam._m0[_1931].y, _1880 * cbSceneParam._m0[_1931].x)));
        float _1970 = fma(_1892, cbSceneParam._m0[_1947].w, fma(_1888, cbSceneParam._m0[_1947].z, fma(_1884, cbSceneParam._m0[_1947].y, _1880 * cbSceneParam._m0[_1947].x)));
        float _1975 = cbSceneParam._m0[33u].z * _1970;
        float _1977 = cbSceneParam._m0[33u].w * _1970;
        float _1980 = fma(_1892, cbSceneParam._m0[_1939].w, fma(_1888, cbSceneParam._m0[_1939].z, fma(_1884, cbSceneParam._m0[_1939].y, _1880 * cbSceneParam._m0[_1939].x))) / _1970;
        float _2028 = (cbSceneParam._m0[33u].x - sqrt(((_1894 * _1894) + (_1893 * _1893)) + (_1895 * _1895))) * cbSceneParam._m0[33u].y;
        float _3922 = isnan(0.0) ? _2028 : (isnan(_2028) ? 0.0 : max(_2028, 0.0));
        float _2035 = (isnan(1.0) ? _3922 : (isnan(_3922) ? 1.0 : min(_3922, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1975 + _1958) / _1970, (_1977 + _1962) / _1970), _1980), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1977 + _1958) / _1970, (_1962 - _1975) / _1970), _1980), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1958 - _1975) / _1970, (_1962 - _1977) / _1970), _1980), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1958 - _1977) / _1970, (_1975 + _1962) / _1970), _1980), 0.0)).x), vec4(0.25)));
        _2042 = 1.0 - (_2035 * cbSceneParam._m0[34u].x);
        _2043 = 1.0 - (_2035 * cbSceneParam._m0[34u].y);
        _2044 = 1.0 - (_2035 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2042 = 1.0;
        _2043 = 1.0;
        _2044 = 1.0;
    }
    float _2108;
    float _2110;
    float _2112;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2096 = fma(_1892, cbSceneParam._m0[63u].w, fma(_1888, cbSceneParam._m0[63u].z, fma(_1884, cbSceneParam._m0[63u].y, _1880 * cbSceneParam._m0[63u].x)));
        float _2097 = fma(_1892, cbSceneParam._m0[60u].w, fma(_1888, cbSceneParam._m0[60u].z, fma(_1884, cbSceneParam._m0[60u].y, _1880 * cbSceneParam._m0[60u].x))) / _2096;
        float _2098 = fma(_1892, cbSceneParam._m0[61u].w, fma(_1888, cbSceneParam._m0[61u].z, fma(_1884, cbSceneParam._m0[61u].y, _1880 * cbSceneParam._m0[61u].x))) / _2096;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2097 >= cbSceneParam._m0[64u].x) && (_2098 >= cbSceneParam._m0[64u].y)) && (_2097 <= cbSceneParam._m0[64u].z)) && (_2098 <= cbSceneParam._m0[64u].w))
        {
            float _2205 = fma(_1892, cbSceneParam._m0[62u].w, fma(_1888, cbSceneParam._m0[62u].z, fma(_1884, cbSceneParam._m0[62u].y, _1880 * cbSceneParam._m0[62u].x))) / _2096;
            float _2209 = isnan(cbSceneParam._m0[41u].w) ? _2205 : (isnan(_2205) ? cbSceneParam._m0[41u].w : max(_2205, cbSceneParam._m0[41u].w));
            float _2252 = (cbSceneParam._m0[33u].x - sqrt(((_1894 * _1894) + (_1893 * _1893)) + (_1895 * _1895))) * cbSceneParam._m0[33u].y;
            float _3938 = isnan(0.0) ? _2252 : (isnan(_2252) ? 0.0 : max(_2252, 0.0));
            float _2259 = (isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2097, cbSceneParam._m0[33u].w + _2098), _2209), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2097, _2098 - cbSceneParam._m0[33u].z), _2209), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2097 - cbSceneParam._m0[33u].z, _2098 - cbSceneParam._m0[33u].w), _2209), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2097 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2098), _2209), 0.0)).x), vec4(0.25)));
            float _2263 = 1.0 - (_2259 * cbSceneParam._m0[34u].x);
            float _2264 = 1.0 - (_2259 * cbSceneParam._m0[34u].y);
            float _2265 = 1.0 - (_2259 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2264) ? _2043 : (isnan(_2043) ? _2264 : min(_2043, _2264));
            frontier_phi_36_35_ladder_1 = isnan(_2263) ? _2042 : (isnan(_2042) ? _2263 : min(_2042, _2263));
            frontier_phi_36_35_ladder_2 = isnan(_2265) ? _2044 : (isnan(_2044) ? _2265 : min(_2044, _2265));
        }
        else
        {
            frontier_phi_36_35_ladder = _2043;
            frontier_phi_36_35_ladder_1 = _2042;
            frontier_phi_36_35_ladder_2 = _2044;
        }
        _2108 = frontier_phi_36_35_ladder_1;
        _2110 = frontier_phi_36_35_ladder;
        _2112 = frontier_phi_36_35_ladder_2;
    }
    else
    {
        _2108 = _2042;
        _2110 = _2043;
        _2112 = _2044;
    }
    uvec4 _2117 = floatBitsToUint(cbInstanceData._m0[_304 + 5u]);
    uint _2119 = _2117.x * 14u;
    uint _2120 = _2119 + 13u;
    float _2125 = _815 + (-1.0);
    float _2128 = (cbLight._m0[_2120].x * _2125) + 1.0;
    float _2129 = (cbLight._m0[_2120].y * _2125) + 1.0;
    uint _2131 = _2119 + 4u;
    float _2142 = dot(vec3(cbLight._m0[_2119].xyz), vec3(_737, _738, _739));
    float _2145 = isnan(1.0) ? _2128 : (isnan(_2128) ? 1.0 : min(_2128, 1.0));
    float _2146 = cbLight._m0[_2131].x * _2108;
    float _2147 = cbLight._m0[_2131].y * _2110;
    float _2148 = cbLight._m0[_2131].z * _2112;
    uint _2149 = _2119 + 5u;
    uint _2155 = _2119 | 1u;
    float _2161 = dot(vec3(cbLight._m0[_2155].xyz), vec3(_737, _738, _739));
    float _2164 = isnan(1.0) ? _2129 : (isnan(_2129) ? 1.0 : min(_2129, 1.0));
    float _2337;
    float _2338;
    float _2339;
    if (_742 == 0.0)
    {
        float _3974 = isnan(0.0) ? _2142 : (isnan(_2142) ? 0.0 : max(_2142, 0.0));
        float _3985 = isnan(0.0) ? _2161 : (isnan(_2161) ? 0.0 : max(_2161, 0.0));
        float _2274 = (isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0))) * 0.3183098733425140380859375;
        float _2276 = (isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0))) * 0.3183098733425140380859375;
        _2337 = ((cbLight._m0[_2149].x * _2164) * _2276) + ((_2146 * _2145) * _2274);
        _2338 = ((_2164 * cbLight._m0[_2149].y) * _2276) + ((_2147 * _2145) * _2274);
        _2339 = ((_2164 * cbLight._m0[_2149].z) * _2276) + ((_2148 * _2145) * _2274);
    }
    else
    {
        float _2286 = _2142 + _742;
        float _2289 = (_742 * 2.0) + 1.0;
        float _2290 = (isnan(0.0) ? _2286 : (isnan(_2286) ? 0.0 : max(_2286, 0.0))) / _2289;
        float _2297 = _2161 + _742;
        float _2299 = (isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0))) / _2289;
        _2337 = (((_2299 * cbLight._m0[_2149].x) * _2164) + ((_2146 * _2290) * _2145)) * 0.3183098733425140380859375;
        _2338 = (((_2299 * cbLight._m0[_2149].y) * _2164) + ((_2147 * _2290) * _2145)) * 0.3183098733425140380859375;
        _2339 = (((_2299 * cbLight._m0[_2149].z) * _2164) + ((_2148 * _2290) * _2145)) * 0.3183098733425140380859375;
    }
    uint _2343 = _2119 + 8u;
    float _2359 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2119].w)) * _741) * 0.949999988079071044921875);
    float _2360 = _2359 * _2359;
    float _2361 = cbLight._m0[_2119].x + _516;
    float _2362 = cbLight._m0[_2119].y + _517;
    float _2363 = cbLight._m0[_2119].z + _518;
    float _2367 = inversesqrt(dot(vec3(_2361, _2362, _2363), vec3(_2361, _2362, _2363)));
    float _2368 = _2367 * _2361;
    float _2369 = _2367 * _2362;
    float _2370 = _2367 * _2363;
    float _2371 = dot(vec3(_737, _738, _739), vec3(cbLight._m0[_2119].xyz));
    float _4006 = isnan(0.0) ? _2371 : (isnan(_2371) ? 0.0 : max(_2371, 0.0));
    float _2374 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
    float _4017 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _2375 = isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0));
    float _2376 = dot(vec3(_737, _738, _739), vec3(_2368, _2369, _2370));
    float _4028 = isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0));
    float _2379 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
    float _2380 = dot(vec3(cbLight._m0[_2119].xyz), vec3(_2368, _2369, _2370));
    float _4039 = isnan(0.0) ? _2380 : (isnan(_2380) ? 0.0 : max(_2380, 0.0));
    float _2384 = _2360 * _2360;
    float _2388 = ((_2379 * _2379) * (_2384 + (-1.0))) + 1.0;
    float _2399 = (exp2(log2(1.0 - (isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2400 = 1.0 - _2360;
    float _2411 = (0.5 / (((_2375 * ((_2374 * _2400) + _2360)) + 9.9999999392252902907785028219223e-09) + (((_2375 * _2400) + _2360) * _2374))) * _2374;
    float _4050 = isnan(0.0) ? _2411 : (isnan(_2411) ? 0.0 : max(_2411, 0.0));
    float _2413 = (isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0))) * (_2384 / ((_2388 * _2388) * 3.141590118408203125));
    uint _2429 = _2119 + 9u;
    float _2443 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2155].w)) * _741) * 0.949999988079071044921875);
    float _2444 = _2443 * _2443;
    float _2445 = cbLight._m0[_2155].x + _516;
    float _2446 = cbLight._m0[_2155].y + _517;
    float _2447 = cbLight._m0[_2155].z + _518;
    float _2451 = inversesqrt(dot(vec3(_2445, _2446, _2447), vec3(_2445, _2446, _2447)));
    float _2452 = _2451 * _2445;
    float _2453 = _2451 * _2446;
    float _2454 = _2451 * _2447;
    float _2455 = dot(vec3(_737, _738, _739), vec3(cbLight._m0[_2155].xyz));
    float _4061 = isnan(0.0) ? _2455 : (isnan(_2455) ? 0.0 : max(_2455, 0.0));
    float _2458 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
    float _2459 = dot(vec3(_737, _738, _739), vec3(_2452, _2453, _2454));
    float _4072 = isnan(0.0) ? _2459 : (isnan(_2459) ? 0.0 : max(_2459, 0.0));
    float _2462 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
    float _2463 = dot(vec3(cbLight._m0[_2155].xyz), vec3(_2452, _2453, _2454));
    float _4083 = isnan(0.0) ? _2463 : (isnan(_2463) ? 0.0 : max(_2463, 0.0));
    float _2467 = _2444 * _2444;
    float _2471 = ((_2462 * _2462) * (_2467 + (-1.0))) + 1.0;
    float _2480 = (exp2(log2(1.0 - (isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2481 = 1.0 - _2444;
    float _2491 = (0.5 / (((_2375 * ((_2458 * _2481) + _2444)) + 9.9999999392252902907785028219223e-09) + (((_2375 * _2481) + _2444) * _2458))) * _2458;
    float _4094 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
    float _2493 = (isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0))) * (_2467 / ((_2471 * _2471) * 3.141590118408203125));
    float _2503 = (((_2480 * cbLight._m0[_2429].x) * _2493) * _2164) + ((((cbLight._m0[_2343].x * _2108) * _2399) * _2413) * _2145);
    float _2504 = (((_2480 * cbLight._m0[_2429].y) * _2493) * _2164) + ((((cbLight._m0[_2343].y * _2110) * _2399) * _2413) * _2145);
    float _2505 = (((_2480 * cbLight._m0[_2429].z) * _2493) * _2164) + ((((cbLight._m0[_2343].z * _2112) * _2399) * _2413) * _2145);
    float _2592;
    float _2594;
    float _2596;
    float _2598;
    float _2600;
    float _2602;
    if (_2117.y == 0u)
    {
        uvec4 _2548 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2549 = _2548.x;
        uint _2560 = uint((float(_2548.y) * floor(float(uint(cbSceneParam._m0[85u].y * _653) / _2549))) + floor(float(uint(cbSceneParam._m0[85u].x * _652) / _2549)));
        float _2570 = (log2(_1895 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2571 = isnan(0.0) ? _2570 : (isnan(_2570) ? 0.0 : max(_2570, 0.0));
        uint _2574 = uint(isnan(14.0) ? _2571 : (isnan(_2571) ? 14.0 : min(_2571, 14.0)));
        uint _2581 = _2548.z;
        float _2626;
        float _2628;
        float _2630;
        float _2632;
        float _2634;
        float _2636;
        if (((((1u << ((_2581 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2574 << 2u) + (_2560 << 6u)) >> 2u)).x) == 0u) || ((_2581 & 240u) == 0u))
        {
            _2626 = 0.0;
            _2628 = 0.0;
            _2630 = 0.0;
            _2632 = 0.0;
            _2634 = 0.0;
            _2636 = 0.0;
        }
        else
        {
            float _2627;
            float _2629;
            float _2631;
            float _2633;
            float _2635;
            float _2637;
            float _2792 = 0.0;
            float _2793 = 0.0;
            float _2794 = 0.0;
            float _2795 = 0.0;
            float _2796 = 0.0;
            float _2797 = 0.0;
            uint _2798 = 0u;
            uint _2807;
            bool _2808;
            for (;;)
            {
                _2807 = texelFetch(g_lightClassification, int((((_2574 << 5u) + (_2560 << 9u)) + (_2798 << 2u)) >> 2u)).x;
                _2808 = _2807 == 0u;
                float frontier_phi_60_pred;
                float frontier_phi_60_pred_1;
                float frontier_phi_60_pred_2;
                float frontier_phi_60_pred_3;
                float frontier_phi_60_pred_4;
                float frontier_phi_60_pred_5;
                if (_2808)
                {
                    frontier_phi_60_pred = _2797;
                    frontier_phi_60_pred_1 = _2795;
                    frontier_phi_60_pred_2 = _2794;
                    frontier_phi_60_pred_3 = _2793;
                    frontier_phi_60_pred_4 = _2792;
                    frontier_phi_60_pred_5 = _2796;
                }
                else
                {
                    float _2984;
                    float _2985;
                    float _2986;
                    float _2987;
                    float _2988;
                    float _2989;
                    uint _2990;
                    _2984 = _2792;
                    _2985 = _2793;
                    _2986 = _2794;
                    _2987 = _2795;
                    _2988 = _2796;
                    _2989 = _2797;
                    _2990 = _2807;
                    float _2932;
                    float _2933;
                    float _2934;
                    float _2935;
                    float _2936;
                    float _2937;
                    for (;;)
                    {
                        uint _2994 = uint(findLSB(_2990)) + (_2798 << 5u);
                        uint _2991 = (_2990 + 4294967295u) & _2990;
                        uint _2996 = _2994 * 48u;
                        vec4 _3010 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2996)).x, texelFetch(g_PointLightRenderingBuffer, int(_2996 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2996 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2996 + 3u)).x));
                        uint _3016 = (_2994 * 48u) + 4u;
                        vec4 _3029 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3016)).x, texelFetch(g_PointLightRenderingBuffer, int(_3016 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3016 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3016 + 3u)).x));
                        float _3030 = _3029.x;
                        float _3031 = _3029.y;
                        float _3032 = _3029.z;
                        uint _3035 = (_2994 * 48u) + 8u;
                        vec3 _3046 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3035)).x, texelFetch(g_PointLightRenderingBuffer, int(_3035 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3035 + 2u)).x));
                        uint _3051 = (_2994 * 48u) + 12u;
                        vec2 _3059 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_3051)).x, texelFetch(g_PointLightRenderingBuffer, int(_3051 + 1u)).x));
                        float _3065 = inversesqrt(dot(vec3(_1893, _1894, _1895), vec3(_1893, _1894, _1895)));
                        float _3066 = _3065 * _1893;
                        float _3067 = _3065 * _1894;
                        float _3068 = _3065 * _1895;
                        float _3069 = _3010.x - _1893;
                        float _3070 = _3010.y - _1894;
                        float _3071 = _3010.z - _1895;
                        float _3072 = dot(vec3(_3069, _3070, _3071), vec3(_3069, _3070, _3071));
                        float _3075 = inversesqrt(_3072);
                        float _3076 = _3075 * _3069;
                        float _3077 = _3075 * _3070;
                        float _3078 = _3075 * _3071;
                        float _3079 = dot(vec3(_777, _780, _783), vec3(_3076, _3077, _3078));
                        float _3084 = 1.0 - (_3072 * _3010.w);
                        float _4115 = isnan(0.0) ? _3084 : (isnan(_3084) ? 0.0 : max(_3084, 0.0));
                        float _3085 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
                        float _3086 = sqrt(_3072) * _3029.w;
                        float _3089 = 1.39999997615814208984375 / (_3086 + 1.39999997615814208984375);
                        float _3090 = _3089 * _3089;
                        float _3091 = 1.0 - _3090;
                        float _3093 = (_3091 * _3091) * _742;
                        float _3096 = ((_3091 * _3079) + _3090) + _3093;
                        float _3101 = _3086 * _3086;
                        float _3106 = ((isnan(0.0) ? _3096 : (isnan(_3096) ? 0.0 : max(_3096, 0.0))) * _3085) / (((_3093 * 2.0) + 1.0) * ((_3101 * 0.699999988079071044921875) + 1.0));
                        float _3110 = dot(vec3(_3076, _3077, _3078), vec3(_3066, _3067, _3068));
                        float _4131 = isnan(0.0) ? _3110 : (isnan(_3110) ? 0.0 : max(_3110, 0.0));
                        float _3117 = dot(vec3((-0.0) - _3066, (-0.0) - _3067, (-0.0) - _3068), vec3(_777, _780, _783)) + 1.0;
                        float _3119 = (isnan(0.0) ? _3117 : (isnan(_3117) ? 0.0 : max(_3117, 0.0))) * 0.5;
                        float _3126 = ((_3119 * _3119) * _3059.x) * exp2((_3059.y * 32.0) * log2(isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0))));
                        float _3128 = _742 / (_742 + 1.0);
                        float _3144 = (-0.0) - _1893;
                        float _3145 = (-0.0) - _1894;
                        float _3146 = (-0.0) - _1895;
                        float _3150 = inversesqrt(dot(vec3(_3144, _3145, _3146), vec3(_3144, _3145, _3146)));
                        float _3151 = _3150 * _3144;
                        float _3152 = _3150 * _3145;
                        float _3153 = _3150 * _3146;
                        float _3160 = exp2(log2(1.0 / ((_3101 * 3.5) + 5.0)) * 0.25);
                        float _3161 = 1.0 - _836;
                        float _3168 = sqrt(1.0 - ((1.0 - (_3161 * _3161)) * (1.0 - (_3160 * _3160))));
                        float _3169 = _3168 * _3168;
                        float _3170 = _3169 * _3169;
                        float _3171 = _3151 + _3076;
                        float _3172 = _3152 + _3077;
                        float _3173 = _3153 + _3078;
                        float _3177 = inversesqrt(dot(vec3(_3171, _3172, _3173), vec3(_3171, _3172, _3173)));
                        float _3181 = dot(vec3(_777, _780, _783), vec3(_3151, _3152, _3153));
                        float _4147 = isnan(0.0) ? _3181 : (isnan(_3181) ? 0.0 : max(_3181, 0.0));
                        float _3184 = isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0));
                        float _3185 = dot(vec3(_777, _780, _783), vec3(_3177 * _3171, _3177 * _3172, _3177 * _3173));
                        float _4158 = isnan(0.0) ? _3185 : (isnan(_3185) ? 0.0 : max(_3185, 0.0));
                        float _3188 = isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0));
                        float _3192 = ((_3188 * _3188) * (_3170 + (-1.0))) + 1.0;
                        float _3193 = _3089 * _3169;
                        float _3194 = _3193 * _3193;
                        float _3197 = ((1.0 - _3194) * _3079) + _3194;
                        float _4169 = isnan(0.0) ? _3197 : (isnan(_3197) ? 0.0 : max(_3197, 0.0));
                        float _3198 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
                        float _3199 = 1.0 - _3169;
                        float _3209 = (0.5 / (((_3198 * ((_3184 * _3199) + _3169)) + 9.9999999392252902907785028219223e-09) + (((_3198 * _3199) + _3169) * _3184))) * _3198;
                        float _4180 = isnan(0.0) ? _3209 : (isnan(_3209) ? 0.0 : max(_3209, 0.0));
                        float _3220 = (((_3170 * 3.1415927410125732421875) * (isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0)))) / ((_3192 * _3192) * ((_3101 * 2.1991131305694580078125) + 3.141590118408203125))) * _3085;
                        _2935 = (((((_3030 * 0.3183098733425140380859375) * _3128) * _3126) + _3030) * _3106) + _2987;
                        _2936 = (((((_3031 * 0.3183098733425140380859375) * _3128) * _3126) + _3031) * _3106) + _2988;
                        _2937 = (((((_3032 * 0.3183098733425140380859375) * _3128) * _3126) + _3032) * _3106) + _2989;
                        _2932 = (_3220 * _3046.x) + _2984;
                        _2933 = (_3220 * _3046.y) + _2985;
                        _2934 = (_3220 * _3046.z) + _2986;
                        if (_2991 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2984 = _2932;
                            _2985 = _2933;
                            _2986 = _2934;
                            _2987 = _2935;
                            _2988 = _2936;
                            _2989 = _2937;
                            _2990 = _2991;
                        }
                    }
                    frontier_phi_60_pred = _2937;
                    frontier_phi_60_pred_1 = _2935;
                    frontier_phi_60_pred_2 = _2934;
                    frontier_phi_60_pred_3 = _2933;
                    frontier_phi_60_pred_4 = _2932;
                    frontier_phi_60_pred_5 = _2936;
                }
                _2637 = frontier_phi_60_pred;
                _2633 = frontier_phi_60_pred_1;
                _2631 = frontier_phi_60_pred_2;
                _2629 = frontier_phi_60_pred_3;
                _2627 = frontier_phi_60_pred_4;
                _2635 = frontier_phi_60_pred_5;
                uint _2799 = _2798 + 1u;
                if (_2799 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2792 = _2627;
                    _2793 = _2629;
                    _2794 = _2631;
                    _2795 = _2633;
                    _2796 = _2635;
                    _2797 = _2637;
                    _2798 = _2799;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2626 = _2627;
            _2628 = _2629;
            _2630 = _2631;
            _2632 = _2633;
            _2634 = _2635;
            _2636 = _2637;
        }
        float _2641 = isnan(1.0) ? _815 : (isnan(_815) ? 1.0 : min(_815, 1.0));
        _2592 = (_2641 * _2632) + _2337;
        _2594 = (_2641 * _2634) + _2338;
        _2596 = (_2641 * _2636) + _2339;
        _2598 = ((_2626 * 0.039999999105930328369140625) * _2641) + _2503;
        _2600 = ((_2628 * 0.039999999105930328369140625) * _2641) + _2504;
        _2602 = ((_2630 * 0.039999999105930328369140625) * _2641) + _2505;
    }
    else
    {
        _2592 = _2337;
        _2594 = _2338;
        _2596 = _2339;
        _2598 = _2503;
        _2600 = _2504;
        _2602 = _2505;
    }
    float _2715;
    float _2716;
    float _2717;
    if (_742 > 0.0)
    {
        uint _2648 = _2119 + 4u;
        float _2654 = (-0.0) - _516;
        float _2655 = (-0.0) - _517;
        float _2656 = (-0.0) - _518;
        float _2657 = dot(vec3(cbLight._m0[_2119].xyz), vec3(_2654, _2655, _2656));
        float _4196 = isnan(0.0) ? _2657 : (isnan(_2657) ? 0.0 : max(_2657, 0.0));
        float _2661 = _826 + 1.0;
        float _2663 = (isnan(0.0) ? _2661 : (isnan(_2661) ? 0.0 : max(_2661, 0.0))) * 0.5;
        float _2668 = _2663 * _2663;
        float _2669 = _2668 * exp2(log2(isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0))) * 32.0);
        float _2671 = _742 / (_742 + 1.0);
        float _2672 = isnan(_2128) ? 1.0 : (isnan(1.0) ? _2128 : min(1.0, _2128));
        uint _2685 = _2119 + 5u;
        float _2691 = dot(vec3(cbLight._m0[_2155].xyz), vec3(_2654, _2655, _2656));
        float _4217 = isnan(0.0) ? _2691 : (isnan(_2691) ? 0.0 : max(_2691, 0.0));
        float _2698 = _2668 * exp2(log2(isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0))) * 32.0);
        float _2699 = isnan(_2129) ? 1.0 : (isnan(1.0) ? _2129 : min(1.0, _2129));
        _2715 = ((((_2698 * cbLight._m0[_2685].x) * _2671) * _2699) + ((((cbLight._m0[_2648].x * _2108) * _2669) * _2671) * _2672)) * 0.3183098733425140380859375;
        _2716 = ((((_2698 * cbLight._m0[_2685].y) * _2671) * _2699) + ((((cbLight._m0[_2648].y * _2110) * _2669) * _2671) * _2672)) * 0.3183098733425140380859375;
        _2717 = ((((_2698 * cbLight._m0[_2685].z) * _2671) * _2699) + ((((cbLight._m0[_2648].z * _2112) * _2669) * _2671) * _2672)) * 0.3183098733425140380859375;
    }
    else
    {
        _2715 = 0.0;
        _2716 = 0.0;
        _2717 = 0.0;
    }
    float _4233 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _4244 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
    float _4255 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _4266 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _2732 = (isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0))) * ((_2592 + ((isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0))) * _815)) + _2715);
    float _2733 = (isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0))) * ((_2594 + ((isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0))) * _815)) + _2716);
    float _2734 = (isnan(1.0) ? _4255 : (isnan(_4255) ? 1.0 : min(_4255, 1.0))) * ((_2596 + ((isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0))) * _815)) + _2717);
    float _2738 = 0.959999978542327880859375 - (exp2(log2(1.0 - _830) * 5.0) * 0.959999978542327880859375);
    float _2763 = _652 / cbSceneParam._m0[86u].x;
    float _2764 = _653 / cbSceneParam._m0[86u].y;
    vec4 _2778 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2763, _2764, (log2((isnan(cbSceneParam._m0[77u].w) ? _759 : (isnan(_759) ? cbSceneParam._m0[77u].w : min(_759, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2780 = _2778.x;
    float _2781 = _2778.y;
    float _2782 = _2778.z;
    float _2783 = _2778.w;
    float _2850;
    float _2852;
    float _2854;
    float _2856;
    if (_759 > cbSceneParam._m0[78u].w)
    {
        float _2813 = isnan(_759) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _759 : min(cbSceneParam._m0[80u].w, _759));
        float _2814 = _2813 / _759;
        float _2825 = _2814 * _296;
        float _2826 = _297 * _2814;
        float _2827 = (-0.0) - _2826;
        float _2828 = _2814 * _298;
        float _2830 = (cbSceneParam._m0[77u].w * _2827) / _2813;
        float _2831 = _2830 + cbSceneParam._m0[79u].w;
        float _2832 = cbSceneParam._m0[79u].w - _2826;
        float _2838 = sqrt(((_2825 * _2825) + (_2826 * _2826)) + (_2828 * _2828));
        float _2841 = (1.0 - (cbSceneParam._m0[77u].w / _2813)) * _2838;
        float _2846 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2848 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3225;
        if (abs((_2827 - _2830) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3225 = ((((_2831 > 0.0) ? exp2(_2846 * _2831) : (2.0 - exp2(_2848 * _2831))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2841;
        }
        else
        {
            float _2957 = 1.0 / cbSceneParam._m0[80u].x;
            float _2958 = isnan(_2832) ? _2831 : (isnan(_2831) ? _2832 : max(_2831, _2832));
            float _2959 = isnan(_2832) ? _2831 : (isnan(_2831) ? _2832 : min(_2831, _2832));
            float _2968 = isnan(0.0) ? _2958 : (isnan(_2958) ? 0.0 : min(_2958, 0.0));
            float _2969 = isnan(0.0) ? _2959 : (isnan(_2959) ? 0.0 : min(_2959, 0.0));
            _3225 = ((abs(_2838 / _2827) * cbSceneParam._m0[80u].y) * ((((_2968 - _2969) * 2.0) - ((exp2(_2846 * (isnan(0.0) ? _2958 : (isnan(_2958) ? 0.0 : max(_2958, 0.0)))) - exp2(_2846 * (isnan(0.0) ? _2959 : (isnan(_2959) ? 0.0 : max(_2959, 0.0))))) * _2957)) - ((exp2(_2848 * _2968) - exp2(_2848 * _2969)) * _2957))) + (_2841 * cbSceneParam._m0[80u].z);
        }
        vec4 _3227 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2763, _2764, 1.0), 0.0);
        float _3236 = exp2((_3225 * (-1.44269502162933349609375)) * (1.0 - _3227.w));
        float _3237 = log2(_3236);
        float _3253 = log2(_2783);
        _2850 = (exp2(_3253 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3237 * cbSceneParam._m0[78u].x)) * _3227.x) / cbSceneParam._m0[78u].x)) + _2780;
        _2852 = (exp2(_3253 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3237 * cbSceneParam._m0[78u].y)) * _3227.y) / cbSceneParam._m0[78u].y)) + _2781;
        _2854 = (exp2(_3253 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3237 * cbSceneParam._m0[78u].z)) * _3227.z) / cbSceneParam._m0[78u].z)) + _2782;
        _2856 = _3236 * _2783;
    }
    else
    {
        _2850 = _2780;
        _2852 = _2781;
        _2854 = _2782;
        _2856 = _2783;
    }
    bool _2868 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2869 = log2(_2856);
    float _2876 = exp2(_2869 * cbSceneParam._m0[78u].x) * ((_2732 + ((_2598 + ((isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0))) * _1626)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _676.x) * _2738) - _2732) * _722));
    float _2877 = exp2(_2869 * cbSceneParam._m0[78u].y) * ((_2733 + ((_2600 + ((isnan(0.0) ? _1843 : (isnan(_1843) ? 0.0 : max(_1843, 0.0))) * _1626)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _676.y) * _2738) - _2733) * _722));
    float _2878 = exp2(_2869 * cbSceneParam._m0[78u].z) * ((_2734 + ((_2602 + ((isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0))) * _1626)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _676.z) * _2738) - _2734) * _722));
    vec4 _2886 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_652, _653));
    float _2888 = _2886.x;
    float _2909 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2888)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2888))) - _759) * cbMtdParam._m0[17u].y;
    float _4317 = isnan(0.0) ? _2909 : (isnan(_2909) ? 0.0 : max(_2909, 0.0));
    float _2911 = (cbInstanceData._m0[_304 + 6u].w * (isnan(1.0) ? _4266 : (isnan(_4266) ? 1.0 : min(_4266, 1.0)))) * (isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0)));
    float _2920 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2920 * (_2868 ? _2876 : (_2876 + (cbSceneParam._m0[72u].w * _2850)));
    SV_Target.y = _2920 * (_2868 ? _2877 : (_2877 + (cbSceneParam._m0[72u].w * _2852)));
    SV_Target.z = _2920 * (_2868 ? _2878 : (_2878 + (cbSceneParam._m0[72u].w * _2854)));
    SV_Target.w = _2911;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2911;
}


