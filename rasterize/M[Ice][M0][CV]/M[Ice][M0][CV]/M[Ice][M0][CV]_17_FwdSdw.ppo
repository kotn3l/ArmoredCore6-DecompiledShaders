#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1212;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _210 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _211 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _212 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _218 = inversesqrt(dot(vec3(_210, _211, _212), vec3(_210, _211, _212)));
    float _219 = _218 * _210;
    float _220 = _218 * _211;
    float _221 = _218 * _212;
    float _225 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _226 = _225 * NORMAL.x;
    float _227 = _225 * NORMAL.y;
    float _228 = _225 * NORMAL.z;
    float _232 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _233 = _232 * TANGENT.x;
    float _234 = _232 * TANGENT.y;
    float _235 = _232 * TANGENT.z;
    float _240;
    float _241;
    float _242;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _240 = (-0.0) - _226;
        _241 = (-0.0) - _227;
        _242 = (-0.0) - _228;
    }
    else
    {
        _240 = _226;
        _241 = _227;
        _242 = _228;
    }
    float _289 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _299 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _289);
    float _300 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _289);
    float _301 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _289);
    uint _307 = uint(roundEven(NORMAL.w)) * 13u;
    uint _312 = _307 + 1u;
    uint _316 = _307 + 2u;
    float _325 = sqrt(((cbInstanceData._m0[_312].x * cbInstanceData._m0[_312].x) + (cbInstanceData._m0[_307].x * cbInstanceData._m0[_307].x)) + (cbInstanceData._m0[_316].x * cbInstanceData._m0[_316].x));
    float _326 = _325 * TEXCOORD.z;
    float _327 = _325 * TEXCOORD.w;
    vec4 _347 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _356 = (_347.x * 2.0) + (-1.0);
    float _358 = (_347.y * 2.0) + (-1.0);
    float _359 = dot(vec2(_356, _358), vec2(_356, _358));
    float _3384 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _365 = sqrt(1.0 - (isnan(1.0) ? _3384 : (isnan(_3384) ? 1.0 : min(_3384, 1.0))));
    float _368 = fma(_365, _240, fma(_358, _233, _356 * _219));
    float _371 = fma(_365, _241, fma(_358, _234, _356 * _220));
    float _374 = fma(_365, _242, fma(_358, _235, _356 * _221));
    float _378 = inversesqrt(dot(vec3(_368, _371, _374), vec3(_368, _371, _374)));
    float _379 = _378 * _368;
    float _380 = _378 * _371;
    float _409 = (cbMtdParam._m0[17u].w + dot(vec4(_379, _380, _378 * _374, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _326) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _327) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3395 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _410 = isnan(1.0) ? _3395 : (isnan(_3395) ? 1.0 : min(_3395, 1.0));
    vec4 _422 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _427 = _422.w;
    float _439 = dot(vec3(_299, _300, _301), vec3(_219, _220, _221));
    float _442 = dot(vec3(_299, _300, _301), vec3(_233, _234, _235));
    float _445 = dot(vec3(_299, _300, _301), vec3(_240, _241, _242));
    float _451 = inversesqrt(dot(vec3(_439, _442, _445), vec3(_439, _442, _445)));
    float _473 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _493 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_439 * cbMtdParam._m0[14u].x) * _451) * _473) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_442 * cbMtdParam._m0[14u].x) * _451) * _473) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _516 = inversesqrt(dot(vec3(_299, _300, _301), vec3(_299, _300, _301)));
    float _517 = _516 * _299;
    float _518 = _516 * _300;
    float _519 = _516 * _301;
    float _520 = dot(vec4(_517, _518, _519, 0.0), vec4(_240, _241, _242, 0.0));
    float _523 = _520 - cbMtdParam._m0[15u].z;
    float _3406 = isnan(0.0) ? _523 : (isnan(_523) ? 0.0 : max(_523, 0.0));
    float _530 = exp2(log2(1.0 - (isnan(1.0) ? _3406 : (isnan(_3406) ? 1.0 : min(_3406, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _545 = ((((_422.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _493.x) * cbMtdParam._m0[9u].x) * ((_530 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _550 = ((((_422.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _493.y) * cbMtdParam._m0[9u].y) * ((_530 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _555 = ((((_422.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _493.z) * cbMtdParam._m0[9u].z) * ((_530 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _562 = ((cbMtdParam._m0[11u].x - _545) * _410) + _545;
    float _563 = ((cbMtdParam._m0[11u].y - _550) * _410) + _550;
    float _564 = ((cbMtdParam._m0[11u].z - _555) * _410) + _555;
    vec4 _576 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _326) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _327) + cbTextureTilingScale._m0[9u].w));
    float _583 = (_576.x * 2.0) + (-1.0);
    float _584 = (_576.y * 2.0) + (-1.0);
    float _585 = dot(vec2(_583, _584), vec2(_583, _584));
    float _3422 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0));
    vec4 _606 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _616 = cbMtdParam._m0[17u].z + _347.z;
    float _622 = (_616 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_606.z - _616));
    float _625 = ((_576.z - _622) * _410) + _622;
    float _631 = ((((_606.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _356;
    float _632 = ((((_606.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _358;
    float _640 = ((sqrt(1.0 - (isnan(1.0) ? _3422 : (isnan(_3422) ? 1.0 : min(_3422, 1.0)))) - _365) * _410) + _365;
    float _644 = ((_631 * cbMtdParam._m0[14u].z) + _631) + ((_583 - _631) * _410);
    float _646 = ((_632 * cbMtdParam._m0[14u].z) + _632) + ((_584 - _632) * _410);
    vec4 _658 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _662 = cbMtdParam._m0[16u].w * _658.x;
    float _664 = _662 - (_662 * _410);
    float _673 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _674 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _684 = cbSceneParam._m0[86u].x * ((_673 / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _379));
    float _685 = cbSceneParam._m0[86u].y * ((_674 / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _380));
    float _692 = isnan(cbInstanceData._m0[8u].x) ? _684 : (isnan(_684) ? cbInstanceData._m0[8u].x : max(_684, cbInstanceData._m0[8u].x));
    float _693 = isnan(cbInstanceData._m0[8u].y) ? _685 : (isnan(_685) ? cbInstanceData._m0[8u].y : max(_685, cbInstanceData._m0[8u].y));
    vec4 _697 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _692 : (isnan(_692) ? cbInstanceData._m0[8u].z : min(_692, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _693 : (isnan(_693) ? cbInstanceData._m0[8u].w : min(_693, cbInstanceData._m0[8u].w))));
    float _730 = _520 - cbMtdParam._m0[15u].x;
    float _3453 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _740 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3453 : (isnan(_3453) ? 1.0 : min(_3453, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3469 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _741 = isnan(1.0) ? _3469 : (isnan(_3469) ? 1.0 : min(_3469, 1.0));
    float _743 = _741 - (_741 * _410);
    float _747 = fma(_640, _240, fma(_646, _233, _644 * _219));
    float _750 = fma(_640, _241, fma(_646, _234, _644 * _220));
    float _753 = fma(_640, _242, fma(_646, _235, _644 * _221));
    float _757 = inversesqrt(dot(vec3(_747, _750, _753), vec3(_747, _750, _753)));
    float _758 = _757 * _747;
    float _759 = _757 * _750;
    float _760 = _757 * _753;
    float _3480 = isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0));
    float _761 = isnan(1.0) ? _3480 : (isnan(_3480) ? 1.0 : min(_3480, 1.0));
    float _3491 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _762 = isnan(1.0) ? _3491 : (isnan(_3491) ? 1.0 : min(_3491, 1.0));
    float _763 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _3507 = isnan(0.0) ? _562 : (isnan(_562) ? 0.0 : max(_562, 0.0));
    float _3518 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _3529 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _780 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _798 = fma(_760, cbSceneParam._m0[5u].z, fma(_759, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _758));
    float _801 = fma(_760, cbSceneParam._m0[6u].z, fma(_759, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _758));
    float _804 = fma(_760, cbSceneParam._m0[7u].z, fma(_759, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _758));
    uint _818 = (_307 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _824 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3507 : (isnan(_3507) ? 1.0 : min(_3507, 1.0)))) * cbInstanceData._m0[_818].x;
    float _825 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3518 : (isnan(_3518) ? 1.0 : min(_3518, 1.0)))) * cbInstanceData._m0[_818].y;
    float _826 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3529 : (isnan(_3529) ? 1.0 : min(_3529, 1.0)))) * cbInstanceData._m0[_818].z;
    float _3540 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _827 = isnan(1.0) ? _3540 : (isnan(_3540) ? 1.0 : min(_3540, 1.0));
    float _3551 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _828 = isnan(1.0) ? _3551 : (isnan(_3551) ? 1.0 : min(_3551, 1.0));
    float _3562 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _829 = isnan(1.0) ? _3562 : (isnan(_3562) ? 1.0 : min(_3562, 1.0));
    vec4 _833 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _673, cbSceneParam._m0[86u].y * _674));
    float _836 = _833.x * TEXCOORD_5.w;
    float _837 = dot(vec3(_758, _759, _760), vec3(_517, _518, _519));
    float _840 = _837 * 2.0;
    float _844 = (_840 * _758) - _517;
    float _845 = (_840 * _759) - _518;
    float _846 = (_840 * _760) - _519;
    float _847 = dot(vec3(_517, _518, _519), vec3(_758, _759, _760));
    float _850 = abs(_847);
    float _3573 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    float _851 = isnan(1.0) ? _3573 : (isnan(_3573) ? 1.0 : min(_3573, 1.0));
    float _857 = sqrt(_762);
    float _869 = exp2((_857 * 5.0) * log2(1.0 - (_851 * 0.999000012874603271484375))) / (4.0 - (_857 * 3.0));
    float _901 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _905 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _909 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1211;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _936 = fma(_909, cbModelParam._m0[26u].z, fma(_905, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _901));
        float _940 = fma(_909, cbModelParam._m0[27u].z, fma(_905, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _901));
        float _944 = fma(_909, cbModelParam._m0[28u].z, fma(_905, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _901));
        float _969 = _901 + _758;
        float _970 = _905 + _759;
        float _971 = _909 + _760;
        float _981 = fma(_971, cbModelParam._m0[26u].z, fma(_970, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _969)) - _936;
        float _982 = fma(_971, cbModelParam._m0[27u].z, fma(_970, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _969)) - _940;
        float _983 = fma(_971, cbModelParam._m0[28u].z, fma(_970, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _969)) - _944;
        float _987 = inversesqrt(dot(vec3(_981, _982, _983), vec3(_981, _982, _983)));
        float _1000 = ((_987 * _981) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_936 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1001 = ((_987 * _982) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_940 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1002 = ((_987 * _983) / cbModelParam._m0[34u].z) + ((((((_944 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1005 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1000, _1001, _1002), 0.0);
        vec4 _1012 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1000, _1001, _1002), 0.0);
        vec4 _1019 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1000, _1001, _1002), 0.0);
        vec4 _1026 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1000, _1001, _1002), 0.0);
        float _1039 = exp2((_1005.w + (-0.5)) * 20.0) * 2.0;
        float _1040 = _1039 * (_1005.x + (-0.5));
        float _1041 = _1039 * (_1005.y + (-0.5));
        float _1042 = _1039 * (_1005.z + (-0.5));
        float _1049 = exp2((_1012.w + (-0.5)) * 20.0) * 2.0;
        float _1050 = _1049 * (_1012.x + (-0.5));
        float _1051 = _1049 * (_1012.y + (-0.5));
        float _1052 = _1049 * (_1012.z + (-0.5));
        float _1059 = exp2((_1019.w + (-0.5)) * 20.0) * 2.0;
        float _1060 = _1059 * (_1019.x + (-0.5));
        float _1061 = _1059 * (_1019.y + (-0.5));
        float _1062 = _1059 * (_1019.z + (-0.5));
        float _1069 = exp2((_1026.w + (-0.5)) * 20.0) * 2.0;
        float _1070 = _1069 * (_1026.x + (-0.5));
        float _1071 = _1069 * (_1026.y + (-0.5));
        float _1072 = _1069 * (_1026.z + (-0.5));
        float _1073 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1074 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
        float _1075 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
        float _1076 = _1040 * 0.5;
        float _1077 = _1050 * 0.5;
        float _1078 = _1060 * 0.5;
        float _1079 = dot(vec3(_1076, _1077, _1078), vec3(_1076, _1077, _1078));
        float _1084 = (_1079 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1079);
        float _1093 = (dot(vec3(_758, _759, _760), vec3(_1084 * _1076, _1084 * _1077, _1084 * _1078)) + 1.0) * 0.5;
        float _3599 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
        float _1103 = sqrt(((_1077 * _1077) + (_1076 * _1076)) + (_1078 * _1078)) / (_1073 + 9.9999997473787516355514526367188e-06);
        float _3610 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1104 = isnan(1.0) ? _3610 : (isnan(_3610) ? 1.0 : min(_3610, 1.0));
        float _1105 = _1104 * 2.0;
        float _1109 = (1.0 - _1104) / (_1104 + 1.0);
        float _3621 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1110 = isnan(1.0) ? _3621 : (isnan(_3621) ? 1.0 : min(_3621, 1.0));
        float _1119 = ((((1.0 - _1110) * (_1105 + 2.0)) * exp2(log2(isnan(1.0) ? _3599 : (isnan(_3599) ? 1.0 : min(_3599, 1.0))) * (_1105 + 1.0))) + _1110) * _1073;
        float _1120 = _1041 * 0.5;
        float _1121 = _1051 * 0.5;
        float _1122 = _1061 * 0.5;
        float _1123 = dot(vec3(_1120, _1121, _1122), vec3(_1120, _1121, _1122));
        float _1128 = (_1123 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1123);
        float _1136 = (dot(vec3(_758, _759, _760), vec3(_1128 * _1120, _1128 * _1121, _1128 * _1122)) + 1.0) * 0.5;
        float _3632 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
        float _1145 = sqrt(((_1121 * _1121) + (_1120 * _1120)) + (_1122 * _1122)) / (_1074 + 9.9999997473787516355514526367188e-06);
        float _3643 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
        float _1146 = isnan(1.0) ? _3643 : (isnan(_3643) ? 1.0 : min(_3643, 1.0));
        float _1147 = _1146 * 2.0;
        float _1151 = (1.0 - _1146) / (_1146 + 1.0);
        float _3654 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
        float _1152 = isnan(1.0) ? _3654 : (isnan(_3654) ? 1.0 : min(_3654, 1.0));
        float _1161 = ((((1.0 - _1152) * (_1147 + 2.0)) * exp2(log2(isnan(1.0) ? _3632 : (isnan(_3632) ? 1.0 : min(_3632, 1.0))) * (_1147 + 1.0))) + _1152) * _1074;
        float _1162 = _1042 * 0.5;
        float _1163 = _1052 * 0.5;
        float _1164 = _1062 * 0.5;
        float _1165 = dot(vec3(_1162, _1163, _1164), vec3(_1162, _1163, _1164));
        float _1170 = (_1165 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1165);
        float _1178 = (dot(vec3(_758, _759, _760), vec3(_1170 * _1162, _1170 * _1163, _1170 * _1164)) + 1.0) * 0.5;
        float _3665 = isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0));
        float _1187 = sqrt(((_1163 * _1163) + (_1162 * _1162)) + (_1164 * _1164)) / (_1075 + 9.9999997473787516355514526367188e-06);
        float _3676 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1188 = isnan(1.0) ? _3676 : (isnan(_3676) ? 1.0 : min(_3676, 1.0));
        float _1189 = _1188 * 2.0;
        float _1193 = (1.0 - _1188) / (_1188 + 1.0);
        float _3687 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
        float _1194 = isnan(1.0) ? _3687 : (isnan(_3687) ? 1.0 : min(_3687, 1.0));
        float _1203 = ((((1.0 - _1194) * (_1189 + 2.0)) * exp2(log2(isnan(1.0) ? _3665 : (isnan(_3665) ? 1.0 : min(_3665, 1.0))) * (_1189 + 1.0))) + _1194) * _1075;
        _1211 = _1042;
        _1213 = _1041;
        _1214 = _1040;
        _1215 = _1052;
        _1216 = _1051;
        _1217 = _1050;
        _1218 = _1062;
        _1219 = _1061;
        _1220 = _1060;
        _1221 = _1075;
        _1222 = _1074;
        _1223 = _1073;
        _1224 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0)));
        _1225 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0)));
        _1226 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0)));
    }
    else
    {
        _1211 = _1212;
        _1213 = _1212;
        _1214 = _1212;
        _1215 = _1212;
        _1216 = _1212;
        _1217 = _1212;
        _1218 = _1212;
        _1219 = _1212;
        _1220 = _1212;
        _1221 = _1212;
        _1222 = _1212;
        _1223 = _1212;
        _1224 = 0.0;
        _1225 = 0.0;
        _1226 = 0.0;
    }
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    float _1534;
    float _1535;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1252 = fma(_909, cbModelParam._m0[30u].z, fma(_905, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _901));
        float _1256 = fma(_909, cbModelParam._m0[31u].z, fma(_905, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _901));
        float _1260 = fma(_909, cbModelParam._m0[32u].z, fma(_905, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _901));
        float _1283 = _901 + _758;
        float _1284 = _905 + _759;
        float _1285 = _909 + _760;
        float _1295 = fma(_1285, cbModelParam._m0[30u].z, fma(_1284, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1283)) - _1252;
        float _1296 = fma(_1285, cbModelParam._m0[31u].z, fma(_1284, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1283)) - _1256;
        float _1297 = fma(_1285, cbModelParam._m0[32u].z, fma(_1284, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1283)) - _1260;
        float _1301 = inversesqrt(dot(vec3(_1295, _1296, _1297), vec3(_1295, _1296, _1297)));
        float _1314 = ((_1301 * _1295) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1252 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1315 = ((_1301 * _1296) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1256 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1316 = ((_1301 * _1297) / cbModelParam._m0[35u].z) + ((((((_1260 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1318 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1314, _1315, _1316), 0.0);
        vec4 _1325 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1314, _1315, _1316), 0.0);
        vec4 _1332 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1314, _1315, _1316), 0.0);
        vec4 _1339 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1314, _1315, _1316), 0.0);
        float _1351 = exp2((_1318.w + (-0.5)) * 20.0) * 2.0;
        float _1352 = _1351 * (_1318.x + (-0.5));
        float _1353 = _1351 * (_1318.y + (-0.5));
        float _1354 = _1351 * (_1318.z + (-0.5));
        float _1361 = exp2((_1325.w + (-0.5)) * 20.0) * 2.0;
        float _1362 = _1361 * (_1325.x + (-0.5));
        float _1363 = _1361 * (_1325.y + (-0.5));
        float _1364 = _1361 * (_1325.z + (-0.5));
        float _1371 = exp2((_1332.w + (-0.5)) * 20.0) * 2.0;
        float _1372 = _1371 * (_1332.x + (-0.5));
        float _1373 = _1371 * (_1332.y + (-0.5));
        float _1374 = _1371 * (_1332.z + (-0.5));
        float _1381 = exp2((_1339.w + (-0.5)) * 20.0) * 2.0;
        float _1382 = _1381 * (_1339.x + (-0.5));
        float _1383 = _1381 * (_1339.y + (-0.5));
        float _1384 = _1381 * (_1339.z + (-0.5));
        float _1385 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1386 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1387 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
        float _1388 = _1352 * 0.5;
        float _1389 = _1362 * 0.5;
        float _1390 = _1372 * 0.5;
        float _1391 = dot(vec3(_1388, _1389, _1390), vec3(_1388, _1389, _1390));
        float _1396 = (_1391 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1391);
        float _1404 = (dot(vec3(_758, _759, _760), vec3(_1396 * _1388, _1396 * _1389, _1396 * _1390)) + 1.0) * 0.5;
        float _3728 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1413 = sqrt(((_1389 * _1389) + (_1388 * _1388)) + (_1390 * _1390)) / (_1385 + 9.9999997473787516355514526367188e-06);
        float _3739 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
        float _1414 = isnan(1.0) ? _3739 : (isnan(_3739) ? 1.0 : min(_3739, 1.0));
        float _1415 = _1414 * 2.0;
        float _1419 = (1.0 - _1414) / (_1414 + 1.0);
        float _3750 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1420 = isnan(1.0) ? _3750 : (isnan(_3750) ? 1.0 : min(_3750, 1.0));
        float _1429 = ((((1.0 - _1420) * (_1415 + 2.0)) * exp2(log2(isnan(1.0) ? _3728 : (isnan(_3728) ? 1.0 : min(_3728, 1.0))) * (_1415 + 1.0))) + _1420) * _1385;
        float _1430 = _1353 * 0.5;
        float _1431 = _1363 * 0.5;
        float _1432 = _1373 * 0.5;
        float _1433 = dot(vec3(_1430, _1431, _1432), vec3(_1430, _1431, _1432));
        float _1438 = (_1433 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1433);
        float _1446 = (dot(vec3(_758, _759, _760), vec3(_1438 * _1430, _1438 * _1431, _1438 * _1432)) + 1.0) * 0.5;
        float _3761 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1455 = sqrt(((_1431 * _1431) + (_1430 * _1430)) + (_1432 * _1432)) / (_1386 + 9.9999997473787516355514526367188e-06);
        float _3772 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1456 = isnan(1.0) ? _3772 : (isnan(_3772) ? 1.0 : min(_3772, 1.0));
        float _1457 = _1456 * 2.0;
        float _1461 = (1.0 - _1456) / (_1456 + 1.0);
        float _3783 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1462 = isnan(1.0) ? _3783 : (isnan(_3783) ? 1.0 : min(_3783, 1.0));
        float _1471 = ((((1.0 - _1462) * (_1457 + 2.0)) * exp2(log2(isnan(1.0) ? _3761 : (isnan(_3761) ? 1.0 : min(_3761, 1.0))) * (_1457 + 1.0))) + _1462) * _1386;
        float _1472 = _1354 * 0.5;
        float _1473 = _1364 * 0.5;
        float _1474 = _1374 * 0.5;
        float _1475 = dot(vec3(_1472, _1473, _1474), vec3(_1472, _1473, _1474));
        float _1480 = (_1475 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1475);
        float _1488 = (dot(vec3(_758, _759, _760), vec3(_1480 * _1472, _1480 * _1473, _1480 * _1474)) + 1.0) * 0.5;
        float _3794 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
        float _1497 = sqrt(((_1473 * _1473) + (_1472 * _1472)) + (_1474 * _1474)) / (_1387 + 9.9999997473787516355514526367188e-06);
        float _3805 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1498 = isnan(1.0) ? _3805 : (isnan(_3805) ? 1.0 : min(_3805, 1.0));
        float _1499 = _1498 * 2.0;
        float _1503 = (1.0 - _1498) / (_1498 + 1.0);
        float _3816 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
        float _1504 = isnan(1.0) ? _3816 : (isnan(_3816) ? 1.0 : min(_3816, 1.0));
        float _1513 = ((((1.0 - _1504) * (_1499 + 2.0)) * exp2(log2(isnan(1.0) ? _3794 : (isnan(_3794) ? 1.0 : min(_3794, 1.0))) * (_1499 + 1.0))) + _1504) * _1387;
        _1521 = _1354;
        _1522 = _1353;
        _1523 = _1352;
        _1524 = _1364;
        _1525 = _1363;
        _1526 = _1362;
        _1527 = _1374;
        _1528 = _1373;
        _1529 = _1372;
        _1530 = _1387;
        _1531 = _1386;
        _1532 = _1385;
        _1533 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0)));
        _1534 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0)));
        _1535 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0)));
    }
    else
    {
        _1521 = _1212;
        _1522 = _1212;
        _1523 = _1212;
        _1524 = _1212;
        _1525 = _1212;
        _1526 = _1212;
        _1527 = _1212;
        _1528 = _1212;
        _1529 = _1212;
        _1530 = _1212;
        _1531 = _1212;
        _1532 = _1212;
        _1533 = 0.0;
        _1534 = 0.0;
        _1535 = 0.0;
    }
    float _1545 = (cbModelParam._m0[1u].x * (_1533 - _1224)) + _1224;
    float _1546 = (cbModelParam._m0[1u].x * (_1534 - _1225)) + _1225;
    float _1547 = (cbModelParam._m0[1u].x * (_1535 - _1226)) + _1226;
    float _1568 = fma(_1547, cbSceneParam._m0[89u].z, fma(_1546, cbSceneParam._m0[89u].y, _1545 * cbSceneParam._m0[89u].x));
    float _1571 = fma(_1547, cbSceneParam._m0[90u].z, fma(_1546, cbSceneParam._m0[90u].y, _1545 * cbSceneParam._m0[90u].x));
    float _1574 = fma(_1547, cbSceneParam._m0[91u].z, fma(_1546, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1545));
    float _1589 = _844 * 0.5;
    float _1590 = _845 * 0.5;
    float _1591 = _846 * 0.5;
    float _1592 = dot(vec4(_1589, _1590, _1591, 1.0), vec4(_1523, _1526, _1529, _1532));
    float _1595 = dot(vec4(_1589, _1590, _1591, 1.0), vec4(_1522, _1525, _1528, _1531));
    float _1598 = dot(vec4(_1589, _1590, _1591, 1.0), vec4(_1521, _1524, _1527, _1530));
    float _1632;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1605 = dot(vec4(_1589, _1590, _1591, 1.0), vec4(_1211, _1215, _1218, _1221));
        float _1609 = dot(vec4(_1589, _1590, _1591, 1.0), vec4(_1213, _1216, _1219, _1222));
        float _1613 = dot(vec4(_1589, _1590, _1591, 1.0), vec4(_1214, _1217, _1220, _1223));
        float _1620 = dot(vec4(cbModelParam._m0[39u]), vec4(_1589, _1590, _1591, 1.0));
        _1632 = dot(vec3(isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0)), isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0)), isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1620) ? 0.0 : (isnan(0.0) ? _1620 : max(0.0, _1620))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1632 = 1.0;
    }
    float _1643;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1634 = dot(vec4(cbModelParam._m0[40u]), vec4(_1589, _1590, _1591, 1.0));
        _1643 = dot(vec3(isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0)), isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0)), isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1634) ? 0.0 : (isnan(0.0) ? _1634 : max(0.0, _1634))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1643 = 1.0;
    }
    float _1647 = (_1643 * cbModelParam._m0[1u].x) + (_1632 * (1.0 - cbModelParam._m0[1u].x));
    float _1657 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _762);
    float _1658 = isnan(_1657) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1657 : min(cbModelParam._m0[25u].z, _1657));
    float _1738;
    float _1740;
    float _1742;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1705 = fma(_909, cbModelParam._m0[13u].z, fma(_905, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _901)) + cbModelParam._m0[13u].w;
        float _1709 = fma(_909, cbModelParam._m0[14u].z, fma(_905, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _901)) + cbModelParam._m0[14u].w;
        float _1713 = fma(_909, cbModelParam._m0[15u].z, fma(_905, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _901)) + cbModelParam._m0[15u].w;
        float _1716 = fma(_846, cbModelParam._m0[13u].z, fma(_845, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _844));
        float _1719 = fma(_846, cbModelParam._m0[14u].z, fma(_845, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _844));
        float _1722 = fma(_846, cbModelParam._m0[15u].z, fma(_845, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _844));
        float _1750;
        if (_1716 > 0.0)
        {
            _1750 = abs((1.0 - _1705) / _1716);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1716 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1705 + 1.0) / _1716);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1750 = frontier_phi_16_14_ladder;
        }
        float _1921;
        if (_1719 > 0.0)
        {
            _1921 = abs((1.0 - _1709) / _1719);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1719 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1709 + 1.0) / _1719);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1921 = frontier_phi_25_21_ladder;
        }
        float _2185;
        if (_1722 > 0.0)
        {
            _2185 = abs((1.0 - _1713) / _1722);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1722 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1713 + 1.0) / _1722);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2185 = frontier_phi_37_32_ladder;
        }
        float _2187 = isnan(_1921) ? _1750 : (isnan(_1750) ? _1921 : min(_1750, _1921));
        float _2188 = isnan(_2185) ? _2187 : (isnan(_2187) ? _2185 : min(_2187, _2185));
        float _2192 = (_2188 * _1716) + _1705;
        float _2193 = (_2188 * _1719) + _1709;
        float _2194 = (_2188 * _1722) + _1713;
        float _2195 = _2188 * 9.9999997473787516355514526367188e-05;
        float _2197 = (-1.0) - _2195;
        float _2199 = _2195 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2194 > _2199) || ((_2194 < _2197) || ((_2193 > _2199) || ((_2193 < _2197) || ((_2192 < _2197) || (_2192 > _2199))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2348 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2194, cbModelParam._m0[9u].z, fma(_2193, cbModelParam._m0[9u].y, _2192 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2194, cbModelParam._m0[10u].z, fma(_2193, cbModelParam._m0[10u].y, _2192 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2194, cbModelParam._m0[11u].z, fma(_2193, cbModelParam._m0[11u].y, _2192 * cbModelParam._m0[11u].x))), _1658);
            frontier_phi_15_37_ladder = _2348.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2348.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2348.x * cbModelParam._m0[1u].y;
        }
        _1738 = frontier_phi_15_37_ladder_2;
        _1740 = frontier_phi_15_37_ladder_1;
        _1742 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1726 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_844, _845, _846), _1658);
        _1738 = _1726.x * cbModelParam._m0[1u].y;
        _1740 = _1726.y * cbModelParam._m0[1u].y;
        _1742 = _1726.z * cbModelParam._m0[1u].y;
    }
    float _1746 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _762);
    float _1747 = isnan(_1746) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1746 : min(cbModelParam._m0[25u].w, _1746));
    float _1838;
    float _1840;
    float _1842;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1802 = fma(_909, cbModelParam._m0[21u].z, fma(_905, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _901)) + cbModelParam._m0[21u].w;
        float _1806 = fma(_909, cbModelParam._m0[22u].z, fma(_905, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _901)) + cbModelParam._m0[22u].w;
        float _1810 = fma(_909, cbModelParam._m0[23u].z, fma(_905, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _901)) + cbModelParam._m0[23u].w;
        float _1813 = fma(_846, cbModelParam._m0[21u].z, fma(_845, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _844));
        float _1816 = fma(_846, cbModelParam._m0[22u].z, fma(_845, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _844));
        float _1819 = fma(_846, cbModelParam._m0[23u].z, fma(_845, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _844));
        float _1926;
        if (_1813 > 0.0)
        {
            _1926 = abs((1.0 - _1802) / _1813);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1813 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1802 + 1.0) / _1813);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1926 = frontier_phi_27_23_ladder;
        }
        float _2212;
        if (_1816 > 0.0)
        {
            _2212 = abs((1.0 - _1806) / _1816);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1816 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1806 + 1.0) / _1816);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2212 = frontier_phi_39_34_ladder;
        }
        float _2531;
        if (_1819 > 0.0)
        {
            _2531 = abs((1.0 - _1810) / _1819);
        }
        else
        {
            float frontier_phi_48_46_ladder;
            if (_1819 < 0.0)
            {
                frontier_phi_48_46_ladder = abs((_1810 + 1.0) / _1819);
            }
            else
            {
                frontier_phi_48_46_ladder = 5000.0;
            }
            _2531 = frontier_phi_48_46_ladder;
        }
        float _2533 = isnan(_2212) ? _1926 : (isnan(_1926) ? _2212 : min(_1926, _2212));
        float _2534 = isnan(_2531) ? _2533 : (isnan(_2533) ? _2531 : min(_2533, _2531));
        float _2538 = (_2534 * _1813) + _1802;
        float _2539 = (_2534 * _1816) + _1806;
        float _2540 = (_2534 * _1819) + _1810;
        float _2541 = _2534 * 9.9999997473787516355514526367188e-05;
        float _2542 = (-1.0) - _2541;
        float _2544 = _2541 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2540 > _2544) || ((_2540 < _2542) || ((_2539 > _2544) || ((_2539 < _2542) || ((_2538 < _2542) || (_2538 > _2544))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2641 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2540, cbModelParam._m0[17u].z, fma(_2539, cbModelParam._m0[17u].y, _2538 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2540, cbModelParam._m0[18u].z, fma(_2539, cbModelParam._m0[18u].y, _2538 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2540, cbModelParam._m0[19u].z, fma(_2539, cbModelParam._m0[19u].y, _2538 * cbModelParam._m0[19u].x))), _1747);
            frontier_phi_24_48_ladder = _2641.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2641.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2641.x * cbModelParam._m0[1u].z;
        }
        _1838 = frontier_phi_24_48_ladder_2;
        _1840 = frontier_phi_24_48_ladder_1;
        _1842 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1822 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_844, _845, _846), _1747);
        _1838 = _1822.x * cbModelParam._m0[1u].z;
        _1840 = _1822.y * cbModelParam._m0[1u].z;
        _1842 = _1822.z * cbModelParam._m0[1u].z;
    }
    float _1854 = ((((1.0 - _869) * ((_857 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_869 * _857)) * _836;
    float _1855 = _1854 * ((cbModelParam._m0[1u].w * (_1838 - _1738)) + _1738);
    float _1856 = _1854 * ((cbModelParam._m0[1u].w * (_1840 - _1740)) + _1740);
    float _1857 = _1854 * ((cbModelParam._m0[1u].w * (_1842 - _1742)) + _1742);
    float _1860 = fma(_1857, cbSceneParam._m0[89u].z, fma(_1856, cbSceneParam._m0[89u].y, _1855 * cbSceneParam._m0[89u].x));
    float _1863 = fma(_1857, cbSceneParam._m0[90u].z, fma(_1856, cbSceneParam._m0[90u].y, _1855 * cbSceneParam._m0[90u].x));
    float _1866 = fma(_1857, cbSceneParam._m0[91u].z, fma(_1856, cbSceneParam._m0[91u].y, _1855 * cbSceneParam._m0[91u].x));
    float _1900 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1904 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1908 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1912 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1913 = _1900 / _1912;
    float _1914 = _1904 / _1912;
    float _1915 = _1908 / _1912;
    float _2062;
    float _2063;
    float _2064;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1942 = ((uint(_1915 > cbSceneParam._m0[59u].y) + uint(_1915 > cbSceneParam._m0[59u].x)) + uint(_1915 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1943 = _1942 + 43u;
        uint _1951 = _1942 + 44u;
        uint _1959 = _1942 + 45u;
        uint _1967 = _1942 + 46u;
        float _1978 = fma(_1912, cbSceneParam._m0[_1943].w, fma(_1908, cbSceneParam._m0[_1943].z, fma(_1904, cbSceneParam._m0[_1943].y, _1900 * cbSceneParam._m0[_1943].x)));
        float _1982 = fma(_1912, cbSceneParam._m0[_1951].w, fma(_1908, cbSceneParam._m0[_1951].z, fma(_1904, cbSceneParam._m0[_1951].y, _1900 * cbSceneParam._m0[_1951].x)));
        float _1990 = fma(_1912, cbSceneParam._m0[_1967].w, fma(_1908, cbSceneParam._m0[_1967].z, fma(_1904, cbSceneParam._m0[_1967].y, _1900 * cbSceneParam._m0[_1967].x)));
        float _1995 = cbSceneParam._m0[33u].z * _1990;
        float _1997 = cbSceneParam._m0[33u].w * _1990;
        float _2000 = fma(_1912, cbSceneParam._m0[_1959].w, fma(_1908, cbSceneParam._m0[_1959].z, fma(_1904, cbSceneParam._m0[_1959].y, _1900 * cbSceneParam._m0[_1959].x))) / _1990;
        float _2048 = (cbSceneParam._m0[33u].x - sqrt(((_1914 * _1914) + (_1913 * _1913)) + (_1915 * _1915))) * cbSceneParam._m0[33u].y;
        float _3942 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
        float _2055 = (isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1995 + _1978) / _1990, (_1997 + _1982) / _1990), _2000), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1997 + _1978) / _1990, (_1982 - _1995) / _1990), _2000), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1978 - _1995) / _1990, (_1982 - _1997) / _1990), _2000), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1978 - _1997) / _1990, (_1995 + _1982) / _1990), _2000), 0.0)).x), vec4(0.25)));
        _2062 = 1.0 - (_2055 * cbSceneParam._m0[34u].x);
        _2063 = 1.0 - (_2055 * cbSceneParam._m0[34u].y);
        _2064 = 1.0 - (_2055 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2062 = 1.0;
        _2063 = 1.0;
        _2064 = 1.0;
    }
    float _2128;
    float _2130;
    float _2132;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2116 = fma(_1912, cbSceneParam._m0[63u].w, fma(_1908, cbSceneParam._m0[63u].z, fma(_1904, cbSceneParam._m0[63u].y, _1900 * cbSceneParam._m0[63u].x)));
        float _2117 = fma(_1912, cbSceneParam._m0[60u].w, fma(_1908, cbSceneParam._m0[60u].z, fma(_1904, cbSceneParam._m0[60u].y, _1900 * cbSceneParam._m0[60u].x))) / _2116;
        float _2118 = fma(_1912, cbSceneParam._m0[61u].w, fma(_1908, cbSceneParam._m0[61u].z, fma(_1904, cbSceneParam._m0[61u].y, _1900 * cbSceneParam._m0[61u].x))) / _2116;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2117 >= cbSceneParam._m0[64u].x) && (_2118 >= cbSceneParam._m0[64u].y)) && (_2117 <= cbSceneParam._m0[64u].z)) && (_2118 <= cbSceneParam._m0[64u].w))
        {
            float _2225 = fma(_1912, cbSceneParam._m0[62u].w, fma(_1908, cbSceneParam._m0[62u].z, fma(_1904, cbSceneParam._m0[62u].y, _1900 * cbSceneParam._m0[62u].x))) / _2116;
            float _2229 = isnan(cbSceneParam._m0[41u].w) ? _2225 : (isnan(_2225) ? cbSceneParam._m0[41u].w : max(_2225, cbSceneParam._m0[41u].w));
            float _2272 = (cbSceneParam._m0[33u].x - sqrt(((_1914 * _1914) + (_1913 * _1913)) + (_1915 * _1915))) * cbSceneParam._m0[33u].y;
            float _3958 = isnan(0.0) ? _2272 : (isnan(_2272) ? 0.0 : max(_2272, 0.0));
            float _2279 = (isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2117, cbSceneParam._m0[33u].w + _2118), _2229), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2117, _2118 - cbSceneParam._m0[33u].z), _2229), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2117 - cbSceneParam._m0[33u].z, _2118 - cbSceneParam._m0[33u].w), _2229), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2117 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2118), _2229), 0.0)).x), vec4(0.25)));
            float _2283 = 1.0 - (_2279 * cbSceneParam._m0[34u].x);
            float _2284 = 1.0 - (_2279 * cbSceneParam._m0[34u].y);
            float _2285 = 1.0 - (_2279 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2284) ? _2063 : (isnan(_2063) ? _2284 : min(_2063, _2284));
            frontier_phi_36_35_ladder_1 = isnan(_2283) ? _2062 : (isnan(_2062) ? _2283 : min(_2062, _2283));
            frontier_phi_36_35_ladder_2 = isnan(_2285) ? _2064 : (isnan(_2064) ? _2285 : min(_2064, _2285));
        }
        else
        {
            frontier_phi_36_35_ladder = _2063;
            frontier_phi_36_35_ladder_1 = _2062;
            frontier_phi_36_35_ladder_2 = _2064;
        }
        _2128 = frontier_phi_36_35_ladder_1;
        _2130 = frontier_phi_36_35_ladder;
        _2132 = frontier_phi_36_35_ladder_2;
    }
    else
    {
        _2128 = _2062;
        _2130 = _2063;
        _2132 = _2064;
    }
    uvec4 _2137 = floatBitsToUint(cbInstanceData._m0[_307 + 5u]);
    uint _2139 = _2137.x * 14u;
    uint _2140 = _2139 + 13u;
    float _2145 = _836 + (-1.0);
    float _2148 = (cbLight._m0[_2140].x * _2145) + 1.0;
    float _2149 = (cbLight._m0[_2140].y * _2145) + 1.0;
    uint _2151 = _2139 + 4u;
    float _2162 = dot(vec3(cbLight._m0[_2139].xyz), vec3(_758, _759, _760));
    float _2165 = isnan(1.0) ? _2148 : (isnan(_2148) ? 1.0 : min(_2148, 1.0));
    float _2166 = cbLight._m0[_2151].x * _2128;
    float _2167 = cbLight._m0[_2151].y * _2130;
    float _2168 = cbLight._m0[_2151].z * _2132;
    uint _2169 = _2139 + 5u;
    uint _2175 = _2139 | 1u;
    float _2181 = dot(vec3(cbLight._m0[_2175].xyz), vec3(_758, _759, _760));
    float _2184 = isnan(1.0) ? _2149 : (isnan(_2149) ? 1.0 : min(_2149, 1.0));
    float _2357;
    float _2358;
    float _2359;
    if (_763 == 0.0)
    {
        float _3994 = isnan(0.0) ? _2162 : (isnan(_2162) ? 0.0 : max(_2162, 0.0));
        float _4005 = isnan(0.0) ? _2181 : (isnan(_2181) ? 0.0 : max(_2181, 0.0));
        float _2294 = (isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0))) * 0.3183098733425140380859375;
        float _2296 = (isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0))) * 0.3183098733425140380859375;
        _2357 = ((cbLight._m0[_2169].x * _2184) * _2296) + ((_2166 * _2165) * _2294);
        _2358 = ((_2184 * cbLight._m0[_2169].y) * _2296) + ((_2167 * _2165) * _2294);
        _2359 = ((_2184 * cbLight._m0[_2169].z) * _2296) + ((_2168 * _2165) * _2294);
    }
    else
    {
        float _2306 = _2162 + _763;
        float _2309 = (_763 * 2.0) + 1.0;
        float _2310 = (isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : max(_2306, 0.0))) / _2309;
        float _2317 = _2181 + _763;
        float _2319 = (isnan(0.0) ? _2317 : (isnan(_2317) ? 0.0 : max(_2317, 0.0))) / _2309;
        _2357 = (((_2319 * cbLight._m0[_2169].x) * _2184) + ((_2166 * _2310) * _2165)) * 0.3183098733425140380859375;
        _2358 = (((_2319 * cbLight._m0[_2169].y) * _2184) + ((_2167 * _2310) * _2165)) * 0.3183098733425140380859375;
        _2359 = (((_2319 * cbLight._m0[_2169].z) * _2184) + ((_2168 * _2310) * _2165)) * 0.3183098733425140380859375;
    }
    uint _2363 = _2139 + 8u;
    float _2379 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2139].w)) * _762) * 0.949999988079071044921875);
    float _2380 = _2379 * _2379;
    float _2381 = cbLight._m0[_2139].x + _517;
    float _2382 = cbLight._m0[_2139].y + _518;
    float _2383 = cbLight._m0[_2139].z + _519;
    float _2387 = inversesqrt(dot(vec3(_2381, _2382, _2383), vec3(_2381, _2382, _2383)));
    float _2388 = _2387 * _2381;
    float _2389 = _2387 * _2382;
    float _2390 = _2387 * _2383;
    float _2391 = dot(vec3(_758, _759, _760), vec3(cbLight._m0[_2139].xyz));
    float _4026 = isnan(0.0) ? _2391 : (isnan(_2391) ? 0.0 : max(_2391, 0.0));
    float _2394 = isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0));
    float _4037 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    float _2395 = isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0));
    float _2396 = dot(vec3(_758, _759, _760), vec3(_2388, _2389, _2390));
    float _4048 = isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0));
    float _2399 = isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0));
    float _2400 = dot(vec3(cbLight._m0[_2139].xyz), vec3(_2388, _2389, _2390));
    float _4059 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
    float _2404 = _2380 * _2380;
    float _2408 = ((_2399 * _2399) * (_2404 + (-1.0))) + 1.0;
    float _2419 = (exp2(log2(1.0 - (isnan(1.0) ? _4059 : (isnan(_4059) ? 1.0 : min(_4059, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2420 = 1.0 - _2380;
    float _2431 = (0.5 / (((_2395 * ((_2394 * _2420) + _2380)) + 9.9999999392252902907785028219223e-09) + (((_2395 * _2420) + _2380) * _2394))) * _2394;
    float _4070 = isnan(0.0) ? _2431 : (isnan(_2431) ? 0.0 : max(_2431, 0.0));
    float _2433 = (isnan(1.0) ? _4070 : (isnan(_4070) ? 1.0 : min(_4070, 1.0))) * (_2404 / ((_2408 * _2408) * 3.141590118408203125));
    uint _2449 = _2139 + 9u;
    float _2463 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2175].w)) * _762) * 0.949999988079071044921875);
    float _2464 = _2463 * _2463;
    float _2465 = cbLight._m0[_2175].x + _517;
    float _2466 = cbLight._m0[_2175].y + _518;
    float _2467 = cbLight._m0[_2175].z + _519;
    float _2471 = inversesqrt(dot(vec3(_2465, _2466, _2467), vec3(_2465, _2466, _2467)));
    float _2472 = _2471 * _2465;
    float _2473 = _2471 * _2466;
    float _2474 = _2471 * _2467;
    float _2475 = dot(vec3(_758, _759, _760), vec3(cbLight._m0[_2175].xyz));
    float _4081 = isnan(0.0) ? _2475 : (isnan(_2475) ? 0.0 : max(_2475, 0.0));
    float _2478 = isnan(1.0) ? _4081 : (isnan(_4081) ? 1.0 : min(_4081, 1.0));
    float _2479 = dot(vec3(_758, _759, _760), vec3(_2472, _2473, _2474));
    float _4092 = isnan(0.0) ? _2479 : (isnan(_2479) ? 0.0 : max(_2479, 0.0));
    float _2482 = isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0));
    float _2483 = dot(vec3(cbLight._m0[_2175].xyz), vec3(_2472, _2473, _2474));
    float _4103 = isnan(0.0) ? _2483 : (isnan(_2483) ? 0.0 : max(_2483, 0.0));
    float _2487 = _2464 * _2464;
    float _2491 = ((_2482 * _2482) * (_2487 + (-1.0))) + 1.0;
    float _2500 = (exp2(log2(1.0 - (isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2501 = 1.0 - _2464;
    float _2511 = (0.5 / (((_2395 * ((_2478 * _2501) + _2464)) + 9.9999999392252902907785028219223e-09) + (((_2395 * _2501) + _2464) * _2478))) * _2478;
    float _4114 = isnan(0.0) ? _2511 : (isnan(_2511) ? 0.0 : max(_2511, 0.0));
    float _2513 = (isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0))) * (_2487 / ((_2491 * _2491) * 3.141590118408203125));
    float _2523 = (((_2500 * cbLight._m0[_2449].x) * _2513) * _2184) + ((((cbLight._m0[_2363].x * _2128) * _2419) * _2433) * _2165);
    float _2524 = (((_2500 * cbLight._m0[_2449].y) * _2513) * _2184) + ((((cbLight._m0[_2363].y * _2130) * _2419) * _2433) * _2165);
    float _2525 = (((_2500 * cbLight._m0[_2449].z) * _2513) * _2184) + ((((cbLight._m0[_2363].z * _2132) * _2419) * _2433) * _2165);
    float _2612;
    float _2614;
    float _2616;
    float _2618;
    float _2620;
    float _2622;
    if (_2137.y == 0u)
    {
        uvec4 _2568 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2569 = _2568.x;
        uint _2580 = uint((float(_2568.y) * floor(float(uint(cbSceneParam._m0[85u].y * _674) / _2569))) + floor(float(uint(cbSceneParam._m0[85u].x * _673) / _2569)));
        float _2590 = (log2(_1915 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2591 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
        uint _2594 = uint(isnan(14.0) ? _2591 : (isnan(_2591) ? 14.0 : min(_2591, 14.0)));
        uint _2601 = _2568.z;
        float _2646;
        float _2648;
        float _2650;
        float _2652;
        float _2654;
        float _2656;
        if (((((1u << ((_2601 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2594 << 2u) + (_2580 << 6u)) >> 2u)).x) == 0u) || ((_2601 & 240u) == 0u))
        {
            _2646 = 0.0;
            _2648 = 0.0;
            _2650 = 0.0;
            _2652 = 0.0;
            _2654 = 0.0;
            _2656 = 0.0;
        }
        else
        {
            float _2647;
            float _2649;
            float _2651;
            float _2653;
            float _2655;
            float _2657;
            float _2812 = 0.0;
            float _2813 = 0.0;
            float _2814 = 0.0;
            float _2815 = 0.0;
            float _2816 = 0.0;
            float _2817 = 0.0;
            uint _2818 = 0u;
            uint _2827;
            bool _2828;
            for (;;)
            {
                _2827 = texelFetch(g_lightClassification, int((((_2594 << 5u) + (_2580 << 9u)) + (_2818 << 2u)) >> 2u)).x;
                _2828 = _2827 == 0u;
                float frontier_phi_60_pred;
                float frontier_phi_60_pred_1;
                float frontier_phi_60_pred_2;
                float frontier_phi_60_pred_3;
                float frontier_phi_60_pred_4;
                float frontier_phi_60_pred_5;
                if (_2828)
                {
                    frontier_phi_60_pred = _2817;
                    frontier_phi_60_pred_1 = _2815;
                    frontier_phi_60_pred_2 = _2814;
                    frontier_phi_60_pred_3 = _2813;
                    frontier_phi_60_pred_4 = _2812;
                    frontier_phi_60_pred_5 = _2816;
                }
                else
                {
                    float _3004;
                    float _3005;
                    float _3006;
                    float _3007;
                    float _3008;
                    float _3009;
                    uint _3010;
                    _3004 = _2812;
                    _3005 = _2813;
                    _3006 = _2814;
                    _3007 = _2815;
                    _3008 = _2816;
                    _3009 = _2817;
                    _3010 = _2827;
                    float _2952;
                    float _2953;
                    float _2954;
                    float _2955;
                    float _2956;
                    float _2957;
                    for (;;)
                    {
                        uint _3014 = uint(findLSB(_3010)) + (_2818 << 5u);
                        uint _3011 = (_3010 + 4294967295u) & _3010;
                        uint _3016 = _3014 * 48u;
                        vec4 _3030 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3016)).x, texelFetch(g_PointLightRenderingBuffer, int(_3016 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3016 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3016 + 3u)).x));
                        uint _3036 = (_3014 * 48u) + 4u;
                        vec4 _3049 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3036)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 3u)).x));
                        float _3050 = _3049.x;
                        float _3051 = _3049.y;
                        float _3052 = _3049.z;
                        uint _3055 = (_3014 * 48u) + 8u;
                        vec3 _3066 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3055)).x, texelFetch(g_PointLightRenderingBuffer, int(_3055 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3055 + 2u)).x));
                        uint _3071 = (_3014 * 48u) + 12u;
                        vec2 _3079 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_3071)).x, texelFetch(g_PointLightRenderingBuffer, int(_3071 + 1u)).x));
                        float _3085 = inversesqrt(dot(vec3(_1913, _1914, _1915), vec3(_1913, _1914, _1915)));
                        float _3086 = _3085 * _1913;
                        float _3087 = _3085 * _1914;
                        float _3088 = _3085 * _1915;
                        float _3089 = _3030.x - _1913;
                        float _3090 = _3030.y - _1914;
                        float _3091 = _3030.z - _1915;
                        float _3092 = dot(vec3(_3089, _3090, _3091), vec3(_3089, _3090, _3091));
                        float _3095 = inversesqrt(_3092);
                        float _3096 = _3095 * _3089;
                        float _3097 = _3095 * _3090;
                        float _3098 = _3095 * _3091;
                        float _3099 = dot(vec3(_798, _801, _804), vec3(_3096, _3097, _3098));
                        float _3104 = 1.0 - (_3092 * _3030.w);
                        float _4135 = isnan(0.0) ? _3104 : (isnan(_3104) ? 0.0 : max(_3104, 0.0));
                        float _3105 = isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0));
                        float _3106 = sqrt(_3092) * _3049.w;
                        float _3109 = 1.39999997615814208984375 / (_3106 + 1.39999997615814208984375);
                        float _3110 = _3109 * _3109;
                        float _3111 = 1.0 - _3110;
                        float _3113 = (_3111 * _3111) * _763;
                        float _3116 = ((_3111 * _3099) + _3110) + _3113;
                        float _3121 = _3106 * _3106;
                        float _3126 = ((isnan(0.0) ? _3116 : (isnan(_3116) ? 0.0 : max(_3116, 0.0))) * _3105) / (((_3113 * 2.0) + 1.0) * ((_3121 * 0.699999988079071044921875) + 1.0));
                        float _3130 = dot(vec3(_3096, _3097, _3098), vec3(_3086, _3087, _3088));
                        float _4151 = isnan(0.0) ? _3130 : (isnan(_3130) ? 0.0 : max(_3130, 0.0));
                        float _3137 = dot(vec3((-0.0) - _3086, (-0.0) - _3087, (-0.0) - _3088), vec3(_798, _801, _804)) + 1.0;
                        float _3139 = (isnan(0.0) ? _3137 : (isnan(_3137) ? 0.0 : max(_3137, 0.0))) * 0.5;
                        float _3146 = ((_3139 * _3139) * _3079.x) * exp2((_3079.y * 32.0) * log2(isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0))));
                        float _3148 = _763 / (_763 + 1.0);
                        float _3164 = (-0.0) - _1913;
                        float _3165 = (-0.0) - _1914;
                        float _3166 = (-0.0) - _1915;
                        float _3170 = inversesqrt(dot(vec3(_3164, _3165, _3166), vec3(_3164, _3165, _3166)));
                        float _3171 = _3170 * _3164;
                        float _3172 = _3170 * _3165;
                        float _3173 = _3170 * _3166;
                        float _3180 = exp2(log2(1.0 / ((_3121 * 3.5) + 5.0)) * 0.25);
                        float _3181 = 1.0 - _857;
                        float _3188 = sqrt(1.0 - ((1.0 - (_3181 * _3181)) * (1.0 - (_3180 * _3180))));
                        float _3189 = _3188 * _3188;
                        float _3190 = _3189 * _3189;
                        float _3191 = _3171 + _3096;
                        float _3192 = _3172 + _3097;
                        float _3193 = _3173 + _3098;
                        float _3197 = inversesqrt(dot(vec3(_3191, _3192, _3193), vec3(_3191, _3192, _3193)));
                        float _3201 = dot(vec3(_798, _801, _804), vec3(_3171, _3172, _3173));
                        float _4167 = isnan(0.0) ? _3201 : (isnan(_3201) ? 0.0 : max(_3201, 0.0));
                        float _3204 = isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0));
                        float _3205 = dot(vec3(_798, _801, _804), vec3(_3197 * _3191, _3197 * _3192, _3197 * _3193));
                        float _4178 = isnan(0.0) ? _3205 : (isnan(_3205) ? 0.0 : max(_3205, 0.0));
                        float _3208 = isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0));
                        float _3212 = ((_3208 * _3208) * (_3190 + (-1.0))) + 1.0;
                        float _3213 = _3109 * _3189;
                        float _3214 = _3213 * _3213;
                        float _3217 = ((1.0 - _3214) * _3099) + _3214;
                        float _4189 = isnan(0.0) ? _3217 : (isnan(_3217) ? 0.0 : max(_3217, 0.0));
                        float _3218 = isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0));
                        float _3219 = 1.0 - _3189;
                        float _3229 = (0.5 / (((_3218 * ((_3204 * _3219) + _3189)) + 9.9999999392252902907785028219223e-09) + (((_3218 * _3219) + _3189) * _3204))) * _3218;
                        float _4200 = isnan(0.0) ? _3229 : (isnan(_3229) ? 0.0 : max(_3229, 0.0));
                        float _3240 = (((_3190 * 3.1415927410125732421875) * (isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0)))) / ((_3212 * _3212) * ((_3121 * 2.1991131305694580078125) + 3.141590118408203125))) * _3105;
                        _2955 = (((((_3050 * 0.3183098733425140380859375) * _3148) * _3146) + _3050) * _3126) + _3007;
                        _2956 = (((((_3051 * 0.3183098733425140380859375) * _3148) * _3146) + _3051) * _3126) + _3008;
                        _2957 = (((((_3052 * 0.3183098733425140380859375) * _3148) * _3146) + _3052) * _3126) + _3009;
                        _2952 = (_3240 * _3066.x) + _3004;
                        _2953 = (_3240 * _3066.y) + _3005;
                        _2954 = (_3240 * _3066.z) + _3006;
                        if (_3011 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3004 = _2952;
                            _3005 = _2953;
                            _3006 = _2954;
                            _3007 = _2955;
                            _3008 = _2956;
                            _3009 = _2957;
                            _3010 = _3011;
                        }
                    }
                    frontier_phi_60_pred = _2957;
                    frontier_phi_60_pred_1 = _2955;
                    frontier_phi_60_pred_2 = _2954;
                    frontier_phi_60_pred_3 = _2953;
                    frontier_phi_60_pred_4 = _2952;
                    frontier_phi_60_pred_5 = _2956;
                }
                _2657 = frontier_phi_60_pred;
                _2653 = frontier_phi_60_pred_1;
                _2651 = frontier_phi_60_pred_2;
                _2649 = frontier_phi_60_pred_3;
                _2647 = frontier_phi_60_pred_4;
                _2655 = frontier_phi_60_pred_5;
                uint _2819 = _2818 + 1u;
                if (_2819 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2812 = _2647;
                    _2813 = _2649;
                    _2814 = _2651;
                    _2815 = _2653;
                    _2816 = _2655;
                    _2817 = _2657;
                    _2818 = _2819;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2646 = _2647;
            _2648 = _2649;
            _2650 = _2651;
            _2652 = _2653;
            _2654 = _2655;
            _2656 = _2657;
        }
        float _2661 = isnan(1.0) ? _836 : (isnan(_836) ? 1.0 : min(_836, 1.0));
        _2612 = (_2661 * _2652) + _2357;
        _2614 = (_2661 * _2654) + _2358;
        _2616 = (_2661 * _2656) + _2359;
        _2618 = ((_2646 * 0.039999999105930328369140625) * _2661) + _2523;
        _2620 = ((_2648 * 0.039999999105930328369140625) * _2661) + _2524;
        _2622 = ((_2650 * 0.039999999105930328369140625) * _2661) + _2525;
    }
    else
    {
        _2612 = _2357;
        _2614 = _2358;
        _2616 = _2359;
        _2618 = _2523;
        _2620 = _2524;
        _2622 = _2525;
    }
    float _2735;
    float _2736;
    float _2737;
    if (_763 > 0.0)
    {
        uint _2668 = _2139 + 4u;
        float _2674 = (-0.0) - _517;
        float _2675 = (-0.0) - _518;
        float _2676 = (-0.0) - _519;
        float _2677 = dot(vec3(cbLight._m0[_2139].xyz), vec3(_2674, _2675, _2676));
        float _4216 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
        float _2681 = _847 + 1.0;
        float _2683 = (isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0))) * 0.5;
        float _2688 = _2683 * _2683;
        float _2689 = _2688 * exp2(log2(isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0))) * 32.0);
        float _2691 = _763 / (_763 + 1.0);
        float _2692 = isnan(_2148) ? 1.0 : (isnan(1.0) ? _2148 : min(1.0, _2148));
        uint _2705 = _2139 + 5u;
        float _2711 = dot(vec3(cbLight._m0[_2175].xyz), vec3(_2674, _2675, _2676));
        float _4237 = isnan(0.0) ? _2711 : (isnan(_2711) ? 0.0 : max(_2711, 0.0));
        float _2718 = _2688 * exp2(log2(isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0))) * 32.0);
        float _2719 = isnan(_2149) ? 1.0 : (isnan(1.0) ? _2149 : min(1.0, _2149));
        _2735 = ((((_2718 * cbLight._m0[_2705].x) * _2691) * _2719) + ((((cbLight._m0[_2668].x * _2128) * _2689) * _2691) * _2692)) * 0.3183098733425140380859375;
        _2736 = ((((_2718 * cbLight._m0[_2705].y) * _2691) * _2719) + ((((cbLight._m0[_2668].y * _2130) * _2689) * _2691) * _2692)) * 0.3183098733425140380859375;
        _2737 = ((((_2718 * cbLight._m0[_2705].z) * _2691) * _2719) + ((((cbLight._m0[_2668].z * _2132) * _2689) * _2691) * _2692)) * 0.3183098733425140380859375;
    }
    else
    {
        _2735 = 0.0;
        _2736 = 0.0;
        _2737 = 0.0;
    }
    float _4253 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _4264 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    float _4275 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _4286 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _2752 = (isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0))) * ((_2612 + ((isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0))) * _836)) + _2735);
    float _2753 = (isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0))) * ((_2614 + ((isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0))) * _836)) + _2736);
    float _2754 = (isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0))) * ((_2616 + ((isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0))) * _836)) + _2737);
    float _2758 = 0.959999978542327880859375 - (exp2(log2(1.0 - _851) * 5.0) * 0.959999978542327880859375);
    float _2783 = _673 / cbSceneParam._m0[86u].x;
    float _2784 = _674 / cbSceneParam._m0[86u].y;
    vec4 _2798 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2783, _2784, (log2((isnan(cbSceneParam._m0[77u].w) ? _780 : (isnan(_780) ? cbSceneParam._m0[77u].w : min(_780, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2800 = _2798.x;
    float _2801 = _2798.y;
    float _2802 = _2798.z;
    float _2803 = _2798.w;
    float _2870;
    float _2872;
    float _2874;
    float _2876;
    if (_780 > cbSceneParam._m0[78u].w)
    {
        float _2833 = isnan(_780) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _780 : min(cbSceneParam._m0[80u].w, _780));
        float _2834 = _2833 / _780;
        float _2845 = _2834 * _299;
        float _2846 = _300 * _2834;
        float _2847 = (-0.0) - _2846;
        float _2848 = _2834 * _301;
        float _2850 = (cbSceneParam._m0[77u].w * _2847) / _2833;
        float _2851 = _2850 + cbSceneParam._m0[79u].w;
        float _2852 = cbSceneParam._m0[79u].w - _2846;
        float _2858 = sqrt(((_2845 * _2845) + (_2846 * _2846)) + (_2848 * _2848));
        float _2861 = (1.0 - (cbSceneParam._m0[77u].w / _2833)) * _2858;
        float _2866 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2868 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3245;
        if (abs((_2847 - _2850) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3245 = ((((_2851 > 0.0) ? exp2(_2866 * _2851) : (2.0 - exp2(_2868 * _2851))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2861;
        }
        else
        {
            float _2977 = 1.0 / cbSceneParam._m0[80u].x;
            float _2978 = isnan(_2852) ? _2851 : (isnan(_2851) ? _2852 : max(_2851, _2852));
            float _2979 = isnan(_2852) ? _2851 : (isnan(_2851) ? _2852 : min(_2851, _2852));
            float _2988 = isnan(0.0) ? _2978 : (isnan(_2978) ? 0.0 : min(_2978, 0.0));
            float _2989 = isnan(0.0) ? _2979 : (isnan(_2979) ? 0.0 : min(_2979, 0.0));
            _3245 = ((abs(_2858 / _2847) * cbSceneParam._m0[80u].y) * ((((_2988 - _2989) * 2.0) - ((exp2(_2866 * (isnan(0.0) ? _2978 : (isnan(_2978) ? 0.0 : max(_2978, 0.0)))) - exp2(_2866 * (isnan(0.0) ? _2979 : (isnan(_2979) ? 0.0 : max(_2979, 0.0))))) * _2977)) - ((exp2(_2868 * _2988) - exp2(_2868 * _2989)) * _2977))) + (_2861 * cbSceneParam._m0[80u].z);
        }
        vec4 _3247 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2783, _2784, 1.0), 0.0);
        float _3256 = exp2((_3245 * (-1.44269502162933349609375)) * (1.0 - _3247.w));
        float _3257 = log2(_3256);
        float _3273 = log2(_2803);
        _2870 = (exp2(_3273 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3257 * cbSceneParam._m0[78u].x)) * _3247.x) / cbSceneParam._m0[78u].x)) + _2800;
        _2872 = (exp2(_3273 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3257 * cbSceneParam._m0[78u].y)) * _3247.y) / cbSceneParam._m0[78u].y)) + _2801;
        _2874 = (exp2(_3273 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3257 * cbSceneParam._m0[78u].z)) * _3247.z) / cbSceneParam._m0[78u].z)) + _2802;
        _2876 = _3256 * _2803;
    }
    else
    {
        _2870 = _2800;
        _2872 = _2801;
        _2874 = _2802;
        _2876 = _2803;
    }
    bool _2888 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2889 = log2(_2876);
    float _2896 = exp2(_2889 * cbSceneParam._m0[78u].x) * ((_2752 + ((_2618 + ((isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0))) * _1647)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _697.x) * _2758) - _2752) * _743));
    float _2897 = exp2(_2889 * cbSceneParam._m0[78u].y) * ((_2753 + ((_2620 + ((isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0))) * _1647)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _697.y) * _2758) - _2753) * _743));
    float _2898 = exp2(_2889 * cbSceneParam._m0[78u].z) * ((_2754 + ((_2622 + ((isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0))) * _1647)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _697.z) * _2758) - _2754) * _743));
    vec4 _2906 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_673, _674));
    float _2908 = _2906.x;
    float _2929 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2908)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2908))) - _780) * cbMtdParam._m0[17u].y;
    float _4337 = isnan(0.0) ? _2929 : (isnan(_2929) ? 0.0 : max(_2929, 0.0));
    float _2931 = (cbInstanceData._m0[_307 + 6u].w * (isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0)))) * (isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0)));
    float _2940 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2940 * (_2888 ? _2896 : (_2896 + (cbSceneParam._m0[72u].w * _2870)));
    SV_Target.y = _2940 * (_2888 ? _2897 : (_2897 + (cbSceneParam._m0[72u].w * _2872)));
    SV_Target.z = _2940 * (_2888 ? _2898 : (_2898 + (cbSceneParam._m0[72u].w * _2874)));
    SV_Target.w = _2931;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2931;
}


