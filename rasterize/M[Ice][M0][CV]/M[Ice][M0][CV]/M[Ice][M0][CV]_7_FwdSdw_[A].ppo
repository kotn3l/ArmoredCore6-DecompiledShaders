#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1229;
float _3455;
float _3456;
float _3457;
float _3458;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _208 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _209 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _210 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _216 = inversesqrt(dot(vec3(_208, _209, _210), vec3(_208, _209, _210)));
    float _217 = _216 * _208;
    float _218 = _216 * _209;
    float _219 = _216 * _210;
    float _223 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _224 = _223 * NORMAL.x;
    float _225 = _223 * NORMAL.y;
    float _226 = _223 * NORMAL.z;
    float _230 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _231 = _230 * TANGENT.x;
    float _232 = _230 * TANGENT.y;
    float _233 = _230 * TANGENT.z;
    float _238;
    float _239;
    float _240;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _238 = (-0.0) - _224;
        _239 = (-0.0) - _225;
        _240 = (-0.0) - _226;
    }
    else
    {
        _238 = _224;
        _239 = _225;
        _240 = _226;
    }
    float _287 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _297 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _287);
    float _298 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _287);
    float _299 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _287);
    uint _305 = uint(roundEven(NORMAL.w)) * 13u;
    uint _310 = _305 + 1u;
    uint _314 = _305 + 2u;
    float _323 = sqrt(((cbInstanceData._m0[_310].x * cbInstanceData._m0[_310].x) + (cbInstanceData._m0[_305].x * cbInstanceData._m0[_305].x)) + (cbInstanceData._m0[_314].x * cbInstanceData._m0[_314].x));
    float _324 = _323 * TEXCOORD.z;
    float _325 = _323 * TEXCOORD.w;
    vec4 _345 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _354 = (_345.x * 2.0) + (-1.0);
    float _356 = (_345.y * 2.0) + (-1.0);
    float _357 = dot(vec2(_354, _356), vec2(_354, _356));
    float _3467 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    float _363 = sqrt(1.0 - (isnan(1.0) ? _3467 : (isnan(_3467) ? 1.0 : min(_3467, 1.0))));
    float _366 = fma(_363, _238, fma(_356, _231, _354 * _217));
    float _369 = fma(_363, _239, fma(_356, _232, _354 * _218));
    float _372 = fma(_363, _240, fma(_356, _233, _354 * _219));
    float _376 = inversesqrt(dot(vec3(_366, _369, _372), vec3(_366, _369, _372)));
    float _377 = _376 * _366;
    float _378 = _376 * _369;
    float _407 = (cbMtdParam._m0[17u].w + dot(vec4(_377, _378, _376 * _372, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _324) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _325) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3478 = isnan(0.0) ? _407 : (isnan(_407) ? 0.0 : max(_407, 0.0));
    float _408 = isnan(1.0) ? _3478 : (isnan(_3478) ? 1.0 : min(_3478, 1.0));
    vec4 _420 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _425 = _420.w;
    float _437 = dot(vec3(_297, _298, _299), vec3(_217, _218, _219));
    float _440 = dot(vec3(_297, _298, _299), vec3(_231, _232, _233));
    float _443 = dot(vec3(_297, _298, _299), vec3(_238, _239, _240));
    float _449 = inversesqrt(dot(vec3(_437, _440, _443), vec3(_437, _440, _443)));
    float _471 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _491 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_437 * cbMtdParam._m0[14u].x) * _449) * _471) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_440 * cbMtdParam._m0[14u].x) * _449) * _471) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _514 = inversesqrt(dot(vec3(_297, _298, _299), vec3(_297, _298, _299)));
    float _515 = _514 * _297;
    float _516 = _514 * _298;
    float _517 = _514 * _299;
    float _518 = dot(vec4(_515, _516, _517, 0.0), vec4(_238, _239, _240, 0.0));
    float _521 = _518 - cbMtdParam._m0[15u].z;
    float _3489 = isnan(0.0) ? _521 : (isnan(_521) ? 0.0 : max(_521, 0.0));
    float _528 = exp2(log2(1.0 - (isnan(1.0) ? _3489 : (isnan(_3489) ? 1.0 : min(_3489, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _543 = ((((_420.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _491.x) * cbMtdParam._m0[9u].x) * ((_528 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _548 = ((((_420.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _491.y) * cbMtdParam._m0[9u].y) * ((_528 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _553 = ((((_420.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _491.z) * cbMtdParam._m0[9u].z) * ((_528 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _560 = ((cbMtdParam._m0[11u].x - _543) * _408) + _543;
    float _561 = ((cbMtdParam._m0[11u].y - _548) * _408) + _548;
    float _562 = ((cbMtdParam._m0[11u].z - _553) * _408) + _553;
    vec4 _574 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _324) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _325) + cbTextureTilingScale._m0[9u].w));
    float _581 = (_574.x * 2.0) + (-1.0);
    float _582 = (_574.y * 2.0) + (-1.0);
    float _583 = dot(vec2(_581, _582), vec2(_581, _582));
    float _3505 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    float _595 = (cbMtdParam._m0[16u].y + _345.z) + cbMtdParam._m0[17u].z;
    float _598 = ((_574.z - _595) * _408) + _595;
    float _608 = ((sqrt(1.0 - (isnan(1.0) ? _3505 : (isnan(_3505) ? 1.0 : min(_3505, 1.0)))) - _363) * _408) + _363;
    float _611 = (((_581 - _354) * _408) + _354) + (cbMtdParam._m0[14u].z * _354);
    float _612 = (((_582 - _356) * _408) + _356) + (cbMtdParam._m0[14u].z * _356);
    vec4 _624 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _628 = cbMtdParam._m0[16u].w * _624.x;
    float _630 = _628 - (_628 * _408);
    float _650 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _377));
    float _651 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _378));
    float _658 = isnan(cbInstanceData._m0[8u].x) ? _650 : (isnan(_650) ? cbInstanceData._m0[8u].x : max(_650, cbInstanceData._m0[8u].x));
    float _659 = isnan(cbInstanceData._m0[8u].y) ? _651 : (isnan(_651) ? cbInstanceData._m0[8u].y : max(_651, cbInstanceData._m0[8u].y));
    vec4 _663 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _658 : (isnan(_658) ? cbInstanceData._m0[8u].z : min(_658, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _659 : (isnan(_659) ? cbInstanceData._m0[8u].w : min(_659, cbInstanceData._m0[8u].w))));
    float _696 = _518 - cbMtdParam._m0[15u].x;
    float _3536 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
    float _706 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3536 : (isnan(_3536) ? 1.0 : min(_3536, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3552 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _707 = isnan(1.0) ? _3552 : (isnan(_3552) ? 1.0 : min(_3552, 1.0));
    float _709 = _707 - (_707 * _408);
    float _713 = fma(_608, _238, fma(_612, _231, _611 * _217));
    float _716 = fma(_608, _239, fma(_612, _232, _611 * _218));
    float _719 = fma(_608, _240, fma(_612, _233, _611 * _219));
    float _723 = inversesqrt(dot(vec3(_713, _716, _719), vec3(_713, _716, _719)));
    float _724 = _723 * _713;
    float _725 = _723 * _716;
    float _726 = _723 * _719;
    float _3563 = isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0));
    float _727 = isnan(1.0) ? _3563 : (isnan(_3563) ? 1.0 : min(_3563, 1.0));
    float _3574 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _728 = isnan(1.0) ? _3574 : (isnan(_3574) ? 1.0 : min(_3574, 1.0));
    float _729 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    float _3590 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _3601 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0));
    float _3612 = isnan(0.0) ? _562 : (isnan(_562) ? 0.0 : max(_562, 0.0));
    float _746 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _751 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _753 = _751.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _908 = sqrt(((_297 * _297) + (_298 * _298)) + (_299 * _299));
        float _914 = (cbMatDynParam._m0[5u].x * _908) + cbMatDynParam._m0[5u].y;
        float _3623 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
        float _915 = isnan(1.0) ? _3623 : (isnan(_3623) ? 1.0 : min(_3623, 1.0));
        float _919 = (cbMatDynParam._m0[5u].z * _908) + cbMatDynParam._m0[5u].w;
        float _3634 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3634 : (isnan(_3634) ? 1.0 : min(_3634, 1.0))) - _915)) + _915) < ((_753 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _763 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _764 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _782 = fma(_726, cbSceneParam._m0[5u].z, fma(_725, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _724));
    float _785 = fma(_726, cbSceneParam._m0[6u].z, fma(_725, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _724));
    float _788 = fma(_726, cbSceneParam._m0[7u].z, fma(_725, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _724));
    uint _801 = _305 + 9u;
    uint _802 = _801 + uint(cbMatDynParam._m0[0u].w);
    float _808 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3590 : (isnan(_3590) ? 1.0 : min(_3590, 1.0)))) * cbInstanceData._m0[_802].x;
    float _809 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3601 : (isnan(_3601) ? 1.0 : min(_3601, 1.0)))) * cbInstanceData._m0[_802].y;
    float _810 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3612 : (isnan(_3612) ? 1.0 : min(_3612, 1.0)))) * cbInstanceData._m0[_802].z;
    float _3645 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _811 = isnan(1.0) ? _3645 : (isnan(_3645) ? 1.0 : min(_3645, 1.0));
    float _3656 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
    float _812 = isnan(1.0) ? _3656 : (isnan(_3656) ? 1.0 : min(_3656, 1.0));
    float _3667 = isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0));
    float _813 = isnan(1.0) ? _3667 : (isnan(_3667) ? 1.0 : min(_3667, 1.0));
    vec4 _821 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _763, cbSceneParam._m0[86u].y * _764));
    float _824 = _821.x * TEXCOORD_5.w;
    float _825 = dot(vec3(_724, _725, _726), vec3(_515, _516, _517));
    float _828 = _825 * 2.0;
    float _832 = (_828 * _724) - _515;
    float _833 = (_828 * _725) - _516;
    float _834 = (_828 * _726) - _517;
    float _835 = dot(vec3(_515, _516, _517), vec3(_724, _725, _726));
    float _838 = abs(_835);
    float _3678 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _839 = isnan(1.0) ? _3678 : (isnan(_3678) ? 1.0 : min(_3678, 1.0));
    float _845 = sqrt(_728);
    float _857 = exp2((_845 * 5.0) * log2(1.0 - (_839 * 0.999000012874603271484375))) / (4.0 - (_845 * 3.0));
    float _889 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _893 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _897 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1228;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    float _1239;
    float _1240;
    float _1241;
    float _1242;
    float _1243;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _953 = fma(_897, cbModelParam._m0[26u].z, fma(_893, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _889));
        float _957 = fma(_897, cbModelParam._m0[27u].z, fma(_893, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _889));
        float _961 = fma(_897, cbModelParam._m0[28u].z, fma(_893, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _889));
        float _986 = _889 + _724;
        float _987 = _893 + _725;
        float _988 = _897 + _726;
        float _998 = fma(_988, cbModelParam._m0[26u].z, fma(_987, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _986)) - _953;
        float _999 = fma(_988, cbModelParam._m0[27u].z, fma(_987, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _986)) - _957;
        float _1000 = fma(_988, cbModelParam._m0[28u].z, fma(_987, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _986)) - _961;
        float _1004 = inversesqrt(dot(vec3(_998, _999, _1000), vec3(_998, _999, _1000)));
        float _1017 = ((_1004 * _998) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_953 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1018 = ((_1004 * _999) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_957 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1019 = ((_1004 * _1000) / cbModelParam._m0[34u].z) + ((((((_961 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1022 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1017, _1018, _1019), 0.0);
        vec4 _1029 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1017, _1018, _1019), 0.0);
        vec4 _1036 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1017, _1018, _1019), 0.0);
        vec4 _1043 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1017, _1018, _1019), 0.0);
        float _1056 = exp2((_1022.w + (-0.5)) * 20.0) * 2.0;
        float _1057 = _1056 * (_1022.x + (-0.5));
        float _1058 = _1056 * (_1022.y + (-0.5));
        float _1059 = _1056 * (_1022.z + (-0.5));
        float _1066 = exp2((_1029.w + (-0.5)) * 20.0) * 2.0;
        float _1067 = _1066 * (_1029.x + (-0.5));
        float _1068 = _1066 * (_1029.y + (-0.5));
        float _1069 = _1066 * (_1029.z + (-0.5));
        float _1076 = exp2((_1036.w + (-0.5)) * 20.0) * 2.0;
        float _1077 = _1076 * (_1036.x + (-0.5));
        float _1078 = _1076 * (_1036.y + (-0.5));
        float _1079 = _1076 * (_1036.z + (-0.5));
        float _1086 = exp2((_1043.w + (-0.5)) * 20.0) * 2.0;
        float _1087 = _1086 * (_1043.x + (-0.5));
        float _1088 = _1086 * (_1043.y + (-0.5));
        float _1089 = _1086 * (_1043.z + (-0.5));
        float _1090 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
        float _1091 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
        float _1092 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
        float _1093 = _1057 * 0.5;
        float _1094 = _1067 * 0.5;
        float _1095 = _1077 * 0.5;
        float _1096 = dot(vec3(_1093, _1094, _1095), vec3(_1093, _1094, _1095));
        float _1101 = (_1096 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1096);
        float _1110 = (dot(vec3(_724, _725, _726), vec3(_1101 * _1093, _1101 * _1094, _1101 * _1095)) + 1.0) * 0.5;
        float _3704 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
        float _1120 = sqrt(((_1094 * _1094) + (_1093 * _1093)) + (_1095 * _1095)) / (_1090 + 9.9999997473787516355514526367188e-06);
        float _3715 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
        float _1121 = isnan(1.0) ? _3715 : (isnan(_3715) ? 1.0 : min(_3715, 1.0));
        float _1122 = _1121 * 2.0;
        float _1126 = (1.0 - _1121) / (_1121 + 1.0);
        float _3726 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1127 = isnan(1.0) ? _3726 : (isnan(_3726) ? 1.0 : min(_3726, 1.0));
        float _1136 = ((((1.0 - _1127) * (_1122 + 2.0)) * exp2(log2(isnan(1.0) ? _3704 : (isnan(_3704) ? 1.0 : min(_3704, 1.0))) * (_1122 + 1.0))) + _1127) * _1090;
        float _1137 = _1058 * 0.5;
        float _1138 = _1068 * 0.5;
        float _1139 = _1078 * 0.5;
        float _1140 = dot(vec3(_1137, _1138, _1139), vec3(_1137, _1138, _1139));
        float _1145 = (_1140 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1140);
        float _1153 = (dot(vec3(_724, _725, _726), vec3(_1145 * _1137, _1145 * _1138, _1145 * _1139)) + 1.0) * 0.5;
        float _3737 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1162 = sqrt(((_1138 * _1138) + (_1137 * _1137)) + (_1139 * _1139)) / (_1091 + 9.9999997473787516355514526367188e-06);
        float _3748 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
        float _1163 = isnan(1.0) ? _3748 : (isnan(_3748) ? 1.0 : min(_3748, 1.0));
        float _1164 = _1163 * 2.0;
        float _1168 = (1.0 - _1163) / (_1163 + 1.0);
        float _3759 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
        float _1169 = isnan(1.0) ? _3759 : (isnan(_3759) ? 1.0 : min(_3759, 1.0));
        float _1178 = ((((1.0 - _1169) * (_1164 + 2.0)) * exp2(log2(isnan(1.0) ? _3737 : (isnan(_3737) ? 1.0 : min(_3737, 1.0))) * (_1164 + 1.0))) + _1169) * _1091;
        float _1179 = _1059 * 0.5;
        float _1180 = _1069 * 0.5;
        float _1181 = _1079 * 0.5;
        float _1182 = dot(vec3(_1179, _1180, _1181), vec3(_1179, _1180, _1181));
        float _1187 = (_1182 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1182);
        float _1195 = (dot(vec3(_724, _725, _726), vec3(_1187 * _1179, _1187 * _1180, _1187 * _1181)) + 1.0) * 0.5;
        float _3770 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
        float _1204 = sqrt(((_1180 * _1180) + (_1179 * _1179)) + (_1181 * _1181)) / (_1092 + 9.9999997473787516355514526367188e-06);
        float _3781 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        float _1205 = isnan(1.0) ? _3781 : (isnan(_3781) ? 1.0 : min(_3781, 1.0));
        float _1206 = _1205 * 2.0;
        float _1210 = (1.0 - _1205) / (_1205 + 1.0);
        float _3792 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
        float _1211 = isnan(1.0) ? _3792 : (isnan(_3792) ? 1.0 : min(_3792, 1.0));
        float _1220 = ((((1.0 - _1211) * (_1206 + 2.0)) * exp2(log2(isnan(1.0) ? _3770 : (isnan(_3770) ? 1.0 : min(_3770, 1.0))) * (_1206 + 1.0))) + _1211) * _1092;
        _1228 = _1059;
        _1230 = _1058;
        _1231 = _1057;
        _1232 = _1069;
        _1233 = _1068;
        _1234 = _1067;
        _1235 = _1079;
        _1236 = _1078;
        _1237 = _1077;
        _1238 = _1092;
        _1239 = _1091;
        _1240 = _1090;
        _1241 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0)));
        _1242 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0)));
        _1243 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0)));
    }
    else
    {
        _1228 = _1229;
        _1230 = _1229;
        _1231 = _1229;
        _1232 = _1229;
        _1233 = _1229;
        _1234 = _1229;
        _1235 = _1229;
        _1236 = _1229;
        _1237 = _1229;
        _1238 = _1229;
        _1239 = _1229;
        _1240 = _1229;
        _1241 = 0.0;
        _1242 = 0.0;
        _1243 = 0.0;
    }
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    float _1551;
    float _1552;
    float _1553;
    float _1554;
    float _1555;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1272 = fma(_897, cbModelParam._m0[30u].z, fma(_893, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _889));
        float _1276 = fma(_897, cbModelParam._m0[31u].z, fma(_893, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _889));
        float _1280 = fma(_897, cbModelParam._m0[32u].z, fma(_893, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _889));
        float _1303 = _889 + _724;
        float _1304 = _893 + _725;
        float _1305 = _897 + _726;
        float _1315 = fma(_1305, cbModelParam._m0[30u].z, fma(_1304, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1303)) - _1272;
        float _1316 = fma(_1305, cbModelParam._m0[31u].z, fma(_1304, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1303)) - _1276;
        float _1317 = fma(_1305, cbModelParam._m0[32u].z, fma(_1304, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1303)) - _1280;
        float _1321 = inversesqrt(dot(vec3(_1315, _1316, _1317), vec3(_1315, _1316, _1317)));
        float _1334 = ((_1321 * _1315) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1272 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1335 = ((_1321 * _1316) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1276 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1336 = ((_1321 * _1317) / cbModelParam._m0[35u].z) + ((((((_1280 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1338 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1334, _1335, _1336), 0.0);
        vec4 _1345 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1334, _1335, _1336), 0.0);
        vec4 _1352 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1334, _1335, _1336), 0.0);
        vec4 _1359 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1334, _1335, _1336), 0.0);
        float _1371 = exp2((_1338.w + (-0.5)) * 20.0) * 2.0;
        float _1372 = _1371 * (_1338.x + (-0.5));
        float _1373 = _1371 * (_1338.y + (-0.5));
        float _1374 = _1371 * (_1338.z + (-0.5));
        float _1381 = exp2((_1345.w + (-0.5)) * 20.0) * 2.0;
        float _1382 = _1381 * (_1345.x + (-0.5));
        float _1383 = _1381 * (_1345.y + (-0.5));
        float _1384 = _1381 * (_1345.z + (-0.5));
        float _1391 = exp2((_1352.w + (-0.5)) * 20.0) * 2.0;
        float _1392 = _1391 * (_1352.x + (-0.5));
        float _1393 = _1391 * (_1352.y + (-0.5));
        float _1394 = _1391 * (_1352.z + (-0.5));
        float _1401 = exp2((_1359.w + (-0.5)) * 20.0) * 2.0;
        float _1402 = _1401 * (_1359.x + (-0.5));
        float _1403 = _1401 * (_1359.y + (-0.5));
        float _1404 = _1401 * (_1359.z + (-0.5));
        float _1405 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1406 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
        float _1407 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1408 = _1372 * 0.5;
        float _1409 = _1382 * 0.5;
        float _1410 = _1392 * 0.5;
        float _1411 = dot(vec3(_1408, _1409, _1410), vec3(_1408, _1409, _1410));
        float _1416 = (_1411 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1411);
        float _1424 = (dot(vec3(_724, _725, _726), vec3(_1416 * _1408, _1416 * _1409, _1416 * _1410)) + 1.0) * 0.5;
        float _3833 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1433 = sqrt(((_1409 * _1409) + (_1408 * _1408)) + (_1410 * _1410)) / (_1405 + 9.9999997473787516355514526367188e-06);
        float _3844 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
        float _1434 = isnan(1.0) ? _3844 : (isnan(_3844) ? 1.0 : min(_3844, 1.0));
        float _1435 = _1434 * 2.0;
        float _1439 = (1.0 - _1434) / (_1434 + 1.0);
        float _3855 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1440 = isnan(1.0) ? _3855 : (isnan(_3855) ? 1.0 : min(_3855, 1.0));
        float _1449 = ((((1.0 - _1440) * (_1435 + 2.0)) * exp2(log2(isnan(1.0) ? _3833 : (isnan(_3833) ? 1.0 : min(_3833, 1.0))) * (_1435 + 1.0))) + _1440) * _1405;
        float _1450 = _1373 * 0.5;
        float _1451 = _1383 * 0.5;
        float _1452 = _1393 * 0.5;
        float _1453 = dot(vec3(_1450, _1451, _1452), vec3(_1450, _1451, _1452));
        float _1458 = (_1453 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1453);
        float _1466 = (dot(vec3(_724, _725, _726), vec3(_1458 * _1450, _1458 * _1451, _1458 * _1452)) + 1.0) * 0.5;
        float _3866 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1475 = sqrt(((_1451 * _1451) + (_1450 * _1450)) + (_1452 * _1452)) / (_1406 + 9.9999997473787516355514526367188e-06);
        float _3877 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1476 = isnan(1.0) ? _3877 : (isnan(_3877) ? 1.0 : min(_3877, 1.0));
        float _1477 = _1476 * 2.0;
        float _1481 = (1.0 - _1476) / (_1476 + 1.0);
        float _3888 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1482 = isnan(1.0) ? _3888 : (isnan(_3888) ? 1.0 : min(_3888, 1.0));
        float _1491 = ((((1.0 - _1482) * (_1477 + 2.0)) * exp2(log2(isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0))) * (_1477 + 1.0))) + _1482) * _1406;
        float _1492 = _1374 * 0.5;
        float _1493 = _1384 * 0.5;
        float _1494 = _1394 * 0.5;
        float _1495 = dot(vec3(_1492, _1493, _1494), vec3(_1492, _1493, _1494));
        float _1500 = (_1495 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1495);
        float _1508 = (dot(vec3(_724, _725, _726), vec3(_1500 * _1492, _1500 * _1493, _1500 * _1494)) + 1.0) * 0.5;
        float _3899 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1517 = sqrt(((_1493 * _1493) + (_1492 * _1492)) + (_1494 * _1494)) / (_1407 + 9.9999997473787516355514526367188e-06);
        float _3910 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        float _1518 = isnan(1.0) ? _3910 : (isnan(_3910) ? 1.0 : min(_3910, 1.0));
        float _1519 = _1518 * 2.0;
        float _1523 = (1.0 - _1518) / (_1518 + 1.0);
        float _3921 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1524 = isnan(1.0) ? _3921 : (isnan(_3921) ? 1.0 : min(_3921, 1.0));
        float _1533 = ((((1.0 - _1524) * (_1519 + 2.0)) * exp2(log2(isnan(1.0) ? _3899 : (isnan(_3899) ? 1.0 : min(_3899, 1.0))) * (_1519 + 1.0))) + _1524) * _1407;
        _1541 = _1374;
        _1542 = _1373;
        _1543 = _1372;
        _1544 = _1384;
        _1545 = _1383;
        _1546 = _1382;
        _1547 = _1394;
        _1548 = _1393;
        _1549 = _1392;
        _1550 = _1407;
        _1551 = _1406;
        _1552 = _1405;
        _1553 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0)));
        _1554 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0)));
        _1555 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0)));
    }
    else
    {
        _1541 = _1229;
        _1542 = _1229;
        _1543 = _1229;
        _1544 = _1229;
        _1545 = _1229;
        _1546 = _1229;
        _1547 = _1229;
        _1548 = _1229;
        _1549 = _1229;
        _1550 = _1229;
        _1551 = _1229;
        _1552 = _1229;
        _1553 = 0.0;
        _1554 = 0.0;
        _1555 = 0.0;
    }
    float _1565 = (cbModelParam._m0[1u].x * (_1553 - _1241)) + _1241;
    float _1566 = (cbModelParam._m0[1u].x * (_1554 - _1242)) + _1242;
    float _1567 = (cbModelParam._m0[1u].x * (_1555 - _1243)) + _1243;
    float _1588 = fma(_1567, cbSceneParam._m0[89u].z, fma(_1566, cbSceneParam._m0[89u].y, _1565 * cbSceneParam._m0[89u].x));
    float _1591 = fma(_1567, cbSceneParam._m0[90u].z, fma(_1566, cbSceneParam._m0[90u].y, _1565 * cbSceneParam._m0[90u].x));
    float _1594 = fma(_1567, cbSceneParam._m0[91u].z, fma(_1566, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1565));
    float _1609 = _832 * 0.5;
    float _1610 = _833 * 0.5;
    float _1611 = _834 * 0.5;
    float _1612 = dot(vec4(_1609, _1610, _1611, 1.0), vec4(_1543, _1546, _1549, _1552));
    float _1615 = dot(vec4(_1609, _1610, _1611, 1.0), vec4(_1542, _1545, _1548, _1551));
    float _1618 = dot(vec4(_1609, _1610, _1611, 1.0), vec4(_1541, _1544, _1547, _1550));
    float _1652;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1625 = dot(vec4(_1609, _1610, _1611, 1.0), vec4(_1228, _1232, _1235, _1238));
        float _1629 = dot(vec4(_1609, _1610, _1611, 1.0), vec4(_1230, _1233, _1236, _1239));
        float _1633 = dot(vec4(_1609, _1610, _1611, 1.0), vec4(_1231, _1234, _1237, _1240));
        float _1640 = dot(vec4(cbModelParam._m0[39u]), vec4(_1609, _1610, _1611, 1.0));
        _1652 = dot(vec3(isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0)), isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0)), isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1640) ? 0.0 : (isnan(0.0) ? _1640 : max(0.0, _1640))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1652 = 1.0;
    }
    float _1663;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1654 = dot(vec4(cbModelParam._m0[40u]), vec4(_1609, _1610, _1611, 1.0));
        _1663 = dot(vec3(isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0)), isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0)), isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1654) ? 0.0 : (isnan(0.0) ? _1654 : max(0.0, _1654))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1663 = 1.0;
    }
    float _1667 = (_1663 * cbModelParam._m0[1u].x) + (_1652 * (1.0 - cbModelParam._m0[1u].x));
    float _1677 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _728);
    float _1678 = isnan(_1677) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1677 : min(cbModelParam._m0[25u].z, _1677));
    float _1758;
    float _1760;
    float _1762;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1725 = fma(_897, cbModelParam._m0[13u].z, fma(_893, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _889)) + cbModelParam._m0[13u].w;
        float _1729 = fma(_897, cbModelParam._m0[14u].z, fma(_893, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _889)) + cbModelParam._m0[14u].w;
        float _1733 = fma(_897, cbModelParam._m0[15u].z, fma(_893, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _889)) + cbModelParam._m0[15u].w;
        float _1736 = fma(_834, cbModelParam._m0[13u].z, fma(_833, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _832));
        float _1739 = fma(_834, cbModelParam._m0[14u].z, fma(_833, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _832));
        float _1742 = fma(_834, cbModelParam._m0[15u].z, fma(_833, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _832));
        float _1770;
        if (_1736 > 0.0)
        {
            _1770 = abs((1.0 - _1725) / _1736);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1736 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1725 + 1.0) / _1736);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1770 = frontier_phi_19_17_ladder;
        }
        float _1941;
        if (_1739 > 0.0)
        {
            _1941 = abs((1.0 - _1729) / _1739);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1739 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1729 + 1.0) / _1739);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1941 = frontier_phi_28_24_ladder;
        }
        float _2205;
        if (_1742 > 0.0)
        {
            _2205 = abs((1.0 - _1733) / _1742);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1742 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1733 + 1.0) / _1742);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2205 = frontier_phi_40_35_ladder;
        }
        float _2207 = isnan(_1941) ? _1770 : (isnan(_1770) ? _1941 : min(_1770, _1941));
        float _2208 = isnan(_2205) ? _2207 : (isnan(_2207) ? _2205 : min(_2207, _2205));
        float _2212 = (_2208 * _1736) + _1725;
        float _2213 = (_2208 * _1739) + _1729;
        float _2214 = (_2208 * _1742) + _1733;
        float _2215 = _2208 * 9.9999997473787516355514526367188e-05;
        float _2217 = (-1.0) - _2215;
        float _2219 = _2215 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2214 > _2219) || ((_2214 < _2217) || ((_2213 > _2219) || ((_2213 < _2217) || ((_2212 < _2217) || (_2212 > _2219))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2368 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2214, cbModelParam._m0[9u].z, fma(_2213, cbModelParam._m0[9u].y, _2212 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2214, cbModelParam._m0[10u].z, fma(_2213, cbModelParam._m0[10u].y, _2212 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2214, cbModelParam._m0[11u].z, fma(_2213, cbModelParam._m0[11u].y, _2212 * cbModelParam._m0[11u].x))), _1678);
            frontier_phi_18_40_ladder = _2368.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2368.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2368.x * cbModelParam._m0[1u].y;
        }
        _1758 = frontier_phi_18_40_ladder_2;
        _1760 = frontier_phi_18_40_ladder_1;
        _1762 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1746 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_832, _833, _834), _1678);
        _1758 = _1746.x * cbModelParam._m0[1u].y;
        _1760 = _1746.y * cbModelParam._m0[1u].y;
        _1762 = _1746.z * cbModelParam._m0[1u].y;
    }
    float _1766 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _728);
    float _1767 = isnan(_1766) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1766 : min(cbModelParam._m0[25u].w, _1766));
    float _1858;
    float _1860;
    float _1862;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1822 = fma(_897, cbModelParam._m0[21u].z, fma(_893, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _889)) + cbModelParam._m0[21u].w;
        float _1826 = fma(_897, cbModelParam._m0[22u].z, fma(_893, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _889)) + cbModelParam._m0[22u].w;
        float _1830 = fma(_897, cbModelParam._m0[23u].z, fma(_893, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _889)) + cbModelParam._m0[23u].w;
        float _1833 = fma(_834, cbModelParam._m0[21u].z, fma(_833, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _832));
        float _1836 = fma(_834, cbModelParam._m0[22u].z, fma(_833, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _832));
        float _1839 = fma(_834, cbModelParam._m0[23u].z, fma(_833, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _832));
        float _1946;
        if (_1833 > 0.0)
        {
            _1946 = abs((1.0 - _1822) / _1833);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1833 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1822 + 1.0) / _1833);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1946 = frontier_phi_30_26_ladder;
        }
        float _2232;
        if (_1836 > 0.0)
        {
            _2232 = abs((1.0 - _1826) / _1836);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1836 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1826 + 1.0) / _1836);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2232 = frontier_phi_42_37_ladder;
        }
        float _2551;
        if (_1839 > 0.0)
        {
            _2551 = abs((1.0 - _1830) / _1839);
        }
        else
        {
            float frontier_phi_51_49_ladder;
            if (_1839 < 0.0)
            {
                frontier_phi_51_49_ladder = abs((_1830 + 1.0) / _1839);
            }
            else
            {
                frontier_phi_51_49_ladder = 5000.0;
            }
            _2551 = frontier_phi_51_49_ladder;
        }
        float _2553 = isnan(_2232) ? _1946 : (isnan(_1946) ? _2232 : min(_1946, _2232));
        float _2554 = isnan(_2551) ? _2553 : (isnan(_2553) ? _2551 : min(_2553, _2551));
        float _2558 = (_2554 * _1833) + _1822;
        float _2559 = (_2554 * _1836) + _1826;
        float _2560 = (_2554 * _1839) + _1830;
        float _2561 = _2554 * 9.9999997473787516355514526367188e-05;
        float _2562 = (-1.0) - _2561;
        float _2564 = _2561 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_2560 > _2564) || ((_2560 < _2562) || ((_2559 > _2564) || ((_2559 < _2562) || ((_2558 < _2562) || (_2558 > _2564))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2661 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2560, cbModelParam._m0[17u].z, fma(_2559, cbModelParam._m0[17u].y, _2558 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2560, cbModelParam._m0[18u].z, fma(_2559, cbModelParam._m0[18u].y, _2558 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2560, cbModelParam._m0[19u].z, fma(_2559, cbModelParam._m0[19u].y, _2558 * cbModelParam._m0[19u].x))), _1767);
            frontier_phi_27_51_ladder = _2661.x * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _2661.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _2661.y * cbModelParam._m0[1u].z;
        }
        _1858 = frontier_phi_27_51_ladder;
        _1860 = frontier_phi_27_51_ladder_2;
        _1862 = frontier_phi_27_51_ladder_1;
    }
    else
    {
        vec4 _1842 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_832, _833, _834), _1767);
        _1858 = _1842.x * cbModelParam._m0[1u].z;
        _1860 = _1842.y * cbModelParam._m0[1u].z;
        _1862 = _1842.z * cbModelParam._m0[1u].z;
    }
    float _1874 = ((((1.0 - _857) * ((_845 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_857 * _845)) * _824;
    float _1875 = _1874 * ((cbModelParam._m0[1u].w * (_1858 - _1758)) + _1758);
    float _1876 = _1874 * ((cbModelParam._m0[1u].w * (_1860 - _1760)) + _1760);
    float _1877 = _1874 * ((cbModelParam._m0[1u].w * (_1862 - _1762)) + _1762);
    float _1880 = fma(_1877, cbSceneParam._m0[89u].z, fma(_1876, cbSceneParam._m0[89u].y, _1875 * cbSceneParam._m0[89u].x));
    float _1883 = fma(_1877, cbSceneParam._m0[90u].z, fma(_1876, cbSceneParam._m0[90u].y, _1875 * cbSceneParam._m0[90u].x));
    float _1886 = fma(_1877, cbSceneParam._m0[91u].z, fma(_1876, cbSceneParam._m0[91u].y, _1875 * cbSceneParam._m0[91u].x));
    float _1920 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1924 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1928 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1932 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1933 = _1920 / _1932;
    float _1934 = _1924 / _1932;
    float _1935 = _1928 / _1932;
    float _2082;
    float _2083;
    float _2084;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1962 = ((uint(_1935 > cbSceneParam._m0[59u].y) + uint(_1935 > cbSceneParam._m0[59u].x)) + uint(_1935 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1963 = _1962 + 43u;
        uint _1971 = _1962 + 44u;
        uint _1979 = _1962 + 45u;
        uint _1987 = _1962 + 46u;
        float _1998 = fma(_1932, cbSceneParam._m0[_1963].w, fma(_1928, cbSceneParam._m0[_1963].z, fma(_1924, cbSceneParam._m0[_1963].y, _1920 * cbSceneParam._m0[_1963].x)));
        float _2002 = fma(_1932, cbSceneParam._m0[_1971].w, fma(_1928, cbSceneParam._m0[_1971].z, fma(_1924, cbSceneParam._m0[_1971].y, _1920 * cbSceneParam._m0[_1971].x)));
        float _2010 = fma(_1932, cbSceneParam._m0[_1987].w, fma(_1928, cbSceneParam._m0[_1987].z, fma(_1924, cbSceneParam._m0[_1987].y, _1920 * cbSceneParam._m0[_1987].x)));
        float _2015 = cbSceneParam._m0[33u].z * _2010;
        float _2017 = cbSceneParam._m0[33u].w * _2010;
        float _2020 = fma(_1932, cbSceneParam._m0[_1979].w, fma(_1928, cbSceneParam._m0[_1979].z, fma(_1924, cbSceneParam._m0[_1979].y, _1920 * cbSceneParam._m0[_1979].x))) / _2010;
        float _2068 = (cbSceneParam._m0[33u].x - sqrt(((_1934 * _1934) + (_1933 * _1933)) + (_1935 * _1935))) * cbSceneParam._m0[33u].y;
        float _4047 = isnan(0.0) ? _2068 : (isnan(_2068) ? 0.0 : max(_2068, 0.0));
        float _2075 = (isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2015 + _1998) / _2010, (_2017 + _2002) / _2010), _2020), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2017 + _1998) / _2010, (_2002 - _2015) / _2010), _2020), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1998 - _2015) / _2010, (_2002 - _2017) / _2010), _2020), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1998 - _2017) / _2010, (_2015 + _2002) / _2010), _2020), 0.0)).x), vec4(0.25)));
        _2082 = 1.0 - (_2075 * cbSceneParam._m0[34u].x);
        _2083 = 1.0 - (_2075 * cbSceneParam._m0[34u].y);
        _2084 = 1.0 - (_2075 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2082 = 1.0;
        _2083 = 1.0;
        _2084 = 1.0;
    }
    float _2148;
    float _2150;
    float _2152;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2136 = fma(_1932, cbSceneParam._m0[63u].w, fma(_1928, cbSceneParam._m0[63u].z, fma(_1924, cbSceneParam._m0[63u].y, _1920 * cbSceneParam._m0[63u].x)));
        float _2137 = fma(_1932, cbSceneParam._m0[60u].w, fma(_1928, cbSceneParam._m0[60u].z, fma(_1924, cbSceneParam._m0[60u].y, _1920 * cbSceneParam._m0[60u].x))) / _2136;
        float _2138 = fma(_1932, cbSceneParam._m0[61u].w, fma(_1928, cbSceneParam._m0[61u].z, fma(_1924, cbSceneParam._m0[61u].y, _1920 * cbSceneParam._m0[61u].x))) / _2136;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2137 >= cbSceneParam._m0[64u].x) && (_2138 >= cbSceneParam._m0[64u].y)) && (_2137 <= cbSceneParam._m0[64u].z)) && (_2138 <= cbSceneParam._m0[64u].w))
        {
            float _2245 = fma(_1932, cbSceneParam._m0[62u].w, fma(_1928, cbSceneParam._m0[62u].z, fma(_1924, cbSceneParam._m0[62u].y, _1920 * cbSceneParam._m0[62u].x))) / _2136;
            float _2249 = isnan(cbSceneParam._m0[41u].w) ? _2245 : (isnan(_2245) ? cbSceneParam._m0[41u].w : max(_2245, cbSceneParam._m0[41u].w));
            float _2292 = (cbSceneParam._m0[33u].x - sqrt(((_1934 * _1934) + (_1933 * _1933)) + (_1935 * _1935))) * cbSceneParam._m0[33u].y;
            float _4063 = isnan(0.0) ? _2292 : (isnan(_2292) ? 0.0 : max(_2292, 0.0));
            float _2299 = (isnan(1.0) ? _4063 : (isnan(_4063) ? 1.0 : min(_4063, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2137, cbSceneParam._m0[33u].w + _2138), _2249), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2137, _2138 - cbSceneParam._m0[33u].z), _2249), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2137 - cbSceneParam._m0[33u].z, _2138 - cbSceneParam._m0[33u].w), _2249), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2137 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2138), _2249), 0.0)).x), vec4(0.25)));
            float _2303 = 1.0 - (_2299 * cbSceneParam._m0[34u].x);
            float _2304 = 1.0 - (_2299 * cbSceneParam._m0[34u].y);
            float _2305 = 1.0 - (_2299 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2305) ? _2084 : (isnan(_2084) ? _2305 : min(_2084, _2305));
            frontier_phi_39_38_ladder_1 = isnan(_2304) ? _2083 : (isnan(_2083) ? _2304 : min(_2083, _2304));
            frontier_phi_39_38_ladder_2 = isnan(_2303) ? _2082 : (isnan(_2082) ? _2303 : min(_2082, _2303));
        }
        else
        {
            frontier_phi_39_38_ladder = _2084;
            frontier_phi_39_38_ladder_1 = _2083;
            frontier_phi_39_38_ladder_2 = _2082;
        }
        _2148 = frontier_phi_39_38_ladder_2;
        _2150 = frontier_phi_39_38_ladder_1;
        _2152 = frontier_phi_39_38_ladder;
    }
    else
    {
        _2148 = _2082;
        _2150 = _2083;
        _2152 = _2084;
    }
    uvec4 _2157 = floatBitsToUint(cbInstanceData._m0[_305 + 5u]);
    uint _2159 = _2157.x * 14u;
    uint _2160 = _2159 + 13u;
    float _2165 = _824 + (-1.0);
    float _2168 = (cbLight._m0[_2160].x * _2165) + 1.0;
    float _2169 = (cbLight._m0[_2160].y * _2165) + 1.0;
    uint _2171 = _2159 + 4u;
    float _2182 = dot(vec3(cbLight._m0[_2159].xyz), vec3(_724, _725, _726));
    float _2185 = isnan(1.0) ? _2168 : (isnan(_2168) ? 1.0 : min(_2168, 1.0));
    float _2186 = cbLight._m0[_2171].x * _2148;
    float _2187 = cbLight._m0[_2171].y * _2150;
    float _2188 = cbLight._m0[_2171].z * _2152;
    uint _2189 = _2159 + 5u;
    uint _2195 = _2159 | 1u;
    float _2201 = dot(vec3(cbLight._m0[_2195].xyz), vec3(_724, _725, _726));
    float _2204 = isnan(1.0) ? _2169 : (isnan(_2169) ? 1.0 : min(_2169, 1.0));
    float _2377;
    float _2378;
    float _2379;
    if (_729 == 0.0)
    {
        float _4099 = isnan(0.0) ? _2182 : (isnan(_2182) ? 0.0 : max(_2182, 0.0));
        float _4110 = isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : max(_2201, 0.0));
        float _2314 = (isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0))) * 0.3183098733425140380859375;
        float _2316 = (isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0))) * 0.3183098733425140380859375;
        _2377 = ((cbLight._m0[_2189].x * _2204) * _2316) + ((_2186 * _2185) * _2314);
        _2378 = ((_2204 * cbLight._m0[_2189].y) * _2316) + ((_2187 * _2185) * _2314);
        _2379 = ((_2204 * cbLight._m0[_2189].z) * _2316) + ((_2188 * _2185) * _2314);
    }
    else
    {
        float _2326 = _2182 + _729;
        float _2329 = (_729 * 2.0) + 1.0;
        float _2330 = (isnan(0.0) ? _2326 : (isnan(_2326) ? 0.0 : max(_2326, 0.0))) / _2329;
        float _2337 = _2201 + _729;
        float _2339 = (isnan(0.0) ? _2337 : (isnan(_2337) ? 0.0 : max(_2337, 0.0))) / _2329;
        _2377 = (((_2339 * cbLight._m0[_2189].x) * _2204) + ((_2186 * _2330) * _2185)) * 0.3183098733425140380859375;
        _2378 = (((_2339 * cbLight._m0[_2189].y) * _2204) + ((_2187 * _2330) * _2185)) * 0.3183098733425140380859375;
        _2379 = (((_2339 * cbLight._m0[_2189].z) * _2204) + ((_2188 * _2330) * _2185)) * 0.3183098733425140380859375;
    }
    uint _2383 = _2159 + 8u;
    float _2399 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2159].w)) * _728) * 0.949999988079071044921875);
    float _2400 = _2399 * _2399;
    float _2401 = cbLight._m0[_2159].x + _515;
    float _2402 = cbLight._m0[_2159].y + _516;
    float _2403 = cbLight._m0[_2159].z + _517;
    float _2407 = inversesqrt(dot(vec3(_2401, _2402, _2403), vec3(_2401, _2402, _2403)));
    float _2408 = _2407 * _2401;
    float _2409 = _2407 * _2402;
    float _2410 = _2407 * _2403;
    float _2411 = dot(vec3(_724, _725, _726), vec3(cbLight._m0[_2159].xyz));
    float _4131 = isnan(0.0) ? _2411 : (isnan(_2411) ? 0.0 : max(_2411, 0.0));
    float _2414 = isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0));
    float _4142 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _2415 = isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0));
    float _2416 = dot(vec3(_724, _725, _726), vec3(_2408, _2409, _2410));
    float _4153 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
    float _2419 = isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0));
    float _2420 = dot(vec3(cbLight._m0[_2159].xyz), vec3(_2408, _2409, _2410));
    float _4164 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
    float _2424 = _2400 * _2400;
    float _2428 = ((_2419 * _2419) * (_2424 + (-1.0))) + 1.0;
    float _2439 = (exp2(log2(1.0 - (isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2440 = 1.0 - _2400;
    float _2451 = (0.5 / (((_2415 * ((_2414 * _2440) + _2400)) + 9.9999999392252902907785028219223e-09) + (((_2415 * _2440) + _2400) * _2414))) * _2414;
    float _4175 = isnan(0.0) ? _2451 : (isnan(_2451) ? 0.0 : max(_2451, 0.0));
    float _2453 = (isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0))) * (_2424 / ((_2428 * _2428) * 3.141590118408203125));
    uint _2469 = _2159 + 9u;
    float _2483 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2195].w)) * _728) * 0.949999988079071044921875);
    float _2484 = _2483 * _2483;
    float _2485 = cbLight._m0[_2195].x + _515;
    float _2486 = cbLight._m0[_2195].y + _516;
    float _2487 = cbLight._m0[_2195].z + _517;
    float _2491 = inversesqrt(dot(vec3(_2485, _2486, _2487), vec3(_2485, _2486, _2487)));
    float _2492 = _2491 * _2485;
    float _2493 = _2491 * _2486;
    float _2494 = _2491 * _2487;
    float _2495 = dot(vec3(_724, _725, _726), vec3(cbLight._m0[_2195].xyz));
    float _4186 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0));
    float _2498 = isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0));
    float _2499 = dot(vec3(_724, _725, _726), vec3(_2492, _2493, _2494));
    float _4197 = isnan(0.0) ? _2499 : (isnan(_2499) ? 0.0 : max(_2499, 0.0));
    float _2502 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
    float _2503 = dot(vec3(cbLight._m0[_2195].xyz), vec3(_2492, _2493, _2494));
    float _4208 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0));
    float _2507 = _2484 * _2484;
    float _2511 = ((_2502 * _2502) * (_2507 + (-1.0))) + 1.0;
    float _2520 = (exp2(log2(1.0 - (isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2521 = 1.0 - _2484;
    float _2531 = (0.5 / (((_2415 * ((_2498 * _2521) + _2484)) + 9.9999999392252902907785028219223e-09) + (((_2415 * _2521) + _2484) * _2498))) * _2498;
    float _4219 = isnan(0.0) ? _2531 : (isnan(_2531) ? 0.0 : max(_2531, 0.0));
    float _2533 = (isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0))) * (_2507 / ((_2511 * _2511) * 3.141590118408203125));
    float _2543 = (((_2520 * cbLight._m0[_2469].x) * _2533) * _2204) + ((((cbLight._m0[_2383].x * _2148) * _2439) * _2453) * _2185);
    float _2544 = (((_2520 * cbLight._m0[_2469].y) * _2533) * _2204) + ((((cbLight._m0[_2383].y * _2150) * _2439) * _2453) * _2185);
    float _2545 = (((_2520 * cbLight._m0[_2469].z) * _2533) * _2204) + ((((cbLight._m0[_2383].z * _2152) * _2439) * _2453) * _2185);
    float _2632;
    float _2634;
    float _2636;
    float _2638;
    float _2640;
    float _2642;
    if (_2157.y == 0u)
    {
        uvec4 _2588 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2589 = _2588.x;
        uint _2600 = uint((float(_2588.y) * floor(float(uint(cbSceneParam._m0[85u].y * _764) / _2589))) + floor(float(uint(cbSceneParam._m0[85u].x * _763) / _2589)));
        float _2610 = (log2(_1935 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2611 = isnan(0.0) ? _2610 : (isnan(_2610) ? 0.0 : max(_2610, 0.0));
        uint _2614 = uint(isnan(14.0) ? _2611 : (isnan(_2611) ? 14.0 : min(_2611, 14.0)));
        uint _2621 = _2588.z;
        float _2666;
        float _2668;
        float _2670;
        float _2672;
        float _2674;
        float _2676;
        if (((((1u << ((_2621 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2614 << 2u) + (_2600 << 6u)) >> 2u)).x) == 0u) || ((_2621 & 240u) == 0u))
        {
            _2666 = 0.0;
            _2668 = 0.0;
            _2670 = 0.0;
            _2672 = 0.0;
            _2674 = 0.0;
            _2676 = 0.0;
        }
        else
        {
            float _2667;
            float _2669;
            float _2671;
            float _2673;
            float _2675;
            float _2677;
            float _2832 = 0.0;
            float _2833 = 0.0;
            float _2834 = 0.0;
            float _2835 = 0.0;
            float _2836 = 0.0;
            float _2837 = 0.0;
            uint _2838 = 0u;
            uint _2847;
            bool _2848;
            for (;;)
            {
                _2847 = texelFetch(g_lightClassification, int((((_2614 << 5u) + (_2600 << 9u)) + (_2838 << 2u)) >> 2u)).x;
                _2848 = _2847 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2848)
                {
                    frontier_phi_63_pred = _2834;
                    frontier_phi_63_pred_1 = _2837;
                    frontier_phi_63_pred_2 = _2836;
                    frontier_phi_63_pred_3 = _2835;
                    frontier_phi_63_pred_4 = _2833;
                    frontier_phi_63_pred_5 = _2832;
                }
                else
                {
                    float _3048;
                    float _3049;
                    float _3050;
                    float _3051;
                    float _3052;
                    float _3053;
                    uint _3054;
                    _3048 = _2832;
                    _3049 = _2833;
                    _3050 = _2834;
                    _3051 = _2835;
                    _3052 = _2836;
                    _3053 = _2837;
                    _3054 = _2847;
                    float _2980;
                    float _2981;
                    float _2982;
                    float _2983;
                    float _2984;
                    float _2985;
                    for (;;)
                    {
                        uint _3058 = uint(findLSB(_3054)) + (_2838 << 5u);
                        uint _3055 = (_3054 + 4294967295u) & _3054;
                        uint _3060 = _3058 * 48u;
                        vec4 _3074 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3060)).x, texelFetch(g_PointLightRenderingBuffer, int(_3060 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3060 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3060 + 3u)).x));
                        uint _3080 = (_3058 * 48u) + 4u;
                        vec4 _3093 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3080)).x, texelFetch(g_PointLightRenderingBuffer, int(_3080 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3080 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3080 + 3u)).x));
                        float _3094 = _3093.x;
                        float _3095 = _3093.y;
                        float _3096 = _3093.z;
                        uint _3099 = (_3058 * 48u) + 8u;
                        vec3 _3110 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3099)).x, texelFetch(g_PointLightRenderingBuffer, int(_3099 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3099 + 2u)).x));
                        uint _3115 = (_3058 * 48u) + 12u;
                        vec2 _3123 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_3115)).x, texelFetch(g_PointLightRenderingBuffer, int(_3115 + 1u)).x));
                        float _3129 = inversesqrt(dot(vec3(_1933, _1934, _1935), vec3(_1933, _1934, _1935)));
                        float _3130 = _3129 * _1933;
                        float _3131 = _3129 * _1934;
                        float _3132 = _3129 * _1935;
                        float _3133 = _3074.x - _1933;
                        float _3134 = _3074.y - _1934;
                        float _3135 = _3074.z - _1935;
                        float _3136 = dot(vec3(_3133, _3134, _3135), vec3(_3133, _3134, _3135));
                        float _3139 = inversesqrt(_3136);
                        float _3140 = _3139 * _3133;
                        float _3141 = _3139 * _3134;
                        float _3142 = _3139 * _3135;
                        float _3143 = dot(vec3(_782, _785, _788), vec3(_3140, _3141, _3142));
                        float _3148 = 1.0 - (_3136 * _3074.w);
                        float _4240 = isnan(0.0) ? _3148 : (isnan(_3148) ? 0.0 : max(_3148, 0.0));
                        float _3149 = isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0));
                        float _3150 = sqrt(_3136) * _3093.w;
                        float _3153 = 1.39999997615814208984375 / (_3150 + 1.39999997615814208984375);
                        float _3154 = _3153 * _3153;
                        float _3155 = 1.0 - _3154;
                        float _3157 = (_3155 * _3155) * _729;
                        float _3160 = ((_3155 * _3143) + _3154) + _3157;
                        float _3165 = _3150 * _3150;
                        float _3170 = ((isnan(0.0) ? _3160 : (isnan(_3160) ? 0.0 : max(_3160, 0.0))) * _3149) / (((_3157 * 2.0) + 1.0) * ((_3165 * 0.699999988079071044921875) + 1.0));
                        float _3174 = dot(vec3(_3140, _3141, _3142), vec3(_3130, _3131, _3132));
                        float _4256 = isnan(0.0) ? _3174 : (isnan(_3174) ? 0.0 : max(_3174, 0.0));
                        float _3181 = dot(vec3((-0.0) - _3130, (-0.0) - _3131, (-0.0) - _3132), vec3(_782, _785, _788)) + 1.0;
                        float _3183 = (isnan(0.0) ? _3181 : (isnan(_3181) ? 0.0 : max(_3181, 0.0))) * 0.5;
                        float _3190 = ((_3183 * _3183) * _3123.x) * exp2((_3123.y * 32.0) * log2(isnan(1.0) ? _4256 : (isnan(_4256) ? 1.0 : min(_4256, 1.0))));
                        float _3192 = _729 / (_729 + 1.0);
                        float _3208 = (-0.0) - _1933;
                        float _3209 = (-0.0) - _1934;
                        float _3210 = (-0.0) - _1935;
                        float _3214 = inversesqrt(dot(vec3(_3208, _3209, _3210), vec3(_3208, _3209, _3210)));
                        float _3215 = _3214 * _3208;
                        float _3216 = _3214 * _3209;
                        float _3217 = _3214 * _3210;
                        float _3224 = exp2(log2(1.0 / ((_3165 * 3.5) + 5.0)) * 0.25);
                        float _3225 = 1.0 - _845;
                        float _3232 = sqrt(1.0 - ((1.0 - (_3225 * _3225)) * (1.0 - (_3224 * _3224))));
                        float _3233 = _3232 * _3232;
                        float _3234 = _3233 * _3233;
                        float _3235 = _3215 + _3140;
                        float _3236 = _3216 + _3141;
                        float _3237 = _3217 + _3142;
                        float _3241 = inversesqrt(dot(vec3(_3235, _3236, _3237), vec3(_3235, _3236, _3237)));
                        float _3245 = dot(vec3(_782, _785, _788), vec3(_3215, _3216, _3217));
                        float _4272 = isnan(0.0) ? _3245 : (isnan(_3245) ? 0.0 : max(_3245, 0.0));
                        float _3248 = isnan(1.0) ? _4272 : (isnan(_4272) ? 1.0 : min(_4272, 1.0));
                        float _3249 = dot(vec3(_782, _785, _788), vec3(_3241 * _3235, _3241 * _3236, _3241 * _3237));
                        float _4283 = isnan(0.0) ? _3249 : (isnan(_3249) ? 0.0 : max(_3249, 0.0));
                        float _3252 = isnan(1.0) ? _4283 : (isnan(_4283) ? 1.0 : min(_4283, 1.0));
                        float _3256 = ((_3252 * _3252) * (_3234 + (-1.0))) + 1.0;
                        float _3257 = _3153 * _3233;
                        float _3258 = _3257 * _3257;
                        float _3261 = ((1.0 - _3258) * _3143) + _3258;
                        float _4294 = isnan(0.0) ? _3261 : (isnan(_3261) ? 0.0 : max(_3261, 0.0));
                        float _3262 = isnan(1.0) ? _4294 : (isnan(_4294) ? 1.0 : min(_4294, 1.0));
                        float _3263 = 1.0 - _3233;
                        float _3273 = (0.5 / (((_3262 * ((_3248 * _3263) + _3233)) + 9.9999999392252902907785028219223e-09) + (((_3262 * _3263) + _3233) * _3248))) * _3262;
                        float _4305 = isnan(0.0) ? _3273 : (isnan(_3273) ? 0.0 : max(_3273, 0.0));
                        float _3284 = (((_3234 * 3.1415927410125732421875) * (isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0)))) / ((_3256 * _3256) * ((_3165 * 2.1991131305694580078125) + 3.141590118408203125))) * _3149;
                        _2983 = (((((_3094 * 0.3183098733425140380859375) * _3192) * _3190) + _3094) * _3170) + _3051;
                        _2984 = (((((_3095 * 0.3183098733425140380859375) * _3192) * _3190) + _3095) * _3170) + _3052;
                        _2985 = (((((_3096 * 0.3183098733425140380859375) * _3192) * _3190) + _3096) * _3170) + _3053;
                        _2980 = (_3284 * _3110.x) + _3048;
                        _2981 = (_3284 * _3110.y) + _3049;
                        _2982 = (_3284 * _3110.z) + _3050;
                        if (_3055 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3048 = _2980;
                            _3049 = _2981;
                            _3050 = _2982;
                            _3051 = _2983;
                            _3052 = _2984;
                            _3053 = _2985;
                            _3054 = _3055;
                        }
                    }
                    frontier_phi_63_pred = _2982;
                    frontier_phi_63_pred_1 = _2985;
                    frontier_phi_63_pred_2 = _2984;
                    frontier_phi_63_pred_3 = _2983;
                    frontier_phi_63_pred_4 = _2981;
                    frontier_phi_63_pred_5 = _2980;
                }
                _2671 = frontier_phi_63_pred;
                _2677 = frontier_phi_63_pred_1;
                _2675 = frontier_phi_63_pred_2;
                _2673 = frontier_phi_63_pred_3;
                _2669 = frontier_phi_63_pred_4;
                _2667 = frontier_phi_63_pred_5;
                uint _2839 = _2838 + 1u;
                if (_2839 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2832 = _2667;
                    _2833 = _2669;
                    _2834 = _2671;
                    _2835 = _2673;
                    _2836 = _2675;
                    _2837 = _2677;
                    _2838 = _2839;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2666 = _2667;
            _2668 = _2669;
            _2670 = _2671;
            _2672 = _2673;
            _2674 = _2675;
            _2676 = _2677;
        }
        float _2681 = isnan(1.0) ? _824 : (isnan(_824) ? 1.0 : min(_824, 1.0));
        _2632 = (_2681 * _2672) + _2377;
        _2634 = (_2681 * _2674) + _2378;
        _2636 = (_2681 * _2676) + _2379;
        _2638 = ((_2666 * 0.039999999105930328369140625) * _2681) + _2543;
        _2640 = ((_2668 * 0.039999999105930328369140625) * _2681) + _2544;
        _2642 = ((_2670 * 0.039999999105930328369140625) * _2681) + _2545;
    }
    else
    {
        _2632 = _2377;
        _2634 = _2378;
        _2636 = _2379;
        _2638 = _2543;
        _2640 = _2544;
        _2642 = _2545;
    }
    float _2755;
    float _2756;
    float _2757;
    if (_729 > 0.0)
    {
        uint _2688 = _2159 + 4u;
        float _2694 = (-0.0) - _515;
        float _2695 = (-0.0) - _516;
        float _2696 = (-0.0) - _517;
        float _2697 = dot(vec3(cbLight._m0[_2159].xyz), vec3(_2694, _2695, _2696));
        float _4321 = isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : max(_2697, 0.0));
        float _2701 = _835 + 1.0;
        float _2703 = (isnan(0.0) ? _2701 : (isnan(_2701) ? 0.0 : max(_2701, 0.0))) * 0.5;
        float _2708 = _2703 * _2703;
        float _2709 = _2708 * exp2(log2(isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0))) * 32.0);
        float _2711 = _729 / (_729 + 1.0);
        float _2712 = isnan(_2168) ? 1.0 : (isnan(1.0) ? _2168 : min(1.0, _2168));
        uint _2725 = _2159 + 5u;
        float _2731 = dot(vec3(cbLight._m0[_2195].xyz), vec3(_2694, _2695, _2696));
        float _4342 = isnan(0.0) ? _2731 : (isnan(_2731) ? 0.0 : max(_2731, 0.0));
        float _2738 = _2708 * exp2(log2(isnan(1.0) ? _4342 : (isnan(_4342) ? 1.0 : min(_4342, 1.0))) * 32.0);
        float _2739 = isnan(_2169) ? 1.0 : (isnan(1.0) ? _2169 : min(1.0, _2169));
        _2755 = ((((_2738 * cbLight._m0[_2725].x) * _2711) * _2739) + ((((cbLight._m0[_2688].x * _2148) * _2709) * _2711) * _2712)) * 0.3183098733425140380859375;
        _2756 = ((((_2738 * cbLight._m0[_2725].y) * _2711) * _2739) + ((((cbLight._m0[_2688].y * _2150) * _2709) * _2711) * _2712)) * 0.3183098733425140380859375;
        _2757 = ((((_2738 * cbLight._m0[_2725].z) * _2711) * _2739) + ((((cbLight._m0[_2688].z * _2152) * _2709) * _2711) * _2712)) * 0.3183098733425140380859375;
    }
    else
    {
        _2755 = 0.0;
        _2756 = 0.0;
        _2757 = 0.0;
    }
    float _4358 = isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0));
    float _4369 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
    float _4380 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _4391 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
    float _2772 = (isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0))) * ((_2632 + ((isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0))) * _824)) + _2755);
    float _2773 = (isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0))) * ((_2634 + ((isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0))) * _824)) + _2756);
    float _2774 = (isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0))) * ((_2636 + ((isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0))) * _824)) + _2757);
    float _2778 = 0.959999978542327880859375 - (exp2(log2(1.0 - _839) * 5.0) * 0.959999978542327880859375);
    float _2789 = (_2772 + ((_2638 + ((isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0))) * _1667)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _663.x) * _2778) - _2772) * _709);
    float _2791 = (_2773 + ((_2640 + ((isnan(0.0) ? _1883 : (isnan(_1883) ? 0.0 : max(_1883, 0.0))) * _1667)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _663.y) * _2778) - _2773) * _709);
    float _2793 = (_2774 + ((_2642 + ((isnan(0.0) ? _1886 : (isnan(_1886) ? 0.0 : max(_1886, 0.0))) * _1667)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _663.z) * _2778) - _2774) * _709);
    float _2798 = cbInstanceData._m0[_305 + 6u].w * (isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0)));
    float _2803 = _763 / cbSceneParam._m0[86u].x;
    float _2804 = _764 / cbSceneParam._m0[86u].y;
    vec4 _2818 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2803, _2804, (log2((isnan(cbSceneParam._m0[77u].w) ? _746 : (isnan(_746) ? cbSceneParam._m0[77u].w : min(_746, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2820 = _2818.x;
    float _2821 = _2818.y;
    float _2822 = _2818.z;
    float _2823 = _2818.w;
    float _2890;
    float _2892;
    float _2894;
    float _2896;
    if (_746 > cbSceneParam._m0[78u].w)
    {
        float _2853 = isnan(_746) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _746 : min(cbSceneParam._m0[80u].w, _746));
        float _2854 = _2853 / _746;
        float _2865 = _2854 * _297;
        float _2866 = _298 * _2854;
        float _2867 = (-0.0) - _2866;
        float _2868 = _2854 * _299;
        float _2870 = (cbSceneParam._m0[77u].w * _2867) / _2853;
        float _2871 = _2870 + cbSceneParam._m0[79u].w;
        float _2872 = cbSceneParam._m0[79u].w - _2866;
        float _2878 = sqrt(((_2865 * _2865) + (_2866 * _2866)) + (_2868 * _2868));
        float _2881 = (1.0 - (cbSceneParam._m0[77u].w / _2853)) * _2878;
        float _2886 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2888 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3289;
        if (abs((_2867 - _2870) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3289 = ((((_2871 > 0.0) ? exp2(_2886 * _2871) : (2.0 - exp2(_2888 * _2871))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2881;
        }
        else
        {
            float _3005 = 1.0 / cbSceneParam._m0[80u].x;
            float _3006 = isnan(_2872) ? _2871 : (isnan(_2871) ? _2872 : max(_2871, _2872));
            float _3007 = isnan(_2872) ? _2871 : (isnan(_2871) ? _2872 : min(_2871, _2872));
            float _3016 = isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : min(_3006, 0.0));
            float _3017 = isnan(0.0) ? _3007 : (isnan(_3007) ? 0.0 : min(_3007, 0.0));
            _3289 = ((abs(_2878 / _2867) * cbSceneParam._m0[80u].y) * ((((_3016 - _3017) * 2.0) - ((exp2(_2886 * (isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : max(_3006, 0.0)))) - exp2(_2886 * (isnan(0.0) ? _3007 : (isnan(_3007) ? 0.0 : max(_3007, 0.0))))) * _3005)) - ((exp2(_2888 * _3016) - exp2(_2888 * _3017)) * _3005))) + (_2881 * cbSceneParam._m0[80u].z);
        }
        vec4 _3291 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2803, _2804, 1.0), 0.0);
        float _3300 = exp2((_3289 * (-1.44269502162933349609375)) * (1.0 - _3291.w));
        float _3301 = log2(_3300);
        float _3317 = log2(_2823);
        _2890 = (exp2(_3317 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3301 * cbSceneParam._m0[78u].x)) * _3291.x) / cbSceneParam._m0[78u].x)) + _2820;
        _2892 = (exp2(_3317 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3301 * cbSceneParam._m0[78u].y)) * _3291.y) / cbSceneParam._m0[78u].y)) + _2821;
        _2894 = (exp2(_3317 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3301 * cbSceneParam._m0[78u].z)) * _3291.z) / cbSceneParam._m0[78u].z)) + _2822;
        _2896 = _3300 * _2823;
    }
    else
    {
        _2890 = _2820;
        _2892 = _2821;
        _2894 = _2822;
        _2896 = _2823;
    }
    bool _3327;
    float _2951;
    vec4 _2954;
    float _2956;
    vec4 _2958;
    float _2966;
    float _2967;
    float _2968;
    float _2969;
    bool _2979;
    for (;;)
    {
        bool _2908 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2909 = log2(_2896);
        float _2916 = exp2(_2909 * cbSceneParam._m0[78u].x) * _2789;
        float _2917 = exp2(_2909 * cbSceneParam._m0[78u].y) * _2791;
        float _2918 = exp2(_2909 * cbSceneParam._m0[78u].z) * _2793;
        vec4 _2926 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_763, _764));
        float _2928 = _2926.x;
        float _2949 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2928)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2928))) - _746) * cbMtdParam._m0[17u].y;
        float _4442 = isnan(0.0) ? _2949 : (isnan(_2949) ? 0.0 : max(_2949, 0.0));
        _2951 = _2798 * (isnan(1.0) ? _4442 : (isnan(_4442) ? 1.0 : min(_4442, 1.0)));
        float _2952 = _753 + (-0.5);
        _2954 = cbMtdParam._m0[1u];
        _2956 = _2954.y * _2952;
        _2958 = cbMatDynParam._m0[0u];
        float _2965 = (roundEven(_2958.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2966 = _2965 * (_2908 ? _2916 : (_2916 + (cbSceneParam._m0[72u].w * _2890)));
        _2967 = _2965 * (_2908 ? _2917 : (_2917 + (cbSceneParam._m0[72u].w * _2892)));
        _2968 = _2965 * (_2908 ? _2918 : (_2918 + (cbSceneParam._m0[72u].w * _2894)));
        _2969 = _2952 * 0.999000012874603271484375;
        _2979 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2979)
        {
            if ((cbInstanceData._m0[_305 + 7u].x + _2969) < 0.5)
            {
                _3327 = true;
                break;
            }
        }
        uint _3040 = _801 + uint(_2958.w);
        if ((cbInstanceData._m0[_3040].w < 1.0) && ((cbInstanceData._m0[_3040].w + _2969) < 0.5))
        {
            _3327 = true;
            break;
        }
        if ((_2956 + _425) < _2954.x)
        {
            _3327 = true;
            break;
        }
        _3327 = false;
        break;
    }
    float _3332;
    if (_3327)
    {
        discard_state = true;
        _3332 = 0.0;
    }
    else
    {
        _3332 = _2951;
    }
    SV_Target.x = _2966;
    SV_Target.y = _2967;
    SV_Target.z = _2968;
    SV_Target.w = _3332;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2951;
    discard_exit();
}


