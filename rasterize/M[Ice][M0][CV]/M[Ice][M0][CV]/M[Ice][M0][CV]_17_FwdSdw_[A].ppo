#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1267;
float _3493;
float _3494;
float _3495;
float _3496;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _214 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _215 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _216 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _222 = inversesqrt(dot(vec3(_214, _215, _216), vec3(_214, _215, _216)));
    float _223 = _222 * _214;
    float _224 = _222 * _215;
    float _225 = _222 * _216;
    float _229 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _230 = _229 * NORMAL.x;
    float _231 = _229 * NORMAL.y;
    float _232 = _229 * NORMAL.z;
    float _236 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _237 = _236 * TANGENT.x;
    float _238 = _236 * TANGENT.y;
    float _239 = _236 * TANGENT.z;
    float _244;
    float _245;
    float _246;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _244 = (-0.0) - _230;
        _245 = (-0.0) - _231;
        _246 = (-0.0) - _232;
    }
    else
    {
        _244 = _230;
        _245 = _231;
        _246 = _232;
    }
    float _293 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _303 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _293);
    float _304 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _293);
    float _305 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _293);
    uint _311 = uint(roundEven(NORMAL.w)) * 13u;
    uint _316 = _311 + 1u;
    uint _320 = _311 + 2u;
    float _329 = sqrt(((cbInstanceData._m0[_316].x * cbInstanceData._m0[_316].x) + (cbInstanceData._m0[_311].x * cbInstanceData._m0[_311].x)) + (cbInstanceData._m0[_320].x * cbInstanceData._m0[_320].x));
    float _330 = _329 * TEXCOORD.z;
    float _331 = _329 * TEXCOORD.w;
    vec4 _351 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _360 = (_351.x * 2.0) + (-1.0);
    float _362 = (_351.y * 2.0) + (-1.0);
    float _363 = dot(vec2(_360, _362), vec2(_360, _362));
    float _3505 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _369 = sqrt(1.0 - (isnan(1.0) ? _3505 : (isnan(_3505) ? 1.0 : min(_3505, 1.0))));
    float _372 = fma(_369, _244, fma(_362, _237, _360 * _223));
    float _375 = fma(_369, _245, fma(_362, _238, _360 * _224));
    float _378 = fma(_369, _246, fma(_362, _239, _360 * _225));
    float _382 = inversesqrt(dot(vec3(_372, _375, _378), vec3(_372, _375, _378)));
    float _383 = _382 * _372;
    float _384 = _382 * _375;
    float _413 = (cbMtdParam._m0[17u].w + dot(vec4(_383, _384, _382 * _378, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _330) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _331) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3516 = isnan(0.0) ? _413 : (isnan(_413) ? 0.0 : max(_413, 0.0));
    float _414 = isnan(1.0) ? _3516 : (isnan(_3516) ? 1.0 : min(_3516, 1.0));
    vec4 _426 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _431 = _426.w;
    float _443 = dot(vec3(_303, _304, _305), vec3(_223, _224, _225));
    float _446 = dot(vec3(_303, _304, _305), vec3(_237, _238, _239));
    float _449 = dot(vec3(_303, _304, _305), vec3(_244, _245, _246));
    float _455 = inversesqrt(dot(vec3(_443, _446, _449), vec3(_443, _446, _449)));
    float _477 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _497 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_443 * cbMtdParam._m0[14u].x) * _455) * _477) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_446 * cbMtdParam._m0[14u].x) * _455) * _477) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _520 = inversesqrt(dot(vec3(_303, _304, _305), vec3(_303, _304, _305)));
    float _521 = _520 * _303;
    float _522 = _520 * _304;
    float _523 = _520 * _305;
    float _524 = dot(vec4(_521, _522, _523, 0.0), vec4(_244, _245, _246, 0.0));
    float _527 = _524 - cbMtdParam._m0[15u].z;
    float _3527 = isnan(0.0) ? _527 : (isnan(_527) ? 0.0 : max(_527, 0.0));
    float _534 = exp2(log2(1.0 - (isnan(1.0) ? _3527 : (isnan(_3527) ? 1.0 : min(_3527, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _549 = ((((_426.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _497.x) * cbMtdParam._m0[9u].x) * ((_534 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _554 = ((((_426.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _497.y) * cbMtdParam._m0[9u].y) * ((_534 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _559 = ((((_426.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _497.z) * cbMtdParam._m0[9u].z) * ((_534 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _566 = ((cbMtdParam._m0[11u].x - _549) * _414) + _549;
    float _567 = ((cbMtdParam._m0[11u].y - _554) * _414) + _554;
    float _568 = ((cbMtdParam._m0[11u].z - _559) * _414) + _559;
    vec4 _580 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _330) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _331) + cbTextureTilingScale._m0[9u].w));
    float _587 = (_580.x * 2.0) + (-1.0);
    float _588 = (_580.y * 2.0) + (-1.0);
    float _589 = dot(vec2(_587, _588), vec2(_587, _588));
    float _3543 = isnan(0.0) ? _589 : (isnan(_589) ? 0.0 : max(_589, 0.0));
    vec4 _610 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _620 = cbMtdParam._m0[17u].z + _351.z;
    float _626 = (_620 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_610.z - _620));
    float _629 = ((_580.z - _626) * _414) + _626;
    float _635 = ((((_610.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _360;
    float _636 = ((((_610.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _362;
    float _644 = ((sqrt(1.0 - (isnan(1.0) ? _3543 : (isnan(_3543) ? 1.0 : min(_3543, 1.0)))) - _369) * _414) + _369;
    float _648 = ((_635 * cbMtdParam._m0[14u].z) + _635) + ((_587 - _635) * _414);
    float _650 = ((_636 * cbMtdParam._m0[14u].z) + _636) + ((_588 - _636) * _414);
    vec4 _662 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _666 = cbMtdParam._m0[16u].w * _662.x;
    float _668 = _666 - (_666 * _414);
    float _688 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _383));
    float _689 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _384));
    float _696 = isnan(cbInstanceData._m0[8u].x) ? _688 : (isnan(_688) ? cbInstanceData._m0[8u].x : max(_688, cbInstanceData._m0[8u].x));
    float _697 = isnan(cbInstanceData._m0[8u].y) ? _689 : (isnan(_689) ? cbInstanceData._m0[8u].y : max(_689, cbInstanceData._m0[8u].y));
    vec4 _701 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _696 : (isnan(_696) ? cbInstanceData._m0[8u].z : min(_696, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _697 : (isnan(_697) ? cbInstanceData._m0[8u].w : min(_697, cbInstanceData._m0[8u].w))));
    float _734 = _524 - cbMtdParam._m0[15u].x;
    float _3574 = isnan(0.0) ? _734 : (isnan(_734) ? 0.0 : max(_734, 0.0));
    float _744 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3574 : (isnan(_3574) ? 1.0 : min(_3574, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3590 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _745 = isnan(1.0) ? _3590 : (isnan(_3590) ? 1.0 : min(_3590, 1.0));
    float _747 = _745 - (_745 * _414);
    float _751 = fma(_644, _244, fma(_650, _237, _648 * _223));
    float _754 = fma(_644, _245, fma(_650, _238, _648 * _224));
    float _757 = fma(_644, _246, fma(_650, _239, _648 * _225));
    float _761 = inversesqrt(dot(vec3(_751, _754, _757), vec3(_751, _754, _757)));
    float _762 = _761 * _751;
    float _763 = _761 * _754;
    float _764 = _761 * _757;
    float _3601 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
    float _765 = isnan(1.0) ? _3601 : (isnan(_3601) ? 1.0 : min(_3601, 1.0));
    float _3612 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _766 = isnan(1.0) ? _3612 : (isnan(_3612) ? 1.0 : min(_3612, 1.0));
    float _767 = isnan(0.0) ? _668 : (isnan(_668) ? 0.0 : max(_668, 0.0));
    float _3628 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _3639 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _3650 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _784 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _789 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _791 = _789.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _946 = sqrt(((_303 * _303) + (_304 * _304)) + (_305 * _305));
        float _952 = (cbMatDynParam._m0[5u].x * _946) + cbMatDynParam._m0[5u].y;
        float _3661 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
        float _953 = isnan(1.0) ? _3661 : (isnan(_3661) ? 1.0 : min(_3661, 1.0));
        float _957 = (cbMatDynParam._m0[5u].z * _946) + cbMatDynParam._m0[5u].w;
        float _3672 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3672 : (isnan(_3672) ? 1.0 : min(_3672, 1.0))) - _953)) + _953) < ((_791 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _801 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _802 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _820 = fma(_764, cbSceneParam._m0[5u].z, fma(_763, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _762));
    float _823 = fma(_764, cbSceneParam._m0[6u].z, fma(_763, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _762));
    float _826 = fma(_764, cbSceneParam._m0[7u].z, fma(_763, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _762));
    uint _839 = _311 + 9u;
    uint _840 = _839 + uint(cbMatDynParam._m0[0u].w);
    float _846 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3628 : (isnan(_3628) ? 1.0 : min(_3628, 1.0)))) * cbInstanceData._m0[_840].x;
    float _847 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3639 : (isnan(_3639) ? 1.0 : min(_3639, 1.0)))) * cbInstanceData._m0[_840].y;
    float _848 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3650 : (isnan(_3650) ? 1.0 : min(_3650, 1.0)))) * cbInstanceData._m0[_840].z;
    float _3683 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _849 = isnan(1.0) ? _3683 : (isnan(_3683) ? 1.0 : min(_3683, 1.0));
    float _3694 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _850 = isnan(1.0) ? _3694 : (isnan(_3694) ? 1.0 : min(_3694, 1.0));
    float _3705 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _851 = isnan(1.0) ? _3705 : (isnan(_3705) ? 1.0 : min(_3705, 1.0));
    vec4 _859 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _801, cbSceneParam._m0[86u].y * _802));
    float _862 = _859.x * TEXCOORD_5.w;
    float _863 = dot(vec3(_762, _763, _764), vec3(_521, _522, _523));
    float _866 = _863 * 2.0;
    float _870 = (_866 * _762) - _521;
    float _871 = (_866 * _763) - _522;
    float _872 = (_866 * _764) - _523;
    float _873 = dot(vec3(_521, _522, _523), vec3(_762, _763, _764));
    float _876 = abs(_873);
    float _3716 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _877 = isnan(1.0) ? _3716 : (isnan(_3716) ? 1.0 : min(_3716, 1.0));
    float _883 = sqrt(_766);
    float _895 = exp2((_883 * 5.0) * log2(1.0 - (_877 * 0.999000012874603271484375))) / (4.0 - (_883 * 3.0));
    float _927 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _931 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _935 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1266;
    float _1268;
    float _1269;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    float _1280;
    float _1281;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _991 = fma(_935, cbModelParam._m0[26u].z, fma(_931, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _927));
        float _995 = fma(_935, cbModelParam._m0[27u].z, fma(_931, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _927));
        float _999 = fma(_935, cbModelParam._m0[28u].z, fma(_931, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _927));
        float _1024 = _927 + _762;
        float _1025 = _931 + _763;
        float _1026 = _935 + _764;
        float _1036 = fma(_1026, cbModelParam._m0[26u].z, fma(_1025, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1024)) - _991;
        float _1037 = fma(_1026, cbModelParam._m0[27u].z, fma(_1025, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1024)) - _995;
        float _1038 = fma(_1026, cbModelParam._m0[28u].z, fma(_1025, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1024)) - _999;
        float _1042 = inversesqrt(dot(vec3(_1036, _1037, _1038), vec3(_1036, _1037, _1038)));
        float _1055 = ((_1042 * _1036) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_991 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1056 = ((_1042 * _1037) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_995 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1057 = ((_1042 * _1038) / cbModelParam._m0[34u].z) + ((((((_999 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1060 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1055, _1056, _1057), 0.0);
        vec4 _1067 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1055, _1056, _1057), 0.0);
        vec4 _1074 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1055, _1056, _1057), 0.0);
        vec4 _1081 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1055, _1056, _1057), 0.0);
        float _1094 = exp2((_1060.w + (-0.5)) * 20.0) * 2.0;
        float _1095 = _1094 * (_1060.x + (-0.5));
        float _1096 = _1094 * (_1060.y + (-0.5));
        float _1097 = _1094 * (_1060.z + (-0.5));
        float _1104 = exp2((_1067.w + (-0.5)) * 20.0) * 2.0;
        float _1105 = _1104 * (_1067.x + (-0.5));
        float _1106 = _1104 * (_1067.y + (-0.5));
        float _1107 = _1104 * (_1067.z + (-0.5));
        float _1114 = exp2((_1074.w + (-0.5)) * 20.0) * 2.0;
        float _1115 = _1114 * (_1074.x + (-0.5));
        float _1116 = _1114 * (_1074.y + (-0.5));
        float _1117 = _1114 * (_1074.z + (-0.5));
        float _1124 = exp2((_1081.w + (-0.5)) * 20.0) * 2.0;
        float _1125 = _1124 * (_1081.x + (-0.5));
        float _1126 = _1124 * (_1081.y + (-0.5));
        float _1127 = _1124 * (_1081.z + (-0.5));
        float _1128 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
        float _1129 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1130 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        float _1131 = _1095 * 0.5;
        float _1132 = _1105 * 0.5;
        float _1133 = _1115 * 0.5;
        float _1134 = dot(vec3(_1131, _1132, _1133), vec3(_1131, _1132, _1133));
        float _1139 = (_1134 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1134);
        float _1148 = (dot(vec3(_762, _763, _764), vec3(_1139 * _1131, _1139 * _1132, _1139 * _1133)) + 1.0) * 0.5;
        float _3742 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1158 = sqrt(((_1132 * _1132) + (_1131 * _1131)) + (_1133 * _1133)) / (_1128 + 9.9999997473787516355514526367188e-06);
        float _3753 = isnan(0.0) ? _1158 : (isnan(_1158) ? 0.0 : max(_1158, 0.0));
        float _1159 = isnan(1.0) ? _3753 : (isnan(_3753) ? 1.0 : min(_3753, 1.0));
        float _1160 = _1159 * 2.0;
        float _1164 = (1.0 - _1159) / (_1159 + 1.0);
        float _3764 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1165 = isnan(1.0) ? _3764 : (isnan(_3764) ? 1.0 : min(_3764, 1.0));
        float _1174 = ((((1.0 - _1165) * (_1160 + 2.0)) * exp2(log2(isnan(1.0) ? _3742 : (isnan(_3742) ? 1.0 : min(_3742, 1.0))) * (_1160 + 1.0))) + _1165) * _1128;
        float _1175 = _1096 * 0.5;
        float _1176 = _1106 * 0.5;
        float _1177 = _1116 * 0.5;
        float _1178 = dot(vec3(_1175, _1176, _1177), vec3(_1175, _1176, _1177));
        float _1183 = (_1178 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1178);
        float _1191 = (dot(vec3(_762, _763, _764), vec3(_1183 * _1175, _1183 * _1176, _1183 * _1177)) + 1.0) * 0.5;
        float _3775 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
        float _1200 = sqrt(((_1176 * _1176) + (_1175 * _1175)) + (_1177 * _1177)) / (_1129 + 9.9999997473787516355514526367188e-06);
        float _3786 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
        float _1201 = isnan(1.0) ? _3786 : (isnan(_3786) ? 1.0 : min(_3786, 1.0));
        float _1202 = _1201 * 2.0;
        float _1206 = (1.0 - _1201) / (_1201 + 1.0);
        float _3797 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
        float _1207 = isnan(1.0) ? _3797 : (isnan(_3797) ? 1.0 : min(_3797, 1.0));
        float _1216 = ((((1.0 - _1207) * (_1202 + 2.0)) * exp2(log2(isnan(1.0) ? _3775 : (isnan(_3775) ? 1.0 : min(_3775, 1.0))) * (_1202 + 1.0))) + _1207) * _1129;
        float _1217 = _1097 * 0.5;
        float _1218 = _1107 * 0.5;
        float _1219 = _1117 * 0.5;
        float _1220 = dot(vec3(_1217, _1218, _1219), vec3(_1217, _1218, _1219));
        float _1225 = (_1220 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1220);
        float _1233 = (dot(vec3(_762, _763, _764), vec3(_1225 * _1217, _1225 * _1218, _1225 * _1219)) + 1.0) * 0.5;
        float _3808 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
        float _1242 = sqrt(((_1218 * _1218) + (_1217 * _1217)) + (_1219 * _1219)) / (_1130 + 9.9999997473787516355514526367188e-06);
        float _3819 = isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0));
        float _1243 = isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0));
        float _1244 = _1243 * 2.0;
        float _1248 = (1.0 - _1243) / (_1243 + 1.0);
        float _3830 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
        float _1249 = isnan(1.0) ? _3830 : (isnan(_3830) ? 1.0 : min(_3830, 1.0));
        float _1258 = ((((1.0 - _1249) * (_1244 + 2.0)) * exp2(log2(isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0))) * (_1244 + 1.0))) + _1249) * _1130;
        _1266 = _1097;
        _1268 = _1096;
        _1269 = _1095;
        _1270 = _1107;
        _1271 = _1106;
        _1272 = _1105;
        _1273 = _1117;
        _1274 = _1116;
        _1275 = _1115;
        _1276 = _1130;
        _1277 = _1129;
        _1278 = _1128;
        _1279 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0)));
        _1280 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0)));
        _1281 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0)));
    }
    else
    {
        _1266 = _1267;
        _1268 = _1267;
        _1269 = _1267;
        _1270 = _1267;
        _1271 = _1267;
        _1272 = _1267;
        _1273 = _1267;
        _1274 = _1267;
        _1275 = _1267;
        _1276 = _1267;
        _1277 = _1267;
        _1278 = _1267;
        _1279 = 0.0;
        _1280 = 0.0;
        _1281 = 0.0;
    }
    float _1579;
    float _1580;
    float _1581;
    float _1582;
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1310 = fma(_935, cbModelParam._m0[30u].z, fma(_931, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _927));
        float _1314 = fma(_935, cbModelParam._m0[31u].z, fma(_931, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _927));
        float _1318 = fma(_935, cbModelParam._m0[32u].z, fma(_931, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _927));
        float _1341 = _927 + _762;
        float _1342 = _931 + _763;
        float _1343 = _935 + _764;
        float _1353 = fma(_1343, cbModelParam._m0[30u].z, fma(_1342, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1341)) - _1310;
        float _1354 = fma(_1343, cbModelParam._m0[31u].z, fma(_1342, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1341)) - _1314;
        float _1355 = fma(_1343, cbModelParam._m0[32u].z, fma(_1342, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1341)) - _1318;
        float _1359 = inversesqrt(dot(vec3(_1353, _1354, _1355), vec3(_1353, _1354, _1355)));
        float _1372 = ((_1359 * _1353) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1310 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1373 = ((_1359 * _1354) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1314 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1374 = ((_1359 * _1355) / cbModelParam._m0[35u].z) + ((((((_1318 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1376 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1372, _1373, _1374), 0.0);
        vec4 _1383 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1372, _1373, _1374), 0.0);
        vec4 _1390 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1372, _1373, _1374), 0.0);
        vec4 _1397 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1372, _1373, _1374), 0.0);
        float _1409 = exp2((_1376.w + (-0.5)) * 20.0) * 2.0;
        float _1410 = _1409 * (_1376.x + (-0.5));
        float _1411 = _1409 * (_1376.y + (-0.5));
        float _1412 = _1409 * (_1376.z + (-0.5));
        float _1419 = exp2((_1383.w + (-0.5)) * 20.0) * 2.0;
        float _1420 = _1419 * (_1383.x + (-0.5));
        float _1421 = _1419 * (_1383.y + (-0.5));
        float _1422 = _1419 * (_1383.z + (-0.5));
        float _1429 = exp2((_1390.w + (-0.5)) * 20.0) * 2.0;
        float _1430 = _1429 * (_1390.x + (-0.5));
        float _1431 = _1429 * (_1390.y + (-0.5));
        float _1432 = _1429 * (_1390.z + (-0.5));
        float _1439 = exp2((_1397.w + (-0.5)) * 20.0) * 2.0;
        float _1440 = _1439 * (_1397.x + (-0.5));
        float _1441 = _1439 * (_1397.y + (-0.5));
        float _1442 = _1439 * (_1397.z + (-0.5));
        float _1443 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1444 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1445 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1446 = _1410 * 0.5;
        float _1447 = _1420 * 0.5;
        float _1448 = _1430 * 0.5;
        float _1449 = dot(vec3(_1446, _1447, _1448), vec3(_1446, _1447, _1448));
        float _1454 = (_1449 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1449);
        float _1462 = (dot(vec3(_762, _763, _764), vec3(_1454 * _1446, _1454 * _1447, _1454 * _1448)) + 1.0) * 0.5;
        float _3871 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
        float _1471 = sqrt(((_1447 * _1447) + (_1446 * _1446)) + (_1448 * _1448)) / (_1443 + 9.9999997473787516355514526367188e-06);
        float _3882 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
        float _1472 = isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0));
        float _1473 = _1472 * 2.0;
        float _1477 = (1.0 - _1472) / (_1472 + 1.0);
        float _3893 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1478 = isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0));
        float _1487 = ((((1.0 - _1478) * (_1473 + 2.0)) * exp2(log2(isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0))) * (_1473 + 1.0))) + _1478) * _1443;
        float _1488 = _1411 * 0.5;
        float _1489 = _1421 * 0.5;
        float _1490 = _1431 * 0.5;
        float _1491 = dot(vec3(_1488, _1489, _1490), vec3(_1488, _1489, _1490));
        float _1496 = (_1491 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1491);
        float _1504 = (dot(vec3(_762, _763, _764), vec3(_1496 * _1488, _1496 * _1489, _1496 * _1490)) + 1.0) * 0.5;
        float _3904 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
        float _1513 = sqrt(((_1489 * _1489) + (_1488 * _1488)) + (_1490 * _1490)) / (_1444 + 9.9999997473787516355514526367188e-06);
        float _3915 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
        float _1514 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
        float _1515 = _1514 * 2.0;
        float _1519 = (1.0 - _1514) / (_1514 + 1.0);
        float _3926 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
        float _1520 = isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0));
        float _1529 = ((((1.0 - _1520) * (_1515 + 2.0)) * exp2(log2(isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0))) * (_1515 + 1.0))) + _1520) * _1444;
        float _1530 = _1412 * 0.5;
        float _1531 = _1422 * 0.5;
        float _1532 = _1432 * 0.5;
        float _1533 = dot(vec3(_1530, _1531, _1532), vec3(_1530, _1531, _1532));
        float _1538 = (_1533 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1533);
        float _1546 = (dot(vec3(_762, _763, _764), vec3(_1538 * _1530, _1538 * _1531, _1538 * _1532)) + 1.0) * 0.5;
        float _3937 = isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0));
        float _1555 = sqrt(((_1531 * _1531) + (_1530 * _1530)) + (_1532 * _1532)) / (_1445 + 9.9999997473787516355514526367188e-06);
        float _3948 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
        float _1556 = isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0));
        float _1557 = _1556 * 2.0;
        float _1561 = (1.0 - _1556) / (_1556 + 1.0);
        float _3959 = isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0));
        float _1562 = isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0));
        float _1571 = ((((1.0 - _1562) * (_1557 + 2.0)) * exp2(log2(isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0))) * (_1557 + 1.0))) + _1562) * _1445;
        _1579 = _1412;
        _1580 = _1411;
        _1581 = _1410;
        _1582 = _1422;
        _1583 = _1421;
        _1584 = _1420;
        _1585 = _1432;
        _1586 = _1431;
        _1587 = _1430;
        _1588 = _1445;
        _1589 = _1444;
        _1590 = _1443;
        _1591 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0)));
        _1592 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0)));
        _1593 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0)));
    }
    else
    {
        _1579 = _1267;
        _1580 = _1267;
        _1581 = _1267;
        _1582 = _1267;
        _1583 = _1267;
        _1584 = _1267;
        _1585 = _1267;
        _1586 = _1267;
        _1587 = _1267;
        _1588 = _1267;
        _1589 = _1267;
        _1590 = _1267;
        _1591 = 0.0;
        _1592 = 0.0;
        _1593 = 0.0;
    }
    float _1603 = (cbModelParam._m0[1u].x * (_1591 - _1279)) + _1279;
    float _1604 = (cbModelParam._m0[1u].x * (_1592 - _1280)) + _1280;
    float _1605 = (cbModelParam._m0[1u].x * (_1593 - _1281)) + _1281;
    float _1626 = fma(_1605, cbSceneParam._m0[89u].z, fma(_1604, cbSceneParam._m0[89u].y, _1603 * cbSceneParam._m0[89u].x));
    float _1629 = fma(_1605, cbSceneParam._m0[90u].z, fma(_1604, cbSceneParam._m0[90u].y, _1603 * cbSceneParam._m0[90u].x));
    float _1632 = fma(_1605, cbSceneParam._m0[91u].z, fma(_1604, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1603));
    float _1647 = _870 * 0.5;
    float _1648 = _871 * 0.5;
    float _1649 = _872 * 0.5;
    float _1650 = dot(vec4(_1647, _1648, _1649, 1.0), vec4(_1581, _1584, _1587, _1590));
    float _1653 = dot(vec4(_1647, _1648, _1649, 1.0), vec4(_1580, _1583, _1586, _1589));
    float _1656 = dot(vec4(_1647, _1648, _1649, 1.0), vec4(_1579, _1582, _1585, _1588));
    float _1690;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1663 = dot(vec4(_1647, _1648, _1649, 1.0), vec4(_1266, _1270, _1273, _1276));
        float _1667 = dot(vec4(_1647, _1648, _1649, 1.0), vec4(_1268, _1271, _1274, _1277));
        float _1671 = dot(vec4(_1647, _1648, _1649, 1.0), vec4(_1269, _1272, _1275, _1278));
        float _1678 = dot(vec4(cbModelParam._m0[39u]), vec4(_1647, _1648, _1649, 1.0));
        _1690 = dot(vec3(isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0)), isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0)), isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1678) ? 0.0 : (isnan(0.0) ? _1678 : max(0.0, _1678))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1690 = 1.0;
    }
    float _1701;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1692 = dot(vec4(cbModelParam._m0[40u]), vec4(_1647, _1648, _1649, 1.0));
        _1701 = dot(vec3(isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0)), isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0)), isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1692) ? 0.0 : (isnan(0.0) ? _1692 : max(0.0, _1692))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1701 = 1.0;
    }
    float _1705 = (_1701 * cbModelParam._m0[1u].x) + (_1690 * (1.0 - cbModelParam._m0[1u].x));
    float _1715 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _766);
    float _1716 = isnan(_1715) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1715 : min(cbModelParam._m0[25u].z, _1715));
    float _1796;
    float _1798;
    float _1800;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1763 = fma(_935, cbModelParam._m0[13u].z, fma(_931, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _927)) + cbModelParam._m0[13u].w;
        float _1767 = fma(_935, cbModelParam._m0[14u].z, fma(_931, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _927)) + cbModelParam._m0[14u].w;
        float _1771 = fma(_935, cbModelParam._m0[15u].z, fma(_931, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _927)) + cbModelParam._m0[15u].w;
        float _1774 = fma(_872, cbModelParam._m0[13u].z, fma(_871, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _870));
        float _1777 = fma(_872, cbModelParam._m0[14u].z, fma(_871, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _870));
        float _1780 = fma(_872, cbModelParam._m0[15u].z, fma(_871, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _870));
        float _1808;
        if (_1774 > 0.0)
        {
            _1808 = abs((1.0 - _1763) / _1774);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1774 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1763 + 1.0) / _1774);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1808 = frontier_phi_19_17_ladder;
        }
        float _1979;
        if (_1777 > 0.0)
        {
            _1979 = abs((1.0 - _1767) / _1777);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1777 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1767 + 1.0) / _1777);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1979 = frontier_phi_28_24_ladder;
        }
        float _2243;
        if (_1780 > 0.0)
        {
            _2243 = abs((1.0 - _1771) / _1780);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1780 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1771 + 1.0) / _1780);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2243 = frontier_phi_40_35_ladder;
        }
        float _2245 = isnan(_1979) ? _1808 : (isnan(_1808) ? _1979 : min(_1808, _1979));
        float _2246 = isnan(_2243) ? _2245 : (isnan(_2245) ? _2243 : min(_2245, _2243));
        float _2250 = (_2246 * _1774) + _1763;
        float _2251 = (_2246 * _1777) + _1767;
        float _2252 = (_2246 * _1780) + _1771;
        float _2253 = _2246 * 9.9999997473787516355514526367188e-05;
        float _2255 = (-1.0) - _2253;
        float _2257 = _2253 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2252 > _2257) || ((_2252 < _2255) || ((_2251 > _2257) || ((_2251 < _2255) || ((_2250 < _2255) || (_2250 > _2257))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2406 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2252, cbModelParam._m0[9u].z, fma(_2251, cbModelParam._m0[9u].y, _2250 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2252, cbModelParam._m0[10u].z, fma(_2251, cbModelParam._m0[10u].y, _2250 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2252, cbModelParam._m0[11u].z, fma(_2251, cbModelParam._m0[11u].y, _2250 * cbModelParam._m0[11u].x))), _1716);
            frontier_phi_18_40_ladder = _2406.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2406.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2406.x * cbModelParam._m0[1u].y;
        }
        _1796 = frontier_phi_18_40_ladder_2;
        _1798 = frontier_phi_18_40_ladder_1;
        _1800 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1784 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_870, _871, _872), _1716);
        _1796 = _1784.x * cbModelParam._m0[1u].y;
        _1798 = _1784.y * cbModelParam._m0[1u].y;
        _1800 = _1784.z * cbModelParam._m0[1u].y;
    }
    float _1804 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _766);
    float _1805 = isnan(_1804) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1804 : min(cbModelParam._m0[25u].w, _1804));
    float _1896;
    float _1898;
    float _1900;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1860 = fma(_935, cbModelParam._m0[21u].z, fma(_931, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _927)) + cbModelParam._m0[21u].w;
        float _1864 = fma(_935, cbModelParam._m0[22u].z, fma(_931, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _927)) + cbModelParam._m0[22u].w;
        float _1868 = fma(_935, cbModelParam._m0[23u].z, fma(_931, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _927)) + cbModelParam._m0[23u].w;
        float _1871 = fma(_872, cbModelParam._m0[21u].z, fma(_871, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _870));
        float _1874 = fma(_872, cbModelParam._m0[22u].z, fma(_871, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _870));
        float _1877 = fma(_872, cbModelParam._m0[23u].z, fma(_871, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _870));
        float _1984;
        if (_1871 > 0.0)
        {
            _1984 = abs((1.0 - _1860) / _1871);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1871 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1860 + 1.0) / _1871);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1984 = frontier_phi_30_26_ladder;
        }
        float _2270;
        if (_1874 > 0.0)
        {
            _2270 = abs((1.0 - _1864) / _1874);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1874 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1864 + 1.0) / _1874);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2270 = frontier_phi_42_37_ladder;
        }
        float _2589;
        if (_1877 > 0.0)
        {
            _2589 = abs((1.0 - _1868) / _1877);
        }
        else
        {
            float frontier_phi_51_49_ladder;
            if (_1877 < 0.0)
            {
                frontier_phi_51_49_ladder = abs((_1868 + 1.0) / _1877);
            }
            else
            {
                frontier_phi_51_49_ladder = 5000.0;
            }
            _2589 = frontier_phi_51_49_ladder;
        }
        float _2591 = isnan(_2270) ? _1984 : (isnan(_1984) ? _2270 : min(_1984, _2270));
        float _2592 = isnan(_2589) ? _2591 : (isnan(_2591) ? _2589 : min(_2591, _2589));
        float _2596 = (_2592 * _1871) + _1860;
        float _2597 = (_2592 * _1874) + _1864;
        float _2598 = (_2592 * _1877) + _1868;
        float _2599 = _2592 * 9.9999997473787516355514526367188e-05;
        float _2600 = (-1.0) - _2599;
        float _2602 = _2599 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_2598 > _2602) || ((_2598 < _2600) || ((_2597 > _2602) || ((_2597 < _2600) || ((_2596 < _2600) || (_2596 > _2602))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2699 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2598, cbModelParam._m0[17u].z, fma(_2597, cbModelParam._m0[17u].y, _2596 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2598, cbModelParam._m0[18u].z, fma(_2597, cbModelParam._m0[18u].y, _2596 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2598, cbModelParam._m0[19u].z, fma(_2597, cbModelParam._m0[19u].y, _2596 * cbModelParam._m0[19u].x))), _1805);
            frontier_phi_27_51_ladder = _2699.x * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _2699.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _2699.y * cbModelParam._m0[1u].z;
        }
        _1896 = frontier_phi_27_51_ladder;
        _1898 = frontier_phi_27_51_ladder_2;
        _1900 = frontier_phi_27_51_ladder_1;
    }
    else
    {
        vec4 _1880 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_870, _871, _872), _1805);
        _1896 = _1880.x * cbModelParam._m0[1u].z;
        _1898 = _1880.y * cbModelParam._m0[1u].z;
        _1900 = _1880.z * cbModelParam._m0[1u].z;
    }
    float _1912 = ((((1.0 - _895) * ((_883 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_895 * _883)) * _862;
    float _1913 = _1912 * ((cbModelParam._m0[1u].w * (_1896 - _1796)) + _1796);
    float _1914 = _1912 * ((cbModelParam._m0[1u].w * (_1898 - _1798)) + _1798);
    float _1915 = _1912 * ((cbModelParam._m0[1u].w * (_1900 - _1800)) + _1800);
    float _1918 = fma(_1915, cbSceneParam._m0[89u].z, fma(_1914, cbSceneParam._m0[89u].y, _1913 * cbSceneParam._m0[89u].x));
    float _1921 = fma(_1915, cbSceneParam._m0[90u].z, fma(_1914, cbSceneParam._m0[90u].y, _1913 * cbSceneParam._m0[90u].x));
    float _1924 = fma(_1915, cbSceneParam._m0[91u].z, fma(_1914, cbSceneParam._m0[91u].y, _1913 * cbSceneParam._m0[91u].x));
    float _1958 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1962 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1966 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1970 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1971 = _1958 / _1970;
    float _1972 = _1962 / _1970;
    float _1973 = _1966 / _1970;
    float _2120;
    float _2121;
    float _2122;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2000 = ((uint(_1973 > cbSceneParam._m0[59u].y) + uint(_1973 > cbSceneParam._m0[59u].x)) + uint(_1973 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2001 = _2000 + 43u;
        uint _2009 = _2000 + 44u;
        uint _2017 = _2000 + 45u;
        uint _2025 = _2000 + 46u;
        float _2036 = fma(_1970, cbSceneParam._m0[_2001].w, fma(_1966, cbSceneParam._m0[_2001].z, fma(_1962, cbSceneParam._m0[_2001].y, _1958 * cbSceneParam._m0[_2001].x)));
        float _2040 = fma(_1970, cbSceneParam._m0[_2009].w, fma(_1966, cbSceneParam._m0[_2009].z, fma(_1962, cbSceneParam._m0[_2009].y, _1958 * cbSceneParam._m0[_2009].x)));
        float _2048 = fma(_1970, cbSceneParam._m0[_2025].w, fma(_1966, cbSceneParam._m0[_2025].z, fma(_1962, cbSceneParam._m0[_2025].y, _1958 * cbSceneParam._m0[_2025].x)));
        float _2053 = cbSceneParam._m0[33u].z * _2048;
        float _2055 = cbSceneParam._m0[33u].w * _2048;
        float _2058 = fma(_1970, cbSceneParam._m0[_2017].w, fma(_1966, cbSceneParam._m0[_2017].z, fma(_1962, cbSceneParam._m0[_2017].y, _1958 * cbSceneParam._m0[_2017].x))) / _2048;
        float _2106 = (cbSceneParam._m0[33u].x - sqrt(((_1972 * _1972) + (_1971 * _1971)) + (_1973 * _1973))) * cbSceneParam._m0[33u].y;
        float _4085 = isnan(0.0) ? _2106 : (isnan(_2106) ? 0.0 : max(_2106, 0.0));
        float _2113 = (isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2053 + _2036) / _2048, (_2055 + _2040) / _2048), _2058), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2055 + _2036) / _2048, (_2040 - _2053) / _2048), _2058), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2036 - _2053) / _2048, (_2040 - _2055) / _2048), _2058), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2036 - _2055) / _2048, (_2053 + _2040) / _2048), _2058), 0.0)).x), vec4(0.25)));
        _2120 = 1.0 - (_2113 * cbSceneParam._m0[34u].x);
        _2121 = 1.0 - (_2113 * cbSceneParam._m0[34u].y);
        _2122 = 1.0 - (_2113 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2120 = 1.0;
        _2121 = 1.0;
        _2122 = 1.0;
    }
    float _2186;
    float _2188;
    float _2190;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2174 = fma(_1970, cbSceneParam._m0[63u].w, fma(_1966, cbSceneParam._m0[63u].z, fma(_1962, cbSceneParam._m0[63u].y, _1958 * cbSceneParam._m0[63u].x)));
        float _2175 = fma(_1970, cbSceneParam._m0[60u].w, fma(_1966, cbSceneParam._m0[60u].z, fma(_1962, cbSceneParam._m0[60u].y, _1958 * cbSceneParam._m0[60u].x))) / _2174;
        float _2176 = fma(_1970, cbSceneParam._m0[61u].w, fma(_1966, cbSceneParam._m0[61u].z, fma(_1962, cbSceneParam._m0[61u].y, _1958 * cbSceneParam._m0[61u].x))) / _2174;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2175 >= cbSceneParam._m0[64u].x) && (_2176 >= cbSceneParam._m0[64u].y)) && (_2175 <= cbSceneParam._m0[64u].z)) && (_2176 <= cbSceneParam._m0[64u].w))
        {
            float _2283 = fma(_1970, cbSceneParam._m0[62u].w, fma(_1966, cbSceneParam._m0[62u].z, fma(_1962, cbSceneParam._m0[62u].y, _1958 * cbSceneParam._m0[62u].x))) / _2174;
            float _2287 = isnan(cbSceneParam._m0[41u].w) ? _2283 : (isnan(_2283) ? cbSceneParam._m0[41u].w : max(_2283, cbSceneParam._m0[41u].w));
            float _2330 = (cbSceneParam._m0[33u].x - sqrt(((_1972 * _1972) + (_1971 * _1971)) + (_1973 * _1973))) * cbSceneParam._m0[33u].y;
            float _4101 = isnan(0.0) ? _2330 : (isnan(_2330) ? 0.0 : max(_2330, 0.0));
            float _2337 = (isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2175, cbSceneParam._m0[33u].w + _2176), _2287), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2175, _2176 - cbSceneParam._m0[33u].z), _2287), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2175 - cbSceneParam._m0[33u].z, _2176 - cbSceneParam._m0[33u].w), _2287), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2175 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2176), _2287), 0.0)).x), vec4(0.25)));
            float _2341 = 1.0 - (_2337 * cbSceneParam._m0[34u].x);
            float _2342 = 1.0 - (_2337 * cbSceneParam._m0[34u].y);
            float _2343 = 1.0 - (_2337 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2343) ? _2122 : (isnan(_2122) ? _2343 : min(_2122, _2343));
            frontier_phi_39_38_ladder_1 = isnan(_2342) ? _2121 : (isnan(_2121) ? _2342 : min(_2121, _2342));
            frontier_phi_39_38_ladder_2 = isnan(_2341) ? _2120 : (isnan(_2120) ? _2341 : min(_2120, _2341));
        }
        else
        {
            frontier_phi_39_38_ladder = _2122;
            frontier_phi_39_38_ladder_1 = _2121;
            frontier_phi_39_38_ladder_2 = _2120;
        }
        _2186 = frontier_phi_39_38_ladder_2;
        _2188 = frontier_phi_39_38_ladder_1;
        _2190 = frontier_phi_39_38_ladder;
    }
    else
    {
        _2186 = _2120;
        _2188 = _2121;
        _2190 = _2122;
    }
    uvec4 _2195 = floatBitsToUint(cbInstanceData._m0[_311 + 5u]);
    uint _2197 = _2195.x * 14u;
    uint _2198 = _2197 + 13u;
    float _2203 = _862 + (-1.0);
    float _2206 = (cbLight._m0[_2198].x * _2203) + 1.0;
    float _2207 = (cbLight._m0[_2198].y * _2203) + 1.0;
    uint _2209 = _2197 + 4u;
    float _2220 = dot(vec3(cbLight._m0[_2197].xyz), vec3(_762, _763, _764));
    float _2223 = isnan(1.0) ? _2206 : (isnan(_2206) ? 1.0 : min(_2206, 1.0));
    float _2224 = cbLight._m0[_2209].x * _2186;
    float _2225 = cbLight._m0[_2209].y * _2188;
    float _2226 = cbLight._m0[_2209].z * _2190;
    uint _2227 = _2197 + 5u;
    uint _2233 = _2197 | 1u;
    float _2239 = dot(vec3(cbLight._m0[_2233].xyz), vec3(_762, _763, _764));
    float _2242 = isnan(1.0) ? _2207 : (isnan(_2207) ? 1.0 : min(_2207, 1.0));
    float _2415;
    float _2416;
    float _2417;
    if (_767 == 0.0)
    {
        float _4137 = isnan(0.0) ? _2220 : (isnan(_2220) ? 0.0 : max(_2220, 0.0));
        float _4148 = isnan(0.0) ? _2239 : (isnan(_2239) ? 0.0 : max(_2239, 0.0));
        float _2352 = (isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0))) * 0.3183098733425140380859375;
        float _2354 = (isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0))) * 0.3183098733425140380859375;
        _2415 = ((cbLight._m0[_2227].x * _2242) * _2354) + ((_2224 * _2223) * _2352);
        _2416 = ((_2242 * cbLight._m0[_2227].y) * _2354) + ((_2225 * _2223) * _2352);
        _2417 = ((_2242 * cbLight._m0[_2227].z) * _2354) + ((_2226 * _2223) * _2352);
    }
    else
    {
        float _2364 = _2220 + _767;
        float _2367 = (_767 * 2.0) + 1.0;
        float _2368 = (isnan(0.0) ? _2364 : (isnan(_2364) ? 0.0 : max(_2364, 0.0))) / _2367;
        float _2375 = _2239 + _767;
        float _2377 = (isnan(0.0) ? _2375 : (isnan(_2375) ? 0.0 : max(_2375, 0.0))) / _2367;
        _2415 = (((_2377 * cbLight._m0[_2227].x) * _2242) + ((_2224 * _2368) * _2223)) * 0.3183098733425140380859375;
        _2416 = (((_2377 * cbLight._m0[_2227].y) * _2242) + ((_2225 * _2368) * _2223)) * 0.3183098733425140380859375;
        _2417 = (((_2377 * cbLight._m0[_2227].z) * _2242) + ((_2226 * _2368) * _2223)) * 0.3183098733425140380859375;
    }
    uint _2421 = _2197 + 8u;
    float _2437 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2197].w)) * _766) * 0.949999988079071044921875);
    float _2438 = _2437 * _2437;
    float _2439 = cbLight._m0[_2197].x + _521;
    float _2440 = cbLight._m0[_2197].y + _522;
    float _2441 = cbLight._m0[_2197].z + _523;
    float _2445 = inversesqrt(dot(vec3(_2439, _2440, _2441), vec3(_2439, _2440, _2441)));
    float _2446 = _2445 * _2439;
    float _2447 = _2445 * _2440;
    float _2448 = _2445 * _2441;
    float _2449 = dot(vec3(_762, _763, _764), vec3(cbLight._m0[_2197].xyz));
    float _4169 = isnan(0.0) ? _2449 : (isnan(_2449) ? 0.0 : max(_2449, 0.0));
    float _2452 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
    float _4180 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _2453 = isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0));
    float _2454 = dot(vec3(_762, _763, _764), vec3(_2446, _2447, _2448));
    float _4191 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
    float _2457 = isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0));
    float _2458 = dot(vec3(cbLight._m0[_2197].xyz), vec3(_2446, _2447, _2448));
    float _4202 = isnan(0.0) ? _2458 : (isnan(_2458) ? 0.0 : max(_2458, 0.0));
    float _2462 = _2438 * _2438;
    float _2466 = ((_2457 * _2457) * (_2462 + (-1.0))) + 1.0;
    float _2477 = (exp2(log2(1.0 - (isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2478 = 1.0 - _2438;
    float _2489 = (0.5 / (((_2453 * ((_2452 * _2478) + _2438)) + 9.9999999392252902907785028219223e-09) + (((_2453 * _2478) + _2438) * _2452))) * _2452;
    float _4213 = isnan(0.0) ? _2489 : (isnan(_2489) ? 0.0 : max(_2489, 0.0));
    float _2491 = (isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0))) * (_2462 / ((_2466 * _2466) * 3.141590118408203125));
    uint _2507 = _2197 + 9u;
    float _2521 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2233].w)) * _766) * 0.949999988079071044921875);
    float _2522 = _2521 * _2521;
    float _2523 = cbLight._m0[_2233].x + _521;
    float _2524 = cbLight._m0[_2233].y + _522;
    float _2525 = cbLight._m0[_2233].z + _523;
    float _2529 = inversesqrt(dot(vec3(_2523, _2524, _2525), vec3(_2523, _2524, _2525)));
    float _2530 = _2529 * _2523;
    float _2531 = _2529 * _2524;
    float _2532 = _2529 * _2525;
    float _2533 = dot(vec3(_762, _763, _764), vec3(cbLight._m0[_2233].xyz));
    float _4224 = isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0));
    float _2536 = isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0));
    float _2537 = dot(vec3(_762, _763, _764), vec3(_2530, _2531, _2532));
    float _4235 = isnan(0.0) ? _2537 : (isnan(_2537) ? 0.0 : max(_2537, 0.0));
    float _2540 = isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0));
    float _2541 = dot(vec3(cbLight._m0[_2233].xyz), vec3(_2530, _2531, _2532));
    float _4246 = isnan(0.0) ? _2541 : (isnan(_2541) ? 0.0 : max(_2541, 0.0));
    float _2545 = _2522 * _2522;
    float _2549 = ((_2540 * _2540) * (_2545 + (-1.0))) + 1.0;
    float _2558 = (exp2(log2(1.0 - (isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2559 = 1.0 - _2522;
    float _2569 = (0.5 / (((_2453 * ((_2536 * _2559) + _2522)) + 9.9999999392252902907785028219223e-09) + (((_2453 * _2559) + _2522) * _2536))) * _2536;
    float _4257 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
    float _2571 = (isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0))) * (_2545 / ((_2549 * _2549) * 3.141590118408203125));
    float _2581 = (((_2558 * cbLight._m0[_2507].x) * _2571) * _2242) + ((((cbLight._m0[_2421].x * _2186) * _2477) * _2491) * _2223);
    float _2582 = (((_2558 * cbLight._m0[_2507].y) * _2571) * _2242) + ((((cbLight._m0[_2421].y * _2188) * _2477) * _2491) * _2223);
    float _2583 = (((_2558 * cbLight._m0[_2507].z) * _2571) * _2242) + ((((cbLight._m0[_2421].z * _2190) * _2477) * _2491) * _2223);
    float _2670;
    float _2672;
    float _2674;
    float _2676;
    float _2678;
    float _2680;
    if (_2195.y == 0u)
    {
        uvec4 _2626 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2627 = _2626.x;
        uint _2638 = uint((float(_2626.y) * floor(float(uint(cbSceneParam._m0[85u].y * _802) / _2627))) + floor(float(uint(cbSceneParam._m0[85u].x * _801) / _2627)));
        float _2648 = (log2(_1973 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2649 = isnan(0.0) ? _2648 : (isnan(_2648) ? 0.0 : max(_2648, 0.0));
        uint _2652 = uint(isnan(14.0) ? _2649 : (isnan(_2649) ? 14.0 : min(_2649, 14.0)));
        uint _2659 = _2626.z;
        float _2704;
        float _2706;
        float _2708;
        float _2710;
        float _2712;
        float _2714;
        if (((((1u << ((_2659 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2652 << 2u) + (_2638 << 6u)) >> 2u)).x) == 0u) || ((_2659 & 240u) == 0u))
        {
            _2704 = 0.0;
            _2706 = 0.0;
            _2708 = 0.0;
            _2710 = 0.0;
            _2712 = 0.0;
            _2714 = 0.0;
        }
        else
        {
            float _2705;
            float _2707;
            float _2709;
            float _2711;
            float _2713;
            float _2715;
            float _2870 = 0.0;
            float _2871 = 0.0;
            float _2872 = 0.0;
            float _2873 = 0.0;
            float _2874 = 0.0;
            float _2875 = 0.0;
            uint _2876 = 0u;
            uint _2885;
            bool _2886;
            for (;;)
            {
                _2885 = texelFetch(g_lightClassification, int((((_2652 << 5u) + (_2638 << 9u)) + (_2876 << 2u)) >> 2u)).x;
                _2886 = _2885 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2886)
                {
                    frontier_phi_63_pred = _2872;
                    frontier_phi_63_pred_1 = _2875;
                    frontier_phi_63_pred_2 = _2874;
                    frontier_phi_63_pred_3 = _2873;
                    frontier_phi_63_pred_4 = _2871;
                    frontier_phi_63_pred_5 = _2870;
                }
                else
                {
                    float _3086;
                    float _3087;
                    float _3088;
                    float _3089;
                    float _3090;
                    float _3091;
                    uint _3092;
                    _3086 = _2870;
                    _3087 = _2871;
                    _3088 = _2872;
                    _3089 = _2873;
                    _3090 = _2874;
                    _3091 = _2875;
                    _3092 = _2885;
                    float _3018;
                    float _3019;
                    float _3020;
                    float _3021;
                    float _3022;
                    float _3023;
                    for (;;)
                    {
                        uint _3096 = uint(findLSB(_3092)) + (_2876 << 5u);
                        uint _3093 = (_3092 + 4294967295u) & _3092;
                        uint _3098 = _3096 * 48u;
                        vec4 _3112 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3098)).x, texelFetch(g_PointLightRenderingBuffer, int(_3098 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3098 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3098 + 3u)).x));
                        uint _3118 = (_3096 * 48u) + 4u;
                        vec4 _3131 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3118)).x, texelFetch(g_PointLightRenderingBuffer, int(_3118 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3118 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3118 + 3u)).x));
                        float _3132 = _3131.x;
                        float _3133 = _3131.y;
                        float _3134 = _3131.z;
                        uint _3137 = (_3096 * 48u) + 8u;
                        vec3 _3148 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3137)).x, texelFetch(g_PointLightRenderingBuffer, int(_3137 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3137 + 2u)).x));
                        uint _3153 = (_3096 * 48u) + 12u;
                        vec2 _3161 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_3153)).x, texelFetch(g_PointLightRenderingBuffer, int(_3153 + 1u)).x));
                        float _3167 = inversesqrt(dot(vec3(_1971, _1972, _1973), vec3(_1971, _1972, _1973)));
                        float _3168 = _3167 * _1971;
                        float _3169 = _3167 * _1972;
                        float _3170 = _3167 * _1973;
                        float _3171 = _3112.x - _1971;
                        float _3172 = _3112.y - _1972;
                        float _3173 = _3112.z - _1973;
                        float _3174 = dot(vec3(_3171, _3172, _3173), vec3(_3171, _3172, _3173));
                        float _3177 = inversesqrt(_3174);
                        float _3178 = _3177 * _3171;
                        float _3179 = _3177 * _3172;
                        float _3180 = _3177 * _3173;
                        float _3181 = dot(vec3(_820, _823, _826), vec3(_3178, _3179, _3180));
                        float _3186 = 1.0 - (_3174 * _3112.w);
                        float _4278 = isnan(0.0) ? _3186 : (isnan(_3186) ? 0.0 : max(_3186, 0.0));
                        float _3187 = isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0));
                        float _3188 = sqrt(_3174) * _3131.w;
                        float _3191 = 1.39999997615814208984375 / (_3188 + 1.39999997615814208984375);
                        float _3192 = _3191 * _3191;
                        float _3193 = 1.0 - _3192;
                        float _3195 = (_3193 * _3193) * _767;
                        float _3198 = ((_3193 * _3181) + _3192) + _3195;
                        float _3203 = _3188 * _3188;
                        float _3208 = ((isnan(0.0) ? _3198 : (isnan(_3198) ? 0.0 : max(_3198, 0.0))) * _3187) / (((_3195 * 2.0) + 1.0) * ((_3203 * 0.699999988079071044921875) + 1.0));
                        float _3212 = dot(vec3(_3178, _3179, _3180), vec3(_3168, _3169, _3170));
                        float _4294 = isnan(0.0) ? _3212 : (isnan(_3212) ? 0.0 : max(_3212, 0.0));
                        float _3219 = dot(vec3((-0.0) - _3168, (-0.0) - _3169, (-0.0) - _3170), vec3(_820, _823, _826)) + 1.0;
                        float _3221 = (isnan(0.0) ? _3219 : (isnan(_3219) ? 0.0 : max(_3219, 0.0))) * 0.5;
                        float _3228 = ((_3221 * _3221) * _3161.x) * exp2((_3161.y * 32.0) * log2(isnan(1.0) ? _4294 : (isnan(_4294) ? 1.0 : min(_4294, 1.0))));
                        float _3230 = _767 / (_767 + 1.0);
                        float _3246 = (-0.0) - _1971;
                        float _3247 = (-0.0) - _1972;
                        float _3248 = (-0.0) - _1973;
                        float _3252 = inversesqrt(dot(vec3(_3246, _3247, _3248), vec3(_3246, _3247, _3248)));
                        float _3253 = _3252 * _3246;
                        float _3254 = _3252 * _3247;
                        float _3255 = _3252 * _3248;
                        float _3262 = exp2(log2(1.0 / ((_3203 * 3.5) + 5.0)) * 0.25);
                        float _3263 = 1.0 - _883;
                        float _3270 = sqrt(1.0 - ((1.0 - (_3263 * _3263)) * (1.0 - (_3262 * _3262))));
                        float _3271 = _3270 * _3270;
                        float _3272 = _3271 * _3271;
                        float _3273 = _3253 + _3178;
                        float _3274 = _3254 + _3179;
                        float _3275 = _3255 + _3180;
                        float _3279 = inversesqrt(dot(vec3(_3273, _3274, _3275), vec3(_3273, _3274, _3275)));
                        float _3283 = dot(vec3(_820, _823, _826), vec3(_3253, _3254, _3255));
                        float _4310 = isnan(0.0) ? _3283 : (isnan(_3283) ? 0.0 : max(_3283, 0.0));
                        float _3286 = isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0));
                        float _3287 = dot(vec3(_820, _823, _826), vec3(_3279 * _3273, _3279 * _3274, _3279 * _3275));
                        float _4321 = isnan(0.0) ? _3287 : (isnan(_3287) ? 0.0 : max(_3287, 0.0));
                        float _3290 = isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0));
                        float _3294 = ((_3290 * _3290) * (_3272 + (-1.0))) + 1.0;
                        float _3295 = _3191 * _3271;
                        float _3296 = _3295 * _3295;
                        float _3299 = ((1.0 - _3296) * _3181) + _3296;
                        float _4332 = isnan(0.0) ? _3299 : (isnan(_3299) ? 0.0 : max(_3299, 0.0));
                        float _3300 = isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0));
                        float _3301 = 1.0 - _3271;
                        float _3311 = (0.5 / (((_3300 * ((_3286 * _3301) + _3271)) + 9.9999999392252902907785028219223e-09) + (((_3300 * _3301) + _3271) * _3286))) * _3300;
                        float _4343 = isnan(0.0) ? _3311 : (isnan(_3311) ? 0.0 : max(_3311, 0.0));
                        float _3322 = (((_3272 * 3.1415927410125732421875) * (isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0)))) / ((_3294 * _3294) * ((_3203 * 2.1991131305694580078125) + 3.141590118408203125))) * _3187;
                        _3021 = (((((_3132 * 0.3183098733425140380859375) * _3230) * _3228) + _3132) * _3208) + _3089;
                        _3022 = (((((_3133 * 0.3183098733425140380859375) * _3230) * _3228) + _3133) * _3208) + _3090;
                        _3023 = (((((_3134 * 0.3183098733425140380859375) * _3230) * _3228) + _3134) * _3208) + _3091;
                        _3018 = (_3322 * _3148.x) + _3086;
                        _3019 = (_3322 * _3148.y) + _3087;
                        _3020 = (_3322 * _3148.z) + _3088;
                        if (_3093 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3086 = _3018;
                            _3087 = _3019;
                            _3088 = _3020;
                            _3089 = _3021;
                            _3090 = _3022;
                            _3091 = _3023;
                            _3092 = _3093;
                        }
                    }
                    frontier_phi_63_pred = _3020;
                    frontier_phi_63_pred_1 = _3023;
                    frontier_phi_63_pred_2 = _3022;
                    frontier_phi_63_pred_3 = _3021;
                    frontier_phi_63_pred_4 = _3019;
                    frontier_phi_63_pred_5 = _3018;
                }
                _2709 = frontier_phi_63_pred;
                _2715 = frontier_phi_63_pred_1;
                _2713 = frontier_phi_63_pred_2;
                _2711 = frontier_phi_63_pred_3;
                _2707 = frontier_phi_63_pred_4;
                _2705 = frontier_phi_63_pred_5;
                uint _2877 = _2876 + 1u;
                if (_2877 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2870 = _2705;
                    _2871 = _2707;
                    _2872 = _2709;
                    _2873 = _2711;
                    _2874 = _2713;
                    _2875 = _2715;
                    _2876 = _2877;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2704 = _2705;
            _2706 = _2707;
            _2708 = _2709;
            _2710 = _2711;
            _2712 = _2713;
            _2714 = _2715;
        }
        float _2719 = isnan(1.0) ? _862 : (isnan(_862) ? 1.0 : min(_862, 1.0));
        _2670 = (_2719 * _2710) + _2415;
        _2672 = (_2719 * _2712) + _2416;
        _2674 = (_2719 * _2714) + _2417;
        _2676 = ((_2704 * 0.039999999105930328369140625) * _2719) + _2581;
        _2678 = ((_2706 * 0.039999999105930328369140625) * _2719) + _2582;
        _2680 = ((_2708 * 0.039999999105930328369140625) * _2719) + _2583;
    }
    else
    {
        _2670 = _2415;
        _2672 = _2416;
        _2674 = _2417;
        _2676 = _2581;
        _2678 = _2582;
        _2680 = _2583;
    }
    float _2793;
    float _2794;
    float _2795;
    if (_767 > 0.0)
    {
        uint _2726 = _2197 + 4u;
        float _2732 = (-0.0) - _521;
        float _2733 = (-0.0) - _522;
        float _2734 = (-0.0) - _523;
        float _2735 = dot(vec3(cbLight._m0[_2197].xyz), vec3(_2732, _2733, _2734));
        float _4359 = isnan(0.0) ? _2735 : (isnan(_2735) ? 0.0 : max(_2735, 0.0));
        float _2739 = _873 + 1.0;
        float _2741 = (isnan(0.0) ? _2739 : (isnan(_2739) ? 0.0 : max(_2739, 0.0))) * 0.5;
        float _2746 = _2741 * _2741;
        float _2747 = _2746 * exp2(log2(isnan(1.0) ? _4359 : (isnan(_4359) ? 1.0 : min(_4359, 1.0))) * 32.0);
        float _2749 = _767 / (_767 + 1.0);
        float _2750 = isnan(_2206) ? 1.0 : (isnan(1.0) ? _2206 : min(1.0, _2206));
        uint _2763 = _2197 + 5u;
        float _2769 = dot(vec3(cbLight._m0[_2233].xyz), vec3(_2732, _2733, _2734));
        float _4380 = isnan(0.0) ? _2769 : (isnan(_2769) ? 0.0 : max(_2769, 0.0));
        float _2776 = _2746 * exp2(log2(isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0))) * 32.0);
        float _2777 = isnan(_2207) ? 1.0 : (isnan(1.0) ? _2207 : min(1.0, _2207));
        _2793 = ((((_2776 * cbLight._m0[_2763].x) * _2749) * _2777) + ((((cbLight._m0[_2726].x * _2186) * _2747) * _2749) * _2750)) * 0.3183098733425140380859375;
        _2794 = ((((_2776 * cbLight._m0[_2763].y) * _2749) * _2777) + ((((cbLight._m0[_2726].y * _2188) * _2747) * _2749) * _2750)) * 0.3183098733425140380859375;
        _2795 = ((((_2776 * cbLight._m0[_2763].z) * _2749) * _2777) + ((((cbLight._m0[_2726].z * _2190) * _2747) * _2749) * _2750)) * 0.3183098733425140380859375;
    }
    else
    {
        _2793 = 0.0;
        _2794 = 0.0;
        _2795 = 0.0;
    }
    float _4396 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    float _4407 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    float _4418 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
    float _4429 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
    float _2810 = (isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0))) * ((_2670 + ((isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0))) * _862)) + _2793);
    float _2811 = (isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0))) * ((_2672 + ((isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0))) * _862)) + _2794);
    float _2812 = (isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0))) * ((_2674 + ((isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0))) * _862)) + _2795);
    float _2816 = 0.959999978542327880859375 - (exp2(log2(1.0 - _877) * 5.0) * 0.959999978542327880859375);
    float _2827 = (_2810 + ((_2676 + ((isnan(0.0) ? _1918 : (isnan(_1918) ? 0.0 : max(_1918, 0.0))) * _1705)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _701.x) * _2816) - _2810) * _747);
    float _2829 = (_2811 + ((_2678 + ((isnan(0.0) ? _1921 : (isnan(_1921) ? 0.0 : max(_1921, 0.0))) * _1705)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _701.y) * _2816) - _2811) * _747);
    float _2831 = (_2812 + ((_2680 + ((isnan(0.0) ? _1924 : (isnan(_1924) ? 0.0 : max(_1924, 0.0))) * _1705)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _701.z) * _2816) - _2812) * _747);
    float _2836 = cbInstanceData._m0[_311 + 6u].w * (isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0)));
    float _2841 = _801 / cbSceneParam._m0[86u].x;
    float _2842 = _802 / cbSceneParam._m0[86u].y;
    vec4 _2856 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2841, _2842, (log2((isnan(cbSceneParam._m0[77u].w) ? _784 : (isnan(_784) ? cbSceneParam._m0[77u].w : min(_784, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2858 = _2856.x;
    float _2859 = _2856.y;
    float _2860 = _2856.z;
    float _2861 = _2856.w;
    float _2928;
    float _2930;
    float _2932;
    float _2934;
    if (_784 > cbSceneParam._m0[78u].w)
    {
        float _2891 = isnan(_784) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _784 : min(cbSceneParam._m0[80u].w, _784));
        float _2892 = _2891 / _784;
        float _2903 = _2892 * _303;
        float _2904 = _304 * _2892;
        float _2905 = (-0.0) - _2904;
        float _2906 = _2892 * _305;
        float _2908 = (cbSceneParam._m0[77u].w * _2905) / _2891;
        float _2909 = _2908 + cbSceneParam._m0[79u].w;
        float _2910 = cbSceneParam._m0[79u].w - _2904;
        float _2916 = sqrt(((_2903 * _2903) + (_2904 * _2904)) + (_2906 * _2906));
        float _2919 = (1.0 - (cbSceneParam._m0[77u].w / _2891)) * _2916;
        float _2924 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2926 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3327;
        if (abs((_2905 - _2908) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3327 = ((((_2909 > 0.0) ? exp2(_2924 * _2909) : (2.0 - exp2(_2926 * _2909))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2919;
        }
        else
        {
            float _3043 = 1.0 / cbSceneParam._m0[80u].x;
            float _3044 = isnan(_2910) ? _2909 : (isnan(_2909) ? _2910 : max(_2909, _2910));
            float _3045 = isnan(_2910) ? _2909 : (isnan(_2909) ? _2910 : min(_2909, _2910));
            float _3054 = isnan(0.0) ? _3044 : (isnan(_3044) ? 0.0 : min(_3044, 0.0));
            float _3055 = isnan(0.0) ? _3045 : (isnan(_3045) ? 0.0 : min(_3045, 0.0));
            _3327 = ((abs(_2916 / _2905) * cbSceneParam._m0[80u].y) * ((((_3054 - _3055) * 2.0) - ((exp2(_2924 * (isnan(0.0) ? _3044 : (isnan(_3044) ? 0.0 : max(_3044, 0.0)))) - exp2(_2924 * (isnan(0.0) ? _3045 : (isnan(_3045) ? 0.0 : max(_3045, 0.0))))) * _3043)) - ((exp2(_2926 * _3054) - exp2(_2926 * _3055)) * _3043))) + (_2919 * cbSceneParam._m0[80u].z);
        }
        vec4 _3329 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2841, _2842, 1.0), 0.0);
        float _3338 = exp2((_3327 * (-1.44269502162933349609375)) * (1.0 - _3329.w));
        float _3339 = log2(_3338);
        float _3355 = log2(_2861);
        _2928 = (exp2(_3355 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3339 * cbSceneParam._m0[78u].x)) * _3329.x) / cbSceneParam._m0[78u].x)) + _2858;
        _2930 = (exp2(_3355 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3339 * cbSceneParam._m0[78u].y)) * _3329.y) / cbSceneParam._m0[78u].y)) + _2859;
        _2932 = (exp2(_3355 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3339 * cbSceneParam._m0[78u].z)) * _3329.z) / cbSceneParam._m0[78u].z)) + _2860;
        _2934 = _3338 * _2861;
    }
    else
    {
        _2928 = _2858;
        _2930 = _2859;
        _2932 = _2860;
        _2934 = _2861;
    }
    bool _3365;
    float _2989;
    vec4 _2992;
    float _2994;
    vec4 _2996;
    float _3004;
    float _3005;
    float _3006;
    float _3007;
    bool _3017;
    for (;;)
    {
        bool _2946 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2947 = log2(_2934);
        float _2954 = exp2(_2947 * cbSceneParam._m0[78u].x) * _2827;
        float _2955 = exp2(_2947 * cbSceneParam._m0[78u].y) * _2829;
        float _2956 = exp2(_2947 * cbSceneParam._m0[78u].z) * _2831;
        vec4 _2964 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_801, _802));
        float _2966 = _2964.x;
        float _2987 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2966)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2966))) - _784) * cbMtdParam._m0[17u].y;
        float _4480 = isnan(0.0) ? _2987 : (isnan(_2987) ? 0.0 : max(_2987, 0.0));
        _2989 = _2836 * (isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0)));
        float _2990 = _791 + (-0.5);
        _2992 = cbMtdParam._m0[1u];
        _2994 = _2992.y * _2990;
        _2996 = cbMatDynParam._m0[0u];
        float _3003 = (roundEven(_2996.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3004 = _3003 * (_2946 ? _2954 : (_2954 + (cbSceneParam._m0[72u].w * _2928)));
        _3005 = _3003 * (_2946 ? _2955 : (_2955 + (cbSceneParam._m0[72u].w * _2930)));
        _3006 = _3003 * (_2946 ? _2956 : (_2956 + (cbSceneParam._m0[72u].w * _2932)));
        _3007 = _2990 * 0.999000012874603271484375;
        _3017 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3017)
        {
            if ((cbInstanceData._m0[_311 + 7u].x + _3007) < 0.5)
            {
                _3365 = true;
                break;
            }
        }
        uint _3078 = _839 + uint(_2996.w);
        if ((cbInstanceData._m0[_3078].w < 1.0) && ((cbInstanceData._m0[_3078].w + _3007) < 0.5))
        {
            _3365 = true;
            break;
        }
        if ((_2994 + _431) < _2992.x)
        {
            _3365 = true;
            break;
        }
        _3365 = false;
        break;
    }
    float _3370;
    if (_3365)
    {
        discard_state = true;
        _3370 = 0.0;
    }
    else
    {
        _3370 = _2989;
    }
    SV_Target.x = _3004;
    SV_Target.y = _3005;
    SV_Target.z = _3006;
    SV_Target.w = _3370;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2989;
    discard_exit();
}


