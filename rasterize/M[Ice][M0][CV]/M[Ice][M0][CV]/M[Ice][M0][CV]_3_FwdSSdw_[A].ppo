#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1222;
float _3190;
float _3191;
float _3192;
float _3193;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _207 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _208 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _209 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _215 = inversesqrt(dot(vec3(_207, _208, _209), vec3(_207, _208, _209)));
    float _216 = _215 * _207;
    float _217 = _215 * _208;
    float _218 = _215 * _209;
    float _222 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _223 = _222 * NORMAL.x;
    float _224 = _222 * NORMAL.y;
    float _225 = _222 * NORMAL.z;
    float _229 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _230 = _229 * TANGENT.x;
    float _231 = _229 * TANGENT.y;
    float _232 = _229 * TANGENT.z;
    float _237;
    float _238;
    float _239;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _237 = (-0.0) - _223;
        _238 = (-0.0) - _224;
        _239 = (-0.0) - _225;
    }
    else
    {
        _237 = _223;
        _238 = _224;
        _239 = _225;
    }
    float _286 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _296 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _286);
    float _297 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _286);
    float _298 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _286);
    uint _304 = uint(roundEven(NORMAL.w)) * 13u;
    uint _309 = _304 + 1u;
    uint _313 = _304 + 2u;
    float _322 = sqrt(((cbInstanceData._m0[_309].x * cbInstanceData._m0[_309].x) + (cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x)) + (cbInstanceData._m0[_313].x * cbInstanceData._m0[_313].x));
    float _323 = _322 * TEXCOORD.z;
    float _324 = _322 * TEXCOORD.w;
    vec4 _338 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _347 = (_338.x * 2.0) + (-1.0);
    float _349 = (_338.y * 2.0) + (-1.0);
    float _350 = dot(vec2(_347, _349), vec2(_347, _349));
    float _3202 = isnan(0.0) ? _350 : (isnan(_350) ? 0.0 : max(_350, 0.0));
    float _356 = sqrt(1.0 - (isnan(1.0) ? _3202 : (isnan(_3202) ? 1.0 : min(_3202, 1.0))));
    float _359 = fma(_356, _237, fma(_349, _230, _347 * _216));
    float _362 = fma(_356, _238, fma(_349, _231, _347 * _217));
    float _365 = fma(_356, _239, fma(_349, _232, _347 * _218));
    float _369 = inversesqrt(dot(vec3(_359, _362, _365), vec3(_359, _362, _365)));
    vec4 _402 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _407 = _402.w;
    float _419 = dot(vec3(_296, _297, _298), vec3(_216, _217, _218));
    float _422 = dot(vec3(_296, _297, _298), vec3(_230, _231, _232));
    float _425 = dot(vec3(_296, _297, _298), vec3(_237, _238, _239));
    float _431 = inversesqrt(dot(vec3(_419, _422, _425), vec3(_419, _422, _425)));
    float _453 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _473 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_419 * cbMtdParam._m0[14u].x) * _431) * _453) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_422 * cbMtdParam._m0[14u].x) * _431) * _453) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _496 = inversesqrt(dot(vec3(_296, _297, _298), vec3(_296, _297, _298)));
    float _497 = _496 * _296;
    float _498 = _496 * _297;
    float _499 = _496 * _298;
    float _500 = dot(vec4(_497, _498, _499, 0.0), vec4(_237, _238, _239, 0.0));
    float _503 = _500 - cbMtdParam._m0[15u].z;
    float _3213 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0));
    float _510 = exp2(log2(1.0 - (isnan(1.0) ? _3213 : (isnan(_3213) ? 1.0 : min(_3213, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _525 = ((((_402.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _473.x) * cbMtdParam._m0[9u].x) * ((_510 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _530 = ((((_402.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _473.y) * cbMtdParam._m0[9u].y) * ((_510 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _535 = ((((_402.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _473.z) * cbMtdParam._m0[9u].z) * ((_510 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _544 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _323) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _324) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3229 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _545 = isnan(1.0) ? _3229 : (isnan(_3229) ? 1.0 : min(_3229, 1.0));
    float _552 = (_545 * (cbMtdParam._m0[11u].x - _525)) + _525;
    float _553 = ((cbMtdParam._m0[11u].y - _530) * _545) + _530;
    float _554 = ((cbMtdParam._m0[11u].z - _535) * _545) + _535;
    vec4 _566 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _323) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _324) + cbTextureTilingScale._m0[9u].w));
    float _573 = (_566.x * 2.0) + (-1.0);
    float _574 = (_566.y * 2.0) + (-1.0);
    float _575 = dot(vec2(_573, _574), vec2(_573, _574));
    float _3240 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _589 = (cbMtdParam._m0[16u].y + _338.z) + cbMtdParam._m0[17u].z;
    float _592 = ((_566.z - _589) * _545) + _589;
    float _604 = (((_573 - _347) + (cbMtdParam._m0[14u].z * _347)) * _545) + _347;
    float _605 = (((_574 - _349) + (cbMtdParam._m0[14u].z * _349)) * _545) + _349;
    float _606 = (_545 * (sqrt(1.0 - (isnan(1.0) ? _3240 : (isnan(_3240) ? 1.0 : min(_3240, 1.0)))) - _356)) + _356;
    float _622 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _624 = _622 - (_622 * _545);
    float _644 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + ((_369 * _359) * cbMtdParam._m0[18u].y));
    float _645 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + ((_369 * _362) * cbMtdParam._m0[18u].y));
    float _652 = isnan(cbInstanceData._m0[8u].x) ? _644 : (isnan(_644) ? cbInstanceData._m0[8u].x : max(_644, cbInstanceData._m0[8u].x));
    float _653 = isnan(cbInstanceData._m0[8u].y) ? _645 : (isnan(_645) ? cbInstanceData._m0[8u].y : max(_645, cbInstanceData._m0[8u].y));
    vec4 _657 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _652 : (isnan(_652) ? cbInstanceData._m0[8u].z : min(_652, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _653 : (isnan(_653) ? cbInstanceData._m0[8u].w : min(_653, cbInstanceData._m0[8u].w))));
    float _690 = _500 - cbMtdParam._m0[15u].x;
    float _3271 = isnan(0.0) ? _690 : (isnan(_690) ? 0.0 : max(_690, 0.0));
    float _700 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3271 : (isnan(_3271) ? 1.0 : min(_3271, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3287 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
    float _701 = isnan(1.0) ? _3287 : (isnan(_3287) ? 1.0 : min(_3287, 1.0));
    float _703 = _701 - (_545 * _701);
    float _707 = fma(_606, _237, fma(_605, _230, _604 * _216));
    float _710 = fma(_606, _238, fma(_605, _231, _604 * _217));
    float _713 = fma(_606, _239, fma(_605, _232, _604 * _218));
    float _717 = inversesqrt(dot(vec3(_707, _710, _713), vec3(_707, _710, _713)));
    float _718 = _717 * _707;
    float _719 = _717 * _710;
    float _720 = _717 * _713;
    float _3298 = isnan(0.0) ? _407 : (isnan(_407) ? 0.0 : max(_407, 0.0));
    float _721 = isnan(1.0) ? _3298 : (isnan(_3298) ? 1.0 : min(_3298, 1.0));
    float _3309 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    float _722 = isnan(1.0) ? _3309 : (isnan(_3309) ? 1.0 : min(_3309, 1.0));
    float _723 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
    float _3325 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _3336 = isnan(0.0) ? _553 : (isnan(_553) ? 0.0 : max(_553, 0.0));
    float _3347 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0));
    float _740 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _745 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _747 = _745.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _902 = sqrt(((_296 * _296) + (_297 * _297)) + (_298 * _298));
        float _908 = (cbMatDynParam._m0[5u].x * _902) + cbMatDynParam._m0[5u].y;
        float _3358 = isnan(0.0) ? _908 : (isnan(_908) ? 0.0 : max(_908, 0.0));
        float _909 = isnan(1.0) ? _3358 : (isnan(_3358) ? 1.0 : min(_3358, 1.0));
        float _913 = (cbMatDynParam._m0[5u].z * _902) + cbMatDynParam._m0[5u].w;
        float _3369 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3369 : (isnan(_3369) ? 1.0 : min(_3369, 1.0))) - _909)) + _909) < ((_747 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _757 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _758 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _776 = fma(_720, cbSceneParam._m0[5u].z, fma(_719, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _718));
    float _779 = fma(_720, cbSceneParam._m0[6u].z, fma(_719, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _718));
    float _782 = fma(_720, cbSceneParam._m0[7u].z, fma(_719, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _718));
    uint _795 = _304 + 9u;
    uint _796 = _795 + uint(cbMatDynParam._m0[0u].w);
    float _802 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3325 : (isnan(_3325) ? 1.0 : min(_3325, 1.0)))) * cbInstanceData._m0[_796].x;
    float _803 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3336 : (isnan(_3336) ? 1.0 : min(_3336, 1.0)))) * cbInstanceData._m0[_796].y;
    float _804 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3347 : (isnan(_3347) ? 1.0 : min(_3347, 1.0)))) * cbInstanceData._m0[_796].z;
    float _3380 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
    float _805 = isnan(1.0) ? _3380 : (isnan(_3380) ? 1.0 : min(_3380, 1.0));
    float _3391 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
    float _806 = isnan(1.0) ? _3391 : (isnan(_3391) ? 1.0 : min(_3391, 1.0));
    float _3402 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
    float _807 = isnan(1.0) ? _3402 : (isnan(_3402) ? 1.0 : min(_3402, 1.0));
    vec4 _815 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _757, cbSceneParam._m0[86u].y * _758));
    float _818 = _815.x * TEXCOORD_5.w;
    float _819 = dot(vec3(_718, _719, _720), vec3(_497, _498, _499));
    float _822 = _819 * 2.0;
    float _826 = (_822 * _718) - _497;
    float _827 = (_822 * _719) - _498;
    float _828 = (_822 * _720) - _499;
    float _829 = dot(vec3(_497, _498, _499), vec3(_718, _719, _720));
    float _832 = abs(_829);
    float _3413 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _833 = isnan(1.0) ? _3413 : (isnan(_3413) ? 1.0 : min(_3413, 1.0));
    float _839 = sqrt(_722);
    float _851 = exp2((_839 * 5.0) * log2(1.0 - (_833 * 0.999000012874603271484375))) / (4.0 - (_839 * 3.0));
    float _883 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _887 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _891 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1221;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _946 = fma(_891, cbModelParam._m0[26u].z, fma(_887, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _883));
        float _950 = fma(_891, cbModelParam._m0[27u].z, fma(_887, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _883));
        float _954 = fma(_891, cbModelParam._m0[28u].z, fma(_887, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _883));
        float _979 = _883 + _718;
        float _980 = _887 + _719;
        float _981 = _891 + _720;
        float _991 = fma(_981, cbModelParam._m0[26u].z, fma(_980, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _979)) - _946;
        float _992 = fma(_981, cbModelParam._m0[27u].z, fma(_980, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _979)) - _950;
        float _993 = fma(_981, cbModelParam._m0[28u].z, fma(_980, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _979)) - _954;
        float _997 = inversesqrt(dot(vec3(_991, _992, _993), vec3(_991, _992, _993)));
        float _1010 = ((_997 * _991) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_946 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1011 = ((_997 * _992) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_950 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1012 = ((_997 * _993) / cbModelParam._m0[34u].z) + ((((((_954 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1015 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1010, _1011, _1012), 0.0);
        vec4 _1022 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1010, _1011, _1012), 0.0);
        vec4 _1029 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1010, _1011, _1012), 0.0);
        vec4 _1036 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1010, _1011, _1012), 0.0);
        float _1049 = exp2((_1015.w + (-0.5)) * 20.0) * 2.0;
        float _1050 = _1049 * (_1015.x + (-0.5));
        float _1051 = _1049 * (_1015.y + (-0.5));
        float _1052 = _1049 * (_1015.z + (-0.5));
        float _1059 = exp2((_1022.w + (-0.5)) * 20.0) * 2.0;
        float _1060 = _1059 * (_1022.x + (-0.5));
        float _1061 = _1059 * (_1022.y + (-0.5));
        float _1062 = _1059 * (_1022.z + (-0.5));
        float _1069 = exp2((_1029.w + (-0.5)) * 20.0) * 2.0;
        float _1070 = _1069 * (_1029.x + (-0.5));
        float _1071 = _1069 * (_1029.y + (-0.5));
        float _1072 = _1069 * (_1029.z + (-0.5));
        float _1079 = exp2((_1036.w + (-0.5)) * 20.0) * 2.0;
        float _1080 = _1079 * (_1036.x + (-0.5));
        float _1081 = _1079 * (_1036.y + (-0.5));
        float _1082 = _1079 * (_1036.z + (-0.5));
        float _1083 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
        float _1084 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1085 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
        float _1086 = _1050 * 0.5;
        float _1087 = _1060 * 0.5;
        float _1088 = _1070 * 0.5;
        float _1089 = dot(vec3(_1086, _1087, _1088), vec3(_1086, _1087, _1088));
        float _1094 = (_1089 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1089);
        float _1103 = (dot(vec3(_718, _719, _720), vec3(_1094 * _1086, _1094 * _1087, _1094 * _1088)) + 1.0) * 0.5;
        float _3439 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1113 = sqrt(((_1087 * _1087) + (_1086 * _1086)) + (_1088 * _1088)) / (_1083 + 9.9999997473787516355514526367188e-06);
        float _3450 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
        float _1114 = isnan(1.0) ? _3450 : (isnan(_3450) ? 1.0 : min(_3450, 1.0));
        float _1115 = _1114 * 2.0;
        float _1119 = (1.0 - _1114) / (_1114 + 1.0);
        float _3461 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
        float _1120 = isnan(1.0) ? _3461 : (isnan(_3461) ? 1.0 : min(_3461, 1.0));
        float _1129 = ((((1.0 - _1120) * (_1115 + 2.0)) * exp2(log2(isnan(1.0) ? _3439 : (isnan(_3439) ? 1.0 : min(_3439, 1.0))) * (_1115 + 1.0))) + _1120) * _1083;
        float _1130 = _1051 * 0.5;
        float _1131 = _1061 * 0.5;
        float _1132 = _1071 * 0.5;
        float _1133 = dot(vec3(_1130, _1131, _1132), vec3(_1130, _1131, _1132));
        float _1138 = (_1133 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1133);
        float _1146 = (dot(vec3(_718, _719, _720), vec3(_1138 * _1130, _1138 * _1131, _1138 * _1132)) + 1.0) * 0.5;
        float _3472 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1155 = sqrt(((_1131 * _1131) + (_1130 * _1130)) + (_1132 * _1132)) / (_1084 + 9.9999997473787516355514526367188e-06);
        float _3483 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
        float _1156 = isnan(1.0) ? _3483 : (isnan(_3483) ? 1.0 : min(_3483, 1.0));
        float _1157 = _1156 * 2.0;
        float _1161 = (1.0 - _1156) / (_1156 + 1.0);
        float _3494 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
        float _1162 = isnan(1.0) ? _3494 : (isnan(_3494) ? 1.0 : min(_3494, 1.0));
        float _1171 = ((((1.0 - _1162) * (_1157 + 2.0)) * exp2(log2(isnan(1.0) ? _3472 : (isnan(_3472) ? 1.0 : min(_3472, 1.0))) * (_1157 + 1.0))) + _1162) * _1084;
        float _1172 = _1052 * 0.5;
        float _1173 = _1062 * 0.5;
        float _1174 = _1072 * 0.5;
        float _1175 = dot(vec3(_1172, _1173, _1174), vec3(_1172, _1173, _1174));
        float _1180 = (_1175 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1175);
        float _1188 = (dot(vec3(_718, _719, _720), vec3(_1180 * _1172, _1180 * _1173, _1180 * _1174)) + 1.0) * 0.5;
        float _3505 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
        float _1197 = sqrt(((_1173 * _1173) + (_1172 * _1172)) + (_1174 * _1174)) / (_1085 + 9.9999997473787516355514526367188e-06);
        float _3516 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1198 = isnan(1.0) ? _3516 : (isnan(_3516) ? 1.0 : min(_3516, 1.0));
        float _1199 = _1198 * 2.0;
        float _1203 = (1.0 - _1198) / (_1198 + 1.0);
        float _3527 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
        float _1204 = isnan(1.0) ? _3527 : (isnan(_3527) ? 1.0 : min(_3527, 1.0));
        float _1213 = ((((1.0 - _1204) * (_1199 + 2.0)) * exp2(log2(isnan(1.0) ? _3505 : (isnan(_3505) ? 1.0 : min(_3505, 1.0))) * (_1199 + 1.0))) + _1204) * _1085;
        _1221 = _1052;
        _1223 = _1051;
        _1224 = _1050;
        _1225 = _1062;
        _1226 = _1061;
        _1227 = _1060;
        _1228 = _1072;
        _1229 = _1071;
        _1230 = _1070;
        _1231 = _1085;
        _1232 = _1084;
        _1233 = _1083;
        _1234 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0)));
        _1235 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0)));
        _1236 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0)));
    }
    else
    {
        _1221 = _1222;
        _1223 = _1222;
        _1224 = _1222;
        _1225 = _1222;
        _1226 = _1222;
        _1227 = _1222;
        _1228 = _1222;
        _1229 = _1222;
        _1230 = _1222;
        _1231 = _1222;
        _1232 = _1222;
        _1233 = _1222;
        _1234 = 0.0;
        _1235 = 0.0;
        _1236 = 0.0;
    }
    float _1534;
    float _1535;
    float _1536;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1265 = fma(_891, cbModelParam._m0[30u].z, fma(_887, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _883));
        float _1269 = fma(_891, cbModelParam._m0[31u].z, fma(_887, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _883));
        float _1273 = fma(_891, cbModelParam._m0[32u].z, fma(_887, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _883));
        float _1296 = _883 + _718;
        float _1297 = _887 + _719;
        float _1298 = _891 + _720;
        float _1308 = fma(_1298, cbModelParam._m0[30u].z, fma(_1297, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1296)) - _1265;
        float _1309 = fma(_1298, cbModelParam._m0[31u].z, fma(_1297, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1296)) - _1269;
        float _1310 = fma(_1298, cbModelParam._m0[32u].z, fma(_1297, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1296)) - _1273;
        float _1314 = inversesqrt(dot(vec3(_1308, _1309, _1310), vec3(_1308, _1309, _1310)));
        float _1327 = ((_1314 * _1308) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1265 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1328 = ((_1314 * _1309) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1269 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1329 = ((_1314 * _1310) / cbModelParam._m0[35u].z) + ((((((_1273 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1331 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1327, _1328, _1329), 0.0);
        vec4 _1338 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1327, _1328, _1329), 0.0);
        vec4 _1345 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1327, _1328, _1329), 0.0);
        vec4 _1352 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1327, _1328, _1329), 0.0);
        float _1364 = exp2((_1331.w + (-0.5)) * 20.0) * 2.0;
        float _1365 = _1364 * (_1331.x + (-0.5));
        float _1366 = _1364 * (_1331.y + (-0.5));
        float _1367 = _1364 * (_1331.z + (-0.5));
        float _1374 = exp2((_1338.w + (-0.5)) * 20.0) * 2.0;
        float _1375 = _1374 * (_1338.x + (-0.5));
        float _1376 = _1374 * (_1338.y + (-0.5));
        float _1377 = _1374 * (_1338.z + (-0.5));
        float _1384 = exp2((_1345.w + (-0.5)) * 20.0) * 2.0;
        float _1385 = _1384 * (_1345.x + (-0.5));
        float _1386 = _1384 * (_1345.y + (-0.5));
        float _1387 = _1384 * (_1345.z + (-0.5));
        float _1394 = exp2((_1352.w + (-0.5)) * 20.0) * 2.0;
        float _1395 = _1394 * (_1352.x + (-0.5));
        float _1396 = _1394 * (_1352.y + (-0.5));
        float _1397 = _1394 * (_1352.z + (-0.5));
        float _1398 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1399 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1400 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1401 = _1365 * 0.5;
        float _1402 = _1375 * 0.5;
        float _1403 = _1385 * 0.5;
        float _1404 = dot(vec3(_1401, _1402, _1403), vec3(_1401, _1402, _1403));
        float _1409 = (_1404 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1404);
        float _1417 = (dot(vec3(_718, _719, _720), vec3(_1409 * _1401, _1409 * _1402, _1409 * _1403)) + 1.0) * 0.5;
        float _3568 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
        float _1426 = sqrt(((_1402 * _1402) + (_1401 * _1401)) + (_1403 * _1403)) / (_1398 + 9.9999997473787516355514526367188e-06);
        float _3579 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1427 = isnan(1.0) ? _3579 : (isnan(_3579) ? 1.0 : min(_3579, 1.0));
        float _1428 = _1427 * 2.0;
        float _1432 = (1.0 - _1427) / (_1427 + 1.0);
        float _3590 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1433 = isnan(1.0) ? _3590 : (isnan(_3590) ? 1.0 : min(_3590, 1.0));
        float _1442 = ((((1.0 - _1433) * (_1428 + 2.0)) * exp2(log2(isnan(1.0) ? _3568 : (isnan(_3568) ? 1.0 : min(_3568, 1.0))) * (_1428 + 1.0))) + _1433) * _1398;
        float _1443 = _1366 * 0.5;
        float _1444 = _1376 * 0.5;
        float _1445 = _1386 * 0.5;
        float _1446 = dot(vec3(_1443, _1444, _1445), vec3(_1443, _1444, _1445));
        float _1451 = (_1446 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1446);
        float _1459 = (dot(vec3(_718, _719, _720), vec3(_1451 * _1443, _1451 * _1444, _1451 * _1445)) + 1.0) * 0.5;
        float _3601 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1468 = sqrt(((_1444 * _1444) + (_1443 * _1443)) + (_1445 * _1445)) / (_1399 + 9.9999997473787516355514526367188e-06);
        float _3612 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
        float _1469 = isnan(1.0) ? _3612 : (isnan(_3612) ? 1.0 : min(_3612, 1.0));
        float _1470 = _1469 * 2.0;
        float _1474 = (1.0 - _1469) / (_1469 + 1.0);
        float _3623 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1475 = isnan(1.0) ? _3623 : (isnan(_3623) ? 1.0 : min(_3623, 1.0));
        float _1484 = ((((1.0 - _1475) * (_1470 + 2.0)) * exp2(log2(isnan(1.0) ? _3601 : (isnan(_3601) ? 1.0 : min(_3601, 1.0))) * (_1470 + 1.0))) + _1475) * _1399;
        float _1485 = _1367 * 0.5;
        float _1486 = _1377 * 0.5;
        float _1487 = _1387 * 0.5;
        float _1488 = dot(vec3(_1485, _1486, _1487), vec3(_1485, _1486, _1487));
        float _1493 = (_1488 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1488);
        float _1501 = (dot(vec3(_718, _719, _720), vec3(_1493 * _1485, _1493 * _1486, _1493 * _1487)) + 1.0) * 0.5;
        float _3634 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
        float _1510 = sqrt(((_1486 * _1486) + (_1485 * _1485)) + (_1487 * _1487)) / (_1400 + 9.9999997473787516355514526367188e-06);
        float _3645 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
        float _1511 = isnan(1.0) ? _3645 : (isnan(_3645) ? 1.0 : min(_3645, 1.0));
        float _1512 = _1511 * 2.0;
        float _1516 = (1.0 - _1511) / (_1511 + 1.0);
        float _3656 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
        float _1517 = isnan(1.0) ? _3656 : (isnan(_3656) ? 1.0 : min(_3656, 1.0));
        float _1526 = ((((1.0 - _1517) * (_1512 + 2.0)) * exp2(log2(isnan(1.0) ? _3634 : (isnan(_3634) ? 1.0 : min(_3634, 1.0))) * (_1512 + 1.0))) + _1517) * _1400;
        _1534 = _1367;
        _1535 = _1366;
        _1536 = _1365;
        _1537 = _1377;
        _1538 = _1376;
        _1539 = _1375;
        _1540 = _1387;
        _1541 = _1386;
        _1542 = _1385;
        _1543 = _1400;
        _1544 = _1399;
        _1545 = _1398;
        _1546 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0)));
        _1547 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0)));
        _1548 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0)));
    }
    else
    {
        _1534 = _1222;
        _1535 = _1222;
        _1536 = _1222;
        _1537 = _1222;
        _1538 = _1222;
        _1539 = _1222;
        _1540 = _1222;
        _1541 = _1222;
        _1542 = _1222;
        _1543 = _1222;
        _1544 = _1222;
        _1545 = _1222;
        _1546 = 0.0;
        _1547 = 0.0;
        _1548 = 0.0;
    }
    float _1558 = (cbModelParam._m0[1u].x * (_1546 - _1234)) + _1234;
    float _1559 = (cbModelParam._m0[1u].x * (_1547 - _1235)) + _1235;
    float _1560 = (cbModelParam._m0[1u].x * (_1548 - _1236)) + _1236;
    float _1581 = fma(_1560, cbSceneParam._m0[89u].z, fma(_1559, cbSceneParam._m0[89u].y, _1558 * cbSceneParam._m0[89u].x));
    float _1584 = fma(_1560, cbSceneParam._m0[90u].z, fma(_1559, cbSceneParam._m0[90u].y, _1558 * cbSceneParam._m0[90u].x));
    float _1587 = fma(_1560, cbSceneParam._m0[91u].z, fma(_1559, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1558));
    float _1602 = _826 * 0.5;
    float _1603 = _827 * 0.5;
    float _1604 = _828 * 0.5;
    float _1605 = dot(vec4(_1602, _1603, _1604, 1.0), vec4(_1536, _1539, _1542, _1545));
    float _1608 = dot(vec4(_1602, _1603, _1604, 1.0), vec4(_1535, _1538, _1541, _1544));
    float _1611 = dot(vec4(_1602, _1603, _1604, 1.0), vec4(_1534, _1537, _1540, _1543));
    float _1645;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1618 = dot(vec4(_1602, _1603, _1604, 1.0), vec4(_1221, _1225, _1228, _1231));
        float _1622 = dot(vec4(_1602, _1603, _1604, 1.0), vec4(_1223, _1226, _1229, _1232));
        float _1626 = dot(vec4(_1602, _1603, _1604, 1.0), vec4(_1224, _1227, _1230, _1233));
        float _1633 = dot(vec4(cbModelParam._m0[39u]), vec4(_1602, _1603, _1604, 1.0));
        _1645 = dot(vec3(isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0)), isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0)), isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1633) ? 0.0 : (isnan(0.0) ? _1633 : max(0.0, _1633))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1645 = 1.0;
    }
    float _1656;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1647 = dot(vec4(cbModelParam._m0[40u]), vec4(_1602, _1603, _1604, 1.0));
        _1656 = dot(vec3(isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0)), isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0)), isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1647) ? 0.0 : (isnan(0.0) ? _1647 : max(0.0, _1647))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1656 = 1.0;
    }
    float _1660 = (_1656 * cbModelParam._m0[1u].x) + (_1645 * (1.0 - cbModelParam._m0[1u].x));
    float _1670 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _722);
    float _1671 = isnan(_1670) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1670 : min(cbModelParam._m0[25u].z, _1670));
    float _1751;
    float _1753;
    float _1755;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1718 = fma(_891, cbModelParam._m0[13u].z, fma(_887, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _883)) + cbModelParam._m0[13u].w;
        float _1722 = fma(_891, cbModelParam._m0[14u].z, fma(_887, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _883)) + cbModelParam._m0[14u].w;
        float _1726 = fma(_891, cbModelParam._m0[15u].z, fma(_887, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _883)) + cbModelParam._m0[15u].w;
        float _1729 = fma(_828, cbModelParam._m0[13u].z, fma(_827, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _826));
        float _1732 = fma(_828, cbModelParam._m0[14u].z, fma(_827, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _826));
        float _1735 = fma(_828, cbModelParam._m0[15u].z, fma(_827, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _826));
        float _1763;
        if (_1729 > 0.0)
        {
            _1763 = abs((1.0 - _1718) / _1729);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1729 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1718 + 1.0) / _1729);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1763 = frontier_phi_19_17_ladder;
        }
        float _1956;
        if (_1732 > 0.0)
        {
            _1956 = abs((1.0 - _1722) / _1732);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1732 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1722 + 1.0) / _1732);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1956 = frontier_phi_28_24_ladder;
        }
        float _2194;
        if (_1735 > 0.0)
        {
            _2194 = abs((1.0 - _1726) / _1735);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1735 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1726 + 1.0) / _1735);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2194 = frontier_phi_39_35_ladder;
        }
        float _2196 = isnan(_1956) ? _1763 : (isnan(_1763) ? _1956 : min(_1763, _1956));
        float _2197 = isnan(_2194) ? _2196 : (isnan(_2196) ? _2194 : min(_2196, _2194));
        float _2201 = (_2197 * _1729) + _1718;
        float _2202 = (_2197 * _1732) + _1722;
        float _2203 = (_2197 * _1735) + _1726;
        float _2204 = _2197 * 9.9999997473787516355514526367188e-05;
        float _2206 = (-1.0) - _2204;
        float _2208 = _2204 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2203 > _2208) || ((_2203 < _2206) || ((_2202 > _2208) || ((_2202 < _2206) || ((_2201 < _2206) || (_2201 > _2208))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2353 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2203, cbModelParam._m0[9u].z, fma(_2202, cbModelParam._m0[9u].y, _2201 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2203, cbModelParam._m0[10u].z, fma(_2202, cbModelParam._m0[10u].y, _2201 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2203, cbModelParam._m0[11u].z, fma(_2202, cbModelParam._m0[11u].y, _2201 * cbModelParam._m0[11u].x))), _1671);
            frontier_phi_18_39_ladder = _2353.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2353.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2353.x * cbModelParam._m0[1u].y;
        }
        _1751 = frontier_phi_18_39_ladder_2;
        _1753 = frontier_phi_18_39_ladder_1;
        _1755 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1739 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_826, _827, _828), _1671);
        _1751 = _1739.x * cbModelParam._m0[1u].y;
        _1753 = _1739.y * cbModelParam._m0[1u].y;
        _1755 = _1739.z * cbModelParam._m0[1u].y;
    }
    float _1759 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _722);
    float _1760 = isnan(_1759) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1759 : min(cbModelParam._m0[25u].w, _1759));
    float _1852;
    float _1854;
    float _1856;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1816 = fma(_891, cbModelParam._m0[21u].z, fma(_887, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _883)) + cbModelParam._m0[21u].w;
        float _1820 = fma(_891, cbModelParam._m0[22u].z, fma(_887, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _883)) + cbModelParam._m0[22u].w;
        float _1824 = fma(_891, cbModelParam._m0[23u].z, fma(_887, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _883)) + cbModelParam._m0[23u].w;
        float _1827 = fma(_828, cbModelParam._m0[21u].z, fma(_827, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _826));
        float _1830 = fma(_828, cbModelParam._m0[22u].z, fma(_827, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _826));
        float _1833 = fma(_828, cbModelParam._m0[23u].z, fma(_827, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _826));
        float _1961;
        if (_1827 > 0.0)
        {
            _1961 = abs((1.0 - _1816) / _1827);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1827 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1816 + 1.0) / _1827);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1961 = frontier_phi_30_26_ladder;
        }
        float _2221;
        if (_1830 > 0.0)
        {
            _2221 = abs((1.0 - _1820) / _1830);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1830 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1820 + 1.0) / _1830);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2221 = frontier_phi_41_37_ladder;
        }
        float _2528;
        if (_1833 > 0.0)
        {
            _2528 = abs((1.0 - _1824) / _1833);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1833 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1824 + 1.0) / _1833);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2528 = frontier_phi_52_47_ladder;
        }
        float _2530 = isnan(_2221) ? _1961 : (isnan(_1961) ? _2221 : min(_1961, _2221));
        float _2531 = isnan(_2528) ? _2530 : (isnan(_2530) ? _2528 : min(_2530, _2528));
        float _2535 = (_2531 * _1827) + _1816;
        float _2536 = (_2531 * _1830) + _1820;
        float _2537 = (_2531 * _1833) + _1824;
        float _2538 = _2531 * 9.9999997473787516355514526367188e-05;
        float _2539 = (-1.0) - _2538;
        float _2541 = _2538 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2537 > _2541) || ((_2537 < _2539) || ((_2536 > _2541) || ((_2536 < _2539) || ((_2535 < _2539) || (_2535 > _2541))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2718 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2537, cbModelParam._m0[17u].z, fma(_2536, cbModelParam._m0[17u].y, _2535 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2537, cbModelParam._m0[18u].z, fma(_2536, cbModelParam._m0[18u].y, _2535 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2537, cbModelParam._m0[19u].z, fma(_2536, cbModelParam._m0[19u].y, _2535 * cbModelParam._m0[19u].x))), _1760);
            frontier_phi_27_52_ladder = _2718.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2718.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2718.y * cbModelParam._m0[1u].z;
        }
        _1852 = frontier_phi_27_52_ladder_1;
        _1854 = frontier_phi_27_52_ladder_2;
        _1856 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1836 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_826, _827, _828), _1760);
        _1852 = _1836.x * cbModelParam._m0[1u].z;
        _1854 = _1836.y * cbModelParam._m0[1u].z;
        _1856 = _1836.z * cbModelParam._m0[1u].z;
    }
    float _1868 = ((((1.0 - _851) * ((_839 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_851 * _839)) * _818;
    float _1869 = _1868 * ((cbModelParam._m0[1u].w * (_1852 - _1751)) + _1751);
    float _1870 = _1868 * ((cbModelParam._m0[1u].w * (_1854 - _1753)) + _1753);
    float _1871 = _1868 * ((cbModelParam._m0[1u].w * (_1856 - _1755)) + _1755);
    float _1874 = fma(_1871, cbSceneParam._m0[89u].z, fma(_1870, cbSceneParam._m0[89u].y, _1869 * cbSceneParam._m0[89u].x));
    float _1877 = fma(_1871, cbSceneParam._m0[90u].z, fma(_1870, cbSceneParam._m0[90u].y, _1869 * cbSceneParam._m0[90u].x));
    float _1880 = fma(_1871, cbSceneParam._m0[91u].z, fma(_1870, cbSceneParam._m0[91u].y, _1869 * cbSceneParam._m0[91u].x));
    vec4 _1888 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_757, _758));
    float _1890 = _1888.w;
    float _1902 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1890);
    float _1903 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1890);
    float _1904 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1890);
    uvec4 _1908 = floatBitsToUint(cbInstanceData._m0[_304 + 5u]);
    uint _1910 = _1908.x * 14u;
    uint _1911 = _1910 + 13u;
    float _1916 = _818 + (-1.0);
    float _1919 = (cbLight._m0[_1911].x * _1916) + 1.0;
    float _1920 = (cbLight._m0[_1911].y * _1916) + 1.0;
    uint _1922 = _1910 + 4u;
    float _1933 = dot(vec3(cbLight._m0[_1910].xyz), vec3(_718, _719, _720));
    float _1936 = isnan(1.0) ? _1919 : (isnan(_1919) ? 1.0 : min(_1919, 1.0));
    float _1937 = cbLight._m0[_1922].x * _1902;
    float _1938 = cbLight._m0[_1922].y * _1903;
    float _1939 = cbLight._m0[_1922].z * _1904;
    uint _1940 = _1910 + 5u;
    uint _1946 = _1910 | 1u;
    float _1952 = dot(vec3(cbLight._m0[_1946].xyz), vec3(_718, _719, _720));
    float _1955 = isnan(1.0) ? _1920 : (isnan(_1920) ? 1.0 : min(_1920, 1.0));
    float _2020;
    float _2021;
    float _2022;
    if (_723 == 0.0)
    {
        float _3792 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
        float _3803 = isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0));
        float _1974 = (isnan(1.0) ? _3792 : (isnan(_3792) ? 1.0 : min(_3792, 1.0))) * 0.3183098733425140380859375;
        float _1976 = (isnan(1.0) ? _3803 : (isnan(_3803) ? 1.0 : min(_3803, 1.0))) * 0.3183098733425140380859375;
        _2020 = ((cbLight._m0[_1940].x * _1955) * _1976) + ((_1937 * _1936) * _1974);
        _2021 = ((_1955 * cbLight._m0[_1940].y) * _1976) + ((_1938 * _1936) * _1974);
        _2022 = ((_1955 * cbLight._m0[_1940].z) * _1976) + ((_1939 * _1936) * _1974);
    }
    else
    {
        float _1986 = _1933 + _723;
        float _1989 = (_723 * 2.0) + 1.0;
        float _1990 = (isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0))) / _1989;
        float _1997 = _1952 + _723;
        float _1999 = (isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0))) / _1989;
        _2020 = (((_1999 * cbLight._m0[_1940].x) * _1955) + ((_1937 * _1990) * _1936)) * 0.3183098733425140380859375;
        _2021 = (((_1999 * cbLight._m0[_1940].y) * _1955) + ((_1938 * _1990) * _1936)) * 0.3183098733425140380859375;
        _2022 = (((_1999 * cbLight._m0[_1940].z) * _1955) + ((_1939 * _1990) * _1936)) * 0.3183098733425140380859375;
    }
    uint _2026 = _1910 + 8u;
    float _2042 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1910].w)) * _722) * 0.949999988079071044921875);
    float _2043 = _2042 * _2042;
    float _2044 = cbLight._m0[_1910].x + _497;
    float _2045 = cbLight._m0[_1910].y + _498;
    float _2046 = cbLight._m0[_1910].z + _499;
    float _2050 = inversesqrt(dot(vec3(_2044, _2045, _2046), vec3(_2044, _2045, _2046)));
    float _2051 = _2050 * _2044;
    float _2052 = _2050 * _2045;
    float _2053 = _2050 * _2046;
    float _2054 = dot(vec3(_718, _719, _720), vec3(cbLight._m0[_1910].xyz));
    float _3824 = isnan(0.0) ? _2054 : (isnan(_2054) ? 0.0 : max(_2054, 0.0));
    float _2057 = isnan(1.0) ? _3824 : (isnan(_3824) ? 1.0 : min(_3824, 1.0));
    float _3835 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
    float _2058 = isnan(1.0) ? _3835 : (isnan(_3835) ? 1.0 : min(_3835, 1.0));
    float _2059 = dot(vec3(_718, _719, _720), vec3(_2051, _2052, _2053));
    float _3846 = isnan(0.0) ? _2059 : (isnan(_2059) ? 0.0 : max(_2059, 0.0));
    float _2062 = isnan(1.0) ? _3846 : (isnan(_3846) ? 1.0 : min(_3846, 1.0));
    float _2063 = dot(vec3(cbLight._m0[_1910].xyz), vec3(_2051, _2052, _2053));
    float _3857 = isnan(0.0) ? _2063 : (isnan(_2063) ? 0.0 : max(_2063, 0.0));
    float _2067 = _2043 * _2043;
    float _2071 = ((_2062 * _2062) * (_2067 + (-1.0))) + 1.0;
    float _2082 = (exp2(log2(1.0 - (isnan(1.0) ? _3857 : (isnan(_3857) ? 1.0 : min(_3857, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2083 = 1.0 - _2043;
    float _2094 = (0.5 / (((_2058 * ((_2057 * _2083) + _2043)) + 9.9999999392252902907785028219223e-09) + (((_2058 * _2083) + _2043) * _2057))) * _2057;
    float _3868 = isnan(0.0) ? _2094 : (isnan(_2094) ? 0.0 : max(_2094, 0.0));
    float _2096 = (isnan(1.0) ? _3868 : (isnan(_3868) ? 1.0 : min(_3868, 1.0))) * (_2067 / ((_2071 * _2071) * 3.141590118408203125));
    uint _2112 = _1910 + 9u;
    float _2126 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1946].w)) * _722) * 0.949999988079071044921875);
    float _2127 = _2126 * _2126;
    float _2128 = cbLight._m0[_1946].x + _497;
    float _2129 = cbLight._m0[_1946].y + _498;
    float _2130 = cbLight._m0[_1946].z + _499;
    float _2134 = inversesqrt(dot(vec3(_2128, _2129, _2130), vec3(_2128, _2129, _2130)));
    float _2135 = _2134 * _2128;
    float _2136 = _2134 * _2129;
    float _2137 = _2134 * _2130;
    float _2138 = dot(vec3(_718, _719, _720), vec3(cbLight._m0[_1946].xyz));
    float _3879 = isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0));
    float _2141 = isnan(1.0) ? _3879 : (isnan(_3879) ? 1.0 : min(_3879, 1.0));
    float _2142 = dot(vec3(_718, _719, _720), vec3(_2135, _2136, _2137));
    float _3890 = isnan(0.0) ? _2142 : (isnan(_2142) ? 0.0 : max(_2142, 0.0));
    float _2145 = isnan(1.0) ? _3890 : (isnan(_3890) ? 1.0 : min(_3890, 1.0));
    float _2146 = dot(vec3(cbLight._m0[_1946].xyz), vec3(_2135, _2136, _2137));
    float _3901 = isnan(0.0) ? _2146 : (isnan(_2146) ? 0.0 : max(_2146, 0.0));
    float _2150 = _2127 * _2127;
    float _2154 = ((_2145 * _2145) * (_2150 + (-1.0))) + 1.0;
    float _2163 = (exp2(log2(1.0 - (isnan(1.0) ? _3901 : (isnan(_3901) ? 1.0 : min(_3901, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2164 = 1.0 - _2127;
    float _2174 = (0.5 / (((_2058 * ((_2141 * _2164) + _2127)) + 9.9999999392252902907785028219223e-09) + (((_2058 * _2164) + _2127) * _2141))) * _2141;
    float _3912 = isnan(0.0) ? _2174 : (isnan(_2174) ? 0.0 : max(_2174, 0.0));
    float _2176 = (isnan(1.0) ? _3912 : (isnan(_3912) ? 1.0 : min(_3912, 1.0))) * (_2150 / ((_2154 * _2154) * 3.141590118408203125));
    float _2186 = (((_2163 * cbLight._m0[_2112].x) * _2176) * _1955) + ((((cbLight._m0[_2026].x * _1902) * _2082) * _2096) * _1936);
    float _2187 = (((_2163 * cbLight._m0[_2112].y) * _2176) * _1955) + ((((cbLight._m0[_2026].y * _1903) * _2082) * _2096) * _1936);
    float _2188 = (((_2163 * cbLight._m0[_2112].z) * _2176) * _1955) + ((((cbLight._m0[_2026].z * _1904) * _2082) * _2096) * _1936);
    float _2324;
    float _2326;
    float _2328;
    float _2330;
    float _2332;
    float _2334;
    if (_1908.y == 0u)
    {
        float _2265 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2266 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2265;
        float _2267 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2265;
        float _2268 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2265;
        uvec4 _2280 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2281 = _2280.x;
        uint _2292 = uint((float(_2280.y) * floor(float(uint(cbSceneParam._m0[85u].y * _758) / _2281))) + floor(float(uint(cbSceneParam._m0[85u].x * _757) / _2281)));
        float _2302 = (log2(_2268 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2303 = isnan(0.0) ? _2302 : (isnan(_2302) ? 0.0 : max(_2302, 0.0));
        uint _2306 = uint(isnan(14.0) ? _2303 : (isnan(_2303) ? 14.0 : min(_2303, 14.0)));
        uint _2313 = _2280.z;
        float _2362;
        float _2364;
        float _2366;
        float _2368;
        float _2370;
        float _2372;
        if (((((1u << ((_2313 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2306 << 2u) + (_2292 << 6u)) >> 2u)).x) == 0u) || ((_2313 & 240u) == 0u))
        {
            _2362 = 0.0;
            _2364 = 0.0;
            _2366 = 0.0;
            _2368 = 0.0;
            _2370 = 0.0;
            _2372 = 0.0;
        }
        else
        {
            float _2363;
            float _2365;
            float _2367;
            float _2369;
            float _2371;
            float _2373;
            float _2554 = 0.0;
            float _2555 = 0.0;
            float _2556 = 0.0;
            float _2557 = 0.0;
            float _2558 = 0.0;
            float _2559 = 0.0;
            uint _2560 = 0u;
            uint _2569;
            bool _2570;
            for (;;)
            {
                _2569 = texelFetch(g_lightClassification, int((((_2306 << 5u) + (_2292 << 9u)) + (_2560 << 2u)) >> 2u)).x;
                _2570 = _2569 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2570)
                {
                    frontier_phi_58_pred = _2554;
                    frontier_phi_58_pred_1 = _2559;
                    frontier_phi_58_pred_2 = _2558;
                    frontier_phi_58_pred_3 = _2557;
                    frontier_phi_58_pred_4 = _2556;
                    frontier_phi_58_pred_5 = _2555;
                }
                else
                {
                    float _2791;
                    float _2792;
                    float _2793;
                    float _2794;
                    float _2795;
                    float _2796;
                    uint _2797;
                    _2791 = _2554;
                    _2792 = _2555;
                    _2793 = _2556;
                    _2794 = _2557;
                    _2795 = _2558;
                    _2796 = _2559;
                    _2797 = _2569;
                    float _2723;
                    float _2724;
                    float _2725;
                    float _2726;
                    float _2727;
                    float _2728;
                    for (;;)
                    {
                        uint _2801 = uint(findLSB(_2797)) + (_2560 << 5u);
                        uint _2798 = (_2797 + 4294967295u) & _2797;
                        uint _2803 = _2801 * 48u;
                        vec4 _2817 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2803)).x, texelFetch(g_PointLightRenderingBuffer, int(_2803 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2803 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2803 + 3u)).x));
                        uint _2823 = (_2801 * 48u) + 4u;
                        vec4 _2836 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2823)).x, texelFetch(g_PointLightRenderingBuffer, int(_2823 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2823 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2823 + 3u)).x));
                        float _2837 = _2836.x;
                        float _2838 = _2836.y;
                        float _2839 = _2836.z;
                        uint _2842 = (_2801 * 48u) + 8u;
                        vec3 _2853 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2842)).x, texelFetch(g_PointLightRenderingBuffer, int(_2842 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2842 + 2u)).x));
                        uint _2858 = (_2801 * 48u) + 12u;
                        vec2 _2866 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2858)).x, texelFetch(g_PointLightRenderingBuffer, int(_2858 + 1u)).x));
                        float _2872 = inversesqrt(dot(vec3(_2266, _2267, _2268), vec3(_2266, _2267, _2268)));
                        float _2873 = _2872 * _2266;
                        float _2874 = _2872 * _2267;
                        float _2875 = _2872 * _2268;
                        float _2876 = _2817.x - _2266;
                        float _2877 = _2817.y - _2267;
                        float _2878 = _2817.z - _2268;
                        float _2879 = dot(vec3(_2876, _2877, _2878), vec3(_2876, _2877, _2878));
                        float _2882 = inversesqrt(_2879);
                        float _2883 = _2882 * _2876;
                        float _2884 = _2882 * _2877;
                        float _2885 = _2882 * _2878;
                        float _2886 = dot(vec3(_776, _779, _782), vec3(_2883, _2884, _2885));
                        float _2891 = 1.0 - (_2879 * _2817.w);
                        float _3933 = isnan(0.0) ? _2891 : (isnan(_2891) ? 0.0 : max(_2891, 0.0));
                        float _2892 = isnan(1.0) ? _3933 : (isnan(_3933) ? 1.0 : min(_3933, 1.0));
                        float _2893 = sqrt(_2879) * _2836.w;
                        float _2896 = 1.39999997615814208984375 / (_2893 + 1.39999997615814208984375);
                        float _2897 = _2896 * _2896;
                        float _2898 = 1.0 - _2897;
                        float _2900 = (_2898 * _2898) * _723;
                        float _2903 = ((_2898 * _2886) + _2897) + _2900;
                        float _2908 = _2893 * _2893;
                        float _2913 = ((isnan(0.0) ? _2903 : (isnan(_2903) ? 0.0 : max(_2903, 0.0))) * _2892) / (((_2900 * 2.0) + 1.0) * ((_2908 * 0.699999988079071044921875) + 1.0));
                        float _2917 = dot(vec3(_2883, _2884, _2885), vec3(_2873, _2874, _2875));
                        float _3949 = isnan(0.0) ? _2917 : (isnan(_2917) ? 0.0 : max(_2917, 0.0));
                        float _2924 = dot(vec3((-0.0) - _2873, (-0.0) - _2874, (-0.0) - _2875), vec3(_776, _779, _782)) + 1.0;
                        float _2926 = (isnan(0.0) ? _2924 : (isnan(_2924) ? 0.0 : max(_2924, 0.0))) * 0.5;
                        float _2933 = ((_2926 * _2926) * _2866.x) * exp2((_2866.y * 32.0) * log2(isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0))));
                        float _2935 = _723 / (_723 + 1.0);
                        float _2951 = (-0.0) - _2266;
                        float _2952 = (-0.0) - _2267;
                        float _2953 = (-0.0) - _2268;
                        float _2957 = inversesqrt(dot(vec3(_2951, _2952, _2953), vec3(_2951, _2952, _2953)));
                        float _2958 = _2957 * _2951;
                        float _2959 = _2957 * _2952;
                        float _2960 = _2957 * _2953;
                        float _2968 = exp2(log2(1.0 / ((_2908 * 3.5) + 5.0)) * 0.25);
                        float _2969 = 1.0 - _839;
                        float _2976 = sqrt(1.0 - ((1.0 - (_2969 * _2969)) * (1.0 - (_2968 * _2968))));
                        float _2977 = _2976 * _2976;
                        float _2978 = _2977 * _2977;
                        float _2979 = _2958 + _2883;
                        float _2980 = _2959 + _2884;
                        float _2981 = _2960 + _2885;
                        float _2985 = inversesqrt(dot(vec3(_2979, _2980, _2981), vec3(_2979, _2980, _2981)));
                        float _2989 = dot(vec3(_776, _779, _782), vec3(_2958, _2959, _2960));
                        float _3965 = isnan(0.0) ? _2989 : (isnan(_2989) ? 0.0 : max(_2989, 0.0));
                        float _2992 = isnan(1.0) ? _3965 : (isnan(_3965) ? 1.0 : min(_3965, 1.0));
                        float _2993 = dot(vec3(_776, _779, _782), vec3(_2985 * _2979, _2985 * _2980, _2985 * _2981));
                        float _3976 = isnan(0.0) ? _2993 : (isnan(_2993) ? 0.0 : max(_2993, 0.0));
                        float _2996 = isnan(1.0) ? _3976 : (isnan(_3976) ? 1.0 : min(_3976, 1.0));
                        float _3000 = ((_2996 * _2996) * (_2978 + (-1.0))) + 1.0;
                        float _3001 = _2896 * _2977;
                        float _3002 = _3001 * _3001;
                        float _3005 = ((1.0 - _3002) * _2886) + _3002;
                        float _3987 = isnan(0.0) ? _3005 : (isnan(_3005) ? 0.0 : max(_3005, 0.0));
                        float _3006 = isnan(1.0) ? _3987 : (isnan(_3987) ? 1.0 : min(_3987, 1.0));
                        float _3007 = 1.0 - _2977;
                        float _3017 = (0.5 / (((_3006 * ((_2992 * _3007) + _2977)) + 9.9999999392252902907785028219223e-09) + (((_3006 * _3007) + _2977) * _2992))) * _3006;
                        float _3998 = isnan(0.0) ? _3017 : (isnan(_3017) ? 0.0 : max(_3017, 0.0));
                        float _3028 = (((_2978 * 3.1415927410125732421875) * (isnan(1.0) ? _3998 : (isnan(_3998) ? 1.0 : min(_3998, 1.0)))) / ((_3000 * _3000) * ((_2908 * 2.1991131305694580078125) + 3.141590118408203125))) * _2892;
                        _2726 = (((((_2837 * 0.3183098733425140380859375) * _2935) * _2933) + _2837) * _2913) + _2794;
                        _2727 = (((((_2838 * 0.3183098733425140380859375) * _2935) * _2933) + _2838) * _2913) + _2795;
                        _2728 = (((((_2839 * 0.3183098733425140380859375) * _2935) * _2933) + _2839) * _2913) + _2796;
                        _2723 = (_3028 * _2853.x) + _2791;
                        _2724 = (_3028 * _2853.y) + _2792;
                        _2725 = (_3028 * _2853.z) + _2793;
                        if (_2798 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2791 = _2723;
                            _2792 = _2724;
                            _2793 = _2725;
                            _2794 = _2726;
                            _2795 = _2727;
                            _2796 = _2728;
                            _2797 = _2798;
                        }
                    }
                    frontier_phi_58_pred = _2723;
                    frontier_phi_58_pred_1 = _2728;
                    frontier_phi_58_pred_2 = _2727;
                    frontier_phi_58_pred_3 = _2726;
                    frontier_phi_58_pred_4 = _2725;
                    frontier_phi_58_pred_5 = _2724;
                }
                _2363 = frontier_phi_58_pred;
                _2373 = frontier_phi_58_pred_1;
                _2371 = frontier_phi_58_pred_2;
                _2369 = frontier_phi_58_pred_3;
                _2367 = frontier_phi_58_pred_4;
                _2365 = frontier_phi_58_pred_5;
                uint _2561 = _2560 + 1u;
                if (_2561 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2554 = _2363;
                    _2555 = _2365;
                    _2556 = _2367;
                    _2557 = _2369;
                    _2558 = _2371;
                    _2559 = _2373;
                    _2560 = _2561;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2362 = _2363;
            _2364 = _2365;
            _2366 = _2367;
            _2368 = _2369;
            _2370 = _2371;
            _2372 = _2373;
        }
        float _2377 = isnan(1.0) ? _818 : (isnan(_818) ? 1.0 : min(_818, 1.0));
        _2324 = (_2377 * _2368) + _2020;
        _2326 = (_2377 * _2370) + _2021;
        _2328 = (_2377 * _2372) + _2022;
        _2330 = ((_2362 * 0.039999999105930328369140625) * _2377) + _2186;
        _2332 = ((_2364 * 0.039999999105930328369140625) * _2377) + _2187;
        _2334 = ((_2366 * 0.039999999105930328369140625) * _2377) + _2188;
    }
    else
    {
        _2324 = _2020;
        _2326 = _2021;
        _2328 = _2022;
        _2330 = _2186;
        _2332 = _2187;
        _2334 = _2188;
    }
    float _2451;
    float _2452;
    float _2453;
    if (_723 > 0.0)
    {
        uint _2384 = _1910 + 4u;
        float _2390 = (-0.0) - _497;
        float _2391 = (-0.0) - _498;
        float _2392 = (-0.0) - _499;
        float _2393 = dot(vec3(cbLight._m0[_1910].xyz), vec3(_2390, _2391, _2392));
        float _4014 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
        float _2397 = _829 + 1.0;
        float _2399 = (isnan(0.0) ? _2397 : (isnan(_2397) ? 0.0 : max(_2397, 0.0))) * 0.5;
        float _2404 = _2399 * _2399;
        float _2405 = _2404 * exp2(log2(isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0))) * 32.0);
        float _2407 = _723 / (_723 + 1.0);
        float _2408 = isnan(_1919) ? 1.0 : (isnan(1.0) ? _1919 : min(1.0, _1919));
        uint _2421 = _1910 + 5u;
        float _2427 = dot(vec3(cbLight._m0[_1946].xyz), vec3(_2390, _2391, _2392));
        float _4035 = isnan(0.0) ? _2427 : (isnan(_2427) ? 0.0 : max(_2427, 0.0));
        float _2434 = _2404 * exp2(log2(isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0))) * 32.0);
        float _2435 = isnan(_1920) ? 1.0 : (isnan(1.0) ? _1920 : min(1.0, _1920));
        _2451 = ((((_2434 * cbLight._m0[_2421].x) * _2407) * _2435) + ((((cbLight._m0[_2384].x * _1902) * _2405) * _2407) * _2408)) * 0.3183098733425140380859375;
        _2452 = ((((_2434 * cbLight._m0[_2421].y) * _2407) * _2435) + ((((cbLight._m0[_2384].y * _1903) * _2405) * _2407) * _2408)) * 0.3183098733425140380859375;
        _2453 = ((((_2434 * cbLight._m0[_2421].z) * _2407) * _2435) + ((((cbLight._m0[_2384].z * _1904) * _2405) * _2407) * _2408)) * 0.3183098733425140380859375;
    }
    else
    {
        _2451 = 0.0;
        _2452 = 0.0;
        _2453 = 0.0;
    }
    float _4051 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _4062 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _4073 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
    float _4084 = isnan(0.0) ? _721 : (isnan(_721) ? 0.0 : max(_721, 0.0));
    float _2468 = (isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0))) * ((_2324 + ((isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0))) * _818)) + _2451);
    float _2469 = (isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0))) * ((_2326 + ((isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0))) * _818)) + _2452);
    float _2470 = (isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0))) * ((_2328 + ((isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0))) * _818)) + _2453);
    float _2474 = 0.959999978542327880859375 - (exp2(log2(1.0 - _833) * 5.0) * 0.959999978542327880859375);
    float _2485 = (_2468 + ((_2330 + ((isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0))) * _1660)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _657.x) * _2474) - _2468) * _703);
    float _2487 = (_2469 + ((_2332 + ((isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0))) * _1660)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _657.y) * _2474) - _2469) * _703);
    float _2489 = (_2470 + ((_2334 + ((isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0))) * _1660)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _657.z) * _2474) - _2470) * _703);
    float _2494 = cbInstanceData._m0[_304 + 6u].w * (isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0)));
    float _2499 = _757 / cbSceneParam._m0[86u].x;
    float _2500 = _758 / cbSceneParam._m0[86u].y;
    vec4 _2514 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2499, _2500, (log2((isnan(cbSceneParam._m0[77u].w) ? _740 : (isnan(_740) ? cbSceneParam._m0[77u].w : min(_740, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2516 = _2514.x;
    float _2517 = _2514.y;
    float _2518 = _2514.z;
    float _2519 = _2514.w;
    float _2612;
    float _2614;
    float _2616;
    float _2618;
    if (_740 > cbSceneParam._m0[78u].w)
    {
        float _2575 = isnan(_740) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _740 : min(cbSceneParam._m0[80u].w, _740));
        float _2576 = _2575 / _740;
        float _2587 = _2576 * _296;
        float _2588 = _297 * _2576;
        float _2589 = (-0.0) - _2588;
        float _2590 = _2576 * _298;
        float _2592 = (cbSceneParam._m0[77u].w * _2589) / _2575;
        float _2593 = _2592 + cbSceneParam._m0[79u].w;
        float _2594 = cbSceneParam._m0[79u].w - _2588;
        float _2600 = sqrt(((_2587 * _2587) + (_2588 * _2588)) + (_2590 * _2590));
        float _2603 = (1.0 - (cbSceneParam._m0[77u].w / _2575)) * _2600;
        float _2608 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2610 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3033;
        if (abs((_2589 - _2592) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3033 = ((((_2593 > 0.0) ? exp2(_2608 * _2593) : (2.0 - exp2(_2610 * _2593))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2603;
        }
        else
        {
            float _2748 = 1.0 / cbSceneParam._m0[80u].x;
            float _2749 = isnan(_2594) ? _2593 : (isnan(_2593) ? _2594 : max(_2593, _2594));
            float _2750 = isnan(_2594) ? _2593 : (isnan(_2593) ? _2594 : min(_2593, _2594));
            float _2759 = isnan(0.0) ? _2749 : (isnan(_2749) ? 0.0 : min(_2749, 0.0));
            float _2760 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : min(_2750, 0.0));
            _3033 = ((abs(_2600 / _2589) * cbSceneParam._m0[80u].y) * ((((_2759 - _2760) * 2.0) - ((exp2(_2608 * (isnan(0.0) ? _2749 : (isnan(_2749) ? 0.0 : max(_2749, 0.0)))) - exp2(_2608 * (isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0))))) * _2748)) - ((exp2(_2610 * _2759) - exp2(_2610 * _2760)) * _2748))) + (_2603 * cbSceneParam._m0[80u].z);
        }
        vec4 _3035 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2499, _2500, 1.0), 0.0);
        float _3044 = exp2((_3033 * (-1.44269502162933349609375)) * (1.0 - _3035.w));
        float _3045 = log2(_3044);
        float _3061 = log2(_2519);
        _2612 = (exp2(_3061 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3045 * cbSceneParam._m0[78u].x)) * _3035.x) / cbSceneParam._m0[78u].x)) + _2516;
        _2614 = (exp2(_3061 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3045 * cbSceneParam._m0[78u].y)) * _3035.y) / cbSceneParam._m0[78u].y)) + _2517;
        _2616 = (exp2(_3061 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3045 * cbSceneParam._m0[78u].z)) * _3035.z) / cbSceneParam._m0[78u].z)) + _2518;
        _2618 = _3044 * _2519;
    }
    else
    {
        _2612 = _2516;
        _2614 = _2517;
        _2616 = _2518;
        _2618 = _2519;
    }
    bool _3071;
    float _2673;
    vec4 _2676;
    float _2678;
    vec4 _2680;
    float _2688;
    float _2689;
    float _2690;
    float _2691;
    bool _2701;
    for (;;)
    {
        bool _2630 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2631 = log2(_2618);
        float _2638 = exp2(_2631 * cbSceneParam._m0[78u].x) * _2485;
        float _2639 = exp2(_2631 * cbSceneParam._m0[78u].y) * _2487;
        float _2640 = exp2(_2631 * cbSceneParam._m0[78u].z) * _2489;
        vec4 _2648 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_757, _758));
        float _2650 = _2648.x;
        float _2671 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2650)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2650))) - _740) * cbMtdParam._m0[17u].y;
        float _4135 = isnan(0.0) ? _2671 : (isnan(_2671) ? 0.0 : max(_2671, 0.0));
        _2673 = _2494 * (isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0)));
        float _2674 = _747 + (-0.5);
        _2676 = cbMtdParam._m0[1u];
        _2678 = _2676.y * _2674;
        _2680 = cbMatDynParam._m0[0u];
        float _2687 = (roundEven(_2680.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2688 = _2687 * (_2630 ? _2638 : (_2638 + (cbSceneParam._m0[72u].w * _2612)));
        _2689 = _2687 * (_2630 ? _2639 : (_2639 + (cbSceneParam._m0[72u].w * _2614)));
        _2690 = _2687 * (_2630 ? _2640 : (_2640 + (cbSceneParam._m0[72u].w * _2616)));
        _2691 = _2674 * 0.999000012874603271484375;
        _2701 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2701)
        {
            if ((cbInstanceData._m0[_304 + 7u].x + _2691) < 0.5)
            {
                _3071 = true;
                break;
            }
        }
        uint _2783 = _795 + uint(_2680.w);
        if ((cbInstanceData._m0[_2783].w < 1.0) && ((cbInstanceData._m0[_2783].w + _2691) < 0.5))
        {
            _3071 = true;
            break;
        }
        if ((_2678 + _407) < _2676.x)
        {
            _3071 = true;
            break;
        }
        _3071 = false;
        break;
    }
    float _3076;
    if (_3071)
    {
        discard_state = true;
        _3076 = 0.0;
    }
    else
    {
        _3076 = _2673;
    }
    SV_Target.x = _2688;
    SV_Target.y = _2689;
    SV_Target.z = _2690;
    SV_Target.w = _3076;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2673;
    discard_exit();
}


