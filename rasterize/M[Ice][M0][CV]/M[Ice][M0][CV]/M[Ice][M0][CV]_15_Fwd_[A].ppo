#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1279;
float _3220;
float _3221;
float _3222;
float _3223;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _213 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _214 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _215 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _221 = inversesqrt(dot(vec3(_213, _214, _215), vec3(_213, _214, _215)));
    float _222 = _221 * _213;
    float _223 = _221 * _214;
    float _224 = _221 * _215;
    float _228 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _229 = _228 * NORMAL.x;
    float _230 = _228 * NORMAL.y;
    float _231 = _228 * NORMAL.z;
    float _235 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _236 = _235 * TANGENT.x;
    float _237 = _235 * TANGENT.y;
    float _238 = _235 * TANGENT.z;
    float _243;
    float _244;
    float _245;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _243 = (-0.0) - _229;
        _244 = (-0.0) - _230;
        _245 = (-0.0) - _231;
    }
    else
    {
        _243 = _229;
        _244 = _230;
        _245 = _231;
    }
    float _292 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _302 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _292);
    float _303 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _292);
    float _304 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _292);
    uint _310 = uint(roundEven(NORMAL.w)) * 13u;
    uint _315 = _310 + 1u;
    uint _319 = _310 + 2u;
    float _328 = sqrt(((cbInstanceData._m0[_315].x * cbInstanceData._m0[_315].x) + (cbInstanceData._m0[_310].x * cbInstanceData._m0[_310].x)) + (cbInstanceData._m0[_319].x * cbInstanceData._m0[_319].x));
    float _329 = _328 * TEXCOORD.z;
    float _330 = _328 * TEXCOORD.w;
    vec4 _343 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _329) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _330) + cbTextureTilingScale._m0[8u].w));
    vec4 _364 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _372 = (_364.x * 2.0) + (-1.0);
    float _374 = (_364.y * 2.0) + (-1.0);
    float _375 = dot(vec2(_372, _374), vec2(_372, _374));
    float _3232 = isnan(0.0) ? _375 : (isnan(_375) ? 0.0 : max(_375, 0.0));
    float _381 = sqrt(1.0 - (isnan(1.0) ? _3232 : (isnan(_3232) ? 1.0 : min(_3232, 1.0))));
    float _384 = fma(_381, _243, fma(_374, _236, _372 * _222));
    float _387 = fma(_381, _244, fma(_374, _237, _372 * _223));
    float _390 = fma(_381, _245, fma(_374, _238, _372 * _224));
    float _394 = inversesqrt(dot(vec3(_384, _387, _390), vec3(_384, _387, _390)));
    vec4 _427 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _432 = _427.w;
    float _444 = dot(vec3(_302, _303, _304), vec3(_222, _223, _224));
    float _447 = dot(vec3(_302, _303, _304), vec3(_236, _237, _238));
    float _450 = dot(vec3(_302, _303, _304), vec3(_243, _244, _245));
    float _456 = inversesqrt(dot(vec3(_444, _447, _450), vec3(_444, _447, _450)));
    float _478 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _498 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_444 * cbMtdParam._m0[14u].x) * _456) * _478) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_447 * cbMtdParam._m0[14u].x) * _456) * _478) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _521 = inversesqrt(dot(vec3(_302, _303, _304), vec3(_302, _303, _304)));
    float _522 = _521 * _302;
    float _523 = _521 * _303;
    float _524 = _521 * _304;
    float _525 = dot(vec4(_522, _523, _524, 0.0), vec4(_243, _244, _245, 0.0));
    float _528 = _525 - cbMtdParam._m0[15u].z;
    float _3243 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
    float _535 = exp2(log2(1.0 - (isnan(1.0) ? _3243 : (isnan(_3243) ? 1.0 : min(_3243, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _550 = ((((_427.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _498.x) * cbMtdParam._m0[9u].x) * ((_535 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _555 = ((((_427.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _498.y) * cbMtdParam._m0[9u].y) * ((_535 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _560 = ((((_427.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _498.z) * cbMtdParam._m0[9u].z) * ((_535 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _569 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _329) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _330) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3259 = isnan(0.0) ? _569 : (isnan(_569) ? 0.0 : max(_569, 0.0));
    float _570 = isnan(1.0) ? _3259 : (isnan(_3259) ? 1.0 : min(_3259, 1.0));
    float _577 = (_570 * ((_343.x * cbMtdParam._m0[10u].x) - _550)) + _550;
    float _578 = (((_343.y * cbMtdParam._m0[10u].y) - _555) * _570) + _555;
    float _579 = (((_343.z * cbMtdParam._m0[10u].z) - _560) * _570) + _560;
    vec4 _591 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _329) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _330) + cbTextureTilingScale._m0[9u].w));
    float _598 = (_591.x * 2.0) + (-1.0);
    float _599 = (_591.y * 2.0) + (-1.0);
    float _600 = dot(vec2(_598, _599), vec2(_598, _599));
    float _3270 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    vec4 _621 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _633 = cbMtdParam._m0[17u].z + _364.z;
    float _639 = (_633 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_621.z - _633));
    float _642 = ((_591.z - _639) * _570) + _639;
    float _648 = ((((_621.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _372;
    float _649 = ((((_621.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _374;
    float _661 = (((_598 - _648) + (_648 * cbMtdParam._m0[14u].z)) * _570) + _648;
    float _662 = (((_599 - _649) + (_649 * cbMtdParam._m0[14u].z)) * _570) + _649;
    float _663 = (_570 * (sqrt(1.0 - (isnan(1.0) ? _3270 : (isnan(_3270) ? 1.0 : min(_3270, 1.0)))) - _381)) + _381;
    float _679 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _681 = _679 - (_679 * _570);
    float _701 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + ((_394 * _384) * cbMtdParam._m0[18u].y));
    float _702 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + ((_394 * _387) * cbMtdParam._m0[18u].y));
    float _709 = isnan(cbInstanceData._m0[8u].x) ? _701 : (isnan(_701) ? cbInstanceData._m0[8u].x : max(_701, cbInstanceData._m0[8u].x));
    float _710 = isnan(cbInstanceData._m0[8u].y) ? _702 : (isnan(_702) ? cbInstanceData._m0[8u].y : max(_702, cbInstanceData._m0[8u].y));
    vec4 _714 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _709 : (isnan(_709) ? cbInstanceData._m0[8u].z : min(_709, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _710 : (isnan(_710) ? cbInstanceData._m0[8u].w : min(_710, cbInstanceData._m0[8u].w))));
    float _747 = _525 - cbMtdParam._m0[15u].x;
    float _3301 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
    float _757 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3301 : (isnan(_3301) ? 1.0 : min(_3301, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3317 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    float _758 = isnan(1.0) ? _3317 : (isnan(_3317) ? 1.0 : min(_3317, 1.0));
    float _760 = _758 - (_570 * _758);
    float _764 = fma(_663, _243, fma(_662, _236, _661 * _222));
    float _767 = fma(_663, _244, fma(_662, _237, _661 * _223));
    float _770 = fma(_663, _245, fma(_662, _238, _661 * _224));
    float _774 = inversesqrt(dot(vec3(_764, _767, _770), vec3(_764, _767, _770)));
    float _775 = _774 * _764;
    float _776 = _774 * _767;
    float _777 = _774 * _770;
    float _3328 = isnan(0.0) ? _432 : (isnan(_432) ? 0.0 : max(_432, 0.0));
    float _778 = isnan(1.0) ? _3328 : (isnan(_3328) ? 1.0 : min(_3328, 1.0));
    float _3339 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _779 = isnan(1.0) ? _3339 : (isnan(_3339) ? 1.0 : min(_3339, 1.0));
    float _780 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
    float _3355 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _3366 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _3377 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _797 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _802 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _804 = _802.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _959 = sqrt(((_302 * _302) + (_303 * _303)) + (_304 * _304));
        float _965 = (cbMatDynParam._m0[5u].x * _959) + cbMatDynParam._m0[5u].y;
        float _3388 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
        float _966 = isnan(1.0) ? _3388 : (isnan(_3388) ? 1.0 : min(_3388, 1.0));
        float _970 = (cbMatDynParam._m0[5u].z * _959) + cbMatDynParam._m0[5u].w;
        float _3399 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3399 : (isnan(_3399) ? 1.0 : min(_3399, 1.0))) - _966)) + _966) < ((_804 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _814 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _815 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _833 = fma(_777, cbSceneParam._m0[5u].z, fma(_776, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _775));
    float _836 = fma(_777, cbSceneParam._m0[6u].z, fma(_776, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _775));
    float _839 = fma(_777, cbSceneParam._m0[7u].z, fma(_776, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _775));
    uint _852 = _310 + 9u;
    uint _853 = _852 + uint(cbMatDynParam._m0[0u].w);
    float _859 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3355 : (isnan(_3355) ? 1.0 : min(_3355, 1.0)))) * cbInstanceData._m0[_853].x;
    float _860 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3366 : (isnan(_3366) ? 1.0 : min(_3366, 1.0)))) * cbInstanceData._m0[_853].y;
    float _861 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3377 : (isnan(_3377) ? 1.0 : min(_3377, 1.0)))) * cbInstanceData._m0[_853].z;
    float _3410 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
    float _862 = isnan(1.0) ? _3410 : (isnan(_3410) ? 1.0 : min(_3410, 1.0));
    float _3421 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
    float _863 = isnan(1.0) ? _3421 : (isnan(_3421) ? 1.0 : min(_3421, 1.0));
    float _3432 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
    float _864 = isnan(1.0) ? _3432 : (isnan(_3432) ? 1.0 : min(_3432, 1.0));
    vec4 _872 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _814, cbSceneParam._m0[86u].y * _815));
    float _875 = _872.x * TEXCOORD_5.w;
    float _876 = dot(vec3(_775, _776, _777), vec3(_522, _523, _524));
    float _879 = _876 * 2.0;
    float _883 = (_879 * _775) - _522;
    float _884 = (_879 * _776) - _523;
    float _885 = (_879 * _777) - _524;
    float _886 = dot(vec3(_522, _523, _524), vec3(_775, _776, _777));
    float _889 = abs(_886);
    float _3443 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    float _890 = isnan(1.0) ? _3443 : (isnan(_3443) ? 1.0 : min(_3443, 1.0));
    float _896 = sqrt(_779);
    float _908 = exp2((_896 * 5.0) * log2(1.0 - (_890 * 0.999000012874603271484375))) / (4.0 - (_896 * 3.0));
    float _940 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _944 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _948 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1278;
    float _1280;
    float _1281;
    float _1282;
    float _1283;
    float _1284;
    float _1285;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1003 = fma(_948, cbModelParam._m0[26u].z, fma(_944, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _940));
        float _1007 = fma(_948, cbModelParam._m0[27u].z, fma(_944, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _940));
        float _1011 = fma(_948, cbModelParam._m0[28u].z, fma(_944, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _940));
        float _1036 = _940 + _775;
        float _1037 = _944 + _776;
        float _1038 = _948 + _777;
        float _1048 = fma(_1038, cbModelParam._m0[26u].z, fma(_1037, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1036)) - _1003;
        float _1049 = fma(_1038, cbModelParam._m0[27u].z, fma(_1037, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1036)) - _1007;
        float _1050 = fma(_1038, cbModelParam._m0[28u].z, fma(_1037, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1036)) - _1011;
        float _1054 = inversesqrt(dot(vec3(_1048, _1049, _1050), vec3(_1048, _1049, _1050)));
        float _1067 = ((_1054 * _1048) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1003 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1068 = ((_1054 * _1049) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1007 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1069 = ((_1054 * _1050) / cbModelParam._m0[34u].z) + ((((((_1011 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1072 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1067, _1068, _1069), 0.0);
        vec4 _1079 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1067, _1068, _1069), 0.0);
        vec4 _1086 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1067, _1068, _1069), 0.0);
        vec4 _1093 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1067, _1068, _1069), 0.0);
        float _1106 = exp2((_1072.w + (-0.5)) * 20.0) * 2.0;
        float _1107 = _1106 * (_1072.x + (-0.5));
        float _1108 = _1106 * (_1072.y + (-0.5));
        float _1109 = _1106 * (_1072.z + (-0.5));
        float _1116 = exp2((_1079.w + (-0.5)) * 20.0) * 2.0;
        float _1117 = _1116 * (_1079.x + (-0.5));
        float _1118 = _1116 * (_1079.y + (-0.5));
        float _1119 = _1116 * (_1079.z + (-0.5));
        float _1126 = exp2((_1086.w + (-0.5)) * 20.0) * 2.0;
        float _1127 = _1126 * (_1086.x + (-0.5));
        float _1128 = _1126 * (_1086.y + (-0.5));
        float _1129 = _1126 * (_1086.z + (-0.5));
        float _1136 = exp2((_1093.w + (-0.5)) * 20.0) * 2.0;
        float _1137 = _1136 * (_1093.x + (-0.5));
        float _1138 = _1136 * (_1093.y + (-0.5));
        float _1139 = _1136 * (_1093.z + (-0.5));
        float _1140 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
        float _1141 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
        float _1142 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1143 = _1107 * 0.5;
        float _1144 = _1117 * 0.5;
        float _1145 = _1127 * 0.5;
        float _1146 = dot(vec3(_1143, _1144, _1145), vec3(_1143, _1144, _1145));
        float _1151 = (_1146 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1146);
        float _1160 = (dot(vec3(_775, _776, _777), vec3(_1151 * _1143, _1151 * _1144, _1151 * _1145)) + 1.0) * 0.5;
        float _3469 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1170 = sqrt(((_1144 * _1144) + (_1143 * _1143)) + (_1145 * _1145)) / (_1140 + 9.9999997473787516355514526367188e-06);
        float _3480 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1171 = isnan(1.0) ? _3480 : (isnan(_3480) ? 1.0 : min(_3480, 1.0));
        float _1172 = _1171 * 2.0;
        float _1176 = (1.0 - _1171) / (_1171 + 1.0);
        float _3491 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
        float _1177 = isnan(1.0) ? _3491 : (isnan(_3491) ? 1.0 : min(_3491, 1.0));
        float _1186 = ((((1.0 - _1177) * (_1172 + 2.0)) * exp2(log2(isnan(1.0) ? _3469 : (isnan(_3469) ? 1.0 : min(_3469, 1.0))) * (_1172 + 1.0))) + _1177) * _1140;
        float _1187 = _1108 * 0.5;
        float _1188 = _1118 * 0.5;
        float _1189 = _1128 * 0.5;
        float _1190 = dot(vec3(_1187, _1188, _1189), vec3(_1187, _1188, _1189));
        float _1195 = (_1190 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1190);
        float _1203 = (dot(vec3(_775, _776, _777), vec3(_1195 * _1187, _1195 * _1188, _1195 * _1189)) + 1.0) * 0.5;
        float _3502 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
        float _1212 = sqrt(((_1188 * _1188) + (_1187 * _1187)) + (_1189 * _1189)) / (_1141 + 9.9999997473787516355514526367188e-06);
        float _3513 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
        float _1213 = isnan(1.0) ? _3513 : (isnan(_3513) ? 1.0 : min(_3513, 1.0));
        float _1214 = _1213 * 2.0;
        float _1218 = (1.0 - _1213) / (_1213 + 1.0);
        float _3524 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
        float _1219 = isnan(1.0) ? _3524 : (isnan(_3524) ? 1.0 : min(_3524, 1.0));
        float _1228 = ((((1.0 - _1219) * (_1214 + 2.0)) * exp2(log2(isnan(1.0) ? _3502 : (isnan(_3502) ? 1.0 : min(_3502, 1.0))) * (_1214 + 1.0))) + _1219) * _1141;
        float _1229 = _1109 * 0.5;
        float _1230 = _1119 * 0.5;
        float _1231 = _1129 * 0.5;
        float _1232 = dot(vec3(_1229, _1230, _1231), vec3(_1229, _1230, _1231));
        float _1237 = (_1232 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1232);
        float _1245 = (dot(vec3(_775, _776, _777), vec3(_1237 * _1229, _1237 * _1230, _1237 * _1231)) + 1.0) * 0.5;
        float _3535 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1254 = sqrt(((_1230 * _1230) + (_1229 * _1229)) + (_1231 * _1231)) / (_1142 + 9.9999997473787516355514526367188e-06);
        float _3546 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
        float _1255 = isnan(1.0) ? _3546 : (isnan(_3546) ? 1.0 : min(_3546, 1.0));
        float _1256 = _1255 * 2.0;
        float _1260 = (1.0 - _1255) / (_1255 + 1.0);
        float _3557 = isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0));
        float _1261 = isnan(1.0) ? _3557 : (isnan(_3557) ? 1.0 : min(_3557, 1.0));
        float _1270 = ((((1.0 - _1261) * (_1256 + 2.0)) * exp2(log2(isnan(1.0) ? _3535 : (isnan(_3535) ? 1.0 : min(_3535, 1.0))) * (_1256 + 1.0))) + _1261) * _1142;
        _1278 = _1109;
        _1280 = _1108;
        _1281 = _1107;
        _1282 = _1119;
        _1283 = _1118;
        _1284 = _1117;
        _1285 = _1129;
        _1286 = _1128;
        _1287 = _1127;
        _1288 = _1142;
        _1289 = _1141;
        _1290 = _1140;
        _1291 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0)));
        _1292 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0)));
        _1293 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0)));
    }
    else
    {
        _1278 = _1279;
        _1280 = _1279;
        _1281 = _1279;
        _1282 = _1279;
        _1283 = _1279;
        _1284 = _1279;
        _1285 = _1279;
        _1286 = _1279;
        _1287 = _1279;
        _1288 = _1279;
        _1289 = _1279;
        _1290 = _1279;
        _1291 = 0.0;
        _1292 = 0.0;
        _1293 = 0.0;
    }
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1322 = fma(_948, cbModelParam._m0[30u].z, fma(_944, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _940));
        float _1326 = fma(_948, cbModelParam._m0[31u].z, fma(_944, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _940));
        float _1330 = fma(_948, cbModelParam._m0[32u].z, fma(_944, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _940));
        float _1353 = _940 + _775;
        float _1354 = _944 + _776;
        float _1355 = _948 + _777;
        float _1365 = fma(_1355, cbModelParam._m0[30u].z, fma(_1354, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1353)) - _1322;
        float _1366 = fma(_1355, cbModelParam._m0[31u].z, fma(_1354, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1353)) - _1326;
        float _1367 = fma(_1355, cbModelParam._m0[32u].z, fma(_1354, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1353)) - _1330;
        float _1371 = inversesqrt(dot(vec3(_1365, _1366, _1367), vec3(_1365, _1366, _1367)));
        float _1384 = ((_1371 * _1365) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1322 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1385 = ((_1371 * _1366) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1326 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1386 = ((_1371 * _1367) / cbModelParam._m0[35u].z) + ((((((_1330 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1388 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1384, _1385, _1386), 0.0);
        vec4 _1395 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1384, _1385, _1386), 0.0);
        vec4 _1402 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1384, _1385, _1386), 0.0);
        vec4 _1409 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1384, _1385, _1386), 0.0);
        float _1421 = exp2((_1388.w + (-0.5)) * 20.0) * 2.0;
        float _1422 = _1421 * (_1388.x + (-0.5));
        float _1423 = _1421 * (_1388.y + (-0.5));
        float _1424 = _1421 * (_1388.z + (-0.5));
        float _1431 = exp2((_1395.w + (-0.5)) * 20.0) * 2.0;
        float _1432 = _1431 * (_1395.x + (-0.5));
        float _1433 = _1431 * (_1395.y + (-0.5));
        float _1434 = _1431 * (_1395.z + (-0.5));
        float _1441 = exp2((_1402.w + (-0.5)) * 20.0) * 2.0;
        float _1442 = _1441 * (_1402.x + (-0.5));
        float _1443 = _1441 * (_1402.y + (-0.5));
        float _1444 = _1441 * (_1402.z + (-0.5));
        float _1451 = exp2((_1409.w + (-0.5)) * 20.0) * 2.0;
        float _1452 = _1451 * (_1409.x + (-0.5));
        float _1453 = _1451 * (_1409.y + (-0.5));
        float _1454 = _1451 * (_1409.z + (-0.5));
        float _1455 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
        float _1456 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1457 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1458 = _1422 * 0.5;
        float _1459 = _1432 * 0.5;
        float _1460 = _1442 * 0.5;
        float _1461 = dot(vec3(_1458, _1459, _1460), vec3(_1458, _1459, _1460));
        float _1466 = (_1461 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1461);
        float _1474 = (dot(vec3(_775, _776, _777), vec3(_1466 * _1458, _1466 * _1459, _1466 * _1460)) + 1.0) * 0.5;
        float _3598 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1483 = sqrt(((_1459 * _1459) + (_1458 * _1458)) + (_1460 * _1460)) / (_1455 + 9.9999997473787516355514526367188e-06);
        float _3609 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1484 = isnan(1.0) ? _3609 : (isnan(_3609) ? 1.0 : min(_3609, 1.0));
        float _1485 = _1484 * 2.0;
        float _1489 = (1.0 - _1484) / (_1484 + 1.0);
        float _3620 = isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0));
        float _1490 = isnan(1.0) ? _3620 : (isnan(_3620) ? 1.0 : min(_3620, 1.0));
        float _1499 = ((((1.0 - _1490) * (_1485 + 2.0)) * exp2(log2(isnan(1.0) ? _3598 : (isnan(_3598) ? 1.0 : min(_3598, 1.0))) * (_1485 + 1.0))) + _1490) * _1455;
        float _1500 = _1423 * 0.5;
        float _1501 = _1433 * 0.5;
        float _1502 = _1443 * 0.5;
        float _1503 = dot(vec3(_1500, _1501, _1502), vec3(_1500, _1501, _1502));
        float _1508 = (_1503 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1503);
        float _1516 = (dot(vec3(_775, _776, _777), vec3(_1508 * _1500, _1508 * _1501, _1508 * _1502)) + 1.0) * 0.5;
        float _3631 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
        float _1525 = sqrt(((_1501 * _1501) + (_1500 * _1500)) + (_1502 * _1502)) / (_1456 + 9.9999997473787516355514526367188e-06);
        float _3642 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
        float _1526 = isnan(1.0) ? _3642 : (isnan(_3642) ? 1.0 : min(_3642, 1.0));
        float _1527 = _1526 * 2.0;
        float _1531 = (1.0 - _1526) / (_1526 + 1.0);
        float _3653 = isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0));
        float _1532 = isnan(1.0) ? _3653 : (isnan(_3653) ? 1.0 : min(_3653, 1.0));
        float _1541 = ((((1.0 - _1532) * (_1527 + 2.0)) * exp2(log2(isnan(1.0) ? _3631 : (isnan(_3631) ? 1.0 : min(_3631, 1.0))) * (_1527 + 1.0))) + _1532) * _1456;
        float _1542 = _1424 * 0.5;
        float _1543 = _1434 * 0.5;
        float _1544 = _1444 * 0.5;
        float _1545 = dot(vec3(_1542, _1543, _1544), vec3(_1542, _1543, _1544));
        float _1550 = (_1545 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1545);
        float _1558 = (dot(vec3(_775, _776, _777), vec3(_1550 * _1542, _1550 * _1543, _1550 * _1544)) + 1.0) * 0.5;
        float _3664 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1567 = sqrt(((_1543 * _1543) + (_1542 * _1542)) + (_1544 * _1544)) / (_1457 + 9.9999997473787516355514526367188e-06);
        float _3675 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
        float _1568 = isnan(1.0) ? _3675 : (isnan(_3675) ? 1.0 : min(_3675, 1.0));
        float _1569 = _1568 * 2.0;
        float _1573 = (1.0 - _1568) / (_1568 + 1.0);
        float _3686 = isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0));
        float _1574 = isnan(1.0) ? _3686 : (isnan(_3686) ? 1.0 : min(_3686, 1.0));
        float _1583 = ((((1.0 - _1574) * (_1569 + 2.0)) * exp2(log2(isnan(1.0) ? _3664 : (isnan(_3664) ? 1.0 : min(_3664, 1.0))) * (_1569 + 1.0))) + _1574) * _1457;
        _1591 = _1424;
        _1592 = _1423;
        _1593 = _1422;
        _1594 = _1434;
        _1595 = _1433;
        _1596 = _1432;
        _1597 = _1444;
        _1598 = _1443;
        _1599 = _1442;
        _1600 = _1457;
        _1601 = _1456;
        _1602 = _1455;
        _1603 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0)));
        _1604 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0)));
        _1605 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0)));
    }
    else
    {
        _1591 = _1279;
        _1592 = _1279;
        _1593 = _1279;
        _1594 = _1279;
        _1595 = _1279;
        _1596 = _1279;
        _1597 = _1279;
        _1598 = _1279;
        _1599 = _1279;
        _1600 = _1279;
        _1601 = _1279;
        _1602 = _1279;
        _1603 = 0.0;
        _1604 = 0.0;
        _1605 = 0.0;
    }
    float _1615 = (cbModelParam._m0[1u].x * (_1603 - _1291)) + _1291;
    float _1616 = (cbModelParam._m0[1u].x * (_1604 - _1292)) + _1292;
    float _1617 = (cbModelParam._m0[1u].x * (_1605 - _1293)) + _1293;
    float _1638 = fma(_1617, cbSceneParam._m0[89u].z, fma(_1616, cbSceneParam._m0[89u].y, _1615 * cbSceneParam._m0[89u].x));
    float _1641 = fma(_1617, cbSceneParam._m0[90u].z, fma(_1616, cbSceneParam._m0[90u].y, _1615 * cbSceneParam._m0[90u].x));
    float _1644 = fma(_1617, cbSceneParam._m0[91u].z, fma(_1616, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1615));
    float _1659 = _883 * 0.5;
    float _1660 = _884 * 0.5;
    float _1661 = _885 * 0.5;
    float _1662 = dot(vec4(_1659, _1660, _1661, 1.0), vec4(_1593, _1596, _1599, _1602));
    float _1665 = dot(vec4(_1659, _1660, _1661, 1.0), vec4(_1592, _1595, _1598, _1601));
    float _1668 = dot(vec4(_1659, _1660, _1661, 1.0), vec4(_1591, _1594, _1597, _1600));
    float _1702;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1675 = dot(vec4(_1659, _1660, _1661, 1.0), vec4(_1278, _1282, _1285, _1288));
        float _1679 = dot(vec4(_1659, _1660, _1661, 1.0), vec4(_1280, _1283, _1286, _1289));
        float _1683 = dot(vec4(_1659, _1660, _1661, 1.0), vec4(_1281, _1284, _1287, _1290));
        float _1690 = dot(vec4(cbModelParam._m0[39u]), vec4(_1659, _1660, _1661, 1.0));
        _1702 = dot(vec3(isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0)), isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0)), isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1690) ? 0.0 : (isnan(0.0) ? _1690 : max(0.0, _1690))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1702 = 1.0;
    }
    float _1713;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1704 = dot(vec4(cbModelParam._m0[40u]), vec4(_1659, _1660, _1661, 1.0));
        _1713 = dot(vec3(isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0)), isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0)), isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1704) ? 0.0 : (isnan(0.0) ? _1704 : max(0.0, _1704))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1713 = 1.0;
    }
    float _1717 = (_1713 * cbModelParam._m0[1u].x) + (_1702 * (1.0 - cbModelParam._m0[1u].x));
    float _1727 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _779);
    float _1728 = isnan(_1727) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1727 : min(cbModelParam._m0[25u].z, _1727));
    float _1808;
    float _1810;
    float _1812;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1775 = fma(_948, cbModelParam._m0[13u].z, fma(_944, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _940)) + cbModelParam._m0[13u].w;
        float _1779 = fma(_948, cbModelParam._m0[14u].z, fma(_944, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _940)) + cbModelParam._m0[14u].w;
        float _1783 = fma(_948, cbModelParam._m0[15u].z, fma(_944, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _940)) + cbModelParam._m0[15u].w;
        float _1786 = fma(_885, cbModelParam._m0[13u].z, fma(_884, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _883));
        float _1789 = fma(_885, cbModelParam._m0[14u].z, fma(_884, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _883));
        float _1792 = fma(_885, cbModelParam._m0[15u].z, fma(_884, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _883));
        float _1820;
        if (_1786 > 0.0)
        {
            _1820 = abs((1.0 - _1775) / _1786);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1786 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1775 + 1.0) / _1786);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1820 = frontier_phi_19_17_ladder;
        }
        float _1992;
        if (_1789 > 0.0)
        {
            _1992 = abs((1.0 - _1779) / _1789);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1789 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1779 + 1.0) / _1789);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1992 = frontier_phi_28_24_ladder;
        }
        float _2227;
        if (_1792 > 0.0)
        {
            _2227 = abs((1.0 - _1783) / _1792);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1792 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1783 + 1.0) / _1792);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2227 = frontier_phi_39_35_ladder;
        }
        float _2229 = isnan(_1992) ? _1820 : (isnan(_1820) ? _1992 : min(_1820, _1992));
        float _2230 = isnan(_2227) ? _2229 : (isnan(_2229) ? _2227 : min(_2229, _2227));
        float _2234 = (_2230 * _1786) + _1775;
        float _2235 = (_2230 * _1789) + _1779;
        float _2236 = (_2230 * _1792) + _1783;
        float _2237 = _2230 * 9.9999997473787516355514526367188e-05;
        float _2239 = (-1.0) - _2237;
        float _2241 = _2237 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2236 > _2241) || ((_2236 < _2239) || ((_2235 > _2241) || ((_2235 < _2239) || ((_2234 < _2239) || (_2234 > _2241))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2386 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2236, cbModelParam._m0[9u].z, fma(_2235, cbModelParam._m0[9u].y, _2234 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2236, cbModelParam._m0[10u].z, fma(_2235, cbModelParam._m0[10u].y, _2234 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2236, cbModelParam._m0[11u].z, fma(_2235, cbModelParam._m0[11u].y, _2234 * cbModelParam._m0[11u].x))), _1728);
            frontier_phi_18_39_ladder = _2386.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2386.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2386.x * cbModelParam._m0[1u].y;
        }
        _1808 = frontier_phi_18_39_ladder_2;
        _1810 = frontier_phi_18_39_ladder_1;
        _1812 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1796 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_883, _884, _885), _1728);
        _1808 = _1796.x * cbModelParam._m0[1u].y;
        _1810 = _1796.y * cbModelParam._m0[1u].y;
        _1812 = _1796.z * cbModelParam._m0[1u].y;
    }
    float _1816 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _779);
    float _1817 = isnan(_1816) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1816 : min(cbModelParam._m0[25u].w, _1816));
    float _1909;
    float _1911;
    float _1913;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1873 = fma(_948, cbModelParam._m0[21u].z, fma(_944, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _940)) + cbModelParam._m0[21u].w;
        float _1877 = fma(_948, cbModelParam._m0[22u].z, fma(_944, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _940)) + cbModelParam._m0[22u].w;
        float _1881 = fma(_948, cbModelParam._m0[23u].z, fma(_944, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _940)) + cbModelParam._m0[23u].w;
        float _1884 = fma(_885, cbModelParam._m0[21u].z, fma(_884, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _883));
        float _1887 = fma(_885, cbModelParam._m0[22u].z, fma(_884, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _883));
        float _1890 = fma(_885, cbModelParam._m0[23u].z, fma(_884, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _883));
        float _1997;
        if (_1884 > 0.0)
        {
            _1997 = abs((1.0 - _1873) / _1884);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1884 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1873 + 1.0) / _1884);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1997 = frontier_phi_30_26_ladder;
        }
        float _2254;
        if (_1887 > 0.0)
        {
            _2254 = abs((1.0 - _1877) / _1887);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1887 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1877 + 1.0) / _1887);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2254 = frontier_phi_41_37_ladder;
        }
        float _2558;
        if (_1890 > 0.0)
        {
            _2558 = abs((1.0 - _1881) / _1890);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1890 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1881 + 1.0) / _1890);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2558 = frontier_phi_52_47_ladder;
        }
        float _2560 = isnan(_2254) ? _1997 : (isnan(_1997) ? _2254 : min(_1997, _2254));
        float _2561 = isnan(_2558) ? _2560 : (isnan(_2560) ? _2558 : min(_2560, _2558));
        float _2565 = (_2561 * _1884) + _1873;
        float _2566 = (_2561 * _1887) + _1877;
        float _2567 = (_2561 * _1890) + _1881;
        float _2568 = _2561 * 9.9999997473787516355514526367188e-05;
        float _2569 = (-1.0) - _2568;
        float _2571 = _2568 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2567 > _2571) || ((_2567 < _2569) || ((_2566 > _2571) || ((_2566 < _2569) || ((_2565 < _2569) || (_2565 > _2571))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2748 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2567, cbModelParam._m0[17u].z, fma(_2566, cbModelParam._m0[17u].y, _2565 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2567, cbModelParam._m0[18u].z, fma(_2566, cbModelParam._m0[18u].y, _2565 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2567, cbModelParam._m0[19u].z, fma(_2566, cbModelParam._m0[19u].y, _2565 * cbModelParam._m0[19u].x))), _1817);
            frontier_phi_27_52_ladder = _2748.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2748.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2748.y * cbModelParam._m0[1u].z;
        }
        _1909 = frontier_phi_27_52_ladder_1;
        _1911 = frontier_phi_27_52_ladder_2;
        _1913 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1893 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_883, _884, _885), _1817);
        _1909 = _1893.x * cbModelParam._m0[1u].z;
        _1911 = _1893.y * cbModelParam._m0[1u].z;
        _1913 = _1893.z * cbModelParam._m0[1u].z;
    }
    float _1925 = ((((1.0 - _908) * ((_896 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_908 * _896)) * _875;
    float _1926 = _1925 * ((cbModelParam._m0[1u].w * (_1909 - _1808)) + _1808);
    float _1927 = _1925 * ((cbModelParam._m0[1u].w * (_1911 - _1810)) + _1810);
    float _1928 = _1925 * ((cbModelParam._m0[1u].w * (_1913 - _1812)) + _1812);
    float _1931 = fma(_1928, cbSceneParam._m0[89u].z, fma(_1927, cbSceneParam._m0[89u].y, _1926 * cbSceneParam._m0[89u].x));
    float _1934 = fma(_1928, cbSceneParam._m0[90u].z, fma(_1927, cbSceneParam._m0[90u].y, _1926 * cbSceneParam._m0[90u].x));
    float _1937 = fma(_1928, cbSceneParam._m0[91u].z, fma(_1927, cbSceneParam._m0[91u].y, _1926 * cbSceneParam._m0[91u].x));
    uvec4 _1947 = floatBitsToUint(cbInstanceData._m0[_310 + 5u]);
    uint _1949 = _1947.x * 14u;
    uint _1950 = _1949 + 13u;
    float _1955 = _875 + (-1.0);
    float _1958 = (cbLight._m0[_1950].x * _1955) + 1.0;
    float _1959 = (cbLight._m0[_1950].y * _1955) + 1.0;
    uint _1961 = _1949 + 4u;
    float _1972 = dot(vec3(cbLight._m0[_1949].xyz), vec3(_775, _776, _777));
    float _1975 = isnan(1.0) ? _1958 : (isnan(_1958) ? 1.0 : min(_1958, 1.0));
    uint _1976 = _1949 + 5u;
    uint _1982 = _1949 | 1u;
    float _1988 = dot(vec3(cbLight._m0[_1982].xyz), vec3(_775, _776, _777));
    float _1991 = isnan(1.0) ? _1959 : (isnan(_1959) ? 1.0 : min(_1959, 1.0));
    float _2056;
    float _2057;
    float _2058;
    if (_780 == 0.0)
    {
        float _3822 = isnan(0.0) ? _1972 : (isnan(_1972) ? 0.0 : max(_1972, 0.0));
        float _3833 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
        float _2010 = (isnan(1.0) ? _3822 : (isnan(_3822) ? 1.0 : min(_3822, 1.0))) * 0.3183098733425140380859375;
        float _2012 = (isnan(1.0) ? _3833 : (isnan(_3833) ? 1.0 : min(_3833, 1.0))) * 0.3183098733425140380859375;
        _2056 = ((cbLight._m0[_1976].x * _1991) * _2012) + ((cbLight._m0[_1961].x * _1975) * _2010);
        _2057 = ((_1991 * cbLight._m0[_1976].y) * _2012) + ((_1975 * cbLight._m0[_1961].y) * _2010);
        _2058 = ((_1991 * cbLight._m0[_1976].z) * _2012) + ((_1975 * cbLight._m0[_1961].z) * _2010);
    }
    else
    {
        float _2022 = _1972 + _780;
        float _2025 = (_780 * 2.0) + 1.0;
        float _2026 = (isnan(0.0) ? _2022 : (isnan(_2022) ? 0.0 : max(_2022, 0.0))) / _2025;
        float _2033 = _1988 + _780;
        float _2035 = (isnan(0.0) ? _2033 : (isnan(_2033) ? 0.0 : max(_2033, 0.0))) / _2025;
        _2056 = (((_2035 * cbLight._m0[_1976].x) * _1991) + ((_2026 * cbLight._m0[_1961].x) * _1975)) * 0.3183098733425140380859375;
        _2057 = (((_2035 * cbLight._m0[_1976].y) * _1991) + ((_2026 * cbLight._m0[_1961].y) * _1975)) * 0.3183098733425140380859375;
        _2058 = (((_2035 * cbLight._m0[_1976].z) * _1991) + ((_2026 * cbLight._m0[_1961].z) * _1975)) * 0.3183098733425140380859375;
    }
    uint _2062 = _1949 + 8u;
    float _2078 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1949].w)) * _779) * 0.949999988079071044921875);
    float _2079 = _2078 * _2078;
    float _2080 = cbLight._m0[_1949].x + _522;
    float _2081 = cbLight._m0[_1949].y + _523;
    float _2082 = cbLight._m0[_1949].z + _524;
    float _2086 = inversesqrt(dot(vec3(_2080, _2081, _2082), vec3(_2080, _2081, _2082)));
    float _2087 = _2086 * _2080;
    float _2088 = _2086 * _2081;
    float _2089 = _2086 * _2082;
    float _2090 = dot(vec3(_775, _776, _777), vec3(cbLight._m0[_1949].xyz));
    float _3854 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
    float _2093 = isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0));
    float _3865 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _2094 = isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0));
    float _2095 = dot(vec3(_775, _776, _777), vec3(_2087, _2088, _2089));
    float _3876 = isnan(0.0) ? _2095 : (isnan(_2095) ? 0.0 : max(_2095, 0.0));
    float _2098 = isnan(1.0) ? _3876 : (isnan(_3876) ? 1.0 : min(_3876, 1.0));
    float _2099 = dot(vec3(cbLight._m0[_1949].xyz), vec3(_2087, _2088, _2089));
    float _3887 = isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0));
    float _2103 = _2079 * _2079;
    float _2107 = ((_2098 * _2098) * (_2103 + (-1.0))) + 1.0;
    float _2118 = (exp2(log2(1.0 - (isnan(1.0) ? _3887 : (isnan(_3887) ? 1.0 : min(_3887, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2119 = 1.0 - _2079;
    float _2130 = (0.5 / (((_2094 * ((_2093 * _2119) + _2079)) + 9.9999999392252902907785028219223e-09) + (((_2094 * _2119) + _2079) * _2093))) * _2093;
    float _3898 = isnan(0.0) ? _2130 : (isnan(_2130) ? 0.0 : max(_2130, 0.0));
    float _2132 = (isnan(1.0) ? _3898 : (isnan(_3898) ? 1.0 : min(_3898, 1.0))) * (_2103 / ((_2107 * _2107) * 3.141590118408203125));
    uint _2145 = _1949 + 9u;
    float _2159 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1982].w)) * _779) * 0.949999988079071044921875);
    float _2160 = _2159 * _2159;
    float _2161 = cbLight._m0[_1982].x + _522;
    float _2162 = cbLight._m0[_1982].y + _523;
    float _2163 = cbLight._m0[_1982].z + _524;
    float _2167 = inversesqrt(dot(vec3(_2161, _2162, _2163), vec3(_2161, _2162, _2163)));
    float _2168 = _2167 * _2161;
    float _2169 = _2167 * _2162;
    float _2170 = _2167 * _2163;
    float _2171 = dot(vec3(_775, _776, _777), vec3(cbLight._m0[_1982].xyz));
    float _3909 = isnan(0.0) ? _2171 : (isnan(_2171) ? 0.0 : max(_2171, 0.0));
    float _2174 = isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0));
    float _2175 = dot(vec3(_775, _776, _777), vec3(_2168, _2169, _2170));
    float _3920 = isnan(0.0) ? _2175 : (isnan(_2175) ? 0.0 : max(_2175, 0.0));
    float _2178 = isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0));
    float _2179 = dot(vec3(cbLight._m0[_1982].xyz), vec3(_2168, _2169, _2170));
    float _3931 = isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0));
    float _2183 = _2160 * _2160;
    float _2187 = ((_2178 * _2178) * (_2183 + (-1.0))) + 1.0;
    float _2196 = (exp2(log2(1.0 - (isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2197 = 1.0 - _2160;
    float _2207 = (0.5 / (((_2094 * ((_2174 * _2197) + _2160)) + 9.9999999392252902907785028219223e-09) + (((_2094 * _2197) + _2160) * _2174))) * _2174;
    float _3942 = isnan(0.0) ? _2207 : (isnan(_2207) ? 0.0 : max(_2207, 0.0));
    float _2209 = (isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0))) * (_2183 / ((_2187 * _2187) * 3.141590118408203125));
    float _2219 = (((_2196 * cbLight._m0[_2145].x) * _2209) * _1991) + (((_2118 * cbLight._m0[_2062].x) * _2132) * _1975);
    float _2220 = (((_2196 * cbLight._m0[_2145].y) * _2209) * _1991) + (((_2118 * cbLight._m0[_2062].y) * _2132) * _1975);
    float _2221 = (((_2196 * cbLight._m0[_2145].z) * _2209) * _1991) + (((_2118 * cbLight._m0[_2062].z) * _2132) * _1975);
    float _2357;
    float _2359;
    float _2361;
    float _2363;
    float _2365;
    float _2367;
    if (_1947.y == 0u)
    {
        float _2298 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2299 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2298;
        float _2300 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2298;
        float _2301 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2298;
        uvec4 _2313 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2314 = _2313.x;
        uint _2325 = uint((float(_2313.y) * floor(float(uint(cbSceneParam._m0[85u].y * _815) / _2314))) + floor(float(uint(cbSceneParam._m0[85u].x * _814) / _2314)));
        float _2335 = (log2(_2301 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2336 = isnan(0.0) ? _2335 : (isnan(_2335) ? 0.0 : max(_2335, 0.0));
        uint _2339 = uint(isnan(14.0) ? _2336 : (isnan(_2336) ? 14.0 : min(_2336, 14.0)));
        uint _2346 = _2313.z;
        float _2395;
        float _2397;
        float _2399;
        float _2401;
        float _2403;
        float _2405;
        if (((((1u << ((_2346 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2339 << 2u) + (_2325 << 6u)) >> 2u)).x) == 0u) || ((_2346 & 240u) == 0u))
        {
            _2395 = 0.0;
            _2397 = 0.0;
            _2399 = 0.0;
            _2401 = 0.0;
            _2403 = 0.0;
            _2405 = 0.0;
        }
        else
        {
            float _2396;
            float _2398;
            float _2400;
            float _2402;
            float _2404;
            float _2406;
            float _2584 = 0.0;
            float _2585 = 0.0;
            float _2586 = 0.0;
            float _2587 = 0.0;
            float _2588 = 0.0;
            float _2589 = 0.0;
            uint _2590 = 0u;
            uint _2599;
            bool _2600;
            for (;;)
            {
                _2599 = texelFetch(g_lightClassification, int((((_2339 << 5u) + (_2325 << 9u)) + (_2590 << 2u)) >> 2u)).x;
                _2600 = _2599 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2600)
                {
                    frontier_phi_58_pred = _2584;
                    frontier_phi_58_pred_1 = _2589;
                    frontier_phi_58_pred_2 = _2588;
                    frontier_phi_58_pred_3 = _2587;
                    frontier_phi_58_pred_4 = _2586;
                    frontier_phi_58_pred_5 = _2585;
                }
                else
                {
                    float _2821;
                    float _2822;
                    float _2823;
                    float _2824;
                    float _2825;
                    float _2826;
                    uint _2827;
                    _2821 = _2584;
                    _2822 = _2585;
                    _2823 = _2586;
                    _2824 = _2587;
                    _2825 = _2588;
                    _2826 = _2589;
                    _2827 = _2599;
                    float _2753;
                    float _2754;
                    float _2755;
                    float _2756;
                    float _2757;
                    float _2758;
                    for (;;)
                    {
                        uint _2831 = uint(findLSB(_2827)) + (_2590 << 5u);
                        uint _2828 = (_2827 + 4294967295u) & _2827;
                        uint _2833 = _2831 * 48u;
                        vec4 _2847 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2833)).x, texelFetch(g_PointLightRenderingBuffer, int(_2833 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2833 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2833 + 3u)).x));
                        uint _2853 = (_2831 * 48u) + 4u;
                        vec4 _2866 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2853)).x, texelFetch(g_PointLightRenderingBuffer, int(_2853 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2853 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2853 + 3u)).x));
                        float _2867 = _2866.x;
                        float _2868 = _2866.y;
                        float _2869 = _2866.z;
                        uint _2872 = (_2831 * 48u) + 8u;
                        vec3 _2883 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2872)).x, texelFetch(g_PointLightRenderingBuffer, int(_2872 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2872 + 2u)).x));
                        uint _2888 = (_2831 * 48u) + 12u;
                        vec2 _2896 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2888)).x, texelFetch(g_PointLightRenderingBuffer, int(_2888 + 1u)).x));
                        float _2902 = inversesqrt(dot(vec3(_2299, _2300, _2301), vec3(_2299, _2300, _2301)));
                        float _2903 = _2902 * _2299;
                        float _2904 = _2902 * _2300;
                        float _2905 = _2902 * _2301;
                        float _2906 = _2847.x - _2299;
                        float _2907 = _2847.y - _2300;
                        float _2908 = _2847.z - _2301;
                        float _2909 = dot(vec3(_2906, _2907, _2908), vec3(_2906, _2907, _2908));
                        float _2912 = inversesqrt(_2909);
                        float _2913 = _2912 * _2906;
                        float _2914 = _2912 * _2907;
                        float _2915 = _2912 * _2908;
                        float _2916 = dot(vec3(_833, _836, _839), vec3(_2913, _2914, _2915));
                        float _2921 = 1.0 - (_2909 * _2847.w);
                        float _3963 = isnan(0.0) ? _2921 : (isnan(_2921) ? 0.0 : max(_2921, 0.0));
                        float _2922 = isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0));
                        float _2923 = sqrt(_2909) * _2866.w;
                        float _2926 = 1.39999997615814208984375 / (_2923 + 1.39999997615814208984375);
                        float _2927 = _2926 * _2926;
                        float _2928 = 1.0 - _2927;
                        float _2930 = (_2928 * _2928) * _780;
                        float _2933 = ((_2928 * _2916) + _2927) + _2930;
                        float _2938 = _2923 * _2923;
                        float _2943 = ((isnan(0.0) ? _2933 : (isnan(_2933) ? 0.0 : max(_2933, 0.0))) * _2922) / (((_2930 * 2.0) + 1.0) * ((_2938 * 0.699999988079071044921875) + 1.0));
                        float _2947 = dot(vec3(_2913, _2914, _2915), vec3(_2903, _2904, _2905));
                        float _3979 = isnan(0.0) ? _2947 : (isnan(_2947) ? 0.0 : max(_2947, 0.0));
                        float _2954 = dot(vec3((-0.0) - _2903, (-0.0) - _2904, (-0.0) - _2905), vec3(_833, _836, _839)) + 1.0;
                        float _2956 = (isnan(0.0) ? _2954 : (isnan(_2954) ? 0.0 : max(_2954, 0.0))) * 0.5;
                        float _2963 = ((_2956 * _2956) * _2896.x) * exp2((_2896.y * 32.0) * log2(isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0))));
                        float _2965 = _780 / (_780 + 1.0);
                        float _2981 = (-0.0) - _2299;
                        float _2982 = (-0.0) - _2300;
                        float _2983 = (-0.0) - _2301;
                        float _2987 = inversesqrt(dot(vec3(_2981, _2982, _2983), vec3(_2981, _2982, _2983)));
                        float _2988 = _2987 * _2981;
                        float _2989 = _2987 * _2982;
                        float _2990 = _2987 * _2983;
                        float _2998 = exp2(log2(1.0 / ((_2938 * 3.5) + 5.0)) * 0.25);
                        float _2999 = 1.0 - _896;
                        float _3006 = sqrt(1.0 - ((1.0 - (_2999 * _2999)) * (1.0 - (_2998 * _2998))));
                        float _3007 = _3006 * _3006;
                        float _3008 = _3007 * _3007;
                        float _3009 = _2988 + _2913;
                        float _3010 = _2989 + _2914;
                        float _3011 = _2990 + _2915;
                        float _3015 = inversesqrt(dot(vec3(_3009, _3010, _3011), vec3(_3009, _3010, _3011)));
                        float _3019 = dot(vec3(_833, _836, _839), vec3(_2988, _2989, _2990));
                        float _3995 = isnan(0.0) ? _3019 : (isnan(_3019) ? 0.0 : max(_3019, 0.0));
                        float _3022 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
                        float _3023 = dot(vec3(_833, _836, _839), vec3(_3015 * _3009, _3015 * _3010, _3015 * _3011));
                        float _4006 = isnan(0.0) ? _3023 : (isnan(_3023) ? 0.0 : max(_3023, 0.0));
                        float _3026 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
                        float _3030 = ((_3026 * _3026) * (_3008 + (-1.0))) + 1.0;
                        float _3031 = _2926 * _3007;
                        float _3032 = _3031 * _3031;
                        float _3035 = ((1.0 - _3032) * _2916) + _3032;
                        float _4017 = isnan(0.0) ? _3035 : (isnan(_3035) ? 0.0 : max(_3035, 0.0));
                        float _3036 = isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0));
                        float _3037 = 1.0 - _3007;
                        float _3047 = (0.5 / (((_3036 * ((_3022 * _3037) + _3007)) + 9.9999999392252902907785028219223e-09) + (((_3036 * _3037) + _3007) * _3022))) * _3036;
                        float _4028 = isnan(0.0) ? _3047 : (isnan(_3047) ? 0.0 : max(_3047, 0.0));
                        float _3058 = (((_3008 * 3.1415927410125732421875) * (isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0)))) / ((_3030 * _3030) * ((_2938 * 2.1991131305694580078125) + 3.141590118408203125))) * _2922;
                        _2756 = (((((_2867 * 0.3183098733425140380859375) * _2965) * _2963) + _2867) * _2943) + _2824;
                        _2757 = (((((_2868 * 0.3183098733425140380859375) * _2965) * _2963) + _2868) * _2943) + _2825;
                        _2758 = (((((_2869 * 0.3183098733425140380859375) * _2965) * _2963) + _2869) * _2943) + _2826;
                        _2753 = (_3058 * _2883.x) + _2821;
                        _2754 = (_3058 * _2883.y) + _2822;
                        _2755 = (_3058 * _2883.z) + _2823;
                        if (_2828 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2821 = _2753;
                            _2822 = _2754;
                            _2823 = _2755;
                            _2824 = _2756;
                            _2825 = _2757;
                            _2826 = _2758;
                            _2827 = _2828;
                        }
                    }
                    frontier_phi_58_pred = _2753;
                    frontier_phi_58_pred_1 = _2758;
                    frontier_phi_58_pred_2 = _2757;
                    frontier_phi_58_pred_3 = _2756;
                    frontier_phi_58_pred_4 = _2755;
                    frontier_phi_58_pred_5 = _2754;
                }
                _2396 = frontier_phi_58_pred;
                _2406 = frontier_phi_58_pred_1;
                _2404 = frontier_phi_58_pred_2;
                _2402 = frontier_phi_58_pred_3;
                _2400 = frontier_phi_58_pred_4;
                _2398 = frontier_phi_58_pred_5;
                uint _2591 = _2590 + 1u;
                if (_2591 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2584 = _2396;
                    _2585 = _2398;
                    _2586 = _2400;
                    _2587 = _2402;
                    _2588 = _2404;
                    _2589 = _2406;
                    _2590 = _2591;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2395 = _2396;
            _2397 = _2398;
            _2399 = _2400;
            _2401 = _2402;
            _2403 = _2404;
            _2405 = _2406;
        }
        float _2410 = isnan(1.0) ? _875 : (isnan(_875) ? 1.0 : min(_875, 1.0));
        _2357 = (_2410 * _2401) + _2056;
        _2359 = (_2410 * _2403) + _2057;
        _2361 = (_2410 * _2405) + _2058;
        _2363 = ((_2395 * 0.039999999105930328369140625) * _2410) + _2219;
        _2365 = ((_2397 * 0.039999999105930328369140625) * _2410) + _2220;
        _2367 = ((_2399 * 0.039999999105930328369140625) * _2410) + _2221;
    }
    else
    {
        _2357 = _2056;
        _2359 = _2057;
        _2361 = _2058;
        _2363 = _2219;
        _2365 = _2220;
        _2367 = _2221;
    }
    float _2481;
    float _2482;
    float _2483;
    if (_780 > 0.0)
    {
        uint _2417 = _1949 + 4u;
        float _2423 = (-0.0) - _522;
        float _2424 = (-0.0) - _523;
        float _2425 = (-0.0) - _524;
        float _2426 = dot(vec3(cbLight._m0[_1949].xyz), vec3(_2423, _2424, _2425));
        float _4044 = isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0));
        float _2430 = _886 + 1.0;
        float _2432 = (isnan(0.0) ? _2430 : (isnan(_2430) ? 0.0 : max(_2430, 0.0))) * 0.5;
        float _2437 = _2432 * _2432;
        float _2438 = _2437 * exp2(log2(isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0))) * 32.0);
        float _2440 = _780 / (_780 + 1.0);
        float _2441 = isnan(_1958) ? 1.0 : (isnan(1.0) ? _1958 : min(1.0, _1958));
        uint _2451 = _1949 + 5u;
        float _2457 = dot(vec3(cbLight._m0[_1982].xyz), vec3(_2423, _2424, _2425));
        float _4065 = isnan(0.0) ? _2457 : (isnan(_2457) ? 0.0 : max(_2457, 0.0));
        float _2464 = _2437 * exp2(log2(isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0))) * 32.0);
        float _2465 = isnan(_1959) ? 1.0 : (isnan(1.0) ? _1959 : min(1.0, _1959));
        _2481 = ((((_2464 * cbLight._m0[_2451].x) * _2440) * _2465) + (((_2438 * cbLight._m0[_2417].x) * _2440) * _2441)) * 0.3183098733425140380859375;
        _2482 = ((((_2464 * cbLight._m0[_2451].y) * _2440) * _2465) + (((_2438 * cbLight._m0[_2417].y) * _2440) * _2441)) * 0.3183098733425140380859375;
        _2483 = ((((_2464 * cbLight._m0[_2451].z) * _2440) * _2465) + (((_2438 * cbLight._m0[_2417].z) * _2440) * _2441)) * 0.3183098733425140380859375;
    }
    else
    {
        _2481 = 0.0;
        _2482 = 0.0;
        _2483 = 0.0;
    }
    float _4081 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _4092 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _4103 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _4114 = isnan(0.0) ? _778 : (isnan(_778) ? 0.0 : max(_778, 0.0));
    float _2498 = (isnan(1.0) ? _4081 : (isnan(_4081) ? 1.0 : min(_4081, 1.0))) * ((_2357 + ((isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0))) * _875)) + _2481);
    float _2499 = (isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0))) * ((_2359 + ((isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0))) * _875)) + _2482);
    float _2500 = (isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0))) * ((_2361 + ((isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0))) * _875)) + _2483);
    float _2504 = 0.959999978542327880859375 - (exp2(log2(1.0 - _890) * 5.0) * 0.959999978542327880859375);
    float _2515 = (_2498 + ((_2363 + ((isnan(0.0) ? _1931 : (isnan(_1931) ? 0.0 : max(_1931, 0.0))) * _1717)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _714.x) * _2504) - _2498) * _760);
    float _2517 = (_2499 + ((_2365 + ((isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0))) * _1717)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _714.y) * _2504) - _2499) * _760);
    float _2519 = (_2500 + ((_2367 + ((isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0))) * _1717)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _714.z) * _2504) - _2500) * _760);
    float _2524 = cbInstanceData._m0[_310 + 6u].w * (isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0)));
    float _2529 = _814 / cbSceneParam._m0[86u].x;
    float _2530 = _815 / cbSceneParam._m0[86u].y;
    vec4 _2544 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2529, _2530, (log2((isnan(cbSceneParam._m0[77u].w) ? _797 : (isnan(_797) ? cbSceneParam._m0[77u].w : min(_797, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2546 = _2544.x;
    float _2547 = _2544.y;
    float _2548 = _2544.z;
    float _2549 = _2544.w;
    float _2642;
    float _2644;
    float _2646;
    float _2648;
    if (_797 > cbSceneParam._m0[78u].w)
    {
        float _2605 = isnan(_797) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _797 : min(cbSceneParam._m0[80u].w, _797));
        float _2606 = _2605 / _797;
        float _2617 = _2606 * _302;
        float _2618 = _303 * _2606;
        float _2619 = (-0.0) - _2618;
        float _2620 = _2606 * _304;
        float _2622 = (cbSceneParam._m0[77u].w * _2619) / _2605;
        float _2623 = _2622 + cbSceneParam._m0[79u].w;
        float _2624 = cbSceneParam._m0[79u].w - _2618;
        float _2630 = sqrt(((_2617 * _2617) + (_2618 * _2618)) + (_2620 * _2620));
        float _2633 = (1.0 - (cbSceneParam._m0[77u].w / _2605)) * _2630;
        float _2638 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2640 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3063;
        if (abs((_2619 - _2622) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3063 = ((((_2623 > 0.0) ? exp2(_2638 * _2623) : (2.0 - exp2(_2640 * _2623))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2633;
        }
        else
        {
            float _2778 = 1.0 / cbSceneParam._m0[80u].x;
            float _2779 = isnan(_2624) ? _2623 : (isnan(_2623) ? _2624 : max(_2623, _2624));
            float _2780 = isnan(_2624) ? _2623 : (isnan(_2623) ? _2624 : min(_2623, _2624));
            float _2789 = isnan(0.0) ? _2779 : (isnan(_2779) ? 0.0 : min(_2779, 0.0));
            float _2790 = isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : min(_2780, 0.0));
            _3063 = ((abs(_2630 / _2619) * cbSceneParam._m0[80u].y) * ((((_2789 - _2790) * 2.0) - ((exp2(_2638 * (isnan(0.0) ? _2779 : (isnan(_2779) ? 0.0 : max(_2779, 0.0)))) - exp2(_2638 * (isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : max(_2780, 0.0))))) * _2778)) - ((exp2(_2640 * _2789) - exp2(_2640 * _2790)) * _2778))) + (_2633 * cbSceneParam._m0[80u].z);
        }
        vec4 _3065 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2529, _2530, 1.0), 0.0);
        float _3074 = exp2((_3063 * (-1.44269502162933349609375)) * (1.0 - _3065.w));
        float _3075 = log2(_3074);
        float _3091 = log2(_2549);
        _2642 = (exp2(_3091 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3075 * cbSceneParam._m0[78u].x)) * _3065.x) / cbSceneParam._m0[78u].x)) + _2546;
        _2644 = (exp2(_3091 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3075 * cbSceneParam._m0[78u].y)) * _3065.y) / cbSceneParam._m0[78u].y)) + _2547;
        _2646 = (exp2(_3091 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3075 * cbSceneParam._m0[78u].z)) * _3065.z) / cbSceneParam._m0[78u].z)) + _2548;
        _2648 = _3074 * _2549;
    }
    else
    {
        _2642 = _2546;
        _2644 = _2547;
        _2646 = _2548;
        _2648 = _2549;
    }
    bool _3101;
    float _2703;
    vec4 _2706;
    float _2708;
    vec4 _2710;
    float _2718;
    float _2719;
    float _2720;
    float _2721;
    bool _2731;
    for (;;)
    {
        bool _2660 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2661 = log2(_2648);
        float _2668 = exp2(_2661 * cbSceneParam._m0[78u].x) * _2515;
        float _2669 = exp2(_2661 * cbSceneParam._m0[78u].y) * _2517;
        float _2670 = exp2(_2661 * cbSceneParam._m0[78u].z) * _2519;
        vec4 _2678 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_814, _815));
        float _2680 = _2678.x;
        float _2701 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2680)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2680))) - _797) * cbMtdParam._m0[17u].y;
        float _4165 = isnan(0.0) ? _2701 : (isnan(_2701) ? 0.0 : max(_2701, 0.0));
        _2703 = _2524 * (isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0)));
        float _2704 = _804 + (-0.5);
        _2706 = cbMtdParam._m0[1u];
        _2708 = _2706.y * _2704;
        _2710 = cbMatDynParam._m0[0u];
        float _2717 = (roundEven(_2710.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2718 = _2717 * (_2660 ? _2668 : (_2668 + (cbSceneParam._m0[72u].w * _2642)));
        _2719 = _2717 * (_2660 ? _2669 : (_2669 + (cbSceneParam._m0[72u].w * _2644)));
        _2720 = _2717 * (_2660 ? _2670 : (_2670 + (cbSceneParam._m0[72u].w * _2646)));
        _2721 = _2704 * 0.999000012874603271484375;
        _2731 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2731)
        {
            if ((cbInstanceData._m0[_310 + 7u].x + _2721) < 0.5)
            {
                _3101 = true;
                break;
            }
        }
        uint _2813 = _852 + uint(_2710.w);
        if ((cbInstanceData._m0[_2813].w < 1.0) && ((cbInstanceData._m0[_2813].w + _2721) < 0.5))
        {
            _3101 = true;
            break;
        }
        if ((_2708 + _432) < _2706.x)
        {
            _3101 = true;
            break;
        }
        _3101 = false;
        break;
    }
    float _3106;
    if (_3101)
    {
        discard_state = true;
        _3106 = 0.0;
    }
    else
    {
        _3106 = _2703;
    }
    SV_Target.x = _2718;
    SV_Target.y = _2719;
    SV_Target.z = _2720;
    SV_Target.w = _3106;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2703;
    discard_exit();
}


