#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1224;
float _3451;
float _3452;
float _3453;
float _3454;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _209 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _210 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _211 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _217 = inversesqrt(dot(vec3(_209, _210, _211), vec3(_209, _210, _211)));
    float _218 = _217 * _209;
    float _219 = _217 * _210;
    float _220 = _217 * _211;
    float _224 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _225 = _224 * NORMAL.x;
    float _226 = _224 * NORMAL.y;
    float _227 = _224 * NORMAL.z;
    float _231 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _232 = _231 * TANGENT.x;
    float _233 = _231 * TANGENT.y;
    float _234 = _231 * TANGENT.z;
    float _239;
    float _240;
    float _241;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _239 = (-0.0) - _225;
        _240 = (-0.0) - _226;
        _241 = (-0.0) - _227;
    }
    else
    {
        _239 = _225;
        _240 = _226;
        _241 = _227;
    }
    float _288 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _298 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _288);
    float _299 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _288);
    float _300 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _288);
    uint _306 = uint(roundEven(NORMAL.w)) * 13u;
    uint _311 = _306 + 1u;
    uint _315 = _306 + 2u;
    float _324 = sqrt(((cbInstanceData._m0[_311].x * cbInstanceData._m0[_311].x) + (cbInstanceData._m0[_306].x * cbInstanceData._m0[_306].x)) + (cbInstanceData._m0[_315].x * cbInstanceData._m0[_315].x));
    float _325 = _324 * TEXCOORD.z;
    float _326 = _324 * TEXCOORD.w;
    vec4 _340 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _349 = (_340.x * 2.0) + (-1.0);
    float _351 = (_340.y * 2.0) + (-1.0);
    float _352 = dot(vec2(_349, _351), vec2(_349, _351));
    float _3463 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _358 = sqrt(1.0 - (isnan(1.0) ? _3463 : (isnan(_3463) ? 1.0 : min(_3463, 1.0))));
    float _361 = fma(_358, _239, fma(_351, _232, _349 * _218));
    float _364 = fma(_358, _240, fma(_351, _233, _349 * _219));
    float _367 = fma(_358, _241, fma(_351, _234, _349 * _220));
    float _371 = inversesqrt(dot(vec3(_361, _364, _367), vec3(_361, _364, _367)));
    vec4 _404 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _409 = _404.w;
    float _421 = dot(vec3(_298, _299, _300), vec3(_218, _219, _220));
    float _424 = dot(vec3(_298, _299, _300), vec3(_232, _233, _234));
    float _427 = dot(vec3(_298, _299, _300), vec3(_239, _240, _241));
    float _433 = inversesqrt(dot(vec3(_421, _424, _427), vec3(_421, _424, _427)));
    float _455 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _475 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_421 * cbMtdParam._m0[14u].x) * _433) * _455) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_424 * cbMtdParam._m0[14u].x) * _433) * _455) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _498 = inversesqrt(dot(vec3(_298, _299, _300), vec3(_298, _299, _300)));
    float _499 = _498 * _298;
    float _500 = _498 * _299;
    float _501 = _498 * _300;
    float _502 = dot(vec4(_499, _500, _501, 0.0), vec4(_239, _240, _241, 0.0));
    float _505 = _502 - cbMtdParam._m0[15u].z;
    float _3474 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    float _512 = exp2(log2(1.0 - (isnan(1.0) ? _3474 : (isnan(_3474) ? 1.0 : min(_3474, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _527 = ((((_404.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _475.x) * cbMtdParam._m0[9u].x) * ((_512 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _532 = ((((_404.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _475.y) * cbMtdParam._m0[9u].y) * ((_512 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _537 = ((((_404.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _475.z) * cbMtdParam._m0[9u].z) * ((_512 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _546 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _325) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _326) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3490 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _547 = isnan(1.0) ? _3490 : (isnan(_3490) ? 1.0 : min(_3490, 1.0));
    float _554 = (_547 * (cbMtdParam._m0[11u].x - _527)) + _527;
    float _555 = ((cbMtdParam._m0[11u].y - _532) * _547) + _532;
    float _556 = ((cbMtdParam._m0[11u].z - _537) * _547) + _537;
    vec4 _568 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _325) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _326) + cbTextureTilingScale._m0[9u].w));
    float _575 = (_568.x * 2.0) + (-1.0);
    float _576 = (_568.y * 2.0) + (-1.0);
    float _577 = dot(vec2(_575, _576), vec2(_575, _576));
    float _3501 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _591 = (cbMtdParam._m0[16u].y + _340.z) + cbMtdParam._m0[17u].z;
    float _594 = ((_568.z - _591) * _547) + _591;
    float _606 = (((_575 - _349) + (cbMtdParam._m0[14u].z * _349)) * _547) + _349;
    float _607 = (((_576 - _351) + (cbMtdParam._m0[14u].z * _351)) * _547) + _351;
    float _608 = (_547 * (sqrt(1.0 - (isnan(1.0) ? _3501 : (isnan(_3501) ? 1.0 : min(_3501, 1.0)))) - _358)) + _358;
    float _624 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _626 = _624 - (_624 * _547);
    float _646 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + ((_371 * _361) * cbMtdParam._m0[18u].y));
    float _647 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + ((_371 * _364) * cbMtdParam._m0[18u].y));
    float _654 = isnan(cbInstanceData._m0[8u].x) ? _646 : (isnan(_646) ? cbInstanceData._m0[8u].x : max(_646, cbInstanceData._m0[8u].x));
    float _655 = isnan(cbInstanceData._m0[8u].y) ? _647 : (isnan(_647) ? cbInstanceData._m0[8u].y : max(_647, cbInstanceData._m0[8u].y));
    vec4 _659 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _654 : (isnan(_654) ? cbInstanceData._m0[8u].z : min(_654, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _655 : (isnan(_655) ? cbInstanceData._m0[8u].w : min(_655, cbInstanceData._m0[8u].w))));
    float _692 = _502 - cbMtdParam._m0[15u].x;
    float _3532 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    float _702 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3532 : (isnan(_3532) ? 1.0 : min(_3532, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3548 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _703 = isnan(1.0) ? _3548 : (isnan(_3548) ? 1.0 : min(_3548, 1.0));
    float _705 = _703 - (_547 * _703);
    float _709 = fma(_608, _239, fma(_607, _232, _606 * _218));
    float _712 = fma(_608, _240, fma(_607, _233, _606 * _219));
    float _715 = fma(_608, _241, fma(_607, _234, _606 * _220));
    float _719 = inversesqrt(dot(vec3(_709, _712, _715), vec3(_709, _712, _715)));
    float _720 = _719 * _709;
    float _721 = _719 * _712;
    float _722 = _719 * _715;
    float _3559 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _723 = isnan(1.0) ? _3559 : (isnan(_3559) ? 1.0 : min(_3559, 1.0));
    float _3570 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _724 = isnan(1.0) ? _3570 : (isnan(_3570) ? 1.0 : min(_3570, 1.0));
    float _725 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
    float _3586 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0));
    float _3597 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
    float _3608 = isnan(0.0) ? _556 : (isnan(_556) ? 0.0 : max(_556, 0.0));
    float _742 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _747 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _749 = _747.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _904 = sqrt(((_298 * _298) + (_299 * _299)) + (_300 * _300));
        float _910 = (cbMatDynParam._m0[5u].x * _904) + cbMatDynParam._m0[5u].y;
        float _3619 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
        float _911 = isnan(1.0) ? _3619 : (isnan(_3619) ? 1.0 : min(_3619, 1.0));
        float _915 = (cbMatDynParam._m0[5u].z * _904) + cbMatDynParam._m0[5u].w;
        float _3630 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3630 : (isnan(_3630) ? 1.0 : min(_3630, 1.0))) - _911)) + _911) < ((_749 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _759 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _760 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _778 = fma(_722, cbSceneParam._m0[5u].z, fma(_721, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _720));
    float _781 = fma(_722, cbSceneParam._m0[6u].z, fma(_721, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _720));
    float _784 = fma(_722, cbSceneParam._m0[7u].z, fma(_721, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _720));
    uint _797 = _306 + 9u;
    uint _798 = _797 + uint(cbMatDynParam._m0[0u].w);
    float _804 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3586 : (isnan(_3586) ? 1.0 : min(_3586, 1.0)))) * cbInstanceData._m0[_798].x;
    float _805 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3597 : (isnan(_3597) ? 1.0 : min(_3597, 1.0)))) * cbInstanceData._m0[_798].y;
    float _806 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3608 : (isnan(_3608) ? 1.0 : min(_3608, 1.0)))) * cbInstanceData._m0[_798].z;
    float _3641 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
    float _807 = isnan(1.0) ? _3641 : (isnan(_3641) ? 1.0 : min(_3641, 1.0));
    float _3652 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _808 = isnan(1.0) ? _3652 : (isnan(_3652) ? 1.0 : min(_3652, 1.0));
    float _3663 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _809 = isnan(1.0) ? _3663 : (isnan(_3663) ? 1.0 : min(_3663, 1.0));
    vec4 _817 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _759, cbSceneParam._m0[86u].y * _760));
    float _820 = _817.x * TEXCOORD_5.w;
    float _821 = dot(vec3(_720, _721, _722), vec3(_499, _500, _501));
    float _824 = _821 * 2.0;
    float _828 = (_824 * _720) - _499;
    float _829 = (_824 * _721) - _500;
    float _830 = (_824 * _722) - _501;
    float _831 = dot(vec3(_499, _500, _501), vec3(_720, _721, _722));
    float _834 = abs(_831);
    float _3674 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _835 = isnan(1.0) ? _3674 : (isnan(_3674) ? 1.0 : min(_3674, 1.0));
    float _841 = sqrt(_724);
    float _853 = exp2((_841 * 5.0) * log2(1.0 - (_835 * 0.999000012874603271484375))) / (4.0 - (_841 * 3.0));
    float _885 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _889 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _893 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1223;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _948 = fma(_893, cbModelParam._m0[26u].z, fma(_889, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _885));
        float _952 = fma(_893, cbModelParam._m0[27u].z, fma(_889, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _885));
        float _956 = fma(_893, cbModelParam._m0[28u].z, fma(_889, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _885));
        float _981 = _885 + _720;
        float _982 = _889 + _721;
        float _983 = _893 + _722;
        float _993 = fma(_983, cbModelParam._m0[26u].z, fma(_982, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _981)) - _948;
        float _994 = fma(_983, cbModelParam._m0[27u].z, fma(_982, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _981)) - _952;
        float _995 = fma(_983, cbModelParam._m0[28u].z, fma(_982, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _981)) - _956;
        float _999 = inversesqrt(dot(vec3(_993, _994, _995), vec3(_993, _994, _995)));
        float _1012 = ((_999 * _993) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_948 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1013 = ((_999 * _994) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_952 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1014 = ((_999 * _995) / cbModelParam._m0[34u].z) + ((((((_956 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1017 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1012, _1013, _1014), 0.0);
        vec4 _1024 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1012, _1013, _1014), 0.0);
        vec4 _1031 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1012, _1013, _1014), 0.0);
        vec4 _1038 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1012, _1013, _1014), 0.0);
        float _1051 = exp2((_1017.w + (-0.5)) * 20.0) * 2.0;
        float _1052 = _1051 * (_1017.x + (-0.5));
        float _1053 = _1051 * (_1017.y + (-0.5));
        float _1054 = _1051 * (_1017.z + (-0.5));
        float _1061 = exp2((_1024.w + (-0.5)) * 20.0) * 2.0;
        float _1062 = _1061 * (_1024.x + (-0.5));
        float _1063 = _1061 * (_1024.y + (-0.5));
        float _1064 = _1061 * (_1024.z + (-0.5));
        float _1071 = exp2((_1031.w + (-0.5)) * 20.0) * 2.0;
        float _1072 = _1071 * (_1031.x + (-0.5));
        float _1073 = _1071 * (_1031.y + (-0.5));
        float _1074 = _1071 * (_1031.z + (-0.5));
        float _1081 = exp2((_1038.w + (-0.5)) * 20.0) * 2.0;
        float _1082 = _1081 * (_1038.x + (-0.5));
        float _1083 = _1081 * (_1038.y + (-0.5));
        float _1084 = _1081 * (_1038.z + (-0.5));
        float _1085 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
        float _1086 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
        float _1087 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
        float _1088 = _1052 * 0.5;
        float _1089 = _1062 * 0.5;
        float _1090 = _1072 * 0.5;
        float _1091 = dot(vec3(_1088, _1089, _1090), vec3(_1088, _1089, _1090));
        float _1096 = (_1091 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1091);
        float _1105 = (dot(vec3(_720, _721, _722), vec3(_1096 * _1088, _1096 * _1089, _1096 * _1090)) + 1.0) * 0.5;
        float _3700 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
        float _1115 = sqrt(((_1089 * _1089) + (_1088 * _1088)) + (_1090 * _1090)) / (_1085 + 9.9999997473787516355514526367188e-06);
        float _3711 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
        float _1116 = isnan(1.0) ? _3711 : (isnan(_3711) ? 1.0 : min(_3711, 1.0));
        float _1117 = _1116 * 2.0;
        float _1121 = (1.0 - _1116) / (_1116 + 1.0);
        float _3722 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
        float _1122 = isnan(1.0) ? _3722 : (isnan(_3722) ? 1.0 : min(_3722, 1.0));
        float _1131 = ((((1.0 - _1122) * (_1117 + 2.0)) * exp2(log2(isnan(1.0) ? _3700 : (isnan(_3700) ? 1.0 : min(_3700, 1.0))) * (_1117 + 1.0))) + _1122) * _1085;
        float _1132 = _1053 * 0.5;
        float _1133 = _1063 * 0.5;
        float _1134 = _1073 * 0.5;
        float _1135 = dot(vec3(_1132, _1133, _1134), vec3(_1132, _1133, _1134));
        float _1140 = (_1135 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1135);
        float _1148 = (dot(vec3(_720, _721, _722), vec3(_1140 * _1132, _1140 * _1133, _1140 * _1134)) + 1.0) * 0.5;
        float _3733 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1157 = sqrt(((_1133 * _1133) + (_1132 * _1132)) + (_1134 * _1134)) / (_1086 + 9.9999997473787516355514526367188e-06);
        float _3744 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1158 = isnan(1.0) ? _3744 : (isnan(_3744) ? 1.0 : min(_3744, 1.0));
        float _1159 = _1158 * 2.0;
        float _1163 = (1.0 - _1158) / (_1158 + 1.0);
        float _3755 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
        float _1164 = isnan(1.0) ? _3755 : (isnan(_3755) ? 1.0 : min(_3755, 1.0));
        float _1173 = ((((1.0 - _1164) * (_1159 + 2.0)) * exp2(log2(isnan(1.0) ? _3733 : (isnan(_3733) ? 1.0 : min(_3733, 1.0))) * (_1159 + 1.0))) + _1164) * _1086;
        float _1174 = _1054 * 0.5;
        float _1175 = _1064 * 0.5;
        float _1176 = _1074 * 0.5;
        float _1177 = dot(vec3(_1174, _1175, _1176), vec3(_1174, _1175, _1176));
        float _1182 = (_1177 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1177);
        float _1190 = (dot(vec3(_720, _721, _722), vec3(_1182 * _1174, _1182 * _1175, _1182 * _1176)) + 1.0) * 0.5;
        float _3766 = isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0));
        float _1199 = sqrt(((_1175 * _1175) + (_1174 * _1174)) + (_1176 * _1176)) / (_1087 + 9.9999997473787516355514526367188e-06);
        float _3777 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
        float _1200 = isnan(1.0) ? _3777 : (isnan(_3777) ? 1.0 : min(_3777, 1.0));
        float _1201 = _1200 * 2.0;
        float _1205 = (1.0 - _1200) / (_1200 + 1.0);
        float _3788 = isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0));
        float _1206 = isnan(1.0) ? _3788 : (isnan(_3788) ? 1.0 : min(_3788, 1.0));
        float _1215 = ((((1.0 - _1206) * (_1201 + 2.0)) * exp2(log2(isnan(1.0) ? _3766 : (isnan(_3766) ? 1.0 : min(_3766, 1.0))) * (_1201 + 1.0))) + _1206) * _1087;
        _1223 = _1054;
        _1225 = _1053;
        _1226 = _1052;
        _1227 = _1064;
        _1228 = _1063;
        _1229 = _1062;
        _1230 = _1074;
        _1231 = _1073;
        _1232 = _1072;
        _1233 = _1087;
        _1234 = _1086;
        _1235 = _1085;
        _1236 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0)));
        _1237 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0)));
        _1238 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0)));
    }
    else
    {
        _1223 = _1224;
        _1225 = _1224;
        _1226 = _1224;
        _1227 = _1224;
        _1228 = _1224;
        _1229 = _1224;
        _1230 = _1224;
        _1231 = _1224;
        _1232 = _1224;
        _1233 = _1224;
        _1234 = _1224;
        _1235 = _1224;
        _1236 = 0.0;
        _1237 = 0.0;
        _1238 = 0.0;
    }
    float _1536;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1267 = fma(_893, cbModelParam._m0[30u].z, fma(_889, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _885));
        float _1271 = fma(_893, cbModelParam._m0[31u].z, fma(_889, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _885));
        float _1275 = fma(_893, cbModelParam._m0[32u].z, fma(_889, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _885));
        float _1298 = _885 + _720;
        float _1299 = _889 + _721;
        float _1300 = _893 + _722;
        float _1310 = fma(_1300, cbModelParam._m0[30u].z, fma(_1299, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1298)) - _1267;
        float _1311 = fma(_1300, cbModelParam._m0[31u].z, fma(_1299, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1298)) - _1271;
        float _1312 = fma(_1300, cbModelParam._m0[32u].z, fma(_1299, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1298)) - _1275;
        float _1316 = inversesqrt(dot(vec3(_1310, _1311, _1312), vec3(_1310, _1311, _1312)));
        float _1329 = ((_1316 * _1310) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1267 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1330 = ((_1316 * _1311) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1271 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1331 = ((_1316 * _1312) / cbModelParam._m0[35u].z) + ((((((_1275 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1333 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1329, _1330, _1331), 0.0);
        vec4 _1340 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1329, _1330, _1331), 0.0);
        vec4 _1347 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1329, _1330, _1331), 0.0);
        vec4 _1354 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1329, _1330, _1331), 0.0);
        float _1366 = exp2((_1333.w + (-0.5)) * 20.0) * 2.0;
        float _1367 = _1366 * (_1333.x + (-0.5));
        float _1368 = _1366 * (_1333.y + (-0.5));
        float _1369 = _1366 * (_1333.z + (-0.5));
        float _1376 = exp2((_1340.w + (-0.5)) * 20.0) * 2.0;
        float _1377 = _1376 * (_1340.x + (-0.5));
        float _1378 = _1376 * (_1340.y + (-0.5));
        float _1379 = _1376 * (_1340.z + (-0.5));
        float _1386 = exp2((_1347.w + (-0.5)) * 20.0) * 2.0;
        float _1387 = _1386 * (_1347.x + (-0.5));
        float _1388 = _1386 * (_1347.y + (-0.5));
        float _1389 = _1386 * (_1347.z + (-0.5));
        float _1396 = exp2((_1354.w + (-0.5)) * 20.0) * 2.0;
        float _1397 = _1396 * (_1354.x + (-0.5));
        float _1398 = _1396 * (_1354.y + (-0.5));
        float _1399 = _1396 * (_1354.z + (-0.5));
        float _1400 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1401 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1402 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1403 = _1367 * 0.5;
        float _1404 = _1377 * 0.5;
        float _1405 = _1387 * 0.5;
        float _1406 = dot(vec3(_1403, _1404, _1405), vec3(_1403, _1404, _1405));
        float _1411 = (_1406 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1406);
        float _1419 = (dot(vec3(_720, _721, _722), vec3(_1411 * _1403, _1411 * _1404, _1411 * _1405)) + 1.0) * 0.5;
        float _3829 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1428 = sqrt(((_1404 * _1404) + (_1403 * _1403)) + (_1405 * _1405)) / (_1400 + 9.9999997473787516355514526367188e-06);
        float _3840 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1429 = isnan(1.0) ? _3840 : (isnan(_3840) ? 1.0 : min(_3840, 1.0));
        float _1430 = _1429 * 2.0;
        float _1434 = (1.0 - _1429) / (_1429 + 1.0);
        float _3851 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1435 = isnan(1.0) ? _3851 : (isnan(_3851) ? 1.0 : min(_3851, 1.0));
        float _1444 = ((((1.0 - _1435) * (_1430 + 2.0)) * exp2(log2(isnan(1.0) ? _3829 : (isnan(_3829) ? 1.0 : min(_3829, 1.0))) * (_1430 + 1.0))) + _1435) * _1400;
        float _1445 = _1368 * 0.5;
        float _1446 = _1378 * 0.5;
        float _1447 = _1388 * 0.5;
        float _1448 = dot(vec3(_1445, _1446, _1447), vec3(_1445, _1446, _1447));
        float _1453 = (_1448 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1448);
        float _1461 = (dot(vec3(_720, _721, _722), vec3(_1453 * _1445, _1453 * _1446, _1453 * _1447)) + 1.0) * 0.5;
        float _3862 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1470 = sqrt(((_1446 * _1446) + (_1445 * _1445)) + (_1447 * _1447)) / (_1401 + 9.9999997473787516355514526367188e-06);
        float _3873 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1471 = isnan(1.0) ? _3873 : (isnan(_3873) ? 1.0 : min(_3873, 1.0));
        float _1472 = _1471 * 2.0;
        float _1476 = (1.0 - _1471) / (_1471 + 1.0);
        float _3884 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1477 = isnan(1.0) ? _3884 : (isnan(_3884) ? 1.0 : min(_3884, 1.0));
        float _1486 = ((((1.0 - _1477) * (_1472 + 2.0)) * exp2(log2(isnan(1.0) ? _3862 : (isnan(_3862) ? 1.0 : min(_3862, 1.0))) * (_1472 + 1.0))) + _1477) * _1401;
        float _1487 = _1369 * 0.5;
        float _1488 = _1379 * 0.5;
        float _1489 = _1389 * 0.5;
        float _1490 = dot(vec3(_1487, _1488, _1489), vec3(_1487, _1488, _1489));
        float _1495 = (_1490 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1490);
        float _1503 = (dot(vec3(_720, _721, _722), vec3(_1495 * _1487, _1495 * _1488, _1495 * _1489)) + 1.0) * 0.5;
        float _3895 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
        float _1512 = sqrt(((_1488 * _1488) + (_1487 * _1487)) + (_1489 * _1489)) / (_1402 + 9.9999997473787516355514526367188e-06);
        float _3906 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
        float _1513 = isnan(1.0) ? _3906 : (isnan(_3906) ? 1.0 : min(_3906, 1.0));
        float _1514 = _1513 * 2.0;
        float _1518 = (1.0 - _1513) / (_1513 + 1.0);
        float _3917 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
        float _1519 = isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0));
        float _1528 = ((((1.0 - _1519) * (_1514 + 2.0)) * exp2(log2(isnan(1.0) ? _3895 : (isnan(_3895) ? 1.0 : min(_3895, 1.0))) * (_1514 + 1.0))) + _1519) * _1402;
        _1536 = _1369;
        _1537 = _1368;
        _1538 = _1367;
        _1539 = _1379;
        _1540 = _1378;
        _1541 = _1377;
        _1542 = _1389;
        _1543 = _1388;
        _1544 = _1387;
        _1545 = _1402;
        _1546 = _1401;
        _1547 = _1400;
        _1548 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0)));
        _1549 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0)));
        _1550 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0)));
    }
    else
    {
        _1536 = _1224;
        _1537 = _1224;
        _1538 = _1224;
        _1539 = _1224;
        _1540 = _1224;
        _1541 = _1224;
        _1542 = _1224;
        _1543 = _1224;
        _1544 = _1224;
        _1545 = _1224;
        _1546 = _1224;
        _1547 = _1224;
        _1548 = 0.0;
        _1549 = 0.0;
        _1550 = 0.0;
    }
    float _1560 = (cbModelParam._m0[1u].x * (_1548 - _1236)) + _1236;
    float _1561 = (cbModelParam._m0[1u].x * (_1549 - _1237)) + _1237;
    float _1562 = (cbModelParam._m0[1u].x * (_1550 - _1238)) + _1238;
    float _1583 = fma(_1562, cbSceneParam._m0[89u].z, fma(_1561, cbSceneParam._m0[89u].y, _1560 * cbSceneParam._m0[89u].x));
    float _1586 = fma(_1562, cbSceneParam._m0[90u].z, fma(_1561, cbSceneParam._m0[90u].y, _1560 * cbSceneParam._m0[90u].x));
    float _1589 = fma(_1562, cbSceneParam._m0[91u].z, fma(_1561, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1560));
    float _1604 = _828 * 0.5;
    float _1605 = _829 * 0.5;
    float _1606 = _830 * 0.5;
    float _1607 = dot(vec4(_1604, _1605, _1606, 1.0), vec4(_1538, _1541, _1544, _1547));
    float _1610 = dot(vec4(_1604, _1605, _1606, 1.0), vec4(_1537, _1540, _1543, _1546));
    float _1613 = dot(vec4(_1604, _1605, _1606, 1.0), vec4(_1536, _1539, _1542, _1545));
    float _1647;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1620 = dot(vec4(_1604, _1605, _1606, 1.0), vec4(_1223, _1227, _1230, _1233));
        float _1624 = dot(vec4(_1604, _1605, _1606, 1.0), vec4(_1225, _1228, _1231, _1234));
        float _1628 = dot(vec4(_1604, _1605, _1606, 1.0), vec4(_1226, _1229, _1232, _1235));
        float _1635 = dot(vec4(cbModelParam._m0[39u]), vec4(_1604, _1605, _1606, 1.0));
        _1647 = dot(vec3(isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0)), isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0)), isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1635) ? 0.0 : (isnan(0.0) ? _1635 : max(0.0, _1635))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1647 = 1.0;
    }
    float _1658;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1649 = dot(vec4(cbModelParam._m0[40u]), vec4(_1604, _1605, _1606, 1.0));
        _1658 = dot(vec3(isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0)), isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0)), isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1649) ? 0.0 : (isnan(0.0) ? _1649 : max(0.0, _1649))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1658 = 1.0;
    }
    float _1662 = (_1658 * cbModelParam._m0[1u].x) + (_1647 * (1.0 - cbModelParam._m0[1u].x));
    float _1672 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _724);
    float _1673 = isnan(_1672) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1672 : min(cbModelParam._m0[25u].z, _1672));
    float _1753;
    float _1755;
    float _1757;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1720 = fma(_893, cbModelParam._m0[13u].z, fma(_889, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _885)) + cbModelParam._m0[13u].w;
        float _1724 = fma(_893, cbModelParam._m0[14u].z, fma(_889, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _885)) + cbModelParam._m0[14u].w;
        float _1728 = fma(_893, cbModelParam._m0[15u].z, fma(_889, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _885)) + cbModelParam._m0[15u].w;
        float _1731 = fma(_830, cbModelParam._m0[13u].z, fma(_829, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _828));
        float _1734 = fma(_830, cbModelParam._m0[14u].z, fma(_829, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _828));
        float _1737 = fma(_830, cbModelParam._m0[15u].z, fma(_829, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _828));
        float _1765;
        if (_1731 > 0.0)
        {
            _1765 = abs((1.0 - _1720) / _1731);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1731 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1720 + 1.0) / _1731);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1765 = frontier_phi_19_17_ladder;
        }
        float _1937;
        if (_1734 > 0.0)
        {
            _1937 = abs((1.0 - _1724) / _1734);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1734 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1724 + 1.0) / _1734);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1937 = frontier_phi_28_24_ladder;
        }
        float _2201;
        if (_1737 > 0.0)
        {
            _2201 = abs((1.0 - _1728) / _1737);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1737 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1728 + 1.0) / _1737);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2201 = frontier_phi_40_35_ladder;
        }
        float _2203 = isnan(_1937) ? _1765 : (isnan(_1765) ? _1937 : min(_1765, _1937));
        float _2204 = isnan(_2201) ? _2203 : (isnan(_2203) ? _2201 : min(_2203, _2201));
        float _2208 = (_2204 * _1731) + _1720;
        float _2209 = (_2204 * _1734) + _1724;
        float _2210 = (_2204 * _1737) + _1728;
        float _2211 = _2204 * 9.9999997473787516355514526367188e-05;
        float _2213 = (-1.0) - _2211;
        float _2215 = _2211 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2210 > _2215) || ((_2210 < _2213) || ((_2209 > _2215) || ((_2209 < _2213) || ((_2208 < _2213) || (_2208 > _2215))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2364 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2210, cbModelParam._m0[9u].z, fma(_2209, cbModelParam._m0[9u].y, _2208 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2210, cbModelParam._m0[10u].z, fma(_2209, cbModelParam._m0[10u].y, _2208 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2210, cbModelParam._m0[11u].z, fma(_2209, cbModelParam._m0[11u].y, _2208 * cbModelParam._m0[11u].x))), _1673);
            frontier_phi_18_40_ladder = _2364.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2364.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2364.x * cbModelParam._m0[1u].y;
        }
        _1753 = frontier_phi_18_40_ladder_2;
        _1755 = frontier_phi_18_40_ladder_1;
        _1757 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1741 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_828, _829, _830), _1673);
        _1753 = _1741.x * cbModelParam._m0[1u].y;
        _1755 = _1741.y * cbModelParam._m0[1u].y;
        _1757 = _1741.z * cbModelParam._m0[1u].y;
    }
    float _1761 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _724);
    float _1762 = isnan(_1761) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1761 : min(cbModelParam._m0[25u].w, _1761));
    float _1854;
    float _1856;
    float _1858;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1818 = fma(_893, cbModelParam._m0[21u].z, fma(_889, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _885)) + cbModelParam._m0[21u].w;
        float _1822 = fma(_893, cbModelParam._m0[22u].z, fma(_889, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _885)) + cbModelParam._m0[22u].w;
        float _1826 = fma(_893, cbModelParam._m0[23u].z, fma(_889, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _885)) + cbModelParam._m0[23u].w;
        float _1829 = fma(_830, cbModelParam._m0[21u].z, fma(_829, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _828));
        float _1832 = fma(_830, cbModelParam._m0[22u].z, fma(_829, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _828));
        float _1835 = fma(_830, cbModelParam._m0[23u].z, fma(_829, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _828));
        float _1942;
        if (_1829 > 0.0)
        {
            _1942 = abs((1.0 - _1818) / _1829);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1829 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1818 + 1.0) / _1829);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1942 = frontier_phi_30_26_ladder;
        }
        float _2228;
        if (_1832 > 0.0)
        {
            _2228 = abs((1.0 - _1822) / _1832);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1832 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1822 + 1.0) / _1832);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2228 = frontier_phi_42_37_ladder;
        }
        float _2547;
        if (_1835 > 0.0)
        {
            _2547 = abs((1.0 - _1826) / _1835);
        }
        else
        {
            float frontier_phi_51_49_ladder;
            if (_1835 < 0.0)
            {
                frontier_phi_51_49_ladder = abs((_1826 + 1.0) / _1835);
            }
            else
            {
                frontier_phi_51_49_ladder = 5000.0;
            }
            _2547 = frontier_phi_51_49_ladder;
        }
        float _2549 = isnan(_2228) ? _1942 : (isnan(_1942) ? _2228 : min(_1942, _2228));
        float _2550 = isnan(_2547) ? _2549 : (isnan(_2549) ? _2547 : min(_2549, _2547));
        float _2554 = (_2550 * _1829) + _1818;
        float _2555 = (_2550 * _1832) + _1822;
        float _2556 = (_2550 * _1835) + _1826;
        float _2557 = _2550 * 9.9999997473787516355514526367188e-05;
        float _2558 = (-1.0) - _2557;
        float _2560 = _2557 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_2556 > _2560) || ((_2556 < _2558) || ((_2555 > _2560) || ((_2555 < _2558) || ((_2554 < _2558) || (_2554 > _2560))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2657 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2556, cbModelParam._m0[17u].z, fma(_2555, cbModelParam._m0[17u].y, _2554 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2556, cbModelParam._m0[18u].z, fma(_2555, cbModelParam._m0[18u].y, _2554 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2556, cbModelParam._m0[19u].z, fma(_2555, cbModelParam._m0[19u].y, _2554 * cbModelParam._m0[19u].x))), _1762);
            frontier_phi_27_51_ladder = _2657.x * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _2657.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _2657.y * cbModelParam._m0[1u].z;
        }
        _1854 = frontier_phi_27_51_ladder;
        _1856 = frontier_phi_27_51_ladder_2;
        _1858 = frontier_phi_27_51_ladder_1;
    }
    else
    {
        vec4 _1838 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_828, _829, _830), _1762);
        _1854 = _1838.x * cbModelParam._m0[1u].z;
        _1856 = _1838.y * cbModelParam._m0[1u].z;
        _1858 = _1838.z * cbModelParam._m0[1u].z;
    }
    float _1870 = ((((1.0 - _853) * ((_841 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_853 * _841)) * _820;
    float _1871 = _1870 * ((cbModelParam._m0[1u].w * (_1854 - _1753)) + _1753);
    float _1872 = _1870 * ((cbModelParam._m0[1u].w * (_1856 - _1755)) + _1755);
    float _1873 = _1870 * ((cbModelParam._m0[1u].w * (_1858 - _1757)) + _1757);
    float _1876 = fma(_1873, cbSceneParam._m0[89u].z, fma(_1872, cbSceneParam._m0[89u].y, _1871 * cbSceneParam._m0[89u].x));
    float _1879 = fma(_1873, cbSceneParam._m0[90u].z, fma(_1872, cbSceneParam._m0[90u].y, _1871 * cbSceneParam._m0[90u].x));
    float _1882 = fma(_1873, cbSceneParam._m0[91u].z, fma(_1872, cbSceneParam._m0[91u].y, _1871 * cbSceneParam._m0[91u].x));
    float _1916 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1920 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1924 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1928 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1929 = _1916 / _1928;
    float _1930 = _1920 / _1928;
    float _1931 = _1924 / _1928;
    float _2078;
    float _2079;
    float _2080;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1958 = ((uint(_1931 > cbSceneParam._m0[59u].y) + uint(_1931 > cbSceneParam._m0[59u].x)) + uint(_1931 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1959 = _1958 + 43u;
        uint _1967 = _1958 + 44u;
        uint _1975 = _1958 + 45u;
        uint _1983 = _1958 + 46u;
        float _1994 = fma(_1928, cbSceneParam._m0[_1959].w, fma(_1924, cbSceneParam._m0[_1959].z, fma(_1920, cbSceneParam._m0[_1959].y, _1916 * cbSceneParam._m0[_1959].x)));
        float _1998 = fma(_1928, cbSceneParam._m0[_1967].w, fma(_1924, cbSceneParam._m0[_1967].z, fma(_1920, cbSceneParam._m0[_1967].y, _1916 * cbSceneParam._m0[_1967].x)));
        float _2006 = fma(_1928, cbSceneParam._m0[_1983].w, fma(_1924, cbSceneParam._m0[_1983].z, fma(_1920, cbSceneParam._m0[_1983].y, _1916 * cbSceneParam._m0[_1983].x)));
        float _2011 = cbSceneParam._m0[33u].z * _2006;
        float _2013 = cbSceneParam._m0[33u].w * _2006;
        float _2016 = fma(_1928, cbSceneParam._m0[_1975].w, fma(_1924, cbSceneParam._m0[_1975].z, fma(_1920, cbSceneParam._m0[_1975].y, _1916 * cbSceneParam._m0[_1975].x))) / _2006;
        float _2064 = (cbSceneParam._m0[33u].x - sqrt(((_1930 * _1930) + (_1929 * _1929)) + (_1931 * _1931))) * cbSceneParam._m0[33u].y;
        float _4043 = isnan(0.0) ? _2064 : (isnan(_2064) ? 0.0 : max(_2064, 0.0));
        float _2071 = (isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2011 + _1994) / _2006, (_2013 + _1998) / _2006), _2016), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2013 + _1994) / _2006, (_1998 - _2011) / _2006), _2016), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1994 - _2011) / _2006, (_1998 - _2013) / _2006), _2016), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1994 - _2013) / _2006, (_2011 + _1998) / _2006), _2016), 0.0)).x), vec4(0.25)));
        _2078 = 1.0 - (_2071 * cbSceneParam._m0[34u].x);
        _2079 = 1.0 - (_2071 * cbSceneParam._m0[34u].y);
        _2080 = 1.0 - (_2071 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2078 = 1.0;
        _2079 = 1.0;
        _2080 = 1.0;
    }
    float _2144;
    float _2146;
    float _2148;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2132 = fma(_1928, cbSceneParam._m0[63u].w, fma(_1924, cbSceneParam._m0[63u].z, fma(_1920, cbSceneParam._m0[63u].y, _1916 * cbSceneParam._m0[63u].x)));
        float _2133 = fma(_1928, cbSceneParam._m0[60u].w, fma(_1924, cbSceneParam._m0[60u].z, fma(_1920, cbSceneParam._m0[60u].y, _1916 * cbSceneParam._m0[60u].x))) / _2132;
        float _2134 = fma(_1928, cbSceneParam._m0[61u].w, fma(_1924, cbSceneParam._m0[61u].z, fma(_1920, cbSceneParam._m0[61u].y, _1916 * cbSceneParam._m0[61u].x))) / _2132;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2133 >= cbSceneParam._m0[64u].x) && (_2134 >= cbSceneParam._m0[64u].y)) && (_2133 <= cbSceneParam._m0[64u].z)) && (_2134 <= cbSceneParam._m0[64u].w))
        {
            float _2241 = fma(_1928, cbSceneParam._m0[62u].w, fma(_1924, cbSceneParam._m0[62u].z, fma(_1920, cbSceneParam._m0[62u].y, _1916 * cbSceneParam._m0[62u].x))) / _2132;
            float _2245 = isnan(cbSceneParam._m0[41u].w) ? _2241 : (isnan(_2241) ? cbSceneParam._m0[41u].w : max(_2241, cbSceneParam._m0[41u].w));
            float _2288 = (cbSceneParam._m0[33u].x - sqrt(((_1930 * _1930) + (_1929 * _1929)) + (_1931 * _1931))) * cbSceneParam._m0[33u].y;
            float _4059 = isnan(0.0) ? _2288 : (isnan(_2288) ? 0.0 : max(_2288, 0.0));
            float _2295 = (isnan(1.0) ? _4059 : (isnan(_4059) ? 1.0 : min(_4059, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2133, cbSceneParam._m0[33u].w + _2134), _2245), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2133, _2134 - cbSceneParam._m0[33u].z), _2245), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2133 - cbSceneParam._m0[33u].z, _2134 - cbSceneParam._m0[33u].w), _2245), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2133 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2134), _2245), 0.0)).x), vec4(0.25)));
            float _2299 = 1.0 - (_2295 * cbSceneParam._m0[34u].x);
            float _2300 = 1.0 - (_2295 * cbSceneParam._m0[34u].y);
            float _2301 = 1.0 - (_2295 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2301) ? _2080 : (isnan(_2080) ? _2301 : min(_2080, _2301));
            frontier_phi_39_38_ladder_1 = isnan(_2300) ? _2079 : (isnan(_2079) ? _2300 : min(_2079, _2300));
            frontier_phi_39_38_ladder_2 = isnan(_2299) ? _2078 : (isnan(_2078) ? _2299 : min(_2078, _2299));
        }
        else
        {
            frontier_phi_39_38_ladder = _2080;
            frontier_phi_39_38_ladder_1 = _2079;
            frontier_phi_39_38_ladder_2 = _2078;
        }
        _2144 = frontier_phi_39_38_ladder_2;
        _2146 = frontier_phi_39_38_ladder_1;
        _2148 = frontier_phi_39_38_ladder;
    }
    else
    {
        _2144 = _2078;
        _2146 = _2079;
        _2148 = _2080;
    }
    uvec4 _2153 = floatBitsToUint(cbInstanceData._m0[_306 + 5u]);
    uint _2155 = _2153.x * 14u;
    uint _2156 = _2155 + 13u;
    float _2161 = _820 + (-1.0);
    float _2164 = (cbLight._m0[_2156].x * _2161) + 1.0;
    float _2165 = (cbLight._m0[_2156].y * _2161) + 1.0;
    uint _2167 = _2155 + 4u;
    float _2178 = dot(vec3(cbLight._m0[_2155].xyz), vec3(_720, _721, _722));
    float _2181 = isnan(1.0) ? _2164 : (isnan(_2164) ? 1.0 : min(_2164, 1.0));
    float _2182 = cbLight._m0[_2167].x * _2144;
    float _2183 = cbLight._m0[_2167].y * _2146;
    float _2184 = cbLight._m0[_2167].z * _2148;
    uint _2185 = _2155 + 5u;
    uint _2191 = _2155 | 1u;
    float _2197 = dot(vec3(cbLight._m0[_2191].xyz), vec3(_720, _721, _722));
    float _2200 = isnan(1.0) ? _2165 : (isnan(_2165) ? 1.0 : min(_2165, 1.0));
    float _2373;
    float _2374;
    float _2375;
    if (_725 == 0.0)
    {
        float _4095 = isnan(0.0) ? _2178 : (isnan(_2178) ? 0.0 : max(_2178, 0.0));
        float _4106 = isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0));
        float _2310 = (isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0))) * 0.3183098733425140380859375;
        float _2312 = (isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0))) * 0.3183098733425140380859375;
        _2373 = ((cbLight._m0[_2185].x * _2200) * _2312) + ((_2182 * _2181) * _2310);
        _2374 = ((_2200 * cbLight._m0[_2185].y) * _2312) + ((_2183 * _2181) * _2310);
        _2375 = ((_2200 * cbLight._m0[_2185].z) * _2312) + ((_2184 * _2181) * _2310);
    }
    else
    {
        float _2322 = _2178 + _725;
        float _2325 = (_725 * 2.0) + 1.0;
        float _2326 = (isnan(0.0) ? _2322 : (isnan(_2322) ? 0.0 : max(_2322, 0.0))) / _2325;
        float _2333 = _2197 + _725;
        float _2335 = (isnan(0.0) ? _2333 : (isnan(_2333) ? 0.0 : max(_2333, 0.0))) / _2325;
        _2373 = (((_2335 * cbLight._m0[_2185].x) * _2200) + ((_2182 * _2326) * _2181)) * 0.3183098733425140380859375;
        _2374 = (((_2335 * cbLight._m0[_2185].y) * _2200) + ((_2183 * _2326) * _2181)) * 0.3183098733425140380859375;
        _2375 = (((_2335 * cbLight._m0[_2185].z) * _2200) + ((_2184 * _2326) * _2181)) * 0.3183098733425140380859375;
    }
    uint _2379 = _2155 + 8u;
    float _2395 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2155].w)) * _724) * 0.949999988079071044921875);
    float _2396 = _2395 * _2395;
    float _2397 = cbLight._m0[_2155].x + _499;
    float _2398 = cbLight._m0[_2155].y + _500;
    float _2399 = cbLight._m0[_2155].z + _501;
    float _2403 = inversesqrt(dot(vec3(_2397, _2398, _2399), vec3(_2397, _2398, _2399)));
    float _2404 = _2403 * _2397;
    float _2405 = _2403 * _2398;
    float _2406 = _2403 * _2399;
    float _2407 = dot(vec3(_720, _721, _722), vec3(cbLight._m0[_2155].xyz));
    float _4127 = isnan(0.0) ? _2407 : (isnan(_2407) ? 0.0 : max(_2407, 0.0));
    float _2410 = isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0));
    float _4138 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _2411 = isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0));
    float _2412 = dot(vec3(_720, _721, _722), vec3(_2404, _2405, _2406));
    float _4149 = isnan(0.0) ? _2412 : (isnan(_2412) ? 0.0 : max(_2412, 0.0));
    float _2415 = isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0));
    float _2416 = dot(vec3(cbLight._m0[_2155].xyz), vec3(_2404, _2405, _2406));
    float _4160 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
    float _2420 = _2396 * _2396;
    float _2424 = ((_2415 * _2415) * (_2420 + (-1.0))) + 1.0;
    float _2435 = (exp2(log2(1.0 - (isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2436 = 1.0 - _2396;
    float _2447 = (0.5 / (((_2411 * ((_2410 * _2436) + _2396)) + 9.9999999392252902907785028219223e-09) + (((_2411 * _2436) + _2396) * _2410))) * _2410;
    float _4171 = isnan(0.0) ? _2447 : (isnan(_2447) ? 0.0 : max(_2447, 0.0));
    float _2449 = (isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0))) * (_2420 / ((_2424 * _2424) * 3.141590118408203125));
    uint _2465 = _2155 + 9u;
    float _2479 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2191].w)) * _724) * 0.949999988079071044921875);
    float _2480 = _2479 * _2479;
    float _2481 = cbLight._m0[_2191].x + _499;
    float _2482 = cbLight._m0[_2191].y + _500;
    float _2483 = cbLight._m0[_2191].z + _501;
    float _2487 = inversesqrt(dot(vec3(_2481, _2482, _2483), vec3(_2481, _2482, _2483)));
    float _2488 = _2487 * _2481;
    float _2489 = _2487 * _2482;
    float _2490 = _2487 * _2483;
    float _2491 = dot(vec3(_720, _721, _722), vec3(cbLight._m0[_2191].xyz));
    float _4182 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
    float _2494 = isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0));
    float _2495 = dot(vec3(_720, _721, _722), vec3(_2488, _2489, _2490));
    float _4193 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0));
    float _2498 = isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0));
    float _2499 = dot(vec3(cbLight._m0[_2191].xyz), vec3(_2488, _2489, _2490));
    float _4204 = isnan(0.0) ? _2499 : (isnan(_2499) ? 0.0 : max(_2499, 0.0));
    float _2503 = _2480 * _2480;
    float _2507 = ((_2498 * _2498) * (_2503 + (-1.0))) + 1.0;
    float _2516 = (exp2(log2(1.0 - (isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2517 = 1.0 - _2480;
    float _2527 = (0.5 / (((_2411 * ((_2494 * _2517) + _2480)) + 9.9999999392252902907785028219223e-09) + (((_2411 * _2517) + _2480) * _2494))) * _2494;
    float _4215 = isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : max(_2527, 0.0));
    float _2529 = (isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0))) * (_2503 / ((_2507 * _2507) * 3.141590118408203125));
    float _2539 = (((_2516 * cbLight._m0[_2465].x) * _2529) * _2200) + ((((cbLight._m0[_2379].x * _2144) * _2435) * _2449) * _2181);
    float _2540 = (((_2516 * cbLight._m0[_2465].y) * _2529) * _2200) + ((((cbLight._m0[_2379].y * _2146) * _2435) * _2449) * _2181);
    float _2541 = (((_2516 * cbLight._m0[_2465].z) * _2529) * _2200) + ((((cbLight._m0[_2379].z * _2148) * _2435) * _2449) * _2181);
    float _2628;
    float _2630;
    float _2632;
    float _2634;
    float _2636;
    float _2638;
    if (_2153.y == 0u)
    {
        uvec4 _2584 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2585 = _2584.x;
        uint _2596 = uint((float(_2584.y) * floor(float(uint(cbSceneParam._m0[85u].y * _760) / _2585))) + floor(float(uint(cbSceneParam._m0[85u].x * _759) / _2585)));
        float _2606 = (log2(_1931 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2607 = isnan(0.0) ? _2606 : (isnan(_2606) ? 0.0 : max(_2606, 0.0));
        uint _2610 = uint(isnan(14.0) ? _2607 : (isnan(_2607) ? 14.0 : min(_2607, 14.0)));
        uint _2617 = _2584.z;
        float _2662;
        float _2664;
        float _2666;
        float _2668;
        float _2670;
        float _2672;
        if (((((1u << ((_2617 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2610 << 2u) + (_2596 << 6u)) >> 2u)).x) == 0u) || ((_2617 & 240u) == 0u))
        {
            _2662 = 0.0;
            _2664 = 0.0;
            _2666 = 0.0;
            _2668 = 0.0;
            _2670 = 0.0;
            _2672 = 0.0;
        }
        else
        {
            float _2663;
            float _2665;
            float _2667;
            float _2669;
            float _2671;
            float _2673;
            float _2828 = 0.0;
            float _2829 = 0.0;
            float _2830 = 0.0;
            float _2831 = 0.0;
            float _2832 = 0.0;
            float _2833 = 0.0;
            uint _2834 = 0u;
            uint _2843;
            bool _2844;
            for (;;)
            {
                _2843 = texelFetch(g_lightClassification, int((((_2610 << 5u) + (_2596 << 9u)) + (_2834 << 2u)) >> 2u)).x;
                _2844 = _2843 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2844)
                {
                    frontier_phi_63_pred = _2830;
                    frontier_phi_63_pred_1 = _2833;
                    frontier_phi_63_pred_2 = _2832;
                    frontier_phi_63_pred_3 = _2831;
                    frontier_phi_63_pred_4 = _2829;
                    frontier_phi_63_pred_5 = _2828;
                }
                else
                {
                    float _3044;
                    float _3045;
                    float _3046;
                    float _3047;
                    float _3048;
                    float _3049;
                    uint _3050;
                    _3044 = _2828;
                    _3045 = _2829;
                    _3046 = _2830;
                    _3047 = _2831;
                    _3048 = _2832;
                    _3049 = _2833;
                    _3050 = _2843;
                    float _2976;
                    float _2977;
                    float _2978;
                    float _2979;
                    float _2980;
                    float _2981;
                    for (;;)
                    {
                        uint _3054 = uint(findLSB(_3050)) + (_2834 << 5u);
                        uint _3051 = (_3050 + 4294967295u) & _3050;
                        uint _3056 = _3054 * 48u;
                        vec4 _3070 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3056)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 3u)).x));
                        uint _3076 = (_3054 * 48u) + 4u;
                        vec4 _3089 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3076)).x, texelFetch(g_PointLightRenderingBuffer, int(_3076 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3076 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3076 + 3u)).x));
                        float _3090 = _3089.x;
                        float _3091 = _3089.y;
                        float _3092 = _3089.z;
                        uint _3095 = (_3054 * 48u) + 8u;
                        vec3 _3106 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3095)).x, texelFetch(g_PointLightRenderingBuffer, int(_3095 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3095 + 2u)).x));
                        uint _3111 = (_3054 * 48u) + 12u;
                        vec2 _3119 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_3111)).x, texelFetch(g_PointLightRenderingBuffer, int(_3111 + 1u)).x));
                        float _3125 = inversesqrt(dot(vec3(_1929, _1930, _1931), vec3(_1929, _1930, _1931)));
                        float _3126 = _3125 * _1929;
                        float _3127 = _3125 * _1930;
                        float _3128 = _3125 * _1931;
                        float _3129 = _3070.x - _1929;
                        float _3130 = _3070.y - _1930;
                        float _3131 = _3070.z - _1931;
                        float _3132 = dot(vec3(_3129, _3130, _3131), vec3(_3129, _3130, _3131));
                        float _3135 = inversesqrt(_3132);
                        float _3136 = _3135 * _3129;
                        float _3137 = _3135 * _3130;
                        float _3138 = _3135 * _3131;
                        float _3139 = dot(vec3(_778, _781, _784), vec3(_3136, _3137, _3138));
                        float _3144 = 1.0 - (_3132 * _3070.w);
                        float _4236 = isnan(0.0) ? _3144 : (isnan(_3144) ? 0.0 : max(_3144, 0.0));
                        float _3145 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
                        float _3146 = sqrt(_3132) * _3089.w;
                        float _3149 = 1.39999997615814208984375 / (_3146 + 1.39999997615814208984375);
                        float _3150 = _3149 * _3149;
                        float _3151 = 1.0 - _3150;
                        float _3153 = (_3151 * _3151) * _725;
                        float _3156 = ((_3151 * _3139) + _3150) + _3153;
                        float _3161 = _3146 * _3146;
                        float _3166 = ((isnan(0.0) ? _3156 : (isnan(_3156) ? 0.0 : max(_3156, 0.0))) * _3145) / (((_3153 * 2.0) + 1.0) * ((_3161 * 0.699999988079071044921875) + 1.0));
                        float _3170 = dot(vec3(_3136, _3137, _3138), vec3(_3126, _3127, _3128));
                        float _4252 = isnan(0.0) ? _3170 : (isnan(_3170) ? 0.0 : max(_3170, 0.0));
                        float _3177 = dot(vec3((-0.0) - _3126, (-0.0) - _3127, (-0.0) - _3128), vec3(_778, _781, _784)) + 1.0;
                        float _3179 = (isnan(0.0) ? _3177 : (isnan(_3177) ? 0.0 : max(_3177, 0.0))) * 0.5;
                        float _3186 = ((_3179 * _3179) * _3119.x) * exp2((_3119.y * 32.0) * log2(isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0))));
                        float _3188 = _725 / (_725 + 1.0);
                        float _3204 = (-0.0) - _1929;
                        float _3205 = (-0.0) - _1930;
                        float _3206 = (-0.0) - _1931;
                        float _3210 = inversesqrt(dot(vec3(_3204, _3205, _3206), vec3(_3204, _3205, _3206)));
                        float _3211 = _3210 * _3204;
                        float _3212 = _3210 * _3205;
                        float _3213 = _3210 * _3206;
                        float _3220 = exp2(log2(1.0 / ((_3161 * 3.5) + 5.0)) * 0.25);
                        float _3221 = 1.0 - _841;
                        float _3228 = sqrt(1.0 - ((1.0 - (_3221 * _3221)) * (1.0 - (_3220 * _3220))));
                        float _3229 = _3228 * _3228;
                        float _3230 = _3229 * _3229;
                        float _3231 = _3211 + _3136;
                        float _3232 = _3212 + _3137;
                        float _3233 = _3213 + _3138;
                        float _3237 = inversesqrt(dot(vec3(_3231, _3232, _3233), vec3(_3231, _3232, _3233)));
                        float _3241 = dot(vec3(_778, _781, _784), vec3(_3211, _3212, _3213));
                        float _4268 = isnan(0.0) ? _3241 : (isnan(_3241) ? 0.0 : max(_3241, 0.0));
                        float _3244 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
                        float _3245 = dot(vec3(_778, _781, _784), vec3(_3237 * _3231, _3237 * _3232, _3237 * _3233));
                        float _4279 = isnan(0.0) ? _3245 : (isnan(_3245) ? 0.0 : max(_3245, 0.0));
                        float _3248 = isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0));
                        float _3252 = ((_3248 * _3248) * (_3230 + (-1.0))) + 1.0;
                        float _3253 = _3149 * _3229;
                        float _3254 = _3253 * _3253;
                        float _3257 = ((1.0 - _3254) * _3139) + _3254;
                        float _4290 = isnan(0.0) ? _3257 : (isnan(_3257) ? 0.0 : max(_3257, 0.0));
                        float _3258 = isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0));
                        float _3259 = 1.0 - _3229;
                        float _3269 = (0.5 / (((_3258 * ((_3244 * _3259) + _3229)) + 9.9999999392252902907785028219223e-09) + (((_3258 * _3259) + _3229) * _3244))) * _3258;
                        float _4301 = isnan(0.0) ? _3269 : (isnan(_3269) ? 0.0 : max(_3269, 0.0));
                        float _3280 = (((_3230 * 3.1415927410125732421875) * (isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0)))) / ((_3252 * _3252) * ((_3161 * 2.1991131305694580078125) + 3.141590118408203125))) * _3145;
                        _2979 = (((((_3090 * 0.3183098733425140380859375) * _3188) * _3186) + _3090) * _3166) + _3047;
                        _2980 = (((((_3091 * 0.3183098733425140380859375) * _3188) * _3186) + _3091) * _3166) + _3048;
                        _2981 = (((((_3092 * 0.3183098733425140380859375) * _3188) * _3186) + _3092) * _3166) + _3049;
                        _2976 = (_3280 * _3106.x) + _3044;
                        _2977 = (_3280 * _3106.y) + _3045;
                        _2978 = (_3280 * _3106.z) + _3046;
                        if (_3051 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3044 = _2976;
                            _3045 = _2977;
                            _3046 = _2978;
                            _3047 = _2979;
                            _3048 = _2980;
                            _3049 = _2981;
                            _3050 = _3051;
                        }
                    }
                    frontier_phi_63_pred = _2978;
                    frontier_phi_63_pred_1 = _2981;
                    frontier_phi_63_pred_2 = _2980;
                    frontier_phi_63_pred_3 = _2979;
                    frontier_phi_63_pred_4 = _2977;
                    frontier_phi_63_pred_5 = _2976;
                }
                _2667 = frontier_phi_63_pred;
                _2673 = frontier_phi_63_pred_1;
                _2671 = frontier_phi_63_pred_2;
                _2669 = frontier_phi_63_pred_3;
                _2665 = frontier_phi_63_pred_4;
                _2663 = frontier_phi_63_pred_5;
                uint _2835 = _2834 + 1u;
                if (_2835 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2828 = _2663;
                    _2829 = _2665;
                    _2830 = _2667;
                    _2831 = _2669;
                    _2832 = _2671;
                    _2833 = _2673;
                    _2834 = _2835;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2662 = _2663;
            _2664 = _2665;
            _2666 = _2667;
            _2668 = _2669;
            _2670 = _2671;
            _2672 = _2673;
        }
        float _2677 = isnan(1.0) ? _820 : (isnan(_820) ? 1.0 : min(_820, 1.0));
        _2628 = (_2677 * _2668) + _2373;
        _2630 = (_2677 * _2670) + _2374;
        _2632 = (_2677 * _2672) + _2375;
        _2634 = ((_2662 * 0.039999999105930328369140625) * _2677) + _2539;
        _2636 = ((_2664 * 0.039999999105930328369140625) * _2677) + _2540;
        _2638 = ((_2666 * 0.039999999105930328369140625) * _2677) + _2541;
    }
    else
    {
        _2628 = _2373;
        _2630 = _2374;
        _2632 = _2375;
        _2634 = _2539;
        _2636 = _2540;
        _2638 = _2541;
    }
    float _2751;
    float _2752;
    float _2753;
    if (_725 > 0.0)
    {
        uint _2684 = _2155 + 4u;
        float _2690 = (-0.0) - _499;
        float _2691 = (-0.0) - _500;
        float _2692 = (-0.0) - _501;
        float _2693 = dot(vec3(cbLight._m0[_2155].xyz), vec3(_2690, _2691, _2692));
        float _4317 = isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : max(_2693, 0.0));
        float _2697 = _831 + 1.0;
        float _2699 = (isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : max(_2697, 0.0))) * 0.5;
        float _2704 = _2699 * _2699;
        float _2705 = _2704 * exp2(log2(isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0))) * 32.0);
        float _2707 = _725 / (_725 + 1.0);
        float _2708 = isnan(_2164) ? 1.0 : (isnan(1.0) ? _2164 : min(1.0, _2164));
        uint _2721 = _2155 + 5u;
        float _2727 = dot(vec3(cbLight._m0[_2191].xyz), vec3(_2690, _2691, _2692));
        float _4338 = isnan(0.0) ? _2727 : (isnan(_2727) ? 0.0 : max(_2727, 0.0));
        float _2734 = _2704 * exp2(log2(isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0))) * 32.0);
        float _2735 = isnan(_2165) ? 1.0 : (isnan(1.0) ? _2165 : min(1.0, _2165));
        _2751 = ((((_2734 * cbLight._m0[_2721].x) * _2707) * _2735) + ((((cbLight._m0[_2684].x * _2144) * _2705) * _2707) * _2708)) * 0.3183098733425140380859375;
        _2752 = ((((_2734 * cbLight._m0[_2721].y) * _2707) * _2735) + ((((cbLight._m0[_2684].y * _2146) * _2705) * _2707) * _2708)) * 0.3183098733425140380859375;
        _2753 = ((((_2734 * cbLight._m0[_2721].z) * _2707) * _2735) + ((((cbLight._m0[_2684].z * _2148) * _2705) * _2707) * _2708)) * 0.3183098733425140380859375;
    }
    else
    {
        _2751 = 0.0;
        _2752 = 0.0;
        _2753 = 0.0;
    }
    float _4354 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
    float _4365 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _4376 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
    float _4387 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
    float _2768 = (isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0))) * ((_2628 + ((isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0))) * _820)) + _2751);
    float _2769 = (isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0))) * ((_2630 + ((isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0))) * _820)) + _2752);
    float _2770 = (isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0))) * ((_2632 + ((isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0))) * _820)) + _2753);
    float _2774 = 0.959999978542327880859375 - (exp2(log2(1.0 - _835) * 5.0) * 0.959999978542327880859375);
    float _2785 = (_2768 + ((_2634 + ((isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0))) * _1662)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _659.x) * _2774) - _2768) * _705);
    float _2787 = (_2769 + ((_2636 + ((isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0))) * _1662)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _659.y) * _2774) - _2769) * _705);
    float _2789 = (_2770 + ((_2638 + ((isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0))) * _1662)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _659.z) * _2774) - _2770) * _705);
    float _2794 = cbInstanceData._m0[_306 + 6u].w * (isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0)));
    float _2799 = _759 / cbSceneParam._m0[86u].x;
    float _2800 = _760 / cbSceneParam._m0[86u].y;
    vec4 _2814 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2799, _2800, (log2((isnan(cbSceneParam._m0[77u].w) ? _742 : (isnan(_742) ? cbSceneParam._m0[77u].w : min(_742, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2816 = _2814.x;
    float _2817 = _2814.y;
    float _2818 = _2814.z;
    float _2819 = _2814.w;
    float _2886;
    float _2888;
    float _2890;
    float _2892;
    if (_742 > cbSceneParam._m0[78u].w)
    {
        float _2849 = isnan(_742) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _742 : min(cbSceneParam._m0[80u].w, _742));
        float _2850 = _2849 / _742;
        float _2861 = _2850 * _298;
        float _2862 = _299 * _2850;
        float _2863 = (-0.0) - _2862;
        float _2864 = _2850 * _300;
        float _2866 = (cbSceneParam._m0[77u].w * _2863) / _2849;
        float _2867 = _2866 + cbSceneParam._m0[79u].w;
        float _2868 = cbSceneParam._m0[79u].w - _2862;
        float _2874 = sqrt(((_2861 * _2861) + (_2862 * _2862)) + (_2864 * _2864));
        float _2877 = (1.0 - (cbSceneParam._m0[77u].w / _2849)) * _2874;
        float _2882 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2884 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3285;
        if (abs((_2863 - _2866) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3285 = ((((_2867 > 0.0) ? exp2(_2882 * _2867) : (2.0 - exp2(_2884 * _2867))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2877;
        }
        else
        {
            float _3001 = 1.0 / cbSceneParam._m0[80u].x;
            float _3002 = isnan(_2868) ? _2867 : (isnan(_2867) ? _2868 : max(_2867, _2868));
            float _3003 = isnan(_2868) ? _2867 : (isnan(_2867) ? _2868 : min(_2867, _2868));
            float _3012 = isnan(0.0) ? _3002 : (isnan(_3002) ? 0.0 : min(_3002, 0.0));
            float _3013 = isnan(0.0) ? _3003 : (isnan(_3003) ? 0.0 : min(_3003, 0.0));
            _3285 = ((abs(_2874 / _2863) * cbSceneParam._m0[80u].y) * ((((_3012 - _3013) * 2.0) - ((exp2(_2882 * (isnan(0.0) ? _3002 : (isnan(_3002) ? 0.0 : max(_3002, 0.0)))) - exp2(_2882 * (isnan(0.0) ? _3003 : (isnan(_3003) ? 0.0 : max(_3003, 0.0))))) * _3001)) - ((exp2(_2884 * _3012) - exp2(_2884 * _3013)) * _3001))) + (_2877 * cbSceneParam._m0[80u].z);
        }
        vec4 _3287 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2799, _2800, 1.0), 0.0);
        float _3296 = exp2((_3285 * (-1.44269502162933349609375)) * (1.0 - _3287.w));
        float _3297 = log2(_3296);
        float _3313 = log2(_2819);
        _2886 = (exp2(_3313 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3297 * cbSceneParam._m0[78u].x)) * _3287.x) / cbSceneParam._m0[78u].x)) + _2816;
        _2888 = (exp2(_3313 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3297 * cbSceneParam._m0[78u].y)) * _3287.y) / cbSceneParam._m0[78u].y)) + _2817;
        _2890 = (exp2(_3313 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3297 * cbSceneParam._m0[78u].z)) * _3287.z) / cbSceneParam._m0[78u].z)) + _2818;
        _2892 = _3296 * _2819;
    }
    else
    {
        _2886 = _2816;
        _2888 = _2817;
        _2890 = _2818;
        _2892 = _2819;
    }
    bool _3323;
    float _2947;
    vec4 _2950;
    float _2952;
    vec4 _2954;
    float _2962;
    float _2963;
    float _2964;
    float _2965;
    bool _2975;
    for (;;)
    {
        bool _2904 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2905 = log2(_2892);
        float _2912 = exp2(_2905 * cbSceneParam._m0[78u].x) * _2785;
        float _2913 = exp2(_2905 * cbSceneParam._m0[78u].y) * _2787;
        float _2914 = exp2(_2905 * cbSceneParam._m0[78u].z) * _2789;
        vec4 _2922 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_759, _760));
        float _2924 = _2922.x;
        float _2945 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2924)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2924))) - _742) * cbMtdParam._m0[17u].y;
        float _4438 = isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : max(_2945, 0.0));
        _2947 = _2794 * (isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0)));
        float _2948 = _749 + (-0.5);
        _2950 = cbMtdParam._m0[1u];
        _2952 = _2950.y * _2948;
        _2954 = cbMatDynParam._m0[0u];
        float _2961 = (roundEven(_2954.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2962 = _2961 * (_2904 ? _2912 : (_2912 + (cbSceneParam._m0[72u].w * _2886)));
        _2963 = _2961 * (_2904 ? _2913 : (_2913 + (cbSceneParam._m0[72u].w * _2888)));
        _2964 = _2961 * (_2904 ? _2914 : (_2914 + (cbSceneParam._m0[72u].w * _2890)));
        _2965 = _2948 * 0.999000012874603271484375;
        _2975 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2975)
        {
            if ((cbInstanceData._m0[_306 + 7u].x + _2965) < 0.5)
            {
                _3323 = true;
                break;
            }
        }
        uint _3036 = _797 + uint(_2954.w);
        if ((cbInstanceData._m0[_3036].w < 1.0) && ((cbInstanceData._m0[_3036].w + _2965) < 0.5))
        {
            _3323 = true;
            break;
        }
        if ((_2952 + _409) < _2950.x)
        {
            _3323 = true;
            break;
        }
        _3323 = false;
        break;
    }
    float _3328;
    if (_3323)
    {
        discard_state = true;
        _3328 = 0.0;
    }
    else
    {
        _3328 = _2947;
    }
    SV_Target.x = _2962;
    SV_Target.y = _2963;
    SV_Target.z = _2964;
    SV_Target.w = _3328;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2947;
    discard_exit();
}


