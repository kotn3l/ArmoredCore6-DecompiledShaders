#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1204;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _207 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _208 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _209 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _215 = inversesqrt(dot(vec3(_207, _208, _209), vec3(_207, _208, _209)));
    float _216 = _215 * _207;
    float _217 = _215 * _208;
    float _218 = _215 * _209;
    float _222 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _223 = _222 * NORMAL.x;
    float _224 = _222 * NORMAL.y;
    float _225 = _222 * NORMAL.z;
    float _229 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _230 = _229 * TANGENT.x;
    float _231 = _229 * TANGENT.y;
    float _232 = _229 * TANGENT.z;
    float _237;
    float _238;
    float _239;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _237 = (-0.0) - _223;
        _238 = (-0.0) - _224;
        _239 = (-0.0) - _225;
    }
    else
    {
        _237 = _223;
        _238 = _224;
        _239 = _225;
    }
    float _286 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _296 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _286);
    float _297 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _286);
    float _298 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _286);
    uint _304 = uint(roundEven(NORMAL.w)) * 13u;
    uint _309 = _304 + 1u;
    uint _313 = _304 + 2u;
    float _322 = sqrt(((cbInstanceData._m0[_309].x * cbInstanceData._m0[_309].x) + (cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x)) + (cbInstanceData._m0[_313].x * cbInstanceData._m0[_313].x));
    float _323 = _322 * TEXCOORD.z;
    float _324 = _322 * TEXCOORD.w;
    vec4 _338 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _347 = (_338.x * 2.0) + (-1.0);
    float _349 = (_338.y * 2.0) + (-1.0);
    float _350 = dot(vec2(_347, _349), vec2(_347, _349));
    float _3091 = isnan(0.0) ? _350 : (isnan(_350) ? 0.0 : max(_350, 0.0));
    float _356 = sqrt(1.0 - (isnan(1.0) ? _3091 : (isnan(_3091) ? 1.0 : min(_3091, 1.0))));
    float _359 = fma(_356, _237, fma(_349, _230, _347 * _216));
    float _362 = fma(_356, _238, fma(_349, _231, _347 * _217));
    float _365 = fma(_356, _239, fma(_349, _232, _347 * _218));
    float _369 = inversesqrt(dot(vec3(_359, _362, _365), vec3(_359, _362, _365)));
    vec4 _402 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _407 = _402.w;
    float _419 = dot(vec3(_296, _297, _298), vec3(_216, _217, _218));
    float _422 = dot(vec3(_296, _297, _298), vec3(_230, _231, _232));
    float _425 = dot(vec3(_296, _297, _298), vec3(_237, _238, _239));
    float _431 = inversesqrt(dot(vec3(_419, _422, _425), vec3(_419, _422, _425)));
    float _453 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _473 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_419 * cbMtdParam._m0[14u].x) * _431) * _453) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_422 * cbMtdParam._m0[14u].x) * _431) * _453) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _496 = inversesqrt(dot(vec3(_296, _297, _298), vec3(_296, _297, _298)));
    float _497 = _496 * _296;
    float _498 = _496 * _297;
    float _499 = _496 * _298;
    float _500 = dot(vec4(_497, _498, _499, 0.0), vec4(_237, _238, _239, 0.0));
    float _503 = _500 - cbMtdParam._m0[15u].z;
    float _3102 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0));
    float _510 = exp2(log2(1.0 - (isnan(1.0) ? _3102 : (isnan(_3102) ? 1.0 : min(_3102, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _525 = ((((_402.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _473.x) * cbMtdParam._m0[9u].x) * ((_510 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _530 = ((((_402.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _473.y) * cbMtdParam._m0[9u].y) * ((_510 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _535 = ((((_402.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _473.z) * cbMtdParam._m0[9u].z) * ((_510 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _544 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _323) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _324) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3118 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _545 = isnan(1.0) ? _3118 : (isnan(_3118) ? 1.0 : min(_3118, 1.0));
    float _552 = (_545 * (cbMtdParam._m0[11u].x - _525)) + _525;
    float _553 = ((cbMtdParam._m0[11u].y - _530) * _545) + _530;
    float _554 = ((cbMtdParam._m0[11u].z - _535) * _545) + _535;
    vec4 _566 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _323) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _324) + cbTextureTilingScale._m0[9u].w));
    float _573 = (_566.x * 2.0) + (-1.0);
    float _574 = (_566.y * 2.0) + (-1.0);
    float _575 = dot(vec2(_573, _574), vec2(_573, _574));
    float _3129 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    vec4 _596 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _608 = cbMtdParam._m0[17u].z + _338.z;
    float _614 = (_608 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_596.z - _608));
    float _617 = ((_566.z - _614) * _545) + _614;
    float _623 = ((((_596.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _347;
    float _624 = ((((_596.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _349;
    float _636 = (((_573 - _623) + (_623 * cbMtdParam._m0[14u].z)) * _545) + _623;
    float _637 = (((_574 - _624) + (_624 * cbMtdParam._m0[14u].z)) * _545) + _624;
    float _638 = (_545 * (sqrt(1.0 - (isnan(1.0) ? _3129 : (isnan(_3129) ? 1.0 : min(_3129, 1.0)))) - _356)) + _356;
    float _654 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _656 = _654 - (_654 * _545);
    float _665 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _666 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _676 = cbSceneParam._m0[86u].x * ((_665 / cbSceneParam._m0[86u].x) + ((_369 * _359) * cbMtdParam._m0[18u].y));
    float _677 = cbSceneParam._m0[86u].y * ((_666 / cbSceneParam._m0[86u].y) + ((_369 * _362) * cbMtdParam._m0[18u].y));
    float _684 = isnan(cbInstanceData._m0[8u].x) ? _676 : (isnan(_676) ? cbInstanceData._m0[8u].x : max(_676, cbInstanceData._m0[8u].x));
    float _685 = isnan(cbInstanceData._m0[8u].y) ? _677 : (isnan(_677) ? cbInstanceData._m0[8u].y : max(_677, cbInstanceData._m0[8u].y));
    vec4 _689 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _684 : (isnan(_684) ? cbInstanceData._m0[8u].z : min(_684, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _685 : (isnan(_685) ? cbInstanceData._m0[8u].w : min(_685, cbInstanceData._m0[8u].w))));
    float _722 = _500 - cbMtdParam._m0[15u].x;
    float _3160 = isnan(0.0) ? _722 : (isnan(_722) ? 0.0 : max(_722, 0.0));
    float _732 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3160 : (isnan(_3160) ? 1.0 : min(_3160, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3176 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
    float _733 = isnan(1.0) ? _3176 : (isnan(_3176) ? 1.0 : min(_3176, 1.0));
    float _735 = _733 - (_545 * _733);
    float _739 = fma(_638, _237, fma(_637, _230, _636 * _216));
    float _742 = fma(_638, _238, fma(_637, _231, _636 * _217));
    float _745 = fma(_638, _239, fma(_637, _232, _636 * _218));
    float _749 = inversesqrt(dot(vec3(_739, _742, _745), vec3(_739, _742, _745)));
    float _750 = _749 * _739;
    float _751 = _749 * _742;
    float _752 = _749 * _745;
    float _3187 = isnan(0.0) ? _407 : (isnan(_407) ? 0.0 : max(_407, 0.0));
    float _753 = isnan(1.0) ? _3187 : (isnan(_3187) ? 1.0 : min(_3187, 1.0));
    float _3198 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _754 = isnan(1.0) ? _3198 : (isnan(_3198) ? 1.0 : min(_3198, 1.0));
    float _755 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _3214 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _3225 = isnan(0.0) ? _553 : (isnan(_553) ? 0.0 : max(_553, 0.0));
    float _3236 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0));
    float _772 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _790 = fma(_752, cbSceneParam._m0[5u].z, fma(_751, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _750));
    float _793 = fma(_752, cbSceneParam._m0[6u].z, fma(_751, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _750));
    float _796 = fma(_752, cbSceneParam._m0[7u].z, fma(_751, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _750));
    uint _810 = (_304 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _816 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3214 : (isnan(_3214) ? 1.0 : min(_3214, 1.0)))) * cbInstanceData._m0[_810].x;
    float _817 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3225 : (isnan(_3225) ? 1.0 : min(_3225, 1.0)))) * cbInstanceData._m0[_810].y;
    float _818 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3236 : (isnan(_3236) ? 1.0 : min(_3236, 1.0)))) * cbInstanceData._m0[_810].z;
    float _3247 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _819 = isnan(1.0) ? _3247 : (isnan(_3247) ? 1.0 : min(_3247, 1.0));
    float _3258 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    float _820 = isnan(1.0) ? _3258 : (isnan(_3258) ? 1.0 : min(_3258, 1.0));
    float _3269 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
    float _821 = isnan(1.0) ? _3269 : (isnan(_3269) ? 1.0 : min(_3269, 1.0));
    vec4 _825 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _665, cbSceneParam._m0[86u].y * _666));
    float _828 = _825.x * TEXCOORD_5.w;
    float _829 = dot(vec3(_750, _751, _752), vec3(_497, _498, _499));
    float _832 = _829 * 2.0;
    float _836 = (_832 * _750) - _497;
    float _837 = (_832 * _751) - _498;
    float _838 = (_832 * _752) - _499;
    float _839 = dot(vec3(_497, _498, _499), vec3(_750, _751, _752));
    float _842 = abs(_839);
    float _3280 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _843 = isnan(1.0) ? _3280 : (isnan(_3280) ? 1.0 : min(_3280, 1.0));
    float _849 = sqrt(_754);
    float _861 = exp2((_849 * 5.0) * log2(1.0 - (_843 * 0.999000012874603271484375))) / (4.0 - (_849 * 3.0));
    float _893 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _897 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _901 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1203;
    float _1205;
    float _1206;
    float _1207;
    float _1208;
    float _1209;
    float _1210;
    float _1211;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _928 = fma(_901, cbModelParam._m0[26u].z, fma(_897, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _893));
        float _932 = fma(_901, cbModelParam._m0[27u].z, fma(_897, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _893));
        float _936 = fma(_901, cbModelParam._m0[28u].z, fma(_897, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _893));
        float _961 = _893 + _750;
        float _962 = _897 + _751;
        float _963 = _901 + _752;
        float _973 = fma(_963, cbModelParam._m0[26u].z, fma(_962, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _961)) - _928;
        float _974 = fma(_963, cbModelParam._m0[27u].z, fma(_962, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _961)) - _932;
        float _975 = fma(_963, cbModelParam._m0[28u].z, fma(_962, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _961)) - _936;
        float _979 = inversesqrt(dot(vec3(_973, _974, _975), vec3(_973, _974, _975)));
        float _992 = ((_979 * _973) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_928 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _993 = ((_979 * _974) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_932 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _994 = ((_979 * _975) / cbModelParam._m0[34u].z) + ((((((_936 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _997 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_992, _993, _994), 0.0);
        vec4 _1004 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_992, _993, _994), 0.0);
        vec4 _1011 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_992, _993, _994), 0.0);
        vec4 _1018 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_992, _993, _994), 0.0);
        float _1031 = exp2((_997.w + (-0.5)) * 20.0) * 2.0;
        float _1032 = _1031 * (_997.x + (-0.5));
        float _1033 = _1031 * (_997.y + (-0.5));
        float _1034 = _1031 * (_997.z + (-0.5));
        float _1041 = exp2((_1004.w + (-0.5)) * 20.0) * 2.0;
        float _1042 = _1041 * (_1004.x + (-0.5));
        float _1043 = _1041 * (_1004.y + (-0.5));
        float _1044 = _1041 * (_1004.z + (-0.5));
        float _1051 = exp2((_1011.w + (-0.5)) * 20.0) * 2.0;
        float _1052 = _1051 * (_1011.x + (-0.5));
        float _1053 = _1051 * (_1011.y + (-0.5));
        float _1054 = _1051 * (_1011.z + (-0.5));
        float _1061 = exp2((_1018.w + (-0.5)) * 20.0) * 2.0;
        float _1062 = _1061 * (_1018.x + (-0.5));
        float _1063 = _1061 * (_1018.y + (-0.5));
        float _1064 = _1061 * (_1018.z + (-0.5));
        float _1065 = isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0));
        float _1066 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
        float _1067 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
        float _1068 = _1032 * 0.5;
        float _1069 = _1042 * 0.5;
        float _1070 = _1052 * 0.5;
        float _1071 = dot(vec3(_1068, _1069, _1070), vec3(_1068, _1069, _1070));
        float _1076 = (_1071 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1071);
        float _1085 = (dot(vec3(_750, _751, _752), vec3(_1076 * _1068, _1076 * _1069, _1076 * _1070)) + 1.0) * 0.5;
        float _3306 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1095 = sqrt(((_1069 * _1069) + (_1068 * _1068)) + (_1070 * _1070)) / (_1065 + 9.9999997473787516355514526367188e-06);
        float _3317 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
        float _1096 = isnan(1.0) ? _3317 : (isnan(_3317) ? 1.0 : min(_3317, 1.0));
        float _1097 = _1096 * 2.0;
        float _1101 = (1.0 - _1096) / (_1096 + 1.0);
        float _3328 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1102 = isnan(1.0) ? _3328 : (isnan(_3328) ? 1.0 : min(_3328, 1.0));
        float _1111 = ((((1.0 - _1102) * (_1097 + 2.0)) * exp2(log2(isnan(1.0) ? _3306 : (isnan(_3306) ? 1.0 : min(_3306, 1.0))) * (_1097 + 1.0))) + _1102) * _1065;
        float _1112 = _1033 * 0.5;
        float _1113 = _1043 * 0.5;
        float _1114 = _1053 * 0.5;
        float _1115 = dot(vec3(_1112, _1113, _1114), vec3(_1112, _1113, _1114));
        float _1120 = (_1115 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1115);
        float _1128 = (dot(vec3(_750, _751, _752), vec3(_1120 * _1112, _1120 * _1113, _1120 * _1114)) + 1.0) * 0.5;
        float _3339 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
        float _1137 = sqrt(((_1113 * _1113) + (_1112 * _1112)) + (_1114 * _1114)) / (_1066 + 9.9999997473787516355514526367188e-06);
        float _3350 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
        float _1138 = isnan(1.0) ? _3350 : (isnan(_3350) ? 1.0 : min(_3350, 1.0));
        float _1139 = _1138 * 2.0;
        float _1143 = (1.0 - _1138) / (_1138 + 1.0);
        float _3361 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1144 = isnan(1.0) ? _3361 : (isnan(_3361) ? 1.0 : min(_3361, 1.0));
        float _1153 = ((((1.0 - _1144) * (_1139 + 2.0)) * exp2(log2(isnan(1.0) ? _3339 : (isnan(_3339) ? 1.0 : min(_3339, 1.0))) * (_1139 + 1.0))) + _1144) * _1066;
        float _1154 = _1034 * 0.5;
        float _1155 = _1044 * 0.5;
        float _1156 = _1054 * 0.5;
        float _1157 = dot(vec3(_1154, _1155, _1156), vec3(_1154, _1155, _1156));
        float _1162 = (_1157 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1157);
        float _1170 = (dot(vec3(_750, _751, _752), vec3(_1162 * _1154, _1162 * _1155, _1162 * _1156)) + 1.0) * 0.5;
        float _3372 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1179 = sqrt(((_1155 * _1155) + (_1154 * _1154)) + (_1156 * _1156)) / (_1067 + 9.9999997473787516355514526367188e-06);
        float _3383 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1180 = isnan(1.0) ? _3383 : (isnan(_3383) ? 1.0 : min(_3383, 1.0));
        float _1181 = _1180 * 2.0;
        float _1185 = (1.0 - _1180) / (_1180 + 1.0);
        float _3394 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1186 = isnan(1.0) ? _3394 : (isnan(_3394) ? 1.0 : min(_3394, 1.0));
        float _1195 = ((((1.0 - _1186) * (_1181 + 2.0)) * exp2(log2(isnan(1.0) ? _3372 : (isnan(_3372) ? 1.0 : min(_3372, 1.0))) * (_1181 + 1.0))) + _1186) * _1067;
        _1203 = _1034;
        _1205 = _1033;
        _1206 = _1032;
        _1207 = _1044;
        _1208 = _1043;
        _1209 = _1042;
        _1210 = _1054;
        _1211 = _1053;
        _1212 = _1052;
        _1213 = _1067;
        _1214 = _1066;
        _1215 = _1065;
        _1216 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0)));
        _1217 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0)));
        _1218 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0)));
    }
    else
    {
        _1203 = _1204;
        _1205 = _1204;
        _1206 = _1204;
        _1207 = _1204;
        _1208 = _1204;
        _1209 = _1204;
        _1210 = _1204;
        _1211 = _1204;
        _1212 = _1204;
        _1213 = _1204;
        _1214 = _1204;
        _1215 = _1204;
        _1216 = 0.0;
        _1217 = 0.0;
        _1218 = 0.0;
    }
    float _1513;
    float _1514;
    float _1515;
    float _1516;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1244 = fma(_901, cbModelParam._m0[30u].z, fma(_897, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _893));
        float _1248 = fma(_901, cbModelParam._m0[31u].z, fma(_897, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _893));
        float _1252 = fma(_901, cbModelParam._m0[32u].z, fma(_897, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _893));
        float _1275 = _893 + _750;
        float _1276 = _897 + _751;
        float _1277 = _901 + _752;
        float _1287 = fma(_1277, cbModelParam._m0[30u].z, fma(_1276, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1275)) - _1244;
        float _1288 = fma(_1277, cbModelParam._m0[31u].z, fma(_1276, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1275)) - _1248;
        float _1289 = fma(_1277, cbModelParam._m0[32u].z, fma(_1276, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1275)) - _1252;
        float _1293 = inversesqrt(dot(vec3(_1287, _1288, _1289), vec3(_1287, _1288, _1289)));
        float _1306 = ((_1293 * _1287) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1244 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1307 = ((_1293 * _1288) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1248 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1308 = ((_1293 * _1289) / cbModelParam._m0[35u].z) + ((((((_1252 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1310 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1306, _1307, _1308), 0.0);
        vec4 _1317 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1306, _1307, _1308), 0.0);
        vec4 _1324 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1306, _1307, _1308), 0.0);
        vec4 _1331 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1306, _1307, _1308), 0.0);
        float _1343 = exp2((_1310.w + (-0.5)) * 20.0) * 2.0;
        float _1344 = _1343 * (_1310.x + (-0.5));
        float _1345 = _1343 * (_1310.y + (-0.5));
        float _1346 = _1343 * (_1310.z + (-0.5));
        float _1353 = exp2((_1317.w + (-0.5)) * 20.0) * 2.0;
        float _1354 = _1353 * (_1317.x + (-0.5));
        float _1355 = _1353 * (_1317.y + (-0.5));
        float _1356 = _1353 * (_1317.z + (-0.5));
        float _1363 = exp2((_1324.w + (-0.5)) * 20.0) * 2.0;
        float _1364 = _1363 * (_1324.x + (-0.5));
        float _1365 = _1363 * (_1324.y + (-0.5));
        float _1366 = _1363 * (_1324.z + (-0.5));
        float _1373 = exp2((_1331.w + (-0.5)) * 20.0) * 2.0;
        float _1374 = _1373 * (_1331.x + (-0.5));
        float _1375 = _1373 * (_1331.y + (-0.5));
        float _1376 = _1373 * (_1331.z + (-0.5));
        float _1377 = isnan(0.0) ? _1374 : (isnan(_1374) ? 0.0 : max(_1374, 0.0));
        float _1378 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
        float _1379 = isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0));
        float _1380 = _1344 * 0.5;
        float _1381 = _1354 * 0.5;
        float _1382 = _1364 * 0.5;
        float _1383 = dot(vec3(_1380, _1381, _1382), vec3(_1380, _1381, _1382));
        float _1388 = (_1383 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1383);
        float _1396 = (dot(vec3(_750, _751, _752), vec3(_1388 * _1380, _1388 * _1381, _1388 * _1382)) + 1.0) * 0.5;
        float _3435 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1405 = sqrt(((_1381 * _1381) + (_1380 * _1380)) + (_1382 * _1382)) / (_1377 + 9.9999997473787516355514526367188e-06);
        float _3446 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1406 = isnan(1.0) ? _3446 : (isnan(_3446) ? 1.0 : min(_3446, 1.0));
        float _1407 = _1406 * 2.0;
        float _1411 = (1.0 - _1406) / (_1406 + 1.0);
        float _3457 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
        float _1412 = isnan(1.0) ? _3457 : (isnan(_3457) ? 1.0 : min(_3457, 1.0));
        float _1421 = ((((1.0 - _1412) * (_1407 + 2.0)) * exp2(log2(isnan(1.0) ? _3435 : (isnan(_3435) ? 1.0 : min(_3435, 1.0))) * (_1407 + 1.0))) + _1412) * _1377;
        float _1422 = _1345 * 0.5;
        float _1423 = _1355 * 0.5;
        float _1424 = _1365 * 0.5;
        float _1425 = dot(vec3(_1422, _1423, _1424), vec3(_1422, _1423, _1424));
        float _1430 = (_1425 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1425);
        float _1438 = (dot(vec3(_750, _751, _752), vec3(_1430 * _1422, _1430 * _1423, _1430 * _1424)) + 1.0) * 0.5;
        float _3468 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1447 = sqrt(((_1423 * _1423) + (_1422 * _1422)) + (_1424 * _1424)) / (_1378 + 9.9999997473787516355514526367188e-06);
        float _3479 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
        float _1448 = isnan(1.0) ? _3479 : (isnan(_3479) ? 1.0 : min(_3479, 1.0));
        float _1449 = _1448 * 2.0;
        float _1453 = (1.0 - _1448) / (_1448 + 1.0);
        float _3490 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1454 = isnan(1.0) ? _3490 : (isnan(_3490) ? 1.0 : min(_3490, 1.0));
        float _1463 = ((((1.0 - _1454) * (_1449 + 2.0)) * exp2(log2(isnan(1.0) ? _3468 : (isnan(_3468) ? 1.0 : min(_3468, 1.0))) * (_1449 + 1.0))) + _1454) * _1378;
        float _1464 = _1346 * 0.5;
        float _1465 = _1356 * 0.5;
        float _1466 = _1366 * 0.5;
        float _1467 = dot(vec3(_1464, _1465, _1466), vec3(_1464, _1465, _1466));
        float _1472 = (_1467 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1467);
        float _1480 = (dot(vec3(_750, _751, _752), vec3(_1472 * _1464, _1472 * _1465, _1472 * _1466)) + 1.0) * 0.5;
        float _3501 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1489 = sqrt(((_1465 * _1465) + (_1464 * _1464)) + (_1466 * _1466)) / (_1379 + 9.9999997473787516355514526367188e-06);
        float _3512 = isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0));
        float _1490 = isnan(1.0) ? _3512 : (isnan(_3512) ? 1.0 : min(_3512, 1.0));
        float _1491 = _1490 * 2.0;
        float _1495 = (1.0 - _1490) / (_1490 + 1.0);
        float _3523 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
        float _1496 = isnan(1.0) ? _3523 : (isnan(_3523) ? 1.0 : min(_3523, 1.0));
        float _1505 = ((((1.0 - _1496) * (_1491 + 2.0)) * exp2(log2(isnan(1.0) ? _3501 : (isnan(_3501) ? 1.0 : min(_3501, 1.0))) * (_1491 + 1.0))) + _1496) * _1379;
        _1513 = _1346;
        _1514 = _1345;
        _1515 = _1344;
        _1516 = _1356;
        _1517 = _1355;
        _1518 = _1354;
        _1519 = _1366;
        _1520 = _1365;
        _1521 = _1364;
        _1522 = _1379;
        _1523 = _1378;
        _1524 = _1377;
        _1525 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0)));
        _1526 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0)));
        _1527 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0)));
    }
    else
    {
        _1513 = _1204;
        _1514 = _1204;
        _1515 = _1204;
        _1516 = _1204;
        _1517 = _1204;
        _1518 = _1204;
        _1519 = _1204;
        _1520 = _1204;
        _1521 = _1204;
        _1522 = _1204;
        _1523 = _1204;
        _1524 = _1204;
        _1525 = 0.0;
        _1526 = 0.0;
        _1527 = 0.0;
    }
    float _1537 = (cbModelParam._m0[1u].x * (_1525 - _1216)) + _1216;
    float _1538 = (cbModelParam._m0[1u].x * (_1526 - _1217)) + _1217;
    float _1539 = (cbModelParam._m0[1u].x * (_1527 - _1218)) + _1218;
    float _1560 = fma(_1539, cbSceneParam._m0[89u].z, fma(_1538, cbSceneParam._m0[89u].y, _1537 * cbSceneParam._m0[89u].x));
    float _1563 = fma(_1539, cbSceneParam._m0[90u].z, fma(_1538, cbSceneParam._m0[90u].y, _1537 * cbSceneParam._m0[90u].x));
    float _1566 = fma(_1539, cbSceneParam._m0[91u].z, fma(_1538, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1537));
    float _1581 = _836 * 0.5;
    float _1582 = _837 * 0.5;
    float _1583 = _838 * 0.5;
    float _1584 = dot(vec4(_1581, _1582, _1583, 1.0), vec4(_1515, _1518, _1521, _1524));
    float _1587 = dot(vec4(_1581, _1582, _1583, 1.0), vec4(_1514, _1517, _1520, _1523));
    float _1590 = dot(vec4(_1581, _1582, _1583, 1.0), vec4(_1513, _1516, _1519, _1522));
    float _1624;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1597 = dot(vec4(_1581, _1582, _1583, 1.0), vec4(_1203, _1207, _1210, _1213));
        float _1601 = dot(vec4(_1581, _1582, _1583, 1.0), vec4(_1205, _1208, _1211, _1214));
        float _1605 = dot(vec4(_1581, _1582, _1583, 1.0), vec4(_1206, _1209, _1212, _1215));
        float _1612 = dot(vec4(cbModelParam._m0[39u]), vec4(_1581, _1582, _1583, 1.0));
        _1624 = dot(vec3(isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0)), isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0)), isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1612) ? 0.0 : (isnan(0.0) ? _1612 : max(0.0, _1612))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1624 = 1.0;
    }
    float _1635;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1626 = dot(vec4(cbModelParam._m0[40u]), vec4(_1581, _1582, _1583, 1.0));
        _1635 = dot(vec3(isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0)), isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0)), isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1626) ? 0.0 : (isnan(0.0) ? _1626 : max(0.0, _1626))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1635 = 1.0;
    }
    float _1639 = (_1635 * cbModelParam._m0[1u].x) + (_1624 * (1.0 - cbModelParam._m0[1u].x));
    float _1649 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _754);
    float _1650 = isnan(_1649) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1649 : min(cbModelParam._m0[25u].z, _1649));
    float _1730;
    float _1732;
    float _1734;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1697 = fma(_901, cbModelParam._m0[13u].z, fma(_897, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _893)) + cbModelParam._m0[13u].w;
        float _1701 = fma(_901, cbModelParam._m0[14u].z, fma(_897, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _893)) + cbModelParam._m0[14u].w;
        float _1705 = fma(_901, cbModelParam._m0[15u].z, fma(_897, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _893)) + cbModelParam._m0[15u].w;
        float _1708 = fma(_838, cbModelParam._m0[13u].z, fma(_837, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _836));
        float _1711 = fma(_838, cbModelParam._m0[14u].z, fma(_837, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _836));
        float _1714 = fma(_838, cbModelParam._m0[15u].z, fma(_837, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _836));
        float _1742;
        if (_1708 > 0.0)
        {
            _1742 = abs((1.0 - _1697) / _1708);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1708 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1697 + 1.0) / _1708);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1742 = frontier_phi_16_14_ladder;
        }
        float _1914;
        if (_1711 > 0.0)
        {
            _1914 = abs((1.0 - _1701) / _1711);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1711 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1701 + 1.0) / _1711);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1914 = frontier_phi_25_21_ladder;
        }
        float _2149;
        if (_1714 > 0.0)
        {
            _2149 = abs((1.0 - _1705) / _1714);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1714 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1705 + 1.0) / _1714);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2149 = frontier_phi_36_32_ladder;
        }
        float _2151 = isnan(_1914) ? _1742 : (isnan(_1742) ? _1914 : min(_1742, _1914));
        float _2152 = isnan(_2149) ? _2151 : (isnan(_2151) ? _2149 : min(_2151, _2149));
        float _2156 = (_2152 * _1708) + _1697;
        float _2157 = (_2152 * _1711) + _1701;
        float _2158 = (_2152 * _1714) + _1705;
        float _2159 = _2152 * 9.9999997473787516355514526367188e-05;
        float _2161 = (-1.0) - _2159;
        float _2163 = _2159 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2158 > _2163) || ((_2158 < _2161) || ((_2157 > _2163) || ((_2157 < _2161) || ((_2156 < _2161) || (_2156 > _2163))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2308 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2158, cbModelParam._m0[9u].z, fma(_2157, cbModelParam._m0[9u].y, _2156 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2158, cbModelParam._m0[10u].z, fma(_2157, cbModelParam._m0[10u].y, _2156 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2158, cbModelParam._m0[11u].z, fma(_2157, cbModelParam._m0[11u].y, _2156 * cbModelParam._m0[11u].x))), _1650);
            frontier_phi_15_36_ladder = _2308.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2308.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2308.y * cbModelParam._m0[1u].y;
        }
        _1730 = frontier_phi_15_36_ladder_1;
        _1732 = frontier_phi_15_36_ladder_2;
        _1734 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1718 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_836, _837, _838), _1650);
        _1730 = _1718.x * cbModelParam._m0[1u].y;
        _1732 = _1718.y * cbModelParam._m0[1u].y;
        _1734 = _1718.z * cbModelParam._m0[1u].y;
    }
    float _1738 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _754);
    float _1739 = isnan(_1738) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1738 : min(cbModelParam._m0[25u].w, _1738));
    float _1831;
    float _1833;
    float _1835;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1795 = fma(_901, cbModelParam._m0[21u].z, fma(_897, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _893)) + cbModelParam._m0[21u].w;
        float _1799 = fma(_901, cbModelParam._m0[22u].z, fma(_897, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _893)) + cbModelParam._m0[22u].w;
        float _1803 = fma(_901, cbModelParam._m0[23u].z, fma(_897, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _893)) + cbModelParam._m0[23u].w;
        float _1806 = fma(_838, cbModelParam._m0[21u].z, fma(_837, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _836));
        float _1809 = fma(_838, cbModelParam._m0[22u].z, fma(_837, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _836));
        float _1812 = fma(_838, cbModelParam._m0[23u].z, fma(_837, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _836));
        float _1919;
        if (_1806 > 0.0)
        {
            _1919 = abs((1.0 - _1795) / _1806);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1806 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1795 + 1.0) / _1806);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1919 = frontier_phi_27_23_ladder;
        }
        float _2176;
        if (_1809 > 0.0)
        {
            _2176 = abs((1.0 - _1799) / _1809);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1809 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1799 + 1.0) / _1809);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2176 = frontier_phi_38_34_ladder;
        }
        float _2480;
        if (_1812 > 0.0)
        {
            _2480 = abs((1.0 - _1803) / _1812);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1812 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1803 + 1.0) / _1812);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2480 = frontier_phi_49_44_ladder;
        }
        float _2482 = isnan(_2176) ? _1919 : (isnan(_1919) ? _2176 : min(_1919, _2176));
        float _2483 = isnan(_2480) ? _2482 : (isnan(_2482) ? _2480 : min(_2482, _2480));
        float _2487 = (_2483 * _1806) + _1795;
        float _2488 = (_2483 * _1809) + _1799;
        float _2489 = (_2483 * _1812) + _1803;
        float _2490 = _2483 * 9.9999997473787516355514526367188e-05;
        float _2491 = (-1.0) - _2490;
        float _2493 = _2490 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2489 > _2493) || ((_2489 < _2491) || ((_2488 > _2493) || ((_2488 < _2491) || ((_2487 < _2491) || (_2487 > _2493))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2662 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2489, cbModelParam._m0[17u].z, fma(_2488, cbModelParam._m0[17u].y, _2487 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2489, cbModelParam._m0[18u].z, fma(_2488, cbModelParam._m0[18u].y, _2487 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2489, cbModelParam._m0[19u].z, fma(_2488, cbModelParam._m0[19u].y, _2487 * cbModelParam._m0[19u].x))), _1739);
            frontier_phi_24_49_ladder = _2662.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2662.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2662.x * cbModelParam._m0[1u].z;
        }
        _1831 = frontier_phi_24_49_ladder_2;
        _1833 = frontier_phi_24_49_ladder;
        _1835 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1815 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_836, _837, _838), _1739);
        _1831 = _1815.x * cbModelParam._m0[1u].z;
        _1833 = _1815.y * cbModelParam._m0[1u].z;
        _1835 = _1815.z * cbModelParam._m0[1u].z;
    }
    float _1847 = ((((1.0 - _861) * ((_849 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_861 * _849)) * _828;
    float _1848 = _1847 * ((cbModelParam._m0[1u].w * (_1831 - _1730)) + _1730);
    float _1849 = _1847 * ((cbModelParam._m0[1u].w * (_1833 - _1732)) + _1732);
    float _1850 = _1847 * ((cbModelParam._m0[1u].w * (_1835 - _1734)) + _1734);
    float _1853 = fma(_1850, cbSceneParam._m0[89u].z, fma(_1849, cbSceneParam._m0[89u].y, _1848 * cbSceneParam._m0[89u].x));
    float _1856 = fma(_1850, cbSceneParam._m0[90u].z, fma(_1849, cbSceneParam._m0[90u].y, _1848 * cbSceneParam._m0[90u].x));
    float _1859 = fma(_1850, cbSceneParam._m0[91u].z, fma(_1849, cbSceneParam._m0[91u].y, _1848 * cbSceneParam._m0[91u].x));
    uvec4 _1869 = floatBitsToUint(cbInstanceData._m0[_304 + 5u]);
    uint _1871 = _1869.x * 14u;
    uint _1872 = _1871 + 13u;
    float _1877 = _828 + (-1.0);
    float _1880 = (cbLight._m0[_1872].x * _1877) + 1.0;
    float _1881 = (cbLight._m0[_1872].y * _1877) + 1.0;
    uint _1883 = _1871 + 4u;
    float _1894 = dot(vec3(cbLight._m0[_1871].xyz), vec3(_750, _751, _752));
    float _1897 = isnan(1.0) ? _1880 : (isnan(_1880) ? 1.0 : min(_1880, 1.0));
    uint _1898 = _1871 + 5u;
    uint _1904 = _1871 | 1u;
    float _1910 = dot(vec3(cbLight._m0[_1904].xyz), vec3(_750, _751, _752));
    float _1913 = isnan(1.0) ? _1881 : (isnan(_1881) ? 1.0 : min(_1881, 1.0));
    float _1978;
    float _1979;
    float _1980;
    if (_755 == 0.0)
    {
        float _3659 = isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0));
        float _3670 = isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0));
        float _1932 = (isnan(1.0) ? _3659 : (isnan(_3659) ? 1.0 : min(_3659, 1.0))) * 0.3183098733425140380859375;
        float _1934 = (isnan(1.0) ? _3670 : (isnan(_3670) ? 1.0 : min(_3670, 1.0))) * 0.3183098733425140380859375;
        _1978 = ((cbLight._m0[_1898].x * _1913) * _1934) + ((cbLight._m0[_1883].x * _1897) * _1932);
        _1979 = ((_1913 * cbLight._m0[_1898].y) * _1934) + ((_1897 * cbLight._m0[_1883].y) * _1932);
        _1980 = ((_1913 * cbLight._m0[_1898].z) * _1934) + ((_1897 * cbLight._m0[_1883].z) * _1932);
    }
    else
    {
        float _1944 = _1894 + _755;
        float _1947 = (_755 * 2.0) + 1.0;
        float _1948 = (isnan(0.0) ? _1944 : (isnan(_1944) ? 0.0 : max(_1944, 0.0))) / _1947;
        float _1955 = _1910 + _755;
        float _1957 = (isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0))) / _1947;
        _1978 = (((_1957 * cbLight._m0[_1898].x) * _1913) + ((_1948 * cbLight._m0[_1883].x) * _1897)) * 0.3183098733425140380859375;
        _1979 = (((_1957 * cbLight._m0[_1898].y) * _1913) + ((_1948 * cbLight._m0[_1883].y) * _1897)) * 0.3183098733425140380859375;
        _1980 = (((_1957 * cbLight._m0[_1898].z) * _1913) + ((_1948 * cbLight._m0[_1883].z) * _1897)) * 0.3183098733425140380859375;
    }
    uint _1984 = _1871 + 8u;
    float _2000 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1871].w)) * _754) * 0.949999988079071044921875);
    float _2001 = _2000 * _2000;
    float _2002 = cbLight._m0[_1871].x + _497;
    float _2003 = cbLight._m0[_1871].y + _498;
    float _2004 = cbLight._m0[_1871].z + _499;
    float _2008 = inversesqrt(dot(vec3(_2002, _2003, _2004), vec3(_2002, _2003, _2004)));
    float _2009 = _2008 * _2002;
    float _2010 = _2008 * _2003;
    float _2011 = _2008 * _2004;
    float _2012 = dot(vec3(_750, _751, _752), vec3(cbLight._m0[_1871].xyz));
    float _3691 = isnan(0.0) ? _2012 : (isnan(_2012) ? 0.0 : max(_2012, 0.0));
    float _2015 = isnan(1.0) ? _3691 : (isnan(_3691) ? 1.0 : min(_3691, 1.0));
    float _3702 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _2016 = isnan(1.0) ? _3702 : (isnan(_3702) ? 1.0 : min(_3702, 1.0));
    float _2017 = dot(vec3(_750, _751, _752), vec3(_2009, _2010, _2011));
    float _3713 = isnan(0.0) ? _2017 : (isnan(_2017) ? 0.0 : max(_2017, 0.0));
    float _2020 = isnan(1.0) ? _3713 : (isnan(_3713) ? 1.0 : min(_3713, 1.0));
    float _2021 = dot(vec3(cbLight._m0[_1871].xyz), vec3(_2009, _2010, _2011));
    float _3724 = isnan(0.0) ? _2021 : (isnan(_2021) ? 0.0 : max(_2021, 0.0));
    float _2025 = _2001 * _2001;
    float _2029 = ((_2020 * _2020) * (_2025 + (-1.0))) + 1.0;
    float _2040 = (exp2(log2(1.0 - (isnan(1.0) ? _3724 : (isnan(_3724) ? 1.0 : min(_3724, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2041 = 1.0 - _2001;
    float _2052 = (0.5 / (((_2016 * ((_2015 * _2041) + _2001)) + 9.9999999392252902907785028219223e-09) + (((_2016 * _2041) + _2001) * _2015))) * _2015;
    float _3735 = isnan(0.0) ? _2052 : (isnan(_2052) ? 0.0 : max(_2052, 0.0));
    float _2054 = (isnan(1.0) ? _3735 : (isnan(_3735) ? 1.0 : min(_3735, 1.0))) * (_2025 / ((_2029 * _2029) * 3.141590118408203125));
    uint _2067 = _1871 + 9u;
    float _2081 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1904].w)) * _754) * 0.949999988079071044921875);
    float _2082 = _2081 * _2081;
    float _2083 = cbLight._m0[_1904].x + _497;
    float _2084 = cbLight._m0[_1904].y + _498;
    float _2085 = cbLight._m0[_1904].z + _499;
    float _2089 = inversesqrt(dot(vec3(_2083, _2084, _2085), vec3(_2083, _2084, _2085)));
    float _2090 = _2089 * _2083;
    float _2091 = _2089 * _2084;
    float _2092 = _2089 * _2085;
    float _2093 = dot(vec3(_750, _751, _752), vec3(cbLight._m0[_1904].xyz));
    float _3746 = isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0));
    float _2096 = isnan(1.0) ? _3746 : (isnan(_3746) ? 1.0 : min(_3746, 1.0));
    float _2097 = dot(vec3(_750, _751, _752), vec3(_2090, _2091, _2092));
    float _3757 = isnan(0.0) ? _2097 : (isnan(_2097) ? 0.0 : max(_2097, 0.0));
    float _2100 = isnan(1.0) ? _3757 : (isnan(_3757) ? 1.0 : min(_3757, 1.0));
    float _2101 = dot(vec3(cbLight._m0[_1904].xyz), vec3(_2090, _2091, _2092));
    float _3768 = isnan(0.0) ? _2101 : (isnan(_2101) ? 0.0 : max(_2101, 0.0));
    float _2105 = _2082 * _2082;
    float _2109 = ((_2100 * _2100) * (_2105 + (-1.0))) + 1.0;
    float _2118 = (exp2(log2(1.0 - (isnan(1.0) ? _3768 : (isnan(_3768) ? 1.0 : min(_3768, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2119 = 1.0 - _2082;
    float _2129 = (0.5 / (((_2016 * ((_2096 * _2119) + _2082)) + 9.9999999392252902907785028219223e-09) + (((_2016 * _2119) + _2082) * _2096))) * _2096;
    float _3779 = isnan(0.0) ? _2129 : (isnan(_2129) ? 0.0 : max(_2129, 0.0));
    float _2131 = (isnan(1.0) ? _3779 : (isnan(_3779) ? 1.0 : min(_3779, 1.0))) * (_2105 / ((_2109 * _2109) * 3.141590118408203125));
    float _2141 = (((_2118 * cbLight._m0[_2067].x) * _2131) * _1913) + (((_2040 * cbLight._m0[_1984].x) * _2054) * _1897);
    float _2142 = (((_2118 * cbLight._m0[_2067].y) * _2131) * _1913) + (((_2040 * cbLight._m0[_1984].y) * _2054) * _1897);
    float _2143 = (((_2118 * cbLight._m0[_2067].z) * _2131) * _1913) + (((_2040 * cbLight._m0[_1984].z) * _2054) * _1897);
    float _2279;
    float _2281;
    float _2283;
    float _2285;
    float _2287;
    float _2289;
    if (_1869.y == 0u)
    {
        float _2220 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2221 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2220;
        float _2222 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2220;
        float _2223 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2220;
        uvec4 _2235 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2236 = _2235.x;
        uint _2247 = uint((float(_2235.y) * floor(float(uint(cbSceneParam._m0[85u].y * _666) / _2236))) + floor(float(uint(cbSceneParam._m0[85u].x * _665) / _2236)));
        float _2257 = (log2(_2223 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2258 = isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : max(_2257, 0.0));
        uint _2261 = uint(isnan(14.0) ? _2258 : (isnan(_2258) ? 14.0 : min(_2258, 14.0)));
        uint _2268 = _2235.z;
        float _2317;
        float _2319;
        float _2321;
        float _2323;
        float _2325;
        float _2327;
        if (((((1u << ((_2268 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2261 << 2u) + (_2247 << 6u)) >> 2u)).x) == 0u) || ((_2268 & 240u) == 0u))
        {
            _2317 = 0.0;
            _2319 = 0.0;
            _2321 = 0.0;
            _2323 = 0.0;
            _2325 = 0.0;
            _2327 = 0.0;
        }
        else
        {
            float _2318;
            float _2320;
            float _2322;
            float _2324;
            float _2326;
            float _2328;
            float _2506 = 0.0;
            float _2507 = 0.0;
            float _2508 = 0.0;
            float _2509 = 0.0;
            float _2510 = 0.0;
            float _2511 = 0.0;
            uint _2512 = 0u;
            uint _2521;
            bool _2522;
            for (;;)
            {
                _2521 = texelFetch(g_lightClassification, int((((_2261 << 5u) + (_2247 << 9u)) + (_2512 << 2u)) >> 2u)).x;
                _2522 = _2521 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2522)
                {
                    frontier_phi_55_pred = _2511;
                    frontier_phi_55_pred_1 = _2510;
                    frontier_phi_55_pred_2 = _2509;
                    frontier_phi_55_pred_3 = _2507;
                    frontier_phi_55_pred_4 = _2506;
                    frontier_phi_55_pred_5 = _2508;
                }
                else
                {
                    float _2719;
                    float _2720;
                    float _2721;
                    float _2722;
                    float _2723;
                    float _2724;
                    uint _2725;
                    _2719 = _2506;
                    _2720 = _2507;
                    _2721 = _2508;
                    _2722 = _2509;
                    _2723 = _2510;
                    _2724 = _2511;
                    _2725 = _2521;
                    float _2667;
                    float _2668;
                    float _2669;
                    float _2670;
                    float _2671;
                    float _2672;
                    for (;;)
                    {
                        uint _2729 = uint(findLSB(_2725)) + (_2512 << 5u);
                        uint _2726 = (_2725 + 4294967295u) & _2725;
                        uint _2731 = _2729 * 48u;
                        vec4 _2745 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2731)).x, texelFetch(g_PointLightRenderingBuffer, int(_2731 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2731 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2731 + 3u)).x));
                        uint _2751 = (_2729 * 48u) + 4u;
                        vec4 _2764 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2751)).x, texelFetch(g_PointLightRenderingBuffer, int(_2751 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2751 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2751 + 3u)).x));
                        float _2765 = _2764.x;
                        float _2766 = _2764.y;
                        float _2767 = _2764.z;
                        uint _2770 = (_2729 * 48u) + 8u;
                        vec3 _2781 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2770)).x, texelFetch(g_PointLightRenderingBuffer, int(_2770 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2770 + 2u)).x));
                        uint _2786 = (_2729 * 48u) + 12u;
                        vec2 _2794 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2786)).x, texelFetch(g_PointLightRenderingBuffer, int(_2786 + 1u)).x));
                        float _2800 = inversesqrt(dot(vec3(_2221, _2222, _2223), vec3(_2221, _2222, _2223)));
                        float _2801 = _2800 * _2221;
                        float _2802 = _2800 * _2222;
                        float _2803 = _2800 * _2223;
                        float _2804 = _2745.x - _2221;
                        float _2805 = _2745.y - _2222;
                        float _2806 = _2745.z - _2223;
                        float _2807 = dot(vec3(_2804, _2805, _2806), vec3(_2804, _2805, _2806));
                        float _2810 = inversesqrt(_2807);
                        float _2811 = _2810 * _2804;
                        float _2812 = _2810 * _2805;
                        float _2813 = _2810 * _2806;
                        float _2814 = dot(vec3(_790, _793, _796), vec3(_2811, _2812, _2813));
                        float _2819 = 1.0 - (_2807 * _2745.w);
                        float _3800 = isnan(0.0) ? _2819 : (isnan(_2819) ? 0.0 : max(_2819, 0.0));
                        float _2820 = isnan(1.0) ? _3800 : (isnan(_3800) ? 1.0 : min(_3800, 1.0));
                        float _2821 = sqrt(_2807) * _2764.w;
                        float _2824 = 1.39999997615814208984375 / (_2821 + 1.39999997615814208984375);
                        float _2825 = _2824 * _2824;
                        float _2826 = 1.0 - _2825;
                        float _2828 = (_2826 * _2826) * _755;
                        float _2831 = ((_2826 * _2814) + _2825) + _2828;
                        float _2836 = _2821 * _2821;
                        float _2841 = ((isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0))) * _2820) / (((_2828 * 2.0) + 1.0) * ((_2836 * 0.699999988079071044921875) + 1.0));
                        float _2845 = dot(vec3(_2811, _2812, _2813), vec3(_2801, _2802, _2803));
                        float _3816 = isnan(0.0) ? _2845 : (isnan(_2845) ? 0.0 : max(_2845, 0.0));
                        float _2852 = dot(vec3((-0.0) - _2801, (-0.0) - _2802, (-0.0) - _2803), vec3(_790, _793, _796)) + 1.0;
                        float _2854 = (isnan(0.0) ? _2852 : (isnan(_2852) ? 0.0 : max(_2852, 0.0))) * 0.5;
                        float _2861 = ((_2854 * _2854) * _2794.x) * exp2((_2794.y * 32.0) * log2(isnan(1.0) ? _3816 : (isnan(_3816) ? 1.0 : min(_3816, 1.0))));
                        float _2863 = _755 / (_755 + 1.0);
                        float _2879 = (-0.0) - _2221;
                        float _2880 = (-0.0) - _2222;
                        float _2881 = (-0.0) - _2223;
                        float _2885 = inversesqrt(dot(vec3(_2879, _2880, _2881), vec3(_2879, _2880, _2881)));
                        float _2886 = _2885 * _2879;
                        float _2887 = _2885 * _2880;
                        float _2888 = _2885 * _2881;
                        float _2896 = exp2(log2(1.0 / ((_2836 * 3.5) + 5.0)) * 0.25);
                        float _2897 = 1.0 - _849;
                        float _2904 = sqrt(1.0 - ((1.0 - (_2897 * _2897)) * (1.0 - (_2896 * _2896))));
                        float _2905 = _2904 * _2904;
                        float _2906 = _2905 * _2905;
                        float _2907 = _2886 + _2811;
                        float _2908 = _2887 + _2812;
                        float _2909 = _2888 + _2813;
                        float _2913 = inversesqrt(dot(vec3(_2907, _2908, _2909), vec3(_2907, _2908, _2909)));
                        float _2917 = dot(vec3(_790, _793, _796), vec3(_2886, _2887, _2888));
                        float _3832 = isnan(0.0) ? _2917 : (isnan(_2917) ? 0.0 : max(_2917, 0.0));
                        float _2920 = isnan(1.0) ? _3832 : (isnan(_3832) ? 1.0 : min(_3832, 1.0));
                        float _2921 = dot(vec3(_790, _793, _796), vec3(_2913 * _2907, _2913 * _2908, _2913 * _2909));
                        float _3843 = isnan(0.0) ? _2921 : (isnan(_2921) ? 0.0 : max(_2921, 0.0));
                        float _2924 = isnan(1.0) ? _3843 : (isnan(_3843) ? 1.0 : min(_3843, 1.0));
                        float _2928 = ((_2924 * _2924) * (_2906 + (-1.0))) + 1.0;
                        float _2929 = _2824 * _2905;
                        float _2930 = _2929 * _2929;
                        float _2933 = ((1.0 - _2930) * _2814) + _2930;
                        float _3854 = isnan(0.0) ? _2933 : (isnan(_2933) ? 0.0 : max(_2933, 0.0));
                        float _2934 = isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0));
                        float _2935 = 1.0 - _2905;
                        float _2945 = (0.5 / (((_2934 * ((_2920 * _2935) + _2905)) + 9.9999999392252902907785028219223e-09) + (((_2934 * _2935) + _2905) * _2920))) * _2934;
                        float _3865 = isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : max(_2945, 0.0));
                        float _2956 = (((_2906 * 3.1415927410125732421875) * (isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0)))) / ((_2928 * _2928) * ((_2836 * 2.1991131305694580078125) + 3.141590118408203125))) * _2820;
                        _2670 = (((((_2765 * 0.3183098733425140380859375) * _2863) * _2861) + _2765) * _2841) + _2722;
                        _2671 = (((((_2766 * 0.3183098733425140380859375) * _2863) * _2861) + _2766) * _2841) + _2723;
                        _2672 = (((((_2767 * 0.3183098733425140380859375) * _2863) * _2861) + _2767) * _2841) + _2724;
                        _2667 = (_2956 * _2781.x) + _2719;
                        _2668 = (_2956 * _2781.y) + _2720;
                        _2669 = (_2956 * _2781.z) + _2721;
                        if (_2726 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2719 = _2667;
                            _2720 = _2668;
                            _2721 = _2669;
                            _2722 = _2670;
                            _2723 = _2671;
                            _2724 = _2672;
                            _2725 = _2726;
                        }
                    }
                    frontier_phi_55_pred = _2672;
                    frontier_phi_55_pred_1 = _2671;
                    frontier_phi_55_pred_2 = _2670;
                    frontier_phi_55_pred_3 = _2668;
                    frontier_phi_55_pred_4 = _2667;
                    frontier_phi_55_pred_5 = _2669;
                }
                _2328 = frontier_phi_55_pred;
                _2326 = frontier_phi_55_pred_1;
                _2324 = frontier_phi_55_pred_2;
                _2320 = frontier_phi_55_pred_3;
                _2318 = frontier_phi_55_pred_4;
                _2322 = frontier_phi_55_pred_5;
                uint _2513 = _2512 + 1u;
                if (_2513 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2506 = _2318;
                    _2507 = _2320;
                    _2508 = _2322;
                    _2509 = _2324;
                    _2510 = _2326;
                    _2511 = _2328;
                    _2512 = _2513;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2317 = _2318;
            _2319 = _2320;
            _2321 = _2322;
            _2323 = _2324;
            _2325 = _2326;
            _2327 = _2328;
        }
        float _2332 = isnan(1.0) ? _828 : (isnan(_828) ? 1.0 : min(_828, 1.0));
        _2279 = (_2332 * _2323) + _1978;
        _2281 = (_2332 * _2325) + _1979;
        _2283 = (_2332 * _2327) + _1980;
        _2285 = ((_2317 * 0.039999999105930328369140625) * _2332) + _2141;
        _2287 = ((_2319 * 0.039999999105930328369140625) * _2332) + _2142;
        _2289 = ((_2321 * 0.039999999105930328369140625) * _2332) + _2143;
    }
    else
    {
        _2279 = _1978;
        _2281 = _1979;
        _2283 = _1980;
        _2285 = _2141;
        _2287 = _2142;
        _2289 = _2143;
    }
    float _2403;
    float _2404;
    float _2405;
    if (_755 > 0.0)
    {
        uint _2339 = _1871 + 4u;
        float _2345 = (-0.0) - _497;
        float _2346 = (-0.0) - _498;
        float _2347 = (-0.0) - _499;
        float _2348 = dot(vec3(cbLight._m0[_1871].xyz), vec3(_2345, _2346, _2347));
        float _3881 = isnan(0.0) ? _2348 : (isnan(_2348) ? 0.0 : max(_2348, 0.0));
        float _2352 = _839 + 1.0;
        float _2354 = (isnan(0.0) ? _2352 : (isnan(_2352) ? 0.0 : max(_2352, 0.0))) * 0.5;
        float _2359 = _2354 * _2354;
        float _2360 = _2359 * exp2(log2(isnan(1.0) ? _3881 : (isnan(_3881) ? 1.0 : min(_3881, 1.0))) * 32.0);
        float _2362 = _755 / (_755 + 1.0);
        float _2363 = isnan(_1880) ? 1.0 : (isnan(1.0) ? _1880 : min(1.0, _1880));
        uint _2373 = _1871 + 5u;
        float _2379 = dot(vec3(cbLight._m0[_1904].xyz), vec3(_2345, _2346, _2347));
        float _3902 = isnan(0.0) ? _2379 : (isnan(_2379) ? 0.0 : max(_2379, 0.0));
        float _2386 = _2359 * exp2(log2(isnan(1.0) ? _3902 : (isnan(_3902) ? 1.0 : min(_3902, 1.0))) * 32.0);
        float _2387 = isnan(_1881) ? 1.0 : (isnan(1.0) ? _1881 : min(1.0, _1881));
        _2403 = ((((_2386 * cbLight._m0[_2373].x) * _2362) * _2387) + (((_2360 * cbLight._m0[_2339].x) * _2362) * _2363)) * 0.3183098733425140380859375;
        _2404 = ((((_2386 * cbLight._m0[_2373].y) * _2362) * _2387) + (((_2360 * cbLight._m0[_2339].y) * _2362) * _2363)) * 0.3183098733425140380859375;
        _2405 = ((((_2386 * cbLight._m0[_2373].z) * _2362) * _2387) + (((_2360 * cbLight._m0[_2339].z) * _2362) * _2363)) * 0.3183098733425140380859375;
    }
    else
    {
        _2403 = 0.0;
        _2404 = 0.0;
        _2405 = 0.0;
    }
    float _3918 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
    float _3929 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
    float _3940 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _3951 = isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0));
    float _2420 = (isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0))) * ((_2279 + ((isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0))) * _828)) + _2403);
    float _2421 = (isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0))) * ((_2281 + ((isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0))) * _828)) + _2404);
    float _2422 = (isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0))) * ((_2283 + ((isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0))) * _828)) + _2405);
    float _2426 = 0.959999978542327880859375 - (exp2(log2(1.0 - _843) * 5.0) * 0.959999978542327880859375);
    float _2451 = _665 / cbSceneParam._m0[86u].x;
    float _2452 = _666 / cbSceneParam._m0[86u].y;
    vec4 _2466 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2451, _2452, (log2((isnan(cbSceneParam._m0[77u].w) ? _772 : (isnan(_772) ? cbSceneParam._m0[77u].w : min(_772, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2468 = _2466.x;
    float _2469 = _2466.y;
    float _2470 = _2466.z;
    float _2471 = _2466.w;
    float _2564;
    float _2566;
    float _2568;
    float _2570;
    if (_772 > cbSceneParam._m0[78u].w)
    {
        float _2527 = isnan(_772) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _772 : min(cbSceneParam._m0[80u].w, _772));
        float _2528 = _2527 / _772;
        float _2539 = _2528 * _296;
        float _2540 = _297 * _2528;
        float _2541 = (-0.0) - _2540;
        float _2542 = _2528 * _298;
        float _2544 = (cbSceneParam._m0[77u].w * _2541) / _2527;
        float _2545 = _2544 + cbSceneParam._m0[79u].w;
        float _2546 = cbSceneParam._m0[79u].w - _2540;
        float _2552 = sqrt(((_2539 * _2539) + (_2540 * _2540)) + (_2542 * _2542));
        float _2555 = (1.0 - (cbSceneParam._m0[77u].w / _2527)) * _2552;
        float _2560 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2562 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2961;
        if (abs((_2541 - _2544) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2961 = ((((_2545 > 0.0) ? exp2(_2560 * _2545) : (2.0 - exp2(_2562 * _2545))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2555;
        }
        else
        {
            float _2692 = 1.0 / cbSceneParam._m0[80u].x;
            float _2693 = isnan(_2546) ? _2545 : (isnan(_2545) ? _2546 : max(_2545, _2546));
            float _2694 = isnan(_2546) ? _2545 : (isnan(_2545) ? _2546 : min(_2545, _2546));
            float _2703 = isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : min(_2693, 0.0));
            float _2704 = isnan(0.0) ? _2694 : (isnan(_2694) ? 0.0 : min(_2694, 0.0));
            _2961 = ((abs(_2552 / _2541) * cbSceneParam._m0[80u].y) * ((((_2703 - _2704) * 2.0) - ((exp2(_2560 * (isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : max(_2693, 0.0)))) - exp2(_2560 * (isnan(0.0) ? _2694 : (isnan(_2694) ? 0.0 : max(_2694, 0.0))))) * _2692)) - ((exp2(_2562 * _2703) - exp2(_2562 * _2704)) * _2692))) + (_2555 * cbSceneParam._m0[80u].z);
        }
        vec4 _2963 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2451, _2452, 1.0), 0.0);
        float _2972 = exp2((_2961 * (-1.44269502162933349609375)) * (1.0 - _2963.w));
        float _2973 = log2(_2972);
        float _2989 = log2(_2471);
        _2564 = (exp2(_2989 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2973 * cbSceneParam._m0[78u].x)) * _2963.x) / cbSceneParam._m0[78u].x)) + _2468;
        _2566 = (exp2(_2989 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2973 * cbSceneParam._m0[78u].y)) * _2963.y) / cbSceneParam._m0[78u].y)) + _2469;
        _2568 = (exp2(_2989 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2973 * cbSceneParam._m0[78u].z)) * _2963.z) / cbSceneParam._m0[78u].z)) + _2470;
        _2570 = _2972 * _2471;
    }
    else
    {
        _2564 = _2468;
        _2566 = _2469;
        _2568 = _2470;
        _2570 = _2471;
    }
    bool _2582 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2583 = log2(_2570);
    float _2590 = exp2(_2583 * cbSceneParam._m0[78u].x) * ((_2420 + ((_2285 + ((isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0))) * _1639)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _689.x) * _2426) - _2420) * _735));
    float _2591 = exp2(_2583 * cbSceneParam._m0[78u].y) * ((_2421 + ((_2287 + ((isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0))) * _1639)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _689.y) * _2426) - _2421) * _735));
    float _2592 = exp2(_2583 * cbSceneParam._m0[78u].z) * ((_2422 + ((_2289 + ((isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0))) * _1639)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _689.z) * _2426) - _2422) * _735));
    vec4 _2600 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_665, _666));
    float _2602 = _2600.x;
    float _2623 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2602)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2602))) - _772) * cbMtdParam._m0[17u].y;
    float _4002 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
    float _2625 = (cbInstanceData._m0[_304 + 6u].w * (isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0)))) * (isnan(1.0) ? _4002 : (isnan(_4002) ? 1.0 : min(_4002, 1.0)));
    float _2634 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2634 * (_2582 ? _2590 : (_2590 + (cbSceneParam._m0[72u].w * _2564)));
    SV_Target.y = _2634 * (_2582 ? _2591 : (_2591 + (cbSceneParam._m0[72u].w * _2566)));
    SV_Target.z = _2634 * (_2582 ? _2592 : (_2592 + (cbSceneParam._m0[72u].w * _2568)));
    SV_Target.w = _2625;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2625;
}


