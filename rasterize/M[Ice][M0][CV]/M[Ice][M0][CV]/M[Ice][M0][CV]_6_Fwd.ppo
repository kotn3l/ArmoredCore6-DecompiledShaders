#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1037;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _192 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _193 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _194 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _200 = inversesqrt(dot(vec3(_192, _193, _194), vec3(_192, _193, _194)));
    float _201 = _200 * _192;
    float _202 = _200 * _193;
    float _203 = _200 * _194;
    float _207 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _208 = _207 * NORMAL.x;
    float _209 = _207 * NORMAL.y;
    float _210 = _207 * NORMAL.z;
    float _214 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _215 = _214 * TANGENT.x;
    float _216 = _214 * TANGENT.y;
    float _217 = _214 * TANGENT.z;
    float _222;
    float _223;
    float _224;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _222 = (-0.0) - _208;
        _223 = (-0.0) - _209;
        _224 = (-0.0) - _210;
    }
    else
    {
        _222 = _208;
        _223 = _209;
        _224 = _210;
    }
    float _269 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _279 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _269);
    float _280 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _269);
    float _281 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _269);
    vec4 _295 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _304 = (_295.x * 2.0) + (-1.0);
    float _306 = (_295.y * 2.0) + (-1.0);
    float _307 = dot(vec2(_304, _306), vec2(_304, _306));
    float _2924 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
    float _313 = sqrt(1.0 - (isnan(1.0) ? _2924 : (isnan(_2924) ? 1.0 : min(_2924, 1.0))));
    float _316 = fma(_313, _222, fma(_306, _215, _304 * _201));
    float _319 = fma(_313, _223, fma(_306, _216, _304 * _202));
    float _322 = fma(_313, _224, fma(_306, _217, _304 * _203));
    float _326 = inversesqrt(dot(vec3(_316, _319, _322), vec3(_316, _319, _322)));
    float _327 = _326 * _316;
    float _328 = _326 * _319;
    vec4 _340 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _345 = _340.w;
    float _357 = dot(vec3(_279, _280, _281), vec3(_201, _202, _203));
    float _360 = dot(vec3(_279, _280, _281), vec3(_215, _216, _217));
    float _363 = dot(vec3(_279, _280, _281), vec3(_222, _223, _224));
    float _369 = inversesqrt(dot(vec3(_357, _360, _363), vec3(_357, _360, _363)));
    float _391 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _411 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_357 * cbMtdParam._m0[14u].x) * _369) * _391) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_360 * cbMtdParam._m0[14u].x) * _369) * _391) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _435 = inversesqrt(dot(vec3(_279, _280, _281), vec3(_279, _280, _281)));
    float _436 = _435 * _279;
    float _437 = _435 * _280;
    float _438 = _435 * _281;
    float _439 = dot(vec4(_436, _437, _438, 0.0), vec4(_222, _223, _224, 0.0));
    float _442 = _439 - cbMtdParam._m0[15u].z;
    float _2935 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _449 = exp2(log2(1.0 - (isnan(1.0) ? _2935 : (isnan(_2935) ? 1.0 : min(_2935, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _464 = ((((_340.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _411.x) * cbMtdParam._m0[9u].x) * ((_449 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _469 = ((((_340.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _411.y) * cbMtdParam._m0[9u].y) * ((_449 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _474 = ((((_340.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _411.z) * cbMtdParam._m0[9u].z) * ((_449 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _483 = (cbMtdParam._m0[16u].y + _295.z) + cbMtdParam._m0[17u].z;
    vec4 _495 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _499 = cbMtdParam._m0[16u].w * _495.x;
    float _511 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _512 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _522 = cbSceneParam._m0[86u].x * ((_511 / cbSceneParam._m0[86u].x) + (_327 * cbMtdParam._m0[18u].y));
    float _523 = cbSceneParam._m0[86u].y * ((_512 / cbSceneParam._m0[86u].y) + (_328 * cbMtdParam._m0[18u].y));
    float _530 = isnan(cbInstanceData._m0[8u].x) ? _522 : (isnan(_522) ? cbInstanceData._m0[8u].x : max(_522, cbInstanceData._m0[8u].x));
    float _531 = isnan(cbInstanceData._m0[8u].y) ? _523 : (isnan(_523) ? cbInstanceData._m0[8u].y : max(_523, cbInstanceData._m0[8u].y));
    vec4 _535 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _530 : (isnan(_530) ? cbInstanceData._m0[8u].z : min(_530, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _531 : (isnan(_531) ? cbInstanceData._m0[8u].w : min(_531, cbInstanceData._m0[8u].w))));
    float _568 = _439 - cbMtdParam._m0[15u].x;
    float _2971 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _578 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _2971 : (isnan(_2971) ? 1.0 : min(_2971, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _2987 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _579 = isnan(1.0) ? _2987 : (isnan(_2987) ? 1.0 : min(_2987, 1.0));
    float _581 = _326 * _322;
    float _2998 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    float _582 = isnan(1.0) ? _2998 : (isnan(_2998) ? 1.0 : min(_2998, 1.0));
    float _3009 = isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0));
    float _583 = isnan(1.0) ? _3009 : (isnan(_3009) ? 1.0 : min(_3009, 1.0));
    float _584 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0));
    float _3025 = isnan(0.0) ? _464 : (isnan(_464) ? 0.0 : max(_464, 0.0));
    float _3036 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
    float _3047 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _603 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _622 = fma(_581, cbSceneParam._m0[5u].z, fma(_328, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _327));
    float _625 = fma(_581, cbSceneParam._m0[6u].z, fma(_328, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _327));
    float _628 = fma(_581, cbSceneParam._m0[7u].z, fma(_328, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _327));
    uint _641 = uint(roundEven(NORMAL.w)) * 13u;
    uint _643 = (_641 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _649 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3025 : (isnan(_3025) ? 1.0 : min(_3025, 1.0)))) * cbInstanceData._m0[_643].x;
    float _650 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3036 : (isnan(_3036) ? 1.0 : min(_3036, 1.0)))) * cbInstanceData._m0[_643].y;
    float _651 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3047 : (isnan(_3047) ? 1.0 : min(_3047, 1.0)))) * cbInstanceData._m0[_643].z;
    float _3058 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
    float _652 = isnan(1.0) ? _3058 : (isnan(_3058) ? 1.0 : min(_3058, 1.0));
    float _3069 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
    float _653 = isnan(1.0) ? _3069 : (isnan(_3069) ? 1.0 : min(_3069, 1.0));
    float _3080 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
    float _654 = isnan(1.0) ? _3080 : (isnan(_3080) ? 1.0 : min(_3080, 1.0));
    vec4 _658 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _511, cbSceneParam._m0[86u].y * _512));
    float _661 = _658.x * TEXCOORD_5.w;
    float _662 = dot(vec3(_327, _328, _581), vec3(_436, _437, _438));
    float _665 = _662 * 2.0;
    float _669 = (_665 * _327) - _436;
    float _670 = (_665 * _328) - _437;
    float _671 = (_665 * _581) - _438;
    float _672 = dot(vec3(_436, _437, _438), vec3(_327, _328, _581));
    float _675 = abs(_672);
    float _3091 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
    float _676 = isnan(1.0) ? _3091 : (isnan(_3091) ? 1.0 : min(_3091, 1.0));
    float _682 = sqrt(_583);
    float _694 = exp2((_682 * 5.0) * log2(1.0 - (_676 * 0.999000012874603271484375))) / (4.0 - (_682 * 3.0));
    float _726 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _730 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _734 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1036;
    float _1038;
    float _1039;
    float _1040;
    float _1041;
    float _1042;
    float _1043;
    float _1044;
    float _1045;
    float _1046;
    float _1047;
    float _1048;
    float _1049;
    float _1050;
    float _1051;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _761 = fma(_734, cbModelParam._m0[26u].z, fma(_730, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _726));
        float _765 = fma(_734, cbModelParam._m0[27u].z, fma(_730, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _726));
        float _769 = fma(_734, cbModelParam._m0[28u].z, fma(_730, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _726));
        float _794 = _726 + _327;
        float _795 = _730 + _328;
        float _796 = _734 + _581;
        float _806 = fma(_796, cbModelParam._m0[26u].z, fma(_795, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _794)) - _761;
        float _807 = fma(_796, cbModelParam._m0[27u].z, fma(_795, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _794)) - _765;
        float _808 = fma(_796, cbModelParam._m0[28u].z, fma(_795, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _794)) - _769;
        float _812 = inversesqrt(dot(vec3(_806, _807, _808), vec3(_806, _807, _808)));
        float _825 = ((_812 * _806) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_761 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _826 = ((_812 * _807) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_765 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _827 = ((_812 * _808) / cbModelParam._m0[34u].z) + ((((((_769 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _830 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_825, _826, _827), 0.0);
        vec4 _837 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_825, _826, _827), 0.0);
        vec4 _844 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_825, _826, _827), 0.0);
        vec4 _851 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_825, _826, _827), 0.0);
        float _864 = exp2((_830.w + (-0.5)) * 20.0) * 2.0;
        float _865 = _864 * (_830.x + (-0.5));
        float _866 = _864 * (_830.y + (-0.5));
        float _867 = _864 * (_830.z + (-0.5));
        float _874 = exp2((_837.w + (-0.5)) * 20.0) * 2.0;
        float _875 = _874 * (_837.x + (-0.5));
        float _876 = _874 * (_837.y + (-0.5));
        float _877 = _874 * (_837.z + (-0.5));
        float _884 = exp2((_844.w + (-0.5)) * 20.0) * 2.0;
        float _885 = _884 * (_844.x + (-0.5));
        float _886 = _884 * (_844.y + (-0.5));
        float _887 = _884 * (_844.z + (-0.5));
        float _894 = exp2((_851.w + (-0.5)) * 20.0) * 2.0;
        float _895 = _894 * (_851.x + (-0.5));
        float _896 = _894 * (_851.y + (-0.5));
        float _897 = _894 * (_851.z + (-0.5));
        float _898 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
        float _899 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
        float _900 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
        float _901 = _865 * 0.5;
        float _902 = _875 * 0.5;
        float _903 = _885 * 0.5;
        float _904 = dot(vec3(_901, _902, _903), vec3(_901, _902, _903));
        float _909 = (_904 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_904);
        float _918 = (dot(vec3(_327, _328, _581), vec3(_909 * _901, _909 * _902, _909 * _903)) + 1.0) * 0.5;
        float _3117 = isnan(0.0) ? _918 : (isnan(_918) ? 0.0 : max(_918, 0.0));
        float _928 = sqrt(((_902 * _902) + (_901 * _901)) + (_903 * _903)) / (_898 + 9.9999997473787516355514526367188e-06);
        float _3128 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
        float _929 = isnan(1.0) ? _3128 : (isnan(_3128) ? 1.0 : min(_3128, 1.0));
        float _930 = _929 * 2.0;
        float _934 = (1.0 - _929) / (_929 + 1.0);
        float _3139 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
        float _935 = isnan(1.0) ? _3139 : (isnan(_3139) ? 1.0 : min(_3139, 1.0));
        float _944 = ((((1.0 - _935) * (_930 + 2.0)) * exp2(log2(isnan(1.0) ? _3117 : (isnan(_3117) ? 1.0 : min(_3117, 1.0))) * (_930 + 1.0))) + _935) * _898;
        float _945 = _866 * 0.5;
        float _946 = _876 * 0.5;
        float _947 = _886 * 0.5;
        float _948 = dot(vec3(_945, _946, _947), vec3(_945, _946, _947));
        float _953 = (_948 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_948);
        float _961 = (dot(vec3(_327, _328, _581), vec3(_953 * _945, _953 * _946, _953 * _947)) + 1.0) * 0.5;
        float _3150 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
        float _970 = sqrt(((_946 * _946) + (_945 * _945)) + (_947 * _947)) / (_899 + 9.9999997473787516355514526367188e-06);
        float _3161 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
        float _971 = isnan(1.0) ? _3161 : (isnan(_3161) ? 1.0 : min(_3161, 1.0));
        float _972 = _971 * 2.0;
        float _976 = (1.0 - _971) / (_971 + 1.0);
        float _3172 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
        float _977 = isnan(1.0) ? _3172 : (isnan(_3172) ? 1.0 : min(_3172, 1.0));
        float _986 = ((((1.0 - _977) * (_972 + 2.0)) * exp2(log2(isnan(1.0) ? _3150 : (isnan(_3150) ? 1.0 : min(_3150, 1.0))) * (_972 + 1.0))) + _977) * _899;
        float _987 = _867 * 0.5;
        float _988 = _877 * 0.5;
        float _989 = _887 * 0.5;
        float _990 = dot(vec3(_987, _988, _989), vec3(_987, _988, _989));
        float _995 = (_990 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_990);
        float _1003 = (dot(vec3(_327, _328, _581), vec3(_995 * _987, _995 * _988, _995 * _989)) + 1.0) * 0.5;
        float _3183 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
        float _1012 = sqrt(((_988 * _988) + (_987 * _987)) + (_989 * _989)) / (_900 + 9.9999997473787516355514526367188e-06);
        float _3194 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0));
        float _1013 = isnan(1.0) ? _3194 : (isnan(_3194) ? 1.0 : min(_3194, 1.0));
        float _1014 = _1013 * 2.0;
        float _1018 = (1.0 - _1013) / (_1013 + 1.0);
        float _3205 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
        float _1019 = isnan(1.0) ? _3205 : (isnan(_3205) ? 1.0 : min(_3205, 1.0));
        float _1028 = ((((1.0 - _1019) * (_1014 + 2.0)) * exp2(log2(isnan(1.0) ? _3183 : (isnan(_3183) ? 1.0 : min(_3183, 1.0))) * (_1014 + 1.0))) + _1019) * _900;
        _1036 = _867;
        _1038 = _866;
        _1039 = _865;
        _1040 = _877;
        _1041 = _876;
        _1042 = _875;
        _1043 = _887;
        _1044 = _886;
        _1045 = _885;
        _1046 = _900;
        _1047 = _899;
        _1048 = _898;
        _1049 = cbModelParam._m0[36u].z * (isnan(0.0) ? _944 : (isnan(_944) ? 0.0 : max(_944, 0.0)));
        _1050 = cbModelParam._m0[36u].z * (isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0)));
        _1051 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0)));
    }
    else
    {
        _1036 = _1037;
        _1038 = _1037;
        _1039 = _1037;
        _1040 = _1037;
        _1041 = _1037;
        _1042 = _1037;
        _1043 = _1037;
        _1044 = _1037;
        _1045 = _1037;
        _1046 = _1037;
        _1047 = _1037;
        _1048 = _1037;
        _1049 = 0.0;
        _1050 = 0.0;
        _1051 = 0.0;
    }
    float _1346;
    float _1347;
    float _1348;
    float _1349;
    float _1350;
    float _1351;
    float _1352;
    float _1353;
    float _1354;
    float _1355;
    float _1356;
    float _1357;
    float _1358;
    float _1359;
    float _1360;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1077 = fma(_734, cbModelParam._m0[30u].z, fma(_730, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _726));
        float _1081 = fma(_734, cbModelParam._m0[31u].z, fma(_730, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _726));
        float _1085 = fma(_734, cbModelParam._m0[32u].z, fma(_730, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _726));
        float _1108 = _726 + _327;
        float _1109 = _730 + _328;
        float _1110 = _734 + _581;
        float _1120 = fma(_1110, cbModelParam._m0[30u].z, fma(_1109, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1108)) - _1077;
        float _1121 = fma(_1110, cbModelParam._m0[31u].z, fma(_1109, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1108)) - _1081;
        float _1122 = fma(_1110, cbModelParam._m0[32u].z, fma(_1109, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1108)) - _1085;
        float _1126 = inversesqrt(dot(vec3(_1120, _1121, _1122), vec3(_1120, _1121, _1122)));
        float _1139 = ((_1126 * _1120) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1077 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1140 = ((_1126 * _1121) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1081 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1141 = ((_1126 * _1122) / cbModelParam._m0[35u].z) + ((((((_1085 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1143 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1139, _1140, _1141), 0.0);
        vec4 _1150 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1139, _1140, _1141), 0.0);
        vec4 _1157 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1139, _1140, _1141), 0.0);
        vec4 _1164 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1139, _1140, _1141), 0.0);
        float _1176 = exp2((_1143.w + (-0.5)) * 20.0) * 2.0;
        float _1177 = _1176 * (_1143.x + (-0.5));
        float _1178 = _1176 * (_1143.y + (-0.5));
        float _1179 = _1176 * (_1143.z + (-0.5));
        float _1186 = exp2((_1150.w + (-0.5)) * 20.0) * 2.0;
        float _1187 = _1186 * (_1150.x + (-0.5));
        float _1188 = _1186 * (_1150.y + (-0.5));
        float _1189 = _1186 * (_1150.z + (-0.5));
        float _1196 = exp2((_1157.w + (-0.5)) * 20.0) * 2.0;
        float _1197 = _1196 * (_1157.x + (-0.5));
        float _1198 = _1196 * (_1157.y + (-0.5));
        float _1199 = _1196 * (_1157.z + (-0.5));
        float _1206 = exp2((_1164.w + (-0.5)) * 20.0) * 2.0;
        float _1207 = _1206 * (_1164.x + (-0.5));
        float _1208 = _1206 * (_1164.y + (-0.5));
        float _1209 = _1206 * (_1164.z + (-0.5));
        float _1210 = isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0));
        float _1211 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1212 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
        float _1213 = _1177 * 0.5;
        float _1214 = _1187 * 0.5;
        float _1215 = _1197 * 0.5;
        float _1216 = dot(vec3(_1213, _1214, _1215), vec3(_1213, _1214, _1215));
        float _1221 = (_1216 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1216);
        float _1229 = (dot(vec3(_327, _328, _581), vec3(_1221 * _1213, _1221 * _1214, _1221 * _1215)) + 1.0) * 0.5;
        float _3246 = isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0));
        float _1238 = sqrt(((_1214 * _1214) + (_1213 * _1213)) + (_1215 * _1215)) / (_1210 + 9.9999997473787516355514526367188e-06);
        float _3257 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
        float _1239 = isnan(1.0) ? _3257 : (isnan(_3257) ? 1.0 : min(_3257, 1.0));
        float _1240 = _1239 * 2.0;
        float _1244 = (1.0 - _1239) / (_1239 + 1.0);
        float _3268 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1245 = isnan(1.0) ? _3268 : (isnan(_3268) ? 1.0 : min(_3268, 1.0));
        float _1254 = ((((1.0 - _1245) * (_1240 + 2.0)) * exp2(log2(isnan(1.0) ? _3246 : (isnan(_3246) ? 1.0 : min(_3246, 1.0))) * (_1240 + 1.0))) + _1245) * _1210;
        float _1255 = _1178 * 0.5;
        float _1256 = _1188 * 0.5;
        float _1257 = _1198 * 0.5;
        float _1258 = dot(vec3(_1255, _1256, _1257), vec3(_1255, _1256, _1257));
        float _1263 = (_1258 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1258);
        float _1271 = (dot(vec3(_327, _328, _581), vec3(_1263 * _1255, _1263 * _1256, _1263 * _1257)) + 1.0) * 0.5;
        float _3279 = isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0));
        float _1280 = sqrt(((_1256 * _1256) + (_1255 * _1255)) + (_1257 * _1257)) / (_1211 + 9.9999997473787516355514526367188e-06);
        float _3290 = isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0));
        float _1281 = isnan(1.0) ? _3290 : (isnan(_3290) ? 1.0 : min(_3290, 1.0));
        float _1282 = _1281 * 2.0;
        float _1286 = (1.0 - _1281) / (_1281 + 1.0);
        float _3301 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
        float _1287 = isnan(1.0) ? _3301 : (isnan(_3301) ? 1.0 : min(_3301, 1.0));
        float _1296 = ((((1.0 - _1287) * (_1282 + 2.0)) * exp2(log2(isnan(1.0) ? _3279 : (isnan(_3279) ? 1.0 : min(_3279, 1.0))) * (_1282 + 1.0))) + _1287) * _1211;
        float _1297 = _1179 * 0.5;
        float _1298 = _1189 * 0.5;
        float _1299 = _1199 * 0.5;
        float _1300 = dot(vec3(_1297, _1298, _1299), vec3(_1297, _1298, _1299));
        float _1305 = (_1300 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1300);
        float _1313 = (dot(vec3(_327, _328, _581), vec3(_1305 * _1297, _1305 * _1298, _1305 * _1299)) + 1.0) * 0.5;
        float _3312 = isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0));
        float _1322 = sqrt(((_1298 * _1298) + (_1297 * _1297)) + (_1299 * _1299)) / (_1212 + 9.9999997473787516355514526367188e-06);
        float _3323 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1323 = isnan(1.0) ? _3323 : (isnan(_3323) ? 1.0 : min(_3323, 1.0));
        float _1324 = _1323 * 2.0;
        float _1328 = (1.0 - _1323) / (_1323 + 1.0);
        float _3334 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1329 = isnan(1.0) ? _3334 : (isnan(_3334) ? 1.0 : min(_3334, 1.0));
        float _1338 = ((((1.0 - _1329) * (_1324 + 2.0)) * exp2(log2(isnan(1.0) ? _3312 : (isnan(_3312) ? 1.0 : min(_3312, 1.0))) * (_1324 + 1.0))) + _1329) * _1212;
        _1346 = _1179;
        _1347 = _1178;
        _1348 = _1177;
        _1349 = _1189;
        _1350 = _1188;
        _1351 = _1187;
        _1352 = _1199;
        _1353 = _1198;
        _1354 = _1197;
        _1355 = _1212;
        _1356 = _1211;
        _1357 = _1210;
        _1358 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0)));
        _1359 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0)));
        _1360 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0)));
    }
    else
    {
        _1346 = _1037;
        _1347 = _1037;
        _1348 = _1037;
        _1349 = _1037;
        _1350 = _1037;
        _1351 = _1037;
        _1352 = _1037;
        _1353 = _1037;
        _1354 = _1037;
        _1355 = _1037;
        _1356 = _1037;
        _1357 = _1037;
        _1358 = 0.0;
        _1359 = 0.0;
        _1360 = 0.0;
    }
    float _1370 = (cbModelParam._m0[1u].x * (_1358 - _1049)) + _1049;
    float _1371 = (cbModelParam._m0[1u].x * (_1359 - _1050)) + _1050;
    float _1372 = (cbModelParam._m0[1u].x * (_1360 - _1051)) + _1051;
    float _1393 = fma(_1372, cbSceneParam._m0[89u].z, fma(_1371, cbSceneParam._m0[89u].y, _1370 * cbSceneParam._m0[89u].x));
    float _1396 = fma(_1372, cbSceneParam._m0[90u].z, fma(_1371, cbSceneParam._m0[90u].y, _1370 * cbSceneParam._m0[90u].x));
    float _1399 = fma(_1372, cbSceneParam._m0[91u].z, fma(_1371, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1370));
    float _1414 = _669 * 0.5;
    float _1415 = _670 * 0.5;
    float _1416 = _671 * 0.5;
    float _1417 = dot(vec4(_1414, _1415, _1416, 1.0), vec4(_1348, _1351, _1354, _1357));
    float _1420 = dot(vec4(_1414, _1415, _1416, 1.0), vec4(_1347, _1350, _1353, _1356));
    float _1423 = dot(vec4(_1414, _1415, _1416, 1.0), vec4(_1346, _1349, _1352, _1355));
    float _1457;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1430 = dot(vec4(_1414, _1415, _1416, 1.0), vec4(_1036, _1040, _1043, _1046));
        float _1434 = dot(vec4(_1414, _1415, _1416, 1.0), vec4(_1038, _1041, _1044, _1047));
        float _1438 = dot(vec4(_1414, _1415, _1416, 1.0), vec4(_1039, _1042, _1045, _1048));
        float _1445 = dot(vec4(cbModelParam._m0[39u]), vec4(_1414, _1415, _1416, 1.0));
        _1457 = dot(vec3(isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0)), isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0)), isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1445) ? 0.0 : (isnan(0.0) ? _1445 : max(0.0, _1445))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1457 = 1.0;
    }
    float _1468;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1459 = dot(vec4(cbModelParam._m0[40u]), vec4(_1414, _1415, _1416, 1.0));
        _1468 = dot(vec3(isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0)), isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0)), isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1459) ? 0.0 : (isnan(0.0) ? _1459 : max(0.0, _1459))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1468 = 1.0;
    }
    float _1472 = (_1468 * cbModelParam._m0[1u].x) + (_1457 * (1.0 - cbModelParam._m0[1u].x));
    float _1482 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _583);
    float _1483 = isnan(_1482) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1482 : min(cbModelParam._m0[25u].z, _1482));
    float _1563;
    float _1565;
    float _1567;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1530 = fma(_734, cbModelParam._m0[13u].z, fma(_730, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _726)) + cbModelParam._m0[13u].w;
        float _1534 = fma(_734, cbModelParam._m0[14u].z, fma(_730, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _726)) + cbModelParam._m0[14u].w;
        float _1538 = fma(_734, cbModelParam._m0[15u].z, fma(_730, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _726)) + cbModelParam._m0[15u].w;
        float _1541 = fma(_671, cbModelParam._m0[13u].z, fma(_670, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _669));
        float _1544 = fma(_671, cbModelParam._m0[14u].z, fma(_670, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _669));
        float _1547 = fma(_671, cbModelParam._m0[15u].z, fma(_670, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _669));
        float _1575;
        if (_1541 > 0.0)
        {
            _1575 = abs((1.0 - _1530) / _1541);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1541 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1530 + 1.0) / _1541);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1575 = frontier_phi_16_14_ladder;
        }
        float _1747;
        if (_1544 > 0.0)
        {
            _1747 = abs((1.0 - _1534) / _1544);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1544 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1534 + 1.0) / _1544);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1747 = frontier_phi_25_21_ladder;
        }
        float _1982;
        if (_1547 > 0.0)
        {
            _1982 = abs((1.0 - _1538) / _1547);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1547 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1538 + 1.0) / _1547);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _1982 = frontier_phi_36_32_ladder;
        }
        float _1984 = isnan(_1747) ? _1575 : (isnan(_1575) ? _1747 : min(_1575, _1747));
        float _1985 = isnan(_1982) ? _1984 : (isnan(_1984) ? _1982 : min(_1984, _1982));
        float _1989 = (_1985 * _1541) + _1530;
        float _1990 = (_1985 * _1544) + _1534;
        float _1991 = (_1985 * _1547) + _1538;
        float _1992 = _1985 * 9.9999997473787516355514526367188e-05;
        float _1994 = (-1.0) - _1992;
        float _1996 = _1992 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_1991 > _1996) || ((_1991 < _1994) || ((_1990 > _1996) || ((_1990 < _1994) || ((_1989 < _1994) || (_1989 > _1996))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2141 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1991, cbModelParam._m0[9u].z, fma(_1990, cbModelParam._m0[9u].y, _1989 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1991, cbModelParam._m0[10u].z, fma(_1990, cbModelParam._m0[10u].y, _1989 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1991, cbModelParam._m0[11u].z, fma(_1990, cbModelParam._m0[11u].y, _1989 * cbModelParam._m0[11u].x))), _1483);
            frontier_phi_15_36_ladder = _2141.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2141.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2141.y * cbModelParam._m0[1u].y;
        }
        _1563 = frontier_phi_15_36_ladder_1;
        _1565 = frontier_phi_15_36_ladder_2;
        _1567 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1551 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_669, _670, _671), _1483);
        _1563 = _1551.x * cbModelParam._m0[1u].y;
        _1565 = _1551.y * cbModelParam._m0[1u].y;
        _1567 = _1551.z * cbModelParam._m0[1u].y;
    }
    float _1571 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _583);
    float _1572 = isnan(_1571) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1571 : min(cbModelParam._m0[25u].w, _1571));
    float _1664;
    float _1666;
    float _1668;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1628 = fma(_734, cbModelParam._m0[21u].z, fma(_730, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _726)) + cbModelParam._m0[21u].w;
        float _1632 = fma(_734, cbModelParam._m0[22u].z, fma(_730, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _726)) + cbModelParam._m0[22u].w;
        float _1636 = fma(_734, cbModelParam._m0[23u].z, fma(_730, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _726)) + cbModelParam._m0[23u].w;
        float _1639 = fma(_671, cbModelParam._m0[21u].z, fma(_670, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _669));
        float _1642 = fma(_671, cbModelParam._m0[22u].z, fma(_670, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _669));
        float _1645 = fma(_671, cbModelParam._m0[23u].z, fma(_670, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _669));
        float _1752;
        if (_1639 > 0.0)
        {
            _1752 = abs((1.0 - _1628) / _1639);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1639 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1628 + 1.0) / _1639);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1752 = frontier_phi_27_23_ladder;
        }
        float _2009;
        if (_1642 > 0.0)
        {
            _2009 = abs((1.0 - _1632) / _1642);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1642 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1632 + 1.0) / _1642);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2009 = frontier_phi_38_34_ladder;
        }
        float _2313;
        if (_1645 > 0.0)
        {
            _2313 = abs((1.0 - _1636) / _1645);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1645 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1636 + 1.0) / _1645);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2313 = frontier_phi_49_44_ladder;
        }
        float _2315 = isnan(_2009) ? _1752 : (isnan(_1752) ? _2009 : min(_1752, _2009));
        float _2316 = isnan(_2313) ? _2315 : (isnan(_2315) ? _2313 : min(_2315, _2313));
        float _2320 = (_2316 * _1639) + _1628;
        float _2321 = (_2316 * _1642) + _1632;
        float _2322 = (_2316 * _1645) + _1636;
        float _2323 = _2316 * 9.9999997473787516355514526367188e-05;
        float _2324 = (-1.0) - _2323;
        float _2326 = _2323 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2322 > _2326) || ((_2322 < _2324) || ((_2321 > _2326) || ((_2321 < _2324) || ((_2320 < _2324) || (_2320 > _2326))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2495 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2322, cbModelParam._m0[17u].z, fma(_2321, cbModelParam._m0[17u].y, _2320 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2322, cbModelParam._m0[18u].z, fma(_2321, cbModelParam._m0[18u].y, _2320 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2322, cbModelParam._m0[19u].z, fma(_2321, cbModelParam._m0[19u].y, _2320 * cbModelParam._m0[19u].x))), _1572);
            frontier_phi_24_49_ladder = _2495.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2495.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2495.x * cbModelParam._m0[1u].z;
        }
        _1664 = frontier_phi_24_49_ladder_2;
        _1666 = frontier_phi_24_49_ladder;
        _1668 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1648 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_669, _670, _671), _1572);
        _1664 = _1648.x * cbModelParam._m0[1u].z;
        _1666 = _1648.y * cbModelParam._m0[1u].z;
        _1668 = _1648.z * cbModelParam._m0[1u].z;
    }
    float _1680 = ((((1.0 - _694) * ((_682 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_694 * _682)) * _661;
    float _1681 = _1680 * ((cbModelParam._m0[1u].w * (_1664 - _1563)) + _1563);
    float _1682 = _1680 * ((cbModelParam._m0[1u].w * (_1666 - _1565)) + _1565);
    float _1683 = _1680 * ((cbModelParam._m0[1u].w * (_1668 - _1567)) + _1567);
    float _1686 = fma(_1683, cbSceneParam._m0[89u].z, fma(_1682, cbSceneParam._m0[89u].y, _1681 * cbSceneParam._m0[89u].x));
    float _1689 = fma(_1683, cbSceneParam._m0[90u].z, fma(_1682, cbSceneParam._m0[90u].y, _1681 * cbSceneParam._m0[90u].x));
    float _1692 = fma(_1683, cbSceneParam._m0[91u].z, fma(_1682, cbSceneParam._m0[91u].y, _1681 * cbSceneParam._m0[91u].x));
    uvec4 _1702 = floatBitsToUint(cbInstanceData._m0[_641 + 5u]);
    uint _1704 = _1702.x * 14u;
    uint _1705 = _1704 + 13u;
    float _1710 = _661 + (-1.0);
    float _1713 = (cbLight._m0[_1705].x * _1710) + 1.0;
    float _1714 = (cbLight._m0[_1705].y * _1710) + 1.0;
    uint _1716 = _1704 + 4u;
    float _1727 = dot(vec3(cbLight._m0[_1704].xyz), vec3(_327, _328, _581));
    float _1730 = isnan(1.0) ? _1713 : (isnan(_1713) ? 1.0 : min(_1713, 1.0));
    uint _1731 = _1704 + 5u;
    uint _1737 = _1704 | 1u;
    float _1743 = dot(vec3(cbLight._m0[_1737].xyz), vec3(_327, _328, _581));
    float _1746 = isnan(1.0) ? _1714 : (isnan(_1714) ? 1.0 : min(_1714, 1.0));
    float _1811;
    float _1812;
    float _1813;
    if (_584 == 0.0)
    {
        float _3470 = isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0));
        float _3481 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1765 = (isnan(1.0) ? _3470 : (isnan(_3470) ? 1.0 : min(_3470, 1.0))) * 0.3183098733425140380859375;
        float _1767 = (isnan(1.0) ? _3481 : (isnan(_3481) ? 1.0 : min(_3481, 1.0))) * 0.3183098733425140380859375;
        _1811 = ((cbLight._m0[_1731].x * _1746) * _1767) + ((cbLight._m0[_1716].x * _1730) * _1765);
        _1812 = ((_1746 * cbLight._m0[_1731].y) * _1767) + ((_1730 * cbLight._m0[_1716].y) * _1765);
        _1813 = ((_1746 * cbLight._m0[_1731].z) * _1767) + ((_1730 * cbLight._m0[_1716].z) * _1765);
    }
    else
    {
        float _1777 = _1727 + _584;
        float _1780 = (_584 * 2.0) + 1.0;
        float _1781 = (isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0))) / _1780;
        float _1788 = _1743 + _584;
        float _1790 = (isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0))) / _1780;
        _1811 = (((_1790 * cbLight._m0[_1731].x) * _1746) + ((_1781 * cbLight._m0[_1716].x) * _1730)) * 0.3183098733425140380859375;
        _1812 = (((_1790 * cbLight._m0[_1731].y) * _1746) + ((_1781 * cbLight._m0[_1716].y) * _1730)) * 0.3183098733425140380859375;
        _1813 = (((_1790 * cbLight._m0[_1731].z) * _1746) + ((_1781 * cbLight._m0[_1716].z) * _1730)) * 0.3183098733425140380859375;
    }
    uint _1817 = _1704 + 8u;
    float _1833 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1704].w)) * _583) * 0.949999988079071044921875);
    float _1834 = _1833 * _1833;
    float _1835 = cbLight._m0[_1704].x + _436;
    float _1836 = cbLight._m0[_1704].y + _437;
    float _1837 = cbLight._m0[_1704].z + _438;
    float _1841 = inversesqrt(dot(vec3(_1835, _1836, _1837), vec3(_1835, _1836, _1837)));
    float _1842 = _1841 * _1835;
    float _1843 = _1841 * _1836;
    float _1844 = _1841 * _1837;
    float _1845 = dot(vec3(_327, _328, _581), vec3(cbLight._m0[_1704].xyz));
    float _3502 = isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0));
    float _1848 = isnan(1.0) ? _3502 : (isnan(_3502) ? 1.0 : min(_3502, 1.0));
    float _3513 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
    float _1849 = isnan(1.0) ? _3513 : (isnan(_3513) ? 1.0 : min(_3513, 1.0));
    float _1850 = dot(vec3(_327, _328, _581), vec3(_1842, _1843, _1844));
    float _3524 = isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0));
    float _1853 = isnan(1.0) ? _3524 : (isnan(_3524) ? 1.0 : min(_3524, 1.0));
    float _1854 = dot(vec3(cbLight._m0[_1704].xyz), vec3(_1842, _1843, _1844));
    float _3535 = isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0));
    float _1858 = _1834 * _1834;
    float _1862 = ((_1853 * _1853) * (_1858 + (-1.0))) + 1.0;
    float _1873 = (exp2(log2(1.0 - (isnan(1.0) ? _3535 : (isnan(_3535) ? 1.0 : min(_3535, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1874 = 1.0 - _1834;
    float _1885 = (0.5 / (((_1849 * ((_1848 * _1874) + _1834)) + 9.9999999392252902907785028219223e-09) + (((_1849 * _1874) + _1834) * _1848))) * _1848;
    float _3546 = isnan(0.0) ? _1885 : (isnan(_1885) ? 0.0 : max(_1885, 0.0));
    float _1887 = (isnan(1.0) ? _3546 : (isnan(_3546) ? 1.0 : min(_3546, 1.0))) * (_1858 / ((_1862 * _1862) * 3.141590118408203125));
    uint _1900 = _1704 + 9u;
    float _1914 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1737].w)) * _583) * 0.949999988079071044921875);
    float _1915 = _1914 * _1914;
    float _1916 = cbLight._m0[_1737].x + _436;
    float _1917 = cbLight._m0[_1737].y + _437;
    float _1918 = cbLight._m0[_1737].z + _438;
    float _1922 = inversesqrt(dot(vec3(_1916, _1917, _1918), vec3(_1916, _1917, _1918)));
    float _1923 = _1922 * _1916;
    float _1924 = _1922 * _1917;
    float _1925 = _1922 * _1918;
    float _1926 = dot(vec3(_327, _328, _581), vec3(cbLight._m0[_1737].xyz));
    float _3557 = isnan(0.0) ? _1926 : (isnan(_1926) ? 0.0 : max(_1926, 0.0));
    float _1929 = isnan(1.0) ? _3557 : (isnan(_3557) ? 1.0 : min(_3557, 1.0));
    float _1930 = dot(vec3(_327, _328, _581), vec3(_1923, _1924, _1925));
    float _3568 = isnan(0.0) ? _1930 : (isnan(_1930) ? 0.0 : max(_1930, 0.0));
    float _1933 = isnan(1.0) ? _3568 : (isnan(_3568) ? 1.0 : min(_3568, 1.0));
    float _1934 = dot(vec3(cbLight._m0[_1737].xyz), vec3(_1923, _1924, _1925));
    float _3579 = isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0));
    float _1938 = _1915 * _1915;
    float _1942 = ((_1933 * _1933) * (_1938 + (-1.0))) + 1.0;
    float _1951 = (exp2(log2(1.0 - (isnan(1.0) ? _3579 : (isnan(_3579) ? 1.0 : min(_3579, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1952 = 1.0 - _1915;
    float _1962 = (0.5 / (((_1849 * ((_1929 * _1952) + _1915)) + 9.9999999392252902907785028219223e-09) + (((_1849 * _1952) + _1915) * _1929))) * _1929;
    float _3590 = isnan(0.0) ? _1962 : (isnan(_1962) ? 0.0 : max(_1962, 0.0));
    float _1964 = (isnan(1.0) ? _3590 : (isnan(_3590) ? 1.0 : min(_3590, 1.0))) * (_1938 / ((_1942 * _1942) * 3.141590118408203125));
    float _1974 = (((_1951 * cbLight._m0[_1900].x) * _1964) * _1746) + (((_1873 * cbLight._m0[_1817].x) * _1887) * _1730);
    float _1975 = (((_1951 * cbLight._m0[_1900].y) * _1964) * _1746) + (((_1873 * cbLight._m0[_1817].y) * _1887) * _1730);
    float _1976 = (((_1951 * cbLight._m0[_1900].z) * _1964) * _1746) + (((_1873 * cbLight._m0[_1817].z) * _1887) * _1730);
    float _2112;
    float _2114;
    float _2116;
    float _2118;
    float _2120;
    float _2122;
    if (_1702.y == 0u)
    {
        float _2053 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2054 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2053;
        float _2055 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2053;
        float _2056 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2053;
        uvec4 _2068 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2069 = _2068.x;
        uint _2080 = uint((float(_2068.y) * floor(float(uint(cbSceneParam._m0[85u].y * _512) / _2069))) + floor(float(uint(cbSceneParam._m0[85u].x * _511) / _2069)));
        float _2090 = (log2(_2056 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2091 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
        uint _2094 = uint(isnan(14.0) ? _2091 : (isnan(_2091) ? 14.0 : min(_2091, 14.0)));
        uint _2101 = _2068.z;
        float _2150;
        float _2152;
        float _2154;
        float _2156;
        float _2158;
        float _2160;
        if (((((1u << ((_2101 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2094 << 2u) + (_2080 << 6u)) >> 2u)).x) == 0u) || ((_2101 & 240u) == 0u))
        {
            _2150 = 0.0;
            _2152 = 0.0;
            _2154 = 0.0;
            _2156 = 0.0;
            _2158 = 0.0;
            _2160 = 0.0;
        }
        else
        {
            float _2151;
            float _2153;
            float _2155;
            float _2157;
            float _2159;
            float _2161;
            float _2339 = 0.0;
            float _2340 = 0.0;
            float _2341 = 0.0;
            float _2342 = 0.0;
            float _2343 = 0.0;
            float _2344 = 0.0;
            uint _2345 = 0u;
            uint _2354;
            bool _2355;
            for (;;)
            {
                _2354 = texelFetch(g_lightClassification, int((((_2094 << 5u) + (_2080 << 9u)) + (_2345 << 2u)) >> 2u)).x;
                _2355 = _2354 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2355)
                {
                    frontier_phi_55_pred = _2344;
                    frontier_phi_55_pred_1 = _2343;
                    frontier_phi_55_pred_2 = _2342;
                    frontier_phi_55_pred_3 = _2340;
                    frontier_phi_55_pred_4 = _2339;
                    frontier_phi_55_pred_5 = _2341;
                }
                else
                {
                    float _2552;
                    float _2553;
                    float _2554;
                    float _2555;
                    float _2556;
                    float _2557;
                    uint _2558;
                    _2552 = _2339;
                    _2553 = _2340;
                    _2554 = _2341;
                    _2555 = _2342;
                    _2556 = _2343;
                    _2557 = _2344;
                    _2558 = _2354;
                    float _2500;
                    float _2501;
                    float _2502;
                    float _2503;
                    float _2504;
                    float _2505;
                    for (;;)
                    {
                        uint _2562 = uint(findLSB(_2558)) + (_2345 << 5u);
                        uint _2559 = (_2558 + 4294967295u) & _2558;
                        uint _2564 = _2562 * 48u;
                        vec4 _2578 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2564)).x, texelFetch(g_PointLightRenderingBuffer, int(_2564 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2564 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2564 + 3u)).x));
                        uint _2584 = (_2562 * 48u) + 4u;
                        vec4 _2597 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2584)).x, texelFetch(g_PointLightRenderingBuffer, int(_2584 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2584 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2584 + 3u)).x));
                        float _2598 = _2597.x;
                        float _2599 = _2597.y;
                        float _2600 = _2597.z;
                        uint _2603 = (_2562 * 48u) + 8u;
                        vec3 _2614 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2603)).x, texelFetch(g_PointLightRenderingBuffer, int(_2603 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2603 + 2u)).x));
                        uint _2619 = (_2562 * 48u) + 12u;
                        vec2 _2627 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2619)).x, texelFetch(g_PointLightRenderingBuffer, int(_2619 + 1u)).x));
                        float _2633 = inversesqrt(dot(vec3(_2054, _2055, _2056), vec3(_2054, _2055, _2056)));
                        float _2634 = _2633 * _2054;
                        float _2635 = _2633 * _2055;
                        float _2636 = _2633 * _2056;
                        float _2637 = _2578.x - _2054;
                        float _2638 = _2578.y - _2055;
                        float _2639 = _2578.z - _2056;
                        float _2640 = dot(vec3(_2637, _2638, _2639), vec3(_2637, _2638, _2639));
                        float _2643 = inversesqrt(_2640);
                        float _2644 = _2643 * _2637;
                        float _2645 = _2643 * _2638;
                        float _2646 = _2643 * _2639;
                        float _2647 = dot(vec3(_622, _625, _628), vec3(_2644, _2645, _2646));
                        float _2652 = 1.0 - (_2640 * _2578.w);
                        float _3611 = isnan(0.0) ? _2652 : (isnan(_2652) ? 0.0 : max(_2652, 0.0));
                        float _2653 = isnan(1.0) ? _3611 : (isnan(_3611) ? 1.0 : min(_3611, 1.0));
                        float _2654 = sqrt(_2640) * _2597.w;
                        float _2657 = 1.39999997615814208984375 / (_2654 + 1.39999997615814208984375);
                        float _2658 = _2657 * _2657;
                        float _2659 = 1.0 - _2658;
                        float _2661 = (_2659 * _2659) * _584;
                        float _2664 = ((_2659 * _2647) + _2658) + _2661;
                        float _2669 = _2654 * _2654;
                        float _2674 = ((isnan(0.0) ? _2664 : (isnan(_2664) ? 0.0 : max(_2664, 0.0))) * _2653) / (((_2661 * 2.0) + 1.0) * ((_2669 * 0.699999988079071044921875) + 1.0));
                        float _2678 = dot(vec3(_2644, _2645, _2646), vec3(_2634, _2635, _2636));
                        float _3627 = isnan(0.0) ? _2678 : (isnan(_2678) ? 0.0 : max(_2678, 0.0));
                        float _2685 = dot(vec3((-0.0) - _2634, (-0.0) - _2635, (-0.0) - _2636), vec3(_622, _625, _628)) + 1.0;
                        float _2687 = (isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0))) * 0.5;
                        float _2694 = ((_2687 * _2687) * _2627.x) * exp2((_2627.y * 32.0) * log2(isnan(1.0) ? _3627 : (isnan(_3627) ? 1.0 : min(_3627, 1.0))));
                        float _2696 = _584 / (_584 + 1.0);
                        float _2712 = (-0.0) - _2054;
                        float _2713 = (-0.0) - _2055;
                        float _2714 = (-0.0) - _2056;
                        float _2718 = inversesqrt(dot(vec3(_2712, _2713, _2714), vec3(_2712, _2713, _2714)));
                        float _2719 = _2718 * _2712;
                        float _2720 = _2718 * _2713;
                        float _2721 = _2718 * _2714;
                        float _2729 = exp2(log2(1.0 / ((_2669 * 3.5) + 5.0)) * 0.25);
                        float _2730 = 1.0 - _682;
                        float _2737 = sqrt(1.0 - ((1.0 - (_2730 * _2730)) * (1.0 - (_2729 * _2729))));
                        float _2738 = _2737 * _2737;
                        float _2739 = _2738 * _2738;
                        float _2740 = _2719 + _2644;
                        float _2741 = _2720 + _2645;
                        float _2742 = _2721 + _2646;
                        float _2746 = inversesqrt(dot(vec3(_2740, _2741, _2742), vec3(_2740, _2741, _2742)));
                        float _2750 = dot(vec3(_622, _625, _628), vec3(_2719, _2720, _2721));
                        float _3643 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
                        float _2753 = isnan(1.0) ? _3643 : (isnan(_3643) ? 1.0 : min(_3643, 1.0));
                        float _2754 = dot(vec3(_622, _625, _628), vec3(_2746 * _2740, _2746 * _2741, _2746 * _2742));
                        float _3654 = isnan(0.0) ? _2754 : (isnan(_2754) ? 0.0 : max(_2754, 0.0));
                        float _2757 = isnan(1.0) ? _3654 : (isnan(_3654) ? 1.0 : min(_3654, 1.0));
                        float _2761 = ((_2757 * _2757) * (_2739 + (-1.0))) + 1.0;
                        float _2762 = _2657 * _2738;
                        float _2763 = _2762 * _2762;
                        float _2766 = ((1.0 - _2763) * _2647) + _2763;
                        float _3665 = isnan(0.0) ? _2766 : (isnan(_2766) ? 0.0 : max(_2766, 0.0));
                        float _2767 = isnan(1.0) ? _3665 : (isnan(_3665) ? 1.0 : min(_3665, 1.0));
                        float _2768 = 1.0 - _2738;
                        float _2778 = (0.5 / (((_2767 * ((_2753 * _2768) + _2738)) + 9.9999999392252902907785028219223e-09) + (((_2767 * _2768) + _2738) * _2753))) * _2767;
                        float _3676 = isnan(0.0) ? _2778 : (isnan(_2778) ? 0.0 : max(_2778, 0.0));
                        float _2789 = (((_2739 * 3.1415927410125732421875) * (isnan(1.0) ? _3676 : (isnan(_3676) ? 1.0 : min(_3676, 1.0)))) / ((_2761 * _2761) * ((_2669 * 2.1991131305694580078125) + 3.141590118408203125))) * _2653;
                        _2503 = (((((_2598 * 0.3183098733425140380859375) * _2696) * _2694) + _2598) * _2674) + _2555;
                        _2504 = (((((_2599 * 0.3183098733425140380859375) * _2696) * _2694) + _2599) * _2674) + _2556;
                        _2505 = (((((_2600 * 0.3183098733425140380859375) * _2696) * _2694) + _2600) * _2674) + _2557;
                        _2500 = (_2789 * _2614.x) + _2552;
                        _2501 = (_2789 * _2614.y) + _2553;
                        _2502 = (_2789 * _2614.z) + _2554;
                        if (_2559 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2552 = _2500;
                            _2553 = _2501;
                            _2554 = _2502;
                            _2555 = _2503;
                            _2556 = _2504;
                            _2557 = _2505;
                            _2558 = _2559;
                        }
                    }
                    frontier_phi_55_pred = _2505;
                    frontier_phi_55_pred_1 = _2504;
                    frontier_phi_55_pred_2 = _2503;
                    frontier_phi_55_pred_3 = _2501;
                    frontier_phi_55_pred_4 = _2500;
                    frontier_phi_55_pred_5 = _2502;
                }
                _2161 = frontier_phi_55_pred;
                _2159 = frontier_phi_55_pred_1;
                _2157 = frontier_phi_55_pred_2;
                _2153 = frontier_phi_55_pred_3;
                _2151 = frontier_phi_55_pred_4;
                _2155 = frontier_phi_55_pred_5;
                uint _2346 = _2345 + 1u;
                if (_2346 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2339 = _2151;
                    _2340 = _2153;
                    _2341 = _2155;
                    _2342 = _2157;
                    _2343 = _2159;
                    _2344 = _2161;
                    _2345 = _2346;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2150 = _2151;
            _2152 = _2153;
            _2154 = _2155;
            _2156 = _2157;
            _2158 = _2159;
            _2160 = _2161;
        }
        float _2165 = isnan(1.0) ? _661 : (isnan(_661) ? 1.0 : min(_661, 1.0));
        _2112 = (_2165 * _2156) + _1811;
        _2114 = (_2165 * _2158) + _1812;
        _2116 = (_2165 * _2160) + _1813;
        _2118 = ((_2150 * 0.039999999105930328369140625) * _2165) + _1974;
        _2120 = ((_2152 * 0.039999999105930328369140625) * _2165) + _1975;
        _2122 = ((_2154 * 0.039999999105930328369140625) * _2165) + _1976;
    }
    else
    {
        _2112 = _1811;
        _2114 = _1812;
        _2116 = _1813;
        _2118 = _1974;
        _2120 = _1975;
        _2122 = _1976;
    }
    float _2236;
    float _2237;
    float _2238;
    if (_584 > 0.0)
    {
        uint _2172 = _1704 + 4u;
        float _2178 = (-0.0) - _436;
        float _2179 = (-0.0) - _437;
        float _2180 = (-0.0) - _438;
        float _2181 = dot(vec3(cbLight._m0[_1704].xyz), vec3(_2178, _2179, _2180));
        float _3692 = isnan(0.0) ? _2181 : (isnan(_2181) ? 0.0 : max(_2181, 0.0));
        float _2185 = _672 + 1.0;
        float _2187 = (isnan(0.0) ? _2185 : (isnan(_2185) ? 0.0 : max(_2185, 0.0))) * 0.5;
        float _2192 = _2187 * _2187;
        float _2193 = _2192 * exp2(log2(isnan(1.0) ? _3692 : (isnan(_3692) ? 1.0 : min(_3692, 1.0))) * 32.0);
        float _2195 = _584 / (_584 + 1.0);
        float _2196 = isnan(_1713) ? 1.0 : (isnan(1.0) ? _1713 : min(1.0, _1713));
        uint _2206 = _1704 + 5u;
        float _2212 = dot(vec3(cbLight._m0[_1737].xyz), vec3(_2178, _2179, _2180));
        float _3713 = isnan(0.0) ? _2212 : (isnan(_2212) ? 0.0 : max(_2212, 0.0));
        float _2219 = _2192 * exp2(log2(isnan(1.0) ? _3713 : (isnan(_3713) ? 1.0 : min(_3713, 1.0))) * 32.0);
        float _2220 = isnan(_1714) ? 1.0 : (isnan(1.0) ? _1714 : min(1.0, _1714));
        _2236 = ((((_2219 * cbLight._m0[_2206].x) * _2195) * _2220) + (((_2193 * cbLight._m0[_2172].x) * _2195) * _2196)) * 0.3183098733425140380859375;
        _2237 = ((((_2219 * cbLight._m0[_2206].y) * _2195) * _2220) + (((_2193 * cbLight._m0[_2172].y) * _2195) * _2196)) * 0.3183098733425140380859375;
        _2238 = ((((_2219 * cbLight._m0[_2206].z) * _2195) * _2220) + (((_2193 * cbLight._m0[_2172].z) * _2195) * _2196)) * 0.3183098733425140380859375;
    }
    else
    {
        _2236 = 0.0;
        _2237 = 0.0;
        _2238 = 0.0;
    }
    float _3729 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
    float _3740 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
    float _3751 = isnan(0.0) ? _654 : (isnan(_654) ? 0.0 : max(_654, 0.0));
    float _3762 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
    float _2253 = (isnan(1.0) ? _3729 : (isnan(_3729) ? 1.0 : min(_3729, 1.0))) * ((_2112 + ((isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0))) * _661)) + _2236);
    float _2254 = (isnan(1.0) ? _3740 : (isnan(_3740) ? 1.0 : min(_3740, 1.0))) * ((_2114 + ((isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0))) * _661)) + _2237);
    float _2255 = (isnan(1.0) ? _3751 : (isnan(_3751) ? 1.0 : min(_3751, 1.0))) * ((_2116 + ((isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0))) * _661)) + _2238);
    float _2259 = 0.959999978542327880859375 - (exp2(log2(1.0 - _676) * 5.0) * 0.959999978542327880859375);
    float _2284 = _511 / cbSceneParam._m0[86u].x;
    float _2285 = _512 / cbSceneParam._m0[86u].y;
    vec4 _2299 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2284, _2285, (log2((isnan(cbSceneParam._m0[77u].w) ? _603 : (isnan(_603) ? cbSceneParam._m0[77u].w : min(_603, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2301 = _2299.x;
    float _2302 = _2299.y;
    float _2303 = _2299.z;
    float _2304 = _2299.w;
    float _2397;
    float _2399;
    float _2401;
    float _2403;
    if (_603 > cbSceneParam._m0[78u].w)
    {
        float _2360 = isnan(_603) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _603 : min(cbSceneParam._m0[80u].w, _603));
        float _2361 = _2360 / _603;
        float _2372 = _2361 * _279;
        float _2373 = _280 * _2361;
        float _2374 = (-0.0) - _2373;
        float _2375 = _2361 * _281;
        float _2377 = (cbSceneParam._m0[77u].w * _2374) / _2360;
        float _2378 = _2377 + cbSceneParam._m0[79u].w;
        float _2379 = cbSceneParam._m0[79u].w - _2373;
        float _2385 = sqrt(((_2372 * _2372) + (_2373 * _2373)) + (_2375 * _2375));
        float _2388 = (1.0 - (cbSceneParam._m0[77u].w / _2360)) * _2385;
        float _2393 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2395 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2794;
        if (abs((_2374 - _2377) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2794 = ((((_2378 > 0.0) ? exp2(_2393 * _2378) : (2.0 - exp2(_2395 * _2378))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2388;
        }
        else
        {
            float _2525 = 1.0 / cbSceneParam._m0[80u].x;
            float _2526 = isnan(_2379) ? _2378 : (isnan(_2378) ? _2379 : max(_2378, _2379));
            float _2527 = isnan(_2379) ? _2378 : (isnan(_2378) ? _2379 : min(_2378, _2379));
            float _2536 = isnan(0.0) ? _2526 : (isnan(_2526) ? 0.0 : min(_2526, 0.0));
            float _2537 = isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : min(_2527, 0.0));
            _2794 = ((abs(_2385 / _2374) * cbSceneParam._m0[80u].y) * ((((_2536 - _2537) * 2.0) - ((exp2(_2393 * (isnan(0.0) ? _2526 : (isnan(_2526) ? 0.0 : max(_2526, 0.0)))) - exp2(_2393 * (isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : max(_2527, 0.0))))) * _2525)) - ((exp2(_2395 * _2536) - exp2(_2395 * _2537)) * _2525))) + (_2388 * cbSceneParam._m0[80u].z);
        }
        vec4 _2796 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2284, _2285, 1.0), 0.0);
        float _2805 = exp2((_2794 * (-1.44269502162933349609375)) * (1.0 - _2796.w));
        float _2806 = log2(_2805);
        float _2822 = log2(_2304);
        _2397 = (exp2(_2822 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2806 * cbSceneParam._m0[78u].x)) * _2796.x) / cbSceneParam._m0[78u].x)) + _2301;
        _2399 = (exp2(_2822 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2806 * cbSceneParam._m0[78u].y)) * _2796.y) / cbSceneParam._m0[78u].y)) + _2302;
        _2401 = (exp2(_2822 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2806 * cbSceneParam._m0[78u].z)) * _2796.z) / cbSceneParam._m0[78u].z)) + _2303;
        _2403 = _2805 * _2304;
    }
    else
    {
        _2397 = _2301;
        _2399 = _2302;
        _2401 = _2303;
        _2403 = _2304;
    }
    bool _2415 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2416 = log2(_2403);
    float _2423 = exp2(_2416 * cbSceneParam._m0[78u].x) * ((_2253 + ((_2118 + ((isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0))) * _1472)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _535.x) * _2259) - _2253) * _579));
    float _2424 = exp2(_2416 * cbSceneParam._m0[78u].y) * ((_2254 + ((_2120 + ((isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0))) * _1472)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _535.y) * _2259) - _2254) * _579));
    float _2425 = exp2(_2416 * cbSceneParam._m0[78u].z) * ((_2255 + ((_2122 + ((isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0))) * _1472)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _535.z) * _2259) - _2255) * _579));
    vec4 _2433 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_511, _512));
    float _2435 = _2433.x;
    float _2456 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2435)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2435))) - _603) * cbMtdParam._m0[17u].y;
    float _3813 = isnan(0.0) ? _2456 : (isnan(_2456) ? 0.0 : max(_2456, 0.0));
    float _2458 = (cbInstanceData._m0[_641 + 6u].w * (isnan(1.0) ? _3762 : (isnan(_3762) ? 1.0 : min(_3762, 1.0)))) * (isnan(1.0) ? _3813 : (isnan(_3813) ? 1.0 : min(_3813, 1.0)));
    float _2467 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2467 * (_2415 ? _2423 : (_2423 + (cbSceneParam._m0[72u].w * _2397)));
    SV_Target.y = _2467 * (_2415 ? _2424 : (_2424 + (cbSceneParam._m0[72u].w * _2399)));
    SV_Target.z = _2467 * (_2415 ? _2425 : (_2425 + (cbSceneParam._m0[72u].w * _2401)));
    SV_Target.w = _2458;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2458;
}


