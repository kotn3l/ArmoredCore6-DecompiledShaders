#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1284;
float _3224;
float _3225;
float _3226;
float _3227;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _212 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _213 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _214 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _220 = inversesqrt(dot(vec3(_212, _213, _214), vec3(_212, _213, _214)));
    float _221 = _220 * _212;
    float _222 = _220 * _213;
    float _223 = _220 * _214;
    float _227 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _228 = _227 * NORMAL.x;
    float _229 = _227 * NORMAL.y;
    float _230 = _227 * NORMAL.z;
    float _234 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _235 = _234 * TANGENT.x;
    float _236 = _234 * TANGENT.y;
    float _237 = _234 * TANGENT.z;
    float _242;
    float _243;
    float _244;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _242 = (-0.0) - _228;
        _243 = (-0.0) - _229;
        _244 = (-0.0) - _230;
    }
    else
    {
        _242 = _228;
        _243 = _229;
        _244 = _230;
    }
    float _291 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _301 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _291);
    float _302 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _291);
    float _303 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _291);
    uint _309 = uint(roundEven(NORMAL.w)) * 13u;
    uint _314 = _309 + 1u;
    uint _318 = _309 + 2u;
    float _327 = sqrt(((cbInstanceData._m0[_314].x * cbInstanceData._m0[_314].x) + (cbInstanceData._m0[_309].x * cbInstanceData._m0[_309].x)) + (cbInstanceData._m0[_318].x * cbInstanceData._m0[_318].x));
    float _328 = _327 * TEXCOORD.z;
    float _329 = _327 * TEXCOORD.w;
    vec4 _342 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _328) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _329) + cbTextureTilingScale._m0[8u].w));
    vec4 _369 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _377 = (_369.x * 2.0) + (-1.0);
    float _379 = (_369.y * 2.0) + (-1.0);
    float _380 = dot(vec2(_377, _379), vec2(_377, _379));
    float _3236 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _386 = sqrt(1.0 - (isnan(1.0) ? _3236 : (isnan(_3236) ? 1.0 : min(_3236, 1.0))));
    float _389 = fma(_386, _242, fma(_379, _235, _377 * _221));
    float _392 = fma(_386, _243, fma(_379, _236, _377 * _222));
    float _395 = fma(_386, _244, fma(_379, _237, _377 * _223));
    float _399 = inversesqrt(dot(vec3(_389, _392, _395), vec3(_389, _392, _395)));
    float _400 = _399 * _389;
    float _401 = _399 * _392;
    float _430 = (cbMtdParam._m0[17u].w + dot(vec4(_400, _401, _399 * _395, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _328) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _329) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3247 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _431 = isnan(1.0) ? _3247 : (isnan(_3247) ? 1.0 : min(_3247, 1.0));
    vec4 _443 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _448 = _443.w;
    float _460 = dot(vec3(_301, _302, _303), vec3(_221, _222, _223));
    float _463 = dot(vec3(_301, _302, _303), vec3(_235, _236, _237));
    float _466 = dot(vec3(_301, _302, _303), vec3(_242, _243, _244));
    float _472 = inversesqrt(dot(vec3(_460, _463, _466), vec3(_460, _463, _466)));
    float _494 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _514 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_460 * cbMtdParam._m0[14u].x) * _472) * _494) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_463 * cbMtdParam._m0[14u].x) * _472) * _494) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _537 = inversesqrt(dot(vec3(_301, _302, _303), vec3(_301, _302, _303)));
    float _538 = _537 * _301;
    float _539 = _537 * _302;
    float _540 = _537 * _303;
    float _541 = dot(vec4(_538, _539, _540, 0.0), vec4(_242, _243, _244, 0.0));
    float _544 = _541 - cbMtdParam._m0[15u].z;
    float _3258 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _551 = exp2(log2(1.0 - (isnan(1.0) ? _3258 : (isnan(_3258) ? 1.0 : min(_3258, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _566 = ((((_443.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _514.x) * cbMtdParam._m0[9u].x) * ((_551 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _571 = ((((_443.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _514.y) * cbMtdParam._m0[9u].y) * ((_551 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _576 = ((((_443.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _514.z) * cbMtdParam._m0[9u].z) * ((_551 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _583 = (((_342.x * cbMtdParam._m0[10u].x) - _566) * _431) + _566;
    float _584 = (((_342.y * cbMtdParam._m0[10u].y) - _571) * _431) + _571;
    float _585 = (((_342.z * cbMtdParam._m0[10u].z) - _576) * _431) + _576;
    vec4 _597 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _328) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _329) + cbTextureTilingScale._m0[9u].w));
    float _604 = (_597.x * 2.0) + (-1.0);
    float _605 = (_597.y * 2.0) + (-1.0);
    float _606 = dot(vec2(_604, _605), vec2(_604, _605));
    float _3274 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    vec4 _627 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _637 = cbMtdParam._m0[17u].z + _369.z;
    float _643 = (_637 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_627.z - _637));
    float _646 = ((_597.z - _643) * _431) + _643;
    float _652 = ((((_627.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _377;
    float _653 = ((((_627.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _379;
    float _661 = ((sqrt(1.0 - (isnan(1.0) ? _3274 : (isnan(_3274) ? 1.0 : min(_3274, 1.0)))) - _386) * _431) + _386;
    float _665 = ((_652 * cbMtdParam._m0[14u].z) + _652) + ((_604 - _652) * _431);
    float _667 = ((_653 * cbMtdParam._m0[14u].z) + _653) + ((_605 - _653) * _431);
    vec4 _679 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _683 = cbMtdParam._m0[16u].w * _679.x;
    float _685 = _683 - (_683 * _431);
    float _705 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _400));
    float _706 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _401));
    float _713 = isnan(cbInstanceData._m0[8u].x) ? _705 : (isnan(_705) ? cbInstanceData._m0[8u].x : max(_705, cbInstanceData._m0[8u].x));
    float _714 = isnan(cbInstanceData._m0[8u].y) ? _706 : (isnan(_706) ? cbInstanceData._m0[8u].y : max(_706, cbInstanceData._m0[8u].y));
    vec4 _718 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _713 : (isnan(_713) ? cbInstanceData._m0[8u].z : min(_713, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _714 : (isnan(_714) ? cbInstanceData._m0[8u].w : min(_714, cbInstanceData._m0[8u].w))));
    float _751 = _541 - cbMtdParam._m0[15u].x;
    float _3305 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _761 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3305 : (isnan(_3305) ? 1.0 : min(_3305, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3321 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _762 = isnan(1.0) ? _3321 : (isnan(_3321) ? 1.0 : min(_3321, 1.0));
    float _764 = _762 - (_762 * _431);
    float _768 = fma(_661, _242, fma(_667, _235, _665 * _221));
    float _771 = fma(_661, _243, fma(_667, _236, _665 * _222));
    float _774 = fma(_661, _244, fma(_667, _237, _665 * _223));
    float _778 = inversesqrt(dot(vec3(_768, _771, _774), vec3(_768, _771, _774)));
    float _779 = _778 * _768;
    float _780 = _778 * _771;
    float _781 = _778 * _774;
    float _3332 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    float _782 = isnan(1.0) ? _3332 : (isnan(_3332) ? 1.0 : min(_3332, 1.0));
    float _3343 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
    float _783 = isnan(1.0) ? _3343 : (isnan(_3343) ? 1.0 : min(_3343, 1.0));
    float _784 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    float _3359 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    float _3370 = isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : max(_584, 0.0));
    float _3381 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0));
    float _801 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _806 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _808 = _806.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _963 = sqrt(((_301 * _301) + (_302 * _302)) + (_303 * _303));
        float _969 = (cbMatDynParam._m0[5u].x * _963) + cbMatDynParam._m0[5u].y;
        float _3392 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
        float _970 = isnan(1.0) ? _3392 : (isnan(_3392) ? 1.0 : min(_3392, 1.0));
        float _974 = (cbMatDynParam._m0[5u].z * _963) + cbMatDynParam._m0[5u].w;
        float _3403 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3403 : (isnan(_3403) ? 1.0 : min(_3403, 1.0))) - _970)) + _970) < ((_808 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _818 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _819 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _837 = fma(_781, cbSceneParam._m0[5u].z, fma(_780, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _779));
    float _840 = fma(_781, cbSceneParam._m0[6u].z, fma(_780, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _779));
    float _843 = fma(_781, cbSceneParam._m0[7u].z, fma(_780, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _779));
    uint _856 = _309 + 9u;
    uint _857 = _856 + uint(cbMatDynParam._m0[0u].w);
    float _863 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3359 : (isnan(_3359) ? 1.0 : min(_3359, 1.0)))) * cbInstanceData._m0[_857].x;
    float _864 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3370 : (isnan(_3370) ? 1.0 : min(_3370, 1.0)))) * cbInstanceData._m0[_857].y;
    float _865 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3381 : (isnan(_3381) ? 1.0 : min(_3381, 1.0)))) * cbInstanceData._m0[_857].z;
    float _3414 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _866 = isnan(1.0) ? _3414 : (isnan(_3414) ? 1.0 : min(_3414, 1.0));
    float _3425 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _867 = isnan(1.0) ? _3425 : (isnan(_3425) ? 1.0 : min(_3425, 1.0));
    float _3436 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    float _868 = isnan(1.0) ? _3436 : (isnan(_3436) ? 1.0 : min(_3436, 1.0));
    vec4 _876 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _818, cbSceneParam._m0[86u].y * _819));
    float _879 = _876.x * TEXCOORD_5.w;
    float _880 = dot(vec3(_779, _780, _781), vec3(_538, _539, _540));
    float _883 = _880 * 2.0;
    float _887 = (_883 * _779) - _538;
    float _888 = (_883 * _780) - _539;
    float _889 = (_883 * _781) - _540;
    float _890 = dot(vec3(_538, _539, _540), vec3(_779, _780, _781));
    float _893 = abs(_890);
    float _3447 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    float _894 = isnan(1.0) ? _3447 : (isnan(_3447) ? 1.0 : min(_3447, 1.0));
    float _900 = sqrt(_783);
    float _912 = exp2((_900 * 5.0) * log2(1.0 - (_894 * 0.999000012874603271484375))) / (4.0 - (_900 * 3.0));
    float _944 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _948 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _952 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1283;
    float _1285;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    float _1295;
    float _1296;
    float _1297;
    float _1298;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1008 = fma(_952, cbModelParam._m0[26u].z, fma(_948, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _944));
        float _1012 = fma(_952, cbModelParam._m0[27u].z, fma(_948, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _944));
        float _1016 = fma(_952, cbModelParam._m0[28u].z, fma(_948, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _944));
        float _1041 = _944 + _779;
        float _1042 = _948 + _780;
        float _1043 = _952 + _781;
        float _1053 = fma(_1043, cbModelParam._m0[26u].z, fma(_1042, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1041)) - _1008;
        float _1054 = fma(_1043, cbModelParam._m0[27u].z, fma(_1042, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1041)) - _1012;
        float _1055 = fma(_1043, cbModelParam._m0[28u].z, fma(_1042, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1041)) - _1016;
        float _1059 = inversesqrt(dot(vec3(_1053, _1054, _1055), vec3(_1053, _1054, _1055)));
        float _1072 = ((_1059 * _1053) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1008 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1073 = ((_1059 * _1054) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1012 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1074 = ((_1059 * _1055) / cbModelParam._m0[34u].z) + ((((((_1016 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1077 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1072, _1073, _1074), 0.0);
        vec4 _1084 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1072, _1073, _1074), 0.0);
        vec4 _1091 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1072, _1073, _1074), 0.0);
        vec4 _1098 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1072, _1073, _1074), 0.0);
        float _1111 = exp2((_1077.w + (-0.5)) * 20.0) * 2.0;
        float _1112 = _1111 * (_1077.x + (-0.5));
        float _1113 = _1111 * (_1077.y + (-0.5));
        float _1114 = _1111 * (_1077.z + (-0.5));
        float _1121 = exp2((_1084.w + (-0.5)) * 20.0) * 2.0;
        float _1122 = _1121 * (_1084.x + (-0.5));
        float _1123 = _1121 * (_1084.y + (-0.5));
        float _1124 = _1121 * (_1084.z + (-0.5));
        float _1131 = exp2((_1091.w + (-0.5)) * 20.0) * 2.0;
        float _1132 = _1131 * (_1091.x + (-0.5));
        float _1133 = _1131 * (_1091.y + (-0.5));
        float _1134 = _1131 * (_1091.z + (-0.5));
        float _1141 = exp2((_1098.w + (-0.5)) * 20.0) * 2.0;
        float _1142 = _1141 * (_1098.x + (-0.5));
        float _1143 = _1141 * (_1098.y + (-0.5));
        float _1144 = _1141 * (_1098.z + (-0.5));
        float _1145 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1146 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1147 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1148 = _1112 * 0.5;
        float _1149 = _1122 * 0.5;
        float _1150 = _1132 * 0.5;
        float _1151 = dot(vec3(_1148, _1149, _1150), vec3(_1148, _1149, _1150));
        float _1156 = (_1151 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1151);
        float _1165 = (dot(vec3(_779, _780, _781), vec3(_1156 * _1148, _1156 * _1149, _1156 * _1150)) + 1.0) * 0.5;
        float _3473 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1175 = sqrt(((_1149 * _1149) + (_1148 * _1148)) + (_1150 * _1150)) / (_1145 + 9.9999997473787516355514526367188e-06);
        float _3484 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
        float _1176 = isnan(1.0) ? _3484 : (isnan(_3484) ? 1.0 : min(_3484, 1.0));
        float _1177 = _1176 * 2.0;
        float _1181 = (1.0 - _1176) / (_1176 + 1.0);
        float _3495 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
        float _1182 = isnan(1.0) ? _3495 : (isnan(_3495) ? 1.0 : min(_3495, 1.0));
        float _1191 = ((((1.0 - _1182) * (_1177 + 2.0)) * exp2(log2(isnan(1.0) ? _3473 : (isnan(_3473) ? 1.0 : min(_3473, 1.0))) * (_1177 + 1.0))) + _1182) * _1145;
        float _1192 = _1113 * 0.5;
        float _1193 = _1123 * 0.5;
        float _1194 = _1133 * 0.5;
        float _1195 = dot(vec3(_1192, _1193, _1194), vec3(_1192, _1193, _1194));
        float _1200 = (_1195 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1195);
        float _1208 = (dot(vec3(_779, _780, _781), vec3(_1200 * _1192, _1200 * _1193, _1200 * _1194)) + 1.0) * 0.5;
        float _3506 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1217 = sqrt(((_1193 * _1193) + (_1192 * _1192)) + (_1194 * _1194)) / (_1146 + 9.9999997473787516355514526367188e-06);
        float _3517 = isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0));
        float _1218 = isnan(1.0) ? _3517 : (isnan(_3517) ? 1.0 : min(_3517, 1.0));
        float _1219 = _1218 * 2.0;
        float _1223 = (1.0 - _1218) / (_1218 + 1.0);
        float _3528 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
        float _1224 = isnan(1.0) ? _3528 : (isnan(_3528) ? 1.0 : min(_3528, 1.0));
        float _1233 = ((((1.0 - _1224) * (_1219 + 2.0)) * exp2(log2(isnan(1.0) ? _3506 : (isnan(_3506) ? 1.0 : min(_3506, 1.0))) * (_1219 + 1.0))) + _1224) * _1146;
        float _1234 = _1114 * 0.5;
        float _1235 = _1124 * 0.5;
        float _1236 = _1134 * 0.5;
        float _1237 = dot(vec3(_1234, _1235, _1236), vec3(_1234, _1235, _1236));
        float _1242 = (_1237 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1237);
        float _1250 = (dot(vec3(_779, _780, _781), vec3(_1242 * _1234, _1242 * _1235, _1242 * _1236)) + 1.0) * 0.5;
        float _3539 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1259 = sqrt(((_1235 * _1235) + (_1234 * _1234)) + (_1236 * _1236)) / (_1147 + 9.9999997473787516355514526367188e-06);
        float _3550 = isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0));
        float _1260 = isnan(1.0) ? _3550 : (isnan(_3550) ? 1.0 : min(_3550, 1.0));
        float _1261 = _1260 * 2.0;
        float _1265 = (1.0 - _1260) / (_1260 + 1.0);
        float _3561 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1266 = isnan(1.0) ? _3561 : (isnan(_3561) ? 1.0 : min(_3561, 1.0));
        float _1275 = ((((1.0 - _1266) * (_1261 + 2.0)) * exp2(log2(isnan(1.0) ? _3539 : (isnan(_3539) ? 1.0 : min(_3539, 1.0))) * (_1261 + 1.0))) + _1266) * _1147;
        _1283 = _1114;
        _1285 = _1113;
        _1286 = _1112;
        _1287 = _1124;
        _1288 = _1123;
        _1289 = _1122;
        _1290 = _1134;
        _1291 = _1133;
        _1292 = _1132;
        _1293 = _1147;
        _1294 = _1146;
        _1295 = _1145;
        _1296 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0)));
        _1297 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0)));
        _1298 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0)));
    }
    else
    {
        _1283 = _1284;
        _1285 = _1284;
        _1286 = _1284;
        _1287 = _1284;
        _1288 = _1284;
        _1289 = _1284;
        _1290 = _1284;
        _1291 = _1284;
        _1292 = _1284;
        _1293 = _1284;
        _1294 = _1284;
        _1295 = _1284;
        _1296 = 0.0;
        _1297 = 0.0;
        _1298 = 0.0;
    }
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1327 = fma(_952, cbModelParam._m0[30u].z, fma(_948, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _944));
        float _1331 = fma(_952, cbModelParam._m0[31u].z, fma(_948, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _944));
        float _1335 = fma(_952, cbModelParam._m0[32u].z, fma(_948, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _944));
        float _1358 = _944 + _779;
        float _1359 = _948 + _780;
        float _1360 = _952 + _781;
        float _1370 = fma(_1360, cbModelParam._m0[30u].z, fma(_1359, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1358)) - _1327;
        float _1371 = fma(_1360, cbModelParam._m0[31u].z, fma(_1359, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1358)) - _1331;
        float _1372 = fma(_1360, cbModelParam._m0[32u].z, fma(_1359, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1358)) - _1335;
        float _1376 = inversesqrt(dot(vec3(_1370, _1371, _1372), vec3(_1370, _1371, _1372)));
        float _1389 = ((_1376 * _1370) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1327 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1390 = ((_1376 * _1371) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1331 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1391 = ((_1376 * _1372) / cbModelParam._m0[35u].z) + ((((((_1335 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1393 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1389, _1390, _1391), 0.0);
        vec4 _1400 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1389, _1390, _1391), 0.0);
        vec4 _1407 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1389, _1390, _1391), 0.0);
        vec4 _1414 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1389, _1390, _1391), 0.0);
        float _1426 = exp2((_1393.w + (-0.5)) * 20.0) * 2.0;
        float _1427 = _1426 * (_1393.x + (-0.5));
        float _1428 = _1426 * (_1393.y + (-0.5));
        float _1429 = _1426 * (_1393.z + (-0.5));
        float _1436 = exp2((_1400.w + (-0.5)) * 20.0) * 2.0;
        float _1437 = _1436 * (_1400.x + (-0.5));
        float _1438 = _1436 * (_1400.y + (-0.5));
        float _1439 = _1436 * (_1400.z + (-0.5));
        float _1446 = exp2((_1407.w + (-0.5)) * 20.0) * 2.0;
        float _1447 = _1446 * (_1407.x + (-0.5));
        float _1448 = _1446 * (_1407.y + (-0.5));
        float _1449 = _1446 * (_1407.z + (-0.5));
        float _1456 = exp2((_1414.w + (-0.5)) * 20.0) * 2.0;
        float _1457 = _1456 * (_1414.x + (-0.5));
        float _1458 = _1456 * (_1414.y + (-0.5));
        float _1459 = _1456 * (_1414.z + (-0.5));
        float _1460 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1461 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1462 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1463 = _1427 * 0.5;
        float _1464 = _1437 * 0.5;
        float _1465 = _1447 * 0.5;
        float _1466 = dot(vec3(_1463, _1464, _1465), vec3(_1463, _1464, _1465));
        float _1471 = (_1466 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1466);
        float _1479 = (dot(vec3(_779, _780, _781), vec3(_1471 * _1463, _1471 * _1464, _1471 * _1465)) + 1.0) * 0.5;
        float _3602 = isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0));
        float _1488 = sqrt(((_1464 * _1464) + (_1463 * _1463)) + (_1465 * _1465)) / (_1460 + 9.9999997473787516355514526367188e-06);
        float _3613 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
        float _1489 = isnan(1.0) ? _3613 : (isnan(_3613) ? 1.0 : min(_3613, 1.0));
        float _1490 = _1489 * 2.0;
        float _1494 = (1.0 - _1489) / (_1489 + 1.0);
        float _3624 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
        float _1495 = isnan(1.0) ? _3624 : (isnan(_3624) ? 1.0 : min(_3624, 1.0));
        float _1504 = ((((1.0 - _1495) * (_1490 + 2.0)) * exp2(log2(isnan(1.0) ? _3602 : (isnan(_3602) ? 1.0 : min(_3602, 1.0))) * (_1490 + 1.0))) + _1495) * _1460;
        float _1505 = _1428 * 0.5;
        float _1506 = _1438 * 0.5;
        float _1507 = _1448 * 0.5;
        float _1508 = dot(vec3(_1505, _1506, _1507), vec3(_1505, _1506, _1507));
        float _1513 = (_1508 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1508);
        float _1521 = (dot(vec3(_779, _780, _781), vec3(_1513 * _1505, _1513 * _1506, _1513 * _1507)) + 1.0) * 0.5;
        float _3635 = isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0));
        float _1530 = sqrt(((_1506 * _1506) + (_1505 * _1505)) + (_1507 * _1507)) / (_1461 + 9.9999997473787516355514526367188e-06);
        float _3646 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
        float _1531 = isnan(1.0) ? _3646 : (isnan(_3646) ? 1.0 : min(_3646, 1.0));
        float _1532 = _1531 * 2.0;
        float _1536 = (1.0 - _1531) / (_1531 + 1.0);
        float _3657 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
        float _1537 = isnan(1.0) ? _3657 : (isnan(_3657) ? 1.0 : min(_3657, 1.0));
        float _1546 = ((((1.0 - _1537) * (_1532 + 2.0)) * exp2(log2(isnan(1.0) ? _3635 : (isnan(_3635) ? 1.0 : min(_3635, 1.0))) * (_1532 + 1.0))) + _1537) * _1461;
        float _1547 = _1429 * 0.5;
        float _1548 = _1439 * 0.5;
        float _1549 = _1449 * 0.5;
        float _1550 = dot(vec3(_1547, _1548, _1549), vec3(_1547, _1548, _1549));
        float _1555 = (_1550 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1550);
        float _1563 = (dot(vec3(_779, _780, _781), vec3(_1555 * _1547, _1555 * _1548, _1555 * _1549)) + 1.0) * 0.5;
        float _3668 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
        float _1572 = sqrt(((_1548 * _1548) + (_1547 * _1547)) + (_1549 * _1549)) / (_1462 + 9.9999997473787516355514526367188e-06);
        float _3679 = isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0));
        float _1573 = isnan(1.0) ? _3679 : (isnan(_3679) ? 1.0 : min(_3679, 1.0));
        float _1574 = _1573 * 2.0;
        float _1578 = (1.0 - _1573) / (_1573 + 1.0);
        float _3690 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
        float _1579 = isnan(1.0) ? _3690 : (isnan(_3690) ? 1.0 : min(_3690, 1.0));
        float _1588 = ((((1.0 - _1579) * (_1574 + 2.0)) * exp2(log2(isnan(1.0) ? _3668 : (isnan(_3668) ? 1.0 : min(_3668, 1.0))) * (_1574 + 1.0))) + _1579) * _1462;
        _1596 = _1429;
        _1597 = _1428;
        _1598 = _1427;
        _1599 = _1439;
        _1600 = _1438;
        _1601 = _1437;
        _1602 = _1449;
        _1603 = _1448;
        _1604 = _1447;
        _1605 = _1462;
        _1606 = _1461;
        _1607 = _1460;
        _1608 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0)));
        _1609 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0)));
        _1610 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0)));
    }
    else
    {
        _1596 = _1284;
        _1597 = _1284;
        _1598 = _1284;
        _1599 = _1284;
        _1600 = _1284;
        _1601 = _1284;
        _1602 = _1284;
        _1603 = _1284;
        _1604 = _1284;
        _1605 = _1284;
        _1606 = _1284;
        _1607 = _1284;
        _1608 = 0.0;
        _1609 = 0.0;
        _1610 = 0.0;
    }
    float _1620 = (cbModelParam._m0[1u].x * (_1608 - _1296)) + _1296;
    float _1621 = (cbModelParam._m0[1u].x * (_1609 - _1297)) + _1297;
    float _1622 = (cbModelParam._m0[1u].x * (_1610 - _1298)) + _1298;
    float _1643 = fma(_1622, cbSceneParam._m0[89u].z, fma(_1621, cbSceneParam._m0[89u].y, _1620 * cbSceneParam._m0[89u].x));
    float _1646 = fma(_1622, cbSceneParam._m0[90u].z, fma(_1621, cbSceneParam._m0[90u].y, _1620 * cbSceneParam._m0[90u].x));
    float _1649 = fma(_1622, cbSceneParam._m0[91u].z, fma(_1621, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1620));
    float _1664 = _887 * 0.5;
    float _1665 = _888 * 0.5;
    float _1666 = _889 * 0.5;
    float _1667 = dot(vec4(_1664, _1665, _1666, 1.0), vec4(_1598, _1601, _1604, _1607));
    float _1670 = dot(vec4(_1664, _1665, _1666, 1.0), vec4(_1597, _1600, _1603, _1606));
    float _1673 = dot(vec4(_1664, _1665, _1666, 1.0), vec4(_1596, _1599, _1602, _1605));
    float _1707;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1680 = dot(vec4(_1664, _1665, _1666, 1.0), vec4(_1283, _1287, _1290, _1293));
        float _1684 = dot(vec4(_1664, _1665, _1666, 1.0), vec4(_1285, _1288, _1291, _1294));
        float _1688 = dot(vec4(_1664, _1665, _1666, 1.0), vec4(_1286, _1289, _1292, _1295));
        float _1695 = dot(vec4(cbModelParam._m0[39u]), vec4(_1664, _1665, _1666, 1.0));
        _1707 = dot(vec3(isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0)), isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0)), isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1695) ? 0.0 : (isnan(0.0) ? _1695 : max(0.0, _1695))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1707 = 1.0;
    }
    float _1718;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1709 = dot(vec4(cbModelParam._m0[40u]), vec4(_1664, _1665, _1666, 1.0));
        _1718 = dot(vec3(isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0)), isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0)), isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1709) ? 0.0 : (isnan(0.0) ? _1709 : max(0.0, _1709))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1718 = 1.0;
    }
    float _1722 = (_1718 * cbModelParam._m0[1u].x) + (_1707 * (1.0 - cbModelParam._m0[1u].x));
    float _1732 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _783);
    float _1733 = isnan(_1732) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1732 : min(cbModelParam._m0[25u].z, _1732));
    float _1813;
    float _1815;
    float _1817;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1780 = fma(_952, cbModelParam._m0[13u].z, fma(_948, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _944)) + cbModelParam._m0[13u].w;
        float _1784 = fma(_952, cbModelParam._m0[14u].z, fma(_948, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _944)) + cbModelParam._m0[14u].w;
        float _1788 = fma(_952, cbModelParam._m0[15u].z, fma(_948, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _944)) + cbModelParam._m0[15u].w;
        float _1791 = fma(_889, cbModelParam._m0[13u].z, fma(_888, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _887));
        float _1794 = fma(_889, cbModelParam._m0[14u].z, fma(_888, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _887));
        float _1797 = fma(_889, cbModelParam._m0[15u].z, fma(_888, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _887));
        float _1825;
        if (_1791 > 0.0)
        {
            _1825 = abs((1.0 - _1780) / _1791);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1791 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1780 + 1.0) / _1791);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1825 = frontier_phi_19_17_ladder;
        }
        float _1996;
        if (_1794 > 0.0)
        {
            _1996 = abs((1.0 - _1784) / _1794);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1794 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1784 + 1.0) / _1794);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1996 = frontier_phi_28_24_ladder;
        }
        float _2231;
        if (_1797 > 0.0)
        {
            _2231 = abs((1.0 - _1788) / _1797);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1797 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1788 + 1.0) / _1797);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2231 = frontier_phi_39_35_ladder;
        }
        float _2233 = isnan(_1996) ? _1825 : (isnan(_1825) ? _1996 : min(_1825, _1996));
        float _2234 = isnan(_2231) ? _2233 : (isnan(_2233) ? _2231 : min(_2233, _2231));
        float _2238 = (_2234 * _1791) + _1780;
        float _2239 = (_2234 * _1794) + _1784;
        float _2240 = (_2234 * _1797) + _1788;
        float _2241 = _2234 * 9.9999997473787516355514526367188e-05;
        float _2243 = (-1.0) - _2241;
        float _2245 = _2241 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2240 > _2245) || ((_2240 < _2243) || ((_2239 > _2245) || ((_2239 < _2243) || ((_2238 < _2243) || (_2238 > _2245))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2390 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2240, cbModelParam._m0[9u].z, fma(_2239, cbModelParam._m0[9u].y, _2238 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2240, cbModelParam._m0[10u].z, fma(_2239, cbModelParam._m0[10u].y, _2238 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2240, cbModelParam._m0[11u].z, fma(_2239, cbModelParam._m0[11u].y, _2238 * cbModelParam._m0[11u].x))), _1733);
            frontier_phi_18_39_ladder = _2390.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2390.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2390.x * cbModelParam._m0[1u].y;
        }
        _1813 = frontier_phi_18_39_ladder_2;
        _1815 = frontier_phi_18_39_ladder_1;
        _1817 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1801 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_887, _888, _889), _1733);
        _1813 = _1801.x * cbModelParam._m0[1u].y;
        _1815 = _1801.y * cbModelParam._m0[1u].y;
        _1817 = _1801.z * cbModelParam._m0[1u].y;
    }
    float _1821 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _783);
    float _1822 = isnan(_1821) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1821 : min(cbModelParam._m0[25u].w, _1821));
    float _1913;
    float _1915;
    float _1917;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1877 = fma(_952, cbModelParam._m0[21u].z, fma(_948, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _944)) + cbModelParam._m0[21u].w;
        float _1881 = fma(_952, cbModelParam._m0[22u].z, fma(_948, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _944)) + cbModelParam._m0[22u].w;
        float _1885 = fma(_952, cbModelParam._m0[23u].z, fma(_948, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _944)) + cbModelParam._m0[23u].w;
        float _1888 = fma(_889, cbModelParam._m0[21u].z, fma(_888, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _887));
        float _1891 = fma(_889, cbModelParam._m0[22u].z, fma(_888, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _887));
        float _1894 = fma(_889, cbModelParam._m0[23u].z, fma(_888, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _887));
        float _2001;
        if (_1888 > 0.0)
        {
            _2001 = abs((1.0 - _1877) / _1888);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1888 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1877 + 1.0) / _1888);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2001 = frontier_phi_30_26_ladder;
        }
        float _2258;
        if (_1891 > 0.0)
        {
            _2258 = abs((1.0 - _1881) / _1891);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1891 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1881 + 1.0) / _1891);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2258 = frontier_phi_41_37_ladder;
        }
        float _2562;
        if (_1894 > 0.0)
        {
            _2562 = abs((1.0 - _1885) / _1894);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1894 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1885 + 1.0) / _1894);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2562 = frontier_phi_52_47_ladder;
        }
        float _2564 = isnan(_2258) ? _2001 : (isnan(_2001) ? _2258 : min(_2001, _2258));
        float _2565 = isnan(_2562) ? _2564 : (isnan(_2564) ? _2562 : min(_2564, _2562));
        float _2569 = (_2565 * _1888) + _1877;
        float _2570 = (_2565 * _1891) + _1881;
        float _2571 = (_2565 * _1894) + _1885;
        float _2572 = _2565 * 9.9999997473787516355514526367188e-05;
        float _2573 = (-1.0) - _2572;
        float _2575 = _2572 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2571 > _2575) || ((_2571 < _2573) || ((_2570 > _2575) || ((_2570 < _2573) || ((_2569 < _2573) || (_2569 > _2575))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2752 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2571, cbModelParam._m0[17u].z, fma(_2570, cbModelParam._m0[17u].y, _2569 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2571, cbModelParam._m0[18u].z, fma(_2570, cbModelParam._m0[18u].y, _2569 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2571, cbModelParam._m0[19u].z, fma(_2570, cbModelParam._m0[19u].y, _2569 * cbModelParam._m0[19u].x))), _1822);
            frontier_phi_27_52_ladder = _2752.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2752.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2752.y * cbModelParam._m0[1u].z;
        }
        _1913 = frontier_phi_27_52_ladder_1;
        _1915 = frontier_phi_27_52_ladder_2;
        _1917 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1897 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_887, _888, _889), _1822);
        _1913 = _1897.x * cbModelParam._m0[1u].z;
        _1915 = _1897.y * cbModelParam._m0[1u].z;
        _1917 = _1897.z * cbModelParam._m0[1u].z;
    }
    float _1929 = ((((1.0 - _912) * ((_900 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_912 * _900)) * _879;
    float _1930 = _1929 * ((cbModelParam._m0[1u].w * (_1913 - _1813)) + _1813);
    float _1931 = _1929 * ((cbModelParam._m0[1u].w * (_1915 - _1815)) + _1815);
    float _1932 = _1929 * ((cbModelParam._m0[1u].w * (_1917 - _1817)) + _1817);
    float _1935 = fma(_1932, cbSceneParam._m0[89u].z, fma(_1931, cbSceneParam._m0[89u].y, _1930 * cbSceneParam._m0[89u].x));
    float _1938 = fma(_1932, cbSceneParam._m0[90u].z, fma(_1931, cbSceneParam._m0[90u].y, _1930 * cbSceneParam._m0[90u].x));
    float _1941 = fma(_1932, cbSceneParam._m0[91u].z, fma(_1931, cbSceneParam._m0[91u].y, _1930 * cbSceneParam._m0[91u].x));
    uvec4 _1951 = floatBitsToUint(cbInstanceData._m0[_309 + 5u]);
    uint _1953 = _1951.x * 14u;
    uint _1954 = _1953 + 13u;
    float _1959 = _879 + (-1.0);
    float _1962 = (cbLight._m0[_1954].x * _1959) + 1.0;
    float _1963 = (cbLight._m0[_1954].y * _1959) + 1.0;
    uint _1965 = _1953 + 4u;
    float _1976 = dot(vec3(cbLight._m0[_1953].xyz), vec3(_779, _780, _781));
    float _1979 = isnan(1.0) ? _1962 : (isnan(_1962) ? 1.0 : min(_1962, 1.0));
    uint _1980 = _1953 + 5u;
    uint _1986 = _1953 | 1u;
    float _1992 = dot(vec3(cbLight._m0[_1986].xyz), vec3(_779, _780, _781));
    float _1995 = isnan(1.0) ? _1963 : (isnan(_1963) ? 1.0 : min(_1963, 1.0));
    float _2060;
    float _2061;
    float _2062;
    if (_784 == 0.0)
    {
        float _3826 = isnan(0.0) ? _1976 : (isnan(_1976) ? 0.0 : max(_1976, 0.0));
        float _3837 = isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0));
        float _2014 = (isnan(1.0) ? _3826 : (isnan(_3826) ? 1.0 : min(_3826, 1.0))) * 0.3183098733425140380859375;
        float _2016 = (isnan(1.0) ? _3837 : (isnan(_3837) ? 1.0 : min(_3837, 1.0))) * 0.3183098733425140380859375;
        _2060 = ((cbLight._m0[_1980].x * _1995) * _2016) + ((cbLight._m0[_1965].x * _1979) * _2014);
        _2061 = ((_1995 * cbLight._m0[_1980].y) * _2016) + ((_1979 * cbLight._m0[_1965].y) * _2014);
        _2062 = ((_1995 * cbLight._m0[_1980].z) * _2016) + ((_1979 * cbLight._m0[_1965].z) * _2014);
    }
    else
    {
        float _2026 = _1976 + _784;
        float _2029 = (_784 * 2.0) + 1.0;
        float _2030 = (isnan(0.0) ? _2026 : (isnan(_2026) ? 0.0 : max(_2026, 0.0))) / _2029;
        float _2037 = _1992 + _784;
        float _2039 = (isnan(0.0) ? _2037 : (isnan(_2037) ? 0.0 : max(_2037, 0.0))) / _2029;
        _2060 = (((_2039 * cbLight._m0[_1980].x) * _1995) + ((_2030 * cbLight._m0[_1965].x) * _1979)) * 0.3183098733425140380859375;
        _2061 = (((_2039 * cbLight._m0[_1980].y) * _1995) + ((_2030 * cbLight._m0[_1965].y) * _1979)) * 0.3183098733425140380859375;
        _2062 = (((_2039 * cbLight._m0[_1980].z) * _1995) + ((_2030 * cbLight._m0[_1965].z) * _1979)) * 0.3183098733425140380859375;
    }
    uint _2066 = _1953 + 8u;
    float _2082 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1953].w)) * _783) * 0.949999988079071044921875);
    float _2083 = _2082 * _2082;
    float _2084 = cbLight._m0[_1953].x + _538;
    float _2085 = cbLight._m0[_1953].y + _539;
    float _2086 = cbLight._m0[_1953].z + _540;
    float _2090 = inversesqrt(dot(vec3(_2084, _2085, _2086), vec3(_2084, _2085, _2086)));
    float _2091 = _2090 * _2084;
    float _2092 = _2090 * _2085;
    float _2093 = _2090 * _2086;
    float _2094 = dot(vec3(_779, _780, _781), vec3(cbLight._m0[_1953].xyz));
    float _3858 = isnan(0.0) ? _2094 : (isnan(_2094) ? 0.0 : max(_2094, 0.0));
    float _2097 = isnan(1.0) ? _3858 : (isnan(_3858) ? 1.0 : min(_3858, 1.0));
    float _3869 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _2098 = isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0));
    float _2099 = dot(vec3(_779, _780, _781), vec3(_2091, _2092, _2093));
    float _3880 = isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0));
    float _2102 = isnan(1.0) ? _3880 : (isnan(_3880) ? 1.0 : min(_3880, 1.0));
    float _2103 = dot(vec3(cbLight._m0[_1953].xyz), vec3(_2091, _2092, _2093));
    float _3891 = isnan(0.0) ? _2103 : (isnan(_2103) ? 0.0 : max(_2103, 0.0));
    float _2107 = _2083 * _2083;
    float _2111 = ((_2102 * _2102) * (_2107 + (-1.0))) + 1.0;
    float _2122 = (exp2(log2(1.0 - (isnan(1.0) ? _3891 : (isnan(_3891) ? 1.0 : min(_3891, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2123 = 1.0 - _2083;
    float _2134 = (0.5 / (((_2098 * ((_2097 * _2123) + _2083)) + 9.9999999392252902907785028219223e-09) + (((_2098 * _2123) + _2083) * _2097))) * _2097;
    float _3902 = isnan(0.0) ? _2134 : (isnan(_2134) ? 0.0 : max(_2134, 0.0));
    float _2136 = (isnan(1.0) ? _3902 : (isnan(_3902) ? 1.0 : min(_3902, 1.0))) * (_2107 / ((_2111 * _2111) * 3.141590118408203125));
    uint _2149 = _1953 + 9u;
    float _2163 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1986].w)) * _783) * 0.949999988079071044921875);
    float _2164 = _2163 * _2163;
    float _2165 = cbLight._m0[_1986].x + _538;
    float _2166 = cbLight._m0[_1986].y + _539;
    float _2167 = cbLight._m0[_1986].z + _540;
    float _2171 = inversesqrt(dot(vec3(_2165, _2166, _2167), vec3(_2165, _2166, _2167)));
    float _2172 = _2171 * _2165;
    float _2173 = _2171 * _2166;
    float _2174 = _2171 * _2167;
    float _2175 = dot(vec3(_779, _780, _781), vec3(cbLight._m0[_1986].xyz));
    float _3913 = isnan(0.0) ? _2175 : (isnan(_2175) ? 0.0 : max(_2175, 0.0));
    float _2178 = isnan(1.0) ? _3913 : (isnan(_3913) ? 1.0 : min(_3913, 1.0));
    float _2179 = dot(vec3(_779, _780, _781), vec3(_2172, _2173, _2174));
    float _3924 = isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0));
    float _2182 = isnan(1.0) ? _3924 : (isnan(_3924) ? 1.0 : min(_3924, 1.0));
    float _2183 = dot(vec3(cbLight._m0[_1986].xyz), vec3(_2172, _2173, _2174));
    float _3935 = isnan(0.0) ? _2183 : (isnan(_2183) ? 0.0 : max(_2183, 0.0));
    float _2187 = _2164 * _2164;
    float _2191 = ((_2182 * _2182) * (_2187 + (-1.0))) + 1.0;
    float _2200 = (exp2(log2(1.0 - (isnan(1.0) ? _3935 : (isnan(_3935) ? 1.0 : min(_3935, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2201 = 1.0 - _2164;
    float _2211 = (0.5 / (((_2098 * ((_2178 * _2201) + _2164)) + 9.9999999392252902907785028219223e-09) + (((_2098 * _2201) + _2164) * _2178))) * _2178;
    float _3946 = isnan(0.0) ? _2211 : (isnan(_2211) ? 0.0 : max(_2211, 0.0));
    float _2213 = (isnan(1.0) ? _3946 : (isnan(_3946) ? 1.0 : min(_3946, 1.0))) * (_2187 / ((_2191 * _2191) * 3.141590118408203125));
    float _2223 = (((_2200 * cbLight._m0[_2149].x) * _2213) * _1995) + (((_2122 * cbLight._m0[_2066].x) * _2136) * _1979);
    float _2224 = (((_2200 * cbLight._m0[_2149].y) * _2213) * _1995) + (((_2122 * cbLight._m0[_2066].y) * _2136) * _1979);
    float _2225 = (((_2200 * cbLight._m0[_2149].z) * _2213) * _1995) + (((_2122 * cbLight._m0[_2066].z) * _2136) * _1979);
    float _2361;
    float _2363;
    float _2365;
    float _2367;
    float _2369;
    float _2371;
    if (_1951.y == 0u)
    {
        float _2302 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2303 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2302;
        float _2304 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2302;
        float _2305 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2302;
        uvec4 _2317 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2318 = _2317.x;
        uint _2329 = uint((float(_2317.y) * floor(float(uint(cbSceneParam._m0[85u].y * _819) / _2318))) + floor(float(uint(cbSceneParam._m0[85u].x * _818) / _2318)));
        float _2339 = (log2(_2305 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2340 = isnan(0.0) ? _2339 : (isnan(_2339) ? 0.0 : max(_2339, 0.0));
        uint _2343 = uint(isnan(14.0) ? _2340 : (isnan(_2340) ? 14.0 : min(_2340, 14.0)));
        uint _2350 = _2317.z;
        float _2399;
        float _2401;
        float _2403;
        float _2405;
        float _2407;
        float _2409;
        if (((((1u << ((_2350 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2343 << 2u) + (_2329 << 6u)) >> 2u)).x) == 0u) || ((_2350 & 240u) == 0u))
        {
            _2399 = 0.0;
            _2401 = 0.0;
            _2403 = 0.0;
            _2405 = 0.0;
            _2407 = 0.0;
            _2409 = 0.0;
        }
        else
        {
            float _2400;
            float _2402;
            float _2404;
            float _2406;
            float _2408;
            float _2410;
            float _2588 = 0.0;
            float _2589 = 0.0;
            float _2590 = 0.0;
            float _2591 = 0.0;
            float _2592 = 0.0;
            float _2593 = 0.0;
            uint _2594 = 0u;
            uint _2603;
            bool _2604;
            for (;;)
            {
                _2603 = texelFetch(g_lightClassification, int((((_2343 << 5u) + (_2329 << 9u)) + (_2594 << 2u)) >> 2u)).x;
                _2604 = _2603 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2604)
                {
                    frontier_phi_58_pred = _2588;
                    frontier_phi_58_pred_1 = _2593;
                    frontier_phi_58_pred_2 = _2592;
                    frontier_phi_58_pred_3 = _2591;
                    frontier_phi_58_pred_4 = _2590;
                    frontier_phi_58_pred_5 = _2589;
                }
                else
                {
                    float _2825;
                    float _2826;
                    float _2827;
                    float _2828;
                    float _2829;
                    float _2830;
                    uint _2831;
                    _2825 = _2588;
                    _2826 = _2589;
                    _2827 = _2590;
                    _2828 = _2591;
                    _2829 = _2592;
                    _2830 = _2593;
                    _2831 = _2603;
                    float _2757;
                    float _2758;
                    float _2759;
                    float _2760;
                    float _2761;
                    float _2762;
                    for (;;)
                    {
                        uint _2835 = uint(findLSB(_2831)) + (_2594 << 5u);
                        uint _2832 = (_2831 + 4294967295u) & _2831;
                        uint _2837 = _2835 * 48u;
                        vec4 _2851 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2837)).x, texelFetch(g_PointLightRenderingBuffer, int(_2837 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2837 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2837 + 3u)).x));
                        uint _2857 = (_2835 * 48u) + 4u;
                        vec4 _2870 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2857)).x, texelFetch(g_PointLightRenderingBuffer, int(_2857 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2857 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2857 + 3u)).x));
                        float _2871 = _2870.x;
                        float _2872 = _2870.y;
                        float _2873 = _2870.z;
                        uint _2876 = (_2835 * 48u) + 8u;
                        vec3 _2887 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2876)).x, texelFetch(g_PointLightRenderingBuffer, int(_2876 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2876 + 2u)).x));
                        uint _2892 = (_2835 * 48u) + 12u;
                        vec2 _2900 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2892)).x, texelFetch(g_PointLightRenderingBuffer, int(_2892 + 1u)).x));
                        float _2906 = inversesqrt(dot(vec3(_2303, _2304, _2305), vec3(_2303, _2304, _2305)));
                        float _2907 = _2906 * _2303;
                        float _2908 = _2906 * _2304;
                        float _2909 = _2906 * _2305;
                        float _2910 = _2851.x - _2303;
                        float _2911 = _2851.y - _2304;
                        float _2912 = _2851.z - _2305;
                        float _2913 = dot(vec3(_2910, _2911, _2912), vec3(_2910, _2911, _2912));
                        float _2916 = inversesqrt(_2913);
                        float _2917 = _2916 * _2910;
                        float _2918 = _2916 * _2911;
                        float _2919 = _2916 * _2912;
                        float _2920 = dot(vec3(_837, _840, _843), vec3(_2917, _2918, _2919));
                        float _2925 = 1.0 - (_2913 * _2851.w);
                        float _3967 = isnan(0.0) ? _2925 : (isnan(_2925) ? 0.0 : max(_2925, 0.0));
                        float _2926 = isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0));
                        float _2927 = sqrt(_2913) * _2870.w;
                        float _2930 = 1.39999997615814208984375 / (_2927 + 1.39999997615814208984375);
                        float _2931 = _2930 * _2930;
                        float _2932 = 1.0 - _2931;
                        float _2934 = (_2932 * _2932) * _784;
                        float _2937 = ((_2932 * _2920) + _2931) + _2934;
                        float _2942 = _2927 * _2927;
                        float _2947 = ((isnan(0.0) ? _2937 : (isnan(_2937) ? 0.0 : max(_2937, 0.0))) * _2926) / (((_2934 * 2.0) + 1.0) * ((_2942 * 0.699999988079071044921875) + 1.0));
                        float _2951 = dot(vec3(_2917, _2918, _2919), vec3(_2907, _2908, _2909));
                        float _3983 = isnan(0.0) ? _2951 : (isnan(_2951) ? 0.0 : max(_2951, 0.0));
                        float _2958 = dot(vec3((-0.0) - _2907, (-0.0) - _2908, (-0.0) - _2909), vec3(_837, _840, _843)) + 1.0;
                        float _2960 = (isnan(0.0) ? _2958 : (isnan(_2958) ? 0.0 : max(_2958, 0.0))) * 0.5;
                        float _2967 = ((_2960 * _2960) * _2900.x) * exp2((_2900.y * 32.0) * log2(isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0))));
                        float _2969 = _784 / (_784 + 1.0);
                        float _2985 = (-0.0) - _2303;
                        float _2986 = (-0.0) - _2304;
                        float _2987 = (-0.0) - _2305;
                        float _2991 = inversesqrt(dot(vec3(_2985, _2986, _2987), vec3(_2985, _2986, _2987)));
                        float _2992 = _2991 * _2985;
                        float _2993 = _2991 * _2986;
                        float _2994 = _2991 * _2987;
                        float _3002 = exp2(log2(1.0 / ((_2942 * 3.5) + 5.0)) * 0.25);
                        float _3003 = 1.0 - _900;
                        float _3010 = sqrt(1.0 - ((1.0 - (_3003 * _3003)) * (1.0 - (_3002 * _3002))));
                        float _3011 = _3010 * _3010;
                        float _3012 = _3011 * _3011;
                        float _3013 = _2992 + _2917;
                        float _3014 = _2993 + _2918;
                        float _3015 = _2994 + _2919;
                        float _3019 = inversesqrt(dot(vec3(_3013, _3014, _3015), vec3(_3013, _3014, _3015)));
                        float _3023 = dot(vec3(_837, _840, _843), vec3(_2992, _2993, _2994));
                        float _3999 = isnan(0.0) ? _3023 : (isnan(_3023) ? 0.0 : max(_3023, 0.0));
                        float _3026 = isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0));
                        float _3027 = dot(vec3(_837, _840, _843), vec3(_3019 * _3013, _3019 * _3014, _3019 * _3015));
                        float _4010 = isnan(0.0) ? _3027 : (isnan(_3027) ? 0.0 : max(_3027, 0.0));
                        float _3030 = isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0));
                        float _3034 = ((_3030 * _3030) * (_3012 + (-1.0))) + 1.0;
                        float _3035 = _2930 * _3011;
                        float _3036 = _3035 * _3035;
                        float _3039 = ((1.0 - _3036) * _2920) + _3036;
                        float _4021 = isnan(0.0) ? _3039 : (isnan(_3039) ? 0.0 : max(_3039, 0.0));
                        float _3040 = isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0));
                        float _3041 = 1.0 - _3011;
                        float _3051 = (0.5 / (((_3040 * ((_3026 * _3041) + _3011)) + 9.9999999392252902907785028219223e-09) + (((_3040 * _3041) + _3011) * _3026))) * _3040;
                        float _4032 = isnan(0.0) ? _3051 : (isnan(_3051) ? 0.0 : max(_3051, 0.0));
                        float _3062 = (((_3012 * 3.1415927410125732421875) * (isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0)))) / ((_3034 * _3034) * ((_2942 * 2.1991131305694580078125) + 3.141590118408203125))) * _2926;
                        _2760 = (((((_2871 * 0.3183098733425140380859375) * _2969) * _2967) + _2871) * _2947) + _2828;
                        _2761 = (((((_2872 * 0.3183098733425140380859375) * _2969) * _2967) + _2872) * _2947) + _2829;
                        _2762 = (((((_2873 * 0.3183098733425140380859375) * _2969) * _2967) + _2873) * _2947) + _2830;
                        _2757 = (_3062 * _2887.x) + _2825;
                        _2758 = (_3062 * _2887.y) + _2826;
                        _2759 = (_3062 * _2887.z) + _2827;
                        if (_2832 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2825 = _2757;
                            _2826 = _2758;
                            _2827 = _2759;
                            _2828 = _2760;
                            _2829 = _2761;
                            _2830 = _2762;
                            _2831 = _2832;
                        }
                    }
                    frontier_phi_58_pred = _2757;
                    frontier_phi_58_pred_1 = _2762;
                    frontier_phi_58_pred_2 = _2761;
                    frontier_phi_58_pred_3 = _2760;
                    frontier_phi_58_pred_4 = _2759;
                    frontier_phi_58_pred_5 = _2758;
                }
                _2400 = frontier_phi_58_pred;
                _2410 = frontier_phi_58_pred_1;
                _2408 = frontier_phi_58_pred_2;
                _2406 = frontier_phi_58_pred_3;
                _2404 = frontier_phi_58_pred_4;
                _2402 = frontier_phi_58_pred_5;
                uint _2595 = _2594 + 1u;
                if (_2595 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2588 = _2400;
                    _2589 = _2402;
                    _2590 = _2404;
                    _2591 = _2406;
                    _2592 = _2408;
                    _2593 = _2410;
                    _2594 = _2595;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2399 = _2400;
            _2401 = _2402;
            _2403 = _2404;
            _2405 = _2406;
            _2407 = _2408;
            _2409 = _2410;
        }
        float _2414 = isnan(1.0) ? _879 : (isnan(_879) ? 1.0 : min(_879, 1.0));
        _2361 = (_2414 * _2405) + _2060;
        _2363 = (_2414 * _2407) + _2061;
        _2365 = (_2414 * _2409) + _2062;
        _2367 = ((_2399 * 0.039999999105930328369140625) * _2414) + _2223;
        _2369 = ((_2401 * 0.039999999105930328369140625) * _2414) + _2224;
        _2371 = ((_2403 * 0.039999999105930328369140625) * _2414) + _2225;
    }
    else
    {
        _2361 = _2060;
        _2363 = _2061;
        _2365 = _2062;
        _2367 = _2223;
        _2369 = _2224;
        _2371 = _2225;
    }
    float _2485;
    float _2486;
    float _2487;
    if (_784 > 0.0)
    {
        uint _2421 = _1953 + 4u;
        float _2427 = (-0.0) - _538;
        float _2428 = (-0.0) - _539;
        float _2429 = (-0.0) - _540;
        float _2430 = dot(vec3(cbLight._m0[_1953].xyz), vec3(_2427, _2428, _2429));
        float _4048 = isnan(0.0) ? _2430 : (isnan(_2430) ? 0.0 : max(_2430, 0.0));
        float _2434 = _890 + 1.0;
        float _2436 = (isnan(0.0) ? _2434 : (isnan(_2434) ? 0.0 : max(_2434, 0.0))) * 0.5;
        float _2441 = _2436 * _2436;
        float _2442 = _2441 * exp2(log2(isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0))) * 32.0);
        float _2444 = _784 / (_784 + 1.0);
        float _2445 = isnan(_1962) ? 1.0 : (isnan(1.0) ? _1962 : min(1.0, _1962));
        uint _2455 = _1953 + 5u;
        float _2461 = dot(vec3(cbLight._m0[_1986].xyz), vec3(_2427, _2428, _2429));
        float _4069 = isnan(0.0) ? _2461 : (isnan(_2461) ? 0.0 : max(_2461, 0.0));
        float _2468 = _2441 * exp2(log2(isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0))) * 32.0);
        float _2469 = isnan(_1963) ? 1.0 : (isnan(1.0) ? _1963 : min(1.0, _1963));
        _2485 = ((((_2468 * cbLight._m0[_2455].x) * _2444) * _2469) + (((_2442 * cbLight._m0[_2421].x) * _2444) * _2445)) * 0.3183098733425140380859375;
        _2486 = ((((_2468 * cbLight._m0[_2455].y) * _2444) * _2469) + (((_2442 * cbLight._m0[_2421].y) * _2444) * _2445)) * 0.3183098733425140380859375;
        _2487 = ((((_2468 * cbLight._m0[_2455].z) * _2444) * _2469) + (((_2442 * cbLight._m0[_2421].z) * _2444) * _2445)) * 0.3183098733425140380859375;
    }
    else
    {
        _2485 = 0.0;
        _2486 = 0.0;
        _2487 = 0.0;
    }
    float _4085 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
    float _4096 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    float _4107 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    float _4118 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
    float _2502 = (isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0))) * ((_2361 + ((isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0))) * _879)) + _2485);
    float _2503 = (isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0))) * ((_2363 + ((isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0))) * _879)) + _2486);
    float _2504 = (isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0))) * ((_2365 + ((isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0))) * _879)) + _2487);
    float _2508 = 0.959999978542327880859375 - (exp2(log2(1.0 - _894) * 5.0) * 0.959999978542327880859375);
    float _2519 = (_2502 + ((_2367 + ((isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0))) * _1722)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _718.x) * _2508) - _2502) * _764);
    float _2521 = (_2503 + ((_2369 + ((isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0))) * _1722)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _718.y) * _2508) - _2503) * _764);
    float _2523 = (_2504 + ((_2371 + ((isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0))) * _1722)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _718.z) * _2508) - _2504) * _764);
    float _2528 = cbInstanceData._m0[_309 + 6u].w * (isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0)));
    float _2533 = _818 / cbSceneParam._m0[86u].x;
    float _2534 = _819 / cbSceneParam._m0[86u].y;
    vec4 _2548 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2533, _2534, (log2((isnan(cbSceneParam._m0[77u].w) ? _801 : (isnan(_801) ? cbSceneParam._m0[77u].w : min(_801, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2550 = _2548.x;
    float _2551 = _2548.y;
    float _2552 = _2548.z;
    float _2553 = _2548.w;
    float _2646;
    float _2648;
    float _2650;
    float _2652;
    if (_801 > cbSceneParam._m0[78u].w)
    {
        float _2609 = isnan(_801) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _801 : min(cbSceneParam._m0[80u].w, _801));
        float _2610 = _2609 / _801;
        float _2621 = _2610 * _301;
        float _2622 = _302 * _2610;
        float _2623 = (-0.0) - _2622;
        float _2624 = _2610 * _303;
        float _2626 = (cbSceneParam._m0[77u].w * _2623) / _2609;
        float _2627 = _2626 + cbSceneParam._m0[79u].w;
        float _2628 = cbSceneParam._m0[79u].w - _2622;
        float _2634 = sqrt(((_2621 * _2621) + (_2622 * _2622)) + (_2624 * _2624));
        float _2637 = (1.0 - (cbSceneParam._m0[77u].w / _2609)) * _2634;
        float _2642 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2644 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3067;
        if (abs((_2623 - _2626) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3067 = ((((_2627 > 0.0) ? exp2(_2642 * _2627) : (2.0 - exp2(_2644 * _2627))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2637;
        }
        else
        {
            float _2782 = 1.0 / cbSceneParam._m0[80u].x;
            float _2783 = isnan(_2628) ? _2627 : (isnan(_2627) ? _2628 : max(_2627, _2628));
            float _2784 = isnan(_2628) ? _2627 : (isnan(_2627) ? _2628 : min(_2627, _2628));
            float _2793 = isnan(0.0) ? _2783 : (isnan(_2783) ? 0.0 : min(_2783, 0.0));
            float _2794 = isnan(0.0) ? _2784 : (isnan(_2784) ? 0.0 : min(_2784, 0.0));
            _3067 = ((abs(_2634 / _2623) * cbSceneParam._m0[80u].y) * ((((_2793 - _2794) * 2.0) - ((exp2(_2642 * (isnan(0.0) ? _2783 : (isnan(_2783) ? 0.0 : max(_2783, 0.0)))) - exp2(_2642 * (isnan(0.0) ? _2784 : (isnan(_2784) ? 0.0 : max(_2784, 0.0))))) * _2782)) - ((exp2(_2644 * _2793) - exp2(_2644 * _2794)) * _2782))) + (_2637 * cbSceneParam._m0[80u].z);
        }
        vec4 _3069 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2533, _2534, 1.0), 0.0);
        float _3078 = exp2((_3067 * (-1.44269502162933349609375)) * (1.0 - _3069.w));
        float _3079 = log2(_3078);
        float _3095 = log2(_2553);
        _2646 = (exp2(_3095 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3079 * cbSceneParam._m0[78u].x)) * _3069.x) / cbSceneParam._m0[78u].x)) + _2550;
        _2648 = (exp2(_3095 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3079 * cbSceneParam._m0[78u].y)) * _3069.y) / cbSceneParam._m0[78u].y)) + _2551;
        _2650 = (exp2(_3095 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3079 * cbSceneParam._m0[78u].z)) * _3069.z) / cbSceneParam._m0[78u].z)) + _2552;
        _2652 = _3078 * _2553;
    }
    else
    {
        _2646 = _2550;
        _2648 = _2551;
        _2650 = _2552;
        _2652 = _2553;
    }
    bool _3105;
    float _2707;
    vec4 _2710;
    float _2712;
    vec4 _2714;
    float _2722;
    float _2723;
    float _2724;
    float _2725;
    bool _2735;
    for (;;)
    {
        bool _2664 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2665 = log2(_2652);
        float _2672 = exp2(_2665 * cbSceneParam._m0[78u].x) * _2519;
        float _2673 = exp2(_2665 * cbSceneParam._m0[78u].y) * _2521;
        float _2674 = exp2(_2665 * cbSceneParam._m0[78u].z) * _2523;
        vec4 _2682 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_818, _819));
        float _2684 = _2682.x;
        float _2705 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2684)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2684))) - _801) * cbMtdParam._m0[17u].y;
        float _4169 = isnan(0.0) ? _2705 : (isnan(_2705) ? 0.0 : max(_2705, 0.0));
        _2707 = _2528 * (isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0)));
        float _2708 = _808 + (-0.5);
        _2710 = cbMtdParam._m0[1u];
        _2712 = _2710.y * _2708;
        _2714 = cbMatDynParam._m0[0u];
        float _2721 = (roundEven(_2714.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2722 = _2721 * (_2664 ? _2672 : (_2672 + (cbSceneParam._m0[72u].w * _2646)));
        _2723 = _2721 * (_2664 ? _2673 : (_2673 + (cbSceneParam._m0[72u].w * _2648)));
        _2724 = _2721 * (_2664 ? _2674 : (_2674 + (cbSceneParam._m0[72u].w * _2650)));
        _2725 = _2708 * 0.999000012874603271484375;
        _2735 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2735)
        {
            if ((cbInstanceData._m0[_309 + 7u].x + _2725) < 0.5)
            {
                _3105 = true;
                break;
            }
        }
        uint _2817 = _856 + uint(_2714.w);
        if ((cbInstanceData._m0[_2817].w < 1.0) && ((cbInstanceData._m0[_2817].w + _2725) < 0.5))
        {
            _3105 = true;
            break;
        }
        if ((_2712 + _448) < _2710.x)
        {
            _3105 = true;
            break;
        }
        _3105 = false;
        break;
    }
    float _3110;
    if (_3105)
    {
        discard_state = true;
        _3110 = 0.0;
    }
    else
    {
        _3110 = _2707;
    }
    SV_Target.x = _2722;
    SV_Target.y = _2723;
    SV_Target.z = _2724;
    SV_Target.w = _3110;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2707;
    discard_exit();
}


