#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1210;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _208 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _209 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _210 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _216 = inversesqrt(dot(vec3(_208, _209, _210), vec3(_208, _209, _210)));
    float _217 = _216 * _208;
    float _218 = _216 * _209;
    float _219 = _216 * _210;
    float _223 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _224 = _223 * NORMAL.x;
    float _225 = _223 * NORMAL.y;
    float _226 = _223 * NORMAL.z;
    float _230 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _231 = _230 * TANGENT.x;
    float _232 = _230 * TANGENT.y;
    float _233 = _230 * TANGENT.z;
    float _238;
    float _239;
    float _240;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _238 = (-0.0) - _224;
        _239 = (-0.0) - _225;
        _240 = (-0.0) - _226;
    }
    else
    {
        _238 = _224;
        _239 = _225;
        _240 = _226;
    }
    float _287 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _297 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _287);
    float _298 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _287);
    float _299 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _287);
    uint _305 = uint(roundEven(NORMAL.w)) * 13u;
    uint _310 = _305 + 1u;
    uint _314 = _305 + 2u;
    float _323 = sqrt(((cbInstanceData._m0[_310].x * cbInstanceData._m0[_310].x) + (cbInstanceData._m0[_305].x * cbInstanceData._m0[_305].x)) + (cbInstanceData._m0[_314].x * cbInstanceData._m0[_314].x));
    float _324 = _323 * TEXCOORD.z;
    float _325 = _323 * TEXCOORD.w;
    vec4 _345 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _354 = (_345.x * 2.0) + (-1.0);
    float _356 = (_345.y * 2.0) + (-1.0);
    float _357 = dot(vec2(_354, _356), vec2(_354, _356));
    float _3123 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    float _363 = sqrt(1.0 - (isnan(1.0) ? _3123 : (isnan(_3123) ? 1.0 : min(_3123, 1.0))));
    float _366 = fma(_363, _238, fma(_356, _231, _354 * _217));
    float _369 = fma(_363, _239, fma(_356, _232, _354 * _218));
    float _372 = fma(_363, _240, fma(_356, _233, _354 * _219));
    float _376 = inversesqrt(dot(vec3(_366, _369, _372), vec3(_366, _369, _372)));
    float _377 = _376 * _366;
    float _378 = _376 * _369;
    float _407 = (cbMtdParam._m0[17u].w + dot(vec4(_377, _378, _376 * _372, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _324) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _325) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3134 = isnan(0.0) ? _407 : (isnan(_407) ? 0.0 : max(_407, 0.0));
    float _408 = isnan(1.0) ? _3134 : (isnan(_3134) ? 1.0 : min(_3134, 1.0));
    vec4 _420 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _425 = _420.w;
    float _437 = dot(vec3(_297, _298, _299), vec3(_217, _218, _219));
    float _440 = dot(vec3(_297, _298, _299), vec3(_231, _232, _233));
    float _443 = dot(vec3(_297, _298, _299), vec3(_238, _239, _240));
    float _449 = inversesqrt(dot(vec3(_437, _440, _443), vec3(_437, _440, _443)));
    float _471 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _491 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_437 * cbMtdParam._m0[14u].x) * _449) * _471) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_440 * cbMtdParam._m0[14u].x) * _449) * _471) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _514 = inversesqrt(dot(vec3(_297, _298, _299), vec3(_297, _298, _299)));
    float _515 = _514 * _297;
    float _516 = _514 * _298;
    float _517 = _514 * _299;
    float _518 = dot(vec4(_515, _516, _517, 0.0), vec4(_238, _239, _240, 0.0));
    float _521 = _518 - cbMtdParam._m0[15u].z;
    float _3145 = isnan(0.0) ? _521 : (isnan(_521) ? 0.0 : max(_521, 0.0));
    float _528 = exp2(log2(1.0 - (isnan(1.0) ? _3145 : (isnan(_3145) ? 1.0 : min(_3145, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _543 = ((((_420.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _491.x) * cbMtdParam._m0[9u].x) * ((_528 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _548 = ((((_420.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _491.y) * cbMtdParam._m0[9u].y) * ((_528 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _553 = ((((_420.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _491.z) * cbMtdParam._m0[9u].z) * ((_528 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _560 = ((cbMtdParam._m0[11u].x - _543) * _408) + _543;
    float _561 = ((cbMtdParam._m0[11u].y - _548) * _408) + _548;
    float _562 = ((cbMtdParam._m0[11u].z - _553) * _408) + _553;
    vec4 _574 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _324) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _325) + cbTextureTilingScale._m0[9u].w));
    float _581 = (_574.x * 2.0) + (-1.0);
    float _582 = (_574.y * 2.0) + (-1.0);
    float _583 = dot(vec2(_581, _582), vec2(_581, _582));
    float _3161 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    vec4 _604 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _614 = cbMtdParam._m0[17u].z + _345.z;
    float _620 = (_614 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_604.z - _614));
    float _623 = ((_574.z - _620) * _408) + _620;
    float _629 = ((((_604.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _354;
    float _630 = ((((_604.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _356;
    float _638 = ((sqrt(1.0 - (isnan(1.0) ? _3161 : (isnan(_3161) ? 1.0 : min(_3161, 1.0)))) - _363) * _408) + _363;
    float _642 = ((_629 * cbMtdParam._m0[14u].z) + _629) + ((_581 - _629) * _408);
    float _644 = ((_630 * cbMtdParam._m0[14u].z) + _630) + ((_582 - _630) * _408);
    vec4 _656 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _660 = cbMtdParam._m0[16u].w * _656.x;
    float _662 = _660 - (_660 * _408);
    float _671 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _672 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _682 = cbSceneParam._m0[86u].x * ((_671 / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _377));
    float _683 = cbSceneParam._m0[86u].y * ((_672 / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _378));
    float _690 = isnan(cbInstanceData._m0[8u].x) ? _682 : (isnan(_682) ? cbInstanceData._m0[8u].x : max(_682, cbInstanceData._m0[8u].x));
    float _691 = isnan(cbInstanceData._m0[8u].y) ? _683 : (isnan(_683) ? cbInstanceData._m0[8u].y : max(_683, cbInstanceData._m0[8u].y));
    vec4 _695 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _690 : (isnan(_690) ? cbInstanceData._m0[8u].z : min(_690, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _691 : (isnan(_691) ? cbInstanceData._m0[8u].w : min(_691, cbInstanceData._m0[8u].w))));
    float _728 = _518 - cbMtdParam._m0[15u].x;
    float _3192 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _738 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3192 : (isnan(_3192) ? 1.0 : min(_3192, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3208 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _739 = isnan(1.0) ? _3208 : (isnan(_3208) ? 1.0 : min(_3208, 1.0));
    float _741 = _739 - (_739 * _408);
    float _745 = fma(_638, _238, fma(_644, _231, _642 * _217));
    float _748 = fma(_638, _239, fma(_644, _232, _642 * _218));
    float _751 = fma(_638, _240, fma(_644, _233, _642 * _219));
    float _755 = inversesqrt(dot(vec3(_745, _748, _751), vec3(_745, _748, _751)));
    float _756 = _755 * _745;
    float _757 = _755 * _748;
    float _758 = _755 * _751;
    float _3219 = isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0));
    float _759 = isnan(1.0) ? _3219 : (isnan(_3219) ? 1.0 : min(_3219, 1.0));
    float _3230 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _760 = isnan(1.0) ? _3230 : (isnan(_3230) ? 1.0 : min(_3230, 1.0));
    float _761 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
    float _3246 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _3257 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0));
    float _3268 = isnan(0.0) ? _562 : (isnan(_562) ? 0.0 : max(_562, 0.0));
    float _778 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _796 = fma(_758, cbSceneParam._m0[5u].z, fma(_757, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _756));
    float _799 = fma(_758, cbSceneParam._m0[6u].z, fma(_757, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _756));
    float _802 = fma(_758, cbSceneParam._m0[7u].z, fma(_757, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _756));
    uint _816 = (_305 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _822 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3246 : (isnan(_3246) ? 1.0 : min(_3246, 1.0)))) * cbInstanceData._m0[_816].x;
    float _823 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3257 : (isnan(_3257) ? 1.0 : min(_3257, 1.0)))) * cbInstanceData._m0[_816].y;
    float _824 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3268 : (isnan(_3268) ? 1.0 : min(_3268, 1.0)))) * cbInstanceData._m0[_816].z;
    float _3279 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _825 = isnan(1.0) ? _3279 : (isnan(_3279) ? 1.0 : min(_3279, 1.0));
    float _3290 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _826 = isnan(1.0) ? _3290 : (isnan(_3290) ? 1.0 : min(_3290, 1.0));
    float _3301 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _827 = isnan(1.0) ? _3301 : (isnan(_3301) ? 1.0 : min(_3301, 1.0));
    vec4 _831 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _671, cbSceneParam._m0[86u].y * _672));
    float _834 = _831.x * TEXCOORD_5.w;
    float _835 = dot(vec3(_756, _757, _758), vec3(_515, _516, _517));
    float _838 = _835 * 2.0;
    float _842 = (_838 * _756) - _515;
    float _843 = (_838 * _757) - _516;
    float _844 = (_838 * _758) - _517;
    float _845 = dot(vec3(_515, _516, _517), vec3(_756, _757, _758));
    float _848 = abs(_845);
    float _3312 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _849 = isnan(1.0) ? _3312 : (isnan(_3312) ? 1.0 : min(_3312, 1.0));
    float _855 = sqrt(_760);
    float _867 = exp2((_855 * 5.0) * log2(1.0 - (_849 * 0.999000012874603271484375))) / (4.0 - (_855 * 3.0));
    float _899 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _903 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _907 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1209;
    float _1211;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _934 = fma(_907, cbModelParam._m0[26u].z, fma(_903, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _899));
        float _938 = fma(_907, cbModelParam._m0[27u].z, fma(_903, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _899));
        float _942 = fma(_907, cbModelParam._m0[28u].z, fma(_903, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _899));
        float _967 = _899 + _756;
        float _968 = _903 + _757;
        float _969 = _907 + _758;
        float _979 = fma(_969, cbModelParam._m0[26u].z, fma(_968, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _967)) - _934;
        float _980 = fma(_969, cbModelParam._m0[27u].z, fma(_968, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _967)) - _938;
        float _981 = fma(_969, cbModelParam._m0[28u].z, fma(_968, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _967)) - _942;
        float _985 = inversesqrt(dot(vec3(_979, _980, _981), vec3(_979, _980, _981)));
        float _998 = ((_985 * _979) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_934 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _999 = ((_985 * _980) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_938 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1000 = ((_985 * _981) / cbModelParam._m0[34u].z) + ((((((_942 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1003 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_998, _999, _1000), 0.0);
        vec4 _1010 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_998, _999, _1000), 0.0);
        vec4 _1017 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_998, _999, _1000), 0.0);
        vec4 _1024 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_998, _999, _1000), 0.0);
        float _1037 = exp2((_1003.w + (-0.5)) * 20.0) * 2.0;
        float _1038 = _1037 * (_1003.x + (-0.5));
        float _1039 = _1037 * (_1003.y + (-0.5));
        float _1040 = _1037 * (_1003.z + (-0.5));
        float _1047 = exp2((_1010.w + (-0.5)) * 20.0) * 2.0;
        float _1048 = _1047 * (_1010.x + (-0.5));
        float _1049 = _1047 * (_1010.y + (-0.5));
        float _1050 = _1047 * (_1010.z + (-0.5));
        float _1057 = exp2((_1017.w + (-0.5)) * 20.0) * 2.0;
        float _1058 = _1057 * (_1017.x + (-0.5));
        float _1059 = _1057 * (_1017.y + (-0.5));
        float _1060 = _1057 * (_1017.z + (-0.5));
        float _1067 = exp2((_1024.w + (-0.5)) * 20.0) * 2.0;
        float _1068 = _1067 * (_1024.x + (-0.5));
        float _1069 = _1067 * (_1024.y + (-0.5));
        float _1070 = _1067 * (_1024.z + (-0.5));
        float _1071 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
        float _1072 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
        float _1073 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1074 = _1038 * 0.5;
        float _1075 = _1048 * 0.5;
        float _1076 = _1058 * 0.5;
        float _1077 = dot(vec3(_1074, _1075, _1076), vec3(_1074, _1075, _1076));
        float _1082 = (_1077 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1077);
        float _1091 = (dot(vec3(_756, _757, _758), vec3(_1082 * _1074, _1082 * _1075, _1082 * _1076)) + 1.0) * 0.5;
        float _3338 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1101 = sqrt(((_1075 * _1075) + (_1074 * _1074)) + (_1076 * _1076)) / (_1071 + 9.9999997473787516355514526367188e-06);
        float _3349 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1102 = isnan(1.0) ? _3349 : (isnan(_3349) ? 1.0 : min(_3349, 1.0));
        float _1103 = _1102 * 2.0;
        float _1107 = (1.0 - _1102) / (_1102 + 1.0);
        float _3360 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
        float _1108 = isnan(1.0) ? _3360 : (isnan(_3360) ? 1.0 : min(_3360, 1.0));
        float _1117 = ((((1.0 - _1108) * (_1103 + 2.0)) * exp2(log2(isnan(1.0) ? _3338 : (isnan(_3338) ? 1.0 : min(_3338, 1.0))) * (_1103 + 1.0))) + _1108) * _1071;
        float _1118 = _1039 * 0.5;
        float _1119 = _1049 * 0.5;
        float _1120 = _1059 * 0.5;
        float _1121 = dot(vec3(_1118, _1119, _1120), vec3(_1118, _1119, _1120));
        float _1126 = (_1121 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1121);
        float _1134 = (dot(vec3(_756, _757, _758), vec3(_1126 * _1118, _1126 * _1119, _1126 * _1120)) + 1.0) * 0.5;
        float _3371 = isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0));
        float _1143 = sqrt(((_1119 * _1119) + (_1118 * _1118)) + (_1120 * _1120)) / (_1072 + 9.9999997473787516355514526367188e-06);
        float _3382 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1144 = isnan(1.0) ? _3382 : (isnan(_3382) ? 1.0 : min(_3382, 1.0));
        float _1145 = _1144 * 2.0;
        float _1149 = (1.0 - _1144) / (_1144 + 1.0);
        float _3393 = isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0));
        float _1150 = isnan(1.0) ? _3393 : (isnan(_3393) ? 1.0 : min(_3393, 1.0));
        float _1159 = ((((1.0 - _1150) * (_1145 + 2.0)) * exp2(log2(isnan(1.0) ? _3371 : (isnan(_3371) ? 1.0 : min(_3371, 1.0))) * (_1145 + 1.0))) + _1150) * _1072;
        float _1160 = _1040 * 0.5;
        float _1161 = _1050 * 0.5;
        float _1162 = _1060 * 0.5;
        float _1163 = dot(vec3(_1160, _1161, _1162), vec3(_1160, _1161, _1162));
        float _1168 = (_1163 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1163);
        float _1176 = (dot(vec3(_756, _757, _758), vec3(_1168 * _1160, _1168 * _1161, _1168 * _1162)) + 1.0) * 0.5;
        float _3404 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
        float _1185 = sqrt(((_1161 * _1161) + (_1160 * _1160)) + (_1162 * _1162)) / (_1073 + 9.9999997473787516355514526367188e-06);
        float _3415 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1186 = isnan(1.0) ? _3415 : (isnan(_3415) ? 1.0 : min(_3415, 1.0));
        float _1187 = _1186 * 2.0;
        float _1191 = (1.0 - _1186) / (_1186 + 1.0);
        float _3426 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
        float _1192 = isnan(1.0) ? _3426 : (isnan(_3426) ? 1.0 : min(_3426, 1.0));
        float _1201 = ((((1.0 - _1192) * (_1187 + 2.0)) * exp2(log2(isnan(1.0) ? _3404 : (isnan(_3404) ? 1.0 : min(_3404, 1.0))) * (_1187 + 1.0))) + _1192) * _1073;
        _1209 = _1040;
        _1211 = _1039;
        _1212 = _1038;
        _1213 = _1050;
        _1214 = _1049;
        _1215 = _1048;
        _1216 = _1060;
        _1217 = _1059;
        _1218 = _1058;
        _1219 = _1073;
        _1220 = _1072;
        _1221 = _1071;
        _1222 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0)));
        _1223 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0)));
        _1224 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0)));
    }
    else
    {
        _1209 = _1210;
        _1211 = _1210;
        _1212 = _1210;
        _1213 = _1210;
        _1214 = _1210;
        _1215 = _1210;
        _1216 = _1210;
        _1217 = _1210;
        _1218 = _1210;
        _1219 = _1210;
        _1220 = _1210;
        _1221 = _1210;
        _1222 = 0.0;
        _1223 = 0.0;
        _1224 = 0.0;
    }
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1250 = fma(_907, cbModelParam._m0[30u].z, fma(_903, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _899));
        float _1254 = fma(_907, cbModelParam._m0[31u].z, fma(_903, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _899));
        float _1258 = fma(_907, cbModelParam._m0[32u].z, fma(_903, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _899));
        float _1281 = _899 + _756;
        float _1282 = _903 + _757;
        float _1283 = _907 + _758;
        float _1293 = fma(_1283, cbModelParam._m0[30u].z, fma(_1282, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1281)) - _1250;
        float _1294 = fma(_1283, cbModelParam._m0[31u].z, fma(_1282, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1281)) - _1254;
        float _1295 = fma(_1283, cbModelParam._m0[32u].z, fma(_1282, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1281)) - _1258;
        float _1299 = inversesqrt(dot(vec3(_1293, _1294, _1295), vec3(_1293, _1294, _1295)));
        float _1312 = ((_1299 * _1293) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1250 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1313 = ((_1299 * _1294) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1254 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1314 = ((_1299 * _1295) / cbModelParam._m0[35u].z) + ((((((_1258 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1316 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1312, _1313, _1314), 0.0);
        vec4 _1323 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1312, _1313, _1314), 0.0);
        vec4 _1330 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1312, _1313, _1314), 0.0);
        vec4 _1337 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1312, _1313, _1314), 0.0);
        float _1349 = exp2((_1316.w + (-0.5)) * 20.0) * 2.0;
        float _1350 = _1349 * (_1316.x + (-0.5));
        float _1351 = _1349 * (_1316.y + (-0.5));
        float _1352 = _1349 * (_1316.z + (-0.5));
        float _1359 = exp2((_1323.w + (-0.5)) * 20.0) * 2.0;
        float _1360 = _1359 * (_1323.x + (-0.5));
        float _1361 = _1359 * (_1323.y + (-0.5));
        float _1362 = _1359 * (_1323.z + (-0.5));
        float _1369 = exp2((_1330.w + (-0.5)) * 20.0) * 2.0;
        float _1370 = _1369 * (_1330.x + (-0.5));
        float _1371 = _1369 * (_1330.y + (-0.5));
        float _1372 = _1369 * (_1330.z + (-0.5));
        float _1379 = exp2((_1337.w + (-0.5)) * 20.0) * 2.0;
        float _1380 = _1379 * (_1337.x + (-0.5));
        float _1381 = _1379 * (_1337.y + (-0.5));
        float _1382 = _1379 * (_1337.z + (-0.5));
        float _1383 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1384 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1385 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1386 = _1350 * 0.5;
        float _1387 = _1360 * 0.5;
        float _1388 = _1370 * 0.5;
        float _1389 = dot(vec3(_1386, _1387, _1388), vec3(_1386, _1387, _1388));
        float _1394 = (_1389 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1389);
        float _1402 = (dot(vec3(_756, _757, _758), vec3(_1394 * _1386, _1394 * _1387, _1394 * _1388)) + 1.0) * 0.5;
        float _3467 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1411 = sqrt(((_1387 * _1387) + (_1386 * _1386)) + (_1388 * _1388)) / (_1383 + 9.9999997473787516355514526367188e-06);
        float _3478 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
        float _1412 = isnan(1.0) ? _3478 : (isnan(_3478) ? 1.0 : min(_3478, 1.0));
        float _1413 = _1412 * 2.0;
        float _1417 = (1.0 - _1412) / (_1412 + 1.0);
        float _3489 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
        float _1418 = isnan(1.0) ? _3489 : (isnan(_3489) ? 1.0 : min(_3489, 1.0));
        float _1427 = ((((1.0 - _1418) * (_1413 + 2.0)) * exp2(log2(isnan(1.0) ? _3467 : (isnan(_3467) ? 1.0 : min(_3467, 1.0))) * (_1413 + 1.0))) + _1418) * _1383;
        float _1428 = _1351 * 0.5;
        float _1429 = _1361 * 0.5;
        float _1430 = _1371 * 0.5;
        float _1431 = dot(vec3(_1428, _1429, _1430), vec3(_1428, _1429, _1430));
        float _1436 = (_1431 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1431);
        float _1444 = (dot(vec3(_756, _757, _758), vec3(_1436 * _1428, _1436 * _1429, _1436 * _1430)) + 1.0) * 0.5;
        float _3500 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1453 = sqrt(((_1429 * _1429) + (_1428 * _1428)) + (_1430 * _1430)) / (_1384 + 9.9999997473787516355514526367188e-06);
        float _3511 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1454 = isnan(1.0) ? _3511 : (isnan(_3511) ? 1.0 : min(_3511, 1.0));
        float _1455 = _1454 * 2.0;
        float _1459 = (1.0 - _1454) / (_1454 + 1.0);
        float _3522 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1460 = isnan(1.0) ? _3522 : (isnan(_3522) ? 1.0 : min(_3522, 1.0));
        float _1469 = ((((1.0 - _1460) * (_1455 + 2.0)) * exp2(log2(isnan(1.0) ? _3500 : (isnan(_3500) ? 1.0 : min(_3500, 1.0))) * (_1455 + 1.0))) + _1460) * _1384;
        float _1470 = _1352 * 0.5;
        float _1471 = _1362 * 0.5;
        float _1472 = _1372 * 0.5;
        float _1473 = dot(vec3(_1470, _1471, _1472), vec3(_1470, _1471, _1472));
        float _1478 = (_1473 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1473);
        float _1486 = (dot(vec3(_756, _757, _758), vec3(_1478 * _1470, _1478 * _1471, _1478 * _1472)) + 1.0) * 0.5;
        float _3533 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
        float _1495 = sqrt(((_1471 * _1471) + (_1470 * _1470)) + (_1472 * _1472)) / (_1385 + 9.9999997473787516355514526367188e-06);
        float _3544 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
        float _1496 = isnan(1.0) ? _3544 : (isnan(_3544) ? 1.0 : min(_3544, 1.0));
        float _1497 = _1496 * 2.0;
        float _1501 = (1.0 - _1496) / (_1496 + 1.0);
        float _3555 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
        float _1502 = isnan(1.0) ? _3555 : (isnan(_3555) ? 1.0 : min(_3555, 1.0));
        float _1511 = ((((1.0 - _1502) * (_1497 + 2.0)) * exp2(log2(isnan(1.0) ? _3533 : (isnan(_3533) ? 1.0 : min(_3533, 1.0))) * (_1497 + 1.0))) + _1502) * _1385;
        _1519 = _1352;
        _1520 = _1351;
        _1521 = _1350;
        _1522 = _1362;
        _1523 = _1361;
        _1524 = _1360;
        _1525 = _1372;
        _1526 = _1371;
        _1527 = _1370;
        _1528 = _1385;
        _1529 = _1384;
        _1530 = _1383;
        _1531 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0)));
        _1532 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0)));
        _1533 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0)));
    }
    else
    {
        _1519 = _1210;
        _1520 = _1210;
        _1521 = _1210;
        _1522 = _1210;
        _1523 = _1210;
        _1524 = _1210;
        _1525 = _1210;
        _1526 = _1210;
        _1527 = _1210;
        _1528 = _1210;
        _1529 = _1210;
        _1530 = _1210;
        _1531 = 0.0;
        _1532 = 0.0;
        _1533 = 0.0;
    }
    float _1543 = (cbModelParam._m0[1u].x * (_1531 - _1222)) + _1222;
    float _1544 = (cbModelParam._m0[1u].x * (_1532 - _1223)) + _1223;
    float _1545 = (cbModelParam._m0[1u].x * (_1533 - _1224)) + _1224;
    float _1566 = fma(_1545, cbSceneParam._m0[89u].z, fma(_1544, cbSceneParam._m0[89u].y, _1543 * cbSceneParam._m0[89u].x));
    float _1569 = fma(_1545, cbSceneParam._m0[90u].z, fma(_1544, cbSceneParam._m0[90u].y, _1543 * cbSceneParam._m0[90u].x));
    float _1572 = fma(_1545, cbSceneParam._m0[91u].z, fma(_1544, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1543));
    float _1587 = _842 * 0.5;
    float _1588 = _843 * 0.5;
    float _1589 = _844 * 0.5;
    float _1590 = dot(vec4(_1587, _1588, _1589, 1.0), vec4(_1521, _1524, _1527, _1530));
    float _1593 = dot(vec4(_1587, _1588, _1589, 1.0), vec4(_1520, _1523, _1526, _1529));
    float _1596 = dot(vec4(_1587, _1588, _1589, 1.0), vec4(_1519, _1522, _1525, _1528));
    float _1630;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1603 = dot(vec4(_1587, _1588, _1589, 1.0), vec4(_1209, _1213, _1216, _1219));
        float _1607 = dot(vec4(_1587, _1588, _1589, 1.0), vec4(_1211, _1214, _1217, _1220));
        float _1611 = dot(vec4(_1587, _1588, _1589, 1.0), vec4(_1212, _1215, _1218, _1221));
        float _1618 = dot(vec4(cbModelParam._m0[39u]), vec4(_1587, _1588, _1589, 1.0));
        _1630 = dot(vec3(isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0)), isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0)), isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1618) ? 0.0 : (isnan(0.0) ? _1618 : max(0.0, _1618))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1630 = 1.0;
    }
    float _1641;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1632 = dot(vec4(cbModelParam._m0[40u]), vec4(_1587, _1588, _1589, 1.0));
        _1641 = dot(vec3(isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0)), isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0)), isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1632) ? 0.0 : (isnan(0.0) ? _1632 : max(0.0, _1632))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1641 = 1.0;
    }
    float _1645 = (_1641 * cbModelParam._m0[1u].x) + (_1630 * (1.0 - cbModelParam._m0[1u].x));
    float _1655 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _760);
    float _1656 = isnan(_1655) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1655 : min(cbModelParam._m0[25u].z, _1655));
    float _1736;
    float _1738;
    float _1740;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1703 = fma(_907, cbModelParam._m0[13u].z, fma(_903, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _899)) + cbModelParam._m0[13u].w;
        float _1707 = fma(_907, cbModelParam._m0[14u].z, fma(_903, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _899)) + cbModelParam._m0[14u].w;
        float _1711 = fma(_907, cbModelParam._m0[15u].z, fma(_903, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _899)) + cbModelParam._m0[15u].w;
        float _1714 = fma(_844, cbModelParam._m0[13u].z, fma(_843, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _842));
        float _1717 = fma(_844, cbModelParam._m0[14u].z, fma(_843, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _842));
        float _1720 = fma(_844, cbModelParam._m0[15u].z, fma(_843, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _842));
        float _1748;
        if (_1714 > 0.0)
        {
            _1748 = abs((1.0 - _1703) / _1714);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1714 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1703 + 1.0) / _1714);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1748 = frontier_phi_16_14_ladder;
        }
        float _1940;
        if (_1717 > 0.0)
        {
            _1940 = abs((1.0 - _1707) / _1717);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1717 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1707 + 1.0) / _1717);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1940 = frontier_phi_25_21_ladder;
        }
        float _2178;
        if (_1720 > 0.0)
        {
            _2178 = abs((1.0 - _1711) / _1720);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1720 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1711 + 1.0) / _1720);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2178 = frontier_phi_36_32_ladder;
        }
        float _2180 = isnan(_1940) ? _1748 : (isnan(_1748) ? _1940 : min(_1748, _1940));
        float _2181 = isnan(_2178) ? _2180 : (isnan(_2180) ? _2178 : min(_2180, _2178));
        float _2185 = (_2181 * _1714) + _1703;
        float _2186 = (_2181 * _1717) + _1707;
        float _2187 = (_2181 * _1720) + _1711;
        float _2188 = _2181 * 9.9999997473787516355514526367188e-05;
        float _2190 = (-1.0) - _2188;
        float _2192 = _2188 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2187 > _2192) || ((_2187 < _2190) || ((_2186 > _2192) || ((_2186 < _2190) || ((_2185 < _2190) || (_2185 > _2192))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2337 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2187, cbModelParam._m0[9u].z, fma(_2186, cbModelParam._m0[9u].y, _2185 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2187, cbModelParam._m0[10u].z, fma(_2186, cbModelParam._m0[10u].y, _2185 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2187, cbModelParam._m0[11u].z, fma(_2186, cbModelParam._m0[11u].y, _2185 * cbModelParam._m0[11u].x))), _1656);
            frontier_phi_15_36_ladder = _2337.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2337.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2337.y * cbModelParam._m0[1u].y;
        }
        _1736 = frontier_phi_15_36_ladder_1;
        _1738 = frontier_phi_15_36_ladder_2;
        _1740 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1724 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_842, _843, _844), _1656);
        _1736 = _1724.x * cbModelParam._m0[1u].y;
        _1738 = _1724.y * cbModelParam._m0[1u].y;
        _1740 = _1724.z * cbModelParam._m0[1u].y;
    }
    float _1744 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _760);
    float _1745 = isnan(_1744) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1744 : min(cbModelParam._m0[25u].w, _1744));
    float _1836;
    float _1838;
    float _1840;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1800 = fma(_907, cbModelParam._m0[21u].z, fma(_903, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _899)) + cbModelParam._m0[21u].w;
        float _1804 = fma(_907, cbModelParam._m0[22u].z, fma(_903, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _899)) + cbModelParam._m0[22u].w;
        float _1808 = fma(_907, cbModelParam._m0[23u].z, fma(_903, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _899)) + cbModelParam._m0[23u].w;
        float _1811 = fma(_844, cbModelParam._m0[21u].z, fma(_843, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _842));
        float _1814 = fma(_844, cbModelParam._m0[22u].z, fma(_843, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _842));
        float _1817 = fma(_844, cbModelParam._m0[23u].z, fma(_843, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _842));
        float _1945;
        if (_1811 > 0.0)
        {
            _1945 = abs((1.0 - _1800) / _1811);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1811 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1800 + 1.0) / _1811);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1945 = frontier_phi_27_23_ladder;
        }
        float _2205;
        if (_1814 > 0.0)
        {
            _2205 = abs((1.0 - _1804) / _1814);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1814 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1804 + 1.0) / _1814);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2205 = frontier_phi_38_34_ladder;
        }
        float _2512;
        if (_1817 > 0.0)
        {
            _2512 = abs((1.0 - _1808) / _1817);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1817 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1808 + 1.0) / _1817);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2512 = frontier_phi_49_44_ladder;
        }
        float _2514 = isnan(_2205) ? _1945 : (isnan(_1945) ? _2205 : min(_1945, _2205));
        float _2515 = isnan(_2512) ? _2514 : (isnan(_2514) ? _2512 : min(_2514, _2512));
        float _2519 = (_2515 * _1811) + _1800;
        float _2520 = (_2515 * _1814) + _1804;
        float _2521 = (_2515 * _1817) + _1808;
        float _2522 = _2515 * 9.9999997473787516355514526367188e-05;
        float _2523 = (-1.0) - _2522;
        float _2525 = _2522 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2521 > _2525) || ((_2521 < _2523) || ((_2520 > _2525) || ((_2520 < _2523) || ((_2519 < _2523) || (_2519 > _2525))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2694 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2521, cbModelParam._m0[17u].z, fma(_2520, cbModelParam._m0[17u].y, _2519 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2521, cbModelParam._m0[18u].z, fma(_2520, cbModelParam._m0[18u].y, _2519 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2521, cbModelParam._m0[19u].z, fma(_2520, cbModelParam._m0[19u].y, _2519 * cbModelParam._m0[19u].x))), _1745);
            frontier_phi_24_49_ladder = _2694.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2694.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2694.x * cbModelParam._m0[1u].z;
        }
        _1836 = frontier_phi_24_49_ladder_2;
        _1838 = frontier_phi_24_49_ladder;
        _1840 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1820 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_842, _843, _844), _1745);
        _1836 = _1820.x * cbModelParam._m0[1u].z;
        _1838 = _1820.y * cbModelParam._m0[1u].z;
        _1840 = _1820.z * cbModelParam._m0[1u].z;
    }
    float _1852 = ((((1.0 - _867) * ((_855 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_867 * _855)) * _834;
    float _1853 = _1852 * ((cbModelParam._m0[1u].w * (_1836 - _1736)) + _1736);
    float _1854 = _1852 * ((cbModelParam._m0[1u].w * (_1838 - _1738)) + _1738);
    float _1855 = _1852 * ((cbModelParam._m0[1u].w * (_1840 - _1740)) + _1740);
    float _1858 = fma(_1855, cbSceneParam._m0[89u].z, fma(_1854, cbSceneParam._m0[89u].y, _1853 * cbSceneParam._m0[89u].x));
    float _1861 = fma(_1855, cbSceneParam._m0[90u].z, fma(_1854, cbSceneParam._m0[90u].y, _1853 * cbSceneParam._m0[90u].x));
    float _1864 = fma(_1855, cbSceneParam._m0[91u].z, fma(_1854, cbSceneParam._m0[91u].y, _1853 * cbSceneParam._m0[91u].x));
    vec4 _1872 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_671, _672));
    float _1874 = _1872.w;
    float _1886 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1874);
    float _1887 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1874);
    float _1888 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1874);
    uvec4 _1892 = floatBitsToUint(cbInstanceData._m0[_305 + 5u]);
    uint _1894 = _1892.x * 14u;
    uint _1895 = _1894 + 13u;
    float _1900 = _834 + (-1.0);
    float _1903 = (cbLight._m0[_1895].x * _1900) + 1.0;
    float _1904 = (cbLight._m0[_1895].y * _1900) + 1.0;
    uint _1906 = _1894 + 4u;
    float _1917 = dot(vec3(cbLight._m0[_1894].xyz), vec3(_756, _757, _758));
    float _1920 = isnan(1.0) ? _1903 : (isnan(_1903) ? 1.0 : min(_1903, 1.0));
    float _1921 = cbLight._m0[_1906].x * _1886;
    float _1922 = cbLight._m0[_1906].y * _1887;
    float _1923 = cbLight._m0[_1906].z * _1888;
    uint _1924 = _1894 + 5u;
    uint _1930 = _1894 | 1u;
    float _1936 = dot(vec3(cbLight._m0[_1930].xyz), vec3(_756, _757, _758));
    float _1939 = isnan(1.0) ? _1904 : (isnan(_1904) ? 1.0 : min(_1904, 1.0));
    float _2004;
    float _2005;
    float _2006;
    if (_761 == 0.0)
    {
        float _3691 = isnan(0.0) ? _1917 : (isnan(_1917) ? 0.0 : max(_1917, 0.0));
        float _3702 = isnan(0.0) ? _1936 : (isnan(_1936) ? 0.0 : max(_1936, 0.0));
        float _1958 = (isnan(1.0) ? _3691 : (isnan(_3691) ? 1.0 : min(_3691, 1.0))) * 0.3183098733425140380859375;
        float _1960 = (isnan(1.0) ? _3702 : (isnan(_3702) ? 1.0 : min(_3702, 1.0))) * 0.3183098733425140380859375;
        _2004 = ((cbLight._m0[_1924].x * _1939) * _1960) + ((_1921 * _1920) * _1958);
        _2005 = ((_1939 * cbLight._m0[_1924].y) * _1960) + ((_1922 * _1920) * _1958);
        _2006 = ((_1939 * cbLight._m0[_1924].z) * _1960) + ((_1923 * _1920) * _1958);
    }
    else
    {
        float _1970 = _1917 + _761;
        float _1973 = (_761 * 2.0) + 1.0;
        float _1974 = (isnan(0.0) ? _1970 : (isnan(_1970) ? 0.0 : max(_1970, 0.0))) / _1973;
        float _1981 = _1936 + _761;
        float _1983 = (isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0))) / _1973;
        _2004 = (((_1983 * cbLight._m0[_1924].x) * _1939) + ((_1921 * _1974) * _1920)) * 0.3183098733425140380859375;
        _2005 = (((_1983 * cbLight._m0[_1924].y) * _1939) + ((_1922 * _1974) * _1920)) * 0.3183098733425140380859375;
        _2006 = (((_1983 * cbLight._m0[_1924].z) * _1939) + ((_1923 * _1974) * _1920)) * 0.3183098733425140380859375;
    }
    uint _2010 = _1894 + 8u;
    float _2026 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1894].w)) * _760) * 0.949999988079071044921875);
    float _2027 = _2026 * _2026;
    float _2028 = cbLight._m0[_1894].x + _515;
    float _2029 = cbLight._m0[_1894].y + _516;
    float _2030 = cbLight._m0[_1894].z + _517;
    float _2034 = inversesqrt(dot(vec3(_2028, _2029, _2030), vec3(_2028, _2029, _2030)));
    float _2035 = _2034 * _2028;
    float _2036 = _2034 * _2029;
    float _2037 = _2034 * _2030;
    float _2038 = dot(vec3(_756, _757, _758), vec3(cbLight._m0[_1894].xyz));
    float _3723 = isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0));
    float _2041 = isnan(1.0) ? _3723 : (isnan(_3723) ? 1.0 : min(_3723, 1.0));
    float _3734 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
    float _2042 = isnan(1.0) ? _3734 : (isnan(_3734) ? 1.0 : min(_3734, 1.0));
    float _2043 = dot(vec3(_756, _757, _758), vec3(_2035, _2036, _2037));
    float _3745 = isnan(0.0) ? _2043 : (isnan(_2043) ? 0.0 : max(_2043, 0.0));
    float _2046 = isnan(1.0) ? _3745 : (isnan(_3745) ? 1.0 : min(_3745, 1.0));
    float _2047 = dot(vec3(cbLight._m0[_1894].xyz), vec3(_2035, _2036, _2037));
    float _3756 = isnan(0.0) ? _2047 : (isnan(_2047) ? 0.0 : max(_2047, 0.0));
    float _2051 = _2027 * _2027;
    float _2055 = ((_2046 * _2046) * (_2051 + (-1.0))) + 1.0;
    float _2066 = (exp2(log2(1.0 - (isnan(1.0) ? _3756 : (isnan(_3756) ? 1.0 : min(_3756, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2067 = 1.0 - _2027;
    float _2078 = (0.5 / (((_2042 * ((_2041 * _2067) + _2027)) + 9.9999999392252902907785028219223e-09) + (((_2042 * _2067) + _2027) * _2041))) * _2041;
    float _3767 = isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0));
    float _2080 = (isnan(1.0) ? _3767 : (isnan(_3767) ? 1.0 : min(_3767, 1.0))) * (_2051 / ((_2055 * _2055) * 3.141590118408203125));
    uint _2096 = _1894 + 9u;
    float _2110 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1930].w)) * _760) * 0.949999988079071044921875);
    float _2111 = _2110 * _2110;
    float _2112 = cbLight._m0[_1930].x + _515;
    float _2113 = cbLight._m0[_1930].y + _516;
    float _2114 = cbLight._m0[_1930].z + _517;
    float _2118 = inversesqrt(dot(vec3(_2112, _2113, _2114), vec3(_2112, _2113, _2114)));
    float _2119 = _2118 * _2112;
    float _2120 = _2118 * _2113;
    float _2121 = _2118 * _2114;
    float _2122 = dot(vec3(_756, _757, _758), vec3(cbLight._m0[_1930].xyz));
    float _3778 = isnan(0.0) ? _2122 : (isnan(_2122) ? 0.0 : max(_2122, 0.0));
    float _2125 = isnan(1.0) ? _3778 : (isnan(_3778) ? 1.0 : min(_3778, 1.0));
    float _2126 = dot(vec3(_756, _757, _758), vec3(_2119, _2120, _2121));
    float _3789 = isnan(0.0) ? _2126 : (isnan(_2126) ? 0.0 : max(_2126, 0.0));
    float _2129 = isnan(1.0) ? _3789 : (isnan(_3789) ? 1.0 : min(_3789, 1.0));
    float _2130 = dot(vec3(cbLight._m0[_1930].xyz), vec3(_2119, _2120, _2121));
    float _3800 = isnan(0.0) ? _2130 : (isnan(_2130) ? 0.0 : max(_2130, 0.0));
    float _2134 = _2111 * _2111;
    float _2138 = ((_2129 * _2129) * (_2134 + (-1.0))) + 1.0;
    float _2147 = (exp2(log2(1.0 - (isnan(1.0) ? _3800 : (isnan(_3800) ? 1.0 : min(_3800, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2148 = 1.0 - _2111;
    float _2158 = (0.5 / (((_2042 * ((_2125 * _2148) + _2111)) + 9.9999999392252902907785028219223e-09) + (((_2042 * _2148) + _2111) * _2125))) * _2125;
    float _3811 = isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0));
    float _2160 = (isnan(1.0) ? _3811 : (isnan(_3811) ? 1.0 : min(_3811, 1.0))) * (_2134 / ((_2138 * _2138) * 3.141590118408203125));
    float _2170 = (((_2147 * cbLight._m0[_2096].x) * _2160) * _1939) + ((((cbLight._m0[_2010].x * _1886) * _2066) * _2080) * _1920);
    float _2171 = (((_2147 * cbLight._m0[_2096].y) * _2160) * _1939) + ((((cbLight._m0[_2010].y * _1887) * _2066) * _2080) * _1920);
    float _2172 = (((_2147 * cbLight._m0[_2096].z) * _2160) * _1939) + ((((cbLight._m0[_2010].z * _1888) * _2066) * _2080) * _1920);
    float _2308;
    float _2310;
    float _2312;
    float _2314;
    float _2316;
    float _2318;
    if (_1892.y == 0u)
    {
        float _2249 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2250 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2249;
        float _2251 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2249;
        float _2252 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2249;
        uvec4 _2264 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2265 = _2264.x;
        uint _2276 = uint((float(_2264.y) * floor(float(uint(cbSceneParam._m0[85u].y * _672) / _2265))) + floor(float(uint(cbSceneParam._m0[85u].x * _671) / _2265)));
        float _2286 = (log2(_2252 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2287 = isnan(0.0) ? _2286 : (isnan(_2286) ? 0.0 : max(_2286, 0.0));
        uint _2290 = uint(isnan(14.0) ? _2287 : (isnan(_2287) ? 14.0 : min(_2287, 14.0)));
        uint _2297 = _2264.z;
        float _2346;
        float _2348;
        float _2350;
        float _2352;
        float _2354;
        float _2356;
        if (((((1u << ((_2297 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2290 << 2u) + (_2276 << 6u)) >> 2u)).x) == 0u) || ((_2297 & 240u) == 0u))
        {
            _2346 = 0.0;
            _2348 = 0.0;
            _2350 = 0.0;
            _2352 = 0.0;
            _2354 = 0.0;
            _2356 = 0.0;
        }
        else
        {
            float _2347;
            float _2349;
            float _2351;
            float _2353;
            float _2355;
            float _2357;
            float _2538 = 0.0;
            float _2539 = 0.0;
            float _2540 = 0.0;
            float _2541 = 0.0;
            float _2542 = 0.0;
            float _2543 = 0.0;
            uint _2544 = 0u;
            uint _2553;
            bool _2554;
            for (;;)
            {
                _2553 = texelFetch(g_lightClassification, int((((_2290 << 5u) + (_2276 << 9u)) + (_2544 << 2u)) >> 2u)).x;
                _2554 = _2553 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2554)
                {
                    frontier_phi_55_pred = _2543;
                    frontier_phi_55_pred_1 = _2542;
                    frontier_phi_55_pred_2 = _2541;
                    frontier_phi_55_pred_3 = _2539;
                    frontier_phi_55_pred_4 = _2538;
                    frontier_phi_55_pred_5 = _2540;
                }
                else
                {
                    float _2751;
                    float _2752;
                    float _2753;
                    float _2754;
                    float _2755;
                    float _2756;
                    uint _2757;
                    _2751 = _2538;
                    _2752 = _2539;
                    _2753 = _2540;
                    _2754 = _2541;
                    _2755 = _2542;
                    _2756 = _2543;
                    _2757 = _2553;
                    float _2699;
                    float _2700;
                    float _2701;
                    float _2702;
                    float _2703;
                    float _2704;
                    for (;;)
                    {
                        uint _2761 = uint(findLSB(_2757)) + (_2544 << 5u);
                        uint _2758 = (_2757 + 4294967295u) & _2757;
                        uint _2763 = _2761 * 48u;
                        vec4 _2777 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2763)).x, texelFetch(g_PointLightRenderingBuffer, int(_2763 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2763 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2763 + 3u)).x));
                        uint _2783 = (_2761 * 48u) + 4u;
                        vec4 _2796 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2783)).x, texelFetch(g_PointLightRenderingBuffer, int(_2783 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2783 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2783 + 3u)).x));
                        float _2797 = _2796.x;
                        float _2798 = _2796.y;
                        float _2799 = _2796.z;
                        uint _2802 = (_2761 * 48u) + 8u;
                        vec3 _2813 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2802)).x, texelFetch(g_PointLightRenderingBuffer, int(_2802 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2802 + 2u)).x));
                        uint _2818 = (_2761 * 48u) + 12u;
                        vec2 _2826 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2818)).x, texelFetch(g_PointLightRenderingBuffer, int(_2818 + 1u)).x));
                        float _2832 = inversesqrt(dot(vec3(_2250, _2251, _2252), vec3(_2250, _2251, _2252)));
                        float _2833 = _2832 * _2250;
                        float _2834 = _2832 * _2251;
                        float _2835 = _2832 * _2252;
                        float _2836 = _2777.x - _2250;
                        float _2837 = _2777.y - _2251;
                        float _2838 = _2777.z - _2252;
                        float _2839 = dot(vec3(_2836, _2837, _2838), vec3(_2836, _2837, _2838));
                        float _2842 = inversesqrt(_2839);
                        float _2843 = _2842 * _2836;
                        float _2844 = _2842 * _2837;
                        float _2845 = _2842 * _2838;
                        float _2846 = dot(vec3(_796, _799, _802), vec3(_2843, _2844, _2845));
                        float _2851 = 1.0 - (_2839 * _2777.w);
                        float _3832 = isnan(0.0) ? _2851 : (isnan(_2851) ? 0.0 : max(_2851, 0.0));
                        float _2852 = isnan(1.0) ? _3832 : (isnan(_3832) ? 1.0 : min(_3832, 1.0));
                        float _2853 = sqrt(_2839) * _2796.w;
                        float _2856 = 1.39999997615814208984375 / (_2853 + 1.39999997615814208984375);
                        float _2857 = _2856 * _2856;
                        float _2858 = 1.0 - _2857;
                        float _2860 = (_2858 * _2858) * _761;
                        float _2863 = ((_2858 * _2846) + _2857) + _2860;
                        float _2868 = _2853 * _2853;
                        float _2873 = ((isnan(0.0) ? _2863 : (isnan(_2863) ? 0.0 : max(_2863, 0.0))) * _2852) / (((_2860 * 2.0) + 1.0) * ((_2868 * 0.699999988079071044921875) + 1.0));
                        float _2877 = dot(vec3(_2843, _2844, _2845), vec3(_2833, _2834, _2835));
                        float _3848 = isnan(0.0) ? _2877 : (isnan(_2877) ? 0.0 : max(_2877, 0.0));
                        float _2884 = dot(vec3((-0.0) - _2833, (-0.0) - _2834, (-0.0) - _2835), vec3(_796, _799, _802)) + 1.0;
                        float _2886 = (isnan(0.0) ? _2884 : (isnan(_2884) ? 0.0 : max(_2884, 0.0))) * 0.5;
                        float _2893 = ((_2886 * _2886) * _2826.x) * exp2((_2826.y * 32.0) * log2(isnan(1.0) ? _3848 : (isnan(_3848) ? 1.0 : min(_3848, 1.0))));
                        float _2895 = _761 / (_761 + 1.0);
                        float _2911 = (-0.0) - _2250;
                        float _2912 = (-0.0) - _2251;
                        float _2913 = (-0.0) - _2252;
                        float _2917 = inversesqrt(dot(vec3(_2911, _2912, _2913), vec3(_2911, _2912, _2913)));
                        float _2918 = _2917 * _2911;
                        float _2919 = _2917 * _2912;
                        float _2920 = _2917 * _2913;
                        float _2928 = exp2(log2(1.0 / ((_2868 * 3.5) + 5.0)) * 0.25);
                        float _2929 = 1.0 - _855;
                        float _2936 = sqrt(1.0 - ((1.0 - (_2929 * _2929)) * (1.0 - (_2928 * _2928))));
                        float _2937 = _2936 * _2936;
                        float _2938 = _2937 * _2937;
                        float _2939 = _2918 + _2843;
                        float _2940 = _2919 + _2844;
                        float _2941 = _2920 + _2845;
                        float _2945 = inversesqrt(dot(vec3(_2939, _2940, _2941), vec3(_2939, _2940, _2941)));
                        float _2949 = dot(vec3(_796, _799, _802), vec3(_2918, _2919, _2920));
                        float _3864 = isnan(0.0) ? _2949 : (isnan(_2949) ? 0.0 : max(_2949, 0.0));
                        float _2952 = isnan(1.0) ? _3864 : (isnan(_3864) ? 1.0 : min(_3864, 1.0));
                        float _2953 = dot(vec3(_796, _799, _802), vec3(_2945 * _2939, _2945 * _2940, _2945 * _2941));
                        float _3875 = isnan(0.0) ? _2953 : (isnan(_2953) ? 0.0 : max(_2953, 0.0));
                        float _2956 = isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0));
                        float _2960 = ((_2956 * _2956) * (_2938 + (-1.0))) + 1.0;
                        float _2961 = _2856 * _2937;
                        float _2962 = _2961 * _2961;
                        float _2965 = ((1.0 - _2962) * _2846) + _2962;
                        float _3886 = isnan(0.0) ? _2965 : (isnan(_2965) ? 0.0 : max(_2965, 0.0));
                        float _2966 = isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0));
                        float _2967 = 1.0 - _2937;
                        float _2977 = (0.5 / (((_2966 * ((_2952 * _2967) + _2937)) + 9.9999999392252902907785028219223e-09) + (((_2966 * _2967) + _2937) * _2952))) * _2966;
                        float _3897 = isnan(0.0) ? _2977 : (isnan(_2977) ? 0.0 : max(_2977, 0.0));
                        float _2988 = (((_2938 * 3.1415927410125732421875) * (isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0)))) / ((_2960 * _2960) * ((_2868 * 2.1991131305694580078125) + 3.141590118408203125))) * _2852;
                        _2702 = (((((_2797 * 0.3183098733425140380859375) * _2895) * _2893) + _2797) * _2873) + _2754;
                        _2703 = (((((_2798 * 0.3183098733425140380859375) * _2895) * _2893) + _2798) * _2873) + _2755;
                        _2704 = (((((_2799 * 0.3183098733425140380859375) * _2895) * _2893) + _2799) * _2873) + _2756;
                        _2699 = (_2988 * _2813.x) + _2751;
                        _2700 = (_2988 * _2813.y) + _2752;
                        _2701 = (_2988 * _2813.z) + _2753;
                        if (_2758 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2751 = _2699;
                            _2752 = _2700;
                            _2753 = _2701;
                            _2754 = _2702;
                            _2755 = _2703;
                            _2756 = _2704;
                            _2757 = _2758;
                        }
                    }
                    frontier_phi_55_pred = _2704;
                    frontier_phi_55_pred_1 = _2703;
                    frontier_phi_55_pred_2 = _2702;
                    frontier_phi_55_pred_3 = _2700;
                    frontier_phi_55_pred_4 = _2699;
                    frontier_phi_55_pred_5 = _2701;
                }
                _2357 = frontier_phi_55_pred;
                _2355 = frontier_phi_55_pred_1;
                _2353 = frontier_phi_55_pred_2;
                _2349 = frontier_phi_55_pred_3;
                _2347 = frontier_phi_55_pred_4;
                _2351 = frontier_phi_55_pred_5;
                uint _2545 = _2544 + 1u;
                if (_2545 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2538 = _2347;
                    _2539 = _2349;
                    _2540 = _2351;
                    _2541 = _2353;
                    _2542 = _2355;
                    _2543 = _2357;
                    _2544 = _2545;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2346 = _2347;
            _2348 = _2349;
            _2350 = _2351;
            _2352 = _2353;
            _2354 = _2355;
            _2356 = _2357;
        }
        float _2361 = isnan(1.0) ? _834 : (isnan(_834) ? 1.0 : min(_834, 1.0));
        _2308 = (_2361 * _2352) + _2004;
        _2310 = (_2361 * _2354) + _2005;
        _2312 = (_2361 * _2356) + _2006;
        _2314 = ((_2346 * 0.039999999105930328369140625) * _2361) + _2170;
        _2316 = ((_2348 * 0.039999999105930328369140625) * _2361) + _2171;
        _2318 = ((_2350 * 0.039999999105930328369140625) * _2361) + _2172;
    }
    else
    {
        _2308 = _2004;
        _2310 = _2005;
        _2312 = _2006;
        _2314 = _2170;
        _2316 = _2171;
        _2318 = _2172;
    }
    float _2435;
    float _2436;
    float _2437;
    if (_761 > 0.0)
    {
        uint _2368 = _1894 + 4u;
        float _2374 = (-0.0) - _515;
        float _2375 = (-0.0) - _516;
        float _2376 = (-0.0) - _517;
        float _2377 = dot(vec3(cbLight._m0[_1894].xyz), vec3(_2374, _2375, _2376));
        float _3913 = isnan(0.0) ? _2377 : (isnan(_2377) ? 0.0 : max(_2377, 0.0));
        float _2381 = _845 + 1.0;
        float _2383 = (isnan(0.0) ? _2381 : (isnan(_2381) ? 0.0 : max(_2381, 0.0))) * 0.5;
        float _2388 = _2383 * _2383;
        float _2389 = _2388 * exp2(log2(isnan(1.0) ? _3913 : (isnan(_3913) ? 1.0 : min(_3913, 1.0))) * 32.0);
        float _2391 = _761 / (_761 + 1.0);
        float _2392 = isnan(_1903) ? 1.0 : (isnan(1.0) ? _1903 : min(1.0, _1903));
        uint _2405 = _1894 + 5u;
        float _2411 = dot(vec3(cbLight._m0[_1930].xyz), vec3(_2374, _2375, _2376));
        float _3934 = isnan(0.0) ? _2411 : (isnan(_2411) ? 0.0 : max(_2411, 0.0));
        float _2418 = _2388 * exp2(log2(isnan(1.0) ? _3934 : (isnan(_3934) ? 1.0 : min(_3934, 1.0))) * 32.0);
        float _2419 = isnan(_1904) ? 1.0 : (isnan(1.0) ? _1904 : min(1.0, _1904));
        _2435 = ((((_2418 * cbLight._m0[_2405].x) * _2391) * _2419) + ((((cbLight._m0[_2368].x * _1886) * _2389) * _2391) * _2392)) * 0.3183098733425140380859375;
        _2436 = ((((_2418 * cbLight._m0[_2405].y) * _2391) * _2419) + ((((cbLight._m0[_2368].y * _1887) * _2389) * _2391) * _2392)) * 0.3183098733425140380859375;
        _2437 = ((((_2418 * cbLight._m0[_2405].z) * _2391) * _2419) + ((((cbLight._m0[_2368].z * _1888) * _2389) * _2391) * _2392)) * 0.3183098733425140380859375;
    }
    else
    {
        _2435 = 0.0;
        _2436 = 0.0;
        _2437 = 0.0;
    }
    float _3950 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _3961 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _3972 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _3983 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _2452 = (isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0))) * ((_2308 + ((isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0))) * _834)) + _2435);
    float _2453 = (isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0))) * ((_2310 + ((isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0))) * _834)) + _2436);
    float _2454 = (isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0))) * ((_2312 + ((isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0))) * _834)) + _2437);
    float _2458 = 0.959999978542327880859375 - (exp2(log2(1.0 - _849) * 5.0) * 0.959999978542327880859375);
    float _2483 = _671 / cbSceneParam._m0[86u].x;
    float _2484 = _672 / cbSceneParam._m0[86u].y;
    vec4 _2498 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2483, _2484, (log2((isnan(cbSceneParam._m0[77u].w) ? _778 : (isnan(_778) ? cbSceneParam._m0[77u].w : min(_778, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2500 = _2498.x;
    float _2501 = _2498.y;
    float _2502 = _2498.z;
    float _2503 = _2498.w;
    float _2596;
    float _2598;
    float _2600;
    float _2602;
    if (_778 > cbSceneParam._m0[78u].w)
    {
        float _2559 = isnan(_778) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _778 : min(cbSceneParam._m0[80u].w, _778));
        float _2560 = _2559 / _778;
        float _2571 = _2560 * _297;
        float _2572 = _298 * _2560;
        float _2573 = (-0.0) - _2572;
        float _2574 = _2560 * _299;
        float _2576 = (cbSceneParam._m0[77u].w * _2573) / _2559;
        float _2577 = _2576 + cbSceneParam._m0[79u].w;
        float _2578 = cbSceneParam._m0[79u].w - _2572;
        float _2584 = sqrt(((_2571 * _2571) + (_2572 * _2572)) + (_2574 * _2574));
        float _2587 = (1.0 - (cbSceneParam._m0[77u].w / _2559)) * _2584;
        float _2592 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2594 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2993;
        if (abs((_2573 - _2576) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2993 = ((((_2577 > 0.0) ? exp2(_2592 * _2577) : (2.0 - exp2(_2594 * _2577))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2587;
        }
        else
        {
            float _2724 = 1.0 / cbSceneParam._m0[80u].x;
            float _2725 = isnan(_2578) ? _2577 : (isnan(_2577) ? _2578 : max(_2577, _2578));
            float _2726 = isnan(_2578) ? _2577 : (isnan(_2577) ? _2578 : min(_2577, _2578));
            float _2735 = isnan(0.0) ? _2725 : (isnan(_2725) ? 0.0 : min(_2725, 0.0));
            float _2736 = isnan(0.0) ? _2726 : (isnan(_2726) ? 0.0 : min(_2726, 0.0));
            _2993 = ((abs(_2584 / _2573) * cbSceneParam._m0[80u].y) * ((((_2735 - _2736) * 2.0) - ((exp2(_2592 * (isnan(0.0) ? _2725 : (isnan(_2725) ? 0.0 : max(_2725, 0.0)))) - exp2(_2592 * (isnan(0.0) ? _2726 : (isnan(_2726) ? 0.0 : max(_2726, 0.0))))) * _2724)) - ((exp2(_2594 * _2735) - exp2(_2594 * _2736)) * _2724))) + (_2587 * cbSceneParam._m0[80u].z);
        }
        vec4 _2995 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2483, _2484, 1.0), 0.0);
        float _3004 = exp2((_2993 * (-1.44269502162933349609375)) * (1.0 - _2995.w));
        float _3005 = log2(_3004);
        float _3021 = log2(_2503);
        _2596 = (exp2(_3021 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3005 * cbSceneParam._m0[78u].x)) * _2995.x) / cbSceneParam._m0[78u].x)) + _2500;
        _2598 = (exp2(_3021 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3005 * cbSceneParam._m0[78u].y)) * _2995.y) / cbSceneParam._m0[78u].y)) + _2501;
        _2600 = (exp2(_3021 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3005 * cbSceneParam._m0[78u].z)) * _2995.z) / cbSceneParam._m0[78u].z)) + _2502;
        _2602 = _3004 * _2503;
    }
    else
    {
        _2596 = _2500;
        _2598 = _2501;
        _2600 = _2502;
        _2602 = _2503;
    }
    bool _2614 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2615 = log2(_2602);
    float _2622 = exp2(_2615 * cbSceneParam._m0[78u].x) * ((_2452 + ((_2314 + ((isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0))) * _1645)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _695.x) * _2458) - _2452) * _741));
    float _2623 = exp2(_2615 * cbSceneParam._m0[78u].y) * ((_2453 + ((_2316 + ((isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0))) * _1645)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _695.y) * _2458) - _2453) * _741));
    float _2624 = exp2(_2615 * cbSceneParam._m0[78u].z) * ((_2454 + ((_2318 + ((isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0))) * _1645)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _695.z) * _2458) - _2454) * _741));
    vec4 _2632 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_671, _672));
    float _2634 = _2632.x;
    float _2655 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2634)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2634))) - _778) * cbMtdParam._m0[17u].y;
    float _4034 = isnan(0.0) ? _2655 : (isnan(_2655) ? 0.0 : max(_2655, 0.0));
    float _2657 = (cbInstanceData._m0[_305 + 6u].w * (isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0)))) * (isnan(1.0) ? _4034 : (isnan(_4034) ? 1.0 : min(_4034, 1.0)));
    float _2666 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2666 * (_2614 ? _2622 : (_2622 + (cbSceneParam._m0[72u].w * _2596)));
    SV_Target.y = _2666 * (_2614 ? _2623 : (_2623 + (cbSceneParam._m0[72u].w * _2598)));
    SV_Target.z = _2666 * (_2614 ? _2624 : (_2624 + (cbSceneParam._m0[72u].w * _2600)));
    SV_Target.w = _2657;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2657;
}


