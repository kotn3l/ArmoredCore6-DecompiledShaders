#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1250;
float _3476;
float _3477;
float _3478;
float _3479;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _210 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _211 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _212 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _218 = inversesqrt(dot(vec3(_210, _211, _212), vec3(_210, _211, _212)));
    float _219 = _218 * _210;
    float _220 = _218 * _211;
    float _221 = _218 * _212;
    float _225 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _226 = _225 * NORMAL.x;
    float _227 = _225 * NORMAL.y;
    float _228 = _225 * NORMAL.z;
    float _232 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _233 = _232 * TANGENT.x;
    float _234 = _232 * TANGENT.y;
    float _235 = _232 * TANGENT.z;
    float _240;
    float _241;
    float _242;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _240 = (-0.0) - _226;
        _241 = (-0.0) - _227;
        _242 = (-0.0) - _228;
    }
    else
    {
        _240 = _226;
        _241 = _227;
        _242 = _228;
    }
    float _289 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _299 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _289);
    float _300 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _289);
    float _301 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _289);
    uint _307 = uint(roundEven(NORMAL.w)) * 13u;
    uint _312 = _307 + 1u;
    uint _316 = _307 + 2u;
    float _325 = sqrt(((cbInstanceData._m0[_312].x * cbInstanceData._m0[_312].x) + (cbInstanceData._m0[_307].x * cbInstanceData._m0[_307].x)) + (cbInstanceData._m0[_316].x * cbInstanceData._m0[_316].x));
    float _326 = _325 * TEXCOORD.z;
    float _327 = _325 * TEXCOORD.w;
    vec4 _340 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _326) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _327) + cbTextureTilingScale._m0[8u].w));
    vec4 _367 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _375 = (_367.x * 2.0) + (-1.0);
    float _377 = (_367.y * 2.0) + (-1.0);
    float _378 = dot(vec2(_375, _377), vec2(_375, _377));
    float _3488 = isnan(0.0) ? _378 : (isnan(_378) ? 0.0 : max(_378, 0.0));
    float _384 = sqrt(1.0 - (isnan(1.0) ? _3488 : (isnan(_3488) ? 1.0 : min(_3488, 1.0))));
    float _387 = fma(_384, _240, fma(_377, _233, _375 * _219));
    float _390 = fma(_384, _241, fma(_377, _234, _375 * _220));
    float _393 = fma(_384, _242, fma(_377, _235, _375 * _221));
    float _397 = inversesqrt(dot(vec3(_387, _390, _393), vec3(_387, _390, _393)));
    float _398 = _397 * _387;
    float _399 = _397 * _390;
    float _428 = (cbMtdParam._m0[17u].w + dot(vec4(_398, _399, _397 * _393, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _326) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _327) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3499 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _429 = isnan(1.0) ? _3499 : (isnan(_3499) ? 1.0 : min(_3499, 1.0));
    vec4 _441 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _446 = _441.w;
    float _458 = dot(vec3(_299, _300, _301), vec3(_219, _220, _221));
    float _461 = dot(vec3(_299, _300, _301), vec3(_233, _234, _235));
    float _464 = dot(vec3(_299, _300, _301), vec3(_240, _241, _242));
    float _470 = inversesqrt(dot(vec3(_458, _461, _464), vec3(_458, _461, _464)));
    float _492 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _512 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_458 * cbMtdParam._m0[14u].x) * _470) * _492) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_461 * cbMtdParam._m0[14u].x) * _470) * _492) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _535 = inversesqrt(dot(vec3(_299, _300, _301), vec3(_299, _300, _301)));
    float _536 = _535 * _299;
    float _537 = _535 * _300;
    float _538 = _535 * _301;
    float _539 = dot(vec4(_536, _537, _538, 0.0), vec4(_240, _241, _242, 0.0));
    float _542 = _539 - cbMtdParam._m0[15u].z;
    float _3510 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _549 = exp2(log2(1.0 - (isnan(1.0) ? _3510 : (isnan(_3510) ? 1.0 : min(_3510, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _564 = ((((_441.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _512.x) * cbMtdParam._m0[9u].x) * ((_549 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _569 = ((((_441.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _512.y) * cbMtdParam._m0[9u].y) * ((_549 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _574 = ((((_441.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _512.z) * cbMtdParam._m0[9u].z) * ((_549 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _581 = (((_340.x * cbMtdParam._m0[10u].x) - _564) * _429) + _564;
    float _582 = (((_340.y * cbMtdParam._m0[10u].y) - _569) * _429) + _569;
    float _583 = (((_340.z * cbMtdParam._m0[10u].z) - _574) * _429) + _574;
    vec4 _595 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _326) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _327) + cbTextureTilingScale._m0[9u].w));
    float _602 = (_595.x * 2.0) + (-1.0);
    float _603 = (_595.y * 2.0) + (-1.0);
    float _604 = dot(vec2(_602, _603), vec2(_602, _603));
    float _3526 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _616 = (cbMtdParam._m0[16u].y + _367.z) + cbMtdParam._m0[17u].z;
    float _619 = ((_595.z - _616) * _429) + _616;
    float _629 = ((sqrt(1.0 - (isnan(1.0) ? _3526 : (isnan(_3526) ? 1.0 : min(_3526, 1.0)))) - _384) * _429) + _384;
    float _632 = (((_602 - _375) * _429) + _375) + (cbMtdParam._m0[14u].z * _375);
    float _633 = (((_603 - _377) * _429) + _377) + (cbMtdParam._m0[14u].z * _377);
    vec4 _645 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _649 = cbMtdParam._m0[16u].w * _645.x;
    float _651 = _649 - (_649 * _429);
    float _671 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _398));
    float _672 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _399));
    float _679 = isnan(cbInstanceData._m0[8u].x) ? _671 : (isnan(_671) ? cbInstanceData._m0[8u].x : max(_671, cbInstanceData._m0[8u].x));
    float _680 = isnan(cbInstanceData._m0[8u].y) ? _672 : (isnan(_672) ? cbInstanceData._m0[8u].y : max(_672, cbInstanceData._m0[8u].y));
    vec4 _684 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _679 : (isnan(_679) ? cbInstanceData._m0[8u].z : min(_679, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _680 : (isnan(_680) ? cbInstanceData._m0[8u].w : min(_680, cbInstanceData._m0[8u].w))));
    float _717 = _539 - cbMtdParam._m0[15u].x;
    float _3557 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _727 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3557 : (isnan(_3557) ? 1.0 : min(_3557, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3573 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
    float _728 = isnan(1.0) ? _3573 : (isnan(_3573) ? 1.0 : min(_3573, 1.0));
    float _730 = _728 - (_728 * _429);
    float _734 = fma(_629, _240, fma(_633, _233, _632 * _219));
    float _737 = fma(_629, _241, fma(_633, _234, _632 * _220));
    float _740 = fma(_629, _242, fma(_633, _235, _632 * _221));
    float _744 = inversesqrt(dot(vec3(_734, _737, _740), vec3(_734, _737, _740)));
    float _745 = _744 * _734;
    float _746 = _744 * _737;
    float _747 = _744 * _740;
    float _3584 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _748 = isnan(1.0) ? _3584 : (isnan(_3584) ? 1.0 : min(_3584, 1.0));
    float _3595 = isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0));
    float _749 = isnan(1.0) ? _3595 : (isnan(_3595) ? 1.0 : min(_3595, 1.0));
    float _750 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
    float _3611 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _3622 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
    float _3633 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    float _767 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _772 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _774 = _772.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _929 = sqrt(((_299 * _299) + (_300 * _300)) + (_301 * _301));
        float _935 = (cbMatDynParam._m0[5u].x * _929) + cbMatDynParam._m0[5u].y;
        float _3644 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
        float _936 = isnan(1.0) ? _3644 : (isnan(_3644) ? 1.0 : min(_3644, 1.0));
        float _940 = (cbMatDynParam._m0[5u].z * _929) + cbMatDynParam._m0[5u].w;
        float _3655 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3655 : (isnan(_3655) ? 1.0 : min(_3655, 1.0))) - _936)) + _936) < ((_774 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _784 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _785 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _803 = fma(_747, cbSceneParam._m0[5u].z, fma(_746, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _745));
    float _806 = fma(_747, cbSceneParam._m0[6u].z, fma(_746, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _745));
    float _809 = fma(_747, cbSceneParam._m0[7u].z, fma(_746, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _745));
    uint _822 = _307 + 9u;
    uint _823 = _822 + uint(cbMatDynParam._m0[0u].w);
    float _829 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3611 : (isnan(_3611) ? 1.0 : min(_3611, 1.0)))) * cbInstanceData._m0[_823].x;
    float _830 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3622 : (isnan(_3622) ? 1.0 : min(_3622, 1.0)))) * cbInstanceData._m0[_823].y;
    float _831 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3633 : (isnan(_3633) ? 1.0 : min(_3633, 1.0)))) * cbInstanceData._m0[_823].z;
    float _3666 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _832 = isnan(1.0) ? _3666 : (isnan(_3666) ? 1.0 : min(_3666, 1.0));
    float _3677 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
    float _833 = isnan(1.0) ? _3677 : (isnan(_3677) ? 1.0 : min(_3677, 1.0));
    float _3688 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _834 = isnan(1.0) ? _3688 : (isnan(_3688) ? 1.0 : min(_3688, 1.0));
    vec4 _842 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _784, cbSceneParam._m0[86u].y * _785));
    float _845 = _842.x * TEXCOORD_5.w;
    float _846 = dot(vec3(_745, _746, _747), vec3(_536, _537, _538));
    float _849 = _846 * 2.0;
    float _853 = (_849 * _745) - _536;
    float _854 = (_849 * _746) - _537;
    float _855 = (_849 * _747) - _538;
    float _856 = dot(vec3(_536, _537, _538), vec3(_745, _746, _747));
    float _859 = abs(_856);
    float _3699 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
    float _860 = isnan(1.0) ? _3699 : (isnan(_3699) ? 1.0 : min(_3699, 1.0));
    float _866 = sqrt(_749);
    float _878 = exp2((_866 * 5.0) * log2(1.0 - (_860 * 0.999000012874603271484375))) / (4.0 - (_866 * 3.0));
    float _910 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _914 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _918 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1249;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    float _1256;
    float _1257;
    float _1258;
    float _1259;
    float _1260;
    float _1261;
    float _1262;
    float _1263;
    float _1264;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _974 = fma(_918, cbModelParam._m0[26u].z, fma(_914, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _910));
        float _978 = fma(_918, cbModelParam._m0[27u].z, fma(_914, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _910));
        float _982 = fma(_918, cbModelParam._m0[28u].z, fma(_914, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _910));
        float _1007 = _910 + _745;
        float _1008 = _914 + _746;
        float _1009 = _918 + _747;
        float _1019 = fma(_1009, cbModelParam._m0[26u].z, fma(_1008, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1007)) - _974;
        float _1020 = fma(_1009, cbModelParam._m0[27u].z, fma(_1008, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1007)) - _978;
        float _1021 = fma(_1009, cbModelParam._m0[28u].z, fma(_1008, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1007)) - _982;
        float _1025 = inversesqrt(dot(vec3(_1019, _1020, _1021), vec3(_1019, _1020, _1021)));
        float _1038 = ((_1025 * _1019) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_974 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1039 = ((_1025 * _1020) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_978 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1040 = ((_1025 * _1021) / cbModelParam._m0[34u].z) + ((((((_982 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1043 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1038, _1039, _1040), 0.0);
        vec4 _1050 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1038, _1039, _1040), 0.0);
        vec4 _1057 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1038, _1039, _1040), 0.0);
        vec4 _1064 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1038, _1039, _1040), 0.0);
        float _1077 = exp2((_1043.w + (-0.5)) * 20.0) * 2.0;
        float _1078 = _1077 * (_1043.x + (-0.5));
        float _1079 = _1077 * (_1043.y + (-0.5));
        float _1080 = _1077 * (_1043.z + (-0.5));
        float _1087 = exp2((_1050.w + (-0.5)) * 20.0) * 2.0;
        float _1088 = _1087 * (_1050.x + (-0.5));
        float _1089 = _1087 * (_1050.y + (-0.5));
        float _1090 = _1087 * (_1050.z + (-0.5));
        float _1097 = exp2((_1057.w + (-0.5)) * 20.0) * 2.0;
        float _1098 = _1097 * (_1057.x + (-0.5));
        float _1099 = _1097 * (_1057.y + (-0.5));
        float _1100 = _1097 * (_1057.z + (-0.5));
        float _1107 = exp2((_1064.w + (-0.5)) * 20.0) * 2.0;
        float _1108 = _1107 * (_1064.x + (-0.5));
        float _1109 = _1107 * (_1064.y + (-0.5));
        float _1110 = _1107 * (_1064.z + (-0.5));
        float _1111 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1112 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1113 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
        float _1114 = _1078 * 0.5;
        float _1115 = _1088 * 0.5;
        float _1116 = _1098 * 0.5;
        float _1117 = dot(vec3(_1114, _1115, _1116), vec3(_1114, _1115, _1116));
        float _1122 = (_1117 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1117);
        float _1131 = (dot(vec3(_745, _746, _747), vec3(_1122 * _1114, _1122 * _1115, _1122 * _1116)) + 1.0) * 0.5;
        float _3725 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
        float _1141 = sqrt(((_1115 * _1115) + (_1114 * _1114)) + (_1116 * _1116)) / (_1111 + 9.9999997473787516355514526367188e-06);
        float _3736 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1142 = isnan(1.0) ? _3736 : (isnan(_3736) ? 1.0 : min(_3736, 1.0));
        float _1143 = _1142 * 2.0;
        float _1147 = (1.0 - _1142) / (_1142 + 1.0);
        float _3747 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
        float _1148 = isnan(1.0) ? _3747 : (isnan(_3747) ? 1.0 : min(_3747, 1.0));
        float _1157 = ((((1.0 - _1148) * (_1143 + 2.0)) * exp2(log2(isnan(1.0) ? _3725 : (isnan(_3725) ? 1.0 : min(_3725, 1.0))) * (_1143 + 1.0))) + _1148) * _1111;
        float _1158 = _1079 * 0.5;
        float _1159 = _1089 * 0.5;
        float _1160 = _1099 * 0.5;
        float _1161 = dot(vec3(_1158, _1159, _1160), vec3(_1158, _1159, _1160));
        float _1166 = (_1161 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1161);
        float _1174 = (dot(vec3(_745, _746, _747), vec3(_1166 * _1158, _1166 * _1159, _1166 * _1160)) + 1.0) * 0.5;
        float _3758 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
        float _1183 = sqrt(((_1159 * _1159) + (_1158 * _1158)) + (_1160 * _1160)) / (_1112 + 9.9999997473787516355514526367188e-06);
        float _3769 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1184 = isnan(1.0) ? _3769 : (isnan(_3769) ? 1.0 : min(_3769, 1.0));
        float _1185 = _1184 * 2.0;
        float _1189 = (1.0 - _1184) / (_1184 + 1.0);
        float _3780 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
        float _1190 = isnan(1.0) ? _3780 : (isnan(_3780) ? 1.0 : min(_3780, 1.0));
        float _1199 = ((((1.0 - _1190) * (_1185 + 2.0)) * exp2(log2(isnan(1.0) ? _3758 : (isnan(_3758) ? 1.0 : min(_3758, 1.0))) * (_1185 + 1.0))) + _1190) * _1112;
        float _1200 = _1080 * 0.5;
        float _1201 = _1090 * 0.5;
        float _1202 = _1100 * 0.5;
        float _1203 = dot(vec3(_1200, _1201, _1202), vec3(_1200, _1201, _1202));
        float _1208 = (_1203 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1203);
        float _1216 = (dot(vec3(_745, _746, _747), vec3(_1208 * _1200, _1208 * _1201, _1208 * _1202)) + 1.0) * 0.5;
        float _3791 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
        float _1225 = sqrt(((_1201 * _1201) + (_1200 * _1200)) + (_1202 * _1202)) / (_1113 + 9.9999997473787516355514526367188e-06);
        float _3802 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
        float _1226 = isnan(1.0) ? _3802 : (isnan(_3802) ? 1.0 : min(_3802, 1.0));
        float _1227 = _1226 * 2.0;
        float _1231 = (1.0 - _1226) / (_1226 + 1.0);
        float _3813 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
        float _1232 = isnan(1.0) ? _3813 : (isnan(_3813) ? 1.0 : min(_3813, 1.0));
        float _1241 = ((((1.0 - _1232) * (_1227 + 2.0)) * exp2(log2(isnan(1.0) ? _3791 : (isnan(_3791) ? 1.0 : min(_3791, 1.0))) * (_1227 + 1.0))) + _1232) * _1113;
        _1249 = _1080;
        _1251 = _1079;
        _1252 = _1078;
        _1253 = _1090;
        _1254 = _1089;
        _1255 = _1088;
        _1256 = _1100;
        _1257 = _1099;
        _1258 = _1098;
        _1259 = _1113;
        _1260 = _1112;
        _1261 = _1111;
        _1262 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0)));
        _1263 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0)));
        _1264 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0)));
    }
    else
    {
        _1249 = _1250;
        _1251 = _1250;
        _1252 = _1250;
        _1253 = _1250;
        _1254 = _1250;
        _1255 = _1250;
        _1256 = _1250;
        _1257 = _1250;
        _1258 = _1250;
        _1259 = _1250;
        _1260 = _1250;
        _1261 = _1250;
        _1262 = 0.0;
        _1263 = 0.0;
        _1264 = 0.0;
    }
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    float _1575;
    float _1576;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1293 = fma(_918, cbModelParam._m0[30u].z, fma(_914, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _910));
        float _1297 = fma(_918, cbModelParam._m0[31u].z, fma(_914, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _910));
        float _1301 = fma(_918, cbModelParam._m0[32u].z, fma(_914, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _910));
        float _1324 = _910 + _745;
        float _1325 = _914 + _746;
        float _1326 = _918 + _747;
        float _1336 = fma(_1326, cbModelParam._m0[30u].z, fma(_1325, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1324)) - _1293;
        float _1337 = fma(_1326, cbModelParam._m0[31u].z, fma(_1325, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1324)) - _1297;
        float _1338 = fma(_1326, cbModelParam._m0[32u].z, fma(_1325, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1324)) - _1301;
        float _1342 = inversesqrt(dot(vec3(_1336, _1337, _1338), vec3(_1336, _1337, _1338)));
        float _1355 = ((_1342 * _1336) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1293 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1356 = ((_1342 * _1337) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1297 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1357 = ((_1342 * _1338) / cbModelParam._m0[35u].z) + ((((((_1301 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1359 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1355, _1356, _1357), 0.0);
        vec4 _1366 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1355, _1356, _1357), 0.0);
        vec4 _1373 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1355, _1356, _1357), 0.0);
        vec4 _1380 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1355, _1356, _1357), 0.0);
        float _1392 = exp2((_1359.w + (-0.5)) * 20.0) * 2.0;
        float _1393 = _1392 * (_1359.x + (-0.5));
        float _1394 = _1392 * (_1359.y + (-0.5));
        float _1395 = _1392 * (_1359.z + (-0.5));
        float _1402 = exp2((_1366.w + (-0.5)) * 20.0) * 2.0;
        float _1403 = _1402 * (_1366.x + (-0.5));
        float _1404 = _1402 * (_1366.y + (-0.5));
        float _1405 = _1402 * (_1366.z + (-0.5));
        float _1412 = exp2((_1373.w + (-0.5)) * 20.0) * 2.0;
        float _1413 = _1412 * (_1373.x + (-0.5));
        float _1414 = _1412 * (_1373.y + (-0.5));
        float _1415 = _1412 * (_1373.z + (-0.5));
        float _1422 = exp2((_1380.w + (-0.5)) * 20.0) * 2.0;
        float _1423 = _1422 * (_1380.x + (-0.5));
        float _1424 = _1422 * (_1380.y + (-0.5));
        float _1425 = _1422 * (_1380.z + (-0.5));
        float _1426 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1427 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1428 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1429 = _1393 * 0.5;
        float _1430 = _1403 * 0.5;
        float _1431 = _1413 * 0.5;
        float _1432 = dot(vec3(_1429, _1430, _1431), vec3(_1429, _1430, _1431));
        float _1437 = (_1432 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1432);
        float _1445 = (dot(vec3(_745, _746, _747), vec3(_1437 * _1429, _1437 * _1430, _1437 * _1431)) + 1.0) * 0.5;
        float _3854 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1454 = sqrt(((_1430 * _1430) + (_1429 * _1429)) + (_1431 * _1431)) / (_1426 + 9.9999997473787516355514526367188e-06);
        float _3865 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1455 = isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0));
        float _1456 = _1455 * 2.0;
        float _1460 = (1.0 - _1455) / (_1455 + 1.0);
        float _3876 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1461 = isnan(1.0) ? _3876 : (isnan(_3876) ? 1.0 : min(_3876, 1.0));
        float _1470 = ((((1.0 - _1461) * (_1456 + 2.0)) * exp2(log2(isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0))) * (_1456 + 1.0))) + _1461) * _1426;
        float _1471 = _1394 * 0.5;
        float _1472 = _1404 * 0.5;
        float _1473 = _1414 * 0.5;
        float _1474 = dot(vec3(_1471, _1472, _1473), vec3(_1471, _1472, _1473));
        float _1479 = (_1474 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1474);
        float _1487 = (dot(vec3(_745, _746, _747), vec3(_1479 * _1471, _1479 * _1472, _1479 * _1473)) + 1.0) * 0.5;
        float _3887 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1496 = sqrt(((_1472 * _1472) + (_1471 * _1471)) + (_1473 * _1473)) / (_1427 + 9.9999997473787516355514526367188e-06);
        float _3898 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1497 = isnan(1.0) ? _3898 : (isnan(_3898) ? 1.0 : min(_3898, 1.0));
        float _1498 = _1497 * 2.0;
        float _1502 = (1.0 - _1497) / (_1497 + 1.0);
        float _3909 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1503 = isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0));
        float _1512 = ((((1.0 - _1503) * (_1498 + 2.0)) * exp2(log2(isnan(1.0) ? _3887 : (isnan(_3887) ? 1.0 : min(_3887, 1.0))) * (_1498 + 1.0))) + _1503) * _1427;
        float _1513 = _1395 * 0.5;
        float _1514 = _1405 * 0.5;
        float _1515 = _1415 * 0.5;
        float _1516 = dot(vec3(_1513, _1514, _1515), vec3(_1513, _1514, _1515));
        float _1521 = (_1516 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1516);
        float _1529 = (dot(vec3(_745, _746, _747), vec3(_1521 * _1513, _1521 * _1514, _1521 * _1515)) + 1.0) * 0.5;
        float _3920 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1538 = sqrt(((_1514 * _1514) + (_1513 * _1513)) + (_1515 * _1515)) / (_1428 + 9.9999997473787516355514526367188e-06);
        float _3931 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1539 = isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0));
        float _1540 = _1539 * 2.0;
        float _1544 = (1.0 - _1539) / (_1539 + 1.0);
        float _3942 = isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0));
        float _1545 = isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0));
        float _1554 = ((((1.0 - _1545) * (_1540 + 2.0)) * exp2(log2(isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0))) * (_1540 + 1.0))) + _1545) * _1428;
        _1562 = _1395;
        _1563 = _1394;
        _1564 = _1393;
        _1565 = _1405;
        _1566 = _1404;
        _1567 = _1403;
        _1568 = _1415;
        _1569 = _1414;
        _1570 = _1413;
        _1571 = _1428;
        _1572 = _1427;
        _1573 = _1426;
        _1574 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0)));
        _1575 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0)));
        _1576 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0)));
    }
    else
    {
        _1562 = _1250;
        _1563 = _1250;
        _1564 = _1250;
        _1565 = _1250;
        _1566 = _1250;
        _1567 = _1250;
        _1568 = _1250;
        _1569 = _1250;
        _1570 = _1250;
        _1571 = _1250;
        _1572 = _1250;
        _1573 = _1250;
        _1574 = 0.0;
        _1575 = 0.0;
        _1576 = 0.0;
    }
    float _1586 = (cbModelParam._m0[1u].x * (_1574 - _1262)) + _1262;
    float _1587 = (cbModelParam._m0[1u].x * (_1575 - _1263)) + _1263;
    float _1588 = (cbModelParam._m0[1u].x * (_1576 - _1264)) + _1264;
    float _1609 = fma(_1588, cbSceneParam._m0[89u].z, fma(_1587, cbSceneParam._m0[89u].y, _1586 * cbSceneParam._m0[89u].x));
    float _1612 = fma(_1588, cbSceneParam._m0[90u].z, fma(_1587, cbSceneParam._m0[90u].y, _1586 * cbSceneParam._m0[90u].x));
    float _1615 = fma(_1588, cbSceneParam._m0[91u].z, fma(_1587, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1586));
    float _1630 = _853 * 0.5;
    float _1631 = _854 * 0.5;
    float _1632 = _855 * 0.5;
    float _1633 = dot(vec4(_1630, _1631, _1632, 1.0), vec4(_1564, _1567, _1570, _1573));
    float _1636 = dot(vec4(_1630, _1631, _1632, 1.0), vec4(_1563, _1566, _1569, _1572));
    float _1639 = dot(vec4(_1630, _1631, _1632, 1.0), vec4(_1562, _1565, _1568, _1571));
    float _1673;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1646 = dot(vec4(_1630, _1631, _1632, 1.0), vec4(_1249, _1253, _1256, _1259));
        float _1650 = dot(vec4(_1630, _1631, _1632, 1.0), vec4(_1251, _1254, _1257, _1260));
        float _1654 = dot(vec4(_1630, _1631, _1632, 1.0), vec4(_1252, _1255, _1258, _1261));
        float _1661 = dot(vec4(cbModelParam._m0[39u]), vec4(_1630, _1631, _1632, 1.0));
        _1673 = dot(vec3(isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0)), isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0)), isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1661) ? 0.0 : (isnan(0.0) ? _1661 : max(0.0, _1661))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1673 = 1.0;
    }
    float _1684;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1675 = dot(vec4(cbModelParam._m0[40u]), vec4(_1630, _1631, _1632, 1.0));
        _1684 = dot(vec3(isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0)), isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0)), isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1675) ? 0.0 : (isnan(0.0) ? _1675 : max(0.0, _1675))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1684 = 1.0;
    }
    float _1688 = (_1684 * cbModelParam._m0[1u].x) + (_1673 * (1.0 - cbModelParam._m0[1u].x));
    float _1698 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _749);
    float _1699 = isnan(_1698) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1698 : min(cbModelParam._m0[25u].z, _1698));
    float _1779;
    float _1781;
    float _1783;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1746 = fma(_918, cbModelParam._m0[13u].z, fma(_914, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _910)) + cbModelParam._m0[13u].w;
        float _1750 = fma(_918, cbModelParam._m0[14u].z, fma(_914, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _910)) + cbModelParam._m0[14u].w;
        float _1754 = fma(_918, cbModelParam._m0[15u].z, fma(_914, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _910)) + cbModelParam._m0[15u].w;
        float _1757 = fma(_855, cbModelParam._m0[13u].z, fma(_854, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _853));
        float _1760 = fma(_855, cbModelParam._m0[14u].z, fma(_854, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _853));
        float _1763 = fma(_855, cbModelParam._m0[15u].z, fma(_854, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _853));
        float _1791;
        if (_1757 > 0.0)
        {
            _1791 = abs((1.0 - _1746) / _1757);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1757 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1746 + 1.0) / _1757);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1791 = frontier_phi_19_17_ladder;
        }
        float _1962;
        if (_1760 > 0.0)
        {
            _1962 = abs((1.0 - _1750) / _1760);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1760 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1750 + 1.0) / _1760);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1962 = frontier_phi_28_24_ladder;
        }
        float _2226;
        if (_1763 > 0.0)
        {
            _2226 = abs((1.0 - _1754) / _1763);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1763 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1754 + 1.0) / _1763);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2226 = frontier_phi_40_35_ladder;
        }
        float _2228 = isnan(_1962) ? _1791 : (isnan(_1791) ? _1962 : min(_1791, _1962));
        float _2229 = isnan(_2226) ? _2228 : (isnan(_2228) ? _2226 : min(_2228, _2226));
        float _2233 = (_2229 * _1757) + _1746;
        float _2234 = (_2229 * _1760) + _1750;
        float _2235 = (_2229 * _1763) + _1754;
        float _2236 = _2229 * 9.9999997473787516355514526367188e-05;
        float _2238 = (-1.0) - _2236;
        float _2240 = _2236 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2235 > _2240) || ((_2235 < _2238) || ((_2234 > _2240) || ((_2234 < _2238) || ((_2233 < _2238) || (_2233 > _2240))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2389 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2235, cbModelParam._m0[9u].z, fma(_2234, cbModelParam._m0[9u].y, _2233 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2235, cbModelParam._m0[10u].z, fma(_2234, cbModelParam._m0[10u].y, _2233 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2235, cbModelParam._m0[11u].z, fma(_2234, cbModelParam._m0[11u].y, _2233 * cbModelParam._m0[11u].x))), _1699);
            frontier_phi_18_40_ladder = _2389.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2389.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2389.x * cbModelParam._m0[1u].y;
        }
        _1779 = frontier_phi_18_40_ladder_2;
        _1781 = frontier_phi_18_40_ladder_1;
        _1783 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1767 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_853, _854, _855), _1699);
        _1779 = _1767.x * cbModelParam._m0[1u].y;
        _1781 = _1767.y * cbModelParam._m0[1u].y;
        _1783 = _1767.z * cbModelParam._m0[1u].y;
    }
    float _1787 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _749);
    float _1788 = isnan(_1787) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1787 : min(cbModelParam._m0[25u].w, _1787));
    float _1879;
    float _1881;
    float _1883;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1843 = fma(_918, cbModelParam._m0[21u].z, fma(_914, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _910)) + cbModelParam._m0[21u].w;
        float _1847 = fma(_918, cbModelParam._m0[22u].z, fma(_914, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _910)) + cbModelParam._m0[22u].w;
        float _1851 = fma(_918, cbModelParam._m0[23u].z, fma(_914, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _910)) + cbModelParam._m0[23u].w;
        float _1854 = fma(_855, cbModelParam._m0[21u].z, fma(_854, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _853));
        float _1857 = fma(_855, cbModelParam._m0[22u].z, fma(_854, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _853));
        float _1860 = fma(_855, cbModelParam._m0[23u].z, fma(_854, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _853));
        float _1967;
        if (_1854 > 0.0)
        {
            _1967 = abs((1.0 - _1843) / _1854);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1854 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1843 + 1.0) / _1854);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1967 = frontier_phi_30_26_ladder;
        }
        float _2253;
        if (_1857 > 0.0)
        {
            _2253 = abs((1.0 - _1847) / _1857);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1857 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1847 + 1.0) / _1857);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2253 = frontier_phi_42_37_ladder;
        }
        float _2572;
        if (_1860 > 0.0)
        {
            _2572 = abs((1.0 - _1851) / _1860);
        }
        else
        {
            float frontier_phi_51_49_ladder;
            if (_1860 < 0.0)
            {
                frontier_phi_51_49_ladder = abs((_1851 + 1.0) / _1860);
            }
            else
            {
                frontier_phi_51_49_ladder = 5000.0;
            }
            _2572 = frontier_phi_51_49_ladder;
        }
        float _2574 = isnan(_2253) ? _1967 : (isnan(_1967) ? _2253 : min(_1967, _2253));
        float _2575 = isnan(_2572) ? _2574 : (isnan(_2574) ? _2572 : min(_2574, _2572));
        float _2579 = (_2575 * _1854) + _1843;
        float _2580 = (_2575 * _1857) + _1847;
        float _2581 = (_2575 * _1860) + _1851;
        float _2582 = _2575 * 9.9999997473787516355514526367188e-05;
        float _2583 = (-1.0) - _2582;
        float _2585 = _2582 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_2581 > _2585) || ((_2581 < _2583) || ((_2580 > _2585) || ((_2580 < _2583) || ((_2579 < _2583) || (_2579 > _2585))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2682 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2581, cbModelParam._m0[17u].z, fma(_2580, cbModelParam._m0[17u].y, _2579 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2581, cbModelParam._m0[18u].z, fma(_2580, cbModelParam._m0[18u].y, _2579 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2581, cbModelParam._m0[19u].z, fma(_2580, cbModelParam._m0[19u].y, _2579 * cbModelParam._m0[19u].x))), _1788);
            frontier_phi_27_51_ladder = _2682.x * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _2682.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _2682.y * cbModelParam._m0[1u].z;
        }
        _1879 = frontier_phi_27_51_ladder;
        _1881 = frontier_phi_27_51_ladder_2;
        _1883 = frontier_phi_27_51_ladder_1;
    }
    else
    {
        vec4 _1863 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_853, _854, _855), _1788);
        _1879 = _1863.x * cbModelParam._m0[1u].z;
        _1881 = _1863.y * cbModelParam._m0[1u].z;
        _1883 = _1863.z * cbModelParam._m0[1u].z;
    }
    float _1895 = ((((1.0 - _878) * ((_866 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_878 * _866)) * _845;
    float _1896 = _1895 * ((cbModelParam._m0[1u].w * (_1879 - _1779)) + _1779);
    float _1897 = _1895 * ((cbModelParam._m0[1u].w * (_1881 - _1781)) + _1781);
    float _1898 = _1895 * ((cbModelParam._m0[1u].w * (_1883 - _1783)) + _1783);
    float _1901 = fma(_1898, cbSceneParam._m0[89u].z, fma(_1897, cbSceneParam._m0[89u].y, _1896 * cbSceneParam._m0[89u].x));
    float _1904 = fma(_1898, cbSceneParam._m0[90u].z, fma(_1897, cbSceneParam._m0[90u].y, _1896 * cbSceneParam._m0[90u].x));
    float _1907 = fma(_1898, cbSceneParam._m0[91u].z, fma(_1897, cbSceneParam._m0[91u].y, _1896 * cbSceneParam._m0[91u].x));
    float _1941 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1945 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1949 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1953 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1954 = _1941 / _1953;
    float _1955 = _1945 / _1953;
    float _1956 = _1949 / _1953;
    float _2103;
    float _2104;
    float _2105;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1983 = ((uint(_1956 > cbSceneParam._m0[59u].y) + uint(_1956 > cbSceneParam._m0[59u].x)) + uint(_1956 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1984 = _1983 + 43u;
        uint _1992 = _1983 + 44u;
        uint _2000 = _1983 + 45u;
        uint _2008 = _1983 + 46u;
        float _2019 = fma(_1953, cbSceneParam._m0[_1984].w, fma(_1949, cbSceneParam._m0[_1984].z, fma(_1945, cbSceneParam._m0[_1984].y, _1941 * cbSceneParam._m0[_1984].x)));
        float _2023 = fma(_1953, cbSceneParam._m0[_1992].w, fma(_1949, cbSceneParam._m0[_1992].z, fma(_1945, cbSceneParam._m0[_1992].y, _1941 * cbSceneParam._m0[_1992].x)));
        float _2031 = fma(_1953, cbSceneParam._m0[_2008].w, fma(_1949, cbSceneParam._m0[_2008].z, fma(_1945, cbSceneParam._m0[_2008].y, _1941 * cbSceneParam._m0[_2008].x)));
        float _2036 = cbSceneParam._m0[33u].z * _2031;
        float _2038 = cbSceneParam._m0[33u].w * _2031;
        float _2041 = fma(_1953, cbSceneParam._m0[_2000].w, fma(_1949, cbSceneParam._m0[_2000].z, fma(_1945, cbSceneParam._m0[_2000].y, _1941 * cbSceneParam._m0[_2000].x))) / _2031;
        float _2089 = (cbSceneParam._m0[33u].x - sqrt(((_1955 * _1955) + (_1954 * _1954)) + (_1956 * _1956))) * cbSceneParam._m0[33u].y;
        float _4068 = isnan(0.0) ? _2089 : (isnan(_2089) ? 0.0 : max(_2089, 0.0));
        float _2096 = (isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2036 + _2019) / _2031, (_2038 + _2023) / _2031), _2041), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2038 + _2019) / _2031, (_2023 - _2036) / _2031), _2041), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2019 - _2036) / _2031, (_2023 - _2038) / _2031), _2041), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2019 - _2038) / _2031, (_2036 + _2023) / _2031), _2041), 0.0)).x), vec4(0.25)));
        _2103 = 1.0 - (_2096 * cbSceneParam._m0[34u].x);
        _2104 = 1.0 - (_2096 * cbSceneParam._m0[34u].y);
        _2105 = 1.0 - (_2096 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2103 = 1.0;
        _2104 = 1.0;
        _2105 = 1.0;
    }
    float _2169;
    float _2171;
    float _2173;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2157 = fma(_1953, cbSceneParam._m0[63u].w, fma(_1949, cbSceneParam._m0[63u].z, fma(_1945, cbSceneParam._m0[63u].y, _1941 * cbSceneParam._m0[63u].x)));
        float _2158 = fma(_1953, cbSceneParam._m0[60u].w, fma(_1949, cbSceneParam._m0[60u].z, fma(_1945, cbSceneParam._m0[60u].y, _1941 * cbSceneParam._m0[60u].x))) / _2157;
        float _2159 = fma(_1953, cbSceneParam._m0[61u].w, fma(_1949, cbSceneParam._m0[61u].z, fma(_1945, cbSceneParam._m0[61u].y, _1941 * cbSceneParam._m0[61u].x))) / _2157;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2158 >= cbSceneParam._m0[64u].x) && (_2159 >= cbSceneParam._m0[64u].y)) && (_2158 <= cbSceneParam._m0[64u].z)) && (_2159 <= cbSceneParam._m0[64u].w))
        {
            float _2266 = fma(_1953, cbSceneParam._m0[62u].w, fma(_1949, cbSceneParam._m0[62u].z, fma(_1945, cbSceneParam._m0[62u].y, _1941 * cbSceneParam._m0[62u].x))) / _2157;
            float _2270 = isnan(cbSceneParam._m0[41u].w) ? _2266 : (isnan(_2266) ? cbSceneParam._m0[41u].w : max(_2266, cbSceneParam._m0[41u].w));
            float _2313 = (cbSceneParam._m0[33u].x - sqrt(((_1955 * _1955) + (_1954 * _1954)) + (_1956 * _1956))) * cbSceneParam._m0[33u].y;
            float _4084 = isnan(0.0) ? _2313 : (isnan(_2313) ? 0.0 : max(_2313, 0.0));
            float _2320 = (isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2158, cbSceneParam._m0[33u].w + _2159), _2270), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2158, _2159 - cbSceneParam._m0[33u].z), _2270), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2158 - cbSceneParam._m0[33u].z, _2159 - cbSceneParam._m0[33u].w), _2270), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2158 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2159), _2270), 0.0)).x), vec4(0.25)));
            float _2324 = 1.0 - (_2320 * cbSceneParam._m0[34u].x);
            float _2325 = 1.0 - (_2320 * cbSceneParam._m0[34u].y);
            float _2326 = 1.0 - (_2320 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2326) ? _2105 : (isnan(_2105) ? _2326 : min(_2105, _2326));
            frontier_phi_39_38_ladder_1 = isnan(_2325) ? _2104 : (isnan(_2104) ? _2325 : min(_2104, _2325));
            frontier_phi_39_38_ladder_2 = isnan(_2324) ? _2103 : (isnan(_2103) ? _2324 : min(_2103, _2324));
        }
        else
        {
            frontier_phi_39_38_ladder = _2105;
            frontier_phi_39_38_ladder_1 = _2104;
            frontier_phi_39_38_ladder_2 = _2103;
        }
        _2169 = frontier_phi_39_38_ladder_2;
        _2171 = frontier_phi_39_38_ladder_1;
        _2173 = frontier_phi_39_38_ladder;
    }
    else
    {
        _2169 = _2103;
        _2171 = _2104;
        _2173 = _2105;
    }
    uvec4 _2178 = floatBitsToUint(cbInstanceData._m0[_307 + 5u]);
    uint _2180 = _2178.x * 14u;
    uint _2181 = _2180 + 13u;
    float _2186 = _845 + (-1.0);
    float _2189 = (cbLight._m0[_2181].x * _2186) + 1.0;
    float _2190 = (cbLight._m0[_2181].y * _2186) + 1.0;
    uint _2192 = _2180 + 4u;
    float _2203 = dot(vec3(cbLight._m0[_2180].xyz), vec3(_745, _746, _747));
    float _2206 = isnan(1.0) ? _2189 : (isnan(_2189) ? 1.0 : min(_2189, 1.0));
    float _2207 = cbLight._m0[_2192].x * _2169;
    float _2208 = cbLight._m0[_2192].y * _2171;
    float _2209 = cbLight._m0[_2192].z * _2173;
    uint _2210 = _2180 + 5u;
    uint _2216 = _2180 | 1u;
    float _2222 = dot(vec3(cbLight._m0[_2216].xyz), vec3(_745, _746, _747));
    float _2225 = isnan(1.0) ? _2190 : (isnan(_2190) ? 1.0 : min(_2190, 1.0));
    float _2398;
    float _2399;
    float _2400;
    if (_750 == 0.0)
    {
        float _4120 = isnan(0.0) ? _2203 : (isnan(_2203) ? 0.0 : max(_2203, 0.0));
        float _4131 = isnan(0.0) ? _2222 : (isnan(_2222) ? 0.0 : max(_2222, 0.0));
        float _2335 = (isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0))) * 0.3183098733425140380859375;
        float _2337 = (isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0))) * 0.3183098733425140380859375;
        _2398 = ((cbLight._m0[_2210].x * _2225) * _2337) + ((_2207 * _2206) * _2335);
        _2399 = ((_2225 * cbLight._m0[_2210].y) * _2337) + ((_2208 * _2206) * _2335);
        _2400 = ((_2225 * cbLight._m0[_2210].z) * _2337) + ((_2209 * _2206) * _2335);
    }
    else
    {
        float _2347 = _2203 + _750;
        float _2350 = (_750 * 2.0) + 1.0;
        float _2351 = (isnan(0.0) ? _2347 : (isnan(_2347) ? 0.0 : max(_2347, 0.0))) / _2350;
        float _2358 = _2222 + _750;
        float _2360 = (isnan(0.0) ? _2358 : (isnan(_2358) ? 0.0 : max(_2358, 0.0))) / _2350;
        _2398 = (((_2360 * cbLight._m0[_2210].x) * _2225) + ((_2207 * _2351) * _2206)) * 0.3183098733425140380859375;
        _2399 = (((_2360 * cbLight._m0[_2210].y) * _2225) + ((_2208 * _2351) * _2206)) * 0.3183098733425140380859375;
        _2400 = (((_2360 * cbLight._m0[_2210].z) * _2225) + ((_2209 * _2351) * _2206)) * 0.3183098733425140380859375;
    }
    uint _2404 = _2180 + 8u;
    float _2420 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2180].w)) * _749) * 0.949999988079071044921875);
    float _2421 = _2420 * _2420;
    float _2422 = cbLight._m0[_2180].x + _536;
    float _2423 = cbLight._m0[_2180].y + _537;
    float _2424 = cbLight._m0[_2180].z + _538;
    float _2428 = inversesqrt(dot(vec3(_2422, _2423, _2424), vec3(_2422, _2423, _2424)));
    float _2429 = _2428 * _2422;
    float _2430 = _2428 * _2423;
    float _2431 = _2428 * _2424;
    float _2432 = dot(vec3(_745, _746, _747), vec3(cbLight._m0[_2180].xyz));
    float _4152 = isnan(0.0) ? _2432 : (isnan(_2432) ? 0.0 : max(_2432, 0.0));
    float _2435 = isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0));
    float _4163 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _2436 = isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0));
    float _2437 = dot(vec3(_745, _746, _747), vec3(_2429, _2430, _2431));
    float _4174 = isnan(0.0) ? _2437 : (isnan(_2437) ? 0.0 : max(_2437, 0.0));
    float _2440 = isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0));
    float _2441 = dot(vec3(cbLight._m0[_2180].xyz), vec3(_2429, _2430, _2431));
    float _4185 = isnan(0.0) ? _2441 : (isnan(_2441) ? 0.0 : max(_2441, 0.0));
    float _2445 = _2421 * _2421;
    float _2449 = ((_2440 * _2440) * (_2445 + (-1.0))) + 1.0;
    float _2460 = (exp2(log2(1.0 - (isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2461 = 1.0 - _2421;
    float _2472 = (0.5 / (((_2436 * ((_2435 * _2461) + _2421)) + 9.9999999392252902907785028219223e-09) + (((_2436 * _2461) + _2421) * _2435))) * _2435;
    float _4196 = isnan(0.0) ? _2472 : (isnan(_2472) ? 0.0 : max(_2472, 0.0));
    float _2474 = (isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0))) * (_2445 / ((_2449 * _2449) * 3.141590118408203125));
    uint _2490 = _2180 + 9u;
    float _2504 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2216].w)) * _749) * 0.949999988079071044921875);
    float _2505 = _2504 * _2504;
    float _2506 = cbLight._m0[_2216].x + _536;
    float _2507 = cbLight._m0[_2216].y + _537;
    float _2508 = cbLight._m0[_2216].z + _538;
    float _2512 = inversesqrt(dot(vec3(_2506, _2507, _2508), vec3(_2506, _2507, _2508)));
    float _2513 = _2512 * _2506;
    float _2514 = _2512 * _2507;
    float _2515 = _2512 * _2508;
    float _2516 = dot(vec3(_745, _746, _747), vec3(cbLight._m0[_2216].xyz));
    float _4207 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
    float _2519 = isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0));
    float _2520 = dot(vec3(_745, _746, _747), vec3(_2513, _2514, _2515));
    float _4218 = isnan(0.0) ? _2520 : (isnan(_2520) ? 0.0 : max(_2520, 0.0));
    float _2523 = isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0));
    float _2524 = dot(vec3(cbLight._m0[_2216].xyz), vec3(_2513, _2514, _2515));
    float _4229 = isnan(0.0) ? _2524 : (isnan(_2524) ? 0.0 : max(_2524, 0.0));
    float _2528 = _2505 * _2505;
    float _2532 = ((_2523 * _2523) * (_2528 + (-1.0))) + 1.0;
    float _2541 = (exp2(log2(1.0 - (isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2542 = 1.0 - _2505;
    float _2552 = (0.5 / (((_2436 * ((_2519 * _2542) + _2505)) + 9.9999999392252902907785028219223e-09) + (((_2436 * _2542) + _2505) * _2519))) * _2519;
    float _4240 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
    float _2554 = (isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0))) * (_2528 / ((_2532 * _2532) * 3.141590118408203125));
    float _2564 = (((_2541 * cbLight._m0[_2490].x) * _2554) * _2225) + ((((cbLight._m0[_2404].x * _2169) * _2460) * _2474) * _2206);
    float _2565 = (((_2541 * cbLight._m0[_2490].y) * _2554) * _2225) + ((((cbLight._m0[_2404].y * _2171) * _2460) * _2474) * _2206);
    float _2566 = (((_2541 * cbLight._m0[_2490].z) * _2554) * _2225) + ((((cbLight._m0[_2404].z * _2173) * _2460) * _2474) * _2206);
    float _2653;
    float _2655;
    float _2657;
    float _2659;
    float _2661;
    float _2663;
    if (_2178.y == 0u)
    {
        uvec4 _2609 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2610 = _2609.x;
        uint _2621 = uint((float(_2609.y) * floor(float(uint(cbSceneParam._m0[85u].y * _785) / _2610))) + floor(float(uint(cbSceneParam._m0[85u].x * _784) / _2610)));
        float _2631 = (log2(_1956 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2632 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
        uint _2635 = uint(isnan(14.0) ? _2632 : (isnan(_2632) ? 14.0 : min(_2632, 14.0)));
        uint _2642 = _2609.z;
        float _2687;
        float _2689;
        float _2691;
        float _2693;
        float _2695;
        float _2697;
        if (((((1u << ((_2642 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2635 << 2u) + (_2621 << 6u)) >> 2u)).x) == 0u) || ((_2642 & 240u) == 0u))
        {
            _2687 = 0.0;
            _2689 = 0.0;
            _2691 = 0.0;
            _2693 = 0.0;
            _2695 = 0.0;
            _2697 = 0.0;
        }
        else
        {
            float _2688;
            float _2690;
            float _2692;
            float _2694;
            float _2696;
            float _2698;
            float _2853 = 0.0;
            float _2854 = 0.0;
            float _2855 = 0.0;
            float _2856 = 0.0;
            float _2857 = 0.0;
            float _2858 = 0.0;
            uint _2859 = 0u;
            uint _2868;
            bool _2869;
            for (;;)
            {
                _2868 = texelFetch(g_lightClassification, int((((_2635 << 5u) + (_2621 << 9u)) + (_2859 << 2u)) >> 2u)).x;
                _2869 = _2868 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2869)
                {
                    frontier_phi_63_pred = _2855;
                    frontier_phi_63_pred_1 = _2858;
                    frontier_phi_63_pred_2 = _2857;
                    frontier_phi_63_pred_3 = _2856;
                    frontier_phi_63_pred_4 = _2854;
                    frontier_phi_63_pred_5 = _2853;
                }
                else
                {
                    float _3069;
                    float _3070;
                    float _3071;
                    float _3072;
                    float _3073;
                    float _3074;
                    uint _3075;
                    _3069 = _2853;
                    _3070 = _2854;
                    _3071 = _2855;
                    _3072 = _2856;
                    _3073 = _2857;
                    _3074 = _2858;
                    _3075 = _2868;
                    float _3001;
                    float _3002;
                    float _3003;
                    float _3004;
                    float _3005;
                    float _3006;
                    for (;;)
                    {
                        uint _3079 = uint(findLSB(_3075)) + (_2859 << 5u);
                        uint _3076 = (_3075 + 4294967295u) & _3075;
                        uint _3081 = _3079 * 48u;
                        vec4 _3095 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3081)).x, texelFetch(g_PointLightRenderingBuffer, int(_3081 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3081 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3081 + 3u)).x));
                        uint _3101 = (_3079 * 48u) + 4u;
                        vec4 _3114 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3101)).x, texelFetch(g_PointLightRenderingBuffer, int(_3101 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3101 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3101 + 3u)).x));
                        float _3115 = _3114.x;
                        float _3116 = _3114.y;
                        float _3117 = _3114.z;
                        uint _3120 = (_3079 * 48u) + 8u;
                        vec3 _3131 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3120)).x, texelFetch(g_PointLightRenderingBuffer, int(_3120 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3120 + 2u)).x));
                        uint _3136 = (_3079 * 48u) + 12u;
                        vec2 _3144 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_3136)).x, texelFetch(g_PointLightRenderingBuffer, int(_3136 + 1u)).x));
                        float _3150 = inversesqrt(dot(vec3(_1954, _1955, _1956), vec3(_1954, _1955, _1956)));
                        float _3151 = _3150 * _1954;
                        float _3152 = _3150 * _1955;
                        float _3153 = _3150 * _1956;
                        float _3154 = _3095.x - _1954;
                        float _3155 = _3095.y - _1955;
                        float _3156 = _3095.z - _1956;
                        float _3157 = dot(vec3(_3154, _3155, _3156), vec3(_3154, _3155, _3156));
                        float _3160 = inversesqrt(_3157);
                        float _3161 = _3160 * _3154;
                        float _3162 = _3160 * _3155;
                        float _3163 = _3160 * _3156;
                        float _3164 = dot(vec3(_803, _806, _809), vec3(_3161, _3162, _3163));
                        float _3169 = 1.0 - (_3157 * _3095.w);
                        float _4261 = isnan(0.0) ? _3169 : (isnan(_3169) ? 0.0 : max(_3169, 0.0));
                        float _3170 = isnan(1.0) ? _4261 : (isnan(_4261) ? 1.0 : min(_4261, 1.0));
                        float _3171 = sqrt(_3157) * _3114.w;
                        float _3174 = 1.39999997615814208984375 / (_3171 + 1.39999997615814208984375);
                        float _3175 = _3174 * _3174;
                        float _3176 = 1.0 - _3175;
                        float _3178 = (_3176 * _3176) * _750;
                        float _3181 = ((_3176 * _3164) + _3175) + _3178;
                        float _3186 = _3171 * _3171;
                        float _3191 = ((isnan(0.0) ? _3181 : (isnan(_3181) ? 0.0 : max(_3181, 0.0))) * _3170) / (((_3178 * 2.0) + 1.0) * ((_3186 * 0.699999988079071044921875) + 1.0));
                        float _3195 = dot(vec3(_3161, _3162, _3163), vec3(_3151, _3152, _3153));
                        float _4277 = isnan(0.0) ? _3195 : (isnan(_3195) ? 0.0 : max(_3195, 0.0));
                        float _3202 = dot(vec3((-0.0) - _3151, (-0.0) - _3152, (-0.0) - _3153), vec3(_803, _806, _809)) + 1.0;
                        float _3204 = (isnan(0.0) ? _3202 : (isnan(_3202) ? 0.0 : max(_3202, 0.0))) * 0.5;
                        float _3211 = ((_3204 * _3204) * _3144.x) * exp2((_3144.y * 32.0) * log2(isnan(1.0) ? _4277 : (isnan(_4277) ? 1.0 : min(_4277, 1.0))));
                        float _3213 = _750 / (_750 + 1.0);
                        float _3229 = (-0.0) - _1954;
                        float _3230 = (-0.0) - _1955;
                        float _3231 = (-0.0) - _1956;
                        float _3235 = inversesqrt(dot(vec3(_3229, _3230, _3231), vec3(_3229, _3230, _3231)));
                        float _3236 = _3235 * _3229;
                        float _3237 = _3235 * _3230;
                        float _3238 = _3235 * _3231;
                        float _3245 = exp2(log2(1.0 / ((_3186 * 3.5) + 5.0)) * 0.25);
                        float _3246 = 1.0 - _866;
                        float _3253 = sqrt(1.0 - ((1.0 - (_3246 * _3246)) * (1.0 - (_3245 * _3245))));
                        float _3254 = _3253 * _3253;
                        float _3255 = _3254 * _3254;
                        float _3256 = _3236 + _3161;
                        float _3257 = _3237 + _3162;
                        float _3258 = _3238 + _3163;
                        float _3262 = inversesqrt(dot(vec3(_3256, _3257, _3258), vec3(_3256, _3257, _3258)));
                        float _3266 = dot(vec3(_803, _806, _809), vec3(_3236, _3237, _3238));
                        float _4293 = isnan(0.0) ? _3266 : (isnan(_3266) ? 0.0 : max(_3266, 0.0));
                        float _3269 = isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0));
                        float _3270 = dot(vec3(_803, _806, _809), vec3(_3262 * _3256, _3262 * _3257, _3262 * _3258));
                        float _4304 = isnan(0.0) ? _3270 : (isnan(_3270) ? 0.0 : max(_3270, 0.0));
                        float _3273 = isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0));
                        float _3277 = ((_3273 * _3273) * (_3255 + (-1.0))) + 1.0;
                        float _3278 = _3174 * _3254;
                        float _3279 = _3278 * _3278;
                        float _3282 = ((1.0 - _3279) * _3164) + _3279;
                        float _4315 = isnan(0.0) ? _3282 : (isnan(_3282) ? 0.0 : max(_3282, 0.0));
                        float _3283 = isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0));
                        float _3284 = 1.0 - _3254;
                        float _3294 = (0.5 / (((_3283 * ((_3269 * _3284) + _3254)) + 9.9999999392252902907785028219223e-09) + (((_3283 * _3284) + _3254) * _3269))) * _3283;
                        float _4326 = isnan(0.0) ? _3294 : (isnan(_3294) ? 0.0 : max(_3294, 0.0));
                        float _3305 = (((_3255 * 3.1415927410125732421875) * (isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0)))) / ((_3277 * _3277) * ((_3186 * 2.1991131305694580078125) + 3.141590118408203125))) * _3170;
                        _3004 = (((((_3115 * 0.3183098733425140380859375) * _3213) * _3211) + _3115) * _3191) + _3072;
                        _3005 = (((((_3116 * 0.3183098733425140380859375) * _3213) * _3211) + _3116) * _3191) + _3073;
                        _3006 = (((((_3117 * 0.3183098733425140380859375) * _3213) * _3211) + _3117) * _3191) + _3074;
                        _3001 = (_3305 * _3131.x) + _3069;
                        _3002 = (_3305 * _3131.y) + _3070;
                        _3003 = (_3305 * _3131.z) + _3071;
                        if (_3076 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3069 = _3001;
                            _3070 = _3002;
                            _3071 = _3003;
                            _3072 = _3004;
                            _3073 = _3005;
                            _3074 = _3006;
                            _3075 = _3076;
                        }
                    }
                    frontier_phi_63_pred = _3003;
                    frontier_phi_63_pred_1 = _3006;
                    frontier_phi_63_pred_2 = _3005;
                    frontier_phi_63_pred_3 = _3004;
                    frontier_phi_63_pred_4 = _3002;
                    frontier_phi_63_pred_5 = _3001;
                }
                _2692 = frontier_phi_63_pred;
                _2698 = frontier_phi_63_pred_1;
                _2696 = frontier_phi_63_pred_2;
                _2694 = frontier_phi_63_pred_3;
                _2690 = frontier_phi_63_pred_4;
                _2688 = frontier_phi_63_pred_5;
                uint _2860 = _2859 + 1u;
                if (_2860 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2853 = _2688;
                    _2854 = _2690;
                    _2855 = _2692;
                    _2856 = _2694;
                    _2857 = _2696;
                    _2858 = _2698;
                    _2859 = _2860;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2687 = _2688;
            _2689 = _2690;
            _2691 = _2692;
            _2693 = _2694;
            _2695 = _2696;
            _2697 = _2698;
        }
        float _2702 = isnan(1.0) ? _845 : (isnan(_845) ? 1.0 : min(_845, 1.0));
        _2653 = (_2702 * _2693) + _2398;
        _2655 = (_2702 * _2695) + _2399;
        _2657 = (_2702 * _2697) + _2400;
        _2659 = ((_2687 * 0.039999999105930328369140625) * _2702) + _2564;
        _2661 = ((_2689 * 0.039999999105930328369140625) * _2702) + _2565;
        _2663 = ((_2691 * 0.039999999105930328369140625) * _2702) + _2566;
    }
    else
    {
        _2653 = _2398;
        _2655 = _2399;
        _2657 = _2400;
        _2659 = _2564;
        _2661 = _2565;
        _2663 = _2566;
    }
    float _2776;
    float _2777;
    float _2778;
    if (_750 > 0.0)
    {
        uint _2709 = _2180 + 4u;
        float _2715 = (-0.0) - _536;
        float _2716 = (-0.0) - _537;
        float _2717 = (-0.0) - _538;
        float _2718 = dot(vec3(cbLight._m0[_2180].xyz), vec3(_2715, _2716, _2717));
        float _4342 = isnan(0.0) ? _2718 : (isnan(_2718) ? 0.0 : max(_2718, 0.0));
        float _2722 = _856 + 1.0;
        float _2724 = (isnan(0.0) ? _2722 : (isnan(_2722) ? 0.0 : max(_2722, 0.0))) * 0.5;
        float _2729 = _2724 * _2724;
        float _2730 = _2729 * exp2(log2(isnan(1.0) ? _4342 : (isnan(_4342) ? 1.0 : min(_4342, 1.0))) * 32.0);
        float _2732 = _750 / (_750 + 1.0);
        float _2733 = isnan(_2189) ? 1.0 : (isnan(1.0) ? _2189 : min(1.0, _2189));
        uint _2746 = _2180 + 5u;
        float _2752 = dot(vec3(cbLight._m0[_2216].xyz), vec3(_2715, _2716, _2717));
        float _4363 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
        float _2759 = _2729 * exp2(log2(isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0))) * 32.0);
        float _2760 = isnan(_2190) ? 1.0 : (isnan(1.0) ? _2190 : min(1.0, _2190));
        _2776 = ((((_2759 * cbLight._m0[_2746].x) * _2732) * _2760) + ((((cbLight._m0[_2709].x * _2169) * _2730) * _2732) * _2733)) * 0.3183098733425140380859375;
        _2777 = ((((_2759 * cbLight._m0[_2746].y) * _2732) * _2760) + ((((cbLight._m0[_2709].y * _2171) * _2730) * _2732) * _2733)) * 0.3183098733425140380859375;
        _2778 = ((((_2759 * cbLight._m0[_2746].z) * _2732) * _2760) + ((((cbLight._m0[_2709].z * _2173) * _2730) * _2732) * _2733)) * 0.3183098733425140380859375;
    }
    else
    {
        _2776 = 0.0;
        _2777 = 0.0;
        _2778 = 0.0;
    }
    float _4379 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _4390 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _4401 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _4412 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
    float _2793 = (isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0))) * ((_2653 + ((isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0))) * _845)) + _2776);
    float _2794 = (isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0))) * ((_2655 + ((isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0))) * _845)) + _2777);
    float _2795 = (isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0))) * ((_2657 + ((isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0))) * _845)) + _2778);
    float _2799 = 0.959999978542327880859375 - (exp2(log2(1.0 - _860) * 5.0) * 0.959999978542327880859375);
    float _2810 = (_2793 + ((_2659 + ((isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0))) * _1688)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _684.x) * _2799) - _2793) * _730);
    float _2812 = (_2794 + ((_2661 + ((isnan(0.0) ? _1904 : (isnan(_1904) ? 0.0 : max(_1904, 0.0))) * _1688)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _684.y) * _2799) - _2794) * _730);
    float _2814 = (_2795 + ((_2663 + ((isnan(0.0) ? _1907 : (isnan(_1907) ? 0.0 : max(_1907, 0.0))) * _1688)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _684.z) * _2799) - _2795) * _730);
    float _2819 = cbInstanceData._m0[_307 + 6u].w * (isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0)));
    float _2824 = _784 / cbSceneParam._m0[86u].x;
    float _2825 = _785 / cbSceneParam._m0[86u].y;
    vec4 _2839 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2824, _2825, (log2((isnan(cbSceneParam._m0[77u].w) ? _767 : (isnan(_767) ? cbSceneParam._m0[77u].w : min(_767, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2841 = _2839.x;
    float _2842 = _2839.y;
    float _2843 = _2839.z;
    float _2844 = _2839.w;
    float _2911;
    float _2913;
    float _2915;
    float _2917;
    if (_767 > cbSceneParam._m0[78u].w)
    {
        float _2874 = isnan(_767) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _767 : min(cbSceneParam._m0[80u].w, _767));
        float _2875 = _2874 / _767;
        float _2886 = _2875 * _299;
        float _2887 = _300 * _2875;
        float _2888 = (-0.0) - _2887;
        float _2889 = _2875 * _301;
        float _2891 = (cbSceneParam._m0[77u].w * _2888) / _2874;
        float _2892 = _2891 + cbSceneParam._m0[79u].w;
        float _2893 = cbSceneParam._m0[79u].w - _2887;
        float _2899 = sqrt(((_2886 * _2886) + (_2887 * _2887)) + (_2889 * _2889));
        float _2902 = (1.0 - (cbSceneParam._m0[77u].w / _2874)) * _2899;
        float _2907 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2909 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3310;
        if (abs((_2888 - _2891) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3310 = ((((_2892 > 0.0) ? exp2(_2907 * _2892) : (2.0 - exp2(_2909 * _2892))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2902;
        }
        else
        {
            float _3026 = 1.0 / cbSceneParam._m0[80u].x;
            float _3027 = isnan(_2893) ? _2892 : (isnan(_2892) ? _2893 : max(_2892, _2893));
            float _3028 = isnan(_2893) ? _2892 : (isnan(_2892) ? _2893 : min(_2892, _2893));
            float _3037 = isnan(0.0) ? _3027 : (isnan(_3027) ? 0.0 : min(_3027, 0.0));
            float _3038 = isnan(0.0) ? _3028 : (isnan(_3028) ? 0.0 : min(_3028, 0.0));
            _3310 = ((abs(_2899 / _2888) * cbSceneParam._m0[80u].y) * ((((_3037 - _3038) * 2.0) - ((exp2(_2907 * (isnan(0.0) ? _3027 : (isnan(_3027) ? 0.0 : max(_3027, 0.0)))) - exp2(_2907 * (isnan(0.0) ? _3028 : (isnan(_3028) ? 0.0 : max(_3028, 0.0))))) * _3026)) - ((exp2(_2909 * _3037) - exp2(_2909 * _3038)) * _3026))) + (_2902 * cbSceneParam._m0[80u].z);
        }
        vec4 _3312 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2824, _2825, 1.0), 0.0);
        float _3321 = exp2((_3310 * (-1.44269502162933349609375)) * (1.0 - _3312.w));
        float _3322 = log2(_3321);
        float _3338 = log2(_2844);
        _2911 = (exp2(_3338 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3322 * cbSceneParam._m0[78u].x)) * _3312.x) / cbSceneParam._m0[78u].x)) + _2841;
        _2913 = (exp2(_3338 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3322 * cbSceneParam._m0[78u].y)) * _3312.y) / cbSceneParam._m0[78u].y)) + _2842;
        _2915 = (exp2(_3338 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3322 * cbSceneParam._m0[78u].z)) * _3312.z) / cbSceneParam._m0[78u].z)) + _2843;
        _2917 = _3321 * _2844;
    }
    else
    {
        _2911 = _2841;
        _2913 = _2842;
        _2915 = _2843;
        _2917 = _2844;
    }
    bool _3348;
    float _2972;
    vec4 _2975;
    float _2977;
    vec4 _2979;
    float _2987;
    float _2988;
    float _2989;
    float _2990;
    bool _3000;
    for (;;)
    {
        bool _2929 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2930 = log2(_2917);
        float _2937 = exp2(_2930 * cbSceneParam._m0[78u].x) * _2810;
        float _2938 = exp2(_2930 * cbSceneParam._m0[78u].y) * _2812;
        float _2939 = exp2(_2930 * cbSceneParam._m0[78u].z) * _2814;
        vec4 _2947 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_784, _785));
        float _2949 = _2947.x;
        float _2970 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2949)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2949))) - _767) * cbMtdParam._m0[17u].y;
        float _4463 = isnan(0.0) ? _2970 : (isnan(_2970) ? 0.0 : max(_2970, 0.0));
        _2972 = _2819 * (isnan(1.0) ? _4463 : (isnan(_4463) ? 1.0 : min(_4463, 1.0)));
        float _2973 = _774 + (-0.5);
        _2975 = cbMtdParam._m0[1u];
        _2977 = _2975.y * _2973;
        _2979 = cbMatDynParam._m0[0u];
        float _2986 = (roundEven(_2979.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2987 = _2986 * (_2929 ? _2937 : (_2937 + (cbSceneParam._m0[72u].w * _2911)));
        _2988 = _2986 * (_2929 ? _2938 : (_2938 + (cbSceneParam._m0[72u].w * _2913)));
        _2989 = _2986 * (_2929 ? _2939 : (_2939 + (cbSceneParam._m0[72u].w * _2915)));
        _2990 = _2973 * 0.999000012874603271484375;
        _3000 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3000)
        {
            if ((cbInstanceData._m0[_307 + 7u].x + _2990) < 0.5)
            {
                _3348 = true;
                break;
            }
        }
        uint _3061 = _822 + uint(_2979.w);
        if ((cbInstanceData._m0[_3061].w < 1.0) && ((cbInstanceData._m0[_3061].w + _2990) < 0.5))
        {
            _3348 = true;
            break;
        }
        if ((_2977 + _446) < _2975.x)
        {
            _3348 = true;
            break;
        }
        _3348 = false;
        break;
    }
    float _3353;
    if (_3348)
    {
        discard_state = true;
        _3353 = 0.0;
    }
    else
    {
        _3353 = _2972;
    }
    SV_Target.x = _2987;
    SV_Target.y = _2988;
    SV_Target.z = _2989;
    SV_Target.w = _3353;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2972;
    discard_exit();
}


