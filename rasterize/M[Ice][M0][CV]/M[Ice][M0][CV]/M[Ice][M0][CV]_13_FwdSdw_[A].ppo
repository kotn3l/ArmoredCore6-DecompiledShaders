#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1262;
float _3489;
float _3490;
float _3491;
float _3492;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _215 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _216 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _217 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _223 = inversesqrt(dot(vec3(_215, _216, _217), vec3(_215, _216, _217)));
    float _224 = _223 * _215;
    float _225 = _223 * _216;
    float _226 = _223 * _217;
    float _230 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _231 = _230 * NORMAL.x;
    float _232 = _230 * NORMAL.y;
    float _233 = _230 * NORMAL.z;
    float _237 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _238 = _237 * TANGENT.x;
    float _239 = _237 * TANGENT.y;
    float _240 = _237 * TANGENT.z;
    float _245;
    float _246;
    float _247;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _245 = (-0.0) - _231;
        _246 = (-0.0) - _232;
        _247 = (-0.0) - _233;
    }
    else
    {
        _245 = _231;
        _246 = _232;
        _247 = _233;
    }
    float _294 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _304 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _294);
    float _305 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _294);
    float _306 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _294);
    uint _312 = uint(roundEven(NORMAL.w)) * 13u;
    uint _317 = _312 + 1u;
    uint _321 = _312 + 2u;
    float _330 = sqrt(((cbInstanceData._m0[_317].x * cbInstanceData._m0[_317].x) + (cbInstanceData._m0[_312].x * cbInstanceData._m0[_312].x)) + (cbInstanceData._m0[_321].x * cbInstanceData._m0[_321].x));
    float _331 = _330 * TEXCOORD.z;
    float _332 = _330 * TEXCOORD.w;
    vec4 _346 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _355 = (_346.x * 2.0) + (-1.0);
    float _357 = (_346.y * 2.0) + (-1.0);
    float _358 = dot(vec2(_355, _357), vec2(_355, _357));
    float _3501 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
    float _364 = sqrt(1.0 - (isnan(1.0) ? _3501 : (isnan(_3501) ? 1.0 : min(_3501, 1.0))));
    float _367 = fma(_364, _245, fma(_357, _238, _355 * _224));
    float _370 = fma(_364, _246, fma(_357, _239, _355 * _225));
    float _373 = fma(_364, _247, fma(_357, _240, _355 * _226));
    float _377 = inversesqrt(dot(vec3(_367, _370, _373), vec3(_367, _370, _373)));
    vec4 _410 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _415 = _410.w;
    float _427 = dot(vec3(_304, _305, _306), vec3(_224, _225, _226));
    float _430 = dot(vec3(_304, _305, _306), vec3(_238, _239, _240));
    float _433 = dot(vec3(_304, _305, _306), vec3(_245, _246, _247));
    float _439 = inversesqrt(dot(vec3(_427, _430, _433), vec3(_427, _430, _433)));
    float _461 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _481 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_427 * cbMtdParam._m0[14u].x) * _439) * _461) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_430 * cbMtdParam._m0[14u].x) * _439) * _461) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _504 = inversesqrt(dot(vec3(_304, _305, _306), vec3(_304, _305, _306)));
    float _505 = _504 * _304;
    float _506 = _504 * _305;
    float _507 = _504 * _306;
    float _508 = dot(vec4(_505, _506, _507, 0.0), vec4(_245, _246, _247, 0.0));
    float _511 = _508 - cbMtdParam._m0[15u].z;
    float _3512 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    float _518 = exp2(log2(1.0 - (isnan(1.0) ? _3512 : (isnan(_3512) ? 1.0 : min(_3512, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _533 = ((((_410.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _481.x) * cbMtdParam._m0[9u].x) * ((_518 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _538 = ((((_410.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _481.y) * cbMtdParam._m0[9u].y) * ((_518 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _543 = ((((_410.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _481.z) * cbMtdParam._m0[9u].z) * ((_518 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _552 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _331) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _332) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3528 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _553 = isnan(1.0) ? _3528 : (isnan(_3528) ? 1.0 : min(_3528, 1.0));
    float _560 = (_553 * (cbMtdParam._m0[11u].x - _533)) + _533;
    float _561 = ((cbMtdParam._m0[11u].y - _538) * _553) + _538;
    float _562 = ((cbMtdParam._m0[11u].z - _543) * _553) + _543;
    vec4 _574 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _331) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _332) + cbTextureTilingScale._m0[9u].w));
    float _581 = (_574.x * 2.0) + (-1.0);
    float _582 = (_574.y * 2.0) + (-1.0);
    float _583 = dot(vec2(_581, _582), vec2(_581, _582));
    float _3539 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    vec4 _604 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _616 = cbMtdParam._m0[17u].z + _346.z;
    float _622 = (_616 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_604.z - _616));
    float _625 = ((_574.z - _622) * _553) + _622;
    float _631 = ((((_604.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _355;
    float _632 = ((((_604.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _357;
    float _644 = (((_581 - _631) + (_631 * cbMtdParam._m0[14u].z)) * _553) + _631;
    float _645 = (((_582 - _632) + (_632 * cbMtdParam._m0[14u].z)) * _553) + _632;
    float _646 = (_553 * (sqrt(1.0 - (isnan(1.0) ? _3539 : (isnan(_3539) ? 1.0 : min(_3539, 1.0)))) - _364)) + _364;
    float _662 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _664 = _662 - (_662 * _553);
    float _684 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + ((_377 * _367) * cbMtdParam._m0[18u].y));
    float _685 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + ((_377 * _370) * cbMtdParam._m0[18u].y));
    float _692 = isnan(cbInstanceData._m0[8u].x) ? _684 : (isnan(_684) ? cbInstanceData._m0[8u].x : max(_684, cbInstanceData._m0[8u].x));
    float _693 = isnan(cbInstanceData._m0[8u].y) ? _685 : (isnan(_685) ? cbInstanceData._m0[8u].y : max(_685, cbInstanceData._m0[8u].y));
    vec4 _697 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _692 : (isnan(_692) ? cbInstanceData._m0[8u].z : min(_692, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _693 : (isnan(_693) ? cbInstanceData._m0[8u].w : min(_693, cbInstanceData._m0[8u].w))));
    float _730 = _508 - cbMtdParam._m0[15u].x;
    float _3570 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _740 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3570 : (isnan(_3570) ? 1.0 : min(_3570, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3586 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _741 = isnan(1.0) ? _3586 : (isnan(_3586) ? 1.0 : min(_3586, 1.0));
    float _743 = _741 - (_553 * _741);
    float _747 = fma(_646, _245, fma(_645, _238, _644 * _224));
    float _750 = fma(_646, _246, fma(_645, _239, _644 * _225));
    float _753 = fma(_646, _247, fma(_645, _240, _644 * _226));
    float _757 = inversesqrt(dot(vec3(_747, _750, _753), vec3(_747, _750, _753)));
    float _758 = _757 * _747;
    float _759 = _757 * _750;
    float _760 = _757 * _753;
    float _3597 = isnan(0.0) ? _415 : (isnan(_415) ? 0.0 : max(_415, 0.0));
    float _761 = isnan(1.0) ? _3597 : (isnan(_3597) ? 1.0 : min(_3597, 1.0));
    float _3608 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _762 = isnan(1.0) ? _3608 : (isnan(_3608) ? 1.0 : min(_3608, 1.0));
    float _763 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _3624 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _3635 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0));
    float _3646 = isnan(0.0) ? _562 : (isnan(_562) ? 0.0 : max(_562, 0.0));
    float _780 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _785 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _787 = _785.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _942 = sqrt(((_304 * _304) + (_305 * _305)) + (_306 * _306));
        float _948 = (cbMatDynParam._m0[5u].x * _942) + cbMatDynParam._m0[5u].y;
        float _3657 = isnan(0.0) ? _948 : (isnan(_948) ? 0.0 : max(_948, 0.0));
        float _949 = isnan(1.0) ? _3657 : (isnan(_3657) ? 1.0 : min(_3657, 1.0));
        float _953 = (cbMatDynParam._m0[5u].z * _942) + cbMatDynParam._m0[5u].w;
        float _3668 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3668 : (isnan(_3668) ? 1.0 : min(_3668, 1.0))) - _949)) + _949) < ((_787 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _797 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _798 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _816 = fma(_760, cbSceneParam._m0[5u].z, fma(_759, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _758));
    float _819 = fma(_760, cbSceneParam._m0[6u].z, fma(_759, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _758));
    float _822 = fma(_760, cbSceneParam._m0[7u].z, fma(_759, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _758));
    uint _835 = _312 + 9u;
    uint _836 = _835 + uint(cbMatDynParam._m0[0u].w);
    float _842 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3624 : (isnan(_3624) ? 1.0 : min(_3624, 1.0)))) * cbInstanceData._m0[_836].x;
    float _843 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3635 : (isnan(_3635) ? 1.0 : min(_3635, 1.0)))) * cbInstanceData._m0[_836].y;
    float _844 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3646 : (isnan(_3646) ? 1.0 : min(_3646, 1.0)))) * cbInstanceData._m0[_836].z;
    float _3679 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _845 = isnan(1.0) ? _3679 : (isnan(_3679) ? 1.0 : min(_3679, 1.0));
    float _3690 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    float _846 = isnan(1.0) ? _3690 : (isnan(_3690) ? 1.0 : min(_3690, 1.0));
    float _3701 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _847 = isnan(1.0) ? _3701 : (isnan(_3701) ? 1.0 : min(_3701, 1.0));
    vec4 _855 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _797, cbSceneParam._m0[86u].y * _798));
    float _858 = _855.x * TEXCOORD_5.w;
    float _859 = dot(vec3(_758, _759, _760), vec3(_505, _506, _507));
    float _862 = _859 * 2.0;
    float _866 = (_862 * _758) - _505;
    float _867 = (_862 * _759) - _506;
    float _868 = (_862 * _760) - _507;
    float _869 = dot(vec3(_505, _506, _507), vec3(_758, _759, _760));
    float _872 = abs(_869);
    float _3712 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _873 = isnan(1.0) ? _3712 : (isnan(_3712) ? 1.0 : min(_3712, 1.0));
    float _879 = sqrt(_762);
    float _891 = exp2((_879 * 5.0) * log2(1.0 - (_873 * 0.999000012874603271484375))) / (4.0 - (_879 * 3.0));
    float _923 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _927 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _931 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1261;
    float _1263;
    float _1264;
    float _1265;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _986 = fma(_931, cbModelParam._m0[26u].z, fma(_927, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _923));
        float _990 = fma(_931, cbModelParam._m0[27u].z, fma(_927, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _923));
        float _994 = fma(_931, cbModelParam._m0[28u].z, fma(_927, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _923));
        float _1019 = _923 + _758;
        float _1020 = _927 + _759;
        float _1021 = _931 + _760;
        float _1031 = fma(_1021, cbModelParam._m0[26u].z, fma(_1020, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1019)) - _986;
        float _1032 = fma(_1021, cbModelParam._m0[27u].z, fma(_1020, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1019)) - _990;
        float _1033 = fma(_1021, cbModelParam._m0[28u].z, fma(_1020, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1019)) - _994;
        float _1037 = inversesqrt(dot(vec3(_1031, _1032, _1033), vec3(_1031, _1032, _1033)));
        float _1050 = ((_1037 * _1031) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_986 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1051 = ((_1037 * _1032) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_990 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1052 = ((_1037 * _1033) / cbModelParam._m0[34u].z) + ((((((_994 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1055 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1050, _1051, _1052), 0.0);
        vec4 _1062 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1050, _1051, _1052), 0.0);
        vec4 _1069 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1050, _1051, _1052), 0.0);
        vec4 _1076 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1050, _1051, _1052), 0.0);
        float _1089 = exp2((_1055.w + (-0.5)) * 20.0) * 2.0;
        float _1090 = _1089 * (_1055.x + (-0.5));
        float _1091 = _1089 * (_1055.y + (-0.5));
        float _1092 = _1089 * (_1055.z + (-0.5));
        float _1099 = exp2((_1062.w + (-0.5)) * 20.0) * 2.0;
        float _1100 = _1099 * (_1062.x + (-0.5));
        float _1101 = _1099 * (_1062.y + (-0.5));
        float _1102 = _1099 * (_1062.z + (-0.5));
        float _1109 = exp2((_1069.w + (-0.5)) * 20.0) * 2.0;
        float _1110 = _1109 * (_1069.x + (-0.5));
        float _1111 = _1109 * (_1069.y + (-0.5));
        float _1112 = _1109 * (_1069.z + (-0.5));
        float _1119 = exp2((_1076.w + (-0.5)) * 20.0) * 2.0;
        float _1120 = _1119 * (_1076.x + (-0.5));
        float _1121 = _1119 * (_1076.y + (-0.5));
        float _1122 = _1119 * (_1076.z + (-0.5));
        float _1123 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
        float _1124 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
        float _1125 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
        float _1126 = _1090 * 0.5;
        float _1127 = _1100 * 0.5;
        float _1128 = _1110 * 0.5;
        float _1129 = dot(vec3(_1126, _1127, _1128), vec3(_1126, _1127, _1128));
        float _1134 = (_1129 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1129);
        float _1143 = (dot(vec3(_758, _759, _760), vec3(_1134 * _1126, _1134 * _1127, _1134 * _1128)) + 1.0) * 0.5;
        float _3738 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1153 = sqrt(((_1127 * _1127) + (_1126 * _1126)) + (_1128 * _1128)) / (_1123 + 9.9999997473787516355514526367188e-06);
        float _3749 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1154 = isnan(1.0) ? _3749 : (isnan(_3749) ? 1.0 : min(_3749, 1.0));
        float _1155 = _1154 * 2.0;
        float _1159 = (1.0 - _1154) / (_1154 + 1.0);
        float _3760 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1160 = isnan(1.0) ? _3760 : (isnan(_3760) ? 1.0 : min(_3760, 1.0));
        float _1169 = ((((1.0 - _1160) * (_1155 + 2.0)) * exp2(log2(isnan(1.0) ? _3738 : (isnan(_3738) ? 1.0 : min(_3738, 1.0))) * (_1155 + 1.0))) + _1160) * _1123;
        float _1170 = _1091 * 0.5;
        float _1171 = _1101 * 0.5;
        float _1172 = _1111 * 0.5;
        float _1173 = dot(vec3(_1170, _1171, _1172), vec3(_1170, _1171, _1172));
        float _1178 = (_1173 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1173);
        float _1186 = (dot(vec3(_758, _759, _760), vec3(_1178 * _1170, _1178 * _1171, _1178 * _1172)) + 1.0) * 0.5;
        float _3771 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1195 = sqrt(((_1171 * _1171) + (_1170 * _1170)) + (_1172 * _1172)) / (_1124 + 9.9999997473787516355514526367188e-06);
        float _3782 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
        float _1196 = isnan(1.0) ? _3782 : (isnan(_3782) ? 1.0 : min(_3782, 1.0));
        float _1197 = _1196 * 2.0;
        float _1201 = (1.0 - _1196) / (_1196 + 1.0);
        float _3793 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1202 = isnan(1.0) ? _3793 : (isnan(_3793) ? 1.0 : min(_3793, 1.0));
        float _1211 = ((((1.0 - _1202) * (_1197 + 2.0)) * exp2(log2(isnan(1.0) ? _3771 : (isnan(_3771) ? 1.0 : min(_3771, 1.0))) * (_1197 + 1.0))) + _1202) * _1124;
        float _1212 = _1092 * 0.5;
        float _1213 = _1102 * 0.5;
        float _1214 = _1112 * 0.5;
        float _1215 = dot(vec3(_1212, _1213, _1214), vec3(_1212, _1213, _1214));
        float _1220 = (_1215 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1215);
        float _1228 = (dot(vec3(_758, _759, _760), vec3(_1220 * _1212, _1220 * _1213, _1220 * _1214)) + 1.0) * 0.5;
        float _3804 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1237 = sqrt(((_1213 * _1213) + (_1212 * _1212)) + (_1214 * _1214)) / (_1125 + 9.9999997473787516355514526367188e-06);
        float _3815 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
        float _1238 = isnan(1.0) ? _3815 : (isnan(_3815) ? 1.0 : min(_3815, 1.0));
        float _1239 = _1238 * 2.0;
        float _1243 = (1.0 - _1238) / (_1238 + 1.0);
        float _3826 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
        float _1244 = isnan(1.0) ? _3826 : (isnan(_3826) ? 1.0 : min(_3826, 1.0));
        float _1253 = ((((1.0 - _1244) * (_1239 + 2.0)) * exp2(log2(isnan(1.0) ? _3804 : (isnan(_3804) ? 1.0 : min(_3804, 1.0))) * (_1239 + 1.0))) + _1244) * _1125;
        _1261 = _1092;
        _1263 = _1091;
        _1264 = _1090;
        _1265 = _1102;
        _1266 = _1101;
        _1267 = _1100;
        _1268 = _1112;
        _1269 = _1111;
        _1270 = _1110;
        _1271 = _1125;
        _1272 = _1124;
        _1273 = _1123;
        _1274 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0)));
        _1275 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0)));
        _1276 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0)));
    }
    else
    {
        _1261 = _1262;
        _1263 = _1262;
        _1264 = _1262;
        _1265 = _1262;
        _1266 = _1262;
        _1267 = _1262;
        _1268 = _1262;
        _1269 = _1262;
        _1270 = _1262;
        _1271 = _1262;
        _1272 = _1262;
        _1273 = _1262;
        _1274 = 0.0;
        _1275 = 0.0;
        _1276 = 0.0;
    }
    float _1574;
    float _1575;
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    float _1581;
    float _1582;
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1305 = fma(_931, cbModelParam._m0[30u].z, fma(_927, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _923));
        float _1309 = fma(_931, cbModelParam._m0[31u].z, fma(_927, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _923));
        float _1313 = fma(_931, cbModelParam._m0[32u].z, fma(_927, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _923));
        float _1336 = _923 + _758;
        float _1337 = _927 + _759;
        float _1338 = _931 + _760;
        float _1348 = fma(_1338, cbModelParam._m0[30u].z, fma(_1337, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1336)) - _1305;
        float _1349 = fma(_1338, cbModelParam._m0[31u].z, fma(_1337, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1336)) - _1309;
        float _1350 = fma(_1338, cbModelParam._m0[32u].z, fma(_1337, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1336)) - _1313;
        float _1354 = inversesqrt(dot(vec3(_1348, _1349, _1350), vec3(_1348, _1349, _1350)));
        float _1367 = ((_1354 * _1348) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1305 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1368 = ((_1354 * _1349) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1309 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1369 = ((_1354 * _1350) / cbModelParam._m0[35u].z) + ((((((_1313 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1371 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1367, _1368, _1369), 0.0);
        vec4 _1378 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1367, _1368, _1369), 0.0);
        vec4 _1385 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1367, _1368, _1369), 0.0);
        vec4 _1392 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1367, _1368, _1369), 0.0);
        float _1404 = exp2((_1371.w + (-0.5)) * 20.0) * 2.0;
        float _1405 = _1404 * (_1371.x + (-0.5));
        float _1406 = _1404 * (_1371.y + (-0.5));
        float _1407 = _1404 * (_1371.z + (-0.5));
        float _1414 = exp2((_1378.w + (-0.5)) * 20.0) * 2.0;
        float _1415 = _1414 * (_1378.x + (-0.5));
        float _1416 = _1414 * (_1378.y + (-0.5));
        float _1417 = _1414 * (_1378.z + (-0.5));
        float _1424 = exp2((_1385.w + (-0.5)) * 20.0) * 2.0;
        float _1425 = _1424 * (_1385.x + (-0.5));
        float _1426 = _1424 * (_1385.y + (-0.5));
        float _1427 = _1424 * (_1385.z + (-0.5));
        float _1434 = exp2((_1392.w + (-0.5)) * 20.0) * 2.0;
        float _1435 = _1434 * (_1392.x + (-0.5));
        float _1436 = _1434 * (_1392.y + (-0.5));
        float _1437 = _1434 * (_1392.z + (-0.5));
        float _1438 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1439 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1440 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1441 = _1405 * 0.5;
        float _1442 = _1415 * 0.5;
        float _1443 = _1425 * 0.5;
        float _1444 = dot(vec3(_1441, _1442, _1443), vec3(_1441, _1442, _1443));
        float _1449 = (_1444 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1444);
        float _1457 = (dot(vec3(_758, _759, _760), vec3(_1449 * _1441, _1449 * _1442, _1449 * _1443)) + 1.0) * 0.5;
        float _3867 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1466 = sqrt(((_1442 * _1442) + (_1441 * _1441)) + (_1443 * _1443)) / (_1438 + 9.9999997473787516355514526367188e-06);
        float _3878 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1467 = isnan(1.0) ? _3878 : (isnan(_3878) ? 1.0 : min(_3878, 1.0));
        float _1468 = _1467 * 2.0;
        float _1472 = (1.0 - _1467) / (_1467 + 1.0);
        float _3889 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
        float _1473 = isnan(1.0) ? _3889 : (isnan(_3889) ? 1.0 : min(_3889, 1.0));
        float _1482 = ((((1.0 - _1473) * (_1468 + 2.0)) * exp2(log2(isnan(1.0) ? _3867 : (isnan(_3867) ? 1.0 : min(_3867, 1.0))) * (_1468 + 1.0))) + _1473) * _1438;
        float _1483 = _1406 * 0.5;
        float _1484 = _1416 * 0.5;
        float _1485 = _1426 * 0.5;
        float _1486 = dot(vec3(_1483, _1484, _1485), vec3(_1483, _1484, _1485));
        float _1491 = (_1486 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1486);
        float _1499 = (dot(vec3(_758, _759, _760), vec3(_1491 * _1483, _1491 * _1484, _1491 * _1485)) + 1.0) * 0.5;
        float _3900 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
        float _1508 = sqrt(((_1484 * _1484) + (_1483 * _1483)) + (_1485 * _1485)) / (_1439 + 9.9999997473787516355514526367188e-06);
        float _3911 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1509 = isnan(1.0) ? _3911 : (isnan(_3911) ? 1.0 : min(_3911, 1.0));
        float _1510 = _1509 * 2.0;
        float _1514 = (1.0 - _1509) / (_1509 + 1.0);
        float _3922 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1515 = isnan(1.0) ? _3922 : (isnan(_3922) ? 1.0 : min(_3922, 1.0));
        float _1524 = ((((1.0 - _1515) * (_1510 + 2.0)) * exp2(log2(isnan(1.0) ? _3900 : (isnan(_3900) ? 1.0 : min(_3900, 1.0))) * (_1510 + 1.0))) + _1515) * _1439;
        float _1525 = _1407 * 0.5;
        float _1526 = _1417 * 0.5;
        float _1527 = _1427 * 0.5;
        float _1528 = dot(vec3(_1525, _1526, _1527), vec3(_1525, _1526, _1527));
        float _1533 = (_1528 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1528);
        float _1541 = (dot(vec3(_758, _759, _760), vec3(_1533 * _1525, _1533 * _1526, _1533 * _1527)) + 1.0) * 0.5;
        float _3933 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
        float _1550 = sqrt(((_1526 * _1526) + (_1525 * _1525)) + (_1527 * _1527)) / (_1440 + 9.9999997473787516355514526367188e-06);
        float _3944 = isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0));
        float _1551 = isnan(1.0) ? _3944 : (isnan(_3944) ? 1.0 : min(_3944, 1.0));
        float _1552 = _1551 * 2.0;
        float _1556 = (1.0 - _1551) / (_1551 + 1.0);
        float _3955 = isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0));
        float _1557 = isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0));
        float _1566 = ((((1.0 - _1557) * (_1552 + 2.0)) * exp2(log2(isnan(1.0) ? _3933 : (isnan(_3933) ? 1.0 : min(_3933, 1.0))) * (_1552 + 1.0))) + _1557) * _1440;
        _1574 = _1407;
        _1575 = _1406;
        _1576 = _1405;
        _1577 = _1417;
        _1578 = _1416;
        _1579 = _1415;
        _1580 = _1427;
        _1581 = _1426;
        _1582 = _1425;
        _1583 = _1440;
        _1584 = _1439;
        _1585 = _1438;
        _1586 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0)));
        _1587 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0)));
        _1588 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0)));
    }
    else
    {
        _1574 = _1262;
        _1575 = _1262;
        _1576 = _1262;
        _1577 = _1262;
        _1578 = _1262;
        _1579 = _1262;
        _1580 = _1262;
        _1581 = _1262;
        _1582 = _1262;
        _1583 = _1262;
        _1584 = _1262;
        _1585 = _1262;
        _1586 = 0.0;
        _1587 = 0.0;
        _1588 = 0.0;
    }
    float _1598 = (cbModelParam._m0[1u].x * (_1586 - _1274)) + _1274;
    float _1599 = (cbModelParam._m0[1u].x * (_1587 - _1275)) + _1275;
    float _1600 = (cbModelParam._m0[1u].x * (_1588 - _1276)) + _1276;
    float _1621 = fma(_1600, cbSceneParam._m0[89u].z, fma(_1599, cbSceneParam._m0[89u].y, _1598 * cbSceneParam._m0[89u].x));
    float _1624 = fma(_1600, cbSceneParam._m0[90u].z, fma(_1599, cbSceneParam._m0[90u].y, _1598 * cbSceneParam._m0[90u].x));
    float _1627 = fma(_1600, cbSceneParam._m0[91u].z, fma(_1599, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1598));
    float _1642 = _866 * 0.5;
    float _1643 = _867 * 0.5;
    float _1644 = _868 * 0.5;
    float _1645 = dot(vec4(_1642, _1643, _1644, 1.0), vec4(_1576, _1579, _1582, _1585));
    float _1648 = dot(vec4(_1642, _1643, _1644, 1.0), vec4(_1575, _1578, _1581, _1584));
    float _1651 = dot(vec4(_1642, _1643, _1644, 1.0), vec4(_1574, _1577, _1580, _1583));
    float _1685;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1658 = dot(vec4(_1642, _1643, _1644, 1.0), vec4(_1261, _1265, _1268, _1271));
        float _1662 = dot(vec4(_1642, _1643, _1644, 1.0), vec4(_1263, _1266, _1269, _1272));
        float _1666 = dot(vec4(_1642, _1643, _1644, 1.0), vec4(_1264, _1267, _1270, _1273));
        float _1673 = dot(vec4(cbModelParam._m0[39u]), vec4(_1642, _1643, _1644, 1.0));
        _1685 = dot(vec3(isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0)), isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0)), isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1673) ? 0.0 : (isnan(0.0) ? _1673 : max(0.0, _1673))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1685 = 1.0;
    }
    float _1696;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1687 = dot(vec4(cbModelParam._m0[40u]), vec4(_1642, _1643, _1644, 1.0));
        _1696 = dot(vec3(isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0)), isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0)), isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1687) ? 0.0 : (isnan(0.0) ? _1687 : max(0.0, _1687))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1696 = 1.0;
    }
    float _1700 = (_1696 * cbModelParam._m0[1u].x) + (_1685 * (1.0 - cbModelParam._m0[1u].x));
    float _1710 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _762);
    float _1711 = isnan(_1710) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1710 : min(cbModelParam._m0[25u].z, _1710));
    float _1791;
    float _1793;
    float _1795;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1758 = fma(_931, cbModelParam._m0[13u].z, fma(_927, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _923)) + cbModelParam._m0[13u].w;
        float _1762 = fma(_931, cbModelParam._m0[14u].z, fma(_927, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _923)) + cbModelParam._m0[14u].w;
        float _1766 = fma(_931, cbModelParam._m0[15u].z, fma(_927, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _923)) + cbModelParam._m0[15u].w;
        float _1769 = fma(_868, cbModelParam._m0[13u].z, fma(_867, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _866));
        float _1772 = fma(_868, cbModelParam._m0[14u].z, fma(_867, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _866));
        float _1775 = fma(_868, cbModelParam._m0[15u].z, fma(_867, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _866));
        float _1803;
        if (_1769 > 0.0)
        {
            _1803 = abs((1.0 - _1758) / _1769);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1769 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1758 + 1.0) / _1769);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1803 = frontier_phi_19_17_ladder;
        }
        float _1975;
        if (_1772 > 0.0)
        {
            _1975 = abs((1.0 - _1762) / _1772);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1772 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1762 + 1.0) / _1772);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1975 = frontier_phi_28_24_ladder;
        }
        float _2239;
        if (_1775 > 0.0)
        {
            _2239 = abs((1.0 - _1766) / _1775);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1775 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1766 + 1.0) / _1775);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2239 = frontier_phi_40_35_ladder;
        }
        float _2241 = isnan(_1975) ? _1803 : (isnan(_1803) ? _1975 : min(_1803, _1975));
        float _2242 = isnan(_2239) ? _2241 : (isnan(_2241) ? _2239 : min(_2241, _2239));
        float _2246 = (_2242 * _1769) + _1758;
        float _2247 = (_2242 * _1772) + _1762;
        float _2248 = (_2242 * _1775) + _1766;
        float _2249 = _2242 * 9.9999997473787516355514526367188e-05;
        float _2251 = (-1.0) - _2249;
        float _2253 = _2249 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2248 > _2253) || ((_2248 < _2251) || ((_2247 > _2253) || ((_2247 < _2251) || ((_2246 < _2251) || (_2246 > _2253))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2402 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2248, cbModelParam._m0[9u].z, fma(_2247, cbModelParam._m0[9u].y, _2246 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2248, cbModelParam._m0[10u].z, fma(_2247, cbModelParam._m0[10u].y, _2246 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2248, cbModelParam._m0[11u].z, fma(_2247, cbModelParam._m0[11u].y, _2246 * cbModelParam._m0[11u].x))), _1711);
            frontier_phi_18_40_ladder = _2402.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2402.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2402.x * cbModelParam._m0[1u].y;
        }
        _1791 = frontier_phi_18_40_ladder_2;
        _1793 = frontier_phi_18_40_ladder_1;
        _1795 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1779 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_866, _867, _868), _1711);
        _1791 = _1779.x * cbModelParam._m0[1u].y;
        _1793 = _1779.y * cbModelParam._m0[1u].y;
        _1795 = _1779.z * cbModelParam._m0[1u].y;
    }
    float _1799 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _762);
    float _1800 = isnan(_1799) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1799 : min(cbModelParam._m0[25u].w, _1799));
    float _1892;
    float _1894;
    float _1896;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1856 = fma(_931, cbModelParam._m0[21u].z, fma(_927, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _923)) + cbModelParam._m0[21u].w;
        float _1860 = fma(_931, cbModelParam._m0[22u].z, fma(_927, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _923)) + cbModelParam._m0[22u].w;
        float _1864 = fma(_931, cbModelParam._m0[23u].z, fma(_927, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _923)) + cbModelParam._m0[23u].w;
        float _1867 = fma(_868, cbModelParam._m0[21u].z, fma(_867, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _866));
        float _1870 = fma(_868, cbModelParam._m0[22u].z, fma(_867, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _866));
        float _1873 = fma(_868, cbModelParam._m0[23u].z, fma(_867, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _866));
        float _1980;
        if (_1867 > 0.0)
        {
            _1980 = abs((1.0 - _1856) / _1867);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1867 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1856 + 1.0) / _1867);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1980 = frontier_phi_30_26_ladder;
        }
        float _2266;
        if (_1870 > 0.0)
        {
            _2266 = abs((1.0 - _1860) / _1870);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1870 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1860 + 1.0) / _1870);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2266 = frontier_phi_42_37_ladder;
        }
        float _2585;
        if (_1873 > 0.0)
        {
            _2585 = abs((1.0 - _1864) / _1873);
        }
        else
        {
            float frontier_phi_51_49_ladder;
            if (_1873 < 0.0)
            {
                frontier_phi_51_49_ladder = abs((_1864 + 1.0) / _1873);
            }
            else
            {
                frontier_phi_51_49_ladder = 5000.0;
            }
            _2585 = frontier_phi_51_49_ladder;
        }
        float _2587 = isnan(_2266) ? _1980 : (isnan(_1980) ? _2266 : min(_1980, _2266));
        float _2588 = isnan(_2585) ? _2587 : (isnan(_2587) ? _2585 : min(_2587, _2585));
        float _2592 = (_2588 * _1867) + _1856;
        float _2593 = (_2588 * _1870) + _1860;
        float _2594 = (_2588 * _1873) + _1864;
        float _2595 = _2588 * 9.9999997473787516355514526367188e-05;
        float _2596 = (-1.0) - _2595;
        float _2598 = _2595 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_2594 > _2598) || ((_2594 < _2596) || ((_2593 > _2598) || ((_2593 < _2596) || ((_2592 < _2596) || (_2592 > _2598))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2695 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2594, cbModelParam._m0[17u].z, fma(_2593, cbModelParam._m0[17u].y, _2592 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2594, cbModelParam._m0[18u].z, fma(_2593, cbModelParam._m0[18u].y, _2592 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2594, cbModelParam._m0[19u].z, fma(_2593, cbModelParam._m0[19u].y, _2592 * cbModelParam._m0[19u].x))), _1800);
            frontier_phi_27_51_ladder = _2695.x * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _2695.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _2695.y * cbModelParam._m0[1u].z;
        }
        _1892 = frontier_phi_27_51_ladder;
        _1894 = frontier_phi_27_51_ladder_2;
        _1896 = frontier_phi_27_51_ladder_1;
    }
    else
    {
        vec4 _1876 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_866, _867, _868), _1800);
        _1892 = _1876.x * cbModelParam._m0[1u].z;
        _1894 = _1876.y * cbModelParam._m0[1u].z;
        _1896 = _1876.z * cbModelParam._m0[1u].z;
    }
    float _1908 = ((((1.0 - _891) * ((_879 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_891 * _879)) * _858;
    float _1909 = _1908 * ((cbModelParam._m0[1u].w * (_1892 - _1791)) + _1791);
    float _1910 = _1908 * ((cbModelParam._m0[1u].w * (_1894 - _1793)) + _1793);
    float _1911 = _1908 * ((cbModelParam._m0[1u].w * (_1896 - _1795)) + _1795);
    float _1914 = fma(_1911, cbSceneParam._m0[89u].z, fma(_1910, cbSceneParam._m0[89u].y, _1909 * cbSceneParam._m0[89u].x));
    float _1917 = fma(_1911, cbSceneParam._m0[90u].z, fma(_1910, cbSceneParam._m0[90u].y, _1909 * cbSceneParam._m0[90u].x));
    float _1920 = fma(_1911, cbSceneParam._m0[91u].z, fma(_1910, cbSceneParam._m0[91u].y, _1909 * cbSceneParam._m0[91u].x));
    float _1954 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1958 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1962 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1966 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1967 = _1954 / _1966;
    float _1968 = _1958 / _1966;
    float _1969 = _1962 / _1966;
    float _2116;
    float _2117;
    float _2118;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1996 = ((uint(_1969 > cbSceneParam._m0[59u].y) + uint(_1969 > cbSceneParam._m0[59u].x)) + uint(_1969 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1997 = _1996 + 43u;
        uint _2005 = _1996 + 44u;
        uint _2013 = _1996 + 45u;
        uint _2021 = _1996 + 46u;
        float _2032 = fma(_1966, cbSceneParam._m0[_1997].w, fma(_1962, cbSceneParam._m0[_1997].z, fma(_1958, cbSceneParam._m0[_1997].y, _1954 * cbSceneParam._m0[_1997].x)));
        float _2036 = fma(_1966, cbSceneParam._m0[_2005].w, fma(_1962, cbSceneParam._m0[_2005].z, fma(_1958, cbSceneParam._m0[_2005].y, _1954 * cbSceneParam._m0[_2005].x)));
        float _2044 = fma(_1966, cbSceneParam._m0[_2021].w, fma(_1962, cbSceneParam._m0[_2021].z, fma(_1958, cbSceneParam._m0[_2021].y, _1954 * cbSceneParam._m0[_2021].x)));
        float _2049 = cbSceneParam._m0[33u].z * _2044;
        float _2051 = cbSceneParam._m0[33u].w * _2044;
        float _2054 = fma(_1966, cbSceneParam._m0[_2013].w, fma(_1962, cbSceneParam._m0[_2013].z, fma(_1958, cbSceneParam._m0[_2013].y, _1954 * cbSceneParam._m0[_2013].x))) / _2044;
        float _2102 = (cbSceneParam._m0[33u].x - sqrt(((_1968 * _1968) + (_1967 * _1967)) + (_1969 * _1969))) * cbSceneParam._m0[33u].y;
        float _4081 = isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0));
        float _2109 = (isnan(1.0) ? _4081 : (isnan(_4081) ? 1.0 : min(_4081, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2049 + _2032) / _2044, (_2051 + _2036) / _2044), _2054), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2051 + _2032) / _2044, (_2036 - _2049) / _2044), _2054), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2032 - _2049) / _2044, (_2036 - _2051) / _2044), _2054), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2032 - _2051) / _2044, (_2049 + _2036) / _2044), _2054), 0.0)).x), vec4(0.25)));
        _2116 = 1.0 - (_2109 * cbSceneParam._m0[34u].x);
        _2117 = 1.0 - (_2109 * cbSceneParam._m0[34u].y);
        _2118 = 1.0 - (_2109 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2116 = 1.0;
        _2117 = 1.0;
        _2118 = 1.0;
    }
    float _2182;
    float _2184;
    float _2186;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2170 = fma(_1966, cbSceneParam._m0[63u].w, fma(_1962, cbSceneParam._m0[63u].z, fma(_1958, cbSceneParam._m0[63u].y, _1954 * cbSceneParam._m0[63u].x)));
        float _2171 = fma(_1966, cbSceneParam._m0[60u].w, fma(_1962, cbSceneParam._m0[60u].z, fma(_1958, cbSceneParam._m0[60u].y, _1954 * cbSceneParam._m0[60u].x))) / _2170;
        float _2172 = fma(_1966, cbSceneParam._m0[61u].w, fma(_1962, cbSceneParam._m0[61u].z, fma(_1958, cbSceneParam._m0[61u].y, _1954 * cbSceneParam._m0[61u].x))) / _2170;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2171 >= cbSceneParam._m0[64u].x) && (_2172 >= cbSceneParam._m0[64u].y)) && (_2171 <= cbSceneParam._m0[64u].z)) && (_2172 <= cbSceneParam._m0[64u].w))
        {
            float _2279 = fma(_1966, cbSceneParam._m0[62u].w, fma(_1962, cbSceneParam._m0[62u].z, fma(_1958, cbSceneParam._m0[62u].y, _1954 * cbSceneParam._m0[62u].x))) / _2170;
            float _2283 = isnan(cbSceneParam._m0[41u].w) ? _2279 : (isnan(_2279) ? cbSceneParam._m0[41u].w : max(_2279, cbSceneParam._m0[41u].w));
            float _2326 = (cbSceneParam._m0[33u].x - sqrt(((_1968 * _1968) + (_1967 * _1967)) + (_1969 * _1969))) * cbSceneParam._m0[33u].y;
            float _4097 = isnan(0.0) ? _2326 : (isnan(_2326) ? 0.0 : max(_2326, 0.0));
            float _2333 = (isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2171, cbSceneParam._m0[33u].w + _2172), _2283), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2171, _2172 - cbSceneParam._m0[33u].z), _2283), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2171 - cbSceneParam._m0[33u].z, _2172 - cbSceneParam._m0[33u].w), _2283), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2171 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2172), _2283), 0.0)).x), vec4(0.25)));
            float _2337 = 1.0 - (_2333 * cbSceneParam._m0[34u].x);
            float _2338 = 1.0 - (_2333 * cbSceneParam._m0[34u].y);
            float _2339 = 1.0 - (_2333 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2339) ? _2118 : (isnan(_2118) ? _2339 : min(_2118, _2339));
            frontier_phi_39_38_ladder_1 = isnan(_2338) ? _2117 : (isnan(_2117) ? _2338 : min(_2117, _2338));
            frontier_phi_39_38_ladder_2 = isnan(_2337) ? _2116 : (isnan(_2116) ? _2337 : min(_2116, _2337));
        }
        else
        {
            frontier_phi_39_38_ladder = _2118;
            frontier_phi_39_38_ladder_1 = _2117;
            frontier_phi_39_38_ladder_2 = _2116;
        }
        _2182 = frontier_phi_39_38_ladder_2;
        _2184 = frontier_phi_39_38_ladder_1;
        _2186 = frontier_phi_39_38_ladder;
    }
    else
    {
        _2182 = _2116;
        _2184 = _2117;
        _2186 = _2118;
    }
    uvec4 _2191 = floatBitsToUint(cbInstanceData._m0[_312 + 5u]);
    uint _2193 = _2191.x * 14u;
    uint _2194 = _2193 + 13u;
    float _2199 = _858 + (-1.0);
    float _2202 = (cbLight._m0[_2194].x * _2199) + 1.0;
    float _2203 = (cbLight._m0[_2194].y * _2199) + 1.0;
    uint _2205 = _2193 + 4u;
    float _2216 = dot(vec3(cbLight._m0[_2193].xyz), vec3(_758, _759, _760));
    float _2219 = isnan(1.0) ? _2202 : (isnan(_2202) ? 1.0 : min(_2202, 1.0));
    float _2220 = cbLight._m0[_2205].x * _2182;
    float _2221 = cbLight._m0[_2205].y * _2184;
    float _2222 = cbLight._m0[_2205].z * _2186;
    uint _2223 = _2193 + 5u;
    uint _2229 = _2193 | 1u;
    float _2235 = dot(vec3(cbLight._m0[_2229].xyz), vec3(_758, _759, _760));
    float _2238 = isnan(1.0) ? _2203 : (isnan(_2203) ? 1.0 : min(_2203, 1.0));
    float _2411;
    float _2412;
    float _2413;
    if (_763 == 0.0)
    {
        float _4133 = isnan(0.0) ? _2216 : (isnan(_2216) ? 0.0 : max(_2216, 0.0));
        float _4144 = isnan(0.0) ? _2235 : (isnan(_2235) ? 0.0 : max(_2235, 0.0));
        float _2348 = (isnan(1.0) ? _4133 : (isnan(_4133) ? 1.0 : min(_4133, 1.0))) * 0.3183098733425140380859375;
        float _2350 = (isnan(1.0) ? _4144 : (isnan(_4144) ? 1.0 : min(_4144, 1.0))) * 0.3183098733425140380859375;
        _2411 = ((cbLight._m0[_2223].x * _2238) * _2350) + ((_2220 * _2219) * _2348);
        _2412 = ((_2238 * cbLight._m0[_2223].y) * _2350) + ((_2221 * _2219) * _2348);
        _2413 = ((_2238 * cbLight._m0[_2223].z) * _2350) + ((_2222 * _2219) * _2348);
    }
    else
    {
        float _2360 = _2216 + _763;
        float _2363 = (_763 * 2.0) + 1.0;
        float _2364 = (isnan(0.0) ? _2360 : (isnan(_2360) ? 0.0 : max(_2360, 0.0))) / _2363;
        float _2371 = _2235 + _763;
        float _2373 = (isnan(0.0) ? _2371 : (isnan(_2371) ? 0.0 : max(_2371, 0.0))) / _2363;
        _2411 = (((_2373 * cbLight._m0[_2223].x) * _2238) + ((_2220 * _2364) * _2219)) * 0.3183098733425140380859375;
        _2412 = (((_2373 * cbLight._m0[_2223].y) * _2238) + ((_2221 * _2364) * _2219)) * 0.3183098733425140380859375;
        _2413 = (((_2373 * cbLight._m0[_2223].z) * _2238) + ((_2222 * _2364) * _2219)) * 0.3183098733425140380859375;
    }
    uint _2417 = _2193 + 8u;
    float _2433 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2193].w)) * _762) * 0.949999988079071044921875);
    float _2434 = _2433 * _2433;
    float _2435 = cbLight._m0[_2193].x + _505;
    float _2436 = cbLight._m0[_2193].y + _506;
    float _2437 = cbLight._m0[_2193].z + _507;
    float _2441 = inversesqrt(dot(vec3(_2435, _2436, _2437), vec3(_2435, _2436, _2437)));
    float _2442 = _2441 * _2435;
    float _2443 = _2441 * _2436;
    float _2444 = _2441 * _2437;
    float _2445 = dot(vec3(_758, _759, _760), vec3(cbLight._m0[_2193].xyz));
    float _4165 = isnan(0.0) ? _2445 : (isnan(_2445) ? 0.0 : max(_2445, 0.0));
    float _2448 = isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0));
    float _4176 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
    float _2449 = isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0));
    float _2450 = dot(vec3(_758, _759, _760), vec3(_2442, _2443, _2444));
    float _4187 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
    float _2453 = isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0));
    float _2454 = dot(vec3(cbLight._m0[_2193].xyz), vec3(_2442, _2443, _2444));
    float _4198 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
    float _2458 = _2434 * _2434;
    float _2462 = ((_2453 * _2453) * (_2458 + (-1.0))) + 1.0;
    float _2473 = (exp2(log2(1.0 - (isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2474 = 1.0 - _2434;
    float _2485 = (0.5 / (((_2449 * ((_2448 * _2474) + _2434)) + 9.9999999392252902907785028219223e-09) + (((_2449 * _2474) + _2434) * _2448))) * _2448;
    float _4209 = isnan(0.0) ? _2485 : (isnan(_2485) ? 0.0 : max(_2485, 0.0));
    float _2487 = (isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0))) * (_2458 / ((_2462 * _2462) * 3.141590118408203125));
    uint _2503 = _2193 + 9u;
    float _2517 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2229].w)) * _762) * 0.949999988079071044921875);
    float _2518 = _2517 * _2517;
    float _2519 = cbLight._m0[_2229].x + _505;
    float _2520 = cbLight._m0[_2229].y + _506;
    float _2521 = cbLight._m0[_2229].z + _507;
    float _2525 = inversesqrt(dot(vec3(_2519, _2520, _2521), vec3(_2519, _2520, _2521)));
    float _2526 = _2525 * _2519;
    float _2527 = _2525 * _2520;
    float _2528 = _2525 * _2521;
    float _2529 = dot(vec3(_758, _759, _760), vec3(cbLight._m0[_2229].xyz));
    float _4220 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0));
    float _2532 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
    float _2533 = dot(vec3(_758, _759, _760), vec3(_2526, _2527, _2528));
    float _4231 = isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0));
    float _2536 = isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0));
    float _2537 = dot(vec3(cbLight._m0[_2229].xyz), vec3(_2526, _2527, _2528));
    float _4242 = isnan(0.0) ? _2537 : (isnan(_2537) ? 0.0 : max(_2537, 0.0));
    float _2541 = _2518 * _2518;
    float _2545 = ((_2536 * _2536) * (_2541 + (-1.0))) + 1.0;
    float _2554 = (exp2(log2(1.0 - (isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2555 = 1.0 - _2518;
    float _2565 = (0.5 / (((_2449 * ((_2532 * _2555) + _2518)) + 9.9999999392252902907785028219223e-09) + (((_2449 * _2555) + _2518) * _2532))) * _2532;
    float _4253 = isnan(0.0) ? _2565 : (isnan(_2565) ? 0.0 : max(_2565, 0.0));
    float _2567 = (isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0))) * (_2541 / ((_2545 * _2545) * 3.141590118408203125));
    float _2577 = (((_2554 * cbLight._m0[_2503].x) * _2567) * _2238) + ((((cbLight._m0[_2417].x * _2182) * _2473) * _2487) * _2219);
    float _2578 = (((_2554 * cbLight._m0[_2503].y) * _2567) * _2238) + ((((cbLight._m0[_2417].y * _2184) * _2473) * _2487) * _2219);
    float _2579 = (((_2554 * cbLight._m0[_2503].z) * _2567) * _2238) + ((((cbLight._m0[_2417].z * _2186) * _2473) * _2487) * _2219);
    float _2666;
    float _2668;
    float _2670;
    float _2672;
    float _2674;
    float _2676;
    if (_2191.y == 0u)
    {
        uvec4 _2622 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2623 = _2622.x;
        uint _2634 = uint((float(_2622.y) * floor(float(uint(cbSceneParam._m0[85u].y * _798) / _2623))) + floor(float(uint(cbSceneParam._m0[85u].x * _797) / _2623)));
        float _2644 = (log2(_1969 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2645 = isnan(0.0) ? _2644 : (isnan(_2644) ? 0.0 : max(_2644, 0.0));
        uint _2648 = uint(isnan(14.0) ? _2645 : (isnan(_2645) ? 14.0 : min(_2645, 14.0)));
        uint _2655 = _2622.z;
        float _2700;
        float _2702;
        float _2704;
        float _2706;
        float _2708;
        float _2710;
        if (((((1u << ((_2655 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2648 << 2u) + (_2634 << 6u)) >> 2u)).x) == 0u) || ((_2655 & 240u) == 0u))
        {
            _2700 = 0.0;
            _2702 = 0.0;
            _2704 = 0.0;
            _2706 = 0.0;
            _2708 = 0.0;
            _2710 = 0.0;
        }
        else
        {
            float _2701;
            float _2703;
            float _2705;
            float _2707;
            float _2709;
            float _2711;
            float _2866 = 0.0;
            float _2867 = 0.0;
            float _2868 = 0.0;
            float _2869 = 0.0;
            float _2870 = 0.0;
            float _2871 = 0.0;
            uint _2872 = 0u;
            uint _2881;
            bool _2882;
            for (;;)
            {
                _2881 = texelFetch(g_lightClassification, int((((_2648 << 5u) + (_2634 << 9u)) + (_2872 << 2u)) >> 2u)).x;
                _2882 = _2881 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2882)
                {
                    frontier_phi_63_pred = _2868;
                    frontier_phi_63_pred_1 = _2871;
                    frontier_phi_63_pred_2 = _2870;
                    frontier_phi_63_pred_3 = _2869;
                    frontier_phi_63_pred_4 = _2867;
                    frontier_phi_63_pred_5 = _2866;
                }
                else
                {
                    float _3082;
                    float _3083;
                    float _3084;
                    float _3085;
                    float _3086;
                    float _3087;
                    uint _3088;
                    _3082 = _2866;
                    _3083 = _2867;
                    _3084 = _2868;
                    _3085 = _2869;
                    _3086 = _2870;
                    _3087 = _2871;
                    _3088 = _2881;
                    float _3014;
                    float _3015;
                    float _3016;
                    float _3017;
                    float _3018;
                    float _3019;
                    for (;;)
                    {
                        uint _3092 = uint(findLSB(_3088)) + (_2872 << 5u);
                        uint _3089 = (_3088 + 4294967295u) & _3088;
                        uint _3094 = _3092 * 48u;
                        vec4 _3108 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3094)).x, texelFetch(g_PointLightRenderingBuffer, int(_3094 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3094 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3094 + 3u)).x));
                        uint _3114 = (_3092 * 48u) + 4u;
                        vec4 _3127 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3114)).x, texelFetch(g_PointLightRenderingBuffer, int(_3114 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3114 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3114 + 3u)).x));
                        float _3128 = _3127.x;
                        float _3129 = _3127.y;
                        float _3130 = _3127.z;
                        uint _3133 = (_3092 * 48u) + 8u;
                        vec3 _3144 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3133)).x, texelFetch(g_PointLightRenderingBuffer, int(_3133 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3133 + 2u)).x));
                        uint _3149 = (_3092 * 48u) + 12u;
                        vec2 _3157 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_3149)).x, texelFetch(g_PointLightRenderingBuffer, int(_3149 + 1u)).x));
                        float _3163 = inversesqrt(dot(vec3(_1967, _1968, _1969), vec3(_1967, _1968, _1969)));
                        float _3164 = _3163 * _1967;
                        float _3165 = _3163 * _1968;
                        float _3166 = _3163 * _1969;
                        float _3167 = _3108.x - _1967;
                        float _3168 = _3108.y - _1968;
                        float _3169 = _3108.z - _1969;
                        float _3170 = dot(vec3(_3167, _3168, _3169), vec3(_3167, _3168, _3169));
                        float _3173 = inversesqrt(_3170);
                        float _3174 = _3173 * _3167;
                        float _3175 = _3173 * _3168;
                        float _3176 = _3173 * _3169;
                        float _3177 = dot(vec3(_816, _819, _822), vec3(_3174, _3175, _3176));
                        float _3182 = 1.0 - (_3170 * _3108.w);
                        float _4274 = isnan(0.0) ? _3182 : (isnan(_3182) ? 0.0 : max(_3182, 0.0));
                        float _3183 = isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0));
                        float _3184 = sqrt(_3170) * _3127.w;
                        float _3187 = 1.39999997615814208984375 / (_3184 + 1.39999997615814208984375);
                        float _3188 = _3187 * _3187;
                        float _3189 = 1.0 - _3188;
                        float _3191 = (_3189 * _3189) * _763;
                        float _3194 = ((_3189 * _3177) + _3188) + _3191;
                        float _3199 = _3184 * _3184;
                        float _3204 = ((isnan(0.0) ? _3194 : (isnan(_3194) ? 0.0 : max(_3194, 0.0))) * _3183) / (((_3191 * 2.0) + 1.0) * ((_3199 * 0.699999988079071044921875) + 1.0));
                        float _3208 = dot(vec3(_3174, _3175, _3176), vec3(_3164, _3165, _3166));
                        float _4290 = isnan(0.0) ? _3208 : (isnan(_3208) ? 0.0 : max(_3208, 0.0));
                        float _3215 = dot(vec3((-0.0) - _3164, (-0.0) - _3165, (-0.0) - _3166), vec3(_816, _819, _822)) + 1.0;
                        float _3217 = (isnan(0.0) ? _3215 : (isnan(_3215) ? 0.0 : max(_3215, 0.0))) * 0.5;
                        float _3224 = ((_3217 * _3217) * _3157.x) * exp2((_3157.y * 32.0) * log2(isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0))));
                        float _3226 = _763 / (_763 + 1.0);
                        float _3242 = (-0.0) - _1967;
                        float _3243 = (-0.0) - _1968;
                        float _3244 = (-0.0) - _1969;
                        float _3248 = inversesqrt(dot(vec3(_3242, _3243, _3244), vec3(_3242, _3243, _3244)));
                        float _3249 = _3248 * _3242;
                        float _3250 = _3248 * _3243;
                        float _3251 = _3248 * _3244;
                        float _3258 = exp2(log2(1.0 / ((_3199 * 3.5) + 5.0)) * 0.25);
                        float _3259 = 1.0 - _879;
                        float _3266 = sqrt(1.0 - ((1.0 - (_3259 * _3259)) * (1.0 - (_3258 * _3258))));
                        float _3267 = _3266 * _3266;
                        float _3268 = _3267 * _3267;
                        float _3269 = _3249 + _3174;
                        float _3270 = _3250 + _3175;
                        float _3271 = _3251 + _3176;
                        float _3275 = inversesqrt(dot(vec3(_3269, _3270, _3271), vec3(_3269, _3270, _3271)));
                        float _3279 = dot(vec3(_816, _819, _822), vec3(_3249, _3250, _3251));
                        float _4306 = isnan(0.0) ? _3279 : (isnan(_3279) ? 0.0 : max(_3279, 0.0));
                        float _3282 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
                        float _3283 = dot(vec3(_816, _819, _822), vec3(_3275 * _3269, _3275 * _3270, _3275 * _3271));
                        float _4317 = isnan(0.0) ? _3283 : (isnan(_3283) ? 0.0 : max(_3283, 0.0));
                        float _3286 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
                        float _3290 = ((_3286 * _3286) * (_3268 + (-1.0))) + 1.0;
                        float _3291 = _3187 * _3267;
                        float _3292 = _3291 * _3291;
                        float _3295 = ((1.0 - _3292) * _3177) + _3292;
                        float _4328 = isnan(0.0) ? _3295 : (isnan(_3295) ? 0.0 : max(_3295, 0.0));
                        float _3296 = isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0));
                        float _3297 = 1.0 - _3267;
                        float _3307 = (0.5 / (((_3296 * ((_3282 * _3297) + _3267)) + 9.9999999392252902907785028219223e-09) + (((_3296 * _3297) + _3267) * _3282))) * _3296;
                        float _4339 = isnan(0.0) ? _3307 : (isnan(_3307) ? 0.0 : max(_3307, 0.0));
                        float _3318 = (((_3268 * 3.1415927410125732421875) * (isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0)))) / ((_3290 * _3290) * ((_3199 * 2.1991131305694580078125) + 3.141590118408203125))) * _3183;
                        _3017 = (((((_3128 * 0.3183098733425140380859375) * _3226) * _3224) + _3128) * _3204) + _3085;
                        _3018 = (((((_3129 * 0.3183098733425140380859375) * _3226) * _3224) + _3129) * _3204) + _3086;
                        _3019 = (((((_3130 * 0.3183098733425140380859375) * _3226) * _3224) + _3130) * _3204) + _3087;
                        _3014 = (_3318 * _3144.x) + _3082;
                        _3015 = (_3318 * _3144.y) + _3083;
                        _3016 = (_3318 * _3144.z) + _3084;
                        if (_3089 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3082 = _3014;
                            _3083 = _3015;
                            _3084 = _3016;
                            _3085 = _3017;
                            _3086 = _3018;
                            _3087 = _3019;
                            _3088 = _3089;
                        }
                    }
                    frontier_phi_63_pred = _3016;
                    frontier_phi_63_pred_1 = _3019;
                    frontier_phi_63_pred_2 = _3018;
                    frontier_phi_63_pred_3 = _3017;
                    frontier_phi_63_pred_4 = _3015;
                    frontier_phi_63_pred_5 = _3014;
                }
                _2705 = frontier_phi_63_pred;
                _2711 = frontier_phi_63_pred_1;
                _2709 = frontier_phi_63_pred_2;
                _2707 = frontier_phi_63_pred_3;
                _2703 = frontier_phi_63_pred_4;
                _2701 = frontier_phi_63_pred_5;
                uint _2873 = _2872 + 1u;
                if (_2873 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2866 = _2701;
                    _2867 = _2703;
                    _2868 = _2705;
                    _2869 = _2707;
                    _2870 = _2709;
                    _2871 = _2711;
                    _2872 = _2873;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2700 = _2701;
            _2702 = _2703;
            _2704 = _2705;
            _2706 = _2707;
            _2708 = _2709;
            _2710 = _2711;
        }
        float _2715 = isnan(1.0) ? _858 : (isnan(_858) ? 1.0 : min(_858, 1.0));
        _2666 = (_2715 * _2706) + _2411;
        _2668 = (_2715 * _2708) + _2412;
        _2670 = (_2715 * _2710) + _2413;
        _2672 = ((_2700 * 0.039999999105930328369140625) * _2715) + _2577;
        _2674 = ((_2702 * 0.039999999105930328369140625) * _2715) + _2578;
        _2676 = ((_2704 * 0.039999999105930328369140625) * _2715) + _2579;
    }
    else
    {
        _2666 = _2411;
        _2668 = _2412;
        _2670 = _2413;
        _2672 = _2577;
        _2674 = _2578;
        _2676 = _2579;
    }
    float _2789;
    float _2790;
    float _2791;
    if (_763 > 0.0)
    {
        uint _2722 = _2193 + 4u;
        float _2728 = (-0.0) - _505;
        float _2729 = (-0.0) - _506;
        float _2730 = (-0.0) - _507;
        float _2731 = dot(vec3(cbLight._m0[_2193].xyz), vec3(_2728, _2729, _2730));
        float _4355 = isnan(0.0) ? _2731 : (isnan(_2731) ? 0.0 : max(_2731, 0.0));
        float _2735 = _869 + 1.0;
        float _2737 = (isnan(0.0) ? _2735 : (isnan(_2735) ? 0.0 : max(_2735, 0.0))) * 0.5;
        float _2742 = _2737 * _2737;
        float _2743 = _2742 * exp2(log2(isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0))) * 32.0);
        float _2745 = _763 / (_763 + 1.0);
        float _2746 = isnan(_2202) ? 1.0 : (isnan(1.0) ? _2202 : min(1.0, _2202));
        uint _2759 = _2193 + 5u;
        float _2765 = dot(vec3(cbLight._m0[_2229].xyz), vec3(_2728, _2729, _2730));
        float _4376 = isnan(0.0) ? _2765 : (isnan(_2765) ? 0.0 : max(_2765, 0.0));
        float _2772 = _2742 * exp2(log2(isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0))) * 32.0);
        float _2773 = isnan(_2203) ? 1.0 : (isnan(1.0) ? _2203 : min(1.0, _2203));
        _2789 = ((((_2772 * cbLight._m0[_2759].x) * _2745) * _2773) + ((((cbLight._m0[_2722].x * _2182) * _2743) * _2745) * _2746)) * 0.3183098733425140380859375;
        _2790 = ((((_2772 * cbLight._m0[_2759].y) * _2745) * _2773) + ((((cbLight._m0[_2722].y * _2184) * _2743) * _2745) * _2746)) * 0.3183098733425140380859375;
        _2791 = ((((_2772 * cbLight._m0[_2759].z) * _2745) * _2773) + ((((cbLight._m0[_2722].z * _2186) * _2743) * _2745) * _2746)) * 0.3183098733425140380859375;
    }
    else
    {
        _2789 = 0.0;
        _2790 = 0.0;
        _2791 = 0.0;
    }
    float _4392 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _4403 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _4414 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _4425 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _2806 = (isnan(1.0) ? _4392 : (isnan(_4392) ? 1.0 : min(_4392, 1.0))) * ((_2666 + ((isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0))) * _858)) + _2789);
    float _2807 = (isnan(1.0) ? _4403 : (isnan(_4403) ? 1.0 : min(_4403, 1.0))) * ((_2668 + ((isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0))) * _858)) + _2790);
    float _2808 = (isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0))) * ((_2670 + ((isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0))) * _858)) + _2791);
    float _2812 = 0.959999978542327880859375 - (exp2(log2(1.0 - _873) * 5.0) * 0.959999978542327880859375);
    float _2823 = (_2806 + ((_2672 + ((isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0))) * _1700)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _697.x) * _2812) - _2806) * _743);
    float _2825 = (_2807 + ((_2674 + ((isnan(0.0) ? _1917 : (isnan(_1917) ? 0.0 : max(_1917, 0.0))) * _1700)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _697.y) * _2812) - _2807) * _743);
    float _2827 = (_2808 + ((_2676 + ((isnan(0.0) ? _1920 : (isnan(_1920) ? 0.0 : max(_1920, 0.0))) * _1700)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _697.z) * _2812) - _2808) * _743);
    float _2832 = cbInstanceData._m0[_312 + 6u].w * (isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0)));
    float _2837 = _797 / cbSceneParam._m0[86u].x;
    float _2838 = _798 / cbSceneParam._m0[86u].y;
    vec4 _2852 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2837, _2838, (log2((isnan(cbSceneParam._m0[77u].w) ? _780 : (isnan(_780) ? cbSceneParam._m0[77u].w : min(_780, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2854 = _2852.x;
    float _2855 = _2852.y;
    float _2856 = _2852.z;
    float _2857 = _2852.w;
    float _2924;
    float _2926;
    float _2928;
    float _2930;
    if (_780 > cbSceneParam._m0[78u].w)
    {
        float _2887 = isnan(_780) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _780 : min(cbSceneParam._m0[80u].w, _780));
        float _2888 = _2887 / _780;
        float _2899 = _2888 * _304;
        float _2900 = _305 * _2888;
        float _2901 = (-0.0) - _2900;
        float _2902 = _2888 * _306;
        float _2904 = (cbSceneParam._m0[77u].w * _2901) / _2887;
        float _2905 = _2904 + cbSceneParam._m0[79u].w;
        float _2906 = cbSceneParam._m0[79u].w - _2900;
        float _2912 = sqrt(((_2899 * _2899) + (_2900 * _2900)) + (_2902 * _2902));
        float _2915 = (1.0 - (cbSceneParam._m0[77u].w / _2887)) * _2912;
        float _2920 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2922 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3323;
        if (abs((_2901 - _2904) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3323 = ((((_2905 > 0.0) ? exp2(_2920 * _2905) : (2.0 - exp2(_2922 * _2905))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2915;
        }
        else
        {
            float _3039 = 1.0 / cbSceneParam._m0[80u].x;
            float _3040 = isnan(_2906) ? _2905 : (isnan(_2905) ? _2906 : max(_2905, _2906));
            float _3041 = isnan(_2906) ? _2905 : (isnan(_2905) ? _2906 : min(_2905, _2906));
            float _3050 = isnan(0.0) ? _3040 : (isnan(_3040) ? 0.0 : min(_3040, 0.0));
            float _3051 = isnan(0.0) ? _3041 : (isnan(_3041) ? 0.0 : min(_3041, 0.0));
            _3323 = ((abs(_2912 / _2901) * cbSceneParam._m0[80u].y) * ((((_3050 - _3051) * 2.0) - ((exp2(_2920 * (isnan(0.0) ? _3040 : (isnan(_3040) ? 0.0 : max(_3040, 0.0)))) - exp2(_2920 * (isnan(0.0) ? _3041 : (isnan(_3041) ? 0.0 : max(_3041, 0.0))))) * _3039)) - ((exp2(_2922 * _3050) - exp2(_2922 * _3051)) * _3039))) + (_2915 * cbSceneParam._m0[80u].z);
        }
        vec4 _3325 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2837, _2838, 1.0), 0.0);
        float _3334 = exp2((_3323 * (-1.44269502162933349609375)) * (1.0 - _3325.w));
        float _3335 = log2(_3334);
        float _3351 = log2(_2857);
        _2924 = (exp2(_3351 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3335 * cbSceneParam._m0[78u].x)) * _3325.x) / cbSceneParam._m0[78u].x)) + _2854;
        _2926 = (exp2(_3351 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3335 * cbSceneParam._m0[78u].y)) * _3325.y) / cbSceneParam._m0[78u].y)) + _2855;
        _2928 = (exp2(_3351 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3335 * cbSceneParam._m0[78u].z)) * _3325.z) / cbSceneParam._m0[78u].z)) + _2856;
        _2930 = _3334 * _2857;
    }
    else
    {
        _2924 = _2854;
        _2926 = _2855;
        _2928 = _2856;
        _2930 = _2857;
    }
    bool _3361;
    float _2985;
    vec4 _2988;
    float _2990;
    vec4 _2992;
    float _3000;
    float _3001;
    float _3002;
    float _3003;
    bool _3013;
    for (;;)
    {
        bool _2942 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2943 = log2(_2930);
        float _2950 = exp2(_2943 * cbSceneParam._m0[78u].x) * _2823;
        float _2951 = exp2(_2943 * cbSceneParam._m0[78u].y) * _2825;
        float _2952 = exp2(_2943 * cbSceneParam._m0[78u].z) * _2827;
        vec4 _2960 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_797, _798));
        float _2962 = _2960.x;
        float _2983 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2962)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2962))) - _780) * cbMtdParam._m0[17u].y;
        float _4476 = isnan(0.0) ? _2983 : (isnan(_2983) ? 0.0 : max(_2983, 0.0));
        _2985 = _2832 * (isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0)));
        float _2986 = _787 + (-0.5);
        _2988 = cbMtdParam._m0[1u];
        _2990 = _2988.y * _2986;
        _2992 = cbMatDynParam._m0[0u];
        float _2999 = (roundEven(_2992.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3000 = _2999 * (_2942 ? _2950 : (_2950 + (cbSceneParam._m0[72u].w * _2924)));
        _3001 = _2999 * (_2942 ? _2951 : (_2951 + (cbSceneParam._m0[72u].w * _2926)));
        _3002 = _2999 * (_2942 ? _2952 : (_2952 + (cbSceneParam._m0[72u].w * _2928)));
        _3003 = _2986 * 0.999000012874603271484375;
        _3013 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3013)
        {
            if ((cbInstanceData._m0[_312 + 7u].x + _3003) < 0.5)
            {
                _3361 = true;
                break;
            }
        }
        uint _3074 = _835 + uint(_2992.w);
        if ((cbInstanceData._m0[_3074].w < 1.0) && ((cbInstanceData._m0[_3074].w + _3003) < 0.5))
        {
            _3361 = true;
            break;
        }
        if ((_2990 + _415) < _2988.x)
        {
            _3361 = true;
            break;
        }
        _3361 = false;
        break;
    }
    float _3366;
    if (_3361)
    {
        discard_state = true;
        _3366 = 0.0;
    }
    else
    {
        _3366 = _2985;
    }
    SV_Target.x = _3000;
    SV_Target.y = _3001;
    SV_Target.z = _3002;
    SV_Target.w = _3366;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2985;
    discard_exit();
}


