#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1191;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _202 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _203 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _204 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _210 = inversesqrt(dot(vec3(_202, _203, _204), vec3(_202, _203, _204)));
    float _211 = _210 * _202;
    float _212 = _210 * _203;
    float _213 = _210 * _204;
    float _217 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _218 = _217 * NORMAL.x;
    float _219 = _217 * NORMAL.y;
    float _220 = _217 * NORMAL.z;
    float _224 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _225 = _224 * TANGENT.x;
    float _226 = _224 * TANGENT.y;
    float _227 = _224 * TANGENT.z;
    float _232;
    float _233;
    float _234;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _232 = (-0.0) - _218;
        _233 = (-0.0) - _219;
        _234 = (-0.0) - _220;
    }
    else
    {
        _232 = _218;
        _233 = _219;
        _234 = _220;
    }
    float _281 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _291 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _281);
    float _292 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _281);
    float _293 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _281);
    uint _299 = uint(roundEven(NORMAL.w)) * 13u;
    uint _304 = _299 + 1u;
    uint _308 = _299 + 2u;
    float _317 = sqrt(((cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x) + (cbInstanceData._m0[_299].x * cbInstanceData._m0[_299].x)) + (cbInstanceData._m0[_308].x * cbInstanceData._m0[_308].x));
    float _318 = _317 * TEXCOORD.z;
    float _319 = _317 * TEXCOORD.w;
    vec4 _332 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _318) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _319) + cbTextureTilingScale._m0[8u].w));
    vec4 _359 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _367 = (_359.x * 2.0) + (-1.0);
    float _369 = (_359.y * 2.0) + (-1.0);
    float _370 = dot(vec2(_367, _369), vec2(_367, _369));
    float _3077 = isnan(0.0) ? _370 : (isnan(_370) ? 0.0 : max(_370, 0.0));
    float _376 = sqrt(1.0 - (isnan(1.0) ? _3077 : (isnan(_3077) ? 1.0 : min(_3077, 1.0))));
    float _379 = fma(_376, _232, fma(_369, _225, _367 * _211));
    float _382 = fma(_376, _233, fma(_369, _226, _367 * _212));
    float _385 = fma(_376, _234, fma(_369, _227, _367 * _213));
    float _389 = inversesqrt(dot(vec3(_379, _382, _385), vec3(_379, _382, _385)));
    float _390 = _389 * _379;
    float _391 = _389 * _382;
    float _420 = (cbMtdParam._m0[17u].w + dot(vec4(_390, _391, _389 * _385, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _318) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _319) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3088 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
    float _421 = isnan(1.0) ? _3088 : (isnan(_3088) ? 1.0 : min(_3088, 1.0));
    vec4 _433 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _438 = _433.w;
    float _450 = dot(vec3(_291, _292, _293), vec3(_211, _212, _213));
    float _453 = dot(vec3(_291, _292, _293), vec3(_225, _226, _227));
    float _456 = dot(vec3(_291, _292, _293), vec3(_232, _233, _234));
    float _462 = inversesqrt(dot(vec3(_450, _453, _456), vec3(_450, _453, _456)));
    float _484 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _504 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_450 * cbMtdParam._m0[14u].x) * _462) * _484) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_453 * cbMtdParam._m0[14u].x) * _462) * _484) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _527 = inversesqrt(dot(vec3(_291, _292, _293), vec3(_291, _292, _293)));
    float _528 = _527 * _291;
    float _529 = _527 * _292;
    float _530 = _527 * _293;
    float _531 = dot(vec4(_528, _529, _530, 0.0), vec4(_232, _233, _234, 0.0));
    float _534 = _531 - cbMtdParam._m0[15u].z;
    float _3099 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
    float _541 = exp2(log2(1.0 - (isnan(1.0) ? _3099 : (isnan(_3099) ? 1.0 : min(_3099, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _556 = ((((_433.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _504.x) * cbMtdParam._m0[9u].x) * ((_541 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _561 = ((((_433.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _504.y) * cbMtdParam._m0[9u].y) * ((_541 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _566 = ((((_433.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _504.z) * cbMtdParam._m0[9u].z) * ((_541 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _573 = (((_332.x * cbMtdParam._m0[10u].x) - _556) * _421) + _556;
    float _574 = (((_332.y * cbMtdParam._m0[10u].y) - _561) * _421) + _561;
    float _575 = (((_332.z * cbMtdParam._m0[10u].z) - _566) * _421) + _566;
    vec4 _587 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _318) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _319) + cbTextureTilingScale._m0[9u].w));
    float _594 = (_587.x * 2.0) + (-1.0);
    float _595 = (_587.y * 2.0) + (-1.0);
    float _596 = dot(vec2(_594, _595), vec2(_594, _595));
    float _3115 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    float _608 = (cbMtdParam._m0[16u].y + _359.z) + cbMtdParam._m0[17u].z;
    float _611 = ((_587.z - _608) * _421) + _608;
    float _621 = ((sqrt(1.0 - (isnan(1.0) ? _3115 : (isnan(_3115) ? 1.0 : min(_3115, 1.0)))) - _376) * _421) + _376;
    float _624 = (((_594 - _367) * _421) + _367) + (cbMtdParam._m0[14u].z * _367);
    float _625 = (((_595 - _369) * _421) + _369) + (cbMtdParam._m0[14u].z * _369);
    vec4 _637 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _641 = cbMtdParam._m0[16u].w * _637.x;
    float _643 = _641 - (_641 * _421);
    float _652 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _653 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _663 = cbSceneParam._m0[86u].x * ((_652 / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _390));
    float _664 = cbSceneParam._m0[86u].y * ((_653 / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _391));
    float _671 = isnan(cbInstanceData._m0[8u].x) ? _663 : (isnan(_663) ? cbInstanceData._m0[8u].x : max(_663, cbInstanceData._m0[8u].x));
    float _672 = isnan(cbInstanceData._m0[8u].y) ? _664 : (isnan(_664) ? cbInstanceData._m0[8u].y : max(_664, cbInstanceData._m0[8u].y));
    vec4 _676 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _671 : (isnan(_671) ? cbInstanceData._m0[8u].z : min(_671, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _672 : (isnan(_672) ? cbInstanceData._m0[8u].w : min(_672, cbInstanceData._m0[8u].w))));
    float _709 = _531 - cbMtdParam._m0[15u].x;
    float _3146 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _719 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3146 : (isnan(_3146) ? 1.0 : min(_3146, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3162 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _720 = isnan(1.0) ? _3162 : (isnan(_3162) ? 1.0 : min(_3162, 1.0));
    float _722 = _720 - (_720 * _421);
    float _726 = fma(_621, _232, fma(_625, _225, _624 * _211));
    float _729 = fma(_621, _233, fma(_625, _226, _624 * _212));
    float _732 = fma(_621, _234, fma(_625, _227, _624 * _213));
    float _736 = inversesqrt(dot(vec3(_726, _729, _732), vec3(_726, _729, _732)));
    float _737 = _736 * _726;
    float _738 = _736 * _729;
    float _739 = _736 * _732;
    float _3173 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _740 = isnan(1.0) ? _3173 : (isnan(_3173) ? 1.0 : min(_3173, 1.0));
    float _3184 = isnan(0.0) ? _611 : (isnan(_611) ? 0.0 : max(_611, 0.0));
    float _741 = isnan(1.0) ? _3184 : (isnan(_3184) ? 1.0 : min(_3184, 1.0));
    float _742 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _3200 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    float _3211 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
    float _3222 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _759 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _777 = fma(_739, cbSceneParam._m0[5u].z, fma(_738, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _737));
    float _780 = fma(_739, cbSceneParam._m0[6u].z, fma(_738, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _737));
    float _783 = fma(_739, cbSceneParam._m0[7u].z, fma(_738, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _737));
    uint _797 = (_299 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _803 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3200 : (isnan(_3200) ? 1.0 : min(_3200, 1.0)))) * cbInstanceData._m0[_797].x;
    float _804 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3211 : (isnan(_3211) ? 1.0 : min(_3211, 1.0)))) * cbInstanceData._m0[_797].y;
    float _805 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3222 : (isnan(_3222) ? 1.0 : min(_3222, 1.0)))) * cbInstanceData._m0[_797].z;
    float _3233 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
    float _806 = isnan(1.0) ? _3233 : (isnan(_3233) ? 1.0 : min(_3233, 1.0));
    float _3244 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
    float _807 = isnan(1.0) ? _3244 : (isnan(_3244) ? 1.0 : min(_3244, 1.0));
    float _3255 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _808 = isnan(1.0) ? _3255 : (isnan(_3255) ? 1.0 : min(_3255, 1.0));
    vec4 _812 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _652, cbSceneParam._m0[86u].y * _653));
    float _815 = _812.x * TEXCOORD_5.w;
    float _816 = dot(vec3(_737, _738, _739), vec3(_528, _529, _530));
    float _819 = _816 * 2.0;
    float _823 = (_819 * _737) - _528;
    float _824 = (_819 * _738) - _529;
    float _825 = (_819 * _739) - _530;
    float _826 = dot(vec3(_528, _529, _530), vec3(_737, _738, _739));
    float _829 = abs(_826);
    float _3266 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _830 = isnan(1.0) ? _3266 : (isnan(_3266) ? 1.0 : min(_3266, 1.0));
    float _836 = sqrt(_741);
    float _848 = exp2((_836 * 5.0) * log2(1.0 - (_830 * 0.999000012874603271484375))) / (4.0 - (_836 * 3.0));
    float _880 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _884 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _888 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1190;
    float _1192;
    float _1193;
    float _1194;
    float _1195;
    float _1196;
    float _1197;
    float _1198;
    float _1199;
    float _1200;
    float _1201;
    float _1202;
    float _1203;
    float _1204;
    float _1205;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _915 = fma(_888, cbModelParam._m0[26u].z, fma(_884, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _880));
        float _919 = fma(_888, cbModelParam._m0[27u].z, fma(_884, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _880));
        float _923 = fma(_888, cbModelParam._m0[28u].z, fma(_884, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _880));
        float _948 = _880 + _737;
        float _949 = _884 + _738;
        float _950 = _888 + _739;
        float _960 = fma(_950, cbModelParam._m0[26u].z, fma(_949, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _948)) - _915;
        float _961 = fma(_950, cbModelParam._m0[27u].z, fma(_949, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _948)) - _919;
        float _962 = fma(_950, cbModelParam._m0[28u].z, fma(_949, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _948)) - _923;
        float _966 = inversesqrt(dot(vec3(_960, _961, _962), vec3(_960, _961, _962)));
        float _979 = ((_966 * _960) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_915 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _980 = ((_966 * _961) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_919 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _981 = ((_966 * _962) / cbModelParam._m0[34u].z) + ((((((_923 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _984 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_979, _980, _981), 0.0);
        vec4 _991 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_979, _980, _981), 0.0);
        vec4 _998 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_979, _980, _981), 0.0);
        vec4 _1005 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_979, _980, _981), 0.0);
        float _1018 = exp2((_984.w + (-0.5)) * 20.0) * 2.0;
        float _1019 = _1018 * (_984.x + (-0.5));
        float _1020 = _1018 * (_984.y + (-0.5));
        float _1021 = _1018 * (_984.z + (-0.5));
        float _1028 = exp2((_991.w + (-0.5)) * 20.0) * 2.0;
        float _1029 = _1028 * (_991.x + (-0.5));
        float _1030 = _1028 * (_991.y + (-0.5));
        float _1031 = _1028 * (_991.z + (-0.5));
        float _1038 = exp2((_998.w + (-0.5)) * 20.0) * 2.0;
        float _1039 = _1038 * (_998.x + (-0.5));
        float _1040 = _1038 * (_998.y + (-0.5));
        float _1041 = _1038 * (_998.z + (-0.5));
        float _1048 = exp2((_1005.w + (-0.5)) * 20.0) * 2.0;
        float _1049 = _1048 * (_1005.x + (-0.5));
        float _1050 = _1048 * (_1005.y + (-0.5));
        float _1051 = _1048 * (_1005.z + (-0.5));
        float _1052 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
        float _1053 = isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0));
        float _1054 = isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0));
        float _1055 = _1019 * 0.5;
        float _1056 = _1029 * 0.5;
        float _1057 = _1039 * 0.5;
        float _1058 = dot(vec3(_1055, _1056, _1057), vec3(_1055, _1056, _1057));
        float _1063 = (_1058 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1058);
        float _1072 = (dot(vec3(_737, _738, _739), vec3(_1063 * _1055, _1063 * _1056, _1063 * _1057)) + 1.0) * 0.5;
        float _3292 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
        float _1082 = sqrt(((_1056 * _1056) + (_1055 * _1055)) + (_1057 * _1057)) / (_1052 + 9.9999997473787516355514526367188e-06);
        float _3303 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
        float _1083 = isnan(1.0) ? _3303 : (isnan(_3303) ? 1.0 : min(_3303, 1.0));
        float _1084 = _1083 * 2.0;
        float _1088 = (1.0 - _1083) / (_1083 + 1.0);
        float _3314 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
        float _1089 = isnan(1.0) ? _3314 : (isnan(_3314) ? 1.0 : min(_3314, 1.0));
        float _1098 = ((((1.0 - _1089) * (_1084 + 2.0)) * exp2(log2(isnan(1.0) ? _3292 : (isnan(_3292) ? 1.0 : min(_3292, 1.0))) * (_1084 + 1.0))) + _1089) * _1052;
        float _1099 = _1020 * 0.5;
        float _1100 = _1030 * 0.5;
        float _1101 = _1040 * 0.5;
        float _1102 = dot(vec3(_1099, _1100, _1101), vec3(_1099, _1100, _1101));
        float _1107 = (_1102 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1102);
        float _1115 = (dot(vec3(_737, _738, _739), vec3(_1107 * _1099, _1107 * _1100, _1107 * _1101)) + 1.0) * 0.5;
        float _3325 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
        float _1124 = sqrt(((_1100 * _1100) + (_1099 * _1099)) + (_1101 * _1101)) / (_1053 + 9.9999997473787516355514526367188e-06);
        float _3336 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1125 = isnan(1.0) ? _3336 : (isnan(_3336) ? 1.0 : min(_3336, 1.0));
        float _1126 = _1125 * 2.0;
        float _1130 = (1.0 - _1125) / (_1125 + 1.0);
        float _3347 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
        float _1131 = isnan(1.0) ? _3347 : (isnan(_3347) ? 1.0 : min(_3347, 1.0));
        float _1140 = ((((1.0 - _1131) * (_1126 + 2.0)) * exp2(log2(isnan(1.0) ? _3325 : (isnan(_3325) ? 1.0 : min(_3325, 1.0))) * (_1126 + 1.0))) + _1131) * _1053;
        float _1141 = _1021 * 0.5;
        float _1142 = _1031 * 0.5;
        float _1143 = _1041 * 0.5;
        float _1144 = dot(vec3(_1141, _1142, _1143), vec3(_1141, _1142, _1143));
        float _1149 = (_1144 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1144);
        float _1157 = (dot(vec3(_737, _738, _739), vec3(_1149 * _1141, _1149 * _1142, _1149 * _1143)) + 1.0) * 0.5;
        float _3358 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1166 = sqrt(((_1142 * _1142) + (_1141 * _1141)) + (_1143 * _1143)) / (_1054 + 9.9999997473787516355514526367188e-06);
        float _3369 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1167 = isnan(1.0) ? _3369 : (isnan(_3369) ? 1.0 : min(_3369, 1.0));
        float _1168 = _1167 * 2.0;
        float _1172 = (1.0 - _1167) / (_1167 + 1.0);
        float _3380 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1173 = isnan(1.0) ? _3380 : (isnan(_3380) ? 1.0 : min(_3380, 1.0));
        float _1182 = ((((1.0 - _1173) * (_1168 + 2.0)) * exp2(log2(isnan(1.0) ? _3358 : (isnan(_3358) ? 1.0 : min(_3358, 1.0))) * (_1168 + 1.0))) + _1173) * _1054;
        _1190 = _1021;
        _1192 = _1020;
        _1193 = _1019;
        _1194 = _1031;
        _1195 = _1030;
        _1196 = _1029;
        _1197 = _1041;
        _1198 = _1040;
        _1199 = _1039;
        _1200 = _1054;
        _1201 = _1053;
        _1202 = _1052;
        _1203 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0)));
        _1204 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0)));
        _1205 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0)));
    }
    else
    {
        _1190 = _1191;
        _1192 = _1191;
        _1193 = _1191;
        _1194 = _1191;
        _1195 = _1191;
        _1196 = _1191;
        _1197 = _1191;
        _1198 = _1191;
        _1199 = _1191;
        _1200 = _1191;
        _1201 = _1191;
        _1202 = _1191;
        _1203 = 0.0;
        _1204 = 0.0;
        _1205 = 0.0;
    }
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    float _1504;
    float _1505;
    float _1506;
    float _1507;
    float _1508;
    float _1509;
    float _1510;
    float _1511;
    float _1512;
    float _1513;
    float _1514;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1231 = fma(_888, cbModelParam._m0[30u].z, fma(_884, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _880));
        float _1235 = fma(_888, cbModelParam._m0[31u].z, fma(_884, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _880));
        float _1239 = fma(_888, cbModelParam._m0[32u].z, fma(_884, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _880));
        float _1262 = _880 + _737;
        float _1263 = _884 + _738;
        float _1264 = _888 + _739;
        float _1274 = fma(_1264, cbModelParam._m0[30u].z, fma(_1263, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1262)) - _1231;
        float _1275 = fma(_1264, cbModelParam._m0[31u].z, fma(_1263, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1262)) - _1235;
        float _1276 = fma(_1264, cbModelParam._m0[32u].z, fma(_1263, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1262)) - _1239;
        float _1280 = inversesqrt(dot(vec3(_1274, _1275, _1276), vec3(_1274, _1275, _1276)));
        float _1293 = ((_1280 * _1274) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1231 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1294 = ((_1280 * _1275) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1235 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1295 = ((_1280 * _1276) / cbModelParam._m0[35u].z) + ((((((_1239 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1297 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1293, _1294, _1295), 0.0);
        vec4 _1304 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1293, _1294, _1295), 0.0);
        vec4 _1311 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1293, _1294, _1295), 0.0);
        vec4 _1318 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1293, _1294, _1295), 0.0);
        float _1330 = exp2((_1297.w + (-0.5)) * 20.0) * 2.0;
        float _1331 = _1330 * (_1297.x + (-0.5));
        float _1332 = _1330 * (_1297.y + (-0.5));
        float _1333 = _1330 * (_1297.z + (-0.5));
        float _1340 = exp2((_1304.w + (-0.5)) * 20.0) * 2.0;
        float _1341 = _1340 * (_1304.x + (-0.5));
        float _1342 = _1340 * (_1304.y + (-0.5));
        float _1343 = _1340 * (_1304.z + (-0.5));
        float _1350 = exp2((_1311.w + (-0.5)) * 20.0) * 2.0;
        float _1351 = _1350 * (_1311.x + (-0.5));
        float _1352 = _1350 * (_1311.y + (-0.5));
        float _1353 = _1350 * (_1311.z + (-0.5));
        float _1360 = exp2((_1318.w + (-0.5)) * 20.0) * 2.0;
        float _1361 = _1360 * (_1318.x + (-0.5));
        float _1362 = _1360 * (_1318.y + (-0.5));
        float _1363 = _1360 * (_1318.z + (-0.5));
        float _1364 = isnan(0.0) ? _1361 : (isnan(_1361) ? 0.0 : max(_1361, 0.0));
        float _1365 = isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0));
        float _1366 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
        float _1367 = _1331 * 0.5;
        float _1368 = _1341 * 0.5;
        float _1369 = _1351 * 0.5;
        float _1370 = dot(vec3(_1367, _1368, _1369), vec3(_1367, _1368, _1369));
        float _1375 = (_1370 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1370);
        float _1383 = (dot(vec3(_737, _738, _739), vec3(_1375 * _1367, _1375 * _1368, _1375 * _1369)) + 1.0) * 0.5;
        float _3421 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1392 = sqrt(((_1368 * _1368) + (_1367 * _1367)) + (_1369 * _1369)) / (_1364 + 9.9999997473787516355514526367188e-06);
        float _3432 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1393 = isnan(1.0) ? _3432 : (isnan(_3432) ? 1.0 : min(_3432, 1.0));
        float _1394 = _1393 * 2.0;
        float _1398 = (1.0 - _1393) / (_1393 + 1.0);
        float _3443 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1399 = isnan(1.0) ? _3443 : (isnan(_3443) ? 1.0 : min(_3443, 1.0));
        float _1408 = ((((1.0 - _1399) * (_1394 + 2.0)) * exp2(log2(isnan(1.0) ? _3421 : (isnan(_3421) ? 1.0 : min(_3421, 1.0))) * (_1394 + 1.0))) + _1399) * _1364;
        float _1409 = _1332 * 0.5;
        float _1410 = _1342 * 0.5;
        float _1411 = _1352 * 0.5;
        float _1412 = dot(vec3(_1409, _1410, _1411), vec3(_1409, _1410, _1411));
        float _1417 = (_1412 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1412);
        float _1425 = (dot(vec3(_737, _738, _739), vec3(_1417 * _1409, _1417 * _1410, _1417 * _1411)) + 1.0) * 0.5;
        float _3454 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1434 = sqrt(((_1410 * _1410) + (_1409 * _1409)) + (_1411 * _1411)) / (_1365 + 9.9999997473787516355514526367188e-06);
        float _3465 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1435 = isnan(1.0) ? _3465 : (isnan(_3465) ? 1.0 : min(_3465, 1.0));
        float _1436 = _1435 * 2.0;
        float _1440 = (1.0 - _1435) / (_1435 + 1.0);
        float _3476 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1441 = isnan(1.0) ? _3476 : (isnan(_3476) ? 1.0 : min(_3476, 1.0));
        float _1450 = ((((1.0 - _1441) * (_1436 + 2.0)) * exp2(log2(isnan(1.0) ? _3454 : (isnan(_3454) ? 1.0 : min(_3454, 1.0))) * (_1436 + 1.0))) + _1441) * _1365;
        float _1451 = _1333 * 0.5;
        float _1452 = _1343 * 0.5;
        float _1453 = _1353 * 0.5;
        float _1454 = dot(vec3(_1451, _1452, _1453), vec3(_1451, _1452, _1453));
        float _1459 = (_1454 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1454);
        float _1467 = (dot(vec3(_737, _738, _739), vec3(_1459 * _1451, _1459 * _1452, _1459 * _1453)) + 1.0) * 0.5;
        float _3487 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1476 = sqrt(((_1452 * _1452) + (_1451 * _1451)) + (_1453 * _1453)) / (_1366 + 9.9999997473787516355514526367188e-06);
        float _3498 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1477 = isnan(1.0) ? _3498 : (isnan(_3498) ? 1.0 : min(_3498, 1.0));
        float _1478 = _1477 * 2.0;
        float _1482 = (1.0 - _1477) / (_1477 + 1.0);
        float _3509 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1483 = isnan(1.0) ? _3509 : (isnan(_3509) ? 1.0 : min(_3509, 1.0));
        float _1492 = ((((1.0 - _1483) * (_1478 + 2.0)) * exp2(log2(isnan(1.0) ? _3487 : (isnan(_3487) ? 1.0 : min(_3487, 1.0))) * (_1478 + 1.0))) + _1483) * _1366;
        _1500 = _1333;
        _1501 = _1332;
        _1502 = _1331;
        _1503 = _1343;
        _1504 = _1342;
        _1505 = _1341;
        _1506 = _1353;
        _1507 = _1352;
        _1508 = _1351;
        _1509 = _1366;
        _1510 = _1365;
        _1511 = _1364;
        _1512 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0)));
        _1513 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0)));
        _1514 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0)));
    }
    else
    {
        _1500 = _1191;
        _1501 = _1191;
        _1502 = _1191;
        _1503 = _1191;
        _1504 = _1191;
        _1505 = _1191;
        _1506 = _1191;
        _1507 = _1191;
        _1508 = _1191;
        _1509 = _1191;
        _1510 = _1191;
        _1511 = _1191;
        _1512 = 0.0;
        _1513 = 0.0;
        _1514 = 0.0;
    }
    float _1524 = (cbModelParam._m0[1u].x * (_1512 - _1203)) + _1203;
    float _1525 = (cbModelParam._m0[1u].x * (_1513 - _1204)) + _1204;
    float _1526 = (cbModelParam._m0[1u].x * (_1514 - _1205)) + _1205;
    float _1547 = fma(_1526, cbSceneParam._m0[89u].z, fma(_1525, cbSceneParam._m0[89u].y, _1524 * cbSceneParam._m0[89u].x));
    float _1550 = fma(_1526, cbSceneParam._m0[90u].z, fma(_1525, cbSceneParam._m0[90u].y, _1524 * cbSceneParam._m0[90u].x));
    float _1553 = fma(_1526, cbSceneParam._m0[91u].z, fma(_1525, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1524));
    float _1568 = _823 * 0.5;
    float _1569 = _824 * 0.5;
    float _1570 = _825 * 0.5;
    float _1571 = dot(vec4(_1568, _1569, _1570, 1.0), vec4(_1502, _1505, _1508, _1511));
    float _1574 = dot(vec4(_1568, _1569, _1570, 1.0), vec4(_1501, _1504, _1507, _1510));
    float _1577 = dot(vec4(_1568, _1569, _1570, 1.0), vec4(_1500, _1503, _1506, _1509));
    float _1611;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1584 = dot(vec4(_1568, _1569, _1570, 1.0), vec4(_1190, _1194, _1197, _1200));
        float _1588 = dot(vec4(_1568, _1569, _1570, 1.0), vec4(_1192, _1195, _1198, _1201));
        float _1592 = dot(vec4(_1568, _1569, _1570, 1.0), vec4(_1193, _1196, _1199, _1202));
        float _1599 = dot(vec4(cbModelParam._m0[39u]), vec4(_1568, _1569, _1570, 1.0));
        _1611 = dot(vec3(isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0)), isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0)), isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1599) ? 0.0 : (isnan(0.0) ? _1599 : max(0.0, _1599))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1611 = 1.0;
    }
    float _1622;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1613 = dot(vec4(cbModelParam._m0[40u]), vec4(_1568, _1569, _1570, 1.0));
        _1622 = dot(vec3(isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0)), isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0)), isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1613) ? 0.0 : (isnan(0.0) ? _1613 : max(0.0, _1613))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1622 = 1.0;
    }
    float _1626 = (_1622 * cbModelParam._m0[1u].x) + (_1611 * (1.0 - cbModelParam._m0[1u].x));
    float _1636 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _741);
    float _1637 = isnan(_1636) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1636 : min(cbModelParam._m0[25u].z, _1636));
    float _1717;
    float _1719;
    float _1721;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1684 = fma(_888, cbModelParam._m0[13u].z, fma(_884, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _880)) + cbModelParam._m0[13u].w;
        float _1688 = fma(_888, cbModelParam._m0[14u].z, fma(_884, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _880)) + cbModelParam._m0[14u].w;
        float _1692 = fma(_888, cbModelParam._m0[15u].z, fma(_884, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _880)) + cbModelParam._m0[15u].w;
        float _1695 = fma(_825, cbModelParam._m0[13u].z, fma(_824, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _823));
        float _1698 = fma(_825, cbModelParam._m0[14u].z, fma(_824, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _823));
        float _1701 = fma(_825, cbModelParam._m0[15u].z, fma(_824, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _823));
        float _1729;
        if (_1695 > 0.0)
        {
            _1729 = abs((1.0 - _1684) / _1695);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1695 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1684 + 1.0) / _1695);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1729 = frontier_phi_16_14_ladder;
        }
        float _1900;
        if (_1698 > 0.0)
        {
            _1900 = abs((1.0 - _1688) / _1698);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1698 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1688 + 1.0) / _1698);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1900 = frontier_phi_25_21_ladder;
        }
        float _2135;
        if (_1701 > 0.0)
        {
            _2135 = abs((1.0 - _1692) / _1701);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1701 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1692 + 1.0) / _1701);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2135 = frontier_phi_36_32_ladder;
        }
        float _2137 = isnan(_1900) ? _1729 : (isnan(_1729) ? _1900 : min(_1729, _1900));
        float _2138 = isnan(_2135) ? _2137 : (isnan(_2137) ? _2135 : min(_2137, _2135));
        float _2142 = (_2138 * _1695) + _1684;
        float _2143 = (_2138 * _1698) + _1688;
        float _2144 = (_2138 * _1701) + _1692;
        float _2145 = _2138 * 9.9999997473787516355514526367188e-05;
        float _2147 = (-1.0) - _2145;
        float _2149 = _2145 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2144 > _2149) || ((_2144 < _2147) || ((_2143 > _2149) || ((_2143 < _2147) || ((_2142 < _2147) || (_2142 > _2149))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2294 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2144, cbModelParam._m0[9u].z, fma(_2143, cbModelParam._m0[9u].y, _2142 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2144, cbModelParam._m0[10u].z, fma(_2143, cbModelParam._m0[10u].y, _2142 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2144, cbModelParam._m0[11u].z, fma(_2143, cbModelParam._m0[11u].y, _2142 * cbModelParam._m0[11u].x))), _1637);
            frontier_phi_15_36_ladder = _2294.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2294.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2294.y * cbModelParam._m0[1u].y;
        }
        _1717 = frontier_phi_15_36_ladder_1;
        _1719 = frontier_phi_15_36_ladder_2;
        _1721 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1705 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_823, _824, _825), _1637);
        _1717 = _1705.x * cbModelParam._m0[1u].y;
        _1719 = _1705.y * cbModelParam._m0[1u].y;
        _1721 = _1705.z * cbModelParam._m0[1u].y;
    }
    float _1725 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _741);
    float _1726 = isnan(_1725) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1725 : min(cbModelParam._m0[25u].w, _1725));
    float _1817;
    float _1819;
    float _1821;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1781 = fma(_888, cbModelParam._m0[21u].z, fma(_884, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _880)) + cbModelParam._m0[21u].w;
        float _1785 = fma(_888, cbModelParam._m0[22u].z, fma(_884, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _880)) + cbModelParam._m0[22u].w;
        float _1789 = fma(_888, cbModelParam._m0[23u].z, fma(_884, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _880)) + cbModelParam._m0[23u].w;
        float _1792 = fma(_825, cbModelParam._m0[21u].z, fma(_824, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _823));
        float _1795 = fma(_825, cbModelParam._m0[22u].z, fma(_824, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _823));
        float _1798 = fma(_825, cbModelParam._m0[23u].z, fma(_824, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _823));
        float _1905;
        if (_1792 > 0.0)
        {
            _1905 = abs((1.0 - _1781) / _1792);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1792 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1781 + 1.0) / _1792);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1905 = frontier_phi_27_23_ladder;
        }
        float _2162;
        if (_1795 > 0.0)
        {
            _2162 = abs((1.0 - _1785) / _1795);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1795 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1785 + 1.0) / _1795);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2162 = frontier_phi_38_34_ladder;
        }
        float _2466;
        if (_1798 > 0.0)
        {
            _2466 = abs((1.0 - _1789) / _1798);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1798 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1789 + 1.0) / _1798);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2466 = frontier_phi_49_44_ladder;
        }
        float _2468 = isnan(_2162) ? _1905 : (isnan(_1905) ? _2162 : min(_1905, _2162));
        float _2469 = isnan(_2466) ? _2468 : (isnan(_2468) ? _2466 : min(_2468, _2466));
        float _2473 = (_2469 * _1792) + _1781;
        float _2474 = (_2469 * _1795) + _1785;
        float _2475 = (_2469 * _1798) + _1789;
        float _2476 = _2469 * 9.9999997473787516355514526367188e-05;
        float _2477 = (-1.0) - _2476;
        float _2479 = _2476 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2475 > _2479) || ((_2475 < _2477) || ((_2474 > _2479) || ((_2474 < _2477) || ((_2473 < _2477) || (_2473 > _2479))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2648 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2475, cbModelParam._m0[17u].z, fma(_2474, cbModelParam._m0[17u].y, _2473 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2475, cbModelParam._m0[18u].z, fma(_2474, cbModelParam._m0[18u].y, _2473 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2475, cbModelParam._m0[19u].z, fma(_2474, cbModelParam._m0[19u].y, _2473 * cbModelParam._m0[19u].x))), _1726);
            frontier_phi_24_49_ladder = _2648.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2648.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2648.x * cbModelParam._m0[1u].z;
        }
        _1817 = frontier_phi_24_49_ladder_2;
        _1819 = frontier_phi_24_49_ladder;
        _1821 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1801 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_823, _824, _825), _1726);
        _1817 = _1801.x * cbModelParam._m0[1u].z;
        _1819 = _1801.y * cbModelParam._m0[1u].z;
        _1821 = _1801.z * cbModelParam._m0[1u].z;
    }
    float _1833 = ((((1.0 - _848) * ((_836 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_848 * _836)) * _815;
    float _1834 = _1833 * ((cbModelParam._m0[1u].w * (_1817 - _1717)) + _1717);
    float _1835 = _1833 * ((cbModelParam._m0[1u].w * (_1819 - _1719)) + _1719);
    float _1836 = _1833 * ((cbModelParam._m0[1u].w * (_1821 - _1721)) + _1721);
    float _1839 = fma(_1836, cbSceneParam._m0[89u].z, fma(_1835, cbSceneParam._m0[89u].y, _1834 * cbSceneParam._m0[89u].x));
    float _1842 = fma(_1836, cbSceneParam._m0[90u].z, fma(_1835, cbSceneParam._m0[90u].y, _1834 * cbSceneParam._m0[90u].x));
    float _1845 = fma(_1836, cbSceneParam._m0[91u].z, fma(_1835, cbSceneParam._m0[91u].y, _1834 * cbSceneParam._m0[91u].x));
    uvec4 _1855 = floatBitsToUint(cbInstanceData._m0[_299 + 5u]);
    uint _1857 = _1855.x * 14u;
    uint _1858 = _1857 + 13u;
    float _1863 = _815 + (-1.0);
    float _1866 = (cbLight._m0[_1858].x * _1863) + 1.0;
    float _1867 = (cbLight._m0[_1858].y * _1863) + 1.0;
    uint _1869 = _1857 + 4u;
    float _1880 = dot(vec3(cbLight._m0[_1857].xyz), vec3(_737, _738, _739));
    float _1883 = isnan(1.0) ? _1866 : (isnan(_1866) ? 1.0 : min(_1866, 1.0));
    uint _1884 = _1857 + 5u;
    uint _1890 = _1857 | 1u;
    float _1896 = dot(vec3(cbLight._m0[_1890].xyz), vec3(_737, _738, _739));
    float _1899 = isnan(1.0) ? _1867 : (isnan(_1867) ? 1.0 : min(_1867, 1.0));
    float _1964;
    float _1965;
    float _1966;
    if (_742 == 0.0)
    {
        float _3645 = isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0));
        float _3656 = isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0));
        float _1918 = (isnan(1.0) ? _3645 : (isnan(_3645) ? 1.0 : min(_3645, 1.0))) * 0.3183098733425140380859375;
        float _1920 = (isnan(1.0) ? _3656 : (isnan(_3656) ? 1.0 : min(_3656, 1.0))) * 0.3183098733425140380859375;
        _1964 = ((cbLight._m0[_1884].x * _1899) * _1920) + ((cbLight._m0[_1869].x * _1883) * _1918);
        _1965 = ((_1899 * cbLight._m0[_1884].y) * _1920) + ((_1883 * cbLight._m0[_1869].y) * _1918);
        _1966 = ((_1899 * cbLight._m0[_1884].z) * _1920) + ((_1883 * cbLight._m0[_1869].z) * _1918);
    }
    else
    {
        float _1930 = _1880 + _742;
        float _1933 = (_742 * 2.0) + 1.0;
        float _1934 = (isnan(0.0) ? _1930 : (isnan(_1930) ? 0.0 : max(_1930, 0.0))) / _1933;
        float _1941 = _1896 + _742;
        float _1943 = (isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0))) / _1933;
        _1964 = (((_1943 * cbLight._m0[_1884].x) * _1899) + ((_1934 * cbLight._m0[_1869].x) * _1883)) * 0.3183098733425140380859375;
        _1965 = (((_1943 * cbLight._m0[_1884].y) * _1899) + ((_1934 * cbLight._m0[_1869].y) * _1883)) * 0.3183098733425140380859375;
        _1966 = (((_1943 * cbLight._m0[_1884].z) * _1899) + ((_1934 * cbLight._m0[_1869].z) * _1883)) * 0.3183098733425140380859375;
    }
    uint _1970 = _1857 + 8u;
    float _1986 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1857].w)) * _741) * 0.949999988079071044921875);
    float _1987 = _1986 * _1986;
    float _1988 = cbLight._m0[_1857].x + _528;
    float _1989 = cbLight._m0[_1857].y + _529;
    float _1990 = cbLight._m0[_1857].z + _530;
    float _1994 = inversesqrt(dot(vec3(_1988, _1989, _1990), vec3(_1988, _1989, _1990)));
    float _1995 = _1994 * _1988;
    float _1996 = _1994 * _1989;
    float _1997 = _1994 * _1990;
    float _1998 = dot(vec3(_737, _738, _739), vec3(cbLight._m0[_1857].xyz));
    float _3677 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
    float _2001 = isnan(1.0) ? _3677 : (isnan(_3677) ? 1.0 : min(_3677, 1.0));
    float _3688 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _2002 = isnan(1.0) ? _3688 : (isnan(_3688) ? 1.0 : min(_3688, 1.0));
    float _2003 = dot(vec3(_737, _738, _739), vec3(_1995, _1996, _1997));
    float _3699 = isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0));
    float _2006 = isnan(1.0) ? _3699 : (isnan(_3699) ? 1.0 : min(_3699, 1.0));
    float _2007 = dot(vec3(cbLight._m0[_1857].xyz), vec3(_1995, _1996, _1997));
    float _3710 = isnan(0.0) ? _2007 : (isnan(_2007) ? 0.0 : max(_2007, 0.0));
    float _2011 = _1987 * _1987;
    float _2015 = ((_2006 * _2006) * (_2011 + (-1.0))) + 1.0;
    float _2026 = (exp2(log2(1.0 - (isnan(1.0) ? _3710 : (isnan(_3710) ? 1.0 : min(_3710, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2027 = 1.0 - _1987;
    float _2038 = (0.5 / (((_2002 * ((_2001 * _2027) + _1987)) + 9.9999999392252902907785028219223e-09) + (((_2002 * _2027) + _1987) * _2001))) * _2001;
    float _3721 = isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0));
    float _2040 = (isnan(1.0) ? _3721 : (isnan(_3721) ? 1.0 : min(_3721, 1.0))) * (_2011 / ((_2015 * _2015) * 3.141590118408203125));
    uint _2053 = _1857 + 9u;
    float _2067 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1890].w)) * _741) * 0.949999988079071044921875);
    float _2068 = _2067 * _2067;
    float _2069 = cbLight._m0[_1890].x + _528;
    float _2070 = cbLight._m0[_1890].y + _529;
    float _2071 = cbLight._m0[_1890].z + _530;
    float _2075 = inversesqrt(dot(vec3(_2069, _2070, _2071), vec3(_2069, _2070, _2071)));
    float _2076 = _2075 * _2069;
    float _2077 = _2075 * _2070;
    float _2078 = _2075 * _2071;
    float _2079 = dot(vec3(_737, _738, _739), vec3(cbLight._m0[_1890].xyz));
    float _3732 = isnan(0.0) ? _2079 : (isnan(_2079) ? 0.0 : max(_2079, 0.0));
    float _2082 = isnan(1.0) ? _3732 : (isnan(_3732) ? 1.0 : min(_3732, 1.0));
    float _2083 = dot(vec3(_737, _738, _739), vec3(_2076, _2077, _2078));
    float _3743 = isnan(0.0) ? _2083 : (isnan(_2083) ? 0.0 : max(_2083, 0.0));
    float _2086 = isnan(1.0) ? _3743 : (isnan(_3743) ? 1.0 : min(_3743, 1.0));
    float _2087 = dot(vec3(cbLight._m0[_1890].xyz), vec3(_2076, _2077, _2078));
    float _3754 = isnan(0.0) ? _2087 : (isnan(_2087) ? 0.0 : max(_2087, 0.0));
    float _2091 = _2068 * _2068;
    float _2095 = ((_2086 * _2086) * (_2091 + (-1.0))) + 1.0;
    float _2104 = (exp2(log2(1.0 - (isnan(1.0) ? _3754 : (isnan(_3754) ? 1.0 : min(_3754, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2105 = 1.0 - _2068;
    float _2115 = (0.5 / (((_2002 * ((_2082 * _2105) + _2068)) + 9.9999999392252902907785028219223e-09) + (((_2002 * _2105) + _2068) * _2082))) * _2082;
    float _3765 = isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0));
    float _2117 = (isnan(1.0) ? _3765 : (isnan(_3765) ? 1.0 : min(_3765, 1.0))) * (_2091 / ((_2095 * _2095) * 3.141590118408203125));
    float _2127 = (((_2104 * cbLight._m0[_2053].x) * _2117) * _1899) + (((_2026 * cbLight._m0[_1970].x) * _2040) * _1883);
    float _2128 = (((_2104 * cbLight._m0[_2053].y) * _2117) * _1899) + (((_2026 * cbLight._m0[_1970].y) * _2040) * _1883);
    float _2129 = (((_2104 * cbLight._m0[_2053].z) * _2117) * _1899) + (((_2026 * cbLight._m0[_1970].z) * _2040) * _1883);
    float _2265;
    float _2267;
    float _2269;
    float _2271;
    float _2273;
    float _2275;
    if (_1855.y == 0u)
    {
        float _2206 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2207 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2206;
        float _2208 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2206;
        float _2209 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2206;
        uvec4 _2221 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2222 = _2221.x;
        uint _2233 = uint((float(_2221.y) * floor(float(uint(cbSceneParam._m0[85u].y * _653) / _2222))) + floor(float(uint(cbSceneParam._m0[85u].x * _652) / _2222)));
        float _2243 = (log2(_2209 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2244 = isnan(0.0) ? _2243 : (isnan(_2243) ? 0.0 : max(_2243, 0.0));
        uint _2247 = uint(isnan(14.0) ? _2244 : (isnan(_2244) ? 14.0 : min(_2244, 14.0)));
        uint _2254 = _2221.z;
        float _2303;
        float _2305;
        float _2307;
        float _2309;
        float _2311;
        float _2313;
        if (((((1u << ((_2254 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2247 << 2u) + (_2233 << 6u)) >> 2u)).x) == 0u) || ((_2254 & 240u) == 0u))
        {
            _2303 = 0.0;
            _2305 = 0.0;
            _2307 = 0.0;
            _2309 = 0.0;
            _2311 = 0.0;
            _2313 = 0.0;
        }
        else
        {
            float _2304;
            float _2306;
            float _2308;
            float _2310;
            float _2312;
            float _2314;
            float _2492 = 0.0;
            float _2493 = 0.0;
            float _2494 = 0.0;
            float _2495 = 0.0;
            float _2496 = 0.0;
            float _2497 = 0.0;
            uint _2498 = 0u;
            uint _2507;
            bool _2508;
            for (;;)
            {
                _2507 = texelFetch(g_lightClassification, int((((_2247 << 5u) + (_2233 << 9u)) + (_2498 << 2u)) >> 2u)).x;
                _2508 = _2507 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2508)
                {
                    frontier_phi_55_pred = _2497;
                    frontier_phi_55_pred_1 = _2496;
                    frontier_phi_55_pred_2 = _2495;
                    frontier_phi_55_pred_3 = _2493;
                    frontier_phi_55_pred_4 = _2492;
                    frontier_phi_55_pred_5 = _2494;
                }
                else
                {
                    float _2705;
                    float _2706;
                    float _2707;
                    float _2708;
                    float _2709;
                    float _2710;
                    uint _2711;
                    _2705 = _2492;
                    _2706 = _2493;
                    _2707 = _2494;
                    _2708 = _2495;
                    _2709 = _2496;
                    _2710 = _2497;
                    _2711 = _2507;
                    float _2653;
                    float _2654;
                    float _2655;
                    float _2656;
                    float _2657;
                    float _2658;
                    for (;;)
                    {
                        uint _2715 = uint(findLSB(_2711)) + (_2498 << 5u);
                        uint _2712 = (_2711 + 4294967295u) & _2711;
                        uint _2717 = _2715 * 48u;
                        vec4 _2731 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2717)).x, texelFetch(g_PointLightRenderingBuffer, int(_2717 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2717 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2717 + 3u)).x));
                        uint _2737 = (_2715 * 48u) + 4u;
                        vec4 _2750 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2737)).x, texelFetch(g_PointLightRenderingBuffer, int(_2737 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2737 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2737 + 3u)).x));
                        float _2751 = _2750.x;
                        float _2752 = _2750.y;
                        float _2753 = _2750.z;
                        uint _2756 = (_2715 * 48u) + 8u;
                        vec3 _2767 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2756)).x, texelFetch(g_PointLightRenderingBuffer, int(_2756 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2756 + 2u)).x));
                        uint _2772 = (_2715 * 48u) + 12u;
                        vec2 _2780 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2772)).x, texelFetch(g_PointLightRenderingBuffer, int(_2772 + 1u)).x));
                        float _2786 = inversesqrt(dot(vec3(_2207, _2208, _2209), vec3(_2207, _2208, _2209)));
                        float _2787 = _2786 * _2207;
                        float _2788 = _2786 * _2208;
                        float _2789 = _2786 * _2209;
                        float _2790 = _2731.x - _2207;
                        float _2791 = _2731.y - _2208;
                        float _2792 = _2731.z - _2209;
                        float _2793 = dot(vec3(_2790, _2791, _2792), vec3(_2790, _2791, _2792));
                        float _2796 = inversesqrt(_2793);
                        float _2797 = _2796 * _2790;
                        float _2798 = _2796 * _2791;
                        float _2799 = _2796 * _2792;
                        float _2800 = dot(vec3(_777, _780, _783), vec3(_2797, _2798, _2799));
                        float _2805 = 1.0 - (_2793 * _2731.w);
                        float _3786 = isnan(0.0) ? _2805 : (isnan(_2805) ? 0.0 : max(_2805, 0.0));
                        float _2806 = isnan(1.0) ? _3786 : (isnan(_3786) ? 1.0 : min(_3786, 1.0));
                        float _2807 = sqrt(_2793) * _2750.w;
                        float _2810 = 1.39999997615814208984375 / (_2807 + 1.39999997615814208984375);
                        float _2811 = _2810 * _2810;
                        float _2812 = 1.0 - _2811;
                        float _2814 = (_2812 * _2812) * _742;
                        float _2817 = ((_2812 * _2800) + _2811) + _2814;
                        float _2822 = _2807 * _2807;
                        float _2827 = ((isnan(0.0) ? _2817 : (isnan(_2817) ? 0.0 : max(_2817, 0.0))) * _2806) / (((_2814 * 2.0) + 1.0) * ((_2822 * 0.699999988079071044921875) + 1.0));
                        float _2831 = dot(vec3(_2797, _2798, _2799), vec3(_2787, _2788, _2789));
                        float _3802 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
                        float _2838 = dot(vec3((-0.0) - _2787, (-0.0) - _2788, (-0.0) - _2789), vec3(_777, _780, _783)) + 1.0;
                        float _2840 = (isnan(0.0) ? _2838 : (isnan(_2838) ? 0.0 : max(_2838, 0.0))) * 0.5;
                        float _2847 = ((_2840 * _2840) * _2780.x) * exp2((_2780.y * 32.0) * log2(isnan(1.0) ? _3802 : (isnan(_3802) ? 1.0 : min(_3802, 1.0))));
                        float _2849 = _742 / (_742 + 1.0);
                        float _2865 = (-0.0) - _2207;
                        float _2866 = (-0.0) - _2208;
                        float _2867 = (-0.0) - _2209;
                        float _2871 = inversesqrt(dot(vec3(_2865, _2866, _2867), vec3(_2865, _2866, _2867)));
                        float _2872 = _2871 * _2865;
                        float _2873 = _2871 * _2866;
                        float _2874 = _2871 * _2867;
                        float _2882 = exp2(log2(1.0 / ((_2822 * 3.5) + 5.0)) * 0.25);
                        float _2883 = 1.0 - _836;
                        float _2890 = sqrt(1.0 - ((1.0 - (_2883 * _2883)) * (1.0 - (_2882 * _2882))));
                        float _2891 = _2890 * _2890;
                        float _2892 = _2891 * _2891;
                        float _2893 = _2872 + _2797;
                        float _2894 = _2873 + _2798;
                        float _2895 = _2874 + _2799;
                        float _2899 = inversesqrt(dot(vec3(_2893, _2894, _2895), vec3(_2893, _2894, _2895)));
                        float _2903 = dot(vec3(_777, _780, _783), vec3(_2872, _2873, _2874));
                        float _3818 = isnan(0.0) ? _2903 : (isnan(_2903) ? 0.0 : max(_2903, 0.0));
                        float _2906 = isnan(1.0) ? _3818 : (isnan(_3818) ? 1.0 : min(_3818, 1.0));
                        float _2907 = dot(vec3(_777, _780, _783), vec3(_2899 * _2893, _2899 * _2894, _2899 * _2895));
                        float _3829 = isnan(0.0) ? _2907 : (isnan(_2907) ? 0.0 : max(_2907, 0.0));
                        float _2910 = isnan(1.0) ? _3829 : (isnan(_3829) ? 1.0 : min(_3829, 1.0));
                        float _2914 = ((_2910 * _2910) * (_2892 + (-1.0))) + 1.0;
                        float _2915 = _2810 * _2891;
                        float _2916 = _2915 * _2915;
                        float _2919 = ((1.0 - _2916) * _2800) + _2916;
                        float _3840 = isnan(0.0) ? _2919 : (isnan(_2919) ? 0.0 : max(_2919, 0.0));
                        float _2920 = isnan(1.0) ? _3840 : (isnan(_3840) ? 1.0 : min(_3840, 1.0));
                        float _2921 = 1.0 - _2891;
                        float _2931 = (0.5 / (((_2920 * ((_2906 * _2921) + _2891)) + 9.9999999392252902907785028219223e-09) + (((_2920 * _2921) + _2891) * _2906))) * _2920;
                        float _3851 = isnan(0.0) ? _2931 : (isnan(_2931) ? 0.0 : max(_2931, 0.0));
                        float _2942 = (((_2892 * 3.1415927410125732421875) * (isnan(1.0) ? _3851 : (isnan(_3851) ? 1.0 : min(_3851, 1.0)))) / ((_2914 * _2914) * ((_2822 * 2.1991131305694580078125) + 3.141590118408203125))) * _2806;
                        _2656 = (((((_2751 * 0.3183098733425140380859375) * _2849) * _2847) + _2751) * _2827) + _2708;
                        _2657 = (((((_2752 * 0.3183098733425140380859375) * _2849) * _2847) + _2752) * _2827) + _2709;
                        _2658 = (((((_2753 * 0.3183098733425140380859375) * _2849) * _2847) + _2753) * _2827) + _2710;
                        _2653 = (_2942 * _2767.x) + _2705;
                        _2654 = (_2942 * _2767.y) + _2706;
                        _2655 = (_2942 * _2767.z) + _2707;
                        if (_2712 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2705 = _2653;
                            _2706 = _2654;
                            _2707 = _2655;
                            _2708 = _2656;
                            _2709 = _2657;
                            _2710 = _2658;
                            _2711 = _2712;
                        }
                    }
                    frontier_phi_55_pred = _2658;
                    frontier_phi_55_pred_1 = _2657;
                    frontier_phi_55_pred_2 = _2656;
                    frontier_phi_55_pred_3 = _2654;
                    frontier_phi_55_pred_4 = _2653;
                    frontier_phi_55_pred_5 = _2655;
                }
                _2314 = frontier_phi_55_pred;
                _2312 = frontier_phi_55_pred_1;
                _2310 = frontier_phi_55_pred_2;
                _2306 = frontier_phi_55_pred_3;
                _2304 = frontier_phi_55_pred_4;
                _2308 = frontier_phi_55_pred_5;
                uint _2499 = _2498 + 1u;
                if (_2499 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2492 = _2304;
                    _2493 = _2306;
                    _2494 = _2308;
                    _2495 = _2310;
                    _2496 = _2312;
                    _2497 = _2314;
                    _2498 = _2499;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2303 = _2304;
            _2305 = _2306;
            _2307 = _2308;
            _2309 = _2310;
            _2311 = _2312;
            _2313 = _2314;
        }
        float _2318 = isnan(1.0) ? _815 : (isnan(_815) ? 1.0 : min(_815, 1.0));
        _2265 = (_2318 * _2309) + _1964;
        _2267 = (_2318 * _2311) + _1965;
        _2269 = (_2318 * _2313) + _1966;
        _2271 = ((_2303 * 0.039999999105930328369140625) * _2318) + _2127;
        _2273 = ((_2305 * 0.039999999105930328369140625) * _2318) + _2128;
        _2275 = ((_2307 * 0.039999999105930328369140625) * _2318) + _2129;
    }
    else
    {
        _2265 = _1964;
        _2267 = _1965;
        _2269 = _1966;
        _2271 = _2127;
        _2273 = _2128;
        _2275 = _2129;
    }
    float _2389;
    float _2390;
    float _2391;
    if (_742 > 0.0)
    {
        uint _2325 = _1857 + 4u;
        float _2331 = (-0.0) - _528;
        float _2332 = (-0.0) - _529;
        float _2333 = (-0.0) - _530;
        float _2334 = dot(vec3(cbLight._m0[_1857].xyz), vec3(_2331, _2332, _2333));
        float _3867 = isnan(0.0) ? _2334 : (isnan(_2334) ? 0.0 : max(_2334, 0.0));
        float _2338 = _826 + 1.0;
        float _2340 = (isnan(0.0) ? _2338 : (isnan(_2338) ? 0.0 : max(_2338, 0.0))) * 0.5;
        float _2345 = _2340 * _2340;
        float _2346 = _2345 * exp2(log2(isnan(1.0) ? _3867 : (isnan(_3867) ? 1.0 : min(_3867, 1.0))) * 32.0);
        float _2348 = _742 / (_742 + 1.0);
        float _2349 = isnan(_1866) ? 1.0 : (isnan(1.0) ? _1866 : min(1.0, _1866));
        uint _2359 = _1857 + 5u;
        float _2365 = dot(vec3(cbLight._m0[_1890].xyz), vec3(_2331, _2332, _2333));
        float _3888 = isnan(0.0) ? _2365 : (isnan(_2365) ? 0.0 : max(_2365, 0.0));
        float _2372 = _2345 * exp2(log2(isnan(1.0) ? _3888 : (isnan(_3888) ? 1.0 : min(_3888, 1.0))) * 32.0);
        float _2373 = isnan(_1867) ? 1.0 : (isnan(1.0) ? _1867 : min(1.0, _1867));
        _2389 = ((((_2372 * cbLight._m0[_2359].x) * _2348) * _2373) + (((_2346 * cbLight._m0[_2325].x) * _2348) * _2349)) * 0.3183098733425140380859375;
        _2390 = ((((_2372 * cbLight._m0[_2359].y) * _2348) * _2373) + (((_2346 * cbLight._m0[_2325].y) * _2348) * _2349)) * 0.3183098733425140380859375;
        _2391 = ((((_2372 * cbLight._m0[_2359].z) * _2348) * _2373) + (((_2346 * cbLight._m0[_2325].z) * _2348) * _2349)) * 0.3183098733425140380859375;
    }
    else
    {
        _2389 = 0.0;
        _2390 = 0.0;
        _2391 = 0.0;
    }
    float _3904 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _3915 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
    float _3926 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _3937 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _2406 = (isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0))) * ((_2265 + ((isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0))) * _815)) + _2389);
    float _2407 = (isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0))) * ((_2267 + ((isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0))) * _815)) + _2390);
    float _2408 = (isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0))) * ((_2269 + ((isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0))) * _815)) + _2391);
    float _2412 = 0.959999978542327880859375 - (exp2(log2(1.0 - _830) * 5.0) * 0.959999978542327880859375);
    float _2437 = _652 / cbSceneParam._m0[86u].x;
    float _2438 = _653 / cbSceneParam._m0[86u].y;
    vec4 _2452 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2437, _2438, (log2((isnan(cbSceneParam._m0[77u].w) ? _759 : (isnan(_759) ? cbSceneParam._m0[77u].w : min(_759, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2454 = _2452.x;
    float _2455 = _2452.y;
    float _2456 = _2452.z;
    float _2457 = _2452.w;
    float _2550;
    float _2552;
    float _2554;
    float _2556;
    if (_759 > cbSceneParam._m0[78u].w)
    {
        float _2513 = isnan(_759) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _759 : min(cbSceneParam._m0[80u].w, _759));
        float _2514 = _2513 / _759;
        float _2525 = _2514 * _291;
        float _2526 = _292 * _2514;
        float _2527 = (-0.0) - _2526;
        float _2528 = _2514 * _293;
        float _2530 = (cbSceneParam._m0[77u].w * _2527) / _2513;
        float _2531 = _2530 + cbSceneParam._m0[79u].w;
        float _2532 = cbSceneParam._m0[79u].w - _2526;
        float _2538 = sqrt(((_2525 * _2525) + (_2526 * _2526)) + (_2528 * _2528));
        float _2541 = (1.0 - (cbSceneParam._m0[77u].w / _2513)) * _2538;
        float _2546 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2548 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2947;
        if (abs((_2527 - _2530) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2947 = ((((_2531 > 0.0) ? exp2(_2546 * _2531) : (2.0 - exp2(_2548 * _2531))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2541;
        }
        else
        {
            float _2678 = 1.0 / cbSceneParam._m0[80u].x;
            float _2679 = isnan(_2532) ? _2531 : (isnan(_2531) ? _2532 : max(_2531, _2532));
            float _2680 = isnan(_2532) ? _2531 : (isnan(_2531) ? _2532 : min(_2531, _2532));
            float _2689 = isnan(0.0) ? _2679 : (isnan(_2679) ? 0.0 : min(_2679, 0.0));
            float _2690 = isnan(0.0) ? _2680 : (isnan(_2680) ? 0.0 : min(_2680, 0.0));
            _2947 = ((abs(_2538 / _2527) * cbSceneParam._m0[80u].y) * ((((_2689 - _2690) * 2.0) - ((exp2(_2546 * (isnan(0.0) ? _2679 : (isnan(_2679) ? 0.0 : max(_2679, 0.0)))) - exp2(_2546 * (isnan(0.0) ? _2680 : (isnan(_2680) ? 0.0 : max(_2680, 0.0))))) * _2678)) - ((exp2(_2548 * _2689) - exp2(_2548 * _2690)) * _2678))) + (_2541 * cbSceneParam._m0[80u].z);
        }
        vec4 _2949 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2437, _2438, 1.0), 0.0);
        float _2958 = exp2((_2947 * (-1.44269502162933349609375)) * (1.0 - _2949.w));
        float _2959 = log2(_2958);
        float _2975 = log2(_2457);
        _2550 = (exp2(_2975 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2959 * cbSceneParam._m0[78u].x)) * _2949.x) / cbSceneParam._m0[78u].x)) + _2454;
        _2552 = (exp2(_2975 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2959 * cbSceneParam._m0[78u].y)) * _2949.y) / cbSceneParam._m0[78u].y)) + _2455;
        _2554 = (exp2(_2975 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2959 * cbSceneParam._m0[78u].z)) * _2949.z) / cbSceneParam._m0[78u].z)) + _2456;
        _2556 = _2958 * _2457;
    }
    else
    {
        _2550 = _2454;
        _2552 = _2455;
        _2554 = _2456;
        _2556 = _2457;
    }
    bool _2568 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2569 = log2(_2556);
    float _2576 = exp2(_2569 * cbSceneParam._m0[78u].x) * ((_2406 + ((_2271 + ((isnan(0.0) ? _1839 : (isnan(_1839) ? 0.0 : max(_1839, 0.0))) * _1626)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _676.x) * _2412) - _2406) * _722));
    float _2577 = exp2(_2569 * cbSceneParam._m0[78u].y) * ((_2407 + ((_2273 + ((isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0))) * _1626)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _676.y) * _2412) - _2407) * _722));
    float _2578 = exp2(_2569 * cbSceneParam._m0[78u].z) * ((_2408 + ((_2275 + ((isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0))) * _1626)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _676.z) * _2412) - _2408) * _722));
    vec4 _2586 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_652, _653));
    float _2588 = _2586.x;
    float _2609 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2588)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2588))) - _759) * cbMtdParam._m0[17u].y;
    float _3988 = isnan(0.0) ? _2609 : (isnan(_2609) ? 0.0 : max(_2609, 0.0));
    float _2611 = (cbInstanceData._m0[_299 + 6u].w * (isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0)))) * (isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0)));
    float _2620 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2620 * (_2568 ? _2576 : (_2576 + (cbSceneParam._m0[72u].w * _2550)));
    SV_Target.y = _2620 * (_2568 ? _2577 : (_2577 + (cbSceneParam._m0[72u].w * _2552)));
    SV_Target.z = _2620 * (_2568 ? _2578 : (_2578 + (cbSceneParam._m0[72u].w * _2554)));
    SV_Target.w = _2611;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2611;
}


