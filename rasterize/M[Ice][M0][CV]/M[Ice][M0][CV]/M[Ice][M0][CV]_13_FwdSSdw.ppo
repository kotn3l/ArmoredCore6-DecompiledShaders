#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1206;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _209 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _210 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _211 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _217 = inversesqrt(dot(vec3(_209, _210, _211), vec3(_209, _210, _211)));
    float _218 = _217 * _209;
    float _219 = _217 * _210;
    float _220 = _217 * _211;
    float _224 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _225 = _224 * NORMAL.x;
    float _226 = _224 * NORMAL.y;
    float _227 = _224 * NORMAL.z;
    float _231 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _232 = _231 * TANGENT.x;
    float _233 = _231 * TANGENT.y;
    float _234 = _231 * TANGENT.z;
    float _239;
    float _240;
    float _241;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _239 = (-0.0) - _225;
        _240 = (-0.0) - _226;
        _241 = (-0.0) - _227;
    }
    else
    {
        _239 = _225;
        _240 = _226;
        _241 = _227;
    }
    float _288 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _298 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _288);
    float _299 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _288);
    float _300 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _288);
    uint _306 = uint(roundEven(NORMAL.w)) * 13u;
    uint _311 = _306 + 1u;
    uint _315 = _306 + 2u;
    float _324 = sqrt(((cbInstanceData._m0[_311].x * cbInstanceData._m0[_311].x) + (cbInstanceData._m0[_306].x * cbInstanceData._m0[_306].x)) + (cbInstanceData._m0[_315].x * cbInstanceData._m0[_315].x));
    float _325 = _324 * TEXCOORD.z;
    float _326 = _324 * TEXCOORD.w;
    vec4 _340 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _349 = (_340.x * 2.0) + (-1.0);
    float _351 = (_340.y * 2.0) + (-1.0);
    float _352 = dot(vec2(_349, _351), vec2(_349, _351));
    float _3120 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _358 = sqrt(1.0 - (isnan(1.0) ? _3120 : (isnan(_3120) ? 1.0 : min(_3120, 1.0))));
    float _361 = fma(_358, _239, fma(_351, _232, _349 * _218));
    float _364 = fma(_358, _240, fma(_351, _233, _349 * _219));
    float _367 = fma(_358, _241, fma(_351, _234, _349 * _220));
    float _371 = inversesqrt(dot(vec3(_361, _364, _367), vec3(_361, _364, _367)));
    vec4 _404 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _409 = _404.w;
    float _421 = dot(vec3(_298, _299, _300), vec3(_218, _219, _220));
    float _424 = dot(vec3(_298, _299, _300), vec3(_232, _233, _234));
    float _427 = dot(vec3(_298, _299, _300), vec3(_239, _240, _241));
    float _433 = inversesqrt(dot(vec3(_421, _424, _427), vec3(_421, _424, _427)));
    float _455 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _475 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_421 * cbMtdParam._m0[14u].x) * _433) * _455) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_424 * cbMtdParam._m0[14u].x) * _433) * _455) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _498 = inversesqrt(dot(vec3(_298, _299, _300), vec3(_298, _299, _300)));
    float _499 = _498 * _298;
    float _500 = _498 * _299;
    float _501 = _498 * _300;
    float _502 = dot(vec4(_499, _500, _501, 0.0), vec4(_239, _240, _241, 0.0));
    float _505 = _502 - cbMtdParam._m0[15u].z;
    float _3131 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    float _512 = exp2(log2(1.0 - (isnan(1.0) ? _3131 : (isnan(_3131) ? 1.0 : min(_3131, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _527 = ((((_404.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _475.x) * cbMtdParam._m0[9u].x) * ((_512 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _532 = ((((_404.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _475.y) * cbMtdParam._m0[9u].y) * ((_512 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _537 = ((((_404.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _475.z) * cbMtdParam._m0[9u].z) * ((_512 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _546 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _325) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _326) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3147 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _547 = isnan(1.0) ? _3147 : (isnan(_3147) ? 1.0 : min(_3147, 1.0));
    float _554 = (_547 * (cbMtdParam._m0[11u].x - _527)) + _527;
    float _555 = ((cbMtdParam._m0[11u].y - _532) * _547) + _532;
    float _556 = ((cbMtdParam._m0[11u].z - _537) * _547) + _537;
    vec4 _568 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _325) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _326) + cbTextureTilingScale._m0[9u].w));
    float _575 = (_568.x * 2.0) + (-1.0);
    float _576 = (_568.y * 2.0) + (-1.0);
    float _577 = dot(vec2(_575, _576), vec2(_575, _576));
    float _3158 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    vec4 _598 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _610 = cbMtdParam._m0[17u].z + _340.z;
    float _616 = (_610 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_598.z - _610));
    float _619 = ((_568.z - _616) * _547) + _616;
    float _625 = ((((_598.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _349;
    float _626 = ((((_598.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _351;
    float _638 = (((_575 - _625) + (_625 * cbMtdParam._m0[14u].z)) * _547) + _625;
    float _639 = (((_576 - _626) + (_626 * cbMtdParam._m0[14u].z)) * _547) + _626;
    float _640 = (_547 * (sqrt(1.0 - (isnan(1.0) ? _3158 : (isnan(_3158) ? 1.0 : min(_3158, 1.0)))) - _358)) + _358;
    float _656 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _658 = _656 - (_656 * _547);
    float _667 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _668 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _678 = cbSceneParam._m0[86u].x * ((_667 / cbSceneParam._m0[86u].x) + ((_371 * _361) * cbMtdParam._m0[18u].y));
    float _679 = cbSceneParam._m0[86u].y * ((_668 / cbSceneParam._m0[86u].y) + ((_371 * _364) * cbMtdParam._m0[18u].y));
    float _686 = isnan(cbInstanceData._m0[8u].x) ? _678 : (isnan(_678) ? cbInstanceData._m0[8u].x : max(_678, cbInstanceData._m0[8u].x));
    float _687 = isnan(cbInstanceData._m0[8u].y) ? _679 : (isnan(_679) ? cbInstanceData._m0[8u].y : max(_679, cbInstanceData._m0[8u].y));
    vec4 _691 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _686 : (isnan(_686) ? cbInstanceData._m0[8u].z : min(_686, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _687 : (isnan(_687) ? cbInstanceData._m0[8u].w : min(_687, cbInstanceData._m0[8u].w))));
    float _724 = _502 - cbMtdParam._m0[15u].x;
    float _3189 = isnan(0.0) ? _724 : (isnan(_724) ? 0.0 : max(_724, 0.0));
    float _734 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3189 : (isnan(_3189) ? 1.0 : min(_3189, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3205 = isnan(0.0) ? _734 : (isnan(_734) ? 0.0 : max(_734, 0.0));
    float _735 = isnan(1.0) ? _3205 : (isnan(_3205) ? 1.0 : min(_3205, 1.0));
    float _737 = _735 - (_547 * _735);
    float _741 = fma(_640, _239, fma(_639, _232, _638 * _218));
    float _744 = fma(_640, _240, fma(_639, _233, _638 * _219));
    float _747 = fma(_640, _241, fma(_639, _234, _638 * _220));
    float _751 = inversesqrt(dot(vec3(_741, _744, _747), vec3(_741, _744, _747)));
    float _752 = _751 * _741;
    float _753 = _751 * _744;
    float _754 = _751 * _747;
    float _3216 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _755 = isnan(1.0) ? _3216 : (isnan(_3216) ? 1.0 : min(_3216, 1.0));
    float _3227 = isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0));
    float _756 = isnan(1.0) ? _3227 : (isnan(_3227) ? 1.0 : min(_3227, 1.0));
    float _757 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _3243 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0));
    float _3254 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
    float _3265 = isnan(0.0) ? _556 : (isnan(_556) ? 0.0 : max(_556, 0.0));
    float _774 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _792 = fma(_754, cbSceneParam._m0[5u].z, fma(_753, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _752));
    float _795 = fma(_754, cbSceneParam._m0[6u].z, fma(_753, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _752));
    float _798 = fma(_754, cbSceneParam._m0[7u].z, fma(_753, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _752));
    uint _812 = (_306 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _818 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3243 : (isnan(_3243) ? 1.0 : min(_3243, 1.0)))) * cbInstanceData._m0[_812].x;
    float _819 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3254 : (isnan(_3254) ? 1.0 : min(_3254, 1.0)))) * cbInstanceData._m0[_812].y;
    float _820 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3265 : (isnan(_3265) ? 1.0 : min(_3265, 1.0)))) * cbInstanceData._m0[_812].z;
    float _3276 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
    float _821 = isnan(1.0) ? _3276 : (isnan(_3276) ? 1.0 : min(_3276, 1.0));
    float _3287 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
    float _822 = isnan(1.0) ? _3287 : (isnan(_3287) ? 1.0 : min(_3287, 1.0));
    float _3298 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
    float _823 = isnan(1.0) ? _3298 : (isnan(_3298) ? 1.0 : min(_3298, 1.0));
    vec4 _827 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _667, cbSceneParam._m0[86u].y * _668));
    float _830 = _827.x * TEXCOORD_5.w;
    float _831 = dot(vec3(_752, _753, _754), vec3(_499, _500, _501));
    float _834 = _831 * 2.0;
    float _838 = (_834 * _752) - _499;
    float _839 = (_834 * _753) - _500;
    float _840 = (_834 * _754) - _501;
    float _841 = dot(vec3(_499, _500, _501), vec3(_752, _753, _754));
    float _844 = abs(_841);
    float _3309 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _845 = isnan(1.0) ? _3309 : (isnan(_3309) ? 1.0 : min(_3309, 1.0));
    float _851 = sqrt(_756);
    float _863 = exp2((_851 * 5.0) * log2(1.0 - (_845 * 0.999000012874603271484375))) / (4.0 - (_851 * 3.0));
    float _895 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _899 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _903 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1205;
    float _1207;
    float _1208;
    float _1209;
    float _1210;
    float _1211;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _930 = fma(_903, cbModelParam._m0[26u].z, fma(_899, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _895));
        float _934 = fma(_903, cbModelParam._m0[27u].z, fma(_899, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _895));
        float _938 = fma(_903, cbModelParam._m0[28u].z, fma(_899, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _895));
        float _963 = _895 + _752;
        float _964 = _899 + _753;
        float _965 = _903 + _754;
        float _975 = fma(_965, cbModelParam._m0[26u].z, fma(_964, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _963)) - _930;
        float _976 = fma(_965, cbModelParam._m0[27u].z, fma(_964, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _963)) - _934;
        float _977 = fma(_965, cbModelParam._m0[28u].z, fma(_964, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _963)) - _938;
        float _981 = inversesqrt(dot(vec3(_975, _976, _977), vec3(_975, _976, _977)));
        float _994 = ((_981 * _975) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_930 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _995 = ((_981 * _976) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_934 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _996 = ((_981 * _977) / cbModelParam._m0[34u].z) + ((((((_938 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _999 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_994, _995, _996), 0.0);
        vec4 _1006 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_994, _995, _996), 0.0);
        vec4 _1013 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_994, _995, _996), 0.0);
        vec4 _1020 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_994, _995, _996), 0.0);
        float _1033 = exp2((_999.w + (-0.5)) * 20.0) * 2.0;
        float _1034 = _1033 * (_999.x + (-0.5));
        float _1035 = _1033 * (_999.y + (-0.5));
        float _1036 = _1033 * (_999.z + (-0.5));
        float _1043 = exp2((_1006.w + (-0.5)) * 20.0) * 2.0;
        float _1044 = _1043 * (_1006.x + (-0.5));
        float _1045 = _1043 * (_1006.y + (-0.5));
        float _1046 = _1043 * (_1006.z + (-0.5));
        float _1053 = exp2((_1013.w + (-0.5)) * 20.0) * 2.0;
        float _1054 = _1053 * (_1013.x + (-0.5));
        float _1055 = _1053 * (_1013.y + (-0.5));
        float _1056 = _1053 * (_1013.z + (-0.5));
        float _1063 = exp2((_1020.w + (-0.5)) * 20.0) * 2.0;
        float _1064 = _1063 * (_1020.x + (-0.5));
        float _1065 = _1063 * (_1020.y + (-0.5));
        float _1066 = _1063 * (_1020.z + (-0.5));
        float _1067 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
        float _1068 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
        float _1069 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
        float _1070 = _1034 * 0.5;
        float _1071 = _1044 * 0.5;
        float _1072 = _1054 * 0.5;
        float _1073 = dot(vec3(_1070, _1071, _1072), vec3(_1070, _1071, _1072));
        float _1078 = (_1073 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1073);
        float _1087 = (dot(vec3(_752, _753, _754), vec3(_1078 * _1070, _1078 * _1071, _1078 * _1072)) + 1.0) * 0.5;
        float _3335 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
        float _1097 = sqrt(((_1071 * _1071) + (_1070 * _1070)) + (_1072 * _1072)) / (_1067 + 9.9999997473787516355514526367188e-06);
        float _3346 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
        float _1098 = isnan(1.0) ? _3346 : (isnan(_3346) ? 1.0 : min(_3346, 1.0));
        float _1099 = _1098 * 2.0;
        float _1103 = (1.0 - _1098) / (_1098 + 1.0);
        float _3357 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1104 = isnan(1.0) ? _3357 : (isnan(_3357) ? 1.0 : min(_3357, 1.0));
        float _1113 = ((((1.0 - _1104) * (_1099 + 2.0)) * exp2(log2(isnan(1.0) ? _3335 : (isnan(_3335) ? 1.0 : min(_3335, 1.0))) * (_1099 + 1.0))) + _1104) * _1067;
        float _1114 = _1035 * 0.5;
        float _1115 = _1045 * 0.5;
        float _1116 = _1055 * 0.5;
        float _1117 = dot(vec3(_1114, _1115, _1116), vec3(_1114, _1115, _1116));
        float _1122 = (_1117 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1117);
        float _1130 = (dot(vec3(_752, _753, _754), vec3(_1122 * _1114, _1122 * _1115, _1122 * _1116)) + 1.0) * 0.5;
        float _3368 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
        float _1139 = sqrt(((_1115 * _1115) + (_1114 * _1114)) + (_1116 * _1116)) / (_1068 + 9.9999997473787516355514526367188e-06);
        float _3379 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1140 = isnan(1.0) ? _3379 : (isnan(_3379) ? 1.0 : min(_3379, 1.0));
        float _1141 = _1140 * 2.0;
        float _1145 = (1.0 - _1140) / (_1140 + 1.0);
        float _3390 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
        float _1146 = isnan(1.0) ? _3390 : (isnan(_3390) ? 1.0 : min(_3390, 1.0));
        float _1155 = ((((1.0 - _1146) * (_1141 + 2.0)) * exp2(log2(isnan(1.0) ? _3368 : (isnan(_3368) ? 1.0 : min(_3368, 1.0))) * (_1141 + 1.0))) + _1146) * _1068;
        float _1156 = _1036 * 0.5;
        float _1157 = _1046 * 0.5;
        float _1158 = _1056 * 0.5;
        float _1159 = dot(vec3(_1156, _1157, _1158), vec3(_1156, _1157, _1158));
        float _1164 = (_1159 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1159);
        float _1172 = (dot(vec3(_752, _753, _754), vec3(_1164 * _1156, _1164 * _1157, _1164 * _1158)) + 1.0) * 0.5;
        float _3401 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1181 = sqrt(((_1157 * _1157) + (_1156 * _1156)) + (_1158 * _1158)) / (_1069 + 9.9999997473787516355514526367188e-06);
        float _3412 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
        float _1182 = isnan(1.0) ? _3412 : (isnan(_3412) ? 1.0 : min(_3412, 1.0));
        float _1183 = _1182 * 2.0;
        float _1187 = (1.0 - _1182) / (_1182 + 1.0);
        float _3423 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1188 = isnan(1.0) ? _3423 : (isnan(_3423) ? 1.0 : min(_3423, 1.0));
        float _1197 = ((((1.0 - _1188) * (_1183 + 2.0)) * exp2(log2(isnan(1.0) ? _3401 : (isnan(_3401) ? 1.0 : min(_3401, 1.0))) * (_1183 + 1.0))) + _1188) * _1069;
        _1205 = _1036;
        _1207 = _1035;
        _1208 = _1034;
        _1209 = _1046;
        _1210 = _1045;
        _1211 = _1044;
        _1212 = _1056;
        _1213 = _1055;
        _1214 = _1054;
        _1215 = _1069;
        _1216 = _1068;
        _1217 = _1067;
        _1218 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0)));
        _1219 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0)));
        _1220 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0)));
    }
    else
    {
        _1205 = _1206;
        _1207 = _1206;
        _1208 = _1206;
        _1209 = _1206;
        _1210 = _1206;
        _1211 = _1206;
        _1212 = _1206;
        _1213 = _1206;
        _1214 = _1206;
        _1215 = _1206;
        _1216 = _1206;
        _1217 = _1206;
        _1218 = 0.0;
        _1219 = 0.0;
        _1220 = 0.0;
    }
    float _1515;
    float _1516;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1246 = fma(_903, cbModelParam._m0[30u].z, fma(_899, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _895));
        float _1250 = fma(_903, cbModelParam._m0[31u].z, fma(_899, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _895));
        float _1254 = fma(_903, cbModelParam._m0[32u].z, fma(_899, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _895));
        float _1277 = _895 + _752;
        float _1278 = _899 + _753;
        float _1279 = _903 + _754;
        float _1289 = fma(_1279, cbModelParam._m0[30u].z, fma(_1278, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1277)) - _1246;
        float _1290 = fma(_1279, cbModelParam._m0[31u].z, fma(_1278, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1277)) - _1250;
        float _1291 = fma(_1279, cbModelParam._m0[32u].z, fma(_1278, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1277)) - _1254;
        float _1295 = inversesqrt(dot(vec3(_1289, _1290, _1291), vec3(_1289, _1290, _1291)));
        float _1308 = ((_1295 * _1289) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1246 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1309 = ((_1295 * _1290) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1250 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1310 = ((_1295 * _1291) / cbModelParam._m0[35u].z) + ((((((_1254 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1312 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1308, _1309, _1310), 0.0);
        vec4 _1319 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1308, _1309, _1310), 0.0);
        vec4 _1326 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1308, _1309, _1310), 0.0);
        vec4 _1333 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1308, _1309, _1310), 0.0);
        float _1345 = exp2((_1312.w + (-0.5)) * 20.0) * 2.0;
        float _1346 = _1345 * (_1312.x + (-0.5));
        float _1347 = _1345 * (_1312.y + (-0.5));
        float _1348 = _1345 * (_1312.z + (-0.5));
        float _1355 = exp2((_1319.w + (-0.5)) * 20.0) * 2.0;
        float _1356 = _1355 * (_1319.x + (-0.5));
        float _1357 = _1355 * (_1319.y + (-0.5));
        float _1358 = _1355 * (_1319.z + (-0.5));
        float _1365 = exp2((_1326.w + (-0.5)) * 20.0) * 2.0;
        float _1366 = _1365 * (_1326.x + (-0.5));
        float _1367 = _1365 * (_1326.y + (-0.5));
        float _1368 = _1365 * (_1326.z + (-0.5));
        float _1375 = exp2((_1333.w + (-0.5)) * 20.0) * 2.0;
        float _1376 = _1375 * (_1333.x + (-0.5));
        float _1377 = _1375 * (_1333.y + (-0.5));
        float _1378 = _1375 * (_1333.z + (-0.5));
        float _1379 = isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0));
        float _1380 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
        float _1381 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1382 = _1346 * 0.5;
        float _1383 = _1356 * 0.5;
        float _1384 = _1366 * 0.5;
        float _1385 = dot(vec3(_1382, _1383, _1384), vec3(_1382, _1383, _1384));
        float _1390 = (_1385 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1385);
        float _1398 = (dot(vec3(_752, _753, _754), vec3(_1390 * _1382, _1390 * _1383, _1390 * _1384)) + 1.0) * 0.5;
        float _3464 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1407 = sqrt(((_1383 * _1383) + (_1382 * _1382)) + (_1384 * _1384)) / (_1379 + 9.9999997473787516355514526367188e-06);
        float _3475 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
        float _1408 = isnan(1.0) ? _3475 : (isnan(_3475) ? 1.0 : min(_3475, 1.0));
        float _1409 = _1408 * 2.0;
        float _1413 = (1.0 - _1408) / (_1408 + 1.0);
        float _3486 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
        float _1414 = isnan(1.0) ? _3486 : (isnan(_3486) ? 1.0 : min(_3486, 1.0));
        float _1423 = ((((1.0 - _1414) * (_1409 + 2.0)) * exp2(log2(isnan(1.0) ? _3464 : (isnan(_3464) ? 1.0 : min(_3464, 1.0))) * (_1409 + 1.0))) + _1414) * _1379;
        float _1424 = _1347 * 0.5;
        float _1425 = _1357 * 0.5;
        float _1426 = _1367 * 0.5;
        float _1427 = dot(vec3(_1424, _1425, _1426), vec3(_1424, _1425, _1426));
        float _1432 = (_1427 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1427);
        float _1440 = (dot(vec3(_752, _753, _754), vec3(_1432 * _1424, _1432 * _1425, _1432 * _1426)) + 1.0) * 0.5;
        float _3497 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1449 = sqrt(((_1425 * _1425) + (_1424 * _1424)) + (_1426 * _1426)) / (_1380 + 9.9999997473787516355514526367188e-06);
        float _3508 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1450 = isnan(1.0) ? _3508 : (isnan(_3508) ? 1.0 : min(_3508, 1.0));
        float _1451 = _1450 * 2.0;
        float _1455 = (1.0 - _1450) / (_1450 + 1.0);
        float _3519 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1456 = isnan(1.0) ? _3519 : (isnan(_3519) ? 1.0 : min(_3519, 1.0));
        float _1465 = ((((1.0 - _1456) * (_1451 + 2.0)) * exp2(log2(isnan(1.0) ? _3497 : (isnan(_3497) ? 1.0 : min(_3497, 1.0))) * (_1451 + 1.0))) + _1456) * _1380;
        float _1466 = _1348 * 0.5;
        float _1467 = _1358 * 0.5;
        float _1468 = _1368 * 0.5;
        float _1469 = dot(vec3(_1466, _1467, _1468), vec3(_1466, _1467, _1468));
        float _1474 = (_1469 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1469);
        float _1482 = (dot(vec3(_752, _753, _754), vec3(_1474 * _1466, _1474 * _1467, _1474 * _1468)) + 1.0) * 0.5;
        float _3530 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1491 = sqrt(((_1467 * _1467) + (_1466 * _1466)) + (_1468 * _1468)) / (_1381 + 9.9999997473787516355514526367188e-06);
        float _3541 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1492 = isnan(1.0) ? _3541 : (isnan(_3541) ? 1.0 : min(_3541, 1.0));
        float _1493 = _1492 * 2.0;
        float _1497 = (1.0 - _1492) / (_1492 + 1.0);
        float _3552 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1498 = isnan(1.0) ? _3552 : (isnan(_3552) ? 1.0 : min(_3552, 1.0));
        float _1507 = ((((1.0 - _1498) * (_1493 + 2.0)) * exp2(log2(isnan(1.0) ? _3530 : (isnan(_3530) ? 1.0 : min(_3530, 1.0))) * (_1493 + 1.0))) + _1498) * _1381;
        _1515 = _1348;
        _1516 = _1347;
        _1517 = _1346;
        _1518 = _1358;
        _1519 = _1357;
        _1520 = _1356;
        _1521 = _1368;
        _1522 = _1367;
        _1523 = _1366;
        _1524 = _1381;
        _1525 = _1380;
        _1526 = _1379;
        _1527 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0)));
        _1528 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0)));
        _1529 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0)));
    }
    else
    {
        _1515 = _1206;
        _1516 = _1206;
        _1517 = _1206;
        _1518 = _1206;
        _1519 = _1206;
        _1520 = _1206;
        _1521 = _1206;
        _1522 = _1206;
        _1523 = _1206;
        _1524 = _1206;
        _1525 = _1206;
        _1526 = _1206;
        _1527 = 0.0;
        _1528 = 0.0;
        _1529 = 0.0;
    }
    float _1539 = (cbModelParam._m0[1u].x * (_1527 - _1218)) + _1218;
    float _1540 = (cbModelParam._m0[1u].x * (_1528 - _1219)) + _1219;
    float _1541 = (cbModelParam._m0[1u].x * (_1529 - _1220)) + _1220;
    float _1562 = fma(_1541, cbSceneParam._m0[89u].z, fma(_1540, cbSceneParam._m0[89u].y, _1539 * cbSceneParam._m0[89u].x));
    float _1565 = fma(_1541, cbSceneParam._m0[90u].z, fma(_1540, cbSceneParam._m0[90u].y, _1539 * cbSceneParam._m0[90u].x));
    float _1568 = fma(_1541, cbSceneParam._m0[91u].z, fma(_1540, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1539));
    float _1583 = _838 * 0.5;
    float _1584 = _839 * 0.5;
    float _1585 = _840 * 0.5;
    float _1586 = dot(vec4(_1583, _1584, _1585, 1.0), vec4(_1517, _1520, _1523, _1526));
    float _1589 = dot(vec4(_1583, _1584, _1585, 1.0), vec4(_1516, _1519, _1522, _1525));
    float _1592 = dot(vec4(_1583, _1584, _1585, 1.0), vec4(_1515, _1518, _1521, _1524));
    float _1626;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1599 = dot(vec4(_1583, _1584, _1585, 1.0), vec4(_1205, _1209, _1212, _1215));
        float _1603 = dot(vec4(_1583, _1584, _1585, 1.0), vec4(_1207, _1210, _1213, _1216));
        float _1607 = dot(vec4(_1583, _1584, _1585, 1.0), vec4(_1208, _1211, _1214, _1217));
        float _1614 = dot(vec4(cbModelParam._m0[39u]), vec4(_1583, _1584, _1585, 1.0));
        _1626 = dot(vec3(isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0)), isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0)), isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1614) ? 0.0 : (isnan(0.0) ? _1614 : max(0.0, _1614))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1626 = 1.0;
    }
    float _1637;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1628 = dot(vec4(cbModelParam._m0[40u]), vec4(_1583, _1584, _1585, 1.0));
        _1637 = dot(vec3(isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0)), isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0)), isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1628) ? 0.0 : (isnan(0.0) ? _1628 : max(0.0, _1628))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1637 = 1.0;
    }
    float _1641 = (_1637 * cbModelParam._m0[1u].x) + (_1626 * (1.0 - cbModelParam._m0[1u].x));
    float _1651 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _756);
    float _1652 = isnan(_1651) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1651 : min(cbModelParam._m0[25u].z, _1651));
    float _1732;
    float _1734;
    float _1736;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1699 = fma(_903, cbModelParam._m0[13u].z, fma(_899, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _895)) + cbModelParam._m0[13u].w;
        float _1703 = fma(_903, cbModelParam._m0[14u].z, fma(_899, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _895)) + cbModelParam._m0[14u].w;
        float _1707 = fma(_903, cbModelParam._m0[15u].z, fma(_899, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _895)) + cbModelParam._m0[15u].w;
        float _1710 = fma(_840, cbModelParam._m0[13u].z, fma(_839, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _838));
        float _1713 = fma(_840, cbModelParam._m0[14u].z, fma(_839, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _838));
        float _1716 = fma(_840, cbModelParam._m0[15u].z, fma(_839, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _838));
        float _1744;
        if (_1710 > 0.0)
        {
            _1744 = abs((1.0 - _1699) / _1710);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1710 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1699 + 1.0) / _1710);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1744 = frontier_phi_16_14_ladder;
        }
        float _1937;
        if (_1713 > 0.0)
        {
            _1937 = abs((1.0 - _1703) / _1713);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1713 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1703 + 1.0) / _1713);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1937 = frontier_phi_25_21_ladder;
        }
        float _2175;
        if (_1716 > 0.0)
        {
            _2175 = abs((1.0 - _1707) / _1716);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1716 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1707 + 1.0) / _1716);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2175 = frontier_phi_36_32_ladder;
        }
        float _2177 = isnan(_1937) ? _1744 : (isnan(_1744) ? _1937 : min(_1744, _1937));
        float _2178 = isnan(_2175) ? _2177 : (isnan(_2177) ? _2175 : min(_2177, _2175));
        float _2182 = (_2178 * _1710) + _1699;
        float _2183 = (_2178 * _1713) + _1703;
        float _2184 = (_2178 * _1716) + _1707;
        float _2185 = _2178 * 9.9999997473787516355514526367188e-05;
        float _2187 = (-1.0) - _2185;
        float _2189 = _2185 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2184 > _2189) || ((_2184 < _2187) || ((_2183 > _2189) || ((_2183 < _2187) || ((_2182 < _2187) || (_2182 > _2189))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2334 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2184, cbModelParam._m0[9u].z, fma(_2183, cbModelParam._m0[9u].y, _2182 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2184, cbModelParam._m0[10u].z, fma(_2183, cbModelParam._m0[10u].y, _2182 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2184, cbModelParam._m0[11u].z, fma(_2183, cbModelParam._m0[11u].y, _2182 * cbModelParam._m0[11u].x))), _1652);
            frontier_phi_15_36_ladder = _2334.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2334.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2334.y * cbModelParam._m0[1u].y;
        }
        _1732 = frontier_phi_15_36_ladder_1;
        _1734 = frontier_phi_15_36_ladder_2;
        _1736 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1720 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_838, _839, _840), _1652);
        _1732 = _1720.x * cbModelParam._m0[1u].y;
        _1734 = _1720.y * cbModelParam._m0[1u].y;
        _1736 = _1720.z * cbModelParam._m0[1u].y;
    }
    float _1740 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _756);
    float _1741 = isnan(_1740) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1740 : min(cbModelParam._m0[25u].w, _1740));
    float _1833;
    float _1835;
    float _1837;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1797 = fma(_903, cbModelParam._m0[21u].z, fma(_899, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _895)) + cbModelParam._m0[21u].w;
        float _1801 = fma(_903, cbModelParam._m0[22u].z, fma(_899, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _895)) + cbModelParam._m0[22u].w;
        float _1805 = fma(_903, cbModelParam._m0[23u].z, fma(_899, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _895)) + cbModelParam._m0[23u].w;
        float _1808 = fma(_840, cbModelParam._m0[21u].z, fma(_839, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _838));
        float _1811 = fma(_840, cbModelParam._m0[22u].z, fma(_839, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _838));
        float _1814 = fma(_840, cbModelParam._m0[23u].z, fma(_839, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _838));
        float _1942;
        if (_1808 > 0.0)
        {
            _1942 = abs((1.0 - _1797) / _1808);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1808 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1797 + 1.0) / _1808);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1942 = frontier_phi_27_23_ladder;
        }
        float _2202;
        if (_1811 > 0.0)
        {
            _2202 = abs((1.0 - _1801) / _1811);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1811 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1801 + 1.0) / _1811);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2202 = frontier_phi_38_34_ladder;
        }
        float _2509;
        if (_1814 > 0.0)
        {
            _2509 = abs((1.0 - _1805) / _1814);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1814 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1805 + 1.0) / _1814);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2509 = frontier_phi_49_44_ladder;
        }
        float _2511 = isnan(_2202) ? _1942 : (isnan(_1942) ? _2202 : min(_1942, _2202));
        float _2512 = isnan(_2509) ? _2511 : (isnan(_2511) ? _2509 : min(_2511, _2509));
        float _2516 = (_2512 * _1808) + _1797;
        float _2517 = (_2512 * _1811) + _1801;
        float _2518 = (_2512 * _1814) + _1805;
        float _2519 = _2512 * 9.9999997473787516355514526367188e-05;
        float _2520 = (-1.0) - _2519;
        float _2522 = _2519 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2518 > _2522) || ((_2518 < _2520) || ((_2517 > _2522) || ((_2517 < _2520) || ((_2516 < _2520) || (_2516 > _2522))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2691 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2518, cbModelParam._m0[17u].z, fma(_2517, cbModelParam._m0[17u].y, _2516 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2518, cbModelParam._m0[18u].z, fma(_2517, cbModelParam._m0[18u].y, _2516 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2518, cbModelParam._m0[19u].z, fma(_2517, cbModelParam._m0[19u].y, _2516 * cbModelParam._m0[19u].x))), _1741);
            frontier_phi_24_49_ladder = _2691.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2691.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2691.x * cbModelParam._m0[1u].z;
        }
        _1833 = frontier_phi_24_49_ladder_2;
        _1835 = frontier_phi_24_49_ladder;
        _1837 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1817 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_838, _839, _840), _1741);
        _1833 = _1817.x * cbModelParam._m0[1u].z;
        _1835 = _1817.y * cbModelParam._m0[1u].z;
        _1837 = _1817.z * cbModelParam._m0[1u].z;
    }
    float _1849 = ((((1.0 - _863) * ((_851 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_863 * _851)) * _830;
    float _1850 = _1849 * ((cbModelParam._m0[1u].w * (_1833 - _1732)) + _1732);
    float _1851 = _1849 * ((cbModelParam._m0[1u].w * (_1835 - _1734)) + _1734);
    float _1852 = _1849 * ((cbModelParam._m0[1u].w * (_1837 - _1736)) + _1736);
    float _1855 = fma(_1852, cbSceneParam._m0[89u].z, fma(_1851, cbSceneParam._m0[89u].y, _1850 * cbSceneParam._m0[89u].x));
    float _1858 = fma(_1852, cbSceneParam._m0[90u].z, fma(_1851, cbSceneParam._m0[90u].y, _1850 * cbSceneParam._m0[90u].x));
    float _1861 = fma(_1852, cbSceneParam._m0[91u].z, fma(_1851, cbSceneParam._m0[91u].y, _1850 * cbSceneParam._m0[91u].x));
    vec4 _1869 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_667, _668));
    float _1871 = _1869.w;
    float _1883 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1871);
    float _1884 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1871);
    float _1885 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1871);
    uvec4 _1889 = floatBitsToUint(cbInstanceData._m0[_306 + 5u]);
    uint _1891 = _1889.x * 14u;
    uint _1892 = _1891 + 13u;
    float _1897 = _830 + (-1.0);
    float _1900 = (cbLight._m0[_1892].x * _1897) + 1.0;
    float _1901 = (cbLight._m0[_1892].y * _1897) + 1.0;
    uint _1903 = _1891 + 4u;
    float _1914 = dot(vec3(cbLight._m0[_1891].xyz), vec3(_752, _753, _754));
    float _1917 = isnan(1.0) ? _1900 : (isnan(_1900) ? 1.0 : min(_1900, 1.0));
    float _1918 = cbLight._m0[_1903].x * _1883;
    float _1919 = cbLight._m0[_1903].y * _1884;
    float _1920 = cbLight._m0[_1903].z * _1885;
    uint _1921 = _1891 + 5u;
    uint _1927 = _1891 | 1u;
    float _1933 = dot(vec3(cbLight._m0[_1927].xyz), vec3(_752, _753, _754));
    float _1936 = isnan(1.0) ? _1901 : (isnan(_1901) ? 1.0 : min(_1901, 1.0));
    float _2001;
    float _2002;
    float _2003;
    if (_757 == 0.0)
    {
        float _3688 = isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0));
        float _3699 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
        float _1955 = (isnan(1.0) ? _3688 : (isnan(_3688) ? 1.0 : min(_3688, 1.0))) * 0.3183098733425140380859375;
        float _1957 = (isnan(1.0) ? _3699 : (isnan(_3699) ? 1.0 : min(_3699, 1.0))) * 0.3183098733425140380859375;
        _2001 = ((cbLight._m0[_1921].x * _1936) * _1957) + ((_1918 * _1917) * _1955);
        _2002 = ((_1936 * cbLight._m0[_1921].y) * _1957) + ((_1919 * _1917) * _1955);
        _2003 = ((_1936 * cbLight._m0[_1921].z) * _1957) + ((_1920 * _1917) * _1955);
    }
    else
    {
        float _1967 = _1914 + _757;
        float _1970 = (_757 * 2.0) + 1.0;
        float _1971 = (isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0))) / _1970;
        float _1978 = _1933 + _757;
        float _1980 = (isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : max(_1978, 0.0))) / _1970;
        _2001 = (((_1980 * cbLight._m0[_1921].x) * _1936) + ((_1918 * _1971) * _1917)) * 0.3183098733425140380859375;
        _2002 = (((_1980 * cbLight._m0[_1921].y) * _1936) + ((_1919 * _1971) * _1917)) * 0.3183098733425140380859375;
        _2003 = (((_1980 * cbLight._m0[_1921].z) * _1936) + ((_1920 * _1971) * _1917)) * 0.3183098733425140380859375;
    }
    uint _2007 = _1891 + 8u;
    float _2023 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1891].w)) * _756) * 0.949999988079071044921875);
    float _2024 = _2023 * _2023;
    float _2025 = cbLight._m0[_1891].x + _499;
    float _2026 = cbLight._m0[_1891].y + _500;
    float _2027 = cbLight._m0[_1891].z + _501;
    float _2031 = inversesqrt(dot(vec3(_2025, _2026, _2027), vec3(_2025, _2026, _2027)));
    float _2032 = _2031 * _2025;
    float _2033 = _2031 * _2026;
    float _2034 = _2031 * _2027;
    float _2035 = dot(vec3(_752, _753, _754), vec3(cbLight._m0[_1891].xyz));
    float _3720 = isnan(0.0) ? _2035 : (isnan(_2035) ? 0.0 : max(_2035, 0.0));
    float _2038 = isnan(1.0) ? _3720 : (isnan(_3720) ? 1.0 : min(_3720, 1.0));
    float _3731 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _2039 = isnan(1.0) ? _3731 : (isnan(_3731) ? 1.0 : min(_3731, 1.0));
    float _2040 = dot(vec3(_752, _753, _754), vec3(_2032, _2033, _2034));
    float _3742 = isnan(0.0) ? _2040 : (isnan(_2040) ? 0.0 : max(_2040, 0.0));
    float _2043 = isnan(1.0) ? _3742 : (isnan(_3742) ? 1.0 : min(_3742, 1.0));
    float _2044 = dot(vec3(cbLight._m0[_1891].xyz), vec3(_2032, _2033, _2034));
    float _3753 = isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0));
    float _2048 = _2024 * _2024;
    float _2052 = ((_2043 * _2043) * (_2048 + (-1.0))) + 1.0;
    float _2063 = (exp2(log2(1.0 - (isnan(1.0) ? _3753 : (isnan(_3753) ? 1.0 : min(_3753, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2064 = 1.0 - _2024;
    float _2075 = (0.5 / (((_2039 * ((_2038 * _2064) + _2024)) + 9.9999999392252902907785028219223e-09) + (((_2039 * _2064) + _2024) * _2038))) * _2038;
    float _3764 = isnan(0.0) ? _2075 : (isnan(_2075) ? 0.0 : max(_2075, 0.0));
    float _2077 = (isnan(1.0) ? _3764 : (isnan(_3764) ? 1.0 : min(_3764, 1.0))) * (_2048 / ((_2052 * _2052) * 3.141590118408203125));
    uint _2093 = _1891 + 9u;
    float _2107 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1927].w)) * _756) * 0.949999988079071044921875);
    float _2108 = _2107 * _2107;
    float _2109 = cbLight._m0[_1927].x + _499;
    float _2110 = cbLight._m0[_1927].y + _500;
    float _2111 = cbLight._m0[_1927].z + _501;
    float _2115 = inversesqrt(dot(vec3(_2109, _2110, _2111), vec3(_2109, _2110, _2111)));
    float _2116 = _2115 * _2109;
    float _2117 = _2115 * _2110;
    float _2118 = _2115 * _2111;
    float _2119 = dot(vec3(_752, _753, _754), vec3(cbLight._m0[_1927].xyz));
    float _3775 = isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0));
    float _2122 = isnan(1.0) ? _3775 : (isnan(_3775) ? 1.0 : min(_3775, 1.0));
    float _2123 = dot(vec3(_752, _753, _754), vec3(_2116, _2117, _2118));
    float _3786 = isnan(0.0) ? _2123 : (isnan(_2123) ? 0.0 : max(_2123, 0.0));
    float _2126 = isnan(1.0) ? _3786 : (isnan(_3786) ? 1.0 : min(_3786, 1.0));
    float _2127 = dot(vec3(cbLight._m0[_1927].xyz), vec3(_2116, _2117, _2118));
    float _3797 = isnan(0.0) ? _2127 : (isnan(_2127) ? 0.0 : max(_2127, 0.0));
    float _2131 = _2108 * _2108;
    float _2135 = ((_2126 * _2126) * (_2131 + (-1.0))) + 1.0;
    float _2144 = (exp2(log2(1.0 - (isnan(1.0) ? _3797 : (isnan(_3797) ? 1.0 : min(_3797, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2145 = 1.0 - _2108;
    float _2155 = (0.5 / (((_2039 * ((_2122 * _2145) + _2108)) + 9.9999999392252902907785028219223e-09) + (((_2039 * _2145) + _2108) * _2122))) * _2122;
    float _3808 = isnan(0.0) ? _2155 : (isnan(_2155) ? 0.0 : max(_2155, 0.0));
    float _2157 = (isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0))) * (_2131 / ((_2135 * _2135) * 3.141590118408203125));
    float _2167 = (((_2144 * cbLight._m0[_2093].x) * _2157) * _1936) + ((((cbLight._m0[_2007].x * _1883) * _2063) * _2077) * _1917);
    float _2168 = (((_2144 * cbLight._m0[_2093].y) * _2157) * _1936) + ((((cbLight._m0[_2007].y * _1884) * _2063) * _2077) * _1917);
    float _2169 = (((_2144 * cbLight._m0[_2093].z) * _2157) * _1936) + ((((cbLight._m0[_2007].z * _1885) * _2063) * _2077) * _1917);
    float _2305;
    float _2307;
    float _2309;
    float _2311;
    float _2313;
    float _2315;
    if (_1889.y == 0u)
    {
        float _2246 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2247 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2246;
        float _2248 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2246;
        float _2249 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2246;
        uvec4 _2261 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2262 = _2261.x;
        uint _2273 = uint((float(_2261.y) * floor(float(uint(cbSceneParam._m0[85u].y * _668) / _2262))) + floor(float(uint(cbSceneParam._m0[85u].x * _667) / _2262)));
        float _2283 = (log2(_2249 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2284 = isnan(0.0) ? _2283 : (isnan(_2283) ? 0.0 : max(_2283, 0.0));
        uint _2287 = uint(isnan(14.0) ? _2284 : (isnan(_2284) ? 14.0 : min(_2284, 14.0)));
        uint _2294 = _2261.z;
        float _2343;
        float _2345;
        float _2347;
        float _2349;
        float _2351;
        float _2353;
        if (((((1u << ((_2294 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2287 << 2u) + (_2273 << 6u)) >> 2u)).x) == 0u) || ((_2294 & 240u) == 0u))
        {
            _2343 = 0.0;
            _2345 = 0.0;
            _2347 = 0.0;
            _2349 = 0.0;
            _2351 = 0.0;
            _2353 = 0.0;
        }
        else
        {
            float _2344;
            float _2346;
            float _2348;
            float _2350;
            float _2352;
            float _2354;
            float _2535 = 0.0;
            float _2536 = 0.0;
            float _2537 = 0.0;
            float _2538 = 0.0;
            float _2539 = 0.0;
            float _2540 = 0.0;
            uint _2541 = 0u;
            uint _2550;
            bool _2551;
            for (;;)
            {
                _2550 = texelFetch(g_lightClassification, int((((_2287 << 5u) + (_2273 << 9u)) + (_2541 << 2u)) >> 2u)).x;
                _2551 = _2550 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2551)
                {
                    frontier_phi_55_pred = _2540;
                    frontier_phi_55_pred_1 = _2539;
                    frontier_phi_55_pred_2 = _2538;
                    frontier_phi_55_pred_3 = _2536;
                    frontier_phi_55_pred_4 = _2535;
                    frontier_phi_55_pred_5 = _2537;
                }
                else
                {
                    float _2748;
                    float _2749;
                    float _2750;
                    float _2751;
                    float _2752;
                    float _2753;
                    uint _2754;
                    _2748 = _2535;
                    _2749 = _2536;
                    _2750 = _2537;
                    _2751 = _2538;
                    _2752 = _2539;
                    _2753 = _2540;
                    _2754 = _2550;
                    float _2696;
                    float _2697;
                    float _2698;
                    float _2699;
                    float _2700;
                    float _2701;
                    for (;;)
                    {
                        uint _2758 = uint(findLSB(_2754)) + (_2541 << 5u);
                        uint _2755 = (_2754 + 4294967295u) & _2754;
                        uint _2760 = _2758 * 48u;
                        vec4 _2774 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2760)).x, texelFetch(g_PointLightRenderingBuffer, int(_2760 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2760 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2760 + 3u)).x));
                        uint _2780 = (_2758 * 48u) + 4u;
                        vec4 _2793 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2780)).x, texelFetch(g_PointLightRenderingBuffer, int(_2780 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2780 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2780 + 3u)).x));
                        float _2794 = _2793.x;
                        float _2795 = _2793.y;
                        float _2796 = _2793.z;
                        uint _2799 = (_2758 * 48u) + 8u;
                        vec3 _2810 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2799)).x, texelFetch(g_PointLightRenderingBuffer, int(_2799 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2799 + 2u)).x));
                        uint _2815 = (_2758 * 48u) + 12u;
                        vec2 _2823 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2815)).x, texelFetch(g_PointLightRenderingBuffer, int(_2815 + 1u)).x));
                        float _2829 = inversesqrt(dot(vec3(_2247, _2248, _2249), vec3(_2247, _2248, _2249)));
                        float _2830 = _2829 * _2247;
                        float _2831 = _2829 * _2248;
                        float _2832 = _2829 * _2249;
                        float _2833 = _2774.x - _2247;
                        float _2834 = _2774.y - _2248;
                        float _2835 = _2774.z - _2249;
                        float _2836 = dot(vec3(_2833, _2834, _2835), vec3(_2833, _2834, _2835));
                        float _2839 = inversesqrt(_2836);
                        float _2840 = _2839 * _2833;
                        float _2841 = _2839 * _2834;
                        float _2842 = _2839 * _2835;
                        float _2843 = dot(vec3(_792, _795, _798), vec3(_2840, _2841, _2842));
                        float _2848 = 1.0 - (_2836 * _2774.w);
                        float _3829 = isnan(0.0) ? _2848 : (isnan(_2848) ? 0.0 : max(_2848, 0.0));
                        float _2849 = isnan(1.0) ? _3829 : (isnan(_3829) ? 1.0 : min(_3829, 1.0));
                        float _2850 = sqrt(_2836) * _2793.w;
                        float _2853 = 1.39999997615814208984375 / (_2850 + 1.39999997615814208984375);
                        float _2854 = _2853 * _2853;
                        float _2855 = 1.0 - _2854;
                        float _2857 = (_2855 * _2855) * _757;
                        float _2860 = ((_2855 * _2843) + _2854) + _2857;
                        float _2865 = _2850 * _2850;
                        float _2870 = ((isnan(0.0) ? _2860 : (isnan(_2860) ? 0.0 : max(_2860, 0.0))) * _2849) / (((_2857 * 2.0) + 1.0) * ((_2865 * 0.699999988079071044921875) + 1.0));
                        float _2874 = dot(vec3(_2840, _2841, _2842), vec3(_2830, _2831, _2832));
                        float _3845 = isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : max(_2874, 0.0));
                        float _2881 = dot(vec3((-0.0) - _2830, (-0.0) - _2831, (-0.0) - _2832), vec3(_792, _795, _798)) + 1.0;
                        float _2883 = (isnan(0.0) ? _2881 : (isnan(_2881) ? 0.0 : max(_2881, 0.0))) * 0.5;
                        float _2890 = ((_2883 * _2883) * _2823.x) * exp2((_2823.y * 32.0) * log2(isnan(1.0) ? _3845 : (isnan(_3845) ? 1.0 : min(_3845, 1.0))));
                        float _2892 = _757 / (_757 + 1.0);
                        float _2908 = (-0.0) - _2247;
                        float _2909 = (-0.0) - _2248;
                        float _2910 = (-0.0) - _2249;
                        float _2914 = inversesqrt(dot(vec3(_2908, _2909, _2910), vec3(_2908, _2909, _2910)));
                        float _2915 = _2914 * _2908;
                        float _2916 = _2914 * _2909;
                        float _2917 = _2914 * _2910;
                        float _2925 = exp2(log2(1.0 / ((_2865 * 3.5) + 5.0)) * 0.25);
                        float _2926 = 1.0 - _851;
                        float _2933 = sqrt(1.0 - ((1.0 - (_2926 * _2926)) * (1.0 - (_2925 * _2925))));
                        float _2934 = _2933 * _2933;
                        float _2935 = _2934 * _2934;
                        float _2936 = _2915 + _2840;
                        float _2937 = _2916 + _2841;
                        float _2938 = _2917 + _2842;
                        float _2942 = inversesqrt(dot(vec3(_2936, _2937, _2938), vec3(_2936, _2937, _2938)));
                        float _2946 = dot(vec3(_792, _795, _798), vec3(_2915, _2916, _2917));
                        float _3861 = isnan(0.0) ? _2946 : (isnan(_2946) ? 0.0 : max(_2946, 0.0));
                        float _2949 = isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0));
                        float _2950 = dot(vec3(_792, _795, _798), vec3(_2942 * _2936, _2942 * _2937, _2942 * _2938));
                        float _3872 = isnan(0.0) ? _2950 : (isnan(_2950) ? 0.0 : max(_2950, 0.0));
                        float _2953 = isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0));
                        float _2957 = ((_2953 * _2953) * (_2935 + (-1.0))) + 1.0;
                        float _2958 = _2853 * _2934;
                        float _2959 = _2958 * _2958;
                        float _2962 = ((1.0 - _2959) * _2843) + _2959;
                        float _3883 = isnan(0.0) ? _2962 : (isnan(_2962) ? 0.0 : max(_2962, 0.0));
                        float _2963 = isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0));
                        float _2964 = 1.0 - _2934;
                        float _2974 = (0.5 / (((_2963 * ((_2949 * _2964) + _2934)) + 9.9999999392252902907785028219223e-09) + (((_2963 * _2964) + _2934) * _2949))) * _2963;
                        float _3894 = isnan(0.0) ? _2974 : (isnan(_2974) ? 0.0 : max(_2974, 0.0));
                        float _2985 = (((_2935 * 3.1415927410125732421875) * (isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0)))) / ((_2957 * _2957) * ((_2865 * 2.1991131305694580078125) + 3.141590118408203125))) * _2849;
                        _2699 = (((((_2794 * 0.3183098733425140380859375) * _2892) * _2890) + _2794) * _2870) + _2751;
                        _2700 = (((((_2795 * 0.3183098733425140380859375) * _2892) * _2890) + _2795) * _2870) + _2752;
                        _2701 = (((((_2796 * 0.3183098733425140380859375) * _2892) * _2890) + _2796) * _2870) + _2753;
                        _2696 = (_2985 * _2810.x) + _2748;
                        _2697 = (_2985 * _2810.y) + _2749;
                        _2698 = (_2985 * _2810.z) + _2750;
                        if (_2755 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2748 = _2696;
                            _2749 = _2697;
                            _2750 = _2698;
                            _2751 = _2699;
                            _2752 = _2700;
                            _2753 = _2701;
                            _2754 = _2755;
                        }
                    }
                    frontier_phi_55_pred = _2701;
                    frontier_phi_55_pred_1 = _2700;
                    frontier_phi_55_pred_2 = _2699;
                    frontier_phi_55_pred_3 = _2697;
                    frontier_phi_55_pred_4 = _2696;
                    frontier_phi_55_pred_5 = _2698;
                }
                _2354 = frontier_phi_55_pred;
                _2352 = frontier_phi_55_pred_1;
                _2350 = frontier_phi_55_pred_2;
                _2346 = frontier_phi_55_pred_3;
                _2344 = frontier_phi_55_pred_4;
                _2348 = frontier_phi_55_pred_5;
                uint _2542 = _2541 + 1u;
                if (_2542 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2535 = _2344;
                    _2536 = _2346;
                    _2537 = _2348;
                    _2538 = _2350;
                    _2539 = _2352;
                    _2540 = _2354;
                    _2541 = _2542;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2343 = _2344;
            _2345 = _2346;
            _2347 = _2348;
            _2349 = _2350;
            _2351 = _2352;
            _2353 = _2354;
        }
        float _2358 = isnan(1.0) ? _830 : (isnan(_830) ? 1.0 : min(_830, 1.0));
        _2305 = (_2358 * _2349) + _2001;
        _2307 = (_2358 * _2351) + _2002;
        _2309 = (_2358 * _2353) + _2003;
        _2311 = ((_2343 * 0.039999999105930328369140625) * _2358) + _2167;
        _2313 = ((_2345 * 0.039999999105930328369140625) * _2358) + _2168;
        _2315 = ((_2347 * 0.039999999105930328369140625) * _2358) + _2169;
    }
    else
    {
        _2305 = _2001;
        _2307 = _2002;
        _2309 = _2003;
        _2311 = _2167;
        _2313 = _2168;
        _2315 = _2169;
    }
    float _2432;
    float _2433;
    float _2434;
    if (_757 > 0.0)
    {
        uint _2365 = _1891 + 4u;
        float _2371 = (-0.0) - _499;
        float _2372 = (-0.0) - _500;
        float _2373 = (-0.0) - _501;
        float _2374 = dot(vec3(cbLight._m0[_1891].xyz), vec3(_2371, _2372, _2373));
        float _3910 = isnan(0.0) ? _2374 : (isnan(_2374) ? 0.0 : max(_2374, 0.0));
        float _2378 = _841 + 1.0;
        float _2380 = (isnan(0.0) ? _2378 : (isnan(_2378) ? 0.0 : max(_2378, 0.0))) * 0.5;
        float _2385 = _2380 * _2380;
        float _2386 = _2385 * exp2(log2(isnan(1.0) ? _3910 : (isnan(_3910) ? 1.0 : min(_3910, 1.0))) * 32.0);
        float _2388 = _757 / (_757 + 1.0);
        float _2389 = isnan(_1900) ? 1.0 : (isnan(1.0) ? _1900 : min(1.0, _1900));
        uint _2402 = _1891 + 5u;
        float _2408 = dot(vec3(cbLight._m0[_1927].xyz), vec3(_2371, _2372, _2373));
        float _3931 = isnan(0.0) ? _2408 : (isnan(_2408) ? 0.0 : max(_2408, 0.0));
        float _2415 = _2385 * exp2(log2(isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0))) * 32.0);
        float _2416 = isnan(_1901) ? 1.0 : (isnan(1.0) ? _1901 : min(1.0, _1901));
        _2432 = ((((_2415 * cbLight._m0[_2402].x) * _2388) * _2416) + ((((cbLight._m0[_2365].x * _1883) * _2386) * _2388) * _2389)) * 0.3183098733425140380859375;
        _2433 = ((((_2415 * cbLight._m0[_2402].y) * _2388) * _2416) + ((((cbLight._m0[_2365].y * _1884) * _2386) * _2388) * _2389)) * 0.3183098733425140380859375;
        _2434 = ((((_2415 * cbLight._m0[_2402].z) * _2388) * _2416) + ((((cbLight._m0[_2365].z * _1885) * _2386) * _2388) * _2389)) * 0.3183098733425140380859375;
    }
    else
    {
        _2432 = 0.0;
        _2433 = 0.0;
        _2434 = 0.0;
    }
    float _3947 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _3958 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _3969 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _3980 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    float _2449 = (isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0))) * ((_2305 + ((isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0))) * _830)) + _2432);
    float _2450 = (isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0))) * ((_2307 + ((isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0))) * _830)) + _2433);
    float _2451 = (isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0))) * ((_2309 + ((isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0))) * _830)) + _2434);
    float _2455 = 0.959999978542327880859375 - (exp2(log2(1.0 - _845) * 5.0) * 0.959999978542327880859375);
    float _2480 = _667 / cbSceneParam._m0[86u].x;
    float _2481 = _668 / cbSceneParam._m0[86u].y;
    vec4 _2495 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2480, _2481, (log2((isnan(cbSceneParam._m0[77u].w) ? _774 : (isnan(_774) ? cbSceneParam._m0[77u].w : min(_774, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2497 = _2495.x;
    float _2498 = _2495.y;
    float _2499 = _2495.z;
    float _2500 = _2495.w;
    float _2593;
    float _2595;
    float _2597;
    float _2599;
    if (_774 > cbSceneParam._m0[78u].w)
    {
        float _2556 = isnan(_774) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _774 : min(cbSceneParam._m0[80u].w, _774));
        float _2557 = _2556 / _774;
        float _2568 = _2557 * _298;
        float _2569 = _299 * _2557;
        float _2570 = (-0.0) - _2569;
        float _2571 = _2557 * _300;
        float _2573 = (cbSceneParam._m0[77u].w * _2570) / _2556;
        float _2574 = _2573 + cbSceneParam._m0[79u].w;
        float _2575 = cbSceneParam._m0[79u].w - _2569;
        float _2581 = sqrt(((_2568 * _2568) + (_2569 * _2569)) + (_2571 * _2571));
        float _2584 = (1.0 - (cbSceneParam._m0[77u].w / _2556)) * _2581;
        float _2589 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2591 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2990;
        if (abs((_2570 - _2573) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2990 = ((((_2574 > 0.0) ? exp2(_2589 * _2574) : (2.0 - exp2(_2591 * _2574))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2584;
        }
        else
        {
            float _2721 = 1.0 / cbSceneParam._m0[80u].x;
            float _2722 = isnan(_2575) ? _2574 : (isnan(_2574) ? _2575 : max(_2574, _2575));
            float _2723 = isnan(_2575) ? _2574 : (isnan(_2574) ? _2575 : min(_2574, _2575));
            float _2732 = isnan(0.0) ? _2722 : (isnan(_2722) ? 0.0 : min(_2722, 0.0));
            float _2733 = isnan(0.0) ? _2723 : (isnan(_2723) ? 0.0 : min(_2723, 0.0));
            _2990 = ((abs(_2581 / _2570) * cbSceneParam._m0[80u].y) * ((((_2732 - _2733) * 2.0) - ((exp2(_2589 * (isnan(0.0) ? _2722 : (isnan(_2722) ? 0.0 : max(_2722, 0.0)))) - exp2(_2589 * (isnan(0.0) ? _2723 : (isnan(_2723) ? 0.0 : max(_2723, 0.0))))) * _2721)) - ((exp2(_2591 * _2732) - exp2(_2591 * _2733)) * _2721))) + (_2584 * cbSceneParam._m0[80u].z);
        }
        vec4 _2992 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2480, _2481, 1.0), 0.0);
        float _3001 = exp2((_2990 * (-1.44269502162933349609375)) * (1.0 - _2992.w));
        float _3002 = log2(_3001);
        float _3018 = log2(_2500);
        _2593 = (exp2(_3018 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3002 * cbSceneParam._m0[78u].x)) * _2992.x) / cbSceneParam._m0[78u].x)) + _2497;
        _2595 = (exp2(_3018 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3002 * cbSceneParam._m0[78u].y)) * _2992.y) / cbSceneParam._m0[78u].y)) + _2498;
        _2597 = (exp2(_3018 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3002 * cbSceneParam._m0[78u].z)) * _2992.z) / cbSceneParam._m0[78u].z)) + _2499;
        _2599 = _3001 * _2500;
    }
    else
    {
        _2593 = _2497;
        _2595 = _2498;
        _2597 = _2499;
        _2599 = _2500;
    }
    bool _2611 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2612 = log2(_2599);
    float _2619 = exp2(_2612 * cbSceneParam._m0[78u].x) * ((_2449 + ((_2311 + ((isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0))) * _1641)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _691.x) * _2455) - _2449) * _737));
    float _2620 = exp2(_2612 * cbSceneParam._m0[78u].y) * ((_2450 + ((_2313 + ((isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0))) * _1641)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _691.y) * _2455) - _2450) * _737));
    float _2621 = exp2(_2612 * cbSceneParam._m0[78u].z) * ((_2451 + ((_2315 + ((isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0))) * _1641)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _691.z) * _2455) - _2451) * _737));
    vec4 _2629 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_667, _668));
    float _2631 = _2629.x;
    float _2652 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2631)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2631))) - _774) * cbMtdParam._m0[17u].y;
    float _4031 = isnan(0.0) ? _2652 : (isnan(_2652) ? 0.0 : max(_2652, 0.0));
    float _2654 = (cbInstanceData._m0[_306 + 6u].w * (isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0)))) * (isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0)));
    float _2663 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2663 * (_2611 ? _2619 : (_2619 + (cbSceneParam._m0[72u].w * _2593)));
    SV_Target.y = _2663 * (_2611 ? _2620 : (_2620 + (cbSceneParam._m0[72u].w * _2595)));
    SV_Target.z = _2663 * (_2611 ? _2621 : (_2621 + (cbSceneParam._m0[72u].w * _2597)));
    SV_Target.w = _2654;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2654;
}


