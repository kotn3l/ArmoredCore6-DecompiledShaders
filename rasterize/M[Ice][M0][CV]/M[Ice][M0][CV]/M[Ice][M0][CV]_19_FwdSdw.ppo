#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1233;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _212 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _213 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _214 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _220 = inversesqrt(dot(vec3(_212, _213, _214), vec3(_212, _213, _214)));
    float _221 = _220 * _212;
    float _222 = _220 * _213;
    float _223 = _220 * _214;
    float _227 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _228 = _227 * NORMAL.x;
    float _229 = _227 * NORMAL.y;
    float _230 = _227 * NORMAL.z;
    float _234 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _235 = _234 * TANGENT.x;
    float _236 = _234 * TANGENT.y;
    float _237 = _234 * TANGENT.z;
    float _242;
    float _243;
    float _244;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _242 = (-0.0) - _228;
        _243 = (-0.0) - _229;
        _244 = (-0.0) - _230;
    }
    else
    {
        _242 = _228;
        _243 = _229;
        _244 = _230;
    }
    float _291 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _301 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _291);
    float _302 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _291);
    float _303 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _291);
    uint _309 = uint(roundEven(NORMAL.w)) * 13u;
    uint _314 = _309 + 1u;
    uint _318 = _309 + 2u;
    float _327 = sqrt(((cbInstanceData._m0[_314].x * cbInstanceData._m0[_314].x) + (cbInstanceData._m0[_309].x * cbInstanceData._m0[_309].x)) + (cbInstanceData._m0[_318].x * cbInstanceData._m0[_318].x));
    float _328 = _327 * TEXCOORD.z;
    float _329 = _327 * TEXCOORD.w;
    vec4 _342 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _328) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _329) + cbTextureTilingScale._m0[8u].w));
    vec4 _369 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _377 = (_369.x * 2.0) + (-1.0);
    float _379 = (_369.y * 2.0) + (-1.0);
    float _380 = dot(vec2(_377, _379), vec2(_377, _379));
    float _3405 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _386 = sqrt(1.0 - (isnan(1.0) ? _3405 : (isnan(_3405) ? 1.0 : min(_3405, 1.0))));
    float _389 = fma(_386, _242, fma(_379, _235, _377 * _221));
    float _392 = fma(_386, _243, fma(_379, _236, _377 * _222));
    float _395 = fma(_386, _244, fma(_379, _237, _377 * _223));
    float _399 = inversesqrt(dot(vec3(_389, _392, _395), vec3(_389, _392, _395)));
    float _400 = _399 * _389;
    float _401 = _399 * _392;
    float _430 = (cbMtdParam._m0[17u].w + dot(vec4(_400, _401, _399 * _395, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _328) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _329) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3416 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _431 = isnan(1.0) ? _3416 : (isnan(_3416) ? 1.0 : min(_3416, 1.0));
    vec4 _443 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _448 = _443.w;
    float _460 = dot(vec3(_301, _302, _303), vec3(_221, _222, _223));
    float _463 = dot(vec3(_301, _302, _303), vec3(_235, _236, _237));
    float _466 = dot(vec3(_301, _302, _303), vec3(_242, _243, _244));
    float _472 = inversesqrt(dot(vec3(_460, _463, _466), vec3(_460, _463, _466)));
    float _494 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _514 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_460 * cbMtdParam._m0[14u].x) * _472) * _494) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_463 * cbMtdParam._m0[14u].x) * _472) * _494) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _537 = inversesqrt(dot(vec3(_301, _302, _303), vec3(_301, _302, _303)));
    float _538 = _537 * _301;
    float _539 = _537 * _302;
    float _540 = _537 * _303;
    float _541 = dot(vec4(_538, _539, _540, 0.0), vec4(_242, _243, _244, 0.0));
    float _544 = _541 - cbMtdParam._m0[15u].z;
    float _3427 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _551 = exp2(log2(1.0 - (isnan(1.0) ? _3427 : (isnan(_3427) ? 1.0 : min(_3427, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _566 = ((((_443.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _514.x) * cbMtdParam._m0[9u].x) * ((_551 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _571 = ((((_443.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _514.y) * cbMtdParam._m0[9u].y) * ((_551 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _576 = ((((_443.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _514.z) * cbMtdParam._m0[9u].z) * ((_551 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _583 = (((_342.x * cbMtdParam._m0[10u].x) - _566) * _431) + _566;
    float _584 = (((_342.y * cbMtdParam._m0[10u].y) - _571) * _431) + _571;
    float _585 = (((_342.z * cbMtdParam._m0[10u].z) - _576) * _431) + _576;
    vec4 _597 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _328) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _329) + cbTextureTilingScale._m0[9u].w));
    float _604 = (_597.x * 2.0) + (-1.0);
    float _605 = (_597.y * 2.0) + (-1.0);
    float _606 = dot(vec2(_604, _605), vec2(_604, _605));
    float _3443 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    vec4 _627 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _637 = cbMtdParam._m0[17u].z + _369.z;
    float _643 = (_637 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_627.z - _637));
    float _646 = ((_597.z - _643) * _431) + _643;
    float _652 = ((((_627.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _377;
    float _653 = ((((_627.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _379;
    float _661 = ((sqrt(1.0 - (isnan(1.0) ? _3443 : (isnan(_3443) ? 1.0 : min(_3443, 1.0)))) - _386) * _431) + _386;
    float _665 = ((_652 * cbMtdParam._m0[14u].z) + _652) + ((_604 - _652) * _431);
    float _667 = ((_653 * cbMtdParam._m0[14u].z) + _653) + ((_605 - _653) * _431);
    vec4 _679 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _683 = cbMtdParam._m0[16u].w * _679.x;
    float _685 = _683 - (_683 * _431);
    float _694 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _695 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _705 = cbSceneParam._m0[86u].x * ((_694 / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _400));
    float _706 = cbSceneParam._m0[86u].y * ((_695 / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _401));
    float _713 = isnan(cbInstanceData._m0[8u].x) ? _705 : (isnan(_705) ? cbInstanceData._m0[8u].x : max(_705, cbInstanceData._m0[8u].x));
    float _714 = isnan(cbInstanceData._m0[8u].y) ? _706 : (isnan(_706) ? cbInstanceData._m0[8u].y : max(_706, cbInstanceData._m0[8u].y));
    vec4 _718 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _713 : (isnan(_713) ? cbInstanceData._m0[8u].z : min(_713, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _714 : (isnan(_714) ? cbInstanceData._m0[8u].w : min(_714, cbInstanceData._m0[8u].w))));
    float _751 = _541 - cbMtdParam._m0[15u].x;
    float _3474 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _761 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3474 : (isnan(_3474) ? 1.0 : min(_3474, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3490 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _762 = isnan(1.0) ? _3490 : (isnan(_3490) ? 1.0 : min(_3490, 1.0));
    float _764 = _762 - (_762 * _431);
    float _768 = fma(_661, _242, fma(_667, _235, _665 * _221));
    float _771 = fma(_661, _243, fma(_667, _236, _665 * _222));
    float _774 = fma(_661, _244, fma(_667, _237, _665 * _223));
    float _778 = inversesqrt(dot(vec3(_768, _771, _774), vec3(_768, _771, _774)));
    float _779 = _778 * _768;
    float _780 = _778 * _771;
    float _781 = _778 * _774;
    float _3501 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    float _782 = isnan(1.0) ? _3501 : (isnan(_3501) ? 1.0 : min(_3501, 1.0));
    float _3512 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
    float _783 = isnan(1.0) ? _3512 : (isnan(_3512) ? 1.0 : min(_3512, 1.0));
    float _784 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    float _3528 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    float _3539 = isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : max(_584, 0.0));
    float _3550 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0));
    float _801 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _819 = fma(_781, cbSceneParam._m0[5u].z, fma(_780, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _779));
    float _822 = fma(_781, cbSceneParam._m0[6u].z, fma(_780, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _779));
    float _825 = fma(_781, cbSceneParam._m0[7u].z, fma(_780, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _779));
    uint _839 = (_309 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _845 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3528 : (isnan(_3528) ? 1.0 : min(_3528, 1.0)))) * cbInstanceData._m0[_839].x;
    float _846 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3539 : (isnan(_3539) ? 1.0 : min(_3539, 1.0)))) * cbInstanceData._m0[_839].y;
    float _847 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3550 : (isnan(_3550) ? 1.0 : min(_3550, 1.0)))) * cbInstanceData._m0[_839].z;
    float _3561 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _848 = isnan(1.0) ? _3561 : (isnan(_3561) ? 1.0 : min(_3561, 1.0));
    float _3572 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _849 = isnan(1.0) ? _3572 : (isnan(_3572) ? 1.0 : min(_3572, 1.0));
    float _3583 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _850 = isnan(1.0) ? _3583 : (isnan(_3583) ? 1.0 : min(_3583, 1.0));
    vec4 _854 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _694, cbSceneParam._m0[86u].y * _695));
    float _857 = _854.x * TEXCOORD_5.w;
    float _858 = dot(vec3(_779, _780, _781), vec3(_538, _539, _540));
    float _861 = _858 * 2.0;
    float _865 = (_861 * _779) - _538;
    float _866 = (_861 * _780) - _539;
    float _867 = (_861 * _781) - _540;
    float _868 = dot(vec3(_538, _539, _540), vec3(_779, _780, _781));
    float _871 = abs(_868);
    float _3594 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    float _872 = isnan(1.0) ? _3594 : (isnan(_3594) ? 1.0 : min(_3594, 1.0));
    float _878 = sqrt(_783);
    float _890 = exp2((_878 * 5.0) * log2(1.0 - (_872 * 0.999000012874603271484375))) / (4.0 - (_878 * 3.0));
    float _922 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _926 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _930 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1232;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    float _1239;
    float _1240;
    float _1241;
    float _1242;
    float _1243;
    float _1244;
    float _1245;
    float _1246;
    float _1247;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _957 = fma(_930, cbModelParam._m0[26u].z, fma(_926, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _922));
        float _961 = fma(_930, cbModelParam._m0[27u].z, fma(_926, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _922));
        float _965 = fma(_930, cbModelParam._m0[28u].z, fma(_926, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _922));
        float _990 = _922 + _779;
        float _991 = _926 + _780;
        float _992 = _930 + _781;
        float _1002 = fma(_992, cbModelParam._m0[26u].z, fma(_991, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _990)) - _957;
        float _1003 = fma(_992, cbModelParam._m0[27u].z, fma(_991, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _990)) - _961;
        float _1004 = fma(_992, cbModelParam._m0[28u].z, fma(_991, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _990)) - _965;
        float _1008 = inversesqrt(dot(vec3(_1002, _1003, _1004), vec3(_1002, _1003, _1004)));
        float _1021 = ((_1008 * _1002) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_957 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1022 = ((_1008 * _1003) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_961 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1023 = ((_1008 * _1004) / cbModelParam._m0[34u].z) + ((((((_965 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1026 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1021, _1022, _1023), 0.0);
        vec4 _1033 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1021, _1022, _1023), 0.0);
        vec4 _1040 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1021, _1022, _1023), 0.0);
        vec4 _1047 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1021, _1022, _1023), 0.0);
        float _1060 = exp2((_1026.w + (-0.5)) * 20.0) * 2.0;
        float _1061 = _1060 * (_1026.x + (-0.5));
        float _1062 = _1060 * (_1026.y + (-0.5));
        float _1063 = _1060 * (_1026.z + (-0.5));
        float _1070 = exp2((_1033.w + (-0.5)) * 20.0) * 2.0;
        float _1071 = _1070 * (_1033.x + (-0.5));
        float _1072 = _1070 * (_1033.y + (-0.5));
        float _1073 = _1070 * (_1033.z + (-0.5));
        float _1080 = exp2((_1040.w + (-0.5)) * 20.0) * 2.0;
        float _1081 = _1080 * (_1040.x + (-0.5));
        float _1082 = _1080 * (_1040.y + (-0.5));
        float _1083 = _1080 * (_1040.z + (-0.5));
        float _1090 = exp2((_1047.w + (-0.5)) * 20.0) * 2.0;
        float _1091 = _1090 * (_1047.x + (-0.5));
        float _1092 = _1090 * (_1047.y + (-0.5));
        float _1093 = _1090 * (_1047.z + (-0.5));
        float _1094 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1095 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
        float _1096 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
        float _1097 = _1061 * 0.5;
        float _1098 = _1071 * 0.5;
        float _1099 = _1081 * 0.5;
        float _1100 = dot(vec3(_1097, _1098, _1099), vec3(_1097, _1098, _1099));
        float _1105 = (_1100 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1100);
        float _1114 = (dot(vec3(_779, _780, _781), vec3(_1105 * _1097, _1105 * _1098, _1105 * _1099)) + 1.0) * 0.5;
        float _3620 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
        float _1124 = sqrt(((_1098 * _1098) + (_1097 * _1097)) + (_1099 * _1099)) / (_1094 + 9.9999997473787516355514526367188e-06);
        float _3631 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1125 = isnan(1.0) ? _3631 : (isnan(_3631) ? 1.0 : min(_3631, 1.0));
        float _1126 = _1125 * 2.0;
        float _1130 = (1.0 - _1125) / (_1125 + 1.0);
        float _3642 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
        float _1131 = isnan(1.0) ? _3642 : (isnan(_3642) ? 1.0 : min(_3642, 1.0));
        float _1140 = ((((1.0 - _1131) * (_1126 + 2.0)) * exp2(log2(isnan(1.0) ? _3620 : (isnan(_3620) ? 1.0 : min(_3620, 1.0))) * (_1126 + 1.0))) + _1131) * _1094;
        float _1141 = _1062 * 0.5;
        float _1142 = _1072 * 0.5;
        float _1143 = _1082 * 0.5;
        float _1144 = dot(vec3(_1141, _1142, _1143), vec3(_1141, _1142, _1143));
        float _1149 = (_1144 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1144);
        float _1157 = (dot(vec3(_779, _780, _781), vec3(_1149 * _1141, _1149 * _1142, _1149 * _1143)) + 1.0) * 0.5;
        float _3653 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1166 = sqrt(((_1142 * _1142) + (_1141 * _1141)) + (_1143 * _1143)) / (_1095 + 9.9999997473787516355514526367188e-06);
        float _3664 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1167 = isnan(1.0) ? _3664 : (isnan(_3664) ? 1.0 : min(_3664, 1.0));
        float _1168 = _1167 * 2.0;
        float _1172 = (1.0 - _1167) / (_1167 + 1.0);
        float _3675 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1173 = isnan(1.0) ? _3675 : (isnan(_3675) ? 1.0 : min(_3675, 1.0));
        float _1182 = ((((1.0 - _1173) * (_1168 + 2.0)) * exp2(log2(isnan(1.0) ? _3653 : (isnan(_3653) ? 1.0 : min(_3653, 1.0))) * (_1168 + 1.0))) + _1173) * _1095;
        float _1183 = _1063 * 0.5;
        float _1184 = _1073 * 0.5;
        float _1185 = _1083 * 0.5;
        float _1186 = dot(vec3(_1183, _1184, _1185), vec3(_1183, _1184, _1185));
        float _1191 = (_1186 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1186);
        float _1199 = (dot(vec3(_779, _780, _781), vec3(_1191 * _1183, _1191 * _1184, _1191 * _1185)) + 1.0) * 0.5;
        float _3686 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
        float _1208 = sqrt(((_1184 * _1184) + (_1183 * _1183)) + (_1185 * _1185)) / (_1096 + 9.9999997473787516355514526367188e-06);
        float _3697 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1209 = isnan(1.0) ? _3697 : (isnan(_3697) ? 1.0 : min(_3697, 1.0));
        float _1210 = _1209 * 2.0;
        float _1214 = (1.0 - _1209) / (_1209 + 1.0);
        float _3708 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
        float _1215 = isnan(1.0) ? _3708 : (isnan(_3708) ? 1.0 : min(_3708, 1.0));
        float _1224 = ((((1.0 - _1215) * (_1210 + 2.0)) * exp2(log2(isnan(1.0) ? _3686 : (isnan(_3686) ? 1.0 : min(_3686, 1.0))) * (_1210 + 1.0))) + _1215) * _1096;
        _1232 = _1063;
        _1234 = _1062;
        _1235 = _1061;
        _1236 = _1073;
        _1237 = _1072;
        _1238 = _1071;
        _1239 = _1083;
        _1240 = _1082;
        _1241 = _1081;
        _1242 = _1096;
        _1243 = _1095;
        _1244 = _1094;
        _1245 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0)));
        _1246 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0)));
        _1247 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0)));
    }
    else
    {
        _1232 = _1233;
        _1234 = _1233;
        _1235 = _1233;
        _1236 = _1233;
        _1237 = _1233;
        _1238 = _1233;
        _1239 = _1233;
        _1240 = _1233;
        _1241 = _1233;
        _1242 = _1233;
        _1243 = _1233;
        _1244 = _1233;
        _1245 = 0.0;
        _1246 = 0.0;
        _1247 = 0.0;
    }
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    float _1551;
    float _1552;
    float _1553;
    float _1554;
    float _1555;
    float _1556;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1273 = fma(_930, cbModelParam._m0[30u].z, fma(_926, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _922));
        float _1277 = fma(_930, cbModelParam._m0[31u].z, fma(_926, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _922));
        float _1281 = fma(_930, cbModelParam._m0[32u].z, fma(_926, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _922));
        float _1304 = _922 + _779;
        float _1305 = _926 + _780;
        float _1306 = _930 + _781;
        float _1316 = fma(_1306, cbModelParam._m0[30u].z, fma(_1305, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1304)) - _1273;
        float _1317 = fma(_1306, cbModelParam._m0[31u].z, fma(_1305, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1304)) - _1277;
        float _1318 = fma(_1306, cbModelParam._m0[32u].z, fma(_1305, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1304)) - _1281;
        float _1322 = inversesqrt(dot(vec3(_1316, _1317, _1318), vec3(_1316, _1317, _1318)));
        float _1335 = ((_1322 * _1316) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1273 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1336 = ((_1322 * _1317) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1277 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1337 = ((_1322 * _1318) / cbModelParam._m0[35u].z) + ((((((_1281 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1339 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1335, _1336, _1337), 0.0);
        vec4 _1346 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1335, _1336, _1337), 0.0);
        vec4 _1353 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1335, _1336, _1337), 0.0);
        vec4 _1360 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1335, _1336, _1337), 0.0);
        float _1372 = exp2((_1339.w + (-0.5)) * 20.0) * 2.0;
        float _1373 = _1372 * (_1339.x + (-0.5));
        float _1374 = _1372 * (_1339.y + (-0.5));
        float _1375 = _1372 * (_1339.z + (-0.5));
        float _1382 = exp2((_1346.w + (-0.5)) * 20.0) * 2.0;
        float _1383 = _1382 * (_1346.x + (-0.5));
        float _1384 = _1382 * (_1346.y + (-0.5));
        float _1385 = _1382 * (_1346.z + (-0.5));
        float _1392 = exp2((_1353.w + (-0.5)) * 20.0) * 2.0;
        float _1393 = _1392 * (_1353.x + (-0.5));
        float _1394 = _1392 * (_1353.y + (-0.5));
        float _1395 = _1392 * (_1353.z + (-0.5));
        float _1402 = exp2((_1360.w + (-0.5)) * 20.0) * 2.0;
        float _1403 = _1402 * (_1360.x + (-0.5));
        float _1404 = _1402 * (_1360.y + (-0.5));
        float _1405 = _1402 * (_1360.z + (-0.5));
        float _1406 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
        float _1407 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1408 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1409 = _1373 * 0.5;
        float _1410 = _1383 * 0.5;
        float _1411 = _1393 * 0.5;
        float _1412 = dot(vec3(_1409, _1410, _1411), vec3(_1409, _1410, _1411));
        float _1417 = (_1412 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1412);
        float _1425 = (dot(vec3(_779, _780, _781), vec3(_1417 * _1409, _1417 * _1410, _1417 * _1411)) + 1.0) * 0.5;
        float _3749 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1434 = sqrt(((_1410 * _1410) + (_1409 * _1409)) + (_1411 * _1411)) / (_1406 + 9.9999997473787516355514526367188e-06);
        float _3760 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1435 = isnan(1.0) ? _3760 : (isnan(_3760) ? 1.0 : min(_3760, 1.0));
        float _1436 = _1435 * 2.0;
        float _1440 = (1.0 - _1435) / (_1435 + 1.0);
        float _3771 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1441 = isnan(1.0) ? _3771 : (isnan(_3771) ? 1.0 : min(_3771, 1.0));
        float _1450 = ((((1.0 - _1441) * (_1436 + 2.0)) * exp2(log2(isnan(1.0) ? _3749 : (isnan(_3749) ? 1.0 : min(_3749, 1.0))) * (_1436 + 1.0))) + _1441) * _1406;
        float _1451 = _1374 * 0.5;
        float _1452 = _1384 * 0.5;
        float _1453 = _1394 * 0.5;
        float _1454 = dot(vec3(_1451, _1452, _1453), vec3(_1451, _1452, _1453));
        float _1459 = (_1454 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1454);
        float _1467 = (dot(vec3(_779, _780, _781), vec3(_1459 * _1451, _1459 * _1452, _1459 * _1453)) + 1.0) * 0.5;
        float _3782 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1476 = sqrt(((_1452 * _1452) + (_1451 * _1451)) + (_1453 * _1453)) / (_1407 + 9.9999997473787516355514526367188e-06);
        float _3793 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1477 = isnan(1.0) ? _3793 : (isnan(_3793) ? 1.0 : min(_3793, 1.0));
        float _1478 = _1477 * 2.0;
        float _1482 = (1.0 - _1477) / (_1477 + 1.0);
        float _3804 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1483 = isnan(1.0) ? _3804 : (isnan(_3804) ? 1.0 : min(_3804, 1.0));
        float _1492 = ((((1.0 - _1483) * (_1478 + 2.0)) * exp2(log2(isnan(1.0) ? _3782 : (isnan(_3782) ? 1.0 : min(_3782, 1.0))) * (_1478 + 1.0))) + _1483) * _1407;
        float _1493 = _1375 * 0.5;
        float _1494 = _1385 * 0.5;
        float _1495 = _1395 * 0.5;
        float _1496 = dot(vec3(_1493, _1494, _1495), vec3(_1493, _1494, _1495));
        float _1501 = (_1496 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1496);
        float _1509 = (dot(vec3(_779, _780, _781), vec3(_1501 * _1493, _1501 * _1494, _1501 * _1495)) + 1.0) * 0.5;
        float _3815 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
        float _1518 = sqrt(((_1494 * _1494) + (_1493 * _1493)) + (_1495 * _1495)) / (_1408 + 9.9999997473787516355514526367188e-06);
        float _3826 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
        float _1519 = isnan(1.0) ? _3826 : (isnan(_3826) ? 1.0 : min(_3826, 1.0));
        float _1520 = _1519 * 2.0;
        float _1524 = (1.0 - _1519) / (_1519 + 1.0);
        float _3837 = isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0));
        float _1525 = isnan(1.0) ? _3837 : (isnan(_3837) ? 1.0 : min(_3837, 1.0));
        float _1534 = ((((1.0 - _1525) * (_1520 + 2.0)) * exp2(log2(isnan(1.0) ? _3815 : (isnan(_3815) ? 1.0 : min(_3815, 1.0))) * (_1520 + 1.0))) + _1525) * _1408;
        _1542 = _1375;
        _1543 = _1374;
        _1544 = _1373;
        _1545 = _1385;
        _1546 = _1384;
        _1547 = _1383;
        _1548 = _1395;
        _1549 = _1394;
        _1550 = _1393;
        _1551 = _1408;
        _1552 = _1407;
        _1553 = _1406;
        _1554 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0)));
        _1555 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0)));
        _1556 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0)));
    }
    else
    {
        _1542 = _1233;
        _1543 = _1233;
        _1544 = _1233;
        _1545 = _1233;
        _1546 = _1233;
        _1547 = _1233;
        _1548 = _1233;
        _1549 = _1233;
        _1550 = _1233;
        _1551 = _1233;
        _1552 = _1233;
        _1553 = _1233;
        _1554 = 0.0;
        _1555 = 0.0;
        _1556 = 0.0;
    }
    float _1566 = (cbModelParam._m0[1u].x * (_1554 - _1245)) + _1245;
    float _1567 = (cbModelParam._m0[1u].x * (_1555 - _1246)) + _1246;
    float _1568 = (cbModelParam._m0[1u].x * (_1556 - _1247)) + _1247;
    float _1589 = fma(_1568, cbSceneParam._m0[89u].z, fma(_1567, cbSceneParam._m0[89u].y, _1566 * cbSceneParam._m0[89u].x));
    float _1592 = fma(_1568, cbSceneParam._m0[90u].z, fma(_1567, cbSceneParam._m0[90u].y, _1566 * cbSceneParam._m0[90u].x));
    float _1595 = fma(_1568, cbSceneParam._m0[91u].z, fma(_1567, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1566));
    float _1610 = _865 * 0.5;
    float _1611 = _866 * 0.5;
    float _1612 = _867 * 0.5;
    float _1613 = dot(vec4(_1610, _1611, _1612, 1.0), vec4(_1544, _1547, _1550, _1553));
    float _1616 = dot(vec4(_1610, _1611, _1612, 1.0), vec4(_1543, _1546, _1549, _1552));
    float _1619 = dot(vec4(_1610, _1611, _1612, 1.0), vec4(_1542, _1545, _1548, _1551));
    float _1653;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1626 = dot(vec4(_1610, _1611, _1612, 1.0), vec4(_1232, _1236, _1239, _1242));
        float _1630 = dot(vec4(_1610, _1611, _1612, 1.0), vec4(_1234, _1237, _1240, _1243));
        float _1634 = dot(vec4(_1610, _1611, _1612, 1.0), vec4(_1235, _1238, _1241, _1244));
        float _1641 = dot(vec4(cbModelParam._m0[39u]), vec4(_1610, _1611, _1612, 1.0));
        _1653 = dot(vec3(isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0)), isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0)), isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1641) ? 0.0 : (isnan(0.0) ? _1641 : max(0.0, _1641))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1653 = 1.0;
    }
    float _1664;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1655 = dot(vec4(cbModelParam._m0[40u]), vec4(_1610, _1611, _1612, 1.0));
        _1664 = dot(vec3(isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0)), isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0)), isnan(0.0) ? _1619 : (isnan(_1619) ? 0.0 : max(_1619, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1655) ? 0.0 : (isnan(0.0) ? _1655 : max(0.0, _1655))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1664 = 1.0;
    }
    float _1668 = (_1664 * cbModelParam._m0[1u].x) + (_1653 * (1.0 - cbModelParam._m0[1u].x));
    float _1678 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _783);
    float _1679 = isnan(_1678) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1678 : min(cbModelParam._m0[25u].z, _1678));
    float _1759;
    float _1761;
    float _1763;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1726 = fma(_930, cbModelParam._m0[13u].z, fma(_926, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _922)) + cbModelParam._m0[13u].w;
        float _1730 = fma(_930, cbModelParam._m0[14u].z, fma(_926, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _922)) + cbModelParam._m0[14u].w;
        float _1734 = fma(_930, cbModelParam._m0[15u].z, fma(_926, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _922)) + cbModelParam._m0[15u].w;
        float _1737 = fma(_867, cbModelParam._m0[13u].z, fma(_866, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _865));
        float _1740 = fma(_867, cbModelParam._m0[14u].z, fma(_866, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _865));
        float _1743 = fma(_867, cbModelParam._m0[15u].z, fma(_866, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _865));
        float _1771;
        if (_1737 > 0.0)
        {
            _1771 = abs((1.0 - _1726) / _1737);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1737 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1726 + 1.0) / _1737);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1771 = frontier_phi_16_14_ladder;
        }
        float _1942;
        if (_1740 > 0.0)
        {
            _1942 = abs((1.0 - _1730) / _1740);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1740 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1730 + 1.0) / _1740);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1942 = frontier_phi_25_21_ladder;
        }
        float _2206;
        if (_1743 > 0.0)
        {
            _2206 = abs((1.0 - _1734) / _1743);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1743 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1734 + 1.0) / _1743);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2206 = frontier_phi_37_32_ladder;
        }
        float _2208 = isnan(_1942) ? _1771 : (isnan(_1771) ? _1942 : min(_1771, _1942));
        float _2209 = isnan(_2206) ? _2208 : (isnan(_2208) ? _2206 : min(_2208, _2206));
        float _2213 = (_2209 * _1737) + _1726;
        float _2214 = (_2209 * _1740) + _1730;
        float _2215 = (_2209 * _1743) + _1734;
        float _2216 = _2209 * 9.9999997473787516355514526367188e-05;
        float _2218 = (-1.0) - _2216;
        float _2220 = _2216 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2215 > _2220) || ((_2215 < _2218) || ((_2214 > _2220) || ((_2214 < _2218) || ((_2213 < _2218) || (_2213 > _2220))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2369 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2215, cbModelParam._m0[9u].z, fma(_2214, cbModelParam._m0[9u].y, _2213 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2215, cbModelParam._m0[10u].z, fma(_2214, cbModelParam._m0[10u].y, _2213 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2215, cbModelParam._m0[11u].z, fma(_2214, cbModelParam._m0[11u].y, _2213 * cbModelParam._m0[11u].x))), _1679);
            frontier_phi_15_37_ladder = _2369.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2369.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2369.x * cbModelParam._m0[1u].y;
        }
        _1759 = frontier_phi_15_37_ladder_2;
        _1761 = frontier_phi_15_37_ladder_1;
        _1763 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1747 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_865, _866, _867), _1679);
        _1759 = _1747.x * cbModelParam._m0[1u].y;
        _1761 = _1747.y * cbModelParam._m0[1u].y;
        _1763 = _1747.z * cbModelParam._m0[1u].y;
    }
    float _1767 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _783);
    float _1768 = isnan(_1767) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1767 : min(cbModelParam._m0[25u].w, _1767));
    float _1859;
    float _1861;
    float _1863;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1823 = fma(_930, cbModelParam._m0[21u].z, fma(_926, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _922)) + cbModelParam._m0[21u].w;
        float _1827 = fma(_930, cbModelParam._m0[22u].z, fma(_926, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _922)) + cbModelParam._m0[22u].w;
        float _1831 = fma(_930, cbModelParam._m0[23u].z, fma(_926, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _922)) + cbModelParam._m0[23u].w;
        float _1834 = fma(_867, cbModelParam._m0[21u].z, fma(_866, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _865));
        float _1837 = fma(_867, cbModelParam._m0[22u].z, fma(_866, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _865));
        float _1840 = fma(_867, cbModelParam._m0[23u].z, fma(_866, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _865));
        float _1947;
        if (_1834 > 0.0)
        {
            _1947 = abs((1.0 - _1823) / _1834);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1834 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1823 + 1.0) / _1834);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1947 = frontier_phi_27_23_ladder;
        }
        float _2233;
        if (_1837 > 0.0)
        {
            _2233 = abs((1.0 - _1827) / _1837);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1837 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1827 + 1.0) / _1837);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2233 = frontier_phi_39_34_ladder;
        }
        float _2552;
        if (_1840 > 0.0)
        {
            _2552 = abs((1.0 - _1831) / _1840);
        }
        else
        {
            float frontier_phi_48_46_ladder;
            if (_1840 < 0.0)
            {
                frontier_phi_48_46_ladder = abs((_1831 + 1.0) / _1840);
            }
            else
            {
                frontier_phi_48_46_ladder = 5000.0;
            }
            _2552 = frontier_phi_48_46_ladder;
        }
        float _2554 = isnan(_2233) ? _1947 : (isnan(_1947) ? _2233 : min(_1947, _2233));
        float _2555 = isnan(_2552) ? _2554 : (isnan(_2554) ? _2552 : min(_2554, _2552));
        float _2559 = (_2555 * _1834) + _1823;
        float _2560 = (_2555 * _1837) + _1827;
        float _2561 = (_2555 * _1840) + _1831;
        float _2562 = _2555 * 9.9999997473787516355514526367188e-05;
        float _2563 = (-1.0) - _2562;
        float _2565 = _2562 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2561 > _2565) || ((_2561 < _2563) || ((_2560 > _2565) || ((_2560 < _2563) || ((_2559 < _2563) || (_2559 > _2565))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2662 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2561, cbModelParam._m0[17u].z, fma(_2560, cbModelParam._m0[17u].y, _2559 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2561, cbModelParam._m0[18u].z, fma(_2560, cbModelParam._m0[18u].y, _2559 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2561, cbModelParam._m0[19u].z, fma(_2560, cbModelParam._m0[19u].y, _2559 * cbModelParam._m0[19u].x))), _1768);
            frontier_phi_24_48_ladder = _2662.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2662.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2662.x * cbModelParam._m0[1u].z;
        }
        _1859 = frontier_phi_24_48_ladder_2;
        _1861 = frontier_phi_24_48_ladder_1;
        _1863 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1843 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_865, _866, _867), _1768);
        _1859 = _1843.x * cbModelParam._m0[1u].z;
        _1861 = _1843.y * cbModelParam._m0[1u].z;
        _1863 = _1843.z * cbModelParam._m0[1u].z;
    }
    float _1875 = ((((1.0 - _890) * ((_878 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_890 * _878)) * _857;
    float _1876 = _1875 * ((cbModelParam._m0[1u].w * (_1859 - _1759)) + _1759);
    float _1877 = _1875 * ((cbModelParam._m0[1u].w * (_1861 - _1761)) + _1761);
    float _1878 = _1875 * ((cbModelParam._m0[1u].w * (_1863 - _1763)) + _1763);
    float _1881 = fma(_1878, cbSceneParam._m0[89u].z, fma(_1877, cbSceneParam._m0[89u].y, _1876 * cbSceneParam._m0[89u].x));
    float _1884 = fma(_1878, cbSceneParam._m0[90u].z, fma(_1877, cbSceneParam._m0[90u].y, _1876 * cbSceneParam._m0[90u].x));
    float _1887 = fma(_1878, cbSceneParam._m0[91u].z, fma(_1877, cbSceneParam._m0[91u].y, _1876 * cbSceneParam._m0[91u].x));
    float _1921 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1925 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1929 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1933 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1934 = _1921 / _1933;
    float _1935 = _1925 / _1933;
    float _1936 = _1929 / _1933;
    float _2083;
    float _2084;
    float _2085;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1963 = ((uint(_1936 > cbSceneParam._m0[59u].y) + uint(_1936 > cbSceneParam._m0[59u].x)) + uint(_1936 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1964 = _1963 + 43u;
        uint _1972 = _1963 + 44u;
        uint _1980 = _1963 + 45u;
        uint _1988 = _1963 + 46u;
        float _1999 = fma(_1933, cbSceneParam._m0[_1964].w, fma(_1929, cbSceneParam._m0[_1964].z, fma(_1925, cbSceneParam._m0[_1964].y, _1921 * cbSceneParam._m0[_1964].x)));
        float _2003 = fma(_1933, cbSceneParam._m0[_1972].w, fma(_1929, cbSceneParam._m0[_1972].z, fma(_1925, cbSceneParam._m0[_1972].y, _1921 * cbSceneParam._m0[_1972].x)));
        float _2011 = fma(_1933, cbSceneParam._m0[_1988].w, fma(_1929, cbSceneParam._m0[_1988].z, fma(_1925, cbSceneParam._m0[_1988].y, _1921 * cbSceneParam._m0[_1988].x)));
        float _2016 = cbSceneParam._m0[33u].z * _2011;
        float _2018 = cbSceneParam._m0[33u].w * _2011;
        float _2021 = fma(_1933, cbSceneParam._m0[_1980].w, fma(_1929, cbSceneParam._m0[_1980].z, fma(_1925, cbSceneParam._m0[_1980].y, _1921 * cbSceneParam._m0[_1980].x))) / _2011;
        float _2069 = (cbSceneParam._m0[33u].x - sqrt(((_1935 * _1935) + (_1934 * _1934)) + (_1936 * _1936))) * cbSceneParam._m0[33u].y;
        float _3963 = isnan(0.0) ? _2069 : (isnan(_2069) ? 0.0 : max(_2069, 0.0));
        float _2076 = (isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2016 + _1999) / _2011, (_2018 + _2003) / _2011), _2021), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2018 + _1999) / _2011, (_2003 - _2016) / _2011), _2021), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1999 - _2016) / _2011, (_2003 - _2018) / _2011), _2021), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1999 - _2018) / _2011, (_2016 + _2003) / _2011), _2021), 0.0)).x), vec4(0.25)));
        _2083 = 1.0 - (_2076 * cbSceneParam._m0[34u].x);
        _2084 = 1.0 - (_2076 * cbSceneParam._m0[34u].y);
        _2085 = 1.0 - (_2076 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2083 = 1.0;
        _2084 = 1.0;
        _2085 = 1.0;
    }
    float _2149;
    float _2151;
    float _2153;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2137 = fma(_1933, cbSceneParam._m0[63u].w, fma(_1929, cbSceneParam._m0[63u].z, fma(_1925, cbSceneParam._m0[63u].y, _1921 * cbSceneParam._m0[63u].x)));
        float _2138 = fma(_1933, cbSceneParam._m0[60u].w, fma(_1929, cbSceneParam._m0[60u].z, fma(_1925, cbSceneParam._m0[60u].y, _1921 * cbSceneParam._m0[60u].x))) / _2137;
        float _2139 = fma(_1933, cbSceneParam._m0[61u].w, fma(_1929, cbSceneParam._m0[61u].z, fma(_1925, cbSceneParam._m0[61u].y, _1921 * cbSceneParam._m0[61u].x))) / _2137;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2138 >= cbSceneParam._m0[64u].x) && (_2139 >= cbSceneParam._m0[64u].y)) && (_2138 <= cbSceneParam._m0[64u].z)) && (_2139 <= cbSceneParam._m0[64u].w))
        {
            float _2246 = fma(_1933, cbSceneParam._m0[62u].w, fma(_1929, cbSceneParam._m0[62u].z, fma(_1925, cbSceneParam._m0[62u].y, _1921 * cbSceneParam._m0[62u].x))) / _2137;
            float _2250 = isnan(cbSceneParam._m0[41u].w) ? _2246 : (isnan(_2246) ? cbSceneParam._m0[41u].w : max(_2246, cbSceneParam._m0[41u].w));
            float _2293 = (cbSceneParam._m0[33u].x - sqrt(((_1935 * _1935) + (_1934 * _1934)) + (_1936 * _1936))) * cbSceneParam._m0[33u].y;
            float _3979 = isnan(0.0) ? _2293 : (isnan(_2293) ? 0.0 : max(_2293, 0.0));
            float _2300 = (isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2138, cbSceneParam._m0[33u].w + _2139), _2250), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2138, _2139 - cbSceneParam._m0[33u].z), _2250), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2138 - cbSceneParam._m0[33u].z, _2139 - cbSceneParam._m0[33u].w), _2250), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2138 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2139), _2250), 0.0)).x), vec4(0.25)));
            float _2304 = 1.0 - (_2300 * cbSceneParam._m0[34u].x);
            float _2305 = 1.0 - (_2300 * cbSceneParam._m0[34u].y);
            float _2306 = 1.0 - (_2300 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2305) ? _2084 : (isnan(_2084) ? _2305 : min(_2084, _2305));
            frontier_phi_36_35_ladder_1 = isnan(_2304) ? _2083 : (isnan(_2083) ? _2304 : min(_2083, _2304));
            frontier_phi_36_35_ladder_2 = isnan(_2306) ? _2085 : (isnan(_2085) ? _2306 : min(_2085, _2306));
        }
        else
        {
            frontier_phi_36_35_ladder = _2084;
            frontier_phi_36_35_ladder_1 = _2083;
            frontier_phi_36_35_ladder_2 = _2085;
        }
        _2149 = frontier_phi_36_35_ladder_1;
        _2151 = frontier_phi_36_35_ladder;
        _2153 = frontier_phi_36_35_ladder_2;
    }
    else
    {
        _2149 = _2083;
        _2151 = _2084;
        _2153 = _2085;
    }
    uvec4 _2158 = floatBitsToUint(cbInstanceData._m0[_309 + 5u]);
    uint _2160 = _2158.x * 14u;
    uint _2161 = _2160 + 13u;
    float _2166 = _857 + (-1.0);
    float _2169 = (cbLight._m0[_2161].x * _2166) + 1.0;
    float _2170 = (cbLight._m0[_2161].y * _2166) + 1.0;
    uint _2172 = _2160 + 4u;
    float _2183 = dot(vec3(cbLight._m0[_2160].xyz), vec3(_779, _780, _781));
    float _2186 = isnan(1.0) ? _2169 : (isnan(_2169) ? 1.0 : min(_2169, 1.0));
    float _2187 = cbLight._m0[_2172].x * _2149;
    float _2188 = cbLight._m0[_2172].y * _2151;
    float _2189 = cbLight._m0[_2172].z * _2153;
    uint _2190 = _2160 + 5u;
    uint _2196 = _2160 | 1u;
    float _2202 = dot(vec3(cbLight._m0[_2196].xyz), vec3(_779, _780, _781));
    float _2205 = isnan(1.0) ? _2170 : (isnan(_2170) ? 1.0 : min(_2170, 1.0));
    float _2378;
    float _2379;
    float _2380;
    if (_784 == 0.0)
    {
        float _4015 = isnan(0.0) ? _2183 : (isnan(_2183) ? 0.0 : max(_2183, 0.0));
        float _4026 = isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : max(_2202, 0.0));
        float _2315 = (isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0))) * 0.3183098733425140380859375;
        float _2317 = (isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0))) * 0.3183098733425140380859375;
        _2378 = ((cbLight._m0[_2190].x * _2205) * _2317) + ((_2187 * _2186) * _2315);
        _2379 = ((_2205 * cbLight._m0[_2190].y) * _2317) + ((_2188 * _2186) * _2315);
        _2380 = ((_2205 * cbLight._m0[_2190].z) * _2317) + ((_2189 * _2186) * _2315);
    }
    else
    {
        float _2327 = _2183 + _784;
        float _2330 = (_784 * 2.0) + 1.0;
        float _2331 = (isnan(0.0) ? _2327 : (isnan(_2327) ? 0.0 : max(_2327, 0.0))) / _2330;
        float _2338 = _2202 + _784;
        float _2340 = (isnan(0.0) ? _2338 : (isnan(_2338) ? 0.0 : max(_2338, 0.0))) / _2330;
        _2378 = (((_2340 * cbLight._m0[_2190].x) * _2205) + ((_2187 * _2331) * _2186)) * 0.3183098733425140380859375;
        _2379 = (((_2340 * cbLight._m0[_2190].y) * _2205) + ((_2188 * _2331) * _2186)) * 0.3183098733425140380859375;
        _2380 = (((_2340 * cbLight._m0[_2190].z) * _2205) + ((_2189 * _2331) * _2186)) * 0.3183098733425140380859375;
    }
    uint _2384 = _2160 + 8u;
    float _2400 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2160].w)) * _783) * 0.949999988079071044921875);
    float _2401 = _2400 * _2400;
    float _2402 = cbLight._m0[_2160].x + _538;
    float _2403 = cbLight._m0[_2160].y + _539;
    float _2404 = cbLight._m0[_2160].z + _540;
    float _2408 = inversesqrt(dot(vec3(_2402, _2403, _2404), vec3(_2402, _2403, _2404)));
    float _2409 = _2408 * _2402;
    float _2410 = _2408 * _2403;
    float _2411 = _2408 * _2404;
    float _2412 = dot(vec3(_779, _780, _781), vec3(cbLight._m0[_2160].xyz));
    float _4047 = isnan(0.0) ? _2412 : (isnan(_2412) ? 0.0 : max(_2412, 0.0));
    float _2415 = isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0));
    float _4058 = isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0));
    float _2416 = isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0));
    float _2417 = dot(vec3(_779, _780, _781), vec3(_2409, _2410, _2411));
    float _4069 = isnan(0.0) ? _2417 : (isnan(_2417) ? 0.0 : max(_2417, 0.0));
    float _2420 = isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0));
    float _2421 = dot(vec3(cbLight._m0[_2160].xyz), vec3(_2409, _2410, _2411));
    float _4080 = isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : max(_2421, 0.0));
    float _2425 = _2401 * _2401;
    float _2429 = ((_2420 * _2420) * (_2425 + (-1.0))) + 1.0;
    float _2440 = (exp2(log2(1.0 - (isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2441 = 1.0 - _2401;
    float _2452 = (0.5 / (((_2416 * ((_2415 * _2441) + _2401)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2441) + _2401) * _2415))) * _2415;
    float _4091 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
    float _2454 = (isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0))) * (_2425 / ((_2429 * _2429) * 3.141590118408203125));
    uint _2470 = _2160 + 9u;
    float _2484 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2196].w)) * _783) * 0.949999988079071044921875);
    float _2485 = _2484 * _2484;
    float _2486 = cbLight._m0[_2196].x + _538;
    float _2487 = cbLight._m0[_2196].y + _539;
    float _2488 = cbLight._m0[_2196].z + _540;
    float _2492 = inversesqrt(dot(vec3(_2486, _2487, _2488), vec3(_2486, _2487, _2488)));
    float _2493 = _2492 * _2486;
    float _2494 = _2492 * _2487;
    float _2495 = _2492 * _2488;
    float _2496 = dot(vec3(_779, _780, _781), vec3(cbLight._m0[_2196].xyz));
    float _4102 = isnan(0.0) ? _2496 : (isnan(_2496) ? 0.0 : max(_2496, 0.0));
    float _2499 = isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0));
    float _2500 = dot(vec3(_779, _780, _781), vec3(_2493, _2494, _2495));
    float _4113 = isnan(0.0) ? _2500 : (isnan(_2500) ? 0.0 : max(_2500, 0.0));
    float _2503 = isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0));
    float _2504 = dot(vec3(cbLight._m0[_2196].xyz), vec3(_2493, _2494, _2495));
    float _4124 = isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0));
    float _2508 = _2485 * _2485;
    float _2512 = ((_2503 * _2503) * (_2508 + (-1.0))) + 1.0;
    float _2521 = (exp2(log2(1.0 - (isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2522 = 1.0 - _2485;
    float _2532 = (0.5 / (((_2416 * ((_2499 * _2522) + _2485)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2522) + _2485) * _2499))) * _2499;
    float _4135 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0));
    float _2534 = (isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0))) * (_2508 / ((_2512 * _2512) * 3.141590118408203125));
    float _2544 = (((_2521 * cbLight._m0[_2470].x) * _2534) * _2205) + ((((cbLight._m0[_2384].x * _2149) * _2440) * _2454) * _2186);
    float _2545 = (((_2521 * cbLight._m0[_2470].y) * _2534) * _2205) + ((((cbLight._m0[_2384].y * _2151) * _2440) * _2454) * _2186);
    float _2546 = (((_2521 * cbLight._m0[_2470].z) * _2534) * _2205) + ((((cbLight._m0[_2384].z * _2153) * _2440) * _2454) * _2186);
    float _2633;
    float _2635;
    float _2637;
    float _2639;
    float _2641;
    float _2643;
    if (_2158.y == 0u)
    {
        uvec4 _2589 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2590 = _2589.x;
        uint _2601 = uint((float(_2589.y) * floor(float(uint(cbSceneParam._m0[85u].y * _695) / _2590))) + floor(float(uint(cbSceneParam._m0[85u].x * _694) / _2590)));
        float _2611 = (log2(_1936 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2612 = isnan(0.0) ? _2611 : (isnan(_2611) ? 0.0 : max(_2611, 0.0));
        uint _2615 = uint(isnan(14.0) ? _2612 : (isnan(_2612) ? 14.0 : min(_2612, 14.0)));
        uint _2622 = _2589.z;
        float _2667;
        float _2669;
        float _2671;
        float _2673;
        float _2675;
        float _2677;
        if (((((1u << ((_2622 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2615 << 2u) + (_2601 << 6u)) >> 2u)).x) == 0u) || ((_2622 & 240u) == 0u))
        {
            _2667 = 0.0;
            _2669 = 0.0;
            _2671 = 0.0;
            _2673 = 0.0;
            _2675 = 0.0;
            _2677 = 0.0;
        }
        else
        {
            float _2668;
            float _2670;
            float _2672;
            float _2674;
            float _2676;
            float _2678;
            float _2833 = 0.0;
            float _2834 = 0.0;
            float _2835 = 0.0;
            float _2836 = 0.0;
            float _2837 = 0.0;
            float _2838 = 0.0;
            uint _2839 = 0u;
            uint _2848;
            bool _2849;
            for (;;)
            {
                _2848 = texelFetch(g_lightClassification, int((((_2615 << 5u) + (_2601 << 9u)) + (_2839 << 2u)) >> 2u)).x;
                _2849 = _2848 == 0u;
                float frontier_phi_60_pred;
                float frontier_phi_60_pred_1;
                float frontier_phi_60_pred_2;
                float frontier_phi_60_pred_3;
                float frontier_phi_60_pred_4;
                float frontier_phi_60_pred_5;
                if (_2849)
                {
                    frontier_phi_60_pred = _2838;
                    frontier_phi_60_pred_1 = _2836;
                    frontier_phi_60_pred_2 = _2835;
                    frontier_phi_60_pred_3 = _2834;
                    frontier_phi_60_pred_4 = _2833;
                    frontier_phi_60_pred_5 = _2837;
                }
                else
                {
                    float _3025;
                    float _3026;
                    float _3027;
                    float _3028;
                    float _3029;
                    float _3030;
                    uint _3031;
                    _3025 = _2833;
                    _3026 = _2834;
                    _3027 = _2835;
                    _3028 = _2836;
                    _3029 = _2837;
                    _3030 = _2838;
                    _3031 = _2848;
                    float _2973;
                    float _2974;
                    float _2975;
                    float _2976;
                    float _2977;
                    float _2978;
                    for (;;)
                    {
                        uint _3035 = uint(findLSB(_3031)) + (_2839 << 5u);
                        uint _3032 = (_3031 + 4294967295u) & _3031;
                        uint _3037 = _3035 * 48u;
                        vec4 _3051 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3037)).x, texelFetch(g_PointLightRenderingBuffer, int(_3037 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3037 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3037 + 3u)).x));
                        uint _3057 = (_3035 * 48u) + 4u;
                        vec4 _3070 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3057)).x, texelFetch(g_PointLightRenderingBuffer, int(_3057 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3057 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3057 + 3u)).x));
                        float _3071 = _3070.x;
                        float _3072 = _3070.y;
                        float _3073 = _3070.z;
                        uint _3076 = (_3035 * 48u) + 8u;
                        vec3 _3087 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3076)).x, texelFetch(g_PointLightRenderingBuffer, int(_3076 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3076 + 2u)).x));
                        uint _3092 = (_3035 * 48u) + 12u;
                        vec2 _3100 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_3092)).x, texelFetch(g_PointLightRenderingBuffer, int(_3092 + 1u)).x));
                        float _3106 = inversesqrt(dot(vec3(_1934, _1935, _1936), vec3(_1934, _1935, _1936)));
                        float _3107 = _3106 * _1934;
                        float _3108 = _3106 * _1935;
                        float _3109 = _3106 * _1936;
                        float _3110 = _3051.x - _1934;
                        float _3111 = _3051.y - _1935;
                        float _3112 = _3051.z - _1936;
                        float _3113 = dot(vec3(_3110, _3111, _3112), vec3(_3110, _3111, _3112));
                        float _3116 = inversesqrt(_3113);
                        float _3117 = _3116 * _3110;
                        float _3118 = _3116 * _3111;
                        float _3119 = _3116 * _3112;
                        float _3120 = dot(vec3(_819, _822, _825), vec3(_3117, _3118, _3119));
                        float _3125 = 1.0 - (_3113 * _3051.w);
                        float _4156 = isnan(0.0) ? _3125 : (isnan(_3125) ? 0.0 : max(_3125, 0.0));
                        float _3126 = isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0));
                        float _3127 = sqrt(_3113) * _3070.w;
                        float _3130 = 1.39999997615814208984375 / (_3127 + 1.39999997615814208984375);
                        float _3131 = _3130 * _3130;
                        float _3132 = 1.0 - _3131;
                        float _3134 = (_3132 * _3132) * _784;
                        float _3137 = ((_3132 * _3120) + _3131) + _3134;
                        float _3142 = _3127 * _3127;
                        float _3147 = ((isnan(0.0) ? _3137 : (isnan(_3137) ? 0.0 : max(_3137, 0.0))) * _3126) / (((_3134 * 2.0) + 1.0) * ((_3142 * 0.699999988079071044921875) + 1.0));
                        float _3151 = dot(vec3(_3117, _3118, _3119), vec3(_3107, _3108, _3109));
                        float _4172 = isnan(0.0) ? _3151 : (isnan(_3151) ? 0.0 : max(_3151, 0.0));
                        float _3158 = dot(vec3((-0.0) - _3107, (-0.0) - _3108, (-0.0) - _3109), vec3(_819, _822, _825)) + 1.0;
                        float _3160 = (isnan(0.0) ? _3158 : (isnan(_3158) ? 0.0 : max(_3158, 0.0))) * 0.5;
                        float _3167 = ((_3160 * _3160) * _3100.x) * exp2((_3100.y * 32.0) * log2(isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0))));
                        float _3169 = _784 / (_784 + 1.0);
                        float _3185 = (-0.0) - _1934;
                        float _3186 = (-0.0) - _1935;
                        float _3187 = (-0.0) - _1936;
                        float _3191 = inversesqrt(dot(vec3(_3185, _3186, _3187), vec3(_3185, _3186, _3187)));
                        float _3192 = _3191 * _3185;
                        float _3193 = _3191 * _3186;
                        float _3194 = _3191 * _3187;
                        float _3201 = exp2(log2(1.0 / ((_3142 * 3.5) + 5.0)) * 0.25);
                        float _3202 = 1.0 - _878;
                        float _3209 = sqrt(1.0 - ((1.0 - (_3202 * _3202)) * (1.0 - (_3201 * _3201))));
                        float _3210 = _3209 * _3209;
                        float _3211 = _3210 * _3210;
                        float _3212 = _3192 + _3117;
                        float _3213 = _3193 + _3118;
                        float _3214 = _3194 + _3119;
                        float _3218 = inversesqrt(dot(vec3(_3212, _3213, _3214), vec3(_3212, _3213, _3214)));
                        float _3222 = dot(vec3(_819, _822, _825), vec3(_3192, _3193, _3194));
                        float _4188 = isnan(0.0) ? _3222 : (isnan(_3222) ? 0.0 : max(_3222, 0.0));
                        float _3225 = isnan(1.0) ? _4188 : (isnan(_4188) ? 1.0 : min(_4188, 1.0));
                        float _3226 = dot(vec3(_819, _822, _825), vec3(_3218 * _3212, _3218 * _3213, _3218 * _3214));
                        float _4199 = isnan(0.0) ? _3226 : (isnan(_3226) ? 0.0 : max(_3226, 0.0));
                        float _3229 = isnan(1.0) ? _4199 : (isnan(_4199) ? 1.0 : min(_4199, 1.0));
                        float _3233 = ((_3229 * _3229) * (_3211 + (-1.0))) + 1.0;
                        float _3234 = _3130 * _3210;
                        float _3235 = _3234 * _3234;
                        float _3238 = ((1.0 - _3235) * _3120) + _3235;
                        float _4210 = isnan(0.0) ? _3238 : (isnan(_3238) ? 0.0 : max(_3238, 0.0));
                        float _3239 = isnan(1.0) ? _4210 : (isnan(_4210) ? 1.0 : min(_4210, 1.0));
                        float _3240 = 1.0 - _3210;
                        float _3250 = (0.5 / (((_3239 * ((_3225 * _3240) + _3210)) + 9.9999999392252902907785028219223e-09) + (((_3239 * _3240) + _3210) * _3225))) * _3239;
                        float _4221 = isnan(0.0) ? _3250 : (isnan(_3250) ? 0.0 : max(_3250, 0.0));
                        float _3261 = (((_3211 * 3.1415927410125732421875) * (isnan(1.0) ? _4221 : (isnan(_4221) ? 1.0 : min(_4221, 1.0)))) / ((_3233 * _3233) * ((_3142 * 2.1991131305694580078125) + 3.141590118408203125))) * _3126;
                        _2976 = (((((_3071 * 0.3183098733425140380859375) * _3169) * _3167) + _3071) * _3147) + _3028;
                        _2977 = (((((_3072 * 0.3183098733425140380859375) * _3169) * _3167) + _3072) * _3147) + _3029;
                        _2978 = (((((_3073 * 0.3183098733425140380859375) * _3169) * _3167) + _3073) * _3147) + _3030;
                        _2973 = (_3261 * _3087.x) + _3025;
                        _2974 = (_3261 * _3087.y) + _3026;
                        _2975 = (_3261 * _3087.z) + _3027;
                        if (_3032 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3025 = _2973;
                            _3026 = _2974;
                            _3027 = _2975;
                            _3028 = _2976;
                            _3029 = _2977;
                            _3030 = _2978;
                            _3031 = _3032;
                        }
                    }
                    frontier_phi_60_pred = _2978;
                    frontier_phi_60_pred_1 = _2976;
                    frontier_phi_60_pred_2 = _2975;
                    frontier_phi_60_pred_3 = _2974;
                    frontier_phi_60_pred_4 = _2973;
                    frontier_phi_60_pred_5 = _2977;
                }
                _2678 = frontier_phi_60_pred;
                _2674 = frontier_phi_60_pred_1;
                _2672 = frontier_phi_60_pred_2;
                _2670 = frontier_phi_60_pred_3;
                _2668 = frontier_phi_60_pred_4;
                _2676 = frontier_phi_60_pred_5;
                uint _2840 = _2839 + 1u;
                if (_2840 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2833 = _2668;
                    _2834 = _2670;
                    _2835 = _2672;
                    _2836 = _2674;
                    _2837 = _2676;
                    _2838 = _2678;
                    _2839 = _2840;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2667 = _2668;
            _2669 = _2670;
            _2671 = _2672;
            _2673 = _2674;
            _2675 = _2676;
            _2677 = _2678;
        }
        float _2682 = isnan(1.0) ? _857 : (isnan(_857) ? 1.0 : min(_857, 1.0));
        _2633 = (_2682 * _2673) + _2378;
        _2635 = (_2682 * _2675) + _2379;
        _2637 = (_2682 * _2677) + _2380;
        _2639 = ((_2667 * 0.039999999105930328369140625) * _2682) + _2544;
        _2641 = ((_2669 * 0.039999999105930328369140625) * _2682) + _2545;
        _2643 = ((_2671 * 0.039999999105930328369140625) * _2682) + _2546;
    }
    else
    {
        _2633 = _2378;
        _2635 = _2379;
        _2637 = _2380;
        _2639 = _2544;
        _2641 = _2545;
        _2643 = _2546;
    }
    float _2756;
    float _2757;
    float _2758;
    if (_784 > 0.0)
    {
        uint _2689 = _2160 + 4u;
        float _2695 = (-0.0) - _538;
        float _2696 = (-0.0) - _539;
        float _2697 = (-0.0) - _540;
        float _2698 = dot(vec3(cbLight._m0[_2160].xyz), vec3(_2695, _2696, _2697));
        float _4237 = isnan(0.0) ? _2698 : (isnan(_2698) ? 0.0 : max(_2698, 0.0));
        float _2702 = _868 + 1.0;
        float _2704 = (isnan(0.0) ? _2702 : (isnan(_2702) ? 0.0 : max(_2702, 0.0))) * 0.5;
        float _2709 = _2704 * _2704;
        float _2710 = _2709 * exp2(log2(isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0))) * 32.0);
        float _2712 = _784 / (_784 + 1.0);
        float _2713 = isnan(_2169) ? 1.0 : (isnan(1.0) ? _2169 : min(1.0, _2169));
        uint _2726 = _2160 + 5u;
        float _2732 = dot(vec3(cbLight._m0[_2196].xyz), vec3(_2695, _2696, _2697));
        float _4258 = isnan(0.0) ? _2732 : (isnan(_2732) ? 0.0 : max(_2732, 0.0));
        float _2739 = _2709 * exp2(log2(isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0))) * 32.0);
        float _2740 = isnan(_2170) ? 1.0 : (isnan(1.0) ? _2170 : min(1.0, _2170));
        _2756 = ((((_2739 * cbLight._m0[_2726].x) * _2712) * _2740) + ((((cbLight._m0[_2689].x * _2149) * _2710) * _2712) * _2713)) * 0.3183098733425140380859375;
        _2757 = ((((_2739 * cbLight._m0[_2726].y) * _2712) * _2740) + ((((cbLight._m0[_2689].y * _2151) * _2710) * _2712) * _2713)) * 0.3183098733425140380859375;
        _2758 = ((((_2739 * cbLight._m0[_2726].z) * _2712) * _2740) + ((((cbLight._m0[_2689].z * _2153) * _2710) * _2712) * _2713)) * 0.3183098733425140380859375;
    }
    else
    {
        _2756 = 0.0;
        _2757 = 0.0;
        _2758 = 0.0;
    }
    float _4274 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _4285 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    float _4296 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    float _4307 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
    float _2773 = (isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0))) * ((_2633 + ((isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0))) * _857)) + _2756);
    float _2774 = (isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0))) * ((_2635 + ((isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0))) * _857)) + _2757);
    float _2775 = (isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0))) * ((_2637 + ((isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0))) * _857)) + _2758);
    float _2779 = 0.959999978542327880859375 - (exp2(log2(1.0 - _872) * 5.0) * 0.959999978542327880859375);
    float _2804 = _694 / cbSceneParam._m0[86u].x;
    float _2805 = _695 / cbSceneParam._m0[86u].y;
    vec4 _2819 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2804, _2805, (log2((isnan(cbSceneParam._m0[77u].w) ? _801 : (isnan(_801) ? cbSceneParam._m0[77u].w : min(_801, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2821 = _2819.x;
    float _2822 = _2819.y;
    float _2823 = _2819.z;
    float _2824 = _2819.w;
    float _2891;
    float _2893;
    float _2895;
    float _2897;
    if (_801 > cbSceneParam._m0[78u].w)
    {
        float _2854 = isnan(_801) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _801 : min(cbSceneParam._m0[80u].w, _801));
        float _2855 = _2854 / _801;
        float _2866 = _2855 * _301;
        float _2867 = _302 * _2855;
        float _2868 = (-0.0) - _2867;
        float _2869 = _2855 * _303;
        float _2871 = (cbSceneParam._m0[77u].w * _2868) / _2854;
        float _2872 = _2871 + cbSceneParam._m0[79u].w;
        float _2873 = cbSceneParam._m0[79u].w - _2867;
        float _2879 = sqrt(((_2866 * _2866) + (_2867 * _2867)) + (_2869 * _2869));
        float _2882 = (1.0 - (cbSceneParam._m0[77u].w / _2854)) * _2879;
        float _2887 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2889 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3266;
        if (abs((_2868 - _2871) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3266 = ((((_2872 > 0.0) ? exp2(_2887 * _2872) : (2.0 - exp2(_2889 * _2872))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2882;
        }
        else
        {
            float _2998 = 1.0 / cbSceneParam._m0[80u].x;
            float _2999 = isnan(_2873) ? _2872 : (isnan(_2872) ? _2873 : max(_2872, _2873));
            float _3000 = isnan(_2873) ? _2872 : (isnan(_2872) ? _2873 : min(_2872, _2873));
            float _3009 = isnan(0.0) ? _2999 : (isnan(_2999) ? 0.0 : min(_2999, 0.0));
            float _3010 = isnan(0.0) ? _3000 : (isnan(_3000) ? 0.0 : min(_3000, 0.0));
            _3266 = ((abs(_2879 / _2868) * cbSceneParam._m0[80u].y) * ((((_3009 - _3010) * 2.0) - ((exp2(_2887 * (isnan(0.0) ? _2999 : (isnan(_2999) ? 0.0 : max(_2999, 0.0)))) - exp2(_2887 * (isnan(0.0) ? _3000 : (isnan(_3000) ? 0.0 : max(_3000, 0.0))))) * _2998)) - ((exp2(_2889 * _3009) - exp2(_2889 * _3010)) * _2998))) + (_2882 * cbSceneParam._m0[80u].z);
        }
        vec4 _3268 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2804, _2805, 1.0), 0.0);
        float _3277 = exp2((_3266 * (-1.44269502162933349609375)) * (1.0 - _3268.w));
        float _3278 = log2(_3277);
        float _3294 = log2(_2824);
        _2891 = (exp2(_3294 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3278 * cbSceneParam._m0[78u].x)) * _3268.x) / cbSceneParam._m0[78u].x)) + _2821;
        _2893 = (exp2(_3294 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3278 * cbSceneParam._m0[78u].y)) * _3268.y) / cbSceneParam._m0[78u].y)) + _2822;
        _2895 = (exp2(_3294 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3278 * cbSceneParam._m0[78u].z)) * _3268.z) / cbSceneParam._m0[78u].z)) + _2823;
        _2897 = _3277 * _2824;
    }
    else
    {
        _2891 = _2821;
        _2893 = _2822;
        _2895 = _2823;
        _2897 = _2824;
    }
    bool _2909 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2910 = log2(_2897);
    float _2917 = exp2(_2910 * cbSceneParam._m0[78u].x) * ((_2773 + ((_2639 + ((isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0))) * _1668)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _718.x) * _2779) - _2773) * _764));
    float _2918 = exp2(_2910 * cbSceneParam._m0[78u].y) * ((_2774 + ((_2641 + ((isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0))) * _1668)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _718.y) * _2779) - _2774) * _764));
    float _2919 = exp2(_2910 * cbSceneParam._m0[78u].z) * ((_2775 + ((_2643 + ((isnan(0.0) ? _1887 : (isnan(_1887) ? 0.0 : max(_1887, 0.0))) * _1668)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _718.z) * _2779) - _2775) * _764));
    vec4 _2927 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_694, _695));
    float _2929 = _2927.x;
    float _2950 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2929)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2929))) - _801) * cbMtdParam._m0[17u].y;
    float _4358 = isnan(0.0) ? _2950 : (isnan(_2950) ? 0.0 : max(_2950, 0.0));
    float _2952 = (cbInstanceData._m0[_309 + 6u].w * (isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0)))) * (isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0)));
    float _2961 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2961 * (_2909 ? _2917 : (_2917 + (cbSceneParam._m0[72u].w * _2891)));
    SV_Target.y = _2961 * (_2909 ? _2918 : (_2918 + (cbSceneParam._m0[72u].w * _2893)));
    SV_Target.z = _2961 * (_2909 ? _2919 : (_2919 + (cbSceneParam._m0[72u].w * _2895)));
    SV_Target.w = _2952;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2952;
}


