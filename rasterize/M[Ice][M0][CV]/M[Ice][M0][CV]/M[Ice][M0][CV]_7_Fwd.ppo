#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1170;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _200 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _201 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _202 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _208 = inversesqrt(dot(vec3(_200, _201, _202), vec3(_200, _201, _202)));
    float _209 = _208 * _200;
    float _210 = _208 * _201;
    float _211 = _208 * _202;
    float _215 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _216 = _215 * NORMAL.x;
    float _217 = _215 * NORMAL.y;
    float _218 = _215 * NORMAL.z;
    float _222 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _223 = _222 * TANGENT.x;
    float _224 = _222 * TANGENT.y;
    float _225 = _222 * TANGENT.z;
    float _230;
    float _231;
    float _232;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _230 = (-0.0) - _216;
        _231 = (-0.0) - _217;
        _232 = (-0.0) - _218;
    }
    else
    {
        _230 = _216;
        _231 = _217;
        _232 = _218;
    }
    float _279 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _289 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _279);
    float _290 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _279);
    float _291 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _279);
    uint _297 = uint(roundEven(NORMAL.w)) * 13u;
    uint _302 = _297 + 1u;
    uint _306 = _297 + 2u;
    float _315 = sqrt(((cbInstanceData._m0[_302].x * cbInstanceData._m0[_302].x) + (cbInstanceData._m0[_297].x * cbInstanceData._m0[_297].x)) + (cbInstanceData._m0[_306].x * cbInstanceData._m0[_306].x));
    float _316 = _315 * TEXCOORD.z;
    float _317 = _315 * TEXCOORD.w;
    vec4 _337 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _346 = (_337.x * 2.0) + (-1.0);
    float _348 = (_337.y * 2.0) + (-1.0);
    float _349 = dot(vec2(_346, _348), vec2(_346, _348));
    float _3056 = isnan(0.0) ? _349 : (isnan(_349) ? 0.0 : max(_349, 0.0));
    float _355 = sqrt(1.0 - (isnan(1.0) ? _3056 : (isnan(_3056) ? 1.0 : min(_3056, 1.0))));
    float _358 = fma(_355, _230, fma(_348, _223, _346 * _209));
    float _361 = fma(_355, _231, fma(_348, _224, _346 * _210));
    float _364 = fma(_355, _232, fma(_348, _225, _346 * _211));
    float _368 = inversesqrt(dot(vec3(_358, _361, _364), vec3(_358, _361, _364)));
    float _369 = _368 * _358;
    float _370 = _368 * _361;
    float _399 = (cbMtdParam._m0[17u].w + dot(vec4(_369, _370, _368 * _364, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _316) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _317) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3067 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
    float _400 = isnan(1.0) ? _3067 : (isnan(_3067) ? 1.0 : min(_3067, 1.0));
    vec4 _412 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _417 = _412.w;
    float _429 = dot(vec3(_289, _290, _291), vec3(_209, _210, _211));
    float _432 = dot(vec3(_289, _290, _291), vec3(_223, _224, _225));
    float _435 = dot(vec3(_289, _290, _291), vec3(_230, _231, _232));
    float _441 = inversesqrt(dot(vec3(_429, _432, _435), vec3(_429, _432, _435)));
    float _463 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _483 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_429 * cbMtdParam._m0[14u].x) * _441) * _463) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_432 * cbMtdParam._m0[14u].x) * _441) * _463) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _506 = inversesqrt(dot(vec3(_289, _290, _291), vec3(_289, _290, _291)));
    float _507 = _506 * _289;
    float _508 = _506 * _290;
    float _509 = _506 * _291;
    float _510 = dot(vec4(_507, _508, _509, 0.0), vec4(_230, _231, _232, 0.0));
    float _513 = _510 - cbMtdParam._m0[15u].z;
    float _3078 = isnan(0.0) ? _513 : (isnan(_513) ? 0.0 : max(_513, 0.0));
    float _520 = exp2(log2(1.0 - (isnan(1.0) ? _3078 : (isnan(_3078) ? 1.0 : min(_3078, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _535 = ((((_412.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _483.x) * cbMtdParam._m0[9u].x) * ((_520 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _540 = ((((_412.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _483.y) * cbMtdParam._m0[9u].y) * ((_520 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _545 = ((((_412.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _483.z) * cbMtdParam._m0[9u].z) * ((_520 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _552 = ((cbMtdParam._m0[11u].x - _535) * _400) + _535;
    float _553 = ((cbMtdParam._m0[11u].y - _540) * _400) + _540;
    float _554 = ((cbMtdParam._m0[11u].z - _545) * _400) + _545;
    vec4 _566 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _316) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _317) + cbTextureTilingScale._m0[9u].w));
    float _573 = (_566.x * 2.0) + (-1.0);
    float _574 = (_566.y * 2.0) + (-1.0);
    float _575 = dot(vec2(_573, _574), vec2(_573, _574));
    float _3094 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _587 = (cbMtdParam._m0[16u].y + _337.z) + cbMtdParam._m0[17u].z;
    float _590 = ((_566.z - _587) * _400) + _587;
    float _600 = ((sqrt(1.0 - (isnan(1.0) ? _3094 : (isnan(_3094) ? 1.0 : min(_3094, 1.0)))) - _355) * _400) + _355;
    float _603 = (((_573 - _346) * _400) + _346) + (cbMtdParam._m0[14u].z * _346);
    float _604 = (((_574 - _348) * _400) + _348) + (cbMtdParam._m0[14u].z * _348);
    vec4 _616 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _620 = cbMtdParam._m0[16u].w * _616.x;
    float _622 = _620 - (_620 * _400);
    float _631 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _632 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _642 = cbSceneParam._m0[86u].x * ((_631 / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _369));
    float _643 = cbSceneParam._m0[86u].y * ((_632 / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _370));
    float _650 = isnan(cbInstanceData._m0[8u].x) ? _642 : (isnan(_642) ? cbInstanceData._m0[8u].x : max(_642, cbInstanceData._m0[8u].x));
    float _651 = isnan(cbInstanceData._m0[8u].y) ? _643 : (isnan(_643) ? cbInstanceData._m0[8u].y : max(_643, cbInstanceData._m0[8u].y));
    vec4 _655 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _650 : (isnan(_650) ? cbInstanceData._m0[8u].z : min(_650, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _651 : (isnan(_651) ? cbInstanceData._m0[8u].w : min(_651, cbInstanceData._m0[8u].w))));
    float _688 = _510 - cbMtdParam._m0[15u].x;
    float _3125 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _698 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3125 : (isnan(_3125) ? 1.0 : min(_3125, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3141 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    float _699 = isnan(1.0) ? _3141 : (isnan(_3141) ? 1.0 : min(_3141, 1.0));
    float _701 = _699 - (_699 * _400);
    float _705 = fma(_600, _230, fma(_604, _223, _603 * _209));
    float _708 = fma(_600, _231, fma(_604, _224, _603 * _210));
    float _711 = fma(_600, _232, fma(_604, _225, _603 * _211));
    float _715 = inversesqrt(dot(vec3(_705, _708, _711), vec3(_705, _708, _711)));
    float _716 = _715 * _705;
    float _717 = _715 * _708;
    float _718 = _715 * _711;
    float _3152 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _719 = isnan(1.0) ? _3152 : (isnan(_3152) ? 1.0 : min(_3152, 1.0));
    float _3163 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _720 = isnan(1.0) ? _3163 : (isnan(_3163) ? 1.0 : min(_3163, 1.0));
    float _721 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _3179 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _3190 = isnan(0.0) ? _553 : (isnan(_553) ? 0.0 : max(_553, 0.0));
    float _3201 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0));
    float _738 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _756 = fma(_718, cbSceneParam._m0[5u].z, fma(_717, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _716));
    float _759 = fma(_718, cbSceneParam._m0[6u].z, fma(_717, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _716));
    float _762 = fma(_718, cbSceneParam._m0[7u].z, fma(_717, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _716));
    uint _776 = (_297 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _782 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3179 : (isnan(_3179) ? 1.0 : min(_3179, 1.0)))) * cbInstanceData._m0[_776].x;
    float _783 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3190 : (isnan(_3190) ? 1.0 : min(_3190, 1.0)))) * cbInstanceData._m0[_776].y;
    float _784 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3201 : (isnan(_3201) ? 1.0 : min(_3201, 1.0)))) * cbInstanceData._m0[_776].z;
    float _3212 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
    float _785 = isnan(1.0) ? _3212 : (isnan(_3212) ? 1.0 : min(_3212, 1.0));
    float _3223 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
    float _786 = isnan(1.0) ? _3223 : (isnan(_3223) ? 1.0 : min(_3223, 1.0));
    float _3234 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    float _787 = isnan(1.0) ? _3234 : (isnan(_3234) ? 1.0 : min(_3234, 1.0));
    vec4 _791 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _631, cbSceneParam._m0[86u].y * _632));
    float _794 = _791.x * TEXCOORD_5.w;
    float _795 = dot(vec3(_716, _717, _718), vec3(_507, _508, _509));
    float _798 = _795 * 2.0;
    float _802 = (_798 * _716) - _507;
    float _803 = (_798 * _717) - _508;
    float _804 = (_798 * _718) - _509;
    float _805 = dot(vec3(_507, _508, _509), vec3(_716, _717, _718));
    float _808 = abs(_805);
    float _3245 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _809 = isnan(1.0) ? _3245 : (isnan(_3245) ? 1.0 : min(_3245, 1.0));
    float _815 = sqrt(_720);
    float _827 = exp2((_815 * 5.0) * log2(1.0 - (_809 * 0.999000012874603271484375))) / (4.0 - (_815 * 3.0));
    float _859 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _863 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _867 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1169;
    float _1171;
    float _1172;
    float _1173;
    float _1174;
    float _1175;
    float _1176;
    float _1177;
    float _1178;
    float _1179;
    float _1180;
    float _1181;
    float _1182;
    float _1183;
    float _1184;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _894 = fma(_867, cbModelParam._m0[26u].z, fma(_863, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _859));
        float _898 = fma(_867, cbModelParam._m0[27u].z, fma(_863, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _859));
        float _902 = fma(_867, cbModelParam._m0[28u].z, fma(_863, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _859));
        float _927 = _859 + _716;
        float _928 = _863 + _717;
        float _929 = _867 + _718;
        float _939 = fma(_929, cbModelParam._m0[26u].z, fma(_928, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _927)) - _894;
        float _940 = fma(_929, cbModelParam._m0[27u].z, fma(_928, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _927)) - _898;
        float _941 = fma(_929, cbModelParam._m0[28u].z, fma(_928, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _927)) - _902;
        float _945 = inversesqrt(dot(vec3(_939, _940, _941), vec3(_939, _940, _941)));
        float _958 = ((_945 * _939) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_894 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _959 = ((_945 * _940) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_898 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _960 = ((_945 * _941) / cbModelParam._m0[34u].z) + ((((((_902 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _963 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_958, _959, _960), 0.0);
        vec4 _970 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_958, _959, _960), 0.0);
        vec4 _977 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_958, _959, _960), 0.0);
        vec4 _984 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_958, _959, _960), 0.0);
        float _997 = exp2((_963.w + (-0.5)) * 20.0) * 2.0;
        float _998 = _997 * (_963.x + (-0.5));
        float _999 = _997 * (_963.y + (-0.5));
        float _1000 = _997 * (_963.z + (-0.5));
        float _1007 = exp2((_970.w + (-0.5)) * 20.0) * 2.0;
        float _1008 = _1007 * (_970.x + (-0.5));
        float _1009 = _1007 * (_970.y + (-0.5));
        float _1010 = _1007 * (_970.z + (-0.5));
        float _1017 = exp2((_977.w + (-0.5)) * 20.0) * 2.0;
        float _1018 = _1017 * (_977.x + (-0.5));
        float _1019 = _1017 * (_977.y + (-0.5));
        float _1020 = _1017 * (_977.z + (-0.5));
        float _1027 = exp2((_984.w + (-0.5)) * 20.0) * 2.0;
        float _1028 = _1027 * (_984.x + (-0.5));
        float _1029 = _1027 * (_984.y + (-0.5));
        float _1030 = _1027 * (_984.z + (-0.5));
        float _1031 = isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0));
        float _1032 = isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0));
        float _1033 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
        float _1034 = _998 * 0.5;
        float _1035 = _1008 * 0.5;
        float _1036 = _1018 * 0.5;
        float _1037 = dot(vec3(_1034, _1035, _1036), vec3(_1034, _1035, _1036));
        float _1042 = (_1037 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1037);
        float _1051 = (dot(vec3(_716, _717, _718), vec3(_1042 * _1034, _1042 * _1035, _1042 * _1036)) + 1.0) * 0.5;
        float _3271 = isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0));
        float _1061 = sqrt(((_1035 * _1035) + (_1034 * _1034)) + (_1036 * _1036)) / (_1031 + 9.9999997473787516355514526367188e-06);
        float _3282 = isnan(0.0) ? _1061 : (isnan(_1061) ? 0.0 : max(_1061, 0.0));
        float _1062 = isnan(1.0) ? _3282 : (isnan(_3282) ? 1.0 : min(_3282, 1.0));
        float _1063 = _1062 * 2.0;
        float _1067 = (1.0 - _1062) / (_1062 + 1.0);
        float _3293 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
        float _1068 = isnan(1.0) ? _3293 : (isnan(_3293) ? 1.0 : min(_3293, 1.0));
        float _1077 = ((((1.0 - _1068) * (_1063 + 2.0)) * exp2(log2(isnan(1.0) ? _3271 : (isnan(_3271) ? 1.0 : min(_3271, 1.0))) * (_1063 + 1.0))) + _1068) * _1031;
        float _1078 = _999 * 0.5;
        float _1079 = _1009 * 0.5;
        float _1080 = _1019 * 0.5;
        float _1081 = dot(vec3(_1078, _1079, _1080), vec3(_1078, _1079, _1080));
        float _1086 = (_1081 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1081);
        float _1094 = (dot(vec3(_716, _717, _718), vec3(_1086 * _1078, _1086 * _1079, _1086 * _1080)) + 1.0) * 0.5;
        float _3304 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
        float _1103 = sqrt(((_1079 * _1079) + (_1078 * _1078)) + (_1080 * _1080)) / (_1032 + 9.9999997473787516355514526367188e-06);
        float _3315 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1104 = isnan(1.0) ? _3315 : (isnan(_3315) ? 1.0 : min(_3315, 1.0));
        float _1105 = _1104 * 2.0;
        float _1109 = (1.0 - _1104) / (_1104 + 1.0);
        float _3326 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1110 = isnan(1.0) ? _3326 : (isnan(_3326) ? 1.0 : min(_3326, 1.0));
        float _1119 = ((((1.0 - _1110) * (_1105 + 2.0)) * exp2(log2(isnan(1.0) ? _3304 : (isnan(_3304) ? 1.0 : min(_3304, 1.0))) * (_1105 + 1.0))) + _1110) * _1032;
        float _1120 = _1000 * 0.5;
        float _1121 = _1010 * 0.5;
        float _1122 = _1020 * 0.5;
        float _1123 = dot(vec3(_1120, _1121, _1122), vec3(_1120, _1121, _1122));
        float _1128 = (_1123 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1123);
        float _1136 = (dot(vec3(_716, _717, _718), vec3(_1128 * _1120, _1128 * _1121, _1128 * _1122)) + 1.0) * 0.5;
        float _3337 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
        float _1145 = sqrt(((_1121 * _1121) + (_1120 * _1120)) + (_1122 * _1122)) / (_1033 + 9.9999997473787516355514526367188e-06);
        float _3348 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
        float _1146 = isnan(1.0) ? _3348 : (isnan(_3348) ? 1.0 : min(_3348, 1.0));
        float _1147 = _1146 * 2.0;
        float _1151 = (1.0 - _1146) / (_1146 + 1.0);
        float _3359 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
        float _1152 = isnan(1.0) ? _3359 : (isnan(_3359) ? 1.0 : min(_3359, 1.0));
        float _1161 = ((((1.0 - _1152) * (_1147 + 2.0)) * exp2(log2(isnan(1.0) ? _3337 : (isnan(_3337) ? 1.0 : min(_3337, 1.0))) * (_1147 + 1.0))) + _1152) * _1033;
        _1169 = _1000;
        _1171 = _999;
        _1172 = _998;
        _1173 = _1010;
        _1174 = _1009;
        _1175 = _1008;
        _1176 = _1020;
        _1177 = _1019;
        _1178 = _1018;
        _1179 = _1033;
        _1180 = _1032;
        _1181 = _1031;
        _1182 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0)));
        _1183 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0)));
        _1184 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0)));
    }
    else
    {
        _1169 = _1170;
        _1171 = _1170;
        _1172 = _1170;
        _1173 = _1170;
        _1174 = _1170;
        _1175 = _1170;
        _1176 = _1170;
        _1177 = _1170;
        _1178 = _1170;
        _1179 = _1170;
        _1180 = _1170;
        _1181 = _1170;
        _1182 = 0.0;
        _1183 = 0.0;
        _1184 = 0.0;
    }
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    float _1483;
    float _1484;
    float _1485;
    float _1486;
    float _1487;
    float _1488;
    float _1489;
    float _1490;
    float _1491;
    float _1492;
    float _1493;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1210 = fma(_867, cbModelParam._m0[30u].z, fma(_863, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _859));
        float _1214 = fma(_867, cbModelParam._m0[31u].z, fma(_863, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _859));
        float _1218 = fma(_867, cbModelParam._m0[32u].z, fma(_863, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _859));
        float _1241 = _859 + _716;
        float _1242 = _863 + _717;
        float _1243 = _867 + _718;
        float _1253 = fma(_1243, cbModelParam._m0[30u].z, fma(_1242, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1241)) - _1210;
        float _1254 = fma(_1243, cbModelParam._m0[31u].z, fma(_1242, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1241)) - _1214;
        float _1255 = fma(_1243, cbModelParam._m0[32u].z, fma(_1242, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1241)) - _1218;
        float _1259 = inversesqrt(dot(vec3(_1253, _1254, _1255), vec3(_1253, _1254, _1255)));
        float _1272 = ((_1259 * _1253) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1210 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1273 = ((_1259 * _1254) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1214 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1274 = ((_1259 * _1255) / cbModelParam._m0[35u].z) + ((((((_1218 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1276 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1272, _1273, _1274), 0.0);
        vec4 _1283 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1272, _1273, _1274), 0.0);
        vec4 _1290 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1272, _1273, _1274), 0.0);
        vec4 _1297 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1272, _1273, _1274), 0.0);
        float _1309 = exp2((_1276.w + (-0.5)) * 20.0) * 2.0;
        float _1310 = _1309 * (_1276.x + (-0.5));
        float _1311 = _1309 * (_1276.y + (-0.5));
        float _1312 = _1309 * (_1276.z + (-0.5));
        float _1319 = exp2((_1283.w + (-0.5)) * 20.0) * 2.0;
        float _1320 = _1319 * (_1283.x + (-0.5));
        float _1321 = _1319 * (_1283.y + (-0.5));
        float _1322 = _1319 * (_1283.z + (-0.5));
        float _1329 = exp2((_1290.w + (-0.5)) * 20.0) * 2.0;
        float _1330 = _1329 * (_1290.x + (-0.5));
        float _1331 = _1329 * (_1290.y + (-0.5));
        float _1332 = _1329 * (_1290.z + (-0.5));
        float _1339 = exp2((_1297.w + (-0.5)) * 20.0) * 2.0;
        float _1340 = _1339 * (_1297.x + (-0.5));
        float _1341 = _1339 * (_1297.y + (-0.5));
        float _1342 = _1339 * (_1297.z + (-0.5));
        float _1343 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
        float _1344 = isnan(0.0) ? _1341 : (isnan(_1341) ? 0.0 : max(_1341, 0.0));
        float _1345 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1346 = _1310 * 0.5;
        float _1347 = _1320 * 0.5;
        float _1348 = _1330 * 0.5;
        float _1349 = dot(vec3(_1346, _1347, _1348), vec3(_1346, _1347, _1348));
        float _1354 = (_1349 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1349);
        float _1362 = (dot(vec3(_716, _717, _718), vec3(_1354 * _1346, _1354 * _1347, _1354 * _1348)) + 1.0) * 0.5;
        float _3400 = isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0));
        float _1371 = sqrt(((_1347 * _1347) + (_1346 * _1346)) + (_1348 * _1348)) / (_1343 + 9.9999997473787516355514526367188e-06);
        float _3411 = isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0));
        float _1372 = isnan(1.0) ? _3411 : (isnan(_3411) ? 1.0 : min(_3411, 1.0));
        float _1373 = _1372 * 2.0;
        float _1377 = (1.0 - _1372) / (_1372 + 1.0);
        float _3422 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
        float _1378 = isnan(1.0) ? _3422 : (isnan(_3422) ? 1.0 : min(_3422, 1.0));
        float _1387 = ((((1.0 - _1378) * (_1373 + 2.0)) * exp2(log2(isnan(1.0) ? _3400 : (isnan(_3400) ? 1.0 : min(_3400, 1.0))) * (_1373 + 1.0))) + _1378) * _1343;
        float _1388 = _1311 * 0.5;
        float _1389 = _1321 * 0.5;
        float _1390 = _1331 * 0.5;
        float _1391 = dot(vec3(_1388, _1389, _1390), vec3(_1388, _1389, _1390));
        float _1396 = (_1391 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1391);
        float _1404 = (dot(vec3(_716, _717, _718), vec3(_1396 * _1388, _1396 * _1389, _1396 * _1390)) + 1.0) * 0.5;
        float _3433 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1413 = sqrt(((_1389 * _1389) + (_1388 * _1388)) + (_1390 * _1390)) / (_1344 + 9.9999997473787516355514526367188e-06);
        float _3444 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
        float _1414 = isnan(1.0) ? _3444 : (isnan(_3444) ? 1.0 : min(_3444, 1.0));
        float _1415 = _1414 * 2.0;
        float _1419 = (1.0 - _1414) / (_1414 + 1.0);
        float _3455 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1420 = isnan(1.0) ? _3455 : (isnan(_3455) ? 1.0 : min(_3455, 1.0));
        float _1429 = ((((1.0 - _1420) * (_1415 + 2.0)) * exp2(log2(isnan(1.0) ? _3433 : (isnan(_3433) ? 1.0 : min(_3433, 1.0))) * (_1415 + 1.0))) + _1420) * _1344;
        float _1430 = _1312 * 0.5;
        float _1431 = _1322 * 0.5;
        float _1432 = _1332 * 0.5;
        float _1433 = dot(vec3(_1430, _1431, _1432), vec3(_1430, _1431, _1432));
        float _1438 = (_1433 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1433);
        float _1446 = (dot(vec3(_716, _717, _718), vec3(_1438 * _1430, _1438 * _1431, _1438 * _1432)) + 1.0) * 0.5;
        float _3466 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1455 = sqrt(((_1431 * _1431) + (_1430 * _1430)) + (_1432 * _1432)) / (_1345 + 9.9999997473787516355514526367188e-06);
        float _3477 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1456 = isnan(1.0) ? _3477 : (isnan(_3477) ? 1.0 : min(_3477, 1.0));
        float _1457 = _1456 * 2.0;
        float _1461 = (1.0 - _1456) / (_1456 + 1.0);
        float _3488 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1462 = isnan(1.0) ? _3488 : (isnan(_3488) ? 1.0 : min(_3488, 1.0));
        float _1471 = ((((1.0 - _1462) * (_1457 + 2.0)) * exp2(log2(isnan(1.0) ? _3466 : (isnan(_3466) ? 1.0 : min(_3466, 1.0))) * (_1457 + 1.0))) + _1462) * _1345;
        _1479 = _1312;
        _1480 = _1311;
        _1481 = _1310;
        _1482 = _1322;
        _1483 = _1321;
        _1484 = _1320;
        _1485 = _1332;
        _1486 = _1331;
        _1487 = _1330;
        _1488 = _1345;
        _1489 = _1344;
        _1490 = _1343;
        _1491 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0)));
        _1492 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0)));
        _1493 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0)));
    }
    else
    {
        _1479 = _1170;
        _1480 = _1170;
        _1481 = _1170;
        _1482 = _1170;
        _1483 = _1170;
        _1484 = _1170;
        _1485 = _1170;
        _1486 = _1170;
        _1487 = _1170;
        _1488 = _1170;
        _1489 = _1170;
        _1490 = _1170;
        _1491 = 0.0;
        _1492 = 0.0;
        _1493 = 0.0;
    }
    float _1503 = (cbModelParam._m0[1u].x * (_1491 - _1182)) + _1182;
    float _1504 = (cbModelParam._m0[1u].x * (_1492 - _1183)) + _1183;
    float _1505 = (cbModelParam._m0[1u].x * (_1493 - _1184)) + _1184;
    float _1526 = fma(_1505, cbSceneParam._m0[89u].z, fma(_1504, cbSceneParam._m0[89u].y, _1503 * cbSceneParam._m0[89u].x));
    float _1529 = fma(_1505, cbSceneParam._m0[90u].z, fma(_1504, cbSceneParam._m0[90u].y, _1503 * cbSceneParam._m0[90u].x));
    float _1532 = fma(_1505, cbSceneParam._m0[91u].z, fma(_1504, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1503));
    float _1547 = _802 * 0.5;
    float _1548 = _803 * 0.5;
    float _1549 = _804 * 0.5;
    float _1550 = dot(vec4(_1547, _1548, _1549, 1.0), vec4(_1481, _1484, _1487, _1490));
    float _1553 = dot(vec4(_1547, _1548, _1549, 1.0), vec4(_1480, _1483, _1486, _1489));
    float _1556 = dot(vec4(_1547, _1548, _1549, 1.0), vec4(_1479, _1482, _1485, _1488));
    float _1590;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1563 = dot(vec4(_1547, _1548, _1549, 1.0), vec4(_1169, _1173, _1176, _1179));
        float _1567 = dot(vec4(_1547, _1548, _1549, 1.0), vec4(_1171, _1174, _1177, _1180));
        float _1571 = dot(vec4(_1547, _1548, _1549, 1.0), vec4(_1172, _1175, _1178, _1181));
        float _1578 = dot(vec4(cbModelParam._m0[39u]), vec4(_1547, _1548, _1549, 1.0));
        _1590 = dot(vec3(isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0)), isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0)), isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1578) ? 0.0 : (isnan(0.0) ? _1578 : max(0.0, _1578))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1590 = 1.0;
    }
    float _1601;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1592 = dot(vec4(cbModelParam._m0[40u]), vec4(_1547, _1548, _1549, 1.0));
        _1601 = dot(vec3(isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0)), isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0)), isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1592) ? 0.0 : (isnan(0.0) ? _1592 : max(0.0, _1592))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1601 = 1.0;
    }
    float _1605 = (_1601 * cbModelParam._m0[1u].x) + (_1590 * (1.0 - cbModelParam._m0[1u].x));
    float _1615 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _720);
    float _1616 = isnan(_1615) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1615 : min(cbModelParam._m0[25u].z, _1615));
    float _1696;
    float _1698;
    float _1700;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1663 = fma(_867, cbModelParam._m0[13u].z, fma(_863, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _859)) + cbModelParam._m0[13u].w;
        float _1667 = fma(_867, cbModelParam._m0[14u].z, fma(_863, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _859)) + cbModelParam._m0[14u].w;
        float _1671 = fma(_867, cbModelParam._m0[15u].z, fma(_863, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _859)) + cbModelParam._m0[15u].w;
        float _1674 = fma(_804, cbModelParam._m0[13u].z, fma(_803, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _802));
        float _1677 = fma(_804, cbModelParam._m0[14u].z, fma(_803, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _802));
        float _1680 = fma(_804, cbModelParam._m0[15u].z, fma(_803, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _802));
        float _1708;
        if (_1674 > 0.0)
        {
            _1708 = abs((1.0 - _1663) / _1674);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1674 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1663 + 1.0) / _1674);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1708 = frontier_phi_16_14_ladder;
        }
        float _1879;
        if (_1677 > 0.0)
        {
            _1879 = abs((1.0 - _1667) / _1677);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1677 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1667 + 1.0) / _1677);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1879 = frontier_phi_25_21_ladder;
        }
        float _2114;
        if (_1680 > 0.0)
        {
            _2114 = abs((1.0 - _1671) / _1680);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1680 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1671 + 1.0) / _1680);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2114 = frontier_phi_36_32_ladder;
        }
        float _2116 = isnan(_1879) ? _1708 : (isnan(_1708) ? _1879 : min(_1708, _1879));
        float _2117 = isnan(_2114) ? _2116 : (isnan(_2116) ? _2114 : min(_2116, _2114));
        float _2121 = (_2117 * _1674) + _1663;
        float _2122 = (_2117 * _1677) + _1667;
        float _2123 = (_2117 * _1680) + _1671;
        float _2124 = _2117 * 9.9999997473787516355514526367188e-05;
        float _2126 = (-1.0) - _2124;
        float _2128 = _2124 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2123 > _2128) || ((_2123 < _2126) || ((_2122 > _2128) || ((_2122 < _2126) || ((_2121 < _2126) || (_2121 > _2128))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2273 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2123, cbModelParam._m0[9u].z, fma(_2122, cbModelParam._m0[9u].y, _2121 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2123, cbModelParam._m0[10u].z, fma(_2122, cbModelParam._m0[10u].y, _2121 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2123, cbModelParam._m0[11u].z, fma(_2122, cbModelParam._m0[11u].y, _2121 * cbModelParam._m0[11u].x))), _1616);
            frontier_phi_15_36_ladder = _2273.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2273.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2273.y * cbModelParam._m0[1u].y;
        }
        _1696 = frontier_phi_15_36_ladder_1;
        _1698 = frontier_phi_15_36_ladder_2;
        _1700 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1684 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_802, _803, _804), _1616);
        _1696 = _1684.x * cbModelParam._m0[1u].y;
        _1698 = _1684.y * cbModelParam._m0[1u].y;
        _1700 = _1684.z * cbModelParam._m0[1u].y;
    }
    float _1704 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _720);
    float _1705 = isnan(_1704) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1704 : min(cbModelParam._m0[25u].w, _1704));
    float _1796;
    float _1798;
    float _1800;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1760 = fma(_867, cbModelParam._m0[21u].z, fma(_863, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _859)) + cbModelParam._m0[21u].w;
        float _1764 = fma(_867, cbModelParam._m0[22u].z, fma(_863, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _859)) + cbModelParam._m0[22u].w;
        float _1768 = fma(_867, cbModelParam._m0[23u].z, fma(_863, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _859)) + cbModelParam._m0[23u].w;
        float _1771 = fma(_804, cbModelParam._m0[21u].z, fma(_803, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _802));
        float _1774 = fma(_804, cbModelParam._m0[22u].z, fma(_803, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _802));
        float _1777 = fma(_804, cbModelParam._m0[23u].z, fma(_803, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _802));
        float _1884;
        if (_1771 > 0.0)
        {
            _1884 = abs((1.0 - _1760) / _1771);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1771 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1760 + 1.0) / _1771);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1884 = frontier_phi_27_23_ladder;
        }
        float _2141;
        if (_1774 > 0.0)
        {
            _2141 = abs((1.0 - _1764) / _1774);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1774 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1764 + 1.0) / _1774);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2141 = frontier_phi_38_34_ladder;
        }
        float _2445;
        if (_1777 > 0.0)
        {
            _2445 = abs((1.0 - _1768) / _1777);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1777 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1768 + 1.0) / _1777);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2445 = frontier_phi_49_44_ladder;
        }
        float _2447 = isnan(_2141) ? _1884 : (isnan(_1884) ? _2141 : min(_1884, _2141));
        float _2448 = isnan(_2445) ? _2447 : (isnan(_2447) ? _2445 : min(_2447, _2445));
        float _2452 = (_2448 * _1771) + _1760;
        float _2453 = (_2448 * _1774) + _1764;
        float _2454 = (_2448 * _1777) + _1768;
        float _2455 = _2448 * 9.9999997473787516355514526367188e-05;
        float _2456 = (-1.0) - _2455;
        float _2458 = _2455 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2454 > _2458) || ((_2454 < _2456) || ((_2453 > _2458) || ((_2453 < _2456) || ((_2452 < _2456) || (_2452 > _2458))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2627 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2454, cbModelParam._m0[17u].z, fma(_2453, cbModelParam._m0[17u].y, _2452 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2454, cbModelParam._m0[18u].z, fma(_2453, cbModelParam._m0[18u].y, _2452 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2454, cbModelParam._m0[19u].z, fma(_2453, cbModelParam._m0[19u].y, _2452 * cbModelParam._m0[19u].x))), _1705);
            frontier_phi_24_49_ladder = _2627.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2627.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2627.x * cbModelParam._m0[1u].z;
        }
        _1796 = frontier_phi_24_49_ladder_2;
        _1798 = frontier_phi_24_49_ladder;
        _1800 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1780 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_802, _803, _804), _1705);
        _1796 = _1780.x * cbModelParam._m0[1u].z;
        _1798 = _1780.y * cbModelParam._m0[1u].z;
        _1800 = _1780.z * cbModelParam._m0[1u].z;
    }
    float _1812 = ((((1.0 - _827) * ((_815 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_827 * _815)) * _794;
    float _1813 = _1812 * ((cbModelParam._m0[1u].w * (_1796 - _1696)) + _1696);
    float _1814 = _1812 * ((cbModelParam._m0[1u].w * (_1798 - _1698)) + _1698);
    float _1815 = _1812 * ((cbModelParam._m0[1u].w * (_1800 - _1700)) + _1700);
    float _1818 = fma(_1815, cbSceneParam._m0[89u].z, fma(_1814, cbSceneParam._m0[89u].y, _1813 * cbSceneParam._m0[89u].x));
    float _1821 = fma(_1815, cbSceneParam._m0[90u].z, fma(_1814, cbSceneParam._m0[90u].y, _1813 * cbSceneParam._m0[90u].x));
    float _1824 = fma(_1815, cbSceneParam._m0[91u].z, fma(_1814, cbSceneParam._m0[91u].y, _1813 * cbSceneParam._m0[91u].x));
    uvec4 _1834 = floatBitsToUint(cbInstanceData._m0[_297 + 5u]);
    uint _1836 = _1834.x * 14u;
    uint _1837 = _1836 + 13u;
    float _1842 = _794 + (-1.0);
    float _1845 = (cbLight._m0[_1837].x * _1842) + 1.0;
    float _1846 = (cbLight._m0[_1837].y * _1842) + 1.0;
    uint _1848 = _1836 + 4u;
    float _1859 = dot(vec3(cbLight._m0[_1836].xyz), vec3(_716, _717, _718));
    float _1862 = isnan(1.0) ? _1845 : (isnan(_1845) ? 1.0 : min(_1845, 1.0));
    uint _1863 = _1836 + 5u;
    uint _1869 = _1836 | 1u;
    float _1875 = dot(vec3(cbLight._m0[_1869].xyz), vec3(_716, _717, _718));
    float _1878 = isnan(1.0) ? _1846 : (isnan(_1846) ? 1.0 : min(_1846, 1.0));
    float _1943;
    float _1944;
    float _1945;
    if (_721 == 0.0)
    {
        float _3624 = isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0));
        float _3635 = isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0));
        float _1897 = (isnan(1.0) ? _3624 : (isnan(_3624) ? 1.0 : min(_3624, 1.0))) * 0.3183098733425140380859375;
        float _1899 = (isnan(1.0) ? _3635 : (isnan(_3635) ? 1.0 : min(_3635, 1.0))) * 0.3183098733425140380859375;
        _1943 = ((cbLight._m0[_1863].x * _1878) * _1899) + ((cbLight._m0[_1848].x * _1862) * _1897);
        _1944 = ((_1878 * cbLight._m0[_1863].y) * _1899) + ((_1862 * cbLight._m0[_1848].y) * _1897);
        _1945 = ((_1878 * cbLight._m0[_1863].z) * _1899) + ((_1862 * cbLight._m0[_1848].z) * _1897);
    }
    else
    {
        float _1909 = _1859 + _721;
        float _1912 = (_721 * 2.0) + 1.0;
        float _1913 = (isnan(0.0) ? _1909 : (isnan(_1909) ? 0.0 : max(_1909, 0.0))) / _1912;
        float _1920 = _1875 + _721;
        float _1922 = (isnan(0.0) ? _1920 : (isnan(_1920) ? 0.0 : max(_1920, 0.0))) / _1912;
        _1943 = (((_1922 * cbLight._m0[_1863].x) * _1878) + ((_1913 * cbLight._m0[_1848].x) * _1862)) * 0.3183098733425140380859375;
        _1944 = (((_1922 * cbLight._m0[_1863].y) * _1878) + ((_1913 * cbLight._m0[_1848].y) * _1862)) * 0.3183098733425140380859375;
        _1945 = (((_1922 * cbLight._m0[_1863].z) * _1878) + ((_1913 * cbLight._m0[_1848].z) * _1862)) * 0.3183098733425140380859375;
    }
    uint _1949 = _1836 + 8u;
    float _1965 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1836].w)) * _720) * 0.949999988079071044921875);
    float _1966 = _1965 * _1965;
    float _1967 = cbLight._m0[_1836].x + _507;
    float _1968 = cbLight._m0[_1836].y + _508;
    float _1969 = cbLight._m0[_1836].z + _509;
    float _1973 = inversesqrt(dot(vec3(_1967, _1968, _1969), vec3(_1967, _1968, _1969)));
    float _1974 = _1973 * _1967;
    float _1975 = _1973 * _1968;
    float _1976 = _1973 * _1969;
    float _1977 = dot(vec3(_716, _717, _718), vec3(cbLight._m0[_1836].xyz));
    float _3656 = isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0));
    float _1980 = isnan(1.0) ? _3656 : (isnan(_3656) ? 1.0 : min(_3656, 1.0));
    float _3667 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
    float _1981 = isnan(1.0) ? _3667 : (isnan(_3667) ? 1.0 : min(_3667, 1.0));
    float _1982 = dot(vec3(_716, _717, _718), vec3(_1974, _1975, _1976));
    float _3678 = isnan(0.0) ? _1982 : (isnan(_1982) ? 0.0 : max(_1982, 0.0));
    float _1985 = isnan(1.0) ? _3678 : (isnan(_3678) ? 1.0 : min(_3678, 1.0));
    float _1986 = dot(vec3(cbLight._m0[_1836].xyz), vec3(_1974, _1975, _1976));
    float _3689 = isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0));
    float _1990 = _1966 * _1966;
    float _1994 = ((_1985 * _1985) * (_1990 + (-1.0))) + 1.0;
    float _2005 = (exp2(log2(1.0 - (isnan(1.0) ? _3689 : (isnan(_3689) ? 1.0 : min(_3689, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2006 = 1.0 - _1966;
    float _2017 = (0.5 / (((_1981 * ((_1980 * _2006) + _1966)) + 9.9999999392252902907785028219223e-09) + (((_1981 * _2006) + _1966) * _1980))) * _1980;
    float _3700 = isnan(0.0) ? _2017 : (isnan(_2017) ? 0.0 : max(_2017, 0.0));
    float _2019 = (isnan(1.0) ? _3700 : (isnan(_3700) ? 1.0 : min(_3700, 1.0))) * (_1990 / ((_1994 * _1994) * 3.141590118408203125));
    uint _2032 = _1836 + 9u;
    float _2046 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1869].w)) * _720) * 0.949999988079071044921875);
    float _2047 = _2046 * _2046;
    float _2048 = cbLight._m0[_1869].x + _507;
    float _2049 = cbLight._m0[_1869].y + _508;
    float _2050 = cbLight._m0[_1869].z + _509;
    float _2054 = inversesqrt(dot(vec3(_2048, _2049, _2050), vec3(_2048, _2049, _2050)));
    float _2055 = _2054 * _2048;
    float _2056 = _2054 * _2049;
    float _2057 = _2054 * _2050;
    float _2058 = dot(vec3(_716, _717, _718), vec3(cbLight._m0[_1869].xyz));
    float _3711 = isnan(0.0) ? _2058 : (isnan(_2058) ? 0.0 : max(_2058, 0.0));
    float _2061 = isnan(1.0) ? _3711 : (isnan(_3711) ? 1.0 : min(_3711, 1.0));
    float _2062 = dot(vec3(_716, _717, _718), vec3(_2055, _2056, _2057));
    float _3722 = isnan(0.0) ? _2062 : (isnan(_2062) ? 0.0 : max(_2062, 0.0));
    float _2065 = isnan(1.0) ? _3722 : (isnan(_3722) ? 1.0 : min(_3722, 1.0));
    float _2066 = dot(vec3(cbLight._m0[_1869].xyz), vec3(_2055, _2056, _2057));
    float _3733 = isnan(0.0) ? _2066 : (isnan(_2066) ? 0.0 : max(_2066, 0.0));
    float _2070 = _2047 * _2047;
    float _2074 = ((_2065 * _2065) * (_2070 + (-1.0))) + 1.0;
    float _2083 = (exp2(log2(1.0 - (isnan(1.0) ? _3733 : (isnan(_3733) ? 1.0 : min(_3733, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2084 = 1.0 - _2047;
    float _2094 = (0.5 / (((_1981 * ((_2061 * _2084) + _2047)) + 9.9999999392252902907785028219223e-09) + (((_1981 * _2084) + _2047) * _2061))) * _2061;
    float _3744 = isnan(0.0) ? _2094 : (isnan(_2094) ? 0.0 : max(_2094, 0.0));
    float _2096 = (isnan(1.0) ? _3744 : (isnan(_3744) ? 1.0 : min(_3744, 1.0))) * (_2070 / ((_2074 * _2074) * 3.141590118408203125));
    float _2106 = (((_2083 * cbLight._m0[_2032].x) * _2096) * _1878) + (((_2005 * cbLight._m0[_1949].x) * _2019) * _1862);
    float _2107 = (((_2083 * cbLight._m0[_2032].y) * _2096) * _1878) + (((_2005 * cbLight._m0[_1949].y) * _2019) * _1862);
    float _2108 = (((_2083 * cbLight._m0[_2032].z) * _2096) * _1878) + (((_2005 * cbLight._m0[_1949].z) * _2019) * _1862);
    float _2244;
    float _2246;
    float _2248;
    float _2250;
    float _2252;
    float _2254;
    if (_1834.y == 0u)
    {
        float _2185 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2186 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2185;
        float _2187 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2185;
        float _2188 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2185;
        uvec4 _2200 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2201 = _2200.x;
        uint _2212 = uint((float(_2200.y) * floor(float(uint(cbSceneParam._m0[85u].y * _632) / _2201))) + floor(float(uint(cbSceneParam._m0[85u].x * _631) / _2201)));
        float _2222 = (log2(_2188 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2223 = isnan(0.0) ? _2222 : (isnan(_2222) ? 0.0 : max(_2222, 0.0));
        uint _2226 = uint(isnan(14.0) ? _2223 : (isnan(_2223) ? 14.0 : min(_2223, 14.0)));
        uint _2233 = _2200.z;
        float _2282;
        float _2284;
        float _2286;
        float _2288;
        float _2290;
        float _2292;
        if (((((1u << ((_2233 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2226 << 2u) + (_2212 << 6u)) >> 2u)).x) == 0u) || ((_2233 & 240u) == 0u))
        {
            _2282 = 0.0;
            _2284 = 0.0;
            _2286 = 0.0;
            _2288 = 0.0;
            _2290 = 0.0;
            _2292 = 0.0;
        }
        else
        {
            float _2283;
            float _2285;
            float _2287;
            float _2289;
            float _2291;
            float _2293;
            float _2471 = 0.0;
            float _2472 = 0.0;
            float _2473 = 0.0;
            float _2474 = 0.0;
            float _2475 = 0.0;
            float _2476 = 0.0;
            uint _2477 = 0u;
            uint _2486;
            bool _2487;
            for (;;)
            {
                _2486 = texelFetch(g_lightClassification, int((((_2226 << 5u) + (_2212 << 9u)) + (_2477 << 2u)) >> 2u)).x;
                _2487 = _2486 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2487)
                {
                    frontier_phi_55_pred = _2476;
                    frontier_phi_55_pred_1 = _2475;
                    frontier_phi_55_pred_2 = _2474;
                    frontier_phi_55_pred_3 = _2472;
                    frontier_phi_55_pred_4 = _2471;
                    frontier_phi_55_pred_5 = _2473;
                }
                else
                {
                    float _2684;
                    float _2685;
                    float _2686;
                    float _2687;
                    float _2688;
                    float _2689;
                    uint _2690;
                    _2684 = _2471;
                    _2685 = _2472;
                    _2686 = _2473;
                    _2687 = _2474;
                    _2688 = _2475;
                    _2689 = _2476;
                    _2690 = _2486;
                    float _2632;
                    float _2633;
                    float _2634;
                    float _2635;
                    float _2636;
                    float _2637;
                    for (;;)
                    {
                        uint _2694 = uint(findLSB(_2690)) + (_2477 << 5u);
                        uint _2691 = (_2690 + 4294967295u) & _2690;
                        uint _2696 = _2694 * 48u;
                        vec4 _2710 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2696)).x, texelFetch(g_PointLightRenderingBuffer, int(_2696 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2696 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2696 + 3u)).x));
                        uint _2716 = (_2694 * 48u) + 4u;
                        vec4 _2729 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2716)).x, texelFetch(g_PointLightRenderingBuffer, int(_2716 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2716 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2716 + 3u)).x));
                        float _2730 = _2729.x;
                        float _2731 = _2729.y;
                        float _2732 = _2729.z;
                        uint _2735 = (_2694 * 48u) + 8u;
                        vec3 _2746 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2735)).x, texelFetch(g_PointLightRenderingBuffer, int(_2735 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2735 + 2u)).x));
                        uint _2751 = (_2694 * 48u) + 12u;
                        vec2 _2759 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2751)).x, texelFetch(g_PointLightRenderingBuffer, int(_2751 + 1u)).x));
                        float _2765 = inversesqrt(dot(vec3(_2186, _2187, _2188), vec3(_2186, _2187, _2188)));
                        float _2766 = _2765 * _2186;
                        float _2767 = _2765 * _2187;
                        float _2768 = _2765 * _2188;
                        float _2769 = _2710.x - _2186;
                        float _2770 = _2710.y - _2187;
                        float _2771 = _2710.z - _2188;
                        float _2772 = dot(vec3(_2769, _2770, _2771), vec3(_2769, _2770, _2771));
                        float _2775 = inversesqrt(_2772);
                        float _2776 = _2775 * _2769;
                        float _2777 = _2775 * _2770;
                        float _2778 = _2775 * _2771;
                        float _2779 = dot(vec3(_756, _759, _762), vec3(_2776, _2777, _2778));
                        float _2784 = 1.0 - (_2772 * _2710.w);
                        float _3765 = isnan(0.0) ? _2784 : (isnan(_2784) ? 0.0 : max(_2784, 0.0));
                        float _2785 = isnan(1.0) ? _3765 : (isnan(_3765) ? 1.0 : min(_3765, 1.0));
                        float _2786 = sqrt(_2772) * _2729.w;
                        float _2789 = 1.39999997615814208984375 / (_2786 + 1.39999997615814208984375);
                        float _2790 = _2789 * _2789;
                        float _2791 = 1.0 - _2790;
                        float _2793 = (_2791 * _2791) * _721;
                        float _2796 = ((_2791 * _2779) + _2790) + _2793;
                        float _2801 = _2786 * _2786;
                        float _2806 = ((isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0))) * _2785) / (((_2793 * 2.0) + 1.0) * ((_2801 * 0.699999988079071044921875) + 1.0));
                        float _2810 = dot(vec3(_2776, _2777, _2778), vec3(_2766, _2767, _2768));
                        float _3781 = isnan(0.0) ? _2810 : (isnan(_2810) ? 0.0 : max(_2810, 0.0));
                        float _2817 = dot(vec3((-0.0) - _2766, (-0.0) - _2767, (-0.0) - _2768), vec3(_756, _759, _762)) + 1.0;
                        float _2819 = (isnan(0.0) ? _2817 : (isnan(_2817) ? 0.0 : max(_2817, 0.0))) * 0.5;
                        float _2826 = ((_2819 * _2819) * _2759.x) * exp2((_2759.y * 32.0) * log2(isnan(1.0) ? _3781 : (isnan(_3781) ? 1.0 : min(_3781, 1.0))));
                        float _2828 = _721 / (_721 + 1.0);
                        float _2844 = (-0.0) - _2186;
                        float _2845 = (-0.0) - _2187;
                        float _2846 = (-0.0) - _2188;
                        float _2850 = inversesqrt(dot(vec3(_2844, _2845, _2846), vec3(_2844, _2845, _2846)));
                        float _2851 = _2850 * _2844;
                        float _2852 = _2850 * _2845;
                        float _2853 = _2850 * _2846;
                        float _2861 = exp2(log2(1.0 / ((_2801 * 3.5) + 5.0)) * 0.25);
                        float _2862 = 1.0 - _815;
                        float _2869 = sqrt(1.0 - ((1.0 - (_2862 * _2862)) * (1.0 - (_2861 * _2861))));
                        float _2870 = _2869 * _2869;
                        float _2871 = _2870 * _2870;
                        float _2872 = _2851 + _2776;
                        float _2873 = _2852 + _2777;
                        float _2874 = _2853 + _2778;
                        float _2878 = inversesqrt(dot(vec3(_2872, _2873, _2874), vec3(_2872, _2873, _2874)));
                        float _2882 = dot(vec3(_756, _759, _762), vec3(_2851, _2852, _2853));
                        float _3797 = isnan(0.0) ? _2882 : (isnan(_2882) ? 0.0 : max(_2882, 0.0));
                        float _2885 = isnan(1.0) ? _3797 : (isnan(_3797) ? 1.0 : min(_3797, 1.0));
                        float _2886 = dot(vec3(_756, _759, _762), vec3(_2878 * _2872, _2878 * _2873, _2878 * _2874));
                        float _3808 = isnan(0.0) ? _2886 : (isnan(_2886) ? 0.0 : max(_2886, 0.0));
                        float _2889 = isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0));
                        float _2893 = ((_2889 * _2889) * (_2871 + (-1.0))) + 1.0;
                        float _2894 = _2789 * _2870;
                        float _2895 = _2894 * _2894;
                        float _2898 = ((1.0 - _2895) * _2779) + _2895;
                        float _3819 = isnan(0.0) ? _2898 : (isnan(_2898) ? 0.0 : max(_2898, 0.0));
                        float _2899 = isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0));
                        float _2900 = 1.0 - _2870;
                        float _2910 = (0.5 / (((_2899 * ((_2885 * _2900) + _2870)) + 9.9999999392252902907785028219223e-09) + (((_2899 * _2900) + _2870) * _2885))) * _2899;
                        float _3830 = isnan(0.0) ? _2910 : (isnan(_2910) ? 0.0 : max(_2910, 0.0));
                        float _2921 = (((_2871 * 3.1415927410125732421875) * (isnan(1.0) ? _3830 : (isnan(_3830) ? 1.0 : min(_3830, 1.0)))) / ((_2893 * _2893) * ((_2801 * 2.1991131305694580078125) + 3.141590118408203125))) * _2785;
                        _2635 = (((((_2730 * 0.3183098733425140380859375) * _2828) * _2826) + _2730) * _2806) + _2687;
                        _2636 = (((((_2731 * 0.3183098733425140380859375) * _2828) * _2826) + _2731) * _2806) + _2688;
                        _2637 = (((((_2732 * 0.3183098733425140380859375) * _2828) * _2826) + _2732) * _2806) + _2689;
                        _2632 = (_2921 * _2746.x) + _2684;
                        _2633 = (_2921 * _2746.y) + _2685;
                        _2634 = (_2921 * _2746.z) + _2686;
                        if (_2691 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2684 = _2632;
                            _2685 = _2633;
                            _2686 = _2634;
                            _2687 = _2635;
                            _2688 = _2636;
                            _2689 = _2637;
                            _2690 = _2691;
                        }
                    }
                    frontier_phi_55_pred = _2637;
                    frontier_phi_55_pred_1 = _2636;
                    frontier_phi_55_pred_2 = _2635;
                    frontier_phi_55_pred_3 = _2633;
                    frontier_phi_55_pred_4 = _2632;
                    frontier_phi_55_pred_5 = _2634;
                }
                _2293 = frontier_phi_55_pred;
                _2291 = frontier_phi_55_pred_1;
                _2289 = frontier_phi_55_pred_2;
                _2285 = frontier_phi_55_pred_3;
                _2283 = frontier_phi_55_pred_4;
                _2287 = frontier_phi_55_pred_5;
                uint _2478 = _2477 + 1u;
                if (_2478 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2471 = _2283;
                    _2472 = _2285;
                    _2473 = _2287;
                    _2474 = _2289;
                    _2475 = _2291;
                    _2476 = _2293;
                    _2477 = _2478;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2282 = _2283;
            _2284 = _2285;
            _2286 = _2287;
            _2288 = _2289;
            _2290 = _2291;
            _2292 = _2293;
        }
        float _2297 = isnan(1.0) ? _794 : (isnan(_794) ? 1.0 : min(_794, 1.0));
        _2244 = (_2297 * _2288) + _1943;
        _2246 = (_2297 * _2290) + _1944;
        _2248 = (_2297 * _2292) + _1945;
        _2250 = ((_2282 * 0.039999999105930328369140625) * _2297) + _2106;
        _2252 = ((_2284 * 0.039999999105930328369140625) * _2297) + _2107;
        _2254 = ((_2286 * 0.039999999105930328369140625) * _2297) + _2108;
    }
    else
    {
        _2244 = _1943;
        _2246 = _1944;
        _2248 = _1945;
        _2250 = _2106;
        _2252 = _2107;
        _2254 = _2108;
    }
    float _2368;
    float _2369;
    float _2370;
    if (_721 > 0.0)
    {
        uint _2304 = _1836 + 4u;
        float _2310 = (-0.0) - _507;
        float _2311 = (-0.0) - _508;
        float _2312 = (-0.0) - _509;
        float _2313 = dot(vec3(cbLight._m0[_1836].xyz), vec3(_2310, _2311, _2312));
        float _3846 = isnan(0.0) ? _2313 : (isnan(_2313) ? 0.0 : max(_2313, 0.0));
        float _2317 = _805 + 1.0;
        float _2319 = (isnan(0.0) ? _2317 : (isnan(_2317) ? 0.0 : max(_2317, 0.0))) * 0.5;
        float _2324 = _2319 * _2319;
        float _2325 = _2324 * exp2(log2(isnan(1.0) ? _3846 : (isnan(_3846) ? 1.0 : min(_3846, 1.0))) * 32.0);
        float _2327 = _721 / (_721 + 1.0);
        float _2328 = isnan(_1845) ? 1.0 : (isnan(1.0) ? _1845 : min(1.0, _1845));
        uint _2338 = _1836 + 5u;
        float _2344 = dot(vec3(cbLight._m0[_1869].xyz), vec3(_2310, _2311, _2312));
        float _3867 = isnan(0.0) ? _2344 : (isnan(_2344) ? 0.0 : max(_2344, 0.0));
        float _2351 = _2324 * exp2(log2(isnan(1.0) ? _3867 : (isnan(_3867) ? 1.0 : min(_3867, 1.0))) * 32.0);
        float _2352 = isnan(_1846) ? 1.0 : (isnan(1.0) ? _1846 : min(1.0, _1846));
        _2368 = ((((_2351 * cbLight._m0[_2338].x) * _2327) * _2352) + (((_2325 * cbLight._m0[_2304].x) * _2327) * _2328)) * 0.3183098733425140380859375;
        _2369 = ((((_2351 * cbLight._m0[_2338].y) * _2327) * _2352) + (((_2325 * cbLight._m0[_2304].y) * _2327) * _2328)) * 0.3183098733425140380859375;
        _2370 = ((((_2351 * cbLight._m0[_2338].z) * _2327) * _2352) + (((_2325 * cbLight._m0[_2304].z) * _2327) * _2328)) * 0.3183098733425140380859375;
    }
    else
    {
        _2368 = 0.0;
        _2369 = 0.0;
        _2370 = 0.0;
    }
    float _3883 = isnan(0.0) ? _785 : (isnan(_785) ? 0.0 : max(_785, 0.0));
    float _3894 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
    float _3905 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    float _3916 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _2385 = (isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0))) * ((_2244 + ((isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0))) * _794)) + _2368);
    float _2386 = (isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0))) * ((_2246 + ((isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0))) * _794)) + _2369);
    float _2387 = (isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0))) * ((_2248 + ((isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0))) * _794)) + _2370);
    float _2391 = 0.959999978542327880859375 - (exp2(log2(1.0 - _809) * 5.0) * 0.959999978542327880859375);
    float _2416 = _631 / cbSceneParam._m0[86u].x;
    float _2417 = _632 / cbSceneParam._m0[86u].y;
    vec4 _2431 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2416, _2417, (log2((isnan(cbSceneParam._m0[77u].w) ? _738 : (isnan(_738) ? cbSceneParam._m0[77u].w : min(_738, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2433 = _2431.x;
    float _2434 = _2431.y;
    float _2435 = _2431.z;
    float _2436 = _2431.w;
    float _2529;
    float _2531;
    float _2533;
    float _2535;
    if (_738 > cbSceneParam._m0[78u].w)
    {
        float _2492 = isnan(_738) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _738 : min(cbSceneParam._m0[80u].w, _738));
        float _2493 = _2492 / _738;
        float _2504 = _2493 * _289;
        float _2505 = _290 * _2493;
        float _2506 = (-0.0) - _2505;
        float _2507 = _2493 * _291;
        float _2509 = (cbSceneParam._m0[77u].w * _2506) / _2492;
        float _2510 = _2509 + cbSceneParam._m0[79u].w;
        float _2511 = cbSceneParam._m0[79u].w - _2505;
        float _2517 = sqrt(((_2504 * _2504) + (_2505 * _2505)) + (_2507 * _2507));
        float _2520 = (1.0 - (cbSceneParam._m0[77u].w / _2492)) * _2517;
        float _2525 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2527 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2926;
        if (abs((_2506 - _2509) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2926 = ((((_2510 > 0.0) ? exp2(_2525 * _2510) : (2.0 - exp2(_2527 * _2510))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2520;
        }
        else
        {
            float _2657 = 1.0 / cbSceneParam._m0[80u].x;
            float _2658 = isnan(_2511) ? _2510 : (isnan(_2510) ? _2511 : max(_2510, _2511));
            float _2659 = isnan(_2511) ? _2510 : (isnan(_2510) ? _2511 : min(_2510, _2511));
            float _2668 = isnan(0.0) ? _2658 : (isnan(_2658) ? 0.0 : min(_2658, 0.0));
            float _2669 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : min(_2659, 0.0));
            _2926 = ((abs(_2517 / _2506) * cbSceneParam._m0[80u].y) * ((((_2668 - _2669) * 2.0) - ((exp2(_2525 * (isnan(0.0) ? _2658 : (isnan(_2658) ? 0.0 : max(_2658, 0.0)))) - exp2(_2525 * (isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0))))) * _2657)) - ((exp2(_2527 * _2668) - exp2(_2527 * _2669)) * _2657))) + (_2520 * cbSceneParam._m0[80u].z);
        }
        vec4 _2928 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2416, _2417, 1.0), 0.0);
        float _2937 = exp2((_2926 * (-1.44269502162933349609375)) * (1.0 - _2928.w));
        float _2938 = log2(_2937);
        float _2954 = log2(_2436);
        _2529 = (exp2(_2954 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2938 * cbSceneParam._m0[78u].x)) * _2928.x) / cbSceneParam._m0[78u].x)) + _2433;
        _2531 = (exp2(_2954 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2938 * cbSceneParam._m0[78u].y)) * _2928.y) / cbSceneParam._m0[78u].y)) + _2434;
        _2533 = (exp2(_2954 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2938 * cbSceneParam._m0[78u].z)) * _2928.z) / cbSceneParam._m0[78u].z)) + _2435;
        _2535 = _2937 * _2436;
    }
    else
    {
        _2529 = _2433;
        _2531 = _2434;
        _2533 = _2435;
        _2535 = _2436;
    }
    bool _2547 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2548 = log2(_2535);
    float _2555 = exp2(_2548 * cbSceneParam._m0[78u].x) * ((_2385 + ((_2250 + ((isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0))) * _1605)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _655.x) * _2391) - _2385) * _701));
    float _2556 = exp2(_2548 * cbSceneParam._m0[78u].y) * ((_2386 + ((_2252 + ((isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0))) * _1605)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _655.y) * _2391) - _2386) * _701));
    float _2557 = exp2(_2548 * cbSceneParam._m0[78u].z) * ((_2387 + ((_2254 + ((isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0))) * _1605)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _655.z) * _2391) - _2387) * _701));
    vec4 _2565 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_631, _632));
    float _2567 = _2565.x;
    float _2588 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2567)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2567))) - _738) * cbMtdParam._m0[17u].y;
    float _3967 = isnan(0.0) ? _2588 : (isnan(_2588) ? 0.0 : max(_2588, 0.0));
    float _2590 = (cbInstanceData._m0[_297 + 6u].w * (isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0)))) * (isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0)));
    float _2599 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2599 * (_2547 ? _2555 : (_2555 + (cbSceneParam._m0[72u].w * _2529)));
    SV_Target.y = _2599 * (_2547 ? _2556 : (_2556 + (cbSceneParam._m0[72u].w * _2531)));
    SV_Target.z = _2599 * (_2547 ? _2557 : (_2557 + (cbSceneParam._m0[72u].w * _2533)));
    SV_Target.w = _2590;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2590;
}


