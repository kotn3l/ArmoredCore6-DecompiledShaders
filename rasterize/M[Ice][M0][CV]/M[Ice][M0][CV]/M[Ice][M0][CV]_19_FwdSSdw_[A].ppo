#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1286;
float _3253;
float _3254;
float _3255;
float _3256;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _214 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _215 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _216 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _222 = inversesqrt(dot(vec3(_214, _215, _216), vec3(_214, _215, _216)));
    float _223 = _222 * _214;
    float _224 = _222 * _215;
    float _225 = _222 * _216;
    float _229 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _230 = _229 * NORMAL.x;
    float _231 = _229 * NORMAL.y;
    float _232 = _229 * NORMAL.z;
    float _236 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _237 = _236 * TANGENT.x;
    float _238 = _236 * TANGENT.y;
    float _239 = _236 * TANGENT.z;
    float _244;
    float _245;
    float _246;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _244 = (-0.0) - _230;
        _245 = (-0.0) - _231;
        _246 = (-0.0) - _232;
    }
    else
    {
        _244 = _230;
        _245 = _231;
        _246 = _232;
    }
    float _293 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _303 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _293);
    float _304 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _293);
    float _305 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _293);
    uint _311 = uint(roundEven(NORMAL.w)) * 13u;
    uint _316 = _311 + 1u;
    uint _320 = _311 + 2u;
    float _329 = sqrt(((cbInstanceData._m0[_316].x * cbInstanceData._m0[_316].x) + (cbInstanceData._m0[_311].x * cbInstanceData._m0[_311].x)) + (cbInstanceData._m0[_320].x * cbInstanceData._m0[_320].x));
    float _330 = _329 * TEXCOORD.z;
    float _331 = _329 * TEXCOORD.w;
    vec4 _344 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _330) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _331) + cbTextureTilingScale._m0[8u].w));
    vec4 _371 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _379 = (_371.x * 2.0) + (-1.0);
    float _381 = (_371.y * 2.0) + (-1.0);
    float _382 = dot(vec2(_379, _381), vec2(_379, _381));
    float _3265 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
    float _388 = sqrt(1.0 - (isnan(1.0) ? _3265 : (isnan(_3265) ? 1.0 : min(_3265, 1.0))));
    float _391 = fma(_388, _244, fma(_381, _237, _379 * _223));
    float _394 = fma(_388, _245, fma(_381, _238, _379 * _224));
    float _397 = fma(_388, _246, fma(_381, _239, _379 * _225));
    float _401 = inversesqrt(dot(vec3(_391, _394, _397), vec3(_391, _394, _397)));
    float _402 = _401 * _391;
    float _403 = _401 * _394;
    float _432 = (cbMtdParam._m0[17u].w + dot(vec4(_402, _403, _401 * _397, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _330) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _331) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3276 = isnan(0.0) ? _432 : (isnan(_432) ? 0.0 : max(_432, 0.0));
    float _433 = isnan(1.0) ? _3276 : (isnan(_3276) ? 1.0 : min(_3276, 1.0));
    vec4 _445 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _450 = _445.w;
    float _462 = dot(vec3(_303, _304, _305), vec3(_223, _224, _225));
    float _465 = dot(vec3(_303, _304, _305), vec3(_237, _238, _239));
    float _468 = dot(vec3(_303, _304, _305), vec3(_244, _245, _246));
    float _474 = inversesqrt(dot(vec3(_462, _465, _468), vec3(_462, _465, _468)));
    float _496 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _516 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_462 * cbMtdParam._m0[14u].x) * _474) * _496) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_465 * cbMtdParam._m0[14u].x) * _474) * _496) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _539 = inversesqrt(dot(vec3(_303, _304, _305), vec3(_303, _304, _305)));
    float _540 = _539 * _303;
    float _541 = _539 * _304;
    float _542 = _539 * _305;
    float _543 = dot(vec4(_540, _541, _542, 0.0), vec4(_244, _245, _246, 0.0));
    float _546 = _543 - cbMtdParam._m0[15u].z;
    float _3287 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _553 = exp2(log2(1.0 - (isnan(1.0) ? _3287 : (isnan(_3287) ? 1.0 : min(_3287, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _568 = ((((_445.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _516.x) * cbMtdParam._m0[9u].x) * ((_553 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _573 = ((((_445.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _516.y) * cbMtdParam._m0[9u].y) * ((_553 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _578 = ((((_445.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _516.z) * cbMtdParam._m0[9u].z) * ((_553 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _585 = (((_344.x * cbMtdParam._m0[10u].x) - _568) * _433) + _568;
    float _586 = (((_344.y * cbMtdParam._m0[10u].y) - _573) * _433) + _573;
    float _587 = (((_344.z * cbMtdParam._m0[10u].z) - _578) * _433) + _578;
    vec4 _599 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _330) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _331) + cbTextureTilingScale._m0[9u].w));
    float _606 = (_599.x * 2.0) + (-1.0);
    float _607 = (_599.y * 2.0) + (-1.0);
    float _608 = dot(vec2(_606, _607), vec2(_606, _607));
    float _3303 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    vec4 _629 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _639 = cbMtdParam._m0[17u].z + _371.z;
    float _645 = (_639 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_629.z - _639));
    float _648 = ((_599.z - _645) * _433) + _645;
    float _654 = ((((_629.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _379;
    float _655 = ((((_629.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _381;
    float _663 = ((sqrt(1.0 - (isnan(1.0) ? _3303 : (isnan(_3303) ? 1.0 : min(_3303, 1.0)))) - _388) * _433) + _388;
    float _667 = ((_654 * cbMtdParam._m0[14u].z) + _654) + ((_606 - _654) * _433);
    float _669 = ((_655 * cbMtdParam._m0[14u].z) + _655) + ((_607 - _655) * _433);
    vec4 _681 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _685 = cbMtdParam._m0[16u].w * _681.x;
    float _687 = _685 - (_685 * _433);
    float _707 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _402));
    float _708 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _403));
    float _715 = isnan(cbInstanceData._m0[8u].x) ? _707 : (isnan(_707) ? cbInstanceData._m0[8u].x : max(_707, cbInstanceData._m0[8u].x));
    float _716 = isnan(cbInstanceData._m0[8u].y) ? _708 : (isnan(_708) ? cbInstanceData._m0[8u].y : max(_708, cbInstanceData._m0[8u].y));
    vec4 _720 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _715 : (isnan(_715) ? cbInstanceData._m0[8u].z : min(_715, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _716 : (isnan(_716) ? cbInstanceData._m0[8u].w : min(_716, cbInstanceData._m0[8u].w))));
    float _753 = _543 - cbMtdParam._m0[15u].x;
    float _3334 = isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0));
    float _763 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3334 : (isnan(_3334) ? 1.0 : min(_3334, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3350 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _764 = isnan(1.0) ? _3350 : (isnan(_3350) ? 1.0 : min(_3350, 1.0));
    float _766 = _764 - (_764 * _433);
    float _770 = fma(_663, _244, fma(_669, _237, _667 * _223));
    float _773 = fma(_663, _245, fma(_669, _238, _667 * _224));
    float _776 = fma(_663, _246, fma(_669, _239, _667 * _225));
    float _780 = inversesqrt(dot(vec3(_770, _773, _776), vec3(_770, _773, _776)));
    float _781 = _780 * _770;
    float _782 = _780 * _773;
    float _783 = _780 * _776;
    float _3361 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0));
    float _784 = isnan(1.0) ? _3361 : (isnan(_3361) ? 1.0 : min(_3361, 1.0));
    float _3372 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _785 = isnan(1.0) ? _3372 : (isnan(_3372) ? 1.0 : min(_3372, 1.0));
    float _786 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    float _3388 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0));
    float _3399 = isnan(0.0) ? _586 : (isnan(_586) ? 0.0 : max(_586, 0.0));
    float _3410 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
    float _803 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _808 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _810 = _808.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _965 = sqrt(((_303 * _303) + (_304 * _304)) + (_305 * _305));
        float _971 = (cbMatDynParam._m0[5u].x * _965) + cbMatDynParam._m0[5u].y;
        float _3421 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
        float _972 = isnan(1.0) ? _3421 : (isnan(_3421) ? 1.0 : min(_3421, 1.0));
        float _976 = (cbMatDynParam._m0[5u].z * _965) + cbMatDynParam._m0[5u].w;
        float _3432 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3432 : (isnan(_3432) ? 1.0 : min(_3432, 1.0))) - _972)) + _972) < ((_810 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _820 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _821 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _839 = fma(_783, cbSceneParam._m0[5u].z, fma(_782, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _781));
    float _842 = fma(_783, cbSceneParam._m0[6u].z, fma(_782, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _781));
    float _845 = fma(_783, cbSceneParam._m0[7u].z, fma(_782, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _781));
    uint _858 = _311 + 9u;
    uint _859 = _858 + uint(cbMatDynParam._m0[0u].w);
    float _865 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3388 : (isnan(_3388) ? 1.0 : min(_3388, 1.0)))) * cbInstanceData._m0[_859].x;
    float _866 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3399 : (isnan(_3399) ? 1.0 : min(_3399, 1.0)))) * cbInstanceData._m0[_859].y;
    float _867 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3410 : (isnan(_3410) ? 1.0 : min(_3410, 1.0)))) * cbInstanceData._m0[_859].z;
    float _3443 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    float _868 = isnan(1.0) ? _3443 : (isnan(_3443) ? 1.0 : min(_3443, 1.0));
    float _3454 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
    float _869 = isnan(1.0) ? _3454 : (isnan(_3454) ? 1.0 : min(_3454, 1.0));
    float _3465 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    float _870 = isnan(1.0) ? _3465 : (isnan(_3465) ? 1.0 : min(_3465, 1.0));
    vec4 _878 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _820, cbSceneParam._m0[86u].y * _821));
    float _881 = _878.x * TEXCOORD_5.w;
    float _882 = dot(vec3(_781, _782, _783), vec3(_540, _541, _542));
    float _885 = _882 * 2.0;
    float _889 = (_885 * _781) - _540;
    float _890 = (_885 * _782) - _541;
    float _891 = (_885 * _783) - _542;
    float _892 = dot(vec3(_540, _541, _542), vec3(_781, _782, _783));
    float _895 = abs(_892);
    float _3476 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
    float _896 = isnan(1.0) ? _3476 : (isnan(_3476) ? 1.0 : min(_3476, 1.0));
    float _902 = sqrt(_785);
    float _914 = exp2((_902 * 5.0) * log2(1.0 - (_896 * 0.999000012874603271484375))) / (4.0 - (_902 * 3.0));
    float _946 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _950 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _954 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1285;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    float _1295;
    float _1296;
    float _1297;
    float _1298;
    float _1299;
    float _1300;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1010 = fma(_954, cbModelParam._m0[26u].z, fma(_950, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _946));
        float _1014 = fma(_954, cbModelParam._m0[27u].z, fma(_950, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _946));
        float _1018 = fma(_954, cbModelParam._m0[28u].z, fma(_950, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _946));
        float _1043 = _946 + _781;
        float _1044 = _950 + _782;
        float _1045 = _954 + _783;
        float _1055 = fma(_1045, cbModelParam._m0[26u].z, fma(_1044, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1043)) - _1010;
        float _1056 = fma(_1045, cbModelParam._m0[27u].z, fma(_1044, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1043)) - _1014;
        float _1057 = fma(_1045, cbModelParam._m0[28u].z, fma(_1044, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1043)) - _1018;
        float _1061 = inversesqrt(dot(vec3(_1055, _1056, _1057), vec3(_1055, _1056, _1057)));
        float _1074 = ((_1061 * _1055) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1010 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1075 = ((_1061 * _1056) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1014 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1076 = ((_1061 * _1057) / cbModelParam._m0[34u].z) + ((((((_1018 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1079 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1074, _1075, _1076), 0.0);
        vec4 _1086 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1074, _1075, _1076), 0.0);
        vec4 _1093 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1074, _1075, _1076), 0.0);
        vec4 _1100 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1074, _1075, _1076), 0.0);
        float _1113 = exp2((_1079.w + (-0.5)) * 20.0) * 2.0;
        float _1114 = _1113 * (_1079.x + (-0.5));
        float _1115 = _1113 * (_1079.y + (-0.5));
        float _1116 = _1113 * (_1079.z + (-0.5));
        float _1123 = exp2((_1086.w + (-0.5)) * 20.0) * 2.0;
        float _1124 = _1123 * (_1086.x + (-0.5));
        float _1125 = _1123 * (_1086.y + (-0.5));
        float _1126 = _1123 * (_1086.z + (-0.5));
        float _1133 = exp2((_1093.w + (-0.5)) * 20.0) * 2.0;
        float _1134 = _1133 * (_1093.x + (-0.5));
        float _1135 = _1133 * (_1093.y + (-0.5));
        float _1136 = _1133 * (_1093.z + (-0.5));
        float _1143 = exp2((_1100.w + (-0.5)) * 20.0) * 2.0;
        float _1144 = _1143 * (_1100.x + (-0.5));
        float _1145 = _1143 * (_1100.y + (-0.5));
        float _1146 = _1143 * (_1100.z + (-0.5));
        float _1147 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1148 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
        float _1149 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1150 = _1114 * 0.5;
        float _1151 = _1124 * 0.5;
        float _1152 = _1134 * 0.5;
        float _1153 = dot(vec3(_1150, _1151, _1152), vec3(_1150, _1151, _1152));
        float _1158 = (_1153 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1153);
        float _1167 = (dot(vec3(_781, _782, _783), vec3(_1158 * _1150, _1158 * _1151, _1158 * _1152)) + 1.0) * 0.5;
        float _3502 = isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0));
        float _1177 = sqrt(((_1151 * _1151) + (_1150 * _1150)) + (_1152 * _1152)) / (_1147 + 9.9999997473787516355514526367188e-06);
        float _3513 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
        float _1178 = isnan(1.0) ? _3513 : (isnan(_3513) ? 1.0 : min(_3513, 1.0));
        float _1179 = _1178 * 2.0;
        float _1183 = (1.0 - _1178) / (_1178 + 1.0);
        float _3524 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1184 = isnan(1.0) ? _3524 : (isnan(_3524) ? 1.0 : min(_3524, 1.0));
        float _1193 = ((((1.0 - _1184) * (_1179 + 2.0)) * exp2(log2(isnan(1.0) ? _3502 : (isnan(_3502) ? 1.0 : min(_3502, 1.0))) * (_1179 + 1.0))) + _1184) * _1147;
        float _1194 = _1115 * 0.5;
        float _1195 = _1125 * 0.5;
        float _1196 = _1135 * 0.5;
        float _1197 = dot(vec3(_1194, _1195, _1196), vec3(_1194, _1195, _1196));
        float _1202 = (_1197 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1197);
        float _1210 = (dot(vec3(_781, _782, _783), vec3(_1202 * _1194, _1202 * _1195, _1202 * _1196)) + 1.0) * 0.5;
        float _3535 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
        float _1219 = sqrt(((_1195 * _1195) + (_1194 * _1194)) + (_1196 * _1196)) / (_1148 + 9.9999997473787516355514526367188e-06);
        float _3546 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
        float _1220 = isnan(1.0) ? _3546 : (isnan(_3546) ? 1.0 : min(_3546, 1.0));
        float _1221 = _1220 * 2.0;
        float _1225 = (1.0 - _1220) / (_1220 + 1.0);
        float _3557 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
        float _1226 = isnan(1.0) ? _3557 : (isnan(_3557) ? 1.0 : min(_3557, 1.0));
        float _1235 = ((((1.0 - _1226) * (_1221 + 2.0)) * exp2(log2(isnan(1.0) ? _3535 : (isnan(_3535) ? 1.0 : min(_3535, 1.0))) * (_1221 + 1.0))) + _1226) * _1148;
        float _1236 = _1116 * 0.5;
        float _1237 = _1126 * 0.5;
        float _1238 = _1136 * 0.5;
        float _1239 = dot(vec3(_1236, _1237, _1238), vec3(_1236, _1237, _1238));
        float _1244 = (_1239 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1239);
        float _1252 = (dot(vec3(_781, _782, _783), vec3(_1244 * _1236, _1244 * _1237, _1244 * _1238)) + 1.0) * 0.5;
        float _3568 = isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0));
        float _1261 = sqrt(((_1237 * _1237) + (_1236 * _1236)) + (_1238 * _1238)) / (_1149 + 9.9999997473787516355514526367188e-06);
        float _3579 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
        float _1262 = isnan(1.0) ? _3579 : (isnan(_3579) ? 1.0 : min(_3579, 1.0));
        float _1263 = _1262 * 2.0;
        float _1267 = (1.0 - _1262) / (_1262 + 1.0);
        float _3590 = isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0));
        float _1268 = isnan(1.0) ? _3590 : (isnan(_3590) ? 1.0 : min(_3590, 1.0));
        float _1277 = ((((1.0 - _1268) * (_1263 + 2.0)) * exp2(log2(isnan(1.0) ? _3568 : (isnan(_3568) ? 1.0 : min(_3568, 1.0))) * (_1263 + 1.0))) + _1268) * _1149;
        _1285 = _1116;
        _1287 = _1115;
        _1288 = _1114;
        _1289 = _1126;
        _1290 = _1125;
        _1291 = _1124;
        _1292 = _1136;
        _1293 = _1135;
        _1294 = _1134;
        _1295 = _1149;
        _1296 = _1148;
        _1297 = _1147;
        _1298 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0)));
        _1299 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0)));
        _1300 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0)));
    }
    else
    {
        _1285 = _1286;
        _1287 = _1286;
        _1288 = _1286;
        _1289 = _1286;
        _1290 = _1286;
        _1291 = _1286;
        _1292 = _1286;
        _1293 = _1286;
        _1294 = _1286;
        _1295 = _1286;
        _1296 = _1286;
        _1297 = _1286;
        _1298 = 0.0;
        _1299 = 0.0;
        _1300 = 0.0;
    }
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1329 = fma(_954, cbModelParam._m0[30u].z, fma(_950, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _946));
        float _1333 = fma(_954, cbModelParam._m0[31u].z, fma(_950, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _946));
        float _1337 = fma(_954, cbModelParam._m0[32u].z, fma(_950, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _946));
        float _1360 = _946 + _781;
        float _1361 = _950 + _782;
        float _1362 = _954 + _783;
        float _1372 = fma(_1362, cbModelParam._m0[30u].z, fma(_1361, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1360)) - _1329;
        float _1373 = fma(_1362, cbModelParam._m0[31u].z, fma(_1361, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1360)) - _1333;
        float _1374 = fma(_1362, cbModelParam._m0[32u].z, fma(_1361, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1360)) - _1337;
        float _1378 = inversesqrt(dot(vec3(_1372, _1373, _1374), vec3(_1372, _1373, _1374)));
        float _1391 = ((_1378 * _1372) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1329 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1392 = ((_1378 * _1373) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1333 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1393 = ((_1378 * _1374) / cbModelParam._m0[35u].z) + ((((((_1337 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1395 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1391, _1392, _1393), 0.0);
        vec4 _1402 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1391, _1392, _1393), 0.0);
        vec4 _1409 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1391, _1392, _1393), 0.0);
        vec4 _1416 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1391, _1392, _1393), 0.0);
        float _1428 = exp2((_1395.w + (-0.5)) * 20.0) * 2.0;
        float _1429 = _1428 * (_1395.x + (-0.5));
        float _1430 = _1428 * (_1395.y + (-0.5));
        float _1431 = _1428 * (_1395.z + (-0.5));
        float _1438 = exp2((_1402.w + (-0.5)) * 20.0) * 2.0;
        float _1439 = _1438 * (_1402.x + (-0.5));
        float _1440 = _1438 * (_1402.y + (-0.5));
        float _1441 = _1438 * (_1402.z + (-0.5));
        float _1448 = exp2((_1409.w + (-0.5)) * 20.0) * 2.0;
        float _1449 = _1448 * (_1409.x + (-0.5));
        float _1450 = _1448 * (_1409.y + (-0.5));
        float _1451 = _1448 * (_1409.z + (-0.5));
        float _1458 = exp2((_1416.w + (-0.5)) * 20.0) * 2.0;
        float _1459 = _1458 * (_1416.x + (-0.5));
        float _1460 = _1458 * (_1416.y + (-0.5));
        float _1461 = _1458 * (_1416.z + (-0.5));
        float _1462 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1463 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1464 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1465 = _1429 * 0.5;
        float _1466 = _1439 * 0.5;
        float _1467 = _1449 * 0.5;
        float _1468 = dot(vec3(_1465, _1466, _1467), vec3(_1465, _1466, _1467));
        float _1473 = (_1468 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1468);
        float _1481 = (dot(vec3(_781, _782, _783), vec3(_1473 * _1465, _1473 * _1466, _1473 * _1467)) + 1.0) * 0.5;
        float _3631 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1490 = sqrt(((_1466 * _1466) + (_1465 * _1465)) + (_1467 * _1467)) / (_1462 + 9.9999997473787516355514526367188e-06);
        float _3642 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
        float _1491 = isnan(1.0) ? _3642 : (isnan(_3642) ? 1.0 : min(_3642, 1.0));
        float _1492 = _1491 * 2.0;
        float _1496 = (1.0 - _1491) / (_1491 + 1.0);
        float _3653 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1497 = isnan(1.0) ? _3653 : (isnan(_3653) ? 1.0 : min(_3653, 1.0));
        float _1506 = ((((1.0 - _1497) * (_1492 + 2.0)) * exp2(log2(isnan(1.0) ? _3631 : (isnan(_3631) ? 1.0 : min(_3631, 1.0))) * (_1492 + 1.0))) + _1497) * _1462;
        float _1507 = _1430 * 0.5;
        float _1508 = _1440 * 0.5;
        float _1509 = _1450 * 0.5;
        float _1510 = dot(vec3(_1507, _1508, _1509), vec3(_1507, _1508, _1509));
        float _1515 = (_1510 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1510);
        float _1523 = (dot(vec3(_781, _782, _783), vec3(_1515 * _1507, _1515 * _1508, _1515 * _1509)) + 1.0) * 0.5;
        float _3664 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1532 = sqrt(((_1508 * _1508) + (_1507 * _1507)) + (_1509 * _1509)) / (_1463 + 9.9999997473787516355514526367188e-06);
        float _3675 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
        float _1533 = isnan(1.0) ? _3675 : (isnan(_3675) ? 1.0 : min(_3675, 1.0));
        float _1534 = _1533 * 2.0;
        float _1538 = (1.0 - _1533) / (_1533 + 1.0);
        float _3686 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1539 = isnan(1.0) ? _3686 : (isnan(_3686) ? 1.0 : min(_3686, 1.0));
        float _1548 = ((((1.0 - _1539) * (_1534 + 2.0)) * exp2(log2(isnan(1.0) ? _3664 : (isnan(_3664) ? 1.0 : min(_3664, 1.0))) * (_1534 + 1.0))) + _1539) * _1463;
        float _1549 = _1431 * 0.5;
        float _1550 = _1441 * 0.5;
        float _1551 = _1451 * 0.5;
        float _1552 = dot(vec3(_1549, _1550, _1551), vec3(_1549, _1550, _1551));
        float _1557 = (_1552 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1552);
        float _1565 = (dot(vec3(_781, _782, _783), vec3(_1557 * _1549, _1557 * _1550, _1557 * _1551)) + 1.0) * 0.5;
        float _3697 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
        float _1574 = sqrt(((_1550 * _1550) + (_1549 * _1549)) + (_1551 * _1551)) / (_1464 + 9.9999997473787516355514526367188e-06);
        float _3708 = isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0));
        float _1575 = isnan(1.0) ? _3708 : (isnan(_3708) ? 1.0 : min(_3708, 1.0));
        float _1576 = _1575 * 2.0;
        float _1580 = (1.0 - _1575) / (_1575 + 1.0);
        float _3719 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
        float _1581 = isnan(1.0) ? _3719 : (isnan(_3719) ? 1.0 : min(_3719, 1.0));
        float _1590 = ((((1.0 - _1581) * (_1576 + 2.0)) * exp2(log2(isnan(1.0) ? _3697 : (isnan(_3697) ? 1.0 : min(_3697, 1.0))) * (_1576 + 1.0))) + _1581) * _1464;
        _1598 = _1431;
        _1599 = _1430;
        _1600 = _1429;
        _1601 = _1441;
        _1602 = _1440;
        _1603 = _1439;
        _1604 = _1451;
        _1605 = _1450;
        _1606 = _1449;
        _1607 = _1464;
        _1608 = _1463;
        _1609 = _1462;
        _1610 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0)));
        _1611 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0)));
        _1612 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0)));
    }
    else
    {
        _1598 = _1286;
        _1599 = _1286;
        _1600 = _1286;
        _1601 = _1286;
        _1602 = _1286;
        _1603 = _1286;
        _1604 = _1286;
        _1605 = _1286;
        _1606 = _1286;
        _1607 = _1286;
        _1608 = _1286;
        _1609 = _1286;
        _1610 = 0.0;
        _1611 = 0.0;
        _1612 = 0.0;
    }
    float _1622 = (cbModelParam._m0[1u].x * (_1610 - _1298)) + _1298;
    float _1623 = (cbModelParam._m0[1u].x * (_1611 - _1299)) + _1299;
    float _1624 = (cbModelParam._m0[1u].x * (_1612 - _1300)) + _1300;
    float _1645 = fma(_1624, cbSceneParam._m0[89u].z, fma(_1623, cbSceneParam._m0[89u].y, _1622 * cbSceneParam._m0[89u].x));
    float _1648 = fma(_1624, cbSceneParam._m0[90u].z, fma(_1623, cbSceneParam._m0[90u].y, _1622 * cbSceneParam._m0[90u].x));
    float _1651 = fma(_1624, cbSceneParam._m0[91u].z, fma(_1623, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1622));
    float _1666 = _889 * 0.5;
    float _1667 = _890 * 0.5;
    float _1668 = _891 * 0.5;
    float _1669 = dot(vec4(_1666, _1667, _1668, 1.0), vec4(_1600, _1603, _1606, _1609));
    float _1672 = dot(vec4(_1666, _1667, _1668, 1.0), vec4(_1599, _1602, _1605, _1608));
    float _1675 = dot(vec4(_1666, _1667, _1668, 1.0), vec4(_1598, _1601, _1604, _1607));
    float _1709;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1682 = dot(vec4(_1666, _1667, _1668, 1.0), vec4(_1285, _1289, _1292, _1295));
        float _1686 = dot(vec4(_1666, _1667, _1668, 1.0), vec4(_1287, _1290, _1293, _1296));
        float _1690 = dot(vec4(_1666, _1667, _1668, 1.0), vec4(_1288, _1291, _1294, _1297));
        float _1697 = dot(vec4(cbModelParam._m0[39u]), vec4(_1666, _1667, _1668, 1.0));
        _1709 = dot(vec3(isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0)), isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0)), isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1697) ? 0.0 : (isnan(0.0) ? _1697 : max(0.0, _1697))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1709 = 1.0;
    }
    float _1720;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1711 = dot(vec4(cbModelParam._m0[40u]), vec4(_1666, _1667, _1668, 1.0));
        _1720 = dot(vec3(isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0)), isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0)), isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1711) ? 0.0 : (isnan(0.0) ? _1711 : max(0.0, _1711))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1720 = 1.0;
    }
    float _1724 = (_1720 * cbModelParam._m0[1u].x) + (_1709 * (1.0 - cbModelParam._m0[1u].x));
    float _1734 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _785);
    float _1735 = isnan(_1734) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1734 : min(cbModelParam._m0[25u].z, _1734));
    float _1815;
    float _1817;
    float _1819;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1782 = fma(_954, cbModelParam._m0[13u].z, fma(_950, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _946)) + cbModelParam._m0[13u].w;
        float _1786 = fma(_954, cbModelParam._m0[14u].z, fma(_950, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _946)) + cbModelParam._m0[14u].w;
        float _1790 = fma(_954, cbModelParam._m0[15u].z, fma(_950, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _946)) + cbModelParam._m0[15u].w;
        float _1793 = fma(_891, cbModelParam._m0[13u].z, fma(_890, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _889));
        float _1796 = fma(_891, cbModelParam._m0[14u].z, fma(_890, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _889));
        float _1799 = fma(_891, cbModelParam._m0[15u].z, fma(_890, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _889));
        float _1827;
        if (_1793 > 0.0)
        {
            _1827 = abs((1.0 - _1782) / _1793);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1793 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1782 + 1.0) / _1793);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1827 = frontier_phi_19_17_ladder;
        }
        float _2019;
        if (_1796 > 0.0)
        {
            _2019 = abs((1.0 - _1786) / _1796);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1796 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1786 + 1.0) / _1796);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2019 = frontier_phi_28_24_ladder;
        }
        float _2257;
        if (_1799 > 0.0)
        {
            _2257 = abs((1.0 - _1790) / _1799);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1799 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1790 + 1.0) / _1799);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2257 = frontier_phi_39_35_ladder;
        }
        float _2259 = isnan(_2019) ? _1827 : (isnan(_1827) ? _2019 : min(_1827, _2019));
        float _2260 = isnan(_2257) ? _2259 : (isnan(_2259) ? _2257 : min(_2259, _2257));
        float _2264 = (_2260 * _1793) + _1782;
        float _2265 = (_2260 * _1796) + _1786;
        float _2266 = (_2260 * _1799) + _1790;
        float _2267 = _2260 * 9.9999997473787516355514526367188e-05;
        float _2269 = (-1.0) - _2267;
        float _2271 = _2267 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2266 > _2271) || ((_2266 < _2269) || ((_2265 > _2271) || ((_2265 < _2269) || ((_2264 < _2269) || (_2264 > _2271))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2416 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2266, cbModelParam._m0[9u].z, fma(_2265, cbModelParam._m0[9u].y, _2264 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2266, cbModelParam._m0[10u].z, fma(_2265, cbModelParam._m0[10u].y, _2264 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2266, cbModelParam._m0[11u].z, fma(_2265, cbModelParam._m0[11u].y, _2264 * cbModelParam._m0[11u].x))), _1735);
            frontier_phi_18_39_ladder = _2416.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2416.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2416.x * cbModelParam._m0[1u].y;
        }
        _1815 = frontier_phi_18_39_ladder_2;
        _1817 = frontier_phi_18_39_ladder_1;
        _1819 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1803 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_889, _890, _891), _1735);
        _1815 = _1803.x * cbModelParam._m0[1u].y;
        _1817 = _1803.y * cbModelParam._m0[1u].y;
        _1819 = _1803.z * cbModelParam._m0[1u].y;
    }
    float _1823 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _785);
    float _1824 = isnan(_1823) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1823 : min(cbModelParam._m0[25u].w, _1823));
    float _1915;
    float _1917;
    float _1919;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1879 = fma(_954, cbModelParam._m0[21u].z, fma(_950, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _946)) + cbModelParam._m0[21u].w;
        float _1883 = fma(_954, cbModelParam._m0[22u].z, fma(_950, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _946)) + cbModelParam._m0[22u].w;
        float _1887 = fma(_954, cbModelParam._m0[23u].z, fma(_950, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _946)) + cbModelParam._m0[23u].w;
        float _1890 = fma(_891, cbModelParam._m0[21u].z, fma(_890, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _889));
        float _1893 = fma(_891, cbModelParam._m0[22u].z, fma(_890, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _889));
        float _1896 = fma(_891, cbModelParam._m0[23u].z, fma(_890, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _889));
        float _2024;
        if (_1890 > 0.0)
        {
            _2024 = abs((1.0 - _1879) / _1890);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1890 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1879 + 1.0) / _1890);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2024 = frontier_phi_30_26_ladder;
        }
        float _2284;
        if (_1893 > 0.0)
        {
            _2284 = abs((1.0 - _1883) / _1893);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1893 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1883 + 1.0) / _1893);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2284 = frontier_phi_41_37_ladder;
        }
        float _2591;
        if (_1896 > 0.0)
        {
            _2591 = abs((1.0 - _1887) / _1896);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1896 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1887 + 1.0) / _1896);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2591 = frontier_phi_52_47_ladder;
        }
        float _2593 = isnan(_2284) ? _2024 : (isnan(_2024) ? _2284 : min(_2024, _2284));
        float _2594 = isnan(_2591) ? _2593 : (isnan(_2593) ? _2591 : min(_2593, _2591));
        float _2598 = (_2594 * _1890) + _1879;
        float _2599 = (_2594 * _1893) + _1883;
        float _2600 = (_2594 * _1896) + _1887;
        float _2601 = _2594 * 9.9999997473787516355514526367188e-05;
        float _2602 = (-1.0) - _2601;
        float _2604 = _2601 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2600 > _2604) || ((_2600 < _2602) || ((_2599 > _2604) || ((_2599 < _2602) || ((_2598 < _2602) || (_2598 > _2604))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2781 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2600, cbModelParam._m0[17u].z, fma(_2599, cbModelParam._m0[17u].y, _2598 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2600, cbModelParam._m0[18u].z, fma(_2599, cbModelParam._m0[18u].y, _2598 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2600, cbModelParam._m0[19u].z, fma(_2599, cbModelParam._m0[19u].y, _2598 * cbModelParam._m0[19u].x))), _1824);
            frontier_phi_27_52_ladder = _2781.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2781.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2781.y * cbModelParam._m0[1u].z;
        }
        _1915 = frontier_phi_27_52_ladder_1;
        _1917 = frontier_phi_27_52_ladder_2;
        _1919 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1899 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_889, _890, _891), _1824);
        _1915 = _1899.x * cbModelParam._m0[1u].z;
        _1917 = _1899.y * cbModelParam._m0[1u].z;
        _1919 = _1899.z * cbModelParam._m0[1u].z;
    }
    float _1931 = ((((1.0 - _914) * ((_902 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_914 * _902)) * _881;
    float _1932 = _1931 * ((cbModelParam._m0[1u].w * (_1915 - _1815)) + _1815);
    float _1933 = _1931 * ((cbModelParam._m0[1u].w * (_1917 - _1817)) + _1817);
    float _1934 = _1931 * ((cbModelParam._m0[1u].w * (_1919 - _1819)) + _1819);
    float _1937 = fma(_1934, cbSceneParam._m0[89u].z, fma(_1933, cbSceneParam._m0[89u].y, _1932 * cbSceneParam._m0[89u].x));
    float _1940 = fma(_1934, cbSceneParam._m0[90u].z, fma(_1933, cbSceneParam._m0[90u].y, _1932 * cbSceneParam._m0[90u].x));
    float _1943 = fma(_1934, cbSceneParam._m0[91u].z, fma(_1933, cbSceneParam._m0[91u].y, _1932 * cbSceneParam._m0[91u].x));
    vec4 _1951 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_820, _821));
    float _1953 = _1951.w;
    float _1965 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1953);
    float _1966 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1953);
    float _1967 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1953);
    uvec4 _1971 = floatBitsToUint(cbInstanceData._m0[_311 + 5u]);
    uint _1973 = _1971.x * 14u;
    uint _1974 = _1973 + 13u;
    float _1979 = _881 + (-1.0);
    float _1982 = (cbLight._m0[_1974].x * _1979) + 1.0;
    float _1983 = (cbLight._m0[_1974].y * _1979) + 1.0;
    uint _1985 = _1973 + 4u;
    float _1996 = dot(vec3(cbLight._m0[_1973].xyz), vec3(_781, _782, _783));
    float _1999 = isnan(1.0) ? _1982 : (isnan(_1982) ? 1.0 : min(_1982, 1.0));
    float _2000 = cbLight._m0[_1985].x * _1965;
    float _2001 = cbLight._m0[_1985].y * _1966;
    float _2002 = cbLight._m0[_1985].z * _1967;
    uint _2003 = _1973 + 5u;
    uint _2009 = _1973 | 1u;
    float _2015 = dot(vec3(cbLight._m0[_2009].xyz), vec3(_781, _782, _783));
    float _2018 = isnan(1.0) ? _1983 : (isnan(_1983) ? 1.0 : min(_1983, 1.0));
    float _2083;
    float _2084;
    float _2085;
    if (_786 == 0.0)
    {
        float _3855 = isnan(0.0) ? _1996 : (isnan(_1996) ? 0.0 : max(_1996, 0.0));
        float _3866 = isnan(0.0) ? _2015 : (isnan(_2015) ? 0.0 : max(_2015, 0.0));
        float _2037 = (isnan(1.0) ? _3855 : (isnan(_3855) ? 1.0 : min(_3855, 1.0))) * 0.3183098733425140380859375;
        float _2039 = (isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0))) * 0.3183098733425140380859375;
        _2083 = ((cbLight._m0[_2003].x * _2018) * _2039) + ((_2000 * _1999) * _2037);
        _2084 = ((_2018 * cbLight._m0[_2003].y) * _2039) + ((_2001 * _1999) * _2037);
        _2085 = ((_2018 * cbLight._m0[_2003].z) * _2039) + ((_2002 * _1999) * _2037);
    }
    else
    {
        float _2049 = _1996 + _786;
        float _2052 = (_786 * 2.0) + 1.0;
        float _2053 = (isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0))) / _2052;
        float _2060 = _2015 + _786;
        float _2062 = (isnan(0.0) ? _2060 : (isnan(_2060) ? 0.0 : max(_2060, 0.0))) / _2052;
        _2083 = (((_2062 * cbLight._m0[_2003].x) * _2018) + ((_2000 * _2053) * _1999)) * 0.3183098733425140380859375;
        _2084 = (((_2062 * cbLight._m0[_2003].y) * _2018) + ((_2001 * _2053) * _1999)) * 0.3183098733425140380859375;
        _2085 = (((_2062 * cbLight._m0[_2003].z) * _2018) + ((_2002 * _2053) * _1999)) * 0.3183098733425140380859375;
    }
    uint _2089 = _1973 + 8u;
    float _2105 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1973].w)) * _785) * 0.949999988079071044921875);
    float _2106 = _2105 * _2105;
    float _2107 = cbLight._m0[_1973].x + _540;
    float _2108 = cbLight._m0[_1973].y + _541;
    float _2109 = cbLight._m0[_1973].z + _542;
    float _2113 = inversesqrt(dot(vec3(_2107, _2108, _2109), vec3(_2107, _2108, _2109)));
    float _2114 = _2113 * _2107;
    float _2115 = _2113 * _2108;
    float _2116 = _2113 * _2109;
    float _2117 = dot(vec3(_781, _782, _783), vec3(cbLight._m0[_1973].xyz));
    float _3887 = isnan(0.0) ? _2117 : (isnan(_2117) ? 0.0 : max(_2117, 0.0));
    float _2120 = isnan(1.0) ? _3887 : (isnan(_3887) ? 1.0 : min(_3887, 1.0));
    float _3898 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    float _2121 = isnan(1.0) ? _3898 : (isnan(_3898) ? 1.0 : min(_3898, 1.0));
    float _2122 = dot(vec3(_781, _782, _783), vec3(_2114, _2115, _2116));
    float _3909 = isnan(0.0) ? _2122 : (isnan(_2122) ? 0.0 : max(_2122, 0.0));
    float _2125 = isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0));
    float _2126 = dot(vec3(cbLight._m0[_1973].xyz), vec3(_2114, _2115, _2116));
    float _3920 = isnan(0.0) ? _2126 : (isnan(_2126) ? 0.0 : max(_2126, 0.0));
    float _2130 = _2106 * _2106;
    float _2134 = ((_2125 * _2125) * (_2130 + (-1.0))) + 1.0;
    float _2145 = (exp2(log2(1.0 - (isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2146 = 1.0 - _2106;
    float _2157 = (0.5 / (((_2121 * ((_2120 * _2146) + _2106)) + 9.9999999392252902907785028219223e-09) + (((_2121 * _2146) + _2106) * _2120))) * _2120;
    float _3931 = isnan(0.0) ? _2157 : (isnan(_2157) ? 0.0 : max(_2157, 0.0));
    float _2159 = (isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0))) * (_2130 / ((_2134 * _2134) * 3.141590118408203125));
    uint _2175 = _1973 + 9u;
    float _2189 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2009].w)) * _785) * 0.949999988079071044921875);
    float _2190 = _2189 * _2189;
    float _2191 = cbLight._m0[_2009].x + _540;
    float _2192 = cbLight._m0[_2009].y + _541;
    float _2193 = cbLight._m0[_2009].z + _542;
    float _2197 = inversesqrt(dot(vec3(_2191, _2192, _2193), vec3(_2191, _2192, _2193)));
    float _2198 = _2197 * _2191;
    float _2199 = _2197 * _2192;
    float _2200 = _2197 * _2193;
    float _2201 = dot(vec3(_781, _782, _783), vec3(cbLight._m0[_2009].xyz));
    float _3942 = isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : max(_2201, 0.0));
    float _2204 = isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0));
    float _2205 = dot(vec3(_781, _782, _783), vec3(_2198, _2199, _2200));
    float _3953 = isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0));
    float _2208 = isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0));
    float _2209 = dot(vec3(cbLight._m0[_2009].xyz), vec3(_2198, _2199, _2200));
    float _3964 = isnan(0.0) ? _2209 : (isnan(_2209) ? 0.0 : max(_2209, 0.0));
    float _2213 = _2190 * _2190;
    float _2217 = ((_2208 * _2208) * (_2213 + (-1.0))) + 1.0;
    float _2226 = (exp2(log2(1.0 - (isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2227 = 1.0 - _2190;
    float _2237 = (0.5 / (((_2121 * ((_2204 * _2227) + _2190)) + 9.9999999392252902907785028219223e-09) + (((_2121 * _2227) + _2190) * _2204))) * _2204;
    float _3975 = isnan(0.0) ? _2237 : (isnan(_2237) ? 0.0 : max(_2237, 0.0));
    float _2239 = (isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0))) * (_2213 / ((_2217 * _2217) * 3.141590118408203125));
    float _2249 = (((_2226 * cbLight._m0[_2175].x) * _2239) * _2018) + ((((cbLight._m0[_2089].x * _1965) * _2145) * _2159) * _1999);
    float _2250 = (((_2226 * cbLight._m0[_2175].y) * _2239) * _2018) + ((((cbLight._m0[_2089].y * _1966) * _2145) * _2159) * _1999);
    float _2251 = (((_2226 * cbLight._m0[_2175].z) * _2239) * _2018) + ((((cbLight._m0[_2089].z * _1967) * _2145) * _2159) * _1999);
    float _2387;
    float _2389;
    float _2391;
    float _2393;
    float _2395;
    float _2397;
    if (_1971.y == 0u)
    {
        float _2328 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2329 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2328;
        float _2330 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2328;
        float _2331 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2328;
        uvec4 _2343 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2344 = _2343.x;
        uint _2355 = uint((float(_2343.y) * floor(float(uint(cbSceneParam._m0[85u].y * _821) / _2344))) + floor(float(uint(cbSceneParam._m0[85u].x * _820) / _2344)));
        float _2365 = (log2(_2331 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2366 = isnan(0.0) ? _2365 : (isnan(_2365) ? 0.0 : max(_2365, 0.0));
        uint _2369 = uint(isnan(14.0) ? _2366 : (isnan(_2366) ? 14.0 : min(_2366, 14.0)));
        uint _2376 = _2343.z;
        float _2425;
        float _2427;
        float _2429;
        float _2431;
        float _2433;
        float _2435;
        if (((((1u << ((_2376 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2369 << 2u) + (_2355 << 6u)) >> 2u)).x) == 0u) || ((_2376 & 240u) == 0u))
        {
            _2425 = 0.0;
            _2427 = 0.0;
            _2429 = 0.0;
            _2431 = 0.0;
            _2433 = 0.0;
            _2435 = 0.0;
        }
        else
        {
            float _2426;
            float _2428;
            float _2430;
            float _2432;
            float _2434;
            float _2436;
            float _2617 = 0.0;
            float _2618 = 0.0;
            float _2619 = 0.0;
            float _2620 = 0.0;
            float _2621 = 0.0;
            float _2622 = 0.0;
            uint _2623 = 0u;
            uint _2632;
            bool _2633;
            for (;;)
            {
                _2632 = texelFetch(g_lightClassification, int((((_2369 << 5u) + (_2355 << 9u)) + (_2623 << 2u)) >> 2u)).x;
                _2633 = _2632 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2633)
                {
                    frontier_phi_58_pred = _2617;
                    frontier_phi_58_pred_1 = _2622;
                    frontier_phi_58_pred_2 = _2621;
                    frontier_phi_58_pred_3 = _2620;
                    frontier_phi_58_pred_4 = _2619;
                    frontier_phi_58_pred_5 = _2618;
                }
                else
                {
                    float _2854;
                    float _2855;
                    float _2856;
                    float _2857;
                    float _2858;
                    float _2859;
                    uint _2860;
                    _2854 = _2617;
                    _2855 = _2618;
                    _2856 = _2619;
                    _2857 = _2620;
                    _2858 = _2621;
                    _2859 = _2622;
                    _2860 = _2632;
                    float _2786;
                    float _2787;
                    float _2788;
                    float _2789;
                    float _2790;
                    float _2791;
                    for (;;)
                    {
                        uint _2864 = uint(findLSB(_2860)) + (_2623 << 5u);
                        uint _2861 = (_2860 + 4294967295u) & _2860;
                        uint _2866 = _2864 * 48u;
                        vec4 _2880 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2866)).x, texelFetch(g_PointLightRenderingBuffer, int(_2866 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2866 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2866 + 3u)).x));
                        uint _2886 = (_2864 * 48u) + 4u;
                        vec4 _2899 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2886)).x, texelFetch(g_PointLightRenderingBuffer, int(_2886 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2886 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2886 + 3u)).x));
                        float _2900 = _2899.x;
                        float _2901 = _2899.y;
                        float _2902 = _2899.z;
                        uint _2905 = (_2864 * 48u) + 8u;
                        vec3 _2916 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2905)).x, texelFetch(g_PointLightRenderingBuffer, int(_2905 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2905 + 2u)).x));
                        uint _2921 = (_2864 * 48u) + 12u;
                        vec2 _2929 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2921)).x, texelFetch(g_PointLightRenderingBuffer, int(_2921 + 1u)).x));
                        float _2935 = inversesqrt(dot(vec3(_2329, _2330, _2331), vec3(_2329, _2330, _2331)));
                        float _2936 = _2935 * _2329;
                        float _2937 = _2935 * _2330;
                        float _2938 = _2935 * _2331;
                        float _2939 = _2880.x - _2329;
                        float _2940 = _2880.y - _2330;
                        float _2941 = _2880.z - _2331;
                        float _2942 = dot(vec3(_2939, _2940, _2941), vec3(_2939, _2940, _2941));
                        float _2945 = inversesqrt(_2942);
                        float _2946 = _2945 * _2939;
                        float _2947 = _2945 * _2940;
                        float _2948 = _2945 * _2941;
                        float _2949 = dot(vec3(_839, _842, _845), vec3(_2946, _2947, _2948));
                        float _2954 = 1.0 - (_2942 * _2880.w);
                        float _3996 = isnan(0.0) ? _2954 : (isnan(_2954) ? 0.0 : max(_2954, 0.0));
                        float _2955 = isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0));
                        float _2956 = sqrt(_2942) * _2899.w;
                        float _2959 = 1.39999997615814208984375 / (_2956 + 1.39999997615814208984375);
                        float _2960 = _2959 * _2959;
                        float _2961 = 1.0 - _2960;
                        float _2963 = (_2961 * _2961) * _786;
                        float _2966 = ((_2961 * _2949) + _2960) + _2963;
                        float _2971 = _2956 * _2956;
                        float _2976 = ((isnan(0.0) ? _2966 : (isnan(_2966) ? 0.0 : max(_2966, 0.0))) * _2955) / (((_2963 * 2.0) + 1.0) * ((_2971 * 0.699999988079071044921875) + 1.0));
                        float _2980 = dot(vec3(_2946, _2947, _2948), vec3(_2936, _2937, _2938));
                        float _4012 = isnan(0.0) ? _2980 : (isnan(_2980) ? 0.0 : max(_2980, 0.0));
                        float _2987 = dot(vec3((-0.0) - _2936, (-0.0) - _2937, (-0.0) - _2938), vec3(_839, _842, _845)) + 1.0;
                        float _2989 = (isnan(0.0) ? _2987 : (isnan(_2987) ? 0.0 : max(_2987, 0.0))) * 0.5;
                        float _2996 = ((_2989 * _2989) * _2929.x) * exp2((_2929.y * 32.0) * log2(isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0))));
                        float _2998 = _786 / (_786 + 1.0);
                        float _3014 = (-0.0) - _2329;
                        float _3015 = (-0.0) - _2330;
                        float _3016 = (-0.0) - _2331;
                        float _3020 = inversesqrt(dot(vec3(_3014, _3015, _3016), vec3(_3014, _3015, _3016)));
                        float _3021 = _3020 * _3014;
                        float _3022 = _3020 * _3015;
                        float _3023 = _3020 * _3016;
                        float _3031 = exp2(log2(1.0 / ((_2971 * 3.5) + 5.0)) * 0.25);
                        float _3032 = 1.0 - _902;
                        float _3039 = sqrt(1.0 - ((1.0 - (_3032 * _3032)) * (1.0 - (_3031 * _3031))));
                        float _3040 = _3039 * _3039;
                        float _3041 = _3040 * _3040;
                        float _3042 = _3021 + _2946;
                        float _3043 = _3022 + _2947;
                        float _3044 = _3023 + _2948;
                        float _3048 = inversesqrt(dot(vec3(_3042, _3043, _3044), vec3(_3042, _3043, _3044)));
                        float _3052 = dot(vec3(_839, _842, _845), vec3(_3021, _3022, _3023));
                        float _4028 = isnan(0.0) ? _3052 : (isnan(_3052) ? 0.0 : max(_3052, 0.0));
                        float _3055 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
                        float _3056 = dot(vec3(_839, _842, _845), vec3(_3048 * _3042, _3048 * _3043, _3048 * _3044));
                        float _4039 = isnan(0.0) ? _3056 : (isnan(_3056) ? 0.0 : max(_3056, 0.0));
                        float _3059 = isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0));
                        float _3063 = ((_3059 * _3059) * (_3041 + (-1.0))) + 1.0;
                        float _3064 = _2959 * _3040;
                        float _3065 = _3064 * _3064;
                        float _3068 = ((1.0 - _3065) * _2949) + _3065;
                        float _4050 = isnan(0.0) ? _3068 : (isnan(_3068) ? 0.0 : max(_3068, 0.0));
                        float _3069 = isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0));
                        float _3070 = 1.0 - _3040;
                        float _3080 = (0.5 / (((_3069 * ((_3055 * _3070) + _3040)) + 9.9999999392252902907785028219223e-09) + (((_3069 * _3070) + _3040) * _3055))) * _3069;
                        float _4061 = isnan(0.0) ? _3080 : (isnan(_3080) ? 0.0 : max(_3080, 0.0));
                        float _3091 = (((_3041 * 3.1415927410125732421875) * (isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0)))) / ((_3063 * _3063) * ((_2971 * 2.1991131305694580078125) + 3.141590118408203125))) * _2955;
                        _2789 = (((((_2900 * 0.3183098733425140380859375) * _2998) * _2996) + _2900) * _2976) + _2857;
                        _2790 = (((((_2901 * 0.3183098733425140380859375) * _2998) * _2996) + _2901) * _2976) + _2858;
                        _2791 = (((((_2902 * 0.3183098733425140380859375) * _2998) * _2996) + _2902) * _2976) + _2859;
                        _2786 = (_3091 * _2916.x) + _2854;
                        _2787 = (_3091 * _2916.y) + _2855;
                        _2788 = (_3091 * _2916.z) + _2856;
                        if (_2861 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2854 = _2786;
                            _2855 = _2787;
                            _2856 = _2788;
                            _2857 = _2789;
                            _2858 = _2790;
                            _2859 = _2791;
                            _2860 = _2861;
                        }
                    }
                    frontier_phi_58_pred = _2786;
                    frontier_phi_58_pred_1 = _2791;
                    frontier_phi_58_pred_2 = _2790;
                    frontier_phi_58_pred_3 = _2789;
                    frontier_phi_58_pred_4 = _2788;
                    frontier_phi_58_pred_5 = _2787;
                }
                _2426 = frontier_phi_58_pred;
                _2436 = frontier_phi_58_pred_1;
                _2434 = frontier_phi_58_pred_2;
                _2432 = frontier_phi_58_pred_3;
                _2430 = frontier_phi_58_pred_4;
                _2428 = frontier_phi_58_pred_5;
                uint _2624 = _2623 + 1u;
                if (_2624 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2617 = _2426;
                    _2618 = _2428;
                    _2619 = _2430;
                    _2620 = _2432;
                    _2621 = _2434;
                    _2622 = _2436;
                    _2623 = _2624;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2425 = _2426;
            _2427 = _2428;
            _2429 = _2430;
            _2431 = _2432;
            _2433 = _2434;
            _2435 = _2436;
        }
        float _2440 = isnan(1.0) ? _881 : (isnan(_881) ? 1.0 : min(_881, 1.0));
        _2387 = (_2440 * _2431) + _2083;
        _2389 = (_2440 * _2433) + _2084;
        _2391 = (_2440 * _2435) + _2085;
        _2393 = ((_2425 * 0.039999999105930328369140625) * _2440) + _2249;
        _2395 = ((_2427 * 0.039999999105930328369140625) * _2440) + _2250;
        _2397 = ((_2429 * 0.039999999105930328369140625) * _2440) + _2251;
    }
    else
    {
        _2387 = _2083;
        _2389 = _2084;
        _2391 = _2085;
        _2393 = _2249;
        _2395 = _2250;
        _2397 = _2251;
    }
    float _2514;
    float _2515;
    float _2516;
    if (_786 > 0.0)
    {
        uint _2447 = _1973 + 4u;
        float _2453 = (-0.0) - _540;
        float _2454 = (-0.0) - _541;
        float _2455 = (-0.0) - _542;
        float _2456 = dot(vec3(cbLight._m0[_1973].xyz), vec3(_2453, _2454, _2455));
        float _4077 = isnan(0.0) ? _2456 : (isnan(_2456) ? 0.0 : max(_2456, 0.0));
        float _2460 = _892 + 1.0;
        float _2462 = (isnan(0.0) ? _2460 : (isnan(_2460) ? 0.0 : max(_2460, 0.0))) * 0.5;
        float _2467 = _2462 * _2462;
        float _2468 = _2467 * exp2(log2(isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0))) * 32.0);
        float _2470 = _786 / (_786 + 1.0);
        float _2471 = isnan(_1982) ? 1.0 : (isnan(1.0) ? _1982 : min(1.0, _1982));
        uint _2484 = _1973 + 5u;
        float _2490 = dot(vec3(cbLight._m0[_2009].xyz), vec3(_2453, _2454, _2455));
        float _4098 = isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : max(_2490, 0.0));
        float _2497 = _2467 * exp2(log2(isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0))) * 32.0);
        float _2498 = isnan(_1983) ? 1.0 : (isnan(1.0) ? _1983 : min(1.0, _1983));
        _2514 = ((((_2497 * cbLight._m0[_2484].x) * _2470) * _2498) + ((((cbLight._m0[_2447].x * _1965) * _2468) * _2470) * _2471)) * 0.3183098733425140380859375;
        _2515 = ((((_2497 * cbLight._m0[_2484].y) * _2470) * _2498) + ((((cbLight._m0[_2447].y * _1966) * _2468) * _2470) * _2471)) * 0.3183098733425140380859375;
        _2516 = ((((_2497 * cbLight._m0[_2484].z) * _2470) * _2498) + ((((cbLight._m0[_2447].z * _1967) * _2468) * _2470) * _2471)) * 0.3183098733425140380859375;
    }
    else
    {
        _2514 = 0.0;
        _2515 = 0.0;
        _2516 = 0.0;
    }
    float _4114 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    float _4125 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    float _4136 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _4147 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    float _2531 = (isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0))) * ((_2387 + ((isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0))) * _881)) + _2514);
    float _2532 = (isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0))) * ((_2389 + ((isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0))) * _881)) + _2515);
    float _2533 = (isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0))) * ((_2391 + ((isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0))) * _881)) + _2516);
    float _2537 = 0.959999978542327880859375 - (exp2(log2(1.0 - _896) * 5.0) * 0.959999978542327880859375);
    float _2548 = (_2531 + ((_2393 + ((isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0))) * _1724)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _720.x) * _2537) - _2531) * _766);
    float _2550 = (_2532 + ((_2395 + ((isnan(0.0) ? _1940 : (isnan(_1940) ? 0.0 : max(_1940, 0.0))) * _1724)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _720.y) * _2537) - _2532) * _766);
    float _2552 = (_2533 + ((_2397 + ((isnan(0.0) ? _1943 : (isnan(_1943) ? 0.0 : max(_1943, 0.0))) * _1724)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _720.z) * _2537) - _2533) * _766);
    float _2557 = cbInstanceData._m0[_311 + 6u].w * (isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0)));
    float _2562 = _820 / cbSceneParam._m0[86u].x;
    float _2563 = _821 / cbSceneParam._m0[86u].y;
    vec4 _2577 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2562, _2563, (log2((isnan(cbSceneParam._m0[77u].w) ? _803 : (isnan(_803) ? cbSceneParam._m0[77u].w : min(_803, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2579 = _2577.x;
    float _2580 = _2577.y;
    float _2581 = _2577.z;
    float _2582 = _2577.w;
    float _2675;
    float _2677;
    float _2679;
    float _2681;
    if (_803 > cbSceneParam._m0[78u].w)
    {
        float _2638 = isnan(_803) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _803 : min(cbSceneParam._m0[80u].w, _803));
        float _2639 = _2638 / _803;
        float _2650 = _2639 * _303;
        float _2651 = _304 * _2639;
        float _2652 = (-0.0) - _2651;
        float _2653 = _2639 * _305;
        float _2655 = (cbSceneParam._m0[77u].w * _2652) / _2638;
        float _2656 = _2655 + cbSceneParam._m0[79u].w;
        float _2657 = cbSceneParam._m0[79u].w - _2651;
        float _2663 = sqrt(((_2650 * _2650) + (_2651 * _2651)) + (_2653 * _2653));
        float _2666 = (1.0 - (cbSceneParam._m0[77u].w / _2638)) * _2663;
        float _2671 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2673 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3096;
        if (abs((_2652 - _2655) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3096 = ((((_2656 > 0.0) ? exp2(_2671 * _2656) : (2.0 - exp2(_2673 * _2656))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2666;
        }
        else
        {
            float _2811 = 1.0 / cbSceneParam._m0[80u].x;
            float _2812 = isnan(_2657) ? _2656 : (isnan(_2656) ? _2657 : max(_2656, _2657));
            float _2813 = isnan(_2657) ? _2656 : (isnan(_2656) ? _2657 : min(_2656, _2657));
            float _2822 = isnan(0.0) ? _2812 : (isnan(_2812) ? 0.0 : min(_2812, 0.0));
            float _2823 = isnan(0.0) ? _2813 : (isnan(_2813) ? 0.0 : min(_2813, 0.0));
            _3096 = ((abs(_2663 / _2652) * cbSceneParam._m0[80u].y) * ((((_2822 - _2823) * 2.0) - ((exp2(_2671 * (isnan(0.0) ? _2812 : (isnan(_2812) ? 0.0 : max(_2812, 0.0)))) - exp2(_2671 * (isnan(0.0) ? _2813 : (isnan(_2813) ? 0.0 : max(_2813, 0.0))))) * _2811)) - ((exp2(_2673 * _2822) - exp2(_2673 * _2823)) * _2811))) + (_2666 * cbSceneParam._m0[80u].z);
        }
        vec4 _3098 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2562, _2563, 1.0), 0.0);
        float _3107 = exp2((_3096 * (-1.44269502162933349609375)) * (1.0 - _3098.w));
        float _3108 = log2(_3107);
        float _3124 = log2(_2582);
        _2675 = (exp2(_3124 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3108 * cbSceneParam._m0[78u].x)) * _3098.x) / cbSceneParam._m0[78u].x)) + _2579;
        _2677 = (exp2(_3124 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3108 * cbSceneParam._m0[78u].y)) * _3098.y) / cbSceneParam._m0[78u].y)) + _2580;
        _2679 = (exp2(_3124 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3108 * cbSceneParam._m0[78u].z)) * _3098.z) / cbSceneParam._m0[78u].z)) + _2581;
        _2681 = _3107 * _2582;
    }
    else
    {
        _2675 = _2579;
        _2677 = _2580;
        _2679 = _2581;
        _2681 = _2582;
    }
    bool _3134;
    float _2736;
    vec4 _2739;
    float _2741;
    vec4 _2743;
    float _2751;
    float _2752;
    float _2753;
    float _2754;
    bool _2764;
    for (;;)
    {
        bool _2693 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2694 = log2(_2681);
        float _2701 = exp2(_2694 * cbSceneParam._m0[78u].x) * _2548;
        float _2702 = exp2(_2694 * cbSceneParam._m0[78u].y) * _2550;
        float _2703 = exp2(_2694 * cbSceneParam._m0[78u].z) * _2552;
        vec4 _2711 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_820, _821));
        float _2713 = _2711.x;
        float _2734 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2713)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2713))) - _803) * cbMtdParam._m0[17u].y;
        float _4198 = isnan(0.0) ? _2734 : (isnan(_2734) ? 0.0 : max(_2734, 0.0));
        _2736 = _2557 * (isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0)));
        float _2737 = _810 + (-0.5);
        _2739 = cbMtdParam._m0[1u];
        _2741 = _2739.y * _2737;
        _2743 = cbMatDynParam._m0[0u];
        float _2750 = (roundEven(_2743.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2751 = _2750 * (_2693 ? _2701 : (_2701 + (cbSceneParam._m0[72u].w * _2675)));
        _2752 = _2750 * (_2693 ? _2702 : (_2702 + (cbSceneParam._m0[72u].w * _2677)));
        _2753 = _2750 * (_2693 ? _2703 : (_2703 + (cbSceneParam._m0[72u].w * _2679)));
        _2754 = _2737 * 0.999000012874603271484375;
        _2764 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2764)
        {
            if ((cbInstanceData._m0[_311 + 7u].x + _2754) < 0.5)
            {
                _3134 = true;
                break;
            }
        }
        uint _2846 = _858 + uint(_2743.w);
        if ((cbInstanceData._m0[_2846].w < 1.0) && ((cbInstanceData._m0[_2846].w + _2754) < 0.5))
        {
            _3134 = true;
            break;
        }
        if ((_2741 + _450) < _2739.x)
        {
            _3134 = true;
            break;
        }
        _3134 = false;
        break;
    }
    float _3139;
    if (_3134)
    {
        discard_state = true;
        _3139 = 0.0;
    }
    else
    {
        _3139 = _2736;
    }
    SV_Target.x = _2751;
    SV_Target.y = _2752;
    SV_Target.z = _2753;
    SV_Target.w = _3139;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2736;
    discard_exit();
}


