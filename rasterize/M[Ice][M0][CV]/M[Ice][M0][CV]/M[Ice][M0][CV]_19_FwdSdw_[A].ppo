#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1288;
float _3514;
float _3515;
float _3516;
float _3517;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _216 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _217 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _218 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _224 = inversesqrt(dot(vec3(_216, _217, _218), vec3(_216, _217, _218)));
    float _225 = _224 * _216;
    float _226 = _224 * _217;
    float _227 = _224 * _218;
    float _231 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _232 = _231 * NORMAL.x;
    float _233 = _231 * NORMAL.y;
    float _234 = _231 * NORMAL.z;
    float _238 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _239 = _238 * TANGENT.x;
    float _240 = _238 * TANGENT.y;
    float _241 = _238 * TANGENT.z;
    float _246;
    float _247;
    float _248;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _246 = (-0.0) - _232;
        _247 = (-0.0) - _233;
        _248 = (-0.0) - _234;
    }
    else
    {
        _246 = _232;
        _247 = _233;
        _248 = _234;
    }
    float _295 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _305 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _295);
    float _306 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _295);
    float _307 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _295);
    uint _313 = uint(roundEven(NORMAL.w)) * 13u;
    uint _318 = _313 + 1u;
    uint _322 = _313 + 2u;
    float _331 = sqrt(((cbInstanceData._m0[_318].x * cbInstanceData._m0[_318].x) + (cbInstanceData._m0[_313].x * cbInstanceData._m0[_313].x)) + (cbInstanceData._m0[_322].x * cbInstanceData._m0[_322].x));
    float _332 = _331 * TEXCOORD.z;
    float _333 = _331 * TEXCOORD.w;
    vec4 _346 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _332) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _333) + cbTextureTilingScale._m0[8u].w));
    vec4 _373 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _381 = (_373.x * 2.0) + (-1.0);
    float _383 = (_373.y * 2.0) + (-1.0);
    float _384 = dot(vec2(_381, _383), vec2(_381, _383));
    float _3526 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0));
    float _390 = sqrt(1.0 - (isnan(1.0) ? _3526 : (isnan(_3526) ? 1.0 : min(_3526, 1.0))));
    float _393 = fma(_390, _246, fma(_383, _239, _381 * _225));
    float _396 = fma(_390, _247, fma(_383, _240, _381 * _226));
    float _399 = fma(_390, _248, fma(_383, _241, _381 * _227));
    float _403 = inversesqrt(dot(vec3(_393, _396, _399), vec3(_393, _396, _399)));
    float _404 = _403 * _393;
    float _405 = _403 * _396;
    float _434 = (cbMtdParam._m0[17u].w + dot(vec4(_404, _405, _403 * _399, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _332) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _333) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3537 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _435 = isnan(1.0) ? _3537 : (isnan(_3537) ? 1.0 : min(_3537, 1.0));
    vec4 _447 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _452 = _447.w;
    float _464 = dot(vec3(_305, _306, _307), vec3(_225, _226, _227));
    float _467 = dot(vec3(_305, _306, _307), vec3(_239, _240, _241));
    float _470 = dot(vec3(_305, _306, _307), vec3(_246, _247, _248));
    float _476 = inversesqrt(dot(vec3(_464, _467, _470), vec3(_464, _467, _470)));
    float _498 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _518 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_464 * cbMtdParam._m0[14u].x) * _476) * _498) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_467 * cbMtdParam._m0[14u].x) * _476) * _498) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _541 = inversesqrt(dot(vec3(_305, _306, _307), vec3(_305, _306, _307)));
    float _542 = _541 * _305;
    float _543 = _541 * _306;
    float _544 = _541 * _307;
    float _545 = dot(vec4(_542, _543, _544, 0.0), vec4(_246, _247, _248, 0.0));
    float _548 = _545 - cbMtdParam._m0[15u].z;
    float _3548 = isnan(0.0) ? _548 : (isnan(_548) ? 0.0 : max(_548, 0.0));
    float _555 = exp2(log2(1.0 - (isnan(1.0) ? _3548 : (isnan(_3548) ? 1.0 : min(_3548, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _570 = ((((_447.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _518.x) * cbMtdParam._m0[9u].x) * ((_555 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _575 = ((((_447.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _518.y) * cbMtdParam._m0[9u].y) * ((_555 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _580 = ((((_447.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _518.z) * cbMtdParam._m0[9u].z) * ((_555 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _587 = (((_346.x * cbMtdParam._m0[10u].x) - _570) * _435) + _570;
    float _588 = (((_346.y * cbMtdParam._m0[10u].y) - _575) * _435) + _575;
    float _589 = (((_346.z * cbMtdParam._m0[10u].z) - _580) * _435) + _580;
    vec4 _601 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _332) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _333) + cbTextureTilingScale._m0[9u].w));
    float _608 = (_601.x * 2.0) + (-1.0);
    float _609 = (_601.y * 2.0) + (-1.0);
    float _610 = dot(vec2(_608, _609), vec2(_608, _609));
    float _3564 = isnan(0.0) ? _610 : (isnan(_610) ? 0.0 : max(_610, 0.0));
    vec4 _631 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _641 = cbMtdParam._m0[17u].z + _373.z;
    float _647 = (_641 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_631.z - _641));
    float _650 = ((_601.z - _647) * _435) + _647;
    float _656 = ((((_631.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _381;
    float _657 = ((((_631.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _383;
    float _665 = ((sqrt(1.0 - (isnan(1.0) ? _3564 : (isnan(_3564) ? 1.0 : min(_3564, 1.0)))) - _390) * _435) + _390;
    float _669 = ((_656 * cbMtdParam._m0[14u].z) + _656) + ((_608 - _656) * _435);
    float _671 = ((_657 * cbMtdParam._m0[14u].z) + _657) + ((_609 - _657) * _435);
    vec4 _683 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _687 = cbMtdParam._m0[16u].w * _683.x;
    float _689 = _687 - (_687 * _435);
    float _709 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _404));
    float _710 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _405));
    float _717 = isnan(cbInstanceData._m0[8u].x) ? _709 : (isnan(_709) ? cbInstanceData._m0[8u].x : max(_709, cbInstanceData._m0[8u].x));
    float _718 = isnan(cbInstanceData._m0[8u].y) ? _710 : (isnan(_710) ? cbInstanceData._m0[8u].y : max(_710, cbInstanceData._m0[8u].y));
    vec4 _722 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _717 : (isnan(_717) ? cbInstanceData._m0[8u].z : min(_717, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _718 : (isnan(_718) ? cbInstanceData._m0[8u].w : min(_718, cbInstanceData._m0[8u].w))));
    float _755 = _545 - cbMtdParam._m0[15u].x;
    float _3595 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    float _765 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3595 : (isnan(_3595) ? 1.0 : min(_3595, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3611 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
    float _766 = isnan(1.0) ? _3611 : (isnan(_3611) ? 1.0 : min(_3611, 1.0));
    float _768 = _766 - (_766 * _435);
    float _772 = fma(_665, _246, fma(_671, _239, _669 * _225));
    float _775 = fma(_665, _247, fma(_671, _240, _669 * _226));
    float _778 = fma(_665, _248, fma(_671, _241, _669 * _227));
    float _782 = inversesqrt(dot(vec3(_772, _775, _778), vec3(_772, _775, _778)));
    float _783 = _782 * _772;
    float _784 = _782 * _775;
    float _785 = _782 * _778;
    float _3622 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _786 = isnan(1.0) ? _3622 : (isnan(_3622) ? 1.0 : min(_3622, 1.0));
    float _3633 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
    float _787 = isnan(1.0) ? _3633 : (isnan(_3633) ? 1.0 : min(_3633, 1.0));
    float _788 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    float _3649 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
    float _3660 = isnan(0.0) ? _588 : (isnan(_588) ? 0.0 : max(_588, 0.0));
    float _3671 = isnan(0.0) ? _589 : (isnan(_589) ? 0.0 : max(_589, 0.0));
    float _805 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _810 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _812 = _810.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _967 = sqrt(((_305 * _305) + (_306 * _306)) + (_307 * _307));
        float _973 = (cbMatDynParam._m0[5u].x * _967) + cbMatDynParam._m0[5u].y;
        float _3682 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
        float _974 = isnan(1.0) ? _3682 : (isnan(_3682) ? 1.0 : min(_3682, 1.0));
        float _978 = (cbMatDynParam._m0[5u].z * _967) + cbMatDynParam._m0[5u].w;
        float _3693 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3693 : (isnan(_3693) ? 1.0 : min(_3693, 1.0))) - _974)) + _974) < ((_812 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _822 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _823 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _841 = fma(_785, cbSceneParam._m0[5u].z, fma(_784, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _783));
    float _844 = fma(_785, cbSceneParam._m0[6u].z, fma(_784, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _783));
    float _847 = fma(_785, cbSceneParam._m0[7u].z, fma(_784, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _783));
    uint _860 = _313 + 9u;
    uint _861 = _860 + uint(cbMatDynParam._m0[0u].w);
    float _867 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3649 : (isnan(_3649) ? 1.0 : min(_3649, 1.0)))) * cbInstanceData._m0[_861].x;
    float _868 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3660 : (isnan(_3660) ? 1.0 : min(_3660, 1.0)))) * cbInstanceData._m0[_861].y;
    float _869 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3671 : (isnan(_3671) ? 1.0 : min(_3671, 1.0)))) * cbInstanceData._m0[_861].z;
    float _3704 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    float _870 = isnan(1.0) ? _3704 : (isnan(_3704) ? 1.0 : min(_3704, 1.0));
    float _3715 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    float _871 = isnan(1.0) ? _3715 : (isnan(_3715) ? 1.0 : min(_3715, 1.0));
    float _3726 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    float _872 = isnan(1.0) ? _3726 : (isnan(_3726) ? 1.0 : min(_3726, 1.0));
    vec4 _880 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _822, cbSceneParam._m0[86u].y * _823));
    float _883 = _880.x * TEXCOORD_5.w;
    float _884 = dot(vec3(_783, _784, _785), vec3(_542, _543, _544));
    float _887 = _884 * 2.0;
    float _891 = (_887 * _783) - _542;
    float _892 = (_887 * _784) - _543;
    float _893 = (_887 * _785) - _544;
    float _894 = dot(vec3(_542, _543, _544), vec3(_783, _784, _785));
    float _897 = abs(_894);
    float _3737 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    float _898 = isnan(1.0) ? _3737 : (isnan(_3737) ? 1.0 : min(_3737, 1.0));
    float _904 = sqrt(_787);
    float _916 = exp2((_904 * 5.0) * log2(1.0 - (_898 * 0.999000012874603271484375))) / (4.0 - (_904 * 3.0));
    float _948 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _952 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _956 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1287;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    float _1295;
    float _1296;
    float _1297;
    float _1298;
    float _1299;
    float _1300;
    float _1301;
    float _1302;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1012 = fma(_956, cbModelParam._m0[26u].z, fma(_952, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _948));
        float _1016 = fma(_956, cbModelParam._m0[27u].z, fma(_952, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _948));
        float _1020 = fma(_956, cbModelParam._m0[28u].z, fma(_952, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _948));
        float _1045 = _948 + _783;
        float _1046 = _952 + _784;
        float _1047 = _956 + _785;
        float _1057 = fma(_1047, cbModelParam._m0[26u].z, fma(_1046, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1045)) - _1012;
        float _1058 = fma(_1047, cbModelParam._m0[27u].z, fma(_1046, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1045)) - _1016;
        float _1059 = fma(_1047, cbModelParam._m0[28u].z, fma(_1046, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1045)) - _1020;
        float _1063 = inversesqrt(dot(vec3(_1057, _1058, _1059), vec3(_1057, _1058, _1059)));
        float _1076 = ((_1063 * _1057) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1012 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1077 = ((_1063 * _1058) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1016 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1078 = ((_1063 * _1059) / cbModelParam._m0[34u].z) + ((((((_1020 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1081 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1076, _1077, _1078), 0.0);
        vec4 _1088 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1076, _1077, _1078), 0.0);
        vec4 _1095 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1076, _1077, _1078), 0.0);
        vec4 _1102 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1076, _1077, _1078), 0.0);
        float _1115 = exp2((_1081.w + (-0.5)) * 20.0) * 2.0;
        float _1116 = _1115 * (_1081.x + (-0.5));
        float _1117 = _1115 * (_1081.y + (-0.5));
        float _1118 = _1115 * (_1081.z + (-0.5));
        float _1125 = exp2((_1088.w + (-0.5)) * 20.0) * 2.0;
        float _1126 = _1125 * (_1088.x + (-0.5));
        float _1127 = _1125 * (_1088.y + (-0.5));
        float _1128 = _1125 * (_1088.z + (-0.5));
        float _1135 = exp2((_1095.w + (-0.5)) * 20.0) * 2.0;
        float _1136 = _1135 * (_1095.x + (-0.5));
        float _1137 = _1135 * (_1095.y + (-0.5));
        float _1138 = _1135 * (_1095.z + (-0.5));
        float _1145 = exp2((_1102.w + (-0.5)) * 20.0) * 2.0;
        float _1146 = _1145 * (_1102.x + (-0.5));
        float _1147 = _1145 * (_1102.y + (-0.5));
        float _1148 = _1145 * (_1102.z + (-0.5));
        float _1149 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1150 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
        float _1151 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1152 = _1116 * 0.5;
        float _1153 = _1126 * 0.5;
        float _1154 = _1136 * 0.5;
        float _1155 = dot(vec3(_1152, _1153, _1154), vec3(_1152, _1153, _1154));
        float _1160 = (_1155 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1155);
        float _1169 = (dot(vec3(_783, _784, _785), vec3(_1160 * _1152, _1160 * _1153, _1160 * _1154)) + 1.0) * 0.5;
        float _3763 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1179 = sqrt(((_1153 * _1153) + (_1152 * _1152)) + (_1154 * _1154)) / (_1149 + 9.9999997473787516355514526367188e-06);
        float _3774 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1180 = isnan(1.0) ? _3774 : (isnan(_3774) ? 1.0 : min(_3774, 1.0));
        float _1181 = _1180 * 2.0;
        float _1185 = (1.0 - _1180) / (_1180 + 1.0);
        float _3785 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1186 = isnan(1.0) ? _3785 : (isnan(_3785) ? 1.0 : min(_3785, 1.0));
        float _1195 = ((((1.0 - _1186) * (_1181 + 2.0)) * exp2(log2(isnan(1.0) ? _3763 : (isnan(_3763) ? 1.0 : min(_3763, 1.0))) * (_1181 + 1.0))) + _1186) * _1149;
        float _1196 = _1117 * 0.5;
        float _1197 = _1127 * 0.5;
        float _1198 = _1137 * 0.5;
        float _1199 = dot(vec3(_1196, _1197, _1198), vec3(_1196, _1197, _1198));
        float _1204 = (_1199 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1199);
        float _1212 = (dot(vec3(_783, _784, _785), vec3(_1204 * _1196, _1204 * _1197, _1204 * _1198)) + 1.0) * 0.5;
        float _3796 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
        float _1221 = sqrt(((_1197 * _1197) + (_1196 * _1196)) + (_1198 * _1198)) / (_1150 + 9.9999997473787516355514526367188e-06);
        float _3807 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1222 = isnan(1.0) ? _3807 : (isnan(_3807) ? 1.0 : min(_3807, 1.0));
        float _1223 = _1222 * 2.0;
        float _1227 = (1.0 - _1222) / (_1222 + 1.0);
        float _3818 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
        float _1228 = isnan(1.0) ? _3818 : (isnan(_3818) ? 1.0 : min(_3818, 1.0));
        float _1237 = ((((1.0 - _1228) * (_1223 + 2.0)) * exp2(log2(isnan(1.0) ? _3796 : (isnan(_3796) ? 1.0 : min(_3796, 1.0))) * (_1223 + 1.0))) + _1228) * _1150;
        float _1238 = _1118 * 0.5;
        float _1239 = _1128 * 0.5;
        float _1240 = _1138 * 0.5;
        float _1241 = dot(vec3(_1238, _1239, _1240), vec3(_1238, _1239, _1240));
        float _1246 = (_1241 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1241);
        float _1254 = (dot(vec3(_783, _784, _785), vec3(_1246 * _1238, _1246 * _1239, _1246 * _1240)) + 1.0) * 0.5;
        float _3829 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
        float _1263 = sqrt(((_1239 * _1239) + (_1238 * _1238)) + (_1240 * _1240)) / (_1151 + 9.9999997473787516355514526367188e-06);
        float _3840 = isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0));
        float _1264 = isnan(1.0) ? _3840 : (isnan(_3840) ? 1.0 : min(_3840, 1.0));
        float _1265 = _1264 * 2.0;
        float _1269 = (1.0 - _1264) / (_1264 + 1.0);
        float _3851 = isnan(0.0) ? _1269 : (isnan(_1269) ? 0.0 : max(_1269, 0.0));
        float _1270 = isnan(1.0) ? _3851 : (isnan(_3851) ? 1.0 : min(_3851, 1.0));
        float _1279 = ((((1.0 - _1270) * (_1265 + 2.0)) * exp2(log2(isnan(1.0) ? _3829 : (isnan(_3829) ? 1.0 : min(_3829, 1.0))) * (_1265 + 1.0))) + _1270) * _1151;
        _1287 = _1118;
        _1289 = _1117;
        _1290 = _1116;
        _1291 = _1128;
        _1292 = _1127;
        _1293 = _1126;
        _1294 = _1138;
        _1295 = _1137;
        _1296 = _1136;
        _1297 = _1151;
        _1298 = _1150;
        _1299 = _1149;
        _1300 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0)));
        _1301 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0)));
        _1302 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0)));
    }
    else
    {
        _1287 = _1288;
        _1289 = _1288;
        _1290 = _1288;
        _1291 = _1288;
        _1292 = _1288;
        _1293 = _1288;
        _1294 = _1288;
        _1295 = _1288;
        _1296 = _1288;
        _1297 = _1288;
        _1298 = _1288;
        _1299 = _1288;
        _1300 = 0.0;
        _1301 = 0.0;
        _1302 = 0.0;
    }
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1331 = fma(_956, cbModelParam._m0[30u].z, fma(_952, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _948));
        float _1335 = fma(_956, cbModelParam._m0[31u].z, fma(_952, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _948));
        float _1339 = fma(_956, cbModelParam._m0[32u].z, fma(_952, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _948));
        float _1362 = _948 + _783;
        float _1363 = _952 + _784;
        float _1364 = _956 + _785;
        float _1374 = fma(_1364, cbModelParam._m0[30u].z, fma(_1363, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1362)) - _1331;
        float _1375 = fma(_1364, cbModelParam._m0[31u].z, fma(_1363, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1362)) - _1335;
        float _1376 = fma(_1364, cbModelParam._m0[32u].z, fma(_1363, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1362)) - _1339;
        float _1380 = inversesqrt(dot(vec3(_1374, _1375, _1376), vec3(_1374, _1375, _1376)));
        float _1393 = ((_1380 * _1374) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1331 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1394 = ((_1380 * _1375) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1335 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1395 = ((_1380 * _1376) / cbModelParam._m0[35u].z) + ((((((_1339 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1397 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1393, _1394, _1395), 0.0);
        vec4 _1404 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1393, _1394, _1395), 0.0);
        vec4 _1411 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1393, _1394, _1395), 0.0);
        vec4 _1418 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1393, _1394, _1395), 0.0);
        float _1430 = exp2((_1397.w + (-0.5)) * 20.0) * 2.0;
        float _1431 = _1430 * (_1397.x + (-0.5));
        float _1432 = _1430 * (_1397.y + (-0.5));
        float _1433 = _1430 * (_1397.z + (-0.5));
        float _1440 = exp2((_1404.w + (-0.5)) * 20.0) * 2.0;
        float _1441 = _1440 * (_1404.x + (-0.5));
        float _1442 = _1440 * (_1404.y + (-0.5));
        float _1443 = _1440 * (_1404.z + (-0.5));
        float _1450 = exp2((_1411.w + (-0.5)) * 20.0) * 2.0;
        float _1451 = _1450 * (_1411.x + (-0.5));
        float _1452 = _1450 * (_1411.y + (-0.5));
        float _1453 = _1450 * (_1411.z + (-0.5));
        float _1460 = exp2((_1418.w + (-0.5)) * 20.0) * 2.0;
        float _1461 = _1460 * (_1418.x + (-0.5));
        float _1462 = _1460 * (_1418.y + (-0.5));
        float _1463 = _1460 * (_1418.z + (-0.5));
        float _1464 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1465 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
        float _1466 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
        float _1467 = _1431 * 0.5;
        float _1468 = _1441 * 0.5;
        float _1469 = _1451 * 0.5;
        float _1470 = dot(vec3(_1467, _1468, _1469), vec3(_1467, _1468, _1469));
        float _1475 = (_1470 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1470);
        float _1483 = (dot(vec3(_783, _784, _785), vec3(_1475 * _1467, _1475 * _1468, _1475 * _1469)) + 1.0) * 0.5;
        float _3892 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1492 = sqrt(((_1468 * _1468) + (_1467 * _1467)) + (_1469 * _1469)) / (_1464 + 9.9999997473787516355514526367188e-06);
        float _3903 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1493 = isnan(1.0) ? _3903 : (isnan(_3903) ? 1.0 : min(_3903, 1.0));
        float _1494 = _1493 * 2.0;
        float _1498 = (1.0 - _1493) / (_1493 + 1.0);
        float _3914 = isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0));
        float _1499 = isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0));
        float _1508 = ((((1.0 - _1499) * (_1494 + 2.0)) * exp2(log2(isnan(1.0) ? _3892 : (isnan(_3892) ? 1.0 : min(_3892, 1.0))) * (_1494 + 1.0))) + _1499) * _1464;
        float _1509 = _1432 * 0.5;
        float _1510 = _1442 * 0.5;
        float _1511 = _1452 * 0.5;
        float _1512 = dot(vec3(_1509, _1510, _1511), vec3(_1509, _1510, _1511));
        float _1517 = (_1512 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1512);
        float _1525 = (dot(vec3(_783, _784, _785), vec3(_1517 * _1509, _1517 * _1510, _1517 * _1511)) + 1.0) * 0.5;
        float _3925 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
        float _1534 = sqrt(((_1510 * _1510) + (_1509 * _1509)) + (_1511 * _1511)) / (_1465 + 9.9999997473787516355514526367188e-06);
        float _3936 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1535 = isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0));
        float _1536 = _1535 * 2.0;
        float _1540 = (1.0 - _1535) / (_1535 + 1.0);
        float _3947 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0));
        float _1541 = isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0));
        float _1550 = ((((1.0 - _1541) * (_1536 + 2.0)) * exp2(log2(isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0))) * (_1536 + 1.0))) + _1541) * _1465;
        float _1551 = _1433 * 0.5;
        float _1552 = _1443 * 0.5;
        float _1553 = _1453 * 0.5;
        float _1554 = dot(vec3(_1551, _1552, _1553), vec3(_1551, _1552, _1553));
        float _1559 = (_1554 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1554);
        float _1567 = (dot(vec3(_783, _784, _785), vec3(_1559 * _1551, _1559 * _1552, _1559 * _1553)) + 1.0) * 0.5;
        float _3958 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
        float _1576 = sqrt(((_1552 * _1552) + (_1551 * _1551)) + (_1553 * _1553)) / (_1466 + 9.9999997473787516355514526367188e-06);
        float _3969 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
        float _1577 = isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0));
        float _1578 = _1577 * 2.0;
        float _1582 = (1.0 - _1577) / (_1577 + 1.0);
        float _3980 = isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0));
        float _1583 = isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0));
        float _1592 = ((((1.0 - _1583) * (_1578 + 2.0)) * exp2(log2(isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0))) * (_1578 + 1.0))) + _1583) * _1466;
        _1600 = _1433;
        _1601 = _1432;
        _1602 = _1431;
        _1603 = _1443;
        _1604 = _1442;
        _1605 = _1441;
        _1606 = _1453;
        _1607 = _1452;
        _1608 = _1451;
        _1609 = _1466;
        _1610 = _1465;
        _1611 = _1464;
        _1612 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0)));
        _1613 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0)));
        _1614 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0)));
    }
    else
    {
        _1600 = _1288;
        _1601 = _1288;
        _1602 = _1288;
        _1603 = _1288;
        _1604 = _1288;
        _1605 = _1288;
        _1606 = _1288;
        _1607 = _1288;
        _1608 = _1288;
        _1609 = _1288;
        _1610 = _1288;
        _1611 = _1288;
        _1612 = 0.0;
        _1613 = 0.0;
        _1614 = 0.0;
    }
    float _1624 = (cbModelParam._m0[1u].x * (_1612 - _1300)) + _1300;
    float _1625 = (cbModelParam._m0[1u].x * (_1613 - _1301)) + _1301;
    float _1626 = (cbModelParam._m0[1u].x * (_1614 - _1302)) + _1302;
    float _1647 = fma(_1626, cbSceneParam._m0[89u].z, fma(_1625, cbSceneParam._m0[89u].y, _1624 * cbSceneParam._m0[89u].x));
    float _1650 = fma(_1626, cbSceneParam._m0[90u].z, fma(_1625, cbSceneParam._m0[90u].y, _1624 * cbSceneParam._m0[90u].x));
    float _1653 = fma(_1626, cbSceneParam._m0[91u].z, fma(_1625, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1624));
    float _1668 = _891 * 0.5;
    float _1669 = _892 * 0.5;
    float _1670 = _893 * 0.5;
    float _1671 = dot(vec4(_1668, _1669, _1670, 1.0), vec4(_1602, _1605, _1608, _1611));
    float _1674 = dot(vec4(_1668, _1669, _1670, 1.0), vec4(_1601, _1604, _1607, _1610));
    float _1677 = dot(vec4(_1668, _1669, _1670, 1.0), vec4(_1600, _1603, _1606, _1609));
    float _1711;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1684 = dot(vec4(_1668, _1669, _1670, 1.0), vec4(_1287, _1291, _1294, _1297));
        float _1688 = dot(vec4(_1668, _1669, _1670, 1.0), vec4(_1289, _1292, _1295, _1298));
        float _1692 = dot(vec4(_1668, _1669, _1670, 1.0), vec4(_1290, _1293, _1296, _1299));
        float _1699 = dot(vec4(cbModelParam._m0[39u]), vec4(_1668, _1669, _1670, 1.0));
        _1711 = dot(vec3(isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0)), isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0)), isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1699) ? 0.0 : (isnan(0.0) ? _1699 : max(0.0, _1699))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1711 = 1.0;
    }
    float _1722;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1713 = dot(vec4(cbModelParam._m0[40u]), vec4(_1668, _1669, _1670, 1.0));
        _1722 = dot(vec3(isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0)), isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0)), isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1713) ? 0.0 : (isnan(0.0) ? _1713 : max(0.0, _1713))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1722 = 1.0;
    }
    float _1726 = (_1722 * cbModelParam._m0[1u].x) + (_1711 * (1.0 - cbModelParam._m0[1u].x));
    float _1736 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _787);
    float _1737 = isnan(_1736) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1736 : min(cbModelParam._m0[25u].z, _1736));
    float _1817;
    float _1819;
    float _1821;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1784 = fma(_956, cbModelParam._m0[13u].z, fma(_952, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _948)) + cbModelParam._m0[13u].w;
        float _1788 = fma(_956, cbModelParam._m0[14u].z, fma(_952, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _948)) + cbModelParam._m0[14u].w;
        float _1792 = fma(_956, cbModelParam._m0[15u].z, fma(_952, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _948)) + cbModelParam._m0[15u].w;
        float _1795 = fma(_893, cbModelParam._m0[13u].z, fma(_892, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _891));
        float _1798 = fma(_893, cbModelParam._m0[14u].z, fma(_892, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _891));
        float _1801 = fma(_893, cbModelParam._m0[15u].z, fma(_892, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _891));
        float _1829;
        if (_1795 > 0.0)
        {
            _1829 = abs((1.0 - _1784) / _1795);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1795 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1784 + 1.0) / _1795);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1829 = frontier_phi_19_17_ladder;
        }
        float _2000;
        if (_1798 > 0.0)
        {
            _2000 = abs((1.0 - _1788) / _1798);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1798 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1788 + 1.0) / _1798);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2000 = frontier_phi_28_24_ladder;
        }
        float _2264;
        if (_1801 > 0.0)
        {
            _2264 = abs((1.0 - _1792) / _1801);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1801 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1792 + 1.0) / _1801);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2264 = frontier_phi_40_35_ladder;
        }
        float _2266 = isnan(_2000) ? _1829 : (isnan(_1829) ? _2000 : min(_1829, _2000));
        float _2267 = isnan(_2264) ? _2266 : (isnan(_2266) ? _2264 : min(_2266, _2264));
        float _2271 = (_2267 * _1795) + _1784;
        float _2272 = (_2267 * _1798) + _1788;
        float _2273 = (_2267 * _1801) + _1792;
        float _2274 = _2267 * 9.9999997473787516355514526367188e-05;
        float _2276 = (-1.0) - _2274;
        float _2278 = _2274 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2273 > _2278) || ((_2273 < _2276) || ((_2272 > _2278) || ((_2272 < _2276) || ((_2271 < _2276) || (_2271 > _2278))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2427 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2273, cbModelParam._m0[9u].z, fma(_2272, cbModelParam._m0[9u].y, _2271 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2273, cbModelParam._m0[10u].z, fma(_2272, cbModelParam._m0[10u].y, _2271 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2273, cbModelParam._m0[11u].z, fma(_2272, cbModelParam._m0[11u].y, _2271 * cbModelParam._m0[11u].x))), _1737);
            frontier_phi_18_40_ladder = _2427.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2427.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2427.x * cbModelParam._m0[1u].y;
        }
        _1817 = frontier_phi_18_40_ladder_2;
        _1819 = frontier_phi_18_40_ladder_1;
        _1821 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1805 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_891, _892, _893), _1737);
        _1817 = _1805.x * cbModelParam._m0[1u].y;
        _1819 = _1805.y * cbModelParam._m0[1u].y;
        _1821 = _1805.z * cbModelParam._m0[1u].y;
    }
    float _1825 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _787);
    float _1826 = isnan(_1825) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1825 : min(cbModelParam._m0[25u].w, _1825));
    float _1917;
    float _1919;
    float _1921;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1881 = fma(_956, cbModelParam._m0[21u].z, fma(_952, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _948)) + cbModelParam._m0[21u].w;
        float _1885 = fma(_956, cbModelParam._m0[22u].z, fma(_952, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _948)) + cbModelParam._m0[22u].w;
        float _1889 = fma(_956, cbModelParam._m0[23u].z, fma(_952, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _948)) + cbModelParam._m0[23u].w;
        float _1892 = fma(_893, cbModelParam._m0[21u].z, fma(_892, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _891));
        float _1895 = fma(_893, cbModelParam._m0[22u].z, fma(_892, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _891));
        float _1898 = fma(_893, cbModelParam._m0[23u].z, fma(_892, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _891));
        float _2005;
        if (_1892 > 0.0)
        {
            _2005 = abs((1.0 - _1881) / _1892);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1892 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1881 + 1.0) / _1892);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2005 = frontier_phi_30_26_ladder;
        }
        float _2291;
        if (_1895 > 0.0)
        {
            _2291 = abs((1.0 - _1885) / _1895);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1895 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1885 + 1.0) / _1895);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2291 = frontier_phi_42_37_ladder;
        }
        float _2610;
        if (_1898 > 0.0)
        {
            _2610 = abs((1.0 - _1889) / _1898);
        }
        else
        {
            float frontier_phi_51_49_ladder;
            if (_1898 < 0.0)
            {
                frontier_phi_51_49_ladder = abs((_1889 + 1.0) / _1898);
            }
            else
            {
                frontier_phi_51_49_ladder = 5000.0;
            }
            _2610 = frontier_phi_51_49_ladder;
        }
        float _2612 = isnan(_2291) ? _2005 : (isnan(_2005) ? _2291 : min(_2005, _2291));
        float _2613 = isnan(_2610) ? _2612 : (isnan(_2612) ? _2610 : min(_2612, _2610));
        float _2617 = (_2613 * _1892) + _1881;
        float _2618 = (_2613 * _1895) + _1885;
        float _2619 = (_2613 * _1898) + _1889;
        float _2620 = _2613 * 9.9999997473787516355514526367188e-05;
        float _2621 = (-1.0) - _2620;
        float _2623 = _2620 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_2619 > _2623) || ((_2619 < _2621) || ((_2618 > _2623) || ((_2618 < _2621) || ((_2617 < _2621) || (_2617 > _2623))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2720 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2619, cbModelParam._m0[17u].z, fma(_2618, cbModelParam._m0[17u].y, _2617 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2619, cbModelParam._m0[18u].z, fma(_2618, cbModelParam._m0[18u].y, _2617 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2619, cbModelParam._m0[19u].z, fma(_2618, cbModelParam._m0[19u].y, _2617 * cbModelParam._m0[19u].x))), _1826);
            frontier_phi_27_51_ladder = _2720.x * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _2720.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _2720.y * cbModelParam._m0[1u].z;
        }
        _1917 = frontier_phi_27_51_ladder;
        _1919 = frontier_phi_27_51_ladder_2;
        _1921 = frontier_phi_27_51_ladder_1;
    }
    else
    {
        vec4 _1901 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_891, _892, _893), _1826);
        _1917 = _1901.x * cbModelParam._m0[1u].z;
        _1919 = _1901.y * cbModelParam._m0[1u].z;
        _1921 = _1901.z * cbModelParam._m0[1u].z;
    }
    float _1933 = ((((1.0 - _916) * ((_904 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_916 * _904)) * _883;
    float _1934 = _1933 * ((cbModelParam._m0[1u].w * (_1917 - _1817)) + _1817);
    float _1935 = _1933 * ((cbModelParam._m0[1u].w * (_1919 - _1819)) + _1819);
    float _1936 = _1933 * ((cbModelParam._m0[1u].w * (_1921 - _1821)) + _1821);
    float _1939 = fma(_1936, cbSceneParam._m0[89u].z, fma(_1935, cbSceneParam._m0[89u].y, _1934 * cbSceneParam._m0[89u].x));
    float _1942 = fma(_1936, cbSceneParam._m0[90u].z, fma(_1935, cbSceneParam._m0[90u].y, _1934 * cbSceneParam._m0[90u].x));
    float _1945 = fma(_1936, cbSceneParam._m0[91u].z, fma(_1935, cbSceneParam._m0[91u].y, _1934 * cbSceneParam._m0[91u].x));
    float _1979 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1983 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1987 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1991 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1992 = _1979 / _1991;
    float _1993 = _1983 / _1991;
    float _1994 = _1987 / _1991;
    float _2141;
    float _2142;
    float _2143;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2021 = ((uint(_1994 > cbSceneParam._m0[59u].y) + uint(_1994 > cbSceneParam._m0[59u].x)) + uint(_1994 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2022 = _2021 + 43u;
        uint _2030 = _2021 + 44u;
        uint _2038 = _2021 + 45u;
        uint _2046 = _2021 + 46u;
        float _2057 = fma(_1991, cbSceneParam._m0[_2022].w, fma(_1987, cbSceneParam._m0[_2022].z, fma(_1983, cbSceneParam._m0[_2022].y, _1979 * cbSceneParam._m0[_2022].x)));
        float _2061 = fma(_1991, cbSceneParam._m0[_2030].w, fma(_1987, cbSceneParam._m0[_2030].z, fma(_1983, cbSceneParam._m0[_2030].y, _1979 * cbSceneParam._m0[_2030].x)));
        float _2069 = fma(_1991, cbSceneParam._m0[_2046].w, fma(_1987, cbSceneParam._m0[_2046].z, fma(_1983, cbSceneParam._m0[_2046].y, _1979 * cbSceneParam._m0[_2046].x)));
        float _2074 = cbSceneParam._m0[33u].z * _2069;
        float _2076 = cbSceneParam._m0[33u].w * _2069;
        float _2079 = fma(_1991, cbSceneParam._m0[_2038].w, fma(_1987, cbSceneParam._m0[_2038].z, fma(_1983, cbSceneParam._m0[_2038].y, _1979 * cbSceneParam._m0[_2038].x))) / _2069;
        float _2127 = (cbSceneParam._m0[33u].x - sqrt(((_1993 * _1993) + (_1992 * _1992)) + (_1994 * _1994))) * cbSceneParam._m0[33u].y;
        float _4106 = isnan(0.0) ? _2127 : (isnan(_2127) ? 0.0 : max(_2127, 0.0));
        float _2134 = (isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2074 + _2057) / _2069, (_2076 + _2061) / _2069), _2079), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2076 + _2057) / _2069, (_2061 - _2074) / _2069), _2079), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2057 - _2074) / _2069, (_2061 - _2076) / _2069), _2079), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2057 - _2076) / _2069, (_2074 + _2061) / _2069), _2079), 0.0)).x), vec4(0.25)));
        _2141 = 1.0 - (_2134 * cbSceneParam._m0[34u].x);
        _2142 = 1.0 - (_2134 * cbSceneParam._m0[34u].y);
        _2143 = 1.0 - (_2134 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2141 = 1.0;
        _2142 = 1.0;
        _2143 = 1.0;
    }
    float _2207;
    float _2209;
    float _2211;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2195 = fma(_1991, cbSceneParam._m0[63u].w, fma(_1987, cbSceneParam._m0[63u].z, fma(_1983, cbSceneParam._m0[63u].y, _1979 * cbSceneParam._m0[63u].x)));
        float _2196 = fma(_1991, cbSceneParam._m0[60u].w, fma(_1987, cbSceneParam._m0[60u].z, fma(_1983, cbSceneParam._m0[60u].y, _1979 * cbSceneParam._m0[60u].x))) / _2195;
        float _2197 = fma(_1991, cbSceneParam._m0[61u].w, fma(_1987, cbSceneParam._m0[61u].z, fma(_1983, cbSceneParam._m0[61u].y, _1979 * cbSceneParam._m0[61u].x))) / _2195;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2196 >= cbSceneParam._m0[64u].x) && (_2197 >= cbSceneParam._m0[64u].y)) && (_2196 <= cbSceneParam._m0[64u].z)) && (_2197 <= cbSceneParam._m0[64u].w))
        {
            float _2304 = fma(_1991, cbSceneParam._m0[62u].w, fma(_1987, cbSceneParam._m0[62u].z, fma(_1983, cbSceneParam._m0[62u].y, _1979 * cbSceneParam._m0[62u].x))) / _2195;
            float _2308 = isnan(cbSceneParam._m0[41u].w) ? _2304 : (isnan(_2304) ? cbSceneParam._m0[41u].w : max(_2304, cbSceneParam._m0[41u].w));
            float _2351 = (cbSceneParam._m0[33u].x - sqrt(((_1993 * _1993) + (_1992 * _1992)) + (_1994 * _1994))) * cbSceneParam._m0[33u].y;
            float _4122 = isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0));
            float _2358 = (isnan(1.0) ? _4122 : (isnan(_4122) ? 1.0 : min(_4122, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2196, cbSceneParam._m0[33u].w + _2197), _2308), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2196, _2197 - cbSceneParam._m0[33u].z), _2308), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2196 - cbSceneParam._m0[33u].z, _2197 - cbSceneParam._m0[33u].w), _2308), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2196 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2197), _2308), 0.0)).x), vec4(0.25)));
            float _2362 = 1.0 - (_2358 * cbSceneParam._m0[34u].x);
            float _2363 = 1.0 - (_2358 * cbSceneParam._m0[34u].y);
            float _2364 = 1.0 - (_2358 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2364) ? _2143 : (isnan(_2143) ? _2364 : min(_2143, _2364));
            frontier_phi_39_38_ladder_1 = isnan(_2363) ? _2142 : (isnan(_2142) ? _2363 : min(_2142, _2363));
            frontier_phi_39_38_ladder_2 = isnan(_2362) ? _2141 : (isnan(_2141) ? _2362 : min(_2141, _2362));
        }
        else
        {
            frontier_phi_39_38_ladder = _2143;
            frontier_phi_39_38_ladder_1 = _2142;
            frontier_phi_39_38_ladder_2 = _2141;
        }
        _2207 = frontier_phi_39_38_ladder_2;
        _2209 = frontier_phi_39_38_ladder_1;
        _2211 = frontier_phi_39_38_ladder;
    }
    else
    {
        _2207 = _2141;
        _2209 = _2142;
        _2211 = _2143;
    }
    uvec4 _2216 = floatBitsToUint(cbInstanceData._m0[_313 + 5u]);
    uint _2218 = _2216.x * 14u;
    uint _2219 = _2218 + 13u;
    float _2224 = _883 + (-1.0);
    float _2227 = (cbLight._m0[_2219].x * _2224) + 1.0;
    float _2228 = (cbLight._m0[_2219].y * _2224) + 1.0;
    uint _2230 = _2218 + 4u;
    float _2241 = dot(vec3(cbLight._m0[_2218].xyz), vec3(_783, _784, _785));
    float _2244 = isnan(1.0) ? _2227 : (isnan(_2227) ? 1.0 : min(_2227, 1.0));
    float _2245 = cbLight._m0[_2230].x * _2207;
    float _2246 = cbLight._m0[_2230].y * _2209;
    float _2247 = cbLight._m0[_2230].z * _2211;
    uint _2248 = _2218 + 5u;
    uint _2254 = _2218 | 1u;
    float _2260 = dot(vec3(cbLight._m0[_2254].xyz), vec3(_783, _784, _785));
    float _2263 = isnan(1.0) ? _2228 : (isnan(_2228) ? 1.0 : min(_2228, 1.0));
    float _2436;
    float _2437;
    float _2438;
    if (_788 == 0.0)
    {
        float _4158 = isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0));
        float _4169 = isnan(0.0) ? _2260 : (isnan(_2260) ? 0.0 : max(_2260, 0.0));
        float _2373 = (isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0))) * 0.3183098733425140380859375;
        float _2375 = (isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0))) * 0.3183098733425140380859375;
        _2436 = ((cbLight._m0[_2248].x * _2263) * _2375) + ((_2245 * _2244) * _2373);
        _2437 = ((_2263 * cbLight._m0[_2248].y) * _2375) + ((_2246 * _2244) * _2373);
        _2438 = ((_2263 * cbLight._m0[_2248].z) * _2375) + ((_2247 * _2244) * _2373);
    }
    else
    {
        float _2385 = _2241 + _788;
        float _2388 = (_788 * 2.0) + 1.0;
        float _2389 = (isnan(0.0) ? _2385 : (isnan(_2385) ? 0.0 : max(_2385, 0.0))) / _2388;
        float _2396 = _2260 + _788;
        float _2398 = (isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0))) / _2388;
        _2436 = (((_2398 * cbLight._m0[_2248].x) * _2263) + ((_2245 * _2389) * _2244)) * 0.3183098733425140380859375;
        _2437 = (((_2398 * cbLight._m0[_2248].y) * _2263) + ((_2246 * _2389) * _2244)) * 0.3183098733425140380859375;
        _2438 = (((_2398 * cbLight._m0[_2248].z) * _2263) + ((_2247 * _2389) * _2244)) * 0.3183098733425140380859375;
    }
    uint _2442 = _2218 + 8u;
    float _2458 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2218].w)) * _787) * 0.949999988079071044921875);
    float _2459 = _2458 * _2458;
    float _2460 = cbLight._m0[_2218].x + _542;
    float _2461 = cbLight._m0[_2218].y + _543;
    float _2462 = cbLight._m0[_2218].z + _544;
    float _2466 = inversesqrt(dot(vec3(_2460, _2461, _2462), vec3(_2460, _2461, _2462)));
    float _2467 = _2466 * _2460;
    float _2468 = _2466 * _2461;
    float _2469 = _2466 * _2462;
    float _2470 = dot(vec3(_783, _784, _785), vec3(cbLight._m0[_2218].xyz));
    float _4190 = isnan(0.0) ? _2470 : (isnan(_2470) ? 0.0 : max(_2470, 0.0));
    float _2473 = isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0));
    float _4201 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    float _2474 = isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0));
    float _2475 = dot(vec3(_783, _784, _785), vec3(_2467, _2468, _2469));
    float _4212 = isnan(0.0) ? _2475 : (isnan(_2475) ? 0.0 : max(_2475, 0.0));
    float _2478 = isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0));
    float _2479 = dot(vec3(cbLight._m0[_2218].xyz), vec3(_2467, _2468, _2469));
    float _4223 = isnan(0.0) ? _2479 : (isnan(_2479) ? 0.0 : max(_2479, 0.0));
    float _2483 = _2459 * _2459;
    float _2487 = ((_2478 * _2478) * (_2483 + (-1.0))) + 1.0;
    float _2498 = (exp2(log2(1.0 - (isnan(1.0) ? _4223 : (isnan(_4223) ? 1.0 : min(_4223, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2499 = 1.0 - _2459;
    float _2510 = (0.5 / (((_2474 * ((_2473 * _2499) + _2459)) + 9.9999999392252902907785028219223e-09) + (((_2474 * _2499) + _2459) * _2473))) * _2473;
    float _4234 = isnan(0.0) ? _2510 : (isnan(_2510) ? 0.0 : max(_2510, 0.0));
    float _2512 = (isnan(1.0) ? _4234 : (isnan(_4234) ? 1.0 : min(_4234, 1.0))) * (_2483 / ((_2487 * _2487) * 3.141590118408203125));
    uint _2528 = _2218 + 9u;
    float _2542 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2254].w)) * _787) * 0.949999988079071044921875);
    float _2543 = _2542 * _2542;
    float _2544 = cbLight._m0[_2254].x + _542;
    float _2545 = cbLight._m0[_2254].y + _543;
    float _2546 = cbLight._m0[_2254].z + _544;
    float _2550 = inversesqrt(dot(vec3(_2544, _2545, _2546), vec3(_2544, _2545, _2546)));
    float _2551 = _2550 * _2544;
    float _2552 = _2550 * _2545;
    float _2553 = _2550 * _2546;
    float _2554 = dot(vec3(_783, _784, _785), vec3(cbLight._m0[_2254].xyz));
    float _4245 = isnan(0.0) ? _2554 : (isnan(_2554) ? 0.0 : max(_2554, 0.0));
    float _2557 = isnan(1.0) ? _4245 : (isnan(_4245) ? 1.0 : min(_4245, 1.0));
    float _2558 = dot(vec3(_783, _784, _785), vec3(_2551, _2552, _2553));
    float _4256 = isnan(0.0) ? _2558 : (isnan(_2558) ? 0.0 : max(_2558, 0.0));
    float _2561 = isnan(1.0) ? _4256 : (isnan(_4256) ? 1.0 : min(_4256, 1.0));
    float _2562 = dot(vec3(cbLight._m0[_2254].xyz), vec3(_2551, _2552, _2553));
    float _4267 = isnan(0.0) ? _2562 : (isnan(_2562) ? 0.0 : max(_2562, 0.0));
    float _2566 = _2543 * _2543;
    float _2570 = ((_2561 * _2561) * (_2566 + (-1.0))) + 1.0;
    float _2579 = (exp2(log2(1.0 - (isnan(1.0) ? _4267 : (isnan(_4267) ? 1.0 : min(_4267, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2580 = 1.0 - _2543;
    float _2590 = (0.5 / (((_2474 * ((_2557 * _2580) + _2543)) + 9.9999999392252902907785028219223e-09) + (((_2474 * _2580) + _2543) * _2557))) * _2557;
    float _4278 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
    float _2592 = (isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0))) * (_2566 / ((_2570 * _2570) * 3.141590118408203125));
    float _2602 = (((_2579 * cbLight._m0[_2528].x) * _2592) * _2263) + ((((cbLight._m0[_2442].x * _2207) * _2498) * _2512) * _2244);
    float _2603 = (((_2579 * cbLight._m0[_2528].y) * _2592) * _2263) + ((((cbLight._m0[_2442].y * _2209) * _2498) * _2512) * _2244);
    float _2604 = (((_2579 * cbLight._m0[_2528].z) * _2592) * _2263) + ((((cbLight._m0[_2442].z * _2211) * _2498) * _2512) * _2244);
    float _2691;
    float _2693;
    float _2695;
    float _2697;
    float _2699;
    float _2701;
    if (_2216.y == 0u)
    {
        uvec4 _2647 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2648 = _2647.x;
        uint _2659 = uint((float(_2647.y) * floor(float(uint(cbSceneParam._m0[85u].y * _823) / _2648))) + floor(float(uint(cbSceneParam._m0[85u].x * _822) / _2648)));
        float _2669 = (log2(_1994 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2670 = isnan(0.0) ? _2669 : (isnan(_2669) ? 0.0 : max(_2669, 0.0));
        uint _2673 = uint(isnan(14.0) ? _2670 : (isnan(_2670) ? 14.0 : min(_2670, 14.0)));
        uint _2680 = _2647.z;
        float _2725;
        float _2727;
        float _2729;
        float _2731;
        float _2733;
        float _2735;
        if (((((1u << ((_2680 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2673 << 2u) + (_2659 << 6u)) >> 2u)).x) == 0u) || ((_2680 & 240u) == 0u))
        {
            _2725 = 0.0;
            _2727 = 0.0;
            _2729 = 0.0;
            _2731 = 0.0;
            _2733 = 0.0;
            _2735 = 0.0;
        }
        else
        {
            float _2726;
            float _2728;
            float _2730;
            float _2732;
            float _2734;
            float _2736;
            float _2891 = 0.0;
            float _2892 = 0.0;
            float _2893 = 0.0;
            float _2894 = 0.0;
            float _2895 = 0.0;
            float _2896 = 0.0;
            uint _2897 = 0u;
            uint _2906;
            bool _2907;
            for (;;)
            {
                _2906 = texelFetch(g_lightClassification, int((((_2673 << 5u) + (_2659 << 9u)) + (_2897 << 2u)) >> 2u)).x;
                _2907 = _2906 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2907)
                {
                    frontier_phi_63_pred = _2893;
                    frontier_phi_63_pred_1 = _2896;
                    frontier_phi_63_pred_2 = _2895;
                    frontier_phi_63_pred_3 = _2894;
                    frontier_phi_63_pred_4 = _2892;
                    frontier_phi_63_pred_5 = _2891;
                }
                else
                {
                    float _3107;
                    float _3108;
                    float _3109;
                    float _3110;
                    float _3111;
                    float _3112;
                    uint _3113;
                    _3107 = _2891;
                    _3108 = _2892;
                    _3109 = _2893;
                    _3110 = _2894;
                    _3111 = _2895;
                    _3112 = _2896;
                    _3113 = _2906;
                    float _3039;
                    float _3040;
                    float _3041;
                    float _3042;
                    float _3043;
                    float _3044;
                    for (;;)
                    {
                        uint _3117 = uint(findLSB(_3113)) + (_2897 << 5u);
                        uint _3114 = (_3113 + 4294967295u) & _3113;
                        uint _3119 = _3117 * 48u;
                        vec4 _3133 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3119)).x, texelFetch(g_PointLightRenderingBuffer, int(_3119 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3119 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3119 + 3u)).x));
                        uint _3139 = (_3117 * 48u) + 4u;
                        vec4 _3152 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3139)).x, texelFetch(g_PointLightRenderingBuffer, int(_3139 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3139 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3139 + 3u)).x));
                        float _3153 = _3152.x;
                        float _3154 = _3152.y;
                        float _3155 = _3152.z;
                        uint _3158 = (_3117 * 48u) + 8u;
                        vec3 _3169 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3158)).x, texelFetch(g_PointLightRenderingBuffer, int(_3158 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3158 + 2u)).x));
                        uint _3174 = (_3117 * 48u) + 12u;
                        vec2 _3182 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_3174)).x, texelFetch(g_PointLightRenderingBuffer, int(_3174 + 1u)).x));
                        float _3188 = inversesqrt(dot(vec3(_1992, _1993, _1994), vec3(_1992, _1993, _1994)));
                        float _3189 = _3188 * _1992;
                        float _3190 = _3188 * _1993;
                        float _3191 = _3188 * _1994;
                        float _3192 = _3133.x - _1992;
                        float _3193 = _3133.y - _1993;
                        float _3194 = _3133.z - _1994;
                        float _3195 = dot(vec3(_3192, _3193, _3194), vec3(_3192, _3193, _3194));
                        float _3198 = inversesqrt(_3195);
                        float _3199 = _3198 * _3192;
                        float _3200 = _3198 * _3193;
                        float _3201 = _3198 * _3194;
                        float _3202 = dot(vec3(_841, _844, _847), vec3(_3199, _3200, _3201));
                        float _3207 = 1.0 - (_3195 * _3133.w);
                        float _4299 = isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : max(_3207, 0.0));
                        float _3208 = isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0));
                        float _3209 = sqrt(_3195) * _3152.w;
                        float _3212 = 1.39999997615814208984375 / (_3209 + 1.39999997615814208984375);
                        float _3213 = _3212 * _3212;
                        float _3214 = 1.0 - _3213;
                        float _3216 = (_3214 * _3214) * _788;
                        float _3219 = ((_3214 * _3202) + _3213) + _3216;
                        float _3224 = _3209 * _3209;
                        float _3229 = ((isnan(0.0) ? _3219 : (isnan(_3219) ? 0.0 : max(_3219, 0.0))) * _3208) / (((_3216 * 2.0) + 1.0) * ((_3224 * 0.699999988079071044921875) + 1.0));
                        float _3233 = dot(vec3(_3199, _3200, _3201), vec3(_3189, _3190, _3191));
                        float _4315 = isnan(0.0) ? _3233 : (isnan(_3233) ? 0.0 : max(_3233, 0.0));
                        float _3240 = dot(vec3((-0.0) - _3189, (-0.0) - _3190, (-0.0) - _3191), vec3(_841, _844, _847)) + 1.0;
                        float _3242 = (isnan(0.0) ? _3240 : (isnan(_3240) ? 0.0 : max(_3240, 0.0))) * 0.5;
                        float _3249 = ((_3242 * _3242) * _3182.x) * exp2((_3182.y * 32.0) * log2(isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0))));
                        float _3251 = _788 / (_788 + 1.0);
                        float _3267 = (-0.0) - _1992;
                        float _3268 = (-0.0) - _1993;
                        float _3269 = (-0.0) - _1994;
                        float _3273 = inversesqrt(dot(vec3(_3267, _3268, _3269), vec3(_3267, _3268, _3269)));
                        float _3274 = _3273 * _3267;
                        float _3275 = _3273 * _3268;
                        float _3276 = _3273 * _3269;
                        float _3283 = exp2(log2(1.0 / ((_3224 * 3.5) + 5.0)) * 0.25);
                        float _3284 = 1.0 - _904;
                        float _3291 = sqrt(1.0 - ((1.0 - (_3284 * _3284)) * (1.0 - (_3283 * _3283))));
                        float _3292 = _3291 * _3291;
                        float _3293 = _3292 * _3292;
                        float _3294 = _3274 + _3199;
                        float _3295 = _3275 + _3200;
                        float _3296 = _3276 + _3201;
                        float _3300 = inversesqrt(dot(vec3(_3294, _3295, _3296), vec3(_3294, _3295, _3296)));
                        float _3304 = dot(vec3(_841, _844, _847), vec3(_3274, _3275, _3276));
                        float _4331 = isnan(0.0) ? _3304 : (isnan(_3304) ? 0.0 : max(_3304, 0.0));
                        float _3307 = isnan(1.0) ? _4331 : (isnan(_4331) ? 1.0 : min(_4331, 1.0));
                        float _3308 = dot(vec3(_841, _844, _847), vec3(_3300 * _3294, _3300 * _3295, _3300 * _3296));
                        float _4342 = isnan(0.0) ? _3308 : (isnan(_3308) ? 0.0 : max(_3308, 0.0));
                        float _3311 = isnan(1.0) ? _4342 : (isnan(_4342) ? 1.0 : min(_4342, 1.0));
                        float _3315 = ((_3311 * _3311) * (_3293 + (-1.0))) + 1.0;
                        float _3316 = _3212 * _3292;
                        float _3317 = _3316 * _3316;
                        float _3320 = ((1.0 - _3317) * _3202) + _3317;
                        float _4353 = isnan(0.0) ? _3320 : (isnan(_3320) ? 0.0 : max(_3320, 0.0));
                        float _3321 = isnan(1.0) ? _4353 : (isnan(_4353) ? 1.0 : min(_4353, 1.0));
                        float _3322 = 1.0 - _3292;
                        float _3332 = (0.5 / (((_3321 * ((_3307 * _3322) + _3292)) + 9.9999999392252902907785028219223e-09) + (((_3321 * _3322) + _3292) * _3307))) * _3321;
                        float _4364 = isnan(0.0) ? _3332 : (isnan(_3332) ? 0.0 : max(_3332, 0.0));
                        float _3343 = (((_3293 * 3.1415927410125732421875) * (isnan(1.0) ? _4364 : (isnan(_4364) ? 1.0 : min(_4364, 1.0)))) / ((_3315 * _3315) * ((_3224 * 2.1991131305694580078125) + 3.141590118408203125))) * _3208;
                        _3042 = (((((_3153 * 0.3183098733425140380859375) * _3251) * _3249) + _3153) * _3229) + _3110;
                        _3043 = (((((_3154 * 0.3183098733425140380859375) * _3251) * _3249) + _3154) * _3229) + _3111;
                        _3044 = (((((_3155 * 0.3183098733425140380859375) * _3251) * _3249) + _3155) * _3229) + _3112;
                        _3039 = (_3343 * _3169.x) + _3107;
                        _3040 = (_3343 * _3169.y) + _3108;
                        _3041 = (_3343 * _3169.z) + _3109;
                        if (_3114 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3107 = _3039;
                            _3108 = _3040;
                            _3109 = _3041;
                            _3110 = _3042;
                            _3111 = _3043;
                            _3112 = _3044;
                            _3113 = _3114;
                        }
                    }
                    frontier_phi_63_pred = _3041;
                    frontier_phi_63_pred_1 = _3044;
                    frontier_phi_63_pred_2 = _3043;
                    frontier_phi_63_pred_3 = _3042;
                    frontier_phi_63_pred_4 = _3040;
                    frontier_phi_63_pred_5 = _3039;
                }
                _2730 = frontier_phi_63_pred;
                _2736 = frontier_phi_63_pred_1;
                _2734 = frontier_phi_63_pred_2;
                _2732 = frontier_phi_63_pred_3;
                _2728 = frontier_phi_63_pred_4;
                _2726 = frontier_phi_63_pred_5;
                uint _2898 = _2897 + 1u;
                if (_2898 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2891 = _2726;
                    _2892 = _2728;
                    _2893 = _2730;
                    _2894 = _2732;
                    _2895 = _2734;
                    _2896 = _2736;
                    _2897 = _2898;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2725 = _2726;
            _2727 = _2728;
            _2729 = _2730;
            _2731 = _2732;
            _2733 = _2734;
            _2735 = _2736;
        }
        float _2740 = isnan(1.0) ? _883 : (isnan(_883) ? 1.0 : min(_883, 1.0));
        _2691 = (_2740 * _2731) + _2436;
        _2693 = (_2740 * _2733) + _2437;
        _2695 = (_2740 * _2735) + _2438;
        _2697 = ((_2725 * 0.039999999105930328369140625) * _2740) + _2602;
        _2699 = ((_2727 * 0.039999999105930328369140625) * _2740) + _2603;
        _2701 = ((_2729 * 0.039999999105930328369140625) * _2740) + _2604;
    }
    else
    {
        _2691 = _2436;
        _2693 = _2437;
        _2695 = _2438;
        _2697 = _2602;
        _2699 = _2603;
        _2701 = _2604;
    }
    float _2814;
    float _2815;
    float _2816;
    if (_788 > 0.0)
    {
        uint _2747 = _2218 + 4u;
        float _2753 = (-0.0) - _542;
        float _2754 = (-0.0) - _543;
        float _2755 = (-0.0) - _544;
        float _2756 = dot(vec3(cbLight._m0[_2218].xyz), vec3(_2753, _2754, _2755));
        float _4380 = isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0));
        float _2760 = _894 + 1.0;
        float _2762 = (isnan(0.0) ? _2760 : (isnan(_2760) ? 0.0 : max(_2760, 0.0))) * 0.5;
        float _2767 = _2762 * _2762;
        float _2768 = _2767 * exp2(log2(isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0))) * 32.0);
        float _2770 = _788 / (_788 + 1.0);
        float _2771 = isnan(_2227) ? 1.0 : (isnan(1.0) ? _2227 : min(1.0, _2227));
        uint _2784 = _2218 + 5u;
        float _2790 = dot(vec3(cbLight._m0[_2254].xyz), vec3(_2753, _2754, _2755));
        float _4401 = isnan(0.0) ? _2790 : (isnan(_2790) ? 0.0 : max(_2790, 0.0));
        float _2797 = _2767 * exp2(log2(isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0))) * 32.0);
        float _2798 = isnan(_2228) ? 1.0 : (isnan(1.0) ? _2228 : min(1.0, _2228));
        _2814 = ((((_2797 * cbLight._m0[_2784].x) * _2770) * _2798) + ((((cbLight._m0[_2747].x * _2207) * _2768) * _2770) * _2771)) * 0.3183098733425140380859375;
        _2815 = ((((_2797 * cbLight._m0[_2784].y) * _2770) * _2798) + ((((cbLight._m0[_2747].y * _2209) * _2768) * _2770) * _2771)) * 0.3183098733425140380859375;
        _2816 = ((((_2797 * cbLight._m0[_2784].z) * _2770) * _2798) + ((((cbLight._m0[_2747].z * _2211) * _2768) * _2770) * _2771)) * 0.3183098733425140380859375;
    }
    else
    {
        _2814 = 0.0;
        _2815 = 0.0;
        _2816 = 0.0;
    }
    float _4417 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _4428 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    float _4439 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _4450 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
    float _2831 = (isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0))) * ((_2691 + ((isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0))) * _883)) + _2814);
    float _2832 = (isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) * ((_2693 + ((isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0))) * _883)) + _2815);
    float _2833 = (isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0))) * ((_2695 + ((isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0))) * _883)) + _2816);
    float _2837 = 0.959999978542327880859375 - (exp2(log2(1.0 - _898) * 5.0) * 0.959999978542327880859375);
    float _2848 = (_2831 + ((_2697 + ((isnan(0.0) ? _1939 : (isnan(_1939) ? 0.0 : max(_1939, 0.0))) * _1726)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _722.x) * _2837) - _2831) * _768);
    float _2850 = (_2832 + ((_2699 + ((isnan(0.0) ? _1942 : (isnan(_1942) ? 0.0 : max(_1942, 0.0))) * _1726)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _722.y) * _2837) - _2832) * _768);
    float _2852 = (_2833 + ((_2701 + ((isnan(0.0) ? _1945 : (isnan(_1945) ? 0.0 : max(_1945, 0.0))) * _1726)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _722.z) * _2837) - _2833) * _768);
    float _2857 = cbInstanceData._m0[_313 + 6u].w * (isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0)));
    float _2862 = _822 / cbSceneParam._m0[86u].x;
    float _2863 = _823 / cbSceneParam._m0[86u].y;
    vec4 _2877 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2862, _2863, (log2((isnan(cbSceneParam._m0[77u].w) ? _805 : (isnan(_805) ? cbSceneParam._m0[77u].w : min(_805, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2879 = _2877.x;
    float _2880 = _2877.y;
    float _2881 = _2877.z;
    float _2882 = _2877.w;
    float _2949;
    float _2951;
    float _2953;
    float _2955;
    if (_805 > cbSceneParam._m0[78u].w)
    {
        float _2912 = isnan(_805) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _805 : min(cbSceneParam._m0[80u].w, _805));
        float _2913 = _2912 / _805;
        float _2924 = _2913 * _305;
        float _2925 = _306 * _2913;
        float _2926 = (-0.0) - _2925;
        float _2927 = _2913 * _307;
        float _2929 = (cbSceneParam._m0[77u].w * _2926) / _2912;
        float _2930 = _2929 + cbSceneParam._m0[79u].w;
        float _2931 = cbSceneParam._m0[79u].w - _2925;
        float _2937 = sqrt(((_2924 * _2924) + (_2925 * _2925)) + (_2927 * _2927));
        float _2940 = (1.0 - (cbSceneParam._m0[77u].w / _2912)) * _2937;
        float _2945 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2947 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3348;
        if (abs((_2926 - _2929) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3348 = ((((_2930 > 0.0) ? exp2(_2945 * _2930) : (2.0 - exp2(_2947 * _2930))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2940;
        }
        else
        {
            float _3064 = 1.0 / cbSceneParam._m0[80u].x;
            float _3065 = isnan(_2931) ? _2930 : (isnan(_2930) ? _2931 : max(_2930, _2931));
            float _3066 = isnan(_2931) ? _2930 : (isnan(_2930) ? _2931 : min(_2930, _2931));
            float _3075 = isnan(0.0) ? _3065 : (isnan(_3065) ? 0.0 : min(_3065, 0.0));
            float _3076 = isnan(0.0) ? _3066 : (isnan(_3066) ? 0.0 : min(_3066, 0.0));
            _3348 = ((abs(_2937 / _2926) * cbSceneParam._m0[80u].y) * ((((_3075 - _3076) * 2.0) - ((exp2(_2945 * (isnan(0.0) ? _3065 : (isnan(_3065) ? 0.0 : max(_3065, 0.0)))) - exp2(_2945 * (isnan(0.0) ? _3066 : (isnan(_3066) ? 0.0 : max(_3066, 0.0))))) * _3064)) - ((exp2(_2947 * _3075) - exp2(_2947 * _3076)) * _3064))) + (_2940 * cbSceneParam._m0[80u].z);
        }
        vec4 _3350 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2862, _2863, 1.0), 0.0);
        float _3359 = exp2((_3348 * (-1.44269502162933349609375)) * (1.0 - _3350.w));
        float _3360 = log2(_3359);
        float _3376 = log2(_2882);
        _2949 = (exp2(_3376 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3360 * cbSceneParam._m0[78u].x)) * _3350.x) / cbSceneParam._m0[78u].x)) + _2879;
        _2951 = (exp2(_3376 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3360 * cbSceneParam._m0[78u].y)) * _3350.y) / cbSceneParam._m0[78u].y)) + _2880;
        _2953 = (exp2(_3376 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3360 * cbSceneParam._m0[78u].z)) * _3350.z) / cbSceneParam._m0[78u].z)) + _2881;
        _2955 = _3359 * _2882;
    }
    else
    {
        _2949 = _2879;
        _2951 = _2880;
        _2953 = _2881;
        _2955 = _2882;
    }
    bool _3386;
    float _3010;
    vec4 _3013;
    float _3015;
    vec4 _3017;
    float _3025;
    float _3026;
    float _3027;
    float _3028;
    bool _3038;
    for (;;)
    {
        bool _2967 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2968 = log2(_2955);
        float _2975 = exp2(_2968 * cbSceneParam._m0[78u].x) * _2848;
        float _2976 = exp2(_2968 * cbSceneParam._m0[78u].y) * _2850;
        float _2977 = exp2(_2968 * cbSceneParam._m0[78u].z) * _2852;
        vec4 _2985 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_822, _823));
        float _2987 = _2985.x;
        float _3008 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2987)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2987))) - _805) * cbMtdParam._m0[17u].y;
        float _4501 = isnan(0.0) ? _3008 : (isnan(_3008) ? 0.0 : max(_3008, 0.0));
        _3010 = _2857 * (isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0)));
        float _3011 = _812 + (-0.5);
        _3013 = cbMtdParam._m0[1u];
        _3015 = _3013.y * _3011;
        _3017 = cbMatDynParam._m0[0u];
        float _3024 = (roundEven(_3017.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3025 = _3024 * (_2967 ? _2975 : (_2975 + (cbSceneParam._m0[72u].w * _2949)));
        _3026 = _3024 * (_2967 ? _2976 : (_2976 + (cbSceneParam._m0[72u].w * _2951)));
        _3027 = _3024 * (_2967 ? _2977 : (_2977 + (cbSceneParam._m0[72u].w * _2953)));
        _3028 = _3011 * 0.999000012874603271484375;
        _3038 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3038)
        {
            if ((cbInstanceData._m0[_313 + 7u].x + _3028) < 0.5)
            {
                _3386 = true;
                break;
            }
        }
        uint _3099 = _860 + uint(_3017.w);
        if ((cbInstanceData._m0[_3099].w < 1.0) && ((cbInstanceData._m0[_3099].w + _3028) < 0.5))
        {
            _3386 = true;
            break;
        }
        if ((_3015 + _452) < _3013.x)
        {
            _3386 = true;
            break;
        }
        _3386 = false;
        break;
    }
    float _3391;
    if (_3386)
    {
        discard_state = true;
        _3391 = 0.0;
    }
    else
    {
        _3391 = _3010;
    }
    SV_Target.x = _3025;
    SV_Target.y = _3026;
    SV_Target.z = _3027;
    SV_Target.w = _3391;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3010;
    discard_exit();
}


