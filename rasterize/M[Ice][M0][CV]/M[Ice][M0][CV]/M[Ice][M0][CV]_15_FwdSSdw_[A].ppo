#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1281;
float _3249;
float _3250;
float _3251;
float _3252;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _215 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _216 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _217 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _223 = inversesqrt(dot(vec3(_215, _216, _217), vec3(_215, _216, _217)));
    float _224 = _223 * _215;
    float _225 = _223 * _216;
    float _226 = _223 * _217;
    float _230 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _231 = _230 * NORMAL.x;
    float _232 = _230 * NORMAL.y;
    float _233 = _230 * NORMAL.z;
    float _237 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _238 = _237 * TANGENT.x;
    float _239 = _237 * TANGENT.y;
    float _240 = _237 * TANGENT.z;
    float _245;
    float _246;
    float _247;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _245 = (-0.0) - _231;
        _246 = (-0.0) - _232;
        _247 = (-0.0) - _233;
    }
    else
    {
        _245 = _231;
        _246 = _232;
        _247 = _233;
    }
    float _294 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _304 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _294);
    float _305 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _294);
    float _306 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _294);
    uint _312 = uint(roundEven(NORMAL.w)) * 13u;
    uint _317 = _312 + 1u;
    uint _321 = _312 + 2u;
    float _330 = sqrt(((cbInstanceData._m0[_317].x * cbInstanceData._m0[_317].x) + (cbInstanceData._m0[_312].x * cbInstanceData._m0[_312].x)) + (cbInstanceData._m0[_321].x * cbInstanceData._m0[_321].x));
    float _331 = _330 * TEXCOORD.z;
    float _332 = _330 * TEXCOORD.w;
    vec4 _345 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _331) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _332) + cbTextureTilingScale._m0[8u].w));
    vec4 _366 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _374 = (_366.x * 2.0) + (-1.0);
    float _376 = (_366.y * 2.0) + (-1.0);
    float _377 = dot(vec2(_374, _376), vec2(_374, _376));
    float _3261 = isnan(0.0) ? _377 : (isnan(_377) ? 0.0 : max(_377, 0.0));
    float _383 = sqrt(1.0 - (isnan(1.0) ? _3261 : (isnan(_3261) ? 1.0 : min(_3261, 1.0))));
    float _386 = fma(_383, _245, fma(_376, _238, _374 * _224));
    float _389 = fma(_383, _246, fma(_376, _239, _374 * _225));
    float _392 = fma(_383, _247, fma(_376, _240, _374 * _226));
    float _396 = inversesqrt(dot(vec3(_386, _389, _392), vec3(_386, _389, _392)));
    vec4 _429 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _434 = _429.w;
    float _446 = dot(vec3(_304, _305, _306), vec3(_224, _225, _226));
    float _449 = dot(vec3(_304, _305, _306), vec3(_238, _239, _240));
    float _452 = dot(vec3(_304, _305, _306), vec3(_245, _246, _247));
    float _458 = inversesqrt(dot(vec3(_446, _449, _452), vec3(_446, _449, _452)));
    float _480 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _500 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_446 * cbMtdParam._m0[14u].x) * _458) * _480) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_449 * cbMtdParam._m0[14u].x) * _458) * _480) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _523 = inversesqrt(dot(vec3(_304, _305, _306), vec3(_304, _305, _306)));
    float _524 = _523 * _304;
    float _525 = _523 * _305;
    float _526 = _523 * _306;
    float _527 = dot(vec4(_524, _525, _526, 0.0), vec4(_245, _246, _247, 0.0));
    float _530 = _527 - cbMtdParam._m0[15u].z;
    float _3272 = isnan(0.0) ? _530 : (isnan(_530) ? 0.0 : max(_530, 0.0));
    float _537 = exp2(log2(1.0 - (isnan(1.0) ? _3272 : (isnan(_3272) ? 1.0 : min(_3272, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _552 = ((((_429.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _500.x) * cbMtdParam._m0[9u].x) * ((_537 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _557 = ((((_429.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _500.y) * cbMtdParam._m0[9u].y) * ((_537 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _562 = ((((_429.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _500.z) * cbMtdParam._m0[9u].z) * ((_537 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _571 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _331) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _332) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3288 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
    float _572 = isnan(1.0) ? _3288 : (isnan(_3288) ? 1.0 : min(_3288, 1.0));
    float _579 = (_572 * ((_345.x * cbMtdParam._m0[10u].x) - _552)) + _552;
    float _580 = (((_345.y * cbMtdParam._m0[10u].y) - _557) * _572) + _557;
    float _581 = (((_345.z * cbMtdParam._m0[10u].z) - _562) * _572) + _562;
    vec4 _593 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _331) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _332) + cbTextureTilingScale._m0[9u].w));
    float _600 = (_593.x * 2.0) + (-1.0);
    float _601 = (_593.y * 2.0) + (-1.0);
    float _602 = dot(vec2(_600, _601), vec2(_600, _601));
    float _3299 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    vec4 _623 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _635 = cbMtdParam._m0[17u].z + _366.z;
    float _641 = (_635 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_623.z - _635));
    float _644 = ((_593.z - _641) * _572) + _641;
    float _650 = ((((_623.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _374;
    float _651 = ((((_623.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _376;
    float _663 = (((_600 - _650) + (_650 * cbMtdParam._m0[14u].z)) * _572) + _650;
    float _664 = (((_601 - _651) + (_651 * cbMtdParam._m0[14u].z)) * _572) + _651;
    float _665 = (_572 * (sqrt(1.0 - (isnan(1.0) ? _3299 : (isnan(_3299) ? 1.0 : min(_3299, 1.0)))) - _383)) + _383;
    float _681 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _683 = _681 - (_681 * _572);
    float _703 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + ((_396 * _386) * cbMtdParam._m0[18u].y));
    float _704 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + ((_396 * _389) * cbMtdParam._m0[18u].y));
    float _711 = isnan(cbInstanceData._m0[8u].x) ? _703 : (isnan(_703) ? cbInstanceData._m0[8u].x : max(_703, cbInstanceData._m0[8u].x));
    float _712 = isnan(cbInstanceData._m0[8u].y) ? _704 : (isnan(_704) ? cbInstanceData._m0[8u].y : max(_704, cbInstanceData._m0[8u].y));
    vec4 _716 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _711 : (isnan(_711) ? cbInstanceData._m0[8u].z : min(_711, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _712 : (isnan(_712) ? cbInstanceData._m0[8u].w : min(_712, cbInstanceData._m0[8u].w))));
    float _749 = _527 - cbMtdParam._m0[15u].x;
    float _3330 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _759 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3330 : (isnan(_3330) ? 1.0 : min(_3330, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3346 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _760 = isnan(1.0) ? _3346 : (isnan(_3346) ? 1.0 : min(_3346, 1.0));
    float _762 = _760 - (_572 * _760);
    float _766 = fma(_665, _245, fma(_664, _238, _663 * _224));
    float _769 = fma(_665, _246, fma(_664, _239, _663 * _225));
    float _772 = fma(_665, _247, fma(_664, _240, _663 * _226));
    float _776 = inversesqrt(dot(vec3(_766, _769, _772), vec3(_766, _769, _772)));
    float _777 = _776 * _766;
    float _778 = _776 * _769;
    float _779 = _776 * _772;
    float _3357 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _780 = isnan(1.0) ? _3357 : (isnan(_3357) ? 1.0 : min(_3357, 1.0));
    float _3368 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    float _781 = isnan(1.0) ? _3368 : (isnan(_3368) ? 1.0 : min(_3368, 1.0));
    float _782 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0));
    float _3384 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _3395 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _3406 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _799 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _804 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _806 = _804.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _961 = sqrt(((_304 * _304) + (_305 * _305)) + (_306 * _306));
        float _967 = (cbMatDynParam._m0[5u].x * _961) + cbMatDynParam._m0[5u].y;
        float _3417 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
        float _968 = isnan(1.0) ? _3417 : (isnan(_3417) ? 1.0 : min(_3417, 1.0));
        float _972 = (cbMatDynParam._m0[5u].z * _961) + cbMatDynParam._m0[5u].w;
        float _3428 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3428 : (isnan(_3428) ? 1.0 : min(_3428, 1.0))) - _968)) + _968) < ((_806 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _816 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _817 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _835 = fma(_779, cbSceneParam._m0[5u].z, fma(_778, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _777));
    float _838 = fma(_779, cbSceneParam._m0[6u].z, fma(_778, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _777));
    float _841 = fma(_779, cbSceneParam._m0[7u].z, fma(_778, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _777));
    uint _854 = _312 + 9u;
    uint _855 = _854 + uint(cbMatDynParam._m0[0u].w);
    float _861 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3384 : (isnan(_3384) ? 1.0 : min(_3384, 1.0)))) * cbInstanceData._m0[_855].x;
    float _862 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3395 : (isnan(_3395) ? 1.0 : min(_3395, 1.0)))) * cbInstanceData._m0[_855].y;
    float _863 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3406 : (isnan(_3406) ? 1.0 : min(_3406, 1.0)))) * cbInstanceData._m0[_855].z;
    float _3439 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
    float _864 = isnan(1.0) ? _3439 : (isnan(_3439) ? 1.0 : min(_3439, 1.0));
    float _3450 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _865 = isnan(1.0) ? _3450 : (isnan(_3450) ? 1.0 : min(_3450, 1.0));
    float _3461 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _866 = isnan(1.0) ? _3461 : (isnan(_3461) ? 1.0 : min(_3461, 1.0));
    vec4 _874 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _816, cbSceneParam._m0[86u].y * _817));
    float _877 = _874.x * TEXCOORD_5.w;
    float _878 = dot(vec3(_777, _778, _779), vec3(_524, _525, _526));
    float _881 = _878 * 2.0;
    float _885 = (_881 * _777) - _524;
    float _886 = (_881 * _778) - _525;
    float _887 = (_881 * _779) - _526;
    float _888 = dot(vec3(_524, _525, _526), vec3(_777, _778, _779));
    float _891 = abs(_888);
    float _3472 = isnan(0.0) ? _891 : (isnan(_891) ? 0.0 : max(_891, 0.0));
    float _892 = isnan(1.0) ? _3472 : (isnan(_3472) ? 1.0 : min(_3472, 1.0));
    float _898 = sqrt(_781);
    float _910 = exp2((_898 * 5.0) * log2(1.0 - (_892 * 0.999000012874603271484375))) / (4.0 - (_898 * 3.0));
    float _942 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _946 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _950 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1280;
    float _1282;
    float _1283;
    float _1284;
    float _1285;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    float _1295;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1005 = fma(_950, cbModelParam._m0[26u].z, fma(_946, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _942));
        float _1009 = fma(_950, cbModelParam._m0[27u].z, fma(_946, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _942));
        float _1013 = fma(_950, cbModelParam._m0[28u].z, fma(_946, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _942));
        float _1038 = _942 + _777;
        float _1039 = _946 + _778;
        float _1040 = _950 + _779;
        float _1050 = fma(_1040, cbModelParam._m0[26u].z, fma(_1039, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1038)) - _1005;
        float _1051 = fma(_1040, cbModelParam._m0[27u].z, fma(_1039, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1038)) - _1009;
        float _1052 = fma(_1040, cbModelParam._m0[28u].z, fma(_1039, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1038)) - _1013;
        float _1056 = inversesqrt(dot(vec3(_1050, _1051, _1052), vec3(_1050, _1051, _1052)));
        float _1069 = ((_1056 * _1050) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1005 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1070 = ((_1056 * _1051) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1009 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1071 = ((_1056 * _1052) / cbModelParam._m0[34u].z) + ((((((_1013 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1074 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1069, _1070, _1071), 0.0);
        vec4 _1081 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1069, _1070, _1071), 0.0);
        vec4 _1088 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1069, _1070, _1071), 0.0);
        vec4 _1095 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1069, _1070, _1071), 0.0);
        float _1108 = exp2((_1074.w + (-0.5)) * 20.0) * 2.0;
        float _1109 = _1108 * (_1074.x + (-0.5));
        float _1110 = _1108 * (_1074.y + (-0.5));
        float _1111 = _1108 * (_1074.z + (-0.5));
        float _1118 = exp2((_1081.w + (-0.5)) * 20.0) * 2.0;
        float _1119 = _1118 * (_1081.x + (-0.5));
        float _1120 = _1118 * (_1081.y + (-0.5));
        float _1121 = _1118 * (_1081.z + (-0.5));
        float _1128 = exp2((_1088.w + (-0.5)) * 20.0) * 2.0;
        float _1129 = _1128 * (_1088.x + (-0.5));
        float _1130 = _1128 * (_1088.y + (-0.5));
        float _1131 = _1128 * (_1088.z + (-0.5));
        float _1138 = exp2((_1095.w + (-0.5)) * 20.0) * 2.0;
        float _1139 = _1138 * (_1095.x + (-0.5));
        float _1140 = _1138 * (_1095.y + (-0.5));
        float _1141 = _1138 * (_1095.z + (-0.5));
        float _1142 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1143 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1144 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1145 = _1109 * 0.5;
        float _1146 = _1119 * 0.5;
        float _1147 = _1129 * 0.5;
        float _1148 = dot(vec3(_1145, _1146, _1147), vec3(_1145, _1146, _1147));
        float _1153 = (_1148 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1148);
        float _1162 = (dot(vec3(_777, _778, _779), vec3(_1153 * _1145, _1153 * _1146, _1153 * _1147)) + 1.0) * 0.5;
        float _3498 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
        float _1172 = sqrt(((_1146 * _1146) + (_1145 * _1145)) + (_1147 * _1147)) / (_1142 + 9.9999997473787516355514526367188e-06);
        float _3509 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1173 = isnan(1.0) ? _3509 : (isnan(_3509) ? 1.0 : min(_3509, 1.0));
        float _1174 = _1173 * 2.0;
        float _1178 = (1.0 - _1173) / (_1173 + 1.0);
        float _3520 = isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0));
        float _1179 = isnan(1.0) ? _3520 : (isnan(_3520) ? 1.0 : min(_3520, 1.0));
        float _1188 = ((((1.0 - _1179) * (_1174 + 2.0)) * exp2(log2(isnan(1.0) ? _3498 : (isnan(_3498) ? 1.0 : min(_3498, 1.0))) * (_1174 + 1.0))) + _1179) * _1142;
        float _1189 = _1110 * 0.5;
        float _1190 = _1120 * 0.5;
        float _1191 = _1130 * 0.5;
        float _1192 = dot(vec3(_1189, _1190, _1191), vec3(_1189, _1190, _1191));
        float _1197 = (_1192 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1192);
        float _1205 = (dot(vec3(_777, _778, _779), vec3(_1197 * _1189, _1197 * _1190, _1197 * _1191)) + 1.0) * 0.5;
        float _3531 = isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0));
        float _1214 = sqrt(((_1190 * _1190) + (_1189 * _1189)) + (_1191 * _1191)) / (_1143 + 9.9999997473787516355514526367188e-06);
        float _3542 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
        float _1215 = isnan(1.0) ? _3542 : (isnan(_3542) ? 1.0 : min(_3542, 1.0));
        float _1216 = _1215 * 2.0;
        float _1220 = (1.0 - _1215) / (_1215 + 1.0);
        float _3553 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
        float _1221 = isnan(1.0) ? _3553 : (isnan(_3553) ? 1.0 : min(_3553, 1.0));
        float _1230 = ((((1.0 - _1221) * (_1216 + 2.0)) * exp2(log2(isnan(1.0) ? _3531 : (isnan(_3531) ? 1.0 : min(_3531, 1.0))) * (_1216 + 1.0))) + _1221) * _1143;
        float _1231 = _1111 * 0.5;
        float _1232 = _1121 * 0.5;
        float _1233 = _1131 * 0.5;
        float _1234 = dot(vec3(_1231, _1232, _1233), vec3(_1231, _1232, _1233));
        float _1239 = (_1234 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1234);
        float _1247 = (dot(vec3(_777, _778, _779), vec3(_1239 * _1231, _1239 * _1232, _1239 * _1233)) + 1.0) * 0.5;
        float _3564 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
        float _1256 = sqrt(((_1232 * _1232) + (_1231 * _1231)) + (_1233 * _1233)) / (_1144 + 9.9999997473787516355514526367188e-06);
        float _3575 = isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0));
        float _1257 = isnan(1.0) ? _3575 : (isnan(_3575) ? 1.0 : min(_3575, 1.0));
        float _1258 = _1257 * 2.0;
        float _1262 = (1.0 - _1257) / (_1257 + 1.0);
        float _3586 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
        float _1263 = isnan(1.0) ? _3586 : (isnan(_3586) ? 1.0 : min(_3586, 1.0));
        float _1272 = ((((1.0 - _1263) * (_1258 + 2.0)) * exp2(log2(isnan(1.0) ? _3564 : (isnan(_3564) ? 1.0 : min(_3564, 1.0))) * (_1258 + 1.0))) + _1263) * _1144;
        _1280 = _1111;
        _1282 = _1110;
        _1283 = _1109;
        _1284 = _1121;
        _1285 = _1120;
        _1286 = _1119;
        _1287 = _1131;
        _1288 = _1130;
        _1289 = _1129;
        _1290 = _1144;
        _1291 = _1143;
        _1292 = _1142;
        _1293 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0)));
        _1294 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0)));
        _1295 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0)));
    }
    else
    {
        _1280 = _1281;
        _1282 = _1281;
        _1283 = _1281;
        _1284 = _1281;
        _1285 = _1281;
        _1286 = _1281;
        _1287 = _1281;
        _1288 = _1281;
        _1289 = _1281;
        _1290 = _1281;
        _1291 = _1281;
        _1292 = _1281;
        _1293 = 0.0;
        _1294 = 0.0;
        _1295 = 0.0;
    }
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1324 = fma(_950, cbModelParam._m0[30u].z, fma(_946, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _942));
        float _1328 = fma(_950, cbModelParam._m0[31u].z, fma(_946, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _942));
        float _1332 = fma(_950, cbModelParam._m0[32u].z, fma(_946, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _942));
        float _1355 = _942 + _777;
        float _1356 = _946 + _778;
        float _1357 = _950 + _779;
        float _1367 = fma(_1357, cbModelParam._m0[30u].z, fma(_1356, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1355)) - _1324;
        float _1368 = fma(_1357, cbModelParam._m0[31u].z, fma(_1356, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1355)) - _1328;
        float _1369 = fma(_1357, cbModelParam._m0[32u].z, fma(_1356, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1355)) - _1332;
        float _1373 = inversesqrt(dot(vec3(_1367, _1368, _1369), vec3(_1367, _1368, _1369)));
        float _1386 = ((_1373 * _1367) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1324 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1387 = ((_1373 * _1368) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1328 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1388 = ((_1373 * _1369) / cbModelParam._m0[35u].z) + ((((((_1332 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1390 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        vec4 _1397 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        vec4 _1404 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        vec4 _1411 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        float _1423 = exp2((_1390.w + (-0.5)) * 20.0) * 2.0;
        float _1424 = _1423 * (_1390.x + (-0.5));
        float _1425 = _1423 * (_1390.y + (-0.5));
        float _1426 = _1423 * (_1390.z + (-0.5));
        float _1433 = exp2((_1397.w + (-0.5)) * 20.0) * 2.0;
        float _1434 = _1433 * (_1397.x + (-0.5));
        float _1435 = _1433 * (_1397.y + (-0.5));
        float _1436 = _1433 * (_1397.z + (-0.5));
        float _1443 = exp2((_1404.w + (-0.5)) * 20.0) * 2.0;
        float _1444 = _1443 * (_1404.x + (-0.5));
        float _1445 = _1443 * (_1404.y + (-0.5));
        float _1446 = _1443 * (_1404.z + (-0.5));
        float _1453 = exp2((_1411.w + (-0.5)) * 20.0) * 2.0;
        float _1454 = _1453 * (_1411.x + (-0.5));
        float _1455 = _1453 * (_1411.y + (-0.5));
        float _1456 = _1453 * (_1411.z + (-0.5));
        float _1457 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1458 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1459 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1460 = _1424 * 0.5;
        float _1461 = _1434 * 0.5;
        float _1462 = _1444 * 0.5;
        float _1463 = dot(vec3(_1460, _1461, _1462), vec3(_1460, _1461, _1462));
        float _1468 = (_1463 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1463);
        float _1476 = (dot(vec3(_777, _778, _779), vec3(_1468 * _1460, _1468 * _1461, _1468 * _1462)) + 1.0) * 0.5;
        float _3627 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1485 = sqrt(((_1461 * _1461) + (_1460 * _1460)) + (_1462 * _1462)) / (_1457 + 9.9999997473787516355514526367188e-06);
        float _3638 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1486 = isnan(1.0) ? _3638 : (isnan(_3638) ? 1.0 : min(_3638, 1.0));
        float _1487 = _1486 * 2.0;
        float _1491 = (1.0 - _1486) / (_1486 + 1.0);
        float _3649 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1492 = isnan(1.0) ? _3649 : (isnan(_3649) ? 1.0 : min(_3649, 1.0));
        float _1501 = ((((1.0 - _1492) * (_1487 + 2.0)) * exp2(log2(isnan(1.0) ? _3627 : (isnan(_3627) ? 1.0 : min(_3627, 1.0))) * (_1487 + 1.0))) + _1492) * _1457;
        float _1502 = _1425 * 0.5;
        float _1503 = _1435 * 0.5;
        float _1504 = _1445 * 0.5;
        float _1505 = dot(vec3(_1502, _1503, _1504), vec3(_1502, _1503, _1504));
        float _1510 = (_1505 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1505);
        float _1518 = (dot(vec3(_777, _778, _779), vec3(_1510 * _1502, _1510 * _1503, _1510 * _1504)) + 1.0) * 0.5;
        float _3660 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
        float _1527 = sqrt(((_1503 * _1503) + (_1502 * _1502)) + (_1504 * _1504)) / (_1458 + 9.9999997473787516355514526367188e-06);
        float _3671 = isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0));
        float _1528 = isnan(1.0) ? _3671 : (isnan(_3671) ? 1.0 : min(_3671, 1.0));
        float _1529 = _1528 * 2.0;
        float _1533 = (1.0 - _1528) / (_1528 + 1.0);
        float _3682 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1534 = isnan(1.0) ? _3682 : (isnan(_3682) ? 1.0 : min(_3682, 1.0));
        float _1543 = ((((1.0 - _1534) * (_1529 + 2.0)) * exp2(log2(isnan(1.0) ? _3660 : (isnan(_3660) ? 1.0 : min(_3660, 1.0))) * (_1529 + 1.0))) + _1534) * _1458;
        float _1544 = _1426 * 0.5;
        float _1545 = _1436 * 0.5;
        float _1546 = _1446 * 0.5;
        float _1547 = dot(vec3(_1544, _1545, _1546), vec3(_1544, _1545, _1546));
        float _1552 = (_1547 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1547);
        float _1560 = (dot(vec3(_777, _778, _779), vec3(_1552 * _1544, _1552 * _1545, _1552 * _1546)) + 1.0) * 0.5;
        float _3693 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
        float _1569 = sqrt(((_1545 * _1545) + (_1544 * _1544)) + (_1546 * _1546)) / (_1459 + 9.9999997473787516355514526367188e-06);
        float _3704 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
        float _1570 = isnan(1.0) ? _3704 : (isnan(_3704) ? 1.0 : min(_3704, 1.0));
        float _1571 = _1570 * 2.0;
        float _1575 = (1.0 - _1570) / (_1570 + 1.0);
        float _3715 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
        float _1576 = isnan(1.0) ? _3715 : (isnan(_3715) ? 1.0 : min(_3715, 1.0));
        float _1585 = ((((1.0 - _1576) * (_1571 + 2.0)) * exp2(log2(isnan(1.0) ? _3693 : (isnan(_3693) ? 1.0 : min(_3693, 1.0))) * (_1571 + 1.0))) + _1576) * _1459;
        _1593 = _1426;
        _1594 = _1425;
        _1595 = _1424;
        _1596 = _1436;
        _1597 = _1435;
        _1598 = _1434;
        _1599 = _1446;
        _1600 = _1445;
        _1601 = _1444;
        _1602 = _1459;
        _1603 = _1458;
        _1604 = _1457;
        _1605 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0)));
        _1606 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0)));
        _1607 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0)));
    }
    else
    {
        _1593 = _1281;
        _1594 = _1281;
        _1595 = _1281;
        _1596 = _1281;
        _1597 = _1281;
        _1598 = _1281;
        _1599 = _1281;
        _1600 = _1281;
        _1601 = _1281;
        _1602 = _1281;
        _1603 = _1281;
        _1604 = _1281;
        _1605 = 0.0;
        _1606 = 0.0;
        _1607 = 0.0;
    }
    float _1617 = (cbModelParam._m0[1u].x * (_1605 - _1293)) + _1293;
    float _1618 = (cbModelParam._m0[1u].x * (_1606 - _1294)) + _1294;
    float _1619 = (cbModelParam._m0[1u].x * (_1607 - _1295)) + _1295;
    float _1640 = fma(_1619, cbSceneParam._m0[89u].z, fma(_1618, cbSceneParam._m0[89u].y, _1617 * cbSceneParam._m0[89u].x));
    float _1643 = fma(_1619, cbSceneParam._m0[90u].z, fma(_1618, cbSceneParam._m0[90u].y, _1617 * cbSceneParam._m0[90u].x));
    float _1646 = fma(_1619, cbSceneParam._m0[91u].z, fma(_1618, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1617));
    float _1661 = _885 * 0.5;
    float _1662 = _886 * 0.5;
    float _1663 = _887 * 0.5;
    float _1664 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1595, _1598, _1601, _1604));
    float _1667 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1594, _1597, _1600, _1603));
    float _1670 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1593, _1596, _1599, _1602));
    float _1704;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1677 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1280, _1284, _1287, _1290));
        float _1681 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1282, _1285, _1288, _1291));
        float _1685 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1283, _1286, _1289, _1292));
        float _1692 = dot(vec4(cbModelParam._m0[39u]), vec4(_1661, _1662, _1663, 1.0));
        _1704 = dot(vec3(isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0)), isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0)), isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1692) ? 0.0 : (isnan(0.0) ? _1692 : max(0.0, _1692))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1704 = 1.0;
    }
    float _1715;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1706 = dot(vec4(cbModelParam._m0[40u]), vec4(_1661, _1662, _1663, 1.0));
        _1715 = dot(vec3(isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0)), isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0)), isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1706) ? 0.0 : (isnan(0.0) ? _1706 : max(0.0, _1706))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1715 = 1.0;
    }
    float _1719 = (_1715 * cbModelParam._m0[1u].x) + (_1704 * (1.0 - cbModelParam._m0[1u].x));
    float _1729 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _781);
    float _1730 = isnan(_1729) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1729 : min(cbModelParam._m0[25u].z, _1729));
    float _1810;
    float _1812;
    float _1814;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1777 = fma(_950, cbModelParam._m0[13u].z, fma(_946, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _942)) + cbModelParam._m0[13u].w;
        float _1781 = fma(_950, cbModelParam._m0[14u].z, fma(_946, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _942)) + cbModelParam._m0[14u].w;
        float _1785 = fma(_950, cbModelParam._m0[15u].z, fma(_946, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _942)) + cbModelParam._m0[15u].w;
        float _1788 = fma(_887, cbModelParam._m0[13u].z, fma(_886, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _885));
        float _1791 = fma(_887, cbModelParam._m0[14u].z, fma(_886, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _885));
        float _1794 = fma(_887, cbModelParam._m0[15u].z, fma(_886, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _885));
        float _1822;
        if (_1788 > 0.0)
        {
            _1822 = abs((1.0 - _1777) / _1788);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1788 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1777 + 1.0) / _1788);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1822 = frontier_phi_19_17_ladder;
        }
        float _2015;
        if (_1791 > 0.0)
        {
            _2015 = abs((1.0 - _1781) / _1791);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1791 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1781 + 1.0) / _1791);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2015 = frontier_phi_28_24_ladder;
        }
        float _2253;
        if (_1794 > 0.0)
        {
            _2253 = abs((1.0 - _1785) / _1794);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1794 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1785 + 1.0) / _1794);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2253 = frontier_phi_39_35_ladder;
        }
        float _2255 = isnan(_2015) ? _1822 : (isnan(_1822) ? _2015 : min(_1822, _2015));
        float _2256 = isnan(_2253) ? _2255 : (isnan(_2255) ? _2253 : min(_2255, _2253));
        float _2260 = (_2256 * _1788) + _1777;
        float _2261 = (_2256 * _1791) + _1781;
        float _2262 = (_2256 * _1794) + _1785;
        float _2263 = _2256 * 9.9999997473787516355514526367188e-05;
        float _2265 = (-1.0) - _2263;
        float _2267 = _2263 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2262 > _2267) || ((_2262 < _2265) || ((_2261 > _2267) || ((_2261 < _2265) || ((_2260 < _2265) || (_2260 > _2267))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2412 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2262, cbModelParam._m0[9u].z, fma(_2261, cbModelParam._m0[9u].y, _2260 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2262, cbModelParam._m0[10u].z, fma(_2261, cbModelParam._m0[10u].y, _2260 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2262, cbModelParam._m0[11u].z, fma(_2261, cbModelParam._m0[11u].y, _2260 * cbModelParam._m0[11u].x))), _1730);
            frontier_phi_18_39_ladder = _2412.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2412.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2412.x * cbModelParam._m0[1u].y;
        }
        _1810 = frontier_phi_18_39_ladder_2;
        _1812 = frontier_phi_18_39_ladder_1;
        _1814 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1798 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_885, _886, _887), _1730);
        _1810 = _1798.x * cbModelParam._m0[1u].y;
        _1812 = _1798.y * cbModelParam._m0[1u].y;
        _1814 = _1798.z * cbModelParam._m0[1u].y;
    }
    float _1818 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _781);
    float _1819 = isnan(_1818) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1818 : min(cbModelParam._m0[25u].w, _1818));
    float _1911;
    float _1913;
    float _1915;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1875 = fma(_950, cbModelParam._m0[21u].z, fma(_946, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _942)) + cbModelParam._m0[21u].w;
        float _1879 = fma(_950, cbModelParam._m0[22u].z, fma(_946, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _942)) + cbModelParam._m0[22u].w;
        float _1883 = fma(_950, cbModelParam._m0[23u].z, fma(_946, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _942)) + cbModelParam._m0[23u].w;
        float _1886 = fma(_887, cbModelParam._m0[21u].z, fma(_886, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _885));
        float _1889 = fma(_887, cbModelParam._m0[22u].z, fma(_886, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _885));
        float _1892 = fma(_887, cbModelParam._m0[23u].z, fma(_886, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _885));
        float _2020;
        if (_1886 > 0.0)
        {
            _2020 = abs((1.0 - _1875) / _1886);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1886 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1875 + 1.0) / _1886);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2020 = frontier_phi_30_26_ladder;
        }
        float _2280;
        if (_1889 > 0.0)
        {
            _2280 = abs((1.0 - _1879) / _1889);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1889 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1879 + 1.0) / _1889);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2280 = frontier_phi_41_37_ladder;
        }
        float _2587;
        if (_1892 > 0.0)
        {
            _2587 = abs((1.0 - _1883) / _1892);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1892 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1883 + 1.0) / _1892);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2587 = frontier_phi_52_47_ladder;
        }
        float _2589 = isnan(_2280) ? _2020 : (isnan(_2020) ? _2280 : min(_2020, _2280));
        float _2590 = isnan(_2587) ? _2589 : (isnan(_2589) ? _2587 : min(_2589, _2587));
        float _2594 = (_2590 * _1886) + _1875;
        float _2595 = (_2590 * _1889) + _1879;
        float _2596 = (_2590 * _1892) + _1883;
        float _2597 = _2590 * 9.9999997473787516355514526367188e-05;
        float _2598 = (-1.0) - _2597;
        float _2600 = _2597 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2596 > _2600) || ((_2596 < _2598) || ((_2595 > _2600) || ((_2595 < _2598) || ((_2594 < _2598) || (_2594 > _2600))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2777 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2596, cbModelParam._m0[17u].z, fma(_2595, cbModelParam._m0[17u].y, _2594 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2596, cbModelParam._m0[18u].z, fma(_2595, cbModelParam._m0[18u].y, _2594 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2596, cbModelParam._m0[19u].z, fma(_2595, cbModelParam._m0[19u].y, _2594 * cbModelParam._m0[19u].x))), _1819);
            frontier_phi_27_52_ladder = _2777.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2777.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2777.y * cbModelParam._m0[1u].z;
        }
        _1911 = frontier_phi_27_52_ladder_1;
        _1913 = frontier_phi_27_52_ladder_2;
        _1915 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1895 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_885, _886, _887), _1819);
        _1911 = _1895.x * cbModelParam._m0[1u].z;
        _1913 = _1895.y * cbModelParam._m0[1u].z;
        _1915 = _1895.z * cbModelParam._m0[1u].z;
    }
    float _1927 = ((((1.0 - _910) * ((_898 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_910 * _898)) * _877;
    float _1928 = _1927 * ((cbModelParam._m0[1u].w * (_1911 - _1810)) + _1810);
    float _1929 = _1927 * ((cbModelParam._m0[1u].w * (_1913 - _1812)) + _1812);
    float _1930 = _1927 * ((cbModelParam._m0[1u].w * (_1915 - _1814)) + _1814);
    float _1933 = fma(_1930, cbSceneParam._m0[89u].z, fma(_1929, cbSceneParam._m0[89u].y, _1928 * cbSceneParam._m0[89u].x));
    float _1936 = fma(_1930, cbSceneParam._m0[90u].z, fma(_1929, cbSceneParam._m0[90u].y, _1928 * cbSceneParam._m0[90u].x));
    float _1939 = fma(_1930, cbSceneParam._m0[91u].z, fma(_1929, cbSceneParam._m0[91u].y, _1928 * cbSceneParam._m0[91u].x));
    vec4 _1947 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_816, _817));
    float _1949 = _1947.w;
    float _1961 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1949);
    float _1962 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1949);
    float _1963 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1949);
    uvec4 _1967 = floatBitsToUint(cbInstanceData._m0[_312 + 5u]);
    uint _1969 = _1967.x * 14u;
    uint _1970 = _1969 + 13u;
    float _1975 = _877 + (-1.0);
    float _1978 = (cbLight._m0[_1970].x * _1975) + 1.0;
    float _1979 = (cbLight._m0[_1970].y * _1975) + 1.0;
    uint _1981 = _1969 + 4u;
    float _1992 = dot(vec3(cbLight._m0[_1969].xyz), vec3(_777, _778, _779));
    float _1995 = isnan(1.0) ? _1978 : (isnan(_1978) ? 1.0 : min(_1978, 1.0));
    float _1996 = cbLight._m0[_1981].x * _1961;
    float _1997 = cbLight._m0[_1981].y * _1962;
    float _1998 = cbLight._m0[_1981].z * _1963;
    uint _1999 = _1969 + 5u;
    uint _2005 = _1969 | 1u;
    float _2011 = dot(vec3(cbLight._m0[_2005].xyz), vec3(_777, _778, _779));
    float _2014 = isnan(1.0) ? _1979 : (isnan(_1979) ? 1.0 : min(_1979, 1.0));
    float _2079;
    float _2080;
    float _2081;
    if (_782 == 0.0)
    {
        float _3851 = isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0));
        float _3862 = isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0));
        float _2033 = (isnan(1.0) ? _3851 : (isnan(_3851) ? 1.0 : min(_3851, 1.0))) * 0.3183098733425140380859375;
        float _2035 = (isnan(1.0) ? _3862 : (isnan(_3862) ? 1.0 : min(_3862, 1.0))) * 0.3183098733425140380859375;
        _2079 = ((cbLight._m0[_1999].x * _2014) * _2035) + ((_1996 * _1995) * _2033);
        _2080 = ((_2014 * cbLight._m0[_1999].y) * _2035) + ((_1997 * _1995) * _2033);
        _2081 = ((_2014 * cbLight._m0[_1999].z) * _2035) + ((_1998 * _1995) * _2033);
    }
    else
    {
        float _2045 = _1992 + _782;
        float _2048 = (_782 * 2.0) + 1.0;
        float _2049 = (isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : max(_2045, 0.0))) / _2048;
        float _2056 = _2011 + _782;
        float _2058 = (isnan(0.0) ? _2056 : (isnan(_2056) ? 0.0 : max(_2056, 0.0))) / _2048;
        _2079 = (((_2058 * cbLight._m0[_1999].x) * _2014) + ((_1996 * _2049) * _1995)) * 0.3183098733425140380859375;
        _2080 = (((_2058 * cbLight._m0[_1999].y) * _2014) + ((_1997 * _2049) * _1995)) * 0.3183098733425140380859375;
        _2081 = (((_2058 * cbLight._m0[_1999].z) * _2014) + ((_1998 * _2049) * _1995)) * 0.3183098733425140380859375;
    }
    uint _2085 = _1969 + 8u;
    float _2101 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1969].w)) * _781) * 0.949999988079071044921875);
    float _2102 = _2101 * _2101;
    float _2103 = cbLight._m0[_1969].x + _524;
    float _2104 = cbLight._m0[_1969].y + _525;
    float _2105 = cbLight._m0[_1969].z + _526;
    float _2109 = inversesqrt(dot(vec3(_2103, _2104, _2105), vec3(_2103, _2104, _2105)));
    float _2110 = _2109 * _2103;
    float _2111 = _2109 * _2104;
    float _2112 = _2109 * _2105;
    float _2113 = dot(vec3(_777, _778, _779), vec3(cbLight._m0[_1969].xyz));
    float _3883 = isnan(0.0) ? _2113 : (isnan(_2113) ? 0.0 : max(_2113, 0.0));
    float _2116 = isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0));
    float _3894 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    float _2117 = isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0));
    float _2118 = dot(vec3(_777, _778, _779), vec3(_2110, _2111, _2112));
    float _3905 = isnan(0.0) ? _2118 : (isnan(_2118) ? 0.0 : max(_2118, 0.0));
    float _2121 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
    float _2122 = dot(vec3(cbLight._m0[_1969].xyz), vec3(_2110, _2111, _2112));
    float _3916 = isnan(0.0) ? _2122 : (isnan(_2122) ? 0.0 : max(_2122, 0.0));
    float _2126 = _2102 * _2102;
    float _2130 = ((_2121 * _2121) * (_2126 + (-1.0))) + 1.0;
    float _2141 = (exp2(log2(1.0 - (isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2142 = 1.0 - _2102;
    float _2153 = (0.5 / (((_2117 * ((_2116 * _2142) + _2102)) + 9.9999999392252902907785028219223e-09) + (((_2117 * _2142) + _2102) * _2116))) * _2116;
    float _3927 = isnan(0.0) ? _2153 : (isnan(_2153) ? 0.0 : max(_2153, 0.0));
    float _2155 = (isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0))) * (_2126 / ((_2130 * _2130) * 3.141590118408203125));
    uint _2171 = _1969 + 9u;
    float _2185 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2005].w)) * _781) * 0.949999988079071044921875);
    float _2186 = _2185 * _2185;
    float _2187 = cbLight._m0[_2005].x + _524;
    float _2188 = cbLight._m0[_2005].y + _525;
    float _2189 = cbLight._m0[_2005].z + _526;
    float _2193 = inversesqrt(dot(vec3(_2187, _2188, _2189), vec3(_2187, _2188, _2189)));
    float _2194 = _2193 * _2187;
    float _2195 = _2193 * _2188;
    float _2196 = _2193 * _2189;
    float _2197 = dot(vec3(_777, _778, _779), vec3(cbLight._m0[_2005].xyz));
    float _3938 = isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0));
    float _2200 = isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0));
    float _2201 = dot(vec3(_777, _778, _779), vec3(_2194, _2195, _2196));
    float _3949 = isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : max(_2201, 0.0));
    float _2204 = isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0));
    float _2205 = dot(vec3(cbLight._m0[_2005].xyz), vec3(_2194, _2195, _2196));
    float _3960 = isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0));
    float _2209 = _2186 * _2186;
    float _2213 = ((_2204 * _2204) * (_2209 + (-1.0))) + 1.0;
    float _2222 = (exp2(log2(1.0 - (isnan(1.0) ? _3960 : (isnan(_3960) ? 1.0 : min(_3960, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2223 = 1.0 - _2186;
    float _2233 = (0.5 / (((_2117 * ((_2200 * _2223) + _2186)) + 9.9999999392252902907785028219223e-09) + (((_2117 * _2223) + _2186) * _2200))) * _2200;
    float _3971 = isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0));
    float _2235 = (isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0))) * (_2209 / ((_2213 * _2213) * 3.141590118408203125));
    float _2245 = (((_2222 * cbLight._m0[_2171].x) * _2235) * _2014) + ((((cbLight._m0[_2085].x * _1961) * _2141) * _2155) * _1995);
    float _2246 = (((_2222 * cbLight._m0[_2171].y) * _2235) * _2014) + ((((cbLight._m0[_2085].y * _1962) * _2141) * _2155) * _1995);
    float _2247 = (((_2222 * cbLight._m0[_2171].z) * _2235) * _2014) + ((((cbLight._m0[_2085].z * _1963) * _2141) * _2155) * _1995);
    float _2383;
    float _2385;
    float _2387;
    float _2389;
    float _2391;
    float _2393;
    if (_1967.y == 0u)
    {
        float _2324 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2325 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2324;
        float _2326 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2324;
        float _2327 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2324;
        uvec4 _2339 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2340 = _2339.x;
        uint _2351 = uint((float(_2339.y) * floor(float(uint(cbSceneParam._m0[85u].y * _817) / _2340))) + floor(float(uint(cbSceneParam._m0[85u].x * _816) / _2340)));
        float _2361 = (log2(_2327 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2362 = isnan(0.0) ? _2361 : (isnan(_2361) ? 0.0 : max(_2361, 0.0));
        uint _2365 = uint(isnan(14.0) ? _2362 : (isnan(_2362) ? 14.0 : min(_2362, 14.0)));
        uint _2372 = _2339.z;
        float _2421;
        float _2423;
        float _2425;
        float _2427;
        float _2429;
        float _2431;
        if (((((1u << ((_2372 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2365 << 2u) + (_2351 << 6u)) >> 2u)).x) == 0u) || ((_2372 & 240u) == 0u))
        {
            _2421 = 0.0;
            _2423 = 0.0;
            _2425 = 0.0;
            _2427 = 0.0;
            _2429 = 0.0;
            _2431 = 0.0;
        }
        else
        {
            float _2422;
            float _2424;
            float _2426;
            float _2428;
            float _2430;
            float _2432;
            float _2613 = 0.0;
            float _2614 = 0.0;
            float _2615 = 0.0;
            float _2616 = 0.0;
            float _2617 = 0.0;
            float _2618 = 0.0;
            uint _2619 = 0u;
            uint _2628;
            bool _2629;
            for (;;)
            {
                _2628 = texelFetch(g_lightClassification, int((((_2365 << 5u) + (_2351 << 9u)) + (_2619 << 2u)) >> 2u)).x;
                _2629 = _2628 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2629)
                {
                    frontier_phi_58_pred = _2613;
                    frontier_phi_58_pred_1 = _2618;
                    frontier_phi_58_pred_2 = _2617;
                    frontier_phi_58_pred_3 = _2616;
                    frontier_phi_58_pred_4 = _2615;
                    frontier_phi_58_pred_5 = _2614;
                }
                else
                {
                    float _2850;
                    float _2851;
                    float _2852;
                    float _2853;
                    float _2854;
                    float _2855;
                    uint _2856;
                    _2850 = _2613;
                    _2851 = _2614;
                    _2852 = _2615;
                    _2853 = _2616;
                    _2854 = _2617;
                    _2855 = _2618;
                    _2856 = _2628;
                    float _2782;
                    float _2783;
                    float _2784;
                    float _2785;
                    float _2786;
                    float _2787;
                    for (;;)
                    {
                        uint _2860 = uint(findLSB(_2856)) + (_2619 << 5u);
                        uint _2857 = (_2856 + 4294967295u) & _2856;
                        uint _2862 = _2860 * 48u;
                        vec4 _2876 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2862)).x, texelFetch(g_PointLightRenderingBuffer, int(_2862 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2862 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2862 + 3u)).x));
                        uint _2882 = (_2860 * 48u) + 4u;
                        vec4 _2895 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2882)).x, texelFetch(g_PointLightRenderingBuffer, int(_2882 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2882 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2882 + 3u)).x));
                        float _2896 = _2895.x;
                        float _2897 = _2895.y;
                        float _2898 = _2895.z;
                        uint _2901 = (_2860 * 48u) + 8u;
                        vec3 _2912 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2901)).x, texelFetch(g_PointLightRenderingBuffer, int(_2901 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2901 + 2u)).x));
                        uint _2917 = (_2860 * 48u) + 12u;
                        vec2 _2925 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2917)).x, texelFetch(g_PointLightRenderingBuffer, int(_2917 + 1u)).x));
                        float _2931 = inversesqrt(dot(vec3(_2325, _2326, _2327), vec3(_2325, _2326, _2327)));
                        float _2932 = _2931 * _2325;
                        float _2933 = _2931 * _2326;
                        float _2934 = _2931 * _2327;
                        float _2935 = _2876.x - _2325;
                        float _2936 = _2876.y - _2326;
                        float _2937 = _2876.z - _2327;
                        float _2938 = dot(vec3(_2935, _2936, _2937), vec3(_2935, _2936, _2937));
                        float _2941 = inversesqrt(_2938);
                        float _2942 = _2941 * _2935;
                        float _2943 = _2941 * _2936;
                        float _2944 = _2941 * _2937;
                        float _2945 = dot(vec3(_835, _838, _841), vec3(_2942, _2943, _2944));
                        float _2950 = 1.0 - (_2938 * _2876.w);
                        float _3992 = isnan(0.0) ? _2950 : (isnan(_2950) ? 0.0 : max(_2950, 0.0));
                        float _2951 = isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0));
                        float _2952 = sqrt(_2938) * _2895.w;
                        float _2955 = 1.39999997615814208984375 / (_2952 + 1.39999997615814208984375);
                        float _2956 = _2955 * _2955;
                        float _2957 = 1.0 - _2956;
                        float _2959 = (_2957 * _2957) * _782;
                        float _2962 = ((_2957 * _2945) + _2956) + _2959;
                        float _2967 = _2952 * _2952;
                        float _2972 = ((isnan(0.0) ? _2962 : (isnan(_2962) ? 0.0 : max(_2962, 0.0))) * _2951) / (((_2959 * 2.0) + 1.0) * ((_2967 * 0.699999988079071044921875) + 1.0));
                        float _2976 = dot(vec3(_2942, _2943, _2944), vec3(_2932, _2933, _2934));
                        float _4008 = isnan(0.0) ? _2976 : (isnan(_2976) ? 0.0 : max(_2976, 0.0));
                        float _2983 = dot(vec3((-0.0) - _2932, (-0.0) - _2933, (-0.0) - _2934), vec3(_835, _838, _841)) + 1.0;
                        float _2985 = (isnan(0.0) ? _2983 : (isnan(_2983) ? 0.0 : max(_2983, 0.0))) * 0.5;
                        float _2992 = ((_2985 * _2985) * _2925.x) * exp2((_2925.y * 32.0) * log2(isnan(1.0) ? _4008 : (isnan(_4008) ? 1.0 : min(_4008, 1.0))));
                        float _2994 = _782 / (_782 + 1.0);
                        float _3010 = (-0.0) - _2325;
                        float _3011 = (-0.0) - _2326;
                        float _3012 = (-0.0) - _2327;
                        float _3016 = inversesqrt(dot(vec3(_3010, _3011, _3012), vec3(_3010, _3011, _3012)));
                        float _3017 = _3016 * _3010;
                        float _3018 = _3016 * _3011;
                        float _3019 = _3016 * _3012;
                        float _3027 = exp2(log2(1.0 / ((_2967 * 3.5) + 5.0)) * 0.25);
                        float _3028 = 1.0 - _898;
                        float _3035 = sqrt(1.0 - ((1.0 - (_3028 * _3028)) * (1.0 - (_3027 * _3027))));
                        float _3036 = _3035 * _3035;
                        float _3037 = _3036 * _3036;
                        float _3038 = _3017 + _2942;
                        float _3039 = _3018 + _2943;
                        float _3040 = _3019 + _2944;
                        float _3044 = inversesqrt(dot(vec3(_3038, _3039, _3040), vec3(_3038, _3039, _3040)));
                        float _3048 = dot(vec3(_835, _838, _841), vec3(_3017, _3018, _3019));
                        float _4024 = isnan(0.0) ? _3048 : (isnan(_3048) ? 0.0 : max(_3048, 0.0));
                        float _3051 = isnan(1.0) ? _4024 : (isnan(_4024) ? 1.0 : min(_4024, 1.0));
                        float _3052 = dot(vec3(_835, _838, _841), vec3(_3044 * _3038, _3044 * _3039, _3044 * _3040));
                        float _4035 = isnan(0.0) ? _3052 : (isnan(_3052) ? 0.0 : max(_3052, 0.0));
                        float _3055 = isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0));
                        float _3059 = ((_3055 * _3055) * (_3037 + (-1.0))) + 1.0;
                        float _3060 = _2955 * _3036;
                        float _3061 = _3060 * _3060;
                        float _3064 = ((1.0 - _3061) * _2945) + _3061;
                        float _4046 = isnan(0.0) ? _3064 : (isnan(_3064) ? 0.0 : max(_3064, 0.0));
                        float _3065 = isnan(1.0) ? _4046 : (isnan(_4046) ? 1.0 : min(_4046, 1.0));
                        float _3066 = 1.0 - _3036;
                        float _3076 = (0.5 / (((_3065 * ((_3051 * _3066) + _3036)) + 9.9999999392252902907785028219223e-09) + (((_3065 * _3066) + _3036) * _3051))) * _3065;
                        float _4057 = isnan(0.0) ? _3076 : (isnan(_3076) ? 0.0 : max(_3076, 0.0));
                        float _3087 = (((_3037 * 3.1415927410125732421875) * (isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0)))) / ((_3059 * _3059) * ((_2967 * 2.1991131305694580078125) + 3.141590118408203125))) * _2951;
                        _2785 = (((((_2896 * 0.3183098733425140380859375) * _2994) * _2992) + _2896) * _2972) + _2853;
                        _2786 = (((((_2897 * 0.3183098733425140380859375) * _2994) * _2992) + _2897) * _2972) + _2854;
                        _2787 = (((((_2898 * 0.3183098733425140380859375) * _2994) * _2992) + _2898) * _2972) + _2855;
                        _2782 = (_3087 * _2912.x) + _2850;
                        _2783 = (_3087 * _2912.y) + _2851;
                        _2784 = (_3087 * _2912.z) + _2852;
                        if (_2857 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2850 = _2782;
                            _2851 = _2783;
                            _2852 = _2784;
                            _2853 = _2785;
                            _2854 = _2786;
                            _2855 = _2787;
                            _2856 = _2857;
                        }
                    }
                    frontier_phi_58_pred = _2782;
                    frontier_phi_58_pred_1 = _2787;
                    frontier_phi_58_pred_2 = _2786;
                    frontier_phi_58_pred_3 = _2785;
                    frontier_phi_58_pred_4 = _2784;
                    frontier_phi_58_pred_5 = _2783;
                }
                _2422 = frontier_phi_58_pred;
                _2432 = frontier_phi_58_pred_1;
                _2430 = frontier_phi_58_pred_2;
                _2428 = frontier_phi_58_pred_3;
                _2426 = frontier_phi_58_pred_4;
                _2424 = frontier_phi_58_pred_5;
                uint _2620 = _2619 + 1u;
                if (_2620 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2613 = _2422;
                    _2614 = _2424;
                    _2615 = _2426;
                    _2616 = _2428;
                    _2617 = _2430;
                    _2618 = _2432;
                    _2619 = _2620;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2421 = _2422;
            _2423 = _2424;
            _2425 = _2426;
            _2427 = _2428;
            _2429 = _2430;
            _2431 = _2432;
        }
        float _2436 = isnan(1.0) ? _877 : (isnan(_877) ? 1.0 : min(_877, 1.0));
        _2383 = (_2436 * _2427) + _2079;
        _2385 = (_2436 * _2429) + _2080;
        _2387 = (_2436 * _2431) + _2081;
        _2389 = ((_2421 * 0.039999999105930328369140625) * _2436) + _2245;
        _2391 = ((_2423 * 0.039999999105930328369140625) * _2436) + _2246;
        _2393 = ((_2425 * 0.039999999105930328369140625) * _2436) + _2247;
    }
    else
    {
        _2383 = _2079;
        _2385 = _2080;
        _2387 = _2081;
        _2389 = _2245;
        _2391 = _2246;
        _2393 = _2247;
    }
    float _2510;
    float _2511;
    float _2512;
    if (_782 > 0.0)
    {
        uint _2443 = _1969 + 4u;
        float _2449 = (-0.0) - _524;
        float _2450 = (-0.0) - _525;
        float _2451 = (-0.0) - _526;
        float _2452 = dot(vec3(cbLight._m0[_1969].xyz), vec3(_2449, _2450, _2451));
        float _4073 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
        float _2456 = _888 + 1.0;
        float _2458 = (isnan(0.0) ? _2456 : (isnan(_2456) ? 0.0 : max(_2456, 0.0))) * 0.5;
        float _2463 = _2458 * _2458;
        float _2464 = _2463 * exp2(log2(isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0))) * 32.0);
        float _2466 = _782 / (_782 + 1.0);
        float _2467 = isnan(_1978) ? 1.0 : (isnan(1.0) ? _1978 : min(1.0, _1978));
        uint _2480 = _1969 + 5u;
        float _2486 = dot(vec3(cbLight._m0[_2005].xyz), vec3(_2449, _2450, _2451));
        float _4094 = isnan(0.0) ? _2486 : (isnan(_2486) ? 0.0 : max(_2486, 0.0));
        float _2493 = _2463 * exp2(log2(isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0))) * 32.0);
        float _2494 = isnan(_1979) ? 1.0 : (isnan(1.0) ? _1979 : min(1.0, _1979));
        _2510 = ((((_2493 * cbLight._m0[_2480].x) * _2466) * _2494) + ((((cbLight._m0[_2443].x * _1961) * _2464) * _2466) * _2467)) * 0.3183098733425140380859375;
        _2511 = ((((_2493 * cbLight._m0[_2480].y) * _2466) * _2494) + ((((cbLight._m0[_2443].y * _1962) * _2464) * _2466) * _2467)) * 0.3183098733425140380859375;
        _2512 = ((((_2493 * cbLight._m0[_2480].z) * _2466) * _2494) + ((((cbLight._m0[_2443].z * _1963) * _2464) * _2466) * _2467)) * 0.3183098733425140380859375;
    }
    else
    {
        _2510 = 0.0;
        _2511 = 0.0;
        _2512 = 0.0;
    }
    float _4110 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _4121 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    float _4132 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
    float _4143 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _2527 = (isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0))) * ((_2383 + ((isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0))) * _877)) + _2510);
    float _2528 = (isnan(1.0) ? _4121 : (isnan(_4121) ? 1.0 : min(_4121, 1.0))) * ((_2385 + ((isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0))) * _877)) + _2511);
    float _2529 = (isnan(1.0) ? _4132 : (isnan(_4132) ? 1.0 : min(_4132, 1.0))) * ((_2387 + ((isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0))) * _877)) + _2512);
    float _2533 = 0.959999978542327880859375 - (exp2(log2(1.0 - _892) * 5.0) * 0.959999978542327880859375);
    float _2544 = (_2527 + ((_2389 + ((isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0))) * _1719)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _716.x) * _2533) - _2527) * _762);
    float _2546 = (_2528 + ((_2391 + ((isnan(0.0) ? _1936 : (isnan(_1936) ? 0.0 : max(_1936, 0.0))) * _1719)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _716.y) * _2533) - _2528) * _762);
    float _2548 = (_2529 + ((_2393 + ((isnan(0.0) ? _1939 : (isnan(_1939) ? 0.0 : max(_1939, 0.0))) * _1719)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _716.z) * _2533) - _2529) * _762);
    float _2553 = cbInstanceData._m0[_312 + 6u].w * (isnan(1.0) ? _4143 : (isnan(_4143) ? 1.0 : min(_4143, 1.0)));
    float _2558 = _816 / cbSceneParam._m0[86u].x;
    float _2559 = _817 / cbSceneParam._m0[86u].y;
    vec4 _2573 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2558, _2559, (log2((isnan(cbSceneParam._m0[77u].w) ? _799 : (isnan(_799) ? cbSceneParam._m0[77u].w : min(_799, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2575 = _2573.x;
    float _2576 = _2573.y;
    float _2577 = _2573.z;
    float _2578 = _2573.w;
    float _2671;
    float _2673;
    float _2675;
    float _2677;
    if (_799 > cbSceneParam._m0[78u].w)
    {
        float _2634 = isnan(_799) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _799 : min(cbSceneParam._m0[80u].w, _799));
        float _2635 = _2634 / _799;
        float _2646 = _2635 * _304;
        float _2647 = _305 * _2635;
        float _2648 = (-0.0) - _2647;
        float _2649 = _2635 * _306;
        float _2651 = (cbSceneParam._m0[77u].w * _2648) / _2634;
        float _2652 = _2651 + cbSceneParam._m0[79u].w;
        float _2653 = cbSceneParam._m0[79u].w - _2647;
        float _2659 = sqrt(((_2646 * _2646) + (_2647 * _2647)) + (_2649 * _2649));
        float _2662 = (1.0 - (cbSceneParam._m0[77u].w / _2634)) * _2659;
        float _2667 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2669 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3092;
        if (abs((_2648 - _2651) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3092 = ((((_2652 > 0.0) ? exp2(_2667 * _2652) : (2.0 - exp2(_2669 * _2652))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2662;
        }
        else
        {
            float _2807 = 1.0 / cbSceneParam._m0[80u].x;
            float _2808 = isnan(_2653) ? _2652 : (isnan(_2652) ? _2653 : max(_2652, _2653));
            float _2809 = isnan(_2653) ? _2652 : (isnan(_2652) ? _2653 : min(_2652, _2653));
            float _2818 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : min(_2808, 0.0));
            float _2819 = isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : min(_2809, 0.0));
            _3092 = ((abs(_2659 / _2648) * cbSceneParam._m0[80u].y) * ((((_2818 - _2819) * 2.0) - ((exp2(_2667 * (isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0)))) - exp2(_2667 * (isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : max(_2809, 0.0))))) * _2807)) - ((exp2(_2669 * _2818) - exp2(_2669 * _2819)) * _2807))) + (_2662 * cbSceneParam._m0[80u].z);
        }
        vec4 _3094 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2558, _2559, 1.0), 0.0);
        float _3103 = exp2((_3092 * (-1.44269502162933349609375)) * (1.0 - _3094.w));
        float _3104 = log2(_3103);
        float _3120 = log2(_2578);
        _2671 = (exp2(_3120 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3104 * cbSceneParam._m0[78u].x)) * _3094.x) / cbSceneParam._m0[78u].x)) + _2575;
        _2673 = (exp2(_3120 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3104 * cbSceneParam._m0[78u].y)) * _3094.y) / cbSceneParam._m0[78u].y)) + _2576;
        _2675 = (exp2(_3120 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3104 * cbSceneParam._m0[78u].z)) * _3094.z) / cbSceneParam._m0[78u].z)) + _2577;
        _2677 = _3103 * _2578;
    }
    else
    {
        _2671 = _2575;
        _2673 = _2576;
        _2675 = _2577;
        _2677 = _2578;
    }
    bool _3130;
    float _2732;
    vec4 _2735;
    float _2737;
    vec4 _2739;
    float _2747;
    float _2748;
    float _2749;
    float _2750;
    bool _2760;
    for (;;)
    {
        bool _2689 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2690 = log2(_2677);
        float _2697 = exp2(_2690 * cbSceneParam._m0[78u].x) * _2544;
        float _2698 = exp2(_2690 * cbSceneParam._m0[78u].y) * _2546;
        float _2699 = exp2(_2690 * cbSceneParam._m0[78u].z) * _2548;
        vec4 _2707 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_816, _817));
        float _2709 = _2707.x;
        float _2730 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2709)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2709))) - _799) * cbMtdParam._m0[17u].y;
        float _4194 = isnan(0.0) ? _2730 : (isnan(_2730) ? 0.0 : max(_2730, 0.0));
        _2732 = _2553 * (isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0)));
        float _2733 = _806 + (-0.5);
        _2735 = cbMtdParam._m0[1u];
        _2737 = _2735.y * _2733;
        _2739 = cbMatDynParam._m0[0u];
        float _2746 = (roundEven(_2739.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2747 = _2746 * (_2689 ? _2697 : (_2697 + (cbSceneParam._m0[72u].w * _2671)));
        _2748 = _2746 * (_2689 ? _2698 : (_2698 + (cbSceneParam._m0[72u].w * _2673)));
        _2749 = _2746 * (_2689 ? _2699 : (_2699 + (cbSceneParam._m0[72u].w * _2675)));
        _2750 = _2733 * 0.999000012874603271484375;
        _2760 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2760)
        {
            if ((cbInstanceData._m0[_312 + 7u].x + _2750) < 0.5)
            {
                _3130 = true;
                break;
            }
        }
        uint _2842 = _854 + uint(_2739.w);
        if ((cbInstanceData._m0[_2842].w < 1.0) && ((cbInstanceData._m0[_2842].w + _2750) < 0.5))
        {
            _3130 = true;
            break;
        }
        if ((_2737 + _434) < _2735.x)
        {
            _3130 = true;
            break;
        }
        _3130 = false;
        break;
    }
    float _3135;
    if (_3130)
    {
        discard_state = true;
        _3135 = 0.0;
    }
    else
    {
        _3135 = _2732;
    }
    SV_Target.x = _2747;
    SV_Target.y = _2748;
    SV_Target.z = _2749;
    SV_Target.w = _3135;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2732;
    discard_exit();
}


