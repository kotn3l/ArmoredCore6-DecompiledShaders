#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1090;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _198 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _199 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _200 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _206 = inversesqrt(dot(vec3(_198, _199, _200), vec3(_198, _199, _200)));
    float _207 = _206 * _198;
    float _208 = _206 * _199;
    float _209 = _206 * _200;
    float _213 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _214 = _213 * NORMAL.x;
    float _215 = _213 * NORMAL.y;
    float _216 = _213 * NORMAL.z;
    float _220 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _221 = _220 * TANGENT.x;
    float _222 = _220 * TANGENT.y;
    float _223 = _220 * TANGENT.z;
    float _228;
    float _229;
    float _230;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _228 = (-0.0) - _214;
        _229 = (-0.0) - _215;
        _230 = (-0.0) - _216;
    }
    else
    {
        _228 = _214;
        _229 = _215;
        _230 = _216;
    }
    float _275 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _285 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _275);
    float _286 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _275);
    float _287 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _275);
    vec4 _301 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _310 = (_301.x * 2.0) + (-1.0);
    float _312 = (_301.y * 2.0) + (-1.0);
    float _313 = dot(vec2(_310, _312), vec2(_310, _312));
    float _2977 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
    float _319 = sqrt(1.0 - (isnan(1.0) ? _2977 : (isnan(_2977) ? 1.0 : min(_2977, 1.0))));
    float _322 = fma(_319, _228, fma(_312, _221, _310 * _207));
    float _325 = fma(_319, _229, fma(_312, _222, _310 * _208));
    float _328 = fma(_319, _230, fma(_312, _223, _310 * _209));
    float _332 = inversesqrt(dot(vec3(_322, _325, _328), vec3(_322, _325, _328)));
    vec4 _346 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _351 = _346.w;
    float _363 = dot(vec3(_285, _286, _287), vec3(_207, _208, _209));
    float _366 = dot(vec3(_285, _286, _287), vec3(_221, _222, _223));
    float _369 = dot(vec3(_285, _286, _287), vec3(_228, _229, _230));
    float _375 = inversesqrt(dot(vec3(_363, _366, _369), vec3(_363, _366, _369)));
    float _397 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _417 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_363 * cbMtdParam._m0[14u].x) * _375) * _397) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_366 * cbMtdParam._m0[14u].x) * _375) * _397) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _441 = inversesqrt(dot(vec3(_285, _286, _287), vec3(_285, _286, _287)));
    float _442 = _441 * _285;
    float _443 = _441 * _286;
    float _444 = _441 * _287;
    float _445 = dot(vec4(_442, _443, _444, 0.0), vec4(_228, _229, _230, 0.0));
    float _448 = _445 - cbMtdParam._m0[15u].z;
    float _2988 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    float _455 = exp2(log2(1.0 - (isnan(1.0) ? _2988 : (isnan(_2988) ? 1.0 : min(_2988, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _470 = ((((_346.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _417.x) * cbMtdParam._m0[9u].x) * ((_455 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _475 = ((((_346.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _417.y) * cbMtdParam._m0[9u].y) * ((_455 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _480 = ((((_346.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _417.z) * cbMtdParam._m0[9u].z) * ((_455 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    vec4 _496 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _508 = cbMtdParam._m0[17u].z + _301.z;
    float _514 = (_508 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_496.z - _508));
    float _520 = ((((_496.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _310;
    float _521 = ((((_496.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _312;
    vec4 _533 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _537 = cbMtdParam._m0[16u].w * _533.x;
    float _549 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _550 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _560 = cbSceneParam._m0[86u].x * ((_549 / cbSceneParam._m0[86u].x) + ((_332 * _322) * cbMtdParam._m0[18u].y));
    float _561 = cbSceneParam._m0[86u].y * ((_550 / cbSceneParam._m0[86u].y) + ((_332 * _325) * cbMtdParam._m0[18u].y));
    float _568 = isnan(cbInstanceData._m0[8u].x) ? _560 : (isnan(_560) ? cbInstanceData._m0[8u].x : max(_560, cbInstanceData._m0[8u].x));
    float _569 = isnan(cbInstanceData._m0[8u].y) ? _561 : (isnan(_561) ? cbInstanceData._m0[8u].y : max(_561, cbInstanceData._m0[8u].y));
    vec4 _573 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _568 : (isnan(_568) ? cbInstanceData._m0[8u].z : min(_568, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _569 : (isnan(_569) ? cbInstanceData._m0[8u].w : min(_569, cbInstanceData._m0[8u].w))));
    float _606 = _445 - cbMtdParam._m0[15u].x;
    float _3024 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _616 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3024 : (isnan(_3024) ? 1.0 : min(_3024, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3040 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _617 = isnan(1.0) ? _3040 : (isnan(_3040) ? 1.0 : min(_3040, 1.0));
    float _621 = fma(_319, _228, fma(_521, _221, _520 * _207));
    float _624 = fma(_319, _229, fma(_521, _222, _520 * _208));
    float _627 = fma(_319, _230, fma(_521, _223, _520 * _209));
    float _631 = inversesqrt(dot(vec3(_621, _624, _627), vec3(_621, _624, _627)));
    float _632 = _631 * _621;
    float _633 = _631 * _624;
    float _634 = _631 * _627;
    float _3051 = isnan(0.0) ? _351 : (isnan(_351) ? 0.0 : max(_351, 0.0));
    float _635 = isnan(1.0) ? _3051 : (isnan(_3051) ? 1.0 : min(_3051, 1.0));
    float _3062 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _636 = isnan(1.0) ? _3062 : (isnan(_3062) ? 1.0 : min(_3062, 1.0));
    float _637 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _3078 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _3089 = isnan(0.0) ? _475 : (isnan(_475) ? 0.0 : max(_475, 0.0));
    float _3100 = isnan(0.0) ? _480 : (isnan(_480) ? 0.0 : max(_480, 0.0));
    float _656 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _675 = fma(_634, cbSceneParam._m0[5u].z, fma(_633, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _632));
    float _678 = fma(_634, cbSceneParam._m0[6u].z, fma(_633, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _632));
    float _681 = fma(_634, cbSceneParam._m0[7u].z, fma(_633, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _632));
    uint _694 = uint(roundEven(NORMAL.w)) * 13u;
    uint _696 = (_694 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _702 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3078 : (isnan(_3078) ? 1.0 : min(_3078, 1.0)))) * cbInstanceData._m0[_696].x;
    float _703 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3089 : (isnan(_3089) ? 1.0 : min(_3089, 1.0)))) * cbInstanceData._m0[_696].y;
    float _704 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3100 : (isnan(_3100) ? 1.0 : min(_3100, 1.0)))) * cbInstanceData._m0[_696].z;
    float _3111 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _705 = isnan(1.0) ? _3111 : (isnan(_3111) ? 1.0 : min(_3111, 1.0));
    float _3122 = isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0));
    float _706 = isnan(1.0) ? _3122 : (isnan(_3122) ? 1.0 : min(_3122, 1.0));
    float _3133 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _707 = isnan(1.0) ? _3133 : (isnan(_3133) ? 1.0 : min(_3133, 1.0));
    vec4 _711 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _549, cbSceneParam._m0[86u].y * _550));
    float _714 = _711.x * TEXCOORD_5.w;
    float _715 = dot(vec3(_632, _633, _634), vec3(_442, _443, _444));
    float _718 = _715 * 2.0;
    float _722 = (_718 * _632) - _442;
    float _723 = (_718 * _633) - _443;
    float _724 = (_718 * _634) - _444;
    float _725 = dot(vec3(_442, _443, _444), vec3(_632, _633, _634));
    float _728 = abs(_725);
    float _3144 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _729 = isnan(1.0) ? _3144 : (isnan(_3144) ? 1.0 : min(_3144, 1.0));
    float _735 = sqrt(_636);
    float _747 = exp2((_735 * 5.0) * log2(1.0 - (_729 * 0.999000012874603271484375))) / (4.0 - (_735 * 3.0));
    float _779 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _783 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _787 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1089;
    float _1091;
    float _1092;
    float _1093;
    float _1094;
    float _1095;
    float _1096;
    float _1097;
    float _1098;
    float _1099;
    float _1100;
    float _1101;
    float _1102;
    float _1103;
    float _1104;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _814 = fma(_787, cbModelParam._m0[26u].z, fma(_783, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _779));
        float _818 = fma(_787, cbModelParam._m0[27u].z, fma(_783, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _779));
        float _822 = fma(_787, cbModelParam._m0[28u].z, fma(_783, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _779));
        float _847 = _779 + _632;
        float _848 = _783 + _633;
        float _849 = _787 + _634;
        float _859 = fma(_849, cbModelParam._m0[26u].z, fma(_848, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _847)) - _814;
        float _860 = fma(_849, cbModelParam._m0[27u].z, fma(_848, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _847)) - _818;
        float _861 = fma(_849, cbModelParam._m0[28u].z, fma(_848, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _847)) - _822;
        float _865 = inversesqrt(dot(vec3(_859, _860, _861), vec3(_859, _860, _861)));
        float _878 = ((_865 * _859) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_814 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _879 = ((_865 * _860) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_818 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _880 = ((_865 * _861) / cbModelParam._m0[34u].z) + ((((((_822 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _883 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_878, _879, _880), 0.0);
        vec4 _890 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_878, _879, _880), 0.0);
        vec4 _897 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_878, _879, _880), 0.0);
        vec4 _904 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_878, _879, _880), 0.0);
        float _917 = exp2((_883.w + (-0.5)) * 20.0) * 2.0;
        float _918 = _917 * (_883.x + (-0.5));
        float _919 = _917 * (_883.y + (-0.5));
        float _920 = _917 * (_883.z + (-0.5));
        float _927 = exp2((_890.w + (-0.5)) * 20.0) * 2.0;
        float _928 = _927 * (_890.x + (-0.5));
        float _929 = _927 * (_890.y + (-0.5));
        float _930 = _927 * (_890.z + (-0.5));
        float _937 = exp2((_897.w + (-0.5)) * 20.0) * 2.0;
        float _938 = _937 * (_897.x + (-0.5));
        float _939 = _937 * (_897.y + (-0.5));
        float _940 = _937 * (_897.z + (-0.5));
        float _947 = exp2((_904.w + (-0.5)) * 20.0) * 2.0;
        float _948 = _947 * (_904.x + (-0.5));
        float _949 = _947 * (_904.y + (-0.5));
        float _950 = _947 * (_904.z + (-0.5));
        float _951 = isnan(0.0) ? _948 : (isnan(_948) ? 0.0 : max(_948, 0.0));
        float _952 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
        float _953 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
        float _954 = _918 * 0.5;
        float _955 = _928 * 0.5;
        float _956 = _938 * 0.5;
        float _957 = dot(vec3(_954, _955, _956), vec3(_954, _955, _956));
        float _962 = (_957 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_957);
        float _971 = (dot(vec3(_632, _633, _634), vec3(_962 * _954, _962 * _955, _962 * _956)) + 1.0) * 0.5;
        float _3170 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
        float _981 = sqrt(((_955 * _955) + (_954 * _954)) + (_956 * _956)) / (_951 + 9.9999997473787516355514526367188e-06);
        float _3181 = isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0));
        float _982 = isnan(1.0) ? _3181 : (isnan(_3181) ? 1.0 : min(_3181, 1.0));
        float _983 = _982 * 2.0;
        float _987 = (1.0 - _982) / (_982 + 1.0);
        float _3192 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
        float _988 = isnan(1.0) ? _3192 : (isnan(_3192) ? 1.0 : min(_3192, 1.0));
        float _997 = ((((1.0 - _988) * (_983 + 2.0)) * exp2(log2(isnan(1.0) ? _3170 : (isnan(_3170) ? 1.0 : min(_3170, 1.0))) * (_983 + 1.0))) + _988) * _951;
        float _998 = _919 * 0.5;
        float _999 = _929 * 0.5;
        float _1000 = _939 * 0.5;
        float _1001 = dot(vec3(_998, _999, _1000), vec3(_998, _999, _1000));
        float _1006 = (_1001 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1001);
        float _1014 = (dot(vec3(_632, _633, _634), vec3(_1006 * _998, _1006 * _999, _1006 * _1000)) + 1.0) * 0.5;
        float _3203 = isnan(0.0) ? _1014 : (isnan(_1014) ? 0.0 : max(_1014, 0.0));
        float _1023 = sqrt(((_999 * _999) + (_998 * _998)) + (_1000 * _1000)) / (_952 + 9.9999997473787516355514526367188e-06);
        float _3214 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
        float _1024 = isnan(1.0) ? _3214 : (isnan(_3214) ? 1.0 : min(_3214, 1.0));
        float _1025 = _1024 * 2.0;
        float _1029 = (1.0 - _1024) / (_1024 + 1.0);
        float _3225 = isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0));
        float _1030 = isnan(1.0) ? _3225 : (isnan(_3225) ? 1.0 : min(_3225, 1.0));
        float _1039 = ((((1.0 - _1030) * (_1025 + 2.0)) * exp2(log2(isnan(1.0) ? _3203 : (isnan(_3203) ? 1.0 : min(_3203, 1.0))) * (_1025 + 1.0))) + _1030) * _952;
        float _1040 = _920 * 0.5;
        float _1041 = _930 * 0.5;
        float _1042 = _940 * 0.5;
        float _1043 = dot(vec3(_1040, _1041, _1042), vec3(_1040, _1041, _1042));
        float _1048 = (_1043 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1043);
        float _1056 = (dot(vec3(_632, _633, _634), vec3(_1048 * _1040, _1048 * _1041, _1048 * _1042)) + 1.0) * 0.5;
        float _3236 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
        float _1065 = sqrt(((_1041 * _1041) + (_1040 * _1040)) + (_1042 * _1042)) / (_953 + 9.9999997473787516355514526367188e-06);
        float _3247 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
        float _1066 = isnan(1.0) ? _3247 : (isnan(_3247) ? 1.0 : min(_3247, 1.0));
        float _1067 = _1066 * 2.0;
        float _1071 = (1.0 - _1066) / (_1066 + 1.0);
        float _3258 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
        float _1072 = isnan(1.0) ? _3258 : (isnan(_3258) ? 1.0 : min(_3258, 1.0));
        float _1081 = ((((1.0 - _1072) * (_1067 + 2.0)) * exp2(log2(isnan(1.0) ? _3236 : (isnan(_3236) ? 1.0 : min(_3236, 1.0))) * (_1067 + 1.0))) + _1072) * _953;
        _1089 = _920;
        _1091 = _919;
        _1092 = _918;
        _1093 = _930;
        _1094 = _929;
        _1095 = _928;
        _1096 = _940;
        _1097 = _939;
        _1098 = _938;
        _1099 = _953;
        _1100 = _952;
        _1101 = _951;
        _1102 = cbModelParam._m0[36u].z * (isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0)));
        _1103 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1039 : (isnan(_1039) ? 0.0 : max(_1039, 0.0)));
        _1104 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0)));
    }
    else
    {
        _1089 = _1090;
        _1091 = _1090;
        _1092 = _1090;
        _1093 = _1090;
        _1094 = _1090;
        _1095 = _1090;
        _1096 = _1090;
        _1097 = _1090;
        _1098 = _1090;
        _1099 = _1090;
        _1100 = _1090;
        _1101 = _1090;
        _1102 = 0.0;
        _1103 = 0.0;
        _1104 = 0.0;
    }
    float _1399;
    float _1400;
    float _1401;
    float _1402;
    float _1403;
    float _1404;
    float _1405;
    float _1406;
    float _1407;
    float _1408;
    float _1409;
    float _1410;
    float _1411;
    float _1412;
    float _1413;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1130 = fma(_787, cbModelParam._m0[30u].z, fma(_783, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _779));
        float _1134 = fma(_787, cbModelParam._m0[31u].z, fma(_783, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _779));
        float _1138 = fma(_787, cbModelParam._m0[32u].z, fma(_783, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _779));
        float _1161 = _779 + _632;
        float _1162 = _783 + _633;
        float _1163 = _787 + _634;
        float _1173 = fma(_1163, cbModelParam._m0[30u].z, fma(_1162, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1161)) - _1130;
        float _1174 = fma(_1163, cbModelParam._m0[31u].z, fma(_1162, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1161)) - _1134;
        float _1175 = fma(_1163, cbModelParam._m0[32u].z, fma(_1162, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1161)) - _1138;
        float _1179 = inversesqrt(dot(vec3(_1173, _1174, _1175), vec3(_1173, _1174, _1175)));
        float _1192 = ((_1179 * _1173) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1130 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1193 = ((_1179 * _1174) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1134 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1194 = ((_1179 * _1175) / cbModelParam._m0[35u].z) + ((((((_1138 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1196 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1192, _1193, _1194), 0.0);
        vec4 _1203 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1192, _1193, _1194), 0.0);
        vec4 _1210 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1192, _1193, _1194), 0.0);
        vec4 _1217 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1192, _1193, _1194), 0.0);
        float _1229 = exp2((_1196.w + (-0.5)) * 20.0) * 2.0;
        float _1230 = _1229 * (_1196.x + (-0.5));
        float _1231 = _1229 * (_1196.y + (-0.5));
        float _1232 = _1229 * (_1196.z + (-0.5));
        float _1239 = exp2((_1203.w + (-0.5)) * 20.0) * 2.0;
        float _1240 = _1239 * (_1203.x + (-0.5));
        float _1241 = _1239 * (_1203.y + (-0.5));
        float _1242 = _1239 * (_1203.z + (-0.5));
        float _1249 = exp2((_1210.w + (-0.5)) * 20.0) * 2.0;
        float _1250 = _1249 * (_1210.x + (-0.5));
        float _1251 = _1249 * (_1210.y + (-0.5));
        float _1252 = _1249 * (_1210.z + (-0.5));
        float _1259 = exp2((_1217.w + (-0.5)) * 20.0) * 2.0;
        float _1260 = _1259 * (_1217.x + (-0.5));
        float _1261 = _1259 * (_1217.y + (-0.5));
        float _1262 = _1259 * (_1217.z + (-0.5));
        float _1263 = isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0));
        float _1264 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
        float _1265 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
        float _1266 = _1230 * 0.5;
        float _1267 = _1240 * 0.5;
        float _1268 = _1250 * 0.5;
        float _1269 = dot(vec3(_1266, _1267, _1268), vec3(_1266, _1267, _1268));
        float _1274 = (_1269 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1269);
        float _1282 = (dot(vec3(_632, _633, _634), vec3(_1274 * _1266, _1274 * _1267, _1274 * _1268)) + 1.0) * 0.5;
        float _3299 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
        float _1291 = sqrt(((_1267 * _1267) + (_1266 * _1266)) + (_1268 * _1268)) / (_1263 + 9.9999997473787516355514526367188e-06);
        float _3310 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0));
        float _1292 = isnan(1.0) ? _3310 : (isnan(_3310) ? 1.0 : min(_3310, 1.0));
        float _1293 = _1292 * 2.0;
        float _1297 = (1.0 - _1292) / (_1292 + 1.0);
        float _3321 = isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0));
        float _1298 = isnan(1.0) ? _3321 : (isnan(_3321) ? 1.0 : min(_3321, 1.0));
        float _1307 = ((((1.0 - _1298) * (_1293 + 2.0)) * exp2(log2(isnan(1.0) ? _3299 : (isnan(_3299) ? 1.0 : min(_3299, 1.0))) * (_1293 + 1.0))) + _1298) * _1263;
        float _1308 = _1231 * 0.5;
        float _1309 = _1241 * 0.5;
        float _1310 = _1251 * 0.5;
        float _1311 = dot(vec3(_1308, _1309, _1310), vec3(_1308, _1309, _1310));
        float _1316 = (_1311 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1311);
        float _1324 = (dot(vec3(_632, _633, _634), vec3(_1316 * _1308, _1316 * _1309, _1316 * _1310)) + 1.0) * 0.5;
        float _3332 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1333 = sqrt(((_1309 * _1309) + (_1308 * _1308)) + (_1310 * _1310)) / (_1264 + 9.9999997473787516355514526367188e-06);
        float _3343 = isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0));
        float _1334 = isnan(1.0) ? _3343 : (isnan(_3343) ? 1.0 : min(_3343, 1.0));
        float _1335 = _1334 * 2.0;
        float _1339 = (1.0 - _1334) / (_1334 + 1.0);
        float _3354 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
        float _1340 = isnan(1.0) ? _3354 : (isnan(_3354) ? 1.0 : min(_3354, 1.0));
        float _1349 = ((((1.0 - _1340) * (_1335 + 2.0)) * exp2(log2(isnan(1.0) ? _3332 : (isnan(_3332) ? 1.0 : min(_3332, 1.0))) * (_1335 + 1.0))) + _1340) * _1264;
        float _1350 = _1232 * 0.5;
        float _1351 = _1242 * 0.5;
        float _1352 = _1252 * 0.5;
        float _1353 = dot(vec3(_1350, _1351, _1352), vec3(_1350, _1351, _1352));
        float _1358 = (_1353 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1353);
        float _1366 = (dot(vec3(_632, _633, _634), vec3(_1358 * _1350, _1358 * _1351, _1358 * _1352)) + 1.0) * 0.5;
        float _3365 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
        float _1375 = sqrt(((_1351 * _1351) + (_1350 * _1350)) + (_1352 * _1352)) / (_1265 + 9.9999997473787516355514526367188e-06);
        float _3376 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
        float _1376 = isnan(1.0) ? _3376 : (isnan(_3376) ? 1.0 : min(_3376, 1.0));
        float _1377 = _1376 * 2.0;
        float _1381 = (1.0 - _1376) / (_1376 + 1.0);
        float _3387 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1382 = isnan(1.0) ? _3387 : (isnan(_3387) ? 1.0 : min(_3387, 1.0));
        float _1391 = ((((1.0 - _1382) * (_1377 + 2.0)) * exp2(log2(isnan(1.0) ? _3365 : (isnan(_3365) ? 1.0 : min(_3365, 1.0))) * (_1377 + 1.0))) + _1382) * _1265;
        _1399 = _1232;
        _1400 = _1231;
        _1401 = _1230;
        _1402 = _1242;
        _1403 = _1241;
        _1404 = _1240;
        _1405 = _1252;
        _1406 = _1251;
        _1407 = _1250;
        _1408 = _1265;
        _1409 = _1264;
        _1410 = _1263;
        _1411 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1307 : (isnan(_1307) ? 0.0 : max(_1307, 0.0)));
        _1412 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0)));
        _1413 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0)));
    }
    else
    {
        _1399 = _1090;
        _1400 = _1090;
        _1401 = _1090;
        _1402 = _1090;
        _1403 = _1090;
        _1404 = _1090;
        _1405 = _1090;
        _1406 = _1090;
        _1407 = _1090;
        _1408 = _1090;
        _1409 = _1090;
        _1410 = _1090;
        _1411 = 0.0;
        _1412 = 0.0;
        _1413 = 0.0;
    }
    float _1423 = (cbModelParam._m0[1u].x * (_1411 - _1102)) + _1102;
    float _1424 = (cbModelParam._m0[1u].x * (_1412 - _1103)) + _1103;
    float _1425 = (cbModelParam._m0[1u].x * (_1413 - _1104)) + _1104;
    float _1446 = fma(_1425, cbSceneParam._m0[89u].z, fma(_1424, cbSceneParam._m0[89u].y, _1423 * cbSceneParam._m0[89u].x));
    float _1449 = fma(_1425, cbSceneParam._m0[90u].z, fma(_1424, cbSceneParam._m0[90u].y, _1423 * cbSceneParam._m0[90u].x));
    float _1452 = fma(_1425, cbSceneParam._m0[91u].z, fma(_1424, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1423));
    float _1467 = _722 * 0.5;
    float _1468 = _723 * 0.5;
    float _1469 = _724 * 0.5;
    float _1470 = dot(vec4(_1467, _1468, _1469, 1.0), vec4(_1401, _1404, _1407, _1410));
    float _1473 = dot(vec4(_1467, _1468, _1469, 1.0), vec4(_1400, _1403, _1406, _1409));
    float _1476 = dot(vec4(_1467, _1468, _1469, 1.0), vec4(_1399, _1402, _1405, _1408));
    float _1510;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1483 = dot(vec4(_1467, _1468, _1469, 1.0), vec4(_1089, _1093, _1096, _1099));
        float _1487 = dot(vec4(_1467, _1468, _1469, 1.0), vec4(_1091, _1094, _1097, _1100));
        float _1491 = dot(vec4(_1467, _1468, _1469, 1.0), vec4(_1092, _1095, _1098, _1101));
        float _1498 = dot(vec4(cbModelParam._m0[39u]), vec4(_1467, _1468, _1469, 1.0));
        _1510 = dot(vec3(isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0)), isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0)), isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1498) ? 0.0 : (isnan(0.0) ? _1498 : max(0.0, _1498))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1510 = 1.0;
    }
    float _1521;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1512 = dot(vec4(cbModelParam._m0[40u]), vec4(_1467, _1468, _1469, 1.0));
        _1521 = dot(vec3(isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0)), isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0)), isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1512) ? 0.0 : (isnan(0.0) ? _1512 : max(0.0, _1512))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1521 = 1.0;
    }
    float _1525 = (_1521 * cbModelParam._m0[1u].x) + (_1510 * (1.0 - cbModelParam._m0[1u].x));
    float _1535 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _636);
    float _1536 = isnan(_1535) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1535 : min(cbModelParam._m0[25u].z, _1535));
    float _1616;
    float _1618;
    float _1620;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1583 = fma(_787, cbModelParam._m0[13u].z, fma(_783, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _779)) + cbModelParam._m0[13u].w;
        float _1587 = fma(_787, cbModelParam._m0[14u].z, fma(_783, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _779)) + cbModelParam._m0[14u].w;
        float _1591 = fma(_787, cbModelParam._m0[15u].z, fma(_783, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _779)) + cbModelParam._m0[15u].w;
        float _1594 = fma(_724, cbModelParam._m0[13u].z, fma(_723, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _722));
        float _1597 = fma(_724, cbModelParam._m0[14u].z, fma(_723, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _722));
        float _1600 = fma(_724, cbModelParam._m0[15u].z, fma(_723, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _722));
        float _1628;
        if (_1594 > 0.0)
        {
            _1628 = abs((1.0 - _1583) / _1594);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1594 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1583 + 1.0) / _1594);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1628 = frontier_phi_16_14_ladder;
        }
        float _1800;
        if (_1597 > 0.0)
        {
            _1800 = abs((1.0 - _1587) / _1597);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1597 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1587 + 1.0) / _1597);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1800 = frontier_phi_25_21_ladder;
        }
        float _2035;
        if (_1600 > 0.0)
        {
            _2035 = abs((1.0 - _1591) / _1600);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1600 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1591 + 1.0) / _1600);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2035 = frontier_phi_36_32_ladder;
        }
        float _2037 = isnan(_1800) ? _1628 : (isnan(_1628) ? _1800 : min(_1628, _1800));
        float _2038 = isnan(_2035) ? _2037 : (isnan(_2037) ? _2035 : min(_2037, _2035));
        float _2042 = (_2038 * _1594) + _1583;
        float _2043 = (_2038 * _1597) + _1587;
        float _2044 = (_2038 * _1600) + _1591;
        float _2045 = _2038 * 9.9999997473787516355514526367188e-05;
        float _2047 = (-1.0) - _2045;
        float _2049 = _2045 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2044 > _2049) || ((_2044 < _2047) || ((_2043 > _2049) || ((_2043 < _2047) || ((_2042 < _2047) || (_2042 > _2049))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2194 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2044, cbModelParam._m0[9u].z, fma(_2043, cbModelParam._m0[9u].y, _2042 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2044, cbModelParam._m0[10u].z, fma(_2043, cbModelParam._m0[10u].y, _2042 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2044, cbModelParam._m0[11u].z, fma(_2043, cbModelParam._m0[11u].y, _2042 * cbModelParam._m0[11u].x))), _1536);
            frontier_phi_15_36_ladder = _2194.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2194.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2194.y * cbModelParam._m0[1u].y;
        }
        _1616 = frontier_phi_15_36_ladder_1;
        _1618 = frontier_phi_15_36_ladder_2;
        _1620 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1604 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_722, _723, _724), _1536);
        _1616 = _1604.x * cbModelParam._m0[1u].y;
        _1618 = _1604.y * cbModelParam._m0[1u].y;
        _1620 = _1604.z * cbModelParam._m0[1u].y;
    }
    float _1624 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _636);
    float _1625 = isnan(_1624) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1624 : min(cbModelParam._m0[25u].w, _1624));
    float _1717;
    float _1719;
    float _1721;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1681 = fma(_787, cbModelParam._m0[21u].z, fma(_783, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _779)) + cbModelParam._m0[21u].w;
        float _1685 = fma(_787, cbModelParam._m0[22u].z, fma(_783, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _779)) + cbModelParam._m0[22u].w;
        float _1689 = fma(_787, cbModelParam._m0[23u].z, fma(_783, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _779)) + cbModelParam._m0[23u].w;
        float _1692 = fma(_724, cbModelParam._m0[21u].z, fma(_723, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _722));
        float _1695 = fma(_724, cbModelParam._m0[22u].z, fma(_723, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _722));
        float _1698 = fma(_724, cbModelParam._m0[23u].z, fma(_723, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _722));
        float _1805;
        if (_1692 > 0.0)
        {
            _1805 = abs((1.0 - _1681) / _1692);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1692 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1681 + 1.0) / _1692);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1805 = frontier_phi_27_23_ladder;
        }
        float _2062;
        if (_1695 > 0.0)
        {
            _2062 = abs((1.0 - _1685) / _1695);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1695 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1685 + 1.0) / _1695);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2062 = frontier_phi_38_34_ladder;
        }
        float _2366;
        if (_1698 > 0.0)
        {
            _2366 = abs((1.0 - _1689) / _1698);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1698 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1689 + 1.0) / _1698);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2366 = frontier_phi_49_44_ladder;
        }
        float _2368 = isnan(_2062) ? _1805 : (isnan(_1805) ? _2062 : min(_1805, _2062));
        float _2369 = isnan(_2366) ? _2368 : (isnan(_2368) ? _2366 : min(_2368, _2366));
        float _2373 = (_2369 * _1692) + _1681;
        float _2374 = (_2369 * _1695) + _1685;
        float _2375 = (_2369 * _1698) + _1689;
        float _2376 = _2369 * 9.9999997473787516355514526367188e-05;
        float _2377 = (-1.0) - _2376;
        float _2379 = _2376 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2375 > _2379) || ((_2375 < _2377) || ((_2374 > _2379) || ((_2374 < _2377) || ((_2373 < _2377) || (_2373 > _2379))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2548 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2375, cbModelParam._m0[17u].z, fma(_2374, cbModelParam._m0[17u].y, _2373 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2375, cbModelParam._m0[18u].z, fma(_2374, cbModelParam._m0[18u].y, _2373 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2375, cbModelParam._m0[19u].z, fma(_2374, cbModelParam._m0[19u].y, _2373 * cbModelParam._m0[19u].x))), _1625);
            frontier_phi_24_49_ladder = _2548.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2548.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2548.x * cbModelParam._m0[1u].z;
        }
        _1717 = frontier_phi_24_49_ladder_2;
        _1719 = frontier_phi_24_49_ladder;
        _1721 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1701 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_722, _723, _724), _1625);
        _1717 = _1701.x * cbModelParam._m0[1u].z;
        _1719 = _1701.y * cbModelParam._m0[1u].z;
        _1721 = _1701.z * cbModelParam._m0[1u].z;
    }
    float _1733 = ((((1.0 - _747) * ((_735 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_747 * _735)) * _714;
    float _1734 = _1733 * ((cbModelParam._m0[1u].w * (_1717 - _1616)) + _1616);
    float _1735 = _1733 * ((cbModelParam._m0[1u].w * (_1719 - _1618)) + _1618);
    float _1736 = _1733 * ((cbModelParam._m0[1u].w * (_1721 - _1620)) + _1620);
    float _1739 = fma(_1736, cbSceneParam._m0[89u].z, fma(_1735, cbSceneParam._m0[89u].y, _1734 * cbSceneParam._m0[89u].x));
    float _1742 = fma(_1736, cbSceneParam._m0[90u].z, fma(_1735, cbSceneParam._m0[90u].y, _1734 * cbSceneParam._m0[90u].x));
    float _1745 = fma(_1736, cbSceneParam._m0[91u].z, fma(_1735, cbSceneParam._m0[91u].y, _1734 * cbSceneParam._m0[91u].x));
    uvec4 _1755 = floatBitsToUint(cbInstanceData._m0[_694 + 5u]);
    uint _1757 = _1755.x * 14u;
    uint _1758 = _1757 + 13u;
    float _1763 = _714 + (-1.0);
    float _1766 = (cbLight._m0[_1758].x * _1763) + 1.0;
    float _1767 = (cbLight._m0[_1758].y * _1763) + 1.0;
    uint _1769 = _1757 + 4u;
    float _1780 = dot(vec3(cbLight._m0[_1757].xyz), vec3(_632, _633, _634));
    float _1783 = isnan(1.0) ? _1766 : (isnan(_1766) ? 1.0 : min(_1766, 1.0));
    uint _1784 = _1757 + 5u;
    uint _1790 = _1757 | 1u;
    float _1796 = dot(vec3(cbLight._m0[_1790].xyz), vec3(_632, _633, _634));
    float _1799 = isnan(1.0) ? _1767 : (isnan(_1767) ? 1.0 : min(_1767, 1.0));
    float _1864;
    float _1865;
    float _1866;
    if (_637 == 0.0)
    {
        float _3523 = isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0));
        float _3534 = isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0));
        float _1818 = (isnan(1.0) ? _3523 : (isnan(_3523) ? 1.0 : min(_3523, 1.0))) * 0.3183098733425140380859375;
        float _1820 = (isnan(1.0) ? _3534 : (isnan(_3534) ? 1.0 : min(_3534, 1.0))) * 0.3183098733425140380859375;
        _1864 = ((cbLight._m0[_1784].x * _1799) * _1820) + ((cbLight._m0[_1769].x * _1783) * _1818);
        _1865 = ((_1799 * cbLight._m0[_1784].y) * _1820) + ((_1783 * cbLight._m0[_1769].y) * _1818);
        _1866 = ((_1799 * cbLight._m0[_1784].z) * _1820) + ((_1783 * cbLight._m0[_1769].z) * _1818);
    }
    else
    {
        float _1830 = _1780 + _637;
        float _1833 = (_637 * 2.0) + 1.0;
        float _1834 = (isnan(0.0) ? _1830 : (isnan(_1830) ? 0.0 : max(_1830, 0.0))) / _1833;
        float _1841 = _1796 + _637;
        float _1843 = (isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0))) / _1833;
        _1864 = (((_1843 * cbLight._m0[_1784].x) * _1799) + ((_1834 * cbLight._m0[_1769].x) * _1783)) * 0.3183098733425140380859375;
        _1865 = (((_1843 * cbLight._m0[_1784].y) * _1799) + ((_1834 * cbLight._m0[_1769].y) * _1783)) * 0.3183098733425140380859375;
        _1866 = (((_1843 * cbLight._m0[_1784].z) * _1799) + ((_1834 * cbLight._m0[_1769].z) * _1783)) * 0.3183098733425140380859375;
    }
    uint _1870 = _1757 + 8u;
    float _1886 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1757].w)) * _636) * 0.949999988079071044921875);
    float _1887 = _1886 * _1886;
    float _1888 = cbLight._m0[_1757].x + _442;
    float _1889 = cbLight._m0[_1757].y + _443;
    float _1890 = cbLight._m0[_1757].z + _444;
    float _1894 = inversesqrt(dot(vec3(_1888, _1889, _1890), vec3(_1888, _1889, _1890)));
    float _1895 = _1894 * _1888;
    float _1896 = _1894 * _1889;
    float _1897 = _1894 * _1890;
    float _1898 = dot(vec3(_632, _633, _634), vec3(cbLight._m0[_1757].xyz));
    float _3555 = isnan(0.0) ? _1898 : (isnan(_1898) ? 0.0 : max(_1898, 0.0));
    float _1901 = isnan(1.0) ? _3555 : (isnan(_3555) ? 1.0 : min(_3555, 1.0));
    float _3566 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
    float _1902 = isnan(1.0) ? _3566 : (isnan(_3566) ? 1.0 : min(_3566, 1.0));
    float _1903 = dot(vec3(_632, _633, _634), vec3(_1895, _1896, _1897));
    float _3577 = isnan(0.0) ? _1903 : (isnan(_1903) ? 0.0 : max(_1903, 0.0));
    float _1906 = isnan(1.0) ? _3577 : (isnan(_3577) ? 1.0 : min(_3577, 1.0));
    float _1907 = dot(vec3(cbLight._m0[_1757].xyz), vec3(_1895, _1896, _1897));
    float _3588 = isnan(0.0) ? _1907 : (isnan(_1907) ? 0.0 : max(_1907, 0.0));
    float _1911 = _1887 * _1887;
    float _1915 = ((_1906 * _1906) * (_1911 + (-1.0))) + 1.0;
    float _1926 = (exp2(log2(1.0 - (isnan(1.0) ? _3588 : (isnan(_3588) ? 1.0 : min(_3588, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1927 = 1.0 - _1887;
    float _1938 = (0.5 / (((_1902 * ((_1901 * _1927) + _1887)) + 9.9999999392252902907785028219223e-09) + (((_1902 * _1927) + _1887) * _1901))) * _1901;
    float _3599 = isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0));
    float _1940 = (isnan(1.0) ? _3599 : (isnan(_3599) ? 1.0 : min(_3599, 1.0))) * (_1911 / ((_1915 * _1915) * 3.141590118408203125));
    uint _1953 = _1757 + 9u;
    float _1967 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1790].w)) * _636) * 0.949999988079071044921875);
    float _1968 = _1967 * _1967;
    float _1969 = cbLight._m0[_1790].x + _442;
    float _1970 = cbLight._m0[_1790].y + _443;
    float _1971 = cbLight._m0[_1790].z + _444;
    float _1975 = inversesqrt(dot(vec3(_1969, _1970, _1971), vec3(_1969, _1970, _1971)));
    float _1976 = _1975 * _1969;
    float _1977 = _1975 * _1970;
    float _1978 = _1975 * _1971;
    float _1979 = dot(vec3(_632, _633, _634), vec3(cbLight._m0[_1790].xyz));
    float _3610 = isnan(0.0) ? _1979 : (isnan(_1979) ? 0.0 : max(_1979, 0.0));
    float _1982 = isnan(1.0) ? _3610 : (isnan(_3610) ? 1.0 : min(_3610, 1.0));
    float _1983 = dot(vec3(_632, _633, _634), vec3(_1976, _1977, _1978));
    float _3621 = isnan(0.0) ? _1983 : (isnan(_1983) ? 0.0 : max(_1983, 0.0));
    float _1986 = isnan(1.0) ? _3621 : (isnan(_3621) ? 1.0 : min(_3621, 1.0));
    float _1987 = dot(vec3(cbLight._m0[_1790].xyz), vec3(_1976, _1977, _1978));
    float _3632 = isnan(0.0) ? _1987 : (isnan(_1987) ? 0.0 : max(_1987, 0.0));
    float _1991 = _1968 * _1968;
    float _1995 = ((_1986 * _1986) * (_1991 + (-1.0))) + 1.0;
    float _2004 = (exp2(log2(1.0 - (isnan(1.0) ? _3632 : (isnan(_3632) ? 1.0 : min(_3632, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2005 = 1.0 - _1968;
    float _2015 = (0.5 / (((_1902 * ((_1982 * _2005) + _1968)) + 9.9999999392252902907785028219223e-09) + (((_1902 * _2005) + _1968) * _1982))) * _1982;
    float _3643 = isnan(0.0) ? _2015 : (isnan(_2015) ? 0.0 : max(_2015, 0.0));
    float _2017 = (isnan(1.0) ? _3643 : (isnan(_3643) ? 1.0 : min(_3643, 1.0))) * (_1991 / ((_1995 * _1995) * 3.141590118408203125));
    float _2027 = (((_2004 * cbLight._m0[_1953].x) * _2017) * _1799) + (((_1926 * cbLight._m0[_1870].x) * _1940) * _1783);
    float _2028 = (((_2004 * cbLight._m0[_1953].y) * _2017) * _1799) + (((_1926 * cbLight._m0[_1870].y) * _1940) * _1783);
    float _2029 = (((_2004 * cbLight._m0[_1953].z) * _2017) * _1799) + (((_1926 * cbLight._m0[_1870].z) * _1940) * _1783);
    float _2165;
    float _2167;
    float _2169;
    float _2171;
    float _2173;
    float _2175;
    if (_1755.y == 0u)
    {
        float _2106 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2107 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2106;
        float _2108 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2106;
        float _2109 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2106;
        uvec4 _2121 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2122 = _2121.x;
        uint _2133 = uint((float(_2121.y) * floor(float(uint(cbSceneParam._m0[85u].y * _550) / _2122))) + floor(float(uint(cbSceneParam._m0[85u].x * _549) / _2122)));
        float _2143 = (log2(_2109 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2144 = isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : max(_2143, 0.0));
        uint _2147 = uint(isnan(14.0) ? _2144 : (isnan(_2144) ? 14.0 : min(_2144, 14.0)));
        uint _2154 = _2121.z;
        float _2203;
        float _2205;
        float _2207;
        float _2209;
        float _2211;
        float _2213;
        if (((((1u << ((_2154 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2147 << 2u) + (_2133 << 6u)) >> 2u)).x) == 0u) || ((_2154 & 240u) == 0u))
        {
            _2203 = 0.0;
            _2205 = 0.0;
            _2207 = 0.0;
            _2209 = 0.0;
            _2211 = 0.0;
            _2213 = 0.0;
        }
        else
        {
            float _2204;
            float _2206;
            float _2208;
            float _2210;
            float _2212;
            float _2214;
            float _2392 = 0.0;
            float _2393 = 0.0;
            float _2394 = 0.0;
            float _2395 = 0.0;
            float _2396 = 0.0;
            float _2397 = 0.0;
            uint _2398 = 0u;
            uint _2407;
            bool _2408;
            for (;;)
            {
                _2407 = texelFetch(g_lightClassification, int((((_2147 << 5u) + (_2133 << 9u)) + (_2398 << 2u)) >> 2u)).x;
                _2408 = _2407 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2408)
                {
                    frontier_phi_55_pred = _2397;
                    frontier_phi_55_pred_1 = _2396;
                    frontier_phi_55_pred_2 = _2395;
                    frontier_phi_55_pred_3 = _2393;
                    frontier_phi_55_pred_4 = _2392;
                    frontier_phi_55_pred_5 = _2394;
                }
                else
                {
                    float _2605;
                    float _2606;
                    float _2607;
                    float _2608;
                    float _2609;
                    float _2610;
                    uint _2611;
                    _2605 = _2392;
                    _2606 = _2393;
                    _2607 = _2394;
                    _2608 = _2395;
                    _2609 = _2396;
                    _2610 = _2397;
                    _2611 = _2407;
                    float _2553;
                    float _2554;
                    float _2555;
                    float _2556;
                    float _2557;
                    float _2558;
                    for (;;)
                    {
                        uint _2615 = uint(findLSB(_2611)) + (_2398 << 5u);
                        uint _2612 = (_2611 + 4294967295u) & _2611;
                        uint _2617 = _2615 * 48u;
                        vec4 _2631 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2617)).x, texelFetch(g_PointLightRenderingBuffer, int(_2617 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2617 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2617 + 3u)).x));
                        uint _2637 = (_2615 * 48u) + 4u;
                        vec4 _2650 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2637)).x, texelFetch(g_PointLightRenderingBuffer, int(_2637 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2637 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2637 + 3u)).x));
                        float _2651 = _2650.x;
                        float _2652 = _2650.y;
                        float _2653 = _2650.z;
                        uint _2656 = (_2615 * 48u) + 8u;
                        vec3 _2667 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2656)).x, texelFetch(g_PointLightRenderingBuffer, int(_2656 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2656 + 2u)).x));
                        uint _2672 = (_2615 * 48u) + 12u;
                        vec2 _2680 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2672)).x, texelFetch(g_PointLightRenderingBuffer, int(_2672 + 1u)).x));
                        float _2686 = inversesqrt(dot(vec3(_2107, _2108, _2109), vec3(_2107, _2108, _2109)));
                        float _2687 = _2686 * _2107;
                        float _2688 = _2686 * _2108;
                        float _2689 = _2686 * _2109;
                        float _2690 = _2631.x - _2107;
                        float _2691 = _2631.y - _2108;
                        float _2692 = _2631.z - _2109;
                        float _2693 = dot(vec3(_2690, _2691, _2692), vec3(_2690, _2691, _2692));
                        float _2696 = inversesqrt(_2693);
                        float _2697 = _2696 * _2690;
                        float _2698 = _2696 * _2691;
                        float _2699 = _2696 * _2692;
                        float _2700 = dot(vec3(_675, _678, _681), vec3(_2697, _2698, _2699));
                        float _2705 = 1.0 - (_2693 * _2631.w);
                        float _3664 = isnan(0.0) ? _2705 : (isnan(_2705) ? 0.0 : max(_2705, 0.0));
                        float _2706 = isnan(1.0) ? _3664 : (isnan(_3664) ? 1.0 : min(_3664, 1.0));
                        float _2707 = sqrt(_2693) * _2650.w;
                        float _2710 = 1.39999997615814208984375 / (_2707 + 1.39999997615814208984375);
                        float _2711 = _2710 * _2710;
                        float _2712 = 1.0 - _2711;
                        float _2714 = (_2712 * _2712) * _637;
                        float _2717 = ((_2712 * _2700) + _2711) + _2714;
                        float _2722 = _2707 * _2707;
                        float _2727 = ((isnan(0.0) ? _2717 : (isnan(_2717) ? 0.0 : max(_2717, 0.0))) * _2706) / (((_2714 * 2.0) + 1.0) * ((_2722 * 0.699999988079071044921875) + 1.0));
                        float _2731 = dot(vec3(_2697, _2698, _2699), vec3(_2687, _2688, _2689));
                        float _3680 = isnan(0.0) ? _2731 : (isnan(_2731) ? 0.0 : max(_2731, 0.0));
                        float _2738 = dot(vec3((-0.0) - _2687, (-0.0) - _2688, (-0.0) - _2689), vec3(_675, _678, _681)) + 1.0;
                        float _2740 = (isnan(0.0) ? _2738 : (isnan(_2738) ? 0.0 : max(_2738, 0.0))) * 0.5;
                        float _2747 = ((_2740 * _2740) * _2680.x) * exp2((_2680.y * 32.0) * log2(isnan(1.0) ? _3680 : (isnan(_3680) ? 1.0 : min(_3680, 1.0))));
                        float _2749 = _637 / (_637 + 1.0);
                        float _2765 = (-0.0) - _2107;
                        float _2766 = (-0.0) - _2108;
                        float _2767 = (-0.0) - _2109;
                        float _2771 = inversesqrt(dot(vec3(_2765, _2766, _2767), vec3(_2765, _2766, _2767)));
                        float _2772 = _2771 * _2765;
                        float _2773 = _2771 * _2766;
                        float _2774 = _2771 * _2767;
                        float _2782 = exp2(log2(1.0 / ((_2722 * 3.5) + 5.0)) * 0.25);
                        float _2783 = 1.0 - _735;
                        float _2790 = sqrt(1.0 - ((1.0 - (_2783 * _2783)) * (1.0 - (_2782 * _2782))));
                        float _2791 = _2790 * _2790;
                        float _2792 = _2791 * _2791;
                        float _2793 = _2772 + _2697;
                        float _2794 = _2773 + _2698;
                        float _2795 = _2774 + _2699;
                        float _2799 = inversesqrt(dot(vec3(_2793, _2794, _2795), vec3(_2793, _2794, _2795)));
                        float _2803 = dot(vec3(_675, _678, _681), vec3(_2772, _2773, _2774));
                        float _3696 = isnan(0.0) ? _2803 : (isnan(_2803) ? 0.0 : max(_2803, 0.0));
                        float _2806 = isnan(1.0) ? _3696 : (isnan(_3696) ? 1.0 : min(_3696, 1.0));
                        float _2807 = dot(vec3(_675, _678, _681), vec3(_2799 * _2793, _2799 * _2794, _2799 * _2795));
                        float _3707 = isnan(0.0) ? _2807 : (isnan(_2807) ? 0.0 : max(_2807, 0.0));
                        float _2810 = isnan(1.0) ? _3707 : (isnan(_3707) ? 1.0 : min(_3707, 1.0));
                        float _2814 = ((_2810 * _2810) * (_2792 + (-1.0))) + 1.0;
                        float _2815 = _2710 * _2791;
                        float _2816 = _2815 * _2815;
                        float _2819 = ((1.0 - _2816) * _2700) + _2816;
                        float _3718 = isnan(0.0) ? _2819 : (isnan(_2819) ? 0.0 : max(_2819, 0.0));
                        float _2820 = isnan(1.0) ? _3718 : (isnan(_3718) ? 1.0 : min(_3718, 1.0));
                        float _2821 = 1.0 - _2791;
                        float _2831 = (0.5 / (((_2820 * ((_2806 * _2821) + _2791)) + 9.9999999392252902907785028219223e-09) + (((_2820 * _2821) + _2791) * _2806))) * _2820;
                        float _3729 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
                        float _2842 = (((_2792 * 3.1415927410125732421875) * (isnan(1.0) ? _3729 : (isnan(_3729) ? 1.0 : min(_3729, 1.0)))) / ((_2814 * _2814) * ((_2722 * 2.1991131305694580078125) + 3.141590118408203125))) * _2706;
                        _2556 = (((((_2651 * 0.3183098733425140380859375) * _2749) * _2747) + _2651) * _2727) + _2608;
                        _2557 = (((((_2652 * 0.3183098733425140380859375) * _2749) * _2747) + _2652) * _2727) + _2609;
                        _2558 = (((((_2653 * 0.3183098733425140380859375) * _2749) * _2747) + _2653) * _2727) + _2610;
                        _2553 = (_2842 * _2667.x) + _2605;
                        _2554 = (_2842 * _2667.y) + _2606;
                        _2555 = (_2842 * _2667.z) + _2607;
                        if (_2612 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2605 = _2553;
                            _2606 = _2554;
                            _2607 = _2555;
                            _2608 = _2556;
                            _2609 = _2557;
                            _2610 = _2558;
                            _2611 = _2612;
                        }
                    }
                    frontier_phi_55_pred = _2558;
                    frontier_phi_55_pred_1 = _2557;
                    frontier_phi_55_pred_2 = _2556;
                    frontier_phi_55_pred_3 = _2554;
                    frontier_phi_55_pred_4 = _2553;
                    frontier_phi_55_pred_5 = _2555;
                }
                _2214 = frontier_phi_55_pred;
                _2212 = frontier_phi_55_pred_1;
                _2210 = frontier_phi_55_pred_2;
                _2206 = frontier_phi_55_pred_3;
                _2204 = frontier_phi_55_pred_4;
                _2208 = frontier_phi_55_pred_5;
                uint _2399 = _2398 + 1u;
                if (_2399 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2392 = _2204;
                    _2393 = _2206;
                    _2394 = _2208;
                    _2395 = _2210;
                    _2396 = _2212;
                    _2397 = _2214;
                    _2398 = _2399;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2203 = _2204;
            _2205 = _2206;
            _2207 = _2208;
            _2209 = _2210;
            _2211 = _2212;
            _2213 = _2214;
        }
        float _2218 = isnan(1.0) ? _714 : (isnan(_714) ? 1.0 : min(_714, 1.0));
        _2165 = (_2218 * _2209) + _1864;
        _2167 = (_2218 * _2211) + _1865;
        _2169 = (_2218 * _2213) + _1866;
        _2171 = ((_2203 * 0.039999999105930328369140625) * _2218) + _2027;
        _2173 = ((_2205 * 0.039999999105930328369140625) * _2218) + _2028;
        _2175 = ((_2207 * 0.039999999105930328369140625) * _2218) + _2029;
    }
    else
    {
        _2165 = _1864;
        _2167 = _1865;
        _2169 = _1866;
        _2171 = _2027;
        _2173 = _2028;
        _2175 = _2029;
    }
    float _2289;
    float _2290;
    float _2291;
    if (_637 > 0.0)
    {
        uint _2225 = _1757 + 4u;
        float _2231 = (-0.0) - _442;
        float _2232 = (-0.0) - _443;
        float _2233 = (-0.0) - _444;
        float _2234 = dot(vec3(cbLight._m0[_1757].xyz), vec3(_2231, _2232, _2233));
        float _3745 = isnan(0.0) ? _2234 : (isnan(_2234) ? 0.0 : max(_2234, 0.0));
        float _2238 = _725 + 1.0;
        float _2240 = (isnan(0.0) ? _2238 : (isnan(_2238) ? 0.0 : max(_2238, 0.0))) * 0.5;
        float _2245 = _2240 * _2240;
        float _2246 = _2245 * exp2(log2(isnan(1.0) ? _3745 : (isnan(_3745) ? 1.0 : min(_3745, 1.0))) * 32.0);
        float _2248 = _637 / (_637 + 1.0);
        float _2249 = isnan(_1766) ? 1.0 : (isnan(1.0) ? _1766 : min(1.0, _1766));
        uint _2259 = _1757 + 5u;
        float _2265 = dot(vec3(cbLight._m0[_1790].xyz), vec3(_2231, _2232, _2233));
        float _3766 = isnan(0.0) ? _2265 : (isnan(_2265) ? 0.0 : max(_2265, 0.0));
        float _2272 = _2245 * exp2(log2(isnan(1.0) ? _3766 : (isnan(_3766) ? 1.0 : min(_3766, 1.0))) * 32.0);
        float _2273 = isnan(_1767) ? 1.0 : (isnan(1.0) ? _1767 : min(1.0, _1767));
        _2289 = ((((_2272 * cbLight._m0[_2259].x) * _2248) * _2273) + (((_2246 * cbLight._m0[_2225].x) * _2248) * _2249)) * 0.3183098733425140380859375;
        _2290 = ((((_2272 * cbLight._m0[_2259].y) * _2248) * _2273) + (((_2246 * cbLight._m0[_2225].y) * _2248) * _2249)) * 0.3183098733425140380859375;
        _2291 = ((((_2272 * cbLight._m0[_2259].z) * _2248) * _2273) + (((_2246 * cbLight._m0[_2225].z) * _2248) * _2249)) * 0.3183098733425140380859375;
    }
    else
    {
        _2289 = 0.0;
        _2290 = 0.0;
        _2291 = 0.0;
    }
    float _3782 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    float _3793 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _3804 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _3815 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    float _2306 = (isnan(1.0) ? _3782 : (isnan(_3782) ? 1.0 : min(_3782, 1.0))) * ((_2165 + ((isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0))) * _714)) + _2289);
    float _2307 = (isnan(1.0) ? _3793 : (isnan(_3793) ? 1.0 : min(_3793, 1.0))) * ((_2167 + ((isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0))) * _714)) + _2290);
    float _2308 = (isnan(1.0) ? _3804 : (isnan(_3804) ? 1.0 : min(_3804, 1.0))) * ((_2169 + ((isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0))) * _714)) + _2291);
    float _2312 = 0.959999978542327880859375 - (exp2(log2(1.0 - _729) * 5.0) * 0.959999978542327880859375);
    float _2337 = _549 / cbSceneParam._m0[86u].x;
    float _2338 = _550 / cbSceneParam._m0[86u].y;
    vec4 _2352 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2337, _2338, (log2((isnan(cbSceneParam._m0[77u].w) ? _656 : (isnan(_656) ? cbSceneParam._m0[77u].w : min(_656, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2354 = _2352.x;
    float _2355 = _2352.y;
    float _2356 = _2352.z;
    float _2357 = _2352.w;
    float _2450;
    float _2452;
    float _2454;
    float _2456;
    if (_656 > cbSceneParam._m0[78u].w)
    {
        float _2413 = isnan(_656) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _656 : min(cbSceneParam._m0[80u].w, _656));
        float _2414 = _2413 / _656;
        float _2425 = _2414 * _285;
        float _2426 = _286 * _2414;
        float _2427 = (-0.0) - _2426;
        float _2428 = _2414 * _287;
        float _2430 = (cbSceneParam._m0[77u].w * _2427) / _2413;
        float _2431 = _2430 + cbSceneParam._m0[79u].w;
        float _2432 = cbSceneParam._m0[79u].w - _2426;
        float _2438 = sqrt(((_2425 * _2425) + (_2426 * _2426)) + (_2428 * _2428));
        float _2441 = (1.0 - (cbSceneParam._m0[77u].w / _2413)) * _2438;
        float _2446 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2448 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2847;
        if (abs((_2427 - _2430) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2847 = ((((_2431 > 0.0) ? exp2(_2446 * _2431) : (2.0 - exp2(_2448 * _2431))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2441;
        }
        else
        {
            float _2578 = 1.0 / cbSceneParam._m0[80u].x;
            float _2579 = isnan(_2432) ? _2431 : (isnan(_2431) ? _2432 : max(_2431, _2432));
            float _2580 = isnan(_2432) ? _2431 : (isnan(_2431) ? _2432 : min(_2431, _2432));
            float _2589 = isnan(0.0) ? _2579 : (isnan(_2579) ? 0.0 : min(_2579, 0.0));
            float _2590 = isnan(0.0) ? _2580 : (isnan(_2580) ? 0.0 : min(_2580, 0.0));
            _2847 = ((abs(_2438 / _2427) * cbSceneParam._m0[80u].y) * ((((_2589 - _2590) * 2.0) - ((exp2(_2446 * (isnan(0.0) ? _2579 : (isnan(_2579) ? 0.0 : max(_2579, 0.0)))) - exp2(_2446 * (isnan(0.0) ? _2580 : (isnan(_2580) ? 0.0 : max(_2580, 0.0))))) * _2578)) - ((exp2(_2448 * _2589) - exp2(_2448 * _2590)) * _2578))) + (_2441 * cbSceneParam._m0[80u].z);
        }
        vec4 _2849 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2337, _2338, 1.0), 0.0);
        float _2858 = exp2((_2847 * (-1.44269502162933349609375)) * (1.0 - _2849.w));
        float _2859 = log2(_2858);
        float _2875 = log2(_2357);
        _2450 = (exp2(_2875 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2859 * cbSceneParam._m0[78u].x)) * _2849.x) / cbSceneParam._m0[78u].x)) + _2354;
        _2452 = (exp2(_2875 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2859 * cbSceneParam._m0[78u].y)) * _2849.y) / cbSceneParam._m0[78u].y)) + _2355;
        _2454 = (exp2(_2875 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2859 * cbSceneParam._m0[78u].z)) * _2849.z) / cbSceneParam._m0[78u].z)) + _2356;
        _2456 = _2858 * _2357;
    }
    else
    {
        _2450 = _2354;
        _2452 = _2355;
        _2454 = _2356;
        _2456 = _2357;
    }
    bool _2468 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2469 = log2(_2456);
    float _2476 = exp2(_2469 * cbSceneParam._m0[78u].x) * ((_2306 + ((_2171 + ((isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0))) * _1525)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _573.x) * _2312) - _2306) * _617));
    float _2477 = exp2(_2469 * cbSceneParam._m0[78u].y) * ((_2307 + ((_2173 + ((isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0))) * _1525)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _573.y) * _2312) - _2307) * _617));
    float _2478 = exp2(_2469 * cbSceneParam._m0[78u].z) * ((_2308 + ((_2175 + ((isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0))) * _1525)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _573.z) * _2312) - _2308) * _617));
    vec4 _2486 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_549, _550));
    float _2488 = _2486.x;
    float _2509 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2488)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2488))) - _656) * cbMtdParam._m0[17u].y;
    float _3866 = isnan(0.0) ? _2509 : (isnan(_2509) ? 0.0 : max(_2509, 0.0));
    float _2511 = (cbInstanceData._m0[_694 + 6u].w * (isnan(1.0) ? _3815 : (isnan(_3815) ? 1.0 : min(_3815, 1.0)))) * (isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0)));
    float _2520 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2520 * (_2468 ? _2476 : (_2476 + (cbSceneParam._m0[72u].w * _2450)));
    SV_Target.y = _2520 * (_2468 ? _2477 : (_2477 + (cbSceneParam._m0[72u].w * _2452)));
    SV_Target.z = _2520 * (_2468 ? _2478 : (_2478 + (cbSceneParam._m0[72u].w * _2454)));
    SV_Target.w = _2511;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2511;
}


