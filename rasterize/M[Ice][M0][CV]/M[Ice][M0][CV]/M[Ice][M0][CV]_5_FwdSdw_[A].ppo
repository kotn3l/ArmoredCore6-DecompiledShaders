#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1245;
float _3472;
float _3473;
float _3474;
float _3475;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _211 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _212 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _213 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _219 = inversesqrt(dot(vec3(_211, _212, _213), vec3(_211, _212, _213)));
    float _220 = _219 * _211;
    float _221 = _219 * _212;
    float _222 = _219 * _213;
    float _226 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _227 = _226 * NORMAL.x;
    float _228 = _226 * NORMAL.y;
    float _229 = _226 * NORMAL.z;
    float _233 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _234 = _233 * TANGENT.x;
    float _235 = _233 * TANGENT.y;
    float _236 = _233 * TANGENT.z;
    float _241;
    float _242;
    float _243;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _241 = (-0.0) - _227;
        _242 = (-0.0) - _228;
        _243 = (-0.0) - _229;
    }
    else
    {
        _241 = _227;
        _242 = _228;
        _243 = _229;
    }
    float _290 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _300 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _290);
    float _301 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _290);
    float _302 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _290);
    uint _308 = uint(roundEven(NORMAL.w)) * 13u;
    uint _313 = _308 + 1u;
    uint _317 = _308 + 2u;
    float _326 = sqrt(((cbInstanceData._m0[_313].x * cbInstanceData._m0[_313].x) + (cbInstanceData._m0[_308].x * cbInstanceData._m0[_308].x)) + (cbInstanceData._m0[_317].x * cbInstanceData._m0[_317].x));
    float _327 = _326 * TEXCOORD.z;
    float _328 = _326 * TEXCOORD.w;
    vec4 _341 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _327) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _328) + cbTextureTilingScale._m0[8u].w));
    vec4 _362 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _370 = (_362.x * 2.0) + (-1.0);
    float _372 = (_362.y * 2.0) + (-1.0);
    float _373 = dot(vec2(_370, _372), vec2(_370, _372));
    float _3484 = isnan(0.0) ? _373 : (isnan(_373) ? 0.0 : max(_373, 0.0));
    float _379 = sqrt(1.0 - (isnan(1.0) ? _3484 : (isnan(_3484) ? 1.0 : min(_3484, 1.0))));
    float _382 = fma(_379, _241, fma(_372, _234, _370 * _220));
    float _385 = fma(_379, _242, fma(_372, _235, _370 * _221));
    float _388 = fma(_379, _243, fma(_372, _236, _370 * _222));
    float _392 = inversesqrt(dot(vec3(_382, _385, _388), vec3(_382, _385, _388)));
    vec4 _425 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _430 = _425.w;
    float _442 = dot(vec3(_300, _301, _302), vec3(_220, _221, _222));
    float _445 = dot(vec3(_300, _301, _302), vec3(_234, _235, _236));
    float _448 = dot(vec3(_300, _301, _302), vec3(_241, _242, _243));
    float _454 = inversesqrt(dot(vec3(_442, _445, _448), vec3(_442, _445, _448)));
    float _476 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _496 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_442 * cbMtdParam._m0[14u].x) * _454) * _476) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_445 * cbMtdParam._m0[14u].x) * _454) * _476) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _519 = inversesqrt(dot(vec3(_300, _301, _302), vec3(_300, _301, _302)));
    float _520 = _519 * _300;
    float _521 = _519 * _301;
    float _522 = _519 * _302;
    float _523 = dot(vec4(_520, _521, _522, 0.0), vec4(_241, _242, _243, 0.0));
    float _526 = _523 - cbMtdParam._m0[15u].z;
    float _3495 = isnan(0.0) ? _526 : (isnan(_526) ? 0.0 : max(_526, 0.0));
    float _533 = exp2(log2(1.0 - (isnan(1.0) ? _3495 : (isnan(_3495) ? 1.0 : min(_3495, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _548 = ((((_425.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _496.x) * cbMtdParam._m0[9u].x) * ((_533 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _553 = ((((_425.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _496.y) * cbMtdParam._m0[9u].y) * ((_533 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _558 = ((((_425.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _496.z) * cbMtdParam._m0[9u].z) * ((_533 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _567 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _327) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _328) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3511 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _568 = isnan(1.0) ? _3511 : (isnan(_3511) ? 1.0 : min(_3511, 1.0));
    float _575 = (_568 * ((_341.x * cbMtdParam._m0[10u].x) - _548)) + _548;
    float _576 = (((_341.y * cbMtdParam._m0[10u].y) - _553) * _568) + _553;
    float _577 = (((_341.z * cbMtdParam._m0[10u].z) - _558) * _568) + _558;
    vec4 _589 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _327) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _328) + cbTextureTilingScale._m0[9u].w));
    float _596 = (_589.x * 2.0) + (-1.0);
    float _597 = (_589.y * 2.0) + (-1.0);
    float _598 = dot(vec2(_596, _597), vec2(_596, _597));
    float _3522 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _612 = (cbMtdParam._m0[16u].y + _362.z) + cbMtdParam._m0[17u].z;
    float _615 = ((_589.z - _612) * _568) + _612;
    float _627 = (((_596 - _370) + (cbMtdParam._m0[14u].z * _370)) * _568) + _370;
    float _628 = (((_597 - _372) + (cbMtdParam._m0[14u].z * _372)) * _568) + _372;
    float _629 = (_568 * (sqrt(1.0 - (isnan(1.0) ? _3522 : (isnan(_3522) ? 1.0 : min(_3522, 1.0)))) - _379)) + _379;
    float _645 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _647 = _645 - (_645 * _568);
    float _667 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + ((_392 * _382) * cbMtdParam._m0[18u].y));
    float _668 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + ((_392 * _385) * cbMtdParam._m0[18u].y));
    float _675 = isnan(cbInstanceData._m0[8u].x) ? _667 : (isnan(_667) ? cbInstanceData._m0[8u].x : max(_667, cbInstanceData._m0[8u].x));
    float _676 = isnan(cbInstanceData._m0[8u].y) ? _668 : (isnan(_668) ? cbInstanceData._m0[8u].y : max(_668, cbInstanceData._m0[8u].y));
    vec4 _680 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _675 : (isnan(_675) ? cbInstanceData._m0[8u].z : min(_675, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _676 : (isnan(_676) ? cbInstanceData._m0[8u].w : min(_676, cbInstanceData._m0[8u].w))));
    float _713 = _523 - cbMtdParam._m0[15u].x;
    float _3553 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
    float _723 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3553 : (isnan(_3553) ? 1.0 : min(_3553, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3569 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
    float _724 = isnan(1.0) ? _3569 : (isnan(_3569) ? 1.0 : min(_3569, 1.0));
    float _726 = _724 - (_568 * _724);
    float _730 = fma(_629, _241, fma(_628, _234, _627 * _220));
    float _733 = fma(_629, _242, fma(_628, _235, _627 * _221));
    float _736 = fma(_629, _243, fma(_628, _236, _627 * _222));
    float _740 = inversesqrt(dot(vec3(_730, _733, _736), vec3(_730, _733, _736)));
    float _741 = _740 * _730;
    float _742 = _740 * _733;
    float _743 = _740 * _736;
    float _3580 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _744 = isnan(1.0) ? _3580 : (isnan(_3580) ? 1.0 : min(_3580, 1.0));
    float _3591 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _745 = isnan(1.0) ? _3591 : (isnan(_3591) ? 1.0 : min(_3591, 1.0));
    float _746 = isnan(0.0) ? _647 : (isnan(_647) ? 0.0 : max(_647, 0.0));
    float _3607 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _3618 = isnan(0.0) ? _576 : (isnan(_576) ? 0.0 : max(_576, 0.0));
    float _3629 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _763 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _768 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _770 = _768.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _925 = sqrt(((_300 * _300) + (_301 * _301)) + (_302 * _302));
        float _931 = (cbMatDynParam._m0[5u].x * _925) + cbMatDynParam._m0[5u].y;
        float _3640 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
        float _932 = isnan(1.0) ? _3640 : (isnan(_3640) ? 1.0 : min(_3640, 1.0));
        float _936 = (cbMatDynParam._m0[5u].z * _925) + cbMatDynParam._m0[5u].w;
        float _3651 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3651 : (isnan(_3651) ? 1.0 : min(_3651, 1.0))) - _932)) + _932) < ((_770 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _780 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _781 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _799 = fma(_743, cbSceneParam._m0[5u].z, fma(_742, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _741));
    float _802 = fma(_743, cbSceneParam._m0[6u].z, fma(_742, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _741));
    float _805 = fma(_743, cbSceneParam._m0[7u].z, fma(_742, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _741));
    uint _818 = _308 + 9u;
    uint _819 = _818 + uint(cbMatDynParam._m0[0u].w);
    float _825 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3607 : (isnan(_3607) ? 1.0 : min(_3607, 1.0)))) * cbInstanceData._m0[_819].x;
    float _826 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3618 : (isnan(_3618) ? 1.0 : min(_3618, 1.0)))) * cbInstanceData._m0[_819].y;
    float _827 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3629 : (isnan(_3629) ? 1.0 : min(_3629, 1.0)))) * cbInstanceData._m0[_819].z;
    float _3662 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _828 = isnan(1.0) ? _3662 : (isnan(_3662) ? 1.0 : min(_3662, 1.0));
    float _3673 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _829 = isnan(1.0) ? _3673 : (isnan(_3673) ? 1.0 : min(_3673, 1.0));
    float _3684 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _830 = isnan(1.0) ? _3684 : (isnan(_3684) ? 1.0 : min(_3684, 1.0));
    vec4 _838 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _780, cbSceneParam._m0[86u].y * _781));
    float _841 = _838.x * TEXCOORD_5.w;
    float _842 = dot(vec3(_741, _742, _743), vec3(_520, _521, _522));
    float _845 = _842 * 2.0;
    float _849 = (_845 * _741) - _520;
    float _850 = (_845 * _742) - _521;
    float _851 = (_845 * _743) - _522;
    float _852 = dot(vec3(_520, _521, _522), vec3(_741, _742, _743));
    float _855 = abs(_852);
    float _3695 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
    float _856 = isnan(1.0) ? _3695 : (isnan(_3695) ? 1.0 : min(_3695, 1.0));
    float _862 = sqrt(_745);
    float _874 = exp2((_862 * 5.0) * log2(1.0 - (_856 * 0.999000012874603271484375))) / (4.0 - (_862 * 3.0));
    float _906 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _910 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _914 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1244;
    float _1246;
    float _1247;
    float _1248;
    float _1249;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    float _1256;
    float _1257;
    float _1258;
    float _1259;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _969 = fma(_914, cbModelParam._m0[26u].z, fma(_910, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _906));
        float _973 = fma(_914, cbModelParam._m0[27u].z, fma(_910, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _906));
        float _977 = fma(_914, cbModelParam._m0[28u].z, fma(_910, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _906));
        float _1002 = _906 + _741;
        float _1003 = _910 + _742;
        float _1004 = _914 + _743;
        float _1014 = fma(_1004, cbModelParam._m0[26u].z, fma(_1003, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1002)) - _969;
        float _1015 = fma(_1004, cbModelParam._m0[27u].z, fma(_1003, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1002)) - _973;
        float _1016 = fma(_1004, cbModelParam._m0[28u].z, fma(_1003, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1002)) - _977;
        float _1020 = inversesqrt(dot(vec3(_1014, _1015, _1016), vec3(_1014, _1015, _1016)));
        float _1033 = ((_1020 * _1014) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_969 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1034 = ((_1020 * _1015) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_973 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1035 = ((_1020 * _1016) / cbModelParam._m0[34u].z) + ((((((_977 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1038 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1033, _1034, _1035), 0.0);
        vec4 _1045 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1033, _1034, _1035), 0.0);
        vec4 _1052 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1033, _1034, _1035), 0.0);
        vec4 _1059 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1033, _1034, _1035), 0.0);
        float _1072 = exp2((_1038.w + (-0.5)) * 20.0) * 2.0;
        float _1073 = _1072 * (_1038.x + (-0.5));
        float _1074 = _1072 * (_1038.y + (-0.5));
        float _1075 = _1072 * (_1038.z + (-0.5));
        float _1082 = exp2((_1045.w + (-0.5)) * 20.0) * 2.0;
        float _1083 = _1082 * (_1045.x + (-0.5));
        float _1084 = _1082 * (_1045.y + (-0.5));
        float _1085 = _1082 * (_1045.z + (-0.5));
        float _1092 = exp2((_1052.w + (-0.5)) * 20.0) * 2.0;
        float _1093 = _1092 * (_1052.x + (-0.5));
        float _1094 = _1092 * (_1052.y + (-0.5));
        float _1095 = _1092 * (_1052.z + (-0.5));
        float _1102 = exp2((_1059.w + (-0.5)) * 20.0) * 2.0;
        float _1103 = _1102 * (_1059.x + (-0.5));
        float _1104 = _1102 * (_1059.y + (-0.5));
        float _1105 = _1102 * (_1059.z + (-0.5));
        float _1106 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1107 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
        float _1108 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
        float _1109 = _1073 * 0.5;
        float _1110 = _1083 * 0.5;
        float _1111 = _1093 * 0.5;
        float _1112 = dot(vec3(_1109, _1110, _1111), vec3(_1109, _1110, _1111));
        float _1117 = (_1112 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1112);
        float _1126 = (dot(vec3(_741, _742, _743), vec3(_1117 * _1109, _1117 * _1110, _1117 * _1111)) + 1.0) * 0.5;
        float _3721 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1136 = sqrt(((_1110 * _1110) + (_1109 * _1109)) + (_1111 * _1111)) / (_1106 + 9.9999997473787516355514526367188e-06);
        float _3732 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
        float _1137 = isnan(1.0) ? _3732 : (isnan(_3732) ? 1.0 : min(_3732, 1.0));
        float _1138 = _1137 * 2.0;
        float _1142 = (1.0 - _1137) / (_1137 + 1.0);
        float _3743 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1143 = isnan(1.0) ? _3743 : (isnan(_3743) ? 1.0 : min(_3743, 1.0));
        float _1152 = ((((1.0 - _1143) * (_1138 + 2.0)) * exp2(log2(isnan(1.0) ? _3721 : (isnan(_3721) ? 1.0 : min(_3721, 1.0))) * (_1138 + 1.0))) + _1143) * _1106;
        float _1153 = _1074 * 0.5;
        float _1154 = _1084 * 0.5;
        float _1155 = _1094 * 0.5;
        float _1156 = dot(vec3(_1153, _1154, _1155), vec3(_1153, _1154, _1155));
        float _1161 = (_1156 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1156);
        float _1169 = (dot(vec3(_741, _742, _743), vec3(_1161 * _1153, _1161 * _1154, _1161 * _1155)) + 1.0) * 0.5;
        float _3754 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1178 = sqrt(((_1154 * _1154) + (_1153 * _1153)) + (_1155 * _1155)) / (_1107 + 9.9999997473787516355514526367188e-06);
        float _3765 = isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0));
        float _1179 = isnan(1.0) ? _3765 : (isnan(_3765) ? 1.0 : min(_3765, 1.0));
        float _1180 = _1179 * 2.0;
        float _1184 = (1.0 - _1179) / (_1179 + 1.0);
        float _3776 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
        float _1185 = isnan(1.0) ? _3776 : (isnan(_3776) ? 1.0 : min(_3776, 1.0));
        float _1194 = ((((1.0 - _1185) * (_1180 + 2.0)) * exp2(log2(isnan(1.0) ? _3754 : (isnan(_3754) ? 1.0 : min(_3754, 1.0))) * (_1180 + 1.0))) + _1185) * _1107;
        float _1195 = _1075 * 0.5;
        float _1196 = _1085 * 0.5;
        float _1197 = _1095 * 0.5;
        float _1198 = dot(vec3(_1195, _1196, _1197), vec3(_1195, _1196, _1197));
        float _1203 = (_1198 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1198);
        float _1211 = (dot(vec3(_741, _742, _743), vec3(_1203 * _1195, _1203 * _1196, _1203 * _1197)) + 1.0) * 0.5;
        float _3787 = isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0));
        float _1220 = sqrt(((_1196 * _1196) + (_1195 * _1195)) + (_1197 * _1197)) / (_1108 + 9.9999997473787516355514526367188e-06);
        float _3798 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
        float _1221 = isnan(1.0) ? _3798 : (isnan(_3798) ? 1.0 : min(_3798, 1.0));
        float _1222 = _1221 * 2.0;
        float _1226 = (1.0 - _1221) / (_1221 + 1.0);
        float _3809 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
        float _1227 = isnan(1.0) ? _3809 : (isnan(_3809) ? 1.0 : min(_3809, 1.0));
        float _1236 = ((((1.0 - _1227) * (_1222 + 2.0)) * exp2(log2(isnan(1.0) ? _3787 : (isnan(_3787) ? 1.0 : min(_3787, 1.0))) * (_1222 + 1.0))) + _1227) * _1108;
        _1244 = _1075;
        _1246 = _1074;
        _1247 = _1073;
        _1248 = _1085;
        _1249 = _1084;
        _1250 = _1083;
        _1251 = _1095;
        _1252 = _1094;
        _1253 = _1093;
        _1254 = _1108;
        _1255 = _1107;
        _1256 = _1106;
        _1257 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0)));
        _1258 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0)));
        _1259 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0)));
    }
    else
    {
        _1244 = _1245;
        _1246 = _1245;
        _1247 = _1245;
        _1248 = _1245;
        _1249 = _1245;
        _1250 = _1245;
        _1251 = _1245;
        _1252 = _1245;
        _1253 = _1245;
        _1254 = _1245;
        _1255 = _1245;
        _1256 = _1245;
        _1257 = 0.0;
        _1258 = 0.0;
        _1259 = 0.0;
    }
    float _1557;
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1288 = fma(_914, cbModelParam._m0[30u].z, fma(_910, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _906));
        float _1292 = fma(_914, cbModelParam._m0[31u].z, fma(_910, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _906));
        float _1296 = fma(_914, cbModelParam._m0[32u].z, fma(_910, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _906));
        float _1319 = _906 + _741;
        float _1320 = _910 + _742;
        float _1321 = _914 + _743;
        float _1331 = fma(_1321, cbModelParam._m0[30u].z, fma(_1320, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1319)) - _1288;
        float _1332 = fma(_1321, cbModelParam._m0[31u].z, fma(_1320, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1319)) - _1292;
        float _1333 = fma(_1321, cbModelParam._m0[32u].z, fma(_1320, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1319)) - _1296;
        float _1337 = inversesqrt(dot(vec3(_1331, _1332, _1333), vec3(_1331, _1332, _1333)));
        float _1350 = ((_1337 * _1331) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1288 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1351 = ((_1337 * _1332) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1292 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1352 = ((_1337 * _1333) / cbModelParam._m0[35u].z) + ((((((_1296 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1354 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1350, _1351, _1352), 0.0);
        vec4 _1361 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1350, _1351, _1352), 0.0);
        vec4 _1368 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1350, _1351, _1352), 0.0);
        vec4 _1375 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1350, _1351, _1352), 0.0);
        float _1387 = exp2((_1354.w + (-0.5)) * 20.0) * 2.0;
        float _1388 = _1387 * (_1354.x + (-0.5));
        float _1389 = _1387 * (_1354.y + (-0.5));
        float _1390 = _1387 * (_1354.z + (-0.5));
        float _1397 = exp2((_1361.w + (-0.5)) * 20.0) * 2.0;
        float _1398 = _1397 * (_1361.x + (-0.5));
        float _1399 = _1397 * (_1361.y + (-0.5));
        float _1400 = _1397 * (_1361.z + (-0.5));
        float _1407 = exp2((_1368.w + (-0.5)) * 20.0) * 2.0;
        float _1408 = _1407 * (_1368.x + (-0.5));
        float _1409 = _1407 * (_1368.y + (-0.5));
        float _1410 = _1407 * (_1368.z + (-0.5));
        float _1417 = exp2((_1375.w + (-0.5)) * 20.0) * 2.0;
        float _1418 = _1417 * (_1375.x + (-0.5));
        float _1419 = _1417 * (_1375.y + (-0.5));
        float _1420 = _1417 * (_1375.z + (-0.5));
        float _1421 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1422 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1423 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1424 = _1388 * 0.5;
        float _1425 = _1398 * 0.5;
        float _1426 = _1408 * 0.5;
        float _1427 = dot(vec3(_1424, _1425, _1426), vec3(_1424, _1425, _1426));
        float _1432 = (_1427 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1427);
        float _1440 = (dot(vec3(_741, _742, _743), vec3(_1432 * _1424, _1432 * _1425, _1432 * _1426)) + 1.0) * 0.5;
        float _3850 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1449 = sqrt(((_1425 * _1425) + (_1424 * _1424)) + (_1426 * _1426)) / (_1421 + 9.9999997473787516355514526367188e-06);
        float _3861 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1450 = isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0));
        float _1451 = _1450 * 2.0;
        float _1455 = (1.0 - _1450) / (_1450 + 1.0);
        float _3872 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1456 = isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0));
        float _1465 = ((((1.0 - _1456) * (_1451 + 2.0)) * exp2(log2(isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0))) * (_1451 + 1.0))) + _1456) * _1421;
        float _1466 = _1389 * 0.5;
        float _1467 = _1399 * 0.5;
        float _1468 = _1409 * 0.5;
        float _1469 = dot(vec3(_1466, _1467, _1468), vec3(_1466, _1467, _1468));
        float _1474 = (_1469 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1469);
        float _1482 = (dot(vec3(_741, _742, _743), vec3(_1474 * _1466, _1474 * _1467, _1474 * _1468)) + 1.0) * 0.5;
        float _3883 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1491 = sqrt(((_1467 * _1467) + (_1466 * _1466)) + (_1468 * _1468)) / (_1422 + 9.9999997473787516355514526367188e-06);
        float _3894 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1492 = isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0));
        float _1493 = _1492 * 2.0;
        float _1497 = (1.0 - _1492) / (_1492 + 1.0);
        float _3905 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1498 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
        float _1507 = ((((1.0 - _1498) * (_1493 + 2.0)) * exp2(log2(isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0))) * (_1493 + 1.0))) + _1498) * _1422;
        float _1508 = _1390 * 0.5;
        float _1509 = _1400 * 0.5;
        float _1510 = _1410 * 0.5;
        float _1511 = dot(vec3(_1508, _1509, _1510), vec3(_1508, _1509, _1510));
        float _1516 = (_1511 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1511);
        float _1524 = (dot(vec3(_741, _742, _743), vec3(_1516 * _1508, _1516 * _1509, _1516 * _1510)) + 1.0) * 0.5;
        float _3916 = isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0));
        float _1533 = sqrt(((_1509 * _1509) + (_1508 * _1508)) + (_1510 * _1510)) / (_1423 + 9.9999997473787516355514526367188e-06);
        float _3927 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1534 = isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0));
        float _1535 = _1534 * 2.0;
        float _1539 = (1.0 - _1534) / (_1534 + 1.0);
        float _3938 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0));
        float _1540 = isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0));
        float _1549 = ((((1.0 - _1540) * (_1535 + 2.0)) * exp2(log2(isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0))) * (_1535 + 1.0))) + _1540) * _1423;
        _1557 = _1390;
        _1558 = _1389;
        _1559 = _1388;
        _1560 = _1400;
        _1561 = _1399;
        _1562 = _1398;
        _1563 = _1410;
        _1564 = _1409;
        _1565 = _1408;
        _1566 = _1423;
        _1567 = _1422;
        _1568 = _1421;
        _1569 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0)));
        _1570 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0)));
        _1571 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0)));
    }
    else
    {
        _1557 = _1245;
        _1558 = _1245;
        _1559 = _1245;
        _1560 = _1245;
        _1561 = _1245;
        _1562 = _1245;
        _1563 = _1245;
        _1564 = _1245;
        _1565 = _1245;
        _1566 = _1245;
        _1567 = _1245;
        _1568 = _1245;
        _1569 = 0.0;
        _1570 = 0.0;
        _1571 = 0.0;
    }
    float _1581 = (cbModelParam._m0[1u].x * (_1569 - _1257)) + _1257;
    float _1582 = (cbModelParam._m0[1u].x * (_1570 - _1258)) + _1258;
    float _1583 = (cbModelParam._m0[1u].x * (_1571 - _1259)) + _1259;
    float _1604 = fma(_1583, cbSceneParam._m0[89u].z, fma(_1582, cbSceneParam._m0[89u].y, _1581 * cbSceneParam._m0[89u].x));
    float _1607 = fma(_1583, cbSceneParam._m0[90u].z, fma(_1582, cbSceneParam._m0[90u].y, _1581 * cbSceneParam._m0[90u].x));
    float _1610 = fma(_1583, cbSceneParam._m0[91u].z, fma(_1582, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1581));
    float _1625 = _849 * 0.5;
    float _1626 = _850 * 0.5;
    float _1627 = _851 * 0.5;
    float _1628 = dot(vec4(_1625, _1626, _1627, 1.0), vec4(_1559, _1562, _1565, _1568));
    float _1631 = dot(vec4(_1625, _1626, _1627, 1.0), vec4(_1558, _1561, _1564, _1567));
    float _1634 = dot(vec4(_1625, _1626, _1627, 1.0), vec4(_1557, _1560, _1563, _1566));
    float _1668;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1641 = dot(vec4(_1625, _1626, _1627, 1.0), vec4(_1244, _1248, _1251, _1254));
        float _1645 = dot(vec4(_1625, _1626, _1627, 1.0), vec4(_1246, _1249, _1252, _1255));
        float _1649 = dot(vec4(_1625, _1626, _1627, 1.0), vec4(_1247, _1250, _1253, _1256));
        float _1656 = dot(vec4(cbModelParam._m0[39u]), vec4(_1625, _1626, _1627, 1.0));
        _1668 = dot(vec3(isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0)), isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0)), isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1656) ? 0.0 : (isnan(0.0) ? _1656 : max(0.0, _1656))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1668 = 1.0;
    }
    float _1679;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1670 = dot(vec4(cbModelParam._m0[40u]), vec4(_1625, _1626, _1627, 1.0));
        _1679 = dot(vec3(isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0)), isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0)), isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1670) ? 0.0 : (isnan(0.0) ? _1670 : max(0.0, _1670))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1679 = 1.0;
    }
    float _1683 = (_1679 * cbModelParam._m0[1u].x) + (_1668 * (1.0 - cbModelParam._m0[1u].x));
    float _1693 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _745);
    float _1694 = isnan(_1693) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1693 : min(cbModelParam._m0[25u].z, _1693));
    float _1774;
    float _1776;
    float _1778;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1741 = fma(_914, cbModelParam._m0[13u].z, fma(_910, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _906)) + cbModelParam._m0[13u].w;
        float _1745 = fma(_914, cbModelParam._m0[14u].z, fma(_910, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _906)) + cbModelParam._m0[14u].w;
        float _1749 = fma(_914, cbModelParam._m0[15u].z, fma(_910, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _906)) + cbModelParam._m0[15u].w;
        float _1752 = fma(_851, cbModelParam._m0[13u].z, fma(_850, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _849));
        float _1755 = fma(_851, cbModelParam._m0[14u].z, fma(_850, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _849));
        float _1758 = fma(_851, cbModelParam._m0[15u].z, fma(_850, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _849));
        float _1786;
        if (_1752 > 0.0)
        {
            _1786 = abs((1.0 - _1741) / _1752);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1752 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1741 + 1.0) / _1752);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1786 = frontier_phi_19_17_ladder;
        }
        float _1958;
        if (_1755 > 0.0)
        {
            _1958 = abs((1.0 - _1745) / _1755);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1755 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1745 + 1.0) / _1755);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1958 = frontier_phi_28_24_ladder;
        }
        float _2222;
        if (_1758 > 0.0)
        {
            _2222 = abs((1.0 - _1749) / _1758);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1758 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1749 + 1.0) / _1758);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2222 = frontier_phi_40_35_ladder;
        }
        float _2224 = isnan(_1958) ? _1786 : (isnan(_1786) ? _1958 : min(_1786, _1958));
        float _2225 = isnan(_2222) ? _2224 : (isnan(_2224) ? _2222 : min(_2224, _2222));
        float _2229 = (_2225 * _1752) + _1741;
        float _2230 = (_2225 * _1755) + _1745;
        float _2231 = (_2225 * _1758) + _1749;
        float _2232 = _2225 * 9.9999997473787516355514526367188e-05;
        float _2234 = (-1.0) - _2232;
        float _2236 = _2232 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2231 > _2236) || ((_2231 < _2234) || ((_2230 > _2236) || ((_2230 < _2234) || ((_2229 < _2234) || (_2229 > _2236))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2385 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2231, cbModelParam._m0[9u].z, fma(_2230, cbModelParam._m0[9u].y, _2229 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2231, cbModelParam._m0[10u].z, fma(_2230, cbModelParam._m0[10u].y, _2229 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2231, cbModelParam._m0[11u].z, fma(_2230, cbModelParam._m0[11u].y, _2229 * cbModelParam._m0[11u].x))), _1694);
            frontier_phi_18_40_ladder = _2385.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2385.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2385.x * cbModelParam._m0[1u].y;
        }
        _1774 = frontier_phi_18_40_ladder_2;
        _1776 = frontier_phi_18_40_ladder_1;
        _1778 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1762 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_849, _850, _851), _1694);
        _1774 = _1762.x * cbModelParam._m0[1u].y;
        _1776 = _1762.y * cbModelParam._m0[1u].y;
        _1778 = _1762.z * cbModelParam._m0[1u].y;
    }
    float _1782 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _745);
    float _1783 = isnan(_1782) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1782 : min(cbModelParam._m0[25u].w, _1782));
    float _1875;
    float _1877;
    float _1879;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1839 = fma(_914, cbModelParam._m0[21u].z, fma(_910, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _906)) + cbModelParam._m0[21u].w;
        float _1843 = fma(_914, cbModelParam._m0[22u].z, fma(_910, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _906)) + cbModelParam._m0[22u].w;
        float _1847 = fma(_914, cbModelParam._m0[23u].z, fma(_910, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _906)) + cbModelParam._m0[23u].w;
        float _1850 = fma(_851, cbModelParam._m0[21u].z, fma(_850, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _849));
        float _1853 = fma(_851, cbModelParam._m0[22u].z, fma(_850, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _849));
        float _1856 = fma(_851, cbModelParam._m0[23u].z, fma(_850, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _849));
        float _1963;
        if (_1850 > 0.0)
        {
            _1963 = abs((1.0 - _1839) / _1850);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1850 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1839 + 1.0) / _1850);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1963 = frontier_phi_30_26_ladder;
        }
        float _2249;
        if (_1853 > 0.0)
        {
            _2249 = abs((1.0 - _1843) / _1853);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1853 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1843 + 1.0) / _1853);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2249 = frontier_phi_42_37_ladder;
        }
        float _2568;
        if (_1856 > 0.0)
        {
            _2568 = abs((1.0 - _1847) / _1856);
        }
        else
        {
            float frontier_phi_51_49_ladder;
            if (_1856 < 0.0)
            {
                frontier_phi_51_49_ladder = abs((_1847 + 1.0) / _1856);
            }
            else
            {
                frontier_phi_51_49_ladder = 5000.0;
            }
            _2568 = frontier_phi_51_49_ladder;
        }
        float _2570 = isnan(_2249) ? _1963 : (isnan(_1963) ? _2249 : min(_1963, _2249));
        float _2571 = isnan(_2568) ? _2570 : (isnan(_2570) ? _2568 : min(_2570, _2568));
        float _2575 = (_2571 * _1850) + _1839;
        float _2576 = (_2571 * _1853) + _1843;
        float _2577 = (_2571 * _1856) + _1847;
        float _2578 = _2571 * 9.9999997473787516355514526367188e-05;
        float _2579 = (-1.0) - _2578;
        float _2581 = _2578 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_2577 > _2581) || ((_2577 < _2579) || ((_2576 > _2581) || ((_2576 < _2579) || ((_2575 < _2579) || (_2575 > _2581))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2678 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2577, cbModelParam._m0[17u].z, fma(_2576, cbModelParam._m0[17u].y, _2575 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2577, cbModelParam._m0[18u].z, fma(_2576, cbModelParam._m0[18u].y, _2575 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2577, cbModelParam._m0[19u].z, fma(_2576, cbModelParam._m0[19u].y, _2575 * cbModelParam._m0[19u].x))), _1783);
            frontier_phi_27_51_ladder = _2678.x * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _2678.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _2678.y * cbModelParam._m0[1u].z;
        }
        _1875 = frontier_phi_27_51_ladder;
        _1877 = frontier_phi_27_51_ladder_2;
        _1879 = frontier_phi_27_51_ladder_1;
    }
    else
    {
        vec4 _1859 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_849, _850, _851), _1783);
        _1875 = _1859.x * cbModelParam._m0[1u].z;
        _1877 = _1859.y * cbModelParam._m0[1u].z;
        _1879 = _1859.z * cbModelParam._m0[1u].z;
    }
    float _1891 = ((((1.0 - _874) * ((_862 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_874 * _862)) * _841;
    float _1892 = _1891 * ((cbModelParam._m0[1u].w * (_1875 - _1774)) + _1774);
    float _1893 = _1891 * ((cbModelParam._m0[1u].w * (_1877 - _1776)) + _1776);
    float _1894 = _1891 * ((cbModelParam._m0[1u].w * (_1879 - _1778)) + _1778);
    float _1897 = fma(_1894, cbSceneParam._m0[89u].z, fma(_1893, cbSceneParam._m0[89u].y, _1892 * cbSceneParam._m0[89u].x));
    float _1900 = fma(_1894, cbSceneParam._m0[90u].z, fma(_1893, cbSceneParam._m0[90u].y, _1892 * cbSceneParam._m0[90u].x));
    float _1903 = fma(_1894, cbSceneParam._m0[91u].z, fma(_1893, cbSceneParam._m0[91u].y, _1892 * cbSceneParam._m0[91u].x));
    float _1937 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1941 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1945 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1949 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1950 = _1937 / _1949;
    float _1951 = _1941 / _1949;
    float _1952 = _1945 / _1949;
    float _2099;
    float _2100;
    float _2101;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1979 = ((uint(_1952 > cbSceneParam._m0[59u].y) + uint(_1952 > cbSceneParam._m0[59u].x)) + uint(_1952 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1980 = _1979 + 43u;
        uint _1988 = _1979 + 44u;
        uint _1996 = _1979 + 45u;
        uint _2004 = _1979 + 46u;
        float _2015 = fma(_1949, cbSceneParam._m0[_1980].w, fma(_1945, cbSceneParam._m0[_1980].z, fma(_1941, cbSceneParam._m0[_1980].y, _1937 * cbSceneParam._m0[_1980].x)));
        float _2019 = fma(_1949, cbSceneParam._m0[_1988].w, fma(_1945, cbSceneParam._m0[_1988].z, fma(_1941, cbSceneParam._m0[_1988].y, _1937 * cbSceneParam._m0[_1988].x)));
        float _2027 = fma(_1949, cbSceneParam._m0[_2004].w, fma(_1945, cbSceneParam._m0[_2004].z, fma(_1941, cbSceneParam._m0[_2004].y, _1937 * cbSceneParam._m0[_2004].x)));
        float _2032 = cbSceneParam._m0[33u].z * _2027;
        float _2034 = cbSceneParam._m0[33u].w * _2027;
        float _2037 = fma(_1949, cbSceneParam._m0[_1996].w, fma(_1945, cbSceneParam._m0[_1996].z, fma(_1941, cbSceneParam._m0[_1996].y, _1937 * cbSceneParam._m0[_1996].x))) / _2027;
        float _2085 = (cbSceneParam._m0[33u].x - sqrt(((_1951 * _1951) + (_1950 * _1950)) + (_1952 * _1952))) * cbSceneParam._m0[33u].y;
        float _4064 = isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0));
        float _2092 = (isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2032 + _2015) / _2027, (_2034 + _2019) / _2027), _2037), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2034 + _2015) / _2027, (_2019 - _2032) / _2027), _2037), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2015 - _2032) / _2027, (_2019 - _2034) / _2027), _2037), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2015 - _2034) / _2027, (_2032 + _2019) / _2027), _2037), 0.0)).x), vec4(0.25)));
        _2099 = 1.0 - (_2092 * cbSceneParam._m0[34u].x);
        _2100 = 1.0 - (_2092 * cbSceneParam._m0[34u].y);
        _2101 = 1.0 - (_2092 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2099 = 1.0;
        _2100 = 1.0;
        _2101 = 1.0;
    }
    float _2165;
    float _2167;
    float _2169;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2153 = fma(_1949, cbSceneParam._m0[63u].w, fma(_1945, cbSceneParam._m0[63u].z, fma(_1941, cbSceneParam._m0[63u].y, _1937 * cbSceneParam._m0[63u].x)));
        float _2154 = fma(_1949, cbSceneParam._m0[60u].w, fma(_1945, cbSceneParam._m0[60u].z, fma(_1941, cbSceneParam._m0[60u].y, _1937 * cbSceneParam._m0[60u].x))) / _2153;
        float _2155 = fma(_1949, cbSceneParam._m0[61u].w, fma(_1945, cbSceneParam._m0[61u].z, fma(_1941, cbSceneParam._m0[61u].y, _1937 * cbSceneParam._m0[61u].x))) / _2153;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2154 >= cbSceneParam._m0[64u].x) && (_2155 >= cbSceneParam._m0[64u].y)) && (_2154 <= cbSceneParam._m0[64u].z)) && (_2155 <= cbSceneParam._m0[64u].w))
        {
            float _2262 = fma(_1949, cbSceneParam._m0[62u].w, fma(_1945, cbSceneParam._m0[62u].z, fma(_1941, cbSceneParam._m0[62u].y, _1937 * cbSceneParam._m0[62u].x))) / _2153;
            float _2266 = isnan(cbSceneParam._m0[41u].w) ? _2262 : (isnan(_2262) ? cbSceneParam._m0[41u].w : max(_2262, cbSceneParam._m0[41u].w));
            float _2309 = (cbSceneParam._m0[33u].x - sqrt(((_1951 * _1951) + (_1950 * _1950)) + (_1952 * _1952))) * cbSceneParam._m0[33u].y;
            float _4080 = isnan(0.0) ? _2309 : (isnan(_2309) ? 0.0 : max(_2309, 0.0));
            float _2316 = (isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2154, cbSceneParam._m0[33u].w + _2155), _2266), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2154, _2155 - cbSceneParam._m0[33u].z), _2266), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2154 - cbSceneParam._m0[33u].z, _2155 - cbSceneParam._m0[33u].w), _2266), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2154 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2155), _2266), 0.0)).x), vec4(0.25)));
            float _2320 = 1.0 - (_2316 * cbSceneParam._m0[34u].x);
            float _2321 = 1.0 - (_2316 * cbSceneParam._m0[34u].y);
            float _2322 = 1.0 - (_2316 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2322) ? _2101 : (isnan(_2101) ? _2322 : min(_2101, _2322));
            frontier_phi_39_38_ladder_1 = isnan(_2321) ? _2100 : (isnan(_2100) ? _2321 : min(_2100, _2321));
            frontier_phi_39_38_ladder_2 = isnan(_2320) ? _2099 : (isnan(_2099) ? _2320 : min(_2099, _2320));
        }
        else
        {
            frontier_phi_39_38_ladder = _2101;
            frontier_phi_39_38_ladder_1 = _2100;
            frontier_phi_39_38_ladder_2 = _2099;
        }
        _2165 = frontier_phi_39_38_ladder_2;
        _2167 = frontier_phi_39_38_ladder_1;
        _2169 = frontier_phi_39_38_ladder;
    }
    else
    {
        _2165 = _2099;
        _2167 = _2100;
        _2169 = _2101;
    }
    uvec4 _2174 = floatBitsToUint(cbInstanceData._m0[_308 + 5u]);
    uint _2176 = _2174.x * 14u;
    uint _2177 = _2176 + 13u;
    float _2182 = _841 + (-1.0);
    float _2185 = (cbLight._m0[_2177].x * _2182) + 1.0;
    float _2186 = (cbLight._m0[_2177].y * _2182) + 1.0;
    uint _2188 = _2176 + 4u;
    float _2199 = dot(vec3(cbLight._m0[_2176].xyz), vec3(_741, _742, _743));
    float _2202 = isnan(1.0) ? _2185 : (isnan(_2185) ? 1.0 : min(_2185, 1.0));
    float _2203 = cbLight._m0[_2188].x * _2165;
    float _2204 = cbLight._m0[_2188].y * _2167;
    float _2205 = cbLight._m0[_2188].z * _2169;
    uint _2206 = _2176 + 5u;
    uint _2212 = _2176 | 1u;
    float _2218 = dot(vec3(cbLight._m0[_2212].xyz), vec3(_741, _742, _743));
    float _2221 = isnan(1.0) ? _2186 : (isnan(_2186) ? 1.0 : min(_2186, 1.0));
    float _2394;
    float _2395;
    float _2396;
    if (_746 == 0.0)
    {
        float _4116 = isnan(0.0) ? _2199 : (isnan(_2199) ? 0.0 : max(_2199, 0.0));
        float _4127 = isnan(0.0) ? _2218 : (isnan(_2218) ? 0.0 : max(_2218, 0.0));
        float _2331 = (isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0))) * 0.3183098733425140380859375;
        float _2333 = (isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0))) * 0.3183098733425140380859375;
        _2394 = ((cbLight._m0[_2206].x * _2221) * _2333) + ((_2203 * _2202) * _2331);
        _2395 = ((_2221 * cbLight._m0[_2206].y) * _2333) + ((_2204 * _2202) * _2331);
        _2396 = ((_2221 * cbLight._m0[_2206].z) * _2333) + ((_2205 * _2202) * _2331);
    }
    else
    {
        float _2343 = _2199 + _746;
        float _2346 = (_746 * 2.0) + 1.0;
        float _2347 = (isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0))) / _2346;
        float _2354 = _2218 + _746;
        float _2356 = (isnan(0.0) ? _2354 : (isnan(_2354) ? 0.0 : max(_2354, 0.0))) / _2346;
        _2394 = (((_2356 * cbLight._m0[_2206].x) * _2221) + ((_2203 * _2347) * _2202)) * 0.3183098733425140380859375;
        _2395 = (((_2356 * cbLight._m0[_2206].y) * _2221) + ((_2204 * _2347) * _2202)) * 0.3183098733425140380859375;
        _2396 = (((_2356 * cbLight._m0[_2206].z) * _2221) + ((_2205 * _2347) * _2202)) * 0.3183098733425140380859375;
    }
    uint _2400 = _2176 + 8u;
    float _2416 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2176].w)) * _745) * 0.949999988079071044921875);
    float _2417 = _2416 * _2416;
    float _2418 = cbLight._m0[_2176].x + _520;
    float _2419 = cbLight._m0[_2176].y + _521;
    float _2420 = cbLight._m0[_2176].z + _522;
    float _2424 = inversesqrt(dot(vec3(_2418, _2419, _2420), vec3(_2418, _2419, _2420)));
    float _2425 = _2424 * _2418;
    float _2426 = _2424 * _2419;
    float _2427 = _2424 * _2420;
    float _2428 = dot(vec3(_741, _742, _743), vec3(cbLight._m0[_2176].xyz));
    float _4148 = isnan(0.0) ? _2428 : (isnan(_2428) ? 0.0 : max(_2428, 0.0));
    float _2431 = isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0));
    float _4159 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _2432 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
    float _2433 = dot(vec3(_741, _742, _743), vec3(_2425, _2426, _2427));
    float _4170 = isnan(0.0) ? _2433 : (isnan(_2433) ? 0.0 : max(_2433, 0.0));
    float _2436 = isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0));
    float _2437 = dot(vec3(cbLight._m0[_2176].xyz), vec3(_2425, _2426, _2427));
    float _4181 = isnan(0.0) ? _2437 : (isnan(_2437) ? 0.0 : max(_2437, 0.0));
    float _2441 = _2417 * _2417;
    float _2445 = ((_2436 * _2436) * (_2441 + (-1.0))) + 1.0;
    float _2456 = (exp2(log2(1.0 - (isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2457 = 1.0 - _2417;
    float _2468 = (0.5 / (((_2432 * ((_2431 * _2457) + _2417)) + 9.9999999392252902907785028219223e-09) + (((_2432 * _2457) + _2417) * _2431))) * _2431;
    float _4192 = isnan(0.0) ? _2468 : (isnan(_2468) ? 0.0 : max(_2468, 0.0));
    float _2470 = (isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0))) * (_2441 / ((_2445 * _2445) * 3.141590118408203125));
    uint _2486 = _2176 + 9u;
    float _2500 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2212].w)) * _745) * 0.949999988079071044921875);
    float _2501 = _2500 * _2500;
    float _2502 = cbLight._m0[_2212].x + _520;
    float _2503 = cbLight._m0[_2212].y + _521;
    float _2504 = cbLight._m0[_2212].z + _522;
    float _2508 = inversesqrt(dot(vec3(_2502, _2503, _2504), vec3(_2502, _2503, _2504)));
    float _2509 = _2508 * _2502;
    float _2510 = _2508 * _2503;
    float _2511 = _2508 * _2504;
    float _2512 = dot(vec3(_741, _742, _743), vec3(cbLight._m0[_2212].xyz));
    float _4203 = isnan(0.0) ? _2512 : (isnan(_2512) ? 0.0 : max(_2512, 0.0));
    float _2515 = isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0));
    float _2516 = dot(vec3(_741, _742, _743), vec3(_2509, _2510, _2511));
    float _4214 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
    float _2519 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
    float _2520 = dot(vec3(cbLight._m0[_2212].xyz), vec3(_2509, _2510, _2511));
    float _4225 = isnan(0.0) ? _2520 : (isnan(_2520) ? 0.0 : max(_2520, 0.0));
    float _2524 = _2501 * _2501;
    float _2528 = ((_2519 * _2519) * (_2524 + (-1.0))) + 1.0;
    float _2537 = (exp2(log2(1.0 - (isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2538 = 1.0 - _2501;
    float _2548 = (0.5 / (((_2432 * ((_2515 * _2538) + _2501)) + 9.9999999392252902907785028219223e-09) + (((_2432 * _2538) + _2501) * _2515))) * _2515;
    float _4236 = isnan(0.0) ? _2548 : (isnan(_2548) ? 0.0 : max(_2548, 0.0));
    float _2550 = (isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0))) * (_2524 / ((_2528 * _2528) * 3.141590118408203125));
    float _2560 = (((_2537 * cbLight._m0[_2486].x) * _2550) * _2221) + ((((cbLight._m0[_2400].x * _2165) * _2456) * _2470) * _2202);
    float _2561 = (((_2537 * cbLight._m0[_2486].y) * _2550) * _2221) + ((((cbLight._m0[_2400].y * _2167) * _2456) * _2470) * _2202);
    float _2562 = (((_2537 * cbLight._m0[_2486].z) * _2550) * _2221) + ((((cbLight._m0[_2400].z * _2169) * _2456) * _2470) * _2202);
    float _2649;
    float _2651;
    float _2653;
    float _2655;
    float _2657;
    float _2659;
    if (_2174.y == 0u)
    {
        uvec4 _2605 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2606 = _2605.x;
        uint _2617 = uint((float(_2605.y) * floor(float(uint(cbSceneParam._m0[85u].y * _781) / _2606))) + floor(float(uint(cbSceneParam._m0[85u].x * _780) / _2606)));
        float _2627 = (log2(_1952 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2628 = isnan(0.0) ? _2627 : (isnan(_2627) ? 0.0 : max(_2627, 0.0));
        uint _2631 = uint(isnan(14.0) ? _2628 : (isnan(_2628) ? 14.0 : min(_2628, 14.0)));
        uint _2638 = _2605.z;
        float _2683;
        float _2685;
        float _2687;
        float _2689;
        float _2691;
        float _2693;
        if (((((1u << ((_2638 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2631 << 2u) + (_2617 << 6u)) >> 2u)).x) == 0u) || ((_2638 & 240u) == 0u))
        {
            _2683 = 0.0;
            _2685 = 0.0;
            _2687 = 0.0;
            _2689 = 0.0;
            _2691 = 0.0;
            _2693 = 0.0;
        }
        else
        {
            float _2684;
            float _2686;
            float _2688;
            float _2690;
            float _2692;
            float _2694;
            float _2849 = 0.0;
            float _2850 = 0.0;
            float _2851 = 0.0;
            float _2852 = 0.0;
            float _2853 = 0.0;
            float _2854 = 0.0;
            uint _2855 = 0u;
            uint _2864;
            bool _2865;
            for (;;)
            {
                _2864 = texelFetch(g_lightClassification, int((((_2631 << 5u) + (_2617 << 9u)) + (_2855 << 2u)) >> 2u)).x;
                _2865 = _2864 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2865)
                {
                    frontier_phi_63_pred = _2851;
                    frontier_phi_63_pred_1 = _2854;
                    frontier_phi_63_pred_2 = _2853;
                    frontier_phi_63_pred_3 = _2852;
                    frontier_phi_63_pred_4 = _2850;
                    frontier_phi_63_pred_5 = _2849;
                }
                else
                {
                    float _3065;
                    float _3066;
                    float _3067;
                    float _3068;
                    float _3069;
                    float _3070;
                    uint _3071;
                    _3065 = _2849;
                    _3066 = _2850;
                    _3067 = _2851;
                    _3068 = _2852;
                    _3069 = _2853;
                    _3070 = _2854;
                    _3071 = _2864;
                    float _2997;
                    float _2998;
                    float _2999;
                    float _3000;
                    float _3001;
                    float _3002;
                    for (;;)
                    {
                        uint _3075 = uint(findLSB(_3071)) + (_2855 << 5u);
                        uint _3072 = (_3071 + 4294967295u) & _3071;
                        uint _3077 = _3075 * 48u;
                        vec4 _3091 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3077)).x, texelFetch(g_PointLightRenderingBuffer, int(_3077 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3077 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3077 + 3u)).x));
                        uint _3097 = (_3075 * 48u) + 4u;
                        vec4 _3110 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3097)).x, texelFetch(g_PointLightRenderingBuffer, int(_3097 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3097 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3097 + 3u)).x));
                        float _3111 = _3110.x;
                        float _3112 = _3110.y;
                        float _3113 = _3110.z;
                        uint _3116 = (_3075 * 48u) + 8u;
                        vec3 _3127 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3116)).x, texelFetch(g_PointLightRenderingBuffer, int(_3116 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3116 + 2u)).x));
                        uint _3132 = (_3075 * 48u) + 12u;
                        vec2 _3140 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_3132)).x, texelFetch(g_PointLightRenderingBuffer, int(_3132 + 1u)).x));
                        float _3146 = inversesqrt(dot(vec3(_1950, _1951, _1952), vec3(_1950, _1951, _1952)));
                        float _3147 = _3146 * _1950;
                        float _3148 = _3146 * _1951;
                        float _3149 = _3146 * _1952;
                        float _3150 = _3091.x - _1950;
                        float _3151 = _3091.y - _1951;
                        float _3152 = _3091.z - _1952;
                        float _3153 = dot(vec3(_3150, _3151, _3152), vec3(_3150, _3151, _3152));
                        float _3156 = inversesqrt(_3153);
                        float _3157 = _3156 * _3150;
                        float _3158 = _3156 * _3151;
                        float _3159 = _3156 * _3152;
                        float _3160 = dot(vec3(_799, _802, _805), vec3(_3157, _3158, _3159));
                        float _3165 = 1.0 - (_3153 * _3091.w);
                        float _4257 = isnan(0.0) ? _3165 : (isnan(_3165) ? 0.0 : max(_3165, 0.0));
                        float _3166 = isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0));
                        float _3167 = sqrt(_3153) * _3110.w;
                        float _3170 = 1.39999997615814208984375 / (_3167 + 1.39999997615814208984375);
                        float _3171 = _3170 * _3170;
                        float _3172 = 1.0 - _3171;
                        float _3174 = (_3172 * _3172) * _746;
                        float _3177 = ((_3172 * _3160) + _3171) + _3174;
                        float _3182 = _3167 * _3167;
                        float _3187 = ((isnan(0.0) ? _3177 : (isnan(_3177) ? 0.0 : max(_3177, 0.0))) * _3166) / (((_3174 * 2.0) + 1.0) * ((_3182 * 0.699999988079071044921875) + 1.0));
                        float _3191 = dot(vec3(_3157, _3158, _3159), vec3(_3147, _3148, _3149));
                        float _4273 = isnan(0.0) ? _3191 : (isnan(_3191) ? 0.0 : max(_3191, 0.0));
                        float _3198 = dot(vec3((-0.0) - _3147, (-0.0) - _3148, (-0.0) - _3149), vec3(_799, _802, _805)) + 1.0;
                        float _3200 = (isnan(0.0) ? _3198 : (isnan(_3198) ? 0.0 : max(_3198, 0.0))) * 0.5;
                        float _3207 = ((_3200 * _3200) * _3140.x) * exp2((_3140.y * 32.0) * log2(isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0))));
                        float _3209 = _746 / (_746 + 1.0);
                        float _3225 = (-0.0) - _1950;
                        float _3226 = (-0.0) - _1951;
                        float _3227 = (-0.0) - _1952;
                        float _3231 = inversesqrt(dot(vec3(_3225, _3226, _3227), vec3(_3225, _3226, _3227)));
                        float _3232 = _3231 * _3225;
                        float _3233 = _3231 * _3226;
                        float _3234 = _3231 * _3227;
                        float _3241 = exp2(log2(1.0 / ((_3182 * 3.5) + 5.0)) * 0.25);
                        float _3242 = 1.0 - _862;
                        float _3249 = sqrt(1.0 - ((1.0 - (_3242 * _3242)) * (1.0 - (_3241 * _3241))));
                        float _3250 = _3249 * _3249;
                        float _3251 = _3250 * _3250;
                        float _3252 = _3232 + _3157;
                        float _3253 = _3233 + _3158;
                        float _3254 = _3234 + _3159;
                        float _3258 = inversesqrt(dot(vec3(_3252, _3253, _3254), vec3(_3252, _3253, _3254)));
                        float _3262 = dot(vec3(_799, _802, _805), vec3(_3232, _3233, _3234));
                        float _4289 = isnan(0.0) ? _3262 : (isnan(_3262) ? 0.0 : max(_3262, 0.0));
                        float _3265 = isnan(1.0) ? _4289 : (isnan(_4289) ? 1.0 : min(_4289, 1.0));
                        float _3266 = dot(vec3(_799, _802, _805), vec3(_3258 * _3252, _3258 * _3253, _3258 * _3254));
                        float _4300 = isnan(0.0) ? _3266 : (isnan(_3266) ? 0.0 : max(_3266, 0.0));
                        float _3269 = isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0));
                        float _3273 = ((_3269 * _3269) * (_3251 + (-1.0))) + 1.0;
                        float _3274 = _3170 * _3250;
                        float _3275 = _3274 * _3274;
                        float _3278 = ((1.0 - _3275) * _3160) + _3275;
                        float _4311 = isnan(0.0) ? _3278 : (isnan(_3278) ? 0.0 : max(_3278, 0.0));
                        float _3279 = isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0));
                        float _3280 = 1.0 - _3250;
                        float _3290 = (0.5 / (((_3279 * ((_3265 * _3280) + _3250)) + 9.9999999392252902907785028219223e-09) + (((_3279 * _3280) + _3250) * _3265))) * _3279;
                        float _4322 = isnan(0.0) ? _3290 : (isnan(_3290) ? 0.0 : max(_3290, 0.0));
                        float _3301 = (((_3251 * 3.1415927410125732421875) * (isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0)))) / ((_3273 * _3273) * ((_3182 * 2.1991131305694580078125) + 3.141590118408203125))) * _3166;
                        _3000 = (((((_3111 * 0.3183098733425140380859375) * _3209) * _3207) + _3111) * _3187) + _3068;
                        _3001 = (((((_3112 * 0.3183098733425140380859375) * _3209) * _3207) + _3112) * _3187) + _3069;
                        _3002 = (((((_3113 * 0.3183098733425140380859375) * _3209) * _3207) + _3113) * _3187) + _3070;
                        _2997 = (_3301 * _3127.x) + _3065;
                        _2998 = (_3301 * _3127.y) + _3066;
                        _2999 = (_3301 * _3127.z) + _3067;
                        if (_3072 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3065 = _2997;
                            _3066 = _2998;
                            _3067 = _2999;
                            _3068 = _3000;
                            _3069 = _3001;
                            _3070 = _3002;
                            _3071 = _3072;
                        }
                    }
                    frontier_phi_63_pred = _2999;
                    frontier_phi_63_pred_1 = _3002;
                    frontier_phi_63_pred_2 = _3001;
                    frontier_phi_63_pred_3 = _3000;
                    frontier_phi_63_pred_4 = _2998;
                    frontier_phi_63_pred_5 = _2997;
                }
                _2688 = frontier_phi_63_pred;
                _2694 = frontier_phi_63_pred_1;
                _2692 = frontier_phi_63_pred_2;
                _2690 = frontier_phi_63_pred_3;
                _2686 = frontier_phi_63_pred_4;
                _2684 = frontier_phi_63_pred_5;
                uint _2856 = _2855 + 1u;
                if (_2856 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2849 = _2684;
                    _2850 = _2686;
                    _2851 = _2688;
                    _2852 = _2690;
                    _2853 = _2692;
                    _2854 = _2694;
                    _2855 = _2856;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2683 = _2684;
            _2685 = _2686;
            _2687 = _2688;
            _2689 = _2690;
            _2691 = _2692;
            _2693 = _2694;
        }
        float _2698 = isnan(1.0) ? _841 : (isnan(_841) ? 1.0 : min(_841, 1.0));
        _2649 = (_2698 * _2689) + _2394;
        _2651 = (_2698 * _2691) + _2395;
        _2653 = (_2698 * _2693) + _2396;
        _2655 = ((_2683 * 0.039999999105930328369140625) * _2698) + _2560;
        _2657 = ((_2685 * 0.039999999105930328369140625) * _2698) + _2561;
        _2659 = ((_2687 * 0.039999999105930328369140625) * _2698) + _2562;
    }
    else
    {
        _2649 = _2394;
        _2651 = _2395;
        _2653 = _2396;
        _2655 = _2560;
        _2657 = _2561;
        _2659 = _2562;
    }
    float _2772;
    float _2773;
    float _2774;
    if (_746 > 0.0)
    {
        uint _2705 = _2176 + 4u;
        float _2711 = (-0.0) - _520;
        float _2712 = (-0.0) - _521;
        float _2713 = (-0.0) - _522;
        float _2714 = dot(vec3(cbLight._m0[_2176].xyz), vec3(_2711, _2712, _2713));
        float _4338 = isnan(0.0) ? _2714 : (isnan(_2714) ? 0.0 : max(_2714, 0.0));
        float _2718 = _852 + 1.0;
        float _2720 = (isnan(0.0) ? _2718 : (isnan(_2718) ? 0.0 : max(_2718, 0.0))) * 0.5;
        float _2725 = _2720 * _2720;
        float _2726 = _2725 * exp2(log2(isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0))) * 32.0);
        float _2728 = _746 / (_746 + 1.0);
        float _2729 = isnan(_2185) ? 1.0 : (isnan(1.0) ? _2185 : min(1.0, _2185));
        uint _2742 = _2176 + 5u;
        float _2748 = dot(vec3(cbLight._m0[_2212].xyz), vec3(_2711, _2712, _2713));
        float _4359 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
        float _2755 = _2725 * exp2(log2(isnan(1.0) ? _4359 : (isnan(_4359) ? 1.0 : min(_4359, 1.0))) * 32.0);
        float _2756 = isnan(_2186) ? 1.0 : (isnan(1.0) ? _2186 : min(1.0, _2186));
        _2772 = ((((_2755 * cbLight._m0[_2742].x) * _2728) * _2756) + ((((cbLight._m0[_2705].x * _2165) * _2726) * _2728) * _2729)) * 0.3183098733425140380859375;
        _2773 = ((((_2755 * cbLight._m0[_2742].y) * _2728) * _2756) + ((((cbLight._m0[_2705].y * _2167) * _2726) * _2728) * _2729)) * 0.3183098733425140380859375;
        _2774 = ((((_2755 * cbLight._m0[_2742].z) * _2728) * _2756) + ((((cbLight._m0[_2705].z * _2169) * _2726) * _2728) * _2729)) * 0.3183098733425140380859375;
    }
    else
    {
        _2772 = 0.0;
        _2773 = 0.0;
        _2774 = 0.0;
    }
    float _4375 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    float _4386 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _4397 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
    float _4408 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _2789 = (isnan(1.0) ? _4375 : (isnan(_4375) ? 1.0 : min(_4375, 1.0))) * ((_2649 + ((isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0))) * _841)) + _2772);
    float _2790 = (isnan(1.0) ? _4386 : (isnan(_4386) ? 1.0 : min(_4386, 1.0))) * ((_2651 + ((isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0))) * _841)) + _2773);
    float _2791 = (isnan(1.0) ? _4397 : (isnan(_4397) ? 1.0 : min(_4397, 1.0))) * ((_2653 + ((isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0))) * _841)) + _2774);
    float _2795 = 0.959999978542327880859375 - (exp2(log2(1.0 - _856) * 5.0) * 0.959999978542327880859375);
    float _2806 = (_2789 + ((_2655 + ((isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0))) * _1683)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _680.x) * _2795) - _2789) * _726);
    float _2808 = (_2790 + ((_2657 + ((isnan(0.0) ? _1900 : (isnan(_1900) ? 0.0 : max(_1900, 0.0))) * _1683)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _680.y) * _2795) - _2790) * _726);
    float _2810 = (_2791 + ((_2659 + ((isnan(0.0) ? _1903 : (isnan(_1903) ? 0.0 : max(_1903, 0.0))) * _1683)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _680.z) * _2795) - _2791) * _726);
    float _2815 = cbInstanceData._m0[_308 + 6u].w * (isnan(1.0) ? _4408 : (isnan(_4408) ? 1.0 : min(_4408, 1.0)));
    float _2820 = _780 / cbSceneParam._m0[86u].x;
    float _2821 = _781 / cbSceneParam._m0[86u].y;
    vec4 _2835 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2820, _2821, (log2((isnan(cbSceneParam._m0[77u].w) ? _763 : (isnan(_763) ? cbSceneParam._m0[77u].w : min(_763, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2837 = _2835.x;
    float _2838 = _2835.y;
    float _2839 = _2835.z;
    float _2840 = _2835.w;
    float _2907;
    float _2909;
    float _2911;
    float _2913;
    if (_763 > cbSceneParam._m0[78u].w)
    {
        float _2870 = isnan(_763) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _763 : min(cbSceneParam._m0[80u].w, _763));
        float _2871 = _2870 / _763;
        float _2882 = _2871 * _300;
        float _2883 = _301 * _2871;
        float _2884 = (-0.0) - _2883;
        float _2885 = _2871 * _302;
        float _2887 = (cbSceneParam._m0[77u].w * _2884) / _2870;
        float _2888 = _2887 + cbSceneParam._m0[79u].w;
        float _2889 = cbSceneParam._m0[79u].w - _2883;
        float _2895 = sqrt(((_2882 * _2882) + (_2883 * _2883)) + (_2885 * _2885));
        float _2898 = (1.0 - (cbSceneParam._m0[77u].w / _2870)) * _2895;
        float _2903 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2905 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3306;
        if (abs((_2884 - _2887) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3306 = ((((_2888 > 0.0) ? exp2(_2903 * _2888) : (2.0 - exp2(_2905 * _2888))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2898;
        }
        else
        {
            float _3022 = 1.0 / cbSceneParam._m0[80u].x;
            float _3023 = isnan(_2889) ? _2888 : (isnan(_2888) ? _2889 : max(_2888, _2889));
            float _3024 = isnan(_2889) ? _2888 : (isnan(_2888) ? _2889 : min(_2888, _2889));
            float _3033 = isnan(0.0) ? _3023 : (isnan(_3023) ? 0.0 : min(_3023, 0.0));
            float _3034 = isnan(0.0) ? _3024 : (isnan(_3024) ? 0.0 : min(_3024, 0.0));
            _3306 = ((abs(_2895 / _2884) * cbSceneParam._m0[80u].y) * ((((_3033 - _3034) * 2.0) - ((exp2(_2903 * (isnan(0.0) ? _3023 : (isnan(_3023) ? 0.0 : max(_3023, 0.0)))) - exp2(_2903 * (isnan(0.0) ? _3024 : (isnan(_3024) ? 0.0 : max(_3024, 0.0))))) * _3022)) - ((exp2(_2905 * _3033) - exp2(_2905 * _3034)) * _3022))) + (_2898 * cbSceneParam._m0[80u].z);
        }
        vec4 _3308 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2820, _2821, 1.0), 0.0);
        float _3317 = exp2((_3306 * (-1.44269502162933349609375)) * (1.0 - _3308.w));
        float _3318 = log2(_3317);
        float _3334 = log2(_2840);
        _2907 = (exp2(_3334 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3318 * cbSceneParam._m0[78u].x)) * _3308.x) / cbSceneParam._m0[78u].x)) + _2837;
        _2909 = (exp2(_3334 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3318 * cbSceneParam._m0[78u].y)) * _3308.y) / cbSceneParam._m0[78u].y)) + _2838;
        _2911 = (exp2(_3334 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3318 * cbSceneParam._m0[78u].z)) * _3308.z) / cbSceneParam._m0[78u].z)) + _2839;
        _2913 = _3317 * _2840;
    }
    else
    {
        _2907 = _2837;
        _2909 = _2838;
        _2911 = _2839;
        _2913 = _2840;
    }
    bool _3344;
    float _2968;
    vec4 _2971;
    float _2973;
    vec4 _2975;
    float _2983;
    float _2984;
    float _2985;
    float _2986;
    bool _2996;
    for (;;)
    {
        bool _2925 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2926 = log2(_2913);
        float _2933 = exp2(_2926 * cbSceneParam._m0[78u].x) * _2806;
        float _2934 = exp2(_2926 * cbSceneParam._m0[78u].y) * _2808;
        float _2935 = exp2(_2926 * cbSceneParam._m0[78u].z) * _2810;
        vec4 _2943 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_780, _781));
        float _2945 = _2943.x;
        float _2966 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2945)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2945))) - _763) * cbMtdParam._m0[17u].y;
        float _4459 = isnan(0.0) ? _2966 : (isnan(_2966) ? 0.0 : max(_2966, 0.0));
        _2968 = _2815 * (isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0)));
        float _2969 = _770 + (-0.5);
        _2971 = cbMtdParam._m0[1u];
        _2973 = _2971.y * _2969;
        _2975 = cbMatDynParam._m0[0u];
        float _2982 = (roundEven(_2975.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2983 = _2982 * (_2925 ? _2933 : (_2933 + (cbSceneParam._m0[72u].w * _2907)));
        _2984 = _2982 * (_2925 ? _2934 : (_2934 + (cbSceneParam._m0[72u].w * _2909)));
        _2985 = _2982 * (_2925 ? _2935 : (_2935 + (cbSceneParam._m0[72u].w * _2911)));
        _2986 = _2969 * 0.999000012874603271484375;
        _2996 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2996)
        {
            if ((cbInstanceData._m0[_308 + 7u].x + _2986) < 0.5)
            {
                _3344 = true;
                break;
            }
        }
        uint _3057 = _818 + uint(_2975.w);
        if ((cbInstanceData._m0[_3057].w < 1.0) && ((cbInstanceData._m0[_3057].w + _2986) < 0.5))
        {
            _3344 = true;
            break;
        }
        if ((_2973 + _430) < _2971.x)
        {
            _3344 = true;
            break;
        }
        _3344 = false;
        break;
    }
    float _3349;
    if (_3344)
    {
        discard_state = true;
        _3349 = 0.0;
    }
    else
    {
        _3349 = _2968;
    }
    SV_Target.x = _2983;
    SV_Target.y = _2984;
    SV_Target.z = _2985;
    SV_Target.w = _3349;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2968;
    discard_exit();
}


