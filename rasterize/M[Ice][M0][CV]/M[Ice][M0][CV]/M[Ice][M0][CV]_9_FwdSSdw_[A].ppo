#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1248;
float _3215;
float _3216;
float _3217;
float _3218;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _208 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _209 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _210 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _216 = inversesqrt(dot(vec3(_208, _209, _210), vec3(_208, _209, _210)));
    float _217 = _216 * _208;
    float _218 = _216 * _209;
    float _219 = _216 * _210;
    float _223 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _224 = _223 * NORMAL.x;
    float _225 = _223 * NORMAL.y;
    float _226 = _223 * NORMAL.z;
    float _230 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _231 = _230 * TANGENT.x;
    float _232 = _230 * TANGENT.y;
    float _233 = _230 * TANGENT.z;
    float _238;
    float _239;
    float _240;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _238 = (-0.0) - _224;
        _239 = (-0.0) - _225;
        _240 = (-0.0) - _226;
    }
    else
    {
        _238 = _224;
        _239 = _225;
        _240 = _226;
    }
    float _287 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _297 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _287);
    float _298 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _287);
    float _299 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _287);
    uint _305 = uint(roundEven(NORMAL.w)) * 13u;
    uint _310 = _305 + 1u;
    uint _314 = _305 + 2u;
    float _323 = sqrt(((cbInstanceData._m0[_310].x * cbInstanceData._m0[_310].x) + (cbInstanceData._m0[_305].x * cbInstanceData._m0[_305].x)) + (cbInstanceData._m0[_314].x * cbInstanceData._m0[_314].x));
    float _324 = _323 * TEXCOORD.z;
    float _325 = _323 * TEXCOORD.w;
    vec4 _338 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _324) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _325) + cbTextureTilingScale._m0[8u].w));
    vec4 _365 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _373 = (_365.x * 2.0) + (-1.0);
    float _375 = (_365.y * 2.0) + (-1.0);
    float _376 = dot(vec2(_373, _375), vec2(_373, _375));
    float _3227 = isnan(0.0) ? _376 : (isnan(_376) ? 0.0 : max(_376, 0.0));
    float _382 = sqrt(1.0 - (isnan(1.0) ? _3227 : (isnan(_3227) ? 1.0 : min(_3227, 1.0))));
    float _385 = fma(_382, _238, fma(_375, _231, _373 * _217));
    float _388 = fma(_382, _239, fma(_375, _232, _373 * _218));
    float _391 = fma(_382, _240, fma(_375, _233, _373 * _219));
    float _395 = inversesqrt(dot(vec3(_385, _388, _391), vec3(_385, _388, _391)));
    float _396 = _395 * _385;
    float _397 = _395 * _388;
    float _426 = (cbMtdParam._m0[17u].w + dot(vec4(_396, _397, _395 * _391, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _324) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _325) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3238 = isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0));
    float _427 = isnan(1.0) ? _3238 : (isnan(_3238) ? 1.0 : min(_3238, 1.0));
    vec4 _439 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _444 = _439.w;
    float _456 = dot(vec3(_297, _298, _299), vec3(_217, _218, _219));
    float _459 = dot(vec3(_297, _298, _299), vec3(_231, _232, _233));
    float _462 = dot(vec3(_297, _298, _299), vec3(_238, _239, _240));
    float _468 = inversesqrt(dot(vec3(_456, _459, _462), vec3(_456, _459, _462)));
    float _490 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _510 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_456 * cbMtdParam._m0[14u].x) * _468) * _490) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_459 * cbMtdParam._m0[14u].x) * _468) * _490) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _533 = inversesqrt(dot(vec3(_297, _298, _299), vec3(_297, _298, _299)));
    float _534 = _533 * _297;
    float _535 = _533 * _298;
    float _536 = _533 * _299;
    float _537 = dot(vec4(_534, _535, _536, 0.0), vec4(_238, _239, _240, 0.0));
    float _540 = _537 - cbMtdParam._m0[15u].z;
    float _3249 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _547 = exp2(log2(1.0 - (isnan(1.0) ? _3249 : (isnan(_3249) ? 1.0 : min(_3249, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _562 = ((((_439.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _510.x) * cbMtdParam._m0[9u].x) * ((_547 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _567 = ((((_439.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _510.y) * cbMtdParam._m0[9u].y) * ((_547 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _572 = ((((_439.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _510.z) * cbMtdParam._m0[9u].z) * ((_547 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _579 = (((_338.x * cbMtdParam._m0[10u].x) - _562) * _427) + _562;
    float _580 = (((_338.y * cbMtdParam._m0[10u].y) - _567) * _427) + _567;
    float _581 = (((_338.z * cbMtdParam._m0[10u].z) - _572) * _427) + _572;
    vec4 _593 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _324) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _325) + cbTextureTilingScale._m0[9u].w));
    float _600 = (_593.x * 2.0) + (-1.0);
    float _601 = (_593.y * 2.0) + (-1.0);
    float _602 = dot(vec2(_600, _601), vec2(_600, _601));
    float _3265 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _614 = (cbMtdParam._m0[16u].y + _365.z) + cbMtdParam._m0[17u].z;
    float _617 = ((_593.z - _614) * _427) + _614;
    float _627 = ((sqrt(1.0 - (isnan(1.0) ? _3265 : (isnan(_3265) ? 1.0 : min(_3265, 1.0)))) - _382) * _427) + _382;
    float _630 = (((_600 - _373) * _427) + _373) + (cbMtdParam._m0[14u].z * _373);
    float _631 = (((_601 - _375) * _427) + _375) + (cbMtdParam._m0[14u].z * _375);
    vec4 _643 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _647 = cbMtdParam._m0[16u].w * _643.x;
    float _649 = _647 - (_647 * _427);
    float _669 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _396));
    float _670 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _397));
    float _677 = isnan(cbInstanceData._m0[8u].x) ? _669 : (isnan(_669) ? cbInstanceData._m0[8u].x : max(_669, cbInstanceData._m0[8u].x));
    float _678 = isnan(cbInstanceData._m0[8u].y) ? _670 : (isnan(_670) ? cbInstanceData._m0[8u].y : max(_670, cbInstanceData._m0[8u].y));
    vec4 _682 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _677 : (isnan(_677) ? cbInstanceData._m0[8u].z : min(_677, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _678 : (isnan(_678) ? cbInstanceData._m0[8u].w : min(_678, cbInstanceData._m0[8u].w))));
    float _715 = _537 - cbMtdParam._m0[15u].x;
    float _3296 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
    float _725 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3296 : (isnan(_3296) ? 1.0 : min(_3296, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3312 = isnan(0.0) ? _725 : (isnan(_725) ? 0.0 : max(_725, 0.0));
    float _726 = isnan(1.0) ? _3312 : (isnan(_3312) ? 1.0 : min(_3312, 1.0));
    float _728 = _726 - (_726 * _427);
    float _732 = fma(_627, _238, fma(_631, _231, _630 * _217));
    float _735 = fma(_627, _239, fma(_631, _232, _630 * _218));
    float _738 = fma(_627, _240, fma(_631, _233, _630 * _219));
    float _742 = inversesqrt(dot(vec3(_732, _735, _738), vec3(_732, _735, _738)));
    float _743 = _742 * _732;
    float _744 = _742 * _735;
    float _745 = _742 * _738;
    float _3323 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _746 = isnan(1.0) ? _3323 : (isnan(_3323) ? 1.0 : min(_3323, 1.0));
    float _3334 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _747 = isnan(1.0) ? _3334 : (isnan(_3334) ? 1.0 : min(_3334, 1.0));
    float _748 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
    float _3350 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _3361 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _3372 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _765 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _770 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _772 = _770.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _927 = sqrt(((_297 * _297) + (_298 * _298)) + (_299 * _299));
        float _933 = (cbMatDynParam._m0[5u].x * _927) + cbMatDynParam._m0[5u].y;
        float _3383 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
        float _934 = isnan(1.0) ? _3383 : (isnan(_3383) ? 1.0 : min(_3383, 1.0));
        float _938 = (cbMatDynParam._m0[5u].z * _927) + cbMatDynParam._m0[5u].w;
        float _3394 = isnan(0.0) ? _938 : (isnan(_938) ? 0.0 : max(_938, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3394 : (isnan(_3394) ? 1.0 : min(_3394, 1.0))) - _934)) + _934) < ((_772 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _782 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _783 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _801 = fma(_745, cbSceneParam._m0[5u].z, fma(_744, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _743));
    float _804 = fma(_745, cbSceneParam._m0[6u].z, fma(_744, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _743));
    float _807 = fma(_745, cbSceneParam._m0[7u].z, fma(_744, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _743));
    uint _820 = _305 + 9u;
    uint _821 = _820 + uint(cbMatDynParam._m0[0u].w);
    float _827 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3350 : (isnan(_3350) ? 1.0 : min(_3350, 1.0)))) * cbInstanceData._m0[_821].x;
    float _828 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3361 : (isnan(_3361) ? 1.0 : min(_3361, 1.0)))) * cbInstanceData._m0[_821].y;
    float _829 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3372 : (isnan(_3372) ? 1.0 : min(_3372, 1.0)))) * cbInstanceData._m0[_821].z;
    float _3405 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _830 = isnan(1.0) ? _3405 : (isnan(_3405) ? 1.0 : min(_3405, 1.0));
    float _3416 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    float _831 = isnan(1.0) ? _3416 : (isnan(_3416) ? 1.0 : min(_3416, 1.0));
    float _3427 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _832 = isnan(1.0) ? _3427 : (isnan(_3427) ? 1.0 : min(_3427, 1.0));
    vec4 _840 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _782, cbSceneParam._m0[86u].y * _783));
    float _843 = _840.x * TEXCOORD_5.w;
    float _844 = dot(vec3(_743, _744, _745), vec3(_534, _535, _536));
    float _847 = _844 * 2.0;
    float _851 = (_847 * _743) - _534;
    float _852 = (_847 * _744) - _535;
    float _853 = (_847 * _745) - _536;
    float _854 = dot(vec3(_534, _535, _536), vec3(_743, _744, _745));
    float _857 = abs(_854);
    float _3438 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    float _858 = isnan(1.0) ? _3438 : (isnan(_3438) ? 1.0 : min(_3438, 1.0));
    float _864 = sqrt(_747);
    float _876 = exp2((_864 * 5.0) * log2(1.0 - (_858 * 0.999000012874603271484375))) / (4.0 - (_864 * 3.0));
    float _908 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _912 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _916 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1247;
    float _1249;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    float _1256;
    float _1257;
    float _1258;
    float _1259;
    float _1260;
    float _1261;
    float _1262;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _972 = fma(_916, cbModelParam._m0[26u].z, fma(_912, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _908));
        float _976 = fma(_916, cbModelParam._m0[27u].z, fma(_912, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _908));
        float _980 = fma(_916, cbModelParam._m0[28u].z, fma(_912, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _908));
        float _1005 = _908 + _743;
        float _1006 = _912 + _744;
        float _1007 = _916 + _745;
        float _1017 = fma(_1007, cbModelParam._m0[26u].z, fma(_1006, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1005)) - _972;
        float _1018 = fma(_1007, cbModelParam._m0[27u].z, fma(_1006, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1005)) - _976;
        float _1019 = fma(_1007, cbModelParam._m0[28u].z, fma(_1006, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1005)) - _980;
        float _1023 = inversesqrt(dot(vec3(_1017, _1018, _1019), vec3(_1017, _1018, _1019)));
        float _1036 = ((_1023 * _1017) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_972 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1037 = ((_1023 * _1018) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_976 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1038 = ((_1023 * _1019) / cbModelParam._m0[34u].z) + ((((((_980 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1041 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1036, _1037, _1038), 0.0);
        vec4 _1048 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1036, _1037, _1038), 0.0);
        vec4 _1055 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1036, _1037, _1038), 0.0);
        vec4 _1062 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1036, _1037, _1038), 0.0);
        float _1075 = exp2((_1041.w + (-0.5)) * 20.0) * 2.0;
        float _1076 = _1075 * (_1041.x + (-0.5));
        float _1077 = _1075 * (_1041.y + (-0.5));
        float _1078 = _1075 * (_1041.z + (-0.5));
        float _1085 = exp2((_1048.w + (-0.5)) * 20.0) * 2.0;
        float _1086 = _1085 * (_1048.x + (-0.5));
        float _1087 = _1085 * (_1048.y + (-0.5));
        float _1088 = _1085 * (_1048.z + (-0.5));
        float _1095 = exp2((_1055.w + (-0.5)) * 20.0) * 2.0;
        float _1096 = _1095 * (_1055.x + (-0.5));
        float _1097 = _1095 * (_1055.y + (-0.5));
        float _1098 = _1095 * (_1055.z + (-0.5));
        float _1105 = exp2((_1062.w + (-0.5)) * 20.0) * 2.0;
        float _1106 = _1105 * (_1062.x + (-0.5));
        float _1107 = _1105 * (_1062.y + (-0.5));
        float _1108 = _1105 * (_1062.z + (-0.5));
        float _1109 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
        float _1110 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
        float _1111 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1112 = _1076 * 0.5;
        float _1113 = _1086 * 0.5;
        float _1114 = _1096 * 0.5;
        float _1115 = dot(vec3(_1112, _1113, _1114), vec3(_1112, _1113, _1114));
        float _1120 = (_1115 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1115);
        float _1129 = (dot(vec3(_743, _744, _745), vec3(_1120 * _1112, _1120 * _1113, _1120 * _1114)) + 1.0) * 0.5;
        float _3464 = isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0));
        float _1139 = sqrt(((_1113 * _1113) + (_1112 * _1112)) + (_1114 * _1114)) / (_1109 + 9.9999997473787516355514526367188e-06);
        float _3475 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1140 = isnan(1.0) ? _3475 : (isnan(_3475) ? 1.0 : min(_3475, 1.0));
        float _1141 = _1140 * 2.0;
        float _1145 = (1.0 - _1140) / (_1140 + 1.0);
        float _3486 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
        float _1146 = isnan(1.0) ? _3486 : (isnan(_3486) ? 1.0 : min(_3486, 1.0));
        float _1155 = ((((1.0 - _1146) * (_1141 + 2.0)) * exp2(log2(isnan(1.0) ? _3464 : (isnan(_3464) ? 1.0 : min(_3464, 1.0))) * (_1141 + 1.0))) + _1146) * _1109;
        float _1156 = _1077 * 0.5;
        float _1157 = _1087 * 0.5;
        float _1158 = _1097 * 0.5;
        float _1159 = dot(vec3(_1156, _1157, _1158), vec3(_1156, _1157, _1158));
        float _1164 = (_1159 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1159);
        float _1172 = (dot(vec3(_743, _744, _745), vec3(_1164 * _1156, _1164 * _1157, _1164 * _1158)) + 1.0) * 0.5;
        float _3497 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1181 = sqrt(((_1157 * _1157) + (_1156 * _1156)) + (_1158 * _1158)) / (_1110 + 9.9999997473787516355514526367188e-06);
        float _3508 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
        float _1182 = isnan(1.0) ? _3508 : (isnan(_3508) ? 1.0 : min(_3508, 1.0));
        float _1183 = _1182 * 2.0;
        float _1187 = (1.0 - _1182) / (_1182 + 1.0);
        float _3519 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1188 = isnan(1.0) ? _3519 : (isnan(_3519) ? 1.0 : min(_3519, 1.0));
        float _1197 = ((((1.0 - _1188) * (_1183 + 2.0)) * exp2(log2(isnan(1.0) ? _3497 : (isnan(_3497) ? 1.0 : min(_3497, 1.0))) * (_1183 + 1.0))) + _1188) * _1110;
        float _1198 = _1078 * 0.5;
        float _1199 = _1088 * 0.5;
        float _1200 = _1098 * 0.5;
        float _1201 = dot(vec3(_1198, _1199, _1200), vec3(_1198, _1199, _1200));
        float _1206 = (_1201 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1201);
        float _1214 = (dot(vec3(_743, _744, _745), vec3(_1206 * _1198, _1206 * _1199, _1206 * _1200)) + 1.0) * 0.5;
        float _3530 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
        float _1223 = sqrt(((_1199 * _1199) + (_1198 * _1198)) + (_1200 * _1200)) / (_1111 + 9.9999997473787516355514526367188e-06);
        float _3541 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
        float _1224 = isnan(1.0) ? _3541 : (isnan(_3541) ? 1.0 : min(_3541, 1.0));
        float _1225 = _1224 * 2.0;
        float _1229 = (1.0 - _1224) / (_1224 + 1.0);
        float _3552 = isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0));
        float _1230 = isnan(1.0) ? _3552 : (isnan(_3552) ? 1.0 : min(_3552, 1.0));
        float _1239 = ((((1.0 - _1230) * (_1225 + 2.0)) * exp2(log2(isnan(1.0) ? _3530 : (isnan(_3530) ? 1.0 : min(_3530, 1.0))) * (_1225 + 1.0))) + _1230) * _1111;
        _1247 = _1078;
        _1249 = _1077;
        _1250 = _1076;
        _1251 = _1088;
        _1252 = _1087;
        _1253 = _1086;
        _1254 = _1098;
        _1255 = _1097;
        _1256 = _1096;
        _1257 = _1111;
        _1258 = _1110;
        _1259 = _1109;
        _1260 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0)));
        _1261 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0)));
        _1262 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0)));
    }
    else
    {
        _1247 = _1248;
        _1249 = _1248;
        _1250 = _1248;
        _1251 = _1248;
        _1252 = _1248;
        _1253 = _1248;
        _1254 = _1248;
        _1255 = _1248;
        _1256 = _1248;
        _1257 = _1248;
        _1258 = _1248;
        _1259 = _1248;
        _1260 = 0.0;
        _1261 = 0.0;
        _1262 = 0.0;
    }
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1291 = fma(_916, cbModelParam._m0[30u].z, fma(_912, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _908));
        float _1295 = fma(_916, cbModelParam._m0[31u].z, fma(_912, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _908));
        float _1299 = fma(_916, cbModelParam._m0[32u].z, fma(_912, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _908));
        float _1322 = _908 + _743;
        float _1323 = _912 + _744;
        float _1324 = _916 + _745;
        float _1334 = fma(_1324, cbModelParam._m0[30u].z, fma(_1323, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1322)) - _1291;
        float _1335 = fma(_1324, cbModelParam._m0[31u].z, fma(_1323, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1322)) - _1295;
        float _1336 = fma(_1324, cbModelParam._m0[32u].z, fma(_1323, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1322)) - _1299;
        float _1340 = inversesqrt(dot(vec3(_1334, _1335, _1336), vec3(_1334, _1335, _1336)));
        float _1353 = ((_1340 * _1334) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1291 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1354 = ((_1340 * _1335) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1295 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1355 = ((_1340 * _1336) / cbModelParam._m0[35u].z) + ((((((_1299 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1357 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1353, _1354, _1355), 0.0);
        vec4 _1364 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1353, _1354, _1355), 0.0);
        vec4 _1371 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1353, _1354, _1355), 0.0);
        vec4 _1378 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1353, _1354, _1355), 0.0);
        float _1390 = exp2((_1357.w + (-0.5)) * 20.0) * 2.0;
        float _1391 = _1390 * (_1357.x + (-0.5));
        float _1392 = _1390 * (_1357.y + (-0.5));
        float _1393 = _1390 * (_1357.z + (-0.5));
        float _1400 = exp2((_1364.w + (-0.5)) * 20.0) * 2.0;
        float _1401 = _1400 * (_1364.x + (-0.5));
        float _1402 = _1400 * (_1364.y + (-0.5));
        float _1403 = _1400 * (_1364.z + (-0.5));
        float _1410 = exp2((_1371.w + (-0.5)) * 20.0) * 2.0;
        float _1411 = _1410 * (_1371.x + (-0.5));
        float _1412 = _1410 * (_1371.y + (-0.5));
        float _1413 = _1410 * (_1371.z + (-0.5));
        float _1420 = exp2((_1378.w + (-0.5)) * 20.0) * 2.0;
        float _1421 = _1420 * (_1378.x + (-0.5));
        float _1422 = _1420 * (_1378.y + (-0.5));
        float _1423 = _1420 * (_1378.z + (-0.5));
        float _1424 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1425 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1426 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1427 = _1391 * 0.5;
        float _1428 = _1401 * 0.5;
        float _1429 = _1411 * 0.5;
        float _1430 = dot(vec3(_1427, _1428, _1429), vec3(_1427, _1428, _1429));
        float _1435 = (_1430 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1430);
        float _1443 = (dot(vec3(_743, _744, _745), vec3(_1435 * _1427, _1435 * _1428, _1435 * _1429)) + 1.0) * 0.5;
        float _3593 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1452 = sqrt(((_1428 * _1428) + (_1427 * _1427)) + (_1429 * _1429)) / (_1424 + 9.9999997473787516355514526367188e-06);
        float _3604 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
        float _1453 = isnan(1.0) ? _3604 : (isnan(_3604) ? 1.0 : min(_3604, 1.0));
        float _1454 = _1453 * 2.0;
        float _1458 = (1.0 - _1453) / (_1453 + 1.0);
        float _3615 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1459 = isnan(1.0) ? _3615 : (isnan(_3615) ? 1.0 : min(_3615, 1.0));
        float _1468 = ((((1.0 - _1459) * (_1454 + 2.0)) * exp2(log2(isnan(1.0) ? _3593 : (isnan(_3593) ? 1.0 : min(_3593, 1.0))) * (_1454 + 1.0))) + _1459) * _1424;
        float _1469 = _1392 * 0.5;
        float _1470 = _1402 * 0.5;
        float _1471 = _1412 * 0.5;
        float _1472 = dot(vec3(_1469, _1470, _1471), vec3(_1469, _1470, _1471));
        float _1477 = (_1472 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1472);
        float _1485 = (dot(vec3(_743, _744, _745), vec3(_1477 * _1469, _1477 * _1470, _1477 * _1471)) + 1.0) * 0.5;
        float _3626 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1494 = sqrt(((_1470 * _1470) + (_1469 * _1469)) + (_1471 * _1471)) / (_1425 + 9.9999997473787516355514526367188e-06);
        float _3637 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
        float _1495 = isnan(1.0) ? _3637 : (isnan(_3637) ? 1.0 : min(_3637, 1.0));
        float _1496 = _1495 * 2.0;
        float _1500 = (1.0 - _1495) / (_1495 + 1.0);
        float _3648 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _3648 : (isnan(_3648) ? 1.0 : min(_3648, 1.0));
        float _1510 = ((((1.0 - _1501) * (_1496 + 2.0)) * exp2(log2(isnan(1.0) ? _3626 : (isnan(_3626) ? 1.0 : min(_3626, 1.0))) * (_1496 + 1.0))) + _1501) * _1425;
        float _1511 = _1393 * 0.5;
        float _1512 = _1403 * 0.5;
        float _1513 = _1413 * 0.5;
        float _1514 = dot(vec3(_1511, _1512, _1513), vec3(_1511, _1512, _1513));
        float _1519 = (_1514 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1514);
        float _1527 = (dot(vec3(_743, _744, _745), vec3(_1519 * _1511, _1519 * _1512, _1519 * _1513)) + 1.0) * 0.5;
        float _3659 = isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0));
        float _1536 = sqrt(((_1512 * _1512) + (_1511 * _1511)) + (_1513 * _1513)) / (_1426 + 9.9999997473787516355514526367188e-06);
        float _3670 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
        float _1537 = isnan(1.0) ? _3670 : (isnan(_3670) ? 1.0 : min(_3670, 1.0));
        float _1538 = _1537 * 2.0;
        float _1542 = (1.0 - _1537) / (_1537 + 1.0);
        float _3681 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1543 = isnan(1.0) ? _3681 : (isnan(_3681) ? 1.0 : min(_3681, 1.0));
        float _1552 = ((((1.0 - _1543) * (_1538 + 2.0)) * exp2(log2(isnan(1.0) ? _3659 : (isnan(_3659) ? 1.0 : min(_3659, 1.0))) * (_1538 + 1.0))) + _1543) * _1426;
        _1560 = _1393;
        _1561 = _1392;
        _1562 = _1391;
        _1563 = _1403;
        _1564 = _1402;
        _1565 = _1401;
        _1566 = _1413;
        _1567 = _1412;
        _1568 = _1411;
        _1569 = _1426;
        _1570 = _1425;
        _1571 = _1424;
        _1572 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0)));
        _1573 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0)));
        _1574 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0)));
    }
    else
    {
        _1560 = _1248;
        _1561 = _1248;
        _1562 = _1248;
        _1563 = _1248;
        _1564 = _1248;
        _1565 = _1248;
        _1566 = _1248;
        _1567 = _1248;
        _1568 = _1248;
        _1569 = _1248;
        _1570 = _1248;
        _1571 = _1248;
        _1572 = 0.0;
        _1573 = 0.0;
        _1574 = 0.0;
    }
    float _1584 = (cbModelParam._m0[1u].x * (_1572 - _1260)) + _1260;
    float _1585 = (cbModelParam._m0[1u].x * (_1573 - _1261)) + _1261;
    float _1586 = (cbModelParam._m0[1u].x * (_1574 - _1262)) + _1262;
    float _1607 = fma(_1586, cbSceneParam._m0[89u].z, fma(_1585, cbSceneParam._m0[89u].y, _1584 * cbSceneParam._m0[89u].x));
    float _1610 = fma(_1586, cbSceneParam._m0[90u].z, fma(_1585, cbSceneParam._m0[90u].y, _1584 * cbSceneParam._m0[90u].x));
    float _1613 = fma(_1586, cbSceneParam._m0[91u].z, fma(_1585, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1584));
    float _1628 = _851 * 0.5;
    float _1629 = _852 * 0.5;
    float _1630 = _853 * 0.5;
    float _1631 = dot(vec4(_1628, _1629, _1630, 1.0), vec4(_1562, _1565, _1568, _1571));
    float _1634 = dot(vec4(_1628, _1629, _1630, 1.0), vec4(_1561, _1564, _1567, _1570));
    float _1637 = dot(vec4(_1628, _1629, _1630, 1.0), vec4(_1560, _1563, _1566, _1569));
    float _1671;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1644 = dot(vec4(_1628, _1629, _1630, 1.0), vec4(_1247, _1251, _1254, _1257));
        float _1648 = dot(vec4(_1628, _1629, _1630, 1.0), vec4(_1249, _1252, _1255, _1258));
        float _1652 = dot(vec4(_1628, _1629, _1630, 1.0), vec4(_1250, _1253, _1256, _1259));
        float _1659 = dot(vec4(cbModelParam._m0[39u]), vec4(_1628, _1629, _1630, 1.0));
        _1671 = dot(vec3(isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0)), isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0)), isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1659) ? 0.0 : (isnan(0.0) ? _1659 : max(0.0, _1659))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1671 = 1.0;
    }
    float _1682;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1673 = dot(vec4(cbModelParam._m0[40u]), vec4(_1628, _1629, _1630, 1.0));
        _1682 = dot(vec3(isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0)), isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0)), isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1673) ? 0.0 : (isnan(0.0) ? _1673 : max(0.0, _1673))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1682 = 1.0;
    }
    float _1686 = (_1682 * cbModelParam._m0[1u].x) + (_1671 * (1.0 - cbModelParam._m0[1u].x));
    float _1696 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _747);
    float _1697 = isnan(_1696) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1696 : min(cbModelParam._m0[25u].z, _1696));
    float _1777;
    float _1779;
    float _1781;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1744 = fma(_916, cbModelParam._m0[13u].z, fma(_912, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _908)) + cbModelParam._m0[13u].w;
        float _1748 = fma(_916, cbModelParam._m0[14u].z, fma(_912, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _908)) + cbModelParam._m0[14u].w;
        float _1752 = fma(_916, cbModelParam._m0[15u].z, fma(_912, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _908)) + cbModelParam._m0[15u].w;
        float _1755 = fma(_853, cbModelParam._m0[13u].z, fma(_852, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _851));
        float _1758 = fma(_853, cbModelParam._m0[14u].z, fma(_852, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _851));
        float _1761 = fma(_853, cbModelParam._m0[15u].z, fma(_852, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _851));
        float _1789;
        if (_1755 > 0.0)
        {
            _1789 = abs((1.0 - _1744) / _1755);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1755 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1744 + 1.0) / _1755);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1789 = frontier_phi_19_17_ladder;
        }
        float _1981;
        if (_1758 > 0.0)
        {
            _1981 = abs((1.0 - _1748) / _1758);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1758 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1748 + 1.0) / _1758);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1981 = frontier_phi_28_24_ladder;
        }
        float _2219;
        if (_1761 > 0.0)
        {
            _2219 = abs((1.0 - _1752) / _1761);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1761 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1752 + 1.0) / _1761);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2219 = frontier_phi_39_35_ladder;
        }
        float _2221 = isnan(_1981) ? _1789 : (isnan(_1789) ? _1981 : min(_1789, _1981));
        float _2222 = isnan(_2219) ? _2221 : (isnan(_2221) ? _2219 : min(_2221, _2219));
        float _2226 = (_2222 * _1755) + _1744;
        float _2227 = (_2222 * _1758) + _1748;
        float _2228 = (_2222 * _1761) + _1752;
        float _2229 = _2222 * 9.9999997473787516355514526367188e-05;
        float _2231 = (-1.0) - _2229;
        float _2233 = _2229 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2228 > _2233) || ((_2228 < _2231) || ((_2227 > _2233) || ((_2227 < _2231) || ((_2226 < _2231) || (_2226 > _2233))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2378 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2228, cbModelParam._m0[9u].z, fma(_2227, cbModelParam._m0[9u].y, _2226 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2228, cbModelParam._m0[10u].z, fma(_2227, cbModelParam._m0[10u].y, _2226 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2228, cbModelParam._m0[11u].z, fma(_2227, cbModelParam._m0[11u].y, _2226 * cbModelParam._m0[11u].x))), _1697);
            frontier_phi_18_39_ladder = _2378.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2378.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2378.x * cbModelParam._m0[1u].y;
        }
        _1777 = frontier_phi_18_39_ladder_2;
        _1779 = frontier_phi_18_39_ladder_1;
        _1781 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1765 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_851, _852, _853), _1697);
        _1777 = _1765.x * cbModelParam._m0[1u].y;
        _1779 = _1765.y * cbModelParam._m0[1u].y;
        _1781 = _1765.z * cbModelParam._m0[1u].y;
    }
    float _1785 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _747);
    float _1786 = isnan(_1785) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1785 : min(cbModelParam._m0[25u].w, _1785));
    float _1877;
    float _1879;
    float _1881;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1841 = fma(_916, cbModelParam._m0[21u].z, fma(_912, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _908)) + cbModelParam._m0[21u].w;
        float _1845 = fma(_916, cbModelParam._m0[22u].z, fma(_912, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _908)) + cbModelParam._m0[22u].w;
        float _1849 = fma(_916, cbModelParam._m0[23u].z, fma(_912, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _908)) + cbModelParam._m0[23u].w;
        float _1852 = fma(_853, cbModelParam._m0[21u].z, fma(_852, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _851));
        float _1855 = fma(_853, cbModelParam._m0[22u].z, fma(_852, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _851));
        float _1858 = fma(_853, cbModelParam._m0[23u].z, fma(_852, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _851));
        float _1986;
        if (_1852 > 0.0)
        {
            _1986 = abs((1.0 - _1841) / _1852);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1852 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1841 + 1.0) / _1852);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1986 = frontier_phi_30_26_ladder;
        }
        float _2246;
        if (_1855 > 0.0)
        {
            _2246 = abs((1.0 - _1845) / _1855);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1855 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1845 + 1.0) / _1855);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2246 = frontier_phi_41_37_ladder;
        }
        float _2553;
        if (_1858 > 0.0)
        {
            _2553 = abs((1.0 - _1849) / _1858);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1858 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1849 + 1.0) / _1858);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2553 = frontier_phi_52_47_ladder;
        }
        float _2555 = isnan(_2246) ? _1986 : (isnan(_1986) ? _2246 : min(_1986, _2246));
        float _2556 = isnan(_2553) ? _2555 : (isnan(_2555) ? _2553 : min(_2555, _2553));
        float _2560 = (_2556 * _1852) + _1841;
        float _2561 = (_2556 * _1855) + _1845;
        float _2562 = (_2556 * _1858) + _1849;
        float _2563 = _2556 * 9.9999997473787516355514526367188e-05;
        float _2564 = (-1.0) - _2563;
        float _2566 = _2563 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2562 > _2566) || ((_2562 < _2564) || ((_2561 > _2566) || ((_2561 < _2564) || ((_2560 < _2564) || (_2560 > _2566))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2743 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2562, cbModelParam._m0[17u].z, fma(_2561, cbModelParam._m0[17u].y, _2560 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2562, cbModelParam._m0[18u].z, fma(_2561, cbModelParam._m0[18u].y, _2560 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2562, cbModelParam._m0[19u].z, fma(_2561, cbModelParam._m0[19u].y, _2560 * cbModelParam._m0[19u].x))), _1786);
            frontier_phi_27_52_ladder = _2743.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2743.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2743.y * cbModelParam._m0[1u].z;
        }
        _1877 = frontier_phi_27_52_ladder_1;
        _1879 = frontier_phi_27_52_ladder_2;
        _1881 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1861 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_851, _852, _853), _1786);
        _1877 = _1861.x * cbModelParam._m0[1u].z;
        _1879 = _1861.y * cbModelParam._m0[1u].z;
        _1881 = _1861.z * cbModelParam._m0[1u].z;
    }
    float _1893 = ((((1.0 - _876) * ((_864 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_876 * _864)) * _843;
    float _1894 = _1893 * ((cbModelParam._m0[1u].w * (_1877 - _1777)) + _1777);
    float _1895 = _1893 * ((cbModelParam._m0[1u].w * (_1879 - _1779)) + _1779);
    float _1896 = _1893 * ((cbModelParam._m0[1u].w * (_1881 - _1781)) + _1781);
    float _1899 = fma(_1896, cbSceneParam._m0[89u].z, fma(_1895, cbSceneParam._m0[89u].y, _1894 * cbSceneParam._m0[89u].x));
    float _1902 = fma(_1896, cbSceneParam._m0[90u].z, fma(_1895, cbSceneParam._m0[90u].y, _1894 * cbSceneParam._m0[90u].x));
    float _1905 = fma(_1896, cbSceneParam._m0[91u].z, fma(_1895, cbSceneParam._m0[91u].y, _1894 * cbSceneParam._m0[91u].x));
    vec4 _1913 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_782, _783));
    float _1915 = _1913.w;
    float _1927 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1915);
    float _1928 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1915);
    float _1929 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1915);
    uvec4 _1933 = floatBitsToUint(cbInstanceData._m0[_305 + 5u]);
    uint _1935 = _1933.x * 14u;
    uint _1936 = _1935 + 13u;
    float _1941 = _843 + (-1.0);
    float _1944 = (cbLight._m0[_1936].x * _1941) + 1.0;
    float _1945 = (cbLight._m0[_1936].y * _1941) + 1.0;
    uint _1947 = _1935 + 4u;
    float _1958 = dot(vec3(cbLight._m0[_1935].xyz), vec3(_743, _744, _745));
    float _1961 = isnan(1.0) ? _1944 : (isnan(_1944) ? 1.0 : min(_1944, 1.0));
    float _1962 = cbLight._m0[_1947].x * _1927;
    float _1963 = cbLight._m0[_1947].y * _1928;
    float _1964 = cbLight._m0[_1947].z * _1929;
    uint _1965 = _1935 + 5u;
    uint _1971 = _1935 | 1u;
    float _1977 = dot(vec3(cbLight._m0[_1971].xyz), vec3(_743, _744, _745));
    float _1980 = isnan(1.0) ? _1945 : (isnan(_1945) ? 1.0 : min(_1945, 1.0));
    float _2045;
    float _2046;
    float _2047;
    if (_748 == 0.0)
    {
        float _3817 = isnan(0.0) ? _1958 : (isnan(_1958) ? 0.0 : max(_1958, 0.0));
        float _3828 = isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0));
        float _1999 = (isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0))) * 0.3183098733425140380859375;
        float _2001 = (isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0))) * 0.3183098733425140380859375;
        _2045 = ((cbLight._m0[_1965].x * _1980) * _2001) + ((_1962 * _1961) * _1999);
        _2046 = ((_1980 * cbLight._m0[_1965].y) * _2001) + ((_1963 * _1961) * _1999);
        _2047 = ((_1980 * cbLight._m0[_1965].z) * _2001) + ((_1964 * _1961) * _1999);
    }
    else
    {
        float _2011 = _1958 + _748;
        float _2014 = (_748 * 2.0) + 1.0;
        float _2015 = (isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0))) / _2014;
        float _2022 = _1977 + _748;
        float _2024 = (isnan(0.0) ? _2022 : (isnan(_2022) ? 0.0 : max(_2022, 0.0))) / _2014;
        _2045 = (((_2024 * cbLight._m0[_1965].x) * _1980) + ((_1962 * _2015) * _1961)) * 0.3183098733425140380859375;
        _2046 = (((_2024 * cbLight._m0[_1965].y) * _1980) + ((_1963 * _2015) * _1961)) * 0.3183098733425140380859375;
        _2047 = (((_2024 * cbLight._m0[_1965].z) * _1980) + ((_1964 * _2015) * _1961)) * 0.3183098733425140380859375;
    }
    uint _2051 = _1935 + 8u;
    float _2067 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1935].w)) * _747) * 0.949999988079071044921875);
    float _2068 = _2067 * _2067;
    float _2069 = cbLight._m0[_1935].x + _534;
    float _2070 = cbLight._m0[_1935].y + _535;
    float _2071 = cbLight._m0[_1935].z + _536;
    float _2075 = inversesqrt(dot(vec3(_2069, _2070, _2071), vec3(_2069, _2070, _2071)));
    float _2076 = _2075 * _2069;
    float _2077 = _2075 * _2070;
    float _2078 = _2075 * _2071;
    float _2079 = dot(vec3(_743, _744, _745), vec3(cbLight._m0[_1935].xyz));
    float _3849 = isnan(0.0) ? _2079 : (isnan(_2079) ? 0.0 : max(_2079, 0.0));
    float _2082 = isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0));
    float _3860 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _2083 = isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0));
    float _2084 = dot(vec3(_743, _744, _745), vec3(_2076, _2077, _2078));
    float _3871 = isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0));
    float _2087 = isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0));
    float _2088 = dot(vec3(cbLight._m0[_1935].xyz), vec3(_2076, _2077, _2078));
    float _3882 = isnan(0.0) ? _2088 : (isnan(_2088) ? 0.0 : max(_2088, 0.0));
    float _2092 = _2068 * _2068;
    float _2096 = ((_2087 * _2087) * (_2092 + (-1.0))) + 1.0;
    float _2107 = (exp2(log2(1.0 - (isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2108 = 1.0 - _2068;
    float _2119 = (0.5 / (((_2083 * ((_2082 * _2108) + _2068)) + 9.9999999392252902907785028219223e-09) + (((_2083 * _2108) + _2068) * _2082))) * _2082;
    float _3893 = isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0));
    float _2121 = (isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0))) * (_2092 / ((_2096 * _2096) * 3.141590118408203125));
    uint _2137 = _1935 + 9u;
    float _2151 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1971].w)) * _747) * 0.949999988079071044921875);
    float _2152 = _2151 * _2151;
    float _2153 = cbLight._m0[_1971].x + _534;
    float _2154 = cbLight._m0[_1971].y + _535;
    float _2155 = cbLight._m0[_1971].z + _536;
    float _2159 = inversesqrt(dot(vec3(_2153, _2154, _2155), vec3(_2153, _2154, _2155)));
    float _2160 = _2159 * _2153;
    float _2161 = _2159 * _2154;
    float _2162 = _2159 * _2155;
    float _2163 = dot(vec3(_743, _744, _745), vec3(cbLight._m0[_1971].xyz));
    float _3904 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
    float _2166 = isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0));
    float _2167 = dot(vec3(_743, _744, _745), vec3(_2160, _2161, _2162));
    float _3915 = isnan(0.0) ? _2167 : (isnan(_2167) ? 0.0 : max(_2167, 0.0));
    float _2170 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
    float _2171 = dot(vec3(cbLight._m0[_1971].xyz), vec3(_2160, _2161, _2162));
    float _3926 = isnan(0.0) ? _2171 : (isnan(_2171) ? 0.0 : max(_2171, 0.0));
    float _2175 = _2152 * _2152;
    float _2179 = ((_2170 * _2170) * (_2175 + (-1.0))) + 1.0;
    float _2188 = (exp2(log2(1.0 - (isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2189 = 1.0 - _2152;
    float _2199 = (0.5 / (((_2083 * ((_2166 * _2189) + _2152)) + 9.9999999392252902907785028219223e-09) + (((_2083 * _2189) + _2152) * _2166))) * _2166;
    float _3937 = isnan(0.0) ? _2199 : (isnan(_2199) ? 0.0 : max(_2199, 0.0));
    float _2201 = (isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0))) * (_2175 / ((_2179 * _2179) * 3.141590118408203125));
    float _2211 = (((_2188 * cbLight._m0[_2137].x) * _2201) * _1980) + ((((cbLight._m0[_2051].x * _1927) * _2107) * _2121) * _1961);
    float _2212 = (((_2188 * cbLight._m0[_2137].y) * _2201) * _1980) + ((((cbLight._m0[_2051].y * _1928) * _2107) * _2121) * _1961);
    float _2213 = (((_2188 * cbLight._m0[_2137].z) * _2201) * _1980) + ((((cbLight._m0[_2051].z * _1929) * _2107) * _2121) * _1961);
    float _2349;
    float _2351;
    float _2353;
    float _2355;
    float _2357;
    float _2359;
    if (_1933.y == 0u)
    {
        float _2290 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2291 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2290;
        float _2292 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2290;
        float _2293 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2290;
        uvec4 _2305 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2306 = _2305.x;
        uint _2317 = uint((float(_2305.y) * floor(float(uint(cbSceneParam._m0[85u].y * _783) / _2306))) + floor(float(uint(cbSceneParam._m0[85u].x * _782) / _2306)));
        float _2327 = (log2(_2293 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2328 = isnan(0.0) ? _2327 : (isnan(_2327) ? 0.0 : max(_2327, 0.0));
        uint _2331 = uint(isnan(14.0) ? _2328 : (isnan(_2328) ? 14.0 : min(_2328, 14.0)));
        uint _2338 = _2305.z;
        float _2387;
        float _2389;
        float _2391;
        float _2393;
        float _2395;
        float _2397;
        if (((((1u << ((_2338 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2331 << 2u) + (_2317 << 6u)) >> 2u)).x) == 0u) || ((_2338 & 240u) == 0u))
        {
            _2387 = 0.0;
            _2389 = 0.0;
            _2391 = 0.0;
            _2393 = 0.0;
            _2395 = 0.0;
            _2397 = 0.0;
        }
        else
        {
            float _2388;
            float _2390;
            float _2392;
            float _2394;
            float _2396;
            float _2398;
            float _2579 = 0.0;
            float _2580 = 0.0;
            float _2581 = 0.0;
            float _2582 = 0.0;
            float _2583 = 0.0;
            float _2584 = 0.0;
            uint _2585 = 0u;
            uint _2594;
            bool _2595;
            for (;;)
            {
                _2594 = texelFetch(g_lightClassification, int((((_2331 << 5u) + (_2317 << 9u)) + (_2585 << 2u)) >> 2u)).x;
                _2595 = _2594 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2595)
                {
                    frontier_phi_58_pred = _2579;
                    frontier_phi_58_pred_1 = _2584;
                    frontier_phi_58_pred_2 = _2583;
                    frontier_phi_58_pred_3 = _2582;
                    frontier_phi_58_pred_4 = _2581;
                    frontier_phi_58_pred_5 = _2580;
                }
                else
                {
                    float _2816;
                    float _2817;
                    float _2818;
                    float _2819;
                    float _2820;
                    float _2821;
                    uint _2822;
                    _2816 = _2579;
                    _2817 = _2580;
                    _2818 = _2581;
                    _2819 = _2582;
                    _2820 = _2583;
                    _2821 = _2584;
                    _2822 = _2594;
                    float _2748;
                    float _2749;
                    float _2750;
                    float _2751;
                    float _2752;
                    float _2753;
                    for (;;)
                    {
                        uint _2826 = uint(findLSB(_2822)) + (_2585 << 5u);
                        uint _2823 = (_2822 + 4294967295u) & _2822;
                        uint _2828 = _2826 * 48u;
                        vec4 _2842 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2828)).x, texelFetch(g_PointLightRenderingBuffer, int(_2828 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2828 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2828 + 3u)).x));
                        uint _2848 = (_2826 * 48u) + 4u;
                        vec4 _2861 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2848)).x, texelFetch(g_PointLightRenderingBuffer, int(_2848 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2848 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2848 + 3u)).x));
                        float _2862 = _2861.x;
                        float _2863 = _2861.y;
                        float _2864 = _2861.z;
                        uint _2867 = (_2826 * 48u) + 8u;
                        vec3 _2878 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2867)).x, texelFetch(g_PointLightRenderingBuffer, int(_2867 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2867 + 2u)).x));
                        uint _2883 = (_2826 * 48u) + 12u;
                        vec2 _2891 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2883)).x, texelFetch(g_PointLightRenderingBuffer, int(_2883 + 1u)).x));
                        float _2897 = inversesqrt(dot(vec3(_2291, _2292, _2293), vec3(_2291, _2292, _2293)));
                        float _2898 = _2897 * _2291;
                        float _2899 = _2897 * _2292;
                        float _2900 = _2897 * _2293;
                        float _2901 = _2842.x - _2291;
                        float _2902 = _2842.y - _2292;
                        float _2903 = _2842.z - _2293;
                        float _2904 = dot(vec3(_2901, _2902, _2903), vec3(_2901, _2902, _2903));
                        float _2907 = inversesqrt(_2904);
                        float _2908 = _2907 * _2901;
                        float _2909 = _2907 * _2902;
                        float _2910 = _2907 * _2903;
                        float _2911 = dot(vec3(_801, _804, _807), vec3(_2908, _2909, _2910));
                        float _2916 = 1.0 - (_2904 * _2842.w);
                        float _3958 = isnan(0.0) ? _2916 : (isnan(_2916) ? 0.0 : max(_2916, 0.0));
                        float _2917 = isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0));
                        float _2918 = sqrt(_2904) * _2861.w;
                        float _2921 = 1.39999997615814208984375 / (_2918 + 1.39999997615814208984375);
                        float _2922 = _2921 * _2921;
                        float _2923 = 1.0 - _2922;
                        float _2925 = (_2923 * _2923) * _748;
                        float _2928 = ((_2923 * _2911) + _2922) + _2925;
                        float _2933 = _2918 * _2918;
                        float _2938 = ((isnan(0.0) ? _2928 : (isnan(_2928) ? 0.0 : max(_2928, 0.0))) * _2917) / (((_2925 * 2.0) + 1.0) * ((_2933 * 0.699999988079071044921875) + 1.0));
                        float _2942 = dot(vec3(_2908, _2909, _2910), vec3(_2898, _2899, _2900));
                        float _3974 = isnan(0.0) ? _2942 : (isnan(_2942) ? 0.0 : max(_2942, 0.0));
                        float _2949 = dot(vec3((-0.0) - _2898, (-0.0) - _2899, (-0.0) - _2900), vec3(_801, _804, _807)) + 1.0;
                        float _2951 = (isnan(0.0) ? _2949 : (isnan(_2949) ? 0.0 : max(_2949, 0.0))) * 0.5;
                        float _2958 = ((_2951 * _2951) * _2891.x) * exp2((_2891.y * 32.0) * log2(isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0))));
                        float _2960 = _748 / (_748 + 1.0);
                        float _2976 = (-0.0) - _2291;
                        float _2977 = (-0.0) - _2292;
                        float _2978 = (-0.0) - _2293;
                        float _2982 = inversesqrt(dot(vec3(_2976, _2977, _2978), vec3(_2976, _2977, _2978)));
                        float _2983 = _2982 * _2976;
                        float _2984 = _2982 * _2977;
                        float _2985 = _2982 * _2978;
                        float _2993 = exp2(log2(1.0 / ((_2933 * 3.5) + 5.0)) * 0.25);
                        float _2994 = 1.0 - _864;
                        float _3001 = sqrt(1.0 - ((1.0 - (_2994 * _2994)) * (1.0 - (_2993 * _2993))));
                        float _3002 = _3001 * _3001;
                        float _3003 = _3002 * _3002;
                        float _3004 = _2983 + _2908;
                        float _3005 = _2984 + _2909;
                        float _3006 = _2985 + _2910;
                        float _3010 = inversesqrt(dot(vec3(_3004, _3005, _3006), vec3(_3004, _3005, _3006)));
                        float _3014 = dot(vec3(_801, _804, _807), vec3(_2983, _2984, _2985));
                        float _3990 = isnan(0.0) ? _3014 : (isnan(_3014) ? 0.0 : max(_3014, 0.0));
                        float _3017 = isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0));
                        float _3018 = dot(vec3(_801, _804, _807), vec3(_3010 * _3004, _3010 * _3005, _3010 * _3006));
                        float _4001 = isnan(0.0) ? _3018 : (isnan(_3018) ? 0.0 : max(_3018, 0.0));
                        float _3021 = isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0));
                        float _3025 = ((_3021 * _3021) * (_3003 + (-1.0))) + 1.0;
                        float _3026 = _2921 * _3002;
                        float _3027 = _3026 * _3026;
                        float _3030 = ((1.0 - _3027) * _2911) + _3027;
                        float _4012 = isnan(0.0) ? _3030 : (isnan(_3030) ? 0.0 : max(_3030, 0.0));
                        float _3031 = isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0));
                        float _3032 = 1.0 - _3002;
                        float _3042 = (0.5 / (((_3031 * ((_3017 * _3032) + _3002)) + 9.9999999392252902907785028219223e-09) + (((_3031 * _3032) + _3002) * _3017))) * _3031;
                        float _4023 = isnan(0.0) ? _3042 : (isnan(_3042) ? 0.0 : max(_3042, 0.0));
                        float _3053 = (((_3003 * 3.1415927410125732421875) * (isnan(1.0) ? _4023 : (isnan(_4023) ? 1.0 : min(_4023, 1.0)))) / ((_3025 * _3025) * ((_2933 * 2.1991131305694580078125) + 3.141590118408203125))) * _2917;
                        _2751 = (((((_2862 * 0.3183098733425140380859375) * _2960) * _2958) + _2862) * _2938) + _2819;
                        _2752 = (((((_2863 * 0.3183098733425140380859375) * _2960) * _2958) + _2863) * _2938) + _2820;
                        _2753 = (((((_2864 * 0.3183098733425140380859375) * _2960) * _2958) + _2864) * _2938) + _2821;
                        _2748 = (_3053 * _2878.x) + _2816;
                        _2749 = (_3053 * _2878.y) + _2817;
                        _2750 = (_3053 * _2878.z) + _2818;
                        if (_2823 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2816 = _2748;
                            _2817 = _2749;
                            _2818 = _2750;
                            _2819 = _2751;
                            _2820 = _2752;
                            _2821 = _2753;
                            _2822 = _2823;
                        }
                    }
                    frontier_phi_58_pred = _2748;
                    frontier_phi_58_pred_1 = _2753;
                    frontier_phi_58_pred_2 = _2752;
                    frontier_phi_58_pred_3 = _2751;
                    frontier_phi_58_pred_4 = _2750;
                    frontier_phi_58_pred_5 = _2749;
                }
                _2388 = frontier_phi_58_pred;
                _2398 = frontier_phi_58_pred_1;
                _2396 = frontier_phi_58_pred_2;
                _2394 = frontier_phi_58_pred_3;
                _2392 = frontier_phi_58_pred_4;
                _2390 = frontier_phi_58_pred_5;
                uint _2586 = _2585 + 1u;
                if (_2586 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2579 = _2388;
                    _2580 = _2390;
                    _2581 = _2392;
                    _2582 = _2394;
                    _2583 = _2396;
                    _2584 = _2398;
                    _2585 = _2586;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2387 = _2388;
            _2389 = _2390;
            _2391 = _2392;
            _2393 = _2394;
            _2395 = _2396;
            _2397 = _2398;
        }
        float _2402 = isnan(1.0) ? _843 : (isnan(_843) ? 1.0 : min(_843, 1.0));
        _2349 = (_2402 * _2393) + _2045;
        _2351 = (_2402 * _2395) + _2046;
        _2353 = (_2402 * _2397) + _2047;
        _2355 = ((_2387 * 0.039999999105930328369140625) * _2402) + _2211;
        _2357 = ((_2389 * 0.039999999105930328369140625) * _2402) + _2212;
        _2359 = ((_2391 * 0.039999999105930328369140625) * _2402) + _2213;
    }
    else
    {
        _2349 = _2045;
        _2351 = _2046;
        _2353 = _2047;
        _2355 = _2211;
        _2357 = _2212;
        _2359 = _2213;
    }
    float _2476;
    float _2477;
    float _2478;
    if (_748 > 0.0)
    {
        uint _2409 = _1935 + 4u;
        float _2415 = (-0.0) - _534;
        float _2416 = (-0.0) - _535;
        float _2417 = (-0.0) - _536;
        float _2418 = dot(vec3(cbLight._m0[_1935].xyz), vec3(_2415, _2416, _2417));
        float _4039 = isnan(0.0) ? _2418 : (isnan(_2418) ? 0.0 : max(_2418, 0.0));
        float _2422 = _854 + 1.0;
        float _2424 = (isnan(0.0) ? _2422 : (isnan(_2422) ? 0.0 : max(_2422, 0.0))) * 0.5;
        float _2429 = _2424 * _2424;
        float _2430 = _2429 * exp2(log2(isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0))) * 32.0);
        float _2432 = _748 / (_748 + 1.0);
        float _2433 = isnan(_1944) ? 1.0 : (isnan(1.0) ? _1944 : min(1.0, _1944));
        uint _2446 = _1935 + 5u;
        float _2452 = dot(vec3(cbLight._m0[_1971].xyz), vec3(_2415, _2416, _2417));
        float _4060 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
        float _2459 = _2429 * exp2(log2(isnan(1.0) ? _4060 : (isnan(_4060) ? 1.0 : min(_4060, 1.0))) * 32.0);
        float _2460 = isnan(_1945) ? 1.0 : (isnan(1.0) ? _1945 : min(1.0, _1945));
        _2476 = ((((_2459 * cbLight._m0[_2446].x) * _2432) * _2460) + ((((cbLight._m0[_2409].x * _1927) * _2430) * _2432) * _2433)) * 0.3183098733425140380859375;
        _2477 = ((((_2459 * cbLight._m0[_2446].y) * _2432) * _2460) + ((((cbLight._m0[_2409].y * _1928) * _2430) * _2432) * _2433)) * 0.3183098733425140380859375;
        _2478 = ((((_2459 * cbLight._m0[_2446].z) * _2432) * _2460) + ((((cbLight._m0[_2409].z * _1929) * _2430) * _2432) * _2433)) * 0.3183098733425140380859375;
    }
    else
    {
        _2476 = 0.0;
        _2477 = 0.0;
        _2478 = 0.0;
    }
    float _4076 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
    float _4087 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _4098 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _4109 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
    float _2493 = (isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0))) * ((_2349 + ((isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0))) * _843)) + _2476);
    float _2494 = (isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0))) * ((_2351 + ((isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0))) * _843)) + _2477);
    float _2495 = (isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0))) * ((_2353 + ((isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0))) * _843)) + _2478);
    float _2499 = 0.959999978542327880859375 - (exp2(log2(1.0 - _858) * 5.0) * 0.959999978542327880859375);
    float _2510 = (_2493 + ((_2355 + ((isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0))) * _1686)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _682.x) * _2499) - _2493) * _728);
    float _2512 = (_2494 + ((_2357 + ((isnan(0.0) ? _1902 : (isnan(_1902) ? 0.0 : max(_1902, 0.0))) * _1686)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _682.y) * _2499) - _2494) * _728);
    float _2514 = (_2495 + ((_2359 + ((isnan(0.0) ? _1905 : (isnan(_1905) ? 0.0 : max(_1905, 0.0))) * _1686)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _682.z) * _2499) - _2495) * _728);
    float _2519 = cbInstanceData._m0[_305 + 6u].w * (isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0)));
    float _2524 = _782 / cbSceneParam._m0[86u].x;
    float _2525 = _783 / cbSceneParam._m0[86u].y;
    vec4 _2539 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2524, _2525, (log2((isnan(cbSceneParam._m0[77u].w) ? _765 : (isnan(_765) ? cbSceneParam._m0[77u].w : min(_765, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2541 = _2539.x;
    float _2542 = _2539.y;
    float _2543 = _2539.z;
    float _2544 = _2539.w;
    float _2637;
    float _2639;
    float _2641;
    float _2643;
    if (_765 > cbSceneParam._m0[78u].w)
    {
        float _2600 = isnan(_765) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _765 : min(cbSceneParam._m0[80u].w, _765));
        float _2601 = _2600 / _765;
        float _2612 = _2601 * _297;
        float _2613 = _298 * _2601;
        float _2614 = (-0.0) - _2613;
        float _2615 = _2601 * _299;
        float _2617 = (cbSceneParam._m0[77u].w * _2614) / _2600;
        float _2618 = _2617 + cbSceneParam._m0[79u].w;
        float _2619 = cbSceneParam._m0[79u].w - _2613;
        float _2625 = sqrt(((_2612 * _2612) + (_2613 * _2613)) + (_2615 * _2615));
        float _2628 = (1.0 - (cbSceneParam._m0[77u].w / _2600)) * _2625;
        float _2633 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2635 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3058;
        if (abs((_2614 - _2617) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3058 = ((((_2618 > 0.0) ? exp2(_2633 * _2618) : (2.0 - exp2(_2635 * _2618))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2628;
        }
        else
        {
            float _2773 = 1.0 / cbSceneParam._m0[80u].x;
            float _2774 = isnan(_2619) ? _2618 : (isnan(_2618) ? _2619 : max(_2618, _2619));
            float _2775 = isnan(_2619) ? _2618 : (isnan(_2618) ? _2619 : min(_2618, _2619));
            float _2784 = isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : min(_2774, 0.0));
            float _2785 = isnan(0.0) ? _2775 : (isnan(_2775) ? 0.0 : min(_2775, 0.0));
            _3058 = ((abs(_2625 / _2614) * cbSceneParam._m0[80u].y) * ((((_2784 - _2785) * 2.0) - ((exp2(_2633 * (isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : max(_2774, 0.0)))) - exp2(_2633 * (isnan(0.0) ? _2775 : (isnan(_2775) ? 0.0 : max(_2775, 0.0))))) * _2773)) - ((exp2(_2635 * _2784) - exp2(_2635 * _2785)) * _2773))) + (_2628 * cbSceneParam._m0[80u].z);
        }
        vec4 _3060 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2524, _2525, 1.0), 0.0);
        float _3069 = exp2((_3058 * (-1.44269502162933349609375)) * (1.0 - _3060.w));
        float _3070 = log2(_3069);
        float _3086 = log2(_2544);
        _2637 = (exp2(_3086 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3070 * cbSceneParam._m0[78u].x)) * _3060.x) / cbSceneParam._m0[78u].x)) + _2541;
        _2639 = (exp2(_3086 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3070 * cbSceneParam._m0[78u].y)) * _3060.y) / cbSceneParam._m0[78u].y)) + _2542;
        _2641 = (exp2(_3086 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3070 * cbSceneParam._m0[78u].z)) * _3060.z) / cbSceneParam._m0[78u].z)) + _2543;
        _2643 = _3069 * _2544;
    }
    else
    {
        _2637 = _2541;
        _2639 = _2542;
        _2641 = _2543;
        _2643 = _2544;
    }
    bool _3096;
    float _2698;
    vec4 _2701;
    float _2703;
    vec4 _2705;
    float _2713;
    float _2714;
    float _2715;
    float _2716;
    bool _2726;
    for (;;)
    {
        bool _2655 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2656 = log2(_2643);
        float _2663 = exp2(_2656 * cbSceneParam._m0[78u].x) * _2510;
        float _2664 = exp2(_2656 * cbSceneParam._m0[78u].y) * _2512;
        float _2665 = exp2(_2656 * cbSceneParam._m0[78u].z) * _2514;
        vec4 _2673 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_782, _783));
        float _2675 = _2673.x;
        float _2696 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2675)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2675))) - _765) * cbMtdParam._m0[17u].y;
        float _4160 = isnan(0.0) ? _2696 : (isnan(_2696) ? 0.0 : max(_2696, 0.0));
        _2698 = _2519 * (isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0)));
        float _2699 = _772 + (-0.5);
        _2701 = cbMtdParam._m0[1u];
        _2703 = _2701.y * _2699;
        _2705 = cbMatDynParam._m0[0u];
        float _2712 = (roundEven(_2705.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2713 = _2712 * (_2655 ? _2663 : (_2663 + (cbSceneParam._m0[72u].w * _2637)));
        _2714 = _2712 * (_2655 ? _2664 : (_2664 + (cbSceneParam._m0[72u].w * _2639)));
        _2715 = _2712 * (_2655 ? _2665 : (_2665 + (cbSceneParam._m0[72u].w * _2641)));
        _2716 = _2699 * 0.999000012874603271484375;
        _2726 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2726)
        {
            if ((cbInstanceData._m0[_305 + 7u].x + _2716) < 0.5)
            {
                _3096 = true;
                break;
            }
        }
        uint _2808 = _820 + uint(_2705.w);
        if ((cbInstanceData._m0[_2808].w < 1.0) && ((cbInstanceData._m0[_2808].w + _2716) < 0.5))
        {
            _3096 = true;
            break;
        }
        if ((_2703 + _444) < _2701.x)
        {
            _3096 = true;
            break;
        }
        _3096 = false;
        break;
    }
    float _3101;
    if (_3096)
    {
        discard_state = true;
        _3101 = 0.0;
    }
    else
    {
        _3101 = _2698;
    }
    SV_Target.x = _2713;
    SV_Target.y = _2714;
    SV_Target.z = _2715;
    SV_Target.w = _3101;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2698;
    discard_exit();
}


