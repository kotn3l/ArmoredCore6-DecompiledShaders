#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1092;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _200 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _201 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _202 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _208 = inversesqrt(dot(vec3(_200, _201, _202), vec3(_200, _201, _202)));
    float _209 = _208 * _200;
    float _210 = _208 * _201;
    float _211 = _208 * _202;
    float _215 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _216 = _215 * NORMAL.x;
    float _217 = _215 * NORMAL.y;
    float _218 = _215 * NORMAL.z;
    float _222 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _223 = _222 * TANGENT.x;
    float _224 = _222 * TANGENT.y;
    float _225 = _222 * TANGENT.z;
    float _230;
    float _231;
    float _232;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _230 = (-0.0) - _216;
        _231 = (-0.0) - _217;
        _232 = (-0.0) - _218;
    }
    else
    {
        _230 = _216;
        _231 = _217;
        _232 = _218;
    }
    float _277 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _287 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _277);
    float _288 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _277);
    float _289 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _277);
    vec4 _303 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _312 = (_303.x * 2.0) + (-1.0);
    float _314 = (_303.y * 2.0) + (-1.0);
    float _315 = dot(vec2(_312, _314), vec2(_312, _314));
    float _3006 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    float _321 = sqrt(1.0 - (isnan(1.0) ? _3006 : (isnan(_3006) ? 1.0 : min(_3006, 1.0))));
    float _324 = fma(_321, _230, fma(_314, _223, _312 * _209));
    float _327 = fma(_321, _231, fma(_314, _224, _312 * _210));
    float _330 = fma(_321, _232, fma(_314, _225, _312 * _211));
    float _334 = inversesqrt(dot(vec3(_324, _327, _330), vec3(_324, _327, _330)));
    vec4 _348 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _353 = _348.w;
    float _365 = dot(vec3(_287, _288, _289), vec3(_209, _210, _211));
    float _368 = dot(vec3(_287, _288, _289), vec3(_223, _224, _225));
    float _371 = dot(vec3(_287, _288, _289), vec3(_230, _231, _232));
    float _377 = inversesqrt(dot(vec3(_365, _368, _371), vec3(_365, _368, _371)));
    float _399 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _419 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_365 * cbMtdParam._m0[14u].x) * _377) * _399) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_368 * cbMtdParam._m0[14u].x) * _377) * _399) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _443 = inversesqrt(dot(vec3(_287, _288, _289), vec3(_287, _288, _289)));
    float _444 = _443 * _287;
    float _445 = _443 * _288;
    float _446 = _443 * _289;
    float _447 = dot(vec4(_444, _445, _446, 0.0), vec4(_230, _231, _232, 0.0));
    float _450 = _447 - cbMtdParam._m0[15u].z;
    float _3017 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0));
    float _457 = exp2(log2(1.0 - (isnan(1.0) ? _3017 : (isnan(_3017) ? 1.0 : min(_3017, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _472 = ((((_348.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _419.x) * cbMtdParam._m0[9u].x) * ((_457 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _477 = ((((_348.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _419.y) * cbMtdParam._m0[9u].y) * ((_457 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _482 = ((((_348.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _419.z) * cbMtdParam._m0[9u].z) * ((_457 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    vec4 _498 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _510 = cbMtdParam._m0[17u].z + _303.z;
    float _516 = (_510 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_498.z - _510));
    float _522 = ((((_498.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _312;
    float _523 = ((((_498.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _314;
    vec4 _535 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _539 = cbMtdParam._m0[16u].w * _535.x;
    float _551 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _552 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _562 = cbSceneParam._m0[86u].x * ((_551 / cbSceneParam._m0[86u].x) + ((_334 * _324) * cbMtdParam._m0[18u].y));
    float _563 = cbSceneParam._m0[86u].y * ((_552 / cbSceneParam._m0[86u].y) + ((_334 * _327) * cbMtdParam._m0[18u].y));
    float _570 = isnan(cbInstanceData._m0[8u].x) ? _562 : (isnan(_562) ? cbInstanceData._m0[8u].x : max(_562, cbInstanceData._m0[8u].x));
    float _571 = isnan(cbInstanceData._m0[8u].y) ? _563 : (isnan(_563) ? cbInstanceData._m0[8u].y : max(_563, cbInstanceData._m0[8u].y));
    vec4 _575 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _570 : (isnan(_570) ? cbInstanceData._m0[8u].z : min(_570, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _571 : (isnan(_571) ? cbInstanceData._m0[8u].w : min(_571, cbInstanceData._m0[8u].w))));
    float _608 = _447 - cbMtdParam._m0[15u].x;
    float _3053 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _618 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3053 : (isnan(_3053) ? 1.0 : min(_3053, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3069 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _619 = isnan(1.0) ? _3069 : (isnan(_3069) ? 1.0 : min(_3069, 1.0));
    float _623 = fma(_321, _230, fma(_523, _223, _522 * _209));
    float _626 = fma(_321, _231, fma(_523, _224, _522 * _210));
    float _629 = fma(_321, _232, fma(_523, _225, _522 * _211));
    float _633 = inversesqrt(dot(vec3(_623, _626, _629), vec3(_623, _626, _629)));
    float _634 = _633 * _623;
    float _635 = _633 * _626;
    float _636 = _633 * _629;
    float _3080 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _637 = isnan(1.0) ? _3080 : (isnan(_3080) ? 1.0 : min(_3080, 1.0));
    float _3091 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _638 = isnan(1.0) ? _3091 : (isnan(_3091) ? 1.0 : min(_3091, 1.0));
    float _639 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    float _3107 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _3118 = isnan(0.0) ? _477 : (isnan(_477) ? 0.0 : max(_477, 0.0));
    float _3129 = isnan(0.0) ? _482 : (isnan(_482) ? 0.0 : max(_482, 0.0));
    float _658 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _677 = fma(_636, cbSceneParam._m0[5u].z, fma(_635, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _634));
    float _680 = fma(_636, cbSceneParam._m0[6u].z, fma(_635, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _634));
    float _683 = fma(_636, cbSceneParam._m0[7u].z, fma(_635, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _634));
    uint _696 = uint(roundEven(NORMAL.w)) * 13u;
    uint _698 = (_696 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _704 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3107 : (isnan(_3107) ? 1.0 : min(_3107, 1.0)))) * cbInstanceData._m0[_698].x;
    float _705 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3118 : (isnan(_3118) ? 1.0 : min(_3118, 1.0)))) * cbInstanceData._m0[_698].y;
    float _706 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3129 : (isnan(_3129) ? 1.0 : min(_3129, 1.0)))) * cbInstanceData._m0[_698].z;
    float _3140 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _707 = isnan(1.0) ? _3140 : (isnan(_3140) ? 1.0 : min(_3140, 1.0));
    float _3151 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    float _708 = isnan(1.0) ? _3151 : (isnan(_3151) ? 1.0 : min(_3151, 1.0));
    float _3162 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _709 = isnan(1.0) ? _3162 : (isnan(_3162) ? 1.0 : min(_3162, 1.0));
    vec4 _713 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _551, cbSceneParam._m0[86u].y * _552));
    float _716 = _713.x * TEXCOORD_5.w;
    float _717 = dot(vec3(_634, _635, _636), vec3(_444, _445, _446));
    float _720 = _717 * 2.0;
    float _724 = (_720 * _634) - _444;
    float _725 = (_720 * _635) - _445;
    float _726 = (_720 * _636) - _446;
    float _727 = dot(vec3(_444, _445, _446), vec3(_634, _635, _636));
    float _730 = abs(_727);
    float _3173 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _731 = isnan(1.0) ? _3173 : (isnan(_3173) ? 1.0 : min(_3173, 1.0));
    float _737 = sqrt(_638);
    float _749 = exp2((_737 * 5.0) * log2(1.0 - (_731 * 0.999000012874603271484375))) / (4.0 - (_737 * 3.0));
    float _781 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _785 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _789 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1091;
    float _1093;
    float _1094;
    float _1095;
    float _1096;
    float _1097;
    float _1098;
    float _1099;
    float _1100;
    float _1101;
    float _1102;
    float _1103;
    float _1104;
    float _1105;
    float _1106;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _816 = fma(_789, cbModelParam._m0[26u].z, fma(_785, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _781));
        float _820 = fma(_789, cbModelParam._m0[27u].z, fma(_785, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _781));
        float _824 = fma(_789, cbModelParam._m0[28u].z, fma(_785, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _781));
        float _849 = _781 + _634;
        float _850 = _785 + _635;
        float _851 = _789 + _636;
        float _861 = fma(_851, cbModelParam._m0[26u].z, fma(_850, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _849)) - _816;
        float _862 = fma(_851, cbModelParam._m0[27u].z, fma(_850, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _849)) - _820;
        float _863 = fma(_851, cbModelParam._m0[28u].z, fma(_850, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _849)) - _824;
        float _867 = inversesqrt(dot(vec3(_861, _862, _863), vec3(_861, _862, _863)));
        float _880 = ((_867 * _861) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_816 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _881 = ((_867 * _862) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_820 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _882 = ((_867 * _863) / cbModelParam._m0[34u].z) + ((((((_824 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _885 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_880, _881, _882), 0.0);
        vec4 _892 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_880, _881, _882), 0.0);
        vec4 _899 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_880, _881, _882), 0.0);
        vec4 _906 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_880, _881, _882), 0.0);
        float _919 = exp2((_885.w + (-0.5)) * 20.0) * 2.0;
        float _920 = _919 * (_885.x + (-0.5));
        float _921 = _919 * (_885.y + (-0.5));
        float _922 = _919 * (_885.z + (-0.5));
        float _929 = exp2((_892.w + (-0.5)) * 20.0) * 2.0;
        float _930 = _929 * (_892.x + (-0.5));
        float _931 = _929 * (_892.y + (-0.5));
        float _932 = _929 * (_892.z + (-0.5));
        float _939 = exp2((_899.w + (-0.5)) * 20.0) * 2.0;
        float _940 = _939 * (_899.x + (-0.5));
        float _941 = _939 * (_899.y + (-0.5));
        float _942 = _939 * (_899.z + (-0.5));
        float _949 = exp2((_906.w + (-0.5)) * 20.0) * 2.0;
        float _950 = _949 * (_906.x + (-0.5));
        float _951 = _949 * (_906.y + (-0.5));
        float _952 = _949 * (_906.z + (-0.5));
        float _953 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
        float _954 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
        float _955 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
        float _956 = _920 * 0.5;
        float _957 = _930 * 0.5;
        float _958 = _940 * 0.5;
        float _959 = dot(vec3(_956, _957, _958), vec3(_956, _957, _958));
        float _964 = (_959 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_959);
        float _973 = (dot(vec3(_634, _635, _636), vec3(_964 * _956, _964 * _957, _964 * _958)) + 1.0) * 0.5;
        float _3199 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
        float _983 = sqrt(((_957 * _957) + (_956 * _956)) + (_958 * _958)) / (_953 + 9.9999997473787516355514526367188e-06);
        float _3210 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
        float _984 = isnan(1.0) ? _3210 : (isnan(_3210) ? 1.0 : min(_3210, 1.0));
        float _985 = _984 * 2.0;
        float _989 = (1.0 - _984) / (_984 + 1.0);
        float _3221 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
        float _990 = isnan(1.0) ? _3221 : (isnan(_3221) ? 1.0 : min(_3221, 1.0));
        float _999 = ((((1.0 - _990) * (_985 + 2.0)) * exp2(log2(isnan(1.0) ? _3199 : (isnan(_3199) ? 1.0 : min(_3199, 1.0))) * (_985 + 1.0))) + _990) * _953;
        float _1000 = _921 * 0.5;
        float _1001 = _931 * 0.5;
        float _1002 = _941 * 0.5;
        float _1003 = dot(vec3(_1000, _1001, _1002), vec3(_1000, _1001, _1002));
        float _1008 = (_1003 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1003);
        float _1016 = (dot(vec3(_634, _635, _636), vec3(_1008 * _1000, _1008 * _1001, _1008 * _1002)) + 1.0) * 0.5;
        float _3232 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
        float _1025 = sqrt(((_1001 * _1001) + (_1000 * _1000)) + (_1002 * _1002)) / (_954 + 9.9999997473787516355514526367188e-06);
        float _3243 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
        float _1026 = isnan(1.0) ? _3243 : (isnan(_3243) ? 1.0 : min(_3243, 1.0));
        float _1027 = _1026 * 2.0;
        float _1031 = (1.0 - _1026) / (_1026 + 1.0);
        float _3254 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
        float _1032 = isnan(1.0) ? _3254 : (isnan(_3254) ? 1.0 : min(_3254, 1.0));
        float _1041 = ((((1.0 - _1032) * (_1027 + 2.0)) * exp2(log2(isnan(1.0) ? _3232 : (isnan(_3232) ? 1.0 : min(_3232, 1.0))) * (_1027 + 1.0))) + _1032) * _954;
        float _1042 = _922 * 0.5;
        float _1043 = _932 * 0.5;
        float _1044 = _942 * 0.5;
        float _1045 = dot(vec3(_1042, _1043, _1044), vec3(_1042, _1043, _1044));
        float _1050 = (_1045 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1045);
        float _1058 = (dot(vec3(_634, _635, _636), vec3(_1050 * _1042, _1050 * _1043, _1050 * _1044)) + 1.0) * 0.5;
        float _3265 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
        float _1067 = sqrt(((_1043 * _1043) + (_1042 * _1042)) + (_1044 * _1044)) / (_955 + 9.9999997473787516355514526367188e-06);
        float _3276 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
        float _1068 = isnan(1.0) ? _3276 : (isnan(_3276) ? 1.0 : min(_3276, 1.0));
        float _1069 = _1068 * 2.0;
        float _1073 = (1.0 - _1068) / (_1068 + 1.0);
        float _3287 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
        float _1074 = isnan(1.0) ? _3287 : (isnan(_3287) ? 1.0 : min(_3287, 1.0));
        float _1083 = ((((1.0 - _1074) * (_1069 + 2.0)) * exp2(log2(isnan(1.0) ? _3265 : (isnan(_3265) ? 1.0 : min(_3265, 1.0))) * (_1069 + 1.0))) + _1074) * _955;
        _1091 = _922;
        _1093 = _921;
        _1094 = _920;
        _1095 = _932;
        _1096 = _931;
        _1097 = _930;
        _1098 = _942;
        _1099 = _941;
        _1100 = _940;
        _1101 = _955;
        _1102 = _954;
        _1103 = _953;
        _1104 = cbModelParam._m0[36u].z * (isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0)));
        _1105 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0)));
        _1106 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0)));
    }
    else
    {
        _1091 = _1092;
        _1093 = _1092;
        _1094 = _1092;
        _1095 = _1092;
        _1096 = _1092;
        _1097 = _1092;
        _1098 = _1092;
        _1099 = _1092;
        _1100 = _1092;
        _1101 = _1092;
        _1102 = _1092;
        _1103 = _1092;
        _1104 = 0.0;
        _1105 = 0.0;
        _1106 = 0.0;
    }
    float _1401;
    float _1402;
    float _1403;
    float _1404;
    float _1405;
    float _1406;
    float _1407;
    float _1408;
    float _1409;
    float _1410;
    float _1411;
    float _1412;
    float _1413;
    float _1414;
    float _1415;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1132 = fma(_789, cbModelParam._m0[30u].z, fma(_785, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _781));
        float _1136 = fma(_789, cbModelParam._m0[31u].z, fma(_785, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _781));
        float _1140 = fma(_789, cbModelParam._m0[32u].z, fma(_785, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _781));
        float _1163 = _781 + _634;
        float _1164 = _785 + _635;
        float _1165 = _789 + _636;
        float _1175 = fma(_1165, cbModelParam._m0[30u].z, fma(_1164, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1163)) - _1132;
        float _1176 = fma(_1165, cbModelParam._m0[31u].z, fma(_1164, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1163)) - _1136;
        float _1177 = fma(_1165, cbModelParam._m0[32u].z, fma(_1164, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1163)) - _1140;
        float _1181 = inversesqrt(dot(vec3(_1175, _1176, _1177), vec3(_1175, _1176, _1177)));
        float _1194 = ((_1181 * _1175) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1132 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1195 = ((_1181 * _1176) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1136 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1196 = ((_1181 * _1177) / cbModelParam._m0[35u].z) + ((((((_1140 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1198 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1194, _1195, _1196), 0.0);
        vec4 _1205 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1194, _1195, _1196), 0.0);
        vec4 _1212 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1194, _1195, _1196), 0.0);
        vec4 _1219 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1194, _1195, _1196), 0.0);
        float _1231 = exp2((_1198.w + (-0.5)) * 20.0) * 2.0;
        float _1232 = _1231 * (_1198.x + (-0.5));
        float _1233 = _1231 * (_1198.y + (-0.5));
        float _1234 = _1231 * (_1198.z + (-0.5));
        float _1241 = exp2((_1205.w + (-0.5)) * 20.0) * 2.0;
        float _1242 = _1241 * (_1205.x + (-0.5));
        float _1243 = _1241 * (_1205.y + (-0.5));
        float _1244 = _1241 * (_1205.z + (-0.5));
        float _1251 = exp2((_1212.w + (-0.5)) * 20.0) * 2.0;
        float _1252 = _1251 * (_1212.x + (-0.5));
        float _1253 = _1251 * (_1212.y + (-0.5));
        float _1254 = _1251 * (_1212.z + (-0.5));
        float _1261 = exp2((_1219.w + (-0.5)) * 20.0) * 2.0;
        float _1262 = _1261 * (_1219.x + (-0.5));
        float _1263 = _1261 * (_1219.y + (-0.5));
        float _1264 = _1261 * (_1219.z + (-0.5));
        float _1265 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
        float _1266 = isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0));
        float _1267 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
        float _1268 = _1232 * 0.5;
        float _1269 = _1242 * 0.5;
        float _1270 = _1252 * 0.5;
        float _1271 = dot(vec3(_1268, _1269, _1270), vec3(_1268, _1269, _1270));
        float _1276 = (_1271 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1271);
        float _1284 = (dot(vec3(_634, _635, _636), vec3(_1276 * _1268, _1276 * _1269, _1276 * _1270)) + 1.0) * 0.5;
        float _3328 = isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0));
        float _1293 = sqrt(((_1269 * _1269) + (_1268 * _1268)) + (_1270 * _1270)) / (_1265 + 9.9999997473787516355514526367188e-06);
        float _3339 = isnan(0.0) ? _1293 : (isnan(_1293) ? 0.0 : max(_1293, 0.0));
        float _1294 = isnan(1.0) ? _3339 : (isnan(_3339) ? 1.0 : min(_3339, 1.0));
        float _1295 = _1294 * 2.0;
        float _1299 = (1.0 - _1294) / (_1294 + 1.0);
        float _3350 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1300 = isnan(1.0) ? _3350 : (isnan(_3350) ? 1.0 : min(_3350, 1.0));
        float _1309 = ((((1.0 - _1300) * (_1295 + 2.0)) * exp2(log2(isnan(1.0) ? _3328 : (isnan(_3328) ? 1.0 : min(_3328, 1.0))) * (_1295 + 1.0))) + _1300) * _1265;
        float _1310 = _1233 * 0.5;
        float _1311 = _1243 * 0.5;
        float _1312 = _1253 * 0.5;
        float _1313 = dot(vec3(_1310, _1311, _1312), vec3(_1310, _1311, _1312));
        float _1318 = (_1313 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1313);
        float _1326 = (dot(vec3(_634, _635, _636), vec3(_1318 * _1310, _1318 * _1311, _1318 * _1312)) + 1.0) * 0.5;
        float _3361 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1335 = sqrt(((_1311 * _1311) + (_1310 * _1310)) + (_1312 * _1312)) / (_1266 + 9.9999997473787516355514526367188e-06);
        float _3372 = isnan(0.0) ? _1335 : (isnan(_1335) ? 0.0 : max(_1335, 0.0));
        float _1336 = isnan(1.0) ? _3372 : (isnan(_3372) ? 1.0 : min(_3372, 1.0));
        float _1337 = _1336 * 2.0;
        float _1341 = (1.0 - _1336) / (_1336 + 1.0);
        float _3383 = isnan(0.0) ? _1341 : (isnan(_1341) ? 0.0 : max(_1341, 0.0));
        float _1342 = isnan(1.0) ? _3383 : (isnan(_3383) ? 1.0 : min(_3383, 1.0));
        float _1351 = ((((1.0 - _1342) * (_1337 + 2.0)) * exp2(log2(isnan(1.0) ? _3361 : (isnan(_3361) ? 1.0 : min(_3361, 1.0))) * (_1337 + 1.0))) + _1342) * _1266;
        float _1352 = _1234 * 0.5;
        float _1353 = _1244 * 0.5;
        float _1354 = _1254 * 0.5;
        float _1355 = dot(vec3(_1352, _1353, _1354), vec3(_1352, _1353, _1354));
        float _1360 = (_1355 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1355);
        float _1368 = (dot(vec3(_634, _635, _636), vec3(_1360 * _1352, _1360 * _1353, _1360 * _1354)) + 1.0) * 0.5;
        float _3394 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
        float _1377 = sqrt(((_1353 * _1353) + (_1352 * _1352)) + (_1354 * _1354)) / (_1267 + 9.9999997473787516355514526367188e-06);
        float _3405 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
        float _1378 = isnan(1.0) ? _3405 : (isnan(_3405) ? 1.0 : min(_3405, 1.0));
        float _1379 = _1378 * 2.0;
        float _1383 = (1.0 - _1378) / (_1378 + 1.0);
        float _3416 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1384 = isnan(1.0) ? _3416 : (isnan(_3416) ? 1.0 : min(_3416, 1.0));
        float _1393 = ((((1.0 - _1384) * (_1379 + 2.0)) * exp2(log2(isnan(1.0) ? _3394 : (isnan(_3394) ? 1.0 : min(_3394, 1.0))) * (_1379 + 1.0))) + _1384) * _1267;
        _1401 = _1234;
        _1402 = _1233;
        _1403 = _1232;
        _1404 = _1244;
        _1405 = _1243;
        _1406 = _1242;
        _1407 = _1254;
        _1408 = _1253;
        _1409 = _1252;
        _1410 = _1267;
        _1411 = _1266;
        _1412 = _1265;
        _1413 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0)));
        _1414 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0)));
        _1415 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0)));
    }
    else
    {
        _1401 = _1092;
        _1402 = _1092;
        _1403 = _1092;
        _1404 = _1092;
        _1405 = _1092;
        _1406 = _1092;
        _1407 = _1092;
        _1408 = _1092;
        _1409 = _1092;
        _1410 = _1092;
        _1411 = _1092;
        _1412 = _1092;
        _1413 = 0.0;
        _1414 = 0.0;
        _1415 = 0.0;
    }
    float _1425 = (cbModelParam._m0[1u].x * (_1413 - _1104)) + _1104;
    float _1426 = (cbModelParam._m0[1u].x * (_1414 - _1105)) + _1105;
    float _1427 = (cbModelParam._m0[1u].x * (_1415 - _1106)) + _1106;
    float _1448 = fma(_1427, cbSceneParam._m0[89u].z, fma(_1426, cbSceneParam._m0[89u].y, _1425 * cbSceneParam._m0[89u].x));
    float _1451 = fma(_1427, cbSceneParam._m0[90u].z, fma(_1426, cbSceneParam._m0[90u].y, _1425 * cbSceneParam._m0[90u].x));
    float _1454 = fma(_1427, cbSceneParam._m0[91u].z, fma(_1426, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1425));
    float _1469 = _724 * 0.5;
    float _1470 = _725 * 0.5;
    float _1471 = _726 * 0.5;
    float _1472 = dot(vec4(_1469, _1470, _1471, 1.0), vec4(_1403, _1406, _1409, _1412));
    float _1475 = dot(vec4(_1469, _1470, _1471, 1.0), vec4(_1402, _1405, _1408, _1411));
    float _1478 = dot(vec4(_1469, _1470, _1471, 1.0), vec4(_1401, _1404, _1407, _1410));
    float _1512;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1485 = dot(vec4(_1469, _1470, _1471, 1.0), vec4(_1091, _1095, _1098, _1101));
        float _1489 = dot(vec4(_1469, _1470, _1471, 1.0), vec4(_1093, _1096, _1099, _1102));
        float _1493 = dot(vec4(_1469, _1470, _1471, 1.0), vec4(_1094, _1097, _1100, _1103));
        float _1500 = dot(vec4(cbModelParam._m0[39u]), vec4(_1469, _1470, _1471, 1.0));
        _1512 = dot(vec3(isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0)), isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0)), isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1500) ? 0.0 : (isnan(0.0) ? _1500 : max(0.0, _1500))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1512 = 1.0;
    }
    float _1523;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1514 = dot(vec4(cbModelParam._m0[40u]), vec4(_1469, _1470, _1471, 1.0));
        _1523 = dot(vec3(isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0)), isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0)), isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1514) ? 0.0 : (isnan(0.0) ? _1514 : max(0.0, _1514))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1523 = 1.0;
    }
    float _1527 = (_1523 * cbModelParam._m0[1u].x) + (_1512 * (1.0 - cbModelParam._m0[1u].x));
    float _1537 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _638);
    float _1538 = isnan(_1537) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1537 : min(cbModelParam._m0[25u].z, _1537));
    float _1618;
    float _1620;
    float _1622;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1585 = fma(_789, cbModelParam._m0[13u].z, fma(_785, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _781)) + cbModelParam._m0[13u].w;
        float _1589 = fma(_789, cbModelParam._m0[14u].z, fma(_785, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _781)) + cbModelParam._m0[14u].w;
        float _1593 = fma(_789, cbModelParam._m0[15u].z, fma(_785, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _781)) + cbModelParam._m0[15u].w;
        float _1596 = fma(_726, cbModelParam._m0[13u].z, fma(_725, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _724));
        float _1599 = fma(_726, cbModelParam._m0[14u].z, fma(_725, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _724));
        float _1602 = fma(_726, cbModelParam._m0[15u].z, fma(_725, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _724));
        float _1630;
        if (_1596 > 0.0)
        {
            _1630 = abs((1.0 - _1585) / _1596);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1596 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1585 + 1.0) / _1596);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1630 = frontier_phi_16_14_ladder;
        }
        float _1823;
        if (_1599 > 0.0)
        {
            _1823 = abs((1.0 - _1589) / _1599);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1599 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1589 + 1.0) / _1599);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1823 = frontier_phi_25_21_ladder;
        }
        float _2061;
        if (_1602 > 0.0)
        {
            _2061 = abs((1.0 - _1593) / _1602);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1602 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1593 + 1.0) / _1602);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2061 = frontier_phi_36_32_ladder;
        }
        float _2063 = isnan(_1823) ? _1630 : (isnan(_1630) ? _1823 : min(_1630, _1823));
        float _2064 = isnan(_2061) ? _2063 : (isnan(_2063) ? _2061 : min(_2063, _2061));
        float _2068 = (_2064 * _1596) + _1585;
        float _2069 = (_2064 * _1599) + _1589;
        float _2070 = (_2064 * _1602) + _1593;
        float _2071 = _2064 * 9.9999997473787516355514526367188e-05;
        float _2073 = (-1.0) - _2071;
        float _2075 = _2071 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2070 > _2075) || ((_2070 < _2073) || ((_2069 > _2075) || ((_2069 < _2073) || ((_2068 < _2073) || (_2068 > _2075))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2220 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2070, cbModelParam._m0[9u].z, fma(_2069, cbModelParam._m0[9u].y, _2068 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2070, cbModelParam._m0[10u].z, fma(_2069, cbModelParam._m0[10u].y, _2068 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2070, cbModelParam._m0[11u].z, fma(_2069, cbModelParam._m0[11u].y, _2068 * cbModelParam._m0[11u].x))), _1538);
            frontier_phi_15_36_ladder = _2220.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2220.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2220.y * cbModelParam._m0[1u].y;
        }
        _1618 = frontier_phi_15_36_ladder_1;
        _1620 = frontier_phi_15_36_ladder_2;
        _1622 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1606 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_724, _725, _726), _1538);
        _1618 = _1606.x * cbModelParam._m0[1u].y;
        _1620 = _1606.y * cbModelParam._m0[1u].y;
        _1622 = _1606.z * cbModelParam._m0[1u].y;
    }
    float _1626 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _638);
    float _1627 = isnan(_1626) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1626 : min(cbModelParam._m0[25u].w, _1626));
    float _1719;
    float _1721;
    float _1723;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1683 = fma(_789, cbModelParam._m0[21u].z, fma(_785, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _781)) + cbModelParam._m0[21u].w;
        float _1687 = fma(_789, cbModelParam._m0[22u].z, fma(_785, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _781)) + cbModelParam._m0[22u].w;
        float _1691 = fma(_789, cbModelParam._m0[23u].z, fma(_785, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _781)) + cbModelParam._m0[23u].w;
        float _1694 = fma(_726, cbModelParam._m0[21u].z, fma(_725, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _724));
        float _1697 = fma(_726, cbModelParam._m0[22u].z, fma(_725, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _724));
        float _1700 = fma(_726, cbModelParam._m0[23u].z, fma(_725, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _724));
        float _1828;
        if (_1694 > 0.0)
        {
            _1828 = abs((1.0 - _1683) / _1694);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1694 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1683 + 1.0) / _1694);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1828 = frontier_phi_27_23_ladder;
        }
        float _2088;
        if (_1697 > 0.0)
        {
            _2088 = abs((1.0 - _1687) / _1697);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1697 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1687 + 1.0) / _1697);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2088 = frontier_phi_38_34_ladder;
        }
        float _2395;
        if (_1700 > 0.0)
        {
            _2395 = abs((1.0 - _1691) / _1700);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1700 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1691 + 1.0) / _1700);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2395 = frontier_phi_49_44_ladder;
        }
        float _2397 = isnan(_2088) ? _1828 : (isnan(_1828) ? _2088 : min(_1828, _2088));
        float _2398 = isnan(_2395) ? _2397 : (isnan(_2397) ? _2395 : min(_2397, _2395));
        float _2402 = (_2398 * _1694) + _1683;
        float _2403 = (_2398 * _1697) + _1687;
        float _2404 = (_2398 * _1700) + _1691;
        float _2405 = _2398 * 9.9999997473787516355514526367188e-05;
        float _2406 = (-1.0) - _2405;
        float _2408 = _2405 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2404 > _2408) || ((_2404 < _2406) || ((_2403 > _2408) || ((_2403 < _2406) || ((_2402 < _2406) || (_2402 > _2408))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2577 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2404, cbModelParam._m0[17u].z, fma(_2403, cbModelParam._m0[17u].y, _2402 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2404, cbModelParam._m0[18u].z, fma(_2403, cbModelParam._m0[18u].y, _2402 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2404, cbModelParam._m0[19u].z, fma(_2403, cbModelParam._m0[19u].y, _2402 * cbModelParam._m0[19u].x))), _1627);
            frontier_phi_24_49_ladder = _2577.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2577.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2577.x * cbModelParam._m0[1u].z;
        }
        _1719 = frontier_phi_24_49_ladder_2;
        _1721 = frontier_phi_24_49_ladder;
        _1723 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1703 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_724, _725, _726), _1627);
        _1719 = _1703.x * cbModelParam._m0[1u].z;
        _1721 = _1703.y * cbModelParam._m0[1u].z;
        _1723 = _1703.z * cbModelParam._m0[1u].z;
    }
    float _1735 = ((((1.0 - _749) * ((_737 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_749 * _737)) * _716;
    float _1736 = _1735 * ((cbModelParam._m0[1u].w * (_1719 - _1618)) + _1618);
    float _1737 = _1735 * ((cbModelParam._m0[1u].w * (_1721 - _1620)) + _1620);
    float _1738 = _1735 * ((cbModelParam._m0[1u].w * (_1723 - _1622)) + _1622);
    float _1741 = fma(_1738, cbSceneParam._m0[89u].z, fma(_1737, cbSceneParam._m0[89u].y, _1736 * cbSceneParam._m0[89u].x));
    float _1744 = fma(_1738, cbSceneParam._m0[90u].z, fma(_1737, cbSceneParam._m0[90u].y, _1736 * cbSceneParam._m0[90u].x));
    float _1747 = fma(_1738, cbSceneParam._m0[91u].z, fma(_1737, cbSceneParam._m0[91u].y, _1736 * cbSceneParam._m0[91u].x));
    vec4 _1755 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_551, _552));
    float _1757 = _1755.w;
    float _1769 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1757);
    float _1770 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1757);
    float _1771 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1757);
    uvec4 _1775 = floatBitsToUint(cbInstanceData._m0[_696 + 5u]);
    uint _1777 = _1775.x * 14u;
    uint _1778 = _1777 + 13u;
    float _1783 = _716 + (-1.0);
    float _1786 = (cbLight._m0[_1778].x * _1783) + 1.0;
    float _1787 = (cbLight._m0[_1778].y * _1783) + 1.0;
    uint _1789 = _1777 + 4u;
    float _1800 = dot(vec3(cbLight._m0[_1777].xyz), vec3(_634, _635, _636));
    float _1803 = isnan(1.0) ? _1786 : (isnan(_1786) ? 1.0 : min(_1786, 1.0));
    float _1804 = cbLight._m0[_1789].x * _1769;
    float _1805 = cbLight._m0[_1789].y * _1770;
    float _1806 = cbLight._m0[_1789].z * _1771;
    uint _1807 = _1777 + 5u;
    uint _1813 = _1777 | 1u;
    float _1819 = dot(vec3(cbLight._m0[_1813].xyz), vec3(_634, _635, _636));
    float _1822 = isnan(1.0) ? _1787 : (isnan(_1787) ? 1.0 : min(_1787, 1.0));
    float _1887;
    float _1888;
    float _1889;
    if (_639 == 0.0)
    {
        float _3552 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
        float _3563 = isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0));
        float _1841 = (isnan(1.0) ? _3552 : (isnan(_3552) ? 1.0 : min(_3552, 1.0))) * 0.3183098733425140380859375;
        float _1843 = (isnan(1.0) ? _3563 : (isnan(_3563) ? 1.0 : min(_3563, 1.0))) * 0.3183098733425140380859375;
        _1887 = ((cbLight._m0[_1807].x * _1822) * _1843) + ((_1804 * _1803) * _1841);
        _1888 = ((_1822 * cbLight._m0[_1807].y) * _1843) + ((_1805 * _1803) * _1841);
        _1889 = ((_1822 * cbLight._m0[_1807].z) * _1843) + ((_1806 * _1803) * _1841);
    }
    else
    {
        float _1853 = _1800 + _639;
        float _1856 = (_639 * 2.0) + 1.0;
        float _1857 = (isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0))) / _1856;
        float _1864 = _1819 + _639;
        float _1866 = (isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0))) / _1856;
        _1887 = (((_1866 * cbLight._m0[_1807].x) * _1822) + ((_1804 * _1857) * _1803)) * 0.3183098733425140380859375;
        _1888 = (((_1866 * cbLight._m0[_1807].y) * _1822) + ((_1805 * _1857) * _1803)) * 0.3183098733425140380859375;
        _1889 = (((_1866 * cbLight._m0[_1807].z) * _1822) + ((_1806 * _1857) * _1803)) * 0.3183098733425140380859375;
    }
    uint _1893 = _1777 + 8u;
    float _1909 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1777].w)) * _638) * 0.949999988079071044921875);
    float _1910 = _1909 * _1909;
    float _1911 = cbLight._m0[_1777].x + _444;
    float _1912 = cbLight._m0[_1777].y + _445;
    float _1913 = cbLight._m0[_1777].z + _446;
    float _1917 = inversesqrt(dot(vec3(_1911, _1912, _1913), vec3(_1911, _1912, _1913)));
    float _1918 = _1917 * _1911;
    float _1919 = _1917 * _1912;
    float _1920 = _1917 * _1913;
    float _1921 = dot(vec3(_634, _635, _636), vec3(cbLight._m0[_1777].xyz));
    float _3584 = isnan(0.0) ? _1921 : (isnan(_1921) ? 0.0 : max(_1921, 0.0));
    float _1924 = isnan(1.0) ? _3584 : (isnan(_3584) ? 1.0 : min(_3584, 1.0));
    float _3595 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _1925 = isnan(1.0) ? _3595 : (isnan(_3595) ? 1.0 : min(_3595, 1.0));
    float _1926 = dot(vec3(_634, _635, _636), vec3(_1918, _1919, _1920));
    float _3606 = isnan(0.0) ? _1926 : (isnan(_1926) ? 0.0 : max(_1926, 0.0));
    float _1929 = isnan(1.0) ? _3606 : (isnan(_3606) ? 1.0 : min(_3606, 1.0));
    float _1930 = dot(vec3(cbLight._m0[_1777].xyz), vec3(_1918, _1919, _1920));
    float _3617 = isnan(0.0) ? _1930 : (isnan(_1930) ? 0.0 : max(_1930, 0.0));
    float _1934 = _1910 * _1910;
    float _1938 = ((_1929 * _1929) * (_1934 + (-1.0))) + 1.0;
    float _1949 = (exp2(log2(1.0 - (isnan(1.0) ? _3617 : (isnan(_3617) ? 1.0 : min(_3617, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1950 = 1.0 - _1910;
    float _1961 = (0.5 / (((_1925 * ((_1924 * _1950) + _1910)) + 9.9999999392252902907785028219223e-09) + (((_1925 * _1950) + _1910) * _1924))) * _1924;
    float _3628 = isnan(0.0) ? _1961 : (isnan(_1961) ? 0.0 : max(_1961, 0.0));
    float _1963 = (isnan(1.0) ? _3628 : (isnan(_3628) ? 1.0 : min(_3628, 1.0))) * (_1934 / ((_1938 * _1938) * 3.141590118408203125));
    uint _1979 = _1777 + 9u;
    float _1993 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1813].w)) * _638) * 0.949999988079071044921875);
    float _1994 = _1993 * _1993;
    float _1995 = cbLight._m0[_1813].x + _444;
    float _1996 = cbLight._m0[_1813].y + _445;
    float _1997 = cbLight._m0[_1813].z + _446;
    float _2001 = inversesqrt(dot(vec3(_1995, _1996, _1997), vec3(_1995, _1996, _1997)));
    float _2002 = _2001 * _1995;
    float _2003 = _2001 * _1996;
    float _2004 = _2001 * _1997;
    float _2005 = dot(vec3(_634, _635, _636), vec3(cbLight._m0[_1813].xyz));
    float _3639 = isnan(0.0) ? _2005 : (isnan(_2005) ? 0.0 : max(_2005, 0.0));
    float _2008 = isnan(1.0) ? _3639 : (isnan(_3639) ? 1.0 : min(_3639, 1.0));
    float _2009 = dot(vec3(_634, _635, _636), vec3(_2002, _2003, _2004));
    float _3650 = isnan(0.0) ? _2009 : (isnan(_2009) ? 0.0 : max(_2009, 0.0));
    float _2012 = isnan(1.0) ? _3650 : (isnan(_3650) ? 1.0 : min(_3650, 1.0));
    float _2013 = dot(vec3(cbLight._m0[_1813].xyz), vec3(_2002, _2003, _2004));
    float _3661 = isnan(0.0) ? _2013 : (isnan(_2013) ? 0.0 : max(_2013, 0.0));
    float _2017 = _1994 * _1994;
    float _2021 = ((_2012 * _2012) * (_2017 + (-1.0))) + 1.0;
    float _2030 = (exp2(log2(1.0 - (isnan(1.0) ? _3661 : (isnan(_3661) ? 1.0 : min(_3661, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2031 = 1.0 - _1994;
    float _2041 = (0.5 / (((_1925 * ((_2008 * _2031) + _1994)) + 9.9999999392252902907785028219223e-09) + (((_1925 * _2031) + _1994) * _2008))) * _2008;
    float _3672 = isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0));
    float _2043 = (isnan(1.0) ? _3672 : (isnan(_3672) ? 1.0 : min(_3672, 1.0))) * (_2017 / ((_2021 * _2021) * 3.141590118408203125));
    float _2053 = (((_2030 * cbLight._m0[_1979].x) * _2043) * _1822) + ((((cbLight._m0[_1893].x * _1769) * _1949) * _1963) * _1803);
    float _2054 = (((_2030 * cbLight._m0[_1979].y) * _2043) * _1822) + ((((cbLight._m0[_1893].y * _1770) * _1949) * _1963) * _1803);
    float _2055 = (((_2030 * cbLight._m0[_1979].z) * _2043) * _1822) + ((((cbLight._m0[_1893].z * _1771) * _1949) * _1963) * _1803);
    float _2191;
    float _2193;
    float _2195;
    float _2197;
    float _2199;
    float _2201;
    if (_1775.y == 0u)
    {
        float _2132 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2133 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2132;
        float _2134 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2132;
        float _2135 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2132;
        uvec4 _2147 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2148 = _2147.x;
        uint _2159 = uint((float(_2147.y) * floor(float(uint(cbSceneParam._m0[85u].y * _552) / _2148))) + floor(float(uint(cbSceneParam._m0[85u].x * _551) / _2148)));
        float _2169 = (log2(_2135 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2170 = isnan(0.0) ? _2169 : (isnan(_2169) ? 0.0 : max(_2169, 0.0));
        uint _2173 = uint(isnan(14.0) ? _2170 : (isnan(_2170) ? 14.0 : min(_2170, 14.0)));
        uint _2180 = _2147.z;
        float _2229;
        float _2231;
        float _2233;
        float _2235;
        float _2237;
        float _2239;
        if (((((1u << ((_2180 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2173 << 2u) + (_2159 << 6u)) >> 2u)).x) == 0u) || ((_2180 & 240u) == 0u))
        {
            _2229 = 0.0;
            _2231 = 0.0;
            _2233 = 0.0;
            _2235 = 0.0;
            _2237 = 0.0;
            _2239 = 0.0;
        }
        else
        {
            float _2230;
            float _2232;
            float _2234;
            float _2236;
            float _2238;
            float _2240;
            float _2421 = 0.0;
            float _2422 = 0.0;
            float _2423 = 0.0;
            float _2424 = 0.0;
            float _2425 = 0.0;
            float _2426 = 0.0;
            uint _2427 = 0u;
            uint _2436;
            bool _2437;
            for (;;)
            {
                _2436 = texelFetch(g_lightClassification, int((((_2173 << 5u) + (_2159 << 9u)) + (_2427 << 2u)) >> 2u)).x;
                _2437 = _2436 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2437)
                {
                    frontier_phi_55_pred = _2426;
                    frontier_phi_55_pred_1 = _2425;
                    frontier_phi_55_pred_2 = _2424;
                    frontier_phi_55_pred_3 = _2422;
                    frontier_phi_55_pred_4 = _2421;
                    frontier_phi_55_pred_5 = _2423;
                }
                else
                {
                    float _2634;
                    float _2635;
                    float _2636;
                    float _2637;
                    float _2638;
                    float _2639;
                    uint _2640;
                    _2634 = _2421;
                    _2635 = _2422;
                    _2636 = _2423;
                    _2637 = _2424;
                    _2638 = _2425;
                    _2639 = _2426;
                    _2640 = _2436;
                    float _2582;
                    float _2583;
                    float _2584;
                    float _2585;
                    float _2586;
                    float _2587;
                    for (;;)
                    {
                        uint _2644 = uint(findLSB(_2640)) + (_2427 << 5u);
                        uint _2641 = (_2640 + 4294967295u) & _2640;
                        uint _2646 = _2644 * 48u;
                        vec4 _2660 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2646)).x, texelFetch(g_PointLightRenderingBuffer, int(_2646 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2646 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2646 + 3u)).x));
                        uint _2666 = (_2644 * 48u) + 4u;
                        vec4 _2679 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2666)).x, texelFetch(g_PointLightRenderingBuffer, int(_2666 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2666 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2666 + 3u)).x));
                        float _2680 = _2679.x;
                        float _2681 = _2679.y;
                        float _2682 = _2679.z;
                        uint _2685 = (_2644 * 48u) + 8u;
                        vec3 _2696 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2685)).x, texelFetch(g_PointLightRenderingBuffer, int(_2685 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2685 + 2u)).x));
                        uint _2701 = (_2644 * 48u) + 12u;
                        vec2 _2709 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2701)).x, texelFetch(g_PointLightRenderingBuffer, int(_2701 + 1u)).x));
                        float _2715 = inversesqrt(dot(vec3(_2133, _2134, _2135), vec3(_2133, _2134, _2135)));
                        float _2716 = _2715 * _2133;
                        float _2717 = _2715 * _2134;
                        float _2718 = _2715 * _2135;
                        float _2719 = _2660.x - _2133;
                        float _2720 = _2660.y - _2134;
                        float _2721 = _2660.z - _2135;
                        float _2722 = dot(vec3(_2719, _2720, _2721), vec3(_2719, _2720, _2721));
                        float _2725 = inversesqrt(_2722);
                        float _2726 = _2725 * _2719;
                        float _2727 = _2725 * _2720;
                        float _2728 = _2725 * _2721;
                        float _2729 = dot(vec3(_677, _680, _683), vec3(_2726, _2727, _2728));
                        float _2734 = 1.0 - (_2722 * _2660.w);
                        float _3693 = isnan(0.0) ? _2734 : (isnan(_2734) ? 0.0 : max(_2734, 0.0));
                        float _2735 = isnan(1.0) ? _3693 : (isnan(_3693) ? 1.0 : min(_3693, 1.0));
                        float _2736 = sqrt(_2722) * _2679.w;
                        float _2739 = 1.39999997615814208984375 / (_2736 + 1.39999997615814208984375);
                        float _2740 = _2739 * _2739;
                        float _2741 = 1.0 - _2740;
                        float _2743 = (_2741 * _2741) * _639;
                        float _2746 = ((_2741 * _2729) + _2740) + _2743;
                        float _2751 = _2736 * _2736;
                        float _2756 = ((isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0))) * _2735) / (((_2743 * 2.0) + 1.0) * ((_2751 * 0.699999988079071044921875) + 1.0));
                        float _2760 = dot(vec3(_2726, _2727, _2728), vec3(_2716, _2717, _2718));
                        float _3709 = isnan(0.0) ? _2760 : (isnan(_2760) ? 0.0 : max(_2760, 0.0));
                        float _2767 = dot(vec3((-0.0) - _2716, (-0.0) - _2717, (-0.0) - _2718), vec3(_677, _680, _683)) + 1.0;
                        float _2769 = (isnan(0.0) ? _2767 : (isnan(_2767) ? 0.0 : max(_2767, 0.0))) * 0.5;
                        float _2776 = ((_2769 * _2769) * _2709.x) * exp2((_2709.y * 32.0) * log2(isnan(1.0) ? _3709 : (isnan(_3709) ? 1.0 : min(_3709, 1.0))));
                        float _2778 = _639 / (_639 + 1.0);
                        float _2794 = (-0.0) - _2133;
                        float _2795 = (-0.0) - _2134;
                        float _2796 = (-0.0) - _2135;
                        float _2800 = inversesqrt(dot(vec3(_2794, _2795, _2796), vec3(_2794, _2795, _2796)));
                        float _2801 = _2800 * _2794;
                        float _2802 = _2800 * _2795;
                        float _2803 = _2800 * _2796;
                        float _2811 = exp2(log2(1.0 / ((_2751 * 3.5) + 5.0)) * 0.25);
                        float _2812 = 1.0 - _737;
                        float _2819 = sqrt(1.0 - ((1.0 - (_2812 * _2812)) * (1.0 - (_2811 * _2811))));
                        float _2820 = _2819 * _2819;
                        float _2821 = _2820 * _2820;
                        float _2822 = _2801 + _2726;
                        float _2823 = _2802 + _2727;
                        float _2824 = _2803 + _2728;
                        float _2828 = inversesqrt(dot(vec3(_2822, _2823, _2824), vec3(_2822, _2823, _2824)));
                        float _2832 = dot(vec3(_677, _680, _683), vec3(_2801, _2802, _2803));
                        float _3725 = isnan(0.0) ? _2832 : (isnan(_2832) ? 0.0 : max(_2832, 0.0));
                        float _2835 = isnan(1.0) ? _3725 : (isnan(_3725) ? 1.0 : min(_3725, 1.0));
                        float _2836 = dot(vec3(_677, _680, _683), vec3(_2828 * _2822, _2828 * _2823, _2828 * _2824));
                        float _3736 = isnan(0.0) ? _2836 : (isnan(_2836) ? 0.0 : max(_2836, 0.0));
                        float _2839 = isnan(1.0) ? _3736 : (isnan(_3736) ? 1.0 : min(_3736, 1.0));
                        float _2843 = ((_2839 * _2839) * (_2821 + (-1.0))) + 1.0;
                        float _2844 = _2739 * _2820;
                        float _2845 = _2844 * _2844;
                        float _2848 = ((1.0 - _2845) * _2729) + _2845;
                        float _3747 = isnan(0.0) ? _2848 : (isnan(_2848) ? 0.0 : max(_2848, 0.0));
                        float _2849 = isnan(1.0) ? _3747 : (isnan(_3747) ? 1.0 : min(_3747, 1.0));
                        float _2850 = 1.0 - _2820;
                        float _2860 = (0.5 / (((_2849 * ((_2835 * _2850) + _2820)) + 9.9999999392252902907785028219223e-09) + (((_2849 * _2850) + _2820) * _2835))) * _2849;
                        float _3758 = isnan(0.0) ? _2860 : (isnan(_2860) ? 0.0 : max(_2860, 0.0));
                        float _2871 = (((_2821 * 3.1415927410125732421875) * (isnan(1.0) ? _3758 : (isnan(_3758) ? 1.0 : min(_3758, 1.0)))) / ((_2843 * _2843) * ((_2751 * 2.1991131305694580078125) + 3.141590118408203125))) * _2735;
                        _2585 = (((((_2680 * 0.3183098733425140380859375) * _2778) * _2776) + _2680) * _2756) + _2637;
                        _2586 = (((((_2681 * 0.3183098733425140380859375) * _2778) * _2776) + _2681) * _2756) + _2638;
                        _2587 = (((((_2682 * 0.3183098733425140380859375) * _2778) * _2776) + _2682) * _2756) + _2639;
                        _2582 = (_2871 * _2696.x) + _2634;
                        _2583 = (_2871 * _2696.y) + _2635;
                        _2584 = (_2871 * _2696.z) + _2636;
                        if (_2641 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2634 = _2582;
                            _2635 = _2583;
                            _2636 = _2584;
                            _2637 = _2585;
                            _2638 = _2586;
                            _2639 = _2587;
                            _2640 = _2641;
                        }
                    }
                    frontier_phi_55_pred = _2587;
                    frontier_phi_55_pred_1 = _2586;
                    frontier_phi_55_pred_2 = _2585;
                    frontier_phi_55_pred_3 = _2583;
                    frontier_phi_55_pred_4 = _2582;
                    frontier_phi_55_pred_5 = _2584;
                }
                _2240 = frontier_phi_55_pred;
                _2238 = frontier_phi_55_pred_1;
                _2236 = frontier_phi_55_pred_2;
                _2232 = frontier_phi_55_pred_3;
                _2230 = frontier_phi_55_pred_4;
                _2234 = frontier_phi_55_pred_5;
                uint _2428 = _2427 + 1u;
                if (_2428 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2421 = _2230;
                    _2422 = _2232;
                    _2423 = _2234;
                    _2424 = _2236;
                    _2425 = _2238;
                    _2426 = _2240;
                    _2427 = _2428;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2229 = _2230;
            _2231 = _2232;
            _2233 = _2234;
            _2235 = _2236;
            _2237 = _2238;
            _2239 = _2240;
        }
        float _2244 = isnan(1.0) ? _716 : (isnan(_716) ? 1.0 : min(_716, 1.0));
        _2191 = (_2244 * _2235) + _1887;
        _2193 = (_2244 * _2237) + _1888;
        _2195 = (_2244 * _2239) + _1889;
        _2197 = ((_2229 * 0.039999999105930328369140625) * _2244) + _2053;
        _2199 = ((_2231 * 0.039999999105930328369140625) * _2244) + _2054;
        _2201 = ((_2233 * 0.039999999105930328369140625) * _2244) + _2055;
    }
    else
    {
        _2191 = _1887;
        _2193 = _1888;
        _2195 = _1889;
        _2197 = _2053;
        _2199 = _2054;
        _2201 = _2055;
    }
    float _2318;
    float _2319;
    float _2320;
    if (_639 > 0.0)
    {
        uint _2251 = _1777 + 4u;
        float _2257 = (-0.0) - _444;
        float _2258 = (-0.0) - _445;
        float _2259 = (-0.0) - _446;
        float _2260 = dot(vec3(cbLight._m0[_1777].xyz), vec3(_2257, _2258, _2259));
        float _3774 = isnan(0.0) ? _2260 : (isnan(_2260) ? 0.0 : max(_2260, 0.0));
        float _2264 = _727 + 1.0;
        float _2266 = (isnan(0.0) ? _2264 : (isnan(_2264) ? 0.0 : max(_2264, 0.0))) * 0.5;
        float _2271 = _2266 * _2266;
        float _2272 = _2271 * exp2(log2(isnan(1.0) ? _3774 : (isnan(_3774) ? 1.0 : min(_3774, 1.0))) * 32.0);
        float _2274 = _639 / (_639 + 1.0);
        float _2275 = isnan(_1786) ? 1.0 : (isnan(1.0) ? _1786 : min(1.0, _1786));
        uint _2288 = _1777 + 5u;
        float _2294 = dot(vec3(cbLight._m0[_1813].xyz), vec3(_2257, _2258, _2259));
        float _3795 = isnan(0.0) ? _2294 : (isnan(_2294) ? 0.0 : max(_2294, 0.0));
        float _2301 = _2271 * exp2(log2(isnan(1.0) ? _3795 : (isnan(_3795) ? 1.0 : min(_3795, 1.0))) * 32.0);
        float _2302 = isnan(_1787) ? 1.0 : (isnan(1.0) ? _1787 : min(1.0, _1787));
        _2318 = ((((_2301 * cbLight._m0[_2288].x) * _2274) * _2302) + ((((cbLight._m0[_2251].x * _1769) * _2272) * _2274) * _2275)) * 0.3183098733425140380859375;
        _2319 = ((((_2301 * cbLight._m0[_2288].y) * _2274) * _2302) + ((((cbLight._m0[_2251].y * _1770) * _2272) * _2274) * _2275)) * 0.3183098733425140380859375;
        _2320 = ((((_2301 * cbLight._m0[_2288].z) * _2274) * _2302) + ((((cbLight._m0[_2251].z * _1771) * _2272) * _2274) * _2275)) * 0.3183098733425140380859375;
    }
    else
    {
        _2318 = 0.0;
        _2319 = 0.0;
        _2320 = 0.0;
    }
    float _3811 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _3822 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _3833 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _3844 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _2335 = (isnan(1.0) ? _3811 : (isnan(_3811) ? 1.0 : min(_3811, 1.0))) * ((_2191 + ((isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0))) * _716)) + _2318);
    float _2336 = (isnan(1.0) ? _3822 : (isnan(_3822) ? 1.0 : min(_3822, 1.0))) * ((_2193 + ((isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0))) * _716)) + _2319);
    float _2337 = (isnan(1.0) ? _3833 : (isnan(_3833) ? 1.0 : min(_3833, 1.0))) * ((_2195 + ((isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0))) * _716)) + _2320);
    float _2341 = 0.959999978542327880859375 - (exp2(log2(1.0 - _731) * 5.0) * 0.959999978542327880859375);
    float _2366 = _551 / cbSceneParam._m0[86u].x;
    float _2367 = _552 / cbSceneParam._m0[86u].y;
    vec4 _2381 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2366, _2367, (log2((isnan(cbSceneParam._m0[77u].w) ? _658 : (isnan(_658) ? cbSceneParam._m0[77u].w : min(_658, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2383 = _2381.x;
    float _2384 = _2381.y;
    float _2385 = _2381.z;
    float _2386 = _2381.w;
    float _2479;
    float _2481;
    float _2483;
    float _2485;
    if (_658 > cbSceneParam._m0[78u].w)
    {
        float _2442 = isnan(_658) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _658 : min(cbSceneParam._m0[80u].w, _658));
        float _2443 = _2442 / _658;
        float _2454 = _2443 * _287;
        float _2455 = _288 * _2443;
        float _2456 = (-0.0) - _2455;
        float _2457 = _2443 * _289;
        float _2459 = (cbSceneParam._m0[77u].w * _2456) / _2442;
        float _2460 = _2459 + cbSceneParam._m0[79u].w;
        float _2461 = cbSceneParam._m0[79u].w - _2455;
        float _2467 = sqrt(((_2454 * _2454) + (_2455 * _2455)) + (_2457 * _2457));
        float _2470 = (1.0 - (cbSceneParam._m0[77u].w / _2442)) * _2467;
        float _2475 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2477 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2876;
        if (abs((_2456 - _2459) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2876 = ((((_2460 > 0.0) ? exp2(_2475 * _2460) : (2.0 - exp2(_2477 * _2460))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2470;
        }
        else
        {
            float _2607 = 1.0 / cbSceneParam._m0[80u].x;
            float _2608 = isnan(_2461) ? _2460 : (isnan(_2460) ? _2461 : max(_2460, _2461));
            float _2609 = isnan(_2461) ? _2460 : (isnan(_2460) ? _2461 : min(_2460, _2461));
            float _2618 = isnan(0.0) ? _2608 : (isnan(_2608) ? 0.0 : min(_2608, 0.0));
            float _2619 = isnan(0.0) ? _2609 : (isnan(_2609) ? 0.0 : min(_2609, 0.0));
            _2876 = ((abs(_2467 / _2456) * cbSceneParam._m0[80u].y) * ((((_2618 - _2619) * 2.0) - ((exp2(_2475 * (isnan(0.0) ? _2608 : (isnan(_2608) ? 0.0 : max(_2608, 0.0)))) - exp2(_2475 * (isnan(0.0) ? _2609 : (isnan(_2609) ? 0.0 : max(_2609, 0.0))))) * _2607)) - ((exp2(_2477 * _2618) - exp2(_2477 * _2619)) * _2607))) + (_2470 * cbSceneParam._m0[80u].z);
        }
        vec4 _2878 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2366, _2367, 1.0), 0.0);
        float _2887 = exp2((_2876 * (-1.44269502162933349609375)) * (1.0 - _2878.w));
        float _2888 = log2(_2887);
        float _2904 = log2(_2386);
        _2479 = (exp2(_2904 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2888 * cbSceneParam._m0[78u].x)) * _2878.x) / cbSceneParam._m0[78u].x)) + _2383;
        _2481 = (exp2(_2904 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2888 * cbSceneParam._m0[78u].y)) * _2878.y) / cbSceneParam._m0[78u].y)) + _2384;
        _2483 = (exp2(_2904 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2888 * cbSceneParam._m0[78u].z)) * _2878.z) / cbSceneParam._m0[78u].z)) + _2385;
        _2485 = _2887 * _2386;
    }
    else
    {
        _2479 = _2383;
        _2481 = _2384;
        _2483 = _2385;
        _2485 = _2386;
    }
    bool _2497 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2498 = log2(_2485);
    float _2505 = exp2(_2498 * cbSceneParam._m0[78u].x) * ((_2335 + ((_2197 + ((isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0))) * _1527)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _575.x) * _2341) - _2335) * _619));
    float _2506 = exp2(_2498 * cbSceneParam._m0[78u].y) * ((_2336 + ((_2199 + ((isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0))) * _1527)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _575.y) * _2341) - _2336) * _619));
    float _2507 = exp2(_2498 * cbSceneParam._m0[78u].z) * ((_2337 + ((_2201 + ((isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0))) * _1527)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _575.z) * _2341) - _2337) * _619));
    vec4 _2515 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_551, _552));
    float _2517 = _2515.x;
    float _2538 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2517)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2517))) - _658) * cbMtdParam._m0[17u].y;
    float _3895 = isnan(0.0) ? _2538 : (isnan(_2538) ? 0.0 : max(_2538, 0.0));
    float _2540 = (cbInstanceData._m0[_696 + 6u].w * (isnan(1.0) ? _3844 : (isnan(_3844) ? 1.0 : min(_3844, 1.0)))) * (isnan(1.0) ? _3895 : (isnan(_3895) ? 1.0 : min(_3895, 1.0)));
    float _2549 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2549 * (_2497 ? _2505 : (_2505 + (cbSceneParam._m0[72u].w * _2479)));
    SV_Target.y = _2549 * (_2497 ? _2506 : (_2506 + (cbSceneParam._m0[72u].w * _2481)));
    SV_Target.z = _2549 * (_2497 ? _2507 : (_2507 + (cbSceneParam._m0[72u].w * _2483)));
    SV_Target.w = _2540;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2540;
}


