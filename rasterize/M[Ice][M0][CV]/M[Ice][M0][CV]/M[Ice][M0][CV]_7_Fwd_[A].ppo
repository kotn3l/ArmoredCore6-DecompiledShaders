#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1225;
float _3165;
float _3166;
float _3167;
float _3168;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _204 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _205 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _206 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _212 = inversesqrt(dot(vec3(_204, _205, _206), vec3(_204, _205, _206)));
    float _213 = _212 * _204;
    float _214 = _212 * _205;
    float _215 = _212 * _206;
    float _219 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _220 = _219 * NORMAL.x;
    float _221 = _219 * NORMAL.y;
    float _222 = _219 * NORMAL.z;
    float _226 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _227 = _226 * TANGENT.x;
    float _228 = _226 * TANGENT.y;
    float _229 = _226 * TANGENT.z;
    float _234;
    float _235;
    float _236;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _234 = (-0.0) - _220;
        _235 = (-0.0) - _221;
        _236 = (-0.0) - _222;
    }
    else
    {
        _234 = _220;
        _235 = _221;
        _236 = _222;
    }
    float _283 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _293 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _283);
    float _294 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _283);
    float _295 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _283);
    uint _301 = uint(roundEven(NORMAL.w)) * 13u;
    uint _306 = _301 + 1u;
    uint _310 = _301 + 2u;
    float _319 = sqrt(((cbInstanceData._m0[_306].x * cbInstanceData._m0[_306].x) + (cbInstanceData._m0[_301].x * cbInstanceData._m0[_301].x)) + (cbInstanceData._m0[_310].x * cbInstanceData._m0[_310].x));
    float _320 = _319 * TEXCOORD.z;
    float _321 = _319 * TEXCOORD.w;
    vec4 _341 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _350 = (_341.x * 2.0) + (-1.0);
    float _352 = (_341.y * 2.0) + (-1.0);
    float _353 = dot(vec2(_350, _352), vec2(_350, _352));
    float _3177 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _359 = sqrt(1.0 - (isnan(1.0) ? _3177 : (isnan(_3177) ? 1.0 : min(_3177, 1.0))));
    float _362 = fma(_359, _234, fma(_352, _227, _350 * _213));
    float _365 = fma(_359, _235, fma(_352, _228, _350 * _214));
    float _368 = fma(_359, _236, fma(_352, _229, _350 * _215));
    float _372 = inversesqrt(dot(vec3(_362, _365, _368), vec3(_362, _365, _368)));
    float _373 = _372 * _362;
    float _374 = _372 * _365;
    float _403 = (cbMtdParam._m0[17u].w + dot(vec4(_373, _374, _372 * _368, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _320) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _321) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3188 = isnan(0.0) ? _403 : (isnan(_403) ? 0.0 : max(_403, 0.0));
    float _404 = isnan(1.0) ? _3188 : (isnan(_3188) ? 1.0 : min(_3188, 1.0));
    vec4 _416 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _421 = _416.w;
    float _433 = dot(vec3(_293, _294, _295), vec3(_213, _214, _215));
    float _436 = dot(vec3(_293, _294, _295), vec3(_227, _228, _229));
    float _439 = dot(vec3(_293, _294, _295), vec3(_234, _235, _236));
    float _445 = inversesqrt(dot(vec3(_433, _436, _439), vec3(_433, _436, _439)));
    float _467 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _487 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_433 * cbMtdParam._m0[14u].x) * _445) * _467) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_436 * cbMtdParam._m0[14u].x) * _445) * _467) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _510 = inversesqrt(dot(vec3(_293, _294, _295), vec3(_293, _294, _295)));
    float _511 = _510 * _293;
    float _512 = _510 * _294;
    float _513 = _510 * _295;
    float _514 = dot(vec4(_511, _512, _513, 0.0), vec4(_234, _235, _236, 0.0));
    float _517 = _514 - cbMtdParam._m0[15u].z;
    float _3199 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
    float _524 = exp2(log2(1.0 - (isnan(1.0) ? _3199 : (isnan(_3199) ? 1.0 : min(_3199, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _539 = ((((_416.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _487.x) * cbMtdParam._m0[9u].x) * ((_524 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _544 = ((((_416.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _487.y) * cbMtdParam._m0[9u].y) * ((_524 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _549 = ((((_416.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _487.z) * cbMtdParam._m0[9u].z) * ((_524 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _556 = ((cbMtdParam._m0[11u].x - _539) * _404) + _539;
    float _557 = ((cbMtdParam._m0[11u].y - _544) * _404) + _544;
    float _558 = ((cbMtdParam._m0[11u].z - _549) * _404) + _549;
    vec4 _570 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _320) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _321) + cbTextureTilingScale._m0[9u].w));
    float _577 = (_570.x * 2.0) + (-1.0);
    float _578 = (_570.y * 2.0) + (-1.0);
    float _579 = dot(vec2(_577, _578), vec2(_577, _578));
    float _3215 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _591 = (cbMtdParam._m0[16u].y + _341.z) + cbMtdParam._m0[17u].z;
    float _594 = ((_570.z - _591) * _404) + _591;
    float _604 = ((sqrt(1.0 - (isnan(1.0) ? _3215 : (isnan(_3215) ? 1.0 : min(_3215, 1.0)))) - _359) * _404) + _359;
    float _607 = (((_577 - _350) * _404) + _350) + (cbMtdParam._m0[14u].z * _350);
    float _608 = (((_578 - _352) * _404) + _352) + (cbMtdParam._m0[14u].z * _352);
    vec4 _620 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _624 = cbMtdParam._m0[16u].w * _620.x;
    float _626 = _624 - (_624 * _404);
    float _646 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _373));
    float _647 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _374));
    float _654 = isnan(cbInstanceData._m0[8u].x) ? _646 : (isnan(_646) ? cbInstanceData._m0[8u].x : max(_646, cbInstanceData._m0[8u].x));
    float _655 = isnan(cbInstanceData._m0[8u].y) ? _647 : (isnan(_647) ? cbInstanceData._m0[8u].y : max(_647, cbInstanceData._m0[8u].y));
    vec4 _659 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _654 : (isnan(_654) ? cbInstanceData._m0[8u].z : min(_654, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _655 : (isnan(_655) ? cbInstanceData._m0[8u].w : min(_655, cbInstanceData._m0[8u].w))));
    float _692 = _514 - cbMtdParam._m0[15u].x;
    float _3246 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    float _702 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3246 : (isnan(_3246) ? 1.0 : min(_3246, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3262 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _703 = isnan(1.0) ? _3262 : (isnan(_3262) ? 1.0 : min(_3262, 1.0));
    float _705 = _703 - (_703 * _404);
    float _709 = fma(_604, _234, fma(_608, _227, _607 * _213));
    float _712 = fma(_604, _235, fma(_608, _228, _607 * _214));
    float _715 = fma(_604, _236, fma(_608, _229, _607 * _215));
    float _719 = inversesqrt(dot(vec3(_709, _712, _715), vec3(_709, _712, _715)));
    float _720 = _719 * _709;
    float _721 = _719 * _712;
    float _722 = _719 * _715;
    float _3273 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _723 = isnan(1.0) ? _3273 : (isnan(_3273) ? 1.0 : min(_3273, 1.0));
    float _3284 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _724 = isnan(1.0) ? _3284 : (isnan(_3284) ? 1.0 : min(_3284, 1.0));
    float _725 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
    float _3300 = isnan(0.0) ? _556 : (isnan(_556) ? 0.0 : max(_556, 0.0));
    float _3311 = isnan(0.0) ? _557 : (isnan(_557) ? 0.0 : max(_557, 0.0));
    float _3322 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
    float _742 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _747 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _749 = _747.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _904 = sqrt(((_293 * _293) + (_294 * _294)) + (_295 * _295));
        float _910 = (cbMatDynParam._m0[5u].x * _904) + cbMatDynParam._m0[5u].y;
        float _3333 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
        float _911 = isnan(1.0) ? _3333 : (isnan(_3333) ? 1.0 : min(_3333, 1.0));
        float _915 = (cbMatDynParam._m0[5u].z * _904) + cbMatDynParam._m0[5u].w;
        float _3344 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3344 : (isnan(_3344) ? 1.0 : min(_3344, 1.0))) - _911)) + _911) < ((_749 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _759 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _760 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _778 = fma(_722, cbSceneParam._m0[5u].z, fma(_721, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _720));
    float _781 = fma(_722, cbSceneParam._m0[6u].z, fma(_721, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _720));
    float _784 = fma(_722, cbSceneParam._m0[7u].z, fma(_721, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _720));
    uint _797 = _301 + 9u;
    uint _798 = _797 + uint(cbMatDynParam._m0[0u].w);
    float _804 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3300 : (isnan(_3300) ? 1.0 : min(_3300, 1.0)))) * cbInstanceData._m0[_798].x;
    float _805 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3311 : (isnan(_3311) ? 1.0 : min(_3311, 1.0)))) * cbInstanceData._m0[_798].y;
    float _806 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3322 : (isnan(_3322) ? 1.0 : min(_3322, 1.0)))) * cbInstanceData._m0[_798].z;
    float _3355 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
    float _807 = isnan(1.0) ? _3355 : (isnan(_3355) ? 1.0 : min(_3355, 1.0));
    float _3366 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _808 = isnan(1.0) ? _3366 : (isnan(_3366) ? 1.0 : min(_3366, 1.0));
    float _3377 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _809 = isnan(1.0) ? _3377 : (isnan(_3377) ? 1.0 : min(_3377, 1.0));
    vec4 _817 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _759, cbSceneParam._m0[86u].y * _760));
    float _820 = _817.x * TEXCOORD_5.w;
    float _821 = dot(vec3(_720, _721, _722), vec3(_511, _512, _513));
    float _824 = _821 * 2.0;
    float _828 = (_824 * _720) - _511;
    float _829 = (_824 * _721) - _512;
    float _830 = (_824 * _722) - _513;
    float _831 = dot(vec3(_511, _512, _513), vec3(_720, _721, _722));
    float _834 = abs(_831);
    float _3388 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _835 = isnan(1.0) ? _3388 : (isnan(_3388) ? 1.0 : min(_3388, 1.0));
    float _841 = sqrt(_724);
    float _853 = exp2((_841 * 5.0) * log2(1.0 - (_835 * 0.999000012874603271484375))) / (4.0 - (_841 * 3.0));
    float _885 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _889 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _893 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1224;
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    float _1239;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _949 = fma(_893, cbModelParam._m0[26u].z, fma(_889, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _885));
        float _953 = fma(_893, cbModelParam._m0[27u].z, fma(_889, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _885));
        float _957 = fma(_893, cbModelParam._m0[28u].z, fma(_889, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _885));
        float _982 = _885 + _720;
        float _983 = _889 + _721;
        float _984 = _893 + _722;
        float _994 = fma(_984, cbModelParam._m0[26u].z, fma(_983, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _982)) - _949;
        float _995 = fma(_984, cbModelParam._m0[27u].z, fma(_983, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _982)) - _953;
        float _996 = fma(_984, cbModelParam._m0[28u].z, fma(_983, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _982)) - _957;
        float _1000 = inversesqrt(dot(vec3(_994, _995, _996), vec3(_994, _995, _996)));
        float _1013 = ((_1000 * _994) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_949 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1014 = ((_1000 * _995) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_953 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1015 = ((_1000 * _996) / cbModelParam._m0[34u].z) + ((((((_957 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1018 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1013, _1014, _1015), 0.0);
        vec4 _1025 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1013, _1014, _1015), 0.0);
        vec4 _1032 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1013, _1014, _1015), 0.0);
        vec4 _1039 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1013, _1014, _1015), 0.0);
        float _1052 = exp2((_1018.w + (-0.5)) * 20.0) * 2.0;
        float _1053 = _1052 * (_1018.x + (-0.5));
        float _1054 = _1052 * (_1018.y + (-0.5));
        float _1055 = _1052 * (_1018.z + (-0.5));
        float _1062 = exp2((_1025.w + (-0.5)) * 20.0) * 2.0;
        float _1063 = _1062 * (_1025.x + (-0.5));
        float _1064 = _1062 * (_1025.y + (-0.5));
        float _1065 = _1062 * (_1025.z + (-0.5));
        float _1072 = exp2((_1032.w + (-0.5)) * 20.0) * 2.0;
        float _1073 = _1072 * (_1032.x + (-0.5));
        float _1074 = _1072 * (_1032.y + (-0.5));
        float _1075 = _1072 * (_1032.z + (-0.5));
        float _1082 = exp2((_1039.w + (-0.5)) * 20.0) * 2.0;
        float _1083 = _1082 * (_1039.x + (-0.5));
        float _1084 = _1082 * (_1039.y + (-0.5));
        float _1085 = _1082 * (_1039.z + (-0.5));
        float _1086 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
        float _1087 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
        float _1088 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1089 = _1053 * 0.5;
        float _1090 = _1063 * 0.5;
        float _1091 = _1073 * 0.5;
        float _1092 = dot(vec3(_1089, _1090, _1091), vec3(_1089, _1090, _1091));
        float _1097 = (_1092 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1092);
        float _1106 = (dot(vec3(_720, _721, _722), vec3(_1097 * _1089, _1097 * _1090, _1097 * _1091)) + 1.0) * 0.5;
        float _3414 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
        float _1116 = sqrt(((_1090 * _1090) + (_1089 * _1089)) + (_1091 * _1091)) / (_1086 + 9.9999997473787516355514526367188e-06);
        float _3425 = isnan(0.0) ? _1116 : (isnan(_1116) ? 0.0 : max(_1116, 0.0));
        float _1117 = isnan(1.0) ? _3425 : (isnan(_3425) ? 1.0 : min(_3425, 1.0));
        float _1118 = _1117 * 2.0;
        float _1122 = (1.0 - _1117) / (_1117 + 1.0);
        float _3436 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
        float _1123 = isnan(1.0) ? _3436 : (isnan(_3436) ? 1.0 : min(_3436, 1.0));
        float _1132 = ((((1.0 - _1123) * (_1118 + 2.0)) * exp2(log2(isnan(1.0) ? _3414 : (isnan(_3414) ? 1.0 : min(_3414, 1.0))) * (_1118 + 1.0))) + _1123) * _1086;
        float _1133 = _1054 * 0.5;
        float _1134 = _1064 * 0.5;
        float _1135 = _1074 * 0.5;
        float _1136 = dot(vec3(_1133, _1134, _1135), vec3(_1133, _1134, _1135));
        float _1141 = (_1136 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1136);
        float _1149 = (dot(vec3(_720, _721, _722), vec3(_1141 * _1133, _1141 * _1134, _1141 * _1135)) + 1.0) * 0.5;
        float _3447 = isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0));
        float _1158 = sqrt(((_1134 * _1134) + (_1133 * _1133)) + (_1135 * _1135)) / (_1087 + 9.9999997473787516355514526367188e-06);
        float _3458 = isnan(0.0) ? _1158 : (isnan(_1158) ? 0.0 : max(_1158, 0.0));
        float _1159 = isnan(1.0) ? _3458 : (isnan(_3458) ? 1.0 : min(_3458, 1.0));
        float _1160 = _1159 * 2.0;
        float _1164 = (1.0 - _1159) / (_1159 + 1.0);
        float _3469 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1165 = isnan(1.0) ? _3469 : (isnan(_3469) ? 1.0 : min(_3469, 1.0));
        float _1174 = ((((1.0 - _1165) * (_1160 + 2.0)) * exp2(log2(isnan(1.0) ? _3447 : (isnan(_3447) ? 1.0 : min(_3447, 1.0))) * (_1160 + 1.0))) + _1165) * _1087;
        float _1175 = _1055 * 0.5;
        float _1176 = _1065 * 0.5;
        float _1177 = _1075 * 0.5;
        float _1178 = dot(vec3(_1175, _1176, _1177), vec3(_1175, _1176, _1177));
        float _1183 = (_1178 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1178);
        float _1191 = (dot(vec3(_720, _721, _722), vec3(_1183 * _1175, _1183 * _1176, _1183 * _1177)) + 1.0) * 0.5;
        float _3480 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
        float _1200 = sqrt(((_1176 * _1176) + (_1175 * _1175)) + (_1177 * _1177)) / (_1088 + 9.9999997473787516355514526367188e-06);
        float _3491 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
        float _1201 = isnan(1.0) ? _3491 : (isnan(_3491) ? 1.0 : min(_3491, 1.0));
        float _1202 = _1201 * 2.0;
        float _1206 = (1.0 - _1201) / (_1201 + 1.0);
        float _3502 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
        float _1207 = isnan(1.0) ? _3502 : (isnan(_3502) ? 1.0 : min(_3502, 1.0));
        float _1216 = ((((1.0 - _1207) * (_1202 + 2.0)) * exp2(log2(isnan(1.0) ? _3480 : (isnan(_3480) ? 1.0 : min(_3480, 1.0))) * (_1202 + 1.0))) + _1207) * _1088;
        _1224 = _1055;
        _1226 = _1054;
        _1227 = _1053;
        _1228 = _1065;
        _1229 = _1064;
        _1230 = _1063;
        _1231 = _1075;
        _1232 = _1074;
        _1233 = _1073;
        _1234 = _1088;
        _1235 = _1087;
        _1236 = _1086;
        _1237 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0)));
        _1238 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0)));
        _1239 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0)));
    }
    else
    {
        _1224 = _1225;
        _1226 = _1225;
        _1227 = _1225;
        _1228 = _1225;
        _1229 = _1225;
        _1230 = _1225;
        _1231 = _1225;
        _1232 = _1225;
        _1233 = _1225;
        _1234 = _1225;
        _1235 = _1225;
        _1236 = _1225;
        _1237 = 0.0;
        _1238 = 0.0;
        _1239 = 0.0;
    }
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    float _1551;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1268 = fma(_893, cbModelParam._m0[30u].z, fma(_889, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _885));
        float _1272 = fma(_893, cbModelParam._m0[31u].z, fma(_889, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _885));
        float _1276 = fma(_893, cbModelParam._m0[32u].z, fma(_889, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _885));
        float _1299 = _885 + _720;
        float _1300 = _889 + _721;
        float _1301 = _893 + _722;
        float _1311 = fma(_1301, cbModelParam._m0[30u].z, fma(_1300, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1299)) - _1268;
        float _1312 = fma(_1301, cbModelParam._m0[31u].z, fma(_1300, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1299)) - _1272;
        float _1313 = fma(_1301, cbModelParam._m0[32u].z, fma(_1300, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1299)) - _1276;
        float _1317 = inversesqrt(dot(vec3(_1311, _1312, _1313), vec3(_1311, _1312, _1313)));
        float _1330 = ((_1317 * _1311) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1268 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1331 = ((_1317 * _1312) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1272 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1332 = ((_1317 * _1313) / cbModelParam._m0[35u].z) + ((((((_1276 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1334 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        vec4 _1341 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        vec4 _1348 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        vec4 _1355 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        float _1367 = exp2((_1334.w + (-0.5)) * 20.0) * 2.0;
        float _1368 = _1367 * (_1334.x + (-0.5));
        float _1369 = _1367 * (_1334.y + (-0.5));
        float _1370 = _1367 * (_1334.z + (-0.5));
        float _1377 = exp2((_1341.w + (-0.5)) * 20.0) * 2.0;
        float _1378 = _1377 * (_1341.x + (-0.5));
        float _1379 = _1377 * (_1341.y + (-0.5));
        float _1380 = _1377 * (_1341.z + (-0.5));
        float _1387 = exp2((_1348.w + (-0.5)) * 20.0) * 2.0;
        float _1388 = _1387 * (_1348.x + (-0.5));
        float _1389 = _1387 * (_1348.y + (-0.5));
        float _1390 = _1387 * (_1348.z + (-0.5));
        float _1397 = exp2((_1355.w + (-0.5)) * 20.0) * 2.0;
        float _1398 = _1397 * (_1355.x + (-0.5));
        float _1399 = _1397 * (_1355.y + (-0.5));
        float _1400 = _1397 * (_1355.z + (-0.5));
        float _1401 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1402 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1403 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1404 = _1368 * 0.5;
        float _1405 = _1378 * 0.5;
        float _1406 = _1388 * 0.5;
        float _1407 = dot(vec3(_1404, _1405, _1406), vec3(_1404, _1405, _1406));
        float _1412 = (_1407 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1407);
        float _1420 = (dot(vec3(_720, _721, _722), vec3(_1412 * _1404, _1412 * _1405, _1412 * _1406)) + 1.0) * 0.5;
        float _3543 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1429 = sqrt(((_1405 * _1405) + (_1404 * _1404)) + (_1406 * _1406)) / (_1401 + 9.9999997473787516355514526367188e-06);
        float _3554 = isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0));
        float _1430 = isnan(1.0) ? _3554 : (isnan(_3554) ? 1.0 : min(_3554, 1.0));
        float _1431 = _1430 * 2.0;
        float _1435 = (1.0 - _1430) / (_1430 + 1.0);
        float _3565 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1436 = isnan(1.0) ? _3565 : (isnan(_3565) ? 1.0 : min(_3565, 1.0));
        float _1445 = ((((1.0 - _1436) * (_1431 + 2.0)) * exp2(log2(isnan(1.0) ? _3543 : (isnan(_3543) ? 1.0 : min(_3543, 1.0))) * (_1431 + 1.0))) + _1436) * _1401;
        float _1446 = _1369 * 0.5;
        float _1447 = _1379 * 0.5;
        float _1448 = _1389 * 0.5;
        float _1449 = dot(vec3(_1446, _1447, _1448), vec3(_1446, _1447, _1448));
        float _1454 = (_1449 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1449);
        float _1462 = (dot(vec3(_720, _721, _722), vec3(_1454 * _1446, _1454 * _1447, _1454 * _1448)) + 1.0) * 0.5;
        float _3576 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
        float _1471 = sqrt(((_1447 * _1447) + (_1446 * _1446)) + (_1448 * _1448)) / (_1402 + 9.9999997473787516355514526367188e-06);
        float _3587 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
        float _1472 = isnan(1.0) ? _3587 : (isnan(_3587) ? 1.0 : min(_3587, 1.0));
        float _1473 = _1472 * 2.0;
        float _1477 = (1.0 - _1472) / (_1472 + 1.0);
        float _3598 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1478 = isnan(1.0) ? _3598 : (isnan(_3598) ? 1.0 : min(_3598, 1.0));
        float _1487 = ((((1.0 - _1478) * (_1473 + 2.0)) * exp2(log2(isnan(1.0) ? _3576 : (isnan(_3576) ? 1.0 : min(_3576, 1.0))) * (_1473 + 1.0))) + _1478) * _1402;
        float _1488 = _1370 * 0.5;
        float _1489 = _1380 * 0.5;
        float _1490 = _1390 * 0.5;
        float _1491 = dot(vec3(_1488, _1489, _1490), vec3(_1488, _1489, _1490));
        float _1496 = (_1491 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1491);
        float _1504 = (dot(vec3(_720, _721, _722), vec3(_1496 * _1488, _1496 * _1489, _1496 * _1490)) + 1.0) * 0.5;
        float _3609 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
        float _1513 = sqrt(((_1489 * _1489) + (_1488 * _1488)) + (_1490 * _1490)) / (_1403 + 9.9999997473787516355514526367188e-06);
        float _3620 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
        float _1514 = isnan(1.0) ? _3620 : (isnan(_3620) ? 1.0 : min(_3620, 1.0));
        float _1515 = _1514 * 2.0;
        float _1519 = (1.0 - _1514) / (_1514 + 1.0);
        float _3631 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
        float _1520 = isnan(1.0) ? _3631 : (isnan(_3631) ? 1.0 : min(_3631, 1.0));
        float _1529 = ((((1.0 - _1520) * (_1515 + 2.0)) * exp2(log2(isnan(1.0) ? _3609 : (isnan(_3609) ? 1.0 : min(_3609, 1.0))) * (_1515 + 1.0))) + _1520) * _1403;
        _1537 = _1370;
        _1538 = _1369;
        _1539 = _1368;
        _1540 = _1380;
        _1541 = _1379;
        _1542 = _1378;
        _1543 = _1390;
        _1544 = _1389;
        _1545 = _1388;
        _1546 = _1403;
        _1547 = _1402;
        _1548 = _1401;
        _1549 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0)));
        _1550 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0)));
        _1551 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0)));
    }
    else
    {
        _1537 = _1225;
        _1538 = _1225;
        _1539 = _1225;
        _1540 = _1225;
        _1541 = _1225;
        _1542 = _1225;
        _1543 = _1225;
        _1544 = _1225;
        _1545 = _1225;
        _1546 = _1225;
        _1547 = _1225;
        _1548 = _1225;
        _1549 = 0.0;
        _1550 = 0.0;
        _1551 = 0.0;
    }
    float _1561 = (cbModelParam._m0[1u].x * (_1549 - _1237)) + _1237;
    float _1562 = (cbModelParam._m0[1u].x * (_1550 - _1238)) + _1238;
    float _1563 = (cbModelParam._m0[1u].x * (_1551 - _1239)) + _1239;
    float _1584 = fma(_1563, cbSceneParam._m0[89u].z, fma(_1562, cbSceneParam._m0[89u].y, _1561 * cbSceneParam._m0[89u].x));
    float _1587 = fma(_1563, cbSceneParam._m0[90u].z, fma(_1562, cbSceneParam._m0[90u].y, _1561 * cbSceneParam._m0[90u].x));
    float _1590 = fma(_1563, cbSceneParam._m0[91u].z, fma(_1562, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1561));
    float _1605 = _828 * 0.5;
    float _1606 = _829 * 0.5;
    float _1607 = _830 * 0.5;
    float _1608 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1539, _1542, _1545, _1548));
    float _1611 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1538, _1541, _1544, _1547));
    float _1614 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1537, _1540, _1543, _1546));
    float _1648;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1621 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1224, _1228, _1231, _1234));
        float _1625 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1226, _1229, _1232, _1235));
        float _1629 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1227, _1230, _1233, _1236));
        float _1636 = dot(vec4(cbModelParam._m0[39u]), vec4(_1605, _1606, _1607, 1.0));
        _1648 = dot(vec3(isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0)), isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0)), isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1636) ? 0.0 : (isnan(0.0) ? _1636 : max(0.0, _1636))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1648 = 1.0;
    }
    float _1659;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1650 = dot(vec4(cbModelParam._m0[40u]), vec4(_1605, _1606, _1607, 1.0));
        _1659 = dot(vec3(isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0)), isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0)), isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1650) ? 0.0 : (isnan(0.0) ? _1650 : max(0.0, _1650))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1659 = 1.0;
    }
    float _1663 = (_1659 * cbModelParam._m0[1u].x) + (_1648 * (1.0 - cbModelParam._m0[1u].x));
    float _1673 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _724);
    float _1674 = isnan(_1673) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1673 : min(cbModelParam._m0[25u].z, _1673));
    float _1754;
    float _1756;
    float _1758;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1721 = fma(_893, cbModelParam._m0[13u].z, fma(_889, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _885)) + cbModelParam._m0[13u].w;
        float _1725 = fma(_893, cbModelParam._m0[14u].z, fma(_889, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _885)) + cbModelParam._m0[14u].w;
        float _1729 = fma(_893, cbModelParam._m0[15u].z, fma(_889, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _885)) + cbModelParam._m0[15u].w;
        float _1732 = fma(_830, cbModelParam._m0[13u].z, fma(_829, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _828));
        float _1735 = fma(_830, cbModelParam._m0[14u].z, fma(_829, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _828));
        float _1738 = fma(_830, cbModelParam._m0[15u].z, fma(_829, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _828));
        float _1766;
        if (_1732 > 0.0)
        {
            _1766 = abs((1.0 - _1721) / _1732);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1732 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1721 + 1.0) / _1732);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1766 = frontier_phi_19_17_ladder;
        }
        float _1937;
        if (_1735 > 0.0)
        {
            _1937 = abs((1.0 - _1725) / _1735);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1735 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1725 + 1.0) / _1735);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1937 = frontier_phi_28_24_ladder;
        }
        float _2172;
        if (_1738 > 0.0)
        {
            _2172 = abs((1.0 - _1729) / _1738);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1738 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1729 + 1.0) / _1738);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2172 = frontier_phi_39_35_ladder;
        }
        float _2174 = isnan(_1937) ? _1766 : (isnan(_1766) ? _1937 : min(_1766, _1937));
        float _2175 = isnan(_2172) ? _2174 : (isnan(_2174) ? _2172 : min(_2174, _2172));
        float _2179 = (_2175 * _1732) + _1721;
        float _2180 = (_2175 * _1735) + _1725;
        float _2181 = (_2175 * _1738) + _1729;
        float _2182 = _2175 * 9.9999997473787516355514526367188e-05;
        float _2184 = (-1.0) - _2182;
        float _2186 = _2182 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2181 > _2186) || ((_2181 < _2184) || ((_2180 > _2186) || ((_2180 < _2184) || ((_2179 < _2184) || (_2179 > _2186))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2331 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2181, cbModelParam._m0[9u].z, fma(_2180, cbModelParam._m0[9u].y, _2179 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2181, cbModelParam._m0[10u].z, fma(_2180, cbModelParam._m0[10u].y, _2179 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2181, cbModelParam._m0[11u].z, fma(_2180, cbModelParam._m0[11u].y, _2179 * cbModelParam._m0[11u].x))), _1674);
            frontier_phi_18_39_ladder = _2331.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2331.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2331.x * cbModelParam._m0[1u].y;
        }
        _1754 = frontier_phi_18_39_ladder_2;
        _1756 = frontier_phi_18_39_ladder_1;
        _1758 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1742 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_828, _829, _830), _1674);
        _1754 = _1742.x * cbModelParam._m0[1u].y;
        _1756 = _1742.y * cbModelParam._m0[1u].y;
        _1758 = _1742.z * cbModelParam._m0[1u].y;
    }
    float _1762 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _724);
    float _1763 = isnan(_1762) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1762 : min(cbModelParam._m0[25u].w, _1762));
    float _1854;
    float _1856;
    float _1858;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1818 = fma(_893, cbModelParam._m0[21u].z, fma(_889, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _885)) + cbModelParam._m0[21u].w;
        float _1822 = fma(_893, cbModelParam._m0[22u].z, fma(_889, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _885)) + cbModelParam._m0[22u].w;
        float _1826 = fma(_893, cbModelParam._m0[23u].z, fma(_889, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _885)) + cbModelParam._m0[23u].w;
        float _1829 = fma(_830, cbModelParam._m0[21u].z, fma(_829, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _828));
        float _1832 = fma(_830, cbModelParam._m0[22u].z, fma(_829, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _828));
        float _1835 = fma(_830, cbModelParam._m0[23u].z, fma(_829, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _828));
        float _1942;
        if (_1829 > 0.0)
        {
            _1942 = abs((1.0 - _1818) / _1829);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1829 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1818 + 1.0) / _1829);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1942 = frontier_phi_30_26_ladder;
        }
        float _2199;
        if (_1832 > 0.0)
        {
            _2199 = abs((1.0 - _1822) / _1832);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1832 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1822 + 1.0) / _1832);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2199 = frontier_phi_41_37_ladder;
        }
        float _2503;
        if (_1835 > 0.0)
        {
            _2503 = abs((1.0 - _1826) / _1835);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1835 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1826 + 1.0) / _1835);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2503 = frontier_phi_52_47_ladder;
        }
        float _2505 = isnan(_2199) ? _1942 : (isnan(_1942) ? _2199 : min(_1942, _2199));
        float _2506 = isnan(_2503) ? _2505 : (isnan(_2505) ? _2503 : min(_2505, _2503));
        float _2510 = (_2506 * _1829) + _1818;
        float _2511 = (_2506 * _1832) + _1822;
        float _2512 = (_2506 * _1835) + _1826;
        float _2513 = _2506 * 9.9999997473787516355514526367188e-05;
        float _2514 = (-1.0) - _2513;
        float _2516 = _2513 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2512 > _2516) || ((_2512 < _2514) || ((_2511 > _2516) || ((_2511 < _2514) || ((_2510 < _2514) || (_2510 > _2516))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2693 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2512, cbModelParam._m0[17u].z, fma(_2511, cbModelParam._m0[17u].y, _2510 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2512, cbModelParam._m0[18u].z, fma(_2511, cbModelParam._m0[18u].y, _2510 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2512, cbModelParam._m0[19u].z, fma(_2511, cbModelParam._m0[19u].y, _2510 * cbModelParam._m0[19u].x))), _1763);
            frontier_phi_27_52_ladder = _2693.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2693.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2693.y * cbModelParam._m0[1u].z;
        }
        _1854 = frontier_phi_27_52_ladder_1;
        _1856 = frontier_phi_27_52_ladder_2;
        _1858 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1838 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_828, _829, _830), _1763);
        _1854 = _1838.x * cbModelParam._m0[1u].z;
        _1856 = _1838.y * cbModelParam._m0[1u].z;
        _1858 = _1838.z * cbModelParam._m0[1u].z;
    }
    float _1870 = ((((1.0 - _853) * ((_841 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_853 * _841)) * _820;
    float _1871 = _1870 * ((cbModelParam._m0[1u].w * (_1854 - _1754)) + _1754);
    float _1872 = _1870 * ((cbModelParam._m0[1u].w * (_1856 - _1756)) + _1756);
    float _1873 = _1870 * ((cbModelParam._m0[1u].w * (_1858 - _1758)) + _1758);
    float _1876 = fma(_1873, cbSceneParam._m0[89u].z, fma(_1872, cbSceneParam._m0[89u].y, _1871 * cbSceneParam._m0[89u].x));
    float _1879 = fma(_1873, cbSceneParam._m0[90u].z, fma(_1872, cbSceneParam._m0[90u].y, _1871 * cbSceneParam._m0[90u].x));
    float _1882 = fma(_1873, cbSceneParam._m0[91u].z, fma(_1872, cbSceneParam._m0[91u].y, _1871 * cbSceneParam._m0[91u].x));
    uvec4 _1892 = floatBitsToUint(cbInstanceData._m0[_301 + 5u]);
    uint _1894 = _1892.x * 14u;
    uint _1895 = _1894 + 13u;
    float _1900 = _820 + (-1.0);
    float _1903 = (cbLight._m0[_1895].x * _1900) + 1.0;
    float _1904 = (cbLight._m0[_1895].y * _1900) + 1.0;
    uint _1906 = _1894 + 4u;
    float _1917 = dot(vec3(cbLight._m0[_1894].xyz), vec3(_720, _721, _722));
    float _1920 = isnan(1.0) ? _1903 : (isnan(_1903) ? 1.0 : min(_1903, 1.0));
    uint _1921 = _1894 + 5u;
    uint _1927 = _1894 | 1u;
    float _1933 = dot(vec3(cbLight._m0[_1927].xyz), vec3(_720, _721, _722));
    float _1936 = isnan(1.0) ? _1904 : (isnan(_1904) ? 1.0 : min(_1904, 1.0));
    float _2001;
    float _2002;
    float _2003;
    if (_725 == 0.0)
    {
        float _3767 = isnan(0.0) ? _1917 : (isnan(_1917) ? 0.0 : max(_1917, 0.0));
        float _3778 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
        float _1955 = (isnan(1.0) ? _3767 : (isnan(_3767) ? 1.0 : min(_3767, 1.0))) * 0.3183098733425140380859375;
        float _1957 = (isnan(1.0) ? _3778 : (isnan(_3778) ? 1.0 : min(_3778, 1.0))) * 0.3183098733425140380859375;
        _2001 = ((cbLight._m0[_1921].x * _1936) * _1957) + ((cbLight._m0[_1906].x * _1920) * _1955);
        _2002 = ((_1936 * cbLight._m0[_1921].y) * _1957) + ((_1920 * cbLight._m0[_1906].y) * _1955);
        _2003 = ((_1936 * cbLight._m0[_1921].z) * _1957) + ((_1920 * cbLight._m0[_1906].z) * _1955);
    }
    else
    {
        float _1967 = _1917 + _725;
        float _1970 = (_725 * 2.0) + 1.0;
        float _1971 = (isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0))) / _1970;
        float _1978 = _1933 + _725;
        float _1980 = (isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : max(_1978, 0.0))) / _1970;
        _2001 = (((_1980 * cbLight._m0[_1921].x) * _1936) + ((_1971 * cbLight._m0[_1906].x) * _1920)) * 0.3183098733425140380859375;
        _2002 = (((_1980 * cbLight._m0[_1921].y) * _1936) + ((_1971 * cbLight._m0[_1906].y) * _1920)) * 0.3183098733425140380859375;
        _2003 = (((_1980 * cbLight._m0[_1921].z) * _1936) + ((_1971 * cbLight._m0[_1906].z) * _1920)) * 0.3183098733425140380859375;
    }
    uint _2007 = _1894 + 8u;
    float _2023 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1894].w)) * _724) * 0.949999988079071044921875);
    float _2024 = _2023 * _2023;
    float _2025 = cbLight._m0[_1894].x + _511;
    float _2026 = cbLight._m0[_1894].y + _512;
    float _2027 = cbLight._m0[_1894].z + _513;
    float _2031 = inversesqrt(dot(vec3(_2025, _2026, _2027), vec3(_2025, _2026, _2027)));
    float _2032 = _2031 * _2025;
    float _2033 = _2031 * _2026;
    float _2034 = _2031 * _2027;
    float _2035 = dot(vec3(_720, _721, _722), vec3(cbLight._m0[_1894].xyz));
    float _3799 = isnan(0.0) ? _2035 : (isnan(_2035) ? 0.0 : max(_2035, 0.0));
    float _2038 = isnan(1.0) ? _3799 : (isnan(_3799) ? 1.0 : min(_3799, 1.0));
    float _3810 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _2039 = isnan(1.0) ? _3810 : (isnan(_3810) ? 1.0 : min(_3810, 1.0));
    float _2040 = dot(vec3(_720, _721, _722), vec3(_2032, _2033, _2034));
    float _3821 = isnan(0.0) ? _2040 : (isnan(_2040) ? 0.0 : max(_2040, 0.0));
    float _2043 = isnan(1.0) ? _3821 : (isnan(_3821) ? 1.0 : min(_3821, 1.0));
    float _2044 = dot(vec3(cbLight._m0[_1894].xyz), vec3(_2032, _2033, _2034));
    float _3832 = isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0));
    float _2048 = _2024 * _2024;
    float _2052 = ((_2043 * _2043) * (_2048 + (-1.0))) + 1.0;
    float _2063 = (exp2(log2(1.0 - (isnan(1.0) ? _3832 : (isnan(_3832) ? 1.0 : min(_3832, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2064 = 1.0 - _2024;
    float _2075 = (0.5 / (((_2039 * ((_2038 * _2064) + _2024)) + 9.9999999392252902907785028219223e-09) + (((_2039 * _2064) + _2024) * _2038))) * _2038;
    float _3843 = isnan(0.0) ? _2075 : (isnan(_2075) ? 0.0 : max(_2075, 0.0));
    float _2077 = (isnan(1.0) ? _3843 : (isnan(_3843) ? 1.0 : min(_3843, 1.0))) * (_2048 / ((_2052 * _2052) * 3.141590118408203125));
    uint _2090 = _1894 + 9u;
    float _2104 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1927].w)) * _724) * 0.949999988079071044921875);
    float _2105 = _2104 * _2104;
    float _2106 = cbLight._m0[_1927].x + _511;
    float _2107 = cbLight._m0[_1927].y + _512;
    float _2108 = cbLight._m0[_1927].z + _513;
    float _2112 = inversesqrt(dot(vec3(_2106, _2107, _2108), vec3(_2106, _2107, _2108)));
    float _2113 = _2112 * _2106;
    float _2114 = _2112 * _2107;
    float _2115 = _2112 * _2108;
    float _2116 = dot(vec3(_720, _721, _722), vec3(cbLight._m0[_1927].xyz));
    float _3854 = isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0));
    float _2119 = isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0));
    float _2120 = dot(vec3(_720, _721, _722), vec3(_2113, _2114, _2115));
    float _3865 = isnan(0.0) ? _2120 : (isnan(_2120) ? 0.0 : max(_2120, 0.0));
    float _2123 = isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0));
    float _2124 = dot(vec3(cbLight._m0[_1927].xyz), vec3(_2113, _2114, _2115));
    float _3876 = isnan(0.0) ? _2124 : (isnan(_2124) ? 0.0 : max(_2124, 0.0));
    float _2128 = _2105 * _2105;
    float _2132 = ((_2123 * _2123) * (_2128 + (-1.0))) + 1.0;
    float _2141 = (exp2(log2(1.0 - (isnan(1.0) ? _3876 : (isnan(_3876) ? 1.0 : min(_3876, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2142 = 1.0 - _2105;
    float _2152 = (0.5 / (((_2039 * ((_2119 * _2142) + _2105)) + 9.9999999392252902907785028219223e-09) + (((_2039 * _2142) + _2105) * _2119))) * _2119;
    float _3887 = isnan(0.0) ? _2152 : (isnan(_2152) ? 0.0 : max(_2152, 0.0));
    float _2154 = (isnan(1.0) ? _3887 : (isnan(_3887) ? 1.0 : min(_3887, 1.0))) * (_2128 / ((_2132 * _2132) * 3.141590118408203125));
    float _2164 = (((_2141 * cbLight._m0[_2090].x) * _2154) * _1936) + (((_2063 * cbLight._m0[_2007].x) * _2077) * _1920);
    float _2165 = (((_2141 * cbLight._m0[_2090].y) * _2154) * _1936) + (((_2063 * cbLight._m0[_2007].y) * _2077) * _1920);
    float _2166 = (((_2141 * cbLight._m0[_2090].z) * _2154) * _1936) + (((_2063 * cbLight._m0[_2007].z) * _2077) * _1920);
    float _2302;
    float _2304;
    float _2306;
    float _2308;
    float _2310;
    float _2312;
    if (_1892.y == 0u)
    {
        float _2243 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2244 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2243;
        float _2245 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2243;
        float _2246 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2243;
        uvec4 _2258 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2259 = _2258.x;
        uint _2270 = uint((float(_2258.y) * floor(float(uint(cbSceneParam._m0[85u].y * _760) / _2259))) + floor(float(uint(cbSceneParam._m0[85u].x * _759) / _2259)));
        float _2280 = (log2(_2246 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2281 = isnan(0.0) ? _2280 : (isnan(_2280) ? 0.0 : max(_2280, 0.0));
        uint _2284 = uint(isnan(14.0) ? _2281 : (isnan(_2281) ? 14.0 : min(_2281, 14.0)));
        uint _2291 = _2258.z;
        float _2340;
        float _2342;
        float _2344;
        float _2346;
        float _2348;
        float _2350;
        if (((((1u << ((_2291 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2284 << 2u) + (_2270 << 6u)) >> 2u)).x) == 0u) || ((_2291 & 240u) == 0u))
        {
            _2340 = 0.0;
            _2342 = 0.0;
            _2344 = 0.0;
            _2346 = 0.0;
            _2348 = 0.0;
            _2350 = 0.0;
        }
        else
        {
            float _2341;
            float _2343;
            float _2345;
            float _2347;
            float _2349;
            float _2351;
            float _2529 = 0.0;
            float _2530 = 0.0;
            float _2531 = 0.0;
            float _2532 = 0.0;
            float _2533 = 0.0;
            float _2534 = 0.0;
            uint _2535 = 0u;
            uint _2544;
            bool _2545;
            for (;;)
            {
                _2544 = texelFetch(g_lightClassification, int((((_2284 << 5u) + (_2270 << 9u)) + (_2535 << 2u)) >> 2u)).x;
                _2545 = _2544 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2545)
                {
                    frontier_phi_58_pred = _2529;
                    frontier_phi_58_pred_1 = _2534;
                    frontier_phi_58_pred_2 = _2533;
                    frontier_phi_58_pred_3 = _2532;
                    frontier_phi_58_pred_4 = _2531;
                    frontier_phi_58_pred_5 = _2530;
                }
                else
                {
                    float _2766;
                    float _2767;
                    float _2768;
                    float _2769;
                    float _2770;
                    float _2771;
                    uint _2772;
                    _2766 = _2529;
                    _2767 = _2530;
                    _2768 = _2531;
                    _2769 = _2532;
                    _2770 = _2533;
                    _2771 = _2534;
                    _2772 = _2544;
                    float _2698;
                    float _2699;
                    float _2700;
                    float _2701;
                    float _2702;
                    float _2703;
                    for (;;)
                    {
                        uint _2776 = uint(findLSB(_2772)) + (_2535 << 5u);
                        uint _2773 = (_2772 + 4294967295u) & _2772;
                        uint _2778 = _2776 * 48u;
                        vec4 _2792 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2778)).x, texelFetch(g_PointLightRenderingBuffer, int(_2778 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2778 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2778 + 3u)).x));
                        uint _2798 = (_2776 * 48u) + 4u;
                        vec4 _2811 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2798)).x, texelFetch(g_PointLightRenderingBuffer, int(_2798 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2798 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2798 + 3u)).x));
                        float _2812 = _2811.x;
                        float _2813 = _2811.y;
                        float _2814 = _2811.z;
                        uint _2817 = (_2776 * 48u) + 8u;
                        vec3 _2828 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2817)).x, texelFetch(g_PointLightRenderingBuffer, int(_2817 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2817 + 2u)).x));
                        uint _2833 = (_2776 * 48u) + 12u;
                        vec2 _2841 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2833)).x, texelFetch(g_PointLightRenderingBuffer, int(_2833 + 1u)).x));
                        float _2847 = inversesqrt(dot(vec3(_2244, _2245, _2246), vec3(_2244, _2245, _2246)));
                        float _2848 = _2847 * _2244;
                        float _2849 = _2847 * _2245;
                        float _2850 = _2847 * _2246;
                        float _2851 = _2792.x - _2244;
                        float _2852 = _2792.y - _2245;
                        float _2853 = _2792.z - _2246;
                        float _2854 = dot(vec3(_2851, _2852, _2853), vec3(_2851, _2852, _2853));
                        float _2857 = inversesqrt(_2854);
                        float _2858 = _2857 * _2851;
                        float _2859 = _2857 * _2852;
                        float _2860 = _2857 * _2853;
                        float _2861 = dot(vec3(_778, _781, _784), vec3(_2858, _2859, _2860));
                        float _2866 = 1.0 - (_2854 * _2792.w);
                        float _3908 = isnan(0.0) ? _2866 : (isnan(_2866) ? 0.0 : max(_2866, 0.0));
                        float _2867 = isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0));
                        float _2868 = sqrt(_2854) * _2811.w;
                        float _2871 = 1.39999997615814208984375 / (_2868 + 1.39999997615814208984375);
                        float _2872 = _2871 * _2871;
                        float _2873 = 1.0 - _2872;
                        float _2875 = (_2873 * _2873) * _725;
                        float _2878 = ((_2873 * _2861) + _2872) + _2875;
                        float _2883 = _2868 * _2868;
                        float _2888 = ((isnan(0.0) ? _2878 : (isnan(_2878) ? 0.0 : max(_2878, 0.0))) * _2867) / (((_2875 * 2.0) + 1.0) * ((_2883 * 0.699999988079071044921875) + 1.0));
                        float _2892 = dot(vec3(_2858, _2859, _2860), vec3(_2848, _2849, _2850));
                        float _3924 = isnan(0.0) ? _2892 : (isnan(_2892) ? 0.0 : max(_2892, 0.0));
                        float _2899 = dot(vec3((-0.0) - _2848, (-0.0) - _2849, (-0.0) - _2850), vec3(_778, _781, _784)) + 1.0;
                        float _2901 = (isnan(0.0) ? _2899 : (isnan(_2899) ? 0.0 : max(_2899, 0.0))) * 0.5;
                        float _2908 = ((_2901 * _2901) * _2841.x) * exp2((_2841.y * 32.0) * log2(isnan(1.0) ? _3924 : (isnan(_3924) ? 1.0 : min(_3924, 1.0))));
                        float _2910 = _725 / (_725 + 1.0);
                        float _2926 = (-0.0) - _2244;
                        float _2927 = (-0.0) - _2245;
                        float _2928 = (-0.0) - _2246;
                        float _2932 = inversesqrt(dot(vec3(_2926, _2927, _2928), vec3(_2926, _2927, _2928)));
                        float _2933 = _2932 * _2926;
                        float _2934 = _2932 * _2927;
                        float _2935 = _2932 * _2928;
                        float _2943 = exp2(log2(1.0 / ((_2883 * 3.5) + 5.0)) * 0.25);
                        float _2944 = 1.0 - _841;
                        float _2951 = sqrt(1.0 - ((1.0 - (_2944 * _2944)) * (1.0 - (_2943 * _2943))));
                        float _2952 = _2951 * _2951;
                        float _2953 = _2952 * _2952;
                        float _2954 = _2933 + _2858;
                        float _2955 = _2934 + _2859;
                        float _2956 = _2935 + _2860;
                        float _2960 = inversesqrt(dot(vec3(_2954, _2955, _2956), vec3(_2954, _2955, _2956)));
                        float _2964 = dot(vec3(_778, _781, _784), vec3(_2933, _2934, _2935));
                        float _3940 = isnan(0.0) ? _2964 : (isnan(_2964) ? 0.0 : max(_2964, 0.0));
                        float _2967 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
                        float _2968 = dot(vec3(_778, _781, _784), vec3(_2960 * _2954, _2960 * _2955, _2960 * _2956));
                        float _3951 = isnan(0.0) ? _2968 : (isnan(_2968) ? 0.0 : max(_2968, 0.0));
                        float _2971 = isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0));
                        float _2975 = ((_2971 * _2971) * (_2953 + (-1.0))) + 1.0;
                        float _2976 = _2871 * _2952;
                        float _2977 = _2976 * _2976;
                        float _2980 = ((1.0 - _2977) * _2861) + _2977;
                        float _3962 = isnan(0.0) ? _2980 : (isnan(_2980) ? 0.0 : max(_2980, 0.0));
                        float _2981 = isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0));
                        float _2982 = 1.0 - _2952;
                        float _2992 = (0.5 / (((_2981 * ((_2967 * _2982) + _2952)) + 9.9999999392252902907785028219223e-09) + (((_2981 * _2982) + _2952) * _2967))) * _2981;
                        float _3973 = isnan(0.0) ? _2992 : (isnan(_2992) ? 0.0 : max(_2992, 0.0));
                        float _3003 = (((_2953 * 3.1415927410125732421875) * (isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0)))) / ((_2975 * _2975) * ((_2883 * 2.1991131305694580078125) + 3.141590118408203125))) * _2867;
                        _2701 = (((((_2812 * 0.3183098733425140380859375) * _2910) * _2908) + _2812) * _2888) + _2769;
                        _2702 = (((((_2813 * 0.3183098733425140380859375) * _2910) * _2908) + _2813) * _2888) + _2770;
                        _2703 = (((((_2814 * 0.3183098733425140380859375) * _2910) * _2908) + _2814) * _2888) + _2771;
                        _2698 = (_3003 * _2828.x) + _2766;
                        _2699 = (_3003 * _2828.y) + _2767;
                        _2700 = (_3003 * _2828.z) + _2768;
                        if (_2773 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2766 = _2698;
                            _2767 = _2699;
                            _2768 = _2700;
                            _2769 = _2701;
                            _2770 = _2702;
                            _2771 = _2703;
                            _2772 = _2773;
                        }
                    }
                    frontier_phi_58_pred = _2698;
                    frontier_phi_58_pred_1 = _2703;
                    frontier_phi_58_pred_2 = _2702;
                    frontier_phi_58_pred_3 = _2701;
                    frontier_phi_58_pred_4 = _2700;
                    frontier_phi_58_pred_5 = _2699;
                }
                _2341 = frontier_phi_58_pred;
                _2351 = frontier_phi_58_pred_1;
                _2349 = frontier_phi_58_pred_2;
                _2347 = frontier_phi_58_pred_3;
                _2345 = frontier_phi_58_pred_4;
                _2343 = frontier_phi_58_pred_5;
                uint _2536 = _2535 + 1u;
                if (_2536 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2529 = _2341;
                    _2530 = _2343;
                    _2531 = _2345;
                    _2532 = _2347;
                    _2533 = _2349;
                    _2534 = _2351;
                    _2535 = _2536;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2340 = _2341;
            _2342 = _2343;
            _2344 = _2345;
            _2346 = _2347;
            _2348 = _2349;
            _2350 = _2351;
        }
        float _2355 = isnan(1.0) ? _820 : (isnan(_820) ? 1.0 : min(_820, 1.0));
        _2302 = (_2355 * _2346) + _2001;
        _2304 = (_2355 * _2348) + _2002;
        _2306 = (_2355 * _2350) + _2003;
        _2308 = ((_2340 * 0.039999999105930328369140625) * _2355) + _2164;
        _2310 = ((_2342 * 0.039999999105930328369140625) * _2355) + _2165;
        _2312 = ((_2344 * 0.039999999105930328369140625) * _2355) + _2166;
    }
    else
    {
        _2302 = _2001;
        _2304 = _2002;
        _2306 = _2003;
        _2308 = _2164;
        _2310 = _2165;
        _2312 = _2166;
    }
    float _2426;
    float _2427;
    float _2428;
    if (_725 > 0.0)
    {
        uint _2362 = _1894 + 4u;
        float _2368 = (-0.0) - _511;
        float _2369 = (-0.0) - _512;
        float _2370 = (-0.0) - _513;
        float _2371 = dot(vec3(cbLight._m0[_1894].xyz), vec3(_2368, _2369, _2370));
        float _3989 = isnan(0.0) ? _2371 : (isnan(_2371) ? 0.0 : max(_2371, 0.0));
        float _2375 = _831 + 1.0;
        float _2377 = (isnan(0.0) ? _2375 : (isnan(_2375) ? 0.0 : max(_2375, 0.0))) * 0.5;
        float _2382 = _2377 * _2377;
        float _2383 = _2382 * exp2(log2(isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0))) * 32.0);
        float _2385 = _725 / (_725 + 1.0);
        float _2386 = isnan(_1903) ? 1.0 : (isnan(1.0) ? _1903 : min(1.0, _1903));
        uint _2396 = _1894 + 5u;
        float _2402 = dot(vec3(cbLight._m0[_1927].xyz), vec3(_2368, _2369, _2370));
        float _4010 = isnan(0.0) ? _2402 : (isnan(_2402) ? 0.0 : max(_2402, 0.0));
        float _2409 = _2382 * exp2(log2(isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0))) * 32.0);
        float _2410 = isnan(_1904) ? 1.0 : (isnan(1.0) ? _1904 : min(1.0, _1904));
        _2426 = ((((_2409 * cbLight._m0[_2396].x) * _2385) * _2410) + (((_2383 * cbLight._m0[_2362].x) * _2385) * _2386)) * 0.3183098733425140380859375;
        _2427 = ((((_2409 * cbLight._m0[_2396].y) * _2385) * _2410) + (((_2383 * cbLight._m0[_2362].y) * _2385) * _2386)) * 0.3183098733425140380859375;
        _2428 = ((((_2409 * cbLight._m0[_2396].z) * _2385) * _2410) + (((_2383 * cbLight._m0[_2362].z) * _2385) * _2386)) * 0.3183098733425140380859375;
    }
    else
    {
        _2426 = 0.0;
        _2427 = 0.0;
        _2428 = 0.0;
    }
    float _4026 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
    float _4037 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _4048 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
    float _4059 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
    float _2443 = (isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0))) * ((_2302 + ((isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0))) * _820)) + _2426);
    float _2444 = (isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0))) * ((_2304 + ((isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0))) * _820)) + _2427);
    float _2445 = (isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0))) * ((_2306 + ((isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0))) * _820)) + _2428);
    float _2449 = 0.959999978542327880859375 - (exp2(log2(1.0 - _835) * 5.0) * 0.959999978542327880859375);
    float _2460 = (_2443 + ((_2308 + ((isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0))) * _1663)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _659.x) * _2449) - _2443) * _705);
    float _2462 = (_2444 + ((_2310 + ((isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0))) * _1663)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _659.y) * _2449) - _2444) * _705);
    float _2464 = (_2445 + ((_2312 + ((isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0))) * _1663)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _659.z) * _2449) - _2445) * _705);
    float _2469 = cbInstanceData._m0[_301 + 6u].w * (isnan(1.0) ? _4059 : (isnan(_4059) ? 1.0 : min(_4059, 1.0)));
    float _2474 = _759 / cbSceneParam._m0[86u].x;
    float _2475 = _760 / cbSceneParam._m0[86u].y;
    vec4 _2489 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2474, _2475, (log2((isnan(cbSceneParam._m0[77u].w) ? _742 : (isnan(_742) ? cbSceneParam._m0[77u].w : min(_742, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2491 = _2489.x;
    float _2492 = _2489.y;
    float _2493 = _2489.z;
    float _2494 = _2489.w;
    float _2587;
    float _2589;
    float _2591;
    float _2593;
    if (_742 > cbSceneParam._m0[78u].w)
    {
        float _2550 = isnan(_742) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _742 : min(cbSceneParam._m0[80u].w, _742));
        float _2551 = _2550 / _742;
        float _2562 = _2551 * _293;
        float _2563 = _294 * _2551;
        float _2564 = (-0.0) - _2563;
        float _2565 = _2551 * _295;
        float _2567 = (cbSceneParam._m0[77u].w * _2564) / _2550;
        float _2568 = _2567 + cbSceneParam._m0[79u].w;
        float _2569 = cbSceneParam._m0[79u].w - _2563;
        float _2575 = sqrt(((_2562 * _2562) + (_2563 * _2563)) + (_2565 * _2565));
        float _2578 = (1.0 - (cbSceneParam._m0[77u].w / _2550)) * _2575;
        float _2583 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2585 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3008;
        if (abs((_2564 - _2567) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3008 = ((((_2568 > 0.0) ? exp2(_2583 * _2568) : (2.0 - exp2(_2585 * _2568))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2578;
        }
        else
        {
            float _2723 = 1.0 / cbSceneParam._m0[80u].x;
            float _2724 = isnan(_2569) ? _2568 : (isnan(_2568) ? _2569 : max(_2568, _2569));
            float _2725 = isnan(_2569) ? _2568 : (isnan(_2568) ? _2569 : min(_2568, _2569));
            float _2734 = isnan(0.0) ? _2724 : (isnan(_2724) ? 0.0 : min(_2724, 0.0));
            float _2735 = isnan(0.0) ? _2725 : (isnan(_2725) ? 0.0 : min(_2725, 0.0));
            _3008 = ((abs(_2575 / _2564) * cbSceneParam._m0[80u].y) * ((((_2734 - _2735) * 2.0) - ((exp2(_2583 * (isnan(0.0) ? _2724 : (isnan(_2724) ? 0.0 : max(_2724, 0.0)))) - exp2(_2583 * (isnan(0.0) ? _2725 : (isnan(_2725) ? 0.0 : max(_2725, 0.0))))) * _2723)) - ((exp2(_2585 * _2734) - exp2(_2585 * _2735)) * _2723))) + (_2578 * cbSceneParam._m0[80u].z);
        }
        vec4 _3010 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2474, _2475, 1.0), 0.0);
        float _3019 = exp2((_3008 * (-1.44269502162933349609375)) * (1.0 - _3010.w));
        float _3020 = log2(_3019);
        float _3036 = log2(_2494);
        _2587 = (exp2(_3036 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3020 * cbSceneParam._m0[78u].x)) * _3010.x) / cbSceneParam._m0[78u].x)) + _2491;
        _2589 = (exp2(_3036 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3020 * cbSceneParam._m0[78u].y)) * _3010.y) / cbSceneParam._m0[78u].y)) + _2492;
        _2591 = (exp2(_3036 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3020 * cbSceneParam._m0[78u].z)) * _3010.z) / cbSceneParam._m0[78u].z)) + _2493;
        _2593 = _3019 * _2494;
    }
    else
    {
        _2587 = _2491;
        _2589 = _2492;
        _2591 = _2493;
        _2593 = _2494;
    }
    bool _3046;
    float _2648;
    vec4 _2651;
    float _2653;
    vec4 _2655;
    float _2663;
    float _2664;
    float _2665;
    float _2666;
    bool _2676;
    for (;;)
    {
        bool _2605 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2606 = log2(_2593);
        float _2613 = exp2(_2606 * cbSceneParam._m0[78u].x) * _2460;
        float _2614 = exp2(_2606 * cbSceneParam._m0[78u].y) * _2462;
        float _2615 = exp2(_2606 * cbSceneParam._m0[78u].z) * _2464;
        vec4 _2623 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_759, _760));
        float _2625 = _2623.x;
        float _2646 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2625)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2625))) - _742) * cbMtdParam._m0[17u].y;
        float _4110 = isnan(0.0) ? _2646 : (isnan(_2646) ? 0.0 : max(_2646, 0.0));
        _2648 = _2469 * (isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0)));
        float _2649 = _749 + (-0.5);
        _2651 = cbMtdParam._m0[1u];
        _2653 = _2651.y * _2649;
        _2655 = cbMatDynParam._m0[0u];
        float _2662 = (roundEven(_2655.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2663 = _2662 * (_2605 ? _2613 : (_2613 + (cbSceneParam._m0[72u].w * _2587)));
        _2664 = _2662 * (_2605 ? _2614 : (_2614 + (cbSceneParam._m0[72u].w * _2589)));
        _2665 = _2662 * (_2605 ? _2615 : (_2615 + (cbSceneParam._m0[72u].w * _2591)));
        _2666 = _2649 * 0.999000012874603271484375;
        _2676 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2676)
        {
            if ((cbInstanceData._m0[_301 + 7u].x + _2666) < 0.5)
            {
                _3046 = true;
                break;
            }
        }
        uint _2758 = _797 + uint(_2655.w);
        if ((cbInstanceData._m0[_2758].w < 1.0) && ((cbInstanceData._m0[_2758].w + _2666) < 0.5))
        {
            _3046 = true;
            break;
        }
        if ((_2653 + _421) < _2651.x)
        {
            _3046 = true;
            break;
        }
        _3046 = false;
        break;
    }
    float _3051;
    if (_3046)
    {
        discard_state = true;
        _3051 = 0.0;
    }
    else
    {
        _3051 = _2648;
    }
    SV_Target.x = _2663;
    SV_Target.y = _2664;
    SV_Target.z = _2665;
    SV_Target.w = _3051;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2648;
    discard_exit();
}


