#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1229;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _208 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _209 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _210 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _216 = inversesqrt(dot(vec3(_208, _209, _210), vec3(_208, _209, _210)));
    float _217 = _216 * _208;
    float _218 = _216 * _209;
    float _219 = _216 * _210;
    float _223 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _224 = _223 * NORMAL.x;
    float _225 = _223 * NORMAL.y;
    float _226 = _223 * NORMAL.z;
    float _230 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _231 = _230 * TANGENT.x;
    float _232 = _230 * TANGENT.y;
    float _233 = _230 * TANGENT.z;
    float _238;
    float _239;
    float _240;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _238 = (-0.0) - _224;
        _239 = (-0.0) - _225;
        _240 = (-0.0) - _226;
    }
    else
    {
        _238 = _224;
        _239 = _225;
        _240 = _226;
    }
    float _287 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _297 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _287);
    float _298 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _287);
    float _299 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _287);
    uint _305 = uint(roundEven(NORMAL.w)) * 13u;
    uint _310 = _305 + 1u;
    uint _314 = _305 + 2u;
    float _323 = sqrt(((cbInstanceData._m0[_310].x * cbInstanceData._m0[_310].x) + (cbInstanceData._m0[_305].x * cbInstanceData._m0[_305].x)) + (cbInstanceData._m0[_314].x * cbInstanceData._m0[_314].x));
    float _324 = _323 * TEXCOORD.z;
    float _325 = _323 * TEXCOORD.w;
    vec4 _338 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _324) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _325) + cbTextureTilingScale._m0[8u].w));
    vec4 _365 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _373 = (_365.x * 2.0) + (-1.0);
    float _375 = (_365.y * 2.0) + (-1.0);
    float _376 = dot(vec2(_373, _375), vec2(_373, _375));
    float _3115 = isnan(0.0) ? _376 : (isnan(_376) ? 0.0 : max(_376, 0.0));
    float _382 = sqrt(1.0 - (isnan(1.0) ? _3115 : (isnan(_3115) ? 1.0 : min(_3115, 1.0))));
    float _385 = fma(_382, _238, fma(_375, _231, _373 * _217));
    float _388 = fma(_382, _239, fma(_375, _232, _373 * _218));
    float _391 = fma(_382, _240, fma(_375, _233, _373 * _219));
    float _395 = inversesqrt(dot(vec3(_385, _388, _391), vec3(_385, _388, _391)));
    float _396 = _395 * _385;
    float _397 = _395 * _388;
    float _426 = (cbMtdParam._m0[17u].w + dot(vec4(_396, _397, _395 * _391, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _324) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _325) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3126 = isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0));
    float _427 = isnan(1.0) ? _3126 : (isnan(_3126) ? 1.0 : min(_3126, 1.0));
    vec4 _439 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _444 = _439.w;
    float _456 = dot(vec3(_297, _298, _299), vec3(_217, _218, _219));
    float _459 = dot(vec3(_297, _298, _299), vec3(_231, _232, _233));
    float _462 = dot(vec3(_297, _298, _299), vec3(_238, _239, _240));
    float _468 = inversesqrt(dot(vec3(_456, _459, _462), vec3(_456, _459, _462)));
    float _490 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _510 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_456 * cbMtdParam._m0[14u].x) * _468) * _490) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_459 * cbMtdParam._m0[14u].x) * _468) * _490) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _533 = inversesqrt(dot(vec3(_297, _298, _299), vec3(_297, _298, _299)));
    float _534 = _533 * _297;
    float _535 = _533 * _298;
    float _536 = _533 * _299;
    float _537 = dot(vec4(_534, _535, _536, 0.0), vec4(_238, _239, _240, 0.0));
    float _540 = _537 - cbMtdParam._m0[15u].z;
    float _3137 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _547 = exp2(log2(1.0 - (isnan(1.0) ? _3137 : (isnan(_3137) ? 1.0 : min(_3137, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _562 = ((((_439.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _510.x) * cbMtdParam._m0[9u].x) * ((_547 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _567 = ((((_439.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _510.y) * cbMtdParam._m0[9u].y) * ((_547 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _572 = ((((_439.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _510.z) * cbMtdParam._m0[9u].z) * ((_547 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _579 = (((_338.x * cbMtdParam._m0[10u].x) - _562) * _427) + _562;
    float _580 = (((_338.y * cbMtdParam._m0[10u].y) - _567) * _427) + _567;
    float _581 = (((_338.z * cbMtdParam._m0[10u].z) - _572) * _427) + _572;
    vec4 _593 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _324) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _325) + cbTextureTilingScale._m0[9u].w));
    float _600 = (_593.x * 2.0) + (-1.0);
    float _601 = (_593.y * 2.0) + (-1.0);
    float _602 = dot(vec2(_600, _601), vec2(_600, _601));
    float _3153 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    vec4 _623 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _633 = cbMtdParam._m0[17u].z + _365.z;
    float _639 = (_633 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_623.z - _633));
    float _642 = ((_593.z - _639) * _427) + _639;
    float _648 = ((((_623.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _373;
    float _649 = ((((_623.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _375;
    float _657 = ((sqrt(1.0 - (isnan(1.0) ? _3153 : (isnan(_3153) ? 1.0 : min(_3153, 1.0)))) - _382) * _427) + _382;
    float _661 = ((_648 * cbMtdParam._m0[14u].z) + _648) + ((_600 - _648) * _427);
    float _663 = ((_649 * cbMtdParam._m0[14u].z) + _649) + ((_601 - _649) * _427);
    vec4 _675 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _679 = cbMtdParam._m0[16u].w * _675.x;
    float _681 = _679 - (_679 * _427);
    float _690 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _691 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _701 = cbSceneParam._m0[86u].x * ((_690 / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _396));
    float _702 = cbSceneParam._m0[86u].y * ((_691 / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _397));
    float _709 = isnan(cbInstanceData._m0[8u].x) ? _701 : (isnan(_701) ? cbInstanceData._m0[8u].x : max(_701, cbInstanceData._m0[8u].x));
    float _710 = isnan(cbInstanceData._m0[8u].y) ? _702 : (isnan(_702) ? cbInstanceData._m0[8u].y : max(_702, cbInstanceData._m0[8u].y));
    vec4 _714 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _709 : (isnan(_709) ? cbInstanceData._m0[8u].z : min(_709, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _710 : (isnan(_710) ? cbInstanceData._m0[8u].w : min(_710, cbInstanceData._m0[8u].w))));
    float _747 = _537 - cbMtdParam._m0[15u].x;
    float _3184 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
    float _757 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3184 : (isnan(_3184) ? 1.0 : min(_3184, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3200 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    float _758 = isnan(1.0) ? _3200 : (isnan(_3200) ? 1.0 : min(_3200, 1.0));
    float _760 = _758 - (_758 * _427);
    float _764 = fma(_657, _238, fma(_663, _231, _661 * _217));
    float _767 = fma(_657, _239, fma(_663, _232, _661 * _218));
    float _770 = fma(_657, _240, fma(_663, _233, _661 * _219));
    float _774 = inversesqrt(dot(vec3(_764, _767, _770), vec3(_764, _767, _770)));
    float _775 = _774 * _764;
    float _776 = _774 * _767;
    float _777 = _774 * _770;
    float _3211 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _778 = isnan(1.0) ? _3211 : (isnan(_3211) ? 1.0 : min(_3211, 1.0));
    float _3222 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _779 = isnan(1.0) ? _3222 : (isnan(_3222) ? 1.0 : min(_3222, 1.0));
    float _780 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
    float _3238 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _3249 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _3260 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _797 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _815 = fma(_777, cbSceneParam._m0[5u].z, fma(_776, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _775));
    float _818 = fma(_777, cbSceneParam._m0[6u].z, fma(_776, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _775));
    float _821 = fma(_777, cbSceneParam._m0[7u].z, fma(_776, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _775));
    uint _835 = (_305 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _841 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3238 : (isnan(_3238) ? 1.0 : min(_3238, 1.0)))) * cbInstanceData._m0[_835].x;
    float _842 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3249 : (isnan(_3249) ? 1.0 : min(_3249, 1.0)))) * cbInstanceData._m0[_835].y;
    float _843 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3260 : (isnan(_3260) ? 1.0 : min(_3260, 1.0)))) * cbInstanceData._m0[_835].z;
    float _3271 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
    float _844 = isnan(1.0) ? _3271 : (isnan(_3271) ? 1.0 : min(_3271, 1.0));
    float _3282 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _845 = isnan(1.0) ? _3282 : (isnan(_3282) ? 1.0 : min(_3282, 1.0));
    float _3293 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    float _846 = isnan(1.0) ? _3293 : (isnan(_3293) ? 1.0 : min(_3293, 1.0));
    vec4 _850 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _690, cbSceneParam._m0[86u].y * _691));
    float _853 = _850.x * TEXCOORD_5.w;
    float _854 = dot(vec3(_775, _776, _777), vec3(_534, _535, _536));
    float _857 = _854 * 2.0;
    float _861 = (_857 * _775) - _534;
    float _862 = (_857 * _776) - _535;
    float _863 = (_857 * _777) - _536;
    float _864 = dot(vec3(_534, _535, _536), vec3(_775, _776, _777));
    float _867 = abs(_864);
    float _3304 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    float _868 = isnan(1.0) ? _3304 : (isnan(_3304) ? 1.0 : min(_3304, 1.0));
    float _874 = sqrt(_779);
    float _886 = exp2((_874 * 5.0) * log2(1.0 - (_868 * 0.999000012874603271484375))) / (4.0 - (_874 * 3.0));
    float _918 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _922 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _926 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1228;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    float _1239;
    float _1240;
    float _1241;
    float _1242;
    float _1243;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _953 = fma(_926, cbModelParam._m0[26u].z, fma(_922, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _918));
        float _957 = fma(_926, cbModelParam._m0[27u].z, fma(_922, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _918));
        float _961 = fma(_926, cbModelParam._m0[28u].z, fma(_922, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _918));
        float _986 = _918 + _775;
        float _987 = _922 + _776;
        float _988 = _926 + _777;
        float _998 = fma(_988, cbModelParam._m0[26u].z, fma(_987, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _986)) - _953;
        float _999 = fma(_988, cbModelParam._m0[27u].z, fma(_987, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _986)) - _957;
        float _1000 = fma(_988, cbModelParam._m0[28u].z, fma(_987, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _986)) - _961;
        float _1004 = inversesqrt(dot(vec3(_998, _999, _1000), vec3(_998, _999, _1000)));
        float _1017 = ((_1004 * _998) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_953 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1018 = ((_1004 * _999) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_957 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1019 = ((_1004 * _1000) / cbModelParam._m0[34u].z) + ((((((_961 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1022 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1017, _1018, _1019), 0.0);
        vec4 _1029 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1017, _1018, _1019), 0.0);
        vec4 _1036 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1017, _1018, _1019), 0.0);
        vec4 _1043 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1017, _1018, _1019), 0.0);
        float _1056 = exp2((_1022.w + (-0.5)) * 20.0) * 2.0;
        float _1057 = _1056 * (_1022.x + (-0.5));
        float _1058 = _1056 * (_1022.y + (-0.5));
        float _1059 = _1056 * (_1022.z + (-0.5));
        float _1066 = exp2((_1029.w + (-0.5)) * 20.0) * 2.0;
        float _1067 = _1066 * (_1029.x + (-0.5));
        float _1068 = _1066 * (_1029.y + (-0.5));
        float _1069 = _1066 * (_1029.z + (-0.5));
        float _1076 = exp2((_1036.w + (-0.5)) * 20.0) * 2.0;
        float _1077 = _1076 * (_1036.x + (-0.5));
        float _1078 = _1076 * (_1036.y + (-0.5));
        float _1079 = _1076 * (_1036.z + (-0.5));
        float _1086 = exp2((_1043.w + (-0.5)) * 20.0) * 2.0;
        float _1087 = _1086 * (_1043.x + (-0.5));
        float _1088 = _1086 * (_1043.y + (-0.5));
        float _1089 = _1086 * (_1043.z + (-0.5));
        float _1090 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
        float _1091 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
        float _1092 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
        float _1093 = _1057 * 0.5;
        float _1094 = _1067 * 0.5;
        float _1095 = _1077 * 0.5;
        float _1096 = dot(vec3(_1093, _1094, _1095), vec3(_1093, _1094, _1095));
        float _1101 = (_1096 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1096);
        float _1110 = (dot(vec3(_775, _776, _777), vec3(_1101 * _1093, _1101 * _1094, _1101 * _1095)) + 1.0) * 0.5;
        float _3330 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
        float _1120 = sqrt(((_1094 * _1094) + (_1093 * _1093)) + (_1095 * _1095)) / (_1090 + 9.9999997473787516355514526367188e-06);
        float _3341 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
        float _1121 = isnan(1.0) ? _3341 : (isnan(_3341) ? 1.0 : min(_3341, 1.0));
        float _1122 = _1121 * 2.0;
        float _1126 = (1.0 - _1121) / (_1121 + 1.0);
        float _3352 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1127 = isnan(1.0) ? _3352 : (isnan(_3352) ? 1.0 : min(_3352, 1.0));
        float _1136 = ((((1.0 - _1127) * (_1122 + 2.0)) * exp2(log2(isnan(1.0) ? _3330 : (isnan(_3330) ? 1.0 : min(_3330, 1.0))) * (_1122 + 1.0))) + _1127) * _1090;
        float _1137 = _1058 * 0.5;
        float _1138 = _1068 * 0.5;
        float _1139 = _1078 * 0.5;
        float _1140 = dot(vec3(_1137, _1138, _1139), vec3(_1137, _1138, _1139));
        float _1145 = (_1140 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1140);
        float _1153 = (dot(vec3(_775, _776, _777), vec3(_1145 * _1137, _1145 * _1138, _1145 * _1139)) + 1.0) * 0.5;
        float _3363 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1162 = sqrt(((_1138 * _1138) + (_1137 * _1137)) + (_1139 * _1139)) / (_1091 + 9.9999997473787516355514526367188e-06);
        float _3374 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
        float _1163 = isnan(1.0) ? _3374 : (isnan(_3374) ? 1.0 : min(_3374, 1.0));
        float _1164 = _1163 * 2.0;
        float _1168 = (1.0 - _1163) / (_1163 + 1.0);
        float _3385 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
        float _1169 = isnan(1.0) ? _3385 : (isnan(_3385) ? 1.0 : min(_3385, 1.0));
        float _1178 = ((((1.0 - _1169) * (_1164 + 2.0)) * exp2(log2(isnan(1.0) ? _3363 : (isnan(_3363) ? 1.0 : min(_3363, 1.0))) * (_1164 + 1.0))) + _1169) * _1091;
        float _1179 = _1059 * 0.5;
        float _1180 = _1069 * 0.5;
        float _1181 = _1079 * 0.5;
        float _1182 = dot(vec3(_1179, _1180, _1181), vec3(_1179, _1180, _1181));
        float _1187 = (_1182 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1182);
        float _1195 = (dot(vec3(_775, _776, _777), vec3(_1187 * _1179, _1187 * _1180, _1187 * _1181)) + 1.0) * 0.5;
        float _3396 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
        float _1204 = sqrt(((_1180 * _1180) + (_1179 * _1179)) + (_1181 * _1181)) / (_1092 + 9.9999997473787516355514526367188e-06);
        float _3407 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        float _1205 = isnan(1.0) ? _3407 : (isnan(_3407) ? 1.0 : min(_3407, 1.0));
        float _1206 = _1205 * 2.0;
        float _1210 = (1.0 - _1205) / (_1205 + 1.0);
        float _3418 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
        float _1211 = isnan(1.0) ? _3418 : (isnan(_3418) ? 1.0 : min(_3418, 1.0));
        float _1220 = ((((1.0 - _1211) * (_1206 + 2.0)) * exp2(log2(isnan(1.0) ? _3396 : (isnan(_3396) ? 1.0 : min(_3396, 1.0))) * (_1206 + 1.0))) + _1211) * _1092;
        _1228 = _1059;
        _1230 = _1058;
        _1231 = _1057;
        _1232 = _1069;
        _1233 = _1068;
        _1234 = _1067;
        _1235 = _1079;
        _1236 = _1078;
        _1237 = _1077;
        _1238 = _1092;
        _1239 = _1091;
        _1240 = _1090;
        _1241 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0)));
        _1242 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0)));
        _1243 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0)));
    }
    else
    {
        _1228 = _1229;
        _1230 = _1229;
        _1231 = _1229;
        _1232 = _1229;
        _1233 = _1229;
        _1234 = _1229;
        _1235 = _1229;
        _1236 = _1229;
        _1237 = _1229;
        _1238 = _1229;
        _1239 = _1229;
        _1240 = _1229;
        _1241 = 0.0;
        _1242 = 0.0;
        _1243 = 0.0;
    }
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    float _1551;
    float _1552;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1269 = fma(_926, cbModelParam._m0[30u].z, fma(_922, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _918));
        float _1273 = fma(_926, cbModelParam._m0[31u].z, fma(_922, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _918));
        float _1277 = fma(_926, cbModelParam._m0[32u].z, fma(_922, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _918));
        float _1300 = _918 + _775;
        float _1301 = _922 + _776;
        float _1302 = _926 + _777;
        float _1312 = fma(_1302, cbModelParam._m0[30u].z, fma(_1301, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1300)) - _1269;
        float _1313 = fma(_1302, cbModelParam._m0[31u].z, fma(_1301, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1300)) - _1273;
        float _1314 = fma(_1302, cbModelParam._m0[32u].z, fma(_1301, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1300)) - _1277;
        float _1318 = inversesqrt(dot(vec3(_1312, _1313, _1314), vec3(_1312, _1313, _1314)));
        float _1331 = ((_1318 * _1312) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1269 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1332 = ((_1318 * _1313) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1273 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1333 = ((_1318 * _1314) / cbModelParam._m0[35u].z) + ((((((_1277 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1335 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1331, _1332, _1333), 0.0);
        vec4 _1342 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1331, _1332, _1333), 0.0);
        vec4 _1349 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1331, _1332, _1333), 0.0);
        vec4 _1356 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1331, _1332, _1333), 0.0);
        float _1368 = exp2((_1335.w + (-0.5)) * 20.0) * 2.0;
        float _1369 = _1368 * (_1335.x + (-0.5));
        float _1370 = _1368 * (_1335.y + (-0.5));
        float _1371 = _1368 * (_1335.z + (-0.5));
        float _1378 = exp2((_1342.w + (-0.5)) * 20.0) * 2.0;
        float _1379 = _1378 * (_1342.x + (-0.5));
        float _1380 = _1378 * (_1342.y + (-0.5));
        float _1381 = _1378 * (_1342.z + (-0.5));
        float _1388 = exp2((_1349.w + (-0.5)) * 20.0) * 2.0;
        float _1389 = _1388 * (_1349.x + (-0.5));
        float _1390 = _1388 * (_1349.y + (-0.5));
        float _1391 = _1388 * (_1349.z + (-0.5));
        float _1398 = exp2((_1356.w + (-0.5)) * 20.0) * 2.0;
        float _1399 = _1398 * (_1356.x + (-0.5));
        float _1400 = _1398 * (_1356.y + (-0.5));
        float _1401 = _1398 * (_1356.z + (-0.5));
        float _1402 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1403 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1404 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1405 = _1369 * 0.5;
        float _1406 = _1379 * 0.5;
        float _1407 = _1389 * 0.5;
        float _1408 = dot(vec3(_1405, _1406, _1407), vec3(_1405, _1406, _1407));
        float _1413 = (_1408 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1408);
        float _1421 = (dot(vec3(_775, _776, _777), vec3(_1413 * _1405, _1413 * _1406, _1413 * _1407)) + 1.0) * 0.5;
        float _3459 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1430 = sqrt(((_1406 * _1406) + (_1405 * _1405)) + (_1407 * _1407)) / (_1402 + 9.9999997473787516355514526367188e-06);
        float _3470 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1431 = isnan(1.0) ? _3470 : (isnan(_3470) ? 1.0 : min(_3470, 1.0));
        float _1432 = _1431 * 2.0;
        float _1436 = (1.0 - _1431) / (_1431 + 1.0);
        float _3481 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1437 = isnan(1.0) ? _3481 : (isnan(_3481) ? 1.0 : min(_3481, 1.0));
        float _1446 = ((((1.0 - _1437) * (_1432 + 2.0)) * exp2(log2(isnan(1.0) ? _3459 : (isnan(_3459) ? 1.0 : min(_3459, 1.0))) * (_1432 + 1.0))) + _1437) * _1402;
        float _1447 = _1370 * 0.5;
        float _1448 = _1380 * 0.5;
        float _1449 = _1390 * 0.5;
        float _1450 = dot(vec3(_1447, _1448, _1449), vec3(_1447, _1448, _1449));
        float _1455 = (_1450 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1450);
        float _1463 = (dot(vec3(_775, _776, _777), vec3(_1455 * _1447, _1455 * _1448, _1455 * _1449)) + 1.0) * 0.5;
        float _3492 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
        float _1472 = sqrt(((_1448 * _1448) + (_1447 * _1447)) + (_1449 * _1449)) / (_1403 + 9.9999997473787516355514526367188e-06);
        float _3503 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
        float _1473 = isnan(1.0) ? _3503 : (isnan(_3503) ? 1.0 : min(_3503, 1.0));
        float _1474 = _1473 * 2.0;
        float _1478 = (1.0 - _1473) / (_1473 + 1.0);
        float _3514 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1479 = isnan(1.0) ? _3514 : (isnan(_3514) ? 1.0 : min(_3514, 1.0));
        float _1488 = ((((1.0 - _1479) * (_1474 + 2.0)) * exp2(log2(isnan(1.0) ? _3492 : (isnan(_3492) ? 1.0 : min(_3492, 1.0))) * (_1474 + 1.0))) + _1479) * _1403;
        float _1489 = _1371 * 0.5;
        float _1490 = _1381 * 0.5;
        float _1491 = _1391 * 0.5;
        float _1492 = dot(vec3(_1489, _1490, _1491), vec3(_1489, _1490, _1491));
        float _1497 = (_1492 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1492);
        float _1505 = (dot(vec3(_775, _776, _777), vec3(_1497 * _1489, _1497 * _1490, _1497 * _1491)) + 1.0) * 0.5;
        float _3525 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1514 = sqrt(((_1490 * _1490) + (_1489 * _1489)) + (_1491 * _1491)) / (_1404 + 9.9999997473787516355514526367188e-06);
        float _3536 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1515 = isnan(1.0) ? _3536 : (isnan(_3536) ? 1.0 : min(_3536, 1.0));
        float _1516 = _1515 * 2.0;
        float _1520 = (1.0 - _1515) / (_1515 + 1.0);
        float _3547 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
        float _1521 = isnan(1.0) ? _3547 : (isnan(_3547) ? 1.0 : min(_3547, 1.0));
        float _1530 = ((((1.0 - _1521) * (_1516 + 2.0)) * exp2(log2(isnan(1.0) ? _3525 : (isnan(_3525) ? 1.0 : min(_3525, 1.0))) * (_1516 + 1.0))) + _1521) * _1404;
        _1538 = _1371;
        _1539 = _1370;
        _1540 = _1369;
        _1541 = _1381;
        _1542 = _1380;
        _1543 = _1379;
        _1544 = _1391;
        _1545 = _1390;
        _1546 = _1389;
        _1547 = _1404;
        _1548 = _1403;
        _1549 = _1402;
        _1550 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0)));
        _1551 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0)));
        _1552 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0)));
    }
    else
    {
        _1538 = _1229;
        _1539 = _1229;
        _1540 = _1229;
        _1541 = _1229;
        _1542 = _1229;
        _1543 = _1229;
        _1544 = _1229;
        _1545 = _1229;
        _1546 = _1229;
        _1547 = _1229;
        _1548 = _1229;
        _1549 = _1229;
        _1550 = 0.0;
        _1551 = 0.0;
        _1552 = 0.0;
    }
    float _1562 = (cbModelParam._m0[1u].x * (_1550 - _1241)) + _1241;
    float _1563 = (cbModelParam._m0[1u].x * (_1551 - _1242)) + _1242;
    float _1564 = (cbModelParam._m0[1u].x * (_1552 - _1243)) + _1243;
    float _1585 = fma(_1564, cbSceneParam._m0[89u].z, fma(_1563, cbSceneParam._m0[89u].y, _1562 * cbSceneParam._m0[89u].x));
    float _1588 = fma(_1564, cbSceneParam._m0[90u].z, fma(_1563, cbSceneParam._m0[90u].y, _1562 * cbSceneParam._m0[90u].x));
    float _1591 = fma(_1564, cbSceneParam._m0[91u].z, fma(_1563, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1562));
    float _1606 = _861 * 0.5;
    float _1607 = _862 * 0.5;
    float _1608 = _863 * 0.5;
    float _1609 = dot(vec4(_1606, _1607, _1608, 1.0), vec4(_1540, _1543, _1546, _1549));
    float _1612 = dot(vec4(_1606, _1607, _1608, 1.0), vec4(_1539, _1542, _1545, _1548));
    float _1615 = dot(vec4(_1606, _1607, _1608, 1.0), vec4(_1538, _1541, _1544, _1547));
    float _1649;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1622 = dot(vec4(_1606, _1607, _1608, 1.0), vec4(_1228, _1232, _1235, _1238));
        float _1626 = dot(vec4(_1606, _1607, _1608, 1.0), vec4(_1230, _1233, _1236, _1239));
        float _1630 = dot(vec4(_1606, _1607, _1608, 1.0), vec4(_1231, _1234, _1237, _1240));
        float _1637 = dot(vec4(cbModelParam._m0[39u]), vec4(_1606, _1607, _1608, 1.0));
        _1649 = dot(vec3(isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0)), isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0)), isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1637) ? 0.0 : (isnan(0.0) ? _1637 : max(0.0, _1637))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1649 = 1.0;
    }
    float _1660;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1651 = dot(vec4(cbModelParam._m0[40u]), vec4(_1606, _1607, _1608, 1.0));
        _1660 = dot(vec3(isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0)), isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0)), isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1651) ? 0.0 : (isnan(0.0) ? _1651 : max(0.0, _1651))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1660 = 1.0;
    }
    float _1664 = (_1660 * cbModelParam._m0[1u].x) + (_1649 * (1.0 - cbModelParam._m0[1u].x));
    float _1674 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _779);
    float _1675 = isnan(_1674) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1674 : min(cbModelParam._m0[25u].z, _1674));
    float _1755;
    float _1757;
    float _1759;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1722 = fma(_926, cbModelParam._m0[13u].z, fma(_922, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _918)) + cbModelParam._m0[13u].w;
        float _1726 = fma(_926, cbModelParam._m0[14u].z, fma(_922, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _918)) + cbModelParam._m0[14u].w;
        float _1730 = fma(_926, cbModelParam._m0[15u].z, fma(_922, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _918)) + cbModelParam._m0[15u].w;
        float _1733 = fma(_863, cbModelParam._m0[13u].z, fma(_862, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _861));
        float _1736 = fma(_863, cbModelParam._m0[14u].z, fma(_862, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _861));
        float _1739 = fma(_863, cbModelParam._m0[15u].z, fma(_862, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _861));
        float _1767;
        if (_1733 > 0.0)
        {
            _1767 = abs((1.0 - _1722) / _1733);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1733 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1722 + 1.0) / _1733);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1767 = frontier_phi_16_14_ladder;
        }
        float _1938;
        if (_1736 > 0.0)
        {
            _1938 = abs((1.0 - _1726) / _1736);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1736 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1726 + 1.0) / _1736);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1938 = frontier_phi_25_21_ladder;
        }
        float _2173;
        if (_1739 > 0.0)
        {
            _2173 = abs((1.0 - _1730) / _1739);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1739 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1730 + 1.0) / _1739);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2173 = frontier_phi_36_32_ladder;
        }
        float _2175 = isnan(_1938) ? _1767 : (isnan(_1767) ? _1938 : min(_1767, _1938));
        float _2176 = isnan(_2173) ? _2175 : (isnan(_2175) ? _2173 : min(_2175, _2173));
        float _2180 = (_2176 * _1733) + _1722;
        float _2181 = (_2176 * _1736) + _1726;
        float _2182 = (_2176 * _1739) + _1730;
        float _2183 = _2176 * 9.9999997473787516355514526367188e-05;
        float _2185 = (-1.0) - _2183;
        float _2187 = _2183 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2182 > _2187) || ((_2182 < _2185) || ((_2181 > _2187) || ((_2181 < _2185) || ((_2180 < _2185) || (_2180 > _2187))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2332 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2182, cbModelParam._m0[9u].z, fma(_2181, cbModelParam._m0[9u].y, _2180 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2182, cbModelParam._m0[10u].z, fma(_2181, cbModelParam._m0[10u].y, _2180 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2182, cbModelParam._m0[11u].z, fma(_2181, cbModelParam._m0[11u].y, _2180 * cbModelParam._m0[11u].x))), _1675);
            frontier_phi_15_36_ladder = _2332.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2332.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2332.y * cbModelParam._m0[1u].y;
        }
        _1755 = frontier_phi_15_36_ladder_1;
        _1757 = frontier_phi_15_36_ladder_2;
        _1759 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1743 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_861, _862, _863), _1675);
        _1755 = _1743.x * cbModelParam._m0[1u].y;
        _1757 = _1743.y * cbModelParam._m0[1u].y;
        _1759 = _1743.z * cbModelParam._m0[1u].y;
    }
    float _1763 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _779);
    float _1764 = isnan(_1763) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1763 : min(cbModelParam._m0[25u].w, _1763));
    float _1855;
    float _1857;
    float _1859;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1819 = fma(_926, cbModelParam._m0[21u].z, fma(_922, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _918)) + cbModelParam._m0[21u].w;
        float _1823 = fma(_926, cbModelParam._m0[22u].z, fma(_922, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _918)) + cbModelParam._m0[22u].w;
        float _1827 = fma(_926, cbModelParam._m0[23u].z, fma(_922, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _918)) + cbModelParam._m0[23u].w;
        float _1830 = fma(_863, cbModelParam._m0[21u].z, fma(_862, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _861));
        float _1833 = fma(_863, cbModelParam._m0[22u].z, fma(_862, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _861));
        float _1836 = fma(_863, cbModelParam._m0[23u].z, fma(_862, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _861));
        float _1943;
        if (_1830 > 0.0)
        {
            _1943 = abs((1.0 - _1819) / _1830);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1830 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1819 + 1.0) / _1830);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1943 = frontier_phi_27_23_ladder;
        }
        float _2200;
        if (_1833 > 0.0)
        {
            _2200 = abs((1.0 - _1823) / _1833);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1833 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1823 + 1.0) / _1833);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2200 = frontier_phi_38_34_ladder;
        }
        float _2504;
        if (_1836 > 0.0)
        {
            _2504 = abs((1.0 - _1827) / _1836);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1836 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1827 + 1.0) / _1836);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2504 = frontier_phi_49_44_ladder;
        }
        float _2506 = isnan(_2200) ? _1943 : (isnan(_1943) ? _2200 : min(_1943, _2200));
        float _2507 = isnan(_2504) ? _2506 : (isnan(_2506) ? _2504 : min(_2506, _2504));
        float _2511 = (_2507 * _1830) + _1819;
        float _2512 = (_2507 * _1833) + _1823;
        float _2513 = (_2507 * _1836) + _1827;
        float _2514 = _2507 * 9.9999997473787516355514526367188e-05;
        float _2515 = (-1.0) - _2514;
        float _2517 = _2514 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2513 > _2517) || ((_2513 < _2515) || ((_2512 > _2517) || ((_2512 < _2515) || ((_2511 < _2515) || (_2511 > _2517))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2686 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2513, cbModelParam._m0[17u].z, fma(_2512, cbModelParam._m0[17u].y, _2511 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2513, cbModelParam._m0[18u].z, fma(_2512, cbModelParam._m0[18u].y, _2511 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2513, cbModelParam._m0[19u].z, fma(_2512, cbModelParam._m0[19u].y, _2511 * cbModelParam._m0[19u].x))), _1764);
            frontier_phi_24_49_ladder = _2686.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2686.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2686.x * cbModelParam._m0[1u].z;
        }
        _1855 = frontier_phi_24_49_ladder_2;
        _1857 = frontier_phi_24_49_ladder;
        _1859 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1839 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_861, _862, _863), _1764);
        _1855 = _1839.x * cbModelParam._m0[1u].z;
        _1857 = _1839.y * cbModelParam._m0[1u].z;
        _1859 = _1839.z * cbModelParam._m0[1u].z;
    }
    float _1871 = ((((1.0 - _886) * ((_874 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_886 * _874)) * _853;
    float _1872 = _1871 * ((cbModelParam._m0[1u].w * (_1855 - _1755)) + _1755);
    float _1873 = _1871 * ((cbModelParam._m0[1u].w * (_1857 - _1757)) + _1757);
    float _1874 = _1871 * ((cbModelParam._m0[1u].w * (_1859 - _1759)) + _1759);
    float _1877 = fma(_1874, cbSceneParam._m0[89u].z, fma(_1873, cbSceneParam._m0[89u].y, _1872 * cbSceneParam._m0[89u].x));
    float _1880 = fma(_1874, cbSceneParam._m0[90u].z, fma(_1873, cbSceneParam._m0[90u].y, _1872 * cbSceneParam._m0[90u].x));
    float _1883 = fma(_1874, cbSceneParam._m0[91u].z, fma(_1873, cbSceneParam._m0[91u].y, _1872 * cbSceneParam._m0[91u].x));
    uvec4 _1893 = floatBitsToUint(cbInstanceData._m0[_305 + 5u]);
    uint _1895 = _1893.x * 14u;
    uint _1896 = _1895 + 13u;
    float _1901 = _853 + (-1.0);
    float _1904 = (cbLight._m0[_1896].x * _1901) + 1.0;
    float _1905 = (cbLight._m0[_1896].y * _1901) + 1.0;
    uint _1907 = _1895 + 4u;
    float _1918 = dot(vec3(cbLight._m0[_1895].xyz), vec3(_775, _776, _777));
    float _1921 = isnan(1.0) ? _1904 : (isnan(_1904) ? 1.0 : min(_1904, 1.0));
    uint _1922 = _1895 + 5u;
    uint _1928 = _1895 | 1u;
    float _1934 = dot(vec3(cbLight._m0[_1928].xyz), vec3(_775, _776, _777));
    float _1937 = isnan(1.0) ? _1905 : (isnan(_1905) ? 1.0 : min(_1905, 1.0));
    float _2002;
    float _2003;
    float _2004;
    if (_780 == 0.0)
    {
        float _3683 = isnan(0.0) ? _1918 : (isnan(_1918) ? 0.0 : max(_1918, 0.0));
        float _3694 = isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0));
        float _1956 = (isnan(1.0) ? _3683 : (isnan(_3683) ? 1.0 : min(_3683, 1.0))) * 0.3183098733425140380859375;
        float _1958 = (isnan(1.0) ? _3694 : (isnan(_3694) ? 1.0 : min(_3694, 1.0))) * 0.3183098733425140380859375;
        _2002 = ((cbLight._m0[_1922].x * _1937) * _1958) + ((cbLight._m0[_1907].x * _1921) * _1956);
        _2003 = ((_1937 * cbLight._m0[_1922].y) * _1958) + ((_1921 * cbLight._m0[_1907].y) * _1956);
        _2004 = ((_1937 * cbLight._m0[_1922].z) * _1958) + ((_1921 * cbLight._m0[_1907].z) * _1956);
    }
    else
    {
        float _1968 = _1918 + _780;
        float _1971 = (_780 * 2.0) + 1.0;
        float _1972 = (isnan(0.0) ? _1968 : (isnan(_1968) ? 0.0 : max(_1968, 0.0))) / _1971;
        float _1979 = _1934 + _780;
        float _1981 = (isnan(0.0) ? _1979 : (isnan(_1979) ? 0.0 : max(_1979, 0.0))) / _1971;
        _2002 = (((_1981 * cbLight._m0[_1922].x) * _1937) + ((_1972 * cbLight._m0[_1907].x) * _1921)) * 0.3183098733425140380859375;
        _2003 = (((_1981 * cbLight._m0[_1922].y) * _1937) + ((_1972 * cbLight._m0[_1907].y) * _1921)) * 0.3183098733425140380859375;
        _2004 = (((_1981 * cbLight._m0[_1922].z) * _1937) + ((_1972 * cbLight._m0[_1907].z) * _1921)) * 0.3183098733425140380859375;
    }
    uint _2008 = _1895 + 8u;
    float _2024 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1895].w)) * _779) * 0.949999988079071044921875);
    float _2025 = _2024 * _2024;
    float _2026 = cbLight._m0[_1895].x + _534;
    float _2027 = cbLight._m0[_1895].y + _535;
    float _2028 = cbLight._m0[_1895].z + _536;
    float _2032 = inversesqrt(dot(vec3(_2026, _2027, _2028), vec3(_2026, _2027, _2028)));
    float _2033 = _2032 * _2026;
    float _2034 = _2032 * _2027;
    float _2035 = _2032 * _2028;
    float _2036 = dot(vec3(_775, _776, _777), vec3(cbLight._m0[_1895].xyz));
    float _3715 = isnan(0.0) ? _2036 : (isnan(_2036) ? 0.0 : max(_2036, 0.0));
    float _2039 = isnan(1.0) ? _3715 : (isnan(_3715) ? 1.0 : min(_3715, 1.0));
    float _3726 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    float _2040 = isnan(1.0) ? _3726 : (isnan(_3726) ? 1.0 : min(_3726, 1.0));
    float _2041 = dot(vec3(_775, _776, _777), vec3(_2033, _2034, _2035));
    float _3737 = isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0));
    float _2044 = isnan(1.0) ? _3737 : (isnan(_3737) ? 1.0 : min(_3737, 1.0));
    float _2045 = dot(vec3(cbLight._m0[_1895].xyz), vec3(_2033, _2034, _2035));
    float _3748 = isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : max(_2045, 0.0));
    float _2049 = _2025 * _2025;
    float _2053 = ((_2044 * _2044) * (_2049 + (-1.0))) + 1.0;
    float _2064 = (exp2(log2(1.0 - (isnan(1.0) ? _3748 : (isnan(_3748) ? 1.0 : min(_3748, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2065 = 1.0 - _2025;
    float _2076 = (0.5 / (((_2040 * ((_2039 * _2065) + _2025)) + 9.9999999392252902907785028219223e-09) + (((_2040 * _2065) + _2025) * _2039))) * _2039;
    float _3759 = isnan(0.0) ? _2076 : (isnan(_2076) ? 0.0 : max(_2076, 0.0));
    float _2078 = (isnan(1.0) ? _3759 : (isnan(_3759) ? 1.0 : min(_3759, 1.0))) * (_2049 / ((_2053 * _2053) * 3.141590118408203125));
    uint _2091 = _1895 + 9u;
    float _2105 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1928].w)) * _779) * 0.949999988079071044921875);
    float _2106 = _2105 * _2105;
    float _2107 = cbLight._m0[_1928].x + _534;
    float _2108 = cbLight._m0[_1928].y + _535;
    float _2109 = cbLight._m0[_1928].z + _536;
    float _2113 = inversesqrt(dot(vec3(_2107, _2108, _2109), vec3(_2107, _2108, _2109)));
    float _2114 = _2113 * _2107;
    float _2115 = _2113 * _2108;
    float _2116 = _2113 * _2109;
    float _2117 = dot(vec3(_775, _776, _777), vec3(cbLight._m0[_1928].xyz));
    float _3770 = isnan(0.0) ? _2117 : (isnan(_2117) ? 0.0 : max(_2117, 0.0));
    float _2120 = isnan(1.0) ? _3770 : (isnan(_3770) ? 1.0 : min(_3770, 1.0));
    float _2121 = dot(vec3(_775, _776, _777), vec3(_2114, _2115, _2116));
    float _3781 = isnan(0.0) ? _2121 : (isnan(_2121) ? 0.0 : max(_2121, 0.0));
    float _2124 = isnan(1.0) ? _3781 : (isnan(_3781) ? 1.0 : min(_3781, 1.0));
    float _2125 = dot(vec3(cbLight._m0[_1928].xyz), vec3(_2114, _2115, _2116));
    float _3792 = isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0));
    float _2129 = _2106 * _2106;
    float _2133 = ((_2124 * _2124) * (_2129 + (-1.0))) + 1.0;
    float _2142 = (exp2(log2(1.0 - (isnan(1.0) ? _3792 : (isnan(_3792) ? 1.0 : min(_3792, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2143 = 1.0 - _2106;
    float _2153 = (0.5 / (((_2040 * ((_2120 * _2143) + _2106)) + 9.9999999392252902907785028219223e-09) + (((_2040 * _2143) + _2106) * _2120))) * _2120;
    float _3803 = isnan(0.0) ? _2153 : (isnan(_2153) ? 0.0 : max(_2153, 0.0));
    float _2155 = (isnan(1.0) ? _3803 : (isnan(_3803) ? 1.0 : min(_3803, 1.0))) * (_2129 / ((_2133 * _2133) * 3.141590118408203125));
    float _2165 = (((_2142 * cbLight._m0[_2091].x) * _2155) * _1937) + (((_2064 * cbLight._m0[_2008].x) * _2078) * _1921);
    float _2166 = (((_2142 * cbLight._m0[_2091].y) * _2155) * _1937) + (((_2064 * cbLight._m0[_2008].y) * _2078) * _1921);
    float _2167 = (((_2142 * cbLight._m0[_2091].z) * _2155) * _1937) + (((_2064 * cbLight._m0[_2008].z) * _2078) * _1921);
    float _2303;
    float _2305;
    float _2307;
    float _2309;
    float _2311;
    float _2313;
    if (_1893.y == 0u)
    {
        float _2244 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2245 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2244;
        float _2246 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2244;
        float _2247 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2244;
        uvec4 _2259 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2260 = _2259.x;
        uint _2271 = uint((float(_2259.y) * floor(float(uint(cbSceneParam._m0[85u].y * _691) / _2260))) + floor(float(uint(cbSceneParam._m0[85u].x * _690) / _2260)));
        float _2281 = (log2(_2247 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2282 = isnan(0.0) ? _2281 : (isnan(_2281) ? 0.0 : max(_2281, 0.0));
        uint _2285 = uint(isnan(14.0) ? _2282 : (isnan(_2282) ? 14.0 : min(_2282, 14.0)));
        uint _2292 = _2259.z;
        float _2341;
        float _2343;
        float _2345;
        float _2347;
        float _2349;
        float _2351;
        if (((((1u << ((_2292 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2285 << 2u) + (_2271 << 6u)) >> 2u)).x) == 0u) || ((_2292 & 240u) == 0u))
        {
            _2341 = 0.0;
            _2343 = 0.0;
            _2345 = 0.0;
            _2347 = 0.0;
            _2349 = 0.0;
            _2351 = 0.0;
        }
        else
        {
            float _2342;
            float _2344;
            float _2346;
            float _2348;
            float _2350;
            float _2352;
            float _2530 = 0.0;
            float _2531 = 0.0;
            float _2532 = 0.0;
            float _2533 = 0.0;
            float _2534 = 0.0;
            float _2535 = 0.0;
            uint _2536 = 0u;
            uint _2545;
            bool _2546;
            for (;;)
            {
                _2545 = texelFetch(g_lightClassification, int((((_2285 << 5u) + (_2271 << 9u)) + (_2536 << 2u)) >> 2u)).x;
                _2546 = _2545 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2546)
                {
                    frontier_phi_55_pred = _2535;
                    frontier_phi_55_pred_1 = _2534;
                    frontier_phi_55_pred_2 = _2533;
                    frontier_phi_55_pred_3 = _2531;
                    frontier_phi_55_pred_4 = _2530;
                    frontier_phi_55_pred_5 = _2532;
                }
                else
                {
                    float _2743;
                    float _2744;
                    float _2745;
                    float _2746;
                    float _2747;
                    float _2748;
                    uint _2749;
                    _2743 = _2530;
                    _2744 = _2531;
                    _2745 = _2532;
                    _2746 = _2533;
                    _2747 = _2534;
                    _2748 = _2535;
                    _2749 = _2545;
                    float _2691;
                    float _2692;
                    float _2693;
                    float _2694;
                    float _2695;
                    float _2696;
                    for (;;)
                    {
                        uint _2753 = uint(findLSB(_2749)) + (_2536 << 5u);
                        uint _2750 = (_2749 + 4294967295u) & _2749;
                        uint _2755 = _2753 * 48u;
                        vec4 _2769 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2755)).x, texelFetch(g_PointLightRenderingBuffer, int(_2755 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2755 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2755 + 3u)).x));
                        uint _2775 = (_2753 * 48u) + 4u;
                        vec4 _2788 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2775)).x, texelFetch(g_PointLightRenderingBuffer, int(_2775 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2775 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2775 + 3u)).x));
                        float _2789 = _2788.x;
                        float _2790 = _2788.y;
                        float _2791 = _2788.z;
                        uint _2794 = (_2753 * 48u) + 8u;
                        vec3 _2805 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2794)).x, texelFetch(g_PointLightRenderingBuffer, int(_2794 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2794 + 2u)).x));
                        uint _2810 = (_2753 * 48u) + 12u;
                        vec2 _2818 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2810)).x, texelFetch(g_PointLightRenderingBuffer, int(_2810 + 1u)).x));
                        float _2824 = inversesqrt(dot(vec3(_2245, _2246, _2247), vec3(_2245, _2246, _2247)));
                        float _2825 = _2824 * _2245;
                        float _2826 = _2824 * _2246;
                        float _2827 = _2824 * _2247;
                        float _2828 = _2769.x - _2245;
                        float _2829 = _2769.y - _2246;
                        float _2830 = _2769.z - _2247;
                        float _2831 = dot(vec3(_2828, _2829, _2830), vec3(_2828, _2829, _2830));
                        float _2834 = inversesqrt(_2831);
                        float _2835 = _2834 * _2828;
                        float _2836 = _2834 * _2829;
                        float _2837 = _2834 * _2830;
                        float _2838 = dot(vec3(_815, _818, _821), vec3(_2835, _2836, _2837));
                        float _2843 = 1.0 - (_2831 * _2769.w);
                        float _3824 = isnan(0.0) ? _2843 : (isnan(_2843) ? 0.0 : max(_2843, 0.0));
                        float _2844 = isnan(1.0) ? _3824 : (isnan(_3824) ? 1.0 : min(_3824, 1.0));
                        float _2845 = sqrt(_2831) * _2788.w;
                        float _2848 = 1.39999997615814208984375 / (_2845 + 1.39999997615814208984375);
                        float _2849 = _2848 * _2848;
                        float _2850 = 1.0 - _2849;
                        float _2852 = (_2850 * _2850) * _780;
                        float _2855 = ((_2850 * _2838) + _2849) + _2852;
                        float _2860 = _2845 * _2845;
                        float _2865 = ((isnan(0.0) ? _2855 : (isnan(_2855) ? 0.0 : max(_2855, 0.0))) * _2844) / (((_2852 * 2.0) + 1.0) * ((_2860 * 0.699999988079071044921875) + 1.0));
                        float _2869 = dot(vec3(_2835, _2836, _2837), vec3(_2825, _2826, _2827));
                        float _3840 = isnan(0.0) ? _2869 : (isnan(_2869) ? 0.0 : max(_2869, 0.0));
                        float _2876 = dot(vec3((-0.0) - _2825, (-0.0) - _2826, (-0.0) - _2827), vec3(_815, _818, _821)) + 1.0;
                        float _2878 = (isnan(0.0) ? _2876 : (isnan(_2876) ? 0.0 : max(_2876, 0.0))) * 0.5;
                        float _2885 = ((_2878 * _2878) * _2818.x) * exp2((_2818.y * 32.0) * log2(isnan(1.0) ? _3840 : (isnan(_3840) ? 1.0 : min(_3840, 1.0))));
                        float _2887 = _780 / (_780 + 1.0);
                        float _2903 = (-0.0) - _2245;
                        float _2904 = (-0.0) - _2246;
                        float _2905 = (-0.0) - _2247;
                        float _2909 = inversesqrt(dot(vec3(_2903, _2904, _2905), vec3(_2903, _2904, _2905)));
                        float _2910 = _2909 * _2903;
                        float _2911 = _2909 * _2904;
                        float _2912 = _2909 * _2905;
                        float _2920 = exp2(log2(1.0 / ((_2860 * 3.5) + 5.0)) * 0.25);
                        float _2921 = 1.0 - _874;
                        float _2928 = sqrt(1.0 - ((1.0 - (_2921 * _2921)) * (1.0 - (_2920 * _2920))));
                        float _2929 = _2928 * _2928;
                        float _2930 = _2929 * _2929;
                        float _2931 = _2910 + _2835;
                        float _2932 = _2911 + _2836;
                        float _2933 = _2912 + _2837;
                        float _2937 = inversesqrt(dot(vec3(_2931, _2932, _2933), vec3(_2931, _2932, _2933)));
                        float _2941 = dot(vec3(_815, _818, _821), vec3(_2910, _2911, _2912));
                        float _3856 = isnan(0.0) ? _2941 : (isnan(_2941) ? 0.0 : max(_2941, 0.0));
                        float _2944 = isnan(1.0) ? _3856 : (isnan(_3856) ? 1.0 : min(_3856, 1.0));
                        float _2945 = dot(vec3(_815, _818, _821), vec3(_2937 * _2931, _2937 * _2932, _2937 * _2933));
                        float _3867 = isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : max(_2945, 0.0));
                        float _2948 = isnan(1.0) ? _3867 : (isnan(_3867) ? 1.0 : min(_3867, 1.0));
                        float _2952 = ((_2948 * _2948) * (_2930 + (-1.0))) + 1.0;
                        float _2953 = _2848 * _2929;
                        float _2954 = _2953 * _2953;
                        float _2957 = ((1.0 - _2954) * _2838) + _2954;
                        float _3878 = isnan(0.0) ? _2957 : (isnan(_2957) ? 0.0 : max(_2957, 0.0));
                        float _2958 = isnan(1.0) ? _3878 : (isnan(_3878) ? 1.0 : min(_3878, 1.0));
                        float _2959 = 1.0 - _2929;
                        float _2969 = (0.5 / (((_2958 * ((_2944 * _2959) + _2929)) + 9.9999999392252902907785028219223e-09) + (((_2958 * _2959) + _2929) * _2944))) * _2958;
                        float _3889 = isnan(0.0) ? _2969 : (isnan(_2969) ? 0.0 : max(_2969, 0.0));
                        float _2980 = (((_2930 * 3.1415927410125732421875) * (isnan(1.0) ? _3889 : (isnan(_3889) ? 1.0 : min(_3889, 1.0)))) / ((_2952 * _2952) * ((_2860 * 2.1991131305694580078125) + 3.141590118408203125))) * _2844;
                        _2694 = (((((_2789 * 0.3183098733425140380859375) * _2887) * _2885) + _2789) * _2865) + _2746;
                        _2695 = (((((_2790 * 0.3183098733425140380859375) * _2887) * _2885) + _2790) * _2865) + _2747;
                        _2696 = (((((_2791 * 0.3183098733425140380859375) * _2887) * _2885) + _2791) * _2865) + _2748;
                        _2691 = (_2980 * _2805.x) + _2743;
                        _2692 = (_2980 * _2805.y) + _2744;
                        _2693 = (_2980 * _2805.z) + _2745;
                        if (_2750 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2743 = _2691;
                            _2744 = _2692;
                            _2745 = _2693;
                            _2746 = _2694;
                            _2747 = _2695;
                            _2748 = _2696;
                            _2749 = _2750;
                        }
                    }
                    frontier_phi_55_pred = _2696;
                    frontier_phi_55_pred_1 = _2695;
                    frontier_phi_55_pred_2 = _2694;
                    frontier_phi_55_pred_3 = _2692;
                    frontier_phi_55_pred_4 = _2691;
                    frontier_phi_55_pred_5 = _2693;
                }
                _2352 = frontier_phi_55_pred;
                _2350 = frontier_phi_55_pred_1;
                _2348 = frontier_phi_55_pred_2;
                _2344 = frontier_phi_55_pred_3;
                _2342 = frontier_phi_55_pred_4;
                _2346 = frontier_phi_55_pred_5;
                uint _2537 = _2536 + 1u;
                if (_2537 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2530 = _2342;
                    _2531 = _2344;
                    _2532 = _2346;
                    _2533 = _2348;
                    _2534 = _2350;
                    _2535 = _2352;
                    _2536 = _2537;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2341 = _2342;
            _2343 = _2344;
            _2345 = _2346;
            _2347 = _2348;
            _2349 = _2350;
            _2351 = _2352;
        }
        float _2356 = isnan(1.0) ? _853 : (isnan(_853) ? 1.0 : min(_853, 1.0));
        _2303 = (_2356 * _2347) + _2002;
        _2305 = (_2356 * _2349) + _2003;
        _2307 = (_2356 * _2351) + _2004;
        _2309 = ((_2341 * 0.039999999105930328369140625) * _2356) + _2165;
        _2311 = ((_2343 * 0.039999999105930328369140625) * _2356) + _2166;
        _2313 = ((_2345 * 0.039999999105930328369140625) * _2356) + _2167;
    }
    else
    {
        _2303 = _2002;
        _2305 = _2003;
        _2307 = _2004;
        _2309 = _2165;
        _2311 = _2166;
        _2313 = _2167;
    }
    float _2427;
    float _2428;
    float _2429;
    if (_780 > 0.0)
    {
        uint _2363 = _1895 + 4u;
        float _2369 = (-0.0) - _534;
        float _2370 = (-0.0) - _535;
        float _2371 = (-0.0) - _536;
        float _2372 = dot(vec3(cbLight._m0[_1895].xyz), vec3(_2369, _2370, _2371));
        float _3905 = isnan(0.0) ? _2372 : (isnan(_2372) ? 0.0 : max(_2372, 0.0));
        float _2376 = _864 + 1.0;
        float _2378 = (isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0))) * 0.5;
        float _2383 = _2378 * _2378;
        float _2384 = _2383 * exp2(log2(isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0))) * 32.0);
        float _2386 = _780 / (_780 + 1.0);
        float _2387 = isnan(_1904) ? 1.0 : (isnan(1.0) ? _1904 : min(1.0, _1904));
        uint _2397 = _1895 + 5u;
        float _2403 = dot(vec3(cbLight._m0[_1928].xyz), vec3(_2369, _2370, _2371));
        float _3926 = isnan(0.0) ? _2403 : (isnan(_2403) ? 0.0 : max(_2403, 0.0));
        float _2410 = _2383 * exp2(log2(isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0))) * 32.0);
        float _2411 = isnan(_1905) ? 1.0 : (isnan(1.0) ? _1905 : min(1.0, _1905));
        _2427 = ((((_2410 * cbLight._m0[_2397].x) * _2386) * _2411) + (((_2384 * cbLight._m0[_2363].x) * _2386) * _2387)) * 0.3183098733425140380859375;
        _2428 = ((((_2410 * cbLight._m0[_2397].y) * _2386) * _2411) + (((_2384 * cbLight._m0[_2363].y) * _2386) * _2387)) * 0.3183098733425140380859375;
        _2429 = ((((_2410 * cbLight._m0[_2397].z) * _2386) * _2411) + (((_2384 * cbLight._m0[_2363].z) * _2386) * _2387)) * 0.3183098733425140380859375;
    }
    else
    {
        _2427 = 0.0;
        _2428 = 0.0;
        _2429 = 0.0;
    }
    float _3942 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _3953 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _3964 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _3975 = isnan(0.0) ? _778 : (isnan(_778) ? 0.0 : max(_778, 0.0));
    float _2444 = (isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0))) * ((_2303 + ((isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0))) * _853)) + _2427);
    float _2445 = (isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0))) * ((_2305 + ((isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0))) * _853)) + _2428);
    float _2446 = (isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0))) * ((_2307 + ((isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0))) * _853)) + _2429);
    float _2450 = 0.959999978542327880859375 - (exp2(log2(1.0 - _868) * 5.0) * 0.959999978542327880859375);
    float _2475 = _690 / cbSceneParam._m0[86u].x;
    float _2476 = _691 / cbSceneParam._m0[86u].y;
    vec4 _2490 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2475, _2476, (log2((isnan(cbSceneParam._m0[77u].w) ? _797 : (isnan(_797) ? cbSceneParam._m0[77u].w : min(_797, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2492 = _2490.x;
    float _2493 = _2490.y;
    float _2494 = _2490.z;
    float _2495 = _2490.w;
    float _2588;
    float _2590;
    float _2592;
    float _2594;
    if (_797 > cbSceneParam._m0[78u].w)
    {
        float _2551 = isnan(_797) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _797 : min(cbSceneParam._m0[80u].w, _797));
        float _2552 = _2551 / _797;
        float _2563 = _2552 * _297;
        float _2564 = _298 * _2552;
        float _2565 = (-0.0) - _2564;
        float _2566 = _2552 * _299;
        float _2568 = (cbSceneParam._m0[77u].w * _2565) / _2551;
        float _2569 = _2568 + cbSceneParam._m0[79u].w;
        float _2570 = cbSceneParam._m0[79u].w - _2564;
        float _2576 = sqrt(((_2563 * _2563) + (_2564 * _2564)) + (_2566 * _2566));
        float _2579 = (1.0 - (cbSceneParam._m0[77u].w / _2551)) * _2576;
        float _2584 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2586 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2985;
        if (abs((_2565 - _2568) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2985 = ((((_2569 > 0.0) ? exp2(_2584 * _2569) : (2.0 - exp2(_2586 * _2569))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2579;
        }
        else
        {
            float _2716 = 1.0 / cbSceneParam._m0[80u].x;
            float _2717 = isnan(_2570) ? _2569 : (isnan(_2569) ? _2570 : max(_2569, _2570));
            float _2718 = isnan(_2570) ? _2569 : (isnan(_2569) ? _2570 : min(_2569, _2570));
            float _2727 = isnan(0.0) ? _2717 : (isnan(_2717) ? 0.0 : min(_2717, 0.0));
            float _2728 = isnan(0.0) ? _2718 : (isnan(_2718) ? 0.0 : min(_2718, 0.0));
            _2985 = ((abs(_2576 / _2565) * cbSceneParam._m0[80u].y) * ((((_2727 - _2728) * 2.0) - ((exp2(_2584 * (isnan(0.0) ? _2717 : (isnan(_2717) ? 0.0 : max(_2717, 0.0)))) - exp2(_2584 * (isnan(0.0) ? _2718 : (isnan(_2718) ? 0.0 : max(_2718, 0.0))))) * _2716)) - ((exp2(_2586 * _2727) - exp2(_2586 * _2728)) * _2716))) + (_2579 * cbSceneParam._m0[80u].z);
        }
        vec4 _2987 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2475, _2476, 1.0), 0.0);
        float _2996 = exp2((_2985 * (-1.44269502162933349609375)) * (1.0 - _2987.w));
        float _2997 = log2(_2996);
        float _3013 = log2(_2495);
        _2588 = (exp2(_3013 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2997 * cbSceneParam._m0[78u].x)) * _2987.x) / cbSceneParam._m0[78u].x)) + _2492;
        _2590 = (exp2(_3013 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2997 * cbSceneParam._m0[78u].y)) * _2987.y) / cbSceneParam._m0[78u].y)) + _2493;
        _2592 = (exp2(_3013 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2997 * cbSceneParam._m0[78u].z)) * _2987.z) / cbSceneParam._m0[78u].z)) + _2494;
        _2594 = _2996 * _2495;
    }
    else
    {
        _2588 = _2492;
        _2590 = _2493;
        _2592 = _2494;
        _2594 = _2495;
    }
    bool _2606 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2607 = log2(_2594);
    float _2614 = exp2(_2607 * cbSceneParam._m0[78u].x) * ((_2444 + ((_2309 + ((isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0))) * _1664)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _714.x) * _2450) - _2444) * _760));
    float _2615 = exp2(_2607 * cbSceneParam._m0[78u].y) * ((_2445 + ((_2311 + ((isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0))) * _1664)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _714.y) * _2450) - _2445) * _760));
    float _2616 = exp2(_2607 * cbSceneParam._m0[78u].z) * ((_2446 + ((_2313 + ((isnan(0.0) ? _1883 : (isnan(_1883) ? 0.0 : max(_1883, 0.0))) * _1664)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _714.z) * _2450) - _2446) * _760));
    vec4 _2624 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_690, _691));
    float _2626 = _2624.x;
    float _2647 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2626)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2626))) - _797) * cbMtdParam._m0[17u].y;
    float _4026 = isnan(0.0) ? _2647 : (isnan(_2647) ? 0.0 : max(_2647, 0.0));
    float _2649 = (cbInstanceData._m0[_305 + 6u].w * (isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0)))) * (isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0)));
    float _2658 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2658 * (_2606 ? _2614 : (_2614 + (cbSceneParam._m0[72u].w * _2588)));
    SV_Target.y = _2658 * (_2606 ? _2615 : (_2615 + (cbSceneParam._m0[72u].w * _2590)));
    SV_Target.z = _2658 * (_2606 ? _2616 : (_2616 + (cbSceneParam._m0[72u].w * _2592)));
    SV_Target.w = _2649;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2649;
}


