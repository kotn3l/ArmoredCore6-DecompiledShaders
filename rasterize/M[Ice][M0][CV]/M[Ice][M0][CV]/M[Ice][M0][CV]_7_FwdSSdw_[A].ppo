#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1227;
float _3194;
float _3195;
float _3196;
float _3197;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _206 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _207 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _208 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _214 = inversesqrt(dot(vec3(_206, _207, _208), vec3(_206, _207, _208)));
    float _215 = _214 * _206;
    float _216 = _214 * _207;
    float _217 = _214 * _208;
    float _221 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _222 = _221 * NORMAL.x;
    float _223 = _221 * NORMAL.y;
    float _224 = _221 * NORMAL.z;
    float _228 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _229 = _228 * TANGENT.x;
    float _230 = _228 * TANGENT.y;
    float _231 = _228 * TANGENT.z;
    float _236;
    float _237;
    float _238;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _236 = (-0.0) - _222;
        _237 = (-0.0) - _223;
        _238 = (-0.0) - _224;
    }
    else
    {
        _236 = _222;
        _237 = _223;
        _238 = _224;
    }
    float _285 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _295 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _285);
    float _296 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _285);
    float _297 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _285);
    uint _303 = uint(roundEven(NORMAL.w)) * 13u;
    uint _308 = _303 + 1u;
    uint _312 = _303 + 2u;
    float _321 = sqrt(((cbInstanceData._m0[_308].x * cbInstanceData._m0[_308].x) + (cbInstanceData._m0[_303].x * cbInstanceData._m0[_303].x)) + (cbInstanceData._m0[_312].x * cbInstanceData._m0[_312].x));
    float _322 = _321 * TEXCOORD.z;
    float _323 = _321 * TEXCOORD.w;
    vec4 _343 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _352 = (_343.x * 2.0) + (-1.0);
    float _354 = (_343.y * 2.0) + (-1.0);
    float _355 = dot(vec2(_352, _354), vec2(_352, _354));
    float _3206 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _361 = sqrt(1.0 - (isnan(1.0) ? _3206 : (isnan(_3206) ? 1.0 : min(_3206, 1.0))));
    float _364 = fma(_361, _236, fma(_354, _229, _352 * _215));
    float _367 = fma(_361, _237, fma(_354, _230, _352 * _216));
    float _370 = fma(_361, _238, fma(_354, _231, _352 * _217));
    float _374 = inversesqrt(dot(vec3(_364, _367, _370), vec3(_364, _367, _370)));
    float _375 = _374 * _364;
    float _376 = _374 * _367;
    float _405 = (cbMtdParam._m0[17u].w + dot(vec4(_375, _376, _374 * _370, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _322) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _323) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3217 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
    float _406 = isnan(1.0) ? _3217 : (isnan(_3217) ? 1.0 : min(_3217, 1.0));
    vec4 _418 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _423 = _418.w;
    float _435 = dot(vec3(_295, _296, _297), vec3(_215, _216, _217));
    float _438 = dot(vec3(_295, _296, _297), vec3(_229, _230, _231));
    float _441 = dot(vec3(_295, _296, _297), vec3(_236, _237, _238));
    float _447 = inversesqrt(dot(vec3(_435, _438, _441), vec3(_435, _438, _441)));
    float _469 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _489 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_435 * cbMtdParam._m0[14u].x) * _447) * _469) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_438 * cbMtdParam._m0[14u].x) * _447) * _469) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _512 = inversesqrt(dot(vec3(_295, _296, _297), vec3(_295, _296, _297)));
    float _513 = _512 * _295;
    float _514 = _512 * _296;
    float _515 = _512 * _297;
    float _516 = dot(vec4(_513, _514, _515, 0.0), vec4(_236, _237, _238, 0.0));
    float _519 = _516 - cbMtdParam._m0[15u].z;
    float _3228 = isnan(0.0) ? _519 : (isnan(_519) ? 0.0 : max(_519, 0.0));
    float _526 = exp2(log2(1.0 - (isnan(1.0) ? _3228 : (isnan(_3228) ? 1.0 : min(_3228, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _541 = ((((_418.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _489.x) * cbMtdParam._m0[9u].x) * ((_526 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _546 = ((((_418.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _489.y) * cbMtdParam._m0[9u].y) * ((_526 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _551 = ((((_418.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _489.z) * cbMtdParam._m0[9u].z) * ((_526 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _558 = ((cbMtdParam._m0[11u].x - _541) * _406) + _541;
    float _559 = ((cbMtdParam._m0[11u].y - _546) * _406) + _546;
    float _560 = ((cbMtdParam._m0[11u].z - _551) * _406) + _551;
    vec4 _572 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _322) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _323) + cbTextureTilingScale._m0[9u].w));
    float _579 = (_572.x * 2.0) + (-1.0);
    float _580 = (_572.y * 2.0) + (-1.0);
    float _581 = dot(vec2(_579, _580), vec2(_579, _580));
    float _3244 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _593 = (cbMtdParam._m0[16u].y + _343.z) + cbMtdParam._m0[17u].z;
    float _596 = ((_572.z - _593) * _406) + _593;
    float _606 = ((sqrt(1.0 - (isnan(1.0) ? _3244 : (isnan(_3244) ? 1.0 : min(_3244, 1.0)))) - _361) * _406) + _361;
    float _609 = (((_579 - _352) * _406) + _352) + (cbMtdParam._m0[14u].z * _352);
    float _610 = (((_580 - _354) * _406) + _354) + (cbMtdParam._m0[14u].z * _354);
    vec4 _622 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _626 = cbMtdParam._m0[16u].w * _622.x;
    float _628 = _626 - (_626 * _406);
    float _648 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _375));
    float _649 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _376));
    float _656 = isnan(cbInstanceData._m0[8u].x) ? _648 : (isnan(_648) ? cbInstanceData._m0[8u].x : max(_648, cbInstanceData._m0[8u].x));
    float _657 = isnan(cbInstanceData._m0[8u].y) ? _649 : (isnan(_649) ? cbInstanceData._m0[8u].y : max(_649, cbInstanceData._m0[8u].y));
    vec4 _661 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _656 : (isnan(_656) ? cbInstanceData._m0[8u].z : min(_656, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _657 : (isnan(_657) ? cbInstanceData._m0[8u].w : min(_657, cbInstanceData._m0[8u].w))));
    float _694 = _516 - cbMtdParam._m0[15u].x;
    float _3275 = isnan(0.0) ? _694 : (isnan(_694) ? 0.0 : max(_694, 0.0));
    float _704 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3275 : (isnan(_3275) ? 1.0 : min(_3275, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3291 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _705 = isnan(1.0) ? _3291 : (isnan(_3291) ? 1.0 : min(_3291, 1.0));
    float _707 = _705 - (_705 * _406);
    float _711 = fma(_606, _236, fma(_610, _229, _609 * _215));
    float _714 = fma(_606, _237, fma(_610, _230, _609 * _216));
    float _717 = fma(_606, _238, fma(_610, _231, _609 * _217));
    float _721 = inversesqrt(dot(vec3(_711, _714, _717), vec3(_711, _714, _717)));
    float _722 = _721 * _711;
    float _723 = _721 * _714;
    float _724 = _721 * _717;
    float _3302 = isnan(0.0) ? _423 : (isnan(_423) ? 0.0 : max(_423, 0.0));
    float _725 = isnan(1.0) ? _3302 : (isnan(_3302) ? 1.0 : min(_3302, 1.0));
    float _3313 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    float _726 = isnan(1.0) ? _3313 : (isnan(_3313) ? 1.0 : min(_3313, 1.0));
    float _727 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
    float _3329 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
    float _3340 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
    float _3351 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _744 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _749 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _751 = _749.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _906 = sqrt(((_295 * _295) + (_296 * _296)) + (_297 * _297));
        float _912 = (cbMatDynParam._m0[5u].x * _906) + cbMatDynParam._m0[5u].y;
        float _3362 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
        float _913 = isnan(1.0) ? _3362 : (isnan(_3362) ? 1.0 : min(_3362, 1.0));
        float _917 = (cbMatDynParam._m0[5u].z * _906) + cbMatDynParam._m0[5u].w;
        float _3373 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3373 : (isnan(_3373) ? 1.0 : min(_3373, 1.0))) - _913)) + _913) < ((_751 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _761 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _762 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _780 = fma(_724, cbSceneParam._m0[5u].z, fma(_723, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _722));
    float _783 = fma(_724, cbSceneParam._m0[6u].z, fma(_723, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _722));
    float _786 = fma(_724, cbSceneParam._m0[7u].z, fma(_723, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _722));
    uint _799 = _303 + 9u;
    uint _800 = _799 + uint(cbMatDynParam._m0[0u].w);
    float _806 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3329 : (isnan(_3329) ? 1.0 : min(_3329, 1.0)))) * cbInstanceData._m0[_800].x;
    float _807 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3340 : (isnan(_3340) ? 1.0 : min(_3340, 1.0)))) * cbInstanceData._m0[_800].y;
    float _808 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3351 : (isnan(_3351) ? 1.0 : min(_3351, 1.0)))) * cbInstanceData._m0[_800].z;
    float _3384 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _809 = isnan(1.0) ? _3384 : (isnan(_3384) ? 1.0 : min(_3384, 1.0));
    float _3395 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
    float _810 = isnan(1.0) ? _3395 : (isnan(_3395) ? 1.0 : min(_3395, 1.0));
    float _3406 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _811 = isnan(1.0) ? _3406 : (isnan(_3406) ? 1.0 : min(_3406, 1.0));
    vec4 _819 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _761, cbSceneParam._m0[86u].y * _762));
    float _822 = _819.x * TEXCOORD_5.w;
    float _823 = dot(vec3(_722, _723, _724), vec3(_513, _514, _515));
    float _826 = _823 * 2.0;
    float _830 = (_826 * _722) - _513;
    float _831 = (_826 * _723) - _514;
    float _832 = (_826 * _724) - _515;
    float _833 = dot(vec3(_513, _514, _515), vec3(_722, _723, _724));
    float _836 = abs(_833);
    float _3417 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _837 = isnan(1.0) ? _3417 : (isnan(_3417) ? 1.0 : min(_3417, 1.0));
    float _843 = sqrt(_726);
    float _855 = exp2((_843 * 5.0) * log2(1.0 - (_837 * 0.999000012874603271484375))) / (4.0 - (_843 * 3.0));
    float _887 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _891 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _895 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1226;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    float _1239;
    float _1240;
    float _1241;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _951 = fma(_895, cbModelParam._m0[26u].z, fma(_891, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _887));
        float _955 = fma(_895, cbModelParam._m0[27u].z, fma(_891, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _887));
        float _959 = fma(_895, cbModelParam._m0[28u].z, fma(_891, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _887));
        float _984 = _887 + _722;
        float _985 = _891 + _723;
        float _986 = _895 + _724;
        float _996 = fma(_986, cbModelParam._m0[26u].z, fma(_985, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _984)) - _951;
        float _997 = fma(_986, cbModelParam._m0[27u].z, fma(_985, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _984)) - _955;
        float _998 = fma(_986, cbModelParam._m0[28u].z, fma(_985, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _984)) - _959;
        float _1002 = inversesqrt(dot(vec3(_996, _997, _998), vec3(_996, _997, _998)));
        float _1015 = ((_1002 * _996) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_951 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1016 = ((_1002 * _997) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_955 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1017 = ((_1002 * _998) / cbModelParam._m0[34u].z) + ((((((_959 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1020 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1015, _1016, _1017), 0.0);
        vec4 _1027 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1015, _1016, _1017), 0.0);
        vec4 _1034 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1015, _1016, _1017), 0.0);
        vec4 _1041 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1015, _1016, _1017), 0.0);
        float _1054 = exp2((_1020.w + (-0.5)) * 20.0) * 2.0;
        float _1055 = _1054 * (_1020.x + (-0.5));
        float _1056 = _1054 * (_1020.y + (-0.5));
        float _1057 = _1054 * (_1020.z + (-0.5));
        float _1064 = exp2((_1027.w + (-0.5)) * 20.0) * 2.0;
        float _1065 = _1064 * (_1027.x + (-0.5));
        float _1066 = _1064 * (_1027.y + (-0.5));
        float _1067 = _1064 * (_1027.z + (-0.5));
        float _1074 = exp2((_1034.w + (-0.5)) * 20.0) * 2.0;
        float _1075 = _1074 * (_1034.x + (-0.5));
        float _1076 = _1074 * (_1034.y + (-0.5));
        float _1077 = _1074 * (_1034.z + (-0.5));
        float _1084 = exp2((_1041.w + (-0.5)) * 20.0) * 2.0;
        float _1085 = _1084 * (_1041.x + (-0.5));
        float _1086 = _1084 * (_1041.y + (-0.5));
        float _1087 = _1084 * (_1041.z + (-0.5));
        float _1088 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1089 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
        float _1090 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
        float _1091 = _1055 * 0.5;
        float _1092 = _1065 * 0.5;
        float _1093 = _1075 * 0.5;
        float _1094 = dot(vec3(_1091, _1092, _1093), vec3(_1091, _1092, _1093));
        float _1099 = (_1094 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1094);
        float _1108 = (dot(vec3(_722, _723, _724), vec3(_1099 * _1091, _1099 * _1092, _1099 * _1093)) + 1.0) * 0.5;
        float _3443 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1118 = sqrt(((_1092 * _1092) + (_1091 * _1091)) + (_1093 * _1093)) / (_1088 + 9.9999997473787516355514526367188e-06);
        float _3454 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
        float _1119 = isnan(1.0) ? _3454 : (isnan(_3454) ? 1.0 : min(_3454, 1.0));
        float _1120 = _1119 * 2.0;
        float _1124 = (1.0 - _1119) / (_1119 + 1.0);
        float _3465 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1125 = isnan(1.0) ? _3465 : (isnan(_3465) ? 1.0 : min(_3465, 1.0));
        float _1134 = ((((1.0 - _1125) * (_1120 + 2.0)) * exp2(log2(isnan(1.0) ? _3443 : (isnan(_3443) ? 1.0 : min(_3443, 1.0))) * (_1120 + 1.0))) + _1125) * _1088;
        float _1135 = _1056 * 0.5;
        float _1136 = _1066 * 0.5;
        float _1137 = _1076 * 0.5;
        float _1138 = dot(vec3(_1135, _1136, _1137), vec3(_1135, _1136, _1137));
        float _1143 = (_1138 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1138);
        float _1151 = (dot(vec3(_722, _723, _724), vec3(_1143 * _1135, _1143 * _1136, _1143 * _1137)) + 1.0) * 0.5;
        float _3476 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
        float _1160 = sqrt(((_1136 * _1136) + (_1135 * _1135)) + (_1137 * _1137)) / (_1089 + 9.9999997473787516355514526367188e-06);
        float _3487 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1161 = isnan(1.0) ? _3487 : (isnan(_3487) ? 1.0 : min(_3487, 1.0));
        float _1162 = _1161 * 2.0;
        float _1166 = (1.0 - _1161) / (_1161 + 1.0);
        float _3498 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1167 = isnan(1.0) ? _3498 : (isnan(_3498) ? 1.0 : min(_3498, 1.0));
        float _1176 = ((((1.0 - _1167) * (_1162 + 2.0)) * exp2(log2(isnan(1.0) ? _3476 : (isnan(_3476) ? 1.0 : min(_3476, 1.0))) * (_1162 + 1.0))) + _1167) * _1089;
        float _1177 = _1057 * 0.5;
        float _1178 = _1067 * 0.5;
        float _1179 = _1077 * 0.5;
        float _1180 = dot(vec3(_1177, _1178, _1179), vec3(_1177, _1178, _1179));
        float _1185 = (_1180 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1180);
        float _1193 = (dot(vec3(_722, _723, _724), vec3(_1185 * _1177, _1185 * _1178, _1185 * _1179)) + 1.0) * 0.5;
        float _3509 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
        float _1202 = sqrt(((_1178 * _1178) + (_1177 * _1177)) + (_1179 * _1179)) / (_1090 + 9.9999997473787516355514526367188e-06);
        float _3520 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1203 = isnan(1.0) ? _3520 : (isnan(_3520) ? 1.0 : min(_3520, 1.0));
        float _1204 = _1203 * 2.0;
        float _1208 = (1.0 - _1203) / (_1203 + 1.0);
        float _3531 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1209 = isnan(1.0) ? _3531 : (isnan(_3531) ? 1.0 : min(_3531, 1.0));
        float _1218 = ((((1.0 - _1209) * (_1204 + 2.0)) * exp2(log2(isnan(1.0) ? _3509 : (isnan(_3509) ? 1.0 : min(_3509, 1.0))) * (_1204 + 1.0))) + _1209) * _1090;
        _1226 = _1057;
        _1228 = _1056;
        _1229 = _1055;
        _1230 = _1067;
        _1231 = _1066;
        _1232 = _1065;
        _1233 = _1077;
        _1234 = _1076;
        _1235 = _1075;
        _1236 = _1090;
        _1237 = _1089;
        _1238 = _1088;
        _1239 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0)));
        _1240 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0)));
        _1241 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0)));
    }
    else
    {
        _1226 = _1227;
        _1228 = _1227;
        _1229 = _1227;
        _1230 = _1227;
        _1231 = _1227;
        _1232 = _1227;
        _1233 = _1227;
        _1234 = _1227;
        _1235 = _1227;
        _1236 = _1227;
        _1237 = _1227;
        _1238 = _1227;
        _1239 = 0.0;
        _1240 = 0.0;
        _1241 = 0.0;
    }
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    float _1551;
    float _1552;
    float _1553;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1270 = fma(_895, cbModelParam._m0[30u].z, fma(_891, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _887));
        float _1274 = fma(_895, cbModelParam._m0[31u].z, fma(_891, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _887));
        float _1278 = fma(_895, cbModelParam._m0[32u].z, fma(_891, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _887));
        float _1301 = _887 + _722;
        float _1302 = _891 + _723;
        float _1303 = _895 + _724;
        float _1313 = fma(_1303, cbModelParam._m0[30u].z, fma(_1302, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1301)) - _1270;
        float _1314 = fma(_1303, cbModelParam._m0[31u].z, fma(_1302, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1301)) - _1274;
        float _1315 = fma(_1303, cbModelParam._m0[32u].z, fma(_1302, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1301)) - _1278;
        float _1319 = inversesqrt(dot(vec3(_1313, _1314, _1315), vec3(_1313, _1314, _1315)));
        float _1332 = ((_1319 * _1313) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1270 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1333 = ((_1319 * _1314) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1274 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1334 = ((_1319 * _1315) / cbModelParam._m0[35u].z) + ((((((_1278 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1336 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1332, _1333, _1334), 0.0);
        vec4 _1343 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1332, _1333, _1334), 0.0);
        vec4 _1350 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1332, _1333, _1334), 0.0);
        vec4 _1357 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1332, _1333, _1334), 0.0);
        float _1369 = exp2((_1336.w + (-0.5)) * 20.0) * 2.0;
        float _1370 = _1369 * (_1336.x + (-0.5));
        float _1371 = _1369 * (_1336.y + (-0.5));
        float _1372 = _1369 * (_1336.z + (-0.5));
        float _1379 = exp2((_1343.w + (-0.5)) * 20.0) * 2.0;
        float _1380 = _1379 * (_1343.x + (-0.5));
        float _1381 = _1379 * (_1343.y + (-0.5));
        float _1382 = _1379 * (_1343.z + (-0.5));
        float _1389 = exp2((_1350.w + (-0.5)) * 20.0) * 2.0;
        float _1390 = _1389 * (_1350.x + (-0.5));
        float _1391 = _1389 * (_1350.y + (-0.5));
        float _1392 = _1389 * (_1350.z + (-0.5));
        float _1399 = exp2((_1357.w + (-0.5)) * 20.0) * 2.0;
        float _1400 = _1399 * (_1357.x + (-0.5));
        float _1401 = _1399 * (_1357.y + (-0.5));
        float _1402 = _1399 * (_1357.z + (-0.5));
        float _1403 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1404 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1405 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1406 = _1370 * 0.5;
        float _1407 = _1380 * 0.5;
        float _1408 = _1390 * 0.5;
        float _1409 = dot(vec3(_1406, _1407, _1408), vec3(_1406, _1407, _1408));
        float _1414 = (_1409 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1409);
        float _1422 = (dot(vec3(_722, _723, _724), vec3(_1414 * _1406, _1414 * _1407, _1414 * _1408)) + 1.0) * 0.5;
        float _3572 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1431 = sqrt(((_1407 * _1407) + (_1406 * _1406)) + (_1408 * _1408)) / (_1403 + 9.9999997473787516355514526367188e-06);
        float _3583 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1432 = isnan(1.0) ? _3583 : (isnan(_3583) ? 1.0 : min(_3583, 1.0));
        float _1433 = _1432 * 2.0;
        float _1437 = (1.0 - _1432) / (_1432 + 1.0);
        float _3594 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1438 = isnan(1.0) ? _3594 : (isnan(_3594) ? 1.0 : min(_3594, 1.0));
        float _1447 = ((((1.0 - _1438) * (_1433 + 2.0)) * exp2(log2(isnan(1.0) ? _3572 : (isnan(_3572) ? 1.0 : min(_3572, 1.0))) * (_1433 + 1.0))) + _1438) * _1403;
        float _1448 = _1371 * 0.5;
        float _1449 = _1381 * 0.5;
        float _1450 = _1391 * 0.5;
        float _1451 = dot(vec3(_1448, _1449, _1450), vec3(_1448, _1449, _1450));
        float _1456 = (_1451 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1451);
        float _1464 = (dot(vec3(_722, _723, _724), vec3(_1456 * _1448, _1456 * _1449, _1456 * _1450)) + 1.0) * 0.5;
        float _3605 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
        float _1473 = sqrt(((_1449 * _1449) + (_1448 * _1448)) + (_1450 * _1450)) / (_1404 + 9.9999997473787516355514526367188e-06);
        float _3616 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
        float _1474 = isnan(1.0) ? _3616 : (isnan(_3616) ? 1.0 : min(_3616, 1.0));
        float _1475 = _1474 * 2.0;
        float _1479 = (1.0 - _1474) / (_1474 + 1.0);
        float _3627 = isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0));
        float _1480 = isnan(1.0) ? _3627 : (isnan(_3627) ? 1.0 : min(_3627, 1.0));
        float _1489 = ((((1.0 - _1480) * (_1475 + 2.0)) * exp2(log2(isnan(1.0) ? _3605 : (isnan(_3605) ? 1.0 : min(_3605, 1.0))) * (_1475 + 1.0))) + _1480) * _1404;
        float _1490 = _1372 * 0.5;
        float _1491 = _1382 * 0.5;
        float _1492 = _1392 * 0.5;
        float _1493 = dot(vec3(_1490, _1491, _1492), vec3(_1490, _1491, _1492));
        float _1498 = (_1493 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1493);
        float _1506 = (dot(vec3(_722, _723, _724), vec3(_1498 * _1490, _1498 * _1491, _1498 * _1492)) + 1.0) * 0.5;
        float _3638 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1515 = sqrt(((_1491 * _1491) + (_1490 * _1490)) + (_1492 * _1492)) / (_1405 + 9.9999997473787516355514526367188e-06);
        float _3649 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
        float _1516 = isnan(1.0) ? _3649 : (isnan(_3649) ? 1.0 : min(_3649, 1.0));
        float _1517 = _1516 * 2.0;
        float _1521 = (1.0 - _1516) / (_1516 + 1.0);
        float _3660 = isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0));
        float _1522 = isnan(1.0) ? _3660 : (isnan(_3660) ? 1.0 : min(_3660, 1.0));
        float _1531 = ((((1.0 - _1522) * (_1517 + 2.0)) * exp2(log2(isnan(1.0) ? _3638 : (isnan(_3638) ? 1.0 : min(_3638, 1.0))) * (_1517 + 1.0))) + _1522) * _1405;
        _1539 = _1372;
        _1540 = _1371;
        _1541 = _1370;
        _1542 = _1382;
        _1543 = _1381;
        _1544 = _1380;
        _1545 = _1392;
        _1546 = _1391;
        _1547 = _1390;
        _1548 = _1405;
        _1549 = _1404;
        _1550 = _1403;
        _1551 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0)));
        _1552 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0)));
        _1553 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0)));
    }
    else
    {
        _1539 = _1227;
        _1540 = _1227;
        _1541 = _1227;
        _1542 = _1227;
        _1543 = _1227;
        _1544 = _1227;
        _1545 = _1227;
        _1546 = _1227;
        _1547 = _1227;
        _1548 = _1227;
        _1549 = _1227;
        _1550 = _1227;
        _1551 = 0.0;
        _1552 = 0.0;
        _1553 = 0.0;
    }
    float _1563 = (cbModelParam._m0[1u].x * (_1551 - _1239)) + _1239;
    float _1564 = (cbModelParam._m0[1u].x * (_1552 - _1240)) + _1240;
    float _1565 = (cbModelParam._m0[1u].x * (_1553 - _1241)) + _1241;
    float _1586 = fma(_1565, cbSceneParam._m0[89u].z, fma(_1564, cbSceneParam._m0[89u].y, _1563 * cbSceneParam._m0[89u].x));
    float _1589 = fma(_1565, cbSceneParam._m0[90u].z, fma(_1564, cbSceneParam._m0[90u].y, _1563 * cbSceneParam._m0[90u].x));
    float _1592 = fma(_1565, cbSceneParam._m0[91u].z, fma(_1564, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1563));
    float _1607 = _830 * 0.5;
    float _1608 = _831 * 0.5;
    float _1609 = _832 * 0.5;
    float _1610 = dot(vec4(_1607, _1608, _1609, 1.0), vec4(_1541, _1544, _1547, _1550));
    float _1613 = dot(vec4(_1607, _1608, _1609, 1.0), vec4(_1540, _1543, _1546, _1549));
    float _1616 = dot(vec4(_1607, _1608, _1609, 1.0), vec4(_1539, _1542, _1545, _1548));
    float _1650;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1623 = dot(vec4(_1607, _1608, _1609, 1.0), vec4(_1226, _1230, _1233, _1236));
        float _1627 = dot(vec4(_1607, _1608, _1609, 1.0), vec4(_1228, _1231, _1234, _1237));
        float _1631 = dot(vec4(_1607, _1608, _1609, 1.0), vec4(_1229, _1232, _1235, _1238));
        float _1638 = dot(vec4(cbModelParam._m0[39u]), vec4(_1607, _1608, _1609, 1.0));
        _1650 = dot(vec3(isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0)), isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0)), isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1638) ? 0.0 : (isnan(0.0) ? _1638 : max(0.0, _1638))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1650 = 1.0;
    }
    float _1661;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1652 = dot(vec4(cbModelParam._m0[40u]), vec4(_1607, _1608, _1609, 1.0));
        _1661 = dot(vec3(isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0)), isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0)), isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1652) ? 0.0 : (isnan(0.0) ? _1652 : max(0.0, _1652))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1661 = 1.0;
    }
    float _1665 = (_1661 * cbModelParam._m0[1u].x) + (_1650 * (1.0 - cbModelParam._m0[1u].x));
    float _1675 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _726);
    float _1676 = isnan(_1675) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1675 : min(cbModelParam._m0[25u].z, _1675));
    float _1756;
    float _1758;
    float _1760;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1723 = fma(_895, cbModelParam._m0[13u].z, fma(_891, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _887)) + cbModelParam._m0[13u].w;
        float _1727 = fma(_895, cbModelParam._m0[14u].z, fma(_891, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _887)) + cbModelParam._m0[14u].w;
        float _1731 = fma(_895, cbModelParam._m0[15u].z, fma(_891, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _887)) + cbModelParam._m0[15u].w;
        float _1734 = fma(_832, cbModelParam._m0[13u].z, fma(_831, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _830));
        float _1737 = fma(_832, cbModelParam._m0[14u].z, fma(_831, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _830));
        float _1740 = fma(_832, cbModelParam._m0[15u].z, fma(_831, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _830));
        float _1768;
        if (_1734 > 0.0)
        {
            _1768 = abs((1.0 - _1723) / _1734);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1734 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1723 + 1.0) / _1734);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1768 = frontier_phi_19_17_ladder;
        }
        float _1960;
        if (_1737 > 0.0)
        {
            _1960 = abs((1.0 - _1727) / _1737);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1737 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1727 + 1.0) / _1737);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1960 = frontier_phi_28_24_ladder;
        }
        float _2198;
        if (_1740 > 0.0)
        {
            _2198 = abs((1.0 - _1731) / _1740);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1740 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1731 + 1.0) / _1740);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2198 = frontier_phi_39_35_ladder;
        }
        float _2200 = isnan(_1960) ? _1768 : (isnan(_1768) ? _1960 : min(_1768, _1960));
        float _2201 = isnan(_2198) ? _2200 : (isnan(_2200) ? _2198 : min(_2200, _2198));
        float _2205 = (_2201 * _1734) + _1723;
        float _2206 = (_2201 * _1737) + _1727;
        float _2207 = (_2201 * _1740) + _1731;
        float _2208 = _2201 * 9.9999997473787516355514526367188e-05;
        float _2210 = (-1.0) - _2208;
        float _2212 = _2208 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2207 > _2212) || ((_2207 < _2210) || ((_2206 > _2212) || ((_2206 < _2210) || ((_2205 < _2210) || (_2205 > _2212))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2357 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2207, cbModelParam._m0[9u].z, fma(_2206, cbModelParam._m0[9u].y, _2205 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2207, cbModelParam._m0[10u].z, fma(_2206, cbModelParam._m0[10u].y, _2205 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2207, cbModelParam._m0[11u].z, fma(_2206, cbModelParam._m0[11u].y, _2205 * cbModelParam._m0[11u].x))), _1676);
            frontier_phi_18_39_ladder = _2357.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2357.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2357.x * cbModelParam._m0[1u].y;
        }
        _1756 = frontier_phi_18_39_ladder_2;
        _1758 = frontier_phi_18_39_ladder_1;
        _1760 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1744 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_830, _831, _832), _1676);
        _1756 = _1744.x * cbModelParam._m0[1u].y;
        _1758 = _1744.y * cbModelParam._m0[1u].y;
        _1760 = _1744.z * cbModelParam._m0[1u].y;
    }
    float _1764 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _726);
    float _1765 = isnan(_1764) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1764 : min(cbModelParam._m0[25u].w, _1764));
    float _1856;
    float _1858;
    float _1860;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1820 = fma(_895, cbModelParam._m0[21u].z, fma(_891, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _887)) + cbModelParam._m0[21u].w;
        float _1824 = fma(_895, cbModelParam._m0[22u].z, fma(_891, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _887)) + cbModelParam._m0[22u].w;
        float _1828 = fma(_895, cbModelParam._m0[23u].z, fma(_891, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _887)) + cbModelParam._m0[23u].w;
        float _1831 = fma(_832, cbModelParam._m0[21u].z, fma(_831, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _830));
        float _1834 = fma(_832, cbModelParam._m0[22u].z, fma(_831, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _830));
        float _1837 = fma(_832, cbModelParam._m0[23u].z, fma(_831, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _830));
        float _1965;
        if (_1831 > 0.0)
        {
            _1965 = abs((1.0 - _1820) / _1831);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1831 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1820 + 1.0) / _1831);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1965 = frontier_phi_30_26_ladder;
        }
        float _2225;
        if (_1834 > 0.0)
        {
            _2225 = abs((1.0 - _1824) / _1834);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1834 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1824 + 1.0) / _1834);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2225 = frontier_phi_41_37_ladder;
        }
        float _2532;
        if (_1837 > 0.0)
        {
            _2532 = abs((1.0 - _1828) / _1837);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1837 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1828 + 1.0) / _1837);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2532 = frontier_phi_52_47_ladder;
        }
        float _2534 = isnan(_2225) ? _1965 : (isnan(_1965) ? _2225 : min(_1965, _2225));
        float _2535 = isnan(_2532) ? _2534 : (isnan(_2534) ? _2532 : min(_2534, _2532));
        float _2539 = (_2535 * _1831) + _1820;
        float _2540 = (_2535 * _1834) + _1824;
        float _2541 = (_2535 * _1837) + _1828;
        float _2542 = _2535 * 9.9999997473787516355514526367188e-05;
        float _2543 = (-1.0) - _2542;
        float _2545 = _2542 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2541 > _2545) || ((_2541 < _2543) || ((_2540 > _2545) || ((_2540 < _2543) || ((_2539 < _2543) || (_2539 > _2545))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2722 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2541, cbModelParam._m0[17u].z, fma(_2540, cbModelParam._m0[17u].y, _2539 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2541, cbModelParam._m0[18u].z, fma(_2540, cbModelParam._m0[18u].y, _2539 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2541, cbModelParam._m0[19u].z, fma(_2540, cbModelParam._m0[19u].y, _2539 * cbModelParam._m0[19u].x))), _1765);
            frontier_phi_27_52_ladder = _2722.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2722.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2722.y * cbModelParam._m0[1u].z;
        }
        _1856 = frontier_phi_27_52_ladder_1;
        _1858 = frontier_phi_27_52_ladder_2;
        _1860 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1840 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_830, _831, _832), _1765);
        _1856 = _1840.x * cbModelParam._m0[1u].z;
        _1858 = _1840.y * cbModelParam._m0[1u].z;
        _1860 = _1840.z * cbModelParam._m0[1u].z;
    }
    float _1872 = ((((1.0 - _855) * ((_843 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_855 * _843)) * _822;
    float _1873 = _1872 * ((cbModelParam._m0[1u].w * (_1856 - _1756)) + _1756);
    float _1874 = _1872 * ((cbModelParam._m0[1u].w * (_1858 - _1758)) + _1758);
    float _1875 = _1872 * ((cbModelParam._m0[1u].w * (_1860 - _1760)) + _1760);
    float _1878 = fma(_1875, cbSceneParam._m0[89u].z, fma(_1874, cbSceneParam._m0[89u].y, _1873 * cbSceneParam._m0[89u].x));
    float _1881 = fma(_1875, cbSceneParam._m0[90u].z, fma(_1874, cbSceneParam._m0[90u].y, _1873 * cbSceneParam._m0[90u].x));
    float _1884 = fma(_1875, cbSceneParam._m0[91u].z, fma(_1874, cbSceneParam._m0[91u].y, _1873 * cbSceneParam._m0[91u].x));
    vec4 _1892 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_761, _762));
    float _1894 = _1892.w;
    float _1906 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1894);
    float _1907 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1894);
    float _1908 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1894);
    uvec4 _1912 = floatBitsToUint(cbInstanceData._m0[_303 + 5u]);
    uint _1914 = _1912.x * 14u;
    uint _1915 = _1914 + 13u;
    float _1920 = _822 + (-1.0);
    float _1923 = (cbLight._m0[_1915].x * _1920) + 1.0;
    float _1924 = (cbLight._m0[_1915].y * _1920) + 1.0;
    uint _1926 = _1914 + 4u;
    float _1937 = dot(vec3(cbLight._m0[_1914].xyz), vec3(_722, _723, _724));
    float _1940 = isnan(1.0) ? _1923 : (isnan(_1923) ? 1.0 : min(_1923, 1.0));
    float _1941 = cbLight._m0[_1926].x * _1906;
    float _1942 = cbLight._m0[_1926].y * _1907;
    float _1943 = cbLight._m0[_1926].z * _1908;
    uint _1944 = _1914 + 5u;
    uint _1950 = _1914 | 1u;
    float _1956 = dot(vec3(cbLight._m0[_1950].xyz), vec3(_722, _723, _724));
    float _1959 = isnan(1.0) ? _1924 : (isnan(_1924) ? 1.0 : min(_1924, 1.0));
    float _2024;
    float _2025;
    float _2026;
    if (_727 == 0.0)
    {
        float _3796 = isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0));
        float _3807 = isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0));
        float _1978 = (isnan(1.0) ? _3796 : (isnan(_3796) ? 1.0 : min(_3796, 1.0))) * 0.3183098733425140380859375;
        float _1980 = (isnan(1.0) ? _3807 : (isnan(_3807) ? 1.0 : min(_3807, 1.0))) * 0.3183098733425140380859375;
        _2024 = ((cbLight._m0[_1944].x * _1959) * _1980) + ((_1941 * _1940) * _1978);
        _2025 = ((_1959 * cbLight._m0[_1944].y) * _1980) + ((_1942 * _1940) * _1978);
        _2026 = ((_1959 * cbLight._m0[_1944].z) * _1980) + ((_1943 * _1940) * _1978);
    }
    else
    {
        float _1990 = _1937 + _727;
        float _1993 = (_727 * 2.0) + 1.0;
        float _1994 = (isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0))) / _1993;
        float _2001 = _1956 + _727;
        float _2003 = (isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0))) / _1993;
        _2024 = (((_2003 * cbLight._m0[_1944].x) * _1959) + ((_1941 * _1994) * _1940)) * 0.3183098733425140380859375;
        _2025 = (((_2003 * cbLight._m0[_1944].y) * _1959) + ((_1942 * _1994) * _1940)) * 0.3183098733425140380859375;
        _2026 = (((_2003 * cbLight._m0[_1944].z) * _1959) + ((_1943 * _1994) * _1940)) * 0.3183098733425140380859375;
    }
    uint _2030 = _1914 + 8u;
    float _2046 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1914].w)) * _726) * 0.949999988079071044921875);
    float _2047 = _2046 * _2046;
    float _2048 = cbLight._m0[_1914].x + _513;
    float _2049 = cbLight._m0[_1914].y + _514;
    float _2050 = cbLight._m0[_1914].z + _515;
    float _2054 = inversesqrt(dot(vec3(_2048, _2049, _2050), vec3(_2048, _2049, _2050)));
    float _2055 = _2054 * _2048;
    float _2056 = _2054 * _2049;
    float _2057 = _2054 * _2050;
    float _2058 = dot(vec3(_722, _723, _724), vec3(cbLight._m0[_1914].xyz));
    float _3828 = isnan(0.0) ? _2058 : (isnan(_2058) ? 0.0 : max(_2058, 0.0));
    float _2061 = isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0));
    float _3839 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _2062 = isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0));
    float _2063 = dot(vec3(_722, _723, _724), vec3(_2055, _2056, _2057));
    float _3850 = isnan(0.0) ? _2063 : (isnan(_2063) ? 0.0 : max(_2063, 0.0));
    float _2066 = isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0));
    float _2067 = dot(vec3(cbLight._m0[_1914].xyz), vec3(_2055, _2056, _2057));
    float _3861 = isnan(0.0) ? _2067 : (isnan(_2067) ? 0.0 : max(_2067, 0.0));
    float _2071 = _2047 * _2047;
    float _2075 = ((_2066 * _2066) * (_2071 + (-1.0))) + 1.0;
    float _2086 = (exp2(log2(1.0 - (isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2087 = 1.0 - _2047;
    float _2098 = (0.5 / (((_2062 * ((_2061 * _2087) + _2047)) + 9.9999999392252902907785028219223e-09) + (((_2062 * _2087) + _2047) * _2061))) * _2061;
    float _3872 = isnan(0.0) ? _2098 : (isnan(_2098) ? 0.0 : max(_2098, 0.0));
    float _2100 = (isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0))) * (_2071 / ((_2075 * _2075) * 3.141590118408203125));
    uint _2116 = _1914 + 9u;
    float _2130 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1950].w)) * _726) * 0.949999988079071044921875);
    float _2131 = _2130 * _2130;
    float _2132 = cbLight._m0[_1950].x + _513;
    float _2133 = cbLight._m0[_1950].y + _514;
    float _2134 = cbLight._m0[_1950].z + _515;
    float _2138 = inversesqrt(dot(vec3(_2132, _2133, _2134), vec3(_2132, _2133, _2134)));
    float _2139 = _2138 * _2132;
    float _2140 = _2138 * _2133;
    float _2141 = _2138 * _2134;
    float _2142 = dot(vec3(_722, _723, _724), vec3(cbLight._m0[_1950].xyz));
    float _3883 = isnan(0.0) ? _2142 : (isnan(_2142) ? 0.0 : max(_2142, 0.0));
    float _2145 = isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0));
    float _2146 = dot(vec3(_722, _723, _724), vec3(_2139, _2140, _2141));
    float _3894 = isnan(0.0) ? _2146 : (isnan(_2146) ? 0.0 : max(_2146, 0.0));
    float _2149 = isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0));
    float _2150 = dot(vec3(cbLight._m0[_1950].xyz), vec3(_2139, _2140, _2141));
    float _3905 = isnan(0.0) ? _2150 : (isnan(_2150) ? 0.0 : max(_2150, 0.0));
    float _2154 = _2131 * _2131;
    float _2158 = ((_2149 * _2149) * (_2154 + (-1.0))) + 1.0;
    float _2167 = (exp2(log2(1.0 - (isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2168 = 1.0 - _2131;
    float _2178 = (0.5 / (((_2062 * ((_2145 * _2168) + _2131)) + 9.9999999392252902907785028219223e-09) + (((_2062 * _2168) + _2131) * _2145))) * _2145;
    float _3916 = isnan(0.0) ? _2178 : (isnan(_2178) ? 0.0 : max(_2178, 0.0));
    float _2180 = (isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0))) * (_2154 / ((_2158 * _2158) * 3.141590118408203125));
    float _2190 = (((_2167 * cbLight._m0[_2116].x) * _2180) * _1959) + ((((cbLight._m0[_2030].x * _1906) * _2086) * _2100) * _1940);
    float _2191 = (((_2167 * cbLight._m0[_2116].y) * _2180) * _1959) + ((((cbLight._m0[_2030].y * _1907) * _2086) * _2100) * _1940);
    float _2192 = (((_2167 * cbLight._m0[_2116].z) * _2180) * _1959) + ((((cbLight._m0[_2030].z * _1908) * _2086) * _2100) * _1940);
    float _2328;
    float _2330;
    float _2332;
    float _2334;
    float _2336;
    float _2338;
    if (_1912.y == 0u)
    {
        float _2269 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2270 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2269;
        float _2271 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2269;
        float _2272 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2269;
        uvec4 _2284 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2285 = _2284.x;
        uint _2296 = uint((float(_2284.y) * floor(float(uint(cbSceneParam._m0[85u].y * _762) / _2285))) + floor(float(uint(cbSceneParam._m0[85u].x * _761) / _2285)));
        float _2306 = (log2(_2272 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2307 = isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : max(_2306, 0.0));
        uint _2310 = uint(isnan(14.0) ? _2307 : (isnan(_2307) ? 14.0 : min(_2307, 14.0)));
        uint _2317 = _2284.z;
        float _2366;
        float _2368;
        float _2370;
        float _2372;
        float _2374;
        float _2376;
        if (((((1u << ((_2317 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2310 << 2u) + (_2296 << 6u)) >> 2u)).x) == 0u) || ((_2317 & 240u) == 0u))
        {
            _2366 = 0.0;
            _2368 = 0.0;
            _2370 = 0.0;
            _2372 = 0.0;
            _2374 = 0.0;
            _2376 = 0.0;
        }
        else
        {
            float _2367;
            float _2369;
            float _2371;
            float _2373;
            float _2375;
            float _2377;
            float _2558 = 0.0;
            float _2559 = 0.0;
            float _2560 = 0.0;
            float _2561 = 0.0;
            float _2562 = 0.0;
            float _2563 = 0.0;
            uint _2564 = 0u;
            uint _2573;
            bool _2574;
            for (;;)
            {
                _2573 = texelFetch(g_lightClassification, int((((_2310 << 5u) + (_2296 << 9u)) + (_2564 << 2u)) >> 2u)).x;
                _2574 = _2573 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2574)
                {
                    frontier_phi_58_pred = _2558;
                    frontier_phi_58_pred_1 = _2563;
                    frontier_phi_58_pred_2 = _2562;
                    frontier_phi_58_pred_3 = _2561;
                    frontier_phi_58_pred_4 = _2560;
                    frontier_phi_58_pred_5 = _2559;
                }
                else
                {
                    float _2795;
                    float _2796;
                    float _2797;
                    float _2798;
                    float _2799;
                    float _2800;
                    uint _2801;
                    _2795 = _2558;
                    _2796 = _2559;
                    _2797 = _2560;
                    _2798 = _2561;
                    _2799 = _2562;
                    _2800 = _2563;
                    _2801 = _2573;
                    float _2727;
                    float _2728;
                    float _2729;
                    float _2730;
                    float _2731;
                    float _2732;
                    for (;;)
                    {
                        uint _2805 = uint(findLSB(_2801)) + (_2564 << 5u);
                        uint _2802 = (_2801 + 4294967295u) & _2801;
                        uint _2807 = _2805 * 48u;
                        vec4 _2821 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2807)).x, texelFetch(g_PointLightRenderingBuffer, int(_2807 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2807 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2807 + 3u)).x));
                        uint _2827 = (_2805 * 48u) + 4u;
                        vec4 _2840 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2827)).x, texelFetch(g_PointLightRenderingBuffer, int(_2827 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2827 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2827 + 3u)).x));
                        float _2841 = _2840.x;
                        float _2842 = _2840.y;
                        float _2843 = _2840.z;
                        uint _2846 = (_2805 * 48u) + 8u;
                        vec3 _2857 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2846)).x, texelFetch(g_PointLightRenderingBuffer, int(_2846 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2846 + 2u)).x));
                        uint _2862 = (_2805 * 48u) + 12u;
                        vec2 _2870 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2862)).x, texelFetch(g_PointLightRenderingBuffer, int(_2862 + 1u)).x));
                        float _2876 = inversesqrt(dot(vec3(_2270, _2271, _2272), vec3(_2270, _2271, _2272)));
                        float _2877 = _2876 * _2270;
                        float _2878 = _2876 * _2271;
                        float _2879 = _2876 * _2272;
                        float _2880 = _2821.x - _2270;
                        float _2881 = _2821.y - _2271;
                        float _2882 = _2821.z - _2272;
                        float _2883 = dot(vec3(_2880, _2881, _2882), vec3(_2880, _2881, _2882));
                        float _2886 = inversesqrt(_2883);
                        float _2887 = _2886 * _2880;
                        float _2888 = _2886 * _2881;
                        float _2889 = _2886 * _2882;
                        float _2890 = dot(vec3(_780, _783, _786), vec3(_2887, _2888, _2889));
                        float _2895 = 1.0 - (_2883 * _2821.w);
                        float _3937 = isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0));
                        float _2896 = isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0));
                        float _2897 = sqrt(_2883) * _2840.w;
                        float _2900 = 1.39999997615814208984375 / (_2897 + 1.39999997615814208984375);
                        float _2901 = _2900 * _2900;
                        float _2902 = 1.0 - _2901;
                        float _2904 = (_2902 * _2902) * _727;
                        float _2907 = ((_2902 * _2890) + _2901) + _2904;
                        float _2912 = _2897 * _2897;
                        float _2917 = ((isnan(0.0) ? _2907 : (isnan(_2907) ? 0.0 : max(_2907, 0.0))) * _2896) / (((_2904 * 2.0) + 1.0) * ((_2912 * 0.699999988079071044921875) + 1.0));
                        float _2921 = dot(vec3(_2887, _2888, _2889), vec3(_2877, _2878, _2879));
                        float _3953 = isnan(0.0) ? _2921 : (isnan(_2921) ? 0.0 : max(_2921, 0.0));
                        float _2928 = dot(vec3((-0.0) - _2877, (-0.0) - _2878, (-0.0) - _2879), vec3(_780, _783, _786)) + 1.0;
                        float _2930 = (isnan(0.0) ? _2928 : (isnan(_2928) ? 0.0 : max(_2928, 0.0))) * 0.5;
                        float _2937 = ((_2930 * _2930) * _2870.x) * exp2((_2870.y * 32.0) * log2(isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0))));
                        float _2939 = _727 / (_727 + 1.0);
                        float _2955 = (-0.0) - _2270;
                        float _2956 = (-0.0) - _2271;
                        float _2957 = (-0.0) - _2272;
                        float _2961 = inversesqrt(dot(vec3(_2955, _2956, _2957), vec3(_2955, _2956, _2957)));
                        float _2962 = _2961 * _2955;
                        float _2963 = _2961 * _2956;
                        float _2964 = _2961 * _2957;
                        float _2972 = exp2(log2(1.0 / ((_2912 * 3.5) + 5.0)) * 0.25);
                        float _2973 = 1.0 - _843;
                        float _2980 = sqrt(1.0 - ((1.0 - (_2973 * _2973)) * (1.0 - (_2972 * _2972))));
                        float _2981 = _2980 * _2980;
                        float _2982 = _2981 * _2981;
                        float _2983 = _2962 + _2887;
                        float _2984 = _2963 + _2888;
                        float _2985 = _2964 + _2889;
                        float _2989 = inversesqrt(dot(vec3(_2983, _2984, _2985), vec3(_2983, _2984, _2985)));
                        float _2993 = dot(vec3(_780, _783, _786), vec3(_2962, _2963, _2964));
                        float _3969 = isnan(0.0) ? _2993 : (isnan(_2993) ? 0.0 : max(_2993, 0.0));
                        float _2996 = isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0));
                        float _2997 = dot(vec3(_780, _783, _786), vec3(_2989 * _2983, _2989 * _2984, _2989 * _2985));
                        float _3980 = isnan(0.0) ? _2997 : (isnan(_2997) ? 0.0 : max(_2997, 0.0));
                        float _3000 = isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0));
                        float _3004 = ((_3000 * _3000) * (_2982 + (-1.0))) + 1.0;
                        float _3005 = _2900 * _2981;
                        float _3006 = _3005 * _3005;
                        float _3009 = ((1.0 - _3006) * _2890) + _3006;
                        float _3991 = isnan(0.0) ? _3009 : (isnan(_3009) ? 0.0 : max(_3009, 0.0));
                        float _3010 = isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0));
                        float _3011 = 1.0 - _2981;
                        float _3021 = (0.5 / (((_3010 * ((_2996 * _3011) + _2981)) + 9.9999999392252902907785028219223e-09) + (((_3010 * _3011) + _2981) * _2996))) * _3010;
                        float _4002 = isnan(0.0) ? _3021 : (isnan(_3021) ? 0.0 : max(_3021, 0.0));
                        float _3032 = (((_2982 * 3.1415927410125732421875) * (isnan(1.0) ? _4002 : (isnan(_4002) ? 1.0 : min(_4002, 1.0)))) / ((_3004 * _3004) * ((_2912 * 2.1991131305694580078125) + 3.141590118408203125))) * _2896;
                        _2730 = (((((_2841 * 0.3183098733425140380859375) * _2939) * _2937) + _2841) * _2917) + _2798;
                        _2731 = (((((_2842 * 0.3183098733425140380859375) * _2939) * _2937) + _2842) * _2917) + _2799;
                        _2732 = (((((_2843 * 0.3183098733425140380859375) * _2939) * _2937) + _2843) * _2917) + _2800;
                        _2727 = (_3032 * _2857.x) + _2795;
                        _2728 = (_3032 * _2857.y) + _2796;
                        _2729 = (_3032 * _2857.z) + _2797;
                        if (_2802 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2795 = _2727;
                            _2796 = _2728;
                            _2797 = _2729;
                            _2798 = _2730;
                            _2799 = _2731;
                            _2800 = _2732;
                            _2801 = _2802;
                        }
                    }
                    frontier_phi_58_pred = _2727;
                    frontier_phi_58_pred_1 = _2732;
                    frontier_phi_58_pred_2 = _2731;
                    frontier_phi_58_pred_3 = _2730;
                    frontier_phi_58_pred_4 = _2729;
                    frontier_phi_58_pred_5 = _2728;
                }
                _2367 = frontier_phi_58_pred;
                _2377 = frontier_phi_58_pred_1;
                _2375 = frontier_phi_58_pred_2;
                _2373 = frontier_phi_58_pred_3;
                _2371 = frontier_phi_58_pred_4;
                _2369 = frontier_phi_58_pred_5;
                uint _2565 = _2564 + 1u;
                if (_2565 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2558 = _2367;
                    _2559 = _2369;
                    _2560 = _2371;
                    _2561 = _2373;
                    _2562 = _2375;
                    _2563 = _2377;
                    _2564 = _2565;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2366 = _2367;
            _2368 = _2369;
            _2370 = _2371;
            _2372 = _2373;
            _2374 = _2375;
            _2376 = _2377;
        }
        float _2381 = isnan(1.0) ? _822 : (isnan(_822) ? 1.0 : min(_822, 1.0));
        _2328 = (_2381 * _2372) + _2024;
        _2330 = (_2381 * _2374) + _2025;
        _2332 = (_2381 * _2376) + _2026;
        _2334 = ((_2366 * 0.039999999105930328369140625) * _2381) + _2190;
        _2336 = ((_2368 * 0.039999999105930328369140625) * _2381) + _2191;
        _2338 = ((_2370 * 0.039999999105930328369140625) * _2381) + _2192;
    }
    else
    {
        _2328 = _2024;
        _2330 = _2025;
        _2332 = _2026;
        _2334 = _2190;
        _2336 = _2191;
        _2338 = _2192;
    }
    float _2455;
    float _2456;
    float _2457;
    if (_727 > 0.0)
    {
        uint _2388 = _1914 + 4u;
        float _2394 = (-0.0) - _513;
        float _2395 = (-0.0) - _514;
        float _2396 = (-0.0) - _515;
        float _2397 = dot(vec3(cbLight._m0[_1914].xyz), vec3(_2394, _2395, _2396));
        float _4018 = isnan(0.0) ? _2397 : (isnan(_2397) ? 0.0 : max(_2397, 0.0));
        float _2401 = _833 + 1.0;
        float _2403 = (isnan(0.0) ? _2401 : (isnan(_2401) ? 0.0 : max(_2401, 0.0))) * 0.5;
        float _2408 = _2403 * _2403;
        float _2409 = _2408 * exp2(log2(isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0))) * 32.0);
        float _2411 = _727 / (_727 + 1.0);
        float _2412 = isnan(_1923) ? 1.0 : (isnan(1.0) ? _1923 : min(1.0, _1923));
        uint _2425 = _1914 + 5u;
        float _2431 = dot(vec3(cbLight._m0[_1950].xyz), vec3(_2394, _2395, _2396));
        float _4039 = isnan(0.0) ? _2431 : (isnan(_2431) ? 0.0 : max(_2431, 0.0));
        float _2438 = _2408 * exp2(log2(isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0))) * 32.0);
        float _2439 = isnan(_1924) ? 1.0 : (isnan(1.0) ? _1924 : min(1.0, _1924));
        _2455 = ((((_2438 * cbLight._m0[_2425].x) * _2411) * _2439) + ((((cbLight._m0[_2388].x * _1906) * _2409) * _2411) * _2412)) * 0.3183098733425140380859375;
        _2456 = ((((_2438 * cbLight._m0[_2425].y) * _2411) * _2439) + ((((cbLight._m0[_2388].y * _1907) * _2409) * _2411) * _2412)) * 0.3183098733425140380859375;
        _2457 = ((((_2438 * cbLight._m0[_2425].z) * _2411) * _2439) + ((((cbLight._m0[_2388].z * _1908) * _2409) * _2411) * _2412)) * 0.3183098733425140380859375;
    }
    else
    {
        _2455 = 0.0;
        _2456 = 0.0;
        _2457 = 0.0;
    }
    float _4055 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
    float _4066 = isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0));
    float _4077 = isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0));
    float _4088 = isnan(0.0) ? _725 : (isnan(_725) ? 0.0 : max(_725, 0.0));
    float _2472 = (isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0))) * ((_2328 + ((isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0))) * _822)) + _2455);
    float _2473 = (isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0))) * ((_2330 + ((isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0))) * _822)) + _2456);
    float _2474 = (isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0))) * ((_2332 + ((isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0))) * _822)) + _2457);
    float _2478 = 0.959999978542327880859375 - (exp2(log2(1.0 - _837) * 5.0) * 0.959999978542327880859375);
    float _2489 = (_2472 + ((_2334 + ((isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0))) * _1665)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _661.x) * _2478) - _2472) * _707);
    float _2491 = (_2473 + ((_2336 + ((isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0))) * _1665)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _661.y) * _2478) - _2473) * _707);
    float _2493 = (_2474 + ((_2338 + ((isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0))) * _1665)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _661.z) * _2478) - _2474) * _707);
    float _2498 = cbInstanceData._m0[_303 + 6u].w * (isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0)));
    float _2503 = _761 / cbSceneParam._m0[86u].x;
    float _2504 = _762 / cbSceneParam._m0[86u].y;
    vec4 _2518 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2503, _2504, (log2((isnan(cbSceneParam._m0[77u].w) ? _744 : (isnan(_744) ? cbSceneParam._m0[77u].w : min(_744, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2520 = _2518.x;
    float _2521 = _2518.y;
    float _2522 = _2518.z;
    float _2523 = _2518.w;
    float _2616;
    float _2618;
    float _2620;
    float _2622;
    if (_744 > cbSceneParam._m0[78u].w)
    {
        float _2579 = isnan(_744) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _744 : min(cbSceneParam._m0[80u].w, _744));
        float _2580 = _2579 / _744;
        float _2591 = _2580 * _295;
        float _2592 = _296 * _2580;
        float _2593 = (-0.0) - _2592;
        float _2594 = _2580 * _297;
        float _2596 = (cbSceneParam._m0[77u].w * _2593) / _2579;
        float _2597 = _2596 + cbSceneParam._m0[79u].w;
        float _2598 = cbSceneParam._m0[79u].w - _2592;
        float _2604 = sqrt(((_2591 * _2591) + (_2592 * _2592)) + (_2594 * _2594));
        float _2607 = (1.0 - (cbSceneParam._m0[77u].w / _2579)) * _2604;
        float _2612 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2614 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3037;
        if (abs((_2593 - _2596) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3037 = ((((_2597 > 0.0) ? exp2(_2612 * _2597) : (2.0 - exp2(_2614 * _2597))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2607;
        }
        else
        {
            float _2752 = 1.0 / cbSceneParam._m0[80u].x;
            float _2753 = isnan(_2598) ? _2597 : (isnan(_2597) ? _2598 : max(_2597, _2598));
            float _2754 = isnan(_2598) ? _2597 : (isnan(_2597) ? _2598 : min(_2597, _2598));
            float _2763 = isnan(0.0) ? _2753 : (isnan(_2753) ? 0.0 : min(_2753, 0.0));
            float _2764 = isnan(0.0) ? _2754 : (isnan(_2754) ? 0.0 : min(_2754, 0.0));
            _3037 = ((abs(_2604 / _2593) * cbSceneParam._m0[80u].y) * ((((_2763 - _2764) * 2.0) - ((exp2(_2612 * (isnan(0.0) ? _2753 : (isnan(_2753) ? 0.0 : max(_2753, 0.0)))) - exp2(_2612 * (isnan(0.0) ? _2754 : (isnan(_2754) ? 0.0 : max(_2754, 0.0))))) * _2752)) - ((exp2(_2614 * _2763) - exp2(_2614 * _2764)) * _2752))) + (_2607 * cbSceneParam._m0[80u].z);
        }
        vec4 _3039 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2503, _2504, 1.0), 0.0);
        float _3048 = exp2((_3037 * (-1.44269502162933349609375)) * (1.0 - _3039.w));
        float _3049 = log2(_3048);
        float _3065 = log2(_2523);
        _2616 = (exp2(_3065 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3049 * cbSceneParam._m0[78u].x)) * _3039.x) / cbSceneParam._m0[78u].x)) + _2520;
        _2618 = (exp2(_3065 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3049 * cbSceneParam._m0[78u].y)) * _3039.y) / cbSceneParam._m0[78u].y)) + _2521;
        _2620 = (exp2(_3065 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3049 * cbSceneParam._m0[78u].z)) * _3039.z) / cbSceneParam._m0[78u].z)) + _2522;
        _2622 = _3048 * _2523;
    }
    else
    {
        _2616 = _2520;
        _2618 = _2521;
        _2620 = _2522;
        _2622 = _2523;
    }
    bool _3075;
    float _2677;
    vec4 _2680;
    float _2682;
    vec4 _2684;
    float _2692;
    float _2693;
    float _2694;
    float _2695;
    bool _2705;
    for (;;)
    {
        bool _2634 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2635 = log2(_2622);
        float _2642 = exp2(_2635 * cbSceneParam._m0[78u].x) * _2489;
        float _2643 = exp2(_2635 * cbSceneParam._m0[78u].y) * _2491;
        float _2644 = exp2(_2635 * cbSceneParam._m0[78u].z) * _2493;
        vec4 _2652 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_761, _762));
        float _2654 = _2652.x;
        float _2675 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2654)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2654))) - _744) * cbMtdParam._m0[17u].y;
        float _4139 = isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : max(_2675, 0.0));
        _2677 = _2498 * (isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0)));
        float _2678 = _751 + (-0.5);
        _2680 = cbMtdParam._m0[1u];
        _2682 = _2680.y * _2678;
        _2684 = cbMatDynParam._m0[0u];
        float _2691 = (roundEven(_2684.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2692 = _2691 * (_2634 ? _2642 : (_2642 + (cbSceneParam._m0[72u].w * _2616)));
        _2693 = _2691 * (_2634 ? _2643 : (_2643 + (cbSceneParam._m0[72u].w * _2618)));
        _2694 = _2691 * (_2634 ? _2644 : (_2644 + (cbSceneParam._m0[72u].w * _2620)));
        _2695 = _2678 * 0.999000012874603271484375;
        _2705 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2705)
        {
            if ((cbInstanceData._m0[_303 + 7u].x + _2695) < 0.5)
            {
                _3075 = true;
                break;
            }
        }
        uint _2787 = _799 + uint(_2684.w);
        if ((cbInstanceData._m0[_2787].w < 1.0) && ((cbInstanceData._m0[_2787].w + _2695) < 0.5))
        {
            _3075 = true;
            break;
        }
        if ((_2682 + _423) < _2680.x)
        {
            _3075 = true;
            break;
        }
        _3075 = false;
        break;
    }
    float _3080;
    if (_3075)
    {
        discard_state = true;
        _3080 = 0.0;
    }
    else
    {
        _3080 = _2677;
    }
    SV_Target.x = _2692;
    SV_Target.y = _2693;
    SV_Target.z = _2694;
    SV_Target.w = _3080;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2677;
    discard_exit();
}


