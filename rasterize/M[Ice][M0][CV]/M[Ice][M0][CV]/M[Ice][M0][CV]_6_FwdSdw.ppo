#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1041;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _196 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _197 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _198 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _204 = inversesqrt(dot(vec3(_196, _197, _198), vec3(_196, _197, _198)));
    float _205 = _204 * _196;
    float _206 = _204 * _197;
    float _207 = _204 * _198;
    float _211 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _212 = _211 * NORMAL.x;
    float _213 = _211 * NORMAL.y;
    float _214 = _211 * NORMAL.z;
    float _218 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _219 = _218 * TANGENT.x;
    float _220 = _218 * TANGENT.y;
    float _221 = _218 * TANGENT.z;
    float _226;
    float _227;
    float _228;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _226 = (-0.0) - _212;
        _227 = (-0.0) - _213;
        _228 = (-0.0) - _214;
    }
    else
    {
        _226 = _212;
        _227 = _213;
        _228 = _214;
    }
    float _273 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _283 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _273);
    float _284 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _273);
    float _285 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _273);
    vec4 _299 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _308 = (_299.x * 2.0) + (-1.0);
    float _310 = (_299.y * 2.0) + (-1.0);
    float _311 = dot(vec2(_308, _310), vec2(_308, _310));
    float _3214 = isnan(0.0) ? _311 : (isnan(_311) ? 0.0 : max(_311, 0.0));
    float _317 = sqrt(1.0 - (isnan(1.0) ? _3214 : (isnan(_3214) ? 1.0 : min(_3214, 1.0))));
    float _320 = fma(_317, _226, fma(_310, _219, _308 * _205));
    float _323 = fma(_317, _227, fma(_310, _220, _308 * _206));
    float _326 = fma(_317, _228, fma(_310, _221, _308 * _207));
    float _330 = inversesqrt(dot(vec3(_320, _323, _326), vec3(_320, _323, _326)));
    float _331 = _330 * _320;
    float _332 = _330 * _323;
    vec4 _344 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _349 = _344.w;
    float _361 = dot(vec3(_283, _284, _285), vec3(_205, _206, _207));
    float _364 = dot(vec3(_283, _284, _285), vec3(_219, _220, _221));
    float _367 = dot(vec3(_283, _284, _285), vec3(_226, _227, _228));
    float _373 = inversesqrt(dot(vec3(_361, _364, _367), vec3(_361, _364, _367)));
    float _395 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _415 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_361 * cbMtdParam._m0[14u].x) * _373) * _395) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_364 * cbMtdParam._m0[14u].x) * _373) * _395) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _439 = inversesqrt(dot(vec3(_283, _284, _285), vec3(_283, _284, _285)));
    float _440 = _439 * _283;
    float _441 = _439 * _284;
    float _442 = _439 * _285;
    float _443 = dot(vec4(_440, _441, _442, 0.0), vec4(_226, _227, _228, 0.0));
    float _446 = _443 - cbMtdParam._m0[15u].z;
    float _3225 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _453 = exp2(log2(1.0 - (isnan(1.0) ? _3225 : (isnan(_3225) ? 1.0 : min(_3225, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _468 = ((((_344.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _415.x) * cbMtdParam._m0[9u].x) * ((_453 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _473 = ((((_344.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _415.y) * cbMtdParam._m0[9u].y) * ((_453 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _478 = ((((_344.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _415.z) * cbMtdParam._m0[9u].z) * ((_453 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _487 = (cbMtdParam._m0[16u].y + _299.z) + cbMtdParam._m0[17u].z;
    vec4 _499 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _503 = cbMtdParam._m0[16u].w * _499.x;
    float _515 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _516 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _526 = cbSceneParam._m0[86u].x * ((_515 / cbSceneParam._m0[86u].x) + (_331 * cbMtdParam._m0[18u].y));
    float _527 = cbSceneParam._m0[86u].y * ((_516 / cbSceneParam._m0[86u].y) + (_332 * cbMtdParam._m0[18u].y));
    float _534 = isnan(cbInstanceData._m0[8u].x) ? _526 : (isnan(_526) ? cbInstanceData._m0[8u].x : max(_526, cbInstanceData._m0[8u].x));
    float _535 = isnan(cbInstanceData._m0[8u].y) ? _527 : (isnan(_527) ? cbInstanceData._m0[8u].y : max(_527, cbInstanceData._m0[8u].y));
    vec4 _539 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _534 : (isnan(_534) ? cbInstanceData._m0[8u].z : min(_534, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _535 : (isnan(_535) ? cbInstanceData._m0[8u].w : min(_535, cbInstanceData._m0[8u].w))));
    float _572 = _443 - cbMtdParam._m0[15u].x;
    float _3261 = isnan(0.0) ? _572 : (isnan(_572) ? 0.0 : max(_572, 0.0));
    float _582 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3261 : (isnan(_3261) ? 1.0 : min(_3261, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3277 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
    float _583 = isnan(1.0) ? _3277 : (isnan(_3277) ? 1.0 : min(_3277, 1.0));
    float _585 = _330 * _326;
    float _3288 = isnan(0.0) ? _349 : (isnan(_349) ? 0.0 : max(_349, 0.0));
    float _586 = isnan(1.0) ? _3288 : (isnan(_3288) ? 1.0 : min(_3288, 1.0));
    float _3299 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    float _587 = isnan(1.0) ? _3299 : (isnan(_3299) ? 1.0 : min(_3299, 1.0));
    float _588 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0));
    float _3315 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _3326 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _3337 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _607 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _626 = fma(_585, cbSceneParam._m0[5u].z, fma(_332, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _331));
    float _629 = fma(_585, cbSceneParam._m0[6u].z, fma(_332, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _331));
    float _632 = fma(_585, cbSceneParam._m0[7u].z, fma(_332, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _331));
    uint _645 = uint(roundEven(NORMAL.w)) * 13u;
    uint _647 = (_645 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _653 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3315 : (isnan(_3315) ? 1.0 : min(_3315, 1.0)))) * cbInstanceData._m0[_647].x;
    float _654 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3326 : (isnan(_3326) ? 1.0 : min(_3326, 1.0)))) * cbInstanceData._m0[_647].y;
    float _655 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3337 : (isnan(_3337) ? 1.0 : min(_3337, 1.0)))) * cbInstanceData._m0[_647].z;
    float _3348 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
    float _656 = isnan(1.0) ? _3348 : (isnan(_3348) ? 1.0 : min(_3348, 1.0));
    float _3359 = isnan(0.0) ? _654 : (isnan(_654) ? 0.0 : max(_654, 0.0));
    float _657 = isnan(1.0) ? _3359 : (isnan(_3359) ? 1.0 : min(_3359, 1.0));
    float _3370 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
    float _658 = isnan(1.0) ? _3370 : (isnan(_3370) ? 1.0 : min(_3370, 1.0));
    vec4 _662 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _515, cbSceneParam._m0[86u].y * _516));
    float _665 = _662.x * TEXCOORD_5.w;
    float _666 = dot(vec3(_331, _332, _585), vec3(_440, _441, _442));
    float _669 = _666 * 2.0;
    float _673 = (_669 * _331) - _440;
    float _674 = (_669 * _332) - _441;
    float _675 = (_669 * _585) - _442;
    float _676 = dot(vec3(_440, _441, _442), vec3(_331, _332, _585));
    float _679 = abs(_676);
    float _3381 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _680 = isnan(1.0) ? _3381 : (isnan(_3381) ? 1.0 : min(_3381, 1.0));
    float _686 = sqrt(_587);
    float _698 = exp2((_686 * 5.0) * log2(1.0 - (_680 * 0.999000012874603271484375))) / (4.0 - (_686 * 3.0));
    float _730 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _734 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _738 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1040;
    float _1042;
    float _1043;
    float _1044;
    float _1045;
    float _1046;
    float _1047;
    float _1048;
    float _1049;
    float _1050;
    float _1051;
    float _1052;
    float _1053;
    float _1054;
    float _1055;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _765 = fma(_738, cbModelParam._m0[26u].z, fma(_734, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _730));
        float _769 = fma(_738, cbModelParam._m0[27u].z, fma(_734, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _730));
        float _773 = fma(_738, cbModelParam._m0[28u].z, fma(_734, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _730));
        float _798 = _730 + _331;
        float _799 = _734 + _332;
        float _800 = _738 + _585;
        float _810 = fma(_800, cbModelParam._m0[26u].z, fma(_799, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _798)) - _765;
        float _811 = fma(_800, cbModelParam._m0[27u].z, fma(_799, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _798)) - _769;
        float _812 = fma(_800, cbModelParam._m0[28u].z, fma(_799, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _798)) - _773;
        float _816 = inversesqrt(dot(vec3(_810, _811, _812), vec3(_810, _811, _812)));
        float _829 = ((_816 * _810) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_765 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _830 = ((_816 * _811) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_769 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _831 = ((_816 * _812) / cbModelParam._m0[34u].z) + ((((((_773 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _834 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_829, _830, _831), 0.0);
        vec4 _841 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_829, _830, _831), 0.0);
        vec4 _848 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_829, _830, _831), 0.0);
        vec4 _855 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_829, _830, _831), 0.0);
        float _868 = exp2((_834.w + (-0.5)) * 20.0) * 2.0;
        float _869 = _868 * (_834.x + (-0.5));
        float _870 = _868 * (_834.y + (-0.5));
        float _871 = _868 * (_834.z + (-0.5));
        float _878 = exp2((_841.w + (-0.5)) * 20.0) * 2.0;
        float _879 = _878 * (_841.x + (-0.5));
        float _880 = _878 * (_841.y + (-0.5));
        float _881 = _878 * (_841.z + (-0.5));
        float _888 = exp2((_848.w + (-0.5)) * 20.0) * 2.0;
        float _889 = _888 * (_848.x + (-0.5));
        float _890 = _888 * (_848.y + (-0.5));
        float _891 = _888 * (_848.z + (-0.5));
        float _898 = exp2((_855.w + (-0.5)) * 20.0) * 2.0;
        float _899 = _898 * (_855.x + (-0.5));
        float _900 = _898 * (_855.y + (-0.5));
        float _901 = _898 * (_855.z + (-0.5));
        float _902 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
        float _903 = isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0));
        float _904 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
        float _905 = _869 * 0.5;
        float _906 = _879 * 0.5;
        float _907 = _889 * 0.5;
        float _908 = dot(vec3(_905, _906, _907), vec3(_905, _906, _907));
        float _913 = (_908 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_908);
        float _922 = (dot(vec3(_331, _332, _585), vec3(_913 * _905, _913 * _906, _913 * _907)) + 1.0) * 0.5;
        float _3407 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
        float _932 = sqrt(((_906 * _906) + (_905 * _905)) + (_907 * _907)) / (_902 + 9.9999997473787516355514526367188e-06);
        float _3418 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
        float _933 = isnan(1.0) ? _3418 : (isnan(_3418) ? 1.0 : min(_3418, 1.0));
        float _934 = _933 * 2.0;
        float _938 = (1.0 - _933) / (_933 + 1.0);
        float _3429 = isnan(0.0) ? _938 : (isnan(_938) ? 0.0 : max(_938, 0.0));
        float _939 = isnan(1.0) ? _3429 : (isnan(_3429) ? 1.0 : min(_3429, 1.0));
        float _948 = ((((1.0 - _939) * (_934 + 2.0)) * exp2(log2(isnan(1.0) ? _3407 : (isnan(_3407) ? 1.0 : min(_3407, 1.0))) * (_934 + 1.0))) + _939) * _902;
        float _949 = _870 * 0.5;
        float _950 = _880 * 0.5;
        float _951 = _890 * 0.5;
        float _952 = dot(vec3(_949, _950, _951), vec3(_949, _950, _951));
        float _957 = (_952 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_952);
        float _965 = (dot(vec3(_331, _332, _585), vec3(_957 * _949, _957 * _950, _957 * _951)) + 1.0) * 0.5;
        float _3440 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
        float _974 = sqrt(((_950 * _950) + (_949 * _949)) + (_951 * _951)) / (_903 + 9.9999997473787516355514526367188e-06);
        float _3451 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
        float _975 = isnan(1.0) ? _3451 : (isnan(_3451) ? 1.0 : min(_3451, 1.0));
        float _976 = _975 * 2.0;
        float _980 = (1.0 - _975) / (_975 + 1.0);
        float _3462 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
        float _981 = isnan(1.0) ? _3462 : (isnan(_3462) ? 1.0 : min(_3462, 1.0));
        float _990 = ((((1.0 - _981) * (_976 + 2.0)) * exp2(log2(isnan(1.0) ? _3440 : (isnan(_3440) ? 1.0 : min(_3440, 1.0))) * (_976 + 1.0))) + _981) * _903;
        float _991 = _871 * 0.5;
        float _992 = _881 * 0.5;
        float _993 = _891 * 0.5;
        float _994 = dot(vec3(_991, _992, _993), vec3(_991, _992, _993));
        float _999 = (_994 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_994);
        float _1007 = (dot(vec3(_331, _332, _585), vec3(_999 * _991, _999 * _992, _999 * _993)) + 1.0) * 0.5;
        float _3473 = isnan(0.0) ? _1007 : (isnan(_1007) ? 0.0 : max(_1007, 0.0));
        float _1016 = sqrt(((_992 * _992) + (_991 * _991)) + (_993 * _993)) / (_904 + 9.9999997473787516355514526367188e-06);
        float _3484 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
        float _1017 = isnan(1.0) ? _3484 : (isnan(_3484) ? 1.0 : min(_3484, 1.0));
        float _1018 = _1017 * 2.0;
        float _1022 = (1.0 - _1017) / (_1017 + 1.0);
        float _3495 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
        float _1023 = isnan(1.0) ? _3495 : (isnan(_3495) ? 1.0 : min(_3495, 1.0));
        float _1032 = ((((1.0 - _1023) * (_1018 + 2.0)) * exp2(log2(isnan(1.0) ? _3473 : (isnan(_3473) ? 1.0 : min(_3473, 1.0))) * (_1018 + 1.0))) + _1023) * _904;
        _1040 = _871;
        _1042 = _870;
        _1043 = _869;
        _1044 = _881;
        _1045 = _880;
        _1046 = _879;
        _1047 = _891;
        _1048 = _890;
        _1049 = _889;
        _1050 = _904;
        _1051 = _903;
        _1052 = _902;
        _1053 = cbModelParam._m0[36u].z * (isnan(0.0) ? _948 : (isnan(_948) ? 0.0 : max(_948, 0.0)));
        _1054 = cbModelParam._m0[36u].z * (isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0)));
        _1055 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0)));
    }
    else
    {
        _1040 = _1041;
        _1042 = _1041;
        _1043 = _1041;
        _1044 = _1041;
        _1045 = _1041;
        _1046 = _1041;
        _1047 = _1041;
        _1048 = _1041;
        _1049 = _1041;
        _1050 = _1041;
        _1051 = _1041;
        _1052 = _1041;
        _1053 = 0.0;
        _1054 = 0.0;
        _1055 = 0.0;
    }
    float _1350;
    float _1351;
    float _1352;
    float _1353;
    float _1354;
    float _1355;
    float _1356;
    float _1357;
    float _1358;
    float _1359;
    float _1360;
    float _1361;
    float _1362;
    float _1363;
    float _1364;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1081 = fma(_738, cbModelParam._m0[30u].z, fma(_734, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _730));
        float _1085 = fma(_738, cbModelParam._m0[31u].z, fma(_734, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _730));
        float _1089 = fma(_738, cbModelParam._m0[32u].z, fma(_734, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _730));
        float _1112 = _730 + _331;
        float _1113 = _734 + _332;
        float _1114 = _738 + _585;
        float _1124 = fma(_1114, cbModelParam._m0[30u].z, fma(_1113, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1112)) - _1081;
        float _1125 = fma(_1114, cbModelParam._m0[31u].z, fma(_1113, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1112)) - _1085;
        float _1126 = fma(_1114, cbModelParam._m0[32u].z, fma(_1113, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1112)) - _1089;
        float _1130 = inversesqrt(dot(vec3(_1124, _1125, _1126), vec3(_1124, _1125, _1126)));
        float _1143 = ((_1130 * _1124) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1081 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1144 = ((_1130 * _1125) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1085 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1145 = ((_1130 * _1126) / cbModelParam._m0[35u].z) + ((((((_1089 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1147 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1143, _1144, _1145), 0.0);
        vec4 _1154 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1143, _1144, _1145), 0.0);
        vec4 _1161 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1143, _1144, _1145), 0.0);
        vec4 _1168 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1143, _1144, _1145), 0.0);
        float _1180 = exp2((_1147.w + (-0.5)) * 20.0) * 2.0;
        float _1181 = _1180 * (_1147.x + (-0.5));
        float _1182 = _1180 * (_1147.y + (-0.5));
        float _1183 = _1180 * (_1147.z + (-0.5));
        float _1190 = exp2((_1154.w + (-0.5)) * 20.0) * 2.0;
        float _1191 = _1190 * (_1154.x + (-0.5));
        float _1192 = _1190 * (_1154.y + (-0.5));
        float _1193 = _1190 * (_1154.z + (-0.5));
        float _1200 = exp2((_1161.w + (-0.5)) * 20.0) * 2.0;
        float _1201 = _1200 * (_1161.x + (-0.5));
        float _1202 = _1200 * (_1161.y + (-0.5));
        float _1203 = _1200 * (_1161.z + (-0.5));
        float _1210 = exp2((_1168.w + (-0.5)) * 20.0) * 2.0;
        float _1211 = _1210 * (_1168.x + (-0.5));
        float _1212 = _1210 * (_1168.y + (-0.5));
        float _1213 = _1210 * (_1168.z + (-0.5));
        float _1214 = isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0));
        float _1215 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
        float _1216 = isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0));
        float _1217 = _1181 * 0.5;
        float _1218 = _1191 * 0.5;
        float _1219 = _1201 * 0.5;
        float _1220 = dot(vec3(_1217, _1218, _1219), vec3(_1217, _1218, _1219));
        float _1225 = (_1220 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1220);
        float _1233 = (dot(vec3(_331, _332, _585), vec3(_1225 * _1217, _1225 * _1218, _1225 * _1219)) + 1.0) * 0.5;
        float _3536 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
        float _1242 = sqrt(((_1218 * _1218) + (_1217 * _1217)) + (_1219 * _1219)) / (_1214 + 9.9999997473787516355514526367188e-06);
        float _3547 = isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0));
        float _1243 = isnan(1.0) ? _3547 : (isnan(_3547) ? 1.0 : min(_3547, 1.0));
        float _1244 = _1243 * 2.0;
        float _1248 = (1.0 - _1243) / (_1243 + 1.0);
        float _3558 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
        float _1249 = isnan(1.0) ? _3558 : (isnan(_3558) ? 1.0 : min(_3558, 1.0));
        float _1258 = ((((1.0 - _1249) * (_1244 + 2.0)) * exp2(log2(isnan(1.0) ? _3536 : (isnan(_3536) ? 1.0 : min(_3536, 1.0))) * (_1244 + 1.0))) + _1249) * _1214;
        float _1259 = _1182 * 0.5;
        float _1260 = _1192 * 0.5;
        float _1261 = _1202 * 0.5;
        float _1262 = dot(vec3(_1259, _1260, _1261), vec3(_1259, _1260, _1261));
        float _1267 = (_1262 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1262);
        float _1275 = (dot(vec3(_331, _332, _585), vec3(_1267 * _1259, _1267 * _1260, _1267 * _1261)) + 1.0) * 0.5;
        float _3569 = isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0));
        float _1284 = sqrt(((_1260 * _1260) + (_1259 * _1259)) + (_1261 * _1261)) / (_1215 + 9.9999997473787516355514526367188e-06);
        float _3580 = isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0));
        float _1285 = isnan(1.0) ? _3580 : (isnan(_3580) ? 1.0 : min(_3580, 1.0));
        float _1286 = _1285 * 2.0;
        float _1290 = (1.0 - _1285) / (_1285 + 1.0);
        float _3591 = isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0));
        float _1291 = isnan(1.0) ? _3591 : (isnan(_3591) ? 1.0 : min(_3591, 1.0));
        float _1300 = ((((1.0 - _1291) * (_1286 + 2.0)) * exp2(log2(isnan(1.0) ? _3569 : (isnan(_3569) ? 1.0 : min(_3569, 1.0))) * (_1286 + 1.0))) + _1291) * _1215;
        float _1301 = _1183 * 0.5;
        float _1302 = _1193 * 0.5;
        float _1303 = _1203 * 0.5;
        float _1304 = dot(vec3(_1301, _1302, _1303), vec3(_1301, _1302, _1303));
        float _1309 = (_1304 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1304);
        float _1317 = (dot(vec3(_331, _332, _585), vec3(_1309 * _1301, _1309 * _1302, _1309 * _1303)) + 1.0) * 0.5;
        float _3602 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
        float _1326 = sqrt(((_1302 * _1302) + (_1301 * _1301)) + (_1303 * _1303)) / (_1216 + 9.9999997473787516355514526367188e-06);
        float _3613 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1327 = isnan(1.0) ? _3613 : (isnan(_3613) ? 1.0 : min(_3613, 1.0));
        float _1328 = _1327 * 2.0;
        float _1332 = (1.0 - _1327) / (_1327 + 1.0);
        float _3624 = isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0));
        float _1333 = isnan(1.0) ? _3624 : (isnan(_3624) ? 1.0 : min(_3624, 1.0));
        float _1342 = ((((1.0 - _1333) * (_1328 + 2.0)) * exp2(log2(isnan(1.0) ? _3602 : (isnan(_3602) ? 1.0 : min(_3602, 1.0))) * (_1328 + 1.0))) + _1333) * _1216;
        _1350 = _1183;
        _1351 = _1182;
        _1352 = _1181;
        _1353 = _1193;
        _1354 = _1192;
        _1355 = _1191;
        _1356 = _1203;
        _1357 = _1202;
        _1358 = _1201;
        _1359 = _1216;
        _1360 = _1215;
        _1361 = _1214;
        _1362 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0)));
        _1363 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0)));
        _1364 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0)));
    }
    else
    {
        _1350 = _1041;
        _1351 = _1041;
        _1352 = _1041;
        _1353 = _1041;
        _1354 = _1041;
        _1355 = _1041;
        _1356 = _1041;
        _1357 = _1041;
        _1358 = _1041;
        _1359 = _1041;
        _1360 = _1041;
        _1361 = _1041;
        _1362 = 0.0;
        _1363 = 0.0;
        _1364 = 0.0;
    }
    float _1374 = (cbModelParam._m0[1u].x * (_1362 - _1053)) + _1053;
    float _1375 = (cbModelParam._m0[1u].x * (_1363 - _1054)) + _1054;
    float _1376 = (cbModelParam._m0[1u].x * (_1364 - _1055)) + _1055;
    float _1397 = fma(_1376, cbSceneParam._m0[89u].z, fma(_1375, cbSceneParam._m0[89u].y, _1374 * cbSceneParam._m0[89u].x));
    float _1400 = fma(_1376, cbSceneParam._m0[90u].z, fma(_1375, cbSceneParam._m0[90u].y, _1374 * cbSceneParam._m0[90u].x));
    float _1403 = fma(_1376, cbSceneParam._m0[91u].z, fma(_1375, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1374));
    float _1418 = _673 * 0.5;
    float _1419 = _674 * 0.5;
    float _1420 = _675 * 0.5;
    float _1421 = dot(vec4(_1418, _1419, _1420, 1.0), vec4(_1352, _1355, _1358, _1361));
    float _1424 = dot(vec4(_1418, _1419, _1420, 1.0), vec4(_1351, _1354, _1357, _1360));
    float _1427 = dot(vec4(_1418, _1419, _1420, 1.0), vec4(_1350, _1353, _1356, _1359));
    float _1461;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1434 = dot(vec4(_1418, _1419, _1420, 1.0), vec4(_1040, _1044, _1047, _1050));
        float _1438 = dot(vec4(_1418, _1419, _1420, 1.0), vec4(_1042, _1045, _1048, _1051));
        float _1442 = dot(vec4(_1418, _1419, _1420, 1.0), vec4(_1043, _1046, _1049, _1052));
        float _1449 = dot(vec4(cbModelParam._m0[39u]), vec4(_1418, _1419, _1420, 1.0));
        _1461 = dot(vec3(isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0)), isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0)), isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1449) ? 0.0 : (isnan(0.0) ? _1449 : max(0.0, _1449))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1461 = 1.0;
    }
    float _1472;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1463 = dot(vec4(cbModelParam._m0[40u]), vec4(_1418, _1419, _1420, 1.0));
        _1472 = dot(vec3(isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0)), isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0)), isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1463) ? 0.0 : (isnan(0.0) ? _1463 : max(0.0, _1463))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1472 = 1.0;
    }
    float _1476 = (_1472 * cbModelParam._m0[1u].x) + (_1461 * (1.0 - cbModelParam._m0[1u].x));
    float _1486 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _587);
    float _1487 = isnan(_1486) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1486 : min(cbModelParam._m0[25u].z, _1486));
    float _1567;
    float _1569;
    float _1571;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1534 = fma(_738, cbModelParam._m0[13u].z, fma(_734, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _730)) + cbModelParam._m0[13u].w;
        float _1538 = fma(_738, cbModelParam._m0[14u].z, fma(_734, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _730)) + cbModelParam._m0[14u].w;
        float _1542 = fma(_738, cbModelParam._m0[15u].z, fma(_734, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _730)) + cbModelParam._m0[15u].w;
        float _1545 = fma(_675, cbModelParam._m0[13u].z, fma(_674, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _673));
        float _1548 = fma(_675, cbModelParam._m0[14u].z, fma(_674, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _673));
        float _1551 = fma(_675, cbModelParam._m0[15u].z, fma(_674, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _673));
        float _1579;
        if (_1545 > 0.0)
        {
            _1579 = abs((1.0 - _1534) / _1545);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1545 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1534 + 1.0) / _1545);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1579 = frontier_phi_16_14_ladder;
        }
        float _1751;
        if (_1548 > 0.0)
        {
            _1751 = abs((1.0 - _1538) / _1548);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1548 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1538 + 1.0) / _1548);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1751 = frontier_phi_25_21_ladder;
        }
        float _2015;
        if (_1551 > 0.0)
        {
            _2015 = abs((1.0 - _1542) / _1551);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1551 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1542 + 1.0) / _1551);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2015 = frontier_phi_37_32_ladder;
        }
        float _2017 = isnan(_1751) ? _1579 : (isnan(_1579) ? _1751 : min(_1579, _1751));
        float _2018 = isnan(_2015) ? _2017 : (isnan(_2017) ? _2015 : min(_2017, _2015));
        float _2022 = (_2018 * _1545) + _1534;
        float _2023 = (_2018 * _1548) + _1538;
        float _2024 = (_2018 * _1551) + _1542;
        float _2025 = _2018 * 9.9999997473787516355514526367188e-05;
        float _2027 = (-1.0) - _2025;
        float _2029 = _2025 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2024 > _2029) || ((_2024 < _2027) || ((_2023 > _2029) || ((_2023 < _2027) || ((_2022 < _2027) || (_2022 > _2029))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2178 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2024, cbModelParam._m0[9u].z, fma(_2023, cbModelParam._m0[9u].y, _2022 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2024, cbModelParam._m0[10u].z, fma(_2023, cbModelParam._m0[10u].y, _2022 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2024, cbModelParam._m0[11u].z, fma(_2023, cbModelParam._m0[11u].y, _2022 * cbModelParam._m0[11u].x))), _1487);
            frontier_phi_15_37_ladder = _2178.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2178.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2178.x * cbModelParam._m0[1u].y;
        }
        _1567 = frontier_phi_15_37_ladder_2;
        _1569 = frontier_phi_15_37_ladder_1;
        _1571 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1555 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_673, _674, _675), _1487);
        _1567 = _1555.x * cbModelParam._m0[1u].y;
        _1569 = _1555.y * cbModelParam._m0[1u].y;
        _1571 = _1555.z * cbModelParam._m0[1u].y;
    }
    float _1575 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _587);
    float _1576 = isnan(_1575) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1575 : min(cbModelParam._m0[25u].w, _1575));
    float _1668;
    float _1670;
    float _1672;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1632 = fma(_738, cbModelParam._m0[21u].z, fma(_734, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _730)) + cbModelParam._m0[21u].w;
        float _1636 = fma(_738, cbModelParam._m0[22u].z, fma(_734, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _730)) + cbModelParam._m0[22u].w;
        float _1640 = fma(_738, cbModelParam._m0[23u].z, fma(_734, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _730)) + cbModelParam._m0[23u].w;
        float _1643 = fma(_675, cbModelParam._m0[21u].z, fma(_674, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _673));
        float _1646 = fma(_675, cbModelParam._m0[22u].z, fma(_674, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _673));
        float _1649 = fma(_675, cbModelParam._m0[23u].z, fma(_674, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _673));
        float _1756;
        if (_1643 > 0.0)
        {
            _1756 = abs((1.0 - _1632) / _1643);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1643 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1632 + 1.0) / _1643);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1756 = frontier_phi_27_23_ladder;
        }
        float _2042;
        if (_1646 > 0.0)
        {
            _2042 = abs((1.0 - _1636) / _1646);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1646 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1636 + 1.0) / _1646);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2042 = frontier_phi_39_34_ladder;
        }
        float _2361;
        if (_1649 > 0.0)
        {
            _2361 = abs((1.0 - _1640) / _1649);
        }
        else
        {
            float frontier_phi_48_46_ladder;
            if (_1649 < 0.0)
            {
                frontier_phi_48_46_ladder = abs((_1640 + 1.0) / _1649);
            }
            else
            {
                frontier_phi_48_46_ladder = 5000.0;
            }
            _2361 = frontier_phi_48_46_ladder;
        }
        float _2363 = isnan(_2042) ? _1756 : (isnan(_1756) ? _2042 : min(_1756, _2042));
        float _2364 = isnan(_2361) ? _2363 : (isnan(_2363) ? _2361 : min(_2363, _2361));
        float _2368 = (_2364 * _1643) + _1632;
        float _2369 = (_2364 * _1646) + _1636;
        float _2370 = (_2364 * _1649) + _1640;
        float _2371 = _2364 * 9.9999997473787516355514526367188e-05;
        float _2372 = (-1.0) - _2371;
        float _2374 = _2371 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2370 > _2374) || ((_2370 < _2372) || ((_2369 > _2374) || ((_2369 < _2372) || ((_2368 < _2372) || (_2368 > _2374))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2471 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2370, cbModelParam._m0[17u].z, fma(_2369, cbModelParam._m0[17u].y, _2368 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2370, cbModelParam._m0[18u].z, fma(_2369, cbModelParam._m0[18u].y, _2368 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2370, cbModelParam._m0[19u].z, fma(_2369, cbModelParam._m0[19u].y, _2368 * cbModelParam._m0[19u].x))), _1576);
            frontier_phi_24_48_ladder = _2471.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2471.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2471.x * cbModelParam._m0[1u].z;
        }
        _1668 = frontier_phi_24_48_ladder_2;
        _1670 = frontier_phi_24_48_ladder_1;
        _1672 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1652 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_673, _674, _675), _1576);
        _1668 = _1652.x * cbModelParam._m0[1u].z;
        _1670 = _1652.y * cbModelParam._m0[1u].z;
        _1672 = _1652.z * cbModelParam._m0[1u].z;
    }
    float _1684 = ((((1.0 - _698) * ((_686 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_698 * _686)) * _665;
    float _1685 = _1684 * ((cbModelParam._m0[1u].w * (_1668 - _1567)) + _1567);
    float _1686 = _1684 * ((cbModelParam._m0[1u].w * (_1670 - _1569)) + _1569);
    float _1687 = _1684 * ((cbModelParam._m0[1u].w * (_1672 - _1571)) + _1571);
    float _1690 = fma(_1687, cbSceneParam._m0[89u].z, fma(_1686, cbSceneParam._m0[89u].y, _1685 * cbSceneParam._m0[89u].x));
    float _1693 = fma(_1687, cbSceneParam._m0[90u].z, fma(_1686, cbSceneParam._m0[90u].y, _1685 * cbSceneParam._m0[90u].x));
    float _1696 = fma(_1687, cbSceneParam._m0[91u].z, fma(_1686, cbSceneParam._m0[91u].y, _1685 * cbSceneParam._m0[91u].x));
    float _1730 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1734 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1738 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1742 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1743 = _1730 / _1742;
    float _1744 = _1734 / _1742;
    float _1745 = _1738 / _1742;
    float _1892;
    float _1893;
    float _1894;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1772 = ((uint(_1745 > cbSceneParam._m0[59u].y) + uint(_1745 > cbSceneParam._m0[59u].x)) + uint(_1745 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1773 = _1772 + 43u;
        uint _1781 = _1772 + 44u;
        uint _1789 = _1772 + 45u;
        uint _1797 = _1772 + 46u;
        float _1808 = fma(_1742, cbSceneParam._m0[_1773].w, fma(_1738, cbSceneParam._m0[_1773].z, fma(_1734, cbSceneParam._m0[_1773].y, _1730 * cbSceneParam._m0[_1773].x)));
        float _1812 = fma(_1742, cbSceneParam._m0[_1781].w, fma(_1738, cbSceneParam._m0[_1781].z, fma(_1734, cbSceneParam._m0[_1781].y, _1730 * cbSceneParam._m0[_1781].x)));
        float _1820 = fma(_1742, cbSceneParam._m0[_1797].w, fma(_1738, cbSceneParam._m0[_1797].z, fma(_1734, cbSceneParam._m0[_1797].y, _1730 * cbSceneParam._m0[_1797].x)));
        float _1825 = cbSceneParam._m0[33u].z * _1820;
        float _1827 = cbSceneParam._m0[33u].w * _1820;
        float _1830 = fma(_1742, cbSceneParam._m0[_1789].w, fma(_1738, cbSceneParam._m0[_1789].z, fma(_1734, cbSceneParam._m0[_1789].y, _1730 * cbSceneParam._m0[_1789].x))) / _1820;
        float _1878 = (cbSceneParam._m0[33u].x - sqrt(((_1744 * _1744) + (_1743 * _1743)) + (_1745 * _1745))) * cbSceneParam._m0[33u].y;
        float _3750 = isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0));
        float _1885 = (isnan(1.0) ? _3750 : (isnan(_3750) ? 1.0 : min(_3750, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1825 + _1808) / _1820, (_1827 + _1812) / _1820), _1830), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1827 + _1808) / _1820, (_1812 - _1825) / _1820), _1830), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1808 - _1825) / _1820, (_1812 - _1827) / _1820), _1830), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1808 - _1827) / _1820, (_1825 + _1812) / _1820), _1830), 0.0)).x), vec4(0.25)));
        _1892 = 1.0 - (_1885 * cbSceneParam._m0[34u].x);
        _1893 = 1.0 - (_1885 * cbSceneParam._m0[34u].y);
        _1894 = 1.0 - (_1885 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1892 = 1.0;
        _1893 = 1.0;
        _1894 = 1.0;
    }
    float _1958;
    float _1960;
    float _1962;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1946 = fma(_1742, cbSceneParam._m0[63u].w, fma(_1738, cbSceneParam._m0[63u].z, fma(_1734, cbSceneParam._m0[63u].y, _1730 * cbSceneParam._m0[63u].x)));
        float _1947 = fma(_1742, cbSceneParam._m0[60u].w, fma(_1738, cbSceneParam._m0[60u].z, fma(_1734, cbSceneParam._m0[60u].y, _1730 * cbSceneParam._m0[60u].x))) / _1946;
        float _1948 = fma(_1742, cbSceneParam._m0[61u].w, fma(_1738, cbSceneParam._m0[61u].z, fma(_1734, cbSceneParam._m0[61u].y, _1730 * cbSceneParam._m0[61u].x))) / _1946;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1947 >= cbSceneParam._m0[64u].x) && (_1948 >= cbSceneParam._m0[64u].y)) && (_1947 <= cbSceneParam._m0[64u].z)) && (_1948 <= cbSceneParam._m0[64u].w))
        {
            float _2055 = fma(_1742, cbSceneParam._m0[62u].w, fma(_1738, cbSceneParam._m0[62u].z, fma(_1734, cbSceneParam._m0[62u].y, _1730 * cbSceneParam._m0[62u].x))) / _1946;
            float _2059 = isnan(cbSceneParam._m0[41u].w) ? _2055 : (isnan(_2055) ? cbSceneParam._m0[41u].w : max(_2055, cbSceneParam._m0[41u].w));
            float _2102 = (cbSceneParam._m0[33u].x - sqrt(((_1744 * _1744) + (_1743 * _1743)) + (_1745 * _1745))) * cbSceneParam._m0[33u].y;
            float _3766 = isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0));
            float _2109 = (isnan(1.0) ? _3766 : (isnan(_3766) ? 1.0 : min(_3766, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1947, cbSceneParam._m0[33u].w + _1948), _2059), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1947, _1948 - cbSceneParam._m0[33u].z), _2059), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1947 - cbSceneParam._m0[33u].z, _1948 - cbSceneParam._m0[33u].w), _2059), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1947 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1948), _2059), 0.0)).x), vec4(0.25)));
            float _2113 = 1.0 - (_2109 * cbSceneParam._m0[34u].x);
            float _2114 = 1.0 - (_2109 * cbSceneParam._m0[34u].y);
            float _2115 = 1.0 - (_2109 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2114) ? _1893 : (isnan(_1893) ? _2114 : min(_1893, _2114));
            frontier_phi_36_35_ladder_1 = isnan(_2113) ? _1892 : (isnan(_1892) ? _2113 : min(_1892, _2113));
            frontier_phi_36_35_ladder_2 = isnan(_2115) ? _1894 : (isnan(_1894) ? _2115 : min(_1894, _2115));
        }
        else
        {
            frontier_phi_36_35_ladder = _1893;
            frontier_phi_36_35_ladder_1 = _1892;
            frontier_phi_36_35_ladder_2 = _1894;
        }
        _1958 = frontier_phi_36_35_ladder_1;
        _1960 = frontier_phi_36_35_ladder;
        _1962 = frontier_phi_36_35_ladder_2;
    }
    else
    {
        _1958 = _1892;
        _1960 = _1893;
        _1962 = _1894;
    }
    uvec4 _1967 = floatBitsToUint(cbInstanceData._m0[_645 + 5u]);
    uint _1969 = _1967.x * 14u;
    uint _1970 = _1969 + 13u;
    float _1975 = _665 + (-1.0);
    float _1978 = (cbLight._m0[_1970].x * _1975) + 1.0;
    float _1979 = (cbLight._m0[_1970].y * _1975) + 1.0;
    uint _1981 = _1969 + 4u;
    float _1992 = dot(vec3(cbLight._m0[_1969].xyz), vec3(_331, _332, _585));
    float _1995 = isnan(1.0) ? _1978 : (isnan(_1978) ? 1.0 : min(_1978, 1.0));
    float _1996 = cbLight._m0[_1981].x * _1958;
    float _1997 = cbLight._m0[_1981].y * _1960;
    float _1998 = cbLight._m0[_1981].z * _1962;
    uint _1999 = _1969 + 5u;
    uint _2005 = _1969 | 1u;
    float _2011 = dot(vec3(cbLight._m0[_2005].xyz), vec3(_331, _332, _585));
    float _2014 = isnan(1.0) ? _1979 : (isnan(_1979) ? 1.0 : min(_1979, 1.0));
    float _2187;
    float _2188;
    float _2189;
    if (_588 == 0.0)
    {
        float _3802 = isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0));
        float _3813 = isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0));
        float _2124 = (isnan(1.0) ? _3802 : (isnan(_3802) ? 1.0 : min(_3802, 1.0))) * 0.3183098733425140380859375;
        float _2126 = (isnan(1.0) ? _3813 : (isnan(_3813) ? 1.0 : min(_3813, 1.0))) * 0.3183098733425140380859375;
        _2187 = ((cbLight._m0[_1999].x * _2014) * _2126) + ((_1996 * _1995) * _2124);
        _2188 = ((_2014 * cbLight._m0[_1999].y) * _2126) + ((_1997 * _1995) * _2124);
        _2189 = ((_2014 * cbLight._m0[_1999].z) * _2126) + ((_1998 * _1995) * _2124);
    }
    else
    {
        float _2136 = _1992 + _588;
        float _2139 = (_588 * 2.0) + 1.0;
        float _2140 = (isnan(0.0) ? _2136 : (isnan(_2136) ? 0.0 : max(_2136, 0.0))) / _2139;
        float _2147 = _2011 + _588;
        float _2149 = (isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0))) / _2139;
        _2187 = (((_2149 * cbLight._m0[_1999].x) * _2014) + ((_1996 * _2140) * _1995)) * 0.3183098733425140380859375;
        _2188 = (((_2149 * cbLight._m0[_1999].y) * _2014) + ((_1997 * _2140) * _1995)) * 0.3183098733425140380859375;
        _2189 = (((_2149 * cbLight._m0[_1999].z) * _2014) + ((_1998 * _2140) * _1995)) * 0.3183098733425140380859375;
    }
    uint _2193 = _1969 + 8u;
    float _2209 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1969].w)) * _587) * 0.949999988079071044921875);
    float _2210 = _2209 * _2209;
    float _2211 = cbLight._m0[_1969].x + _440;
    float _2212 = cbLight._m0[_1969].y + _441;
    float _2213 = cbLight._m0[_1969].z + _442;
    float _2217 = inversesqrt(dot(vec3(_2211, _2212, _2213), vec3(_2211, _2212, _2213)));
    float _2218 = _2217 * _2211;
    float _2219 = _2217 * _2212;
    float _2220 = _2217 * _2213;
    float _2221 = dot(vec3(_331, _332, _585), vec3(cbLight._m0[_1969].xyz));
    float _3834 = isnan(0.0) ? _2221 : (isnan(_2221) ? 0.0 : max(_2221, 0.0));
    float _2224 = isnan(1.0) ? _3834 : (isnan(_3834) ? 1.0 : min(_3834, 1.0));
    float _3845 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
    float _2225 = isnan(1.0) ? _3845 : (isnan(_3845) ? 1.0 : min(_3845, 1.0));
    float _2226 = dot(vec3(_331, _332, _585), vec3(_2218, _2219, _2220));
    float _3856 = isnan(0.0) ? _2226 : (isnan(_2226) ? 0.0 : max(_2226, 0.0));
    float _2229 = isnan(1.0) ? _3856 : (isnan(_3856) ? 1.0 : min(_3856, 1.0));
    float _2230 = dot(vec3(cbLight._m0[_1969].xyz), vec3(_2218, _2219, _2220));
    float _3867 = isnan(0.0) ? _2230 : (isnan(_2230) ? 0.0 : max(_2230, 0.0));
    float _2234 = _2210 * _2210;
    float _2238 = ((_2229 * _2229) * (_2234 + (-1.0))) + 1.0;
    float _2249 = (exp2(log2(1.0 - (isnan(1.0) ? _3867 : (isnan(_3867) ? 1.0 : min(_3867, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2250 = 1.0 - _2210;
    float _2261 = (0.5 / (((_2225 * ((_2224 * _2250) + _2210)) + 9.9999999392252902907785028219223e-09) + (((_2225 * _2250) + _2210) * _2224))) * _2224;
    float _3878 = isnan(0.0) ? _2261 : (isnan(_2261) ? 0.0 : max(_2261, 0.0));
    float _2263 = (isnan(1.0) ? _3878 : (isnan(_3878) ? 1.0 : min(_3878, 1.0))) * (_2234 / ((_2238 * _2238) * 3.141590118408203125));
    uint _2279 = _1969 + 9u;
    float _2293 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2005].w)) * _587) * 0.949999988079071044921875);
    float _2294 = _2293 * _2293;
    float _2295 = cbLight._m0[_2005].x + _440;
    float _2296 = cbLight._m0[_2005].y + _441;
    float _2297 = cbLight._m0[_2005].z + _442;
    float _2301 = inversesqrt(dot(vec3(_2295, _2296, _2297), vec3(_2295, _2296, _2297)));
    float _2302 = _2301 * _2295;
    float _2303 = _2301 * _2296;
    float _2304 = _2301 * _2297;
    float _2305 = dot(vec3(_331, _332, _585), vec3(cbLight._m0[_2005].xyz));
    float _3889 = isnan(0.0) ? _2305 : (isnan(_2305) ? 0.0 : max(_2305, 0.0));
    float _2308 = isnan(1.0) ? _3889 : (isnan(_3889) ? 1.0 : min(_3889, 1.0));
    float _2309 = dot(vec3(_331, _332, _585), vec3(_2302, _2303, _2304));
    float _3900 = isnan(0.0) ? _2309 : (isnan(_2309) ? 0.0 : max(_2309, 0.0));
    float _2312 = isnan(1.0) ? _3900 : (isnan(_3900) ? 1.0 : min(_3900, 1.0));
    float _2313 = dot(vec3(cbLight._m0[_2005].xyz), vec3(_2302, _2303, _2304));
    float _3911 = isnan(0.0) ? _2313 : (isnan(_2313) ? 0.0 : max(_2313, 0.0));
    float _2317 = _2294 * _2294;
    float _2321 = ((_2312 * _2312) * (_2317 + (-1.0))) + 1.0;
    float _2330 = (exp2(log2(1.0 - (isnan(1.0) ? _3911 : (isnan(_3911) ? 1.0 : min(_3911, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2331 = 1.0 - _2294;
    float _2341 = (0.5 / (((_2225 * ((_2308 * _2331) + _2294)) + 9.9999999392252902907785028219223e-09) + (((_2225 * _2331) + _2294) * _2308))) * _2308;
    float _3922 = isnan(0.0) ? _2341 : (isnan(_2341) ? 0.0 : max(_2341, 0.0));
    float _2343 = (isnan(1.0) ? _3922 : (isnan(_3922) ? 1.0 : min(_3922, 1.0))) * (_2317 / ((_2321 * _2321) * 3.141590118408203125));
    float _2353 = (((_2330 * cbLight._m0[_2279].x) * _2343) * _2014) + ((((cbLight._m0[_2193].x * _1958) * _2249) * _2263) * _1995);
    float _2354 = (((_2330 * cbLight._m0[_2279].y) * _2343) * _2014) + ((((cbLight._m0[_2193].y * _1960) * _2249) * _2263) * _1995);
    float _2355 = (((_2330 * cbLight._m0[_2279].z) * _2343) * _2014) + ((((cbLight._m0[_2193].z * _1962) * _2249) * _2263) * _1995);
    float _2442;
    float _2444;
    float _2446;
    float _2448;
    float _2450;
    float _2452;
    if (_1967.y == 0u)
    {
        uvec4 _2398 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2399 = _2398.x;
        uint _2410 = uint((float(_2398.y) * floor(float(uint(cbSceneParam._m0[85u].y * _516) / _2399))) + floor(float(uint(cbSceneParam._m0[85u].x * _515) / _2399)));
        float _2420 = (log2(_1745 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2421 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
        uint _2424 = uint(isnan(14.0) ? _2421 : (isnan(_2421) ? 14.0 : min(_2421, 14.0)));
        uint _2431 = _2398.z;
        float _2476;
        float _2478;
        float _2480;
        float _2482;
        float _2484;
        float _2486;
        if (((((1u << ((_2431 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2424 << 2u) + (_2410 << 6u)) >> 2u)).x) == 0u) || ((_2431 & 240u) == 0u))
        {
            _2476 = 0.0;
            _2478 = 0.0;
            _2480 = 0.0;
            _2482 = 0.0;
            _2484 = 0.0;
            _2486 = 0.0;
        }
        else
        {
            float _2477;
            float _2479;
            float _2481;
            float _2483;
            float _2485;
            float _2487;
            float _2642 = 0.0;
            float _2643 = 0.0;
            float _2644 = 0.0;
            float _2645 = 0.0;
            float _2646 = 0.0;
            float _2647 = 0.0;
            uint _2648 = 0u;
            uint _2657;
            bool _2658;
            for (;;)
            {
                _2657 = texelFetch(g_lightClassification, int((((_2424 << 5u) + (_2410 << 9u)) + (_2648 << 2u)) >> 2u)).x;
                _2658 = _2657 == 0u;
                float frontier_phi_60_pred;
                float frontier_phi_60_pred_1;
                float frontier_phi_60_pred_2;
                float frontier_phi_60_pred_3;
                float frontier_phi_60_pred_4;
                float frontier_phi_60_pred_5;
                if (_2658)
                {
                    frontier_phi_60_pred = _2647;
                    frontier_phi_60_pred_1 = _2645;
                    frontier_phi_60_pred_2 = _2644;
                    frontier_phi_60_pred_3 = _2643;
                    frontier_phi_60_pred_4 = _2642;
                    frontier_phi_60_pred_5 = _2646;
                }
                else
                {
                    float _2834;
                    float _2835;
                    float _2836;
                    float _2837;
                    float _2838;
                    float _2839;
                    uint _2840;
                    _2834 = _2642;
                    _2835 = _2643;
                    _2836 = _2644;
                    _2837 = _2645;
                    _2838 = _2646;
                    _2839 = _2647;
                    _2840 = _2657;
                    float _2782;
                    float _2783;
                    float _2784;
                    float _2785;
                    float _2786;
                    float _2787;
                    for (;;)
                    {
                        uint _2844 = uint(findLSB(_2840)) + (_2648 << 5u);
                        uint _2841 = (_2840 + 4294967295u) & _2840;
                        uint _2846 = _2844 * 48u;
                        vec4 _2860 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2846)).x, texelFetch(g_PointLightRenderingBuffer, int(_2846 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2846 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2846 + 3u)).x));
                        uint _2866 = (_2844 * 48u) + 4u;
                        vec4 _2879 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2866)).x, texelFetch(g_PointLightRenderingBuffer, int(_2866 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2866 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2866 + 3u)).x));
                        float _2880 = _2879.x;
                        float _2881 = _2879.y;
                        float _2882 = _2879.z;
                        uint _2885 = (_2844 * 48u) + 8u;
                        vec3 _2896 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2885)).x, texelFetch(g_PointLightRenderingBuffer, int(_2885 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2885 + 2u)).x));
                        uint _2901 = (_2844 * 48u) + 12u;
                        vec2 _2909 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2901)).x, texelFetch(g_PointLightRenderingBuffer, int(_2901 + 1u)).x));
                        float _2915 = inversesqrt(dot(vec3(_1743, _1744, _1745), vec3(_1743, _1744, _1745)));
                        float _2916 = _2915 * _1743;
                        float _2917 = _2915 * _1744;
                        float _2918 = _2915 * _1745;
                        float _2919 = _2860.x - _1743;
                        float _2920 = _2860.y - _1744;
                        float _2921 = _2860.z - _1745;
                        float _2922 = dot(vec3(_2919, _2920, _2921), vec3(_2919, _2920, _2921));
                        float _2925 = inversesqrt(_2922);
                        float _2926 = _2925 * _2919;
                        float _2927 = _2925 * _2920;
                        float _2928 = _2925 * _2921;
                        float _2929 = dot(vec3(_626, _629, _632), vec3(_2926, _2927, _2928));
                        float _2934 = 1.0 - (_2922 * _2860.w);
                        float _3943 = isnan(0.0) ? _2934 : (isnan(_2934) ? 0.0 : max(_2934, 0.0));
                        float _2935 = isnan(1.0) ? _3943 : (isnan(_3943) ? 1.0 : min(_3943, 1.0));
                        float _2936 = sqrt(_2922) * _2879.w;
                        float _2939 = 1.39999997615814208984375 / (_2936 + 1.39999997615814208984375);
                        float _2940 = _2939 * _2939;
                        float _2941 = 1.0 - _2940;
                        float _2943 = (_2941 * _2941) * _588;
                        float _2946 = ((_2941 * _2929) + _2940) + _2943;
                        float _2951 = _2936 * _2936;
                        float _2956 = ((isnan(0.0) ? _2946 : (isnan(_2946) ? 0.0 : max(_2946, 0.0))) * _2935) / (((_2943 * 2.0) + 1.0) * ((_2951 * 0.699999988079071044921875) + 1.0));
                        float _2960 = dot(vec3(_2926, _2927, _2928), vec3(_2916, _2917, _2918));
                        float _3959 = isnan(0.0) ? _2960 : (isnan(_2960) ? 0.0 : max(_2960, 0.0));
                        float _2967 = dot(vec3((-0.0) - _2916, (-0.0) - _2917, (-0.0) - _2918), vec3(_626, _629, _632)) + 1.0;
                        float _2969 = (isnan(0.0) ? _2967 : (isnan(_2967) ? 0.0 : max(_2967, 0.0))) * 0.5;
                        float _2976 = ((_2969 * _2969) * _2909.x) * exp2((_2909.y * 32.0) * log2(isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0))));
                        float _2978 = _588 / (_588 + 1.0);
                        float _2994 = (-0.0) - _1743;
                        float _2995 = (-0.0) - _1744;
                        float _2996 = (-0.0) - _1745;
                        float _3000 = inversesqrt(dot(vec3(_2994, _2995, _2996), vec3(_2994, _2995, _2996)));
                        float _3001 = _3000 * _2994;
                        float _3002 = _3000 * _2995;
                        float _3003 = _3000 * _2996;
                        float _3010 = exp2(log2(1.0 / ((_2951 * 3.5) + 5.0)) * 0.25);
                        float _3011 = 1.0 - _686;
                        float _3018 = sqrt(1.0 - ((1.0 - (_3011 * _3011)) * (1.0 - (_3010 * _3010))));
                        float _3019 = _3018 * _3018;
                        float _3020 = _3019 * _3019;
                        float _3021 = _3001 + _2926;
                        float _3022 = _3002 + _2927;
                        float _3023 = _3003 + _2928;
                        float _3027 = inversesqrt(dot(vec3(_3021, _3022, _3023), vec3(_3021, _3022, _3023)));
                        float _3031 = dot(vec3(_626, _629, _632), vec3(_3001, _3002, _3003));
                        float _3975 = isnan(0.0) ? _3031 : (isnan(_3031) ? 0.0 : max(_3031, 0.0));
                        float _3034 = isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0));
                        float _3035 = dot(vec3(_626, _629, _632), vec3(_3027 * _3021, _3027 * _3022, _3027 * _3023));
                        float _3986 = isnan(0.0) ? _3035 : (isnan(_3035) ? 0.0 : max(_3035, 0.0));
                        float _3038 = isnan(1.0) ? _3986 : (isnan(_3986) ? 1.0 : min(_3986, 1.0));
                        float _3042 = ((_3038 * _3038) * (_3020 + (-1.0))) + 1.0;
                        float _3043 = _2939 * _3019;
                        float _3044 = _3043 * _3043;
                        float _3047 = ((1.0 - _3044) * _2929) + _3044;
                        float _3997 = isnan(0.0) ? _3047 : (isnan(_3047) ? 0.0 : max(_3047, 0.0));
                        float _3048 = isnan(1.0) ? _3997 : (isnan(_3997) ? 1.0 : min(_3997, 1.0));
                        float _3049 = 1.0 - _3019;
                        float _3059 = (0.5 / (((_3048 * ((_3034 * _3049) + _3019)) + 9.9999999392252902907785028219223e-09) + (((_3048 * _3049) + _3019) * _3034))) * _3048;
                        float _4008 = isnan(0.0) ? _3059 : (isnan(_3059) ? 0.0 : max(_3059, 0.0));
                        float _3070 = (((_3020 * 3.1415927410125732421875) * (isnan(1.0) ? _4008 : (isnan(_4008) ? 1.0 : min(_4008, 1.0)))) / ((_3042 * _3042) * ((_2951 * 2.1991131305694580078125) + 3.141590118408203125))) * _2935;
                        _2785 = (((((_2880 * 0.3183098733425140380859375) * _2978) * _2976) + _2880) * _2956) + _2837;
                        _2786 = (((((_2881 * 0.3183098733425140380859375) * _2978) * _2976) + _2881) * _2956) + _2838;
                        _2787 = (((((_2882 * 0.3183098733425140380859375) * _2978) * _2976) + _2882) * _2956) + _2839;
                        _2782 = (_3070 * _2896.x) + _2834;
                        _2783 = (_3070 * _2896.y) + _2835;
                        _2784 = (_3070 * _2896.z) + _2836;
                        if (_2841 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2834 = _2782;
                            _2835 = _2783;
                            _2836 = _2784;
                            _2837 = _2785;
                            _2838 = _2786;
                            _2839 = _2787;
                            _2840 = _2841;
                        }
                    }
                    frontier_phi_60_pred = _2787;
                    frontier_phi_60_pred_1 = _2785;
                    frontier_phi_60_pred_2 = _2784;
                    frontier_phi_60_pred_3 = _2783;
                    frontier_phi_60_pred_4 = _2782;
                    frontier_phi_60_pred_5 = _2786;
                }
                _2487 = frontier_phi_60_pred;
                _2483 = frontier_phi_60_pred_1;
                _2481 = frontier_phi_60_pred_2;
                _2479 = frontier_phi_60_pred_3;
                _2477 = frontier_phi_60_pred_4;
                _2485 = frontier_phi_60_pred_5;
                uint _2649 = _2648 + 1u;
                if (_2649 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2642 = _2477;
                    _2643 = _2479;
                    _2644 = _2481;
                    _2645 = _2483;
                    _2646 = _2485;
                    _2647 = _2487;
                    _2648 = _2649;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2476 = _2477;
            _2478 = _2479;
            _2480 = _2481;
            _2482 = _2483;
            _2484 = _2485;
            _2486 = _2487;
        }
        float _2491 = isnan(1.0) ? _665 : (isnan(_665) ? 1.0 : min(_665, 1.0));
        _2442 = (_2491 * _2482) + _2187;
        _2444 = (_2491 * _2484) + _2188;
        _2446 = (_2491 * _2486) + _2189;
        _2448 = ((_2476 * 0.039999999105930328369140625) * _2491) + _2353;
        _2450 = ((_2478 * 0.039999999105930328369140625) * _2491) + _2354;
        _2452 = ((_2480 * 0.039999999105930328369140625) * _2491) + _2355;
    }
    else
    {
        _2442 = _2187;
        _2444 = _2188;
        _2446 = _2189;
        _2448 = _2353;
        _2450 = _2354;
        _2452 = _2355;
    }
    float _2565;
    float _2566;
    float _2567;
    if (_588 > 0.0)
    {
        uint _2498 = _1969 + 4u;
        float _2504 = (-0.0) - _440;
        float _2505 = (-0.0) - _441;
        float _2506 = (-0.0) - _442;
        float _2507 = dot(vec3(cbLight._m0[_1969].xyz), vec3(_2504, _2505, _2506));
        float _4024 = isnan(0.0) ? _2507 : (isnan(_2507) ? 0.0 : max(_2507, 0.0));
        float _2511 = _676 + 1.0;
        float _2513 = (isnan(0.0) ? _2511 : (isnan(_2511) ? 0.0 : max(_2511, 0.0))) * 0.5;
        float _2518 = _2513 * _2513;
        float _2519 = _2518 * exp2(log2(isnan(1.0) ? _4024 : (isnan(_4024) ? 1.0 : min(_4024, 1.0))) * 32.0);
        float _2521 = _588 / (_588 + 1.0);
        float _2522 = isnan(_1978) ? 1.0 : (isnan(1.0) ? _1978 : min(1.0, _1978));
        uint _2535 = _1969 + 5u;
        float _2541 = dot(vec3(cbLight._m0[_2005].xyz), vec3(_2504, _2505, _2506));
        float _4045 = isnan(0.0) ? _2541 : (isnan(_2541) ? 0.0 : max(_2541, 0.0));
        float _2548 = _2518 * exp2(log2(isnan(1.0) ? _4045 : (isnan(_4045) ? 1.0 : min(_4045, 1.0))) * 32.0);
        float _2549 = isnan(_1979) ? 1.0 : (isnan(1.0) ? _1979 : min(1.0, _1979));
        _2565 = ((((_2548 * cbLight._m0[_2535].x) * _2521) * _2549) + ((((cbLight._m0[_2498].x * _1958) * _2519) * _2521) * _2522)) * 0.3183098733425140380859375;
        _2566 = ((((_2548 * cbLight._m0[_2535].y) * _2521) * _2549) + ((((cbLight._m0[_2498].y * _1960) * _2519) * _2521) * _2522)) * 0.3183098733425140380859375;
        _2567 = ((((_2548 * cbLight._m0[_2535].z) * _2521) * _2549) + ((((cbLight._m0[_2498].z * _1962) * _2519) * _2521) * _2522)) * 0.3183098733425140380859375;
    }
    else
    {
        _2565 = 0.0;
        _2566 = 0.0;
        _2567 = 0.0;
    }
    float _4061 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _4072 = isnan(0.0) ? _657 : (isnan(_657) ? 0.0 : max(_657, 0.0));
    float _4083 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _4094 = isnan(0.0) ? _586 : (isnan(_586) ? 0.0 : max(_586, 0.0));
    float _2582 = (isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0))) * ((_2442 + ((isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0))) * _665)) + _2565);
    float _2583 = (isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0))) * ((_2444 + ((isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0))) * _665)) + _2566);
    float _2584 = (isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0))) * ((_2446 + ((isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0))) * _665)) + _2567);
    float _2588 = 0.959999978542327880859375 - (exp2(log2(1.0 - _680) * 5.0) * 0.959999978542327880859375);
    float _2613 = _515 / cbSceneParam._m0[86u].x;
    float _2614 = _516 / cbSceneParam._m0[86u].y;
    vec4 _2628 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2613, _2614, (log2((isnan(cbSceneParam._m0[77u].w) ? _607 : (isnan(_607) ? cbSceneParam._m0[77u].w : min(_607, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2630 = _2628.x;
    float _2631 = _2628.y;
    float _2632 = _2628.z;
    float _2633 = _2628.w;
    float _2700;
    float _2702;
    float _2704;
    float _2706;
    if (_607 > cbSceneParam._m0[78u].w)
    {
        float _2663 = isnan(_607) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _607 : min(cbSceneParam._m0[80u].w, _607));
        float _2664 = _2663 / _607;
        float _2675 = _2664 * _283;
        float _2676 = _284 * _2664;
        float _2677 = (-0.0) - _2676;
        float _2678 = _2664 * _285;
        float _2680 = (cbSceneParam._m0[77u].w * _2677) / _2663;
        float _2681 = _2680 + cbSceneParam._m0[79u].w;
        float _2682 = cbSceneParam._m0[79u].w - _2676;
        float _2688 = sqrt(((_2675 * _2675) + (_2676 * _2676)) + (_2678 * _2678));
        float _2691 = (1.0 - (cbSceneParam._m0[77u].w / _2663)) * _2688;
        float _2696 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2698 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3075;
        if (abs((_2677 - _2680) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3075 = ((((_2681 > 0.0) ? exp2(_2696 * _2681) : (2.0 - exp2(_2698 * _2681))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2691;
        }
        else
        {
            float _2807 = 1.0 / cbSceneParam._m0[80u].x;
            float _2808 = isnan(_2682) ? _2681 : (isnan(_2681) ? _2682 : max(_2681, _2682));
            float _2809 = isnan(_2682) ? _2681 : (isnan(_2681) ? _2682 : min(_2681, _2682));
            float _2818 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : min(_2808, 0.0));
            float _2819 = isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : min(_2809, 0.0));
            _3075 = ((abs(_2688 / _2677) * cbSceneParam._m0[80u].y) * ((((_2818 - _2819) * 2.0) - ((exp2(_2696 * (isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0)))) - exp2(_2696 * (isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : max(_2809, 0.0))))) * _2807)) - ((exp2(_2698 * _2818) - exp2(_2698 * _2819)) * _2807))) + (_2691 * cbSceneParam._m0[80u].z);
        }
        vec4 _3077 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2613, _2614, 1.0), 0.0);
        float _3086 = exp2((_3075 * (-1.44269502162933349609375)) * (1.0 - _3077.w));
        float _3087 = log2(_3086);
        float _3103 = log2(_2633);
        _2700 = (exp2(_3103 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3087 * cbSceneParam._m0[78u].x)) * _3077.x) / cbSceneParam._m0[78u].x)) + _2630;
        _2702 = (exp2(_3103 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3087 * cbSceneParam._m0[78u].y)) * _3077.y) / cbSceneParam._m0[78u].y)) + _2631;
        _2704 = (exp2(_3103 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3087 * cbSceneParam._m0[78u].z)) * _3077.z) / cbSceneParam._m0[78u].z)) + _2632;
        _2706 = _3086 * _2633;
    }
    else
    {
        _2700 = _2630;
        _2702 = _2631;
        _2704 = _2632;
        _2706 = _2633;
    }
    bool _2718 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2719 = log2(_2706);
    float _2726 = exp2(_2719 * cbSceneParam._m0[78u].x) * ((_2582 + ((_2448 + ((isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0))) * _1476)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _539.x) * _2588) - _2582) * _583));
    float _2727 = exp2(_2719 * cbSceneParam._m0[78u].y) * ((_2583 + ((_2450 + ((isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0))) * _1476)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _539.y) * _2588) - _2583) * _583));
    float _2728 = exp2(_2719 * cbSceneParam._m0[78u].z) * ((_2584 + ((_2452 + ((isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0))) * _1476)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _539.z) * _2588) - _2584) * _583));
    vec4 _2736 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_515, _516));
    float _2738 = _2736.x;
    float _2759 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2738)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2738))) - _607) * cbMtdParam._m0[17u].y;
    float _4145 = isnan(0.0) ? _2759 : (isnan(_2759) ? 0.0 : max(_2759, 0.0));
    float _2761 = (cbInstanceData._m0[_645 + 6u].w * (isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0)))) * (isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0)));
    float _2770 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2770 * (_2718 ? _2726 : (_2726 + (cbSceneParam._m0[72u].w * _2700)));
    SV_Target.y = _2770 * (_2718 ? _2727 : (_2727 + (cbSceneParam._m0[72u].w * _2702)));
    SV_Target.z = _2770 * (_2718 ? _2728 : (_2728 + (cbSceneParam._m0[72u].w * _2704)));
    SV_Target.w = _2761;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2761;
}


