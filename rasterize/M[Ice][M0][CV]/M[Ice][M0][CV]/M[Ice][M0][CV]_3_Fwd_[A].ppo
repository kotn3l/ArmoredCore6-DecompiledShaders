#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1220;
float _3161;
float _3162;
float _3163;
float _3164;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _205 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _206 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _207 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _213 = inversesqrt(dot(vec3(_205, _206, _207), vec3(_205, _206, _207)));
    float _214 = _213 * _205;
    float _215 = _213 * _206;
    float _216 = _213 * _207;
    float _220 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _221 = _220 * NORMAL.x;
    float _222 = _220 * NORMAL.y;
    float _223 = _220 * NORMAL.z;
    float _227 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _228 = _227 * TANGENT.x;
    float _229 = _227 * TANGENT.y;
    float _230 = _227 * TANGENT.z;
    float _235;
    float _236;
    float _237;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _235 = (-0.0) - _221;
        _236 = (-0.0) - _222;
        _237 = (-0.0) - _223;
    }
    else
    {
        _235 = _221;
        _236 = _222;
        _237 = _223;
    }
    float _284 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _294 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _284);
    float _295 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _284);
    float _296 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _284);
    uint _302 = uint(roundEven(NORMAL.w)) * 13u;
    uint _307 = _302 + 1u;
    uint _311 = _302 + 2u;
    float _320 = sqrt(((cbInstanceData._m0[_307].x * cbInstanceData._m0[_307].x) + (cbInstanceData._m0[_302].x * cbInstanceData._m0[_302].x)) + (cbInstanceData._m0[_311].x * cbInstanceData._m0[_311].x));
    float _321 = _320 * TEXCOORD.z;
    float _322 = _320 * TEXCOORD.w;
    vec4 _336 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _345 = (_336.x * 2.0) + (-1.0);
    float _347 = (_336.y * 2.0) + (-1.0);
    float _348 = dot(vec2(_345, _347), vec2(_345, _347));
    float _3173 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _354 = sqrt(1.0 - (isnan(1.0) ? _3173 : (isnan(_3173) ? 1.0 : min(_3173, 1.0))));
    float _357 = fma(_354, _235, fma(_347, _228, _345 * _214));
    float _360 = fma(_354, _236, fma(_347, _229, _345 * _215));
    float _363 = fma(_354, _237, fma(_347, _230, _345 * _216));
    float _367 = inversesqrt(dot(vec3(_357, _360, _363), vec3(_357, _360, _363)));
    vec4 _400 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _405 = _400.w;
    float _417 = dot(vec3(_294, _295, _296), vec3(_214, _215, _216));
    float _420 = dot(vec3(_294, _295, _296), vec3(_228, _229, _230));
    float _423 = dot(vec3(_294, _295, _296), vec3(_235, _236, _237));
    float _429 = inversesqrt(dot(vec3(_417, _420, _423), vec3(_417, _420, _423)));
    float _451 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _471 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_417 * cbMtdParam._m0[14u].x) * _429) * _451) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_420 * cbMtdParam._m0[14u].x) * _429) * _451) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _494 = inversesqrt(dot(vec3(_294, _295, _296), vec3(_294, _295, _296)));
    float _495 = _494 * _294;
    float _496 = _494 * _295;
    float _497 = _494 * _296;
    float _498 = dot(vec4(_495, _496, _497, 0.0), vec4(_235, _236, _237, 0.0));
    float _501 = _498 - cbMtdParam._m0[15u].z;
    float _3184 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    float _508 = exp2(log2(1.0 - (isnan(1.0) ? _3184 : (isnan(_3184) ? 1.0 : min(_3184, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _523 = ((((_400.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _471.x) * cbMtdParam._m0[9u].x) * ((_508 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _528 = ((((_400.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _471.y) * cbMtdParam._m0[9u].y) * ((_508 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _533 = ((((_400.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _471.z) * cbMtdParam._m0[9u].z) * ((_508 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _542 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _321) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _322) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3200 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _543 = isnan(1.0) ? _3200 : (isnan(_3200) ? 1.0 : min(_3200, 1.0));
    float _550 = (_543 * (cbMtdParam._m0[11u].x - _523)) + _523;
    float _551 = ((cbMtdParam._m0[11u].y - _528) * _543) + _528;
    float _552 = ((cbMtdParam._m0[11u].z - _533) * _543) + _533;
    vec4 _564 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _321) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _322) + cbTextureTilingScale._m0[9u].w));
    float _571 = (_564.x * 2.0) + (-1.0);
    float _572 = (_564.y * 2.0) + (-1.0);
    float _573 = dot(vec2(_571, _572), vec2(_571, _572));
    float _3211 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    float _587 = (cbMtdParam._m0[16u].y + _336.z) + cbMtdParam._m0[17u].z;
    float _590 = ((_564.z - _587) * _543) + _587;
    float _602 = (((_571 - _345) + (cbMtdParam._m0[14u].z * _345)) * _543) + _345;
    float _603 = (((_572 - _347) + (cbMtdParam._m0[14u].z * _347)) * _543) + _347;
    float _604 = (_543 * (sqrt(1.0 - (isnan(1.0) ? _3211 : (isnan(_3211) ? 1.0 : min(_3211, 1.0)))) - _354)) + _354;
    float _620 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _622 = _620 - (_620 * _543);
    float _642 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + ((_367 * _357) * cbMtdParam._m0[18u].y));
    float _643 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + ((_367 * _360) * cbMtdParam._m0[18u].y));
    float _650 = isnan(cbInstanceData._m0[8u].x) ? _642 : (isnan(_642) ? cbInstanceData._m0[8u].x : max(_642, cbInstanceData._m0[8u].x));
    float _651 = isnan(cbInstanceData._m0[8u].y) ? _643 : (isnan(_643) ? cbInstanceData._m0[8u].y : max(_643, cbInstanceData._m0[8u].y));
    vec4 _655 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _650 : (isnan(_650) ? cbInstanceData._m0[8u].z : min(_650, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _651 : (isnan(_651) ? cbInstanceData._m0[8u].w : min(_651, cbInstanceData._m0[8u].w))));
    float _688 = _498 - cbMtdParam._m0[15u].x;
    float _3242 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _698 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3242 : (isnan(_3242) ? 1.0 : min(_3242, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3258 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    float _699 = isnan(1.0) ? _3258 : (isnan(_3258) ? 1.0 : min(_3258, 1.0));
    float _701 = _699 - (_543 * _699);
    float _705 = fma(_604, _235, fma(_603, _228, _602 * _214));
    float _708 = fma(_604, _236, fma(_603, _229, _602 * _215));
    float _711 = fma(_604, _237, fma(_603, _230, _602 * _216));
    float _715 = inversesqrt(dot(vec3(_705, _708, _711), vec3(_705, _708, _711)));
    float _716 = _715 * _705;
    float _717 = _715 * _708;
    float _718 = _715 * _711;
    float _3269 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
    float _719 = isnan(1.0) ? _3269 : (isnan(_3269) ? 1.0 : min(_3269, 1.0));
    float _3280 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _720 = isnan(1.0) ? _3280 : (isnan(_3280) ? 1.0 : min(_3280, 1.0));
    float _721 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _3296 = isnan(0.0) ? _550 : (isnan(_550) ? 0.0 : max(_550, 0.0));
    float _3307 = isnan(0.0) ? _551 : (isnan(_551) ? 0.0 : max(_551, 0.0));
    float _3318 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _738 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _743 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _745 = _743.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _900 = sqrt(((_294 * _294) + (_295 * _295)) + (_296 * _296));
        float _906 = (cbMatDynParam._m0[5u].x * _900) + cbMatDynParam._m0[5u].y;
        float _3329 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
        float _907 = isnan(1.0) ? _3329 : (isnan(_3329) ? 1.0 : min(_3329, 1.0));
        float _911 = (cbMatDynParam._m0[5u].z * _900) + cbMatDynParam._m0[5u].w;
        float _3340 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3340 : (isnan(_3340) ? 1.0 : min(_3340, 1.0))) - _907)) + _907) < ((_745 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _755 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _756 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _774 = fma(_718, cbSceneParam._m0[5u].z, fma(_717, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _716));
    float _777 = fma(_718, cbSceneParam._m0[6u].z, fma(_717, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _716));
    float _780 = fma(_718, cbSceneParam._m0[7u].z, fma(_717, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _716));
    uint _793 = _302 + 9u;
    uint _794 = _793 + uint(cbMatDynParam._m0[0u].w);
    float _800 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3296 : (isnan(_3296) ? 1.0 : min(_3296, 1.0)))) * cbInstanceData._m0[_794].x;
    float _801 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3307 : (isnan(_3307) ? 1.0 : min(_3307, 1.0)))) * cbInstanceData._m0[_794].y;
    float _802 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3318 : (isnan(_3318) ? 1.0 : min(_3318, 1.0)))) * cbInstanceData._m0[_794].z;
    float _3351 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    float _803 = isnan(1.0) ? _3351 : (isnan(_3351) ? 1.0 : min(_3351, 1.0));
    float _3362 = isnan(0.0) ? _801 : (isnan(_801) ? 0.0 : max(_801, 0.0));
    float _804 = isnan(1.0) ? _3362 : (isnan(_3362) ? 1.0 : min(_3362, 1.0));
    float _3373 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
    float _805 = isnan(1.0) ? _3373 : (isnan(_3373) ? 1.0 : min(_3373, 1.0));
    vec4 _813 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _755, cbSceneParam._m0[86u].y * _756));
    float _816 = _813.x * TEXCOORD_5.w;
    float _817 = dot(vec3(_716, _717, _718), vec3(_495, _496, _497));
    float _820 = _817 * 2.0;
    float _824 = (_820 * _716) - _495;
    float _825 = (_820 * _717) - _496;
    float _826 = (_820 * _718) - _497;
    float _827 = dot(vec3(_495, _496, _497), vec3(_716, _717, _718));
    float _830 = abs(_827);
    float _3384 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
    float _831 = isnan(1.0) ? _3384 : (isnan(_3384) ? 1.0 : min(_3384, 1.0));
    float _837 = sqrt(_720);
    float _849 = exp2((_837 * 5.0) * log2(1.0 - (_831 * 0.999000012874603271484375))) / (4.0 - (_837 * 3.0));
    float _881 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _885 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _889 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1219;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _944 = fma(_889, cbModelParam._m0[26u].z, fma(_885, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _881));
        float _948 = fma(_889, cbModelParam._m0[27u].z, fma(_885, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _881));
        float _952 = fma(_889, cbModelParam._m0[28u].z, fma(_885, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _881));
        float _977 = _881 + _716;
        float _978 = _885 + _717;
        float _979 = _889 + _718;
        float _989 = fma(_979, cbModelParam._m0[26u].z, fma(_978, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _977)) - _944;
        float _990 = fma(_979, cbModelParam._m0[27u].z, fma(_978, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _977)) - _948;
        float _991 = fma(_979, cbModelParam._m0[28u].z, fma(_978, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _977)) - _952;
        float _995 = inversesqrt(dot(vec3(_989, _990, _991), vec3(_989, _990, _991)));
        float _1008 = ((_995 * _989) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_944 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1009 = ((_995 * _990) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_948 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1010 = ((_995 * _991) / cbModelParam._m0[34u].z) + ((((((_952 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1013 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1008, _1009, _1010), 0.0);
        vec4 _1020 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1008, _1009, _1010), 0.0);
        vec4 _1027 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1008, _1009, _1010), 0.0);
        vec4 _1034 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1008, _1009, _1010), 0.0);
        float _1047 = exp2((_1013.w + (-0.5)) * 20.0) * 2.0;
        float _1048 = _1047 * (_1013.x + (-0.5));
        float _1049 = _1047 * (_1013.y + (-0.5));
        float _1050 = _1047 * (_1013.z + (-0.5));
        float _1057 = exp2((_1020.w + (-0.5)) * 20.0) * 2.0;
        float _1058 = _1057 * (_1020.x + (-0.5));
        float _1059 = _1057 * (_1020.y + (-0.5));
        float _1060 = _1057 * (_1020.z + (-0.5));
        float _1067 = exp2((_1027.w + (-0.5)) * 20.0) * 2.0;
        float _1068 = _1067 * (_1027.x + (-0.5));
        float _1069 = _1067 * (_1027.y + (-0.5));
        float _1070 = _1067 * (_1027.z + (-0.5));
        float _1077 = exp2((_1034.w + (-0.5)) * 20.0) * 2.0;
        float _1078 = _1077 * (_1034.x + (-0.5));
        float _1079 = _1077 * (_1034.y + (-0.5));
        float _1080 = _1077 * (_1034.z + (-0.5));
        float _1081 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
        float _1082 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
        float _1083 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
        float _1084 = _1048 * 0.5;
        float _1085 = _1058 * 0.5;
        float _1086 = _1068 * 0.5;
        float _1087 = dot(vec3(_1084, _1085, _1086), vec3(_1084, _1085, _1086));
        float _1092 = (_1087 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1087);
        float _1101 = (dot(vec3(_716, _717, _718), vec3(_1092 * _1084, _1092 * _1085, _1092 * _1086)) + 1.0) * 0.5;
        float _3410 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1111 = sqrt(((_1085 * _1085) + (_1084 * _1084)) + (_1086 * _1086)) / (_1081 + 9.9999997473787516355514526367188e-06);
        float _3421 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
        float _1112 = isnan(1.0) ? _3421 : (isnan(_3421) ? 1.0 : min(_3421, 1.0));
        float _1113 = _1112 * 2.0;
        float _1117 = (1.0 - _1112) / (_1112 + 1.0);
        float _3432 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
        float _1118 = isnan(1.0) ? _3432 : (isnan(_3432) ? 1.0 : min(_3432, 1.0));
        float _1127 = ((((1.0 - _1118) * (_1113 + 2.0)) * exp2(log2(isnan(1.0) ? _3410 : (isnan(_3410) ? 1.0 : min(_3410, 1.0))) * (_1113 + 1.0))) + _1118) * _1081;
        float _1128 = _1049 * 0.5;
        float _1129 = _1059 * 0.5;
        float _1130 = _1069 * 0.5;
        float _1131 = dot(vec3(_1128, _1129, _1130), vec3(_1128, _1129, _1130));
        float _1136 = (_1131 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1131);
        float _1144 = (dot(vec3(_716, _717, _718), vec3(_1136 * _1128, _1136 * _1129, _1136 * _1130)) + 1.0) * 0.5;
        float _3443 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1153 = sqrt(((_1129 * _1129) + (_1128 * _1128)) + (_1130 * _1130)) / (_1082 + 9.9999997473787516355514526367188e-06);
        float _3454 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1154 = isnan(1.0) ? _3454 : (isnan(_3454) ? 1.0 : min(_3454, 1.0));
        float _1155 = _1154 * 2.0;
        float _1159 = (1.0 - _1154) / (_1154 + 1.0);
        float _3465 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1160 = isnan(1.0) ? _3465 : (isnan(_3465) ? 1.0 : min(_3465, 1.0));
        float _1169 = ((((1.0 - _1160) * (_1155 + 2.0)) * exp2(log2(isnan(1.0) ? _3443 : (isnan(_3443) ? 1.0 : min(_3443, 1.0))) * (_1155 + 1.0))) + _1160) * _1082;
        float _1170 = _1050 * 0.5;
        float _1171 = _1060 * 0.5;
        float _1172 = _1070 * 0.5;
        float _1173 = dot(vec3(_1170, _1171, _1172), vec3(_1170, _1171, _1172));
        float _1178 = (_1173 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1173);
        float _1186 = (dot(vec3(_716, _717, _718), vec3(_1178 * _1170, _1178 * _1171, _1178 * _1172)) + 1.0) * 0.5;
        float _3476 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1195 = sqrt(((_1171 * _1171) + (_1170 * _1170)) + (_1172 * _1172)) / (_1083 + 9.9999997473787516355514526367188e-06);
        float _3487 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
        float _1196 = isnan(1.0) ? _3487 : (isnan(_3487) ? 1.0 : min(_3487, 1.0));
        float _1197 = _1196 * 2.0;
        float _1201 = (1.0 - _1196) / (_1196 + 1.0);
        float _3498 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1202 = isnan(1.0) ? _3498 : (isnan(_3498) ? 1.0 : min(_3498, 1.0));
        float _1211 = ((((1.0 - _1202) * (_1197 + 2.0)) * exp2(log2(isnan(1.0) ? _3476 : (isnan(_3476) ? 1.0 : min(_3476, 1.0))) * (_1197 + 1.0))) + _1202) * _1083;
        _1219 = _1050;
        _1221 = _1049;
        _1222 = _1048;
        _1223 = _1060;
        _1224 = _1059;
        _1225 = _1058;
        _1226 = _1070;
        _1227 = _1069;
        _1228 = _1068;
        _1229 = _1083;
        _1230 = _1082;
        _1231 = _1081;
        _1232 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0)));
        _1233 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0)));
        _1234 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0)));
    }
    else
    {
        _1219 = _1220;
        _1221 = _1220;
        _1222 = _1220;
        _1223 = _1220;
        _1224 = _1220;
        _1225 = _1220;
        _1226 = _1220;
        _1227 = _1220;
        _1228 = _1220;
        _1229 = _1220;
        _1230 = _1220;
        _1231 = _1220;
        _1232 = 0.0;
        _1233 = 0.0;
        _1234 = 0.0;
    }
    float _1532;
    float _1533;
    float _1534;
    float _1535;
    float _1536;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1263 = fma(_889, cbModelParam._m0[30u].z, fma(_885, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _881));
        float _1267 = fma(_889, cbModelParam._m0[31u].z, fma(_885, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _881));
        float _1271 = fma(_889, cbModelParam._m0[32u].z, fma(_885, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _881));
        float _1294 = _881 + _716;
        float _1295 = _885 + _717;
        float _1296 = _889 + _718;
        float _1306 = fma(_1296, cbModelParam._m0[30u].z, fma(_1295, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1294)) - _1263;
        float _1307 = fma(_1296, cbModelParam._m0[31u].z, fma(_1295, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1294)) - _1267;
        float _1308 = fma(_1296, cbModelParam._m0[32u].z, fma(_1295, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1294)) - _1271;
        float _1312 = inversesqrt(dot(vec3(_1306, _1307, _1308), vec3(_1306, _1307, _1308)));
        float _1325 = ((_1312 * _1306) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1263 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1326 = ((_1312 * _1307) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1267 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1327 = ((_1312 * _1308) / cbModelParam._m0[35u].z) + ((((((_1271 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1329 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1325, _1326, _1327), 0.0);
        vec4 _1336 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1325, _1326, _1327), 0.0);
        vec4 _1343 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1325, _1326, _1327), 0.0);
        vec4 _1350 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1325, _1326, _1327), 0.0);
        float _1362 = exp2((_1329.w + (-0.5)) * 20.0) * 2.0;
        float _1363 = _1362 * (_1329.x + (-0.5));
        float _1364 = _1362 * (_1329.y + (-0.5));
        float _1365 = _1362 * (_1329.z + (-0.5));
        float _1372 = exp2((_1336.w + (-0.5)) * 20.0) * 2.0;
        float _1373 = _1372 * (_1336.x + (-0.5));
        float _1374 = _1372 * (_1336.y + (-0.5));
        float _1375 = _1372 * (_1336.z + (-0.5));
        float _1382 = exp2((_1343.w + (-0.5)) * 20.0) * 2.0;
        float _1383 = _1382 * (_1343.x + (-0.5));
        float _1384 = _1382 * (_1343.y + (-0.5));
        float _1385 = _1382 * (_1343.z + (-0.5));
        float _1392 = exp2((_1350.w + (-0.5)) * 20.0) * 2.0;
        float _1393 = _1392 * (_1350.x + (-0.5));
        float _1394 = _1392 * (_1350.y + (-0.5));
        float _1395 = _1392 * (_1350.z + (-0.5));
        float _1396 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
        float _1397 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1398 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1399 = _1363 * 0.5;
        float _1400 = _1373 * 0.5;
        float _1401 = _1383 * 0.5;
        float _1402 = dot(vec3(_1399, _1400, _1401), vec3(_1399, _1400, _1401));
        float _1407 = (_1402 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1402);
        float _1415 = (dot(vec3(_716, _717, _718), vec3(_1407 * _1399, _1407 * _1400, _1407 * _1401)) + 1.0) * 0.5;
        float _3539 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1424 = sqrt(((_1400 * _1400) + (_1399 * _1399)) + (_1401 * _1401)) / (_1396 + 9.9999997473787516355514526367188e-06);
        float _3550 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1425 = isnan(1.0) ? _3550 : (isnan(_3550) ? 1.0 : min(_3550, 1.0));
        float _1426 = _1425 * 2.0;
        float _1430 = (1.0 - _1425) / (_1425 + 1.0);
        float _3561 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1431 = isnan(1.0) ? _3561 : (isnan(_3561) ? 1.0 : min(_3561, 1.0));
        float _1440 = ((((1.0 - _1431) * (_1426 + 2.0)) * exp2(log2(isnan(1.0) ? _3539 : (isnan(_3539) ? 1.0 : min(_3539, 1.0))) * (_1426 + 1.0))) + _1431) * _1396;
        float _1441 = _1364 * 0.5;
        float _1442 = _1374 * 0.5;
        float _1443 = _1384 * 0.5;
        float _1444 = dot(vec3(_1441, _1442, _1443), vec3(_1441, _1442, _1443));
        float _1449 = (_1444 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1444);
        float _1457 = (dot(vec3(_716, _717, _718), vec3(_1449 * _1441, _1449 * _1442, _1449 * _1443)) + 1.0) * 0.5;
        float _3572 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1466 = sqrt(((_1442 * _1442) + (_1441 * _1441)) + (_1443 * _1443)) / (_1397 + 9.9999997473787516355514526367188e-06);
        float _3583 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1467 = isnan(1.0) ? _3583 : (isnan(_3583) ? 1.0 : min(_3583, 1.0));
        float _1468 = _1467 * 2.0;
        float _1472 = (1.0 - _1467) / (_1467 + 1.0);
        float _3594 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
        float _1473 = isnan(1.0) ? _3594 : (isnan(_3594) ? 1.0 : min(_3594, 1.0));
        float _1482 = ((((1.0 - _1473) * (_1468 + 2.0)) * exp2(log2(isnan(1.0) ? _3572 : (isnan(_3572) ? 1.0 : min(_3572, 1.0))) * (_1468 + 1.0))) + _1473) * _1397;
        float _1483 = _1365 * 0.5;
        float _1484 = _1375 * 0.5;
        float _1485 = _1385 * 0.5;
        float _1486 = dot(vec3(_1483, _1484, _1485), vec3(_1483, _1484, _1485));
        float _1491 = (_1486 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1486);
        float _1499 = (dot(vec3(_716, _717, _718), vec3(_1491 * _1483, _1491 * _1484, _1491 * _1485)) + 1.0) * 0.5;
        float _3605 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
        float _1508 = sqrt(((_1484 * _1484) + (_1483 * _1483)) + (_1485 * _1485)) / (_1398 + 9.9999997473787516355514526367188e-06);
        float _3616 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1509 = isnan(1.0) ? _3616 : (isnan(_3616) ? 1.0 : min(_3616, 1.0));
        float _1510 = _1509 * 2.0;
        float _1514 = (1.0 - _1509) / (_1509 + 1.0);
        float _3627 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1515 = isnan(1.0) ? _3627 : (isnan(_3627) ? 1.0 : min(_3627, 1.0));
        float _1524 = ((((1.0 - _1515) * (_1510 + 2.0)) * exp2(log2(isnan(1.0) ? _3605 : (isnan(_3605) ? 1.0 : min(_3605, 1.0))) * (_1510 + 1.0))) + _1515) * _1398;
        _1532 = _1365;
        _1533 = _1364;
        _1534 = _1363;
        _1535 = _1375;
        _1536 = _1374;
        _1537 = _1373;
        _1538 = _1385;
        _1539 = _1384;
        _1540 = _1383;
        _1541 = _1398;
        _1542 = _1397;
        _1543 = _1396;
        _1544 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0)));
        _1545 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0)));
        _1546 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0)));
    }
    else
    {
        _1532 = _1220;
        _1533 = _1220;
        _1534 = _1220;
        _1535 = _1220;
        _1536 = _1220;
        _1537 = _1220;
        _1538 = _1220;
        _1539 = _1220;
        _1540 = _1220;
        _1541 = _1220;
        _1542 = _1220;
        _1543 = _1220;
        _1544 = 0.0;
        _1545 = 0.0;
        _1546 = 0.0;
    }
    float _1556 = (cbModelParam._m0[1u].x * (_1544 - _1232)) + _1232;
    float _1557 = (cbModelParam._m0[1u].x * (_1545 - _1233)) + _1233;
    float _1558 = (cbModelParam._m0[1u].x * (_1546 - _1234)) + _1234;
    float _1579 = fma(_1558, cbSceneParam._m0[89u].z, fma(_1557, cbSceneParam._m0[89u].y, _1556 * cbSceneParam._m0[89u].x));
    float _1582 = fma(_1558, cbSceneParam._m0[90u].z, fma(_1557, cbSceneParam._m0[90u].y, _1556 * cbSceneParam._m0[90u].x));
    float _1585 = fma(_1558, cbSceneParam._m0[91u].z, fma(_1557, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1556));
    float _1600 = _824 * 0.5;
    float _1601 = _825 * 0.5;
    float _1602 = _826 * 0.5;
    float _1603 = dot(vec4(_1600, _1601, _1602, 1.0), vec4(_1534, _1537, _1540, _1543));
    float _1606 = dot(vec4(_1600, _1601, _1602, 1.0), vec4(_1533, _1536, _1539, _1542));
    float _1609 = dot(vec4(_1600, _1601, _1602, 1.0), vec4(_1532, _1535, _1538, _1541));
    float _1643;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1616 = dot(vec4(_1600, _1601, _1602, 1.0), vec4(_1219, _1223, _1226, _1229));
        float _1620 = dot(vec4(_1600, _1601, _1602, 1.0), vec4(_1221, _1224, _1227, _1230));
        float _1624 = dot(vec4(_1600, _1601, _1602, 1.0), vec4(_1222, _1225, _1228, _1231));
        float _1631 = dot(vec4(cbModelParam._m0[39u]), vec4(_1600, _1601, _1602, 1.0));
        _1643 = dot(vec3(isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0)), isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0)), isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1631) ? 0.0 : (isnan(0.0) ? _1631 : max(0.0, _1631))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1643 = 1.0;
    }
    float _1654;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1645 = dot(vec4(cbModelParam._m0[40u]), vec4(_1600, _1601, _1602, 1.0));
        _1654 = dot(vec3(isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0)), isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0)), isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1645) ? 0.0 : (isnan(0.0) ? _1645 : max(0.0, _1645))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1654 = 1.0;
    }
    float _1658 = (_1654 * cbModelParam._m0[1u].x) + (_1643 * (1.0 - cbModelParam._m0[1u].x));
    float _1668 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _720);
    float _1669 = isnan(_1668) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1668 : min(cbModelParam._m0[25u].z, _1668));
    float _1749;
    float _1751;
    float _1753;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1716 = fma(_889, cbModelParam._m0[13u].z, fma(_885, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _881)) + cbModelParam._m0[13u].w;
        float _1720 = fma(_889, cbModelParam._m0[14u].z, fma(_885, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _881)) + cbModelParam._m0[14u].w;
        float _1724 = fma(_889, cbModelParam._m0[15u].z, fma(_885, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _881)) + cbModelParam._m0[15u].w;
        float _1727 = fma(_826, cbModelParam._m0[13u].z, fma(_825, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _824));
        float _1730 = fma(_826, cbModelParam._m0[14u].z, fma(_825, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _824));
        float _1733 = fma(_826, cbModelParam._m0[15u].z, fma(_825, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _824));
        float _1761;
        if (_1727 > 0.0)
        {
            _1761 = abs((1.0 - _1716) / _1727);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1727 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1716 + 1.0) / _1727);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1761 = frontier_phi_19_17_ladder;
        }
        float _1933;
        if (_1730 > 0.0)
        {
            _1933 = abs((1.0 - _1720) / _1730);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1730 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1720 + 1.0) / _1730);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1933 = frontier_phi_28_24_ladder;
        }
        float _2168;
        if (_1733 > 0.0)
        {
            _2168 = abs((1.0 - _1724) / _1733);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1733 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1724 + 1.0) / _1733);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2168 = frontier_phi_39_35_ladder;
        }
        float _2170 = isnan(_1933) ? _1761 : (isnan(_1761) ? _1933 : min(_1761, _1933));
        float _2171 = isnan(_2168) ? _2170 : (isnan(_2170) ? _2168 : min(_2170, _2168));
        float _2175 = (_2171 * _1727) + _1716;
        float _2176 = (_2171 * _1730) + _1720;
        float _2177 = (_2171 * _1733) + _1724;
        float _2178 = _2171 * 9.9999997473787516355514526367188e-05;
        float _2180 = (-1.0) - _2178;
        float _2182 = _2178 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2177 > _2182) || ((_2177 < _2180) || ((_2176 > _2182) || ((_2176 < _2180) || ((_2175 < _2180) || (_2175 > _2182))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2327 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2177, cbModelParam._m0[9u].z, fma(_2176, cbModelParam._m0[9u].y, _2175 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2177, cbModelParam._m0[10u].z, fma(_2176, cbModelParam._m0[10u].y, _2175 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2177, cbModelParam._m0[11u].z, fma(_2176, cbModelParam._m0[11u].y, _2175 * cbModelParam._m0[11u].x))), _1669);
            frontier_phi_18_39_ladder = _2327.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2327.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2327.x * cbModelParam._m0[1u].y;
        }
        _1749 = frontier_phi_18_39_ladder_2;
        _1751 = frontier_phi_18_39_ladder_1;
        _1753 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1737 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_824, _825, _826), _1669);
        _1749 = _1737.x * cbModelParam._m0[1u].y;
        _1751 = _1737.y * cbModelParam._m0[1u].y;
        _1753 = _1737.z * cbModelParam._m0[1u].y;
    }
    float _1757 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _720);
    float _1758 = isnan(_1757) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1757 : min(cbModelParam._m0[25u].w, _1757));
    float _1850;
    float _1852;
    float _1854;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1814 = fma(_889, cbModelParam._m0[21u].z, fma(_885, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _881)) + cbModelParam._m0[21u].w;
        float _1818 = fma(_889, cbModelParam._m0[22u].z, fma(_885, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _881)) + cbModelParam._m0[22u].w;
        float _1822 = fma(_889, cbModelParam._m0[23u].z, fma(_885, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _881)) + cbModelParam._m0[23u].w;
        float _1825 = fma(_826, cbModelParam._m0[21u].z, fma(_825, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _824));
        float _1828 = fma(_826, cbModelParam._m0[22u].z, fma(_825, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _824));
        float _1831 = fma(_826, cbModelParam._m0[23u].z, fma(_825, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _824));
        float _1938;
        if (_1825 > 0.0)
        {
            _1938 = abs((1.0 - _1814) / _1825);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1825 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1814 + 1.0) / _1825);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1938 = frontier_phi_30_26_ladder;
        }
        float _2195;
        if (_1828 > 0.0)
        {
            _2195 = abs((1.0 - _1818) / _1828);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1828 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1818 + 1.0) / _1828);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2195 = frontier_phi_41_37_ladder;
        }
        float _2499;
        if (_1831 > 0.0)
        {
            _2499 = abs((1.0 - _1822) / _1831);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1831 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1822 + 1.0) / _1831);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2499 = frontier_phi_52_47_ladder;
        }
        float _2501 = isnan(_2195) ? _1938 : (isnan(_1938) ? _2195 : min(_1938, _2195));
        float _2502 = isnan(_2499) ? _2501 : (isnan(_2501) ? _2499 : min(_2501, _2499));
        float _2506 = (_2502 * _1825) + _1814;
        float _2507 = (_2502 * _1828) + _1818;
        float _2508 = (_2502 * _1831) + _1822;
        float _2509 = _2502 * 9.9999997473787516355514526367188e-05;
        float _2510 = (-1.0) - _2509;
        float _2512 = _2509 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2508 > _2512) || ((_2508 < _2510) || ((_2507 > _2512) || ((_2507 < _2510) || ((_2506 < _2510) || (_2506 > _2512))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2689 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2508, cbModelParam._m0[17u].z, fma(_2507, cbModelParam._m0[17u].y, _2506 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2508, cbModelParam._m0[18u].z, fma(_2507, cbModelParam._m0[18u].y, _2506 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2508, cbModelParam._m0[19u].z, fma(_2507, cbModelParam._m0[19u].y, _2506 * cbModelParam._m0[19u].x))), _1758);
            frontier_phi_27_52_ladder = _2689.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2689.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2689.y * cbModelParam._m0[1u].z;
        }
        _1850 = frontier_phi_27_52_ladder_1;
        _1852 = frontier_phi_27_52_ladder_2;
        _1854 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1834 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_824, _825, _826), _1758);
        _1850 = _1834.x * cbModelParam._m0[1u].z;
        _1852 = _1834.y * cbModelParam._m0[1u].z;
        _1854 = _1834.z * cbModelParam._m0[1u].z;
    }
    float _1866 = ((((1.0 - _849) * ((_837 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_849 * _837)) * _816;
    float _1867 = _1866 * ((cbModelParam._m0[1u].w * (_1850 - _1749)) + _1749);
    float _1868 = _1866 * ((cbModelParam._m0[1u].w * (_1852 - _1751)) + _1751);
    float _1869 = _1866 * ((cbModelParam._m0[1u].w * (_1854 - _1753)) + _1753);
    float _1872 = fma(_1869, cbSceneParam._m0[89u].z, fma(_1868, cbSceneParam._m0[89u].y, _1867 * cbSceneParam._m0[89u].x));
    float _1875 = fma(_1869, cbSceneParam._m0[90u].z, fma(_1868, cbSceneParam._m0[90u].y, _1867 * cbSceneParam._m0[90u].x));
    float _1878 = fma(_1869, cbSceneParam._m0[91u].z, fma(_1868, cbSceneParam._m0[91u].y, _1867 * cbSceneParam._m0[91u].x));
    uvec4 _1888 = floatBitsToUint(cbInstanceData._m0[_302 + 5u]);
    uint _1890 = _1888.x * 14u;
    uint _1891 = _1890 + 13u;
    float _1896 = _816 + (-1.0);
    float _1899 = (cbLight._m0[_1891].x * _1896) + 1.0;
    float _1900 = (cbLight._m0[_1891].y * _1896) + 1.0;
    uint _1902 = _1890 + 4u;
    float _1913 = dot(vec3(cbLight._m0[_1890].xyz), vec3(_716, _717, _718));
    float _1916 = isnan(1.0) ? _1899 : (isnan(_1899) ? 1.0 : min(_1899, 1.0));
    uint _1917 = _1890 + 5u;
    uint _1923 = _1890 | 1u;
    float _1929 = dot(vec3(cbLight._m0[_1923].xyz), vec3(_716, _717, _718));
    float _1932 = isnan(1.0) ? _1900 : (isnan(_1900) ? 1.0 : min(_1900, 1.0));
    float _1997;
    float _1998;
    float _1999;
    if (_721 == 0.0)
    {
        float _3763 = isnan(0.0) ? _1913 : (isnan(_1913) ? 0.0 : max(_1913, 0.0));
        float _3774 = isnan(0.0) ? _1929 : (isnan(_1929) ? 0.0 : max(_1929, 0.0));
        float _1951 = (isnan(1.0) ? _3763 : (isnan(_3763) ? 1.0 : min(_3763, 1.0))) * 0.3183098733425140380859375;
        float _1953 = (isnan(1.0) ? _3774 : (isnan(_3774) ? 1.0 : min(_3774, 1.0))) * 0.3183098733425140380859375;
        _1997 = ((cbLight._m0[_1917].x * _1932) * _1953) + ((cbLight._m0[_1902].x * _1916) * _1951);
        _1998 = ((_1932 * cbLight._m0[_1917].y) * _1953) + ((_1916 * cbLight._m0[_1902].y) * _1951);
        _1999 = ((_1932 * cbLight._m0[_1917].z) * _1953) + ((_1916 * cbLight._m0[_1902].z) * _1951);
    }
    else
    {
        float _1963 = _1913 + _721;
        float _1966 = (_721 * 2.0) + 1.0;
        float _1967 = (isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0))) / _1966;
        float _1974 = _1929 + _721;
        float _1976 = (isnan(0.0) ? _1974 : (isnan(_1974) ? 0.0 : max(_1974, 0.0))) / _1966;
        _1997 = (((_1976 * cbLight._m0[_1917].x) * _1932) + ((_1967 * cbLight._m0[_1902].x) * _1916)) * 0.3183098733425140380859375;
        _1998 = (((_1976 * cbLight._m0[_1917].y) * _1932) + ((_1967 * cbLight._m0[_1902].y) * _1916)) * 0.3183098733425140380859375;
        _1999 = (((_1976 * cbLight._m0[_1917].z) * _1932) + ((_1967 * cbLight._m0[_1902].z) * _1916)) * 0.3183098733425140380859375;
    }
    uint _2003 = _1890 + 8u;
    float _2019 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1890].w)) * _720) * 0.949999988079071044921875);
    float _2020 = _2019 * _2019;
    float _2021 = cbLight._m0[_1890].x + _495;
    float _2022 = cbLight._m0[_1890].y + _496;
    float _2023 = cbLight._m0[_1890].z + _497;
    float _2027 = inversesqrt(dot(vec3(_2021, _2022, _2023), vec3(_2021, _2022, _2023)));
    float _2028 = _2027 * _2021;
    float _2029 = _2027 * _2022;
    float _2030 = _2027 * _2023;
    float _2031 = dot(vec3(_716, _717, _718), vec3(cbLight._m0[_1890].xyz));
    float _3795 = isnan(0.0) ? _2031 : (isnan(_2031) ? 0.0 : max(_2031, 0.0));
    float _2034 = isnan(1.0) ? _3795 : (isnan(_3795) ? 1.0 : min(_3795, 1.0));
    float _3806 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    float _2035 = isnan(1.0) ? _3806 : (isnan(_3806) ? 1.0 : min(_3806, 1.0));
    float _2036 = dot(vec3(_716, _717, _718), vec3(_2028, _2029, _2030));
    float _3817 = isnan(0.0) ? _2036 : (isnan(_2036) ? 0.0 : max(_2036, 0.0));
    float _2039 = isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0));
    float _2040 = dot(vec3(cbLight._m0[_1890].xyz), vec3(_2028, _2029, _2030));
    float _3828 = isnan(0.0) ? _2040 : (isnan(_2040) ? 0.0 : max(_2040, 0.0));
    float _2044 = _2020 * _2020;
    float _2048 = ((_2039 * _2039) * (_2044 + (-1.0))) + 1.0;
    float _2059 = (exp2(log2(1.0 - (isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2060 = 1.0 - _2020;
    float _2071 = (0.5 / (((_2035 * ((_2034 * _2060) + _2020)) + 9.9999999392252902907785028219223e-09) + (((_2035 * _2060) + _2020) * _2034))) * _2034;
    float _3839 = isnan(0.0) ? _2071 : (isnan(_2071) ? 0.0 : max(_2071, 0.0));
    float _2073 = (isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0))) * (_2044 / ((_2048 * _2048) * 3.141590118408203125));
    uint _2086 = _1890 + 9u;
    float _2100 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1923].w)) * _720) * 0.949999988079071044921875);
    float _2101 = _2100 * _2100;
    float _2102 = cbLight._m0[_1923].x + _495;
    float _2103 = cbLight._m0[_1923].y + _496;
    float _2104 = cbLight._m0[_1923].z + _497;
    float _2108 = inversesqrt(dot(vec3(_2102, _2103, _2104), vec3(_2102, _2103, _2104)));
    float _2109 = _2108 * _2102;
    float _2110 = _2108 * _2103;
    float _2111 = _2108 * _2104;
    float _2112 = dot(vec3(_716, _717, _718), vec3(cbLight._m0[_1923].xyz));
    float _3850 = isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0));
    float _2115 = isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0));
    float _2116 = dot(vec3(_716, _717, _718), vec3(_2109, _2110, _2111));
    float _3861 = isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0));
    float _2119 = isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0));
    float _2120 = dot(vec3(cbLight._m0[_1923].xyz), vec3(_2109, _2110, _2111));
    float _3872 = isnan(0.0) ? _2120 : (isnan(_2120) ? 0.0 : max(_2120, 0.0));
    float _2124 = _2101 * _2101;
    float _2128 = ((_2119 * _2119) * (_2124 + (-1.0))) + 1.0;
    float _2137 = (exp2(log2(1.0 - (isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2138 = 1.0 - _2101;
    float _2148 = (0.5 / (((_2035 * ((_2115 * _2138) + _2101)) + 9.9999999392252902907785028219223e-09) + (((_2035 * _2138) + _2101) * _2115))) * _2115;
    float _3883 = isnan(0.0) ? _2148 : (isnan(_2148) ? 0.0 : max(_2148, 0.0));
    float _2150 = (isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0))) * (_2124 / ((_2128 * _2128) * 3.141590118408203125));
    float _2160 = (((_2137 * cbLight._m0[_2086].x) * _2150) * _1932) + (((_2059 * cbLight._m0[_2003].x) * _2073) * _1916);
    float _2161 = (((_2137 * cbLight._m0[_2086].y) * _2150) * _1932) + (((_2059 * cbLight._m0[_2003].y) * _2073) * _1916);
    float _2162 = (((_2137 * cbLight._m0[_2086].z) * _2150) * _1932) + (((_2059 * cbLight._m0[_2003].z) * _2073) * _1916);
    float _2298;
    float _2300;
    float _2302;
    float _2304;
    float _2306;
    float _2308;
    if (_1888.y == 0u)
    {
        float _2239 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2240 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2239;
        float _2241 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2239;
        float _2242 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2239;
        uvec4 _2254 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2255 = _2254.x;
        uint _2266 = uint((float(_2254.y) * floor(float(uint(cbSceneParam._m0[85u].y * _756) / _2255))) + floor(float(uint(cbSceneParam._m0[85u].x * _755) / _2255)));
        float _2276 = (log2(_2242 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2277 = isnan(0.0) ? _2276 : (isnan(_2276) ? 0.0 : max(_2276, 0.0));
        uint _2280 = uint(isnan(14.0) ? _2277 : (isnan(_2277) ? 14.0 : min(_2277, 14.0)));
        uint _2287 = _2254.z;
        float _2336;
        float _2338;
        float _2340;
        float _2342;
        float _2344;
        float _2346;
        if (((((1u << ((_2287 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2280 << 2u) + (_2266 << 6u)) >> 2u)).x) == 0u) || ((_2287 & 240u) == 0u))
        {
            _2336 = 0.0;
            _2338 = 0.0;
            _2340 = 0.0;
            _2342 = 0.0;
            _2344 = 0.0;
            _2346 = 0.0;
        }
        else
        {
            float _2337;
            float _2339;
            float _2341;
            float _2343;
            float _2345;
            float _2347;
            float _2525 = 0.0;
            float _2526 = 0.0;
            float _2527 = 0.0;
            float _2528 = 0.0;
            float _2529 = 0.0;
            float _2530 = 0.0;
            uint _2531 = 0u;
            uint _2540;
            bool _2541;
            for (;;)
            {
                _2540 = texelFetch(g_lightClassification, int((((_2280 << 5u) + (_2266 << 9u)) + (_2531 << 2u)) >> 2u)).x;
                _2541 = _2540 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2541)
                {
                    frontier_phi_58_pred = _2525;
                    frontier_phi_58_pred_1 = _2530;
                    frontier_phi_58_pred_2 = _2529;
                    frontier_phi_58_pred_3 = _2528;
                    frontier_phi_58_pred_4 = _2527;
                    frontier_phi_58_pred_5 = _2526;
                }
                else
                {
                    float _2762;
                    float _2763;
                    float _2764;
                    float _2765;
                    float _2766;
                    float _2767;
                    uint _2768;
                    _2762 = _2525;
                    _2763 = _2526;
                    _2764 = _2527;
                    _2765 = _2528;
                    _2766 = _2529;
                    _2767 = _2530;
                    _2768 = _2540;
                    float _2694;
                    float _2695;
                    float _2696;
                    float _2697;
                    float _2698;
                    float _2699;
                    for (;;)
                    {
                        uint _2772 = uint(findLSB(_2768)) + (_2531 << 5u);
                        uint _2769 = (_2768 + 4294967295u) & _2768;
                        uint _2774 = _2772 * 48u;
                        vec4 _2788 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2774)).x, texelFetch(g_PointLightRenderingBuffer, int(_2774 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2774 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2774 + 3u)).x));
                        uint _2794 = (_2772 * 48u) + 4u;
                        vec4 _2807 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2794)).x, texelFetch(g_PointLightRenderingBuffer, int(_2794 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2794 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2794 + 3u)).x));
                        float _2808 = _2807.x;
                        float _2809 = _2807.y;
                        float _2810 = _2807.z;
                        uint _2813 = (_2772 * 48u) + 8u;
                        vec3 _2824 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2813)).x, texelFetch(g_PointLightRenderingBuffer, int(_2813 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2813 + 2u)).x));
                        uint _2829 = (_2772 * 48u) + 12u;
                        vec2 _2837 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2829)).x, texelFetch(g_PointLightRenderingBuffer, int(_2829 + 1u)).x));
                        float _2843 = inversesqrt(dot(vec3(_2240, _2241, _2242), vec3(_2240, _2241, _2242)));
                        float _2844 = _2843 * _2240;
                        float _2845 = _2843 * _2241;
                        float _2846 = _2843 * _2242;
                        float _2847 = _2788.x - _2240;
                        float _2848 = _2788.y - _2241;
                        float _2849 = _2788.z - _2242;
                        float _2850 = dot(vec3(_2847, _2848, _2849), vec3(_2847, _2848, _2849));
                        float _2853 = inversesqrt(_2850);
                        float _2854 = _2853 * _2847;
                        float _2855 = _2853 * _2848;
                        float _2856 = _2853 * _2849;
                        float _2857 = dot(vec3(_774, _777, _780), vec3(_2854, _2855, _2856));
                        float _2862 = 1.0 - (_2850 * _2788.w);
                        float _3904 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0));
                        float _2863 = isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0));
                        float _2864 = sqrt(_2850) * _2807.w;
                        float _2867 = 1.39999997615814208984375 / (_2864 + 1.39999997615814208984375);
                        float _2868 = _2867 * _2867;
                        float _2869 = 1.0 - _2868;
                        float _2871 = (_2869 * _2869) * _721;
                        float _2874 = ((_2869 * _2857) + _2868) + _2871;
                        float _2879 = _2864 * _2864;
                        float _2884 = ((isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : max(_2874, 0.0))) * _2863) / (((_2871 * 2.0) + 1.0) * ((_2879 * 0.699999988079071044921875) + 1.0));
                        float _2888 = dot(vec3(_2854, _2855, _2856), vec3(_2844, _2845, _2846));
                        float _3920 = isnan(0.0) ? _2888 : (isnan(_2888) ? 0.0 : max(_2888, 0.0));
                        float _2895 = dot(vec3((-0.0) - _2844, (-0.0) - _2845, (-0.0) - _2846), vec3(_774, _777, _780)) + 1.0;
                        float _2897 = (isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0))) * 0.5;
                        float _2904 = ((_2897 * _2897) * _2837.x) * exp2((_2837.y * 32.0) * log2(isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0))));
                        float _2906 = _721 / (_721 + 1.0);
                        float _2922 = (-0.0) - _2240;
                        float _2923 = (-0.0) - _2241;
                        float _2924 = (-0.0) - _2242;
                        float _2928 = inversesqrt(dot(vec3(_2922, _2923, _2924), vec3(_2922, _2923, _2924)));
                        float _2929 = _2928 * _2922;
                        float _2930 = _2928 * _2923;
                        float _2931 = _2928 * _2924;
                        float _2939 = exp2(log2(1.0 / ((_2879 * 3.5) + 5.0)) * 0.25);
                        float _2940 = 1.0 - _837;
                        float _2947 = sqrt(1.0 - ((1.0 - (_2940 * _2940)) * (1.0 - (_2939 * _2939))));
                        float _2948 = _2947 * _2947;
                        float _2949 = _2948 * _2948;
                        float _2950 = _2929 + _2854;
                        float _2951 = _2930 + _2855;
                        float _2952 = _2931 + _2856;
                        float _2956 = inversesqrt(dot(vec3(_2950, _2951, _2952), vec3(_2950, _2951, _2952)));
                        float _2960 = dot(vec3(_774, _777, _780), vec3(_2929, _2930, _2931));
                        float _3936 = isnan(0.0) ? _2960 : (isnan(_2960) ? 0.0 : max(_2960, 0.0));
                        float _2963 = isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0));
                        float _2964 = dot(vec3(_774, _777, _780), vec3(_2956 * _2950, _2956 * _2951, _2956 * _2952));
                        float _3947 = isnan(0.0) ? _2964 : (isnan(_2964) ? 0.0 : max(_2964, 0.0));
                        float _2967 = isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0));
                        float _2971 = ((_2967 * _2967) * (_2949 + (-1.0))) + 1.0;
                        float _2972 = _2867 * _2948;
                        float _2973 = _2972 * _2972;
                        float _2976 = ((1.0 - _2973) * _2857) + _2973;
                        float _3958 = isnan(0.0) ? _2976 : (isnan(_2976) ? 0.0 : max(_2976, 0.0));
                        float _2977 = isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0));
                        float _2978 = 1.0 - _2948;
                        float _2988 = (0.5 / (((_2977 * ((_2963 * _2978) + _2948)) + 9.9999999392252902907785028219223e-09) + (((_2977 * _2978) + _2948) * _2963))) * _2977;
                        float _3969 = isnan(0.0) ? _2988 : (isnan(_2988) ? 0.0 : max(_2988, 0.0));
                        float _2999 = (((_2949 * 3.1415927410125732421875) * (isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0)))) / ((_2971 * _2971) * ((_2879 * 2.1991131305694580078125) + 3.141590118408203125))) * _2863;
                        _2697 = (((((_2808 * 0.3183098733425140380859375) * _2906) * _2904) + _2808) * _2884) + _2765;
                        _2698 = (((((_2809 * 0.3183098733425140380859375) * _2906) * _2904) + _2809) * _2884) + _2766;
                        _2699 = (((((_2810 * 0.3183098733425140380859375) * _2906) * _2904) + _2810) * _2884) + _2767;
                        _2694 = (_2999 * _2824.x) + _2762;
                        _2695 = (_2999 * _2824.y) + _2763;
                        _2696 = (_2999 * _2824.z) + _2764;
                        if (_2769 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2762 = _2694;
                            _2763 = _2695;
                            _2764 = _2696;
                            _2765 = _2697;
                            _2766 = _2698;
                            _2767 = _2699;
                            _2768 = _2769;
                        }
                    }
                    frontier_phi_58_pred = _2694;
                    frontier_phi_58_pred_1 = _2699;
                    frontier_phi_58_pred_2 = _2698;
                    frontier_phi_58_pred_3 = _2697;
                    frontier_phi_58_pred_4 = _2696;
                    frontier_phi_58_pred_5 = _2695;
                }
                _2337 = frontier_phi_58_pred;
                _2347 = frontier_phi_58_pred_1;
                _2345 = frontier_phi_58_pred_2;
                _2343 = frontier_phi_58_pred_3;
                _2341 = frontier_phi_58_pred_4;
                _2339 = frontier_phi_58_pred_5;
                uint _2532 = _2531 + 1u;
                if (_2532 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2525 = _2337;
                    _2526 = _2339;
                    _2527 = _2341;
                    _2528 = _2343;
                    _2529 = _2345;
                    _2530 = _2347;
                    _2531 = _2532;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2336 = _2337;
            _2338 = _2339;
            _2340 = _2341;
            _2342 = _2343;
            _2344 = _2345;
            _2346 = _2347;
        }
        float _2351 = isnan(1.0) ? _816 : (isnan(_816) ? 1.0 : min(_816, 1.0));
        _2298 = (_2351 * _2342) + _1997;
        _2300 = (_2351 * _2344) + _1998;
        _2302 = (_2351 * _2346) + _1999;
        _2304 = ((_2336 * 0.039999999105930328369140625) * _2351) + _2160;
        _2306 = ((_2338 * 0.039999999105930328369140625) * _2351) + _2161;
        _2308 = ((_2340 * 0.039999999105930328369140625) * _2351) + _2162;
    }
    else
    {
        _2298 = _1997;
        _2300 = _1998;
        _2302 = _1999;
        _2304 = _2160;
        _2306 = _2161;
        _2308 = _2162;
    }
    float _2422;
    float _2423;
    float _2424;
    if (_721 > 0.0)
    {
        uint _2358 = _1890 + 4u;
        float _2364 = (-0.0) - _495;
        float _2365 = (-0.0) - _496;
        float _2366 = (-0.0) - _497;
        float _2367 = dot(vec3(cbLight._m0[_1890].xyz), vec3(_2364, _2365, _2366));
        float _3985 = isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0));
        float _2371 = _827 + 1.0;
        float _2373 = (isnan(0.0) ? _2371 : (isnan(_2371) ? 0.0 : max(_2371, 0.0))) * 0.5;
        float _2378 = _2373 * _2373;
        float _2379 = _2378 * exp2(log2(isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0))) * 32.0);
        float _2381 = _721 / (_721 + 1.0);
        float _2382 = isnan(_1899) ? 1.0 : (isnan(1.0) ? _1899 : min(1.0, _1899));
        uint _2392 = _1890 + 5u;
        float _2398 = dot(vec3(cbLight._m0[_1923].xyz), vec3(_2364, _2365, _2366));
        float _4006 = isnan(0.0) ? _2398 : (isnan(_2398) ? 0.0 : max(_2398, 0.0));
        float _2405 = _2378 * exp2(log2(isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0))) * 32.0);
        float _2406 = isnan(_1900) ? 1.0 : (isnan(1.0) ? _1900 : min(1.0, _1900));
        _2422 = ((((_2405 * cbLight._m0[_2392].x) * _2381) * _2406) + (((_2379 * cbLight._m0[_2358].x) * _2381) * _2382)) * 0.3183098733425140380859375;
        _2423 = ((((_2405 * cbLight._m0[_2392].y) * _2381) * _2406) + (((_2379 * cbLight._m0[_2358].y) * _2381) * _2382)) * 0.3183098733425140380859375;
        _2424 = ((((_2405 * cbLight._m0[_2392].z) * _2381) * _2406) + (((_2379 * cbLight._m0[_2358].z) * _2381) * _2382)) * 0.3183098733425140380859375;
    }
    else
    {
        _2422 = 0.0;
        _2423 = 0.0;
        _2424 = 0.0;
    }
    float _4022 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
    float _4033 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
    float _4044 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _4055 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _2439 = (isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0))) * ((_2298 + ((isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0))) * _816)) + _2422);
    float _2440 = (isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0))) * ((_2300 + ((isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0))) * _816)) + _2423);
    float _2441 = (isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0))) * ((_2302 + ((isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0))) * _816)) + _2424);
    float _2445 = 0.959999978542327880859375 - (exp2(log2(1.0 - _831) * 5.0) * 0.959999978542327880859375);
    float _2456 = (_2439 + ((_2304 + ((isnan(0.0) ? _1872 : (isnan(_1872) ? 0.0 : max(_1872, 0.0))) * _1658)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _655.x) * _2445) - _2439) * _701);
    float _2458 = (_2440 + ((_2306 + ((isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0))) * _1658)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _655.y) * _2445) - _2440) * _701);
    float _2460 = (_2441 + ((_2308 + ((isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0))) * _1658)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _655.z) * _2445) - _2441) * _701);
    float _2465 = cbInstanceData._m0[_302 + 6u].w * (isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0)));
    float _2470 = _755 / cbSceneParam._m0[86u].x;
    float _2471 = _756 / cbSceneParam._m0[86u].y;
    vec4 _2485 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2470, _2471, (log2((isnan(cbSceneParam._m0[77u].w) ? _738 : (isnan(_738) ? cbSceneParam._m0[77u].w : min(_738, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2487 = _2485.x;
    float _2488 = _2485.y;
    float _2489 = _2485.z;
    float _2490 = _2485.w;
    float _2583;
    float _2585;
    float _2587;
    float _2589;
    if (_738 > cbSceneParam._m0[78u].w)
    {
        float _2546 = isnan(_738) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _738 : min(cbSceneParam._m0[80u].w, _738));
        float _2547 = _2546 / _738;
        float _2558 = _2547 * _294;
        float _2559 = _295 * _2547;
        float _2560 = (-0.0) - _2559;
        float _2561 = _2547 * _296;
        float _2563 = (cbSceneParam._m0[77u].w * _2560) / _2546;
        float _2564 = _2563 + cbSceneParam._m0[79u].w;
        float _2565 = cbSceneParam._m0[79u].w - _2559;
        float _2571 = sqrt(((_2558 * _2558) + (_2559 * _2559)) + (_2561 * _2561));
        float _2574 = (1.0 - (cbSceneParam._m0[77u].w / _2546)) * _2571;
        float _2579 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2581 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3004;
        if (abs((_2560 - _2563) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3004 = ((((_2564 > 0.0) ? exp2(_2579 * _2564) : (2.0 - exp2(_2581 * _2564))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2574;
        }
        else
        {
            float _2719 = 1.0 / cbSceneParam._m0[80u].x;
            float _2720 = isnan(_2565) ? _2564 : (isnan(_2564) ? _2565 : max(_2564, _2565));
            float _2721 = isnan(_2565) ? _2564 : (isnan(_2564) ? _2565 : min(_2564, _2565));
            float _2730 = isnan(0.0) ? _2720 : (isnan(_2720) ? 0.0 : min(_2720, 0.0));
            float _2731 = isnan(0.0) ? _2721 : (isnan(_2721) ? 0.0 : min(_2721, 0.0));
            _3004 = ((abs(_2571 / _2560) * cbSceneParam._m0[80u].y) * ((((_2730 - _2731) * 2.0) - ((exp2(_2579 * (isnan(0.0) ? _2720 : (isnan(_2720) ? 0.0 : max(_2720, 0.0)))) - exp2(_2579 * (isnan(0.0) ? _2721 : (isnan(_2721) ? 0.0 : max(_2721, 0.0))))) * _2719)) - ((exp2(_2581 * _2730) - exp2(_2581 * _2731)) * _2719))) + (_2574 * cbSceneParam._m0[80u].z);
        }
        vec4 _3006 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2470, _2471, 1.0), 0.0);
        float _3015 = exp2((_3004 * (-1.44269502162933349609375)) * (1.0 - _3006.w));
        float _3016 = log2(_3015);
        float _3032 = log2(_2490);
        _2583 = (exp2(_3032 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3016 * cbSceneParam._m0[78u].x)) * _3006.x) / cbSceneParam._m0[78u].x)) + _2487;
        _2585 = (exp2(_3032 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3016 * cbSceneParam._m0[78u].y)) * _3006.y) / cbSceneParam._m0[78u].y)) + _2488;
        _2587 = (exp2(_3032 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3016 * cbSceneParam._m0[78u].z)) * _3006.z) / cbSceneParam._m0[78u].z)) + _2489;
        _2589 = _3015 * _2490;
    }
    else
    {
        _2583 = _2487;
        _2585 = _2488;
        _2587 = _2489;
        _2589 = _2490;
    }
    bool _3042;
    float _2644;
    vec4 _2647;
    float _2649;
    vec4 _2651;
    float _2659;
    float _2660;
    float _2661;
    float _2662;
    bool _2672;
    for (;;)
    {
        bool _2601 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2602 = log2(_2589);
        float _2609 = exp2(_2602 * cbSceneParam._m0[78u].x) * _2456;
        float _2610 = exp2(_2602 * cbSceneParam._m0[78u].y) * _2458;
        float _2611 = exp2(_2602 * cbSceneParam._m0[78u].z) * _2460;
        vec4 _2619 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_755, _756));
        float _2621 = _2619.x;
        float _2642 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2621)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2621))) - _738) * cbMtdParam._m0[17u].y;
        float _4106 = isnan(0.0) ? _2642 : (isnan(_2642) ? 0.0 : max(_2642, 0.0));
        _2644 = _2465 * (isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0)));
        float _2645 = _745 + (-0.5);
        _2647 = cbMtdParam._m0[1u];
        _2649 = _2647.y * _2645;
        _2651 = cbMatDynParam._m0[0u];
        float _2658 = (roundEven(_2651.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2659 = _2658 * (_2601 ? _2609 : (_2609 + (cbSceneParam._m0[72u].w * _2583)));
        _2660 = _2658 * (_2601 ? _2610 : (_2610 + (cbSceneParam._m0[72u].w * _2585)));
        _2661 = _2658 * (_2601 ? _2611 : (_2611 + (cbSceneParam._m0[72u].w * _2587)));
        _2662 = _2645 * 0.999000012874603271484375;
        _2672 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2672)
        {
            if ((cbInstanceData._m0[_302 + 7u].x + _2662) < 0.5)
            {
                _3042 = true;
                break;
            }
        }
        uint _2754 = _793 + uint(_2651.w);
        if ((cbInstanceData._m0[_2754].w < 1.0) && ((cbInstanceData._m0[_2754].w + _2662) < 0.5))
        {
            _3042 = true;
            break;
        }
        if ((_2649 + _405) < _2647.x)
        {
            _3042 = true;
            break;
        }
        _3042 = false;
        break;
    }
    float _3047;
    if (_3042)
    {
        discard_state = true;
        _3047 = 0.0;
    }
    else
    {
        _3047 = _2644;
    }
    SV_Target.x = _2659;
    SV_Target.y = _2660;
    SV_Target.z = _2661;
    SV_Target.w = _3047;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2644;
    discard_exit();
}


