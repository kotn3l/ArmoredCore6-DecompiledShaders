#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1039;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _194 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _195 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _196 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _202 = inversesqrt(dot(vec3(_194, _195, _196), vec3(_194, _195, _196)));
    float _203 = _202 * _194;
    float _204 = _202 * _195;
    float _205 = _202 * _196;
    float _209 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _210 = _209 * NORMAL.x;
    float _211 = _209 * NORMAL.y;
    float _212 = _209 * NORMAL.z;
    float _216 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _217 = _216 * TANGENT.x;
    float _218 = _216 * TANGENT.y;
    float _219 = _216 * TANGENT.z;
    float _224;
    float _225;
    float _226;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _224 = (-0.0) - _210;
        _225 = (-0.0) - _211;
        _226 = (-0.0) - _212;
    }
    else
    {
        _224 = _210;
        _225 = _211;
        _226 = _212;
    }
    float _271 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _281 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _271);
    float _282 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _271);
    float _283 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _271);
    vec4 _297 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _306 = (_297.x * 2.0) + (-1.0);
    float _308 = (_297.y * 2.0) + (-1.0);
    float _309 = dot(vec2(_306, _308), vec2(_306, _308));
    float _2953 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _315 = sqrt(1.0 - (isnan(1.0) ? _2953 : (isnan(_2953) ? 1.0 : min(_2953, 1.0))));
    float _318 = fma(_315, _224, fma(_308, _217, _306 * _203));
    float _321 = fma(_315, _225, fma(_308, _218, _306 * _204));
    float _324 = fma(_315, _226, fma(_308, _219, _306 * _205));
    float _328 = inversesqrt(dot(vec3(_318, _321, _324), vec3(_318, _321, _324)));
    float _329 = _328 * _318;
    float _330 = _328 * _321;
    vec4 _342 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _347 = _342.w;
    float _359 = dot(vec3(_281, _282, _283), vec3(_203, _204, _205));
    float _362 = dot(vec3(_281, _282, _283), vec3(_217, _218, _219));
    float _365 = dot(vec3(_281, _282, _283), vec3(_224, _225, _226));
    float _371 = inversesqrt(dot(vec3(_359, _362, _365), vec3(_359, _362, _365)));
    float _393 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _413 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_359 * cbMtdParam._m0[14u].x) * _371) * _393) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_362 * cbMtdParam._m0[14u].x) * _371) * _393) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _437 = inversesqrt(dot(vec3(_281, _282, _283), vec3(_281, _282, _283)));
    float _438 = _437 * _281;
    float _439 = _437 * _282;
    float _440 = _437 * _283;
    float _441 = dot(vec4(_438, _439, _440, 0.0), vec4(_224, _225, _226, 0.0));
    float _444 = _441 - cbMtdParam._m0[15u].z;
    float _2964 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _451 = exp2(log2(1.0 - (isnan(1.0) ? _2964 : (isnan(_2964) ? 1.0 : min(_2964, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _466 = ((((_342.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _413.x) * cbMtdParam._m0[9u].x) * ((_451 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _471 = ((((_342.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _413.y) * cbMtdParam._m0[9u].y) * ((_451 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _476 = ((((_342.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _413.z) * cbMtdParam._m0[9u].z) * ((_451 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _485 = (cbMtdParam._m0[16u].y + _297.z) + cbMtdParam._m0[17u].z;
    vec4 _497 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _501 = cbMtdParam._m0[16u].w * _497.x;
    float _513 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _514 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _524 = cbSceneParam._m0[86u].x * ((_513 / cbSceneParam._m0[86u].x) + (_329 * cbMtdParam._m0[18u].y));
    float _525 = cbSceneParam._m0[86u].y * ((_514 / cbSceneParam._m0[86u].y) + (_330 * cbMtdParam._m0[18u].y));
    float _532 = isnan(cbInstanceData._m0[8u].x) ? _524 : (isnan(_524) ? cbInstanceData._m0[8u].x : max(_524, cbInstanceData._m0[8u].x));
    float _533 = isnan(cbInstanceData._m0[8u].y) ? _525 : (isnan(_525) ? cbInstanceData._m0[8u].y : max(_525, cbInstanceData._m0[8u].y));
    vec4 _537 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _532 : (isnan(_532) ? cbInstanceData._m0[8u].z : min(_532, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _533 : (isnan(_533) ? cbInstanceData._m0[8u].w : min(_533, cbInstanceData._m0[8u].w))));
    float _570 = _441 - cbMtdParam._m0[15u].x;
    float _3000 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _580 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3000 : (isnan(_3000) ? 1.0 : min(_3000, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3016 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _581 = isnan(1.0) ? _3016 : (isnan(_3016) ? 1.0 : min(_3016, 1.0));
    float _583 = _328 * _324;
    float _3027 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
    float _584 = isnan(1.0) ? _3027 : (isnan(_3027) ? 1.0 : min(_3027, 1.0));
    float _3038 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _585 = isnan(1.0) ? _3038 : (isnan(_3038) ? 1.0 : min(_3038, 1.0));
    float _586 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    float _3054 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _3065 = isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : max(_471, 0.0));
    float _3076 = isnan(0.0) ? _476 : (isnan(_476) ? 0.0 : max(_476, 0.0));
    float _605 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _624 = fma(_583, cbSceneParam._m0[5u].z, fma(_330, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _329));
    float _627 = fma(_583, cbSceneParam._m0[6u].z, fma(_330, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _329));
    float _630 = fma(_583, cbSceneParam._m0[7u].z, fma(_330, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _329));
    uint _643 = uint(roundEven(NORMAL.w)) * 13u;
    uint _645 = (_643 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _651 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3054 : (isnan(_3054) ? 1.0 : min(_3054, 1.0)))) * cbInstanceData._m0[_645].x;
    float _652 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3065 : (isnan(_3065) ? 1.0 : min(_3065, 1.0)))) * cbInstanceData._m0[_645].y;
    float _653 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3076 : (isnan(_3076) ? 1.0 : min(_3076, 1.0)))) * cbInstanceData._m0[_645].z;
    float _3087 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
    float _654 = isnan(1.0) ? _3087 : (isnan(_3087) ? 1.0 : min(_3087, 1.0));
    float _3098 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
    float _655 = isnan(1.0) ? _3098 : (isnan(_3098) ? 1.0 : min(_3098, 1.0));
    float _3109 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
    float _656 = isnan(1.0) ? _3109 : (isnan(_3109) ? 1.0 : min(_3109, 1.0));
    vec4 _660 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _513, cbSceneParam._m0[86u].y * _514));
    float _663 = _660.x * TEXCOORD_5.w;
    float _664 = dot(vec3(_329, _330, _583), vec3(_438, _439, _440));
    float _667 = _664 * 2.0;
    float _671 = (_667 * _329) - _438;
    float _672 = (_667 * _330) - _439;
    float _673 = (_667 * _583) - _440;
    float _674 = dot(vec3(_438, _439, _440), vec3(_329, _330, _583));
    float _677 = abs(_674);
    float _3120 = isnan(0.0) ? _677 : (isnan(_677) ? 0.0 : max(_677, 0.0));
    float _678 = isnan(1.0) ? _3120 : (isnan(_3120) ? 1.0 : min(_3120, 1.0));
    float _684 = sqrt(_585);
    float _696 = exp2((_684 * 5.0) * log2(1.0 - (_678 * 0.999000012874603271484375))) / (4.0 - (_684 * 3.0));
    float _728 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _732 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _736 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1038;
    float _1040;
    float _1041;
    float _1042;
    float _1043;
    float _1044;
    float _1045;
    float _1046;
    float _1047;
    float _1048;
    float _1049;
    float _1050;
    float _1051;
    float _1052;
    float _1053;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _763 = fma(_736, cbModelParam._m0[26u].z, fma(_732, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _728));
        float _767 = fma(_736, cbModelParam._m0[27u].z, fma(_732, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _728));
        float _771 = fma(_736, cbModelParam._m0[28u].z, fma(_732, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _728));
        float _796 = _728 + _329;
        float _797 = _732 + _330;
        float _798 = _736 + _583;
        float _808 = fma(_798, cbModelParam._m0[26u].z, fma(_797, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _796)) - _763;
        float _809 = fma(_798, cbModelParam._m0[27u].z, fma(_797, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _796)) - _767;
        float _810 = fma(_798, cbModelParam._m0[28u].z, fma(_797, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _796)) - _771;
        float _814 = inversesqrt(dot(vec3(_808, _809, _810), vec3(_808, _809, _810)));
        float _827 = ((_814 * _808) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_763 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _828 = ((_814 * _809) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_767 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _829 = ((_814 * _810) / cbModelParam._m0[34u].z) + ((((((_771 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _832 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_827, _828, _829), 0.0);
        vec4 _839 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_827, _828, _829), 0.0);
        vec4 _846 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_827, _828, _829), 0.0);
        vec4 _853 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_827, _828, _829), 0.0);
        float _866 = exp2((_832.w + (-0.5)) * 20.0) * 2.0;
        float _867 = _866 * (_832.x + (-0.5));
        float _868 = _866 * (_832.y + (-0.5));
        float _869 = _866 * (_832.z + (-0.5));
        float _876 = exp2((_839.w + (-0.5)) * 20.0) * 2.0;
        float _877 = _876 * (_839.x + (-0.5));
        float _878 = _876 * (_839.y + (-0.5));
        float _879 = _876 * (_839.z + (-0.5));
        float _886 = exp2((_846.w + (-0.5)) * 20.0) * 2.0;
        float _887 = _886 * (_846.x + (-0.5));
        float _888 = _886 * (_846.y + (-0.5));
        float _889 = _886 * (_846.z + (-0.5));
        float _896 = exp2((_853.w + (-0.5)) * 20.0) * 2.0;
        float _897 = _896 * (_853.x + (-0.5));
        float _898 = _896 * (_853.y + (-0.5));
        float _899 = _896 * (_853.z + (-0.5));
        float _900 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
        float _901 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
        float _902 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
        float _903 = _867 * 0.5;
        float _904 = _877 * 0.5;
        float _905 = _887 * 0.5;
        float _906 = dot(vec3(_903, _904, _905), vec3(_903, _904, _905));
        float _911 = (_906 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_906);
        float _920 = (dot(vec3(_329, _330, _583), vec3(_911 * _903, _911 * _904, _911 * _905)) + 1.0) * 0.5;
        float _3146 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
        float _930 = sqrt(((_904 * _904) + (_903 * _903)) + (_905 * _905)) / (_900 + 9.9999997473787516355514526367188e-06);
        float _3157 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
        float _931 = isnan(1.0) ? _3157 : (isnan(_3157) ? 1.0 : min(_3157, 1.0));
        float _932 = _931 * 2.0;
        float _936 = (1.0 - _931) / (_931 + 1.0);
        float _3168 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
        float _937 = isnan(1.0) ? _3168 : (isnan(_3168) ? 1.0 : min(_3168, 1.0));
        float _946 = ((((1.0 - _937) * (_932 + 2.0)) * exp2(log2(isnan(1.0) ? _3146 : (isnan(_3146) ? 1.0 : min(_3146, 1.0))) * (_932 + 1.0))) + _937) * _900;
        float _947 = _868 * 0.5;
        float _948 = _878 * 0.5;
        float _949 = _888 * 0.5;
        float _950 = dot(vec3(_947, _948, _949), vec3(_947, _948, _949));
        float _955 = (_950 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_950);
        float _963 = (dot(vec3(_329, _330, _583), vec3(_955 * _947, _955 * _948, _955 * _949)) + 1.0) * 0.5;
        float _3179 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
        float _972 = sqrt(((_948 * _948) + (_947 * _947)) + (_949 * _949)) / (_901 + 9.9999997473787516355514526367188e-06);
        float _3190 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
        float _973 = isnan(1.0) ? _3190 : (isnan(_3190) ? 1.0 : min(_3190, 1.0));
        float _974 = _973 * 2.0;
        float _978 = (1.0 - _973) / (_973 + 1.0);
        float _3201 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
        float _979 = isnan(1.0) ? _3201 : (isnan(_3201) ? 1.0 : min(_3201, 1.0));
        float _988 = ((((1.0 - _979) * (_974 + 2.0)) * exp2(log2(isnan(1.0) ? _3179 : (isnan(_3179) ? 1.0 : min(_3179, 1.0))) * (_974 + 1.0))) + _979) * _901;
        float _989 = _869 * 0.5;
        float _990 = _879 * 0.5;
        float _991 = _889 * 0.5;
        float _992 = dot(vec3(_989, _990, _991), vec3(_989, _990, _991));
        float _997 = (_992 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_992);
        float _1005 = (dot(vec3(_329, _330, _583), vec3(_997 * _989, _997 * _990, _997 * _991)) + 1.0) * 0.5;
        float _3212 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
        float _1014 = sqrt(((_990 * _990) + (_989 * _989)) + (_991 * _991)) / (_902 + 9.9999997473787516355514526367188e-06);
        float _3223 = isnan(0.0) ? _1014 : (isnan(_1014) ? 0.0 : max(_1014, 0.0));
        float _1015 = isnan(1.0) ? _3223 : (isnan(_3223) ? 1.0 : min(_3223, 1.0));
        float _1016 = _1015 * 2.0;
        float _1020 = (1.0 - _1015) / (_1015 + 1.0);
        float _3234 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
        float _1021 = isnan(1.0) ? _3234 : (isnan(_3234) ? 1.0 : min(_3234, 1.0));
        float _1030 = ((((1.0 - _1021) * (_1016 + 2.0)) * exp2(log2(isnan(1.0) ? _3212 : (isnan(_3212) ? 1.0 : min(_3212, 1.0))) * (_1016 + 1.0))) + _1021) * _902;
        _1038 = _869;
        _1040 = _868;
        _1041 = _867;
        _1042 = _879;
        _1043 = _878;
        _1044 = _877;
        _1045 = _889;
        _1046 = _888;
        _1047 = _887;
        _1048 = _902;
        _1049 = _901;
        _1050 = _900;
        _1051 = cbModelParam._m0[36u].z * (isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0)));
        _1052 = cbModelParam._m0[36u].z * (isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0)));
        _1053 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0)));
    }
    else
    {
        _1038 = _1039;
        _1040 = _1039;
        _1041 = _1039;
        _1042 = _1039;
        _1043 = _1039;
        _1044 = _1039;
        _1045 = _1039;
        _1046 = _1039;
        _1047 = _1039;
        _1048 = _1039;
        _1049 = _1039;
        _1050 = _1039;
        _1051 = 0.0;
        _1052 = 0.0;
        _1053 = 0.0;
    }
    float _1348;
    float _1349;
    float _1350;
    float _1351;
    float _1352;
    float _1353;
    float _1354;
    float _1355;
    float _1356;
    float _1357;
    float _1358;
    float _1359;
    float _1360;
    float _1361;
    float _1362;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1079 = fma(_736, cbModelParam._m0[30u].z, fma(_732, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _728));
        float _1083 = fma(_736, cbModelParam._m0[31u].z, fma(_732, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _728));
        float _1087 = fma(_736, cbModelParam._m0[32u].z, fma(_732, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _728));
        float _1110 = _728 + _329;
        float _1111 = _732 + _330;
        float _1112 = _736 + _583;
        float _1122 = fma(_1112, cbModelParam._m0[30u].z, fma(_1111, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1110)) - _1079;
        float _1123 = fma(_1112, cbModelParam._m0[31u].z, fma(_1111, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1110)) - _1083;
        float _1124 = fma(_1112, cbModelParam._m0[32u].z, fma(_1111, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1110)) - _1087;
        float _1128 = inversesqrt(dot(vec3(_1122, _1123, _1124), vec3(_1122, _1123, _1124)));
        float _1141 = ((_1128 * _1122) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1079 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1142 = ((_1128 * _1123) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1083 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1143 = ((_1128 * _1124) / cbModelParam._m0[35u].z) + ((((((_1087 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1145 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1141, _1142, _1143), 0.0);
        vec4 _1152 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1141, _1142, _1143), 0.0);
        vec4 _1159 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1141, _1142, _1143), 0.0);
        vec4 _1166 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1141, _1142, _1143), 0.0);
        float _1178 = exp2((_1145.w + (-0.5)) * 20.0) * 2.0;
        float _1179 = _1178 * (_1145.x + (-0.5));
        float _1180 = _1178 * (_1145.y + (-0.5));
        float _1181 = _1178 * (_1145.z + (-0.5));
        float _1188 = exp2((_1152.w + (-0.5)) * 20.0) * 2.0;
        float _1189 = _1188 * (_1152.x + (-0.5));
        float _1190 = _1188 * (_1152.y + (-0.5));
        float _1191 = _1188 * (_1152.z + (-0.5));
        float _1198 = exp2((_1159.w + (-0.5)) * 20.0) * 2.0;
        float _1199 = _1198 * (_1159.x + (-0.5));
        float _1200 = _1198 * (_1159.y + (-0.5));
        float _1201 = _1198 * (_1159.z + (-0.5));
        float _1208 = exp2((_1166.w + (-0.5)) * 20.0) * 2.0;
        float _1209 = _1208 * (_1166.x + (-0.5));
        float _1210 = _1208 * (_1166.y + (-0.5));
        float _1211 = _1208 * (_1166.z + (-0.5));
        float _1212 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
        float _1213 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
        float _1214 = isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0));
        float _1215 = _1179 * 0.5;
        float _1216 = _1189 * 0.5;
        float _1217 = _1199 * 0.5;
        float _1218 = dot(vec3(_1215, _1216, _1217), vec3(_1215, _1216, _1217));
        float _1223 = (_1218 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1218);
        float _1231 = (dot(vec3(_329, _330, _583), vec3(_1223 * _1215, _1223 * _1216, _1223 * _1217)) + 1.0) * 0.5;
        float _3275 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
        float _1240 = sqrt(((_1216 * _1216) + (_1215 * _1215)) + (_1217 * _1217)) / (_1212 + 9.9999997473787516355514526367188e-06);
        float _3286 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
        float _1241 = isnan(1.0) ? _3286 : (isnan(_3286) ? 1.0 : min(_3286, 1.0));
        float _1242 = _1241 * 2.0;
        float _1246 = (1.0 - _1241) / (_1241 + 1.0);
        float _3297 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
        float _1247 = isnan(1.0) ? _3297 : (isnan(_3297) ? 1.0 : min(_3297, 1.0));
        float _1256 = ((((1.0 - _1247) * (_1242 + 2.0)) * exp2(log2(isnan(1.0) ? _3275 : (isnan(_3275) ? 1.0 : min(_3275, 1.0))) * (_1242 + 1.0))) + _1247) * _1212;
        float _1257 = _1180 * 0.5;
        float _1258 = _1190 * 0.5;
        float _1259 = _1200 * 0.5;
        float _1260 = dot(vec3(_1257, _1258, _1259), vec3(_1257, _1258, _1259));
        float _1265 = (_1260 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1260);
        float _1273 = (dot(vec3(_329, _330, _583), vec3(_1265 * _1257, _1265 * _1258, _1265 * _1259)) + 1.0) * 0.5;
        float _3308 = isnan(0.0) ? _1273 : (isnan(_1273) ? 0.0 : max(_1273, 0.0));
        float _1282 = sqrt(((_1258 * _1258) + (_1257 * _1257)) + (_1259 * _1259)) / (_1213 + 9.9999997473787516355514526367188e-06);
        float _3319 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
        float _1283 = isnan(1.0) ? _3319 : (isnan(_3319) ? 1.0 : min(_3319, 1.0));
        float _1284 = _1283 * 2.0;
        float _1288 = (1.0 - _1283) / (_1283 + 1.0);
        float _3330 = isnan(0.0) ? _1288 : (isnan(_1288) ? 0.0 : max(_1288, 0.0));
        float _1289 = isnan(1.0) ? _3330 : (isnan(_3330) ? 1.0 : min(_3330, 1.0));
        float _1298 = ((((1.0 - _1289) * (_1284 + 2.0)) * exp2(log2(isnan(1.0) ? _3308 : (isnan(_3308) ? 1.0 : min(_3308, 1.0))) * (_1284 + 1.0))) + _1289) * _1213;
        float _1299 = _1181 * 0.5;
        float _1300 = _1191 * 0.5;
        float _1301 = _1201 * 0.5;
        float _1302 = dot(vec3(_1299, _1300, _1301), vec3(_1299, _1300, _1301));
        float _1307 = (_1302 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1302);
        float _1315 = (dot(vec3(_329, _330, _583), vec3(_1307 * _1299, _1307 * _1300, _1307 * _1301)) + 1.0) * 0.5;
        float _3341 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1324 = sqrt(((_1300 * _1300) + (_1299 * _1299)) + (_1301 * _1301)) / (_1214 + 9.9999997473787516355514526367188e-06);
        float _3352 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1325 = isnan(1.0) ? _3352 : (isnan(_3352) ? 1.0 : min(_3352, 1.0));
        float _1326 = _1325 * 2.0;
        float _1330 = (1.0 - _1325) / (_1325 + 1.0);
        float _3363 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
        float _1331 = isnan(1.0) ? _3363 : (isnan(_3363) ? 1.0 : min(_3363, 1.0));
        float _1340 = ((((1.0 - _1331) * (_1326 + 2.0)) * exp2(log2(isnan(1.0) ? _3341 : (isnan(_3341) ? 1.0 : min(_3341, 1.0))) * (_1326 + 1.0))) + _1331) * _1214;
        _1348 = _1181;
        _1349 = _1180;
        _1350 = _1179;
        _1351 = _1191;
        _1352 = _1190;
        _1353 = _1189;
        _1354 = _1201;
        _1355 = _1200;
        _1356 = _1199;
        _1357 = _1214;
        _1358 = _1213;
        _1359 = _1212;
        _1360 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0)));
        _1361 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1298 : (isnan(_1298) ? 0.0 : max(_1298, 0.0)));
        _1362 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0)));
    }
    else
    {
        _1348 = _1039;
        _1349 = _1039;
        _1350 = _1039;
        _1351 = _1039;
        _1352 = _1039;
        _1353 = _1039;
        _1354 = _1039;
        _1355 = _1039;
        _1356 = _1039;
        _1357 = _1039;
        _1358 = _1039;
        _1359 = _1039;
        _1360 = 0.0;
        _1361 = 0.0;
        _1362 = 0.0;
    }
    float _1372 = (cbModelParam._m0[1u].x * (_1360 - _1051)) + _1051;
    float _1373 = (cbModelParam._m0[1u].x * (_1361 - _1052)) + _1052;
    float _1374 = (cbModelParam._m0[1u].x * (_1362 - _1053)) + _1053;
    float _1395 = fma(_1374, cbSceneParam._m0[89u].z, fma(_1373, cbSceneParam._m0[89u].y, _1372 * cbSceneParam._m0[89u].x));
    float _1398 = fma(_1374, cbSceneParam._m0[90u].z, fma(_1373, cbSceneParam._m0[90u].y, _1372 * cbSceneParam._m0[90u].x));
    float _1401 = fma(_1374, cbSceneParam._m0[91u].z, fma(_1373, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1372));
    float _1416 = _671 * 0.5;
    float _1417 = _672 * 0.5;
    float _1418 = _673 * 0.5;
    float _1419 = dot(vec4(_1416, _1417, _1418, 1.0), vec4(_1350, _1353, _1356, _1359));
    float _1422 = dot(vec4(_1416, _1417, _1418, 1.0), vec4(_1349, _1352, _1355, _1358));
    float _1425 = dot(vec4(_1416, _1417, _1418, 1.0), vec4(_1348, _1351, _1354, _1357));
    float _1459;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1432 = dot(vec4(_1416, _1417, _1418, 1.0), vec4(_1038, _1042, _1045, _1048));
        float _1436 = dot(vec4(_1416, _1417, _1418, 1.0), vec4(_1040, _1043, _1046, _1049));
        float _1440 = dot(vec4(_1416, _1417, _1418, 1.0), vec4(_1041, _1044, _1047, _1050));
        float _1447 = dot(vec4(cbModelParam._m0[39u]), vec4(_1416, _1417, _1418, 1.0));
        _1459 = dot(vec3(isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0)), isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0)), isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1447) ? 0.0 : (isnan(0.0) ? _1447 : max(0.0, _1447))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1459 = 1.0;
    }
    float _1470;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1461 = dot(vec4(cbModelParam._m0[40u]), vec4(_1416, _1417, _1418, 1.0));
        _1470 = dot(vec3(isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0)), isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0)), isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1461) ? 0.0 : (isnan(0.0) ? _1461 : max(0.0, _1461))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1470 = 1.0;
    }
    float _1474 = (_1470 * cbModelParam._m0[1u].x) + (_1459 * (1.0 - cbModelParam._m0[1u].x));
    float _1484 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _585);
    float _1485 = isnan(_1484) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1484 : min(cbModelParam._m0[25u].z, _1484));
    float _1565;
    float _1567;
    float _1569;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1532 = fma(_736, cbModelParam._m0[13u].z, fma(_732, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _728)) + cbModelParam._m0[13u].w;
        float _1536 = fma(_736, cbModelParam._m0[14u].z, fma(_732, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _728)) + cbModelParam._m0[14u].w;
        float _1540 = fma(_736, cbModelParam._m0[15u].z, fma(_732, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _728)) + cbModelParam._m0[15u].w;
        float _1543 = fma(_673, cbModelParam._m0[13u].z, fma(_672, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _671));
        float _1546 = fma(_673, cbModelParam._m0[14u].z, fma(_672, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _671));
        float _1549 = fma(_673, cbModelParam._m0[15u].z, fma(_672, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _671));
        float _1577;
        if (_1543 > 0.0)
        {
            _1577 = abs((1.0 - _1532) / _1543);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1543 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1532 + 1.0) / _1543);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1577 = frontier_phi_16_14_ladder;
        }
        float _1770;
        if (_1546 > 0.0)
        {
            _1770 = abs((1.0 - _1536) / _1546);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1546 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1536 + 1.0) / _1546);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1770 = frontier_phi_25_21_ladder;
        }
        float _2008;
        if (_1549 > 0.0)
        {
            _2008 = abs((1.0 - _1540) / _1549);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1549 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1540 + 1.0) / _1549);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2008 = frontier_phi_36_32_ladder;
        }
        float _2010 = isnan(_1770) ? _1577 : (isnan(_1577) ? _1770 : min(_1577, _1770));
        float _2011 = isnan(_2008) ? _2010 : (isnan(_2010) ? _2008 : min(_2010, _2008));
        float _2015 = (_2011 * _1543) + _1532;
        float _2016 = (_2011 * _1546) + _1536;
        float _2017 = (_2011 * _1549) + _1540;
        float _2018 = _2011 * 9.9999997473787516355514526367188e-05;
        float _2020 = (-1.0) - _2018;
        float _2022 = _2018 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2017 > _2022) || ((_2017 < _2020) || ((_2016 > _2022) || ((_2016 < _2020) || ((_2015 < _2020) || (_2015 > _2022))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2167 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2017, cbModelParam._m0[9u].z, fma(_2016, cbModelParam._m0[9u].y, _2015 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2017, cbModelParam._m0[10u].z, fma(_2016, cbModelParam._m0[10u].y, _2015 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2017, cbModelParam._m0[11u].z, fma(_2016, cbModelParam._m0[11u].y, _2015 * cbModelParam._m0[11u].x))), _1485);
            frontier_phi_15_36_ladder = _2167.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2167.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2167.y * cbModelParam._m0[1u].y;
        }
        _1565 = frontier_phi_15_36_ladder_1;
        _1567 = frontier_phi_15_36_ladder_2;
        _1569 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1553 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_671, _672, _673), _1485);
        _1565 = _1553.x * cbModelParam._m0[1u].y;
        _1567 = _1553.y * cbModelParam._m0[1u].y;
        _1569 = _1553.z * cbModelParam._m0[1u].y;
    }
    float _1573 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _585);
    float _1574 = isnan(_1573) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1573 : min(cbModelParam._m0[25u].w, _1573));
    float _1666;
    float _1668;
    float _1670;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1630 = fma(_736, cbModelParam._m0[21u].z, fma(_732, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _728)) + cbModelParam._m0[21u].w;
        float _1634 = fma(_736, cbModelParam._m0[22u].z, fma(_732, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _728)) + cbModelParam._m0[22u].w;
        float _1638 = fma(_736, cbModelParam._m0[23u].z, fma(_732, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _728)) + cbModelParam._m0[23u].w;
        float _1641 = fma(_673, cbModelParam._m0[21u].z, fma(_672, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _671));
        float _1644 = fma(_673, cbModelParam._m0[22u].z, fma(_672, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _671));
        float _1647 = fma(_673, cbModelParam._m0[23u].z, fma(_672, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _671));
        float _1775;
        if (_1641 > 0.0)
        {
            _1775 = abs((1.0 - _1630) / _1641);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1641 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1630 + 1.0) / _1641);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1775 = frontier_phi_27_23_ladder;
        }
        float _2035;
        if (_1644 > 0.0)
        {
            _2035 = abs((1.0 - _1634) / _1644);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1644 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1634 + 1.0) / _1644);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2035 = frontier_phi_38_34_ladder;
        }
        float _2342;
        if (_1647 > 0.0)
        {
            _2342 = abs((1.0 - _1638) / _1647);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1647 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1638 + 1.0) / _1647);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2342 = frontier_phi_49_44_ladder;
        }
        float _2344 = isnan(_2035) ? _1775 : (isnan(_1775) ? _2035 : min(_1775, _2035));
        float _2345 = isnan(_2342) ? _2344 : (isnan(_2344) ? _2342 : min(_2344, _2342));
        float _2349 = (_2345 * _1641) + _1630;
        float _2350 = (_2345 * _1644) + _1634;
        float _2351 = (_2345 * _1647) + _1638;
        float _2352 = _2345 * 9.9999997473787516355514526367188e-05;
        float _2353 = (-1.0) - _2352;
        float _2355 = _2352 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2351 > _2355) || ((_2351 < _2353) || ((_2350 > _2355) || ((_2350 < _2353) || ((_2349 < _2353) || (_2349 > _2355))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2524 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2351, cbModelParam._m0[17u].z, fma(_2350, cbModelParam._m0[17u].y, _2349 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2351, cbModelParam._m0[18u].z, fma(_2350, cbModelParam._m0[18u].y, _2349 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2351, cbModelParam._m0[19u].z, fma(_2350, cbModelParam._m0[19u].y, _2349 * cbModelParam._m0[19u].x))), _1574);
            frontier_phi_24_49_ladder = _2524.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2524.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2524.x * cbModelParam._m0[1u].z;
        }
        _1666 = frontier_phi_24_49_ladder_2;
        _1668 = frontier_phi_24_49_ladder;
        _1670 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1650 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_671, _672, _673), _1574);
        _1666 = _1650.x * cbModelParam._m0[1u].z;
        _1668 = _1650.y * cbModelParam._m0[1u].z;
        _1670 = _1650.z * cbModelParam._m0[1u].z;
    }
    float _1682 = ((((1.0 - _696) * ((_684 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_696 * _684)) * _663;
    float _1683 = _1682 * ((cbModelParam._m0[1u].w * (_1666 - _1565)) + _1565);
    float _1684 = _1682 * ((cbModelParam._m0[1u].w * (_1668 - _1567)) + _1567);
    float _1685 = _1682 * ((cbModelParam._m0[1u].w * (_1670 - _1569)) + _1569);
    float _1688 = fma(_1685, cbSceneParam._m0[89u].z, fma(_1684, cbSceneParam._m0[89u].y, _1683 * cbSceneParam._m0[89u].x));
    float _1691 = fma(_1685, cbSceneParam._m0[90u].z, fma(_1684, cbSceneParam._m0[90u].y, _1683 * cbSceneParam._m0[90u].x));
    float _1694 = fma(_1685, cbSceneParam._m0[91u].z, fma(_1684, cbSceneParam._m0[91u].y, _1683 * cbSceneParam._m0[91u].x));
    vec4 _1702 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_513, _514));
    float _1704 = _1702.w;
    float _1716 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1704);
    float _1717 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1704);
    float _1718 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1704);
    uvec4 _1722 = floatBitsToUint(cbInstanceData._m0[_643 + 5u]);
    uint _1724 = _1722.x * 14u;
    uint _1725 = _1724 + 13u;
    float _1730 = _663 + (-1.0);
    float _1733 = (cbLight._m0[_1725].x * _1730) + 1.0;
    float _1734 = (cbLight._m0[_1725].y * _1730) + 1.0;
    uint _1736 = _1724 + 4u;
    float _1747 = dot(vec3(cbLight._m0[_1724].xyz), vec3(_329, _330, _583));
    float _1750 = isnan(1.0) ? _1733 : (isnan(_1733) ? 1.0 : min(_1733, 1.0));
    float _1751 = cbLight._m0[_1736].x * _1716;
    float _1752 = cbLight._m0[_1736].y * _1717;
    float _1753 = cbLight._m0[_1736].z * _1718;
    uint _1754 = _1724 + 5u;
    uint _1760 = _1724 | 1u;
    float _1766 = dot(vec3(cbLight._m0[_1760].xyz), vec3(_329, _330, _583));
    float _1769 = isnan(1.0) ? _1734 : (isnan(_1734) ? 1.0 : min(_1734, 1.0));
    float _1834;
    float _1835;
    float _1836;
    if (_586 == 0.0)
    {
        float _3499 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _3510 = isnan(0.0) ? _1766 : (isnan(_1766) ? 0.0 : max(_1766, 0.0));
        float _1788 = (isnan(1.0) ? _3499 : (isnan(_3499) ? 1.0 : min(_3499, 1.0))) * 0.3183098733425140380859375;
        float _1790 = (isnan(1.0) ? _3510 : (isnan(_3510) ? 1.0 : min(_3510, 1.0))) * 0.3183098733425140380859375;
        _1834 = ((cbLight._m0[_1754].x * _1769) * _1790) + ((_1751 * _1750) * _1788);
        _1835 = ((_1769 * cbLight._m0[_1754].y) * _1790) + ((_1752 * _1750) * _1788);
        _1836 = ((_1769 * cbLight._m0[_1754].z) * _1790) + ((_1753 * _1750) * _1788);
    }
    else
    {
        float _1800 = _1747 + _586;
        float _1803 = (_586 * 2.0) + 1.0;
        float _1804 = (isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0))) / _1803;
        float _1811 = _1766 + _586;
        float _1813 = (isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0))) / _1803;
        _1834 = (((_1813 * cbLight._m0[_1754].x) * _1769) + ((_1751 * _1804) * _1750)) * 0.3183098733425140380859375;
        _1835 = (((_1813 * cbLight._m0[_1754].y) * _1769) + ((_1752 * _1804) * _1750)) * 0.3183098733425140380859375;
        _1836 = (((_1813 * cbLight._m0[_1754].z) * _1769) + ((_1753 * _1804) * _1750)) * 0.3183098733425140380859375;
    }
    uint _1840 = _1724 + 8u;
    float _1856 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1724].w)) * _585) * 0.949999988079071044921875);
    float _1857 = _1856 * _1856;
    float _1858 = cbLight._m0[_1724].x + _438;
    float _1859 = cbLight._m0[_1724].y + _439;
    float _1860 = cbLight._m0[_1724].z + _440;
    float _1864 = inversesqrt(dot(vec3(_1858, _1859, _1860), vec3(_1858, _1859, _1860)));
    float _1865 = _1864 * _1858;
    float _1866 = _1864 * _1859;
    float _1867 = _1864 * _1860;
    float _1868 = dot(vec3(_329, _330, _583), vec3(cbLight._m0[_1724].xyz));
    float _3531 = isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0));
    float _1871 = isnan(1.0) ? _3531 : (isnan(_3531) ? 1.0 : min(_3531, 1.0));
    float _3542 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _1872 = isnan(1.0) ? _3542 : (isnan(_3542) ? 1.0 : min(_3542, 1.0));
    float _1873 = dot(vec3(_329, _330, _583), vec3(_1865, _1866, _1867));
    float _3553 = isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0));
    float _1876 = isnan(1.0) ? _3553 : (isnan(_3553) ? 1.0 : min(_3553, 1.0));
    float _1877 = dot(vec3(cbLight._m0[_1724].xyz), vec3(_1865, _1866, _1867));
    float _3564 = isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0));
    float _1881 = _1857 * _1857;
    float _1885 = ((_1876 * _1876) * (_1881 + (-1.0))) + 1.0;
    float _1896 = (exp2(log2(1.0 - (isnan(1.0) ? _3564 : (isnan(_3564) ? 1.0 : min(_3564, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1897 = 1.0 - _1857;
    float _1908 = (0.5 / (((_1872 * ((_1871 * _1897) + _1857)) + 9.9999999392252902907785028219223e-09) + (((_1872 * _1897) + _1857) * _1871))) * _1871;
    float _3575 = isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0));
    float _1910 = (isnan(1.0) ? _3575 : (isnan(_3575) ? 1.0 : min(_3575, 1.0))) * (_1881 / ((_1885 * _1885) * 3.141590118408203125));
    uint _1926 = _1724 + 9u;
    float _1940 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1760].w)) * _585) * 0.949999988079071044921875);
    float _1941 = _1940 * _1940;
    float _1942 = cbLight._m0[_1760].x + _438;
    float _1943 = cbLight._m0[_1760].y + _439;
    float _1944 = cbLight._m0[_1760].z + _440;
    float _1948 = inversesqrt(dot(vec3(_1942, _1943, _1944), vec3(_1942, _1943, _1944)));
    float _1949 = _1948 * _1942;
    float _1950 = _1948 * _1943;
    float _1951 = _1948 * _1944;
    float _1952 = dot(vec3(_329, _330, _583), vec3(cbLight._m0[_1760].xyz));
    float _3586 = isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0));
    float _1955 = isnan(1.0) ? _3586 : (isnan(_3586) ? 1.0 : min(_3586, 1.0));
    float _1956 = dot(vec3(_329, _330, _583), vec3(_1949, _1950, _1951));
    float _3597 = isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0));
    float _1959 = isnan(1.0) ? _3597 : (isnan(_3597) ? 1.0 : min(_3597, 1.0));
    float _1960 = dot(vec3(cbLight._m0[_1760].xyz), vec3(_1949, _1950, _1951));
    float _3608 = isnan(0.0) ? _1960 : (isnan(_1960) ? 0.0 : max(_1960, 0.0));
    float _1964 = _1941 * _1941;
    float _1968 = ((_1959 * _1959) * (_1964 + (-1.0))) + 1.0;
    float _1977 = (exp2(log2(1.0 - (isnan(1.0) ? _3608 : (isnan(_3608) ? 1.0 : min(_3608, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1978 = 1.0 - _1941;
    float _1988 = (0.5 / (((_1872 * ((_1955 * _1978) + _1941)) + 9.9999999392252902907785028219223e-09) + (((_1872 * _1978) + _1941) * _1955))) * _1955;
    float _3619 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
    float _1990 = (isnan(1.0) ? _3619 : (isnan(_3619) ? 1.0 : min(_3619, 1.0))) * (_1964 / ((_1968 * _1968) * 3.141590118408203125));
    float _2000 = (((_1977 * cbLight._m0[_1926].x) * _1990) * _1769) + ((((cbLight._m0[_1840].x * _1716) * _1896) * _1910) * _1750);
    float _2001 = (((_1977 * cbLight._m0[_1926].y) * _1990) * _1769) + ((((cbLight._m0[_1840].y * _1717) * _1896) * _1910) * _1750);
    float _2002 = (((_1977 * cbLight._m0[_1926].z) * _1990) * _1769) + ((((cbLight._m0[_1840].z * _1718) * _1896) * _1910) * _1750);
    float _2138;
    float _2140;
    float _2142;
    float _2144;
    float _2146;
    float _2148;
    if (_1722.y == 0u)
    {
        float _2079 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2080 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2079;
        float _2081 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2079;
        float _2082 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2079;
        uvec4 _2094 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2095 = _2094.x;
        uint _2106 = uint((float(_2094.y) * floor(float(uint(cbSceneParam._m0[85u].y * _514) / _2095))) + floor(float(uint(cbSceneParam._m0[85u].x * _513) / _2095)));
        float _2116 = (log2(_2082 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2117 = isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0));
        uint _2120 = uint(isnan(14.0) ? _2117 : (isnan(_2117) ? 14.0 : min(_2117, 14.0)));
        uint _2127 = _2094.z;
        float _2176;
        float _2178;
        float _2180;
        float _2182;
        float _2184;
        float _2186;
        if (((((1u << ((_2127 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2120 << 2u) + (_2106 << 6u)) >> 2u)).x) == 0u) || ((_2127 & 240u) == 0u))
        {
            _2176 = 0.0;
            _2178 = 0.0;
            _2180 = 0.0;
            _2182 = 0.0;
            _2184 = 0.0;
            _2186 = 0.0;
        }
        else
        {
            float _2177;
            float _2179;
            float _2181;
            float _2183;
            float _2185;
            float _2187;
            float _2368 = 0.0;
            float _2369 = 0.0;
            float _2370 = 0.0;
            float _2371 = 0.0;
            float _2372 = 0.0;
            float _2373 = 0.0;
            uint _2374 = 0u;
            uint _2383;
            bool _2384;
            for (;;)
            {
                _2383 = texelFetch(g_lightClassification, int((((_2120 << 5u) + (_2106 << 9u)) + (_2374 << 2u)) >> 2u)).x;
                _2384 = _2383 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2384)
                {
                    frontier_phi_55_pred = _2373;
                    frontier_phi_55_pred_1 = _2372;
                    frontier_phi_55_pred_2 = _2371;
                    frontier_phi_55_pred_3 = _2369;
                    frontier_phi_55_pred_4 = _2368;
                    frontier_phi_55_pred_5 = _2370;
                }
                else
                {
                    float _2581;
                    float _2582;
                    float _2583;
                    float _2584;
                    float _2585;
                    float _2586;
                    uint _2587;
                    _2581 = _2368;
                    _2582 = _2369;
                    _2583 = _2370;
                    _2584 = _2371;
                    _2585 = _2372;
                    _2586 = _2373;
                    _2587 = _2383;
                    float _2529;
                    float _2530;
                    float _2531;
                    float _2532;
                    float _2533;
                    float _2534;
                    for (;;)
                    {
                        uint _2591 = uint(findLSB(_2587)) + (_2374 << 5u);
                        uint _2588 = (_2587 + 4294967295u) & _2587;
                        uint _2593 = _2591 * 48u;
                        vec4 _2607 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2593)).x, texelFetch(g_PointLightRenderingBuffer, int(_2593 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2593 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2593 + 3u)).x));
                        uint _2613 = (_2591 * 48u) + 4u;
                        vec4 _2626 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2613)).x, texelFetch(g_PointLightRenderingBuffer, int(_2613 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2613 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2613 + 3u)).x));
                        float _2627 = _2626.x;
                        float _2628 = _2626.y;
                        float _2629 = _2626.z;
                        uint _2632 = (_2591 * 48u) + 8u;
                        vec3 _2643 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2632)).x, texelFetch(g_PointLightRenderingBuffer, int(_2632 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2632 + 2u)).x));
                        uint _2648 = (_2591 * 48u) + 12u;
                        vec2 _2656 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2648)).x, texelFetch(g_PointLightRenderingBuffer, int(_2648 + 1u)).x));
                        float _2662 = inversesqrt(dot(vec3(_2080, _2081, _2082), vec3(_2080, _2081, _2082)));
                        float _2663 = _2662 * _2080;
                        float _2664 = _2662 * _2081;
                        float _2665 = _2662 * _2082;
                        float _2666 = _2607.x - _2080;
                        float _2667 = _2607.y - _2081;
                        float _2668 = _2607.z - _2082;
                        float _2669 = dot(vec3(_2666, _2667, _2668), vec3(_2666, _2667, _2668));
                        float _2672 = inversesqrt(_2669);
                        float _2673 = _2672 * _2666;
                        float _2674 = _2672 * _2667;
                        float _2675 = _2672 * _2668;
                        float _2676 = dot(vec3(_624, _627, _630), vec3(_2673, _2674, _2675));
                        float _2681 = 1.0 - (_2669 * _2607.w);
                        float _3640 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
                        float _2682 = isnan(1.0) ? _3640 : (isnan(_3640) ? 1.0 : min(_3640, 1.0));
                        float _2683 = sqrt(_2669) * _2626.w;
                        float _2686 = 1.39999997615814208984375 / (_2683 + 1.39999997615814208984375);
                        float _2687 = _2686 * _2686;
                        float _2688 = 1.0 - _2687;
                        float _2690 = (_2688 * _2688) * _586;
                        float _2693 = ((_2688 * _2676) + _2687) + _2690;
                        float _2698 = _2683 * _2683;
                        float _2703 = ((isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : max(_2693, 0.0))) * _2682) / (((_2690 * 2.0) + 1.0) * ((_2698 * 0.699999988079071044921875) + 1.0));
                        float _2707 = dot(vec3(_2673, _2674, _2675), vec3(_2663, _2664, _2665));
                        float _3656 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
                        float _2714 = dot(vec3((-0.0) - _2663, (-0.0) - _2664, (-0.0) - _2665), vec3(_624, _627, _630)) + 1.0;
                        float _2716 = (isnan(0.0) ? _2714 : (isnan(_2714) ? 0.0 : max(_2714, 0.0))) * 0.5;
                        float _2723 = ((_2716 * _2716) * _2656.x) * exp2((_2656.y * 32.0) * log2(isnan(1.0) ? _3656 : (isnan(_3656) ? 1.0 : min(_3656, 1.0))));
                        float _2725 = _586 / (_586 + 1.0);
                        float _2741 = (-0.0) - _2080;
                        float _2742 = (-0.0) - _2081;
                        float _2743 = (-0.0) - _2082;
                        float _2747 = inversesqrt(dot(vec3(_2741, _2742, _2743), vec3(_2741, _2742, _2743)));
                        float _2748 = _2747 * _2741;
                        float _2749 = _2747 * _2742;
                        float _2750 = _2747 * _2743;
                        float _2758 = exp2(log2(1.0 / ((_2698 * 3.5) + 5.0)) * 0.25);
                        float _2759 = 1.0 - _684;
                        float _2766 = sqrt(1.0 - ((1.0 - (_2759 * _2759)) * (1.0 - (_2758 * _2758))));
                        float _2767 = _2766 * _2766;
                        float _2768 = _2767 * _2767;
                        float _2769 = _2748 + _2673;
                        float _2770 = _2749 + _2674;
                        float _2771 = _2750 + _2675;
                        float _2775 = inversesqrt(dot(vec3(_2769, _2770, _2771), vec3(_2769, _2770, _2771)));
                        float _2779 = dot(vec3(_624, _627, _630), vec3(_2748, _2749, _2750));
                        float _3672 = isnan(0.0) ? _2779 : (isnan(_2779) ? 0.0 : max(_2779, 0.0));
                        float _2782 = isnan(1.0) ? _3672 : (isnan(_3672) ? 1.0 : min(_3672, 1.0));
                        float _2783 = dot(vec3(_624, _627, _630), vec3(_2775 * _2769, _2775 * _2770, _2775 * _2771));
                        float _3683 = isnan(0.0) ? _2783 : (isnan(_2783) ? 0.0 : max(_2783, 0.0));
                        float _2786 = isnan(1.0) ? _3683 : (isnan(_3683) ? 1.0 : min(_3683, 1.0));
                        float _2790 = ((_2786 * _2786) * (_2768 + (-1.0))) + 1.0;
                        float _2791 = _2686 * _2767;
                        float _2792 = _2791 * _2791;
                        float _2795 = ((1.0 - _2792) * _2676) + _2792;
                        float _3694 = isnan(0.0) ? _2795 : (isnan(_2795) ? 0.0 : max(_2795, 0.0));
                        float _2796 = isnan(1.0) ? _3694 : (isnan(_3694) ? 1.0 : min(_3694, 1.0));
                        float _2797 = 1.0 - _2767;
                        float _2807 = (0.5 / (((_2796 * ((_2782 * _2797) + _2767)) + 9.9999999392252902907785028219223e-09) + (((_2796 * _2797) + _2767) * _2782))) * _2796;
                        float _3705 = isnan(0.0) ? _2807 : (isnan(_2807) ? 0.0 : max(_2807, 0.0));
                        float _2818 = (((_2768 * 3.1415927410125732421875) * (isnan(1.0) ? _3705 : (isnan(_3705) ? 1.0 : min(_3705, 1.0)))) / ((_2790 * _2790) * ((_2698 * 2.1991131305694580078125) + 3.141590118408203125))) * _2682;
                        _2532 = (((((_2627 * 0.3183098733425140380859375) * _2725) * _2723) + _2627) * _2703) + _2584;
                        _2533 = (((((_2628 * 0.3183098733425140380859375) * _2725) * _2723) + _2628) * _2703) + _2585;
                        _2534 = (((((_2629 * 0.3183098733425140380859375) * _2725) * _2723) + _2629) * _2703) + _2586;
                        _2529 = (_2818 * _2643.x) + _2581;
                        _2530 = (_2818 * _2643.y) + _2582;
                        _2531 = (_2818 * _2643.z) + _2583;
                        if (_2588 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2581 = _2529;
                            _2582 = _2530;
                            _2583 = _2531;
                            _2584 = _2532;
                            _2585 = _2533;
                            _2586 = _2534;
                            _2587 = _2588;
                        }
                    }
                    frontier_phi_55_pred = _2534;
                    frontier_phi_55_pred_1 = _2533;
                    frontier_phi_55_pred_2 = _2532;
                    frontier_phi_55_pred_3 = _2530;
                    frontier_phi_55_pred_4 = _2529;
                    frontier_phi_55_pred_5 = _2531;
                }
                _2187 = frontier_phi_55_pred;
                _2185 = frontier_phi_55_pred_1;
                _2183 = frontier_phi_55_pred_2;
                _2179 = frontier_phi_55_pred_3;
                _2177 = frontier_phi_55_pred_4;
                _2181 = frontier_phi_55_pred_5;
                uint _2375 = _2374 + 1u;
                if (_2375 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2368 = _2177;
                    _2369 = _2179;
                    _2370 = _2181;
                    _2371 = _2183;
                    _2372 = _2185;
                    _2373 = _2187;
                    _2374 = _2375;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2176 = _2177;
            _2178 = _2179;
            _2180 = _2181;
            _2182 = _2183;
            _2184 = _2185;
            _2186 = _2187;
        }
        float _2191 = isnan(1.0) ? _663 : (isnan(_663) ? 1.0 : min(_663, 1.0));
        _2138 = (_2191 * _2182) + _1834;
        _2140 = (_2191 * _2184) + _1835;
        _2142 = (_2191 * _2186) + _1836;
        _2144 = ((_2176 * 0.039999999105930328369140625) * _2191) + _2000;
        _2146 = ((_2178 * 0.039999999105930328369140625) * _2191) + _2001;
        _2148 = ((_2180 * 0.039999999105930328369140625) * _2191) + _2002;
    }
    else
    {
        _2138 = _1834;
        _2140 = _1835;
        _2142 = _1836;
        _2144 = _2000;
        _2146 = _2001;
        _2148 = _2002;
    }
    float _2265;
    float _2266;
    float _2267;
    if (_586 > 0.0)
    {
        uint _2198 = _1724 + 4u;
        float _2204 = (-0.0) - _438;
        float _2205 = (-0.0) - _439;
        float _2206 = (-0.0) - _440;
        float _2207 = dot(vec3(cbLight._m0[_1724].xyz), vec3(_2204, _2205, _2206));
        float _3721 = isnan(0.0) ? _2207 : (isnan(_2207) ? 0.0 : max(_2207, 0.0));
        float _2211 = _674 + 1.0;
        float _2213 = (isnan(0.0) ? _2211 : (isnan(_2211) ? 0.0 : max(_2211, 0.0))) * 0.5;
        float _2218 = _2213 * _2213;
        float _2219 = _2218 * exp2(log2(isnan(1.0) ? _3721 : (isnan(_3721) ? 1.0 : min(_3721, 1.0))) * 32.0);
        float _2221 = _586 / (_586 + 1.0);
        float _2222 = isnan(_1733) ? 1.0 : (isnan(1.0) ? _1733 : min(1.0, _1733));
        uint _2235 = _1724 + 5u;
        float _2241 = dot(vec3(cbLight._m0[_1760].xyz), vec3(_2204, _2205, _2206));
        float _3742 = isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0));
        float _2248 = _2218 * exp2(log2(isnan(1.0) ? _3742 : (isnan(_3742) ? 1.0 : min(_3742, 1.0))) * 32.0);
        float _2249 = isnan(_1734) ? 1.0 : (isnan(1.0) ? _1734 : min(1.0, _1734));
        _2265 = ((((_2248 * cbLight._m0[_2235].x) * _2221) * _2249) + ((((cbLight._m0[_2198].x * _1716) * _2219) * _2221) * _2222)) * 0.3183098733425140380859375;
        _2266 = ((((_2248 * cbLight._m0[_2235].y) * _2221) * _2249) + ((((cbLight._m0[_2198].y * _1717) * _2219) * _2221) * _2222)) * 0.3183098733425140380859375;
        _2267 = ((((_2248 * cbLight._m0[_2235].z) * _2221) * _2249) + ((((cbLight._m0[_2198].z * _1718) * _2219) * _2221) * _2222)) * 0.3183098733425140380859375;
    }
    else
    {
        _2265 = 0.0;
        _2266 = 0.0;
        _2267 = 0.0;
    }
    float _3758 = isnan(0.0) ? _654 : (isnan(_654) ? 0.0 : max(_654, 0.0));
    float _3769 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
    float _3780 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _3791 = isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : max(_584, 0.0));
    float _2282 = (isnan(1.0) ? _3758 : (isnan(_3758) ? 1.0 : min(_3758, 1.0))) * ((_2138 + ((isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0))) * _663)) + _2265);
    float _2283 = (isnan(1.0) ? _3769 : (isnan(_3769) ? 1.0 : min(_3769, 1.0))) * ((_2140 + ((isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0))) * _663)) + _2266);
    float _2284 = (isnan(1.0) ? _3780 : (isnan(_3780) ? 1.0 : min(_3780, 1.0))) * ((_2142 + ((isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0))) * _663)) + _2267);
    float _2288 = 0.959999978542327880859375 - (exp2(log2(1.0 - _678) * 5.0) * 0.959999978542327880859375);
    float _2313 = _513 / cbSceneParam._m0[86u].x;
    float _2314 = _514 / cbSceneParam._m0[86u].y;
    vec4 _2328 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2313, _2314, (log2((isnan(cbSceneParam._m0[77u].w) ? _605 : (isnan(_605) ? cbSceneParam._m0[77u].w : min(_605, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2330 = _2328.x;
    float _2331 = _2328.y;
    float _2332 = _2328.z;
    float _2333 = _2328.w;
    float _2426;
    float _2428;
    float _2430;
    float _2432;
    if (_605 > cbSceneParam._m0[78u].w)
    {
        float _2389 = isnan(_605) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _605 : min(cbSceneParam._m0[80u].w, _605));
        float _2390 = _2389 / _605;
        float _2401 = _2390 * _281;
        float _2402 = _282 * _2390;
        float _2403 = (-0.0) - _2402;
        float _2404 = _2390 * _283;
        float _2406 = (cbSceneParam._m0[77u].w * _2403) / _2389;
        float _2407 = _2406 + cbSceneParam._m0[79u].w;
        float _2408 = cbSceneParam._m0[79u].w - _2402;
        float _2414 = sqrt(((_2401 * _2401) + (_2402 * _2402)) + (_2404 * _2404));
        float _2417 = (1.0 - (cbSceneParam._m0[77u].w / _2389)) * _2414;
        float _2422 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2424 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2823;
        if (abs((_2403 - _2406) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2823 = ((((_2407 > 0.0) ? exp2(_2422 * _2407) : (2.0 - exp2(_2424 * _2407))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2417;
        }
        else
        {
            float _2554 = 1.0 / cbSceneParam._m0[80u].x;
            float _2555 = isnan(_2408) ? _2407 : (isnan(_2407) ? _2408 : max(_2407, _2408));
            float _2556 = isnan(_2408) ? _2407 : (isnan(_2407) ? _2408 : min(_2407, _2408));
            float _2565 = isnan(0.0) ? _2555 : (isnan(_2555) ? 0.0 : min(_2555, 0.0));
            float _2566 = isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : min(_2556, 0.0));
            _2823 = ((abs(_2414 / _2403) * cbSceneParam._m0[80u].y) * ((((_2565 - _2566) * 2.0) - ((exp2(_2422 * (isnan(0.0) ? _2555 : (isnan(_2555) ? 0.0 : max(_2555, 0.0)))) - exp2(_2422 * (isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : max(_2556, 0.0))))) * _2554)) - ((exp2(_2424 * _2565) - exp2(_2424 * _2566)) * _2554))) + (_2417 * cbSceneParam._m0[80u].z);
        }
        vec4 _2825 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2313, _2314, 1.0), 0.0);
        float _2834 = exp2((_2823 * (-1.44269502162933349609375)) * (1.0 - _2825.w));
        float _2835 = log2(_2834);
        float _2851 = log2(_2333);
        _2426 = (exp2(_2851 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2835 * cbSceneParam._m0[78u].x)) * _2825.x) / cbSceneParam._m0[78u].x)) + _2330;
        _2428 = (exp2(_2851 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2835 * cbSceneParam._m0[78u].y)) * _2825.y) / cbSceneParam._m0[78u].y)) + _2331;
        _2430 = (exp2(_2851 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2835 * cbSceneParam._m0[78u].z)) * _2825.z) / cbSceneParam._m0[78u].z)) + _2332;
        _2432 = _2834 * _2333;
    }
    else
    {
        _2426 = _2330;
        _2428 = _2331;
        _2430 = _2332;
        _2432 = _2333;
    }
    bool _2444 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2445 = log2(_2432);
    float _2452 = exp2(_2445 * cbSceneParam._m0[78u].x) * ((_2282 + ((_2144 + ((isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0))) * _1474)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _537.x) * _2288) - _2282) * _581));
    float _2453 = exp2(_2445 * cbSceneParam._m0[78u].y) * ((_2283 + ((_2146 + ((isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0))) * _1474)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _537.y) * _2288) - _2283) * _581));
    float _2454 = exp2(_2445 * cbSceneParam._m0[78u].z) * ((_2284 + ((_2148 + ((isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0))) * _1474)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _537.z) * _2288) - _2284) * _581));
    vec4 _2462 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_513, _514));
    float _2464 = _2462.x;
    float _2485 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2464)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2464))) - _605) * cbMtdParam._m0[17u].y;
    float _3842 = isnan(0.0) ? _2485 : (isnan(_2485) ? 0.0 : max(_2485, 0.0));
    float _2487 = (cbInstanceData._m0[_643 + 6u].w * (isnan(1.0) ? _3791 : (isnan(_3791) ? 1.0 : min(_3791, 1.0)))) * (isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0)));
    float _2496 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2496 * (_2444 ? _2452 : (_2452 + (cbSceneParam._m0[72u].w * _2426)));
    SV_Target.y = _2496 * (_2444 ? _2453 : (_2453 + (cbSceneParam._m0[72u].w * _2428)));
    SV_Target.z = _2496 * (_2444 ? _2454 : (_2454 + (cbSceneParam._m0[72u].w * _2430)));
    SV_Target.w = _2487;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2487;
}


