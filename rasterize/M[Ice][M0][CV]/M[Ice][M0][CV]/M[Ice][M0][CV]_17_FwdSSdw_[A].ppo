#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1265;
float _3232;
float _3233;
float _3234;
float _3235;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _212 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _213 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _214 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _220 = inversesqrt(dot(vec3(_212, _213, _214), vec3(_212, _213, _214)));
    float _221 = _220 * _212;
    float _222 = _220 * _213;
    float _223 = _220 * _214;
    float _227 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _228 = _227 * NORMAL.x;
    float _229 = _227 * NORMAL.y;
    float _230 = _227 * NORMAL.z;
    float _234 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _235 = _234 * TANGENT.x;
    float _236 = _234 * TANGENT.y;
    float _237 = _234 * TANGENT.z;
    float _242;
    float _243;
    float _244;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _242 = (-0.0) - _228;
        _243 = (-0.0) - _229;
        _244 = (-0.0) - _230;
    }
    else
    {
        _242 = _228;
        _243 = _229;
        _244 = _230;
    }
    float _291 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _301 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _291);
    float _302 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _291);
    float _303 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _291);
    uint _309 = uint(roundEven(NORMAL.w)) * 13u;
    uint _314 = _309 + 1u;
    uint _318 = _309 + 2u;
    float _327 = sqrt(((cbInstanceData._m0[_314].x * cbInstanceData._m0[_314].x) + (cbInstanceData._m0[_309].x * cbInstanceData._m0[_309].x)) + (cbInstanceData._m0[_318].x * cbInstanceData._m0[_318].x));
    float _328 = _327 * TEXCOORD.z;
    float _329 = _327 * TEXCOORD.w;
    vec4 _349 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _358 = (_349.x * 2.0) + (-1.0);
    float _360 = (_349.y * 2.0) + (-1.0);
    float _361 = dot(vec2(_358, _360), vec2(_358, _360));
    float _3244 = isnan(0.0) ? _361 : (isnan(_361) ? 0.0 : max(_361, 0.0));
    float _367 = sqrt(1.0 - (isnan(1.0) ? _3244 : (isnan(_3244) ? 1.0 : min(_3244, 1.0))));
    float _370 = fma(_367, _242, fma(_360, _235, _358 * _221));
    float _373 = fma(_367, _243, fma(_360, _236, _358 * _222));
    float _376 = fma(_367, _244, fma(_360, _237, _358 * _223));
    float _380 = inversesqrt(dot(vec3(_370, _373, _376), vec3(_370, _373, _376)));
    float _381 = _380 * _370;
    float _382 = _380 * _373;
    float _411 = (cbMtdParam._m0[17u].w + dot(vec4(_381, _382, _380 * _376, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _328) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _329) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3255 = isnan(0.0) ? _411 : (isnan(_411) ? 0.0 : max(_411, 0.0));
    float _412 = isnan(1.0) ? _3255 : (isnan(_3255) ? 1.0 : min(_3255, 1.0));
    vec4 _424 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _429 = _424.w;
    float _441 = dot(vec3(_301, _302, _303), vec3(_221, _222, _223));
    float _444 = dot(vec3(_301, _302, _303), vec3(_235, _236, _237));
    float _447 = dot(vec3(_301, _302, _303), vec3(_242, _243, _244));
    float _453 = inversesqrt(dot(vec3(_441, _444, _447), vec3(_441, _444, _447)));
    float _475 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _495 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_441 * cbMtdParam._m0[14u].x) * _453) * _475) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_444 * cbMtdParam._m0[14u].x) * _453) * _475) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _518 = inversesqrt(dot(vec3(_301, _302, _303), vec3(_301, _302, _303)));
    float _519 = _518 * _301;
    float _520 = _518 * _302;
    float _521 = _518 * _303;
    float _522 = dot(vec4(_519, _520, _521, 0.0), vec4(_242, _243, _244, 0.0));
    float _525 = _522 - cbMtdParam._m0[15u].z;
    float _3266 = isnan(0.0) ? _525 : (isnan(_525) ? 0.0 : max(_525, 0.0));
    float _532 = exp2(log2(1.0 - (isnan(1.0) ? _3266 : (isnan(_3266) ? 1.0 : min(_3266, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _547 = ((((_424.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _495.x) * cbMtdParam._m0[9u].x) * ((_532 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _552 = ((((_424.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _495.y) * cbMtdParam._m0[9u].y) * ((_532 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _557 = ((((_424.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _495.z) * cbMtdParam._m0[9u].z) * ((_532 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _564 = ((cbMtdParam._m0[11u].x - _547) * _412) + _547;
    float _565 = ((cbMtdParam._m0[11u].y - _552) * _412) + _552;
    float _566 = ((cbMtdParam._m0[11u].z - _557) * _412) + _557;
    vec4 _578 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _328) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _329) + cbTextureTilingScale._m0[9u].w));
    float _585 = (_578.x * 2.0) + (-1.0);
    float _586 = (_578.y * 2.0) + (-1.0);
    float _587 = dot(vec2(_585, _586), vec2(_585, _586));
    float _3282 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
    vec4 _608 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _618 = cbMtdParam._m0[17u].z + _349.z;
    float _624 = (_618 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_608.z - _618));
    float _627 = ((_578.z - _624) * _412) + _624;
    float _633 = ((((_608.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _358;
    float _634 = ((((_608.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _360;
    float _642 = ((sqrt(1.0 - (isnan(1.0) ? _3282 : (isnan(_3282) ? 1.0 : min(_3282, 1.0)))) - _367) * _412) + _367;
    float _646 = ((_633 * cbMtdParam._m0[14u].z) + _633) + ((_585 - _633) * _412);
    float _648 = ((_634 * cbMtdParam._m0[14u].z) + _634) + ((_586 - _634) * _412);
    vec4 _660 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _664 = cbMtdParam._m0[16u].w * _660.x;
    float _666 = _664 - (_664 * _412);
    float _686 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _381));
    float _687 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _382));
    float _694 = isnan(cbInstanceData._m0[8u].x) ? _686 : (isnan(_686) ? cbInstanceData._m0[8u].x : max(_686, cbInstanceData._m0[8u].x));
    float _695 = isnan(cbInstanceData._m0[8u].y) ? _687 : (isnan(_687) ? cbInstanceData._m0[8u].y : max(_687, cbInstanceData._m0[8u].y));
    vec4 _699 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _694 : (isnan(_694) ? cbInstanceData._m0[8u].z : min(_694, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _695 : (isnan(_695) ? cbInstanceData._m0[8u].w : min(_695, cbInstanceData._m0[8u].w))));
    float _732 = _522 - cbMtdParam._m0[15u].x;
    float _3313 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
    float _742 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3313 : (isnan(_3313) ? 1.0 : min(_3313, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3329 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _743 = isnan(1.0) ? _3329 : (isnan(_3329) ? 1.0 : min(_3329, 1.0));
    float _745 = _743 - (_743 * _412);
    float _749 = fma(_642, _242, fma(_648, _235, _646 * _221));
    float _752 = fma(_642, _243, fma(_648, _236, _646 * _222));
    float _755 = fma(_642, _244, fma(_648, _237, _646 * _223));
    float _759 = inversesqrt(dot(vec3(_749, _752, _755), vec3(_749, _752, _755)));
    float _760 = _759 * _749;
    float _761 = _759 * _752;
    float _762 = _759 * _755;
    float _3340 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _763 = isnan(1.0) ? _3340 : (isnan(_3340) ? 1.0 : min(_3340, 1.0));
    float _3351 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _764 = isnan(1.0) ? _3351 : (isnan(_3351) ? 1.0 : min(_3351, 1.0));
    float _765 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
    float _3367 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _3378 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _3389 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _782 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _787 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _789 = _787.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _944 = sqrt(((_301 * _301) + (_302 * _302)) + (_303 * _303));
        float _950 = (cbMatDynParam._m0[5u].x * _944) + cbMatDynParam._m0[5u].y;
        float _3400 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
        float _951 = isnan(1.0) ? _3400 : (isnan(_3400) ? 1.0 : min(_3400, 1.0));
        float _955 = (cbMatDynParam._m0[5u].z * _944) + cbMatDynParam._m0[5u].w;
        float _3411 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3411 : (isnan(_3411) ? 1.0 : min(_3411, 1.0))) - _951)) + _951) < ((_789 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _799 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _800 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _818 = fma(_762, cbSceneParam._m0[5u].z, fma(_761, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _760));
    float _821 = fma(_762, cbSceneParam._m0[6u].z, fma(_761, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _760));
    float _824 = fma(_762, cbSceneParam._m0[7u].z, fma(_761, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _760));
    uint _837 = _309 + 9u;
    uint _838 = _837 + uint(cbMatDynParam._m0[0u].w);
    float _844 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3367 : (isnan(_3367) ? 1.0 : min(_3367, 1.0)))) * cbInstanceData._m0[_838].x;
    float _845 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3378 : (isnan(_3378) ? 1.0 : min(_3378, 1.0)))) * cbInstanceData._m0[_838].y;
    float _846 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3389 : (isnan(_3389) ? 1.0 : min(_3389, 1.0)))) * cbInstanceData._m0[_838].z;
    float _3422 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _847 = isnan(1.0) ? _3422 : (isnan(_3422) ? 1.0 : min(_3422, 1.0));
    float _3433 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _848 = isnan(1.0) ? _3433 : (isnan(_3433) ? 1.0 : min(_3433, 1.0));
    float _3444 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _849 = isnan(1.0) ? _3444 : (isnan(_3444) ? 1.0 : min(_3444, 1.0));
    vec4 _857 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _799, cbSceneParam._m0[86u].y * _800));
    float _860 = _857.x * TEXCOORD_5.w;
    float _861 = dot(vec3(_760, _761, _762), vec3(_519, _520, _521));
    float _864 = _861 * 2.0;
    float _868 = (_864 * _760) - _519;
    float _869 = (_864 * _761) - _520;
    float _870 = (_864 * _762) - _521;
    float _871 = dot(vec3(_519, _520, _521), vec3(_760, _761, _762));
    float _874 = abs(_871);
    float _3455 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
    float _875 = isnan(1.0) ? _3455 : (isnan(_3455) ? 1.0 : min(_3455, 1.0));
    float _881 = sqrt(_764);
    float _893 = exp2((_881 * 5.0) * log2(1.0 - (_875 * 0.999000012874603271484375))) / (4.0 - (_881 * 3.0));
    float _925 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _929 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _933 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1264;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _989 = fma(_933, cbModelParam._m0[26u].z, fma(_929, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _925));
        float _993 = fma(_933, cbModelParam._m0[27u].z, fma(_929, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _925));
        float _997 = fma(_933, cbModelParam._m0[28u].z, fma(_929, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _925));
        float _1022 = _925 + _760;
        float _1023 = _929 + _761;
        float _1024 = _933 + _762;
        float _1034 = fma(_1024, cbModelParam._m0[26u].z, fma(_1023, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1022)) - _989;
        float _1035 = fma(_1024, cbModelParam._m0[27u].z, fma(_1023, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1022)) - _993;
        float _1036 = fma(_1024, cbModelParam._m0[28u].z, fma(_1023, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1022)) - _997;
        float _1040 = inversesqrt(dot(vec3(_1034, _1035, _1036), vec3(_1034, _1035, _1036)));
        float _1053 = ((_1040 * _1034) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_989 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1054 = ((_1040 * _1035) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_993 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1055 = ((_1040 * _1036) / cbModelParam._m0[34u].z) + ((((((_997 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1058 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1053, _1054, _1055), 0.0);
        vec4 _1065 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1053, _1054, _1055), 0.0);
        vec4 _1072 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1053, _1054, _1055), 0.0);
        vec4 _1079 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1053, _1054, _1055), 0.0);
        float _1092 = exp2((_1058.w + (-0.5)) * 20.0) * 2.0;
        float _1093 = _1092 * (_1058.x + (-0.5));
        float _1094 = _1092 * (_1058.y + (-0.5));
        float _1095 = _1092 * (_1058.z + (-0.5));
        float _1102 = exp2((_1065.w + (-0.5)) * 20.0) * 2.0;
        float _1103 = _1102 * (_1065.x + (-0.5));
        float _1104 = _1102 * (_1065.y + (-0.5));
        float _1105 = _1102 * (_1065.z + (-0.5));
        float _1112 = exp2((_1072.w + (-0.5)) * 20.0) * 2.0;
        float _1113 = _1112 * (_1072.x + (-0.5));
        float _1114 = _1112 * (_1072.y + (-0.5));
        float _1115 = _1112 * (_1072.z + (-0.5));
        float _1122 = exp2((_1079.w + (-0.5)) * 20.0) * 2.0;
        float _1123 = _1122 * (_1079.x + (-0.5));
        float _1124 = _1122 * (_1079.y + (-0.5));
        float _1125 = _1122 * (_1079.z + (-0.5));
        float _1126 = isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0));
        float _1127 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1128 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
        float _1129 = _1093 * 0.5;
        float _1130 = _1103 * 0.5;
        float _1131 = _1113 * 0.5;
        float _1132 = dot(vec3(_1129, _1130, _1131), vec3(_1129, _1130, _1131));
        float _1137 = (_1132 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1132);
        float _1146 = (dot(vec3(_760, _761, _762), vec3(_1137 * _1129, _1137 * _1130, _1137 * _1131)) + 1.0) * 0.5;
        float _3481 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1156 = sqrt(((_1130 * _1130) + (_1129 * _1129)) + (_1131 * _1131)) / (_1126 + 9.9999997473787516355514526367188e-06);
        float _3492 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
        float _1157 = isnan(1.0) ? _3492 : (isnan(_3492) ? 1.0 : min(_3492, 1.0));
        float _1158 = _1157 * 2.0;
        float _1162 = (1.0 - _1157) / (_1157 + 1.0);
        float _3503 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
        float _1163 = isnan(1.0) ? _3503 : (isnan(_3503) ? 1.0 : min(_3503, 1.0));
        float _1172 = ((((1.0 - _1163) * (_1158 + 2.0)) * exp2(log2(isnan(1.0) ? _3481 : (isnan(_3481) ? 1.0 : min(_3481, 1.0))) * (_1158 + 1.0))) + _1163) * _1126;
        float _1173 = _1094 * 0.5;
        float _1174 = _1104 * 0.5;
        float _1175 = _1114 * 0.5;
        float _1176 = dot(vec3(_1173, _1174, _1175), vec3(_1173, _1174, _1175));
        float _1181 = (_1176 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1176);
        float _1189 = (dot(vec3(_760, _761, _762), vec3(_1181 * _1173, _1181 * _1174, _1181 * _1175)) + 1.0) * 0.5;
        float _3514 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
        float _1198 = sqrt(((_1174 * _1174) + (_1173 * _1173)) + (_1175 * _1175)) / (_1127 + 9.9999997473787516355514526367188e-06);
        float _3525 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
        float _1199 = isnan(1.0) ? _3525 : (isnan(_3525) ? 1.0 : min(_3525, 1.0));
        float _1200 = _1199 * 2.0;
        float _1204 = (1.0 - _1199) / (_1199 + 1.0);
        float _3536 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        float _1205 = isnan(1.0) ? _3536 : (isnan(_3536) ? 1.0 : min(_3536, 1.0));
        float _1214 = ((((1.0 - _1205) * (_1200 + 2.0)) * exp2(log2(isnan(1.0) ? _3514 : (isnan(_3514) ? 1.0 : min(_3514, 1.0))) * (_1200 + 1.0))) + _1205) * _1127;
        float _1215 = _1095 * 0.5;
        float _1216 = _1105 * 0.5;
        float _1217 = _1115 * 0.5;
        float _1218 = dot(vec3(_1215, _1216, _1217), vec3(_1215, _1216, _1217));
        float _1223 = (_1218 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1218);
        float _1231 = (dot(vec3(_760, _761, _762), vec3(_1223 * _1215, _1223 * _1216, _1223 * _1217)) + 1.0) * 0.5;
        float _3547 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
        float _1240 = sqrt(((_1216 * _1216) + (_1215 * _1215)) + (_1217 * _1217)) / (_1128 + 9.9999997473787516355514526367188e-06);
        float _3558 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
        float _1241 = isnan(1.0) ? _3558 : (isnan(_3558) ? 1.0 : min(_3558, 1.0));
        float _1242 = _1241 * 2.0;
        float _1246 = (1.0 - _1241) / (_1241 + 1.0);
        float _3569 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
        float _1247 = isnan(1.0) ? _3569 : (isnan(_3569) ? 1.0 : min(_3569, 1.0));
        float _1256 = ((((1.0 - _1247) * (_1242 + 2.0)) * exp2(log2(isnan(1.0) ? _3547 : (isnan(_3547) ? 1.0 : min(_3547, 1.0))) * (_1242 + 1.0))) + _1247) * _1128;
        _1264 = _1095;
        _1266 = _1094;
        _1267 = _1093;
        _1268 = _1105;
        _1269 = _1104;
        _1270 = _1103;
        _1271 = _1115;
        _1272 = _1114;
        _1273 = _1113;
        _1274 = _1128;
        _1275 = _1127;
        _1276 = _1126;
        _1277 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0)));
        _1278 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0)));
        _1279 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0)));
    }
    else
    {
        _1264 = _1265;
        _1266 = _1265;
        _1267 = _1265;
        _1268 = _1265;
        _1269 = _1265;
        _1270 = _1265;
        _1271 = _1265;
        _1272 = _1265;
        _1273 = _1265;
        _1274 = _1265;
        _1275 = _1265;
        _1276 = _1265;
        _1277 = 0.0;
        _1278 = 0.0;
        _1279 = 0.0;
    }
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    float _1581;
    float _1582;
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1308 = fma(_933, cbModelParam._m0[30u].z, fma(_929, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _925));
        float _1312 = fma(_933, cbModelParam._m0[31u].z, fma(_929, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _925));
        float _1316 = fma(_933, cbModelParam._m0[32u].z, fma(_929, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _925));
        float _1339 = _925 + _760;
        float _1340 = _929 + _761;
        float _1341 = _933 + _762;
        float _1351 = fma(_1341, cbModelParam._m0[30u].z, fma(_1340, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1339)) - _1308;
        float _1352 = fma(_1341, cbModelParam._m0[31u].z, fma(_1340, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1339)) - _1312;
        float _1353 = fma(_1341, cbModelParam._m0[32u].z, fma(_1340, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1339)) - _1316;
        float _1357 = inversesqrt(dot(vec3(_1351, _1352, _1353), vec3(_1351, _1352, _1353)));
        float _1370 = ((_1357 * _1351) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1308 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1371 = ((_1357 * _1352) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1312 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1372 = ((_1357 * _1353) / cbModelParam._m0[35u].z) + ((((((_1316 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1374 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1370, _1371, _1372), 0.0);
        vec4 _1381 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1370, _1371, _1372), 0.0);
        vec4 _1388 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1370, _1371, _1372), 0.0);
        vec4 _1395 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1370, _1371, _1372), 0.0);
        float _1407 = exp2((_1374.w + (-0.5)) * 20.0) * 2.0;
        float _1408 = _1407 * (_1374.x + (-0.5));
        float _1409 = _1407 * (_1374.y + (-0.5));
        float _1410 = _1407 * (_1374.z + (-0.5));
        float _1417 = exp2((_1381.w + (-0.5)) * 20.0) * 2.0;
        float _1418 = _1417 * (_1381.x + (-0.5));
        float _1419 = _1417 * (_1381.y + (-0.5));
        float _1420 = _1417 * (_1381.z + (-0.5));
        float _1427 = exp2((_1388.w + (-0.5)) * 20.0) * 2.0;
        float _1428 = _1427 * (_1388.x + (-0.5));
        float _1429 = _1427 * (_1388.y + (-0.5));
        float _1430 = _1427 * (_1388.z + (-0.5));
        float _1437 = exp2((_1395.w + (-0.5)) * 20.0) * 2.0;
        float _1438 = _1437 * (_1395.x + (-0.5));
        float _1439 = _1437 * (_1395.y + (-0.5));
        float _1440 = _1437 * (_1395.z + (-0.5));
        float _1441 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1442 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1443 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1444 = _1408 * 0.5;
        float _1445 = _1418 * 0.5;
        float _1446 = _1428 * 0.5;
        float _1447 = dot(vec3(_1444, _1445, _1446), vec3(_1444, _1445, _1446));
        float _1452 = (_1447 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1447);
        float _1460 = (dot(vec3(_760, _761, _762), vec3(_1452 * _1444, _1452 * _1445, _1452 * _1446)) + 1.0) * 0.5;
        float _3610 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1469 = sqrt(((_1445 * _1445) + (_1444 * _1444)) + (_1446 * _1446)) / (_1441 + 9.9999997473787516355514526367188e-06);
        float _3621 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
        float _1470 = isnan(1.0) ? _3621 : (isnan(_3621) ? 1.0 : min(_3621, 1.0));
        float _1471 = _1470 * 2.0;
        float _1475 = (1.0 - _1470) / (_1470 + 1.0);
        float _3632 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1476 = isnan(1.0) ? _3632 : (isnan(_3632) ? 1.0 : min(_3632, 1.0));
        float _1485 = ((((1.0 - _1476) * (_1471 + 2.0)) * exp2(log2(isnan(1.0) ? _3610 : (isnan(_3610) ? 1.0 : min(_3610, 1.0))) * (_1471 + 1.0))) + _1476) * _1441;
        float _1486 = _1409 * 0.5;
        float _1487 = _1419 * 0.5;
        float _1488 = _1429 * 0.5;
        float _1489 = dot(vec3(_1486, _1487, _1488), vec3(_1486, _1487, _1488));
        float _1494 = (_1489 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1489);
        float _1502 = (dot(vec3(_760, _761, _762), vec3(_1494 * _1486, _1494 * _1487, _1494 * _1488)) + 1.0) * 0.5;
        float _3643 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1511 = sqrt(((_1487 * _1487) + (_1486 * _1486)) + (_1488 * _1488)) / (_1442 + 9.9999997473787516355514526367188e-06);
        float _3654 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1512 = isnan(1.0) ? _3654 : (isnan(_3654) ? 1.0 : min(_3654, 1.0));
        float _1513 = _1512 * 2.0;
        float _1517 = (1.0 - _1512) / (_1512 + 1.0);
        float _3665 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        float _1518 = isnan(1.0) ? _3665 : (isnan(_3665) ? 1.0 : min(_3665, 1.0));
        float _1527 = ((((1.0 - _1518) * (_1513 + 2.0)) * exp2(log2(isnan(1.0) ? _3643 : (isnan(_3643) ? 1.0 : min(_3643, 1.0))) * (_1513 + 1.0))) + _1518) * _1442;
        float _1528 = _1410 * 0.5;
        float _1529 = _1420 * 0.5;
        float _1530 = _1430 * 0.5;
        float _1531 = dot(vec3(_1528, _1529, _1530), vec3(_1528, _1529, _1530));
        float _1536 = (_1531 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1531);
        float _1544 = (dot(vec3(_760, _761, _762), vec3(_1536 * _1528, _1536 * _1529, _1536 * _1530)) + 1.0) * 0.5;
        float _3676 = isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0));
        float _1553 = sqrt(((_1529 * _1529) + (_1528 * _1528)) + (_1530 * _1530)) / (_1443 + 9.9999997473787516355514526367188e-06);
        float _3687 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
        float _1554 = isnan(1.0) ? _3687 : (isnan(_3687) ? 1.0 : min(_3687, 1.0));
        float _1555 = _1554 * 2.0;
        float _1559 = (1.0 - _1554) / (_1554 + 1.0);
        float _3698 = isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0));
        float _1560 = isnan(1.0) ? _3698 : (isnan(_3698) ? 1.0 : min(_3698, 1.0));
        float _1569 = ((((1.0 - _1560) * (_1555 + 2.0)) * exp2(log2(isnan(1.0) ? _3676 : (isnan(_3676) ? 1.0 : min(_3676, 1.0))) * (_1555 + 1.0))) + _1560) * _1443;
        _1577 = _1410;
        _1578 = _1409;
        _1579 = _1408;
        _1580 = _1420;
        _1581 = _1419;
        _1582 = _1418;
        _1583 = _1430;
        _1584 = _1429;
        _1585 = _1428;
        _1586 = _1443;
        _1587 = _1442;
        _1588 = _1441;
        _1589 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0)));
        _1590 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0)));
        _1591 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0)));
    }
    else
    {
        _1577 = _1265;
        _1578 = _1265;
        _1579 = _1265;
        _1580 = _1265;
        _1581 = _1265;
        _1582 = _1265;
        _1583 = _1265;
        _1584 = _1265;
        _1585 = _1265;
        _1586 = _1265;
        _1587 = _1265;
        _1588 = _1265;
        _1589 = 0.0;
        _1590 = 0.0;
        _1591 = 0.0;
    }
    float _1601 = (cbModelParam._m0[1u].x * (_1589 - _1277)) + _1277;
    float _1602 = (cbModelParam._m0[1u].x * (_1590 - _1278)) + _1278;
    float _1603 = (cbModelParam._m0[1u].x * (_1591 - _1279)) + _1279;
    float _1624 = fma(_1603, cbSceneParam._m0[89u].z, fma(_1602, cbSceneParam._m0[89u].y, _1601 * cbSceneParam._m0[89u].x));
    float _1627 = fma(_1603, cbSceneParam._m0[90u].z, fma(_1602, cbSceneParam._m0[90u].y, _1601 * cbSceneParam._m0[90u].x));
    float _1630 = fma(_1603, cbSceneParam._m0[91u].z, fma(_1602, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1601));
    float _1645 = _868 * 0.5;
    float _1646 = _869 * 0.5;
    float _1647 = _870 * 0.5;
    float _1648 = dot(vec4(_1645, _1646, _1647, 1.0), vec4(_1579, _1582, _1585, _1588));
    float _1651 = dot(vec4(_1645, _1646, _1647, 1.0), vec4(_1578, _1581, _1584, _1587));
    float _1654 = dot(vec4(_1645, _1646, _1647, 1.0), vec4(_1577, _1580, _1583, _1586));
    float _1688;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1661 = dot(vec4(_1645, _1646, _1647, 1.0), vec4(_1264, _1268, _1271, _1274));
        float _1665 = dot(vec4(_1645, _1646, _1647, 1.0), vec4(_1266, _1269, _1272, _1275));
        float _1669 = dot(vec4(_1645, _1646, _1647, 1.0), vec4(_1267, _1270, _1273, _1276));
        float _1676 = dot(vec4(cbModelParam._m0[39u]), vec4(_1645, _1646, _1647, 1.0));
        _1688 = dot(vec3(isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0)), isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0)), isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1676) ? 0.0 : (isnan(0.0) ? _1676 : max(0.0, _1676))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1688 = 1.0;
    }
    float _1699;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1690 = dot(vec4(cbModelParam._m0[40u]), vec4(_1645, _1646, _1647, 1.0));
        _1699 = dot(vec3(isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0)), isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0)), isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1690) ? 0.0 : (isnan(0.0) ? _1690 : max(0.0, _1690))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1699 = 1.0;
    }
    float _1703 = (_1699 * cbModelParam._m0[1u].x) + (_1688 * (1.0 - cbModelParam._m0[1u].x));
    float _1713 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _764);
    float _1714 = isnan(_1713) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1713 : min(cbModelParam._m0[25u].z, _1713));
    float _1794;
    float _1796;
    float _1798;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1761 = fma(_933, cbModelParam._m0[13u].z, fma(_929, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _925)) + cbModelParam._m0[13u].w;
        float _1765 = fma(_933, cbModelParam._m0[14u].z, fma(_929, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _925)) + cbModelParam._m0[14u].w;
        float _1769 = fma(_933, cbModelParam._m0[15u].z, fma(_929, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _925)) + cbModelParam._m0[15u].w;
        float _1772 = fma(_870, cbModelParam._m0[13u].z, fma(_869, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _868));
        float _1775 = fma(_870, cbModelParam._m0[14u].z, fma(_869, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _868));
        float _1778 = fma(_870, cbModelParam._m0[15u].z, fma(_869, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _868));
        float _1806;
        if (_1772 > 0.0)
        {
            _1806 = abs((1.0 - _1761) / _1772);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1772 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1761 + 1.0) / _1772);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1806 = frontier_phi_19_17_ladder;
        }
        float _1998;
        if (_1775 > 0.0)
        {
            _1998 = abs((1.0 - _1765) / _1775);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1775 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1765 + 1.0) / _1775);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1998 = frontier_phi_28_24_ladder;
        }
        float _2236;
        if (_1778 > 0.0)
        {
            _2236 = abs((1.0 - _1769) / _1778);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1778 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1769 + 1.0) / _1778);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2236 = frontier_phi_39_35_ladder;
        }
        float _2238 = isnan(_1998) ? _1806 : (isnan(_1806) ? _1998 : min(_1806, _1998));
        float _2239 = isnan(_2236) ? _2238 : (isnan(_2238) ? _2236 : min(_2238, _2236));
        float _2243 = (_2239 * _1772) + _1761;
        float _2244 = (_2239 * _1775) + _1765;
        float _2245 = (_2239 * _1778) + _1769;
        float _2246 = _2239 * 9.9999997473787516355514526367188e-05;
        float _2248 = (-1.0) - _2246;
        float _2250 = _2246 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2245 > _2250) || ((_2245 < _2248) || ((_2244 > _2250) || ((_2244 < _2248) || ((_2243 < _2248) || (_2243 > _2250))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2395 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2245, cbModelParam._m0[9u].z, fma(_2244, cbModelParam._m0[9u].y, _2243 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2245, cbModelParam._m0[10u].z, fma(_2244, cbModelParam._m0[10u].y, _2243 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2245, cbModelParam._m0[11u].z, fma(_2244, cbModelParam._m0[11u].y, _2243 * cbModelParam._m0[11u].x))), _1714);
            frontier_phi_18_39_ladder = _2395.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2395.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2395.x * cbModelParam._m0[1u].y;
        }
        _1794 = frontier_phi_18_39_ladder_2;
        _1796 = frontier_phi_18_39_ladder_1;
        _1798 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1782 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_868, _869, _870), _1714);
        _1794 = _1782.x * cbModelParam._m0[1u].y;
        _1796 = _1782.y * cbModelParam._m0[1u].y;
        _1798 = _1782.z * cbModelParam._m0[1u].y;
    }
    float _1802 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _764);
    float _1803 = isnan(_1802) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1802 : min(cbModelParam._m0[25u].w, _1802));
    float _1894;
    float _1896;
    float _1898;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1858 = fma(_933, cbModelParam._m0[21u].z, fma(_929, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _925)) + cbModelParam._m0[21u].w;
        float _1862 = fma(_933, cbModelParam._m0[22u].z, fma(_929, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _925)) + cbModelParam._m0[22u].w;
        float _1866 = fma(_933, cbModelParam._m0[23u].z, fma(_929, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _925)) + cbModelParam._m0[23u].w;
        float _1869 = fma(_870, cbModelParam._m0[21u].z, fma(_869, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _868));
        float _1872 = fma(_870, cbModelParam._m0[22u].z, fma(_869, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _868));
        float _1875 = fma(_870, cbModelParam._m0[23u].z, fma(_869, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _868));
        float _2003;
        if (_1869 > 0.0)
        {
            _2003 = abs((1.0 - _1858) / _1869);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1869 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1858 + 1.0) / _1869);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2003 = frontier_phi_30_26_ladder;
        }
        float _2263;
        if (_1872 > 0.0)
        {
            _2263 = abs((1.0 - _1862) / _1872);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1872 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1862 + 1.0) / _1872);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2263 = frontier_phi_41_37_ladder;
        }
        float _2570;
        if (_1875 > 0.0)
        {
            _2570 = abs((1.0 - _1866) / _1875);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1875 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1866 + 1.0) / _1875);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2570 = frontier_phi_52_47_ladder;
        }
        float _2572 = isnan(_2263) ? _2003 : (isnan(_2003) ? _2263 : min(_2003, _2263));
        float _2573 = isnan(_2570) ? _2572 : (isnan(_2572) ? _2570 : min(_2572, _2570));
        float _2577 = (_2573 * _1869) + _1858;
        float _2578 = (_2573 * _1872) + _1862;
        float _2579 = (_2573 * _1875) + _1866;
        float _2580 = _2573 * 9.9999997473787516355514526367188e-05;
        float _2581 = (-1.0) - _2580;
        float _2583 = _2580 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2579 > _2583) || ((_2579 < _2581) || ((_2578 > _2583) || ((_2578 < _2581) || ((_2577 < _2581) || (_2577 > _2583))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2760 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2579, cbModelParam._m0[17u].z, fma(_2578, cbModelParam._m0[17u].y, _2577 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2579, cbModelParam._m0[18u].z, fma(_2578, cbModelParam._m0[18u].y, _2577 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2579, cbModelParam._m0[19u].z, fma(_2578, cbModelParam._m0[19u].y, _2577 * cbModelParam._m0[19u].x))), _1803);
            frontier_phi_27_52_ladder = _2760.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2760.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2760.y * cbModelParam._m0[1u].z;
        }
        _1894 = frontier_phi_27_52_ladder_1;
        _1896 = frontier_phi_27_52_ladder_2;
        _1898 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1878 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_868, _869, _870), _1803);
        _1894 = _1878.x * cbModelParam._m0[1u].z;
        _1896 = _1878.y * cbModelParam._m0[1u].z;
        _1898 = _1878.z * cbModelParam._m0[1u].z;
    }
    float _1910 = ((((1.0 - _893) * ((_881 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_893 * _881)) * _860;
    float _1911 = _1910 * ((cbModelParam._m0[1u].w * (_1894 - _1794)) + _1794);
    float _1912 = _1910 * ((cbModelParam._m0[1u].w * (_1896 - _1796)) + _1796);
    float _1913 = _1910 * ((cbModelParam._m0[1u].w * (_1898 - _1798)) + _1798);
    float _1916 = fma(_1913, cbSceneParam._m0[89u].z, fma(_1912, cbSceneParam._m0[89u].y, _1911 * cbSceneParam._m0[89u].x));
    float _1919 = fma(_1913, cbSceneParam._m0[90u].z, fma(_1912, cbSceneParam._m0[90u].y, _1911 * cbSceneParam._m0[90u].x));
    float _1922 = fma(_1913, cbSceneParam._m0[91u].z, fma(_1912, cbSceneParam._m0[91u].y, _1911 * cbSceneParam._m0[91u].x));
    vec4 _1930 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_799, _800));
    float _1932 = _1930.w;
    float _1944 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1932);
    float _1945 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1932);
    float _1946 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1932);
    uvec4 _1950 = floatBitsToUint(cbInstanceData._m0[_309 + 5u]);
    uint _1952 = _1950.x * 14u;
    uint _1953 = _1952 + 13u;
    float _1958 = _860 + (-1.0);
    float _1961 = (cbLight._m0[_1953].x * _1958) + 1.0;
    float _1962 = (cbLight._m0[_1953].y * _1958) + 1.0;
    uint _1964 = _1952 + 4u;
    float _1975 = dot(vec3(cbLight._m0[_1952].xyz), vec3(_760, _761, _762));
    float _1978 = isnan(1.0) ? _1961 : (isnan(_1961) ? 1.0 : min(_1961, 1.0));
    float _1979 = cbLight._m0[_1964].x * _1944;
    float _1980 = cbLight._m0[_1964].y * _1945;
    float _1981 = cbLight._m0[_1964].z * _1946;
    uint _1982 = _1952 + 5u;
    uint _1988 = _1952 | 1u;
    float _1994 = dot(vec3(cbLight._m0[_1988].xyz), vec3(_760, _761, _762));
    float _1997 = isnan(1.0) ? _1962 : (isnan(_1962) ? 1.0 : min(_1962, 1.0));
    float _2062;
    float _2063;
    float _2064;
    if (_765 == 0.0)
    {
        float _3834 = isnan(0.0) ? _1975 : (isnan(_1975) ? 0.0 : max(_1975, 0.0));
        float _3845 = isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0));
        float _2016 = (isnan(1.0) ? _3834 : (isnan(_3834) ? 1.0 : min(_3834, 1.0))) * 0.3183098733425140380859375;
        float _2018 = (isnan(1.0) ? _3845 : (isnan(_3845) ? 1.0 : min(_3845, 1.0))) * 0.3183098733425140380859375;
        _2062 = ((cbLight._m0[_1982].x * _1997) * _2018) + ((_1979 * _1978) * _2016);
        _2063 = ((_1997 * cbLight._m0[_1982].y) * _2018) + ((_1980 * _1978) * _2016);
        _2064 = ((_1997 * cbLight._m0[_1982].z) * _2018) + ((_1981 * _1978) * _2016);
    }
    else
    {
        float _2028 = _1975 + _765;
        float _2031 = (_765 * 2.0) + 1.0;
        float _2032 = (isnan(0.0) ? _2028 : (isnan(_2028) ? 0.0 : max(_2028, 0.0))) / _2031;
        float _2039 = _1994 + _765;
        float _2041 = (isnan(0.0) ? _2039 : (isnan(_2039) ? 0.0 : max(_2039, 0.0))) / _2031;
        _2062 = (((_2041 * cbLight._m0[_1982].x) * _1997) + ((_1979 * _2032) * _1978)) * 0.3183098733425140380859375;
        _2063 = (((_2041 * cbLight._m0[_1982].y) * _1997) + ((_1980 * _2032) * _1978)) * 0.3183098733425140380859375;
        _2064 = (((_2041 * cbLight._m0[_1982].z) * _1997) + ((_1981 * _2032) * _1978)) * 0.3183098733425140380859375;
    }
    uint _2068 = _1952 + 8u;
    float _2084 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1952].w)) * _764) * 0.949999988079071044921875);
    float _2085 = _2084 * _2084;
    float _2086 = cbLight._m0[_1952].x + _519;
    float _2087 = cbLight._m0[_1952].y + _520;
    float _2088 = cbLight._m0[_1952].z + _521;
    float _2092 = inversesqrt(dot(vec3(_2086, _2087, _2088), vec3(_2086, _2087, _2088)));
    float _2093 = _2092 * _2086;
    float _2094 = _2092 * _2087;
    float _2095 = _2092 * _2088;
    float _2096 = dot(vec3(_760, _761, _762), vec3(cbLight._m0[_1952].xyz));
    float _3866 = isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0));
    float _2099 = isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0));
    float _3877 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
    float _2100 = isnan(1.0) ? _3877 : (isnan(_3877) ? 1.0 : min(_3877, 1.0));
    float _2101 = dot(vec3(_760, _761, _762), vec3(_2093, _2094, _2095));
    float _3888 = isnan(0.0) ? _2101 : (isnan(_2101) ? 0.0 : max(_2101, 0.0));
    float _2104 = isnan(1.0) ? _3888 : (isnan(_3888) ? 1.0 : min(_3888, 1.0));
    float _2105 = dot(vec3(cbLight._m0[_1952].xyz), vec3(_2093, _2094, _2095));
    float _3899 = isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0));
    float _2109 = _2085 * _2085;
    float _2113 = ((_2104 * _2104) * (_2109 + (-1.0))) + 1.0;
    float _2124 = (exp2(log2(1.0 - (isnan(1.0) ? _3899 : (isnan(_3899) ? 1.0 : min(_3899, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2125 = 1.0 - _2085;
    float _2136 = (0.5 / (((_2100 * ((_2099 * _2125) + _2085)) + 9.9999999392252902907785028219223e-09) + (((_2100 * _2125) + _2085) * _2099))) * _2099;
    float _3910 = isnan(0.0) ? _2136 : (isnan(_2136) ? 0.0 : max(_2136, 0.0));
    float _2138 = (isnan(1.0) ? _3910 : (isnan(_3910) ? 1.0 : min(_3910, 1.0))) * (_2109 / ((_2113 * _2113) * 3.141590118408203125));
    uint _2154 = _1952 + 9u;
    float _2168 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1988].w)) * _764) * 0.949999988079071044921875);
    float _2169 = _2168 * _2168;
    float _2170 = cbLight._m0[_1988].x + _519;
    float _2171 = cbLight._m0[_1988].y + _520;
    float _2172 = cbLight._m0[_1988].z + _521;
    float _2176 = inversesqrt(dot(vec3(_2170, _2171, _2172), vec3(_2170, _2171, _2172)));
    float _2177 = _2176 * _2170;
    float _2178 = _2176 * _2171;
    float _2179 = _2176 * _2172;
    float _2180 = dot(vec3(_760, _761, _762), vec3(cbLight._m0[_1988].xyz));
    float _3921 = isnan(0.0) ? _2180 : (isnan(_2180) ? 0.0 : max(_2180, 0.0));
    float _2183 = isnan(1.0) ? _3921 : (isnan(_3921) ? 1.0 : min(_3921, 1.0));
    float _2184 = dot(vec3(_760, _761, _762), vec3(_2177, _2178, _2179));
    float _3932 = isnan(0.0) ? _2184 : (isnan(_2184) ? 0.0 : max(_2184, 0.0));
    float _2187 = isnan(1.0) ? _3932 : (isnan(_3932) ? 1.0 : min(_3932, 1.0));
    float _2188 = dot(vec3(cbLight._m0[_1988].xyz), vec3(_2177, _2178, _2179));
    float _3943 = isnan(0.0) ? _2188 : (isnan(_2188) ? 0.0 : max(_2188, 0.0));
    float _2192 = _2169 * _2169;
    float _2196 = ((_2187 * _2187) * (_2192 + (-1.0))) + 1.0;
    float _2205 = (exp2(log2(1.0 - (isnan(1.0) ? _3943 : (isnan(_3943) ? 1.0 : min(_3943, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2206 = 1.0 - _2169;
    float _2216 = (0.5 / (((_2100 * ((_2183 * _2206) + _2169)) + 9.9999999392252902907785028219223e-09) + (((_2100 * _2206) + _2169) * _2183))) * _2183;
    float _3954 = isnan(0.0) ? _2216 : (isnan(_2216) ? 0.0 : max(_2216, 0.0));
    float _2218 = (isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0))) * (_2192 / ((_2196 * _2196) * 3.141590118408203125));
    float _2228 = (((_2205 * cbLight._m0[_2154].x) * _2218) * _1997) + ((((cbLight._m0[_2068].x * _1944) * _2124) * _2138) * _1978);
    float _2229 = (((_2205 * cbLight._m0[_2154].y) * _2218) * _1997) + ((((cbLight._m0[_2068].y * _1945) * _2124) * _2138) * _1978);
    float _2230 = (((_2205 * cbLight._m0[_2154].z) * _2218) * _1997) + ((((cbLight._m0[_2068].z * _1946) * _2124) * _2138) * _1978);
    float _2366;
    float _2368;
    float _2370;
    float _2372;
    float _2374;
    float _2376;
    if (_1950.y == 0u)
    {
        float _2307 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2308 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2307;
        float _2309 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2307;
        float _2310 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2307;
        uvec4 _2322 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2323 = _2322.x;
        uint _2334 = uint((float(_2322.y) * floor(float(uint(cbSceneParam._m0[85u].y * _800) / _2323))) + floor(float(uint(cbSceneParam._m0[85u].x * _799) / _2323)));
        float _2344 = (log2(_2310 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2345 = isnan(0.0) ? _2344 : (isnan(_2344) ? 0.0 : max(_2344, 0.0));
        uint _2348 = uint(isnan(14.0) ? _2345 : (isnan(_2345) ? 14.0 : min(_2345, 14.0)));
        uint _2355 = _2322.z;
        float _2404;
        float _2406;
        float _2408;
        float _2410;
        float _2412;
        float _2414;
        if (((((1u << ((_2355 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2348 << 2u) + (_2334 << 6u)) >> 2u)).x) == 0u) || ((_2355 & 240u) == 0u))
        {
            _2404 = 0.0;
            _2406 = 0.0;
            _2408 = 0.0;
            _2410 = 0.0;
            _2412 = 0.0;
            _2414 = 0.0;
        }
        else
        {
            float _2405;
            float _2407;
            float _2409;
            float _2411;
            float _2413;
            float _2415;
            float _2596 = 0.0;
            float _2597 = 0.0;
            float _2598 = 0.0;
            float _2599 = 0.0;
            float _2600 = 0.0;
            float _2601 = 0.0;
            uint _2602 = 0u;
            uint _2611;
            bool _2612;
            for (;;)
            {
                _2611 = texelFetch(g_lightClassification, int((((_2348 << 5u) + (_2334 << 9u)) + (_2602 << 2u)) >> 2u)).x;
                _2612 = _2611 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2612)
                {
                    frontier_phi_58_pred = _2596;
                    frontier_phi_58_pred_1 = _2601;
                    frontier_phi_58_pred_2 = _2600;
                    frontier_phi_58_pred_3 = _2599;
                    frontier_phi_58_pred_4 = _2598;
                    frontier_phi_58_pred_5 = _2597;
                }
                else
                {
                    float _2833;
                    float _2834;
                    float _2835;
                    float _2836;
                    float _2837;
                    float _2838;
                    uint _2839;
                    _2833 = _2596;
                    _2834 = _2597;
                    _2835 = _2598;
                    _2836 = _2599;
                    _2837 = _2600;
                    _2838 = _2601;
                    _2839 = _2611;
                    float _2765;
                    float _2766;
                    float _2767;
                    float _2768;
                    float _2769;
                    float _2770;
                    for (;;)
                    {
                        uint _2843 = uint(findLSB(_2839)) + (_2602 << 5u);
                        uint _2840 = (_2839 + 4294967295u) & _2839;
                        uint _2845 = _2843 * 48u;
                        vec4 _2859 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2845)).x, texelFetch(g_PointLightRenderingBuffer, int(_2845 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2845 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2845 + 3u)).x));
                        uint _2865 = (_2843 * 48u) + 4u;
                        vec4 _2878 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2865)).x, texelFetch(g_PointLightRenderingBuffer, int(_2865 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2865 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2865 + 3u)).x));
                        float _2879 = _2878.x;
                        float _2880 = _2878.y;
                        float _2881 = _2878.z;
                        uint _2884 = (_2843 * 48u) + 8u;
                        vec3 _2895 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2884)).x, texelFetch(g_PointLightRenderingBuffer, int(_2884 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2884 + 2u)).x));
                        uint _2900 = (_2843 * 48u) + 12u;
                        vec2 _2908 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2900)).x, texelFetch(g_PointLightRenderingBuffer, int(_2900 + 1u)).x));
                        float _2914 = inversesqrt(dot(vec3(_2308, _2309, _2310), vec3(_2308, _2309, _2310)));
                        float _2915 = _2914 * _2308;
                        float _2916 = _2914 * _2309;
                        float _2917 = _2914 * _2310;
                        float _2918 = _2859.x - _2308;
                        float _2919 = _2859.y - _2309;
                        float _2920 = _2859.z - _2310;
                        float _2921 = dot(vec3(_2918, _2919, _2920), vec3(_2918, _2919, _2920));
                        float _2924 = inversesqrt(_2921);
                        float _2925 = _2924 * _2918;
                        float _2926 = _2924 * _2919;
                        float _2927 = _2924 * _2920;
                        float _2928 = dot(vec3(_818, _821, _824), vec3(_2925, _2926, _2927));
                        float _2933 = 1.0 - (_2921 * _2859.w);
                        float _3975 = isnan(0.0) ? _2933 : (isnan(_2933) ? 0.0 : max(_2933, 0.0));
                        float _2934 = isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0));
                        float _2935 = sqrt(_2921) * _2878.w;
                        float _2938 = 1.39999997615814208984375 / (_2935 + 1.39999997615814208984375);
                        float _2939 = _2938 * _2938;
                        float _2940 = 1.0 - _2939;
                        float _2942 = (_2940 * _2940) * _765;
                        float _2945 = ((_2940 * _2928) + _2939) + _2942;
                        float _2950 = _2935 * _2935;
                        float _2955 = ((isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : max(_2945, 0.0))) * _2934) / (((_2942 * 2.0) + 1.0) * ((_2950 * 0.699999988079071044921875) + 1.0));
                        float _2959 = dot(vec3(_2925, _2926, _2927), vec3(_2915, _2916, _2917));
                        float _3991 = isnan(0.0) ? _2959 : (isnan(_2959) ? 0.0 : max(_2959, 0.0));
                        float _2966 = dot(vec3((-0.0) - _2915, (-0.0) - _2916, (-0.0) - _2917), vec3(_818, _821, _824)) + 1.0;
                        float _2968 = (isnan(0.0) ? _2966 : (isnan(_2966) ? 0.0 : max(_2966, 0.0))) * 0.5;
                        float _2975 = ((_2968 * _2968) * _2908.x) * exp2((_2908.y * 32.0) * log2(isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0))));
                        float _2977 = _765 / (_765 + 1.0);
                        float _2993 = (-0.0) - _2308;
                        float _2994 = (-0.0) - _2309;
                        float _2995 = (-0.0) - _2310;
                        float _2999 = inversesqrt(dot(vec3(_2993, _2994, _2995), vec3(_2993, _2994, _2995)));
                        float _3000 = _2999 * _2993;
                        float _3001 = _2999 * _2994;
                        float _3002 = _2999 * _2995;
                        float _3010 = exp2(log2(1.0 / ((_2950 * 3.5) + 5.0)) * 0.25);
                        float _3011 = 1.0 - _881;
                        float _3018 = sqrt(1.0 - ((1.0 - (_3011 * _3011)) * (1.0 - (_3010 * _3010))));
                        float _3019 = _3018 * _3018;
                        float _3020 = _3019 * _3019;
                        float _3021 = _3000 + _2925;
                        float _3022 = _3001 + _2926;
                        float _3023 = _3002 + _2927;
                        float _3027 = inversesqrt(dot(vec3(_3021, _3022, _3023), vec3(_3021, _3022, _3023)));
                        float _3031 = dot(vec3(_818, _821, _824), vec3(_3000, _3001, _3002));
                        float _4007 = isnan(0.0) ? _3031 : (isnan(_3031) ? 0.0 : max(_3031, 0.0));
                        float _3034 = isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0));
                        float _3035 = dot(vec3(_818, _821, _824), vec3(_3027 * _3021, _3027 * _3022, _3027 * _3023));
                        float _4018 = isnan(0.0) ? _3035 : (isnan(_3035) ? 0.0 : max(_3035, 0.0));
                        float _3038 = isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0));
                        float _3042 = ((_3038 * _3038) * (_3020 + (-1.0))) + 1.0;
                        float _3043 = _2938 * _3019;
                        float _3044 = _3043 * _3043;
                        float _3047 = ((1.0 - _3044) * _2928) + _3044;
                        float _4029 = isnan(0.0) ? _3047 : (isnan(_3047) ? 0.0 : max(_3047, 0.0));
                        float _3048 = isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0));
                        float _3049 = 1.0 - _3019;
                        float _3059 = (0.5 / (((_3048 * ((_3034 * _3049) + _3019)) + 9.9999999392252902907785028219223e-09) + (((_3048 * _3049) + _3019) * _3034))) * _3048;
                        float _4040 = isnan(0.0) ? _3059 : (isnan(_3059) ? 0.0 : max(_3059, 0.0));
                        float _3070 = (((_3020 * 3.1415927410125732421875) * (isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0)))) / ((_3042 * _3042) * ((_2950 * 2.1991131305694580078125) + 3.141590118408203125))) * _2934;
                        _2768 = (((((_2879 * 0.3183098733425140380859375) * _2977) * _2975) + _2879) * _2955) + _2836;
                        _2769 = (((((_2880 * 0.3183098733425140380859375) * _2977) * _2975) + _2880) * _2955) + _2837;
                        _2770 = (((((_2881 * 0.3183098733425140380859375) * _2977) * _2975) + _2881) * _2955) + _2838;
                        _2765 = (_3070 * _2895.x) + _2833;
                        _2766 = (_3070 * _2895.y) + _2834;
                        _2767 = (_3070 * _2895.z) + _2835;
                        if (_2840 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2833 = _2765;
                            _2834 = _2766;
                            _2835 = _2767;
                            _2836 = _2768;
                            _2837 = _2769;
                            _2838 = _2770;
                            _2839 = _2840;
                        }
                    }
                    frontier_phi_58_pred = _2765;
                    frontier_phi_58_pred_1 = _2770;
                    frontier_phi_58_pred_2 = _2769;
                    frontier_phi_58_pred_3 = _2768;
                    frontier_phi_58_pred_4 = _2767;
                    frontier_phi_58_pred_5 = _2766;
                }
                _2405 = frontier_phi_58_pred;
                _2415 = frontier_phi_58_pred_1;
                _2413 = frontier_phi_58_pred_2;
                _2411 = frontier_phi_58_pred_3;
                _2409 = frontier_phi_58_pred_4;
                _2407 = frontier_phi_58_pred_5;
                uint _2603 = _2602 + 1u;
                if (_2603 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2596 = _2405;
                    _2597 = _2407;
                    _2598 = _2409;
                    _2599 = _2411;
                    _2600 = _2413;
                    _2601 = _2415;
                    _2602 = _2603;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2404 = _2405;
            _2406 = _2407;
            _2408 = _2409;
            _2410 = _2411;
            _2412 = _2413;
            _2414 = _2415;
        }
        float _2419 = isnan(1.0) ? _860 : (isnan(_860) ? 1.0 : min(_860, 1.0));
        _2366 = (_2419 * _2410) + _2062;
        _2368 = (_2419 * _2412) + _2063;
        _2370 = (_2419 * _2414) + _2064;
        _2372 = ((_2404 * 0.039999999105930328369140625) * _2419) + _2228;
        _2374 = ((_2406 * 0.039999999105930328369140625) * _2419) + _2229;
        _2376 = ((_2408 * 0.039999999105930328369140625) * _2419) + _2230;
    }
    else
    {
        _2366 = _2062;
        _2368 = _2063;
        _2370 = _2064;
        _2372 = _2228;
        _2374 = _2229;
        _2376 = _2230;
    }
    float _2493;
    float _2494;
    float _2495;
    if (_765 > 0.0)
    {
        uint _2426 = _1952 + 4u;
        float _2432 = (-0.0) - _519;
        float _2433 = (-0.0) - _520;
        float _2434 = (-0.0) - _521;
        float _2435 = dot(vec3(cbLight._m0[_1952].xyz), vec3(_2432, _2433, _2434));
        float _4056 = isnan(0.0) ? _2435 : (isnan(_2435) ? 0.0 : max(_2435, 0.0));
        float _2439 = _871 + 1.0;
        float _2441 = (isnan(0.0) ? _2439 : (isnan(_2439) ? 0.0 : max(_2439, 0.0))) * 0.5;
        float _2446 = _2441 * _2441;
        float _2447 = _2446 * exp2(log2(isnan(1.0) ? _4056 : (isnan(_4056) ? 1.0 : min(_4056, 1.0))) * 32.0);
        float _2449 = _765 / (_765 + 1.0);
        float _2450 = isnan(_1961) ? 1.0 : (isnan(1.0) ? _1961 : min(1.0, _1961));
        uint _2463 = _1952 + 5u;
        float _2469 = dot(vec3(cbLight._m0[_1988].xyz), vec3(_2432, _2433, _2434));
        float _4077 = isnan(0.0) ? _2469 : (isnan(_2469) ? 0.0 : max(_2469, 0.0));
        float _2476 = _2446 * exp2(log2(isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0))) * 32.0);
        float _2477 = isnan(_1962) ? 1.0 : (isnan(1.0) ? _1962 : min(1.0, _1962));
        _2493 = ((((_2476 * cbLight._m0[_2463].x) * _2449) * _2477) + ((((cbLight._m0[_2426].x * _1944) * _2447) * _2449) * _2450)) * 0.3183098733425140380859375;
        _2494 = ((((_2476 * cbLight._m0[_2463].y) * _2449) * _2477) + ((((cbLight._m0[_2426].y * _1945) * _2447) * _2449) * _2450)) * 0.3183098733425140380859375;
        _2495 = ((((_2476 * cbLight._m0[_2463].z) * _2449) * _2477) + ((((cbLight._m0[_2426].z * _1946) * _2447) * _2449) * _2450)) * 0.3183098733425140380859375;
    }
    else
    {
        _2493 = 0.0;
        _2494 = 0.0;
        _2495 = 0.0;
    }
    float _4093 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _4104 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _4115 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    float _4126 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _2510 = (isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0))) * ((_2366 + ((isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0))) * _860)) + _2493);
    float _2511 = (isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0))) * ((_2368 + ((isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0))) * _860)) + _2494);
    float _2512 = (isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0))) * ((_2370 + ((isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0))) * _860)) + _2495);
    float _2516 = 0.959999978542327880859375 - (exp2(log2(1.0 - _875) * 5.0) * 0.959999978542327880859375);
    float _2527 = (_2510 + ((_2372 + ((isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0))) * _1703)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _699.x) * _2516) - _2510) * _745);
    float _2529 = (_2511 + ((_2374 + ((isnan(0.0) ? _1919 : (isnan(_1919) ? 0.0 : max(_1919, 0.0))) * _1703)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _699.y) * _2516) - _2511) * _745);
    float _2531 = (_2512 + ((_2376 + ((isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0))) * _1703)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _699.z) * _2516) - _2512) * _745);
    float _2536 = cbInstanceData._m0[_309 + 6u].w * (isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0)));
    float _2541 = _799 / cbSceneParam._m0[86u].x;
    float _2542 = _800 / cbSceneParam._m0[86u].y;
    vec4 _2556 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2541, _2542, (log2((isnan(cbSceneParam._m0[77u].w) ? _782 : (isnan(_782) ? cbSceneParam._m0[77u].w : min(_782, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2558 = _2556.x;
    float _2559 = _2556.y;
    float _2560 = _2556.z;
    float _2561 = _2556.w;
    float _2654;
    float _2656;
    float _2658;
    float _2660;
    if (_782 > cbSceneParam._m0[78u].w)
    {
        float _2617 = isnan(_782) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _782 : min(cbSceneParam._m0[80u].w, _782));
        float _2618 = _2617 / _782;
        float _2629 = _2618 * _301;
        float _2630 = _302 * _2618;
        float _2631 = (-0.0) - _2630;
        float _2632 = _2618 * _303;
        float _2634 = (cbSceneParam._m0[77u].w * _2631) / _2617;
        float _2635 = _2634 + cbSceneParam._m0[79u].w;
        float _2636 = cbSceneParam._m0[79u].w - _2630;
        float _2642 = sqrt(((_2629 * _2629) + (_2630 * _2630)) + (_2632 * _2632));
        float _2645 = (1.0 - (cbSceneParam._m0[77u].w / _2617)) * _2642;
        float _2650 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2652 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3075;
        if (abs((_2631 - _2634) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3075 = ((((_2635 > 0.0) ? exp2(_2650 * _2635) : (2.0 - exp2(_2652 * _2635))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2645;
        }
        else
        {
            float _2790 = 1.0 / cbSceneParam._m0[80u].x;
            float _2791 = isnan(_2636) ? _2635 : (isnan(_2635) ? _2636 : max(_2635, _2636));
            float _2792 = isnan(_2636) ? _2635 : (isnan(_2635) ? _2636 : min(_2635, _2636));
            float _2801 = isnan(0.0) ? _2791 : (isnan(_2791) ? 0.0 : min(_2791, 0.0));
            float _2802 = isnan(0.0) ? _2792 : (isnan(_2792) ? 0.0 : min(_2792, 0.0));
            _3075 = ((abs(_2642 / _2631) * cbSceneParam._m0[80u].y) * ((((_2801 - _2802) * 2.0) - ((exp2(_2650 * (isnan(0.0) ? _2791 : (isnan(_2791) ? 0.0 : max(_2791, 0.0)))) - exp2(_2650 * (isnan(0.0) ? _2792 : (isnan(_2792) ? 0.0 : max(_2792, 0.0))))) * _2790)) - ((exp2(_2652 * _2801) - exp2(_2652 * _2802)) * _2790))) + (_2645 * cbSceneParam._m0[80u].z);
        }
        vec4 _3077 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2541, _2542, 1.0), 0.0);
        float _3086 = exp2((_3075 * (-1.44269502162933349609375)) * (1.0 - _3077.w));
        float _3087 = log2(_3086);
        float _3103 = log2(_2561);
        _2654 = (exp2(_3103 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3087 * cbSceneParam._m0[78u].x)) * _3077.x) / cbSceneParam._m0[78u].x)) + _2558;
        _2656 = (exp2(_3103 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3087 * cbSceneParam._m0[78u].y)) * _3077.y) / cbSceneParam._m0[78u].y)) + _2559;
        _2658 = (exp2(_3103 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3087 * cbSceneParam._m0[78u].z)) * _3077.z) / cbSceneParam._m0[78u].z)) + _2560;
        _2660 = _3086 * _2561;
    }
    else
    {
        _2654 = _2558;
        _2656 = _2559;
        _2658 = _2560;
        _2660 = _2561;
    }
    bool _3113;
    float _2715;
    vec4 _2718;
    float _2720;
    vec4 _2722;
    float _2730;
    float _2731;
    float _2732;
    float _2733;
    bool _2743;
    for (;;)
    {
        bool _2672 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2673 = log2(_2660);
        float _2680 = exp2(_2673 * cbSceneParam._m0[78u].x) * _2527;
        float _2681 = exp2(_2673 * cbSceneParam._m0[78u].y) * _2529;
        float _2682 = exp2(_2673 * cbSceneParam._m0[78u].z) * _2531;
        vec4 _2690 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_799, _800));
        float _2692 = _2690.x;
        float _2713 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2692)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2692))) - _782) * cbMtdParam._m0[17u].y;
        float _4177 = isnan(0.0) ? _2713 : (isnan(_2713) ? 0.0 : max(_2713, 0.0));
        _2715 = _2536 * (isnan(1.0) ? _4177 : (isnan(_4177) ? 1.0 : min(_4177, 1.0)));
        float _2716 = _789 + (-0.5);
        _2718 = cbMtdParam._m0[1u];
        _2720 = _2718.y * _2716;
        _2722 = cbMatDynParam._m0[0u];
        float _2729 = (roundEven(_2722.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2730 = _2729 * (_2672 ? _2680 : (_2680 + (cbSceneParam._m0[72u].w * _2654)));
        _2731 = _2729 * (_2672 ? _2681 : (_2681 + (cbSceneParam._m0[72u].w * _2656)));
        _2732 = _2729 * (_2672 ? _2682 : (_2682 + (cbSceneParam._m0[72u].w * _2658)));
        _2733 = _2716 * 0.999000012874603271484375;
        _2743 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2743)
        {
            if ((cbInstanceData._m0[_309 + 7u].x + _2733) < 0.5)
            {
                _3113 = true;
                break;
            }
        }
        uint _2825 = _837 + uint(_2722.w);
        if ((cbInstanceData._m0[_2825].w < 1.0) && ((cbInstanceData._m0[_2825].w + _2733) < 0.5))
        {
            _3113 = true;
            break;
        }
        if ((_2720 + _429) < _2718.x)
        {
            _3113 = true;
            break;
        }
        _3113 = false;
        break;
    }
    float _3118;
    if (_3113)
    {
        discard_state = true;
        _3118 = 0.0;
    }
    else
    {
        _3118 = _2715;
    }
    SV_Target.x = _2730;
    SV_Target.y = _2731;
    SV_Target.z = _2732;
    SV_Target.w = _3118;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2715;
    discard_exit();
}


