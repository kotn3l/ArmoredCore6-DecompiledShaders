#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1241;
float _3182;
float _3183;
float _3184;
float _3185;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _207 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _208 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _209 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _215 = inversesqrt(dot(vec3(_207, _208, _209), vec3(_207, _208, _209)));
    float _216 = _215 * _207;
    float _217 = _215 * _208;
    float _218 = _215 * _209;
    float _222 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _223 = _222 * NORMAL.x;
    float _224 = _222 * NORMAL.y;
    float _225 = _222 * NORMAL.z;
    float _229 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _230 = _229 * TANGENT.x;
    float _231 = _229 * TANGENT.y;
    float _232 = _229 * TANGENT.z;
    float _237;
    float _238;
    float _239;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _237 = (-0.0) - _223;
        _238 = (-0.0) - _224;
        _239 = (-0.0) - _225;
    }
    else
    {
        _237 = _223;
        _238 = _224;
        _239 = _225;
    }
    float _286 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _296 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _286);
    float _297 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _286);
    float _298 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _286);
    uint _304 = uint(roundEven(NORMAL.w)) * 13u;
    uint _309 = _304 + 1u;
    uint _313 = _304 + 2u;
    float _322 = sqrt(((cbInstanceData._m0[_309].x * cbInstanceData._m0[_309].x) + (cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x)) + (cbInstanceData._m0[_313].x * cbInstanceData._m0[_313].x));
    float _323 = _322 * TEXCOORD.z;
    float _324 = _322 * TEXCOORD.w;
    vec4 _337 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _323) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _324) + cbTextureTilingScale._m0[8u].w));
    vec4 _358 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _366 = (_358.x * 2.0) + (-1.0);
    float _368 = (_358.y * 2.0) + (-1.0);
    float _369 = dot(vec2(_366, _368), vec2(_366, _368));
    float _3194 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
    float _375 = sqrt(1.0 - (isnan(1.0) ? _3194 : (isnan(_3194) ? 1.0 : min(_3194, 1.0))));
    float _378 = fma(_375, _237, fma(_368, _230, _366 * _216));
    float _381 = fma(_375, _238, fma(_368, _231, _366 * _217));
    float _384 = fma(_375, _239, fma(_368, _232, _366 * _218));
    float _388 = inversesqrt(dot(vec3(_378, _381, _384), vec3(_378, _381, _384)));
    vec4 _421 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _426 = _421.w;
    float _438 = dot(vec3(_296, _297, _298), vec3(_216, _217, _218));
    float _441 = dot(vec3(_296, _297, _298), vec3(_230, _231, _232));
    float _444 = dot(vec3(_296, _297, _298), vec3(_237, _238, _239));
    float _450 = inversesqrt(dot(vec3(_438, _441, _444), vec3(_438, _441, _444)));
    float _472 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _492 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_438 * cbMtdParam._m0[14u].x) * _450) * _472) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_441 * cbMtdParam._m0[14u].x) * _450) * _472) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _515 = inversesqrt(dot(vec3(_296, _297, _298), vec3(_296, _297, _298)));
    float _516 = _515 * _296;
    float _517 = _515 * _297;
    float _518 = _515 * _298;
    float _519 = dot(vec4(_516, _517, _518, 0.0), vec4(_237, _238, _239, 0.0));
    float _522 = _519 - cbMtdParam._m0[15u].z;
    float _3205 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _529 = exp2(log2(1.0 - (isnan(1.0) ? _3205 : (isnan(_3205) ? 1.0 : min(_3205, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _544 = ((((_421.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _492.x) * cbMtdParam._m0[9u].x) * ((_529 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _549 = ((((_421.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _492.y) * cbMtdParam._m0[9u].y) * ((_529 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _554 = ((((_421.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _492.z) * cbMtdParam._m0[9u].z) * ((_529 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _563 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _323) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _324) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3221 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _564 = isnan(1.0) ? _3221 : (isnan(_3221) ? 1.0 : min(_3221, 1.0));
    float _571 = (_564 * ((_337.x * cbMtdParam._m0[10u].x) - _544)) + _544;
    float _572 = (((_337.y * cbMtdParam._m0[10u].y) - _549) * _564) + _549;
    float _573 = (((_337.z * cbMtdParam._m0[10u].z) - _554) * _564) + _554;
    vec4 _585 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _323) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _324) + cbTextureTilingScale._m0[9u].w));
    float _592 = (_585.x * 2.0) + (-1.0);
    float _593 = (_585.y * 2.0) + (-1.0);
    float _594 = dot(vec2(_592, _593), vec2(_592, _593));
    float _3232 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _608 = (cbMtdParam._m0[16u].y + _358.z) + cbMtdParam._m0[17u].z;
    float _611 = ((_585.z - _608) * _564) + _608;
    float _623 = (((_592 - _366) + (cbMtdParam._m0[14u].z * _366)) * _564) + _366;
    float _624 = (((_593 - _368) + (cbMtdParam._m0[14u].z * _368)) * _564) + _368;
    float _625 = (_564 * (sqrt(1.0 - (isnan(1.0) ? _3232 : (isnan(_3232) ? 1.0 : min(_3232, 1.0)))) - _375)) + _375;
    float _641 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _643 = _641 - (_641 * _564);
    float _663 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + ((_388 * _378) * cbMtdParam._m0[18u].y));
    float _664 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + ((_388 * _381) * cbMtdParam._m0[18u].y));
    float _671 = isnan(cbInstanceData._m0[8u].x) ? _663 : (isnan(_663) ? cbInstanceData._m0[8u].x : max(_663, cbInstanceData._m0[8u].x));
    float _672 = isnan(cbInstanceData._m0[8u].y) ? _664 : (isnan(_664) ? cbInstanceData._m0[8u].y : max(_664, cbInstanceData._m0[8u].y));
    vec4 _676 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _671 : (isnan(_671) ? cbInstanceData._m0[8u].z : min(_671, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _672 : (isnan(_672) ? cbInstanceData._m0[8u].w : min(_672, cbInstanceData._m0[8u].w))));
    float _709 = _519 - cbMtdParam._m0[15u].x;
    float _3263 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _719 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3263 : (isnan(_3263) ? 1.0 : min(_3263, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3279 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _720 = isnan(1.0) ? _3279 : (isnan(_3279) ? 1.0 : min(_3279, 1.0));
    float _722 = _720 - (_564 * _720);
    float _726 = fma(_625, _237, fma(_624, _230, _623 * _216));
    float _729 = fma(_625, _238, fma(_624, _231, _623 * _217));
    float _732 = fma(_625, _239, fma(_624, _232, _623 * _218));
    float _736 = inversesqrt(dot(vec3(_726, _729, _732), vec3(_726, _729, _732)));
    float _737 = _736 * _726;
    float _738 = _736 * _729;
    float _739 = _736 * _732;
    float _3290 = isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0));
    float _740 = isnan(1.0) ? _3290 : (isnan(_3290) ? 1.0 : min(_3290, 1.0));
    float _3301 = isnan(0.0) ? _611 : (isnan(_611) ? 0.0 : max(_611, 0.0));
    float _741 = isnan(1.0) ? _3301 : (isnan(_3301) ? 1.0 : min(_3301, 1.0));
    float _742 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _3317 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
    float _3328 = isnan(0.0) ? _572 : (isnan(_572) ? 0.0 : max(_572, 0.0));
    float _3339 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    float _759 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _764 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _766 = _764.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _921 = sqrt(((_296 * _296) + (_297 * _297)) + (_298 * _298));
        float _927 = (cbMatDynParam._m0[5u].x * _921) + cbMatDynParam._m0[5u].y;
        float _3350 = isnan(0.0) ? _927 : (isnan(_927) ? 0.0 : max(_927, 0.0));
        float _928 = isnan(1.0) ? _3350 : (isnan(_3350) ? 1.0 : min(_3350, 1.0));
        float _932 = (cbMatDynParam._m0[5u].z * _921) + cbMatDynParam._m0[5u].w;
        float _3361 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3361 : (isnan(_3361) ? 1.0 : min(_3361, 1.0))) - _928)) + _928) < ((_766 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _776 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _777 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _795 = fma(_739, cbSceneParam._m0[5u].z, fma(_738, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _737));
    float _798 = fma(_739, cbSceneParam._m0[6u].z, fma(_738, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _737));
    float _801 = fma(_739, cbSceneParam._m0[7u].z, fma(_738, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _737));
    uint _814 = _304 + 9u;
    uint _815 = _814 + uint(cbMatDynParam._m0[0u].w);
    float _821 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3317 : (isnan(_3317) ? 1.0 : min(_3317, 1.0)))) * cbInstanceData._m0[_815].x;
    float _822 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3328 : (isnan(_3328) ? 1.0 : min(_3328, 1.0)))) * cbInstanceData._m0[_815].y;
    float _823 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3339 : (isnan(_3339) ? 1.0 : min(_3339, 1.0)))) * cbInstanceData._m0[_815].z;
    float _3372 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _824 = isnan(1.0) ? _3372 : (isnan(_3372) ? 1.0 : min(_3372, 1.0));
    float _3383 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _825 = isnan(1.0) ? _3383 : (isnan(_3383) ? 1.0 : min(_3383, 1.0));
    float _3394 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _826 = isnan(1.0) ? _3394 : (isnan(_3394) ? 1.0 : min(_3394, 1.0));
    vec4 _834 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _776, cbSceneParam._m0[86u].y * _777));
    float _837 = _834.x * TEXCOORD_5.w;
    float _838 = dot(vec3(_737, _738, _739), vec3(_516, _517, _518));
    float _841 = _838 * 2.0;
    float _845 = (_841 * _737) - _516;
    float _846 = (_841 * _738) - _517;
    float _847 = (_841 * _739) - _518;
    float _848 = dot(vec3(_516, _517, _518), vec3(_737, _738, _739));
    float _851 = abs(_848);
    float _3405 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
    float _852 = isnan(1.0) ? _3405 : (isnan(_3405) ? 1.0 : min(_3405, 1.0));
    float _858 = sqrt(_741);
    float _870 = exp2((_858 * 5.0) * log2(1.0 - (_852 * 0.999000012874603271484375))) / (4.0 - (_858 * 3.0));
    float _902 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _906 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _910 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1240;
    float _1242;
    float _1243;
    float _1244;
    float _1245;
    float _1246;
    float _1247;
    float _1248;
    float _1249;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _965 = fma(_910, cbModelParam._m0[26u].z, fma(_906, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _902));
        float _969 = fma(_910, cbModelParam._m0[27u].z, fma(_906, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _902));
        float _973 = fma(_910, cbModelParam._m0[28u].z, fma(_906, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _902));
        float _998 = _902 + _737;
        float _999 = _906 + _738;
        float _1000 = _910 + _739;
        float _1010 = fma(_1000, cbModelParam._m0[26u].z, fma(_999, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _998)) - _965;
        float _1011 = fma(_1000, cbModelParam._m0[27u].z, fma(_999, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _998)) - _969;
        float _1012 = fma(_1000, cbModelParam._m0[28u].z, fma(_999, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _998)) - _973;
        float _1016 = inversesqrt(dot(vec3(_1010, _1011, _1012), vec3(_1010, _1011, _1012)));
        float _1029 = ((_1016 * _1010) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_965 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1030 = ((_1016 * _1011) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_969 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1031 = ((_1016 * _1012) / cbModelParam._m0[34u].z) + ((((((_973 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1034 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1029, _1030, _1031), 0.0);
        vec4 _1041 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1029, _1030, _1031), 0.0);
        vec4 _1048 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1029, _1030, _1031), 0.0);
        vec4 _1055 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1029, _1030, _1031), 0.0);
        float _1068 = exp2((_1034.w + (-0.5)) * 20.0) * 2.0;
        float _1069 = _1068 * (_1034.x + (-0.5));
        float _1070 = _1068 * (_1034.y + (-0.5));
        float _1071 = _1068 * (_1034.z + (-0.5));
        float _1078 = exp2((_1041.w + (-0.5)) * 20.0) * 2.0;
        float _1079 = _1078 * (_1041.x + (-0.5));
        float _1080 = _1078 * (_1041.y + (-0.5));
        float _1081 = _1078 * (_1041.z + (-0.5));
        float _1088 = exp2((_1048.w + (-0.5)) * 20.0) * 2.0;
        float _1089 = _1088 * (_1048.x + (-0.5));
        float _1090 = _1088 * (_1048.y + (-0.5));
        float _1091 = _1088 * (_1048.z + (-0.5));
        float _1098 = exp2((_1055.w + (-0.5)) * 20.0) * 2.0;
        float _1099 = _1098 * (_1055.x + (-0.5));
        float _1100 = _1098 * (_1055.y + (-0.5));
        float _1101 = _1098 * (_1055.z + (-0.5));
        float _1102 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1103 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
        float _1104 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1105 = _1069 * 0.5;
        float _1106 = _1079 * 0.5;
        float _1107 = _1089 * 0.5;
        float _1108 = dot(vec3(_1105, _1106, _1107), vec3(_1105, _1106, _1107));
        float _1113 = (_1108 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1108);
        float _1122 = (dot(vec3(_737, _738, _739), vec3(_1113 * _1105, _1113 * _1106, _1113 * _1107)) + 1.0) * 0.5;
        float _3431 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
        float _1132 = sqrt(((_1106 * _1106) + (_1105 * _1105)) + (_1107 * _1107)) / (_1102 + 9.9999997473787516355514526367188e-06);
        float _3442 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
        float _1133 = isnan(1.0) ? _3442 : (isnan(_3442) ? 1.0 : min(_3442, 1.0));
        float _1134 = _1133 * 2.0;
        float _1138 = (1.0 - _1133) / (_1133 + 1.0);
        float _3453 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
        float _1139 = isnan(1.0) ? _3453 : (isnan(_3453) ? 1.0 : min(_3453, 1.0));
        float _1148 = ((((1.0 - _1139) * (_1134 + 2.0)) * exp2(log2(isnan(1.0) ? _3431 : (isnan(_3431) ? 1.0 : min(_3431, 1.0))) * (_1134 + 1.0))) + _1139) * _1102;
        float _1149 = _1070 * 0.5;
        float _1150 = _1080 * 0.5;
        float _1151 = _1090 * 0.5;
        float _1152 = dot(vec3(_1149, _1150, _1151), vec3(_1149, _1150, _1151));
        float _1157 = (_1152 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1152);
        float _1165 = (dot(vec3(_737, _738, _739), vec3(_1157 * _1149, _1157 * _1150, _1157 * _1151)) + 1.0) * 0.5;
        float _3464 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1174 = sqrt(((_1150 * _1150) + (_1149 * _1149)) + (_1151 * _1151)) / (_1103 + 9.9999997473787516355514526367188e-06);
        float _3475 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
        float _1175 = isnan(1.0) ? _3475 : (isnan(_3475) ? 1.0 : min(_3475, 1.0));
        float _1176 = _1175 * 2.0;
        float _1180 = (1.0 - _1175) / (_1175 + 1.0);
        float _3486 = isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0));
        float _1181 = isnan(1.0) ? _3486 : (isnan(_3486) ? 1.0 : min(_3486, 1.0));
        float _1190 = ((((1.0 - _1181) * (_1176 + 2.0)) * exp2(log2(isnan(1.0) ? _3464 : (isnan(_3464) ? 1.0 : min(_3464, 1.0))) * (_1176 + 1.0))) + _1181) * _1103;
        float _1191 = _1071 * 0.5;
        float _1192 = _1081 * 0.5;
        float _1193 = _1091 * 0.5;
        float _1194 = dot(vec3(_1191, _1192, _1193), vec3(_1191, _1192, _1193));
        float _1199 = (_1194 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1194);
        float _1207 = (dot(vec3(_737, _738, _739), vec3(_1199 * _1191, _1199 * _1192, _1199 * _1193)) + 1.0) * 0.5;
        float _3497 = isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0));
        float _1216 = sqrt(((_1192 * _1192) + (_1191 * _1191)) + (_1193 * _1193)) / (_1104 + 9.9999997473787516355514526367188e-06);
        float _3508 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
        float _1217 = isnan(1.0) ? _3508 : (isnan(_3508) ? 1.0 : min(_3508, 1.0));
        float _1218 = _1217 * 2.0;
        float _1222 = (1.0 - _1217) / (_1217 + 1.0);
        float _3519 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
        float _1223 = isnan(1.0) ? _3519 : (isnan(_3519) ? 1.0 : min(_3519, 1.0));
        float _1232 = ((((1.0 - _1223) * (_1218 + 2.0)) * exp2(log2(isnan(1.0) ? _3497 : (isnan(_3497) ? 1.0 : min(_3497, 1.0))) * (_1218 + 1.0))) + _1223) * _1104;
        _1240 = _1071;
        _1242 = _1070;
        _1243 = _1069;
        _1244 = _1081;
        _1245 = _1080;
        _1246 = _1079;
        _1247 = _1091;
        _1248 = _1090;
        _1249 = _1089;
        _1250 = _1104;
        _1251 = _1103;
        _1252 = _1102;
        _1253 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0)));
        _1254 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0)));
        _1255 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0)));
    }
    else
    {
        _1240 = _1241;
        _1242 = _1241;
        _1243 = _1241;
        _1244 = _1241;
        _1245 = _1241;
        _1246 = _1241;
        _1247 = _1241;
        _1248 = _1241;
        _1249 = _1241;
        _1250 = _1241;
        _1251 = _1241;
        _1252 = _1241;
        _1253 = 0.0;
        _1254 = 0.0;
        _1255 = 0.0;
    }
    float _1553;
    float _1554;
    float _1555;
    float _1556;
    float _1557;
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1284 = fma(_910, cbModelParam._m0[30u].z, fma(_906, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _902));
        float _1288 = fma(_910, cbModelParam._m0[31u].z, fma(_906, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _902));
        float _1292 = fma(_910, cbModelParam._m0[32u].z, fma(_906, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _902));
        float _1315 = _902 + _737;
        float _1316 = _906 + _738;
        float _1317 = _910 + _739;
        float _1327 = fma(_1317, cbModelParam._m0[30u].z, fma(_1316, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1315)) - _1284;
        float _1328 = fma(_1317, cbModelParam._m0[31u].z, fma(_1316, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1315)) - _1288;
        float _1329 = fma(_1317, cbModelParam._m0[32u].z, fma(_1316, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1315)) - _1292;
        float _1333 = inversesqrt(dot(vec3(_1327, _1328, _1329), vec3(_1327, _1328, _1329)));
        float _1346 = ((_1333 * _1327) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1284 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1347 = ((_1333 * _1328) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1288 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1348 = ((_1333 * _1329) / cbModelParam._m0[35u].z) + ((((((_1292 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1350 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1346, _1347, _1348), 0.0);
        vec4 _1357 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1346, _1347, _1348), 0.0);
        vec4 _1364 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1346, _1347, _1348), 0.0);
        vec4 _1371 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1346, _1347, _1348), 0.0);
        float _1383 = exp2((_1350.w + (-0.5)) * 20.0) * 2.0;
        float _1384 = _1383 * (_1350.x + (-0.5));
        float _1385 = _1383 * (_1350.y + (-0.5));
        float _1386 = _1383 * (_1350.z + (-0.5));
        float _1393 = exp2((_1357.w + (-0.5)) * 20.0) * 2.0;
        float _1394 = _1393 * (_1357.x + (-0.5));
        float _1395 = _1393 * (_1357.y + (-0.5));
        float _1396 = _1393 * (_1357.z + (-0.5));
        float _1403 = exp2((_1364.w + (-0.5)) * 20.0) * 2.0;
        float _1404 = _1403 * (_1364.x + (-0.5));
        float _1405 = _1403 * (_1364.y + (-0.5));
        float _1406 = _1403 * (_1364.z + (-0.5));
        float _1413 = exp2((_1371.w + (-0.5)) * 20.0) * 2.0;
        float _1414 = _1413 * (_1371.x + (-0.5));
        float _1415 = _1413 * (_1371.y + (-0.5));
        float _1416 = _1413 * (_1371.z + (-0.5));
        float _1417 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1418 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1419 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1420 = _1384 * 0.5;
        float _1421 = _1394 * 0.5;
        float _1422 = _1404 * 0.5;
        float _1423 = dot(vec3(_1420, _1421, _1422), vec3(_1420, _1421, _1422));
        float _1428 = (_1423 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1423);
        float _1436 = (dot(vec3(_737, _738, _739), vec3(_1428 * _1420, _1428 * _1421, _1428 * _1422)) + 1.0) * 0.5;
        float _3560 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1445 = sqrt(((_1421 * _1421) + (_1420 * _1420)) + (_1422 * _1422)) / (_1417 + 9.9999997473787516355514526367188e-06);
        float _3571 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1446 = isnan(1.0) ? _3571 : (isnan(_3571) ? 1.0 : min(_3571, 1.0));
        float _1447 = _1446 * 2.0;
        float _1451 = (1.0 - _1446) / (_1446 + 1.0);
        float _3582 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1452 = isnan(1.0) ? _3582 : (isnan(_3582) ? 1.0 : min(_3582, 1.0));
        float _1461 = ((((1.0 - _1452) * (_1447 + 2.0)) * exp2(log2(isnan(1.0) ? _3560 : (isnan(_3560) ? 1.0 : min(_3560, 1.0))) * (_1447 + 1.0))) + _1452) * _1417;
        float _1462 = _1385 * 0.5;
        float _1463 = _1395 * 0.5;
        float _1464 = _1405 * 0.5;
        float _1465 = dot(vec3(_1462, _1463, _1464), vec3(_1462, _1463, _1464));
        float _1470 = (_1465 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1465);
        float _1478 = (dot(vec3(_737, _738, _739), vec3(_1470 * _1462, _1470 * _1463, _1470 * _1464)) + 1.0) * 0.5;
        float _3593 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1487 = sqrt(((_1463 * _1463) + (_1462 * _1462)) + (_1464 * _1464)) / (_1418 + 9.9999997473787516355514526367188e-06);
        float _3604 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1488 = isnan(1.0) ? _3604 : (isnan(_3604) ? 1.0 : min(_3604, 1.0));
        float _1489 = _1488 * 2.0;
        float _1493 = (1.0 - _1488) / (_1488 + 1.0);
        float _3615 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1494 = isnan(1.0) ? _3615 : (isnan(_3615) ? 1.0 : min(_3615, 1.0));
        float _1503 = ((((1.0 - _1494) * (_1489 + 2.0)) * exp2(log2(isnan(1.0) ? _3593 : (isnan(_3593) ? 1.0 : min(_3593, 1.0))) * (_1489 + 1.0))) + _1494) * _1418;
        float _1504 = _1386 * 0.5;
        float _1505 = _1396 * 0.5;
        float _1506 = _1406 * 0.5;
        float _1507 = dot(vec3(_1504, _1505, _1506), vec3(_1504, _1505, _1506));
        float _1512 = (_1507 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1507);
        float _1520 = (dot(vec3(_737, _738, _739), vec3(_1512 * _1504, _1512 * _1505, _1512 * _1506)) + 1.0) * 0.5;
        float _3626 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
        float _1529 = sqrt(((_1505 * _1505) + (_1504 * _1504)) + (_1506 * _1506)) / (_1419 + 9.9999997473787516355514526367188e-06);
        float _3637 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1530 = isnan(1.0) ? _3637 : (isnan(_3637) ? 1.0 : min(_3637, 1.0));
        float _1531 = _1530 * 2.0;
        float _1535 = (1.0 - _1530) / (_1530 + 1.0);
        float _3648 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1536 = isnan(1.0) ? _3648 : (isnan(_3648) ? 1.0 : min(_3648, 1.0));
        float _1545 = ((((1.0 - _1536) * (_1531 + 2.0)) * exp2(log2(isnan(1.0) ? _3626 : (isnan(_3626) ? 1.0 : min(_3626, 1.0))) * (_1531 + 1.0))) + _1536) * _1419;
        _1553 = _1386;
        _1554 = _1385;
        _1555 = _1384;
        _1556 = _1396;
        _1557 = _1395;
        _1558 = _1394;
        _1559 = _1406;
        _1560 = _1405;
        _1561 = _1404;
        _1562 = _1419;
        _1563 = _1418;
        _1564 = _1417;
        _1565 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0)));
        _1566 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0)));
        _1567 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0)));
    }
    else
    {
        _1553 = _1241;
        _1554 = _1241;
        _1555 = _1241;
        _1556 = _1241;
        _1557 = _1241;
        _1558 = _1241;
        _1559 = _1241;
        _1560 = _1241;
        _1561 = _1241;
        _1562 = _1241;
        _1563 = _1241;
        _1564 = _1241;
        _1565 = 0.0;
        _1566 = 0.0;
        _1567 = 0.0;
    }
    float _1577 = (cbModelParam._m0[1u].x * (_1565 - _1253)) + _1253;
    float _1578 = (cbModelParam._m0[1u].x * (_1566 - _1254)) + _1254;
    float _1579 = (cbModelParam._m0[1u].x * (_1567 - _1255)) + _1255;
    float _1600 = fma(_1579, cbSceneParam._m0[89u].z, fma(_1578, cbSceneParam._m0[89u].y, _1577 * cbSceneParam._m0[89u].x));
    float _1603 = fma(_1579, cbSceneParam._m0[90u].z, fma(_1578, cbSceneParam._m0[90u].y, _1577 * cbSceneParam._m0[90u].x));
    float _1606 = fma(_1579, cbSceneParam._m0[91u].z, fma(_1578, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1577));
    float _1621 = _845 * 0.5;
    float _1622 = _846 * 0.5;
    float _1623 = _847 * 0.5;
    float _1624 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1555, _1558, _1561, _1564));
    float _1627 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1554, _1557, _1560, _1563));
    float _1630 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1553, _1556, _1559, _1562));
    float _1664;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1637 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1240, _1244, _1247, _1250));
        float _1641 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1242, _1245, _1248, _1251));
        float _1645 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1243, _1246, _1249, _1252));
        float _1652 = dot(vec4(cbModelParam._m0[39u]), vec4(_1621, _1622, _1623, 1.0));
        _1664 = dot(vec3(isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0)), isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0)), isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1652) ? 0.0 : (isnan(0.0) ? _1652 : max(0.0, _1652))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1664 = 1.0;
    }
    float _1675;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1666 = dot(vec4(cbModelParam._m0[40u]), vec4(_1621, _1622, _1623, 1.0));
        _1675 = dot(vec3(isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0)), isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0)), isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1666) ? 0.0 : (isnan(0.0) ? _1666 : max(0.0, _1666))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1675 = 1.0;
    }
    float _1679 = (_1675 * cbModelParam._m0[1u].x) + (_1664 * (1.0 - cbModelParam._m0[1u].x));
    float _1689 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _741);
    float _1690 = isnan(_1689) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1689 : min(cbModelParam._m0[25u].z, _1689));
    float _1770;
    float _1772;
    float _1774;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1737 = fma(_910, cbModelParam._m0[13u].z, fma(_906, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _902)) + cbModelParam._m0[13u].w;
        float _1741 = fma(_910, cbModelParam._m0[14u].z, fma(_906, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _902)) + cbModelParam._m0[14u].w;
        float _1745 = fma(_910, cbModelParam._m0[15u].z, fma(_906, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _902)) + cbModelParam._m0[15u].w;
        float _1748 = fma(_847, cbModelParam._m0[13u].z, fma(_846, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _845));
        float _1751 = fma(_847, cbModelParam._m0[14u].z, fma(_846, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _845));
        float _1754 = fma(_847, cbModelParam._m0[15u].z, fma(_846, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _845));
        float _1782;
        if (_1748 > 0.0)
        {
            _1782 = abs((1.0 - _1737) / _1748);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1748 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1737 + 1.0) / _1748);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1782 = frontier_phi_19_17_ladder;
        }
        float _1954;
        if (_1751 > 0.0)
        {
            _1954 = abs((1.0 - _1741) / _1751);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1751 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1741 + 1.0) / _1751);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1954 = frontier_phi_28_24_ladder;
        }
        float _2189;
        if (_1754 > 0.0)
        {
            _2189 = abs((1.0 - _1745) / _1754);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1754 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1745 + 1.0) / _1754);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2189 = frontier_phi_39_35_ladder;
        }
        float _2191 = isnan(_1954) ? _1782 : (isnan(_1782) ? _1954 : min(_1782, _1954));
        float _2192 = isnan(_2189) ? _2191 : (isnan(_2191) ? _2189 : min(_2191, _2189));
        float _2196 = (_2192 * _1748) + _1737;
        float _2197 = (_2192 * _1751) + _1741;
        float _2198 = (_2192 * _1754) + _1745;
        float _2199 = _2192 * 9.9999997473787516355514526367188e-05;
        float _2201 = (-1.0) - _2199;
        float _2203 = _2199 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2198 > _2203) || ((_2198 < _2201) || ((_2197 > _2203) || ((_2197 < _2201) || ((_2196 < _2201) || (_2196 > _2203))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2348 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2198, cbModelParam._m0[9u].z, fma(_2197, cbModelParam._m0[9u].y, _2196 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2198, cbModelParam._m0[10u].z, fma(_2197, cbModelParam._m0[10u].y, _2196 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2198, cbModelParam._m0[11u].z, fma(_2197, cbModelParam._m0[11u].y, _2196 * cbModelParam._m0[11u].x))), _1690);
            frontier_phi_18_39_ladder = _2348.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2348.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2348.x * cbModelParam._m0[1u].y;
        }
        _1770 = frontier_phi_18_39_ladder_2;
        _1772 = frontier_phi_18_39_ladder_1;
        _1774 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1758 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_845, _846, _847), _1690);
        _1770 = _1758.x * cbModelParam._m0[1u].y;
        _1772 = _1758.y * cbModelParam._m0[1u].y;
        _1774 = _1758.z * cbModelParam._m0[1u].y;
    }
    float _1778 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _741);
    float _1779 = isnan(_1778) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1778 : min(cbModelParam._m0[25u].w, _1778));
    float _1871;
    float _1873;
    float _1875;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1835 = fma(_910, cbModelParam._m0[21u].z, fma(_906, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _902)) + cbModelParam._m0[21u].w;
        float _1839 = fma(_910, cbModelParam._m0[22u].z, fma(_906, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _902)) + cbModelParam._m0[22u].w;
        float _1843 = fma(_910, cbModelParam._m0[23u].z, fma(_906, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _902)) + cbModelParam._m0[23u].w;
        float _1846 = fma(_847, cbModelParam._m0[21u].z, fma(_846, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _845));
        float _1849 = fma(_847, cbModelParam._m0[22u].z, fma(_846, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _845));
        float _1852 = fma(_847, cbModelParam._m0[23u].z, fma(_846, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _845));
        float _1959;
        if (_1846 > 0.0)
        {
            _1959 = abs((1.0 - _1835) / _1846);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1846 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1835 + 1.0) / _1846);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1959 = frontier_phi_30_26_ladder;
        }
        float _2216;
        if (_1849 > 0.0)
        {
            _2216 = abs((1.0 - _1839) / _1849);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1849 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1839 + 1.0) / _1849);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2216 = frontier_phi_41_37_ladder;
        }
        float _2520;
        if (_1852 > 0.0)
        {
            _2520 = abs((1.0 - _1843) / _1852);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1852 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1843 + 1.0) / _1852);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2520 = frontier_phi_52_47_ladder;
        }
        float _2522 = isnan(_2216) ? _1959 : (isnan(_1959) ? _2216 : min(_1959, _2216));
        float _2523 = isnan(_2520) ? _2522 : (isnan(_2522) ? _2520 : min(_2522, _2520));
        float _2527 = (_2523 * _1846) + _1835;
        float _2528 = (_2523 * _1849) + _1839;
        float _2529 = (_2523 * _1852) + _1843;
        float _2530 = _2523 * 9.9999997473787516355514526367188e-05;
        float _2531 = (-1.0) - _2530;
        float _2533 = _2530 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2529 > _2533) || ((_2529 < _2531) || ((_2528 > _2533) || ((_2528 < _2531) || ((_2527 < _2531) || (_2527 > _2533))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2710 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2529, cbModelParam._m0[17u].z, fma(_2528, cbModelParam._m0[17u].y, _2527 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2529, cbModelParam._m0[18u].z, fma(_2528, cbModelParam._m0[18u].y, _2527 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2529, cbModelParam._m0[19u].z, fma(_2528, cbModelParam._m0[19u].y, _2527 * cbModelParam._m0[19u].x))), _1779);
            frontier_phi_27_52_ladder = _2710.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2710.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2710.y * cbModelParam._m0[1u].z;
        }
        _1871 = frontier_phi_27_52_ladder_1;
        _1873 = frontier_phi_27_52_ladder_2;
        _1875 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1855 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_845, _846, _847), _1779);
        _1871 = _1855.x * cbModelParam._m0[1u].z;
        _1873 = _1855.y * cbModelParam._m0[1u].z;
        _1875 = _1855.z * cbModelParam._m0[1u].z;
    }
    float _1887 = ((((1.0 - _870) * ((_858 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_870 * _858)) * _837;
    float _1888 = _1887 * ((cbModelParam._m0[1u].w * (_1871 - _1770)) + _1770);
    float _1889 = _1887 * ((cbModelParam._m0[1u].w * (_1873 - _1772)) + _1772);
    float _1890 = _1887 * ((cbModelParam._m0[1u].w * (_1875 - _1774)) + _1774);
    float _1893 = fma(_1890, cbSceneParam._m0[89u].z, fma(_1889, cbSceneParam._m0[89u].y, _1888 * cbSceneParam._m0[89u].x));
    float _1896 = fma(_1890, cbSceneParam._m0[90u].z, fma(_1889, cbSceneParam._m0[90u].y, _1888 * cbSceneParam._m0[90u].x));
    float _1899 = fma(_1890, cbSceneParam._m0[91u].z, fma(_1889, cbSceneParam._m0[91u].y, _1888 * cbSceneParam._m0[91u].x));
    uvec4 _1909 = floatBitsToUint(cbInstanceData._m0[_304 + 5u]);
    uint _1911 = _1909.x * 14u;
    uint _1912 = _1911 + 13u;
    float _1917 = _837 + (-1.0);
    float _1920 = (cbLight._m0[_1912].x * _1917) + 1.0;
    float _1921 = (cbLight._m0[_1912].y * _1917) + 1.0;
    uint _1923 = _1911 + 4u;
    float _1934 = dot(vec3(cbLight._m0[_1911].xyz), vec3(_737, _738, _739));
    float _1937 = isnan(1.0) ? _1920 : (isnan(_1920) ? 1.0 : min(_1920, 1.0));
    uint _1938 = _1911 + 5u;
    uint _1944 = _1911 | 1u;
    float _1950 = dot(vec3(cbLight._m0[_1944].xyz), vec3(_737, _738, _739));
    float _1953 = isnan(1.0) ? _1921 : (isnan(_1921) ? 1.0 : min(_1921, 1.0));
    float _2018;
    float _2019;
    float _2020;
    if (_742 == 0.0)
    {
        float _3784 = isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0));
        float _3795 = isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0));
        float _1972 = (isnan(1.0) ? _3784 : (isnan(_3784) ? 1.0 : min(_3784, 1.0))) * 0.3183098733425140380859375;
        float _1974 = (isnan(1.0) ? _3795 : (isnan(_3795) ? 1.0 : min(_3795, 1.0))) * 0.3183098733425140380859375;
        _2018 = ((cbLight._m0[_1938].x * _1953) * _1974) + ((cbLight._m0[_1923].x * _1937) * _1972);
        _2019 = ((_1953 * cbLight._m0[_1938].y) * _1974) + ((_1937 * cbLight._m0[_1923].y) * _1972);
        _2020 = ((_1953 * cbLight._m0[_1938].z) * _1974) + ((_1937 * cbLight._m0[_1923].z) * _1972);
    }
    else
    {
        float _1984 = _1934 + _742;
        float _1987 = (_742 * 2.0) + 1.0;
        float _1988 = (isnan(0.0) ? _1984 : (isnan(_1984) ? 0.0 : max(_1984, 0.0))) / _1987;
        float _1995 = _1950 + _742;
        float _1997 = (isnan(0.0) ? _1995 : (isnan(_1995) ? 0.0 : max(_1995, 0.0))) / _1987;
        _2018 = (((_1997 * cbLight._m0[_1938].x) * _1953) + ((_1988 * cbLight._m0[_1923].x) * _1937)) * 0.3183098733425140380859375;
        _2019 = (((_1997 * cbLight._m0[_1938].y) * _1953) + ((_1988 * cbLight._m0[_1923].y) * _1937)) * 0.3183098733425140380859375;
        _2020 = (((_1997 * cbLight._m0[_1938].z) * _1953) + ((_1988 * cbLight._m0[_1923].z) * _1937)) * 0.3183098733425140380859375;
    }
    uint _2024 = _1911 + 8u;
    float _2040 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1911].w)) * _741) * 0.949999988079071044921875);
    float _2041 = _2040 * _2040;
    float _2042 = cbLight._m0[_1911].x + _516;
    float _2043 = cbLight._m0[_1911].y + _517;
    float _2044 = cbLight._m0[_1911].z + _518;
    float _2048 = inversesqrt(dot(vec3(_2042, _2043, _2044), vec3(_2042, _2043, _2044)));
    float _2049 = _2048 * _2042;
    float _2050 = _2048 * _2043;
    float _2051 = _2048 * _2044;
    float _2052 = dot(vec3(_737, _738, _739), vec3(cbLight._m0[_1911].xyz));
    float _3816 = isnan(0.0) ? _2052 : (isnan(_2052) ? 0.0 : max(_2052, 0.0));
    float _2055 = isnan(1.0) ? _3816 : (isnan(_3816) ? 1.0 : min(_3816, 1.0));
    float _3827 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _2056 = isnan(1.0) ? _3827 : (isnan(_3827) ? 1.0 : min(_3827, 1.0));
    float _2057 = dot(vec3(_737, _738, _739), vec3(_2049, _2050, _2051));
    float _3838 = isnan(0.0) ? _2057 : (isnan(_2057) ? 0.0 : max(_2057, 0.0));
    float _2060 = isnan(1.0) ? _3838 : (isnan(_3838) ? 1.0 : min(_3838, 1.0));
    float _2061 = dot(vec3(cbLight._m0[_1911].xyz), vec3(_2049, _2050, _2051));
    float _3849 = isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : max(_2061, 0.0));
    float _2065 = _2041 * _2041;
    float _2069 = ((_2060 * _2060) * (_2065 + (-1.0))) + 1.0;
    float _2080 = (exp2(log2(1.0 - (isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2081 = 1.0 - _2041;
    float _2092 = (0.5 / (((_2056 * ((_2055 * _2081) + _2041)) + 9.9999999392252902907785028219223e-09) + (((_2056 * _2081) + _2041) * _2055))) * _2055;
    float _3860 = isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0));
    float _2094 = (isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0))) * (_2065 / ((_2069 * _2069) * 3.141590118408203125));
    uint _2107 = _1911 + 9u;
    float _2121 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1944].w)) * _741) * 0.949999988079071044921875);
    float _2122 = _2121 * _2121;
    float _2123 = cbLight._m0[_1944].x + _516;
    float _2124 = cbLight._m0[_1944].y + _517;
    float _2125 = cbLight._m0[_1944].z + _518;
    float _2129 = inversesqrt(dot(vec3(_2123, _2124, _2125), vec3(_2123, _2124, _2125)));
    float _2130 = _2129 * _2123;
    float _2131 = _2129 * _2124;
    float _2132 = _2129 * _2125;
    float _2133 = dot(vec3(_737, _738, _739), vec3(cbLight._m0[_1944].xyz));
    float _3871 = isnan(0.0) ? _2133 : (isnan(_2133) ? 0.0 : max(_2133, 0.0));
    float _2136 = isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0));
    float _2137 = dot(vec3(_737, _738, _739), vec3(_2130, _2131, _2132));
    float _3882 = isnan(0.0) ? _2137 : (isnan(_2137) ? 0.0 : max(_2137, 0.0));
    float _2140 = isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0));
    float _2141 = dot(vec3(cbLight._m0[_1944].xyz), vec3(_2130, _2131, _2132));
    float _3893 = isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0));
    float _2145 = _2122 * _2122;
    float _2149 = ((_2140 * _2140) * (_2145 + (-1.0))) + 1.0;
    float _2158 = (exp2(log2(1.0 - (isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2159 = 1.0 - _2122;
    float _2169 = (0.5 / (((_2056 * ((_2136 * _2159) + _2122)) + 9.9999999392252902907785028219223e-09) + (((_2056 * _2159) + _2122) * _2136))) * _2136;
    float _3904 = isnan(0.0) ? _2169 : (isnan(_2169) ? 0.0 : max(_2169, 0.0));
    float _2171 = (isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0))) * (_2145 / ((_2149 * _2149) * 3.141590118408203125));
    float _2181 = (((_2158 * cbLight._m0[_2107].x) * _2171) * _1953) + (((_2080 * cbLight._m0[_2024].x) * _2094) * _1937);
    float _2182 = (((_2158 * cbLight._m0[_2107].y) * _2171) * _1953) + (((_2080 * cbLight._m0[_2024].y) * _2094) * _1937);
    float _2183 = (((_2158 * cbLight._m0[_2107].z) * _2171) * _1953) + (((_2080 * cbLight._m0[_2024].z) * _2094) * _1937);
    float _2319;
    float _2321;
    float _2323;
    float _2325;
    float _2327;
    float _2329;
    if (_1909.y == 0u)
    {
        float _2260 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2261 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2260;
        float _2262 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2260;
        float _2263 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2260;
        uvec4 _2275 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2276 = _2275.x;
        uint _2287 = uint((float(_2275.y) * floor(float(uint(cbSceneParam._m0[85u].y * _777) / _2276))) + floor(float(uint(cbSceneParam._m0[85u].x * _776) / _2276)));
        float _2297 = (log2(_2263 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2298 = isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0));
        uint _2301 = uint(isnan(14.0) ? _2298 : (isnan(_2298) ? 14.0 : min(_2298, 14.0)));
        uint _2308 = _2275.z;
        float _2357;
        float _2359;
        float _2361;
        float _2363;
        float _2365;
        float _2367;
        if (((((1u << ((_2308 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2301 << 2u) + (_2287 << 6u)) >> 2u)).x) == 0u) || ((_2308 & 240u) == 0u))
        {
            _2357 = 0.0;
            _2359 = 0.0;
            _2361 = 0.0;
            _2363 = 0.0;
            _2365 = 0.0;
            _2367 = 0.0;
        }
        else
        {
            float _2358;
            float _2360;
            float _2362;
            float _2364;
            float _2366;
            float _2368;
            float _2546 = 0.0;
            float _2547 = 0.0;
            float _2548 = 0.0;
            float _2549 = 0.0;
            float _2550 = 0.0;
            float _2551 = 0.0;
            uint _2552 = 0u;
            uint _2561;
            bool _2562;
            for (;;)
            {
                _2561 = texelFetch(g_lightClassification, int((((_2301 << 5u) + (_2287 << 9u)) + (_2552 << 2u)) >> 2u)).x;
                _2562 = _2561 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2562)
                {
                    frontier_phi_58_pred = _2546;
                    frontier_phi_58_pred_1 = _2551;
                    frontier_phi_58_pred_2 = _2550;
                    frontier_phi_58_pred_3 = _2549;
                    frontier_phi_58_pred_4 = _2548;
                    frontier_phi_58_pred_5 = _2547;
                }
                else
                {
                    float _2783;
                    float _2784;
                    float _2785;
                    float _2786;
                    float _2787;
                    float _2788;
                    uint _2789;
                    _2783 = _2546;
                    _2784 = _2547;
                    _2785 = _2548;
                    _2786 = _2549;
                    _2787 = _2550;
                    _2788 = _2551;
                    _2789 = _2561;
                    float _2715;
                    float _2716;
                    float _2717;
                    float _2718;
                    float _2719;
                    float _2720;
                    for (;;)
                    {
                        uint _2793 = uint(findLSB(_2789)) + (_2552 << 5u);
                        uint _2790 = (_2789 + 4294967295u) & _2789;
                        uint _2795 = _2793 * 48u;
                        vec4 _2809 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2795)).x, texelFetch(g_PointLightRenderingBuffer, int(_2795 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2795 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2795 + 3u)).x));
                        uint _2815 = (_2793 * 48u) + 4u;
                        vec4 _2828 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2815)).x, texelFetch(g_PointLightRenderingBuffer, int(_2815 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2815 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2815 + 3u)).x));
                        float _2829 = _2828.x;
                        float _2830 = _2828.y;
                        float _2831 = _2828.z;
                        uint _2834 = (_2793 * 48u) + 8u;
                        vec3 _2845 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2834)).x, texelFetch(g_PointLightRenderingBuffer, int(_2834 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2834 + 2u)).x));
                        uint _2850 = (_2793 * 48u) + 12u;
                        vec2 _2858 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2850)).x, texelFetch(g_PointLightRenderingBuffer, int(_2850 + 1u)).x));
                        float _2864 = inversesqrt(dot(vec3(_2261, _2262, _2263), vec3(_2261, _2262, _2263)));
                        float _2865 = _2864 * _2261;
                        float _2866 = _2864 * _2262;
                        float _2867 = _2864 * _2263;
                        float _2868 = _2809.x - _2261;
                        float _2869 = _2809.y - _2262;
                        float _2870 = _2809.z - _2263;
                        float _2871 = dot(vec3(_2868, _2869, _2870), vec3(_2868, _2869, _2870));
                        float _2874 = inversesqrt(_2871);
                        float _2875 = _2874 * _2868;
                        float _2876 = _2874 * _2869;
                        float _2877 = _2874 * _2870;
                        float _2878 = dot(vec3(_795, _798, _801), vec3(_2875, _2876, _2877));
                        float _2883 = 1.0 - (_2871 * _2809.w);
                        float _3925 = isnan(0.0) ? _2883 : (isnan(_2883) ? 0.0 : max(_2883, 0.0));
                        float _2884 = isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0));
                        float _2885 = sqrt(_2871) * _2828.w;
                        float _2888 = 1.39999997615814208984375 / (_2885 + 1.39999997615814208984375);
                        float _2889 = _2888 * _2888;
                        float _2890 = 1.0 - _2889;
                        float _2892 = (_2890 * _2890) * _742;
                        float _2895 = ((_2890 * _2878) + _2889) + _2892;
                        float _2900 = _2885 * _2885;
                        float _2905 = ((isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0))) * _2884) / (((_2892 * 2.0) + 1.0) * ((_2900 * 0.699999988079071044921875) + 1.0));
                        float _2909 = dot(vec3(_2875, _2876, _2877), vec3(_2865, _2866, _2867));
                        float _3941 = isnan(0.0) ? _2909 : (isnan(_2909) ? 0.0 : max(_2909, 0.0));
                        float _2916 = dot(vec3((-0.0) - _2865, (-0.0) - _2866, (-0.0) - _2867), vec3(_795, _798, _801)) + 1.0;
                        float _2918 = (isnan(0.0) ? _2916 : (isnan(_2916) ? 0.0 : max(_2916, 0.0))) * 0.5;
                        float _2925 = ((_2918 * _2918) * _2858.x) * exp2((_2858.y * 32.0) * log2(isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0))));
                        float _2927 = _742 / (_742 + 1.0);
                        float _2943 = (-0.0) - _2261;
                        float _2944 = (-0.0) - _2262;
                        float _2945 = (-0.0) - _2263;
                        float _2949 = inversesqrt(dot(vec3(_2943, _2944, _2945), vec3(_2943, _2944, _2945)));
                        float _2950 = _2949 * _2943;
                        float _2951 = _2949 * _2944;
                        float _2952 = _2949 * _2945;
                        float _2960 = exp2(log2(1.0 / ((_2900 * 3.5) + 5.0)) * 0.25);
                        float _2961 = 1.0 - _858;
                        float _2968 = sqrt(1.0 - ((1.0 - (_2961 * _2961)) * (1.0 - (_2960 * _2960))));
                        float _2969 = _2968 * _2968;
                        float _2970 = _2969 * _2969;
                        float _2971 = _2950 + _2875;
                        float _2972 = _2951 + _2876;
                        float _2973 = _2952 + _2877;
                        float _2977 = inversesqrt(dot(vec3(_2971, _2972, _2973), vec3(_2971, _2972, _2973)));
                        float _2981 = dot(vec3(_795, _798, _801), vec3(_2950, _2951, _2952));
                        float _3957 = isnan(0.0) ? _2981 : (isnan(_2981) ? 0.0 : max(_2981, 0.0));
                        float _2984 = isnan(1.0) ? _3957 : (isnan(_3957) ? 1.0 : min(_3957, 1.0));
                        float _2985 = dot(vec3(_795, _798, _801), vec3(_2977 * _2971, _2977 * _2972, _2977 * _2973));
                        float _3968 = isnan(0.0) ? _2985 : (isnan(_2985) ? 0.0 : max(_2985, 0.0));
                        float _2988 = isnan(1.0) ? _3968 : (isnan(_3968) ? 1.0 : min(_3968, 1.0));
                        float _2992 = ((_2988 * _2988) * (_2970 + (-1.0))) + 1.0;
                        float _2993 = _2888 * _2969;
                        float _2994 = _2993 * _2993;
                        float _2997 = ((1.0 - _2994) * _2878) + _2994;
                        float _3979 = isnan(0.0) ? _2997 : (isnan(_2997) ? 0.0 : max(_2997, 0.0));
                        float _2998 = isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0));
                        float _2999 = 1.0 - _2969;
                        float _3009 = (0.5 / (((_2998 * ((_2984 * _2999) + _2969)) + 9.9999999392252902907785028219223e-09) + (((_2998 * _2999) + _2969) * _2984))) * _2998;
                        float _3990 = isnan(0.0) ? _3009 : (isnan(_3009) ? 0.0 : max(_3009, 0.0));
                        float _3020 = (((_2970 * 3.1415927410125732421875) * (isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0)))) / ((_2992 * _2992) * ((_2900 * 2.1991131305694580078125) + 3.141590118408203125))) * _2884;
                        _2718 = (((((_2829 * 0.3183098733425140380859375) * _2927) * _2925) + _2829) * _2905) + _2786;
                        _2719 = (((((_2830 * 0.3183098733425140380859375) * _2927) * _2925) + _2830) * _2905) + _2787;
                        _2720 = (((((_2831 * 0.3183098733425140380859375) * _2927) * _2925) + _2831) * _2905) + _2788;
                        _2715 = (_3020 * _2845.x) + _2783;
                        _2716 = (_3020 * _2845.y) + _2784;
                        _2717 = (_3020 * _2845.z) + _2785;
                        if (_2790 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2783 = _2715;
                            _2784 = _2716;
                            _2785 = _2717;
                            _2786 = _2718;
                            _2787 = _2719;
                            _2788 = _2720;
                            _2789 = _2790;
                        }
                    }
                    frontier_phi_58_pred = _2715;
                    frontier_phi_58_pred_1 = _2720;
                    frontier_phi_58_pred_2 = _2719;
                    frontier_phi_58_pred_3 = _2718;
                    frontier_phi_58_pred_4 = _2717;
                    frontier_phi_58_pred_5 = _2716;
                }
                _2358 = frontier_phi_58_pred;
                _2368 = frontier_phi_58_pred_1;
                _2366 = frontier_phi_58_pred_2;
                _2364 = frontier_phi_58_pred_3;
                _2362 = frontier_phi_58_pred_4;
                _2360 = frontier_phi_58_pred_5;
                uint _2553 = _2552 + 1u;
                if (_2553 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2546 = _2358;
                    _2547 = _2360;
                    _2548 = _2362;
                    _2549 = _2364;
                    _2550 = _2366;
                    _2551 = _2368;
                    _2552 = _2553;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2357 = _2358;
            _2359 = _2360;
            _2361 = _2362;
            _2363 = _2364;
            _2365 = _2366;
            _2367 = _2368;
        }
        float _2372 = isnan(1.0) ? _837 : (isnan(_837) ? 1.0 : min(_837, 1.0));
        _2319 = (_2372 * _2363) + _2018;
        _2321 = (_2372 * _2365) + _2019;
        _2323 = (_2372 * _2367) + _2020;
        _2325 = ((_2357 * 0.039999999105930328369140625) * _2372) + _2181;
        _2327 = ((_2359 * 0.039999999105930328369140625) * _2372) + _2182;
        _2329 = ((_2361 * 0.039999999105930328369140625) * _2372) + _2183;
    }
    else
    {
        _2319 = _2018;
        _2321 = _2019;
        _2323 = _2020;
        _2325 = _2181;
        _2327 = _2182;
        _2329 = _2183;
    }
    float _2443;
    float _2444;
    float _2445;
    if (_742 > 0.0)
    {
        uint _2379 = _1911 + 4u;
        float _2385 = (-0.0) - _516;
        float _2386 = (-0.0) - _517;
        float _2387 = (-0.0) - _518;
        float _2388 = dot(vec3(cbLight._m0[_1911].xyz), vec3(_2385, _2386, _2387));
        float _4006 = isnan(0.0) ? _2388 : (isnan(_2388) ? 0.0 : max(_2388, 0.0));
        float _2392 = _848 + 1.0;
        float _2394 = (isnan(0.0) ? _2392 : (isnan(_2392) ? 0.0 : max(_2392, 0.0))) * 0.5;
        float _2399 = _2394 * _2394;
        float _2400 = _2399 * exp2(log2(isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0))) * 32.0);
        float _2402 = _742 / (_742 + 1.0);
        float _2403 = isnan(_1920) ? 1.0 : (isnan(1.0) ? _1920 : min(1.0, _1920));
        uint _2413 = _1911 + 5u;
        float _2419 = dot(vec3(cbLight._m0[_1944].xyz), vec3(_2385, _2386, _2387));
        float _4027 = isnan(0.0) ? _2419 : (isnan(_2419) ? 0.0 : max(_2419, 0.0));
        float _2426 = _2399 * exp2(log2(isnan(1.0) ? _4027 : (isnan(_4027) ? 1.0 : min(_4027, 1.0))) * 32.0);
        float _2427 = isnan(_1921) ? 1.0 : (isnan(1.0) ? _1921 : min(1.0, _1921));
        _2443 = ((((_2426 * cbLight._m0[_2413].x) * _2402) * _2427) + (((_2400 * cbLight._m0[_2379].x) * _2402) * _2403)) * 0.3183098733425140380859375;
        _2444 = ((((_2426 * cbLight._m0[_2413].y) * _2402) * _2427) + (((_2400 * cbLight._m0[_2379].y) * _2402) * _2403)) * 0.3183098733425140380859375;
        _2445 = ((((_2426 * cbLight._m0[_2413].z) * _2402) * _2427) + (((_2400 * cbLight._m0[_2379].z) * _2402) * _2403)) * 0.3183098733425140380859375;
    }
    else
    {
        _2443 = 0.0;
        _2444 = 0.0;
        _2445 = 0.0;
    }
    float _4043 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _4054 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _4065 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _4076 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _2460 = (isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0))) * ((_2319 + ((isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0))) * _837)) + _2443);
    float _2461 = (isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0))) * ((_2321 + ((isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0))) * _837)) + _2444);
    float _2462 = (isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0))) * ((_2323 + ((isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0))) * _837)) + _2445);
    float _2466 = 0.959999978542327880859375 - (exp2(log2(1.0 - _852) * 5.0) * 0.959999978542327880859375);
    float _2477 = (_2460 + ((_2325 + ((isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0))) * _1679)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _676.x) * _2466) - _2460) * _722);
    float _2479 = (_2461 + ((_2327 + ((isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0))) * _1679)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _676.y) * _2466) - _2461) * _722);
    float _2481 = (_2462 + ((_2329 + ((isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0))) * _1679)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _676.z) * _2466) - _2462) * _722);
    float _2486 = cbInstanceData._m0[_304 + 6u].w * (isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0)));
    float _2491 = _776 / cbSceneParam._m0[86u].x;
    float _2492 = _777 / cbSceneParam._m0[86u].y;
    vec4 _2506 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2491, _2492, (log2((isnan(cbSceneParam._m0[77u].w) ? _759 : (isnan(_759) ? cbSceneParam._m0[77u].w : min(_759, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2508 = _2506.x;
    float _2509 = _2506.y;
    float _2510 = _2506.z;
    float _2511 = _2506.w;
    float _2604;
    float _2606;
    float _2608;
    float _2610;
    if (_759 > cbSceneParam._m0[78u].w)
    {
        float _2567 = isnan(_759) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _759 : min(cbSceneParam._m0[80u].w, _759));
        float _2568 = _2567 / _759;
        float _2579 = _2568 * _296;
        float _2580 = _297 * _2568;
        float _2581 = (-0.0) - _2580;
        float _2582 = _2568 * _298;
        float _2584 = (cbSceneParam._m0[77u].w * _2581) / _2567;
        float _2585 = _2584 + cbSceneParam._m0[79u].w;
        float _2586 = cbSceneParam._m0[79u].w - _2580;
        float _2592 = sqrt(((_2579 * _2579) + (_2580 * _2580)) + (_2582 * _2582));
        float _2595 = (1.0 - (cbSceneParam._m0[77u].w / _2567)) * _2592;
        float _2600 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2602 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3025;
        if (abs((_2581 - _2584) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3025 = ((((_2585 > 0.0) ? exp2(_2600 * _2585) : (2.0 - exp2(_2602 * _2585))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2595;
        }
        else
        {
            float _2740 = 1.0 / cbSceneParam._m0[80u].x;
            float _2741 = isnan(_2586) ? _2585 : (isnan(_2585) ? _2586 : max(_2585, _2586));
            float _2742 = isnan(_2586) ? _2585 : (isnan(_2585) ? _2586 : min(_2585, _2586));
            float _2751 = isnan(0.0) ? _2741 : (isnan(_2741) ? 0.0 : min(_2741, 0.0));
            float _2752 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : min(_2742, 0.0));
            _3025 = ((abs(_2592 / _2581) * cbSceneParam._m0[80u].y) * ((((_2751 - _2752) * 2.0) - ((exp2(_2600 * (isnan(0.0) ? _2741 : (isnan(_2741) ? 0.0 : max(_2741, 0.0)))) - exp2(_2600 * (isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0))))) * _2740)) - ((exp2(_2602 * _2751) - exp2(_2602 * _2752)) * _2740))) + (_2595 * cbSceneParam._m0[80u].z);
        }
        vec4 _3027 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2491, _2492, 1.0), 0.0);
        float _3036 = exp2((_3025 * (-1.44269502162933349609375)) * (1.0 - _3027.w));
        float _3037 = log2(_3036);
        float _3053 = log2(_2511);
        _2604 = (exp2(_3053 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3037 * cbSceneParam._m0[78u].x)) * _3027.x) / cbSceneParam._m0[78u].x)) + _2508;
        _2606 = (exp2(_3053 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3037 * cbSceneParam._m0[78u].y)) * _3027.y) / cbSceneParam._m0[78u].y)) + _2509;
        _2608 = (exp2(_3053 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3037 * cbSceneParam._m0[78u].z)) * _3027.z) / cbSceneParam._m0[78u].z)) + _2510;
        _2610 = _3036 * _2511;
    }
    else
    {
        _2604 = _2508;
        _2606 = _2509;
        _2608 = _2510;
        _2610 = _2511;
    }
    bool _3063;
    float _2665;
    vec4 _2668;
    float _2670;
    vec4 _2672;
    float _2680;
    float _2681;
    float _2682;
    float _2683;
    bool _2693;
    for (;;)
    {
        bool _2622 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2623 = log2(_2610);
        float _2630 = exp2(_2623 * cbSceneParam._m0[78u].x) * _2477;
        float _2631 = exp2(_2623 * cbSceneParam._m0[78u].y) * _2479;
        float _2632 = exp2(_2623 * cbSceneParam._m0[78u].z) * _2481;
        vec4 _2640 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_776, _777));
        float _2642 = _2640.x;
        float _2663 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2642)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2642))) - _759) * cbMtdParam._m0[17u].y;
        float _4127 = isnan(0.0) ? _2663 : (isnan(_2663) ? 0.0 : max(_2663, 0.0));
        _2665 = _2486 * (isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0)));
        float _2666 = _766 + (-0.5);
        _2668 = cbMtdParam._m0[1u];
        _2670 = _2668.y * _2666;
        _2672 = cbMatDynParam._m0[0u];
        float _2679 = (roundEven(_2672.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2680 = _2679 * (_2622 ? _2630 : (_2630 + (cbSceneParam._m0[72u].w * _2604)));
        _2681 = _2679 * (_2622 ? _2631 : (_2631 + (cbSceneParam._m0[72u].w * _2606)));
        _2682 = _2679 * (_2622 ? _2632 : (_2632 + (cbSceneParam._m0[72u].w * _2608)));
        _2683 = _2666 * 0.999000012874603271484375;
        _2693 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2693)
        {
            if ((cbInstanceData._m0[_304 + 7u].x + _2683) < 0.5)
            {
                _3063 = true;
                break;
            }
        }
        uint _2775 = _814 + uint(_2672.w);
        if ((cbInstanceData._m0[_2775].w < 1.0) && ((cbInstanceData._m0[_2775].w + _2683) < 0.5))
        {
            _3063 = true;
            break;
        }
        if ((_2670 + _426) < _2668.x)
        {
            _3063 = true;
            break;
        }
        _3063 = false;
        break;
    }
    float _3068;
    if (_3063)
    {
        discard_state = true;
        _3068 = 0.0;
    }
    else
    {
        _3068 = _2665;
    }
    SV_Target.x = _2680;
    SV_Target.y = _2681;
    SV_Target.z = _2682;
    SV_Target.w = _3068;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2665;
    discard_exit();
}


