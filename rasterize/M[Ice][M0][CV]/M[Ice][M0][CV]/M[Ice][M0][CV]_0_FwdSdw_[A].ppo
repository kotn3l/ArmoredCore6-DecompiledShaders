#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1096;
float _3323;
float _3324;
float _3325;
float _3326;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _200 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _201 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _202 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _208 = inversesqrt(dot(vec3(_200, _201, _202), vec3(_200, _201, _202)));
    float _209 = _208 * _200;
    float _210 = _208 * _201;
    float _211 = _208 * _202;
    float _215 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _216 = _215 * NORMAL.x;
    float _217 = _215 * NORMAL.y;
    float _218 = _215 * NORMAL.z;
    float _222 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _223 = _222 * TANGENT.x;
    float _224 = _222 * TANGENT.y;
    float _225 = _222 * TANGENT.z;
    float _230;
    float _231;
    float _232;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _230 = (-0.0) - _216;
        _231 = (-0.0) - _217;
        _232 = (-0.0) - _218;
    }
    else
    {
        _230 = _216;
        _231 = _217;
        _232 = _218;
    }
    float _277 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _287 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _277);
    float _288 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _277);
    float _289 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _277);
    vec4 _303 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _312 = (_303.x * 2.0) + (-1.0);
    float _314 = (_303.y * 2.0) + (-1.0);
    float _315 = dot(vec2(_312, _314), vec2(_312, _314));
    float _3335 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    float _321 = sqrt(1.0 - (isnan(1.0) ? _3335 : (isnan(_3335) ? 1.0 : min(_3335, 1.0))));
    float _324 = fma(_321, _230, fma(_314, _223, _312 * _209));
    float _327 = fma(_321, _231, fma(_314, _224, _312 * _210));
    float _330 = fma(_321, _232, fma(_314, _225, _312 * _211));
    float _334 = inversesqrt(dot(vec3(_324, _327, _330), vec3(_324, _327, _330)));
    float _335 = _334 * _324;
    float _336 = _334 * _327;
    vec4 _348 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _353 = _348.w;
    float _365 = dot(vec3(_287, _288, _289), vec3(_209, _210, _211));
    float _368 = dot(vec3(_287, _288, _289), vec3(_223, _224, _225));
    float _371 = dot(vec3(_287, _288, _289), vec3(_230, _231, _232));
    float _377 = inversesqrt(dot(vec3(_365, _368, _371), vec3(_365, _368, _371)));
    float _399 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _419 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_365 * cbMtdParam._m0[14u].x) * _377) * _399) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_368 * cbMtdParam._m0[14u].x) * _377) * _399) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _443 = inversesqrt(dot(vec3(_287, _288, _289), vec3(_287, _288, _289)));
    float _444 = _443 * _287;
    float _445 = _443 * _288;
    float _446 = _443 * _289;
    float _447 = dot(vec4(_444, _445, _446, 0.0), vec4(_230, _231, _232, 0.0));
    float _450 = _447 - cbMtdParam._m0[15u].z;
    float _3346 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0));
    float _457 = exp2(log2(1.0 - (isnan(1.0) ? _3346 : (isnan(_3346) ? 1.0 : min(_3346, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _472 = ((((_348.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _419.x) * cbMtdParam._m0[9u].x) * ((_457 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _477 = ((((_348.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _419.y) * cbMtdParam._m0[9u].y) * ((_457 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _482 = ((((_348.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _419.z) * cbMtdParam._m0[9u].z) * ((_457 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _491 = (cbMtdParam._m0[16u].y + _303.z) + cbMtdParam._m0[17u].z;
    vec4 _503 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _507 = cbMtdParam._m0[16u].w * _503.x;
    float _530 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + (_335 * cbMtdParam._m0[18u].y));
    float _531 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + (_336 * cbMtdParam._m0[18u].y));
    float _538 = isnan(cbInstanceData._m0[8u].x) ? _530 : (isnan(_530) ? cbInstanceData._m0[8u].x : max(_530, cbInstanceData._m0[8u].x));
    float _539 = isnan(cbInstanceData._m0[8u].y) ? _531 : (isnan(_531) ? cbInstanceData._m0[8u].y : max(_531, cbInstanceData._m0[8u].y));
    vec4 _543 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _538 : (isnan(_538) ? cbInstanceData._m0[8u].z : min(_538, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _539 : (isnan(_539) ? cbInstanceData._m0[8u].w : min(_539, cbInstanceData._m0[8u].w))));
    float _576 = _447 - cbMtdParam._m0[15u].x;
    float _3382 = isnan(0.0) ? _576 : (isnan(_576) ? 0.0 : max(_576, 0.0));
    float _586 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3382 : (isnan(_3382) ? 1.0 : min(_3382, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3398 = isnan(0.0) ? _586 : (isnan(_586) ? 0.0 : max(_586, 0.0));
    float _587 = isnan(1.0) ? _3398 : (isnan(_3398) ? 1.0 : min(_3398, 1.0));
    float _589 = _334 * _330;
    float _3409 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _590 = isnan(1.0) ? _3409 : (isnan(_3409) ? 1.0 : min(_3409, 1.0));
    float _3420 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _591 = isnan(1.0) ? _3420 : (isnan(_3420) ? 1.0 : min(_3420, 1.0));
    float _592 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    float _3436 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _3447 = isnan(0.0) ? _477 : (isnan(_477) ? 0.0 : max(_477, 0.0));
    float _3458 = isnan(0.0) ? _482 : (isnan(_482) ? 0.0 : max(_482, 0.0));
    float _611 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _616 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _618 = _616.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _775 = sqrt(((_287 * _287) + (_288 * _288)) + (_289 * _289));
        float _781 = (cbMatDynParam._m0[5u].x * _775) + cbMatDynParam._m0[5u].y;
        float _3469 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
        float _782 = isnan(1.0) ? _3469 : (isnan(_3469) ? 1.0 : min(_3469, 1.0));
        float _786 = (cbMatDynParam._m0[5u].z * _775) + cbMatDynParam._m0[5u].w;
        float _3480 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3480 : (isnan(_3480) ? 1.0 : min(_3480, 1.0))) - _782)) + _782) < ((_618 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _629 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _630 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _648 = fma(_589, cbSceneParam._m0[5u].z, fma(_336, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _335));
    float _651 = fma(_589, cbSceneParam._m0[6u].z, fma(_336, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _335));
    float _654 = fma(_589, cbSceneParam._m0[7u].z, fma(_336, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _335));
    uint _667 = uint(roundEven(NORMAL.w)) * 13u;
    uint _668 = _667 + 9u;
    uint _669 = _668 + uint(cbMatDynParam._m0[0u].w);
    float _675 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3436 : (isnan(_3436) ? 1.0 : min(_3436, 1.0)))) * cbInstanceData._m0[_669].x;
    float _676 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3447 : (isnan(_3447) ? 1.0 : min(_3447, 1.0)))) * cbInstanceData._m0[_669].y;
    float _677 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3458 : (isnan(_3458) ? 1.0 : min(_3458, 1.0)))) * cbInstanceData._m0[_669].z;
    float _3491 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
    float _678 = isnan(1.0) ? _3491 : (isnan(_3491) ? 1.0 : min(_3491, 1.0));
    float _3502 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
    float _679 = isnan(1.0) ? _3502 : (isnan(_3502) ? 1.0 : min(_3502, 1.0));
    float _3513 = isnan(0.0) ? _677 : (isnan(_677) ? 0.0 : max(_677, 0.0));
    float _680 = isnan(1.0) ? _3513 : (isnan(_3513) ? 1.0 : min(_3513, 1.0));
    vec4 _688 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _629, cbSceneParam._m0[86u].y * _630));
    float _691 = _688.x * TEXCOORD_5.w;
    float _692 = dot(vec3(_335, _336, _589), vec3(_444, _445, _446));
    float _695 = _692 * 2.0;
    float _699 = (_695 * _335) - _444;
    float _700 = (_695 * _336) - _445;
    float _701 = (_695 * _589) - _446;
    float _702 = dot(vec3(_444, _445, _446), vec3(_335, _336, _589));
    float _705 = abs(_702);
    float _3524 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    float _706 = isnan(1.0) ? _3524 : (isnan(_3524) ? 1.0 : min(_3524, 1.0));
    float _712 = sqrt(_591);
    float _724 = exp2((_712 * 5.0) * log2(1.0 - (_706 * 0.999000012874603271484375))) / (4.0 - (_712 * 3.0));
    float _756 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _760 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _764 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1095;
    float _1097;
    float _1098;
    float _1099;
    float _1100;
    float _1101;
    float _1102;
    float _1103;
    float _1104;
    float _1105;
    float _1106;
    float _1107;
    float _1108;
    float _1109;
    float _1110;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _820 = fma(_764, cbModelParam._m0[26u].z, fma(_760, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _756));
        float _824 = fma(_764, cbModelParam._m0[27u].z, fma(_760, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _756));
        float _828 = fma(_764, cbModelParam._m0[28u].z, fma(_760, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _756));
        float _853 = _756 + _335;
        float _854 = _760 + _336;
        float _855 = _764 + _589;
        float _865 = fma(_855, cbModelParam._m0[26u].z, fma(_854, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _853)) - _820;
        float _866 = fma(_855, cbModelParam._m0[27u].z, fma(_854, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _853)) - _824;
        float _867 = fma(_855, cbModelParam._m0[28u].z, fma(_854, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _853)) - _828;
        float _871 = inversesqrt(dot(vec3(_865, _866, _867), vec3(_865, _866, _867)));
        float _884 = ((_871 * _865) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_820 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _885 = ((_871 * _866) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_824 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _886 = ((_871 * _867) / cbModelParam._m0[34u].z) + ((((((_828 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _889 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_884, _885, _886), 0.0);
        vec4 _896 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_884, _885, _886), 0.0);
        vec4 _903 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_884, _885, _886), 0.0);
        vec4 _910 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_884, _885, _886), 0.0);
        float _923 = exp2((_889.w + (-0.5)) * 20.0) * 2.0;
        float _924 = _923 * (_889.x + (-0.5));
        float _925 = _923 * (_889.y + (-0.5));
        float _926 = _923 * (_889.z + (-0.5));
        float _933 = exp2((_896.w + (-0.5)) * 20.0) * 2.0;
        float _934 = _933 * (_896.x + (-0.5));
        float _935 = _933 * (_896.y + (-0.5));
        float _936 = _933 * (_896.z + (-0.5));
        float _943 = exp2((_903.w + (-0.5)) * 20.0) * 2.0;
        float _944 = _943 * (_903.x + (-0.5));
        float _945 = _943 * (_903.y + (-0.5));
        float _946 = _943 * (_903.z + (-0.5));
        float _953 = exp2((_910.w + (-0.5)) * 20.0) * 2.0;
        float _954 = _953 * (_910.x + (-0.5));
        float _955 = _953 * (_910.y + (-0.5));
        float _956 = _953 * (_910.z + (-0.5));
        float _957 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
        float _958 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
        float _959 = isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0));
        float _960 = _924 * 0.5;
        float _961 = _934 * 0.5;
        float _962 = _944 * 0.5;
        float _963 = dot(vec3(_960, _961, _962), vec3(_960, _961, _962));
        float _968 = (_963 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_963);
        float _977 = (dot(vec3(_335, _336, _589), vec3(_968 * _960, _968 * _961, _968 * _962)) + 1.0) * 0.5;
        float _3550 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
        float _987 = sqrt(((_961 * _961) + (_960 * _960)) + (_962 * _962)) / (_957 + 9.9999997473787516355514526367188e-06);
        float _3561 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
        float _988 = isnan(1.0) ? _3561 : (isnan(_3561) ? 1.0 : min(_3561, 1.0));
        float _989 = _988 * 2.0;
        float _993 = (1.0 - _988) / (_988 + 1.0);
        float _3572 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
        float _994 = isnan(1.0) ? _3572 : (isnan(_3572) ? 1.0 : min(_3572, 1.0));
        float _1003 = ((((1.0 - _994) * (_989 + 2.0)) * exp2(log2(isnan(1.0) ? _3550 : (isnan(_3550) ? 1.0 : min(_3550, 1.0))) * (_989 + 1.0))) + _994) * _957;
        float _1004 = _925 * 0.5;
        float _1005 = _935 * 0.5;
        float _1006 = _945 * 0.5;
        float _1007 = dot(vec3(_1004, _1005, _1006), vec3(_1004, _1005, _1006));
        float _1012 = (_1007 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1007);
        float _1020 = (dot(vec3(_335, _336, _589), vec3(_1012 * _1004, _1012 * _1005, _1012 * _1006)) + 1.0) * 0.5;
        float _3583 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
        float _1029 = sqrt(((_1005 * _1005) + (_1004 * _1004)) + (_1006 * _1006)) / (_958 + 9.9999997473787516355514526367188e-06);
        float _3594 = isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0));
        float _1030 = isnan(1.0) ? _3594 : (isnan(_3594) ? 1.0 : min(_3594, 1.0));
        float _1031 = _1030 * 2.0;
        float _1035 = (1.0 - _1030) / (_1030 + 1.0);
        float _3605 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
        float _1036 = isnan(1.0) ? _3605 : (isnan(_3605) ? 1.0 : min(_3605, 1.0));
        float _1045 = ((((1.0 - _1036) * (_1031 + 2.0)) * exp2(log2(isnan(1.0) ? _3583 : (isnan(_3583) ? 1.0 : min(_3583, 1.0))) * (_1031 + 1.0))) + _1036) * _958;
        float _1046 = _926 * 0.5;
        float _1047 = _936 * 0.5;
        float _1048 = _946 * 0.5;
        float _1049 = dot(vec3(_1046, _1047, _1048), vec3(_1046, _1047, _1048));
        float _1054 = (_1049 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1049);
        float _1062 = (dot(vec3(_335, _336, _589), vec3(_1054 * _1046, _1054 * _1047, _1054 * _1048)) + 1.0) * 0.5;
        float _3616 = isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0));
        float _1071 = sqrt(((_1047 * _1047) + (_1046 * _1046)) + (_1048 * _1048)) / (_959 + 9.9999997473787516355514526367188e-06);
        float _3627 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
        float _1072 = isnan(1.0) ? _3627 : (isnan(_3627) ? 1.0 : min(_3627, 1.0));
        float _1073 = _1072 * 2.0;
        float _1077 = (1.0 - _1072) / (_1072 + 1.0);
        float _3638 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
        float _1078 = isnan(1.0) ? _3638 : (isnan(_3638) ? 1.0 : min(_3638, 1.0));
        float _1087 = ((((1.0 - _1078) * (_1073 + 2.0)) * exp2(log2(isnan(1.0) ? _3616 : (isnan(_3616) ? 1.0 : min(_3616, 1.0))) * (_1073 + 1.0))) + _1078) * _959;
        _1095 = _926;
        _1097 = _925;
        _1098 = _924;
        _1099 = _936;
        _1100 = _935;
        _1101 = _934;
        _1102 = _946;
        _1103 = _945;
        _1104 = _944;
        _1105 = _959;
        _1106 = _958;
        _1107 = _957;
        _1108 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0)));
        _1109 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1045 : (isnan(_1045) ? 0.0 : max(_1045, 0.0)));
        _1110 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0)));
    }
    else
    {
        _1095 = _1096;
        _1097 = _1096;
        _1098 = _1096;
        _1099 = _1096;
        _1100 = _1096;
        _1101 = _1096;
        _1102 = _1096;
        _1103 = _1096;
        _1104 = _1096;
        _1105 = _1096;
        _1106 = _1096;
        _1107 = _1096;
        _1108 = 0.0;
        _1109 = 0.0;
        _1110 = 0.0;
    }
    float _1408;
    float _1409;
    float _1410;
    float _1411;
    float _1412;
    float _1413;
    float _1414;
    float _1415;
    float _1416;
    float _1417;
    float _1418;
    float _1419;
    float _1420;
    float _1421;
    float _1422;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1139 = fma(_764, cbModelParam._m0[30u].z, fma(_760, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _756));
        float _1143 = fma(_764, cbModelParam._m0[31u].z, fma(_760, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _756));
        float _1147 = fma(_764, cbModelParam._m0[32u].z, fma(_760, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _756));
        float _1170 = _756 + _335;
        float _1171 = _760 + _336;
        float _1172 = _764 + _589;
        float _1182 = fma(_1172, cbModelParam._m0[30u].z, fma(_1171, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1170)) - _1139;
        float _1183 = fma(_1172, cbModelParam._m0[31u].z, fma(_1171, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1170)) - _1143;
        float _1184 = fma(_1172, cbModelParam._m0[32u].z, fma(_1171, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1170)) - _1147;
        float _1188 = inversesqrt(dot(vec3(_1182, _1183, _1184), vec3(_1182, _1183, _1184)));
        float _1201 = ((_1188 * _1182) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1139 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1202 = ((_1188 * _1183) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1143 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1203 = ((_1188 * _1184) / cbModelParam._m0[35u].z) + ((((((_1147 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1205 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1201, _1202, _1203), 0.0);
        vec4 _1212 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1201, _1202, _1203), 0.0);
        vec4 _1219 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1201, _1202, _1203), 0.0);
        vec4 _1226 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1201, _1202, _1203), 0.0);
        float _1238 = exp2((_1205.w + (-0.5)) * 20.0) * 2.0;
        float _1239 = _1238 * (_1205.x + (-0.5));
        float _1240 = _1238 * (_1205.y + (-0.5));
        float _1241 = _1238 * (_1205.z + (-0.5));
        float _1248 = exp2((_1212.w + (-0.5)) * 20.0) * 2.0;
        float _1249 = _1248 * (_1212.x + (-0.5));
        float _1250 = _1248 * (_1212.y + (-0.5));
        float _1251 = _1248 * (_1212.z + (-0.5));
        float _1258 = exp2((_1219.w + (-0.5)) * 20.0) * 2.0;
        float _1259 = _1258 * (_1219.x + (-0.5));
        float _1260 = _1258 * (_1219.y + (-0.5));
        float _1261 = _1258 * (_1219.z + (-0.5));
        float _1268 = exp2((_1226.w + (-0.5)) * 20.0) * 2.0;
        float _1269 = _1268 * (_1226.x + (-0.5));
        float _1270 = _1268 * (_1226.y + (-0.5));
        float _1271 = _1268 * (_1226.z + (-0.5));
        float _1272 = isnan(0.0) ? _1269 : (isnan(_1269) ? 0.0 : max(_1269, 0.0));
        float _1273 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
        float _1274 = isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0));
        float _1275 = _1239 * 0.5;
        float _1276 = _1249 * 0.5;
        float _1277 = _1259 * 0.5;
        float _1278 = dot(vec3(_1275, _1276, _1277), vec3(_1275, _1276, _1277));
        float _1283 = (_1278 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1278);
        float _1291 = (dot(vec3(_335, _336, _589), vec3(_1283 * _1275, _1283 * _1276, _1283 * _1277)) + 1.0) * 0.5;
        float _3679 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0));
        float _1300 = sqrt(((_1276 * _1276) + (_1275 * _1275)) + (_1277 * _1277)) / (_1272 + 9.9999997473787516355514526367188e-06);
        float _3690 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
        float _1301 = isnan(1.0) ? _3690 : (isnan(_3690) ? 1.0 : min(_3690, 1.0));
        float _1302 = _1301 * 2.0;
        float _1306 = (1.0 - _1301) / (_1301 + 1.0);
        float _3701 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        float _1307 = isnan(1.0) ? _3701 : (isnan(_3701) ? 1.0 : min(_3701, 1.0));
        float _1316 = ((((1.0 - _1307) * (_1302 + 2.0)) * exp2(log2(isnan(1.0) ? _3679 : (isnan(_3679) ? 1.0 : min(_3679, 1.0))) * (_1302 + 1.0))) + _1307) * _1272;
        float _1317 = _1240 * 0.5;
        float _1318 = _1250 * 0.5;
        float _1319 = _1260 * 0.5;
        float _1320 = dot(vec3(_1317, _1318, _1319), vec3(_1317, _1318, _1319));
        float _1325 = (_1320 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1320);
        float _1333 = (dot(vec3(_335, _336, _589), vec3(_1325 * _1317, _1325 * _1318, _1325 * _1319)) + 1.0) * 0.5;
        float _3712 = isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0));
        float _1342 = sqrt(((_1318 * _1318) + (_1317 * _1317)) + (_1319 * _1319)) / (_1273 + 9.9999997473787516355514526367188e-06);
        float _3723 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1343 = isnan(1.0) ? _3723 : (isnan(_3723) ? 1.0 : min(_3723, 1.0));
        float _1344 = _1343 * 2.0;
        float _1348 = (1.0 - _1343) / (_1343 + 1.0);
        float _3734 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1349 = isnan(1.0) ? _3734 : (isnan(_3734) ? 1.0 : min(_3734, 1.0));
        float _1358 = ((((1.0 - _1349) * (_1344 + 2.0)) * exp2(log2(isnan(1.0) ? _3712 : (isnan(_3712) ? 1.0 : min(_3712, 1.0))) * (_1344 + 1.0))) + _1349) * _1273;
        float _1359 = _1241 * 0.5;
        float _1360 = _1251 * 0.5;
        float _1361 = _1261 * 0.5;
        float _1362 = dot(vec3(_1359, _1360, _1361), vec3(_1359, _1360, _1361));
        float _1367 = (_1362 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1362);
        float _1375 = (dot(vec3(_335, _336, _589), vec3(_1367 * _1359, _1367 * _1360, _1367 * _1361)) + 1.0) * 0.5;
        float _3745 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
        float _1384 = sqrt(((_1360 * _1360) + (_1359 * _1359)) + (_1361 * _1361)) / (_1274 + 9.9999997473787516355514526367188e-06);
        float _3756 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
        float _1385 = isnan(1.0) ? _3756 : (isnan(_3756) ? 1.0 : min(_3756, 1.0));
        float _1386 = _1385 * 2.0;
        float _1390 = (1.0 - _1385) / (_1385 + 1.0);
        float _3767 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
        float _1391 = isnan(1.0) ? _3767 : (isnan(_3767) ? 1.0 : min(_3767, 1.0));
        float _1400 = ((((1.0 - _1391) * (_1386 + 2.0)) * exp2(log2(isnan(1.0) ? _3745 : (isnan(_3745) ? 1.0 : min(_3745, 1.0))) * (_1386 + 1.0))) + _1391) * _1274;
        _1408 = _1241;
        _1409 = _1240;
        _1410 = _1239;
        _1411 = _1251;
        _1412 = _1250;
        _1413 = _1249;
        _1414 = _1261;
        _1415 = _1260;
        _1416 = _1259;
        _1417 = _1274;
        _1418 = _1273;
        _1419 = _1272;
        _1420 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0)));
        _1421 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0)));
        _1422 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0)));
    }
    else
    {
        _1408 = _1096;
        _1409 = _1096;
        _1410 = _1096;
        _1411 = _1096;
        _1412 = _1096;
        _1413 = _1096;
        _1414 = _1096;
        _1415 = _1096;
        _1416 = _1096;
        _1417 = _1096;
        _1418 = _1096;
        _1419 = _1096;
        _1420 = 0.0;
        _1421 = 0.0;
        _1422 = 0.0;
    }
    float _1432 = (cbModelParam._m0[1u].x * (_1420 - _1108)) + _1108;
    float _1433 = (cbModelParam._m0[1u].x * (_1421 - _1109)) + _1109;
    float _1434 = (cbModelParam._m0[1u].x * (_1422 - _1110)) + _1110;
    float _1455 = fma(_1434, cbSceneParam._m0[89u].z, fma(_1433, cbSceneParam._m0[89u].y, _1432 * cbSceneParam._m0[89u].x));
    float _1458 = fma(_1434, cbSceneParam._m0[90u].z, fma(_1433, cbSceneParam._m0[90u].y, _1432 * cbSceneParam._m0[90u].x));
    float _1461 = fma(_1434, cbSceneParam._m0[91u].z, fma(_1433, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1432));
    float _1476 = _699 * 0.5;
    float _1477 = _700 * 0.5;
    float _1478 = _701 * 0.5;
    float _1479 = dot(vec4(_1476, _1477, _1478, 1.0), vec4(_1410, _1413, _1416, _1419));
    float _1482 = dot(vec4(_1476, _1477, _1478, 1.0), vec4(_1409, _1412, _1415, _1418));
    float _1485 = dot(vec4(_1476, _1477, _1478, 1.0), vec4(_1408, _1411, _1414, _1417));
    float _1519;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1492 = dot(vec4(_1476, _1477, _1478, 1.0), vec4(_1095, _1099, _1102, _1105));
        float _1496 = dot(vec4(_1476, _1477, _1478, 1.0), vec4(_1097, _1100, _1103, _1106));
        float _1500 = dot(vec4(_1476, _1477, _1478, 1.0), vec4(_1098, _1101, _1104, _1107));
        float _1507 = dot(vec4(cbModelParam._m0[39u]), vec4(_1476, _1477, _1478, 1.0));
        _1519 = dot(vec3(isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0)), isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0)), isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1507) ? 0.0 : (isnan(0.0) ? _1507 : max(0.0, _1507))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1519 = 1.0;
    }
    float _1530;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1521 = dot(vec4(cbModelParam._m0[40u]), vec4(_1476, _1477, _1478, 1.0));
        _1530 = dot(vec3(isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0)), isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0)), isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1521) ? 0.0 : (isnan(0.0) ? _1521 : max(0.0, _1521))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1530 = 1.0;
    }
    float _1534 = (_1530 * cbModelParam._m0[1u].x) + (_1519 * (1.0 - cbModelParam._m0[1u].x));
    float _1544 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _591);
    float _1545 = isnan(_1544) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1544 : min(cbModelParam._m0[25u].z, _1544));
    float _1625;
    float _1627;
    float _1629;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1592 = fma(_764, cbModelParam._m0[13u].z, fma(_760, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _756)) + cbModelParam._m0[13u].w;
        float _1596 = fma(_764, cbModelParam._m0[14u].z, fma(_760, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _756)) + cbModelParam._m0[14u].w;
        float _1600 = fma(_764, cbModelParam._m0[15u].z, fma(_760, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _756)) + cbModelParam._m0[15u].w;
        float _1603 = fma(_701, cbModelParam._m0[13u].z, fma(_700, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _699));
        float _1606 = fma(_701, cbModelParam._m0[14u].z, fma(_700, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _699));
        float _1609 = fma(_701, cbModelParam._m0[15u].z, fma(_700, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _699));
        float _1637;
        if (_1603 > 0.0)
        {
            _1637 = abs((1.0 - _1592) / _1603);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1603 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1592 + 1.0) / _1603);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1637 = frontier_phi_19_17_ladder;
        }
        float _1809;
        if (_1606 > 0.0)
        {
            _1809 = abs((1.0 - _1596) / _1606);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1606 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1596 + 1.0) / _1606);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1809 = frontier_phi_28_24_ladder;
        }
        float _2073;
        if (_1609 > 0.0)
        {
            _2073 = abs((1.0 - _1600) / _1609);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1609 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1600 + 1.0) / _1609);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2073 = frontier_phi_40_35_ladder;
        }
        float _2075 = isnan(_1809) ? _1637 : (isnan(_1637) ? _1809 : min(_1637, _1809));
        float _2076 = isnan(_2073) ? _2075 : (isnan(_2075) ? _2073 : min(_2075, _2073));
        float _2080 = (_2076 * _1603) + _1592;
        float _2081 = (_2076 * _1606) + _1596;
        float _2082 = (_2076 * _1609) + _1600;
        float _2083 = _2076 * 9.9999997473787516355514526367188e-05;
        float _2085 = (-1.0) - _2083;
        float _2087 = _2083 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2082 > _2087) || ((_2082 < _2085) || ((_2081 > _2087) || ((_2081 < _2085) || ((_2080 < _2085) || (_2080 > _2087))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2236 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2082, cbModelParam._m0[9u].z, fma(_2081, cbModelParam._m0[9u].y, _2080 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2082, cbModelParam._m0[10u].z, fma(_2081, cbModelParam._m0[10u].y, _2080 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2082, cbModelParam._m0[11u].z, fma(_2081, cbModelParam._m0[11u].y, _2080 * cbModelParam._m0[11u].x))), _1545);
            frontier_phi_18_40_ladder = _2236.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2236.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2236.x * cbModelParam._m0[1u].y;
        }
        _1625 = frontier_phi_18_40_ladder_2;
        _1627 = frontier_phi_18_40_ladder_1;
        _1629 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1613 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_699, _700, _701), _1545);
        _1625 = _1613.x * cbModelParam._m0[1u].y;
        _1627 = _1613.y * cbModelParam._m0[1u].y;
        _1629 = _1613.z * cbModelParam._m0[1u].y;
    }
    float _1633 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _591);
    float _1634 = isnan(_1633) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1633 : min(cbModelParam._m0[25u].w, _1633));
    float _1726;
    float _1728;
    float _1730;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1690 = fma(_764, cbModelParam._m0[21u].z, fma(_760, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _756)) + cbModelParam._m0[21u].w;
        float _1694 = fma(_764, cbModelParam._m0[22u].z, fma(_760, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _756)) + cbModelParam._m0[22u].w;
        float _1698 = fma(_764, cbModelParam._m0[23u].z, fma(_760, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _756)) + cbModelParam._m0[23u].w;
        float _1701 = fma(_701, cbModelParam._m0[21u].z, fma(_700, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _699));
        float _1704 = fma(_701, cbModelParam._m0[22u].z, fma(_700, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _699));
        float _1707 = fma(_701, cbModelParam._m0[23u].z, fma(_700, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _699));
        float _1814;
        if (_1701 > 0.0)
        {
            _1814 = abs((1.0 - _1690) / _1701);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1701 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1690 + 1.0) / _1701);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1814 = frontier_phi_30_26_ladder;
        }
        float _2100;
        if (_1704 > 0.0)
        {
            _2100 = abs((1.0 - _1694) / _1704);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1704 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1694 + 1.0) / _1704);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2100 = frontier_phi_42_37_ladder;
        }
        float _2419;
        if (_1707 > 0.0)
        {
            _2419 = abs((1.0 - _1698) / _1707);
        }
        else
        {
            float frontier_phi_51_49_ladder;
            if (_1707 < 0.0)
            {
                frontier_phi_51_49_ladder = abs((_1698 + 1.0) / _1707);
            }
            else
            {
                frontier_phi_51_49_ladder = 5000.0;
            }
            _2419 = frontier_phi_51_49_ladder;
        }
        float _2421 = isnan(_2100) ? _1814 : (isnan(_1814) ? _2100 : min(_1814, _2100));
        float _2422 = isnan(_2419) ? _2421 : (isnan(_2421) ? _2419 : min(_2421, _2419));
        float _2426 = (_2422 * _1701) + _1690;
        float _2427 = (_2422 * _1704) + _1694;
        float _2428 = (_2422 * _1707) + _1698;
        float _2429 = _2422 * 9.9999997473787516355514526367188e-05;
        float _2430 = (-1.0) - _2429;
        float _2432 = _2429 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_2428 > _2432) || ((_2428 < _2430) || ((_2427 > _2432) || ((_2427 < _2430) || ((_2426 < _2430) || (_2426 > _2432))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2529 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2428, cbModelParam._m0[17u].z, fma(_2427, cbModelParam._m0[17u].y, _2426 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2428, cbModelParam._m0[18u].z, fma(_2427, cbModelParam._m0[18u].y, _2426 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2428, cbModelParam._m0[19u].z, fma(_2427, cbModelParam._m0[19u].y, _2426 * cbModelParam._m0[19u].x))), _1634);
            frontier_phi_27_51_ladder = _2529.x * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _2529.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _2529.y * cbModelParam._m0[1u].z;
        }
        _1726 = frontier_phi_27_51_ladder;
        _1728 = frontier_phi_27_51_ladder_2;
        _1730 = frontier_phi_27_51_ladder_1;
    }
    else
    {
        vec4 _1710 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_699, _700, _701), _1634);
        _1726 = _1710.x * cbModelParam._m0[1u].z;
        _1728 = _1710.y * cbModelParam._m0[1u].z;
        _1730 = _1710.z * cbModelParam._m0[1u].z;
    }
    float _1742 = ((((1.0 - _724) * ((_712 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_724 * _712)) * _691;
    float _1743 = _1742 * ((cbModelParam._m0[1u].w * (_1726 - _1625)) + _1625);
    float _1744 = _1742 * ((cbModelParam._m0[1u].w * (_1728 - _1627)) + _1627);
    float _1745 = _1742 * ((cbModelParam._m0[1u].w * (_1730 - _1629)) + _1629);
    float _1748 = fma(_1745, cbSceneParam._m0[89u].z, fma(_1744, cbSceneParam._m0[89u].y, _1743 * cbSceneParam._m0[89u].x));
    float _1751 = fma(_1745, cbSceneParam._m0[90u].z, fma(_1744, cbSceneParam._m0[90u].y, _1743 * cbSceneParam._m0[90u].x));
    float _1754 = fma(_1745, cbSceneParam._m0[91u].z, fma(_1744, cbSceneParam._m0[91u].y, _1743 * cbSceneParam._m0[91u].x));
    float _1788 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1792 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1796 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1800 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1801 = _1788 / _1800;
    float _1802 = _1792 / _1800;
    float _1803 = _1796 / _1800;
    float _1950;
    float _1951;
    float _1952;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1830 = ((uint(_1803 > cbSceneParam._m0[59u].y) + uint(_1803 > cbSceneParam._m0[59u].x)) + uint(_1803 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1831 = _1830 + 43u;
        uint _1839 = _1830 + 44u;
        uint _1847 = _1830 + 45u;
        uint _1855 = _1830 + 46u;
        float _1866 = fma(_1800, cbSceneParam._m0[_1831].w, fma(_1796, cbSceneParam._m0[_1831].z, fma(_1792, cbSceneParam._m0[_1831].y, _1788 * cbSceneParam._m0[_1831].x)));
        float _1870 = fma(_1800, cbSceneParam._m0[_1839].w, fma(_1796, cbSceneParam._m0[_1839].z, fma(_1792, cbSceneParam._m0[_1839].y, _1788 * cbSceneParam._m0[_1839].x)));
        float _1878 = fma(_1800, cbSceneParam._m0[_1855].w, fma(_1796, cbSceneParam._m0[_1855].z, fma(_1792, cbSceneParam._m0[_1855].y, _1788 * cbSceneParam._m0[_1855].x)));
        float _1883 = cbSceneParam._m0[33u].z * _1878;
        float _1885 = cbSceneParam._m0[33u].w * _1878;
        float _1888 = fma(_1800, cbSceneParam._m0[_1847].w, fma(_1796, cbSceneParam._m0[_1847].z, fma(_1792, cbSceneParam._m0[_1847].y, _1788 * cbSceneParam._m0[_1847].x))) / _1878;
        float _1936 = (cbSceneParam._m0[33u].x - sqrt(((_1802 * _1802) + (_1801 * _1801)) + (_1803 * _1803))) * cbSceneParam._m0[33u].y;
        float _3893 = isnan(0.0) ? _1936 : (isnan(_1936) ? 0.0 : max(_1936, 0.0));
        float _1943 = (isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1883 + _1866) / _1878, (_1885 + _1870) / _1878), _1888), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1885 + _1866) / _1878, (_1870 - _1883) / _1878), _1888), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1866 - _1883) / _1878, (_1870 - _1885) / _1878), _1888), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1866 - _1885) / _1878, (_1883 + _1870) / _1878), _1888), 0.0)).x), vec4(0.25)));
        _1950 = 1.0 - (_1943 * cbSceneParam._m0[34u].x);
        _1951 = 1.0 - (_1943 * cbSceneParam._m0[34u].y);
        _1952 = 1.0 - (_1943 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1950 = 1.0;
        _1951 = 1.0;
        _1952 = 1.0;
    }
    float _2016;
    float _2018;
    float _2020;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2004 = fma(_1800, cbSceneParam._m0[63u].w, fma(_1796, cbSceneParam._m0[63u].z, fma(_1792, cbSceneParam._m0[63u].y, _1788 * cbSceneParam._m0[63u].x)));
        float _2005 = fma(_1800, cbSceneParam._m0[60u].w, fma(_1796, cbSceneParam._m0[60u].z, fma(_1792, cbSceneParam._m0[60u].y, _1788 * cbSceneParam._m0[60u].x))) / _2004;
        float _2006 = fma(_1800, cbSceneParam._m0[61u].w, fma(_1796, cbSceneParam._m0[61u].z, fma(_1792, cbSceneParam._m0[61u].y, _1788 * cbSceneParam._m0[61u].x))) / _2004;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2005 >= cbSceneParam._m0[64u].x) && (_2006 >= cbSceneParam._m0[64u].y)) && (_2005 <= cbSceneParam._m0[64u].z)) && (_2006 <= cbSceneParam._m0[64u].w))
        {
            float _2113 = fma(_1800, cbSceneParam._m0[62u].w, fma(_1796, cbSceneParam._m0[62u].z, fma(_1792, cbSceneParam._m0[62u].y, _1788 * cbSceneParam._m0[62u].x))) / _2004;
            float _2117 = isnan(cbSceneParam._m0[41u].w) ? _2113 : (isnan(_2113) ? cbSceneParam._m0[41u].w : max(_2113, cbSceneParam._m0[41u].w));
            float _2160 = (cbSceneParam._m0[33u].x - sqrt(((_1802 * _1802) + (_1801 * _1801)) + (_1803 * _1803))) * cbSceneParam._m0[33u].y;
            float _3909 = isnan(0.0) ? _2160 : (isnan(_2160) ? 0.0 : max(_2160, 0.0));
            float _2167 = (isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2005, cbSceneParam._m0[33u].w + _2006), _2117), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2005, _2006 - cbSceneParam._m0[33u].z), _2117), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2005 - cbSceneParam._m0[33u].z, _2006 - cbSceneParam._m0[33u].w), _2117), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2005 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2006), _2117), 0.0)).x), vec4(0.25)));
            float _2171 = 1.0 - (_2167 * cbSceneParam._m0[34u].x);
            float _2172 = 1.0 - (_2167 * cbSceneParam._m0[34u].y);
            float _2173 = 1.0 - (_2167 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2173) ? _1952 : (isnan(_1952) ? _2173 : min(_1952, _2173));
            frontier_phi_39_38_ladder_1 = isnan(_2172) ? _1951 : (isnan(_1951) ? _2172 : min(_1951, _2172));
            frontier_phi_39_38_ladder_2 = isnan(_2171) ? _1950 : (isnan(_1950) ? _2171 : min(_1950, _2171));
        }
        else
        {
            frontier_phi_39_38_ladder = _1952;
            frontier_phi_39_38_ladder_1 = _1951;
            frontier_phi_39_38_ladder_2 = _1950;
        }
        _2016 = frontier_phi_39_38_ladder_2;
        _2018 = frontier_phi_39_38_ladder_1;
        _2020 = frontier_phi_39_38_ladder;
    }
    else
    {
        _2016 = _1950;
        _2018 = _1951;
        _2020 = _1952;
    }
    uvec4 _2025 = floatBitsToUint(cbInstanceData._m0[_667 + 5u]);
    uint _2027 = _2025.x * 14u;
    uint _2028 = _2027 + 13u;
    float _2033 = _691 + (-1.0);
    float _2036 = (cbLight._m0[_2028].x * _2033) + 1.0;
    float _2037 = (cbLight._m0[_2028].y * _2033) + 1.0;
    uint _2039 = _2027 + 4u;
    float _2050 = dot(vec3(cbLight._m0[_2027].xyz), vec3(_335, _336, _589));
    float _2053 = isnan(1.0) ? _2036 : (isnan(_2036) ? 1.0 : min(_2036, 1.0));
    float _2054 = cbLight._m0[_2039].x * _2016;
    float _2055 = cbLight._m0[_2039].y * _2018;
    float _2056 = cbLight._m0[_2039].z * _2020;
    uint _2057 = _2027 + 5u;
    uint _2063 = _2027 | 1u;
    float _2069 = dot(vec3(cbLight._m0[_2063].xyz), vec3(_335, _336, _589));
    float _2072 = isnan(1.0) ? _2037 : (isnan(_2037) ? 1.0 : min(_2037, 1.0));
    float _2245;
    float _2246;
    float _2247;
    if (_592 == 0.0)
    {
        float _3945 = isnan(0.0) ? _2050 : (isnan(_2050) ? 0.0 : max(_2050, 0.0));
        float _3956 = isnan(0.0) ? _2069 : (isnan(_2069) ? 0.0 : max(_2069, 0.0));
        float _2182 = (isnan(1.0) ? _3945 : (isnan(_3945) ? 1.0 : min(_3945, 1.0))) * 0.3183098733425140380859375;
        float _2184 = (isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0))) * 0.3183098733425140380859375;
        _2245 = ((cbLight._m0[_2057].x * _2072) * _2184) + ((_2054 * _2053) * _2182);
        _2246 = ((_2072 * cbLight._m0[_2057].y) * _2184) + ((_2055 * _2053) * _2182);
        _2247 = ((_2072 * cbLight._m0[_2057].z) * _2184) + ((_2056 * _2053) * _2182);
    }
    else
    {
        float _2194 = _2050 + _592;
        float _2197 = (_592 * 2.0) + 1.0;
        float _2198 = (isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0))) / _2197;
        float _2205 = _2069 + _592;
        float _2207 = (isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0))) / _2197;
        _2245 = (((_2207 * cbLight._m0[_2057].x) * _2072) + ((_2054 * _2198) * _2053)) * 0.3183098733425140380859375;
        _2246 = (((_2207 * cbLight._m0[_2057].y) * _2072) + ((_2055 * _2198) * _2053)) * 0.3183098733425140380859375;
        _2247 = (((_2207 * cbLight._m0[_2057].z) * _2072) + ((_2056 * _2198) * _2053)) * 0.3183098733425140380859375;
    }
    uint _2251 = _2027 + 8u;
    float _2267 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2027].w)) * _591) * 0.949999988079071044921875);
    float _2268 = _2267 * _2267;
    float _2269 = cbLight._m0[_2027].x + _444;
    float _2270 = cbLight._m0[_2027].y + _445;
    float _2271 = cbLight._m0[_2027].z + _446;
    float _2275 = inversesqrt(dot(vec3(_2269, _2270, _2271), vec3(_2269, _2270, _2271)));
    float _2276 = _2275 * _2269;
    float _2277 = _2275 * _2270;
    float _2278 = _2275 * _2271;
    float _2279 = dot(vec3(_335, _336, _589), vec3(cbLight._m0[_2027].xyz));
    float _3977 = isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : max(_2279, 0.0));
    float _2282 = isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0));
    float _3988 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    float _2283 = isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0));
    float _2284 = dot(vec3(_335, _336, _589), vec3(_2276, _2277, _2278));
    float _3999 = isnan(0.0) ? _2284 : (isnan(_2284) ? 0.0 : max(_2284, 0.0));
    float _2287 = isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0));
    float _2288 = dot(vec3(cbLight._m0[_2027].xyz), vec3(_2276, _2277, _2278));
    float _4010 = isnan(0.0) ? _2288 : (isnan(_2288) ? 0.0 : max(_2288, 0.0));
    float _2292 = _2268 * _2268;
    float _2296 = ((_2287 * _2287) * (_2292 + (-1.0))) + 1.0;
    float _2307 = (exp2(log2(1.0 - (isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2308 = 1.0 - _2268;
    float _2319 = (0.5 / (((_2283 * ((_2282 * _2308) + _2268)) + 9.9999999392252902907785028219223e-09) + (((_2283 * _2308) + _2268) * _2282))) * _2282;
    float _4021 = isnan(0.0) ? _2319 : (isnan(_2319) ? 0.0 : max(_2319, 0.0));
    float _2321 = (isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0))) * (_2292 / ((_2296 * _2296) * 3.141590118408203125));
    uint _2337 = _2027 + 9u;
    float _2351 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2063].w)) * _591) * 0.949999988079071044921875);
    float _2352 = _2351 * _2351;
    float _2353 = cbLight._m0[_2063].x + _444;
    float _2354 = cbLight._m0[_2063].y + _445;
    float _2355 = cbLight._m0[_2063].z + _446;
    float _2359 = inversesqrt(dot(vec3(_2353, _2354, _2355), vec3(_2353, _2354, _2355)));
    float _2360 = _2359 * _2353;
    float _2361 = _2359 * _2354;
    float _2362 = _2359 * _2355;
    float _2363 = dot(vec3(_335, _336, _589), vec3(cbLight._m0[_2063].xyz));
    float _4032 = isnan(0.0) ? _2363 : (isnan(_2363) ? 0.0 : max(_2363, 0.0));
    float _2366 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
    float _2367 = dot(vec3(_335, _336, _589), vec3(_2360, _2361, _2362));
    float _4043 = isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0));
    float _2370 = isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0));
    float _2371 = dot(vec3(cbLight._m0[_2063].xyz), vec3(_2360, _2361, _2362));
    float _4054 = isnan(0.0) ? _2371 : (isnan(_2371) ? 0.0 : max(_2371, 0.0));
    float _2375 = _2352 * _2352;
    float _2379 = ((_2370 * _2370) * (_2375 + (-1.0))) + 1.0;
    float _2388 = (exp2(log2(1.0 - (isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2389 = 1.0 - _2352;
    float _2399 = (0.5 / (((_2283 * ((_2366 * _2389) + _2352)) + 9.9999999392252902907785028219223e-09) + (((_2283 * _2389) + _2352) * _2366))) * _2366;
    float _4065 = isnan(0.0) ? _2399 : (isnan(_2399) ? 0.0 : max(_2399, 0.0));
    float _2401 = (isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0))) * (_2375 / ((_2379 * _2379) * 3.141590118408203125));
    float _2411 = (((_2388 * cbLight._m0[_2337].x) * _2401) * _2072) + ((((cbLight._m0[_2251].x * _2016) * _2307) * _2321) * _2053);
    float _2412 = (((_2388 * cbLight._m0[_2337].y) * _2401) * _2072) + ((((cbLight._m0[_2251].y * _2018) * _2307) * _2321) * _2053);
    float _2413 = (((_2388 * cbLight._m0[_2337].z) * _2401) * _2072) + ((((cbLight._m0[_2251].z * _2020) * _2307) * _2321) * _2053);
    float _2500;
    float _2502;
    float _2504;
    float _2506;
    float _2508;
    float _2510;
    if (_2025.y == 0u)
    {
        uvec4 _2456 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2457 = _2456.x;
        uint _2468 = uint((float(_2456.y) * floor(float(uint(cbSceneParam._m0[85u].y * _630) / _2457))) + floor(float(uint(cbSceneParam._m0[85u].x * _629) / _2457)));
        float _2478 = (log2(_1803 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2479 = isnan(0.0) ? _2478 : (isnan(_2478) ? 0.0 : max(_2478, 0.0));
        uint _2482 = uint(isnan(14.0) ? _2479 : (isnan(_2479) ? 14.0 : min(_2479, 14.0)));
        uint _2489 = _2456.z;
        float _2534;
        float _2536;
        float _2538;
        float _2540;
        float _2542;
        float _2544;
        if (((((1u << ((_2489 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2482 << 2u) + (_2468 << 6u)) >> 2u)).x) == 0u) || ((_2489 & 240u) == 0u))
        {
            _2534 = 0.0;
            _2536 = 0.0;
            _2538 = 0.0;
            _2540 = 0.0;
            _2542 = 0.0;
            _2544 = 0.0;
        }
        else
        {
            float _2535;
            float _2537;
            float _2539;
            float _2541;
            float _2543;
            float _2545;
            float _2700 = 0.0;
            float _2701 = 0.0;
            float _2702 = 0.0;
            float _2703 = 0.0;
            float _2704 = 0.0;
            float _2705 = 0.0;
            uint _2706 = 0u;
            uint _2715;
            bool _2716;
            for (;;)
            {
                _2715 = texelFetch(g_lightClassification, int((((_2482 << 5u) + (_2468 << 9u)) + (_2706 << 2u)) >> 2u)).x;
                _2716 = _2715 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2716)
                {
                    frontier_phi_63_pred = _2702;
                    frontier_phi_63_pred_1 = _2705;
                    frontier_phi_63_pred_2 = _2704;
                    frontier_phi_63_pred_3 = _2703;
                    frontier_phi_63_pred_4 = _2701;
                    frontier_phi_63_pred_5 = _2700;
                }
                else
                {
                    float _2916;
                    float _2917;
                    float _2918;
                    float _2919;
                    float _2920;
                    float _2921;
                    uint _2922;
                    _2916 = _2700;
                    _2917 = _2701;
                    _2918 = _2702;
                    _2919 = _2703;
                    _2920 = _2704;
                    _2921 = _2705;
                    _2922 = _2715;
                    float _2848;
                    float _2849;
                    float _2850;
                    float _2851;
                    float _2852;
                    float _2853;
                    for (;;)
                    {
                        uint _2926 = uint(findLSB(_2922)) + (_2706 << 5u);
                        uint _2923 = (_2922 + 4294967295u) & _2922;
                        uint _2928 = _2926 * 48u;
                        vec4 _2942 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2928)).x, texelFetch(g_PointLightRenderingBuffer, int(_2928 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2928 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2928 + 3u)).x));
                        uint _2948 = (_2926 * 48u) + 4u;
                        vec4 _2961 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2948)).x, texelFetch(g_PointLightRenderingBuffer, int(_2948 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2948 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2948 + 3u)).x));
                        float _2962 = _2961.x;
                        float _2963 = _2961.y;
                        float _2964 = _2961.z;
                        uint _2967 = (_2926 * 48u) + 8u;
                        vec3 _2978 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2967)).x, texelFetch(g_PointLightRenderingBuffer, int(_2967 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2967 + 2u)).x));
                        uint _2983 = (_2926 * 48u) + 12u;
                        vec2 _2991 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2983)).x, texelFetch(g_PointLightRenderingBuffer, int(_2983 + 1u)).x));
                        float _2997 = inversesqrt(dot(vec3(_1801, _1802, _1803), vec3(_1801, _1802, _1803)));
                        float _2998 = _2997 * _1801;
                        float _2999 = _2997 * _1802;
                        float _3000 = _2997 * _1803;
                        float _3001 = _2942.x - _1801;
                        float _3002 = _2942.y - _1802;
                        float _3003 = _2942.z - _1803;
                        float _3004 = dot(vec3(_3001, _3002, _3003), vec3(_3001, _3002, _3003));
                        float _3007 = inversesqrt(_3004);
                        float _3008 = _3007 * _3001;
                        float _3009 = _3007 * _3002;
                        float _3010 = _3007 * _3003;
                        float _3011 = dot(vec3(_648, _651, _654), vec3(_3008, _3009, _3010));
                        float _3016 = 1.0 - (_3004 * _2942.w);
                        float _4086 = isnan(0.0) ? _3016 : (isnan(_3016) ? 0.0 : max(_3016, 0.0));
                        float _3017 = isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0));
                        float _3018 = sqrt(_3004) * _2961.w;
                        float _3021 = 1.39999997615814208984375 / (_3018 + 1.39999997615814208984375);
                        float _3022 = _3021 * _3021;
                        float _3023 = 1.0 - _3022;
                        float _3025 = (_3023 * _3023) * _592;
                        float _3028 = ((_3023 * _3011) + _3022) + _3025;
                        float _3033 = _3018 * _3018;
                        float _3038 = ((isnan(0.0) ? _3028 : (isnan(_3028) ? 0.0 : max(_3028, 0.0))) * _3017) / (((_3025 * 2.0) + 1.0) * ((_3033 * 0.699999988079071044921875) + 1.0));
                        float _3042 = dot(vec3(_3008, _3009, _3010), vec3(_2998, _2999, _3000));
                        float _4102 = isnan(0.0) ? _3042 : (isnan(_3042) ? 0.0 : max(_3042, 0.0));
                        float _3049 = dot(vec3((-0.0) - _2998, (-0.0) - _2999, (-0.0) - _3000), vec3(_648, _651, _654)) + 1.0;
                        float _3051 = (isnan(0.0) ? _3049 : (isnan(_3049) ? 0.0 : max(_3049, 0.0))) * 0.5;
                        float _3058 = ((_3051 * _3051) * _2991.x) * exp2((_2991.y * 32.0) * log2(isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0))));
                        float _3060 = _592 / (_592 + 1.0);
                        float _3076 = (-0.0) - _1801;
                        float _3077 = (-0.0) - _1802;
                        float _3078 = (-0.0) - _1803;
                        float _3082 = inversesqrt(dot(vec3(_3076, _3077, _3078), vec3(_3076, _3077, _3078)));
                        float _3083 = _3082 * _3076;
                        float _3084 = _3082 * _3077;
                        float _3085 = _3082 * _3078;
                        float _3092 = exp2(log2(1.0 / ((_3033 * 3.5) + 5.0)) * 0.25);
                        float _3093 = 1.0 - _712;
                        float _3100 = sqrt(1.0 - ((1.0 - (_3093 * _3093)) * (1.0 - (_3092 * _3092))));
                        float _3101 = _3100 * _3100;
                        float _3102 = _3101 * _3101;
                        float _3103 = _3083 + _3008;
                        float _3104 = _3084 + _3009;
                        float _3105 = _3085 + _3010;
                        float _3109 = inversesqrt(dot(vec3(_3103, _3104, _3105), vec3(_3103, _3104, _3105)));
                        float _3113 = dot(vec3(_648, _651, _654), vec3(_3083, _3084, _3085));
                        float _4118 = isnan(0.0) ? _3113 : (isnan(_3113) ? 0.0 : max(_3113, 0.0));
                        float _3116 = isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0));
                        float _3117 = dot(vec3(_648, _651, _654), vec3(_3109 * _3103, _3109 * _3104, _3109 * _3105));
                        float _4129 = isnan(0.0) ? _3117 : (isnan(_3117) ? 0.0 : max(_3117, 0.0));
                        float _3120 = isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0));
                        float _3124 = ((_3120 * _3120) * (_3102 + (-1.0))) + 1.0;
                        float _3125 = _3021 * _3101;
                        float _3126 = _3125 * _3125;
                        float _3129 = ((1.0 - _3126) * _3011) + _3126;
                        float _4140 = isnan(0.0) ? _3129 : (isnan(_3129) ? 0.0 : max(_3129, 0.0));
                        float _3130 = isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0));
                        float _3131 = 1.0 - _3101;
                        float _3141 = (0.5 / (((_3130 * ((_3116 * _3131) + _3101)) + 9.9999999392252902907785028219223e-09) + (((_3130 * _3131) + _3101) * _3116))) * _3130;
                        float _4151 = isnan(0.0) ? _3141 : (isnan(_3141) ? 0.0 : max(_3141, 0.0));
                        float _3152 = (((_3102 * 3.1415927410125732421875) * (isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0)))) / ((_3124 * _3124) * ((_3033 * 2.1991131305694580078125) + 3.141590118408203125))) * _3017;
                        _2851 = (((((_2962 * 0.3183098733425140380859375) * _3060) * _3058) + _2962) * _3038) + _2919;
                        _2852 = (((((_2963 * 0.3183098733425140380859375) * _3060) * _3058) + _2963) * _3038) + _2920;
                        _2853 = (((((_2964 * 0.3183098733425140380859375) * _3060) * _3058) + _2964) * _3038) + _2921;
                        _2848 = (_3152 * _2978.x) + _2916;
                        _2849 = (_3152 * _2978.y) + _2917;
                        _2850 = (_3152 * _2978.z) + _2918;
                        if (_2923 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2916 = _2848;
                            _2917 = _2849;
                            _2918 = _2850;
                            _2919 = _2851;
                            _2920 = _2852;
                            _2921 = _2853;
                            _2922 = _2923;
                        }
                    }
                    frontier_phi_63_pred = _2850;
                    frontier_phi_63_pred_1 = _2853;
                    frontier_phi_63_pred_2 = _2852;
                    frontier_phi_63_pred_3 = _2851;
                    frontier_phi_63_pred_4 = _2849;
                    frontier_phi_63_pred_5 = _2848;
                }
                _2539 = frontier_phi_63_pred;
                _2545 = frontier_phi_63_pred_1;
                _2543 = frontier_phi_63_pred_2;
                _2541 = frontier_phi_63_pred_3;
                _2537 = frontier_phi_63_pred_4;
                _2535 = frontier_phi_63_pred_5;
                uint _2707 = _2706 + 1u;
                if (_2707 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2700 = _2535;
                    _2701 = _2537;
                    _2702 = _2539;
                    _2703 = _2541;
                    _2704 = _2543;
                    _2705 = _2545;
                    _2706 = _2707;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2534 = _2535;
            _2536 = _2537;
            _2538 = _2539;
            _2540 = _2541;
            _2542 = _2543;
            _2544 = _2545;
        }
        float _2549 = isnan(1.0) ? _691 : (isnan(_691) ? 1.0 : min(_691, 1.0));
        _2500 = (_2549 * _2540) + _2245;
        _2502 = (_2549 * _2542) + _2246;
        _2504 = (_2549 * _2544) + _2247;
        _2506 = ((_2534 * 0.039999999105930328369140625) * _2549) + _2411;
        _2508 = ((_2536 * 0.039999999105930328369140625) * _2549) + _2412;
        _2510 = ((_2538 * 0.039999999105930328369140625) * _2549) + _2413;
    }
    else
    {
        _2500 = _2245;
        _2502 = _2246;
        _2504 = _2247;
        _2506 = _2411;
        _2508 = _2412;
        _2510 = _2413;
    }
    float _2623;
    float _2624;
    float _2625;
    if (_592 > 0.0)
    {
        uint _2556 = _2027 + 4u;
        float _2562 = (-0.0) - _444;
        float _2563 = (-0.0) - _445;
        float _2564 = (-0.0) - _446;
        float _2565 = dot(vec3(cbLight._m0[_2027].xyz), vec3(_2562, _2563, _2564));
        float _4167 = isnan(0.0) ? _2565 : (isnan(_2565) ? 0.0 : max(_2565, 0.0));
        float _2569 = _702 + 1.0;
        float _2571 = (isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0))) * 0.5;
        float _2576 = _2571 * _2571;
        float _2577 = _2576 * exp2(log2(isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0))) * 32.0);
        float _2579 = _592 / (_592 + 1.0);
        float _2580 = isnan(_2036) ? 1.0 : (isnan(1.0) ? _2036 : min(1.0, _2036));
        uint _2593 = _2027 + 5u;
        float _2599 = dot(vec3(cbLight._m0[_2063].xyz), vec3(_2562, _2563, _2564));
        float _4188 = isnan(0.0) ? _2599 : (isnan(_2599) ? 0.0 : max(_2599, 0.0));
        float _2606 = _2576 * exp2(log2(isnan(1.0) ? _4188 : (isnan(_4188) ? 1.0 : min(_4188, 1.0))) * 32.0);
        float _2607 = isnan(_2037) ? 1.0 : (isnan(1.0) ? _2037 : min(1.0, _2037));
        _2623 = ((((_2606 * cbLight._m0[_2593].x) * _2579) * _2607) + ((((cbLight._m0[_2556].x * _2016) * _2577) * _2579) * _2580)) * 0.3183098733425140380859375;
        _2624 = ((((_2606 * cbLight._m0[_2593].y) * _2579) * _2607) + ((((cbLight._m0[_2556].y * _2018) * _2577) * _2579) * _2580)) * 0.3183098733425140380859375;
        _2625 = ((((_2606 * cbLight._m0[_2593].z) * _2579) * _2607) + ((((cbLight._m0[_2556].z * _2020) * _2577) * _2579) * _2580)) * 0.3183098733425140380859375;
    }
    else
    {
        _2623 = 0.0;
        _2624 = 0.0;
        _2625 = 0.0;
    }
    float _4204 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
    float _4215 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _4226 = isnan(0.0) ? _680 : (isnan(_680) ? 0.0 : max(_680, 0.0));
    float _4237 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _2640 = (isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0))) * ((_2500 + ((isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0))) * _691)) + _2623);
    float _2641 = (isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0))) * ((_2502 + ((isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0))) * _691)) + _2624);
    float _2642 = (isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0))) * ((_2504 + ((isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0))) * _691)) + _2625);
    float _2646 = 0.959999978542327880859375 - (exp2(log2(1.0 - _706) * 5.0) * 0.959999978542327880859375);
    float _2657 = (_2640 + ((_2506 + ((isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0))) * _1534)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _543.x) * _2646) - _2640) * _587);
    float _2659 = (_2641 + ((_2508 + ((isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0))) * _1534)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _543.y) * _2646) - _2641) * _587);
    float _2661 = (_2642 + ((_2510 + ((isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0))) * _1534)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _543.z) * _2646) - _2642) * _587);
    float _2666 = cbInstanceData._m0[_667 + 6u].w * (isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0)));
    float _2671 = _629 / cbSceneParam._m0[86u].x;
    float _2672 = _630 / cbSceneParam._m0[86u].y;
    vec4 _2686 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2671, _2672, (log2((isnan(cbSceneParam._m0[77u].w) ? _611 : (isnan(_611) ? cbSceneParam._m0[77u].w : min(_611, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2688 = _2686.x;
    float _2689 = _2686.y;
    float _2690 = _2686.z;
    float _2691 = _2686.w;
    float _2758;
    float _2760;
    float _2762;
    float _2764;
    if (_611 > cbSceneParam._m0[78u].w)
    {
        float _2721 = isnan(_611) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _611 : min(cbSceneParam._m0[80u].w, _611));
        float _2722 = _2721 / _611;
        float _2733 = _2722 * _287;
        float _2734 = _288 * _2722;
        float _2735 = (-0.0) - _2734;
        float _2736 = _2722 * _289;
        float _2738 = (cbSceneParam._m0[77u].w * _2735) / _2721;
        float _2739 = _2738 + cbSceneParam._m0[79u].w;
        float _2740 = cbSceneParam._m0[79u].w - _2734;
        float _2746 = sqrt(((_2733 * _2733) + (_2734 * _2734)) + (_2736 * _2736));
        float _2749 = (1.0 - (cbSceneParam._m0[77u].w / _2721)) * _2746;
        float _2754 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2756 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3157;
        if (abs((_2735 - _2738) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3157 = ((((_2739 > 0.0) ? exp2(_2754 * _2739) : (2.0 - exp2(_2756 * _2739))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2749;
        }
        else
        {
            float _2873 = 1.0 / cbSceneParam._m0[80u].x;
            float _2874 = isnan(_2740) ? _2739 : (isnan(_2739) ? _2740 : max(_2739, _2740));
            float _2875 = isnan(_2740) ? _2739 : (isnan(_2739) ? _2740 : min(_2739, _2740));
            float _2884 = isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : min(_2874, 0.0));
            float _2885 = isnan(0.0) ? _2875 : (isnan(_2875) ? 0.0 : min(_2875, 0.0));
            _3157 = ((abs(_2746 / _2735) * cbSceneParam._m0[80u].y) * ((((_2884 - _2885) * 2.0) - ((exp2(_2754 * (isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : max(_2874, 0.0)))) - exp2(_2754 * (isnan(0.0) ? _2875 : (isnan(_2875) ? 0.0 : max(_2875, 0.0))))) * _2873)) - ((exp2(_2756 * _2884) - exp2(_2756 * _2885)) * _2873))) + (_2749 * cbSceneParam._m0[80u].z);
        }
        vec4 _3159 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2671, _2672, 1.0), 0.0);
        float _3168 = exp2((_3157 * (-1.44269502162933349609375)) * (1.0 - _3159.w));
        float _3169 = log2(_3168);
        float _3185 = log2(_2691);
        _2758 = (exp2(_3185 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3169 * cbSceneParam._m0[78u].x)) * _3159.x) / cbSceneParam._m0[78u].x)) + _2688;
        _2760 = (exp2(_3185 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3169 * cbSceneParam._m0[78u].y)) * _3159.y) / cbSceneParam._m0[78u].y)) + _2689;
        _2762 = (exp2(_3185 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3169 * cbSceneParam._m0[78u].z)) * _3159.z) / cbSceneParam._m0[78u].z)) + _2690;
        _2764 = _3168 * _2691;
    }
    else
    {
        _2758 = _2688;
        _2760 = _2689;
        _2762 = _2690;
        _2764 = _2691;
    }
    bool _3195;
    float _2819;
    vec4 _2822;
    float _2824;
    vec4 _2826;
    float _2834;
    float _2835;
    float _2836;
    float _2837;
    bool _2847;
    for (;;)
    {
        bool _2776 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2777 = log2(_2764);
        float _2784 = exp2(_2777 * cbSceneParam._m0[78u].x) * _2657;
        float _2785 = exp2(_2777 * cbSceneParam._m0[78u].y) * _2659;
        float _2786 = exp2(_2777 * cbSceneParam._m0[78u].z) * _2661;
        vec4 _2794 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_629, _630));
        float _2796 = _2794.x;
        float _2817 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2796)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2796))) - _611) * cbMtdParam._m0[17u].y;
        float _4288 = isnan(0.0) ? _2817 : (isnan(_2817) ? 0.0 : max(_2817, 0.0));
        _2819 = _2666 * (isnan(1.0) ? _4288 : (isnan(_4288) ? 1.0 : min(_4288, 1.0)));
        float _2820 = _618 + (-0.5);
        _2822 = cbMtdParam._m0[1u];
        _2824 = _2822.y * _2820;
        _2826 = cbMatDynParam._m0[0u];
        float _2833 = (roundEven(_2826.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2834 = _2833 * (_2776 ? _2784 : (_2784 + (cbSceneParam._m0[72u].w * _2758)));
        _2835 = _2833 * (_2776 ? _2785 : (_2785 + (cbSceneParam._m0[72u].w * _2760)));
        _2836 = _2833 * (_2776 ? _2786 : (_2786 + (cbSceneParam._m0[72u].w * _2762)));
        _2837 = _2820 * 0.999000012874603271484375;
        _2847 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2847)
        {
            if ((cbInstanceData._m0[_667 + 7u].x + _2837) < 0.5)
            {
                _3195 = true;
                break;
            }
        }
        uint _2908 = _668 + uint(_2826.w);
        if ((cbInstanceData._m0[_2908].w < 1.0) && ((cbInstanceData._m0[_2908].w + _2837) < 0.5))
        {
            _3195 = true;
            break;
        }
        if ((_2824 + _353) < _2822.x)
        {
            _3195 = true;
            break;
        }
        _3195 = false;
        break;
    }
    float _3200;
    if (_3195)
    {
        discard_state = true;
        _3200 = 0.0;
    }
    else
    {
        _3200 = _2819;
    }
    SV_Target.x = _2834;
    SV_Target.y = _2835;
    SV_Target.z = _2836;
    SV_Target.w = _3200;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2819;
    discard_exit();
}


