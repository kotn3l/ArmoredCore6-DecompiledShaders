#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1231;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _210 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _211 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _212 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _218 = inversesqrt(dot(vec3(_210, _211, _212), vec3(_210, _211, _212)));
    float _219 = _218 * _210;
    float _220 = _218 * _211;
    float _221 = _218 * _212;
    float _225 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _226 = _225 * NORMAL.x;
    float _227 = _225 * NORMAL.y;
    float _228 = _225 * NORMAL.z;
    float _232 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _233 = _232 * TANGENT.x;
    float _234 = _232 * TANGENT.y;
    float _235 = _232 * TANGENT.z;
    float _240;
    float _241;
    float _242;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _240 = (-0.0) - _226;
        _241 = (-0.0) - _227;
        _242 = (-0.0) - _228;
    }
    else
    {
        _240 = _226;
        _241 = _227;
        _242 = _228;
    }
    float _289 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _299 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _289);
    float _300 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _289);
    float _301 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _289);
    uint _307 = uint(roundEven(NORMAL.w)) * 13u;
    uint _312 = _307 + 1u;
    uint _316 = _307 + 2u;
    float _325 = sqrt(((cbInstanceData._m0[_312].x * cbInstanceData._m0[_312].x) + (cbInstanceData._m0[_307].x * cbInstanceData._m0[_307].x)) + (cbInstanceData._m0[_316].x * cbInstanceData._m0[_316].x));
    float _326 = _325 * TEXCOORD.z;
    float _327 = _325 * TEXCOORD.w;
    vec4 _340 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _326) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _327) + cbTextureTilingScale._m0[8u].w));
    vec4 _367 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _375 = (_367.x * 2.0) + (-1.0);
    float _377 = (_367.y * 2.0) + (-1.0);
    float _378 = dot(vec2(_375, _377), vec2(_375, _377));
    float _3144 = isnan(0.0) ? _378 : (isnan(_378) ? 0.0 : max(_378, 0.0));
    float _384 = sqrt(1.0 - (isnan(1.0) ? _3144 : (isnan(_3144) ? 1.0 : min(_3144, 1.0))));
    float _387 = fma(_384, _240, fma(_377, _233, _375 * _219));
    float _390 = fma(_384, _241, fma(_377, _234, _375 * _220));
    float _393 = fma(_384, _242, fma(_377, _235, _375 * _221));
    float _397 = inversesqrt(dot(vec3(_387, _390, _393), vec3(_387, _390, _393)));
    float _398 = _397 * _387;
    float _399 = _397 * _390;
    float _428 = (cbMtdParam._m0[17u].w + dot(vec4(_398, _399, _397 * _393, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _326) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _327) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3155 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _429 = isnan(1.0) ? _3155 : (isnan(_3155) ? 1.0 : min(_3155, 1.0));
    vec4 _441 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _446 = _441.w;
    float _458 = dot(vec3(_299, _300, _301), vec3(_219, _220, _221));
    float _461 = dot(vec3(_299, _300, _301), vec3(_233, _234, _235));
    float _464 = dot(vec3(_299, _300, _301), vec3(_240, _241, _242));
    float _470 = inversesqrt(dot(vec3(_458, _461, _464), vec3(_458, _461, _464)));
    float _492 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _512 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_458 * cbMtdParam._m0[14u].x) * _470) * _492) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_461 * cbMtdParam._m0[14u].x) * _470) * _492) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _535 = inversesqrt(dot(vec3(_299, _300, _301), vec3(_299, _300, _301)));
    float _536 = _535 * _299;
    float _537 = _535 * _300;
    float _538 = _535 * _301;
    float _539 = dot(vec4(_536, _537, _538, 0.0), vec4(_240, _241, _242, 0.0));
    float _542 = _539 - cbMtdParam._m0[15u].z;
    float _3166 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _549 = exp2(log2(1.0 - (isnan(1.0) ? _3166 : (isnan(_3166) ? 1.0 : min(_3166, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _564 = ((((_441.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _512.x) * cbMtdParam._m0[9u].x) * ((_549 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _569 = ((((_441.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _512.y) * cbMtdParam._m0[9u].y) * ((_549 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _574 = ((((_441.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _512.z) * cbMtdParam._m0[9u].z) * ((_549 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _581 = (((_340.x * cbMtdParam._m0[10u].x) - _564) * _429) + _564;
    float _582 = (((_340.y * cbMtdParam._m0[10u].y) - _569) * _429) + _569;
    float _583 = (((_340.z * cbMtdParam._m0[10u].z) - _574) * _429) + _574;
    vec4 _595 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _326) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _327) + cbTextureTilingScale._m0[9u].w));
    float _602 = (_595.x * 2.0) + (-1.0);
    float _603 = (_595.y * 2.0) + (-1.0);
    float _604 = dot(vec2(_602, _603), vec2(_602, _603));
    float _3182 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    vec4 _625 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _635 = cbMtdParam._m0[17u].z + _367.z;
    float _641 = (_635 + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * (_625.z - _635));
    float _644 = ((_595.z - _641) * _429) + _641;
    float _650 = ((((_625.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _375;
    float _651 = ((((_625.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _377;
    float _659 = ((sqrt(1.0 - (isnan(1.0) ? _3182 : (isnan(_3182) ? 1.0 : min(_3182, 1.0)))) - _384) * _429) + _384;
    float _663 = ((_650 * cbMtdParam._m0[14u].z) + _650) + ((_602 - _650) * _429);
    float _665 = ((_651 * cbMtdParam._m0[14u].z) + _651) + ((_603 - _651) * _429);
    vec4 _677 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _681 = cbMtdParam._m0[16u].w * _677.x;
    float _683 = _681 - (_681 * _429);
    float _692 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _693 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _703 = cbSceneParam._m0[86u].x * ((_692 / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _398));
    float _704 = cbSceneParam._m0[86u].y * ((_693 / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _399));
    float _711 = isnan(cbInstanceData._m0[8u].x) ? _703 : (isnan(_703) ? cbInstanceData._m0[8u].x : max(_703, cbInstanceData._m0[8u].x));
    float _712 = isnan(cbInstanceData._m0[8u].y) ? _704 : (isnan(_704) ? cbInstanceData._m0[8u].y : max(_704, cbInstanceData._m0[8u].y));
    vec4 _716 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _711 : (isnan(_711) ? cbInstanceData._m0[8u].z : min(_711, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _712 : (isnan(_712) ? cbInstanceData._m0[8u].w : min(_712, cbInstanceData._m0[8u].w))));
    float _749 = _539 - cbMtdParam._m0[15u].x;
    float _3213 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _759 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3213 : (isnan(_3213) ? 1.0 : min(_3213, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3229 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _760 = isnan(1.0) ? _3229 : (isnan(_3229) ? 1.0 : min(_3229, 1.0));
    float _762 = _760 - (_760 * _429);
    float _766 = fma(_659, _240, fma(_665, _233, _663 * _219));
    float _769 = fma(_659, _241, fma(_665, _234, _663 * _220));
    float _772 = fma(_659, _242, fma(_665, _235, _663 * _221));
    float _776 = inversesqrt(dot(vec3(_766, _769, _772), vec3(_766, _769, _772)));
    float _777 = _776 * _766;
    float _778 = _776 * _769;
    float _779 = _776 * _772;
    float _3240 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _780 = isnan(1.0) ? _3240 : (isnan(_3240) ? 1.0 : min(_3240, 1.0));
    float _3251 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    float _781 = isnan(1.0) ? _3251 : (isnan(_3251) ? 1.0 : min(_3251, 1.0));
    float _782 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0));
    float _3267 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _3278 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
    float _3289 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    float _799 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _817 = fma(_779, cbSceneParam._m0[5u].z, fma(_778, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _777));
    float _820 = fma(_779, cbSceneParam._m0[6u].z, fma(_778, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _777));
    float _823 = fma(_779, cbSceneParam._m0[7u].z, fma(_778, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _777));
    uint _837 = (_307 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _843 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3267 : (isnan(_3267) ? 1.0 : min(_3267, 1.0)))) * cbInstanceData._m0[_837].x;
    float _844 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3278 : (isnan(_3278) ? 1.0 : min(_3278, 1.0)))) * cbInstanceData._m0[_837].y;
    float _845 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3289 : (isnan(_3289) ? 1.0 : min(_3289, 1.0)))) * cbInstanceData._m0[_837].z;
    float _3300 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    float _846 = isnan(1.0) ? _3300 : (isnan(_3300) ? 1.0 : min(_3300, 1.0));
    float _3311 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _847 = isnan(1.0) ? _3311 : (isnan(_3311) ? 1.0 : min(_3311, 1.0));
    float _3322 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _848 = isnan(1.0) ? _3322 : (isnan(_3322) ? 1.0 : min(_3322, 1.0));
    vec4 _852 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _692, cbSceneParam._m0[86u].y * _693));
    float _855 = _852.x * TEXCOORD_5.w;
    float _856 = dot(vec3(_777, _778, _779), vec3(_536, _537, _538));
    float _859 = _856 * 2.0;
    float _863 = (_859 * _777) - _536;
    float _864 = (_859 * _778) - _537;
    float _865 = (_859 * _779) - _538;
    float _866 = dot(vec3(_536, _537, _538), vec3(_777, _778, _779));
    float _869 = abs(_866);
    float _3333 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    float _870 = isnan(1.0) ? _3333 : (isnan(_3333) ? 1.0 : min(_3333, 1.0));
    float _876 = sqrt(_781);
    float _888 = exp2((_876 * 5.0) * log2(1.0 - (_870 * 0.999000012874603271484375))) / (4.0 - (_876 * 3.0));
    float _920 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _924 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _928 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1230;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    float _1239;
    float _1240;
    float _1241;
    float _1242;
    float _1243;
    float _1244;
    float _1245;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _955 = fma(_928, cbModelParam._m0[26u].z, fma(_924, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _920));
        float _959 = fma(_928, cbModelParam._m0[27u].z, fma(_924, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _920));
        float _963 = fma(_928, cbModelParam._m0[28u].z, fma(_924, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _920));
        float _988 = _920 + _777;
        float _989 = _924 + _778;
        float _990 = _928 + _779;
        float _1000 = fma(_990, cbModelParam._m0[26u].z, fma(_989, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _988)) - _955;
        float _1001 = fma(_990, cbModelParam._m0[27u].z, fma(_989, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _988)) - _959;
        float _1002 = fma(_990, cbModelParam._m0[28u].z, fma(_989, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _988)) - _963;
        float _1006 = inversesqrt(dot(vec3(_1000, _1001, _1002), vec3(_1000, _1001, _1002)));
        float _1019 = ((_1006 * _1000) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_955 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1020 = ((_1006 * _1001) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_959 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1021 = ((_1006 * _1002) / cbModelParam._m0[34u].z) + ((((((_963 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1024 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1019, _1020, _1021), 0.0);
        vec4 _1031 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1019, _1020, _1021), 0.0);
        vec4 _1038 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1019, _1020, _1021), 0.0);
        vec4 _1045 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1019, _1020, _1021), 0.0);
        float _1058 = exp2((_1024.w + (-0.5)) * 20.0) * 2.0;
        float _1059 = _1058 * (_1024.x + (-0.5));
        float _1060 = _1058 * (_1024.y + (-0.5));
        float _1061 = _1058 * (_1024.z + (-0.5));
        float _1068 = exp2((_1031.w + (-0.5)) * 20.0) * 2.0;
        float _1069 = _1068 * (_1031.x + (-0.5));
        float _1070 = _1068 * (_1031.y + (-0.5));
        float _1071 = _1068 * (_1031.z + (-0.5));
        float _1078 = exp2((_1038.w + (-0.5)) * 20.0) * 2.0;
        float _1079 = _1078 * (_1038.x + (-0.5));
        float _1080 = _1078 * (_1038.y + (-0.5));
        float _1081 = _1078 * (_1038.z + (-0.5));
        float _1088 = exp2((_1045.w + (-0.5)) * 20.0) * 2.0;
        float _1089 = _1088 * (_1045.x + (-0.5));
        float _1090 = _1088 * (_1045.y + (-0.5));
        float _1091 = _1088 * (_1045.z + (-0.5));
        float _1092 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
        float _1093 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
        float _1094 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1095 = _1059 * 0.5;
        float _1096 = _1069 * 0.5;
        float _1097 = _1079 * 0.5;
        float _1098 = dot(vec3(_1095, _1096, _1097), vec3(_1095, _1096, _1097));
        float _1103 = (_1098 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1098);
        float _1112 = (dot(vec3(_777, _778, _779), vec3(_1103 * _1095, _1103 * _1096, _1103 * _1097)) + 1.0) * 0.5;
        float _3359 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
        float _1122 = sqrt(((_1096 * _1096) + (_1095 * _1095)) + (_1097 * _1097)) / (_1092 + 9.9999997473787516355514526367188e-06);
        float _3370 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
        float _1123 = isnan(1.0) ? _3370 : (isnan(_3370) ? 1.0 : min(_3370, 1.0));
        float _1124 = _1123 * 2.0;
        float _1128 = (1.0 - _1123) / (_1123 + 1.0);
        float _3381 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
        float _1129 = isnan(1.0) ? _3381 : (isnan(_3381) ? 1.0 : min(_3381, 1.0));
        float _1138 = ((((1.0 - _1129) * (_1124 + 2.0)) * exp2(log2(isnan(1.0) ? _3359 : (isnan(_3359) ? 1.0 : min(_3359, 1.0))) * (_1124 + 1.0))) + _1129) * _1092;
        float _1139 = _1060 * 0.5;
        float _1140 = _1070 * 0.5;
        float _1141 = _1080 * 0.5;
        float _1142 = dot(vec3(_1139, _1140, _1141), vec3(_1139, _1140, _1141));
        float _1147 = (_1142 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1142);
        float _1155 = (dot(vec3(_777, _778, _779), vec3(_1147 * _1139, _1147 * _1140, _1147 * _1141)) + 1.0) * 0.5;
        float _3392 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
        float _1164 = sqrt(((_1140 * _1140) + (_1139 * _1139)) + (_1141 * _1141)) / (_1093 + 9.9999997473787516355514526367188e-06);
        float _3403 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1165 = isnan(1.0) ? _3403 : (isnan(_3403) ? 1.0 : min(_3403, 1.0));
        float _1166 = _1165 * 2.0;
        float _1170 = (1.0 - _1165) / (_1165 + 1.0);
        float _3414 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1171 = isnan(1.0) ? _3414 : (isnan(_3414) ? 1.0 : min(_3414, 1.0));
        float _1180 = ((((1.0 - _1171) * (_1166 + 2.0)) * exp2(log2(isnan(1.0) ? _3392 : (isnan(_3392) ? 1.0 : min(_3392, 1.0))) * (_1166 + 1.0))) + _1171) * _1093;
        float _1181 = _1061 * 0.5;
        float _1182 = _1071 * 0.5;
        float _1183 = _1081 * 0.5;
        float _1184 = dot(vec3(_1181, _1182, _1183), vec3(_1181, _1182, _1183));
        float _1189 = (_1184 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1184);
        float _1197 = (dot(vec3(_777, _778, _779), vec3(_1189 * _1181, _1189 * _1182, _1189 * _1183)) + 1.0) * 0.5;
        float _3425 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1206 = sqrt(((_1182 * _1182) + (_1181 * _1181)) + (_1183 * _1183)) / (_1094 + 9.9999997473787516355514526367188e-06);
        float _3436 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
        float _1207 = isnan(1.0) ? _3436 : (isnan(_3436) ? 1.0 : min(_3436, 1.0));
        float _1208 = _1207 * 2.0;
        float _1212 = (1.0 - _1207) / (_1207 + 1.0);
        float _3447 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
        float _1213 = isnan(1.0) ? _3447 : (isnan(_3447) ? 1.0 : min(_3447, 1.0));
        float _1222 = ((((1.0 - _1213) * (_1208 + 2.0)) * exp2(log2(isnan(1.0) ? _3425 : (isnan(_3425) ? 1.0 : min(_3425, 1.0))) * (_1208 + 1.0))) + _1213) * _1094;
        _1230 = _1061;
        _1232 = _1060;
        _1233 = _1059;
        _1234 = _1071;
        _1235 = _1070;
        _1236 = _1069;
        _1237 = _1081;
        _1238 = _1080;
        _1239 = _1079;
        _1240 = _1094;
        _1241 = _1093;
        _1242 = _1092;
        _1243 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0)));
        _1244 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0)));
        _1245 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0)));
    }
    else
    {
        _1230 = _1231;
        _1232 = _1231;
        _1233 = _1231;
        _1234 = _1231;
        _1235 = _1231;
        _1236 = _1231;
        _1237 = _1231;
        _1238 = _1231;
        _1239 = _1231;
        _1240 = _1231;
        _1241 = _1231;
        _1242 = _1231;
        _1243 = 0.0;
        _1244 = 0.0;
        _1245 = 0.0;
    }
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    float _1551;
    float _1552;
    float _1553;
    float _1554;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1271 = fma(_928, cbModelParam._m0[30u].z, fma(_924, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _920));
        float _1275 = fma(_928, cbModelParam._m0[31u].z, fma(_924, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _920));
        float _1279 = fma(_928, cbModelParam._m0[32u].z, fma(_924, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _920));
        float _1302 = _920 + _777;
        float _1303 = _924 + _778;
        float _1304 = _928 + _779;
        float _1314 = fma(_1304, cbModelParam._m0[30u].z, fma(_1303, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1302)) - _1271;
        float _1315 = fma(_1304, cbModelParam._m0[31u].z, fma(_1303, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1302)) - _1275;
        float _1316 = fma(_1304, cbModelParam._m0[32u].z, fma(_1303, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1302)) - _1279;
        float _1320 = inversesqrt(dot(vec3(_1314, _1315, _1316), vec3(_1314, _1315, _1316)));
        float _1333 = ((_1320 * _1314) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1271 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1334 = ((_1320 * _1315) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1275 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1335 = ((_1320 * _1316) / cbModelParam._m0[35u].z) + ((((((_1279 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1337 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1333, _1334, _1335), 0.0);
        vec4 _1344 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1333, _1334, _1335), 0.0);
        vec4 _1351 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1333, _1334, _1335), 0.0);
        vec4 _1358 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1333, _1334, _1335), 0.0);
        float _1370 = exp2((_1337.w + (-0.5)) * 20.0) * 2.0;
        float _1371 = _1370 * (_1337.x + (-0.5));
        float _1372 = _1370 * (_1337.y + (-0.5));
        float _1373 = _1370 * (_1337.z + (-0.5));
        float _1380 = exp2((_1344.w + (-0.5)) * 20.0) * 2.0;
        float _1381 = _1380 * (_1344.x + (-0.5));
        float _1382 = _1380 * (_1344.y + (-0.5));
        float _1383 = _1380 * (_1344.z + (-0.5));
        float _1390 = exp2((_1351.w + (-0.5)) * 20.0) * 2.0;
        float _1391 = _1390 * (_1351.x + (-0.5));
        float _1392 = _1390 * (_1351.y + (-0.5));
        float _1393 = _1390 * (_1351.z + (-0.5));
        float _1400 = exp2((_1358.w + (-0.5)) * 20.0) * 2.0;
        float _1401 = _1400 * (_1358.x + (-0.5));
        float _1402 = _1400 * (_1358.y + (-0.5));
        float _1403 = _1400 * (_1358.z + (-0.5));
        float _1404 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1405 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1406 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
        float _1407 = _1371 * 0.5;
        float _1408 = _1381 * 0.5;
        float _1409 = _1391 * 0.5;
        float _1410 = dot(vec3(_1407, _1408, _1409), vec3(_1407, _1408, _1409));
        float _1415 = (_1410 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1410);
        float _1423 = (dot(vec3(_777, _778, _779), vec3(_1415 * _1407, _1415 * _1408, _1415 * _1409)) + 1.0) * 0.5;
        float _3488 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1432 = sqrt(((_1408 * _1408) + (_1407 * _1407)) + (_1409 * _1409)) / (_1404 + 9.9999997473787516355514526367188e-06);
        float _3499 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1433 = isnan(1.0) ? _3499 : (isnan(_3499) ? 1.0 : min(_3499, 1.0));
        float _1434 = _1433 * 2.0;
        float _1438 = (1.0 - _1433) / (_1433 + 1.0);
        float _3510 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1439 = isnan(1.0) ? _3510 : (isnan(_3510) ? 1.0 : min(_3510, 1.0));
        float _1448 = ((((1.0 - _1439) * (_1434 + 2.0)) * exp2(log2(isnan(1.0) ? _3488 : (isnan(_3488) ? 1.0 : min(_3488, 1.0))) * (_1434 + 1.0))) + _1439) * _1404;
        float _1449 = _1372 * 0.5;
        float _1450 = _1382 * 0.5;
        float _1451 = _1392 * 0.5;
        float _1452 = dot(vec3(_1449, _1450, _1451), vec3(_1449, _1450, _1451));
        float _1457 = (_1452 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1452);
        float _1465 = (dot(vec3(_777, _778, _779), vec3(_1457 * _1449, _1457 * _1450, _1457 * _1451)) + 1.0) * 0.5;
        float _3521 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
        float _1474 = sqrt(((_1450 * _1450) + (_1449 * _1449)) + (_1451 * _1451)) / (_1405 + 9.9999997473787516355514526367188e-06);
        float _3532 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1475 = isnan(1.0) ? _3532 : (isnan(_3532) ? 1.0 : min(_3532, 1.0));
        float _1476 = _1475 * 2.0;
        float _1480 = (1.0 - _1475) / (_1475 + 1.0);
        float _3543 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1481 = isnan(1.0) ? _3543 : (isnan(_3543) ? 1.0 : min(_3543, 1.0));
        float _1490 = ((((1.0 - _1481) * (_1476 + 2.0)) * exp2(log2(isnan(1.0) ? _3521 : (isnan(_3521) ? 1.0 : min(_3521, 1.0))) * (_1476 + 1.0))) + _1481) * _1405;
        float _1491 = _1373 * 0.5;
        float _1492 = _1383 * 0.5;
        float _1493 = _1393 * 0.5;
        float _1494 = dot(vec3(_1491, _1492, _1493), vec3(_1491, _1492, _1493));
        float _1499 = (_1494 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1494);
        float _1507 = (dot(vec3(_777, _778, _779), vec3(_1499 * _1491, _1499 * _1492, _1499 * _1493)) + 1.0) * 0.5;
        float _3554 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
        float _1516 = sqrt(((_1492 * _1492) + (_1491 * _1491)) + (_1493 * _1493)) / (_1406 + 9.9999997473787516355514526367188e-06);
        float _3565 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
        float _1517 = isnan(1.0) ? _3565 : (isnan(_3565) ? 1.0 : min(_3565, 1.0));
        float _1518 = _1517 * 2.0;
        float _1522 = (1.0 - _1517) / (_1517 + 1.0);
        float _3576 = isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0));
        float _1523 = isnan(1.0) ? _3576 : (isnan(_3576) ? 1.0 : min(_3576, 1.0));
        float _1532 = ((((1.0 - _1523) * (_1518 + 2.0)) * exp2(log2(isnan(1.0) ? _3554 : (isnan(_3554) ? 1.0 : min(_3554, 1.0))) * (_1518 + 1.0))) + _1523) * _1406;
        _1540 = _1373;
        _1541 = _1372;
        _1542 = _1371;
        _1543 = _1383;
        _1544 = _1382;
        _1545 = _1381;
        _1546 = _1393;
        _1547 = _1392;
        _1548 = _1391;
        _1549 = _1406;
        _1550 = _1405;
        _1551 = _1404;
        _1552 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0)));
        _1553 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0)));
        _1554 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0)));
    }
    else
    {
        _1540 = _1231;
        _1541 = _1231;
        _1542 = _1231;
        _1543 = _1231;
        _1544 = _1231;
        _1545 = _1231;
        _1546 = _1231;
        _1547 = _1231;
        _1548 = _1231;
        _1549 = _1231;
        _1550 = _1231;
        _1551 = _1231;
        _1552 = 0.0;
        _1553 = 0.0;
        _1554 = 0.0;
    }
    float _1564 = (cbModelParam._m0[1u].x * (_1552 - _1243)) + _1243;
    float _1565 = (cbModelParam._m0[1u].x * (_1553 - _1244)) + _1244;
    float _1566 = (cbModelParam._m0[1u].x * (_1554 - _1245)) + _1245;
    float _1587 = fma(_1566, cbSceneParam._m0[89u].z, fma(_1565, cbSceneParam._m0[89u].y, _1564 * cbSceneParam._m0[89u].x));
    float _1590 = fma(_1566, cbSceneParam._m0[90u].z, fma(_1565, cbSceneParam._m0[90u].y, _1564 * cbSceneParam._m0[90u].x));
    float _1593 = fma(_1566, cbSceneParam._m0[91u].z, fma(_1565, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1564));
    float _1608 = _863 * 0.5;
    float _1609 = _864 * 0.5;
    float _1610 = _865 * 0.5;
    float _1611 = dot(vec4(_1608, _1609, _1610, 1.0), vec4(_1542, _1545, _1548, _1551));
    float _1614 = dot(vec4(_1608, _1609, _1610, 1.0), vec4(_1541, _1544, _1547, _1550));
    float _1617 = dot(vec4(_1608, _1609, _1610, 1.0), vec4(_1540, _1543, _1546, _1549));
    float _1651;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1624 = dot(vec4(_1608, _1609, _1610, 1.0), vec4(_1230, _1234, _1237, _1240));
        float _1628 = dot(vec4(_1608, _1609, _1610, 1.0), vec4(_1232, _1235, _1238, _1241));
        float _1632 = dot(vec4(_1608, _1609, _1610, 1.0), vec4(_1233, _1236, _1239, _1242));
        float _1639 = dot(vec4(cbModelParam._m0[39u]), vec4(_1608, _1609, _1610, 1.0));
        _1651 = dot(vec3(isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0)), isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0)), isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1639) ? 0.0 : (isnan(0.0) ? _1639 : max(0.0, _1639))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1651 = 1.0;
    }
    float _1662;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1653 = dot(vec4(cbModelParam._m0[40u]), vec4(_1608, _1609, _1610, 1.0));
        _1662 = dot(vec3(isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0)), isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0)), isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1653) ? 0.0 : (isnan(0.0) ? _1653 : max(0.0, _1653))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1662 = 1.0;
    }
    float _1666 = (_1662 * cbModelParam._m0[1u].x) + (_1651 * (1.0 - cbModelParam._m0[1u].x));
    float _1676 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _781);
    float _1677 = isnan(_1676) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1676 : min(cbModelParam._m0[25u].z, _1676));
    float _1757;
    float _1759;
    float _1761;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1724 = fma(_928, cbModelParam._m0[13u].z, fma(_924, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _920)) + cbModelParam._m0[13u].w;
        float _1728 = fma(_928, cbModelParam._m0[14u].z, fma(_924, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _920)) + cbModelParam._m0[14u].w;
        float _1732 = fma(_928, cbModelParam._m0[15u].z, fma(_924, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _920)) + cbModelParam._m0[15u].w;
        float _1735 = fma(_865, cbModelParam._m0[13u].z, fma(_864, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _863));
        float _1738 = fma(_865, cbModelParam._m0[14u].z, fma(_864, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _863));
        float _1741 = fma(_865, cbModelParam._m0[15u].z, fma(_864, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _863));
        float _1769;
        if (_1735 > 0.0)
        {
            _1769 = abs((1.0 - _1724) / _1735);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1735 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1724 + 1.0) / _1735);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1769 = frontier_phi_16_14_ladder;
        }
        float _1961;
        if (_1738 > 0.0)
        {
            _1961 = abs((1.0 - _1728) / _1738);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1738 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1728 + 1.0) / _1738);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1961 = frontier_phi_25_21_ladder;
        }
        float _2199;
        if (_1741 > 0.0)
        {
            _2199 = abs((1.0 - _1732) / _1741);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1741 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1732 + 1.0) / _1741);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2199 = frontier_phi_36_32_ladder;
        }
        float _2201 = isnan(_1961) ? _1769 : (isnan(_1769) ? _1961 : min(_1769, _1961));
        float _2202 = isnan(_2199) ? _2201 : (isnan(_2201) ? _2199 : min(_2201, _2199));
        float _2206 = (_2202 * _1735) + _1724;
        float _2207 = (_2202 * _1738) + _1728;
        float _2208 = (_2202 * _1741) + _1732;
        float _2209 = _2202 * 9.9999997473787516355514526367188e-05;
        float _2211 = (-1.0) - _2209;
        float _2213 = _2209 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2208 > _2213) || ((_2208 < _2211) || ((_2207 > _2213) || ((_2207 < _2211) || ((_2206 < _2211) || (_2206 > _2213))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2358 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2208, cbModelParam._m0[9u].z, fma(_2207, cbModelParam._m0[9u].y, _2206 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2208, cbModelParam._m0[10u].z, fma(_2207, cbModelParam._m0[10u].y, _2206 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2208, cbModelParam._m0[11u].z, fma(_2207, cbModelParam._m0[11u].y, _2206 * cbModelParam._m0[11u].x))), _1677);
            frontier_phi_15_36_ladder = _2358.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2358.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2358.y * cbModelParam._m0[1u].y;
        }
        _1757 = frontier_phi_15_36_ladder_1;
        _1759 = frontier_phi_15_36_ladder_2;
        _1761 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1745 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_863, _864, _865), _1677);
        _1757 = _1745.x * cbModelParam._m0[1u].y;
        _1759 = _1745.y * cbModelParam._m0[1u].y;
        _1761 = _1745.z * cbModelParam._m0[1u].y;
    }
    float _1765 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _781);
    float _1766 = isnan(_1765) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1765 : min(cbModelParam._m0[25u].w, _1765));
    float _1857;
    float _1859;
    float _1861;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1821 = fma(_928, cbModelParam._m0[21u].z, fma(_924, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _920)) + cbModelParam._m0[21u].w;
        float _1825 = fma(_928, cbModelParam._m0[22u].z, fma(_924, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _920)) + cbModelParam._m0[22u].w;
        float _1829 = fma(_928, cbModelParam._m0[23u].z, fma(_924, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _920)) + cbModelParam._m0[23u].w;
        float _1832 = fma(_865, cbModelParam._m0[21u].z, fma(_864, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _863));
        float _1835 = fma(_865, cbModelParam._m0[22u].z, fma(_864, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _863));
        float _1838 = fma(_865, cbModelParam._m0[23u].z, fma(_864, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _863));
        float _1966;
        if (_1832 > 0.0)
        {
            _1966 = abs((1.0 - _1821) / _1832);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1832 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1821 + 1.0) / _1832);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1966 = frontier_phi_27_23_ladder;
        }
        float _2226;
        if (_1835 > 0.0)
        {
            _2226 = abs((1.0 - _1825) / _1835);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1835 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1825 + 1.0) / _1835);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2226 = frontier_phi_38_34_ladder;
        }
        float _2533;
        if (_1838 > 0.0)
        {
            _2533 = abs((1.0 - _1829) / _1838);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1838 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1829 + 1.0) / _1838);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2533 = frontier_phi_49_44_ladder;
        }
        float _2535 = isnan(_2226) ? _1966 : (isnan(_1966) ? _2226 : min(_1966, _2226));
        float _2536 = isnan(_2533) ? _2535 : (isnan(_2535) ? _2533 : min(_2535, _2533));
        float _2540 = (_2536 * _1832) + _1821;
        float _2541 = (_2536 * _1835) + _1825;
        float _2542 = (_2536 * _1838) + _1829;
        float _2543 = _2536 * 9.9999997473787516355514526367188e-05;
        float _2544 = (-1.0) - _2543;
        float _2546 = _2543 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2542 > _2546) || ((_2542 < _2544) || ((_2541 > _2546) || ((_2541 < _2544) || ((_2540 < _2544) || (_2540 > _2546))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2715 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2542, cbModelParam._m0[17u].z, fma(_2541, cbModelParam._m0[17u].y, _2540 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2542, cbModelParam._m0[18u].z, fma(_2541, cbModelParam._m0[18u].y, _2540 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2542, cbModelParam._m0[19u].z, fma(_2541, cbModelParam._m0[19u].y, _2540 * cbModelParam._m0[19u].x))), _1766);
            frontier_phi_24_49_ladder = _2715.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2715.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2715.x * cbModelParam._m0[1u].z;
        }
        _1857 = frontier_phi_24_49_ladder_2;
        _1859 = frontier_phi_24_49_ladder;
        _1861 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1841 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_863, _864, _865), _1766);
        _1857 = _1841.x * cbModelParam._m0[1u].z;
        _1859 = _1841.y * cbModelParam._m0[1u].z;
        _1861 = _1841.z * cbModelParam._m0[1u].z;
    }
    float _1873 = ((((1.0 - _888) * ((_876 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_888 * _876)) * _855;
    float _1874 = _1873 * ((cbModelParam._m0[1u].w * (_1857 - _1757)) + _1757);
    float _1875 = _1873 * ((cbModelParam._m0[1u].w * (_1859 - _1759)) + _1759);
    float _1876 = _1873 * ((cbModelParam._m0[1u].w * (_1861 - _1761)) + _1761);
    float _1879 = fma(_1876, cbSceneParam._m0[89u].z, fma(_1875, cbSceneParam._m0[89u].y, _1874 * cbSceneParam._m0[89u].x));
    float _1882 = fma(_1876, cbSceneParam._m0[90u].z, fma(_1875, cbSceneParam._m0[90u].y, _1874 * cbSceneParam._m0[90u].x));
    float _1885 = fma(_1876, cbSceneParam._m0[91u].z, fma(_1875, cbSceneParam._m0[91u].y, _1874 * cbSceneParam._m0[91u].x));
    vec4 _1893 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_692, _693));
    float _1895 = _1893.w;
    float _1907 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1895);
    float _1908 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1895);
    float _1909 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1895);
    uvec4 _1913 = floatBitsToUint(cbInstanceData._m0[_307 + 5u]);
    uint _1915 = _1913.x * 14u;
    uint _1916 = _1915 + 13u;
    float _1921 = _855 + (-1.0);
    float _1924 = (cbLight._m0[_1916].x * _1921) + 1.0;
    float _1925 = (cbLight._m0[_1916].y * _1921) + 1.0;
    uint _1927 = _1915 + 4u;
    float _1938 = dot(vec3(cbLight._m0[_1915].xyz), vec3(_777, _778, _779));
    float _1941 = isnan(1.0) ? _1924 : (isnan(_1924) ? 1.0 : min(_1924, 1.0));
    float _1942 = cbLight._m0[_1927].x * _1907;
    float _1943 = cbLight._m0[_1927].y * _1908;
    float _1944 = cbLight._m0[_1927].z * _1909;
    uint _1945 = _1915 + 5u;
    uint _1951 = _1915 | 1u;
    float _1957 = dot(vec3(cbLight._m0[_1951].xyz), vec3(_777, _778, _779));
    float _1960 = isnan(1.0) ? _1925 : (isnan(_1925) ? 1.0 : min(_1925, 1.0));
    float _2025;
    float _2026;
    float _2027;
    if (_782 == 0.0)
    {
        float _3712 = isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0));
        float _3723 = isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0));
        float _1979 = (isnan(1.0) ? _3712 : (isnan(_3712) ? 1.0 : min(_3712, 1.0))) * 0.3183098733425140380859375;
        float _1981 = (isnan(1.0) ? _3723 : (isnan(_3723) ? 1.0 : min(_3723, 1.0))) * 0.3183098733425140380859375;
        _2025 = ((cbLight._m0[_1945].x * _1960) * _1981) + ((_1942 * _1941) * _1979);
        _2026 = ((_1960 * cbLight._m0[_1945].y) * _1981) + ((_1943 * _1941) * _1979);
        _2027 = ((_1960 * cbLight._m0[_1945].z) * _1981) + ((_1944 * _1941) * _1979);
    }
    else
    {
        float _1991 = _1938 + _782;
        float _1994 = (_782 * 2.0) + 1.0;
        float _1995 = (isnan(0.0) ? _1991 : (isnan(_1991) ? 0.0 : max(_1991, 0.0))) / _1994;
        float _2002 = _1957 + _782;
        float _2004 = (isnan(0.0) ? _2002 : (isnan(_2002) ? 0.0 : max(_2002, 0.0))) / _1994;
        _2025 = (((_2004 * cbLight._m0[_1945].x) * _1960) + ((_1942 * _1995) * _1941)) * 0.3183098733425140380859375;
        _2026 = (((_2004 * cbLight._m0[_1945].y) * _1960) + ((_1943 * _1995) * _1941)) * 0.3183098733425140380859375;
        _2027 = (((_2004 * cbLight._m0[_1945].z) * _1960) + ((_1944 * _1995) * _1941)) * 0.3183098733425140380859375;
    }
    uint _2031 = _1915 + 8u;
    float _2047 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1915].w)) * _781) * 0.949999988079071044921875);
    float _2048 = _2047 * _2047;
    float _2049 = cbLight._m0[_1915].x + _536;
    float _2050 = cbLight._m0[_1915].y + _537;
    float _2051 = cbLight._m0[_1915].z + _538;
    float _2055 = inversesqrt(dot(vec3(_2049, _2050, _2051), vec3(_2049, _2050, _2051)));
    float _2056 = _2055 * _2049;
    float _2057 = _2055 * _2050;
    float _2058 = _2055 * _2051;
    float _2059 = dot(vec3(_777, _778, _779), vec3(cbLight._m0[_1915].xyz));
    float _3744 = isnan(0.0) ? _2059 : (isnan(_2059) ? 0.0 : max(_2059, 0.0));
    float _2062 = isnan(1.0) ? _3744 : (isnan(_3744) ? 1.0 : min(_3744, 1.0));
    float _3755 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
    float _2063 = isnan(1.0) ? _3755 : (isnan(_3755) ? 1.0 : min(_3755, 1.0));
    float _2064 = dot(vec3(_777, _778, _779), vec3(_2056, _2057, _2058));
    float _3766 = isnan(0.0) ? _2064 : (isnan(_2064) ? 0.0 : max(_2064, 0.0));
    float _2067 = isnan(1.0) ? _3766 : (isnan(_3766) ? 1.0 : min(_3766, 1.0));
    float _2068 = dot(vec3(cbLight._m0[_1915].xyz), vec3(_2056, _2057, _2058));
    float _3777 = isnan(0.0) ? _2068 : (isnan(_2068) ? 0.0 : max(_2068, 0.0));
    float _2072 = _2048 * _2048;
    float _2076 = ((_2067 * _2067) * (_2072 + (-1.0))) + 1.0;
    float _2087 = (exp2(log2(1.0 - (isnan(1.0) ? _3777 : (isnan(_3777) ? 1.0 : min(_3777, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2088 = 1.0 - _2048;
    float _2099 = (0.5 / (((_2063 * ((_2062 * _2088) + _2048)) + 9.9999999392252902907785028219223e-09) + (((_2063 * _2088) + _2048) * _2062))) * _2062;
    float _3788 = isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0));
    float _2101 = (isnan(1.0) ? _3788 : (isnan(_3788) ? 1.0 : min(_3788, 1.0))) * (_2072 / ((_2076 * _2076) * 3.141590118408203125));
    uint _2117 = _1915 + 9u;
    float _2131 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1951].w)) * _781) * 0.949999988079071044921875);
    float _2132 = _2131 * _2131;
    float _2133 = cbLight._m0[_1951].x + _536;
    float _2134 = cbLight._m0[_1951].y + _537;
    float _2135 = cbLight._m0[_1951].z + _538;
    float _2139 = inversesqrt(dot(vec3(_2133, _2134, _2135), vec3(_2133, _2134, _2135)));
    float _2140 = _2139 * _2133;
    float _2141 = _2139 * _2134;
    float _2142 = _2139 * _2135;
    float _2143 = dot(vec3(_777, _778, _779), vec3(cbLight._m0[_1951].xyz));
    float _3799 = isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : max(_2143, 0.0));
    float _2146 = isnan(1.0) ? _3799 : (isnan(_3799) ? 1.0 : min(_3799, 1.0));
    float _2147 = dot(vec3(_777, _778, _779), vec3(_2140, _2141, _2142));
    float _3810 = isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0));
    float _2150 = isnan(1.0) ? _3810 : (isnan(_3810) ? 1.0 : min(_3810, 1.0));
    float _2151 = dot(vec3(cbLight._m0[_1951].xyz), vec3(_2140, _2141, _2142));
    float _3821 = isnan(0.0) ? _2151 : (isnan(_2151) ? 0.0 : max(_2151, 0.0));
    float _2155 = _2132 * _2132;
    float _2159 = ((_2150 * _2150) * (_2155 + (-1.0))) + 1.0;
    float _2168 = (exp2(log2(1.0 - (isnan(1.0) ? _3821 : (isnan(_3821) ? 1.0 : min(_3821, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2169 = 1.0 - _2132;
    float _2179 = (0.5 / (((_2063 * ((_2146 * _2169) + _2132)) + 9.9999999392252902907785028219223e-09) + (((_2063 * _2169) + _2132) * _2146))) * _2146;
    float _3832 = isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0));
    float _2181 = (isnan(1.0) ? _3832 : (isnan(_3832) ? 1.0 : min(_3832, 1.0))) * (_2155 / ((_2159 * _2159) * 3.141590118408203125));
    float _2191 = (((_2168 * cbLight._m0[_2117].x) * _2181) * _1960) + ((((cbLight._m0[_2031].x * _1907) * _2087) * _2101) * _1941);
    float _2192 = (((_2168 * cbLight._m0[_2117].y) * _2181) * _1960) + ((((cbLight._m0[_2031].y * _1908) * _2087) * _2101) * _1941);
    float _2193 = (((_2168 * cbLight._m0[_2117].z) * _2181) * _1960) + ((((cbLight._m0[_2031].z * _1909) * _2087) * _2101) * _1941);
    float _2329;
    float _2331;
    float _2333;
    float _2335;
    float _2337;
    float _2339;
    if (_1913.y == 0u)
    {
        float _2270 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2271 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2270;
        float _2272 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2270;
        float _2273 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2270;
        uvec4 _2285 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2286 = _2285.x;
        uint _2297 = uint((float(_2285.y) * floor(float(uint(cbSceneParam._m0[85u].y * _693) / _2286))) + floor(float(uint(cbSceneParam._m0[85u].x * _692) / _2286)));
        float _2307 = (log2(_2273 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2308 = isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : max(_2307, 0.0));
        uint _2311 = uint(isnan(14.0) ? _2308 : (isnan(_2308) ? 14.0 : min(_2308, 14.0)));
        uint _2318 = _2285.z;
        float _2367;
        float _2369;
        float _2371;
        float _2373;
        float _2375;
        float _2377;
        if (((((1u << ((_2318 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2311 << 2u) + (_2297 << 6u)) >> 2u)).x) == 0u) || ((_2318 & 240u) == 0u))
        {
            _2367 = 0.0;
            _2369 = 0.0;
            _2371 = 0.0;
            _2373 = 0.0;
            _2375 = 0.0;
            _2377 = 0.0;
        }
        else
        {
            float _2368;
            float _2370;
            float _2372;
            float _2374;
            float _2376;
            float _2378;
            float _2559 = 0.0;
            float _2560 = 0.0;
            float _2561 = 0.0;
            float _2562 = 0.0;
            float _2563 = 0.0;
            float _2564 = 0.0;
            uint _2565 = 0u;
            uint _2574;
            bool _2575;
            for (;;)
            {
                _2574 = texelFetch(g_lightClassification, int((((_2311 << 5u) + (_2297 << 9u)) + (_2565 << 2u)) >> 2u)).x;
                _2575 = _2574 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2575)
                {
                    frontier_phi_55_pred = _2564;
                    frontier_phi_55_pred_1 = _2563;
                    frontier_phi_55_pred_2 = _2562;
                    frontier_phi_55_pred_3 = _2560;
                    frontier_phi_55_pred_4 = _2559;
                    frontier_phi_55_pred_5 = _2561;
                }
                else
                {
                    float _2772;
                    float _2773;
                    float _2774;
                    float _2775;
                    float _2776;
                    float _2777;
                    uint _2778;
                    _2772 = _2559;
                    _2773 = _2560;
                    _2774 = _2561;
                    _2775 = _2562;
                    _2776 = _2563;
                    _2777 = _2564;
                    _2778 = _2574;
                    float _2720;
                    float _2721;
                    float _2722;
                    float _2723;
                    float _2724;
                    float _2725;
                    for (;;)
                    {
                        uint _2782 = uint(findLSB(_2778)) + (_2565 << 5u);
                        uint _2779 = (_2778 + 4294967295u) & _2778;
                        uint _2784 = _2782 * 48u;
                        vec4 _2798 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2784)).x, texelFetch(g_PointLightRenderingBuffer, int(_2784 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2784 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2784 + 3u)).x));
                        uint _2804 = (_2782 * 48u) + 4u;
                        vec4 _2817 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2804)).x, texelFetch(g_PointLightRenderingBuffer, int(_2804 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2804 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2804 + 3u)).x));
                        float _2818 = _2817.x;
                        float _2819 = _2817.y;
                        float _2820 = _2817.z;
                        uint _2823 = (_2782 * 48u) + 8u;
                        vec3 _2834 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2823)).x, texelFetch(g_PointLightRenderingBuffer, int(_2823 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2823 + 2u)).x));
                        uint _2839 = (_2782 * 48u) + 12u;
                        vec2 _2847 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2839)).x, texelFetch(g_PointLightRenderingBuffer, int(_2839 + 1u)).x));
                        float _2853 = inversesqrt(dot(vec3(_2271, _2272, _2273), vec3(_2271, _2272, _2273)));
                        float _2854 = _2853 * _2271;
                        float _2855 = _2853 * _2272;
                        float _2856 = _2853 * _2273;
                        float _2857 = _2798.x - _2271;
                        float _2858 = _2798.y - _2272;
                        float _2859 = _2798.z - _2273;
                        float _2860 = dot(vec3(_2857, _2858, _2859), vec3(_2857, _2858, _2859));
                        float _2863 = inversesqrt(_2860);
                        float _2864 = _2863 * _2857;
                        float _2865 = _2863 * _2858;
                        float _2866 = _2863 * _2859;
                        float _2867 = dot(vec3(_817, _820, _823), vec3(_2864, _2865, _2866));
                        float _2872 = 1.0 - (_2860 * _2798.w);
                        float _3853 = isnan(0.0) ? _2872 : (isnan(_2872) ? 0.0 : max(_2872, 0.0));
                        float _2873 = isnan(1.0) ? _3853 : (isnan(_3853) ? 1.0 : min(_3853, 1.0));
                        float _2874 = sqrt(_2860) * _2817.w;
                        float _2877 = 1.39999997615814208984375 / (_2874 + 1.39999997615814208984375);
                        float _2878 = _2877 * _2877;
                        float _2879 = 1.0 - _2878;
                        float _2881 = (_2879 * _2879) * _782;
                        float _2884 = ((_2879 * _2867) + _2878) + _2881;
                        float _2889 = _2874 * _2874;
                        float _2894 = ((isnan(0.0) ? _2884 : (isnan(_2884) ? 0.0 : max(_2884, 0.0))) * _2873) / (((_2881 * 2.0) + 1.0) * ((_2889 * 0.699999988079071044921875) + 1.0));
                        float _2898 = dot(vec3(_2864, _2865, _2866), vec3(_2854, _2855, _2856));
                        float _3869 = isnan(0.0) ? _2898 : (isnan(_2898) ? 0.0 : max(_2898, 0.0));
                        float _2905 = dot(vec3((-0.0) - _2854, (-0.0) - _2855, (-0.0) - _2856), vec3(_817, _820, _823)) + 1.0;
                        float _2907 = (isnan(0.0) ? _2905 : (isnan(_2905) ? 0.0 : max(_2905, 0.0))) * 0.5;
                        float _2914 = ((_2907 * _2907) * _2847.x) * exp2((_2847.y * 32.0) * log2(isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0))));
                        float _2916 = _782 / (_782 + 1.0);
                        float _2932 = (-0.0) - _2271;
                        float _2933 = (-0.0) - _2272;
                        float _2934 = (-0.0) - _2273;
                        float _2938 = inversesqrt(dot(vec3(_2932, _2933, _2934), vec3(_2932, _2933, _2934)));
                        float _2939 = _2938 * _2932;
                        float _2940 = _2938 * _2933;
                        float _2941 = _2938 * _2934;
                        float _2949 = exp2(log2(1.0 / ((_2889 * 3.5) + 5.0)) * 0.25);
                        float _2950 = 1.0 - _876;
                        float _2957 = sqrt(1.0 - ((1.0 - (_2950 * _2950)) * (1.0 - (_2949 * _2949))));
                        float _2958 = _2957 * _2957;
                        float _2959 = _2958 * _2958;
                        float _2960 = _2939 + _2864;
                        float _2961 = _2940 + _2865;
                        float _2962 = _2941 + _2866;
                        float _2966 = inversesqrt(dot(vec3(_2960, _2961, _2962), vec3(_2960, _2961, _2962)));
                        float _2970 = dot(vec3(_817, _820, _823), vec3(_2939, _2940, _2941));
                        float _3885 = isnan(0.0) ? _2970 : (isnan(_2970) ? 0.0 : max(_2970, 0.0));
                        float _2973 = isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0));
                        float _2974 = dot(vec3(_817, _820, _823), vec3(_2966 * _2960, _2966 * _2961, _2966 * _2962));
                        float _3896 = isnan(0.0) ? _2974 : (isnan(_2974) ? 0.0 : max(_2974, 0.0));
                        float _2977 = isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0));
                        float _2981 = ((_2977 * _2977) * (_2959 + (-1.0))) + 1.0;
                        float _2982 = _2877 * _2958;
                        float _2983 = _2982 * _2982;
                        float _2986 = ((1.0 - _2983) * _2867) + _2983;
                        float _3907 = isnan(0.0) ? _2986 : (isnan(_2986) ? 0.0 : max(_2986, 0.0));
                        float _2987 = isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0));
                        float _2988 = 1.0 - _2958;
                        float _2998 = (0.5 / (((_2987 * ((_2973 * _2988) + _2958)) + 9.9999999392252902907785028219223e-09) + (((_2987 * _2988) + _2958) * _2973))) * _2987;
                        float _3918 = isnan(0.0) ? _2998 : (isnan(_2998) ? 0.0 : max(_2998, 0.0));
                        float _3009 = (((_2959 * 3.1415927410125732421875) * (isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0)))) / ((_2981 * _2981) * ((_2889 * 2.1991131305694580078125) + 3.141590118408203125))) * _2873;
                        _2723 = (((((_2818 * 0.3183098733425140380859375) * _2916) * _2914) + _2818) * _2894) + _2775;
                        _2724 = (((((_2819 * 0.3183098733425140380859375) * _2916) * _2914) + _2819) * _2894) + _2776;
                        _2725 = (((((_2820 * 0.3183098733425140380859375) * _2916) * _2914) + _2820) * _2894) + _2777;
                        _2720 = (_3009 * _2834.x) + _2772;
                        _2721 = (_3009 * _2834.y) + _2773;
                        _2722 = (_3009 * _2834.z) + _2774;
                        if (_2779 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2772 = _2720;
                            _2773 = _2721;
                            _2774 = _2722;
                            _2775 = _2723;
                            _2776 = _2724;
                            _2777 = _2725;
                            _2778 = _2779;
                        }
                    }
                    frontier_phi_55_pred = _2725;
                    frontier_phi_55_pred_1 = _2724;
                    frontier_phi_55_pred_2 = _2723;
                    frontier_phi_55_pred_3 = _2721;
                    frontier_phi_55_pred_4 = _2720;
                    frontier_phi_55_pred_5 = _2722;
                }
                _2378 = frontier_phi_55_pred;
                _2376 = frontier_phi_55_pred_1;
                _2374 = frontier_phi_55_pred_2;
                _2370 = frontier_phi_55_pred_3;
                _2368 = frontier_phi_55_pred_4;
                _2372 = frontier_phi_55_pred_5;
                uint _2566 = _2565 + 1u;
                if (_2566 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2559 = _2368;
                    _2560 = _2370;
                    _2561 = _2372;
                    _2562 = _2374;
                    _2563 = _2376;
                    _2564 = _2378;
                    _2565 = _2566;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2367 = _2368;
            _2369 = _2370;
            _2371 = _2372;
            _2373 = _2374;
            _2375 = _2376;
            _2377 = _2378;
        }
        float _2382 = isnan(1.0) ? _855 : (isnan(_855) ? 1.0 : min(_855, 1.0));
        _2329 = (_2382 * _2373) + _2025;
        _2331 = (_2382 * _2375) + _2026;
        _2333 = (_2382 * _2377) + _2027;
        _2335 = ((_2367 * 0.039999999105930328369140625) * _2382) + _2191;
        _2337 = ((_2369 * 0.039999999105930328369140625) * _2382) + _2192;
        _2339 = ((_2371 * 0.039999999105930328369140625) * _2382) + _2193;
    }
    else
    {
        _2329 = _2025;
        _2331 = _2026;
        _2333 = _2027;
        _2335 = _2191;
        _2337 = _2192;
        _2339 = _2193;
    }
    float _2456;
    float _2457;
    float _2458;
    if (_782 > 0.0)
    {
        uint _2389 = _1915 + 4u;
        float _2395 = (-0.0) - _536;
        float _2396 = (-0.0) - _537;
        float _2397 = (-0.0) - _538;
        float _2398 = dot(vec3(cbLight._m0[_1915].xyz), vec3(_2395, _2396, _2397));
        float _3934 = isnan(0.0) ? _2398 : (isnan(_2398) ? 0.0 : max(_2398, 0.0));
        float _2402 = _866 + 1.0;
        float _2404 = (isnan(0.0) ? _2402 : (isnan(_2402) ? 0.0 : max(_2402, 0.0))) * 0.5;
        float _2409 = _2404 * _2404;
        float _2410 = _2409 * exp2(log2(isnan(1.0) ? _3934 : (isnan(_3934) ? 1.0 : min(_3934, 1.0))) * 32.0);
        float _2412 = _782 / (_782 + 1.0);
        float _2413 = isnan(_1924) ? 1.0 : (isnan(1.0) ? _1924 : min(1.0, _1924));
        uint _2426 = _1915 + 5u;
        float _2432 = dot(vec3(cbLight._m0[_1951].xyz), vec3(_2395, _2396, _2397));
        float _3955 = isnan(0.0) ? _2432 : (isnan(_2432) ? 0.0 : max(_2432, 0.0));
        float _2439 = _2409 * exp2(log2(isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0))) * 32.0);
        float _2440 = isnan(_1925) ? 1.0 : (isnan(1.0) ? _1925 : min(1.0, _1925));
        _2456 = ((((_2439 * cbLight._m0[_2426].x) * _2412) * _2440) + ((((cbLight._m0[_2389].x * _1907) * _2410) * _2412) * _2413)) * 0.3183098733425140380859375;
        _2457 = ((((_2439 * cbLight._m0[_2426].y) * _2412) * _2440) + ((((cbLight._m0[_2389].y * _1908) * _2410) * _2412) * _2413)) * 0.3183098733425140380859375;
        _2458 = ((((_2439 * cbLight._m0[_2426].z) * _2412) * _2440) + ((((cbLight._m0[_2389].z * _1909) * _2410) * _2412) * _2413)) * 0.3183098733425140380859375;
    }
    else
    {
        _2456 = 0.0;
        _2457 = 0.0;
        _2458 = 0.0;
    }
    float _3971 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _3982 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _3993 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _4004 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _2473 = (isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0))) * ((_2329 + ((isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0))) * _855)) + _2456);
    float _2474 = (isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0))) * ((_2331 + ((isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0))) * _855)) + _2457);
    float _2475 = (isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0))) * ((_2333 + ((isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0))) * _855)) + _2458);
    float _2479 = 0.959999978542327880859375 - (exp2(log2(1.0 - _870) * 5.0) * 0.959999978542327880859375);
    float _2504 = _692 / cbSceneParam._m0[86u].x;
    float _2505 = _693 / cbSceneParam._m0[86u].y;
    vec4 _2519 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2504, _2505, (log2((isnan(cbSceneParam._m0[77u].w) ? _799 : (isnan(_799) ? cbSceneParam._m0[77u].w : min(_799, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2521 = _2519.x;
    float _2522 = _2519.y;
    float _2523 = _2519.z;
    float _2524 = _2519.w;
    float _2617;
    float _2619;
    float _2621;
    float _2623;
    if (_799 > cbSceneParam._m0[78u].w)
    {
        float _2580 = isnan(_799) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _799 : min(cbSceneParam._m0[80u].w, _799));
        float _2581 = _2580 / _799;
        float _2592 = _2581 * _299;
        float _2593 = _300 * _2581;
        float _2594 = (-0.0) - _2593;
        float _2595 = _2581 * _301;
        float _2597 = (cbSceneParam._m0[77u].w * _2594) / _2580;
        float _2598 = _2597 + cbSceneParam._m0[79u].w;
        float _2599 = cbSceneParam._m0[79u].w - _2593;
        float _2605 = sqrt(((_2592 * _2592) + (_2593 * _2593)) + (_2595 * _2595));
        float _2608 = (1.0 - (cbSceneParam._m0[77u].w / _2580)) * _2605;
        float _2613 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2615 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3014;
        if (abs((_2594 - _2597) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3014 = ((((_2598 > 0.0) ? exp2(_2613 * _2598) : (2.0 - exp2(_2615 * _2598))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2608;
        }
        else
        {
            float _2745 = 1.0 / cbSceneParam._m0[80u].x;
            float _2746 = isnan(_2599) ? _2598 : (isnan(_2598) ? _2599 : max(_2598, _2599));
            float _2747 = isnan(_2599) ? _2598 : (isnan(_2598) ? _2599 : min(_2598, _2599));
            float _2756 = isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : min(_2746, 0.0));
            float _2757 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : min(_2747, 0.0));
            _3014 = ((abs(_2605 / _2594) * cbSceneParam._m0[80u].y) * ((((_2756 - _2757) * 2.0) - ((exp2(_2613 * (isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0)))) - exp2(_2613 * (isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0))))) * _2745)) - ((exp2(_2615 * _2756) - exp2(_2615 * _2757)) * _2745))) + (_2608 * cbSceneParam._m0[80u].z);
        }
        vec4 _3016 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2504, _2505, 1.0), 0.0);
        float _3025 = exp2((_3014 * (-1.44269502162933349609375)) * (1.0 - _3016.w));
        float _3026 = log2(_3025);
        float _3042 = log2(_2524);
        _2617 = (exp2(_3042 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3026 * cbSceneParam._m0[78u].x)) * _3016.x) / cbSceneParam._m0[78u].x)) + _2521;
        _2619 = (exp2(_3042 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3026 * cbSceneParam._m0[78u].y)) * _3016.y) / cbSceneParam._m0[78u].y)) + _2522;
        _2621 = (exp2(_3042 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3026 * cbSceneParam._m0[78u].z)) * _3016.z) / cbSceneParam._m0[78u].z)) + _2523;
        _2623 = _3025 * _2524;
    }
    else
    {
        _2617 = _2521;
        _2619 = _2522;
        _2621 = _2523;
        _2623 = _2524;
    }
    bool _2635 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2636 = log2(_2623);
    float _2643 = exp2(_2636 * cbSceneParam._m0[78u].x) * ((_2473 + ((_2335 + ((isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0))) * _1666)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _716.x) * _2479) - _2473) * _762));
    float _2644 = exp2(_2636 * cbSceneParam._m0[78u].y) * ((_2474 + ((_2337 + ((isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0))) * _1666)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _716.y) * _2479) - _2474) * _762));
    float _2645 = exp2(_2636 * cbSceneParam._m0[78u].z) * ((_2475 + ((_2339 + ((isnan(0.0) ? _1885 : (isnan(_1885) ? 0.0 : max(_1885, 0.0))) * _1666)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _716.z) * _2479) - _2475) * _762));
    vec4 _2653 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_692, _693));
    float _2655 = _2653.x;
    float _2676 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2655)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2655))) - _799) * cbMtdParam._m0[17u].y;
    float _4055 = isnan(0.0) ? _2676 : (isnan(_2676) ? 0.0 : max(_2676, 0.0));
    float _2678 = (cbInstanceData._m0[_307 + 6u].w * (isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0)))) * (isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0)));
    float _2687 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2687 * (_2635 ? _2643 : (_2643 + (cbSceneParam._m0[72u].w * _2617)));
    SV_Target.y = _2687 * (_2635 ? _2644 : (_2644 + (cbSceneParam._m0[72u].w * _2619)));
    SV_Target.z = _2687 * (_2635 ? _2645 : (_2645 + (cbSceneParam._m0[72u].w * _2621)));
    SV_Target.w = _2678;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2678;
}


