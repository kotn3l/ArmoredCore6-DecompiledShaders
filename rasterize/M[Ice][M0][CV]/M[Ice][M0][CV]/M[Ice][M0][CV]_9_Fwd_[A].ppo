#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1246;
float _3186;
float _3187;
float _3188;
float _3189;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _206 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _207 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _208 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _214 = inversesqrt(dot(vec3(_206, _207, _208), vec3(_206, _207, _208)));
    float _215 = _214 * _206;
    float _216 = _214 * _207;
    float _217 = _214 * _208;
    float _221 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _222 = _221 * NORMAL.x;
    float _223 = _221 * NORMAL.y;
    float _224 = _221 * NORMAL.z;
    float _228 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _229 = _228 * TANGENT.x;
    float _230 = _228 * TANGENT.y;
    float _231 = _228 * TANGENT.z;
    float _236;
    float _237;
    float _238;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _236 = (-0.0) - _222;
        _237 = (-0.0) - _223;
        _238 = (-0.0) - _224;
    }
    else
    {
        _236 = _222;
        _237 = _223;
        _238 = _224;
    }
    float _285 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _295 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _285);
    float _296 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _285);
    float _297 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _285);
    uint _303 = uint(roundEven(NORMAL.w)) * 13u;
    uint _308 = _303 + 1u;
    uint _312 = _303 + 2u;
    float _321 = sqrt(((cbInstanceData._m0[_308].x * cbInstanceData._m0[_308].x) + (cbInstanceData._m0[_303].x * cbInstanceData._m0[_303].x)) + (cbInstanceData._m0[_312].x * cbInstanceData._m0[_312].x));
    float _322 = _321 * TEXCOORD.z;
    float _323 = _321 * TEXCOORD.w;
    vec4 _336 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _322) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _323) + cbTextureTilingScale._m0[8u].w));
    vec4 _363 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _371 = (_363.x * 2.0) + (-1.0);
    float _373 = (_363.y * 2.0) + (-1.0);
    float _374 = dot(vec2(_371, _373), vec2(_371, _373));
    float _3198 = isnan(0.0) ? _374 : (isnan(_374) ? 0.0 : max(_374, 0.0));
    float _380 = sqrt(1.0 - (isnan(1.0) ? _3198 : (isnan(_3198) ? 1.0 : min(_3198, 1.0))));
    float _383 = fma(_380, _236, fma(_373, _229, _371 * _215));
    float _386 = fma(_380, _237, fma(_373, _230, _371 * _216));
    float _389 = fma(_380, _238, fma(_373, _231, _371 * _217));
    float _393 = inversesqrt(dot(vec3(_383, _386, _389), vec3(_383, _386, _389)));
    float _394 = _393 * _383;
    float _395 = _393 * _386;
    float _424 = (cbMtdParam._m0[17u].w + dot(vec4(_394, _395, _393 * _389, 0.0), vec4(cbMtdParam._m0[19u].xyz, 0.0))) - (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _322) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _323) + cbTextureTilingScale._m0[6u].w)).x * cbMtdParam._m0[18u].z);
    float _3209 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0));
    float _425 = isnan(1.0) ? _3209 : (isnan(_3209) ? 1.0 : min(_3209, 1.0));
    vec4 _437 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _442 = _437.w;
    float _454 = dot(vec3(_295, _296, _297), vec3(_215, _216, _217));
    float _457 = dot(vec3(_295, _296, _297), vec3(_229, _230, _231));
    float _460 = dot(vec3(_295, _296, _297), vec3(_236, _237, _238));
    float _466 = inversesqrt(dot(vec3(_454, _457, _460), vec3(_454, _457, _460)));
    float _488 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _508 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_454 * cbMtdParam._m0[14u].x) * _466) * _488) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_457 * cbMtdParam._m0[14u].x) * _466) * _488) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _531 = inversesqrt(dot(vec3(_295, _296, _297), vec3(_295, _296, _297)));
    float _532 = _531 * _295;
    float _533 = _531 * _296;
    float _534 = _531 * _297;
    float _535 = dot(vec4(_532, _533, _534, 0.0), vec4(_236, _237, _238, 0.0));
    float _538 = _535 - cbMtdParam._m0[15u].z;
    float _3220 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _545 = exp2(log2(1.0 - (isnan(1.0) ? _3220 : (isnan(_3220) ? 1.0 : min(_3220, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _560 = ((((_437.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _508.x) * cbMtdParam._m0[9u].x) * ((_545 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _565 = ((((_437.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _508.y) * cbMtdParam._m0[9u].y) * ((_545 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _570 = ((((_437.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _508.z) * cbMtdParam._m0[9u].z) * ((_545 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _577 = (((_336.x * cbMtdParam._m0[10u].x) - _560) * _425) + _560;
    float _578 = (((_336.y * cbMtdParam._m0[10u].y) - _565) * _425) + _565;
    float _579 = (((_336.z * cbMtdParam._m0[10u].z) - _570) * _425) + _570;
    vec4 _591 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _322) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _323) + cbTextureTilingScale._m0[9u].w));
    float _598 = (_591.x * 2.0) + (-1.0);
    float _599 = (_591.y * 2.0) + (-1.0);
    float _600 = dot(vec2(_598, _599), vec2(_598, _599));
    float _3236 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    float _612 = (cbMtdParam._m0[16u].y + _363.z) + cbMtdParam._m0[17u].z;
    float _615 = ((_591.z - _612) * _425) + _612;
    float _625 = ((sqrt(1.0 - (isnan(1.0) ? _3236 : (isnan(_3236) ? 1.0 : min(_3236, 1.0)))) - _380) * _425) + _380;
    float _628 = (((_598 - _371) * _425) + _371) + (cbMtdParam._m0[14u].z * _371);
    float _629 = (((_599 - _373) * _425) + _373) + (cbMtdParam._m0[14u].z * _373);
    vec4 _641 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _645 = cbMtdParam._m0[16u].w * _641.x;
    float _647 = _645 - (_645 * _425);
    float _667 = cbSceneParam._m0[86u].x * (((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x) + (cbMtdParam._m0[18u].y * _394));
    float _668 = cbSceneParam._m0[86u].y * (((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y) + (cbMtdParam._m0[18u].y * _395));
    float _675 = isnan(cbInstanceData._m0[8u].x) ? _667 : (isnan(_667) ? cbInstanceData._m0[8u].x : max(_667, cbInstanceData._m0[8u].x));
    float _676 = isnan(cbInstanceData._m0[8u].y) ? _668 : (isnan(_668) ? cbInstanceData._m0[8u].y : max(_668, cbInstanceData._m0[8u].y));
    vec4 _680 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _675 : (isnan(_675) ? cbInstanceData._m0[8u].z : min(_675, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _676 : (isnan(_676) ? cbInstanceData._m0[8u].w : min(_676, cbInstanceData._m0[8u].w))));
    float _713 = _535 - cbMtdParam._m0[15u].x;
    float _3267 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
    float _723 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3267 : (isnan(_3267) ? 1.0 : min(_3267, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3283 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
    float _724 = isnan(1.0) ? _3283 : (isnan(_3283) ? 1.0 : min(_3283, 1.0));
    float _726 = _724 - (_724 * _425);
    float _730 = fma(_625, _236, fma(_629, _229, _628 * _215));
    float _733 = fma(_625, _237, fma(_629, _230, _628 * _216));
    float _736 = fma(_625, _238, fma(_629, _231, _628 * _217));
    float _740 = inversesqrt(dot(vec3(_730, _733, _736), vec3(_730, _733, _736)));
    float _741 = _740 * _730;
    float _742 = _740 * _733;
    float _743 = _740 * _736;
    float _3294 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _744 = isnan(1.0) ? _3294 : (isnan(_3294) ? 1.0 : min(_3294, 1.0));
    float _3305 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _745 = isnan(1.0) ? _3305 : (isnan(_3305) ? 1.0 : min(_3305, 1.0));
    float _746 = isnan(0.0) ? _647 : (isnan(_647) ? 0.0 : max(_647, 0.0));
    float _3321 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _3332 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _3343 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _763 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _768 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _770 = _768.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _925 = sqrt(((_295 * _295) + (_296 * _296)) + (_297 * _297));
        float _931 = (cbMatDynParam._m0[5u].x * _925) + cbMatDynParam._m0[5u].y;
        float _3354 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
        float _932 = isnan(1.0) ? _3354 : (isnan(_3354) ? 1.0 : min(_3354, 1.0));
        float _936 = (cbMatDynParam._m0[5u].z * _925) + cbMatDynParam._m0[5u].w;
        float _3365 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3365 : (isnan(_3365) ? 1.0 : min(_3365, 1.0))) - _932)) + _932) < ((_770 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _780 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _781 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _799 = fma(_743, cbSceneParam._m0[5u].z, fma(_742, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _741));
    float _802 = fma(_743, cbSceneParam._m0[6u].z, fma(_742, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _741));
    float _805 = fma(_743, cbSceneParam._m0[7u].z, fma(_742, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _741));
    uint _818 = _303 + 9u;
    uint _819 = _818 + uint(cbMatDynParam._m0[0u].w);
    float _825 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3321 : (isnan(_3321) ? 1.0 : min(_3321, 1.0)))) * cbInstanceData._m0[_819].x;
    float _826 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3332 : (isnan(_3332) ? 1.0 : min(_3332, 1.0)))) * cbInstanceData._m0[_819].y;
    float _827 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3343 : (isnan(_3343) ? 1.0 : min(_3343, 1.0)))) * cbInstanceData._m0[_819].z;
    float _3376 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _828 = isnan(1.0) ? _3376 : (isnan(_3376) ? 1.0 : min(_3376, 1.0));
    float _3387 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _829 = isnan(1.0) ? _3387 : (isnan(_3387) ? 1.0 : min(_3387, 1.0));
    float _3398 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _830 = isnan(1.0) ? _3398 : (isnan(_3398) ? 1.0 : min(_3398, 1.0));
    vec4 _838 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _780, cbSceneParam._m0[86u].y * _781));
    float _841 = _838.x * TEXCOORD_5.w;
    float _842 = dot(vec3(_741, _742, _743), vec3(_532, _533, _534));
    float _845 = _842 * 2.0;
    float _849 = (_845 * _741) - _532;
    float _850 = (_845 * _742) - _533;
    float _851 = (_845 * _743) - _534;
    float _852 = dot(vec3(_532, _533, _534), vec3(_741, _742, _743));
    float _855 = abs(_852);
    float _3409 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
    float _856 = isnan(1.0) ? _3409 : (isnan(_3409) ? 1.0 : min(_3409, 1.0));
    float _862 = sqrt(_745);
    float _874 = exp2((_862 * 5.0) * log2(1.0 - (_856 * 0.999000012874603271484375))) / (4.0 - (_862 * 3.0));
    float _906 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _910 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _914 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1245;
    float _1247;
    float _1248;
    float _1249;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    float _1256;
    float _1257;
    float _1258;
    float _1259;
    float _1260;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _970 = fma(_914, cbModelParam._m0[26u].z, fma(_910, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _906));
        float _974 = fma(_914, cbModelParam._m0[27u].z, fma(_910, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _906));
        float _978 = fma(_914, cbModelParam._m0[28u].z, fma(_910, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _906));
        float _1003 = _906 + _741;
        float _1004 = _910 + _742;
        float _1005 = _914 + _743;
        float _1015 = fma(_1005, cbModelParam._m0[26u].z, fma(_1004, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1003)) - _970;
        float _1016 = fma(_1005, cbModelParam._m0[27u].z, fma(_1004, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1003)) - _974;
        float _1017 = fma(_1005, cbModelParam._m0[28u].z, fma(_1004, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1003)) - _978;
        float _1021 = inversesqrt(dot(vec3(_1015, _1016, _1017), vec3(_1015, _1016, _1017)));
        float _1034 = ((_1021 * _1015) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_970 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1035 = ((_1021 * _1016) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_974 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1036 = ((_1021 * _1017) / cbModelParam._m0[34u].z) + ((((((_978 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1039 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1034, _1035, _1036), 0.0);
        vec4 _1046 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1034, _1035, _1036), 0.0);
        vec4 _1053 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1034, _1035, _1036), 0.0);
        vec4 _1060 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1034, _1035, _1036), 0.0);
        float _1073 = exp2((_1039.w + (-0.5)) * 20.0) * 2.0;
        float _1074 = _1073 * (_1039.x + (-0.5));
        float _1075 = _1073 * (_1039.y + (-0.5));
        float _1076 = _1073 * (_1039.z + (-0.5));
        float _1083 = exp2((_1046.w + (-0.5)) * 20.0) * 2.0;
        float _1084 = _1083 * (_1046.x + (-0.5));
        float _1085 = _1083 * (_1046.y + (-0.5));
        float _1086 = _1083 * (_1046.z + (-0.5));
        float _1093 = exp2((_1053.w + (-0.5)) * 20.0) * 2.0;
        float _1094 = _1093 * (_1053.x + (-0.5));
        float _1095 = _1093 * (_1053.y + (-0.5));
        float _1096 = _1093 * (_1053.z + (-0.5));
        float _1103 = exp2((_1060.w + (-0.5)) * 20.0) * 2.0;
        float _1104 = _1103 * (_1060.x + (-0.5));
        float _1105 = _1103 * (_1060.y + (-0.5));
        float _1106 = _1103 * (_1060.z + (-0.5));
        float _1107 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
        float _1108 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
        float _1109 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
        float _1110 = _1074 * 0.5;
        float _1111 = _1084 * 0.5;
        float _1112 = _1094 * 0.5;
        float _1113 = dot(vec3(_1110, _1111, _1112), vec3(_1110, _1111, _1112));
        float _1118 = (_1113 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1113);
        float _1127 = (dot(vec3(_741, _742, _743), vec3(_1118 * _1110, _1118 * _1111, _1118 * _1112)) + 1.0) * 0.5;
        float _3435 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        float _1137 = sqrt(((_1111 * _1111) + (_1110 * _1110)) + (_1112 * _1112)) / (_1107 + 9.9999997473787516355514526367188e-06);
        float _3446 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
        float _1138 = isnan(1.0) ? _3446 : (isnan(_3446) ? 1.0 : min(_3446, 1.0));
        float _1139 = _1138 * 2.0;
        float _1143 = (1.0 - _1138) / (_1138 + 1.0);
        float _3457 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1144 = isnan(1.0) ? _3457 : (isnan(_3457) ? 1.0 : min(_3457, 1.0));
        float _1153 = ((((1.0 - _1144) * (_1139 + 2.0)) * exp2(log2(isnan(1.0) ? _3435 : (isnan(_3435) ? 1.0 : min(_3435, 1.0))) * (_1139 + 1.0))) + _1144) * _1107;
        float _1154 = _1075 * 0.5;
        float _1155 = _1085 * 0.5;
        float _1156 = _1095 * 0.5;
        float _1157 = dot(vec3(_1154, _1155, _1156), vec3(_1154, _1155, _1156));
        float _1162 = (_1157 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1157);
        float _1170 = (dot(vec3(_741, _742, _743), vec3(_1162 * _1154, _1162 * _1155, _1162 * _1156)) + 1.0) * 0.5;
        float _3468 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1179 = sqrt(((_1155 * _1155) + (_1154 * _1154)) + (_1156 * _1156)) / (_1108 + 9.9999997473787516355514526367188e-06);
        float _3479 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1180 = isnan(1.0) ? _3479 : (isnan(_3479) ? 1.0 : min(_3479, 1.0));
        float _1181 = _1180 * 2.0;
        float _1185 = (1.0 - _1180) / (_1180 + 1.0);
        float _3490 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1186 = isnan(1.0) ? _3490 : (isnan(_3490) ? 1.0 : min(_3490, 1.0));
        float _1195 = ((((1.0 - _1186) * (_1181 + 2.0)) * exp2(log2(isnan(1.0) ? _3468 : (isnan(_3468) ? 1.0 : min(_3468, 1.0))) * (_1181 + 1.0))) + _1186) * _1108;
        float _1196 = _1076 * 0.5;
        float _1197 = _1086 * 0.5;
        float _1198 = _1096 * 0.5;
        float _1199 = dot(vec3(_1196, _1197, _1198), vec3(_1196, _1197, _1198));
        float _1204 = (_1199 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1199);
        float _1212 = (dot(vec3(_741, _742, _743), vec3(_1204 * _1196, _1204 * _1197, _1204 * _1198)) + 1.0) * 0.5;
        float _3501 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
        float _1221 = sqrt(((_1197 * _1197) + (_1196 * _1196)) + (_1198 * _1198)) / (_1109 + 9.9999997473787516355514526367188e-06);
        float _3512 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1222 = isnan(1.0) ? _3512 : (isnan(_3512) ? 1.0 : min(_3512, 1.0));
        float _1223 = _1222 * 2.0;
        float _1227 = (1.0 - _1222) / (_1222 + 1.0);
        float _3523 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
        float _1228 = isnan(1.0) ? _3523 : (isnan(_3523) ? 1.0 : min(_3523, 1.0));
        float _1237 = ((((1.0 - _1228) * (_1223 + 2.0)) * exp2(log2(isnan(1.0) ? _3501 : (isnan(_3501) ? 1.0 : min(_3501, 1.0))) * (_1223 + 1.0))) + _1228) * _1109;
        _1245 = _1076;
        _1247 = _1075;
        _1248 = _1074;
        _1249 = _1086;
        _1250 = _1085;
        _1251 = _1084;
        _1252 = _1096;
        _1253 = _1095;
        _1254 = _1094;
        _1255 = _1109;
        _1256 = _1108;
        _1257 = _1107;
        _1258 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0)));
        _1259 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0)));
        _1260 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0)));
    }
    else
    {
        _1245 = _1246;
        _1247 = _1246;
        _1248 = _1246;
        _1249 = _1246;
        _1250 = _1246;
        _1251 = _1246;
        _1252 = _1246;
        _1253 = _1246;
        _1254 = _1246;
        _1255 = _1246;
        _1256 = _1246;
        _1257 = _1246;
        _1258 = 0.0;
        _1259 = 0.0;
        _1260 = 0.0;
    }
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1289 = fma(_914, cbModelParam._m0[30u].z, fma(_910, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _906));
        float _1293 = fma(_914, cbModelParam._m0[31u].z, fma(_910, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _906));
        float _1297 = fma(_914, cbModelParam._m0[32u].z, fma(_910, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _906));
        float _1320 = _906 + _741;
        float _1321 = _910 + _742;
        float _1322 = _914 + _743;
        float _1332 = fma(_1322, cbModelParam._m0[30u].z, fma(_1321, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1320)) - _1289;
        float _1333 = fma(_1322, cbModelParam._m0[31u].z, fma(_1321, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1320)) - _1293;
        float _1334 = fma(_1322, cbModelParam._m0[32u].z, fma(_1321, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1320)) - _1297;
        float _1338 = inversesqrt(dot(vec3(_1332, _1333, _1334), vec3(_1332, _1333, _1334)));
        float _1351 = ((_1338 * _1332) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1289 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1352 = ((_1338 * _1333) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1293 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1353 = ((_1338 * _1334) / cbModelParam._m0[35u].z) + ((((((_1297 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1355 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        vec4 _1362 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        vec4 _1369 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        vec4 _1376 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        float _1388 = exp2((_1355.w + (-0.5)) * 20.0) * 2.0;
        float _1389 = _1388 * (_1355.x + (-0.5));
        float _1390 = _1388 * (_1355.y + (-0.5));
        float _1391 = _1388 * (_1355.z + (-0.5));
        float _1398 = exp2((_1362.w + (-0.5)) * 20.0) * 2.0;
        float _1399 = _1398 * (_1362.x + (-0.5));
        float _1400 = _1398 * (_1362.y + (-0.5));
        float _1401 = _1398 * (_1362.z + (-0.5));
        float _1408 = exp2((_1369.w + (-0.5)) * 20.0) * 2.0;
        float _1409 = _1408 * (_1369.x + (-0.5));
        float _1410 = _1408 * (_1369.y + (-0.5));
        float _1411 = _1408 * (_1369.z + (-0.5));
        float _1418 = exp2((_1376.w + (-0.5)) * 20.0) * 2.0;
        float _1419 = _1418 * (_1376.x + (-0.5));
        float _1420 = _1418 * (_1376.y + (-0.5));
        float _1421 = _1418 * (_1376.z + (-0.5));
        float _1422 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1423 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1424 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1425 = _1389 * 0.5;
        float _1426 = _1399 * 0.5;
        float _1427 = _1409 * 0.5;
        float _1428 = dot(vec3(_1425, _1426, _1427), vec3(_1425, _1426, _1427));
        float _1433 = (_1428 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1428);
        float _1441 = (dot(vec3(_741, _742, _743), vec3(_1433 * _1425, _1433 * _1426, _1433 * _1427)) + 1.0) * 0.5;
        float _3564 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1450 = sqrt(((_1426 * _1426) + (_1425 * _1425)) + (_1427 * _1427)) / (_1422 + 9.9999997473787516355514526367188e-06);
        float _3575 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1451 = isnan(1.0) ? _3575 : (isnan(_3575) ? 1.0 : min(_3575, 1.0));
        float _1452 = _1451 * 2.0;
        float _1456 = (1.0 - _1451) / (_1451 + 1.0);
        float _3586 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1457 = isnan(1.0) ? _3586 : (isnan(_3586) ? 1.0 : min(_3586, 1.0));
        float _1466 = ((((1.0 - _1457) * (_1452 + 2.0)) * exp2(log2(isnan(1.0) ? _3564 : (isnan(_3564) ? 1.0 : min(_3564, 1.0))) * (_1452 + 1.0))) + _1457) * _1422;
        float _1467 = _1390 * 0.5;
        float _1468 = _1400 * 0.5;
        float _1469 = _1410 * 0.5;
        float _1470 = dot(vec3(_1467, _1468, _1469), vec3(_1467, _1468, _1469));
        float _1475 = (_1470 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1470);
        float _1483 = (dot(vec3(_741, _742, _743), vec3(_1475 * _1467, _1475 * _1468, _1475 * _1469)) + 1.0) * 0.5;
        float _3597 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1492 = sqrt(((_1468 * _1468) + (_1467 * _1467)) + (_1469 * _1469)) / (_1423 + 9.9999997473787516355514526367188e-06);
        float _3608 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1493 = isnan(1.0) ? _3608 : (isnan(_3608) ? 1.0 : min(_3608, 1.0));
        float _1494 = _1493 * 2.0;
        float _1498 = (1.0 - _1493) / (_1493 + 1.0);
        float _3619 = isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0));
        float _1499 = isnan(1.0) ? _3619 : (isnan(_3619) ? 1.0 : min(_3619, 1.0));
        float _1508 = ((((1.0 - _1499) * (_1494 + 2.0)) * exp2(log2(isnan(1.0) ? _3597 : (isnan(_3597) ? 1.0 : min(_3597, 1.0))) * (_1494 + 1.0))) + _1499) * _1423;
        float _1509 = _1391 * 0.5;
        float _1510 = _1401 * 0.5;
        float _1511 = _1411 * 0.5;
        float _1512 = dot(vec3(_1509, _1510, _1511), vec3(_1509, _1510, _1511));
        float _1517 = (_1512 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1512);
        float _1525 = (dot(vec3(_741, _742, _743), vec3(_1517 * _1509, _1517 * _1510, _1517 * _1511)) + 1.0) * 0.5;
        float _3630 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
        float _1534 = sqrt(((_1510 * _1510) + (_1509 * _1509)) + (_1511 * _1511)) / (_1424 + 9.9999997473787516355514526367188e-06);
        float _3641 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1535 = isnan(1.0) ? _3641 : (isnan(_3641) ? 1.0 : min(_3641, 1.0));
        float _1536 = _1535 * 2.0;
        float _1540 = (1.0 - _1535) / (_1535 + 1.0);
        float _3652 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0));
        float _1541 = isnan(1.0) ? _3652 : (isnan(_3652) ? 1.0 : min(_3652, 1.0));
        float _1550 = ((((1.0 - _1541) * (_1536 + 2.0)) * exp2(log2(isnan(1.0) ? _3630 : (isnan(_3630) ? 1.0 : min(_3630, 1.0))) * (_1536 + 1.0))) + _1541) * _1424;
        _1558 = _1391;
        _1559 = _1390;
        _1560 = _1389;
        _1561 = _1401;
        _1562 = _1400;
        _1563 = _1399;
        _1564 = _1411;
        _1565 = _1410;
        _1566 = _1409;
        _1567 = _1424;
        _1568 = _1423;
        _1569 = _1422;
        _1570 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0)));
        _1571 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0)));
        _1572 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0)));
    }
    else
    {
        _1558 = _1246;
        _1559 = _1246;
        _1560 = _1246;
        _1561 = _1246;
        _1562 = _1246;
        _1563 = _1246;
        _1564 = _1246;
        _1565 = _1246;
        _1566 = _1246;
        _1567 = _1246;
        _1568 = _1246;
        _1569 = _1246;
        _1570 = 0.0;
        _1571 = 0.0;
        _1572 = 0.0;
    }
    float _1582 = (cbModelParam._m0[1u].x * (_1570 - _1258)) + _1258;
    float _1583 = (cbModelParam._m0[1u].x * (_1571 - _1259)) + _1259;
    float _1584 = (cbModelParam._m0[1u].x * (_1572 - _1260)) + _1260;
    float _1605 = fma(_1584, cbSceneParam._m0[89u].z, fma(_1583, cbSceneParam._m0[89u].y, _1582 * cbSceneParam._m0[89u].x));
    float _1608 = fma(_1584, cbSceneParam._m0[90u].z, fma(_1583, cbSceneParam._m0[90u].y, _1582 * cbSceneParam._m0[90u].x));
    float _1611 = fma(_1584, cbSceneParam._m0[91u].z, fma(_1583, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1582));
    float _1626 = _849 * 0.5;
    float _1627 = _850 * 0.5;
    float _1628 = _851 * 0.5;
    float _1629 = dot(vec4(_1626, _1627, _1628, 1.0), vec4(_1560, _1563, _1566, _1569));
    float _1632 = dot(vec4(_1626, _1627, _1628, 1.0), vec4(_1559, _1562, _1565, _1568));
    float _1635 = dot(vec4(_1626, _1627, _1628, 1.0), vec4(_1558, _1561, _1564, _1567));
    float _1669;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1642 = dot(vec4(_1626, _1627, _1628, 1.0), vec4(_1245, _1249, _1252, _1255));
        float _1646 = dot(vec4(_1626, _1627, _1628, 1.0), vec4(_1247, _1250, _1253, _1256));
        float _1650 = dot(vec4(_1626, _1627, _1628, 1.0), vec4(_1248, _1251, _1254, _1257));
        float _1657 = dot(vec4(cbModelParam._m0[39u]), vec4(_1626, _1627, _1628, 1.0));
        _1669 = dot(vec3(isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0)), isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0)), isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1657) ? 0.0 : (isnan(0.0) ? _1657 : max(0.0, _1657))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1669 = 1.0;
    }
    float _1680;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1671 = dot(vec4(cbModelParam._m0[40u]), vec4(_1626, _1627, _1628, 1.0));
        _1680 = dot(vec3(isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0)), isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0)), isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1671) ? 0.0 : (isnan(0.0) ? _1671 : max(0.0, _1671))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1680 = 1.0;
    }
    float _1684 = (_1680 * cbModelParam._m0[1u].x) + (_1669 * (1.0 - cbModelParam._m0[1u].x));
    float _1694 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _745);
    float _1695 = isnan(_1694) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1694 : min(cbModelParam._m0[25u].z, _1694));
    float _1775;
    float _1777;
    float _1779;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1742 = fma(_914, cbModelParam._m0[13u].z, fma(_910, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _906)) + cbModelParam._m0[13u].w;
        float _1746 = fma(_914, cbModelParam._m0[14u].z, fma(_910, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _906)) + cbModelParam._m0[14u].w;
        float _1750 = fma(_914, cbModelParam._m0[15u].z, fma(_910, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _906)) + cbModelParam._m0[15u].w;
        float _1753 = fma(_851, cbModelParam._m0[13u].z, fma(_850, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _849));
        float _1756 = fma(_851, cbModelParam._m0[14u].z, fma(_850, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _849));
        float _1759 = fma(_851, cbModelParam._m0[15u].z, fma(_850, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _849));
        float _1787;
        if (_1753 > 0.0)
        {
            _1787 = abs((1.0 - _1742) / _1753);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1753 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1742 + 1.0) / _1753);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1787 = frontier_phi_19_17_ladder;
        }
        float _1958;
        if (_1756 > 0.0)
        {
            _1958 = abs((1.0 - _1746) / _1756);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1756 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1746 + 1.0) / _1756);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1958 = frontier_phi_28_24_ladder;
        }
        float _2193;
        if (_1759 > 0.0)
        {
            _2193 = abs((1.0 - _1750) / _1759);
        }
        else
        {
            float frontier_phi_39_35_ladder;
            if (_1759 < 0.0)
            {
                frontier_phi_39_35_ladder = abs((_1750 + 1.0) / _1759);
            }
            else
            {
                frontier_phi_39_35_ladder = 5000.0;
            }
            _2193 = frontier_phi_39_35_ladder;
        }
        float _2195 = isnan(_1958) ? _1787 : (isnan(_1787) ? _1958 : min(_1787, _1958));
        float _2196 = isnan(_2193) ? _2195 : (isnan(_2195) ? _2193 : min(_2195, _2193));
        float _2200 = (_2196 * _1753) + _1742;
        float _2201 = (_2196 * _1756) + _1746;
        float _2202 = (_2196 * _1759) + _1750;
        float _2203 = _2196 * 9.9999997473787516355514526367188e-05;
        float _2205 = (-1.0) - _2203;
        float _2207 = _2203 + 1.0;
        float frontier_phi_18_39_ladder;
        float frontier_phi_18_39_ladder_1;
        float frontier_phi_18_39_ladder_2;
        if ((_2202 > _2207) || ((_2202 < _2205) || ((_2201 > _2207) || ((_2201 < _2205) || ((_2200 < _2205) || (_2200 > _2207))))))
        {
            frontier_phi_18_39_ladder = 0.0;
            frontier_phi_18_39_ladder_1 = 0.0;
            frontier_phi_18_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2352 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2202, cbModelParam._m0[9u].z, fma(_2201, cbModelParam._m0[9u].y, _2200 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2202, cbModelParam._m0[10u].z, fma(_2201, cbModelParam._m0[10u].y, _2200 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2202, cbModelParam._m0[11u].z, fma(_2201, cbModelParam._m0[11u].y, _2200 * cbModelParam._m0[11u].x))), _1695);
            frontier_phi_18_39_ladder = _2352.z * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_1 = _2352.y * cbModelParam._m0[1u].y;
            frontier_phi_18_39_ladder_2 = _2352.x * cbModelParam._m0[1u].y;
        }
        _1775 = frontier_phi_18_39_ladder_2;
        _1777 = frontier_phi_18_39_ladder_1;
        _1779 = frontier_phi_18_39_ladder;
    }
    else
    {
        vec4 _1763 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_849, _850, _851), _1695);
        _1775 = _1763.x * cbModelParam._m0[1u].y;
        _1777 = _1763.y * cbModelParam._m0[1u].y;
        _1779 = _1763.z * cbModelParam._m0[1u].y;
    }
    float _1783 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _745);
    float _1784 = isnan(_1783) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1783 : min(cbModelParam._m0[25u].w, _1783));
    float _1875;
    float _1877;
    float _1879;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1839 = fma(_914, cbModelParam._m0[21u].z, fma(_910, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _906)) + cbModelParam._m0[21u].w;
        float _1843 = fma(_914, cbModelParam._m0[22u].z, fma(_910, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _906)) + cbModelParam._m0[22u].w;
        float _1847 = fma(_914, cbModelParam._m0[23u].z, fma(_910, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _906)) + cbModelParam._m0[23u].w;
        float _1850 = fma(_851, cbModelParam._m0[21u].z, fma(_850, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _849));
        float _1853 = fma(_851, cbModelParam._m0[22u].z, fma(_850, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _849));
        float _1856 = fma(_851, cbModelParam._m0[23u].z, fma(_850, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _849));
        float _1963;
        if (_1850 > 0.0)
        {
            _1963 = abs((1.0 - _1839) / _1850);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1850 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1839 + 1.0) / _1850);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1963 = frontier_phi_30_26_ladder;
        }
        float _2220;
        if (_1853 > 0.0)
        {
            _2220 = abs((1.0 - _1843) / _1853);
        }
        else
        {
            float frontier_phi_41_37_ladder;
            if (_1853 < 0.0)
            {
                frontier_phi_41_37_ladder = abs((_1843 + 1.0) / _1853);
            }
            else
            {
                frontier_phi_41_37_ladder = 5000.0;
            }
            _2220 = frontier_phi_41_37_ladder;
        }
        float _2524;
        if (_1856 > 0.0)
        {
            _2524 = abs((1.0 - _1847) / _1856);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1856 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1847 + 1.0) / _1856);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2524 = frontier_phi_52_47_ladder;
        }
        float _2526 = isnan(_2220) ? _1963 : (isnan(_1963) ? _2220 : min(_1963, _2220));
        float _2527 = isnan(_2524) ? _2526 : (isnan(_2526) ? _2524 : min(_2526, _2524));
        float _2531 = (_2527 * _1850) + _1839;
        float _2532 = (_2527 * _1853) + _1843;
        float _2533 = (_2527 * _1856) + _1847;
        float _2534 = _2527 * 9.9999997473787516355514526367188e-05;
        float _2535 = (-1.0) - _2534;
        float _2537 = _2534 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2533 > _2537) || ((_2533 < _2535) || ((_2532 > _2537) || ((_2532 < _2535) || ((_2531 < _2535) || (_2531 > _2537))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2714 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2533, cbModelParam._m0[17u].z, fma(_2532, cbModelParam._m0[17u].y, _2531 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2533, cbModelParam._m0[18u].z, fma(_2532, cbModelParam._m0[18u].y, _2531 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2533, cbModelParam._m0[19u].z, fma(_2532, cbModelParam._m0[19u].y, _2531 * cbModelParam._m0[19u].x))), _1784);
            frontier_phi_27_52_ladder = _2714.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2714.x * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2714.y * cbModelParam._m0[1u].z;
        }
        _1875 = frontier_phi_27_52_ladder_1;
        _1877 = frontier_phi_27_52_ladder_2;
        _1879 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1859 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_849, _850, _851), _1784);
        _1875 = _1859.x * cbModelParam._m0[1u].z;
        _1877 = _1859.y * cbModelParam._m0[1u].z;
        _1879 = _1859.z * cbModelParam._m0[1u].z;
    }
    float _1891 = ((((1.0 - _874) * ((_862 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_874 * _862)) * _841;
    float _1892 = _1891 * ((cbModelParam._m0[1u].w * (_1875 - _1775)) + _1775);
    float _1893 = _1891 * ((cbModelParam._m0[1u].w * (_1877 - _1777)) + _1777);
    float _1894 = _1891 * ((cbModelParam._m0[1u].w * (_1879 - _1779)) + _1779);
    float _1897 = fma(_1894, cbSceneParam._m0[89u].z, fma(_1893, cbSceneParam._m0[89u].y, _1892 * cbSceneParam._m0[89u].x));
    float _1900 = fma(_1894, cbSceneParam._m0[90u].z, fma(_1893, cbSceneParam._m0[90u].y, _1892 * cbSceneParam._m0[90u].x));
    float _1903 = fma(_1894, cbSceneParam._m0[91u].z, fma(_1893, cbSceneParam._m0[91u].y, _1892 * cbSceneParam._m0[91u].x));
    uvec4 _1913 = floatBitsToUint(cbInstanceData._m0[_303 + 5u]);
    uint _1915 = _1913.x * 14u;
    uint _1916 = _1915 + 13u;
    float _1921 = _841 + (-1.0);
    float _1924 = (cbLight._m0[_1916].x * _1921) + 1.0;
    float _1925 = (cbLight._m0[_1916].y * _1921) + 1.0;
    uint _1927 = _1915 + 4u;
    float _1938 = dot(vec3(cbLight._m0[_1915].xyz), vec3(_741, _742, _743));
    float _1941 = isnan(1.0) ? _1924 : (isnan(_1924) ? 1.0 : min(_1924, 1.0));
    uint _1942 = _1915 + 5u;
    uint _1948 = _1915 | 1u;
    float _1954 = dot(vec3(cbLight._m0[_1948].xyz), vec3(_741, _742, _743));
    float _1957 = isnan(1.0) ? _1925 : (isnan(_1925) ? 1.0 : min(_1925, 1.0));
    float _2022;
    float _2023;
    float _2024;
    if (_746 == 0.0)
    {
        float _3788 = isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0));
        float _3799 = isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0));
        float _1976 = (isnan(1.0) ? _3788 : (isnan(_3788) ? 1.0 : min(_3788, 1.0))) * 0.3183098733425140380859375;
        float _1978 = (isnan(1.0) ? _3799 : (isnan(_3799) ? 1.0 : min(_3799, 1.0))) * 0.3183098733425140380859375;
        _2022 = ((cbLight._m0[_1942].x * _1957) * _1978) + ((cbLight._m0[_1927].x * _1941) * _1976);
        _2023 = ((_1957 * cbLight._m0[_1942].y) * _1978) + ((_1941 * cbLight._m0[_1927].y) * _1976);
        _2024 = ((_1957 * cbLight._m0[_1942].z) * _1978) + ((_1941 * cbLight._m0[_1927].z) * _1976);
    }
    else
    {
        float _1988 = _1938 + _746;
        float _1991 = (_746 * 2.0) + 1.0;
        float _1992 = (isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0))) / _1991;
        float _1999 = _1954 + _746;
        float _2001 = (isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0))) / _1991;
        _2022 = (((_2001 * cbLight._m0[_1942].x) * _1957) + ((_1992 * cbLight._m0[_1927].x) * _1941)) * 0.3183098733425140380859375;
        _2023 = (((_2001 * cbLight._m0[_1942].y) * _1957) + ((_1992 * cbLight._m0[_1927].y) * _1941)) * 0.3183098733425140380859375;
        _2024 = (((_2001 * cbLight._m0[_1942].z) * _1957) + ((_1992 * cbLight._m0[_1927].z) * _1941)) * 0.3183098733425140380859375;
    }
    uint _2028 = _1915 + 8u;
    float _2044 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1915].w)) * _745) * 0.949999988079071044921875);
    float _2045 = _2044 * _2044;
    float _2046 = cbLight._m0[_1915].x + _532;
    float _2047 = cbLight._m0[_1915].y + _533;
    float _2048 = cbLight._m0[_1915].z + _534;
    float _2052 = inversesqrt(dot(vec3(_2046, _2047, _2048), vec3(_2046, _2047, _2048)));
    float _2053 = _2052 * _2046;
    float _2054 = _2052 * _2047;
    float _2055 = _2052 * _2048;
    float _2056 = dot(vec3(_741, _742, _743), vec3(cbLight._m0[_1915].xyz));
    float _3820 = isnan(0.0) ? _2056 : (isnan(_2056) ? 0.0 : max(_2056, 0.0));
    float _2059 = isnan(1.0) ? _3820 : (isnan(_3820) ? 1.0 : min(_3820, 1.0));
    float _3831 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _2060 = isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0));
    float _2061 = dot(vec3(_741, _742, _743), vec3(_2053, _2054, _2055));
    float _3842 = isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : max(_2061, 0.0));
    float _2064 = isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0));
    float _2065 = dot(vec3(cbLight._m0[_1915].xyz), vec3(_2053, _2054, _2055));
    float _3853 = isnan(0.0) ? _2065 : (isnan(_2065) ? 0.0 : max(_2065, 0.0));
    float _2069 = _2045 * _2045;
    float _2073 = ((_2064 * _2064) * (_2069 + (-1.0))) + 1.0;
    float _2084 = (exp2(log2(1.0 - (isnan(1.0) ? _3853 : (isnan(_3853) ? 1.0 : min(_3853, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2085 = 1.0 - _2045;
    float _2096 = (0.5 / (((_2060 * ((_2059 * _2085) + _2045)) + 9.9999999392252902907785028219223e-09) + (((_2060 * _2085) + _2045) * _2059))) * _2059;
    float _3864 = isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0));
    float _2098 = (isnan(1.0) ? _3864 : (isnan(_3864) ? 1.0 : min(_3864, 1.0))) * (_2069 / ((_2073 * _2073) * 3.141590118408203125));
    uint _2111 = _1915 + 9u;
    float _2125 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1948].w)) * _745) * 0.949999988079071044921875);
    float _2126 = _2125 * _2125;
    float _2127 = cbLight._m0[_1948].x + _532;
    float _2128 = cbLight._m0[_1948].y + _533;
    float _2129 = cbLight._m0[_1948].z + _534;
    float _2133 = inversesqrt(dot(vec3(_2127, _2128, _2129), vec3(_2127, _2128, _2129)));
    float _2134 = _2133 * _2127;
    float _2135 = _2133 * _2128;
    float _2136 = _2133 * _2129;
    float _2137 = dot(vec3(_741, _742, _743), vec3(cbLight._m0[_1948].xyz));
    float _3875 = isnan(0.0) ? _2137 : (isnan(_2137) ? 0.0 : max(_2137, 0.0));
    float _2140 = isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0));
    float _2141 = dot(vec3(_741, _742, _743), vec3(_2134, _2135, _2136));
    float _3886 = isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0));
    float _2144 = isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0));
    float _2145 = dot(vec3(cbLight._m0[_1948].xyz), vec3(_2134, _2135, _2136));
    float _3897 = isnan(0.0) ? _2145 : (isnan(_2145) ? 0.0 : max(_2145, 0.0));
    float _2149 = _2126 * _2126;
    float _2153 = ((_2144 * _2144) * (_2149 + (-1.0))) + 1.0;
    float _2162 = (exp2(log2(1.0 - (isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2163 = 1.0 - _2126;
    float _2173 = (0.5 / (((_2060 * ((_2140 * _2163) + _2126)) + 9.9999999392252902907785028219223e-09) + (((_2060 * _2163) + _2126) * _2140))) * _2140;
    float _3908 = isnan(0.0) ? _2173 : (isnan(_2173) ? 0.0 : max(_2173, 0.0));
    float _2175 = (isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0))) * (_2149 / ((_2153 * _2153) * 3.141590118408203125));
    float _2185 = (((_2162 * cbLight._m0[_2111].x) * _2175) * _1957) + (((_2084 * cbLight._m0[_2028].x) * _2098) * _1941);
    float _2186 = (((_2162 * cbLight._m0[_2111].y) * _2175) * _1957) + (((_2084 * cbLight._m0[_2028].y) * _2098) * _1941);
    float _2187 = (((_2162 * cbLight._m0[_2111].z) * _2175) * _1957) + (((_2084 * cbLight._m0[_2028].z) * _2098) * _1941);
    float _2323;
    float _2325;
    float _2327;
    float _2329;
    float _2331;
    float _2333;
    if (_1913.y == 0u)
    {
        float _2264 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2265 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2264;
        float _2266 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2264;
        float _2267 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2264;
        uvec4 _2279 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2280 = _2279.x;
        uint _2291 = uint((float(_2279.y) * floor(float(uint(cbSceneParam._m0[85u].y * _781) / _2280))) + floor(float(uint(cbSceneParam._m0[85u].x * _780) / _2280)));
        float _2301 = (log2(_2267 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2302 = isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : max(_2301, 0.0));
        uint _2305 = uint(isnan(14.0) ? _2302 : (isnan(_2302) ? 14.0 : min(_2302, 14.0)));
        uint _2312 = _2279.z;
        float _2361;
        float _2363;
        float _2365;
        float _2367;
        float _2369;
        float _2371;
        if (((((1u << ((_2312 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2305 << 2u) + (_2291 << 6u)) >> 2u)).x) == 0u) || ((_2312 & 240u) == 0u))
        {
            _2361 = 0.0;
            _2363 = 0.0;
            _2365 = 0.0;
            _2367 = 0.0;
            _2369 = 0.0;
            _2371 = 0.0;
        }
        else
        {
            float _2362;
            float _2364;
            float _2366;
            float _2368;
            float _2370;
            float _2372;
            float _2550 = 0.0;
            float _2551 = 0.0;
            float _2552 = 0.0;
            float _2553 = 0.0;
            float _2554 = 0.0;
            float _2555 = 0.0;
            uint _2556 = 0u;
            uint _2565;
            bool _2566;
            for (;;)
            {
                _2565 = texelFetch(g_lightClassification, int((((_2305 << 5u) + (_2291 << 9u)) + (_2556 << 2u)) >> 2u)).x;
                _2566 = _2565 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2566)
                {
                    frontier_phi_58_pred = _2550;
                    frontier_phi_58_pred_1 = _2555;
                    frontier_phi_58_pred_2 = _2554;
                    frontier_phi_58_pred_3 = _2553;
                    frontier_phi_58_pred_4 = _2552;
                    frontier_phi_58_pred_5 = _2551;
                }
                else
                {
                    float _2787;
                    float _2788;
                    float _2789;
                    float _2790;
                    float _2791;
                    float _2792;
                    uint _2793;
                    _2787 = _2550;
                    _2788 = _2551;
                    _2789 = _2552;
                    _2790 = _2553;
                    _2791 = _2554;
                    _2792 = _2555;
                    _2793 = _2565;
                    float _2719;
                    float _2720;
                    float _2721;
                    float _2722;
                    float _2723;
                    float _2724;
                    for (;;)
                    {
                        uint _2797 = uint(findLSB(_2793)) + (_2556 << 5u);
                        uint _2794 = (_2793 + 4294967295u) & _2793;
                        uint _2799 = _2797 * 48u;
                        vec4 _2813 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2799)).x, texelFetch(g_PointLightRenderingBuffer, int(_2799 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2799 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2799 + 3u)).x));
                        uint _2819 = (_2797 * 48u) + 4u;
                        vec4 _2832 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2819)).x, texelFetch(g_PointLightRenderingBuffer, int(_2819 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2819 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2819 + 3u)).x));
                        float _2833 = _2832.x;
                        float _2834 = _2832.y;
                        float _2835 = _2832.z;
                        uint _2838 = (_2797 * 48u) + 8u;
                        vec3 _2849 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2838)).x, texelFetch(g_PointLightRenderingBuffer, int(_2838 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2838 + 2u)).x));
                        uint _2854 = (_2797 * 48u) + 12u;
                        vec2 _2862 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2854)).x, texelFetch(g_PointLightRenderingBuffer, int(_2854 + 1u)).x));
                        float _2868 = inversesqrt(dot(vec3(_2265, _2266, _2267), vec3(_2265, _2266, _2267)));
                        float _2869 = _2868 * _2265;
                        float _2870 = _2868 * _2266;
                        float _2871 = _2868 * _2267;
                        float _2872 = _2813.x - _2265;
                        float _2873 = _2813.y - _2266;
                        float _2874 = _2813.z - _2267;
                        float _2875 = dot(vec3(_2872, _2873, _2874), vec3(_2872, _2873, _2874));
                        float _2878 = inversesqrt(_2875);
                        float _2879 = _2878 * _2872;
                        float _2880 = _2878 * _2873;
                        float _2881 = _2878 * _2874;
                        float _2882 = dot(vec3(_799, _802, _805), vec3(_2879, _2880, _2881));
                        float _2887 = 1.0 - (_2875 * _2813.w);
                        float _3929 = isnan(0.0) ? _2887 : (isnan(_2887) ? 0.0 : max(_2887, 0.0));
                        float _2888 = isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0));
                        float _2889 = sqrt(_2875) * _2832.w;
                        float _2892 = 1.39999997615814208984375 / (_2889 + 1.39999997615814208984375);
                        float _2893 = _2892 * _2892;
                        float _2894 = 1.0 - _2893;
                        float _2896 = (_2894 * _2894) * _746;
                        float _2899 = ((_2894 * _2882) + _2893) + _2896;
                        float _2904 = _2889 * _2889;
                        float _2909 = ((isnan(0.0) ? _2899 : (isnan(_2899) ? 0.0 : max(_2899, 0.0))) * _2888) / (((_2896 * 2.0) + 1.0) * ((_2904 * 0.699999988079071044921875) + 1.0));
                        float _2913 = dot(vec3(_2879, _2880, _2881), vec3(_2869, _2870, _2871));
                        float _3945 = isnan(0.0) ? _2913 : (isnan(_2913) ? 0.0 : max(_2913, 0.0));
                        float _2920 = dot(vec3((-0.0) - _2869, (-0.0) - _2870, (-0.0) - _2871), vec3(_799, _802, _805)) + 1.0;
                        float _2922 = (isnan(0.0) ? _2920 : (isnan(_2920) ? 0.0 : max(_2920, 0.0))) * 0.5;
                        float _2929 = ((_2922 * _2922) * _2862.x) * exp2((_2862.y * 32.0) * log2(isnan(1.0) ? _3945 : (isnan(_3945) ? 1.0 : min(_3945, 1.0))));
                        float _2931 = _746 / (_746 + 1.0);
                        float _2947 = (-0.0) - _2265;
                        float _2948 = (-0.0) - _2266;
                        float _2949 = (-0.0) - _2267;
                        float _2953 = inversesqrt(dot(vec3(_2947, _2948, _2949), vec3(_2947, _2948, _2949)));
                        float _2954 = _2953 * _2947;
                        float _2955 = _2953 * _2948;
                        float _2956 = _2953 * _2949;
                        float _2964 = exp2(log2(1.0 / ((_2904 * 3.5) + 5.0)) * 0.25);
                        float _2965 = 1.0 - _862;
                        float _2972 = sqrt(1.0 - ((1.0 - (_2965 * _2965)) * (1.0 - (_2964 * _2964))));
                        float _2973 = _2972 * _2972;
                        float _2974 = _2973 * _2973;
                        float _2975 = _2954 + _2879;
                        float _2976 = _2955 + _2880;
                        float _2977 = _2956 + _2881;
                        float _2981 = inversesqrt(dot(vec3(_2975, _2976, _2977), vec3(_2975, _2976, _2977)));
                        float _2985 = dot(vec3(_799, _802, _805), vec3(_2954, _2955, _2956));
                        float _3961 = isnan(0.0) ? _2985 : (isnan(_2985) ? 0.0 : max(_2985, 0.0));
                        float _2988 = isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0));
                        float _2989 = dot(vec3(_799, _802, _805), vec3(_2981 * _2975, _2981 * _2976, _2981 * _2977));
                        float _3972 = isnan(0.0) ? _2989 : (isnan(_2989) ? 0.0 : max(_2989, 0.0));
                        float _2992 = isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0));
                        float _2996 = ((_2992 * _2992) * (_2974 + (-1.0))) + 1.0;
                        float _2997 = _2892 * _2973;
                        float _2998 = _2997 * _2997;
                        float _3001 = ((1.0 - _2998) * _2882) + _2998;
                        float _3983 = isnan(0.0) ? _3001 : (isnan(_3001) ? 0.0 : max(_3001, 0.0));
                        float _3002 = isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0));
                        float _3003 = 1.0 - _2973;
                        float _3013 = (0.5 / (((_3002 * ((_2988 * _3003) + _2973)) + 9.9999999392252902907785028219223e-09) + (((_3002 * _3003) + _2973) * _2988))) * _3002;
                        float _3994 = isnan(0.0) ? _3013 : (isnan(_3013) ? 0.0 : max(_3013, 0.0));
                        float _3024 = (((_2974 * 3.1415927410125732421875) * (isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0)))) / ((_2996 * _2996) * ((_2904 * 2.1991131305694580078125) + 3.141590118408203125))) * _2888;
                        _2722 = (((((_2833 * 0.3183098733425140380859375) * _2931) * _2929) + _2833) * _2909) + _2790;
                        _2723 = (((((_2834 * 0.3183098733425140380859375) * _2931) * _2929) + _2834) * _2909) + _2791;
                        _2724 = (((((_2835 * 0.3183098733425140380859375) * _2931) * _2929) + _2835) * _2909) + _2792;
                        _2719 = (_3024 * _2849.x) + _2787;
                        _2720 = (_3024 * _2849.y) + _2788;
                        _2721 = (_3024 * _2849.z) + _2789;
                        if (_2794 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2787 = _2719;
                            _2788 = _2720;
                            _2789 = _2721;
                            _2790 = _2722;
                            _2791 = _2723;
                            _2792 = _2724;
                            _2793 = _2794;
                        }
                    }
                    frontier_phi_58_pred = _2719;
                    frontier_phi_58_pred_1 = _2724;
                    frontier_phi_58_pred_2 = _2723;
                    frontier_phi_58_pred_3 = _2722;
                    frontier_phi_58_pred_4 = _2721;
                    frontier_phi_58_pred_5 = _2720;
                }
                _2362 = frontier_phi_58_pred;
                _2372 = frontier_phi_58_pred_1;
                _2370 = frontier_phi_58_pred_2;
                _2368 = frontier_phi_58_pred_3;
                _2366 = frontier_phi_58_pred_4;
                _2364 = frontier_phi_58_pred_5;
                uint _2557 = _2556 + 1u;
                if (_2557 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2550 = _2362;
                    _2551 = _2364;
                    _2552 = _2366;
                    _2553 = _2368;
                    _2554 = _2370;
                    _2555 = _2372;
                    _2556 = _2557;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2361 = _2362;
            _2363 = _2364;
            _2365 = _2366;
            _2367 = _2368;
            _2369 = _2370;
            _2371 = _2372;
        }
        float _2376 = isnan(1.0) ? _841 : (isnan(_841) ? 1.0 : min(_841, 1.0));
        _2323 = (_2376 * _2367) + _2022;
        _2325 = (_2376 * _2369) + _2023;
        _2327 = (_2376 * _2371) + _2024;
        _2329 = ((_2361 * 0.039999999105930328369140625) * _2376) + _2185;
        _2331 = ((_2363 * 0.039999999105930328369140625) * _2376) + _2186;
        _2333 = ((_2365 * 0.039999999105930328369140625) * _2376) + _2187;
    }
    else
    {
        _2323 = _2022;
        _2325 = _2023;
        _2327 = _2024;
        _2329 = _2185;
        _2331 = _2186;
        _2333 = _2187;
    }
    float _2447;
    float _2448;
    float _2449;
    if (_746 > 0.0)
    {
        uint _2383 = _1915 + 4u;
        float _2389 = (-0.0) - _532;
        float _2390 = (-0.0) - _533;
        float _2391 = (-0.0) - _534;
        float _2392 = dot(vec3(cbLight._m0[_1915].xyz), vec3(_2389, _2390, _2391));
        float _4010 = isnan(0.0) ? _2392 : (isnan(_2392) ? 0.0 : max(_2392, 0.0));
        float _2396 = _852 + 1.0;
        float _2398 = (isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0))) * 0.5;
        float _2403 = _2398 * _2398;
        float _2404 = _2403 * exp2(log2(isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0))) * 32.0);
        float _2406 = _746 / (_746 + 1.0);
        float _2407 = isnan(_1924) ? 1.0 : (isnan(1.0) ? _1924 : min(1.0, _1924));
        uint _2417 = _1915 + 5u;
        float _2423 = dot(vec3(cbLight._m0[_1948].xyz), vec3(_2389, _2390, _2391));
        float _4031 = isnan(0.0) ? _2423 : (isnan(_2423) ? 0.0 : max(_2423, 0.0));
        float _2430 = _2403 * exp2(log2(isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0))) * 32.0);
        float _2431 = isnan(_1925) ? 1.0 : (isnan(1.0) ? _1925 : min(1.0, _1925));
        _2447 = ((((_2430 * cbLight._m0[_2417].x) * _2406) * _2431) + (((_2404 * cbLight._m0[_2383].x) * _2406) * _2407)) * 0.3183098733425140380859375;
        _2448 = ((((_2430 * cbLight._m0[_2417].y) * _2406) * _2431) + (((_2404 * cbLight._m0[_2383].y) * _2406) * _2407)) * 0.3183098733425140380859375;
        _2449 = ((((_2430 * cbLight._m0[_2417].z) * _2406) * _2431) + (((_2404 * cbLight._m0[_2383].z) * _2406) * _2407)) * 0.3183098733425140380859375;
    }
    else
    {
        _2447 = 0.0;
        _2448 = 0.0;
        _2449 = 0.0;
    }
    float _4047 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    float _4058 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _4069 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
    float _4080 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _2464 = (isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0))) * ((_2323 + ((isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0))) * _841)) + _2447);
    float _2465 = (isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0))) * ((_2325 + ((isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0))) * _841)) + _2448);
    float _2466 = (isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0))) * ((_2327 + ((isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0))) * _841)) + _2449);
    float _2470 = 0.959999978542327880859375 - (exp2(log2(1.0 - _856) * 5.0) * 0.959999978542327880859375);
    float _2481 = (_2464 + ((_2329 + ((isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0))) * _1684)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _680.x) * _2470) - _2464) * _726);
    float _2483 = (_2465 + ((_2331 + ((isnan(0.0) ? _1900 : (isnan(_1900) ? 0.0 : max(_1900, 0.0))) * _1684)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _680.y) * _2470) - _2465) * _726);
    float _2485 = (_2466 + ((_2333 + ((isnan(0.0) ? _1903 : (isnan(_1903) ? 0.0 : max(_1903, 0.0))) * _1684)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _680.z) * _2470) - _2466) * _726);
    float _2490 = cbInstanceData._m0[_303 + 6u].w * (isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0)));
    float _2495 = _780 / cbSceneParam._m0[86u].x;
    float _2496 = _781 / cbSceneParam._m0[86u].y;
    vec4 _2510 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2495, _2496, (log2((isnan(cbSceneParam._m0[77u].w) ? _763 : (isnan(_763) ? cbSceneParam._m0[77u].w : min(_763, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2512 = _2510.x;
    float _2513 = _2510.y;
    float _2514 = _2510.z;
    float _2515 = _2510.w;
    float _2608;
    float _2610;
    float _2612;
    float _2614;
    if (_763 > cbSceneParam._m0[78u].w)
    {
        float _2571 = isnan(_763) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _763 : min(cbSceneParam._m0[80u].w, _763));
        float _2572 = _2571 / _763;
        float _2583 = _2572 * _295;
        float _2584 = _296 * _2572;
        float _2585 = (-0.0) - _2584;
        float _2586 = _2572 * _297;
        float _2588 = (cbSceneParam._m0[77u].w * _2585) / _2571;
        float _2589 = _2588 + cbSceneParam._m0[79u].w;
        float _2590 = cbSceneParam._m0[79u].w - _2584;
        float _2596 = sqrt(((_2583 * _2583) + (_2584 * _2584)) + (_2586 * _2586));
        float _2599 = (1.0 - (cbSceneParam._m0[77u].w / _2571)) * _2596;
        float _2604 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2606 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3029;
        if (abs((_2585 - _2588) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3029 = ((((_2589 > 0.0) ? exp2(_2604 * _2589) : (2.0 - exp2(_2606 * _2589))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2599;
        }
        else
        {
            float _2744 = 1.0 / cbSceneParam._m0[80u].x;
            float _2745 = isnan(_2590) ? _2589 : (isnan(_2589) ? _2590 : max(_2589, _2590));
            float _2746 = isnan(_2590) ? _2589 : (isnan(_2589) ? _2590 : min(_2589, _2590));
            float _2755 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : min(_2745, 0.0));
            float _2756 = isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : min(_2746, 0.0));
            _3029 = ((abs(_2596 / _2585) * cbSceneParam._m0[80u].y) * ((((_2755 - _2756) * 2.0) - ((exp2(_2604 * (isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0)))) - exp2(_2604 * (isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0))))) * _2744)) - ((exp2(_2606 * _2755) - exp2(_2606 * _2756)) * _2744))) + (_2599 * cbSceneParam._m0[80u].z);
        }
        vec4 _3031 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2495, _2496, 1.0), 0.0);
        float _3040 = exp2((_3029 * (-1.44269502162933349609375)) * (1.0 - _3031.w));
        float _3041 = log2(_3040);
        float _3057 = log2(_2515);
        _2608 = (exp2(_3057 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3041 * cbSceneParam._m0[78u].x)) * _3031.x) / cbSceneParam._m0[78u].x)) + _2512;
        _2610 = (exp2(_3057 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3041 * cbSceneParam._m0[78u].y)) * _3031.y) / cbSceneParam._m0[78u].y)) + _2513;
        _2612 = (exp2(_3057 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3041 * cbSceneParam._m0[78u].z)) * _3031.z) / cbSceneParam._m0[78u].z)) + _2514;
        _2614 = _3040 * _2515;
    }
    else
    {
        _2608 = _2512;
        _2610 = _2513;
        _2612 = _2514;
        _2614 = _2515;
    }
    bool _3067;
    float _2669;
    vec4 _2672;
    float _2674;
    vec4 _2676;
    float _2684;
    float _2685;
    float _2686;
    float _2687;
    bool _2697;
    for (;;)
    {
        bool _2626 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2627 = log2(_2614);
        float _2634 = exp2(_2627 * cbSceneParam._m0[78u].x) * _2481;
        float _2635 = exp2(_2627 * cbSceneParam._m0[78u].y) * _2483;
        float _2636 = exp2(_2627 * cbSceneParam._m0[78u].z) * _2485;
        vec4 _2644 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_780, _781));
        float _2646 = _2644.x;
        float _2667 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2646)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2646))) - _763) * cbMtdParam._m0[17u].y;
        float _4131 = isnan(0.0) ? _2667 : (isnan(_2667) ? 0.0 : max(_2667, 0.0));
        _2669 = _2490 * (isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0)));
        float _2670 = _770 + (-0.5);
        _2672 = cbMtdParam._m0[1u];
        _2674 = _2672.y * _2670;
        _2676 = cbMatDynParam._m0[0u];
        float _2683 = (roundEven(_2676.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2684 = _2683 * (_2626 ? _2634 : (_2634 + (cbSceneParam._m0[72u].w * _2608)));
        _2685 = _2683 * (_2626 ? _2635 : (_2635 + (cbSceneParam._m0[72u].w * _2610)));
        _2686 = _2683 * (_2626 ? _2636 : (_2636 + (cbSceneParam._m0[72u].w * _2612)));
        _2687 = _2670 * 0.999000012874603271484375;
        _2697 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2697)
        {
            if ((cbInstanceData._m0[_303 + 7u].x + _2687) < 0.5)
            {
                _3067 = true;
                break;
            }
        }
        uint _2779 = _818 + uint(_2676.w);
        if ((cbInstanceData._m0[_2779].w < 1.0) && ((cbInstanceData._m0[_2779].w + _2687) < 0.5))
        {
            _3067 = true;
            break;
        }
        if ((_2674 + _442) < _2672.x)
        {
            _3067 = true;
            break;
        }
        _3067 = false;
        break;
    }
    float _3072;
    if (_3067)
    {
        discard_state = true;
        _3072 = 0.0;
    }
    else
    {
        _3072 = _2669;
    }
    SV_Target.x = _2684;
    SV_Target.y = _2685;
    SV_Target.z = _2686;
    SV_Target.w = _3072;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2669;
    discard_exit();
}


