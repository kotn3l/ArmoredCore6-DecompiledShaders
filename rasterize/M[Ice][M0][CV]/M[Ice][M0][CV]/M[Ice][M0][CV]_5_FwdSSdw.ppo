#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_1;
layout(set = 0, binding = 4) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Ice_M0_CV_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1189;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _205 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _206 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _207 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _213 = inversesqrt(dot(vec3(_205, _206, _207), vec3(_205, _206, _207)));
    float _214 = _213 * _205;
    float _215 = _213 * _206;
    float _216 = _213 * _207;
    float _220 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _221 = _220 * NORMAL.x;
    float _222 = _220 * NORMAL.y;
    float _223 = _220 * NORMAL.z;
    float _227 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _228 = _227 * TANGENT.x;
    float _229 = _227 * TANGENT.y;
    float _230 = _227 * TANGENT.z;
    float _235;
    float _236;
    float _237;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _235 = (-0.0) - _221;
        _236 = (-0.0) - _222;
        _237 = (-0.0) - _223;
    }
    else
    {
        _235 = _221;
        _236 = _222;
        _237 = _223;
    }
    float _284 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _294 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _284);
    float _295 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _284);
    float _296 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _284);
    uint _302 = uint(roundEven(NORMAL.w)) * 13u;
    uint _307 = _302 + 1u;
    uint _311 = _302 + 2u;
    float _320 = sqrt(((cbInstanceData._m0[_307].x * cbInstanceData._m0[_307].x) + (cbInstanceData._m0[_302].x * cbInstanceData._m0[_302].x)) + (cbInstanceData._m0[_311].x * cbInstanceData._m0[_311].x));
    float _321 = _320 * TEXCOORD.z;
    float _322 = _320 * TEXCOORD.w;
    vec4 _335 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * _321) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _322) + cbTextureTilingScale._m0[8u].w));
    vec4 _356 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _364 = (_356.x * 2.0) + (-1.0);
    float _366 = (_356.y * 2.0) + (-1.0);
    float _367 = dot(vec2(_364, _366), vec2(_364, _366));
    float _3103 = isnan(0.0) ? _367 : (isnan(_367) ? 0.0 : max(_367, 0.0));
    float _373 = sqrt(1.0 - (isnan(1.0) ? _3103 : (isnan(_3103) ? 1.0 : min(_3103, 1.0))));
    float _376 = fma(_373, _235, fma(_366, _228, _364 * _214));
    float _379 = fma(_373, _236, fma(_366, _229, _364 * _215));
    float _382 = fma(_373, _237, fma(_366, _230, _364 * _216));
    float _386 = inversesqrt(dot(vec3(_376, _379, _382), vec3(_376, _379, _382)));
    vec4 _419 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _424 = _419.w;
    float _436 = dot(vec3(_294, _295, _296), vec3(_214, _215, _216));
    float _439 = dot(vec3(_294, _295, _296), vec3(_228, _229, _230));
    float _442 = dot(vec3(_294, _295, _296), vec3(_235, _236, _237));
    float _448 = inversesqrt(dot(vec3(_436, _439, _442), vec3(_436, _439, _442)));
    float _470 = dot(vec4(texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[14u].y;
    vec4 _490 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_436 * cbMtdParam._m0[14u].x) * _448) * _470) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_439 * cbMtdParam._m0[14u].x) * _448) * _470) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _513 = inversesqrt(dot(vec3(_294, _295, _296), vec3(_294, _295, _296)));
    float _514 = _513 * _294;
    float _515 = _513 * _295;
    float _516 = _513 * _296;
    float _517 = dot(vec4(_514, _515, _516, 0.0), vec4(_235, _236, _237, 0.0));
    float _520 = _517 - cbMtdParam._m0[15u].z;
    float _3114 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _527 = exp2(log2(1.0 - (isnan(1.0) ? _3114 : (isnan(_3114) ? 1.0 : min(_3114, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].w : (isnan(cbMtdParam._m0[15u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].w, 0.001000000047497451305389404296875))));
    float _542 = ((((_419.x * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _490.x) * cbMtdParam._m0[9u].x) * ((_527 * (cbMtdParam._m0[13u].x + (-1.0))) + 1.0);
    float _547 = ((((_419.y * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _490.y) * cbMtdParam._m0[9u].y) * ((_527 * (cbMtdParam._m0[13u].y + (-1.0))) + 1.0);
    float _552 = ((((_419.z * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _490.z) * cbMtdParam._m0[9u].z) * ((_527 * (cbMtdParam._m0[13u].z + (-1.0))) + 1.0);
    float _561 = (cbMtdParam._m0[18u].w + 1.0) * (TEXCOORD_8 - ((cbMtdParam._m0[18u].z * (1.0 - TEXCOORD_8)) * (texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * _321) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _322) + cbTextureTilingScale._m0[6u].w)).x + 0.00999999977648258209228515625)));
    float _3130 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0));
    float _562 = isnan(1.0) ? _3130 : (isnan(_3130) ? 1.0 : min(_3130, 1.0));
    float _569 = (_562 * ((_335.x * cbMtdParam._m0[10u].x) - _542)) + _542;
    float _570 = (((_335.y * cbMtdParam._m0[10u].y) - _547) * _562) + _547;
    float _571 = (((_335.z * cbMtdParam._m0[10u].z) - _552) * _562) + _552;
    vec4 _583 = texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * _321) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _322) + cbTextureTilingScale._m0[9u].w));
    float _590 = (_583.x * 2.0) + (-1.0);
    float _591 = (_583.y * 2.0) + (-1.0);
    float _592 = dot(vec2(_590, _591), vec2(_590, _591));
    float _3141 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    float _606 = (cbMtdParam._m0[16u].y + _356.z) + cbMtdParam._m0[17u].z;
    float _609 = ((_583.z - _606) * _562) + _606;
    float _621 = (((_590 - _364) + (cbMtdParam._m0[14u].z * _364)) * _562) + _364;
    float _622 = (((_591 - _366) + (cbMtdParam._m0[14u].z * _366)) * _562) + _366;
    float _623 = (_562 * (sqrt(1.0 - (isnan(1.0) ? _3141 : (isnan(_3141) ? 1.0 : min(_3141, 1.0)))) - _373)) + _373;
    float _639 = cbMtdParam._m0[16u].w * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x;
    float _641 = _639 - (_639 * _562);
    float _650 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _651 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _661 = cbSceneParam._m0[86u].x * ((_650 / cbSceneParam._m0[86u].x) + ((_386 * _376) * cbMtdParam._m0[18u].y));
    float _662 = cbSceneParam._m0[86u].y * ((_651 / cbSceneParam._m0[86u].y) + ((_386 * _379) * cbMtdParam._m0[18u].y));
    float _669 = isnan(cbInstanceData._m0[8u].x) ? _661 : (isnan(_661) ? cbInstanceData._m0[8u].x : max(_661, cbInstanceData._m0[8u].x));
    float _670 = isnan(cbInstanceData._m0[8u].y) ? _662 : (isnan(_662) ? cbInstanceData._m0[8u].y : max(_662, cbInstanceData._m0[8u].y));
    vec4 _674 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _669 : (isnan(_669) ? cbInstanceData._m0[8u].z : min(_669, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _670 : (isnan(_670) ? cbInstanceData._m0[8u].w : min(_670, cbInstanceData._m0[8u].w))));
    float _707 = _517 - cbMtdParam._m0[15u].x;
    float _3172 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _717 = ((cbMtdParam._m0[18u].x * texture(sampler2D(M_Ice_M0_CV_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[17u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3172 : (isnan(_3172) ? 1.0 : min(_3172, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[16u].z - cbMtdParam._m0[17u].x));
    float _3188 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _718 = isnan(1.0) ? _3188 : (isnan(_3188) ? 1.0 : min(_3188, 1.0));
    float _720 = _718 - (_562 * _718);
    float _724 = fma(_623, _235, fma(_622, _228, _621 * _214));
    float _727 = fma(_623, _236, fma(_622, _229, _621 * _215));
    float _730 = fma(_623, _237, fma(_622, _230, _621 * _216));
    float _734 = inversesqrt(dot(vec3(_724, _727, _730), vec3(_724, _727, _730)));
    float _735 = _734 * _724;
    float _736 = _734 * _727;
    float _737 = _734 * _730;
    float _3199 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0));
    float _738 = isnan(1.0) ? _3199 : (isnan(_3199) ? 1.0 : min(_3199, 1.0));
    float _3210 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _739 = isnan(1.0) ? _3210 : (isnan(_3210) ? 1.0 : min(_3210, 1.0));
    float _740 = isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : max(_641, 0.0));
    float _3226 = isnan(0.0) ? _569 : (isnan(_569) ? 0.0 : max(_569, 0.0));
    float _3237 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _3248 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
    float _757 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _775 = fma(_737, cbSceneParam._m0[5u].z, fma(_736, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _735));
    float _778 = fma(_737, cbSceneParam._m0[6u].z, fma(_736, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _735));
    float _781 = fma(_737, cbSceneParam._m0[7u].z, fma(_736, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _735));
    uint _795 = (_302 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _801 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3226 : (isnan(_3226) ? 1.0 : min(_3226, 1.0)))) * cbInstanceData._m0[_795].x;
    float _802 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3237 : (isnan(_3237) ? 1.0 : min(_3237, 1.0)))) * cbInstanceData._m0[_795].y;
    float _803 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3248 : (isnan(_3248) ? 1.0 : min(_3248, 1.0)))) * cbInstanceData._m0[_795].z;
    float _3259 = isnan(0.0) ? _801 : (isnan(_801) ? 0.0 : max(_801, 0.0));
    float _804 = isnan(1.0) ? _3259 : (isnan(_3259) ? 1.0 : min(_3259, 1.0));
    float _3270 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
    float _805 = isnan(1.0) ? _3270 : (isnan(_3270) ? 1.0 : min(_3270, 1.0));
    float _3281 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
    float _806 = isnan(1.0) ? _3281 : (isnan(_3281) ? 1.0 : min(_3281, 1.0));
    vec4 _810 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _650, cbSceneParam._m0[86u].y * _651));
    float _813 = _810.x * TEXCOORD_5.w;
    float _814 = dot(vec3(_735, _736, _737), vec3(_514, _515, _516));
    float _817 = _814 * 2.0;
    float _821 = (_817 * _735) - _514;
    float _822 = (_817 * _736) - _515;
    float _823 = (_817 * _737) - _516;
    float _824 = dot(vec3(_514, _515, _516), vec3(_735, _736, _737));
    float _827 = abs(_824);
    float _3292 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _828 = isnan(1.0) ? _3292 : (isnan(_3292) ? 1.0 : min(_3292, 1.0));
    float _834 = sqrt(_739);
    float _846 = exp2((_834 * 5.0) * log2(1.0 - (_828 * 0.999000012874603271484375))) / (4.0 - (_834 * 3.0));
    float _878 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _882 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _886 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1188;
    float _1190;
    float _1191;
    float _1192;
    float _1193;
    float _1194;
    float _1195;
    float _1196;
    float _1197;
    float _1198;
    float _1199;
    float _1200;
    float _1201;
    float _1202;
    float _1203;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _913 = fma(_886, cbModelParam._m0[26u].z, fma(_882, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _878));
        float _917 = fma(_886, cbModelParam._m0[27u].z, fma(_882, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _878));
        float _921 = fma(_886, cbModelParam._m0[28u].z, fma(_882, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _878));
        float _946 = _878 + _735;
        float _947 = _882 + _736;
        float _948 = _886 + _737;
        float _958 = fma(_948, cbModelParam._m0[26u].z, fma(_947, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _946)) - _913;
        float _959 = fma(_948, cbModelParam._m0[27u].z, fma(_947, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _946)) - _917;
        float _960 = fma(_948, cbModelParam._m0[28u].z, fma(_947, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _946)) - _921;
        float _964 = inversesqrt(dot(vec3(_958, _959, _960), vec3(_958, _959, _960)));
        float _977 = ((_964 * _958) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_913 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _978 = ((_964 * _959) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_917 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _979 = ((_964 * _960) / cbModelParam._m0[34u].z) + ((((((_921 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _982 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_977, _978, _979), 0.0);
        vec4 _989 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_977, _978, _979), 0.0);
        vec4 _996 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_977, _978, _979), 0.0);
        vec4 _1003 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_977, _978, _979), 0.0);
        float _1016 = exp2((_982.w + (-0.5)) * 20.0) * 2.0;
        float _1017 = _1016 * (_982.x + (-0.5));
        float _1018 = _1016 * (_982.y + (-0.5));
        float _1019 = _1016 * (_982.z + (-0.5));
        float _1026 = exp2((_989.w + (-0.5)) * 20.0) * 2.0;
        float _1027 = _1026 * (_989.x + (-0.5));
        float _1028 = _1026 * (_989.y + (-0.5));
        float _1029 = _1026 * (_989.z + (-0.5));
        float _1036 = exp2((_996.w + (-0.5)) * 20.0) * 2.0;
        float _1037 = _1036 * (_996.x + (-0.5));
        float _1038 = _1036 * (_996.y + (-0.5));
        float _1039 = _1036 * (_996.z + (-0.5));
        float _1046 = exp2((_1003.w + (-0.5)) * 20.0) * 2.0;
        float _1047 = _1046 * (_1003.x + (-0.5));
        float _1048 = _1046 * (_1003.y + (-0.5));
        float _1049 = _1046 * (_1003.z + (-0.5));
        float _1050 = isnan(0.0) ? _1047 : (isnan(_1047) ? 0.0 : max(_1047, 0.0));
        float _1051 = isnan(0.0) ? _1048 : (isnan(_1048) ? 0.0 : max(_1048, 0.0));
        float _1052 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
        float _1053 = _1017 * 0.5;
        float _1054 = _1027 * 0.5;
        float _1055 = _1037 * 0.5;
        float _1056 = dot(vec3(_1053, _1054, _1055), vec3(_1053, _1054, _1055));
        float _1061 = (_1056 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1056);
        float _1070 = (dot(vec3(_735, _736, _737), vec3(_1061 * _1053, _1061 * _1054, _1061 * _1055)) + 1.0) * 0.5;
        float _3318 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1080 = sqrt(((_1054 * _1054) + (_1053 * _1053)) + (_1055 * _1055)) / (_1050 + 9.9999997473787516355514526367188e-06);
        float _3329 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
        float _1081 = isnan(1.0) ? _3329 : (isnan(_3329) ? 1.0 : min(_3329, 1.0));
        float _1082 = _1081 * 2.0;
        float _1086 = (1.0 - _1081) / (_1081 + 1.0);
        float _3340 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
        float _1087 = isnan(1.0) ? _3340 : (isnan(_3340) ? 1.0 : min(_3340, 1.0));
        float _1096 = ((((1.0 - _1087) * (_1082 + 2.0)) * exp2(log2(isnan(1.0) ? _3318 : (isnan(_3318) ? 1.0 : min(_3318, 1.0))) * (_1082 + 1.0))) + _1087) * _1050;
        float _1097 = _1018 * 0.5;
        float _1098 = _1028 * 0.5;
        float _1099 = _1038 * 0.5;
        float _1100 = dot(vec3(_1097, _1098, _1099), vec3(_1097, _1098, _1099));
        float _1105 = (_1100 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1100);
        float _1113 = (dot(vec3(_735, _736, _737), vec3(_1105 * _1097, _1105 * _1098, _1105 * _1099)) + 1.0) * 0.5;
        float _3351 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
        float _1122 = sqrt(((_1098 * _1098) + (_1097 * _1097)) + (_1099 * _1099)) / (_1051 + 9.9999997473787516355514526367188e-06);
        float _3362 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
        float _1123 = isnan(1.0) ? _3362 : (isnan(_3362) ? 1.0 : min(_3362, 1.0));
        float _1124 = _1123 * 2.0;
        float _1128 = (1.0 - _1123) / (_1123 + 1.0);
        float _3373 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
        float _1129 = isnan(1.0) ? _3373 : (isnan(_3373) ? 1.0 : min(_3373, 1.0));
        float _1138 = ((((1.0 - _1129) * (_1124 + 2.0)) * exp2(log2(isnan(1.0) ? _3351 : (isnan(_3351) ? 1.0 : min(_3351, 1.0))) * (_1124 + 1.0))) + _1129) * _1051;
        float _1139 = _1019 * 0.5;
        float _1140 = _1029 * 0.5;
        float _1141 = _1039 * 0.5;
        float _1142 = dot(vec3(_1139, _1140, _1141), vec3(_1139, _1140, _1141));
        float _1147 = (_1142 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1142);
        float _1155 = (dot(vec3(_735, _736, _737), vec3(_1147 * _1139, _1147 * _1140, _1147 * _1141)) + 1.0) * 0.5;
        float _3384 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
        float _1164 = sqrt(((_1140 * _1140) + (_1139 * _1139)) + (_1141 * _1141)) / (_1052 + 9.9999997473787516355514526367188e-06);
        float _3395 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1165 = isnan(1.0) ? _3395 : (isnan(_3395) ? 1.0 : min(_3395, 1.0));
        float _1166 = _1165 * 2.0;
        float _1170 = (1.0 - _1165) / (_1165 + 1.0);
        float _3406 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1171 = isnan(1.0) ? _3406 : (isnan(_3406) ? 1.0 : min(_3406, 1.0));
        float _1180 = ((((1.0 - _1171) * (_1166 + 2.0)) * exp2(log2(isnan(1.0) ? _3384 : (isnan(_3384) ? 1.0 : min(_3384, 1.0))) * (_1166 + 1.0))) + _1171) * _1052;
        _1188 = _1019;
        _1190 = _1018;
        _1191 = _1017;
        _1192 = _1029;
        _1193 = _1028;
        _1194 = _1027;
        _1195 = _1039;
        _1196 = _1038;
        _1197 = _1037;
        _1198 = _1052;
        _1199 = _1051;
        _1200 = _1050;
        _1201 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0)));
        _1202 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0)));
        _1203 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0)));
    }
    else
    {
        _1188 = _1189;
        _1190 = _1189;
        _1191 = _1189;
        _1192 = _1189;
        _1193 = _1189;
        _1194 = _1189;
        _1195 = _1189;
        _1196 = _1189;
        _1197 = _1189;
        _1198 = _1189;
        _1199 = _1189;
        _1200 = _1189;
        _1201 = 0.0;
        _1202 = 0.0;
        _1203 = 0.0;
    }
    float _1498;
    float _1499;
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    float _1504;
    float _1505;
    float _1506;
    float _1507;
    float _1508;
    float _1509;
    float _1510;
    float _1511;
    float _1512;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1229 = fma(_886, cbModelParam._m0[30u].z, fma(_882, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _878));
        float _1233 = fma(_886, cbModelParam._m0[31u].z, fma(_882, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _878));
        float _1237 = fma(_886, cbModelParam._m0[32u].z, fma(_882, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _878));
        float _1260 = _878 + _735;
        float _1261 = _882 + _736;
        float _1262 = _886 + _737;
        float _1272 = fma(_1262, cbModelParam._m0[30u].z, fma(_1261, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1260)) - _1229;
        float _1273 = fma(_1262, cbModelParam._m0[31u].z, fma(_1261, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1260)) - _1233;
        float _1274 = fma(_1262, cbModelParam._m0[32u].z, fma(_1261, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1260)) - _1237;
        float _1278 = inversesqrt(dot(vec3(_1272, _1273, _1274), vec3(_1272, _1273, _1274)));
        float _1291 = ((_1278 * _1272) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1229 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1292 = ((_1278 * _1273) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1233 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1293 = ((_1278 * _1274) / cbModelParam._m0[35u].z) + ((((((_1237 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1295 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1291, _1292, _1293), 0.0);
        vec4 _1302 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1291, _1292, _1293), 0.0);
        vec4 _1309 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1291, _1292, _1293), 0.0);
        vec4 _1316 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1291, _1292, _1293), 0.0);
        float _1328 = exp2((_1295.w + (-0.5)) * 20.0) * 2.0;
        float _1329 = _1328 * (_1295.x + (-0.5));
        float _1330 = _1328 * (_1295.y + (-0.5));
        float _1331 = _1328 * (_1295.z + (-0.5));
        float _1338 = exp2((_1302.w + (-0.5)) * 20.0) * 2.0;
        float _1339 = _1338 * (_1302.x + (-0.5));
        float _1340 = _1338 * (_1302.y + (-0.5));
        float _1341 = _1338 * (_1302.z + (-0.5));
        float _1348 = exp2((_1309.w + (-0.5)) * 20.0) * 2.0;
        float _1349 = _1348 * (_1309.x + (-0.5));
        float _1350 = _1348 * (_1309.y + (-0.5));
        float _1351 = _1348 * (_1309.z + (-0.5));
        float _1358 = exp2((_1316.w + (-0.5)) * 20.0) * 2.0;
        float _1359 = _1358 * (_1316.x + (-0.5));
        float _1360 = _1358 * (_1316.y + (-0.5));
        float _1361 = _1358 * (_1316.z + (-0.5));
        float _1362 = isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0));
        float _1363 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1364 = isnan(0.0) ? _1361 : (isnan(_1361) ? 0.0 : max(_1361, 0.0));
        float _1365 = _1329 * 0.5;
        float _1366 = _1339 * 0.5;
        float _1367 = _1349 * 0.5;
        float _1368 = dot(vec3(_1365, _1366, _1367), vec3(_1365, _1366, _1367));
        float _1373 = (_1368 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1368);
        float _1381 = (dot(vec3(_735, _736, _737), vec3(_1373 * _1365, _1373 * _1366, _1373 * _1367)) + 1.0) * 0.5;
        float _3447 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1390 = sqrt(((_1366 * _1366) + (_1365 * _1365)) + (_1367 * _1367)) / (_1362 + 9.9999997473787516355514526367188e-06);
        float _3458 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
        float _1391 = isnan(1.0) ? _3458 : (isnan(_3458) ? 1.0 : min(_3458, 1.0));
        float _1392 = _1391 * 2.0;
        float _1396 = (1.0 - _1391) / (_1391 + 1.0);
        float _3469 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1397 = isnan(1.0) ? _3469 : (isnan(_3469) ? 1.0 : min(_3469, 1.0));
        float _1406 = ((((1.0 - _1397) * (_1392 + 2.0)) * exp2(log2(isnan(1.0) ? _3447 : (isnan(_3447) ? 1.0 : min(_3447, 1.0))) * (_1392 + 1.0))) + _1397) * _1362;
        float _1407 = _1330 * 0.5;
        float _1408 = _1340 * 0.5;
        float _1409 = _1350 * 0.5;
        float _1410 = dot(vec3(_1407, _1408, _1409), vec3(_1407, _1408, _1409));
        float _1415 = (_1410 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1410);
        float _1423 = (dot(vec3(_735, _736, _737), vec3(_1415 * _1407, _1415 * _1408, _1415 * _1409)) + 1.0) * 0.5;
        float _3480 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1432 = sqrt(((_1408 * _1408) + (_1407 * _1407)) + (_1409 * _1409)) / (_1363 + 9.9999997473787516355514526367188e-06);
        float _3491 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1433 = isnan(1.0) ? _3491 : (isnan(_3491) ? 1.0 : min(_3491, 1.0));
        float _1434 = _1433 * 2.0;
        float _1438 = (1.0 - _1433) / (_1433 + 1.0);
        float _3502 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1439 = isnan(1.0) ? _3502 : (isnan(_3502) ? 1.0 : min(_3502, 1.0));
        float _1448 = ((((1.0 - _1439) * (_1434 + 2.0)) * exp2(log2(isnan(1.0) ? _3480 : (isnan(_3480) ? 1.0 : min(_3480, 1.0))) * (_1434 + 1.0))) + _1439) * _1363;
        float _1449 = _1331 * 0.5;
        float _1450 = _1341 * 0.5;
        float _1451 = _1351 * 0.5;
        float _1452 = dot(vec3(_1449, _1450, _1451), vec3(_1449, _1450, _1451));
        float _1457 = (_1452 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1452);
        float _1465 = (dot(vec3(_735, _736, _737), vec3(_1457 * _1449, _1457 * _1450, _1457 * _1451)) + 1.0) * 0.5;
        float _3513 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
        float _1474 = sqrt(((_1450 * _1450) + (_1449 * _1449)) + (_1451 * _1451)) / (_1364 + 9.9999997473787516355514526367188e-06);
        float _3524 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1475 = isnan(1.0) ? _3524 : (isnan(_3524) ? 1.0 : min(_3524, 1.0));
        float _1476 = _1475 * 2.0;
        float _1480 = (1.0 - _1475) / (_1475 + 1.0);
        float _3535 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1481 = isnan(1.0) ? _3535 : (isnan(_3535) ? 1.0 : min(_3535, 1.0));
        float _1490 = ((((1.0 - _1481) * (_1476 + 2.0)) * exp2(log2(isnan(1.0) ? _3513 : (isnan(_3513) ? 1.0 : min(_3513, 1.0))) * (_1476 + 1.0))) + _1481) * _1364;
        _1498 = _1331;
        _1499 = _1330;
        _1500 = _1329;
        _1501 = _1341;
        _1502 = _1340;
        _1503 = _1339;
        _1504 = _1351;
        _1505 = _1350;
        _1506 = _1349;
        _1507 = _1364;
        _1508 = _1363;
        _1509 = _1362;
        _1510 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0)));
        _1511 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0)));
        _1512 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0)));
    }
    else
    {
        _1498 = _1189;
        _1499 = _1189;
        _1500 = _1189;
        _1501 = _1189;
        _1502 = _1189;
        _1503 = _1189;
        _1504 = _1189;
        _1505 = _1189;
        _1506 = _1189;
        _1507 = _1189;
        _1508 = _1189;
        _1509 = _1189;
        _1510 = 0.0;
        _1511 = 0.0;
        _1512 = 0.0;
    }
    float _1522 = (cbModelParam._m0[1u].x * (_1510 - _1201)) + _1201;
    float _1523 = (cbModelParam._m0[1u].x * (_1511 - _1202)) + _1202;
    float _1524 = (cbModelParam._m0[1u].x * (_1512 - _1203)) + _1203;
    float _1545 = fma(_1524, cbSceneParam._m0[89u].z, fma(_1523, cbSceneParam._m0[89u].y, _1522 * cbSceneParam._m0[89u].x));
    float _1548 = fma(_1524, cbSceneParam._m0[90u].z, fma(_1523, cbSceneParam._m0[90u].y, _1522 * cbSceneParam._m0[90u].x));
    float _1551 = fma(_1524, cbSceneParam._m0[91u].z, fma(_1523, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1522));
    float _1566 = _821 * 0.5;
    float _1567 = _822 * 0.5;
    float _1568 = _823 * 0.5;
    float _1569 = dot(vec4(_1566, _1567, _1568, 1.0), vec4(_1500, _1503, _1506, _1509));
    float _1572 = dot(vec4(_1566, _1567, _1568, 1.0), vec4(_1499, _1502, _1505, _1508));
    float _1575 = dot(vec4(_1566, _1567, _1568, 1.0), vec4(_1498, _1501, _1504, _1507));
    float _1609;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1582 = dot(vec4(_1566, _1567, _1568, 1.0), vec4(_1188, _1192, _1195, _1198));
        float _1586 = dot(vec4(_1566, _1567, _1568, 1.0), vec4(_1190, _1193, _1196, _1199));
        float _1590 = dot(vec4(_1566, _1567, _1568, 1.0), vec4(_1191, _1194, _1197, _1200));
        float _1597 = dot(vec4(cbModelParam._m0[39u]), vec4(_1566, _1567, _1568, 1.0));
        _1609 = dot(vec3(isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0)), isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0)), isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1597) ? 0.0 : (isnan(0.0) ? _1597 : max(0.0, _1597))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1609 = 1.0;
    }
    float _1620;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1611 = dot(vec4(cbModelParam._m0[40u]), vec4(_1566, _1567, _1568, 1.0));
        _1620 = dot(vec3(isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0)), isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0)), isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1611) ? 0.0 : (isnan(0.0) ? _1611 : max(0.0, _1611))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1620 = 1.0;
    }
    float _1624 = (_1620 * cbModelParam._m0[1u].x) + (_1609 * (1.0 - cbModelParam._m0[1u].x));
    float _1634 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _739);
    float _1635 = isnan(_1634) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1634 : min(cbModelParam._m0[25u].z, _1634));
    float _1715;
    float _1717;
    float _1719;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1682 = fma(_886, cbModelParam._m0[13u].z, fma(_882, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _878)) + cbModelParam._m0[13u].w;
        float _1686 = fma(_886, cbModelParam._m0[14u].z, fma(_882, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _878)) + cbModelParam._m0[14u].w;
        float _1690 = fma(_886, cbModelParam._m0[15u].z, fma(_882, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _878)) + cbModelParam._m0[15u].w;
        float _1693 = fma(_823, cbModelParam._m0[13u].z, fma(_822, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _821));
        float _1696 = fma(_823, cbModelParam._m0[14u].z, fma(_822, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _821));
        float _1699 = fma(_823, cbModelParam._m0[15u].z, fma(_822, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _821));
        float _1727;
        if (_1693 > 0.0)
        {
            _1727 = abs((1.0 - _1682) / _1693);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1693 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1682 + 1.0) / _1693);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1727 = frontier_phi_16_14_ladder;
        }
        float _1920;
        if (_1696 > 0.0)
        {
            _1920 = abs((1.0 - _1686) / _1696);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1696 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1686 + 1.0) / _1696);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1920 = frontier_phi_25_21_ladder;
        }
        float _2158;
        if (_1699 > 0.0)
        {
            _2158 = abs((1.0 - _1690) / _1699);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1699 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1690 + 1.0) / _1699);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _2158 = frontier_phi_36_32_ladder;
        }
        float _2160 = isnan(_1920) ? _1727 : (isnan(_1727) ? _1920 : min(_1727, _1920));
        float _2161 = isnan(_2158) ? _2160 : (isnan(_2160) ? _2158 : min(_2160, _2158));
        float _2165 = (_2161 * _1693) + _1682;
        float _2166 = (_2161 * _1696) + _1686;
        float _2167 = (_2161 * _1699) + _1690;
        float _2168 = _2161 * 9.9999997473787516355514526367188e-05;
        float _2170 = (-1.0) - _2168;
        float _2172 = _2168 + 1.0;
        float frontier_phi_15_36_ladder;
        float frontier_phi_15_36_ladder_1;
        float frontier_phi_15_36_ladder_2;
        if ((_2167 > _2172) || ((_2167 < _2170) || ((_2166 > _2172) || ((_2166 < _2170) || ((_2165 < _2170) || (_2165 > _2172))))))
        {
            frontier_phi_15_36_ladder = 0.0;
            frontier_phi_15_36_ladder_1 = 0.0;
            frontier_phi_15_36_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2317 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2167, cbModelParam._m0[9u].z, fma(_2166, cbModelParam._m0[9u].y, _2165 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2167, cbModelParam._m0[10u].z, fma(_2166, cbModelParam._m0[10u].y, _2165 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2167, cbModelParam._m0[11u].z, fma(_2166, cbModelParam._m0[11u].y, _2165 * cbModelParam._m0[11u].x))), _1635);
            frontier_phi_15_36_ladder = _2317.z * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_1 = _2317.x * cbModelParam._m0[1u].y;
            frontier_phi_15_36_ladder_2 = _2317.y * cbModelParam._m0[1u].y;
        }
        _1715 = frontier_phi_15_36_ladder_1;
        _1717 = frontier_phi_15_36_ladder_2;
        _1719 = frontier_phi_15_36_ladder;
    }
    else
    {
        vec4 _1703 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_821, _822, _823), _1635);
        _1715 = _1703.x * cbModelParam._m0[1u].y;
        _1717 = _1703.y * cbModelParam._m0[1u].y;
        _1719 = _1703.z * cbModelParam._m0[1u].y;
    }
    float _1723 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _739);
    float _1724 = isnan(_1723) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1723 : min(cbModelParam._m0[25u].w, _1723));
    float _1816;
    float _1818;
    float _1820;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1780 = fma(_886, cbModelParam._m0[21u].z, fma(_882, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _878)) + cbModelParam._m0[21u].w;
        float _1784 = fma(_886, cbModelParam._m0[22u].z, fma(_882, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _878)) + cbModelParam._m0[22u].w;
        float _1788 = fma(_886, cbModelParam._m0[23u].z, fma(_882, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _878)) + cbModelParam._m0[23u].w;
        float _1791 = fma(_823, cbModelParam._m0[21u].z, fma(_822, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _821));
        float _1794 = fma(_823, cbModelParam._m0[22u].z, fma(_822, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _821));
        float _1797 = fma(_823, cbModelParam._m0[23u].z, fma(_822, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _821));
        float _1925;
        if (_1791 > 0.0)
        {
            _1925 = abs((1.0 - _1780) / _1791);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1791 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1780 + 1.0) / _1791);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1925 = frontier_phi_27_23_ladder;
        }
        float _2185;
        if (_1794 > 0.0)
        {
            _2185 = abs((1.0 - _1784) / _1794);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1794 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1784 + 1.0) / _1794);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _2185 = frontier_phi_38_34_ladder;
        }
        float _2492;
        if (_1797 > 0.0)
        {
            _2492 = abs((1.0 - _1788) / _1797);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1797 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1788 + 1.0) / _1797);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2492 = frontier_phi_49_44_ladder;
        }
        float _2494 = isnan(_2185) ? _1925 : (isnan(_1925) ? _2185 : min(_1925, _2185));
        float _2495 = isnan(_2492) ? _2494 : (isnan(_2494) ? _2492 : min(_2494, _2492));
        float _2499 = (_2495 * _1791) + _1780;
        float _2500 = (_2495 * _1794) + _1784;
        float _2501 = (_2495 * _1797) + _1788;
        float _2502 = _2495 * 9.9999997473787516355514526367188e-05;
        float _2503 = (-1.0) - _2502;
        float _2505 = _2502 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2501 > _2505) || ((_2501 < _2503) || ((_2500 > _2505) || ((_2500 < _2503) || ((_2499 < _2503) || (_2499 > _2505))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2674 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2501, cbModelParam._m0[17u].z, fma(_2500, cbModelParam._m0[17u].y, _2499 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2501, cbModelParam._m0[18u].z, fma(_2500, cbModelParam._m0[18u].y, _2499 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2501, cbModelParam._m0[19u].z, fma(_2500, cbModelParam._m0[19u].y, _2499 * cbModelParam._m0[19u].x))), _1724);
            frontier_phi_24_49_ladder = _2674.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2674.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2674.x * cbModelParam._m0[1u].z;
        }
        _1816 = frontier_phi_24_49_ladder_2;
        _1818 = frontier_phi_24_49_ladder;
        _1820 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1800 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_821, _822, _823), _1724);
        _1816 = _1800.x * cbModelParam._m0[1u].z;
        _1818 = _1800.y * cbModelParam._m0[1u].z;
        _1820 = _1800.z * cbModelParam._m0[1u].z;
    }
    float _1832 = ((((1.0 - _846) * ((_834 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_846 * _834)) * _813;
    float _1833 = _1832 * ((cbModelParam._m0[1u].w * (_1816 - _1715)) + _1715);
    float _1834 = _1832 * ((cbModelParam._m0[1u].w * (_1818 - _1717)) + _1717);
    float _1835 = _1832 * ((cbModelParam._m0[1u].w * (_1820 - _1719)) + _1719);
    float _1838 = fma(_1835, cbSceneParam._m0[89u].z, fma(_1834, cbSceneParam._m0[89u].y, _1833 * cbSceneParam._m0[89u].x));
    float _1841 = fma(_1835, cbSceneParam._m0[90u].z, fma(_1834, cbSceneParam._m0[90u].y, _1833 * cbSceneParam._m0[90u].x));
    float _1844 = fma(_1835, cbSceneParam._m0[91u].z, fma(_1834, cbSceneParam._m0[91u].y, _1833 * cbSceneParam._m0[91u].x));
    vec4 _1852 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_650, _651));
    float _1854 = _1852.w;
    float _1866 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1854);
    float _1867 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1854);
    float _1868 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1854);
    uvec4 _1872 = floatBitsToUint(cbInstanceData._m0[_302 + 5u]);
    uint _1874 = _1872.x * 14u;
    uint _1875 = _1874 + 13u;
    float _1880 = _813 + (-1.0);
    float _1883 = (cbLight._m0[_1875].x * _1880) + 1.0;
    float _1884 = (cbLight._m0[_1875].y * _1880) + 1.0;
    uint _1886 = _1874 + 4u;
    float _1897 = dot(vec3(cbLight._m0[_1874].xyz), vec3(_735, _736, _737));
    float _1900 = isnan(1.0) ? _1883 : (isnan(_1883) ? 1.0 : min(_1883, 1.0));
    float _1901 = cbLight._m0[_1886].x * _1866;
    float _1902 = cbLight._m0[_1886].y * _1867;
    float _1903 = cbLight._m0[_1886].z * _1868;
    uint _1904 = _1874 + 5u;
    uint _1910 = _1874 | 1u;
    float _1916 = dot(vec3(cbLight._m0[_1910].xyz), vec3(_735, _736, _737));
    float _1919 = isnan(1.0) ? _1884 : (isnan(_1884) ? 1.0 : min(_1884, 1.0));
    float _1984;
    float _1985;
    float _1986;
    if (_740 == 0.0)
    {
        float _3671 = isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0));
        float _3682 = isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0));
        float _1938 = (isnan(1.0) ? _3671 : (isnan(_3671) ? 1.0 : min(_3671, 1.0))) * 0.3183098733425140380859375;
        float _1940 = (isnan(1.0) ? _3682 : (isnan(_3682) ? 1.0 : min(_3682, 1.0))) * 0.3183098733425140380859375;
        _1984 = ((cbLight._m0[_1904].x * _1919) * _1940) + ((_1901 * _1900) * _1938);
        _1985 = ((_1919 * cbLight._m0[_1904].y) * _1940) + ((_1902 * _1900) * _1938);
        _1986 = ((_1919 * cbLight._m0[_1904].z) * _1940) + ((_1903 * _1900) * _1938);
    }
    else
    {
        float _1950 = _1897 + _740;
        float _1953 = (_740 * 2.0) + 1.0;
        float _1954 = (isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0))) / _1953;
        float _1961 = _1916 + _740;
        float _1963 = (isnan(0.0) ? _1961 : (isnan(_1961) ? 0.0 : max(_1961, 0.0))) / _1953;
        _1984 = (((_1963 * cbLight._m0[_1904].x) * _1919) + ((_1901 * _1954) * _1900)) * 0.3183098733425140380859375;
        _1985 = (((_1963 * cbLight._m0[_1904].y) * _1919) + ((_1902 * _1954) * _1900)) * 0.3183098733425140380859375;
        _1986 = (((_1963 * cbLight._m0[_1904].z) * _1919) + ((_1903 * _1954) * _1900)) * 0.3183098733425140380859375;
    }
    uint _1990 = _1874 + 8u;
    float _2006 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1874].w)) * _739) * 0.949999988079071044921875);
    float _2007 = _2006 * _2006;
    float _2008 = cbLight._m0[_1874].x + _514;
    float _2009 = cbLight._m0[_1874].y + _515;
    float _2010 = cbLight._m0[_1874].z + _516;
    float _2014 = inversesqrt(dot(vec3(_2008, _2009, _2010), vec3(_2008, _2009, _2010)));
    float _2015 = _2014 * _2008;
    float _2016 = _2014 * _2009;
    float _2017 = _2014 * _2010;
    float _2018 = dot(vec3(_735, _736, _737), vec3(cbLight._m0[_1874].xyz));
    float _3703 = isnan(0.0) ? _2018 : (isnan(_2018) ? 0.0 : max(_2018, 0.0));
    float _2021 = isnan(1.0) ? _3703 : (isnan(_3703) ? 1.0 : min(_3703, 1.0));
    float _3714 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _2022 = isnan(1.0) ? _3714 : (isnan(_3714) ? 1.0 : min(_3714, 1.0));
    float _2023 = dot(vec3(_735, _736, _737), vec3(_2015, _2016, _2017));
    float _3725 = isnan(0.0) ? _2023 : (isnan(_2023) ? 0.0 : max(_2023, 0.0));
    float _2026 = isnan(1.0) ? _3725 : (isnan(_3725) ? 1.0 : min(_3725, 1.0));
    float _2027 = dot(vec3(cbLight._m0[_1874].xyz), vec3(_2015, _2016, _2017));
    float _3736 = isnan(0.0) ? _2027 : (isnan(_2027) ? 0.0 : max(_2027, 0.0));
    float _2031 = _2007 * _2007;
    float _2035 = ((_2026 * _2026) * (_2031 + (-1.0))) + 1.0;
    float _2046 = (exp2(log2(1.0 - (isnan(1.0) ? _3736 : (isnan(_3736) ? 1.0 : min(_3736, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2047 = 1.0 - _2007;
    float _2058 = (0.5 / (((_2022 * ((_2021 * _2047) + _2007)) + 9.9999999392252902907785028219223e-09) + (((_2022 * _2047) + _2007) * _2021))) * _2021;
    float _3747 = isnan(0.0) ? _2058 : (isnan(_2058) ? 0.0 : max(_2058, 0.0));
    float _2060 = (isnan(1.0) ? _3747 : (isnan(_3747) ? 1.0 : min(_3747, 1.0))) * (_2031 / ((_2035 * _2035) * 3.141590118408203125));
    uint _2076 = _1874 + 9u;
    float _2090 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1910].w)) * _739) * 0.949999988079071044921875);
    float _2091 = _2090 * _2090;
    float _2092 = cbLight._m0[_1910].x + _514;
    float _2093 = cbLight._m0[_1910].y + _515;
    float _2094 = cbLight._m0[_1910].z + _516;
    float _2098 = inversesqrt(dot(vec3(_2092, _2093, _2094), vec3(_2092, _2093, _2094)));
    float _2099 = _2098 * _2092;
    float _2100 = _2098 * _2093;
    float _2101 = _2098 * _2094;
    float _2102 = dot(vec3(_735, _736, _737), vec3(cbLight._m0[_1910].xyz));
    float _3758 = isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0));
    float _2105 = isnan(1.0) ? _3758 : (isnan(_3758) ? 1.0 : min(_3758, 1.0));
    float _2106 = dot(vec3(_735, _736, _737), vec3(_2099, _2100, _2101));
    float _3769 = isnan(0.0) ? _2106 : (isnan(_2106) ? 0.0 : max(_2106, 0.0));
    float _2109 = isnan(1.0) ? _3769 : (isnan(_3769) ? 1.0 : min(_3769, 1.0));
    float _2110 = dot(vec3(cbLight._m0[_1910].xyz), vec3(_2099, _2100, _2101));
    float _3780 = isnan(0.0) ? _2110 : (isnan(_2110) ? 0.0 : max(_2110, 0.0));
    float _2114 = _2091 * _2091;
    float _2118 = ((_2109 * _2109) * (_2114 + (-1.0))) + 1.0;
    float _2127 = (exp2(log2(1.0 - (isnan(1.0) ? _3780 : (isnan(_3780) ? 1.0 : min(_3780, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2128 = 1.0 - _2091;
    float _2138 = (0.5 / (((_2022 * ((_2105 * _2128) + _2091)) + 9.9999999392252902907785028219223e-09) + (((_2022 * _2128) + _2091) * _2105))) * _2105;
    float _3791 = isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0));
    float _2140 = (isnan(1.0) ? _3791 : (isnan(_3791) ? 1.0 : min(_3791, 1.0))) * (_2114 / ((_2118 * _2118) * 3.141590118408203125));
    float _2150 = (((_2127 * cbLight._m0[_2076].x) * _2140) * _1919) + ((((cbLight._m0[_1990].x * _1866) * _2046) * _2060) * _1900);
    float _2151 = (((_2127 * cbLight._m0[_2076].y) * _2140) * _1919) + ((((cbLight._m0[_1990].y * _1867) * _2046) * _2060) * _1900);
    float _2152 = (((_2127 * cbLight._m0[_2076].z) * _2140) * _1919) + ((((cbLight._m0[_1990].z * _1868) * _2046) * _2060) * _1900);
    float _2288;
    float _2290;
    float _2292;
    float _2294;
    float _2296;
    float _2298;
    if (_1872.y == 0u)
    {
        float _2229 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2230 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2229;
        float _2231 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2229;
        float _2232 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2229;
        uvec4 _2244 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2245 = _2244.x;
        uint _2256 = uint((float(_2244.y) * floor(float(uint(cbSceneParam._m0[85u].y * _651) / _2245))) + floor(float(uint(cbSceneParam._m0[85u].x * _650) / _2245)));
        float _2266 = (log2(_2232 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2267 = isnan(0.0) ? _2266 : (isnan(_2266) ? 0.0 : max(_2266, 0.0));
        uint _2270 = uint(isnan(14.0) ? _2267 : (isnan(_2267) ? 14.0 : min(_2267, 14.0)));
        uint _2277 = _2244.z;
        float _2326;
        float _2328;
        float _2330;
        float _2332;
        float _2334;
        float _2336;
        if (((((1u << ((_2277 >> 4u) & 15u)) + 4294967295u) & texelFetch(g_lightClusterGridBuffer, int(((_2270 << 2u) + (_2256 << 6u)) >> 2u)).x) == 0u) || ((_2277 & 240u) == 0u))
        {
            _2326 = 0.0;
            _2328 = 0.0;
            _2330 = 0.0;
            _2332 = 0.0;
            _2334 = 0.0;
            _2336 = 0.0;
        }
        else
        {
            float _2327;
            float _2329;
            float _2331;
            float _2333;
            float _2335;
            float _2337;
            float _2518 = 0.0;
            float _2519 = 0.0;
            float _2520 = 0.0;
            float _2521 = 0.0;
            float _2522 = 0.0;
            float _2523 = 0.0;
            uint _2524 = 0u;
            uint _2533;
            bool _2534;
            for (;;)
            {
                _2533 = texelFetch(g_lightClassification, int((((_2270 << 5u) + (_2256 << 9u)) + (_2524 << 2u)) >> 2u)).x;
                _2534 = _2533 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_2534)
                {
                    frontier_phi_55_pred = _2523;
                    frontier_phi_55_pred_1 = _2522;
                    frontier_phi_55_pred_2 = _2521;
                    frontier_phi_55_pred_3 = _2519;
                    frontier_phi_55_pred_4 = _2518;
                    frontier_phi_55_pred_5 = _2520;
                }
                else
                {
                    float _2731;
                    float _2732;
                    float _2733;
                    float _2734;
                    float _2735;
                    float _2736;
                    uint _2737;
                    _2731 = _2518;
                    _2732 = _2519;
                    _2733 = _2520;
                    _2734 = _2521;
                    _2735 = _2522;
                    _2736 = _2523;
                    _2737 = _2533;
                    float _2679;
                    float _2680;
                    float _2681;
                    float _2682;
                    float _2683;
                    float _2684;
                    for (;;)
                    {
                        uint _2741 = uint(findLSB(_2737)) + (_2524 << 5u);
                        uint _2738 = (_2737 + 4294967295u) & _2737;
                        uint _2743 = _2741 * 48u;
                        vec4 _2757 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2743)).x, texelFetch(g_PointLightRenderingBuffer, int(_2743 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2743 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2743 + 3u)).x));
                        uint _2763 = (_2741 * 48u) + 4u;
                        vec4 _2776 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2763)).x, texelFetch(g_PointLightRenderingBuffer, int(_2763 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2763 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2763 + 3u)).x));
                        float _2777 = _2776.x;
                        float _2778 = _2776.y;
                        float _2779 = _2776.z;
                        uint _2782 = (_2741 * 48u) + 8u;
                        vec3 _2793 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2782)).x, texelFetch(g_PointLightRenderingBuffer, int(_2782 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2782 + 2u)).x));
                        uint _2798 = (_2741 * 48u) + 12u;
                        vec2 _2806 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2798)).x, texelFetch(g_PointLightRenderingBuffer, int(_2798 + 1u)).x));
                        float _2812 = inversesqrt(dot(vec3(_2230, _2231, _2232), vec3(_2230, _2231, _2232)));
                        float _2813 = _2812 * _2230;
                        float _2814 = _2812 * _2231;
                        float _2815 = _2812 * _2232;
                        float _2816 = _2757.x - _2230;
                        float _2817 = _2757.y - _2231;
                        float _2818 = _2757.z - _2232;
                        float _2819 = dot(vec3(_2816, _2817, _2818), vec3(_2816, _2817, _2818));
                        float _2822 = inversesqrt(_2819);
                        float _2823 = _2822 * _2816;
                        float _2824 = _2822 * _2817;
                        float _2825 = _2822 * _2818;
                        float _2826 = dot(vec3(_775, _778, _781), vec3(_2823, _2824, _2825));
                        float _2831 = 1.0 - (_2819 * _2757.w);
                        float _3812 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
                        float _2832 = isnan(1.0) ? _3812 : (isnan(_3812) ? 1.0 : min(_3812, 1.0));
                        float _2833 = sqrt(_2819) * _2776.w;
                        float _2836 = 1.39999997615814208984375 / (_2833 + 1.39999997615814208984375);
                        float _2837 = _2836 * _2836;
                        float _2838 = 1.0 - _2837;
                        float _2840 = (_2838 * _2838) * _740;
                        float _2843 = ((_2838 * _2826) + _2837) + _2840;
                        float _2848 = _2833 * _2833;
                        float _2853 = ((isnan(0.0) ? _2843 : (isnan(_2843) ? 0.0 : max(_2843, 0.0))) * _2832) / (((_2840 * 2.0) + 1.0) * ((_2848 * 0.699999988079071044921875) + 1.0));
                        float _2857 = dot(vec3(_2823, _2824, _2825), vec3(_2813, _2814, _2815));
                        float _3828 = isnan(0.0) ? _2857 : (isnan(_2857) ? 0.0 : max(_2857, 0.0));
                        float _2864 = dot(vec3((-0.0) - _2813, (-0.0) - _2814, (-0.0) - _2815), vec3(_775, _778, _781)) + 1.0;
                        float _2866 = (isnan(0.0) ? _2864 : (isnan(_2864) ? 0.0 : max(_2864, 0.0))) * 0.5;
                        float _2873 = ((_2866 * _2866) * _2806.x) * exp2((_2806.y * 32.0) * log2(isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0))));
                        float _2875 = _740 / (_740 + 1.0);
                        float _2891 = (-0.0) - _2230;
                        float _2892 = (-0.0) - _2231;
                        float _2893 = (-0.0) - _2232;
                        float _2897 = inversesqrt(dot(vec3(_2891, _2892, _2893), vec3(_2891, _2892, _2893)));
                        float _2898 = _2897 * _2891;
                        float _2899 = _2897 * _2892;
                        float _2900 = _2897 * _2893;
                        float _2908 = exp2(log2(1.0 / ((_2848 * 3.5) + 5.0)) * 0.25);
                        float _2909 = 1.0 - _834;
                        float _2916 = sqrt(1.0 - ((1.0 - (_2909 * _2909)) * (1.0 - (_2908 * _2908))));
                        float _2917 = _2916 * _2916;
                        float _2918 = _2917 * _2917;
                        float _2919 = _2898 + _2823;
                        float _2920 = _2899 + _2824;
                        float _2921 = _2900 + _2825;
                        float _2925 = inversesqrt(dot(vec3(_2919, _2920, _2921), vec3(_2919, _2920, _2921)));
                        float _2929 = dot(vec3(_775, _778, _781), vec3(_2898, _2899, _2900));
                        float _3844 = isnan(0.0) ? _2929 : (isnan(_2929) ? 0.0 : max(_2929, 0.0));
                        float _2932 = isnan(1.0) ? _3844 : (isnan(_3844) ? 1.0 : min(_3844, 1.0));
                        float _2933 = dot(vec3(_775, _778, _781), vec3(_2925 * _2919, _2925 * _2920, _2925 * _2921));
                        float _3855 = isnan(0.0) ? _2933 : (isnan(_2933) ? 0.0 : max(_2933, 0.0));
                        float _2936 = isnan(1.0) ? _3855 : (isnan(_3855) ? 1.0 : min(_3855, 1.0));
                        float _2940 = ((_2936 * _2936) * (_2918 + (-1.0))) + 1.0;
                        float _2941 = _2836 * _2917;
                        float _2942 = _2941 * _2941;
                        float _2945 = ((1.0 - _2942) * _2826) + _2942;
                        float _3866 = isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : max(_2945, 0.0));
                        float _2946 = isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0));
                        float _2947 = 1.0 - _2917;
                        float _2957 = (0.5 / (((_2946 * ((_2932 * _2947) + _2917)) + 9.9999999392252902907785028219223e-09) + (((_2946 * _2947) + _2917) * _2932))) * _2946;
                        float _3877 = isnan(0.0) ? _2957 : (isnan(_2957) ? 0.0 : max(_2957, 0.0));
                        float _2968 = (((_2918 * 3.1415927410125732421875) * (isnan(1.0) ? _3877 : (isnan(_3877) ? 1.0 : min(_3877, 1.0)))) / ((_2940 * _2940) * ((_2848 * 2.1991131305694580078125) + 3.141590118408203125))) * _2832;
                        _2682 = (((((_2777 * 0.3183098733425140380859375) * _2875) * _2873) + _2777) * _2853) + _2734;
                        _2683 = (((((_2778 * 0.3183098733425140380859375) * _2875) * _2873) + _2778) * _2853) + _2735;
                        _2684 = (((((_2779 * 0.3183098733425140380859375) * _2875) * _2873) + _2779) * _2853) + _2736;
                        _2679 = (_2968 * _2793.x) + _2731;
                        _2680 = (_2968 * _2793.y) + _2732;
                        _2681 = (_2968 * _2793.z) + _2733;
                        if (_2738 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2731 = _2679;
                            _2732 = _2680;
                            _2733 = _2681;
                            _2734 = _2682;
                            _2735 = _2683;
                            _2736 = _2684;
                            _2737 = _2738;
                        }
                    }
                    frontier_phi_55_pred = _2684;
                    frontier_phi_55_pred_1 = _2683;
                    frontier_phi_55_pred_2 = _2682;
                    frontier_phi_55_pred_3 = _2680;
                    frontier_phi_55_pred_4 = _2679;
                    frontier_phi_55_pred_5 = _2681;
                }
                _2337 = frontier_phi_55_pred;
                _2335 = frontier_phi_55_pred_1;
                _2333 = frontier_phi_55_pred_2;
                _2329 = frontier_phi_55_pred_3;
                _2327 = frontier_phi_55_pred_4;
                _2331 = frontier_phi_55_pred_5;
                uint _2525 = _2524 + 1u;
                if (_2525 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2518 = _2327;
                    _2519 = _2329;
                    _2520 = _2331;
                    _2521 = _2333;
                    _2522 = _2335;
                    _2523 = _2337;
                    _2524 = _2525;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2326 = _2327;
            _2328 = _2329;
            _2330 = _2331;
            _2332 = _2333;
            _2334 = _2335;
            _2336 = _2337;
        }
        float _2341 = isnan(1.0) ? _813 : (isnan(_813) ? 1.0 : min(_813, 1.0));
        _2288 = (_2341 * _2332) + _1984;
        _2290 = (_2341 * _2334) + _1985;
        _2292 = (_2341 * _2336) + _1986;
        _2294 = ((_2326 * 0.039999999105930328369140625) * _2341) + _2150;
        _2296 = ((_2328 * 0.039999999105930328369140625) * _2341) + _2151;
        _2298 = ((_2330 * 0.039999999105930328369140625) * _2341) + _2152;
    }
    else
    {
        _2288 = _1984;
        _2290 = _1985;
        _2292 = _1986;
        _2294 = _2150;
        _2296 = _2151;
        _2298 = _2152;
    }
    float _2415;
    float _2416;
    float _2417;
    if (_740 > 0.0)
    {
        uint _2348 = _1874 + 4u;
        float _2354 = (-0.0) - _514;
        float _2355 = (-0.0) - _515;
        float _2356 = (-0.0) - _516;
        float _2357 = dot(vec3(cbLight._m0[_1874].xyz), vec3(_2354, _2355, _2356));
        float _3893 = isnan(0.0) ? _2357 : (isnan(_2357) ? 0.0 : max(_2357, 0.0));
        float _2361 = _824 + 1.0;
        float _2363 = (isnan(0.0) ? _2361 : (isnan(_2361) ? 0.0 : max(_2361, 0.0))) * 0.5;
        float _2368 = _2363 * _2363;
        float _2369 = _2368 * exp2(log2(isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0))) * 32.0);
        float _2371 = _740 / (_740 + 1.0);
        float _2372 = isnan(_1883) ? 1.0 : (isnan(1.0) ? _1883 : min(1.0, _1883));
        uint _2385 = _1874 + 5u;
        float _2391 = dot(vec3(cbLight._m0[_1910].xyz), vec3(_2354, _2355, _2356));
        float _3914 = isnan(0.0) ? _2391 : (isnan(_2391) ? 0.0 : max(_2391, 0.0));
        float _2398 = _2368 * exp2(log2(isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0))) * 32.0);
        float _2399 = isnan(_1884) ? 1.0 : (isnan(1.0) ? _1884 : min(1.0, _1884));
        _2415 = ((((_2398 * cbLight._m0[_2385].x) * _2371) * _2399) + ((((cbLight._m0[_2348].x * _1866) * _2369) * _2371) * _2372)) * 0.3183098733425140380859375;
        _2416 = ((((_2398 * cbLight._m0[_2385].y) * _2371) * _2399) + ((((cbLight._m0[_2348].y * _1867) * _2369) * _2371) * _2372)) * 0.3183098733425140380859375;
        _2417 = ((((_2398 * cbLight._m0[_2385].z) * _2371) * _2399) + ((((cbLight._m0[_2348].z * _1868) * _2369) * _2371) * _2372)) * 0.3183098733425140380859375;
    }
    else
    {
        _2415 = 0.0;
        _2416 = 0.0;
        _2417 = 0.0;
    }
    float _3930 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
    float _3941 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _3952 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _3963 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _2432 = (isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0))) * ((_2288 + ((isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0))) * _813)) + _2415);
    float _2433 = (isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0))) * ((_2290 + ((isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0))) * _813)) + _2416);
    float _2434 = (isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0))) * ((_2292 + ((isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0))) * _813)) + _2417);
    float _2438 = 0.959999978542327880859375 - (exp2(log2(1.0 - _828) * 5.0) * 0.959999978542327880859375);
    float _2463 = _650 / cbSceneParam._m0[86u].x;
    float _2464 = _651 / cbSceneParam._m0[86u].y;
    vec4 _2478 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2463, _2464, (log2((isnan(cbSceneParam._m0[77u].w) ? _757 : (isnan(_757) ? cbSceneParam._m0[77u].w : min(_757, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2480 = _2478.x;
    float _2481 = _2478.y;
    float _2482 = _2478.z;
    float _2483 = _2478.w;
    float _2576;
    float _2578;
    float _2580;
    float _2582;
    if (_757 > cbSceneParam._m0[78u].w)
    {
        float _2539 = isnan(_757) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _757 : min(cbSceneParam._m0[80u].w, _757));
        float _2540 = _2539 / _757;
        float _2551 = _2540 * _294;
        float _2552 = _295 * _2540;
        float _2553 = (-0.0) - _2552;
        float _2554 = _2540 * _296;
        float _2556 = (cbSceneParam._m0[77u].w * _2553) / _2539;
        float _2557 = _2556 + cbSceneParam._m0[79u].w;
        float _2558 = cbSceneParam._m0[79u].w - _2552;
        float _2564 = sqrt(((_2551 * _2551) + (_2552 * _2552)) + (_2554 * _2554));
        float _2567 = (1.0 - (cbSceneParam._m0[77u].w / _2539)) * _2564;
        float _2572 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2574 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2973;
        if (abs((_2553 - _2556) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2973 = ((((_2557 > 0.0) ? exp2(_2572 * _2557) : (2.0 - exp2(_2574 * _2557))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2567;
        }
        else
        {
            float _2704 = 1.0 / cbSceneParam._m0[80u].x;
            float _2705 = isnan(_2558) ? _2557 : (isnan(_2557) ? _2558 : max(_2557, _2558));
            float _2706 = isnan(_2558) ? _2557 : (isnan(_2557) ? _2558 : min(_2557, _2558));
            float _2715 = isnan(0.0) ? _2705 : (isnan(_2705) ? 0.0 : min(_2705, 0.0));
            float _2716 = isnan(0.0) ? _2706 : (isnan(_2706) ? 0.0 : min(_2706, 0.0));
            _2973 = ((abs(_2564 / _2553) * cbSceneParam._m0[80u].y) * ((((_2715 - _2716) * 2.0) - ((exp2(_2572 * (isnan(0.0) ? _2705 : (isnan(_2705) ? 0.0 : max(_2705, 0.0)))) - exp2(_2572 * (isnan(0.0) ? _2706 : (isnan(_2706) ? 0.0 : max(_2706, 0.0))))) * _2704)) - ((exp2(_2574 * _2715) - exp2(_2574 * _2716)) * _2704))) + (_2567 * cbSceneParam._m0[80u].z);
        }
        vec4 _2975 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2463, _2464, 1.0), 0.0);
        float _2984 = exp2((_2973 * (-1.44269502162933349609375)) * (1.0 - _2975.w));
        float _2985 = log2(_2984);
        float _3001 = log2(_2483);
        _2576 = (exp2(_3001 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2985 * cbSceneParam._m0[78u].x)) * _2975.x) / cbSceneParam._m0[78u].x)) + _2480;
        _2578 = (exp2(_3001 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2985 * cbSceneParam._m0[78u].y)) * _2975.y) / cbSceneParam._m0[78u].y)) + _2481;
        _2580 = (exp2(_3001 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2985 * cbSceneParam._m0[78u].z)) * _2975.z) / cbSceneParam._m0[78u].z)) + _2482;
        _2582 = _2984 * _2483;
    }
    else
    {
        _2576 = _2480;
        _2578 = _2481;
        _2580 = _2482;
        _2582 = _2483;
    }
    bool _2594 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2595 = log2(_2582);
    float _2602 = exp2(_2595 * cbSceneParam._m0[78u].x) * ((_2432 + ((_2294 + ((isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0))) * _1624)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _674.x) * _2438) - _2432) * _720));
    float _2603 = exp2(_2595 * cbSceneParam._m0[78u].y) * ((_2433 + ((_2296 + ((isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0))) * _1624)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _674.y) * _2438) - _2433) * _720));
    float _2604 = exp2(_2595 * cbSceneParam._m0[78u].z) * ((_2434 + ((_2298 + ((isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0))) * _1624)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _674.z) * _2438) - _2434) * _720));
    vec4 _2612 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_650, _651));
    float _2614 = _2612.x;
    float _2635 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2614)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2614))) - _757) * cbMtdParam._m0[17u].y;
    float _4014 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
    float _2637 = (cbInstanceData._m0[_302 + 6u].w * (isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0)))) * (isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0)));
    float _2646 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2646 * (_2594 ? _2602 : (_2602 + (cbSceneParam._m0[72u].w * _2576)));
    SV_Target.y = _2646 * (_2594 ? _2603 : (_2603 + (cbSceneParam._m0[72u].w * _2578)));
    SV_Target.z = _2646 * (_2594 ? _2604 : (_2604 + (cbSceneParam._m0[72u].w * _2580)));
    SV_Target.w = _2637;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2637;
}


