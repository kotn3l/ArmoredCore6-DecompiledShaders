#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_NoLight_PK_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _568;
float _569;
float _570;
float _571;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _122 = texture(sampler2D(M_A_M0_NoLight_PK_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _128 = _122.x * cbMtdParam._m0[9u].x;
    float _129 = _122.y * cbMtdParam._m0[9u].y;
    float _130 = _122.z * cbMtdParam._m0[9u].z;
    float _135 = gl_FragCoord.x * 0.125;
    float _137 = gl_FragCoord.y * 0.125;
    if (!(cbMtdParam._m0[10u].x >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_135, _137)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625)))
    {
        discard_state = true;
    }
    float _169 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _210 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _220 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _210);
    float _221 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _210);
    float _222 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _210);
    vec4 _224 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_135, _137));
    float _226 = _224.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _308 = sqrt(((_220 * _220) + (_221 * _221)) + (_222 * _222));
        float _315 = (cbMatDynParam._m0[5u].x * _308) + cbMatDynParam._m0[5u].y;
        float _595 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
        float _317 = isnan(1.0) ? _595 : (isnan(_595) ? 1.0 : min(_595, 1.0));
        float _321 = (cbMatDynParam._m0[5u].z * _308) + cbMatDynParam._m0[5u].w;
        float _606 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _606 : (isnan(_606) ? 1.0 : min(_606, 1.0))) - _317)) + _317) < ((_226 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _252 = uint(roundEven(NORMAL.w)) * 13u;
    uint _254 = _252 + 9u;
    uint _255 = _254 + uint(cbMatDynParam._m0[0u].w);
    float _261 = (cbMtdParam._m0[0u].x * (isnan(0.0) ? _128 : (isnan(_128) ? 0.0 : max(_128, 0.0)))) * cbInstanceData._m0[_255].x;
    float _262 = (cbMtdParam._m0[0u].y * (isnan(0.0) ? _129 : (isnan(_129) ? 0.0 : max(_129, 0.0)))) * cbInstanceData._m0[_255].y;
    float _263 = (cbMtdParam._m0[0u].z * (isnan(0.0) ? _130 : (isnan(_130) ? 0.0 : max(_130, 0.0)))) * cbInstanceData._m0[_255].z;
    uint _264 = _252 + 6u;
    float _273 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _274 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _289 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_273, _274, (log2((isnan(cbSceneParam._m0[77u].w) ? _169 : (isnan(_169) ? cbSceneParam._m0[77u].w : min(_169, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _291 = _289.x;
    float _292 = _289.y;
    float _293 = _289.z;
    float _294 = _289.w;
    float _375;
    float _377;
    float _379;
    float _381;
    if (_169 > cbSceneParam._m0[78u].w)
    {
        float _336 = isnan(_169) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _169 : min(cbSceneParam._m0[80u].w, _169));
        float _337 = _336 / _169;
        float _348 = _337 * _220;
        float _349 = _221 * _337;
        float _350 = (-0.0) - _349;
        float _352 = _337 * _222;
        float _354 = (cbSceneParam._m0[77u].w * _350) / _336;
        float _355 = _354 + cbSceneParam._m0[79u].w;
        float _356 = cbSceneParam._m0[79u].w - _349;
        float _362 = sqrt(((_348 * _348) + (_349 * _349)) + (_352 * _352));
        float _365 = (1.0 - (cbSceneParam._m0[77u].w / _336)) * _362;
        float _371 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _373 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _494;
        if (abs((_350 - _354) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _494 = ((((_355 > 0.0) ? exp2(_371 * _355) : (2.0 - exp2(_373 * _355))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _365;
        }
        else
        {
            float _449 = 1.0 / cbSceneParam._m0[80u].x;
            float _450 = isnan(_356) ? _355 : (isnan(_355) ? _356 : max(_355, _356));
            float _451 = isnan(_356) ? _355 : (isnan(_355) ? _356 : min(_355, _356));
            float _460 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : min(_450, 0.0));
            float _461 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : min(_451, 0.0));
            _494 = ((abs(_362 / _350) * cbSceneParam._m0[80u].y) * ((((_460 - _461) * 2.0) - ((exp2(_371 * (isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0)))) - exp2(_371 * (isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0))))) * _449)) - ((exp2(_373 * _460) - exp2(_373 * _461)) * _449))) + (_365 * cbSceneParam._m0[80u].z);
        }
        vec4 _496 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_273, _274, 1.0), 0.0);
        float _505 = exp2((_494 * (-1.44269502162933349609375)) * (1.0 - _496.w));
        float _506 = log2(_505);
        float _522 = log2(_294);
        _375 = (exp2(_522 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_506 * cbSceneParam._m0[78u].x)) * _496.x) / cbSceneParam._m0[78u].x)) + _291;
        _377 = (exp2(_522 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_506 * cbSceneParam._m0[78u].y)) * _496.y) / cbSceneParam._m0[78u].y)) + _292;
        _379 = (exp2(_522 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_506 * cbSceneParam._m0[78u].z)) * _496.z) / cbSceneParam._m0[78u].z)) + _293;
        _381 = _505 * _294;
    }
    else
    {
        _375 = _291;
        _377 = _292;
        _379 = _293;
        _381 = _294;
    }
    bool _532;
    vec4 _391;
    vec4 _415;
    float _417;
    float _422;
    float _423;
    float _424;
    float _425;
    bool _436;
    for (;;)
    {
        _391 = cbMatDynParam._m0[0u];
        float _393 = roundEven(_391.y);
        bool _394 = _393 == 3.0;
        float _396 = log2(_381);
        float _403 = _261 * exp2(_396 * cbSceneParam._m0[78u].x);
        float _404 = _262 * exp2(_396 * cbSceneParam._m0[78u].y);
        float _405 = _263 * exp2(_396 * cbSceneParam._m0[78u].z);
        float _412 = _226 + (-0.5);
        _415 = cbMtdParam._m0[1u];
        _417 = _415.y * _412;
        float _421 = (_393 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _422 = _421 * (_394 ? _403 : (_403 + (cbSceneParam._m0[72u].w * _375)));
        _423 = _421 * (_394 ? _404 : (_404 + (cbSceneParam._m0[72u].w * _377)));
        _424 = _421 * (_394 ? _405 : (_405 + (cbSceneParam._m0[72u].w * _379)));
        _425 = _412 * 0.999000012874603271484375;
        _436 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_436)
        {
            if ((cbInstanceData._m0[_252 + 7u].x + _425) < 0.5)
            {
                _532 = true;
                break;
            }
        }
        uint _486 = _254 + uint(_391.w);
        if ((cbInstanceData._m0[_486].w < 1.0) && ((cbInstanceData._m0[_486].w + _425) < 0.5))
        {
            _532 = true;
            break;
        }
        if ((_417 + 1.0) < _415.x)
        {
            _532 = true;
            break;
        }
        _532 = false;
        break;
    }
    float _537;
    if (_532)
    {
        discard_state = true;
        _537 = 0.0;
    }
    else
    {
        _537 = cbInstanceData._m0[_264].w;
    }
    SV_Target.x = _422;
    SV_Target.y = _423;
    SV_Target.z = _424;
    SV_Target.w = _537;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_264].w;
    discard_exit();
}


