#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_V_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_V_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _134 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _135 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _141 = inversesqrt(dot(vec3(_133, _134, _135), vec3(_133, _134, _135)));
    float _148 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _149 = _148 * NORMAL.x;
    float _150 = _148 * NORMAL.y;
    float _151 = _148 * NORMAL.z;
    float _155 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _163;
    float _164;
    float _165;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _163 = (-0.0) - _149;
        _164 = (-0.0) - _150;
        _165 = (-0.0) - _151;
    }
    else
    {
        _163 = _149;
        _164 = _150;
        _165 = _151;
    }
    vec4 _179 = texture(sampler2D(S_AMSN_V_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _182 = _179.x;
    float _183 = _179.y;
    float _184 = _179.z;
    float _185 = _179.w;
    float _186 = _185 * TEXCOORD_1.z;
    vec4 _202 = texture(sampler2D(S_AMSN_V_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _206 = _202.z;
    float _210 = (_202.x * 2.0) + (-1.0);
    float _212 = (_202.y * 2.0) + (-1.0);
    float _213 = dot(vec2(_210, _212), vec2(_210, _212));
    float _421 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _219 = sqrt(1.0 - (isnan(1.0) ? _421 : (isnan(_421) ? 1.0 : min(_421, 1.0))));
    float _222 = fma(_219, _163, fma(_212, _155 * TANGENT.x, (_141 * _133) * _210));
    float _225 = fma(_219, _164, fma(_212, _155 * TANGENT.y, (_141 * _134) * _210));
    float _228 = fma(_219, _165, fma(_212, _155 * TANGENT.z, (_141 * _135) * _210));
    float _232 = inversesqrt(dot(vec3(_222, _225, _228), vec3(_222, _225, _228)));
    float _432 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
    float _233 = isnan(1.0) ? _432 : (isnan(_432) ? 1.0 : min(_432, 1.0));
    float _443 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
    float _454 = isnan(0.0) ? _182 : (isnan(_182) ? 0.0 : max(_182, 0.0));
    float _235 = isnan(1.0) ? _454 : (isnan(_454) ? 1.0 : min(_454, 1.0));
    float _465 = isnan(0.0) ? _183 : (isnan(_183) ? 0.0 : max(_183, 0.0));
    float _236 = isnan(1.0) ? _465 : (isnan(_465) ? 1.0 : min(_465, 1.0));
    float _476 = isnan(0.0) ? _184 : (isnan(_184) ? 0.0 : max(_184, 0.0));
    float _237 = isnan(1.0) ? _476 : (isnan(_476) ? 1.0 : min(_476, 1.0));
    float _487 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    uint _240 = uint(roundEven(NORMAL.w));
    vec4 _245 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _247 = _245.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _312 = (cbMatDynParam._m0[5u].x * TEXCOORD_9) + cbMatDynParam._m0[5u].y;
        float _498 = isnan(0.0) ? _312 : (isnan(_312) ? 0.0 : max(_312, 0.0));
        float _313 = isnan(1.0) ? _498 : (isnan(_498) ? 1.0 : min(_498, 1.0));
        float _317 = (cbMatDynParam._m0[5u].z * TEXCOORD_9) + cbMatDynParam._m0[5u].w;
        float _509 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _509 : (isnan(_509) ? 1.0 : min(_509, 1.0))) - _313)) + _313) < ((_247 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _346;
    uint _267;
    vec4 _272;
    float _279;
    float _280;
    float _281;
    float _287;
    vec4 _291;
    float _293;
    float _294;
    bool _305;
    for (;;)
    {
        _267 = _240 * 13u;
        _272 = cbInstanceData._m0[(_267 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _276 = (cbMtdParam._m0[0u].x * _235) * _272.x;
        float _277 = (cbMtdParam._m0[0u].y * _236) * _272.y;
        float _278 = (cbMtdParam._m0[0u].z * _237) * _272.z;
        float _520 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
        _279 = isnan(1.0) ? _520 : (isnan(_520) ? 1.0 : min(_520, 1.0));
        float _531 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
        _280 = isnan(1.0) ? _531 : (isnan(_531) ? 1.0 : min(_531, 1.0));
        float _542 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
        _281 = isnan(1.0) ? _542 : (isnan(_542) ? 1.0 : min(_542, 1.0));
        float _553 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
        _287 = cbInstanceData._m0[_267 + 6u].w * (isnan(1.0) ? _553 : (isnan(_553) ? 1.0 : min(_553, 1.0)));
        float _288 = _247 + (-0.5);
        _291 = cbMtdParam._m0[1u];
        _293 = _291.y * _288;
        _294 = _288 * 0.999000012874603271484375;
        _305 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_305)
        {
            if ((cbInstanceData._m0[_267 + 7u].x + _294) < 0.5)
            {
                _346 = true;
                break;
            }
        }
        if ((_272.w < 1.0) && ((_272.w + _294) < 0.5))
        {
            _346 = true;
            break;
        }
        if ((_293 + _185) < _291.x)
        {
            _346 = true;
            break;
        }
        _346 = false;
        break;
    }
    if (_346)
    {
        discard_state = true;
    }
    bool _372 = cbMtdParam._m0[1u].z != 0.0;
    float _373 = _372 ? _287 : 0.0;
    SV_Target.x = ((_222 * 0.5) * _232) + 0.500488758087158203125;
    SV_Target.y = ((_225 * 0.5) * _232) + 0.500488758087158203125;
    SV_Target.z = ((_228 * 0.5) * _232) + 0.500488758087158203125;
    SV_Target.w = _373;
    SV_Target_1.x = isnan(1.0) ? _487 : (isnan(_487) ? 1.0 : min(_487, 1.0));
    SV_Target_1.y = isnan(1.0) ? _443 : (isnan(_443) ? 1.0 : min(_443, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _372 ? _287 : TEXCOORD_1.w;
    SV_Target_2.x = _279;
    SV_Target_2.y = _280;
    SV_Target_2.z = _281;
    SV_Target_2.w = _372 ? _287 : (float(floatBitsToUint(cbInstanceData._m0[_267 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _373;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _373;
    discard_exit();
}


