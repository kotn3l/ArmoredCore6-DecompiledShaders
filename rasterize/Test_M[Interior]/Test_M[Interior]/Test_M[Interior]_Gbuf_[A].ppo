#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D Test_M_Interior_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D Test_M_Interior_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D Test_M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 4) uniform texture2D Test_M_Interior_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

float _416;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _150 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _151 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _152 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _157 = inversesqrt(dot(vec3(_150, _151, _152), vec3(_150, _151, _152)));
    float _158 = _157 * _150;
    float _159 = _157 * _151;
    float _160 = _157 * _152;
    float _164 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _165 = _164 * NORMAL.x;
    float _166 = _164 * NORMAL.y;
    float _167 = _164 * NORMAL.z;
    float _171 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _172 = _171 * TANGENT.x;
    float _173 = _171 * TANGENT.y;
    float _174 = _171 * TANGENT.z;
    float _179;
    float _180;
    float _181;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _179 = (-0.0) - _165;
        _180 = (-0.0) - _166;
        _181 = (-0.0) - _167;
    }
    else
    {
        _179 = _165;
        _180 = _166;
        _181 = _167;
    }
    float _226 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _236 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _226);
    float _237 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _226);
    float _238 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _226);
    vec4 _256 = texture(sampler2D(Test_M_Interior_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _262 = _256.w;
    float _275 = (((cbMtdParam._m0[10u].x - cbMtdParam._m0[11u].x) * _262) + cbMtdParam._m0[11u].x) * _256.x;
    float _277 = (((cbMtdParam._m0[10u].y - cbMtdParam._m0[11u].y) * _262) + cbMtdParam._m0[11u].y) * _256.y;
    float _279 = (((cbMtdParam._m0[10u].z - cbMtdParam._m0[11u].z) * _262) + cbMtdParam._m0[11u].z) * _256.z;
    vec4 _291 = texture(sampler2D(Test_M_Interior_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _295 = _291.z;
    float _299 = (_291.x * 2.0) + (-1.0);
    float _301 = (_291.y * 2.0) + (-1.0);
    float _302 = dot(vec2(_299, _301), vec2(_299, _301));
    float _725 = isnan(0.0) ? _302 : (isnan(_302) ? 0.0 : max(_302, 0.0));
    float _308 = sqrt(1.0 - (isnan(1.0) ? _725 : (isnan(_725) ? 1.0 : min(_725, 1.0))));
    vec4 _344 = texture(sampler2D(Test_M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _357 = inversesqrt(dot(vec3(_158, _159, _160), vec3(_158, _159, _160)));
    float _364 = inversesqrt(dot(vec3(_172, _173, _174), vec3(_172, _173, _174)));
    float _380 = (-0.0) - dot(vec3(_236, _237, _238), vec3(_357 * _158, _357 * _159, _357 * _160));
    float _381 = (-0.0) - dot(vec3(_236, _237, _238), vec3(_364 * _172, _364 * _173, _364 * _174));
    float _382 = (-0.0) - dot(vec3(_236, _237, _238), vec3((-0.0) - _179, (-0.0) - _180, (-0.0) - _181));
    float _386 = inversesqrt(dot(vec3(_380, _381, _382), vec3(_380, _381, _382)));
    float _387 = _386 * _382;
    float _392 = ((cbMtdParam._m0[15u].y * _380) * _386) + (((_344.x * 2.0) + (-1.0)) * cbMtdParam._m0[15u].w);
    float _393 = ((cbMtdParam._m0[15u].z * _381) * _386) + (((_344.y * 2.0) + (-1.0)) * cbMtdParam._m0[16u].x);
    float _396 = fract(cbMtdParam._m0[15u].y * TEXCOORD.x);
    float _397 = fract(cbMtdParam._m0[15u].z * TEXCOORD.y);
    float _414;
    float _417;
    float _419;
    if (_392 > 0.0)
    {
        float _400 = (1.0 - _396) / _392;
        _414 = _400;
        _417 = ((cbMtdParam._m0[14u].x + 1.0) - fract(_400 * _387)) * 0.16666667163372039794921875;
        _419 = (fract((_400 * _393) + _397) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_5_4_ladder;
        float frontier_phi_5_4_ladder_1;
        float frontier_phi_5_4_ladder_2;
        if (_392 < 0.0)
        {
            float _415 = ((-0.0) - _396) / _392;
            frontier_phi_5_4_ladder = _415;
            frontier_phi_5_4_ladder_1 = (fract(_415 * _387) + cbMtdParam._m0[14u].x) * 0.16666667163372039794921875;
            frontier_phi_5_4_ladder_2 = (fract((_415 * _393) + _397) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_5_4_ladder = _416;
            frontier_phi_5_4_ladder_1 = 0.0;
            frontier_phi_5_4_ladder_2 = 0.0;
        }
        _414 = frontier_phi_5_4_ladder;
        _417 = frontier_phi_5_4_ladder_1;
        _419 = frontier_phi_5_4_ladder_2;
    }
    float _445;
    float _447;
    float _449;
    if (_393 > 0.0)
    {
        float _432 = (1.0 - _397) / _393;
        float frontier_phi_10_7_ladder;
        float frontier_phi_10_7_ladder_1;
        float frontier_phi_10_7_ladder_2;
        if (_432 < _414)
        {
            frontier_phi_10_7_ladder = _432;
            frontier_phi_10_7_ladder_1 = (fract((_432 * _392) + _396) + cbMtdParam._m0[14u].x) * 0.16666667163372039794921875;
            frontier_phi_10_7_ladder_2 = (fract(_432 * _387) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_10_7_ladder = _414;
            frontier_phi_10_7_ladder_1 = _417;
            frontier_phi_10_7_ladder_2 = _419;
        }
        _445 = frontier_phi_10_7_ladder;
        _447 = frontier_phi_10_7_ladder_1;
        _449 = frontier_phi_10_7_ladder_2;
    }
    else
    {
        float frontier_phi_10_8_ladder;
        float frontier_phi_10_8_ladder_1;
        float frontier_phi_10_8_ladder_2;
        if (_393 < 0.0)
        {
            float _446 = ((-0.0) - _397) / _393;
            float frontier_phi_10_8_ladder_11_ladder;
            float frontier_phi_10_8_ladder_11_ladder_1;
            float frontier_phi_10_8_ladder_11_ladder_2;
            if (_446 < _414)
            {
                frontier_phi_10_8_ladder_11_ladder = _446;
                frontier_phi_10_8_ladder_11_ladder_1 = (fract((_446 * _392) + _396) + cbMtdParam._m0[14u].x) * 0.16666667163372039794921875;
                frontier_phi_10_8_ladder_11_ladder_2 = fract(_446 * _387) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_10_8_ladder_11_ladder = _414;
                frontier_phi_10_8_ladder_11_ladder_1 = _417;
                frontier_phi_10_8_ladder_11_ladder_2 = _419;
            }
            frontier_phi_10_8_ladder = frontier_phi_10_8_ladder_11_ladder;
            frontier_phi_10_8_ladder_1 = frontier_phi_10_8_ladder_11_ladder_1;
            frontier_phi_10_8_ladder_2 = frontier_phi_10_8_ladder_11_ladder_2;
        }
        else
        {
            frontier_phi_10_8_ladder = _414;
            frontier_phi_10_8_ladder_1 = _417;
            frontier_phi_10_8_ladder_2 = _419;
        }
        _445 = frontier_phi_10_8_ladder;
        _447 = frontier_phi_10_8_ladder_1;
        _449 = frontier_phi_10_8_ladder_2;
    }
    float _453 = (_387 > 0.0) ? (cbMtdParam._m0[13u].w / _387) : 5000.0;
    float _466;
    float _467;
    if (_453 < _445)
    {
        _466 = ((_396 + cbMtdParam._m0[14u].x) + (_453 * _392)) * 0.16666667163372039794921875;
        _467 = (((_453 * _393) + _397) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _466 = _447;
        _467 = _449;
    }
    vec4 _469 = texture(sampler2D(Test_M_Interior_snp_0_Texture2D_5, SS_WrapLinear), vec2(_466, _467));
    float _476 = fma(_308, _179, fma(_301, _172, _299 * _158));
    float _479 = fma(_308, _180, fma(_301, _173, _299 * _159));
    float _482 = fma(_308, _181, fma(_301, _174, _299 * _160));
    float _486 = inversesqrt(dot(vec3(_476, _479, _482), vec3(_476, _479, _482)));
    float _736 = isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0));
    float _747 = isnan(0.0) ? _275 : (isnan(_275) ? 0.0 : max(_275, 0.0));
    float _488 = isnan(1.0) ? _747 : (isnan(_747) ? 1.0 : min(_747, 1.0));
    float _758 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    float _489 = isnan(1.0) ? _758 : (isnan(_758) ? 1.0 : min(_758, 1.0));
    float _769 = isnan(0.0) ? _279 : (isnan(_279) ? 0.0 : max(_279, 0.0));
    float _490 = isnan(1.0) ? _769 : (isnan(_769) ? 1.0 : min(_769, 1.0));
    uint _492 = uint(roundEven(NORMAL.w));
    vec4 _497 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _499 = _497.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _566 = sqrt(((_236 * _236) + (_237 * _237)) + (_238 * _238));
        float _573 = (cbMatDynParam._m0[5u].x * _566) + cbMatDynParam._m0[5u].y;
        float _780 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
        float _574 = isnan(1.0) ? _780 : (isnan(_780) ? 1.0 : min(_780, 1.0));
        float _578 = (cbMatDynParam._m0[5u].z * _566) + cbMatDynParam._m0[5u].w;
        float _791 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _791 : (isnan(_791) ? 1.0 : min(_791, 1.0))) - _574)) + _574) < ((_499 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _606;
    uint _525;
    vec4 _529;
    float _530;
    float _531;
    float _532;
    float _536;
    float _537;
    float _538;
    float _542;
    vec4 _546;
    float _548;
    float _549;
    bool _560;
    for (;;)
    {
        _525 = _492 * 13u;
        _529 = cbInstanceData._m0[(_525 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _530 = _529.x;
        _531 = _529.y;
        _532 = _529.z;
        float _533 = (cbMtdParam._m0[0u].x * _488) * _530;
        float _534 = (cbMtdParam._m0[0u].y * _489) * _531;
        float _535 = (cbMtdParam._m0[0u].z * _490) * _532;
        float _802 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
        _536 = isnan(1.0) ? _802 : (isnan(_802) ? 1.0 : min(_802, 1.0));
        float _813 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
        _537 = isnan(1.0) ? _813 : (isnan(_813) ? 1.0 : min(_813, 1.0));
        float _824 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
        _538 = isnan(1.0) ? _824 : (isnan(_824) ? 1.0 : min(_824, 1.0));
        _542 = cbInstanceData._m0[_525 + 6u].w;
        float _543 = _499 + (-0.5);
        _546 = cbMtdParam._m0[1u];
        _548 = _546.y * _543;
        _549 = _543 * 0.999000012874603271484375;
        _560 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_560)
        {
            if ((cbInstanceData._m0[_525 + 7u].x + _549) < 0.5)
            {
                _606 = true;
                break;
            }
        }
        if ((_529.w < 1.0) && ((_529.w + _549) < 0.5))
        {
            _606 = true;
            break;
        }
        if ((_548 + 1.0) < _546.x)
        {
            _606 = true;
            break;
        }
        _606 = false;
        break;
    }
    if (_606)
    {
        discard_state = true;
    }
    bool _648 = cbMtdParam._m0[1u].z != 0.0;
    float _649 = _648 ? _542 : 0.0;
    SV_Target.x = ((_476 * 0.5) * _486) + 0.500488758087158203125;
    SV_Target.y = ((_479 * 0.5) * _486) + 0.500488758087158203125;
    SV_Target.z = ((_482 * 0.5) * _486) + 0.500488758087158203125;
    SV_Target.w = _649;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _736 : (isnan(_736) ? 1.0 : min(_736, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _648 ? _542 : TEXCOORD.z;
    SV_Target_2.x = _536;
    SV_Target_2.y = _537;
    SV_Target_2.z = _538;
    SV_Target_2.w = _648 ? _542 : (float(floatBitsToUint(cbInstanceData._m0[_525 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _649;
    SV_Target_4.x = (((cbMtdParam._m0[12u].x * _262) * _469.x) * _530) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((cbMtdParam._m0[12u].y * _262) * _469.y) * _531) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (((cbMtdParam._m0[12u].z * _262) * _469.z) * _532) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _649;
    discard_exit();
}


