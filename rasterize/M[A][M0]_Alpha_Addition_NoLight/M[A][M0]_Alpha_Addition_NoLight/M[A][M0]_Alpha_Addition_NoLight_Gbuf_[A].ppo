#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Alpha_Addition_NoLight_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _122 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _123 = _122 * NORMAL.x;
    float _124 = _122 * NORMAL.y;
    float _125 = _122 * NORMAL.z;
    float _130;
    float _131;
    float _132;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _130 = (-0.0) - _123;
        _131 = (-0.0) - _124;
        _132 = (-0.0) - _125;
    }
    else
    {
        _130 = _123;
        _131 = _124;
        _132 = _125;
    }
    vec4 _153 = texture(sampler2D(M_A_M0_Alpha_Addition_NoLight_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _160 = _153.x * cbMtdParam._m0[9u].x;
    float _161 = _153.y * cbMtdParam._m0[9u].y;
    float _162 = _153.z * cbMtdParam._m0[9u].z;
    float _163 = _153.w * cbMtdParam._m0[9u].w;
    float _164 = _163 * TEXCOORD_1.z;
    float _168 = inversesqrt(dot(vec3(_130, _131, _132), vec3(_130, _131, _132)));
    float _350 = isnan(0.0) ? _164 : (isnan(_164) ? 0.0 : max(_164, 0.0));
    float _170 = isnan(1.0) ? _350 : (isnan(_350) ? 1.0 : min(_350, 1.0));
    float _171 = isnan(0.0) ? _160 : (isnan(_160) ? 0.0 : max(_160, 0.0));
    float _172 = isnan(0.0) ? _161 : (isnan(_161) ? 0.0 : max(_161, 0.0));
    float _173 = isnan(0.0) ? _162 : (isnan(_162) ? 0.0 : max(_162, 0.0));
    uint _175 = uint(roundEven(NORMAL.w));
    vec4 _180 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _182 = _180.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _243 = (cbMatDynParam._m0[5u].x * TEXCOORD_9) + cbMatDynParam._m0[5u].y;
        float _376 = isnan(0.0) ? _243 : (isnan(_243) ? 0.0 : max(_243, 0.0));
        float _244 = isnan(1.0) ? _376 : (isnan(_376) ? 1.0 : min(_376, 1.0));
        float _248 = (cbMatDynParam._m0[5u].z * TEXCOORD_9) + cbMatDynParam._m0[5u].w;
        float _387 = isnan(0.0) ? _248 : (isnan(_248) ? 0.0 : max(_248, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _387 : (isnan(_387) ? 1.0 : min(_387, 1.0))) - _244)) + _244) < ((_182 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _277;
    uint _202;
    vec4 _207;
    float _211;
    float _212;
    float _213;
    float _218;
    vec4 _222;
    float _224;
    float _225;
    bool _236;
    for (;;)
    {
        _202 = _175 * 13u;
        _207 = cbInstanceData._m0[(_202 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _211 = (cbMtdParam._m0[0u].x * _171) * _207.x;
        _212 = (cbMtdParam._m0[0u].y * _172) * _207.y;
        _213 = (cbMtdParam._m0[0u].z * _173) * _207.z;
        _218 = cbInstanceData._m0[_202 + 6u].w * _170;
        float _219 = _182 + (-0.5);
        _222 = cbMtdParam._m0[1u];
        _224 = _222.y * _219;
        _225 = _219 * 0.999000012874603271484375;
        _236 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_236)
        {
            if ((cbInstanceData._m0[_202 + 7u].x + _225) < 0.5)
            {
                _277 = true;
                break;
            }
        }
        if ((_207.w < 1.0) && ((_207.w + _225) < 0.5))
        {
            _277 = true;
            break;
        }
        if ((_224 + _163) < _222.x)
        {
            _277 = true;
            break;
        }
        _277 = false;
        break;
    }
    if (_277)
    {
        discard_state = true;
    }
    bool _302 = cbMtdParam._m0[1u].z != 0.0;
    float _303 = _302 ? _218 : 0.0;
    SV_Target.x = ((_130 * 0.5) * _168) + 0.500488758087158203125;
    SV_Target.y = ((_131 * 0.5) * _168) + 0.500488758087158203125;
    SV_Target.z = ((_132 * 0.5) * _168) + 0.500488758087158203125;
    SV_Target.w = _303;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _302 ? _218 : TEXCOORD_1.w;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _218;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _303;
    SV_Target_4.x = _211 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _212 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _213 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _303;
    discard_exit();
}


