#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Alpha_Addition_NoLight_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _114 = texture(sampler2D(M_A_M0_Alpha_Addition_NoLight_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _121 = _114.x * cbMtdParam._m0[9u].x;
    float _122 = _114.y * cbMtdParam._m0[9u].y;
    float _123 = _114.z * cbMtdParam._m0[9u].z;
    float _125 = (cbMtdParam._m0[9u].w * TEXCOORD_1.z) * _114.w;
    float _454 = isnan(0.0) ? _125 : (isnan(_125) ? 0.0 : max(_125, 0.0));
    float _147 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _165 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _188 = uint(roundEven(NORMAL.w)) * 13u;
    uint _191 = (_188 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _205 = cbInstanceData._m0[_188 + 6u].w * (isnan(1.0) ? _454 : (isnan(_454) ? 1.0 : min(_454, 1.0)));
    float _211 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _212 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _227 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_211, _212, (log2((isnan(cbSceneParam._m0[77u].w) ? _147 : (isnan(_147) ? cbSceneParam._m0[77u].w : min(_147, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _230 = _227.x;
    float _231 = _227.y;
    float _232 = _227.z;
    float _233 = _227.w;
    float _318;
    float _320;
    float _322;
    float _324;
    if (_147 > cbSceneParam._m0[78u].w)
    {
        float _279 = isnan(_147) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _147 : min(cbSceneParam._m0[80u].w, _147));
        float _280 = _279 / _147;
        float _291 = _280 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _165));
        float _292 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _165)) * _280;
        float _293 = (-0.0) - _292;
        float _295 = _280 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _165));
        float _297 = (cbSceneParam._m0[77u].w * _293) / _279;
        float _298 = _297 + cbSceneParam._m0[79u].w;
        float _299 = cbSceneParam._m0[79u].w - _292;
        float _305 = sqrt(((_291 * _291) + (_292 * _292)) + (_295 * _295));
        float _308 = (1.0 - (cbSceneParam._m0[77u].w / _279)) * _305;
        float _314 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _316 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _409;
        if (abs((_293 - _297) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _409 = ((((_298 > 0.0) ? exp2(_314 * _298) : (2.0 - exp2(_316 * _298))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _308;
        }
        else
        {
            float _382 = 1.0 / cbSceneParam._m0[80u].x;
            float _383 = isnan(_299) ? _298 : (isnan(_298) ? _299 : max(_298, _299));
            float _384 = isnan(_299) ? _298 : (isnan(_298) ? _299 : min(_298, _299));
            float _393 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : min(_383, 0.0));
            float _394 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : min(_384, 0.0));
            _409 = ((abs(_305 / _293) * cbSceneParam._m0[80u].y) * ((((_393 - _394) * 2.0) - ((exp2(_314 * (isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0)))) - exp2(_314 * (isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0))))) * _382)) - ((exp2(_316 * _393) - exp2(_316 * _394)) * _382))) + (_308 * cbSceneParam._m0[80u].z);
        }
        vec4 _411 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_211, _212, 1.0), 0.0);
        float _420 = exp2((_409 * (-1.44269502162933349609375)) * (1.0 - _411.w));
        float _421 = log2(_420);
        float _437 = log2(_233);
        _318 = (exp2(_437 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_421 * cbSceneParam._m0[78u].x)) * _411.x) / cbSceneParam._m0[78u].x)) + _230;
        _320 = (exp2(_437 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_421 * cbSceneParam._m0[78u].y)) * _411.y) / cbSceneParam._m0[78u].y)) + _231;
        _322 = (exp2(_437 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_421 * cbSceneParam._m0[78u].z)) * _411.z) / cbSceneParam._m0[78u].z)) + _232;
        _324 = _420 * _233;
    }
    else
    {
        _318 = _230;
        _320 = _231;
        _322 = _232;
        _324 = _233;
    }
    float _336 = roundEven(cbMatDynParam._m0[0u].y);
    bool _337 = _336 == 3.0;
    float _339 = log2(_324);
    float _346 = ((cbMtdParam._m0[0u].x * (isnan(0.0) ? _121 : (isnan(_121) ? 0.0 : max(_121, 0.0)))) * cbInstanceData._m0[_191].x) * exp2(_339 * cbSceneParam._m0[78u].x);
    float _347 = ((cbMtdParam._m0[0u].y * (isnan(0.0) ? _122 : (isnan(_122) ? 0.0 : max(_122, 0.0)))) * cbInstanceData._m0[_191].y) * exp2(_339 * cbSceneParam._m0[78u].y);
    float _348 = ((cbMtdParam._m0[0u].z * (isnan(0.0) ? _123 : (isnan(_123) ? 0.0 : max(_123, 0.0)))) * cbInstanceData._m0[_191].z) * exp2(_339 * cbSceneParam._m0[78u].z);
    float _358 = (_336 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _358 * (_337 ? _346 : (_346 + (cbSceneParam._m0[72u].w * _318)));
    SV_Target.y = _358 * (_337 ? _347 : (_347 + (cbSceneParam._m0[72u].w * _320)));
    SV_Target.z = _358 * (_337 ? _348 : (_348 + (cbSceneParam._m0[72u].w * _322)));
    SV_Target.w = _205;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _205;
}


