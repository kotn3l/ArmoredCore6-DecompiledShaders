#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Alpha_Addition_NoLight_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _563;
float _564;
float _565;
float _566;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _123 = texture(sampler2D(M_A_M0_Alpha_Addition_NoLight_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _130 = _123.x * cbMtdParam._m0[9u].x;
    float _131 = _123.y * cbMtdParam._m0[9u].y;
    float _132 = _123.z * cbMtdParam._m0[9u].z;
    float _133 = _123.w * cbMtdParam._m0[9u].w;
    float _134 = _133 * TEXCOORD_1.z;
    float _575 = isnan(0.0) ? _134 : (isnan(_134) ? 0.0 : max(_134, 0.0));
    float _156 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _198 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _208 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _198);
    float _209 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _198);
    float _210 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _198);
    vec4 _215 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _217 = _215.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _301 = sqrt(((_208 * _208) + (_209 * _209)) + (_210 * _210));
        float _308 = (cbMatDynParam._m0[5u].x * _301) + cbMatDynParam._m0[5u].y;
        float _601 = isnan(0.0) ? _308 : (isnan(_308) ? 0.0 : max(_308, 0.0));
        float _309 = isnan(1.0) ? _601 : (isnan(_601) ? 1.0 : min(_601, 1.0));
        float _313 = (cbMatDynParam._m0[5u].z * _301) + cbMatDynParam._m0[5u].w;
        float _612 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _612 : (isnan(_612) ? 1.0 : min(_612, 1.0))) - _309)) + _309) < ((_217 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _243 = uint(roundEven(NORMAL.w)) * 13u;
    uint _245 = _243 + 9u;
    uint _246 = _245 + uint(cbMatDynParam._m0[0u].w);
    float _252 = (cbMtdParam._m0[0u].x * (isnan(0.0) ? _130 : (isnan(_130) ? 0.0 : max(_130, 0.0)))) * cbInstanceData._m0[_246].x;
    float _253 = (cbMtdParam._m0[0u].y * (isnan(0.0) ? _131 : (isnan(_131) ? 0.0 : max(_131, 0.0)))) * cbInstanceData._m0[_246].y;
    float _254 = (cbMtdParam._m0[0u].z * (isnan(0.0) ? _132 : (isnan(_132) ? 0.0 : max(_132, 0.0)))) * cbInstanceData._m0[_246].z;
    float _259 = cbInstanceData._m0[_243 + 6u].w * (isnan(1.0) ? _575 : (isnan(_575) ? 1.0 : min(_575, 1.0)));
    float _265 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _266 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _281 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_265, _266, (log2((isnan(cbSceneParam._m0[77u].w) ? _156 : (isnan(_156) ? cbSceneParam._m0[77u].w : min(_156, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _284 = _281.x;
    float _285 = _281.y;
    float _286 = _281.z;
    float _287 = _281.w;
    float _369;
    float _371;
    float _373;
    float _375;
    if (_156 > cbSceneParam._m0[78u].w)
    {
        float _330 = isnan(_156) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _156 : min(cbSceneParam._m0[80u].w, _156));
        float _331 = _330 / _156;
        float _342 = _331 * _208;
        float _343 = _209 * _331;
        float _344 = (-0.0) - _343;
        float _346 = _331 * _210;
        float _348 = (cbSceneParam._m0[77u].w * _344) / _330;
        float _349 = _348 + cbSceneParam._m0[79u].w;
        float _350 = cbSceneParam._m0[79u].w - _343;
        float _356 = sqrt(((_342 * _342) + (_343 * _343)) + (_346 * _346));
        float _359 = (1.0 - (cbSceneParam._m0[77u].w / _330)) * _356;
        float _365 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _367 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _491;
        if (abs((_344 - _348) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _491 = ((((_349 > 0.0) ? exp2(_365 * _349) : (2.0 - exp2(_367 * _349))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _359;
        }
        else
        {
            float _446 = 1.0 / cbSceneParam._m0[80u].x;
            float _447 = isnan(_350) ? _349 : (isnan(_349) ? _350 : max(_349, _350));
            float _448 = isnan(_350) ? _349 : (isnan(_349) ? _350 : min(_349, _350));
            float _457 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : min(_447, 0.0));
            float _458 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : min(_448, 0.0));
            _491 = ((abs(_356 / _344) * cbSceneParam._m0[80u].y) * ((((_457 - _458) * 2.0) - ((exp2(_365 * (isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0)))) - exp2(_365 * (isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0))))) * _446)) - ((exp2(_367 * _457) - exp2(_367 * _458)) * _446))) + (_359 * cbSceneParam._m0[80u].z);
        }
        vec4 _493 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_265, _266, 1.0), 0.0);
        float _502 = exp2((_491 * (-1.44269502162933349609375)) * (1.0 - _493.w));
        float _503 = log2(_502);
        float _519 = log2(_287);
        _369 = (exp2(_519 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_503 * cbSceneParam._m0[78u].x)) * _493.x) / cbSceneParam._m0[78u].x)) + _284;
        _371 = (exp2(_519 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_503 * cbSceneParam._m0[78u].y)) * _493.y) / cbSceneParam._m0[78u].y)) + _285;
        _373 = (exp2(_519 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_503 * cbSceneParam._m0[78u].z)) * _493.z) / cbSceneParam._m0[78u].z)) + _286;
        _375 = _502 * _287;
    }
    else
    {
        _369 = _284;
        _371 = _285;
        _373 = _286;
        _375 = _287;
    }
    bool _529;
    vec4 _385;
    vec4 _409;
    float _411;
    float _416;
    float _417;
    float _418;
    float _419;
    bool _430;
    for (;;)
    {
        _385 = cbMatDynParam._m0[0u];
        float _387 = roundEven(_385.y);
        bool _388 = _387 == 3.0;
        float _390 = log2(_375);
        float _397 = _252 * exp2(_390 * cbSceneParam._m0[78u].x);
        float _398 = _253 * exp2(_390 * cbSceneParam._m0[78u].y);
        float _399 = _254 * exp2(_390 * cbSceneParam._m0[78u].z);
        float _406 = _217 + (-0.5);
        _409 = cbMtdParam._m0[1u];
        _411 = _409.y * _406;
        float _415 = (_387 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _416 = _415 * (_388 ? _397 : (_397 + (cbSceneParam._m0[72u].w * _369)));
        _417 = _415 * (_388 ? _398 : (_398 + (cbSceneParam._m0[72u].w * _371)));
        _418 = _415 * (_388 ? _399 : (_399 + (cbSceneParam._m0[72u].w * _373)));
        _419 = _406 * 0.999000012874603271484375;
        _430 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_430)
        {
            if ((cbInstanceData._m0[_243 + 7u].x + _419) < 0.5)
            {
                _529 = true;
                break;
            }
        }
        uint _483 = _245 + uint(_385.w);
        if ((cbInstanceData._m0[_483].w < 1.0) && ((cbInstanceData._m0[_483].w + _419) < 0.5))
        {
            _529 = true;
            break;
        }
        if ((_411 + _133) < _409.x)
        {
            _529 = true;
            break;
        }
        _529 = false;
        break;
    }
    float _534;
    if (_529)
    {
        discard_state = true;
        _534 = 0.0;
    }
    else
    {
        _534 = _259;
    }
    SV_Target.x = _416;
    SV_Target.y = _417;
    SV_Target.z = _418;
    SV_Target.w = _534;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _259;
    discard_exit();
}


