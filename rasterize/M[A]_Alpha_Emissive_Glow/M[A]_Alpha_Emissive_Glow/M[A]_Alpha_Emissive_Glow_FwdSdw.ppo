#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_A_Alpha_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_A_Alpha_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _162 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _163 = _162 * NORMAL.x;
    float _164 = _162 * NORMAL.y;
    float _165 = _162 * NORMAL.z;
    float _170;
    float _171;
    float _172;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _170 = (-0.0) - _163;
        _171 = (-0.0) - _164;
        _172 = (-0.0) - _165;
    }
    else
    {
        _170 = _163;
        _171 = _164;
        _172 = _165;
    }
    vec4 _186 = texture(sampler2D(M_A_Alpha_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _189 = _186.x;
    float _190 = _186.y;
    float _191 = _186.z;
    float _193 = _186.w * TEXCOORD_1.z;
    vec4 _209 = texture(sampler2D(M_A_Alpha_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _220 = inversesqrt(dot(vec3(_170, _171, _172), vec3(_170, _171, _172)));
    float _221 = _220 * _170;
    float _222 = _220 * _171;
    float _223 = _220 * _172;
    float _2491 = isnan(0.0) ? _189 : (isnan(_189) ? 0.0 : max(_189, 0.0));
    float _2502 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _2513 = isnan(0.0) ? _191 : (isnan(_191) ? 0.0 : max(_191, 0.0));
    float _2524 = isnan(0.0) ? _193 : (isnan(_193) ? 0.0 : max(_193, 0.0));
    float _228 = isnan(1.0) ? _2524 : (isnan(_2524) ? 1.0 : min(_2524, 1.0));
    float _244 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _286 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _296 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _286);
    float _297 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _286);
    float _298 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _286);
    float _302 = inversesqrt(dot(vec3(_296, _297, _298), vec3(_296, _297, _298)));
    float _303 = _296 * _302;
    float _304 = _297 * _302;
    float _305 = _298 * _302;
    float _311 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _312 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _333 = fma(_223, cbSceneParam._m0[5u].z, fma(_222, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _221));
    float _336 = fma(_223, cbSceneParam._m0[6u].z, fma(_222, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _221));
    float _339 = fma(_223, cbSceneParam._m0[7u].z, fma(_222, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _221));
    uint _352 = uint(roundEven(NORMAL.w)) * 13u;
    uint _354 = _352 + 9u;
    uint _355 = _354 + uint(cbMatDynParam._m0[0u].w);
    float _361 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2491 : (isnan(_2491) ? 1.0 : min(_2491, 1.0)))) * cbInstanceData._m0[_355].x;
    float _362 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2502 : (isnan(_2502) ? 1.0 : min(_2502, 1.0)))) * cbInstanceData._m0[_355].y;
    float _363 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2513 : (isnan(_2513) ? 1.0 : min(_2513, 1.0)))) * cbInstanceData._m0[_355].z;
    float _2535 = isnan(0.0) ? _361 : (isnan(_361) ? 0.0 : max(_361, 0.0));
    float _364 = isnan(1.0) ? _2535 : (isnan(_2535) ? 1.0 : min(_2535, 1.0));
    float _2546 = isnan(0.0) ? _362 : (isnan(_362) ? 0.0 : max(_362, 0.0));
    float _365 = isnan(1.0) ? _2546 : (isnan(_2546) ? 1.0 : min(_2546, 1.0));
    float _2557 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _366 = isnan(1.0) ? _2557 : (isnan(_2557) ? 1.0 : min(_2557, 1.0));
    vec4 _375 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _311, cbSceneParam._m0[86u].y * _312));
    float _378 = _375.x * TEXCOORD_1.w;
    float _400 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _404 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _408 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _711;
    float _712;
    float _713;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _435 = fma(_408, cbModelParam._m0[26u].z, fma(_404, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _400));
        float _439 = fma(_408, cbModelParam._m0[27u].z, fma(_404, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _400));
        float _443 = fma(_408, cbModelParam._m0[28u].z, fma(_404, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _400));
        float _468 = _400 + _221;
        float _469 = _404 + _222;
        float _470 = _408 + _223;
        float _480 = fma(_470, cbModelParam._m0[26u].z, fma(_469, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _468)) - _435;
        float _481 = fma(_470, cbModelParam._m0[27u].z, fma(_469, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _468)) - _439;
        float _482 = fma(_470, cbModelParam._m0[28u].z, fma(_469, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _468)) - _443;
        float _486 = inversesqrt(dot(vec3(_480, _481, _482), vec3(_480, _481, _482)));
        float _499 = ((_486 * _480) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_435 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _500 = ((_486 * _481) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_439 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _501 = ((_486 * _482) / cbModelParam._m0[34u].z) + ((((((_443 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _504 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_499, _500, _501), 0.0);
        vec4 _511 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_499, _500, _501), 0.0);
        vec4 _518 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_499, _500, _501), 0.0);
        vec4 _525 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_499, _500, _501), 0.0);
        float _538 = exp2((_504.w + (-0.5)) * 20.0) * 2.0;
        float _546 = exp2((_511.w + (-0.5)) * 20.0) * 2.0;
        float _553 = exp2((_518.w + (-0.5)) * 20.0) * 2.0;
        float _560 = exp2((_525.w + (-0.5)) * 20.0) * 2.0;
        float _561 = _560 * (_525.x + (-0.5));
        float _562 = _560 * (_525.y + (-0.5));
        float _563 = _560 * (_525.z + (-0.5));
        float _564 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0));
        float _565 = isnan(0.0) ? _562 : (isnan(_562) ? 0.0 : max(_562, 0.0));
        float _566 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
        float _568 = ((_504.x + (-0.5)) * 0.5) * _538;
        float _570 = ((_511.x + (-0.5)) * 0.5) * _546;
        float _572 = ((_518.x + (-0.5)) * 0.5) * _553;
        float _573 = dot(vec3(_568, _570, _572), vec3(_568, _570, _572));
        float _578 = (_573 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_573);
        float _587 = (dot(vec3(_221, _222, _223), vec3(_578 * _568, _578 * _570, _578 * _572)) + 1.0) * 0.5;
        float _2583 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
        float _597 = sqrt(((_570 * _570) + (_568 * _568)) + (_572 * _572)) / (_564 + 9.9999997473787516355514526367188e-06);
        float _2594 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
        float _598 = isnan(1.0) ? _2594 : (isnan(_2594) ? 1.0 : min(_2594, 1.0));
        float _599 = _598 * 2.0;
        float _603 = (1.0 - _598) / (_598 + 1.0);
        float _2605 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
        float _604 = isnan(1.0) ? _2605 : (isnan(_2605) ? 1.0 : min(_2605, 1.0));
        float _613 = ((((1.0 - _604) * (_599 + 2.0)) * exp2(log2(isnan(1.0) ? _2583 : (isnan(_2583) ? 1.0 : min(_2583, 1.0))) * (_599 + 1.0))) + _604) * _564;
        float _615 = ((_504.y + (-0.5)) * 0.5) * _538;
        float _617 = ((_511.y + (-0.5)) * 0.5) * _546;
        float _619 = ((_518.y + (-0.5)) * 0.5) * _553;
        float _620 = dot(vec3(_615, _617, _619), vec3(_615, _617, _619));
        float _625 = (_620 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_620);
        float _633 = (dot(vec3(_221, _222, _223), vec3(_625 * _615, _625 * _617, _625 * _619)) + 1.0) * 0.5;
        float _2616 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
        float _642 = sqrt(((_617 * _617) + (_615 * _615)) + (_619 * _619)) / (_565 + 9.9999997473787516355514526367188e-06);
        float _2627 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
        float _643 = isnan(1.0) ? _2627 : (isnan(_2627) ? 1.0 : min(_2627, 1.0));
        float _644 = _643 * 2.0;
        float _648 = (1.0 - _643) / (_643 + 1.0);
        float _2638 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
        float _649 = isnan(1.0) ? _2638 : (isnan(_2638) ? 1.0 : min(_2638, 1.0));
        float _658 = ((((1.0 - _649) * (_644 + 2.0)) * exp2(log2(isnan(1.0) ? _2616 : (isnan(_2616) ? 1.0 : min(_2616, 1.0))) * (_644 + 1.0))) + _649) * _565;
        float _660 = ((_504.z + (-0.5)) * 0.5) * _538;
        float _662 = ((_511.z + (-0.5)) * 0.5) * _546;
        float _664 = ((_518.z + (-0.5)) * 0.5) * _553;
        float _665 = dot(vec3(_660, _662, _664), vec3(_660, _662, _664));
        float _670 = (_665 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_665);
        float _678 = (dot(vec3(_221, _222, _223), vec3(_670 * _660, _670 * _662, _670 * _664)) + 1.0) * 0.5;
        float _2649 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
        float _687 = sqrt(((_662 * _662) + (_660 * _660)) + (_664 * _664)) / (_566 + 9.9999997473787516355514526367188e-06);
        float _2660 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
        float _688 = isnan(1.0) ? _2660 : (isnan(_2660) ? 1.0 : min(_2660, 1.0));
        float _689 = _688 * 2.0;
        float _693 = (1.0 - _688) / (_688 + 1.0);
        float _2671 = isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0));
        float _694 = isnan(1.0) ? _2671 : (isnan(_2671) ? 1.0 : min(_2671, 1.0));
        float _703 = ((((1.0 - _694) * (_689 + 2.0)) * exp2(log2(isnan(1.0) ? _2649 : (isnan(_2649) ? 1.0 : min(_2649, 1.0))) * (_689 + 1.0))) + _694) * _566;
        _711 = cbModelParam._m0[36u].z * (isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0)));
        _712 = cbModelParam._m0[36u].z * (isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0)));
        _713 = cbModelParam._m0[36u].z * (isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0)));
    }
    else
    {
        _711 = 0.0;
        _712 = 0.0;
        _713 = 0.0;
    }
    float _1008;
    float _1009;
    float _1010;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _739 = fma(_408, cbModelParam._m0[30u].z, fma(_404, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _400));
        float _743 = fma(_408, cbModelParam._m0[31u].z, fma(_404, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _400));
        float _747 = fma(_408, cbModelParam._m0[32u].z, fma(_404, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _400));
        float _770 = _400 + _221;
        float _771 = _404 + _222;
        float _772 = _408 + _223;
        float _782 = fma(_772, cbModelParam._m0[30u].z, fma(_771, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _770)) - _739;
        float _783 = fma(_772, cbModelParam._m0[31u].z, fma(_771, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _770)) - _743;
        float _784 = fma(_772, cbModelParam._m0[32u].z, fma(_771, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _770)) - _747;
        float _788 = inversesqrt(dot(vec3(_782, _783, _784), vec3(_782, _783, _784)));
        float _801 = ((_788 * _782) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_739 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _802 = ((_788 * _783) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_743 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _803 = ((_788 * _784) / cbModelParam._m0[35u].z) + ((((((_747 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _805 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_801, _802, _803), 0.0);
        vec4 _812 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_801, _802, _803), 0.0);
        vec4 _819 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_801, _802, _803), 0.0);
        vec4 _826 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_801, _802, _803), 0.0);
        float _838 = exp2((_805.w + (-0.5)) * 20.0) * 2.0;
        float _845 = exp2((_812.w + (-0.5)) * 20.0) * 2.0;
        float _852 = exp2((_819.w + (-0.5)) * 20.0) * 2.0;
        float _859 = exp2((_826.w + (-0.5)) * 20.0) * 2.0;
        float _860 = _859 * (_826.x + (-0.5));
        float _861 = _859 * (_826.y + (-0.5));
        float _862 = _859 * (_826.z + (-0.5));
        float _863 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
        float _864 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
        float _865 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
        float _867 = ((_805.x + (-0.5)) * 0.5) * _838;
        float _869 = ((_812.x + (-0.5)) * 0.5) * _845;
        float _871 = ((_819.x + (-0.5)) * 0.5) * _852;
        float _872 = dot(vec3(_867, _869, _871), vec3(_867, _869, _871));
        float _877 = (_872 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_872);
        float _885 = (dot(vec3(_221, _222, _223), vec3(_877 * _867, _877 * _869, _877 * _871)) + 1.0) * 0.5;
        float _2712 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
        float _894 = sqrt(((_869 * _869) + (_867 * _867)) + (_871 * _871)) / (_863 + 9.9999997473787516355514526367188e-06);
        float _2723 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
        float _895 = isnan(1.0) ? _2723 : (isnan(_2723) ? 1.0 : min(_2723, 1.0));
        float _896 = _895 * 2.0;
        float _900 = (1.0 - _895) / (_895 + 1.0);
        float _2734 = isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0));
        float _901 = isnan(1.0) ? _2734 : (isnan(_2734) ? 1.0 : min(_2734, 1.0));
        float _910 = ((((1.0 - _901) * (_896 + 2.0)) * exp2(log2(isnan(1.0) ? _2712 : (isnan(_2712) ? 1.0 : min(_2712, 1.0))) * (_896 + 1.0))) + _901) * _863;
        float _912 = ((_805.y + (-0.5)) * 0.5) * _838;
        float _914 = ((_812.y + (-0.5)) * 0.5) * _845;
        float _916 = ((_819.y + (-0.5)) * 0.5) * _852;
        float _917 = dot(vec3(_912, _914, _916), vec3(_912, _914, _916));
        float _922 = (_917 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_917);
        float _930 = (dot(vec3(_221, _222, _223), vec3(_922 * _912, _922 * _914, _922 * _916)) + 1.0) * 0.5;
        float _2745 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
        float _939 = sqrt(((_914 * _914) + (_912 * _912)) + (_916 * _916)) / (_864 + 9.9999997473787516355514526367188e-06);
        float _2756 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
        float _940 = isnan(1.0) ? _2756 : (isnan(_2756) ? 1.0 : min(_2756, 1.0));
        float _941 = _940 * 2.0;
        float _945 = (1.0 - _940) / (_940 + 1.0);
        float _2767 = isnan(0.0) ? _945 : (isnan(_945) ? 0.0 : max(_945, 0.0));
        float _946 = isnan(1.0) ? _2767 : (isnan(_2767) ? 1.0 : min(_2767, 1.0));
        float _955 = ((((1.0 - _946) * (_941 + 2.0)) * exp2(log2(isnan(1.0) ? _2745 : (isnan(_2745) ? 1.0 : min(_2745, 1.0))) * (_941 + 1.0))) + _946) * _864;
        float _957 = ((_805.z + (-0.5)) * 0.5) * _838;
        float _959 = ((_812.z + (-0.5)) * 0.5) * _845;
        float _961 = ((_819.z + (-0.5)) * 0.5) * _852;
        float _962 = dot(vec3(_957, _959, _961), vec3(_957, _959, _961));
        float _967 = (_962 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_962);
        float _975 = (dot(vec3(_221, _222, _223), vec3(_967 * _957, _967 * _959, _967 * _961)) + 1.0) * 0.5;
        float _2778 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
        float _984 = sqrt(((_959 * _959) + (_957 * _957)) + (_961 * _961)) / (_865 + 9.9999997473787516355514526367188e-06);
        float _2789 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
        float _985 = isnan(1.0) ? _2789 : (isnan(_2789) ? 1.0 : min(_2789, 1.0));
        float _986 = _985 * 2.0;
        float _990 = (1.0 - _985) / (_985 + 1.0);
        float _2800 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
        float _991 = isnan(1.0) ? _2800 : (isnan(_2800) ? 1.0 : min(_2800, 1.0));
        float _1000 = ((((1.0 - _991) * (_986 + 2.0)) * exp2(log2(isnan(1.0) ? _2778 : (isnan(_2778) ? 1.0 : min(_2778, 1.0))) * (_986 + 1.0))) + _991) * _865;
        _1008 = cbModelParam._m0[36u].w * (isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0)));
        _1009 = cbModelParam._m0[36u].w * (isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0)));
        _1010 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0)));
    }
    else
    {
        _1008 = 0.0;
        _1009 = 0.0;
        _1010 = 0.0;
    }
    float _1020 = (cbModelParam._m0[1u].x * (_1008 - _711)) + _711;
    float _1021 = (cbModelParam._m0[1u].x * (_1009 - _712)) + _712;
    float _1022 = (cbModelParam._m0[1u].x * (_1010 - _713)) + _713;
    float _1043 = fma(_1022, cbSceneParam._m0[89u].z, fma(_1021, cbSceneParam._m0[89u].y, _1020 * cbSceneParam._m0[89u].x));
    float _1046 = fma(_1022, cbSceneParam._m0[90u].z, fma(_1021, cbSceneParam._m0[90u].y, _1020 * cbSceneParam._m0[90u].x));
    float _1049 = fma(_1022, cbSceneParam._m0[91u].z, fma(_1021, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1020));
    float _1086 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1090 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1094 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1098 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1099 = _1086 / _1098;
    float _1100 = _1090 / _1098;
    float _1101 = _1094 / _1098;
    float _1238;
    float _1239;
    float _1240;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1118 = ((uint(_1101 > cbSceneParam._m0[59u].y) + uint(_1101 > cbSceneParam._m0[59u].x)) + uint(_1101 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1119 = _1118 + 43u;
        uint _1127 = _1118 + 44u;
        uint _1135 = _1118 + 45u;
        uint _1143 = _1118 + 46u;
        float _1154 = fma(_1098, cbSceneParam._m0[_1119].w, fma(_1094, cbSceneParam._m0[_1119].z, fma(_1090, cbSceneParam._m0[_1119].y, _1086 * cbSceneParam._m0[_1119].x)));
        float _1158 = fma(_1098, cbSceneParam._m0[_1127].w, fma(_1094, cbSceneParam._m0[_1127].z, fma(_1090, cbSceneParam._m0[_1127].y, _1086 * cbSceneParam._m0[_1127].x)));
        float _1166 = fma(_1098, cbSceneParam._m0[_1143].w, fma(_1094, cbSceneParam._m0[_1143].z, fma(_1090, cbSceneParam._m0[_1143].y, _1086 * cbSceneParam._m0[_1143].x)));
        float _1171 = cbSceneParam._m0[33u].z * _1166;
        float _1173 = cbSceneParam._m0[33u].w * _1166;
        float _1176 = fma(_1098, cbSceneParam._m0[_1135].w, fma(_1094, cbSceneParam._m0[_1135].z, fma(_1090, cbSceneParam._m0[_1135].y, _1086 * cbSceneParam._m0[_1135].x))) / _1166;
        float _1224 = (cbSceneParam._m0[33u].x - sqrt(((_1100 * _1100) + (_1099 * _1099)) + (_1101 * _1101))) * cbSceneParam._m0[33u].y;
        float _2841 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
        float _1231 = (isnan(1.0) ? _2841 : (isnan(_2841) ? 1.0 : min(_2841, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1171 + _1154) / _1166, (_1173 + _1158) / _1166), _1176), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1173 + _1154) / _1166, (_1158 - _1171) / _1166), _1176), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1154 - _1171) / _1166, (_1158 - _1173) / _1166), _1176), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1154 - _1173) / _1166, (_1171 + _1158) / _1166), _1176), 0.0)).x), vec4(0.25)));
        _1238 = 1.0 - (_1231 * cbSceneParam._m0[34u].x);
        _1239 = 1.0 - (_1231 * cbSceneParam._m0[34u].y);
        _1240 = 1.0 - (_1231 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1238 = 1.0;
        _1239 = 1.0;
        _1240 = 1.0;
    }
    float _1296;
    float _1298;
    float _1300;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1284 = fma(_1098, cbSceneParam._m0[63u].w, fma(_1094, cbSceneParam._m0[63u].z, fma(_1090, cbSceneParam._m0[63u].y, _1086 * cbSceneParam._m0[63u].x)));
        float _1285 = fma(_1098, cbSceneParam._m0[60u].w, fma(_1094, cbSceneParam._m0[60u].z, fma(_1090, cbSceneParam._m0[60u].y, _1086 * cbSceneParam._m0[60u].x))) / _1284;
        float _1286 = fma(_1098, cbSceneParam._m0[61u].w, fma(_1094, cbSceneParam._m0[61u].z, fma(_1090, cbSceneParam._m0[61u].y, _1086 * cbSceneParam._m0[61u].x))) / _1284;
        float frontier_phi_10_9_ladder;
        float frontier_phi_10_9_ladder_1;
        float frontier_phi_10_9_ladder_2;
        if ((((_1285 >= cbSceneParam._m0[64u].x) && (_1286 >= cbSceneParam._m0[64u].y)) && (_1285 <= cbSceneParam._m0[64u].z)) && (_1286 <= cbSceneParam._m0[64u].w))
        {
            float _1394 = fma(_1098, cbSceneParam._m0[62u].w, fma(_1094, cbSceneParam._m0[62u].z, fma(_1090, cbSceneParam._m0[62u].y, _1086 * cbSceneParam._m0[62u].x))) / _1284;
            float _1398 = isnan(cbSceneParam._m0[41u].w) ? _1394 : (isnan(_1394) ? cbSceneParam._m0[41u].w : max(_1394, cbSceneParam._m0[41u].w));
            float _1441 = (cbSceneParam._m0[33u].x - sqrt(((_1100 * _1100) + (_1099 * _1099)) + (_1101 * _1101))) * cbSceneParam._m0[33u].y;
            float _2857 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
            float _1448 = (isnan(1.0) ? _2857 : (isnan(_2857) ? 1.0 : min(_2857, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1285, cbSceneParam._m0[33u].w + _1286), _1398), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1285, _1286 - cbSceneParam._m0[33u].z), _1398), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1285 - cbSceneParam._m0[33u].z, _1286 - cbSceneParam._m0[33u].w), _1398), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1285 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1286), _1398), 0.0)).x), vec4(0.25)));
            float _1452 = 1.0 - (_1448 * cbSceneParam._m0[34u].x);
            float _1453 = 1.0 - (_1448 * cbSceneParam._m0[34u].y);
            float _1454 = 1.0 - (_1448 * cbSceneParam._m0[34u].z);
            frontier_phi_10_9_ladder = isnan(_1454) ? _1240 : (isnan(_1240) ? _1454 : min(_1240, _1454));
            frontier_phi_10_9_ladder_1 = isnan(_1453) ? _1239 : (isnan(_1239) ? _1453 : min(_1239, _1453));
            frontier_phi_10_9_ladder_2 = isnan(_1452) ? _1238 : (isnan(_1238) ? _1452 : min(_1238, _1452));
        }
        else
        {
            frontier_phi_10_9_ladder = _1240;
            frontier_phi_10_9_ladder_1 = _1239;
            frontier_phi_10_9_ladder_2 = _1238;
        }
        _1296 = frontier_phi_10_9_ladder_2;
        _1298 = frontier_phi_10_9_ladder_1;
        _1300 = frontier_phi_10_9_ladder;
    }
    else
    {
        _1296 = _1238;
        _1298 = _1239;
        _1300 = _1240;
    }
    uvec4 _1305 = floatBitsToUint(cbInstanceData._m0[_352 + 5u]);
    uint _1307 = _1305.x * 14u;
    uint _1308 = _1307 + 13u;
    float _1315 = _378 + (-1.0);
    float _1321 = (cbLight._m0[_1308].x * _1315) + 1.0;
    float _1322 = (cbLight._m0[_1308].y * _1315) + 1.0;
    float _1323 = (cbLight._m0[_1308].z * _1315) + 1.0;
    float _1324 = (cbLight._m0[_1308].w * _1315) + 1.0;
    uint _1325 = _1307 + 5u;
    float _1331 = isnan(1.0) ? _1322 : (isnan(_1322) ? 1.0 : min(_1322, 1.0));
    uint _1335 = _1307 + 4u;
    float _1345 = isnan(1.0) ? _1321 : (isnan(_1321) ? 1.0 : min(_1321, 1.0));
    uint _1349 = _1307 | 1u;
    float _1360 = dot(vec3(cbLight._m0[_1307].xyz), vec3(_221, _222, _223));
    float _1363 = dot(vec3(cbLight._m0[_1349].xyz), vec3(_221, _222, _223));
    float _2893 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
    float _2904 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
    float _1368 = (isnan(1.0) ? _2893 : (isnan(_2893) ? 1.0 : min(_2893, 1.0))) * 0.3183098733425140380859375;
    float _1370 = (isnan(1.0) ? _2904 : (isnan(_2904) ? 1.0 : min(_2904, 1.0))) * 0.3183098733425140380859375;
    float _1377 = ((cbLight._m0[_1325].x * _1331) * _1370) + (((cbLight._m0[_1335].x * _1296) * _1345) * _1368);
    float _1378 = ((_1331 * cbLight._m0[_1325].y) * _1370) + (((cbLight._m0[_1335].y * _1298) * _1345) * _1368);
    float _1379 = ((_1331 * cbLight._m0[_1325].z) * _1370) + (((cbLight._m0[_1335].z * _1300) * _1345) * _1368);
    uvec4 _1383 = floatBitsToUint(cbLight._m0[_1307 + 12u]);
    bool _1385 = _1383.x == 0u;
    float _1455;
    float _1457;
    float _1459;
    if (_1385)
    {
        _1455 = _1377;
        _1457 = _1378;
        _1459 = _1379;
    }
    else
    {
        uint _1463 = _1307 + 6u;
        float _1479 = (dot(vec3(cbLight._m0[_1307 + 2u].xyz), vec3(_221, _222, _223)) * 0.5) + 0.5;
        float _1480 = _1479 * _1479;
        float _2915 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1481 = isnan(1.0) ? _2915 : (isnan(_2915) ? 1.0 : min(_2915, 1.0));
        float _1482 = isnan(1.0) ? _1323 : (isnan(_1323) ? 1.0 : min(_1323, 1.0));
        _1455 = (((cbLight._m0[_1463].x * 0.3183098733425140380859375) * _1481) * _1482) + _1377;
        _1457 = (((cbLight._m0[_1463].y * 0.3183098733425140380859375) * _1481) * _1482) + _1378;
        _1459 = (((cbLight._m0[_1463].z * 0.3183098733425140380859375) * _1481) * _1482) + _1379;
    }
    bool _1462 = _1383.y == 0u;
    float _1492;
    float _1494;
    float _1496;
    if (_1462)
    {
        _1492 = _1455;
        _1494 = _1457;
        _1496 = _1459;
    }
    else
    {
        uint _1597 = _1307 + 7u;
        float _1613 = (dot(vec3(cbLight._m0[_1307 + 3u].xyz), vec3(_221, _222, _223)) * 0.5) + 0.5;
        float _1614 = _1613 * _1613;
        float _2931 = isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0));
        float _1615 = isnan(1.0) ? _2931 : (isnan(_2931) ? 1.0 : min(_2931, 1.0));
        float _1616 = isnan(1.0) ? _1324 : (isnan(_1324) ? 1.0 : min(_1324, 1.0));
        _1492 = (((cbLight._m0[_1597].x * 0.3183098733425140380859375) * _1615) * _1616) + _1455;
        _1494 = (((cbLight._m0[_1597].y * 0.3183098733425140380859375) * _1615) * _1616) + _1457;
        _1496 = (((cbLight._m0[_1597].z * 0.3183098733425140380859375) * _1615) * _1616) + _1459;
    }
    uint _1498 = _1307 + 8u;
    float _1504 = cbLight._m0[_1307].x + _303;
    float _1505 = cbLight._m0[_1307].y + _304;
    float _1506 = cbLight._m0[_1307].z + _305;
    float _1510 = inversesqrt(dot(vec3(_1504, _1505, _1506), vec3(_1504, _1505, _1506)));
    float _1514 = dot(vec3(_221, _222, _223), vec3(cbLight._m0[_1307].xyz));
    float _2947 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
    float _1517 = isnan(1.0) ? _2947 : (isnan(_2947) ? 1.0 : min(_2947, 1.0));
    float _1518 = dot(vec3(_221, _222, _223), vec3(_303, _304, _305));
    float _2958 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
    float _1521 = isnan(1.0) ? _2958 : (isnan(_2958) ? 1.0 : min(_2958, 1.0));
    float _1522 = dot(vec3(cbLight._m0[_1307].xyz), vec3(_1504 * _1510, _1505 * _1510, _1506 * _1510));
    float _2969 = isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0));
    float _1530 = exp2(log2(1.0 - (isnan(1.0) ? _2969 : (isnan(_2969) ? 1.0 : min(_2969, 1.0)))) * 5.0);
    float _1535 = (0.5 / ((_1517 + 9.9999999392252902907785028219223e-09) + _1521)) * _1517;
    float _2980 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
    float _1537 = (isnan(1.0) ? _2980 : (isnan(_2980) ? 1.0 : min(_2980, 1.0))) * 0.31831014156341552734375;
    uint _1551 = _1307 + 9u;
    float _1557 = cbLight._m0[_1349].x + _303;
    float _1558 = cbLight._m0[_1349].y + _304;
    float _1559 = cbLight._m0[_1349].z + _305;
    float _1563 = inversesqrt(dot(vec3(_1557, _1558, _1559), vec3(_1557, _1558, _1559)));
    float _1567 = dot(vec3(_221, _222, _223), vec3(cbLight._m0[_1349].xyz));
    float _2991 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
    float _1570 = isnan(1.0) ? _2991 : (isnan(_2991) ? 1.0 : min(_2991, 1.0));
    float _1571 = dot(vec3(cbLight._m0[_1349].xyz), vec3(_1557 * _1563, _1558 * _1563, _1559 * _1563));
    float _3002 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
    float _1578 = exp2(log2(1.0 - (isnan(1.0) ? _3002 : (isnan(_3002) ? 1.0 : min(_3002, 1.0)))) * 5.0);
    float _1582 = (0.5 / ((_1570 + 9.9999999392252902907785028219223e-09) + _1521)) * _1570;
    float _3013 = isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0));
    float _1584 = (isnan(1.0) ? _3013 : (isnan(_3013) ? 1.0 : min(_3013, 1.0))) * 0.31831014156341552734375;
    float _1594 = (((_1578 * cbLight._m0[_1551].x) * _1584) * _1331) + ((((cbLight._m0[_1498].x * _1296) * _1530) * _1537) * _1345);
    float _1595 = (((_1578 * cbLight._m0[_1551].y) * _1584) * _1331) + ((((cbLight._m0[_1498].y * _1298) * _1530) * _1537) * _1345);
    float _1596 = (((_1578 * cbLight._m0[_1551].z) * _1584) * _1331) + ((((cbLight._m0[_1498].z * _1300) * _1530) * _1537) * _1345);
    float _1626;
    float _1628;
    float _1630;
    if (_1385)
    {
        _1626 = _1594;
        _1628 = _1595;
        _1630 = _1596;
    }
    else
    {
        uint _1632 = _1307 + 10u;
        uint _1638 = _1307 + 2u;
        float _1644 = cbLight._m0[_1638].x + _303;
        float _1645 = cbLight._m0[_1638].y + _304;
        float _1646 = cbLight._m0[_1638].z + _305;
        float _1650 = inversesqrt(dot(vec3(_1644, _1645, _1646), vec3(_1644, _1645, _1646)));
        float _1654 = dot(vec3(_221, _222, _223), vec3(cbLight._m0[_1638].xyz));
        float _3024 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
        float _1657 = isnan(1.0) ? _3024 : (isnan(_3024) ? 1.0 : min(_3024, 1.0));
        float _1658 = dot(vec3(cbLight._m0[_1638].xyz), vec3(_1644 * _1650, _1645 * _1650, _1646 * _1650));
        float _3035 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1665 = exp2(log2(1.0 - (isnan(1.0) ? _3035 : (isnan(_3035) ? 1.0 : min(_3035, 1.0)))) * 5.0);
        float _1669 = (0.5 / ((_1657 + 9.9999999392252902907785028219223e-09) + _1521)) * _1657;
        float _3046 = isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0));
        float _1671 = (isnan(1.0) ? _3046 : (isnan(_3046) ? 1.0 : min(_3046, 1.0))) * 0.31831014156341552734375;
        float _1672 = isnan(1.0) ? _1323 : (isnan(_1323) ? 1.0 : min(_1323, 1.0));
        _1626 = (((_1665 * cbLight._m0[_1632].x) * _1671) * _1672) + _1594;
        _1628 = (((_1665 * cbLight._m0[_1632].y) * _1671) * _1672) + _1595;
        _1630 = (((_1665 * cbLight._m0[_1632].z) * _1671) * _1672) + _1596;
    }
    float _1682;
    float _1684;
    float _1686;
    if (_1462)
    {
        _1682 = _1626;
        _1684 = _1628;
        _1686 = _1630;
    }
    else
    {
        uint _1693 = _1307 + 11u;
        uint _1699 = _1307 + 3u;
        float _1705 = cbLight._m0[_1699].x + _303;
        float _1706 = cbLight._m0[_1699].y + _304;
        float _1707 = cbLight._m0[_1699].z + _305;
        float _1711 = inversesqrt(dot(vec3(_1705, _1706, _1707), vec3(_1705, _1706, _1707)));
        float _1715 = dot(vec3(_221, _222, _223), vec3(cbLight._m0[_1699].xyz));
        float _3062 = isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0));
        float _1718 = isnan(1.0) ? _3062 : (isnan(_3062) ? 1.0 : min(_3062, 1.0));
        float _1719 = dot(vec3(cbLight._m0[_1699].xyz), vec3(_1705 * _1711, _1706 * _1711, _1707 * _1711));
        float _3073 = isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0));
        float _1726 = exp2(log2(1.0 - (isnan(1.0) ? _3073 : (isnan(_3073) ? 1.0 : min(_3073, 1.0)))) * 5.0);
        float _1730 = (0.5 / ((_1718 + 9.9999999392252902907785028219223e-09) + _1521)) * _1718;
        float _3084 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
        float _1732 = (isnan(1.0) ? _3084 : (isnan(_3084) ? 1.0 : min(_3084, 1.0))) * 0.31831014156341552734375;
        float _1733 = isnan(1.0) ? _1324 : (isnan(_1324) ? 1.0 : min(_1324, 1.0));
        _1682 = (((_1726 * cbLight._m0[_1693].x) * _1732) * _1733) + _1626;
        _1684 = (((_1726 * cbLight._m0[_1693].y) * _1732) * _1733) + _1628;
        _1686 = (((_1726 * cbLight._m0[_1693].z) * _1732) * _1733) + _1630;
    }
    float _1798;
    float _1800;
    float _1802;
    if (_1305.y == 0u)
    {
        uvec4 _1754 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1755 = _1754.x;
        uint _1766 = uint((float(_1754.y) * floor(float(uint(cbSceneParam._m0[85u].y * _312) / _1755))) + floor(float(uint(cbSceneParam._m0[85u].x * _311) / _1755)));
        float _1776 = (log2(_1101 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1777 = isnan(0.0) ? _1776 : (isnan(_1776) ? 0.0 : max(_1776, 0.0));
        uint _1780 = uint(isnan(14.0) ? _1777 : (isnan(_1777) ? 14.0 : min(_1777, 14.0)));
        uvec4 _1785 = texelFetch(g_lightClusterGridBuffer, int(((_1780 << 2u) + (_1766 << 6u)) >> 2u));
        uint _1786 = _1785.x;
        uint _1787 = _1754.z;
        float _1887;
        float _1889;
        float _1891;
        if (((((1u << ((_1787 >> 4u) & 15u)) + 4294967295u) & _1786) == 0u) || ((_1787 & 240u) == 0u))
        {
            _1887 = 0.0;
            _1889 = 0.0;
            _1891 = 0.0;
        }
        else
        {
            float _1888;
            float _1890;
            float _1892;
            float _2017 = 0.0;
            float _2018 = 0.0;
            float _2019 = 0.0;
            uint _2020 = 0u;
            uint _2029;
            bool _2030;
            for (;;)
            {
                _2029 = texelFetch(g_lightClassification, int((((_1780 << 5u) + (_1766 << 9u)) + (_2020 << 2u)) >> 2u)).x;
                _2030 = _2029 == 0u;
                float frontier_phi_32_pred;
                float frontier_phi_32_pred_1;
                float frontier_phi_32_pred_2;
                if (_2030)
                {
                    frontier_phi_32_pred = _2019;
                    frontier_phi_32_pred_1 = _2018;
                    frontier_phi_32_pred_2 = _2017;
                }
                else
                {
                    float _2132;
                    float _2133;
                    float _2134;
                    uint _2135;
                    _2132 = _2017;
                    _2133 = _2018;
                    _2134 = _2019;
                    _2135 = _2029;
                    float _2070;
                    float _2071;
                    float _2072;
                    for (;;)
                    {
                        uint _2139 = uint(findLSB(_2135)) + (_2020 << 5u);
                        uint _2136 = (_2135 + 4294967295u) & _2135;
                        uint _2141 = _2139 * 48u;
                        vec4 _2155 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2141)).x, texelFetch(g_PointLightRenderingBuffer, int(_2141 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2141 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2141 + 3u)).x));
                        uint _2161 = (_2139 * 48u) + 4u;
                        vec4 _2174 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2161)).x, texelFetch(g_PointLightRenderingBuffer, int(_2161 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2161 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2161 + 3u)).x));
                        float _2179 = _2155.x - _1099;
                        float _2180 = _2155.y - _1100;
                        float _2181 = _2155.z - _1101;
                        float _2182 = dot(vec3(_2179, _2180, _2181), vec3(_2179, _2180, _2181));
                        float _2185 = inversesqrt(_2182);
                        float _2194 = 1.0 - (_2182 * _2155.w);
                        float _3110 = isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0));
                        float _2196 = sqrt(_2182) * _2174.w;
                        float _2199 = 1.39999997615814208984375 / (_2196 + 1.39999997615814208984375);
                        float _2200 = _2199 * _2199;
                        float _2203 = ((1.0 - _2200) * dot(vec3(_333, _336, _339), vec3(_2185 * _2179, _2185 * _2180, _2185 * _2181))) + _2200;
                        float _2210 = ((isnan(0.0) ? _2203 : (isnan(_2203) ? 0.0 : max(_2203, 0.0))) * (isnan(1.0) ? _3110 : (isnan(_3110) ? 1.0 : min(_3110, 1.0)))) / (((_2196 * _2196) * 0.699999988079071044921875) + 1.0);
                        _2070 = (_2210 * _2174.x) + _2132;
                        _2071 = (_2210 * _2174.y) + _2133;
                        _2072 = (_2210 * _2174.z) + _2134;
                        if (_2136 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2132 = _2070;
                            _2133 = _2071;
                            _2134 = _2072;
                            _2135 = _2136;
                        }
                    }
                    frontier_phi_32_pred = _2072;
                    frontier_phi_32_pred_1 = _2071;
                    frontier_phi_32_pred_2 = _2070;
                }
                _1892 = frontier_phi_32_pred;
                _1890 = frontier_phi_32_pred_1;
                _1888 = frontier_phi_32_pred_2;
                uint _2021 = _2020 + 1u;
                if (_2021 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2017 = _1888;
                    _2018 = _1890;
                    _2019 = _1892;
                    _2020 = _2021;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1887 = _1888;
            _1889 = _1890;
            _1891 = _1892;
        }
        uvec4 _1895 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1896 = _1895.z;
        uint _1898 = (_1896 >> 8u) & 15u;
        float _2004;
        float _2006;
        float _2008;
        if (((4294967295u << _1898) & _1786) == 0u)
        {
            _2004 = _1887;
            _2006 = _1889;
            _2008 = _1891;
        }
        else
        {
            float frontier_phi_26_27_ladder;
            float frontier_phi_26_27_ladder_1;
            float frontier_phi_26_27_ladder_2;
            if (_1898 < ((_1896 >> 12u) & 15u))
            {
                float _2005;
                float _2007;
                float _2009;
                float _2118 = _1887;
                float _2119 = _1889;
                float _2120 = _1891;
                uint _2121 = _1898;
                uint _2130;
                bool _2131;
                for (;;)
                {
                    _2130 = texelFetch(g_lightClassification, int((((_1780 << 5u) + (_1766 << 9u)) + (_2121 << 2u)) >> 2u)).x;
                    _2131 = _2130 == 0u;
                    float frontier_phi_38_pred;
                    float frontier_phi_38_pred_1;
                    float frontier_phi_38_pred_2;
                    if (_2131)
                    {
                        frontier_phi_38_pred = _2120;
                        frontier_phi_38_pred_1 = _2119;
                        frontier_phi_38_pred_2 = _2118;
                    }
                    else
                    {
                        float _2215;
                        float _2216;
                        float _2217;
                        float _2417;
                        float _2418;
                        float _2419;
                        float _2225 = _2118;
                        float _2226 = _2119;
                        float _2227 = _2120;
                        uint _2228 = _2130;
                        uint _2229;
                        vec4 _2255;
                        float _2256;
                        vec4 _2271;
                        vec4 _2287;
                        vec4 _2303;
                        float _2350;
                        bool _2351;
                        for (;;)
                        {
                            uint _2239 = ((_2121 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2228));
                            _2229 = (_2228 + 4294967295u) & _2228;
                            uint _2241 = _2239 * 40u;
                            _2255 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2241)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2241 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2241 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2241 + 3u)).x));
                            _2256 = _2255.w;
                            uint _2258 = (_2239 * 40u) + 4u;
                            _2271 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2258)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2258 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2258 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2258 + 3u)).x));
                            uint _2274 = (_2239 * 40u) + 16u;
                            _2287 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2274)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2274 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2274 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2274 + 3u)).x));
                            uint _2290 = (_2239 * 40u) + 20u;
                            _2303 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2290)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2290 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2290 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2290 + 3u)).x));
                            uint _2306 = (_2239 * 40u) + 24u;
                            vec4 _2319 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2306)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2306 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2306 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2306 + 3u)).x));
                            uint _2325 = (_2239 * 40u) + 28u;
                            vec4 _2338 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2325)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2325 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2325 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2325 + 3u)).x));
                            _2350 = fma(_1101, _2338.z, fma(_1100, _2338.y, _2338.x * _1099)) + _2338.w;
                            _2351 = !((fma(_1101, _2319.z, fma(_1100, _2319.y, _2319.x * _1099)) + _2319.w) <= 0.0);
                            float frontier_phi_44_pred;
                            float frontier_phi_44_pred_1;
                            float frontier_phi_44_pred_2;
                            if (_2351)
                            {
                                float _2375 = _2255.x - _1099;
                                float _2376 = _2255.y - _1100;
                                float _2377 = _2255.z - _1101;
                                float _2378 = dot(vec3(_2375, _2376, _2377), vec3(_2375, _2376, _2377));
                                float _2381 = inversesqrt(_2378);
                                float _2388 = 1.0 - (_2378 / (_2256 * _2256));
                                float _3126 = isnan(0.0) ? _2388 : (isnan(_2388) ? 0.0 : max(_2388, 0.0));
                                float _2393 = sqrt(_2378) * _2271.w;
                                float _2395 = 1.39999997615814208984375 / (_2393 + 1.39999997615814208984375);
                                float _2396 = _2395 * _2395;
                                float _2399 = ((1.0 - _2396) * dot(vec3(_2381 * _2375, _2381 * _2376, _2381 * _2377), vec3(_333, _336, _339))) + _2396;
                                float _2406 = (fma(_1101, _2287.z, fma(_1100, _2287.y, _2287.x * _1099)) + _2287.w) / _2350;
                                float _2407 = (fma(_1101, _2303.z, fma(_1100, _2303.y, _2303.x * _1099)) + _2303.w) / _2350;
                                float _2411 = 1.0 - dot(vec2(_2406, _2407), vec2(_2406, _2407));
                                float _3142 = isnan(0.0) ? _2411 : (isnan(_2411) ? 0.0 : max(_2411, 0.0));
                                float _2413 = (isnan(1.0) ? _3142 : (isnan(_3142) ? 1.0 : min(_3142, 1.0))) * (((isnan(0.0) ? _2399 : (isnan(_2399) ? 0.0 : max(_2399, 0.0))) * (isnan(1.0) ? _3126 : (isnan(_3126) ? 1.0 : min(_3126, 1.0)))) / (((_2393 * _2393) * 0.699999988079071044921875) + 1.0));
                                frontier_phi_44_pred = _2413 * _2271.y;
                                frontier_phi_44_pred_1 = _2413 * _2271.x;
                                frontier_phi_44_pred_2 = _2413 * _2271.z;
                            }
                            else
                            {
                                frontier_phi_44_pred = 0.0;
                                frontier_phi_44_pred_1 = 0.0;
                                frontier_phi_44_pred_2 = 0.0;
                            }
                            _2418 = frontier_phi_44_pred;
                            _2417 = frontier_phi_44_pred_1;
                            _2419 = frontier_phi_44_pred_2;
                            _2215 = _2417 + _2225;
                            _2216 = _2418 + _2226;
                            _2217 = _2419 + _2227;
                            if (_2229 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2225 = _2215;
                                _2226 = _2216;
                                _2227 = _2217;
                                _2228 = _2229;
                                continue;
                            }
                        }
                        frontier_phi_38_pred = _2217;
                        frontier_phi_38_pred_1 = _2216;
                        frontier_phi_38_pred_2 = _2215;
                    }
                    _2009 = frontier_phi_38_pred;
                    _2007 = frontier_phi_38_pred_1;
                    _2005 = frontier_phi_38_pred_2;
                    uint _2122 = _2121 + 1u;
                    if (_2122 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2118 = _2005;
                        _2119 = _2007;
                        _2120 = _2009;
                        _2121 = _2122;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_26_27_ladder = _2009;
                frontier_phi_26_27_ladder_1 = _2007;
                frontier_phi_26_27_ladder_2 = _2005;
            }
            else
            {
                frontier_phi_26_27_ladder = _1891;
                frontier_phi_26_27_ladder_1 = _1889;
                frontier_phi_26_27_ladder_2 = _1887;
            }
            _2004 = frontier_phi_26_27_ladder_2;
            _2006 = frontier_phi_26_27_ladder_1;
            _2008 = frontier_phi_26_27_ladder;
        }
        float _2010 = isnan(1.0) ? _378 : (isnan(_378) ? 1.0 : min(_378, 1.0));
        _1798 = (_2010 * _2004) + _1492;
        _1800 = (_2010 * _2006) + _1494;
        _1802 = (_2010 * _2008) + _1496;
    }
    else
    {
        _1798 = _1492;
        _1800 = _1494;
        _1802 = _1496;
    }
    uint _1808 = _354 + uint(cbMatDynParam._m0[0u].w);
    float _1814 = (_209.x * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_1808].x;
    float _1815 = (_209.y * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_1808].y;
    float _1816 = (_209.z * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_1808].z;
    float _3158 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    float _3169 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
    float _3180 = isnan(0.0) ? _366 : (isnan(_366) ? 0.0 : max(_366, 0.0));
    float _3191 = isnan(0.0) ? _228 : (isnan(_228) ? 0.0 : max(_228, 0.0));
    float _1831 = (((isnan(1.0) ? _3158 : (isnan(_3158) ? 1.0 : min(_3158, 1.0))) * (_1798 + ((isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0))) * _378))) + (cbPerFrame._m0[3u].x * _1682)) + _1814;
    float _1833 = (_1815 + (cbPerFrame._m0[3u].x * _1684)) + ((isnan(1.0) ? _3169 : (isnan(_3169) ? 1.0 : min(_3169, 1.0))) * (_1800 + ((isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0))) * _378)));
    float _1835 = (_1816 + (cbPerFrame._m0[3u].x * _1686)) + ((isnan(1.0) ? _3180 : (isnan(_3180) ? 1.0 : min(_3180, 1.0))) * (_1802 + ((isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0))) * _378)));
    float _3217 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1848 = isnan(1.0) ? _3217 : (isnan(_3217) ? 1.0 : min(_3217, 1.0));
    float _1853 = cbInstanceData._m0[_352 + 6u].w * (isnan(1.0) ? _3191 : (isnan(_3191) ? 1.0 : min(_3191, 1.0)));
    float _1858 = _311 / cbSceneParam._m0[86u].x;
    float _1859 = _312 / cbSceneParam._m0[86u].y;
    vec4 _1873 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1858, _1859, (log2((isnan(cbSceneParam._m0[77u].w) ? _244 : (isnan(_244) ? cbSceneParam._m0[77u].w : min(_244, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1875 = _1873.x;
    float _1876 = _1873.y;
    float _1877 = _1873.z;
    float _1878 = _1873.w;
    float _1944;
    float _1946;
    float _1948;
    float _1950;
    if (_244 > cbSceneParam._m0[78u].w)
    {
        float _1906 = isnan(_244) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _244 : min(cbSceneParam._m0[80u].w, _244));
        float _1907 = _1906 / _244;
        float _1918 = _1907 * _296;
        float _1919 = _297 * _1907;
        float _1920 = (-0.0) - _1919;
        float _1921 = _1907 * _298;
        float _1923 = (cbSceneParam._m0[77u].w * _1920) / _1906;
        float _1924 = _1923 + cbSceneParam._m0[79u].w;
        float _1925 = cbSceneParam._m0[79u].w - _1919;
        float _1931 = sqrt(((_1918 * _1918) + (_1919 * _1919)) + (_1921 * _1921));
        float _1934 = (1.0 - (cbSceneParam._m0[77u].w / _1906)) * _1931;
        float _1940 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1942 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2080;
        if (abs((_1920 - _1923) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2080 = ((((_1924 > 0.0) ? exp2(_1940 * _1924) : (2.0 - exp2(_1942 * _1924))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1934;
        }
        else
        {
            float _2043 = 1.0 / cbSceneParam._m0[80u].x;
            float _2044 = isnan(_1925) ? _1924 : (isnan(_1924) ? _1925 : max(_1924, _1925));
            float _2045 = isnan(_1925) ? _1924 : (isnan(_1924) ? _1925 : min(_1924, _1925));
            float _2054 = isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : min(_2044, 0.0));
            float _2055 = isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : min(_2045, 0.0));
            _2080 = ((abs(_1931 / _1920) * cbSceneParam._m0[80u].y) * ((((_2054 - _2055) * 2.0) - ((exp2(_1940 * (isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0)))) - exp2(_1940 * (isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : max(_2045, 0.0))))) * _2043)) - ((exp2(_1942 * _2054) - exp2(_1942 * _2055)) * _2043))) + (_1934 * cbSceneParam._m0[80u].z);
        }
        vec4 _2082 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1858, _1859, 1.0), 0.0);
        float _2091 = exp2((_2080 * (-1.44269502162933349609375)) * (1.0 - _2082.w));
        float _2092 = log2(_2091);
        float _2108 = log2(_1878);
        _1944 = (exp2(_2108 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2092 * cbSceneParam._m0[78u].x)) * _2082.x) / cbSceneParam._m0[78u].x)) + _1875;
        _1946 = (exp2(_2108 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2092 * cbSceneParam._m0[78u].y)) * _2082.y) / cbSceneParam._m0[78u].y)) + _1876;
        _1948 = (exp2(_2108 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2092 * cbSceneParam._m0[78u].z)) * _2082.z) / cbSceneParam._m0[78u].z)) + _1877;
        _1950 = _2091 * _1878;
    }
    else
    {
        _1944 = _1875;
        _1946 = _1876;
        _1948 = _1877;
        _1950 = _1878;
    }
    float _1962 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1963 = _1962 == 3.0;
    float _1965 = log2(_1950);
    float _1969 = exp2(_1965 * cbSceneParam._m0[78u].x);
    float _1970 = exp2(_1965 * cbSceneParam._m0[78u].y);
    float _1971 = exp2(_1965 * cbSceneParam._m0[78u].z);
    float _1972 = _1969 * (isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0)));
    float _1973 = _1970 * (isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0)));
    float _1974 = _1971 * (isnan(0.0) ? _1835 : (isnan(_1835) ? 0.0 : max(_1835, 0.0)));
    float _1983 = (_1962 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1983 * (_1963 ? _1972 : (_1972 + (cbSceneParam._m0[72u].w * _1944)));
    SV_Target.y = _1983 * (_1963 ? _1973 : (_1973 + (cbSceneParam._m0[72u].w * _1946)));
    SV_Target.z = _1983 * (_1963 ? _1974 : (_1974 + (cbSceneParam._m0[72u].w * _1948)));
    SV_Target.w = _1853;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _1814) * _1848) * _1969) * _1983;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _1815) * _1848) * _1970) * _1983;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _1816) * _1848) * _1971) * _1983;
    SV_Target_1.w = _1853;
}


