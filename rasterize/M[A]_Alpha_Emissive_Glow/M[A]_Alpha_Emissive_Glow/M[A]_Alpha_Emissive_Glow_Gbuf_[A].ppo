#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_A_Alpha_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_A_Alpha_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _124 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _125 = _124 * NORMAL.x;
    float _126 = _124 * NORMAL.y;
    float _127 = _124 * NORMAL.z;
    float _132;
    float _133;
    float _134;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _132 = (-0.0) - _125;
        _133 = (-0.0) - _126;
        _134 = (-0.0) - _127;
    }
    else
    {
        _132 = _125;
        _133 = _126;
        _134 = _127;
    }
    vec4 _148 = texture(sampler2D(M_A_Alpha_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _151 = _148.x;
    float _152 = _148.y;
    float _153 = _148.z;
    float _154 = _148.w;
    float _155 = _154 * TEXCOORD_1.z;
    vec4 _171 = texture(sampler2D(M_A_Alpha_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _176 = _171.x * cbMtdParam._m0[9u].x;
    float _177 = _171.y * cbMtdParam._m0[9u].x;
    float _178 = _171.z * cbMtdParam._m0[9u].x;
    float _182 = inversesqrt(dot(vec3(_132, _133, _134), vec3(_132, _133, _134)));
    float _445 = isnan(0.0) ? _151 : (isnan(_151) ? 0.0 : max(_151, 0.0));
    float _184 = isnan(1.0) ? _445 : (isnan(_445) ? 1.0 : min(_445, 1.0));
    float _456 = isnan(0.0) ? _152 : (isnan(_152) ? 0.0 : max(_152, 0.0));
    float _185 = isnan(1.0) ? _456 : (isnan(_456) ? 1.0 : min(_456, 1.0));
    float _467 = isnan(0.0) ? _153 : (isnan(_153) ? 0.0 : max(_153, 0.0));
    float _186 = isnan(1.0) ? _467 : (isnan(_467) ? 1.0 : min(_467, 1.0));
    float _478 = isnan(0.0) ? _155 : (isnan(_155) ? 0.0 : max(_155, 0.0));
    float _187 = isnan(1.0) ? _478 : (isnan(_478) ? 1.0 : min(_478, 1.0));
    uint _189 = uint(roundEven(NORMAL.w));
    vec4 _194 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _196 = _194.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _326 = (cbMatDynParam._m0[5u].x * TEXCOORD_9) + cbMatDynParam._m0[5u].y;
        float _489 = isnan(0.0) ? _326 : (isnan(_326) ? 0.0 : max(_326, 0.0));
        float _327 = isnan(1.0) ? _489 : (isnan(_489) ? 1.0 : min(_489, 1.0));
        float _331 = (cbMatDynParam._m0[5u].z * TEXCOORD_9) + cbMatDynParam._m0[5u].w;
        float _500 = isnan(0.0) ? _331 : (isnan(_331) ? 0.0 : max(_331, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _500 : (isnan(_500) ? 1.0 : min(_500, 1.0))) - _327)) + _327) < ((_196 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _360;
    uint _216;
    vec4 _221;
    float _274;
    float _287;
    float _288;
    float _289;
    float _290;
    float _291;
    float _292;
    float _296;
    float _301;
    vec4 _305;
    float _307;
    float _308;
    bool _319;
    for (;;)
    {
        _216 = _189 * 13u;
        _221 = cbInstanceData._m0[(_216 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _225 = (cbMtdParam._m0[0u].x * _184) * _221.x;
        float _226 = (cbMtdParam._m0[0u].y * _185) * _221.y;
        float _227 = (cbMtdParam._m0[0u].z * _186) * _221.z;
        float _511 = isnan(0.0) ? _225 : (isnan(_225) ? 0.0 : max(_225, 0.0));
        float _228 = isnan(1.0) ? _511 : (isnan(_511) ? 1.0 : min(_511, 1.0));
        float _522 = isnan(0.0) ? _226 : (isnan(_226) ? 0.0 : max(_226, 0.0));
        float _229 = isnan(1.0) ? _522 : (isnan(_522) ? 1.0 : min(_522, 1.0));
        float _533 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
        float _230 = isnan(1.0) ? _533 : (isnan(_533) ? 1.0 : min(_533, 1.0));
        float _231 = isnan(0.0039369477890431880950927734375) ? _228 : (isnan(_228) ? 0.0039369477890431880950927734375 : max(_228, 0.0039369477890431880950927734375));
        float _233 = isnan(0.0039369477890431880950927734375) ? _229 : (isnan(_229) ? 0.0039369477890431880950927734375 : max(_229, 0.0039369477890431880950927734375));
        float _234 = isnan(0.0039369477890431880950927734375) ? _230 : (isnan(_230) ? 0.0039369477890431880950927734375 : max(_230, 0.0039369477890431880950927734375));
        float _235 = _231 + (-0.0599999986588954925537109375);
        float _237 = _233 + (-0.0599999986588954925537109375);
        float _238 = _234 + (-0.0599999986588954925537109375);
        float _242 = (_235 * _235) + (-0.0035999999381601810455322265625);
        float _244 = (_237 * _237) + (-0.0035999999381601810455322265625);
        float _245 = (_238 * _238) + (-0.0035999999381601810455322265625);
        float _255 = (sqrt(isnan(0.0) ? _242 : (isnan(_242) ? 0.0 : max(_242, 0.0))) - _235) * 16.666667938232421875;
        float _257 = (sqrt(isnan(0.0) ? _244 : (isnan(_244) ? 0.0 : max(_244, 0.0))) - _237) * 16.666667938232421875;
        float _258 = (sqrt(isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0))) - _238) * 16.666667938232421875;
        float _259 = isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0));
        float _260 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
        float _261 = isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0));
        float _272 = (((isnan(1.0) ? _260 : (isnan(_260) ? 1.0 : min(_260, 1.0))) * 0.58700001239776611328125) + ((isnan(1.0) ? _259 : (isnan(_259) ? 1.0 : min(_259, 1.0))) * 0.29890000820159912109375)) + ((isnan(1.0) ? _261 : (isnan(_261) ? 1.0 : min(_261, 1.0))) * 0.114000000059604644775390625);
        float _273 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
        _274 = isnan(1.0) ? _273 : (isnan(_273) ? 1.0 : min(_273, 1.0));
        float _277 = 1.0 - (isnan(0.99989998340606689453125) ? _274 : (isnan(_274) ? 0.99989998340606689453125 : min(_274, 0.99989998340606689453125)));
        float _284 = (cbMtdParam._m0[0u].x * (_231 / _277)) * _221.x;
        float _285 = (cbMtdParam._m0[0u].y * (_233 / _277)) * _221.y;
        float _286 = (cbMtdParam._m0[0u].z * (_234 / _277)) * _221.z;
        float _619 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
        _287 = isnan(1.0) ? _619 : (isnan(_619) ? 1.0 : min(_619, 1.0));
        float _630 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
        _288 = isnan(1.0) ? _630 : (isnan(_630) ? 1.0 : min(_630, 1.0));
        float _641 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
        _289 = isnan(1.0) ? _641 : (isnan(_641) ? 1.0 : min(_641, 1.0));
        _290 = _176 * _221.x;
        _291 = _177 * _221.y;
        _292 = _178 * _221.z;
        float _652 = isnan(0.0) ? _187 : (isnan(_187) ? 0.0 : max(_187, 0.0));
        _296 = cbMtdParam._m0[2u].w;
        _301 = cbInstanceData._m0[_216 + 6u].w * (isnan(1.0) ? _652 : (isnan(_652) ? 1.0 : min(_652, 1.0)));
        float _302 = _196 + (-0.5);
        _305 = cbMtdParam._m0[1u];
        _307 = _305.y * _302;
        _308 = _302 * 0.999000012874603271484375;
        _319 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_319)
        {
            if ((cbInstanceData._m0[_216 + 7u].x + _308) < 0.5)
            {
                _360 = true;
                break;
            }
        }
        if ((_221.w < 1.0) && ((_221.w + _308) < 0.5))
        {
            _360 = true;
            break;
        }
        if ((_307 + _154) < _305.x)
        {
            _360 = true;
            break;
        }
        _360 = false;
        break;
    }
    if (_360)
    {
        discard_state = true;
    }
    float _394;
    float _395;
    float _396;
    float _397;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _394 = _301;
        _395 = _301;
        _396 = _301;
        _397 = _301;
    }
    else
    {
        _394 = _296;
        _395 = 0.0;
        _396 = float(floatBitsToUint(cbInstanceData._m0[_216 + 5u]).x) * 0.0039215688593685626983642578125;
        _397 = TEXCOORD_1.w;
    }
    SV_Target.x = ((_132 * 0.5) * _182) + 0.500488758087158203125;
    SV_Target.y = ((_133 * 0.5) * _182) + 0.500488758087158203125;
    SV_Target.z = ((_134 * 0.5) * _182) + 0.500488758087158203125;
    SV_Target.w = _395;
    SV_Target_1.x = _274;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _397;
    SV_Target_2.x = _287;
    SV_Target_2.y = _288;
    SV_Target_2.z = _289;
    SV_Target_2.w = _396;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _395;
    SV_Target_4.x = _290 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _291 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _292 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _394;
    discard_exit();
}


