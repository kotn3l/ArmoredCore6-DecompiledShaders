#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_A_M0_NoLight_Addition_Soft_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _124 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _125 = _124 * NORMAL.x;
    float _126 = _124 * NORMAL.y;
    float _127 = _124 * NORMAL.z;
    vec4 _147 = texture(sampler2D(S_A_M0_NoLight_Addition_Soft_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _153 = _147.x * cbMtdParam._m0[9u].x;
    float _154 = _147.y * cbMtdParam._m0[9u].y;
    float _155 = _147.z * cbMtdParam._m0[9u].z;
    float _159 = inversesqrt(dot(vec3(_125, _126, _127), vec3(_125, _126, _127)));
    float _160 = isnan(0.0) ? _153 : (isnan(_153) ? 0.0 : max(_153, 0.0));
    float _161 = isnan(0.0) ? _154 : (isnan(_154) ? 0.0 : max(_154, 0.0));
    float _162 = isnan(0.0) ? _155 : (isnan(_155) ? 0.0 : max(_155, 0.0));
    uint _164 = uint(roundEven(NORMAL.w));
    float _206 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _216 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _206);
    float _217 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _206);
    float _218 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _206);
    vec4 _223 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _225 = _223.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _280 = sqrt(((_216 * _216) + (_217 * _217)) + (_218 * _218));
        float _287 = (cbMatDynParam._m0[5u].x * _280) + cbMatDynParam._m0[5u].y;
        float _407 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
        float _289 = isnan(1.0) ? _407 : (isnan(_407) ? 1.0 : min(_407, 1.0));
        float _293 = (cbMatDynParam._m0[5u].z * _280) + cbMatDynParam._m0[5u].w;
        float _418 = isnan(0.0) ? _293 : (isnan(_293) ? 0.0 : max(_293, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _418 : (isnan(_418) ? 1.0 : min(_418, 1.0))) - _289)) + _289) < ((_225 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _322;
    uint _245;
    vec4 _250;
    float _254;
    float _255;
    float _256;
    vec4 _260;
    float _262;
    float _263;
    bool _274;
    for (;;)
    {
        _245 = _164 * 13u;
        _250 = cbInstanceData._m0[(_245 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _254 = (cbMtdParam._m0[0u].x * _160) * _250.x;
        _255 = (cbMtdParam._m0[0u].y * _161) * _250.y;
        _256 = (cbMtdParam._m0[0u].z * _162) * _250.z;
        float _257 = _225 + (-0.5);
        _260 = cbMtdParam._m0[1u];
        _262 = _260.y * _257;
        _263 = _257 * 0.999000012874603271484375;
        _274 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_274)
        {
            if ((cbInstanceData._m0[_245 + 7u].x + _263) < 0.5)
            {
                _322 = true;
                break;
            }
        }
        if ((_250.w < 1.0) && ((_250.w + _263) < 0.5))
        {
            _322 = true;
            break;
        }
        if ((_262 + 1.0) < _260.x)
        {
            _322 = true;
            break;
        }
        _322 = false;
        break;
    }
    if (_322)
    {
        discard_state = true;
    }
    SV_Target.x = ((_125 * 0.5) * _159) + 0.500488758087158203125;
    SV_Target.y = ((_126 * 0.5) * _159) + 0.500488758087158203125;
    SV_Target.z = ((_127 * 0.5) * _159) + 0.500488758087158203125;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = (cbMtdParam._m0[1u].z != 0.0) ? 0.0 : TEXCOORD.z;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = _254 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _255 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _256 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = 0.0;
    discard_exit();
}


