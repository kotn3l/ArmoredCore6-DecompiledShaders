#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D S_A_M0_NoLight_Addition_Soft_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _551;
float _552;
float _553;
float _554;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _122 = texture(sampler2D(S_A_M0_NoLight_Addition_Soft_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _128 = _122.x * cbMtdParam._m0[9u].x;
    float _129 = _122.y * cbMtdParam._m0[9u].y;
    float _130 = _122.z * cbMtdParam._m0[9u].z;
    float _150 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _192 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _202 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _192);
    float _203 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _192);
    float _204 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _192);
    vec4 _209 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _211 = _209.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _289 = sqrt(((_202 * _202) + (_203 * _203)) + (_204 * _204));
        float _296 = (cbMatDynParam._m0[5u].x * _289) + cbMatDynParam._m0[5u].y;
        float _578 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
        float _298 = isnan(1.0) ? _578 : (isnan(_578) ? 1.0 : min(_578, 1.0));
        float _302 = (cbMatDynParam._m0[5u].z * _289) + cbMatDynParam._m0[5u].w;
        float _589 = isnan(0.0) ? _302 : (isnan(_302) ? 0.0 : max(_302, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _589 : (isnan(_589) ? 1.0 : min(_589, 1.0))) - _298)) + _298) < ((_211 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _237 = uint(roundEven(NORMAL.w)) * 13u;
    uint _239 = _237 + 9u;
    uint _240 = _239 + uint(cbMatDynParam._m0[0u].w);
    float _246 = (cbMtdParam._m0[0u].x * (isnan(0.0) ? _128 : (isnan(_128) ? 0.0 : max(_128, 0.0)))) * cbInstanceData._m0[_240].x;
    float _247 = (cbMtdParam._m0[0u].y * (isnan(0.0) ? _129 : (isnan(_129) ? 0.0 : max(_129, 0.0)))) * cbInstanceData._m0[_240].y;
    float _248 = (cbMtdParam._m0[0u].z * (isnan(0.0) ? _130 : (isnan(_130) ? 0.0 : max(_130, 0.0)))) * cbInstanceData._m0[_240].z;
    float _254 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _255 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _270 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_254, _255, (log2((isnan(cbSceneParam._m0[77u].w) ? _150 : (isnan(_150) ? cbSceneParam._m0[77u].w : min(_150, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _272 = _270.x;
    float _273 = _270.y;
    float _274 = _270.z;
    float _275 = _270.w;
    float _358;
    float _360;
    float _362;
    float _364;
    if (_150 > cbSceneParam._m0[78u].w)
    {
        float _319 = isnan(_150) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _150 : min(cbSceneParam._m0[80u].w, _150));
        float _320 = _319 / _150;
        float _331 = _320 * _202;
        float _332 = _203 * _320;
        float _333 = (-0.0) - _332;
        float _335 = _320 * _204;
        float _337 = (cbSceneParam._m0[77u].w * _333) / _319;
        float _338 = _337 + cbSceneParam._m0[79u].w;
        float _339 = cbSceneParam._m0[79u].w - _332;
        float _345 = sqrt(((_331 * _331) + (_332 * _332)) + (_335 * _335));
        float _348 = (1.0 - (cbSceneParam._m0[77u].w / _319)) * _345;
        float _354 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _356 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _480;
        if (abs((_333 - _337) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _480 = ((((_338 > 0.0) ? exp2(_354 * _338) : (2.0 - exp2(_356 * _338))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _348;
        }
        else
        {
            float _435 = 1.0 / cbSceneParam._m0[80u].x;
            float _436 = isnan(_339) ? _338 : (isnan(_338) ? _339 : max(_338, _339));
            float _437 = isnan(_339) ? _338 : (isnan(_338) ? _339 : min(_338, _339));
            float _446 = isnan(0.0) ? _436 : (isnan(_436) ? 0.0 : min(_436, 0.0));
            float _447 = isnan(0.0) ? _437 : (isnan(_437) ? 0.0 : min(_437, 0.0));
            _480 = ((abs(_345 / _333) * cbSceneParam._m0[80u].y) * ((((_446 - _447) * 2.0) - ((exp2(_354 * (isnan(0.0) ? _436 : (isnan(_436) ? 0.0 : max(_436, 0.0)))) - exp2(_354 * (isnan(0.0) ? _437 : (isnan(_437) ? 0.0 : max(_437, 0.0))))) * _435)) - ((exp2(_356 * _446) - exp2(_356 * _447)) * _435))) + (_348 * cbSceneParam._m0[80u].z);
        }
        vec4 _482 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_254, _255, 1.0), 0.0);
        float _491 = exp2((_480 * (-1.44269502162933349609375)) * (1.0 - _482.w));
        float _492 = log2(_491);
        float _508 = log2(_275);
        _358 = (exp2(_508 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_492 * cbSceneParam._m0[78u].x)) * _482.x) / cbSceneParam._m0[78u].x)) + _272;
        _360 = (exp2(_508 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_492 * cbSceneParam._m0[78u].y)) * _482.y) / cbSceneParam._m0[78u].y)) + _273;
        _362 = (exp2(_508 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_492 * cbSceneParam._m0[78u].z)) * _482.z) / cbSceneParam._m0[78u].z)) + _274;
        _364 = _491 * _275;
    }
    else
    {
        _358 = _272;
        _360 = _273;
        _362 = _274;
        _364 = _275;
    }
    bool _518;
    vec4 _374;
    vec4 _398;
    float _400;
    float _405;
    float _406;
    float _407;
    float _408;
    bool _419;
    for (;;)
    {
        _374 = cbMatDynParam._m0[0u];
        float _376 = roundEven(_374.y);
        bool _377 = _376 == 3.0;
        float _379 = log2(_364);
        float _386 = _246 * exp2(_379 * cbSceneParam._m0[78u].x);
        float _387 = _247 * exp2(_379 * cbSceneParam._m0[78u].y);
        float _388 = _248 * exp2(_379 * cbSceneParam._m0[78u].z);
        float _395 = _211 + (-0.5);
        _398 = cbMtdParam._m0[1u];
        _400 = _398.y * _395;
        float _404 = (_376 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _405 = _404 * (_377 ? _386 : (_386 + (cbSceneParam._m0[72u].w * _358)));
        _406 = _404 * (_377 ? _387 : (_387 + (cbSceneParam._m0[72u].w * _360)));
        _407 = _404 * (_377 ? _388 : (_388 + (cbSceneParam._m0[72u].w * _362)));
        _408 = _395 * 0.999000012874603271484375;
        _419 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_419)
        {
            if ((cbInstanceData._m0[_237 + 7u].x + _408) < 0.5)
            {
                _518 = true;
                break;
            }
        }
        uint _472 = _239 + uint(_374.w);
        if ((cbInstanceData._m0[_472].w < 1.0) && ((cbInstanceData._m0[_472].w + _408) < 0.5))
        {
            _518 = true;
            break;
        }
        if ((_400 + 1.0) < _398.x)
        {
            _518 = true;
            break;
        }
        _518 = false;
        break;
    }
    if (_518)
    {
        discard_state = true;
    }
    SV_Target.x = _405;
    SV_Target.y = _406;
    SV_Target.z = _407;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    discard_exit();
}


