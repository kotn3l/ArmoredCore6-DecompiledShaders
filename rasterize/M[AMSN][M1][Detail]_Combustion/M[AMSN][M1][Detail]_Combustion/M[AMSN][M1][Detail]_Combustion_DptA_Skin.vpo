#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out float TEXCOORD_3;
layout(location = 3, component = 1) out float TEXCOORD_1_1;
layout(location = 4) out vec4 TEXCOORD_3_1;
layout(location = 3, component = 2) out float TEXCOORD_6;
layout(location = 3, component = 3) out float TEXCOORD_7;
layout(location = 5) out float TEXCOORD_8;
layout(location = 5, component = 1) out vec2 TEXCOORD_10;
layout(location = 5, component = 3) out float TEXCOORD_14;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3 = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_3_1.x = 0.0;
    TEXCOORD_3_1.y = 0.0;
    TEXCOORD_3_1.z = 0.0;
    TEXCOORD_3_1.w = 0.0;
    TEXCOORD_6 = 0.0;
    TEXCOORD_7 = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_14 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _183 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _185 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _186 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _195 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _207 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _209 = texelFetch(g_InstanceIndexBuffer, int(_207));
    uint _210 = _209.x;
    precise float _211 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _216 = isnan(_211) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _211 : max(0.001000000047497451305389404296875, _211));
    precise float _218 = BLENDWEIGHT.x / _216;
    precise float _219 = BLENDWEIGHT.y / _216;
    precise float _220 = BLENDWEIGHT.z / _216;
    precise float _221 = BLENDWEIGHT.w / _216;
    uint _223 = _210 * 13u;
    uvec4 _228 = floatBitsToUint(cbInstanceData._m0[_223 + 4u]);
    uint _229 = _228.x;
    uint _231 = (_229 + uint(float(BLENDINDICES.x))) * 3u;
    uint _238 = _231 + 1u;
    uint _245 = _231 + 2u;
    precise float _252 = _218 * cbObjMatrix._m0[_231].x;
    precise float _253 = _218 * cbObjMatrix._m0[_238].x;
    precise float _254 = _218 * cbObjMatrix._m0[_245].x;
    precise float _255 = _218 * cbObjMatrix._m0[_231].y;
    precise float _256 = _218 * cbObjMatrix._m0[_238].y;
    precise float _257 = _218 * cbObjMatrix._m0[_245].y;
    precise float _258 = _218 * cbObjMatrix._m0[_231].z;
    precise float _259 = _218 * cbObjMatrix._m0[_238].z;
    precise float _260 = _218 * cbObjMatrix._m0[_245].z;
    precise float _261 = _218 * cbObjMatrix._m0[_231].w;
    precise float _262 = _218 * cbObjMatrix._m0[_238].w;
    precise float _263 = _218 * cbObjMatrix._m0[_245].w;
    uint _266 = (_229 + uint(float(BLENDINDICES.y))) * 3u;
    uint _273 = _266 + 1u;
    uint _280 = _266 + 2u;
    precise float _287 = _219 * cbObjMatrix._m0[_266].x;
    precise float _288 = _219 * cbObjMatrix._m0[_273].x;
    precise float _289 = _219 * cbObjMatrix._m0[_280].x;
    precise float _290 = _219 * cbObjMatrix._m0[_266].y;
    precise float _291 = _219 * cbObjMatrix._m0[_273].y;
    precise float _292 = _219 * cbObjMatrix._m0[_280].y;
    precise float _293 = _219 * cbObjMatrix._m0[_266].z;
    precise float _294 = _219 * cbObjMatrix._m0[_273].z;
    precise float _295 = _219 * cbObjMatrix._m0[_280].z;
    precise float _296 = _219 * cbObjMatrix._m0[_266].w;
    precise float _297 = _219 * cbObjMatrix._m0[_273].w;
    precise float _298 = _219 * cbObjMatrix._m0[_280].w;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    precise float _308 = _261 + _296;
    precise float _309 = _262 + _297;
    precise float _310 = _263 + _298;
    uint _313 = (_229 + uint(float(BLENDINDICES.z))) * 3u;
    uint _320 = _313 + 1u;
    uint _327 = _313 + 2u;
    precise float _334 = _220 * cbObjMatrix._m0[_313].x;
    precise float _335 = _220 * cbObjMatrix._m0[_320].x;
    precise float _336 = _220 * cbObjMatrix._m0[_327].x;
    precise float _337 = _220 * cbObjMatrix._m0[_313].y;
    precise float _338 = _220 * cbObjMatrix._m0[_320].y;
    precise float _339 = _220 * cbObjMatrix._m0[_327].y;
    precise float _340 = _220 * cbObjMatrix._m0[_313].z;
    precise float _341 = _220 * cbObjMatrix._m0[_320].z;
    precise float _342 = _220 * cbObjMatrix._m0[_327].z;
    precise float _343 = _220 * cbObjMatrix._m0[_313].w;
    precise float _344 = _220 * cbObjMatrix._m0[_320].w;
    precise float _345 = _220 * cbObjMatrix._m0[_327].w;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    uint _360 = (_229 + uint(float(BLENDINDICES.w))) * 3u;
    uint _367 = _360 + 1u;
    uint _374 = _360 + 2u;
    precise float _381 = _221 * cbObjMatrix._m0[_360].x;
    precise float _382 = _221 * cbObjMatrix._m0[_367].x;
    precise float _383 = _221 * cbObjMatrix._m0[_374].x;
    precise float _384 = _221 * cbObjMatrix._m0[_360].y;
    precise float _385 = _221 * cbObjMatrix._m0[_367].y;
    precise float _386 = _221 * cbObjMatrix._m0[_374].y;
    precise float _387 = _221 * cbObjMatrix._m0[_360].z;
    precise float _388 = _221 * cbObjMatrix._m0[_367].z;
    precise float _389 = _221 * cbObjMatrix._m0[_374].z;
    precise float _390 = _221 * cbObjMatrix._m0[_360].w;
    precise float _391 = _221 * cbObjMatrix._m0[_367].w;
    precise float _392 = _221 * cbObjMatrix._m0[_374].w;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = POSITION.x * _393;
    precise float _406 = POSITION.y * _396;
    precise float _407 = _406 + _405;
    precise float _408 = POSITION.z * _399;
    precise float _409 = _408 + _407;
    precise float _410 = 1.0 * _402;
    precise float _411 = _410 + _409;
    precise float _412 = POSITION.x * _394;
    precise float _413 = POSITION.y * _397;
    precise float _414 = _413 + _412;
    precise float _415 = POSITION.z * _400;
    precise float _416 = _415 + _414;
    precise float _417 = 1.0 * _403;
    precise float _418 = _417 + _416;
    precise float _419 = POSITION.x * _395;
    precise float _420 = POSITION.y * _398;
    precise float _421 = _420 + _419;
    precise float _422 = POSITION.z * _401;
    precise float _423 = _422 + _421;
    precise float _424 = 1.0 * _404;
    precise float _425 = _424 + _423;
    float _431 = cbSceneParam._m0[3u].x - _411;
    float _432 = cbSceneParam._m0[3u].y - _418;
    float _433 = cbSceneParam._m0[3u].z - _425;
    precise float _459 = _411 - cbSceneParam._m0[3u].x;
    precise float _460 = _418 - cbSceneParam._m0[3u].y;
    precise float _461 = _425 - cbSceneParam._m0[3u].z;
    precise float _489 = _459 * cbSceneParam._m0[24u].x;
    precise float _490 = _460 * cbSceneParam._m0[24u].y;
    precise float _491 = _490 + _489;
    precise float _492 = _461 * cbSceneParam._m0[24u].z;
    precise float _493 = _492 + _491;
    precise float _494 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _495 = _494 + _493;
    precise float _496 = _459 * cbSceneParam._m0[25u].x;
    precise float _497 = _460 * cbSceneParam._m0[25u].y;
    precise float _498 = _497 + _496;
    precise float _499 = _461 * cbSceneParam._m0[25u].z;
    precise float _500 = _499 + _498;
    precise float _501 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _502 = _501 + _500;
    precise float _503 = _459 * cbSceneParam._m0[26u].x;
    precise float _504 = _460 * cbSceneParam._m0[26u].y;
    precise float _505 = _504 + _503;
    precise float _506 = _461 * cbSceneParam._m0[26u].z;
    precise float _507 = _506 + _505;
    precise float _508 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _509 = _508 + _507;
    precise float _510 = _459 * cbSceneParam._m0[27u].x;
    precise float _511 = _460 * cbSceneParam._m0[27u].y;
    precise float _512 = _511 + _510;
    precise float _513 = _461 * cbSceneParam._m0[27u].z;
    precise float _514 = _513 + _512;
    precise float _515 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _516 = _515 + _514;
    gl_Position.x = _495;
    gl_Position.y = _502;
    gl_Position.z = _509;
    gl_Position.w = _516;
    NORMAL_1.x = fma(_186, _399, fma(_185, _396, _393 * _183));
    NORMAL_1.y = fma(_186, _400, fma(_185, _397, _394 * _183));
    NORMAL_1.z = fma(_186, _401, fma(_185, _398, _395 * _183));
    NORMAL_1.w = float(_210);
    TANGENT_1.x = fma(_197, _399, fma(_196, _396, _393 * _195));
    TANGENT_1.y = fma(_197, _400, fma(_196, _397, _394 * _195));
    TANGENT_1.z = fma(_197, _401, fma(_196, _398, _395 * _195));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3 = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1 = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3_1.x = TEXCOORD_1.x;
    TEXCOORD_3_1.y = TEXCOORD_1.y;
    TEXCOORD_3_1.z = TEXCOORD_1.z;
    TEXCOORD_3_1.w = COLOR_1.x;
    TEXCOORD_6 = TEXCOORD_2.x;
    TEXCOORD_7 = TEXCOORD_2.y;
    TEXCOORD_8 = TEXCOORD_2.z;
    TEXCOORD_10.x = _509;
    TEXCOORD_10.y = _516;
    TEXCOORD_14 = sqrt(((_431 * _431) + (_432 * _432)) + (_433 * _433));
    gl_ClipDistance[0u] = dot(vec4(_495, _502, _509, _516), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_495, _502, _509, _516), vec4(cbInstanceData._m0[_223 + 3u]));
}


