#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_4;
layout(location = 4, component = 1) out vec2 TEXCOORD_6;
layout(location = 4, component = 3) out float TEXCOORD_10;

void main()
{
    uint _83 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_10 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _187 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _190 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _439;
    float _440;
    float _441;
    float _442;
    float _443;
    float _444;
    float _445;
    float _446;
    float _447;
    float _448;
    float _449;
    float _450;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _223 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _83;
        precise float _227 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _232 = isnan(_227) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _227 : max(0.001000000047497451305389404296875, _227));
        precise float _234 = BLENDWEIGHT.x / _232;
        precise float _235 = BLENDWEIGHT.y / _232;
        precise float _236 = BLENDWEIGHT.z / _232;
        precise float _237 = BLENDWEIGHT.w / _232;
        uvec4 _244 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_223)).x * 13u) + 4u]);
        uint _245 = _244.x;
        uint _247 = (_245 + uint(float(BLENDINDICES.x))) * 3u;
        uint _254 = _247 + 1u;
        uint _261 = _247 + 2u;
        precise float _268 = _234 * cbObjMatrix._m0[_247].x;
        precise float _269 = _234 * cbObjMatrix._m0[_254].x;
        precise float _270 = _234 * cbObjMatrix._m0[_261].x;
        precise float _271 = _234 * cbObjMatrix._m0[_247].y;
        precise float _272 = _234 * cbObjMatrix._m0[_254].y;
        precise float _273 = _234 * cbObjMatrix._m0[_261].y;
        precise float _274 = _234 * cbObjMatrix._m0[_247].z;
        precise float _275 = _234 * cbObjMatrix._m0[_254].z;
        precise float _276 = _234 * cbObjMatrix._m0[_261].z;
        precise float _277 = _234 * cbObjMatrix._m0[_247].w;
        precise float _278 = _234 * cbObjMatrix._m0[_254].w;
        precise float _279 = _234 * cbObjMatrix._m0[_261].w;
        uint _282 = (_245 + uint(float(BLENDINDICES.y))) * 3u;
        uint _289 = _282 + 1u;
        uint _296 = _282 + 2u;
        precise float _303 = _235 * cbObjMatrix._m0[_282].x;
        precise float _304 = _235 * cbObjMatrix._m0[_289].x;
        precise float _305 = _235 * cbObjMatrix._m0[_296].x;
        precise float _306 = _235 * cbObjMatrix._m0[_282].y;
        precise float _307 = _235 * cbObjMatrix._m0[_289].y;
        precise float _308 = _235 * cbObjMatrix._m0[_296].y;
        precise float _309 = _235 * cbObjMatrix._m0[_282].z;
        precise float _310 = _235 * cbObjMatrix._m0[_289].z;
        precise float _311 = _235 * cbObjMatrix._m0[_296].z;
        precise float _312 = _235 * cbObjMatrix._m0[_282].w;
        precise float _313 = _235 * cbObjMatrix._m0[_289].w;
        precise float _314 = _235 * cbObjMatrix._m0[_296].w;
        precise float _315 = _268 + _303;
        precise float _316 = _269 + _304;
        precise float _317 = _270 + _305;
        precise float _318 = _271 + _306;
        precise float _319 = _272 + _307;
        precise float _320 = _273 + _308;
        precise float _321 = _274 + _309;
        precise float _322 = _275 + _310;
        precise float _323 = _276 + _311;
        precise float _324 = _277 + _312;
        precise float _325 = _278 + _313;
        precise float _326 = _279 + _314;
        uint _329 = (_245 + uint(float(BLENDINDICES.z))) * 3u;
        uint _336 = _329 + 1u;
        uint _343 = _329 + 2u;
        precise float _350 = _236 * cbObjMatrix._m0[_329].x;
        precise float _351 = _236 * cbObjMatrix._m0[_336].x;
        precise float _352 = _236 * cbObjMatrix._m0[_343].x;
        precise float _353 = _236 * cbObjMatrix._m0[_329].y;
        precise float _354 = _236 * cbObjMatrix._m0[_336].y;
        precise float _355 = _236 * cbObjMatrix._m0[_343].y;
        precise float _356 = _236 * cbObjMatrix._m0[_329].z;
        precise float _357 = _236 * cbObjMatrix._m0[_336].z;
        precise float _358 = _236 * cbObjMatrix._m0[_343].z;
        precise float _359 = _236 * cbObjMatrix._m0[_329].w;
        precise float _360 = _236 * cbObjMatrix._m0[_336].w;
        precise float _361 = _236 * cbObjMatrix._m0[_343].w;
        precise float _362 = _315 + _350;
        precise float _363 = _316 + _351;
        precise float _364 = _317 + _352;
        precise float _365 = _318 + _353;
        precise float _366 = _319 + _354;
        precise float _367 = _320 + _355;
        precise float _368 = _321 + _356;
        precise float _369 = _322 + _357;
        precise float _370 = _323 + _358;
        precise float _371 = _324 + _359;
        precise float _372 = _325 + _360;
        precise float _373 = _326 + _361;
        uint _376 = (_245 + uint(float(BLENDINDICES.w))) * 3u;
        uint _383 = _376 + 1u;
        uint _390 = _376 + 2u;
        precise float _397 = _237 * cbObjMatrix._m0[_376].x;
        precise float _398 = _237 * cbObjMatrix._m0[_383].x;
        precise float _399 = _237 * cbObjMatrix._m0[_390].x;
        precise float _400 = _237 * cbObjMatrix._m0[_376].y;
        precise float _401 = _237 * cbObjMatrix._m0[_383].y;
        precise float _402 = _237 * cbObjMatrix._m0[_390].y;
        precise float _403 = _237 * cbObjMatrix._m0[_376].z;
        precise float _404 = _237 * cbObjMatrix._m0[_383].z;
        precise float _405 = _237 * cbObjMatrix._m0[_390].z;
        precise float _406 = _237 * cbObjMatrix._m0[_376].w;
        precise float _407 = _237 * cbObjMatrix._m0[_383].w;
        precise float _408 = _237 * cbObjMatrix._m0[_390].w;
        precise float _409 = _362 + _397;
        precise float _410 = _363 + _398;
        precise float _411 = _364 + _399;
        precise float _412 = _365 + _400;
        precise float _413 = _366 + _401;
        precise float _414 = _367 + _402;
        precise float _415 = _368 + _403;
        precise float _416 = _369 + _404;
        precise float _417 = _370 + _405;
        precise float _418 = _371 + _406;
        precise float _419 = _372 + _407;
        precise float _420 = _373 + _408;
        _439 = _409;
        _440 = _412;
        _441 = _415;
        _442 = _418;
        _443 = _410;
        _444 = _413;
        _445 = _416;
        _446 = _419;
        _447 = _411;
        _448 = _414;
        _449 = _417;
        _450 = _420;
    }
    else
    {
        _439 = cbvModelParam._m0[0u].x;
        _440 = cbvModelParam._m0[0u].y;
        _441 = cbvModelParam._m0[0u].z;
        _442 = cbvModelParam._m0[0u].w;
        _443 = cbvModelParam._m0[1u].x;
        _444 = cbvModelParam._m0[1u].y;
        _445 = cbvModelParam._m0[1u].z;
        _446 = cbvModelParam._m0[1u].w;
        _447 = cbvModelParam._m0[2u].x;
        _448 = cbvModelParam._m0[2u].y;
        _449 = cbvModelParam._m0[2u].z;
        _450 = cbvModelParam._m0[2u].w;
    }
    precise float _451 = POSITION.x * _439;
    precise float _452 = POSITION.y * _440;
    precise float _453 = _452 + _451;
    precise float _454 = POSITION.z * _441;
    precise float _455 = _454 + _453;
    precise float _456 = 1.0 * _442;
    precise float _457 = _456 + _455;
    precise float _458 = POSITION.x * _443;
    precise float _459 = POSITION.y * _444;
    precise float _460 = _459 + _458;
    precise float _461 = POSITION.z * _445;
    precise float _462 = _461 + _460;
    precise float _463 = 1.0 * _446;
    precise float _464 = _463 + _462;
    precise float _465 = POSITION.x * _447;
    precise float _466 = POSITION.y * _448;
    precise float _467 = _466 + _465;
    precise float _468 = POSITION.z * _449;
    precise float _469 = _468 + _467;
    precise float _470 = 1.0 * _450;
    precise float _471 = _470 + _469;
    float _477 = cbSceneParam._m0[3u].x - _457;
    float _478 = cbSceneParam._m0[3u].y - _464;
    float _479 = cbSceneParam._m0[3u].z - _471;
    uint _499 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _83;
    uvec4 _501 = texelFetch(g_InstanceIndexBuffer, int(_499));
    uint _502 = _501.x;
    precise float _513 = _457 - cbSceneParam._m0[3u].x;
    precise float _514 = _464 - cbSceneParam._m0[3u].y;
    precise float _515 = _471 - cbSceneParam._m0[3u].z;
    precise float _543 = _513 * cbSceneParam._m0[24u].x;
    precise float _544 = _514 * cbSceneParam._m0[24u].y;
    precise float _545 = _544 + _543;
    precise float _546 = _515 * cbSceneParam._m0[24u].z;
    precise float _547 = _546 + _545;
    precise float _548 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _549 = _548 + _547;
    precise float _550 = _513 * cbSceneParam._m0[25u].x;
    precise float _551 = _514 * cbSceneParam._m0[25u].y;
    precise float _552 = _551 + _550;
    precise float _553 = _515 * cbSceneParam._m0[25u].z;
    precise float _554 = _553 + _552;
    precise float _555 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _556 = _555 + _554;
    precise float _557 = _513 * cbSceneParam._m0[26u].x;
    precise float _558 = _514 * cbSceneParam._m0[26u].y;
    precise float _559 = _558 + _557;
    precise float _560 = _515 * cbSceneParam._m0[26u].z;
    precise float _561 = _560 + _559;
    precise float _562 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _563 = _562 + _561;
    precise float _564 = _513 * cbSceneParam._m0[27u].x;
    precise float _565 = _514 * cbSceneParam._m0[27u].y;
    precise float _566 = _565 + _564;
    precise float _567 = _515 * cbSceneParam._m0[27u].z;
    precise float _568 = _567 + _566;
    precise float _569 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _570 = _569 + _568;
    gl_Position.x = _549;
    gl_Position.y = _556;
    gl_Position.z = _563;
    gl_Position.w = _570;
    NORMAL_1.x = fma(_190, _441, fma(_189, _440, _439 * _187));
    NORMAL_1.y = fma(_190, _445, fma(_189, _444, _443 * _187));
    NORMAL_1.z = fma(_190, _449, fma(_189, _448, _447 * _187));
    NORMAL_1.w = float(_502);
    TANGENT_1.x = fma(_199, _441, fma(_198, _440, _439 * _197));
    TANGENT_1.y = fma(_199, _445, fma(_198, _444, _443 * _197));
    TANGENT_1.z = fma(_199, _449, fma(_198, _448, _447 * _197));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_6.x = _563;
    TEXCOORD_6.y = _570;
    TEXCOORD_10 = sqrt(((_477 * _477) + (_478 * _478)) + (_479 * _479));
    gl_ClipDistance[0u] = dot(vec4(_549, _556, _563, _570), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_549, _556, _563, _570), vec4(cbInstanceData._m0[(_502 * 13u) + 3u]));
}


