#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_1;
layout(location = 7) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out float TEXCOORD_5;
layout(location = 5, component = 1) out float TEXCOORD_6;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 5, component = 2) out vec2 TEXCOORD_11;
layout(location = 7) out float TEXCOORD_15;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5 = 0.0;
    TEXCOORD_6 = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_15 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _201 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _203 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _204 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _214 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _215 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _226 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _227 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _228 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _234 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _236 = texelFetch(g_InstanceIndexBuffer, int(_234));
    uint _237 = _236.x;
    uint _239 = _237 * 13u;
    uint _247 = (floatBitsToUint(cbInstanceData._m0[_239 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _254 = _247 + 1u;
    uint _261 = _247 + 2u;
    precise float _268 = POSITION.x * cbObjMatrix._m0[_247].x;
    precise float _269 = POSITION.y * cbObjMatrix._m0[_247].y;
    precise float _270 = _269 + _268;
    precise float _271 = POSITION.z * cbObjMatrix._m0[_247].z;
    precise float _272 = _271 + _270;
    precise float _273 = 1.0 * cbObjMatrix._m0[_247].w;
    precise float _275 = _273 + _272;
    precise float _276 = POSITION.x * cbObjMatrix._m0[_254].x;
    precise float _277 = POSITION.y * cbObjMatrix._m0[_254].y;
    precise float _278 = _277 + _276;
    precise float _279 = POSITION.z * cbObjMatrix._m0[_254].z;
    precise float _280 = _279 + _278;
    precise float _281 = 1.0 * cbObjMatrix._m0[_254].w;
    precise float _282 = _281 + _280;
    precise float _283 = POSITION.x * cbObjMatrix._m0[_261].x;
    precise float _284 = POSITION.y * cbObjMatrix._m0[_261].y;
    precise float _285 = _284 + _283;
    precise float _286 = POSITION.z * cbObjMatrix._m0[_261].z;
    precise float _287 = _286 + _285;
    precise float _288 = 1.0 * cbObjMatrix._m0[_261].w;
    precise float _289 = _288 + _287;
    float _295 = cbSceneParam._m0[3u].x - _275;
    float _296 = cbSceneParam._m0[3u].y - _282;
    float _297 = cbSceneParam._m0[3u].z - _289;
    precise float _333 = _275 - cbSceneParam._m0[3u].x;
    precise float _334 = _282 - cbSceneParam._m0[3u].y;
    precise float _335 = _289 - cbSceneParam._m0[3u].z;
    precise float _363 = _333 * cbSceneParam._m0[24u].x;
    precise float _364 = _334 * cbSceneParam._m0[24u].y;
    precise float _365 = _364 + _363;
    precise float _366 = _335 * cbSceneParam._m0[24u].z;
    precise float _367 = _366 + _365;
    precise float _368 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _369 = _368 + _367;
    precise float _370 = _333 * cbSceneParam._m0[25u].x;
    precise float _371 = _334 * cbSceneParam._m0[25u].y;
    precise float _372 = _371 + _370;
    precise float _373 = _335 * cbSceneParam._m0[25u].z;
    precise float _374 = _373 + _372;
    precise float _375 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _376 = _375 + _374;
    precise float _377 = _333 * cbSceneParam._m0[26u].x;
    precise float _378 = _334 * cbSceneParam._m0[26u].y;
    precise float _379 = _378 + _377;
    precise float _380 = _335 * cbSceneParam._m0[26u].z;
    precise float _381 = _380 + _379;
    precise float _382 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _383 = _382 + _381;
    precise float _384 = _333 * cbSceneParam._m0[27u].x;
    precise float _385 = _334 * cbSceneParam._m0[27u].y;
    precise float _386 = _385 + _384;
    precise float _387 = _335 * cbSceneParam._m0[27u].z;
    precise float _388 = _387 + _386;
    precise float _389 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _390 = _389 + _388;
    gl_Position.x = _369;
    gl_Position.y = _376;
    gl_Position.z = _383;
    gl_Position.w = _390;
    NORMAL_1.x = fma(_204, cbObjMatrix._m0[_247].z, fma(_203, cbObjMatrix._m0[_247].y, cbObjMatrix._m0[_247].x * _201));
    NORMAL_1.y = fma(_204, cbObjMatrix._m0[_254].z, fma(_203, cbObjMatrix._m0[_254].y, cbObjMatrix._m0[_254].x * _201));
    NORMAL_1.z = fma(_204, cbObjMatrix._m0[_261].z, fma(_203, cbObjMatrix._m0[_261].y, cbObjMatrix._m0[_261].x * _201));
    NORMAL_1.w = float(_237);
    TANGENT_1.x = fma(_216, cbObjMatrix._m0[_247].z, fma(_215, cbObjMatrix._m0[_247].y, cbObjMatrix._m0[_247].x * _214));
    TANGENT_1.y = fma(_216, cbObjMatrix._m0[_254].z, fma(_215, cbObjMatrix._m0[_254].y, cbObjMatrix._m0[_254].x * _214));
    TANGENT_1.z = fma(_216, cbObjMatrix._m0[_261].z, fma(_215, cbObjMatrix._m0[_261].y, cbObjMatrix._m0[_261].x * _214));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_228, cbObjMatrix._m0[_247].z, fma(_227, cbObjMatrix._m0[_247].y, cbObjMatrix._m0[_247].x * _226));
    TANGENT_2_1.y = fma(_228, cbObjMatrix._m0[_254].z, fma(_227, cbObjMatrix._m0[_254].y, cbObjMatrix._m0[_254].x * _226));
    TANGENT_2_1.z = fma(_228, cbObjMatrix._m0[_261].z, fma(_227, cbObjMatrix._m0[_261].y, cbObjMatrix._m0[_261].x * _226));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5 = TEXCOORD_1.x;
    TEXCOORD_6 = TEXCOORD_1.y;
    TEXCOORD_7.x = TEXCOORD_2.x;
    TEXCOORD_7.y = TEXCOORD_2.y;
    TEXCOORD_7.z = TEXCOORD_2.z;
    TEXCOORD_7.w = COLOR_1.x;
    TEXCOORD_11.x = _383;
    TEXCOORD_11.y = _390;
    TEXCOORD_15 = sqrt(((_295 * _295) + (_296 * _296)) + (_297 * _297));
    gl_ClipDistance[0u] = dot(vec4(_369, _376, _383, _390), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_369, _376, _383, _390), vec4(cbInstanceData._m0[_239 + 3u]));
}


