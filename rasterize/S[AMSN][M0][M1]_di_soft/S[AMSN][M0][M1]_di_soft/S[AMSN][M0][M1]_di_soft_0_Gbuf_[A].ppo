#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_M0_M1_di_soft_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_M0_M1_di_soft_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D S_AMSN_M0_M1_di_soft_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _149 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _150 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _151 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _157 = inversesqrt(dot(vec3(_149, _150, _151), vec3(_149, _150, _151)));
    float _164 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _171 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _194 = texture(sampler2D(S_AMSN_M0_M1_di_soft_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _201 = _194.x * cbMtdParam._m0[9u].x;
    float _202 = _194.y * cbMtdParam._m0[9u].y;
    float _203 = _194.z * cbMtdParam._m0[9u].z;
    vec4 _216 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _218 = _216.x;
    float _242 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _218)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _218))) - POSITION_1.w) / cbMtdParam._m0[10u].x;
    float _550 = isnan(0.0) ? _242 : (isnan(_242) ? 0.0 : max(_242, 0.0));
    float _247 = gl_FragCoord.x * 0.125;
    float _249 = gl_FragCoord.y * 0.125;
    float _259 = float(((_194.w * TEXCOORD_1.z) * (isnan(1.0) ? _550 : (isnan(_550) ? 1.0 : min(_550, 1.0)))) >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_247, _249)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    vec4 _271 = texture(sampler2D(S_AMSN_M0_M1_di_soft_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _273 = _271.x;
    vec4 _285 = texture(sampler2D(S_AMSN_M0_M1_di_soft_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _289 = _285.z;
    float _293 = (_285.x * 2.0) + (-1.0);
    float _295 = (_285.y * 2.0) + (-1.0);
    float _296 = dot(vec2(_293, _295), vec2(_293, _295));
    float _561 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
    float _301 = sqrt(1.0 - (isnan(1.0) ? _561 : (isnan(_561) ? 1.0 : min(_561, 1.0))));
    float _304 = fma(_301, _164 * NORMAL.x, fma(_295, _171 * TANGENT.x, (_157 * _149) * _293));
    float _307 = fma(_301, _164 * NORMAL.y, fma(_295, _171 * TANGENT.y, (_157 * _150) * _293));
    float _310 = fma(_301, _164 * NORMAL.z, fma(_295, _171 * TANGENT.z, (_157 * _151) * _293));
    float _314 = inversesqrt(dot(vec3(_304, _307, _310), vec3(_304, _307, _310)));
    float _572 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
    float _583 = isnan(0.0) ? _201 : (isnan(_201) ? 0.0 : max(_201, 0.0));
    float _316 = isnan(1.0) ? _583 : (isnan(_583) ? 1.0 : min(_583, 1.0));
    float _594 = isnan(0.0) ? _202 : (isnan(_202) ? 0.0 : max(_202, 0.0));
    float _317 = isnan(1.0) ? _594 : (isnan(_594) ? 1.0 : min(_594, 1.0));
    float _605 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _318 = isnan(1.0) ? _605 : (isnan(_605) ? 1.0 : min(_605, 1.0));
    float _616 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    uint _321 = uint(roundEven(NORMAL.w));
    float _362 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _372 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _362);
    float _373 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _362);
    float _374 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _362);
    vec4 _375 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_247, _249));
    float _377 = _375.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _438 = sqrt(((_372 * _372) + (_373 * _373)) + (_374 * _374));
        float _445 = (cbMatDynParam._m0[5u].x * _438) + cbMatDynParam._m0[5u].y;
        float _627 = isnan(0.0) ? _445 : (isnan(_445) ? 0.0 : max(_445, 0.0));
        float _446 = isnan(1.0) ? _627 : (isnan(_627) ? 1.0 : min(_627, 1.0));
        float _450 = (cbMatDynParam._m0[5u].z * _438) + cbMatDynParam._m0[5u].w;
        float _638 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _638 : (isnan(_638) ? 1.0 : min(_638, 1.0))) - _446)) + _446) < ((_377 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _477;
    uint _396;
    vec4 _401;
    float _408;
    float _409;
    float _410;
    float _414;
    vec4 _418;
    float _420;
    float _421;
    bool _432;
    for (;;)
    {
        _396 = _321 * 13u;
        _401 = cbInstanceData._m0[(_396 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _405 = (cbMtdParam._m0[0u].x * _316) * _401.x;
        float _406 = (cbMtdParam._m0[0u].y * _317) * _401.y;
        float _407 = (cbMtdParam._m0[0u].z * _318) * _401.z;
        float _649 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
        _408 = isnan(1.0) ? _649 : (isnan(_649) ? 1.0 : min(_649, 1.0));
        float _660 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
        _409 = isnan(1.0) ? _660 : (isnan(_660) ? 1.0 : min(_660, 1.0));
        float _671 = isnan(0.0) ? _407 : (isnan(_407) ? 0.0 : max(_407, 0.0));
        _410 = isnan(1.0) ? _671 : (isnan(_671) ? 1.0 : min(_671, 1.0));
        _414 = cbInstanceData._m0[_396 + 6u].w;
        float _415 = _377 + (-0.5);
        _418 = cbMtdParam._m0[1u];
        _420 = _418.y * _415;
        _421 = _415 * 0.999000012874603271484375;
        _432 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_432)
        {
            if ((cbInstanceData._m0[_396 + 7u].x + _421) < 0.5)
            {
                _477 = true;
                break;
            }
        }
        if ((_401.w < 1.0) && ((_401.w + _421) < 0.5))
        {
            _477 = true;
            break;
        }
        if ((_420 + _259) < _418.x)
        {
            _477 = true;
            break;
        }
        _477 = false;
        break;
    }
    if (_477)
    {
        discard_state = true;
    }
    bool _503 = cbMtdParam._m0[1u].z != 0.0;
    float _504 = _503 ? _414 : 0.0;
    SV_Target.x = ((_304 * 0.5) * _314) + 0.500488758087158203125;
    SV_Target.y = ((_307 * 0.5) * _314) + 0.500488758087158203125;
    SV_Target.z = ((_310 * 0.5) * _314) + 0.500488758087158203125;
    SV_Target.w = _504;
    SV_Target_1.x = isnan(1.0) ? _616 : (isnan(_616) ? 1.0 : min(_616, 1.0));
    SV_Target_1.y = isnan(1.0) ? _572 : (isnan(_572) ? 1.0 : min(_572, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _503 ? _414 : TEXCOORD_1.w;
    SV_Target_2.x = _408;
    SV_Target_2.y = _409;
    SV_Target_2.z = _410;
    SV_Target_2.w = _503 ? _414 : (float(floatBitsToUint(cbInstanceData._m0[_396 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _504;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _504;
    discard_exit();
}


