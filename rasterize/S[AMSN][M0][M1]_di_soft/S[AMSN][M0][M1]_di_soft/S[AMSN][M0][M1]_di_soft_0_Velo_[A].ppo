#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_M0_M1_di_soft_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in vec3 TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    vec4 _138 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _140 = _138.x;
    float _164 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _140)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _140))) - POSITION_1.w) / cbMtdParam._m0[10u].x;
    float _382 = isnan(0.0) ? _164 : (isnan(_164) ? 0.0 : max(_164, 0.0));
    float _170 = gl_FragCoord.x * 0.125;
    float _172 = gl_FragCoord.y * 0.125;
    float _182 = float(((texture(sampler2D(S_AMSN_M0_M1_di_soft_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w)).w * TEXCOORD_1.z) * (isnan(1.0) ? _382 : (isnan(_382) ? 1.0 : min(_382, 1.0)))) >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_170, _172)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    uint _184 = uint(roundEven(NORMAL.w));
    float _196 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? TEXCOORD_6.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_6.z));
    float _238 = fma(TEXCOORD_6.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_6.x)));
    float _248 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_6.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_6.x))) / _238);
    float _249 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_6.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_6.x))) / _238);
    float _250 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_6.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_6.x))) / _238);
    vec4 _251 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_170, _172));
    float _253 = _251.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _289 = sqrt(((_248 * _248) + (_249 * _249)) + (_250 * _250));
        float _296 = (cbMatDynParam._m0[5u].x * _289) + cbMatDynParam._m0[5u].y;
        float _393 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
        float _297 = isnan(1.0) ? _393 : (isnan(_393) ? 1.0 : min(_393, 1.0));
        float _301 = (cbMatDynParam._m0[5u].z * _289) + cbMatDynParam._m0[5u].w;
        float _404 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _404 : (isnan(_404) ? 1.0 : min(_404, 1.0))) - _297)) + _297) < ((_253 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _332;
    float _264;
    float _265;
    vec4 _269;
    float _271;
    float _272;
    bool _283;
    for (;;)
    {
        _264 = (TEXCOORD_6.x / TEXCOORD_6.w) - (TEXCOORD_7.x / TEXCOORD_7.w);
        _265 = (TEXCOORD_6.y / TEXCOORD_6.w) - (TEXCOORD_7.y / TEXCOORD_7.w);
        float _266 = _253 + (-0.5);
        _269 = cbMtdParam._m0[1u];
        _271 = _269.y * _266;
        _272 = _266 * 0.999000012874603271484375;
        _283 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_283)
        {
            if ((cbInstanceData._m0[(_184 * 13u) + 7u].x + _272) < 0.5)
            {
                _332 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _272) < 0.5))
        {
            _332 = true;
            break;
        }
        if ((_271 + _182) < _269.x)
        {
            _332 = true;
            break;
        }
        _332 = false;
        break;
    }
    if (_332)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _264) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _265) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _196 / (_196 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


