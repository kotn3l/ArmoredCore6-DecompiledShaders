#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_ContactFade_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_ContactFade_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _145 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _146 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _147 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _152 = inversesqrt(dot(vec3(_145, _146, _147), vec3(_145, _146, _147)));
    float _159 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _166 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _183 = texture(sampler2D(M_AMSN_M0_M1_ContactFade_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _189 = _183.w;
    float _196 = cbMtdParam._m0[9u].x * _183.x;
    float _197 = cbMtdParam._m0[9u].y * _183.y;
    float _198 = cbMtdParam._m0[9u].z * _183.z;
    vec4 _211 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _213 = _211.x;
    float _237 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _213)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _213))) - POSITION_1.w) / cbMtdParam._m0[10u].x;
    float _533 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
    float _240 = 1.0 - (isnan(1.0) ? _533 : (isnan(_533) ? 1.0 : min(_533, 1.0)));
    float _544 = isnan(0.0) ? _240 : (isnan(_240) ? 0.0 : max(_240, 0.0));
    float _241 = isnan(1.0) ? _544 : (isnan(_544) ? 1.0 : min(_544, 1.0));
    float _249 = _189 - (((_241 * _241) * _189) * (3.0 - (_241 * 2.0)));
    vec4 _261 = texture(sampler2D(M_AMSN_M0_M1_ContactFade_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _265 = _261.z;
    float _268 = (_261.x * 2.0) + (-1.0);
    float _270 = (_261.y * 2.0) + (-1.0);
    float _271 = dot(vec2(_268, _270), vec2(_268, _270));
    float _555 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    float _276 = sqrt(1.0 - (isnan(1.0) ? _555 : (isnan(_555) ? 1.0 : min(_555, 1.0))));
    float _279 = fma(_276, _159 * NORMAL.x, fma(_270, _166 * TANGENT.x, (_152 * _145) * _268));
    float _282 = fma(_276, _159 * NORMAL.y, fma(_270, _166 * TANGENT.y, (_152 * _146) * _268));
    float _285 = fma(_276, _159 * NORMAL.z, fma(_270, _166 * TANGENT.z, (_152 * _147) * _268));
    float _289 = inversesqrt(dot(vec3(_279, _282, _285), vec3(_279, _282, _285)));
    float _566 = isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0));
    float _290 = isnan(1.0) ? _566 : (isnan(_566) ? 1.0 : min(_566, 1.0));
    float _577 = isnan(0.0) ? _265 : (isnan(_265) ? 0.0 : max(_265, 0.0));
    float _588 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _292 = isnan(1.0) ? _588 : (isnan(_588) ? 1.0 : min(_588, 1.0));
    float _599 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    float _293 = isnan(1.0) ? _599 : (isnan(_599) ? 1.0 : min(_599, 1.0));
    float _610 = isnan(0.0) ? _198 : (isnan(_198) ? 0.0 : max(_198, 0.0));
    float _294 = isnan(1.0) ? _610 : (isnan(_610) ? 1.0 : min(_610, 1.0));
    uint _296 = uint(roundEven(NORMAL.w));
    float _337 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _347 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _337);
    float _348 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _337);
    float _349 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _337);
    vec4 _354 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _356 = _354.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _419 = sqrt(((_347 * _347) + (_348 * _348)) + (_349 * _349));
        float _426 = (cbMatDynParam._m0[5u].x * _419) + cbMatDynParam._m0[5u].y;
        float _621 = isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0));
        float _427 = isnan(1.0) ? _621 : (isnan(_621) ? 1.0 : min(_621, 1.0));
        float _431 = (cbMatDynParam._m0[5u].z * _419) + cbMatDynParam._m0[5u].w;
        float _632 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _632 : (isnan(_632) ? 1.0 : min(_632, 1.0))) - _427)) + _427) < ((_356 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _460;
    uint _375;
    vec4 _380;
    float _387;
    float _388;
    float _389;
    float _395;
    vec4 _399;
    float _401;
    float _402;
    bool _413;
    for (;;)
    {
        _375 = _296 * 13u;
        _380 = cbInstanceData._m0[(_375 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _384 = (cbMtdParam._m0[0u].x * _292) * _380.x;
        float _385 = (cbMtdParam._m0[0u].y * _293) * _380.y;
        float _386 = (cbMtdParam._m0[0u].z * _294) * _380.z;
        float _643 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0));
        _387 = isnan(1.0) ? _643 : (isnan(_643) ? 1.0 : min(_643, 1.0));
        float _654 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
        _388 = isnan(1.0) ? _654 : (isnan(_654) ? 1.0 : min(_654, 1.0));
        float _665 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
        _389 = isnan(1.0) ? _665 : (isnan(_665) ? 1.0 : min(_665, 1.0));
        float _676 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
        _395 = cbInstanceData._m0[_375 + 6u].w * (isnan(1.0) ? _676 : (isnan(_676) ? 1.0 : min(_676, 1.0)));
        float _396 = _356 + (-0.5);
        _399 = cbMtdParam._m0[1u];
        _401 = _399.y * _396;
        _402 = _396 * 0.999000012874603271484375;
        _413 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_413)
        {
            if ((cbInstanceData._m0[_375 + 7u].x + _402) < 0.5)
            {
                _460 = true;
                break;
            }
        }
        if ((_380.w < 1.0) && ((_380.w + _402) < 0.5))
        {
            _460 = true;
            break;
        }
        if ((_401 + 1.0) < _399.x)
        {
            _460 = true;
            break;
        }
        _460 = false;
        break;
    }
    if (_460)
    {
        discard_state = true;
    }
    bool _486 = cbMtdParam._m0[1u].z != 0.0;
    float _487 = _486 ? _395 : 0.0;
    SV_Target.x = ((_279 * 0.5) * _289) + 0.500488758087158203125;
    SV_Target.y = ((_282 * 0.5) * _289) + 0.500488758087158203125;
    SV_Target.z = ((_285 * 0.5) * _289) + 0.500488758087158203125;
    SV_Target.w = _487;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _577 : (isnan(_577) ? 1.0 : min(_577, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _486 ? _395 : TEXCOORD.z;
    SV_Target_2.x = _387;
    SV_Target_2.y = _388;
    SV_Target_2.z = _389;
    SV_Target_2.w = _486 ? _395 : (float(floatBitsToUint(cbInstanceData._m0[_375 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _487;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _487;
    discard_exit();
}


