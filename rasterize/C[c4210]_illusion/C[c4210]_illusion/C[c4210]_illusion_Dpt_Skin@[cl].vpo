#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D C_c4210_illusion_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c4210_illusion_snp_0_Texture2D_15;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    precise float _133 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _135 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _140 = _133 * cbTexScroll._m0[0u].x;
    precise float _141 = _135 * cbTexScroll._m0[0u].y;
    precise float _144 = _140 + cbTexScroll._m0[0u].z;
    precise float _145 = _141 + cbTexScroll._m0[0u].w;
    precise float _150 = POSITION.x + 0.0;
    precise float _151 = POSITION.y + 0.0;
    precise float _152 = POSITION.z + 0.0;
    uint _157 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _161 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _166 = isnan(_161) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _161 : max(0.001000000047497451305389404296875, _161));
    precise float _168 = BLENDWEIGHT.x / _166;
    precise float _169 = BLENDWEIGHT.y / _166;
    precise float _170 = BLENDWEIGHT.z / _166;
    precise float _171 = BLENDWEIGHT.w / _166;
    uvec4 _178 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_157)).x * 13u) + 4u]);
    uint _179 = _178.x;
    uint _181 = (_179 + uint(float(BLENDINDICES.x))) * 3u;
    uint _188 = _181 + 1u;
    uint _195 = _181 + 2u;
    precise float _202 = _168 * cbObjMatrix._m0[_181].x;
    precise float _203 = _168 * cbObjMatrix._m0[_188].x;
    precise float _204 = _168 * cbObjMatrix._m0[_195].x;
    precise float _205 = _168 * cbObjMatrix._m0[_181].y;
    precise float _206 = _168 * cbObjMatrix._m0[_188].y;
    precise float _207 = _168 * cbObjMatrix._m0[_195].y;
    precise float _208 = _168 * cbObjMatrix._m0[_181].z;
    precise float _209 = _168 * cbObjMatrix._m0[_188].z;
    precise float _210 = _168 * cbObjMatrix._m0[_195].z;
    precise float _211 = _168 * cbObjMatrix._m0[_181].w;
    precise float _212 = _168 * cbObjMatrix._m0[_188].w;
    precise float _213 = _168 * cbObjMatrix._m0[_195].w;
    uint _216 = (_179 + uint(float(BLENDINDICES.y))) * 3u;
    uint _223 = _216 + 1u;
    uint _230 = _216 + 2u;
    precise float _237 = _169 * cbObjMatrix._m0[_216].x;
    precise float _238 = _169 * cbObjMatrix._m0[_223].x;
    precise float _239 = _169 * cbObjMatrix._m0[_230].x;
    precise float _240 = _169 * cbObjMatrix._m0[_216].y;
    precise float _241 = _169 * cbObjMatrix._m0[_223].y;
    precise float _242 = _169 * cbObjMatrix._m0[_230].y;
    precise float _243 = _169 * cbObjMatrix._m0[_216].z;
    precise float _244 = _169 * cbObjMatrix._m0[_223].z;
    precise float _245 = _169 * cbObjMatrix._m0[_230].z;
    precise float _246 = _169 * cbObjMatrix._m0[_216].w;
    precise float _247 = _169 * cbObjMatrix._m0[_223].w;
    precise float _248 = _169 * cbObjMatrix._m0[_230].w;
    precise float _249 = _202 + _237;
    precise float _250 = _203 + _238;
    precise float _251 = _204 + _239;
    precise float _252 = _205 + _240;
    precise float _253 = _206 + _241;
    precise float _254 = _207 + _242;
    precise float _255 = _208 + _243;
    precise float _256 = _209 + _244;
    precise float _257 = _210 + _245;
    precise float _258 = _211 + _246;
    precise float _259 = _212 + _247;
    precise float _260 = _213 + _248;
    uint _263 = (_179 + uint(float(BLENDINDICES.z))) * 3u;
    uint _270 = _263 + 1u;
    uint _277 = _263 + 2u;
    precise float _284 = _170 * cbObjMatrix._m0[_263].x;
    precise float _285 = _170 * cbObjMatrix._m0[_270].x;
    precise float _286 = _170 * cbObjMatrix._m0[_277].x;
    precise float _287 = _170 * cbObjMatrix._m0[_263].y;
    precise float _288 = _170 * cbObjMatrix._m0[_270].y;
    precise float _289 = _170 * cbObjMatrix._m0[_277].y;
    precise float _290 = _170 * cbObjMatrix._m0[_263].z;
    precise float _291 = _170 * cbObjMatrix._m0[_270].z;
    precise float _292 = _170 * cbObjMatrix._m0[_277].z;
    precise float _293 = _170 * cbObjMatrix._m0[_263].w;
    precise float _294 = _170 * cbObjMatrix._m0[_270].w;
    precise float _295 = _170 * cbObjMatrix._m0[_277].w;
    precise float _296 = _249 + _284;
    precise float _297 = _250 + _285;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    uint _310 = (_179 + uint(float(BLENDINDICES.w))) * 3u;
    uint _317 = _310 + 1u;
    uint _324 = _310 + 2u;
    precise float _331 = _171 * cbObjMatrix._m0[_310].x;
    precise float _332 = _171 * cbObjMatrix._m0[_317].x;
    precise float _333 = _171 * cbObjMatrix._m0[_324].x;
    precise float _334 = _171 * cbObjMatrix._m0[_310].y;
    precise float _335 = _171 * cbObjMatrix._m0[_317].y;
    precise float _336 = _171 * cbObjMatrix._m0[_324].y;
    precise float _337 = _171 * cbObjMatrix._m0[_310].z;
    precise float _338 = _171 * cbObjMatrix._m0[_317].z;
    precise float _339 = _171 * cbObjMatrix._m0[_324].z;
    precise float _340 = _171 * cbObjMatrix._m0[_310].w;
    precise float _341 = _171 * cbObjMatrix._m0[_317].w;
    precise float _342 = _171 * cbObjMatrix._m0[_324].w;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _150 * _343;
    precise float _356 = _151 * _346;
    precise float _357 = _356 + _355;
    precise float _358 = _152 * _349;
    precise float _359 = _358 + _357;
    precise float _360 = 1.0 * _352;
    precise float _361 = _360 + _359;
    precise float _362 = _150 * _344;
    precise float _363 = _151 * _347;
    precise float _364 = _363 + _362;
    precise float _365 = _152 * _350;
    precise float _366 = _365 + _364;
    precise float _367 = 1.0 * _353;
    precise float _368 = _367 + _366;
    precise float _369 = _150 * _345;
    precise float _370 = _151 * _348;
    precise float _371 = _370 + _369;
    precise float _372 = _152 * _351;
    precise float _373 = _372 + _371;
    precise float _374 = 1.0 * _354;
    precise float _375 = _374 + _373;
    precise float _380 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].y;
    precise float _382 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].z;
    precise float _383 = _144 + _380;
    precise float _384 = _145 + _382;
    precise float _391 = _383 * cbTextureTilingScale._m0[4u].x;
    precise float _392 = cbTextureTilingScale._m0[4u].y * _384;
    precise float _393 = cbTextureTilingScale._m0[4u].z + _391;
    precise float _394 = cbTextureTilingScale._m0[4u].w + _392;
    vec4 _397 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_14, SS_WrapLinear), vec2(_393, _394), 0.0);
    precise float _403 = _397.x + (-0.5);
    precise float _405 = _397.y + (-0.5);
    precise float _406 = _397.z + (-0.5);
    precise float _411 = cbMtdParam._m0[14u].x * cbMtdParam._m0[13u].y;
    precise float _412 = _411 + 0.0;
    precise float _417 = cbMtdParam._m0[15u].x + _412;
    float _418 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _419 = isnan(200.0) ? _418 : (isnan(_418) ? 200.0 : min(_418, 200.0));
    precise float _421 = _403 * _419;
    precise float _422 = _405 * _419;
    precise float _423 = _406 * _419;
    precise float _428 = _423 * cbMtdParam._m0[16u].x;
    precise float _437 = _144 * cbTextureTilingScale._m0[5u].x;
    precise float _438 = _145 * cbTextureTilingScale._m0[5u].y;
    precise float _439 = cbTextureTilingScale._m0[5u].z + _437;
    precise float _440 = cbTextureTilingScale._m0[5u].w + _438;
    precise float _446 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_15, SS_DiffuseMap), vec2(_439, _440), 0.0).x * cbMtdParam._m0[14u].w;
    precise float _447 = _419 * _446;
    precise float _448 = _422 + _447;
    precise float _449 = cbMtdParam._m0[15u].z * _448;
    precise float _451 = _421 * cbMtdParam._m0[15u].w;
    precise float _452 = _361 + _451;
    precise float _453 = _368 + _449;
    precise float _454 = _375 + _428;
    precise float _460 = _452 - cbSceneParam._m0[3u].x;
    precise float _461 = _453 - cbSceneParam._m0[3u].y;
    precise float _462 = _454 - cbSceneParam._m0[3u].z;
    precise float _489 = cbSceneParam._m0[24u].x * _460;
    precise float _490 = _461 * cbSceneParam._m0[24u].y;
    precise float _491 = _490 + _489;
    precise float _492 = _462 * cbSceneParam._m0[24u].z;
    precise float _493 = _492 + _491;
    precise float _494 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _495 = _494 + _493;
    precise float _496 = _460 * cbSceneParam._m0[25u].x;
    precise float _497 = _461 * cbSceneParam._m0[25u].y;
    precise float _498 = _497 + _496;
    precise float _499 = _462 * cbSceneParam._m0[25u].z;
    precise float _500 = _499 + _498;
    precise float _501 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _502 = _501 + _500;
    precise float _503 = _460 * cbSceneParam._m0[26u].x;
    precise float _504 = _461 * cbSceneParam._m0[26u].y;
    precise float _505 = _504 + _503;
    precise float _506 = _462 * cbSceneParam._m0[26u].z;
    precise float _507 = _506 + _505;
    precise float _508 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _509 = _508 + _507;
    precise float _510 = _460 * cbSceneParam._m0[27u].x;
    precise float _511 = _461 * cbSceneParam._m0[27u].y;
    precise float _512 = _511 + _510;
    precise float _513 = _462 * cbSceneParam._m0[27u].z;
    precise float _514 = _513 + _512;
    precise float _515 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _516 = _515 + _514;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_Position.x = _495;
    gl_Position.y = _502;
    gl_Position.z = _509;
    gl_Position.w = _516;
}


