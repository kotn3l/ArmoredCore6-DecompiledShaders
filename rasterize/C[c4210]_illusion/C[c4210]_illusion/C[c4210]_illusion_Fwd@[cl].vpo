#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D C_c4210_illusion_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c4210_illusion_snp_0_Texture2D_15;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    precise float _153 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _155 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _160 = _153 * cbTexScroll._m0[0u].x;
    precise float _161 = _155 * cbTexScroll._m0[0u].y;
    precise float _164 = _160 + cbTexScroll._m0[0u].z;
    precise float _165 = _161 + cbTexScroll._m0[0u].w;
    float _173 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _175 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _176 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _186 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _187 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _190 = POSITION.x + 0.0;
    precise float _191 = POSITION.y + 0.0;
    precise float _192 = POSITION.z + 0.0;
    uint _197 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _199 = texelFetch(g_InstanceIndexBuffer, int(_197));
    uint _200 = _199.x;
    uint _210 = (floatBitsToUint(cbInstanceData._m0[(_200 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _217 = _210 + 1u;
    uint _224 = _210 + 2u;
    precise float _231 = _190 * cbObjMatrix._m0[_210].x;
    precise float _232 = _191 * cbObjMatrix._m0[_210].y;
    precise float _233 = _232 + _231;
    precise float _234 = _192 * cbObjMatrix._m0[_210].z;
    precise float _235 = _234 + _233;
    precise float _236 = 1.0 * cbObjMatrix._m0[_210].w;
    precise float _238 = _236 + _235;
    precise float _239 = _190 * cbObjMatrix._m0[_217].x;
    precise float _240 = _191 * cbObjMatrix._m0[_217].y;
    precise float _241 = _240 + _239;
    precise float _242 = _192 * cbObjMatrix._m0[_217].z;
    precise float _243 = _242 + _241;
    precise float _244 = 1.0 * cbObjMatrix._m0[_217].w;
    precise float _245 = _244 + _243;
    precise float _246 = _190 * cbObjMatrix._m0[_224].x;
    precise float _247 = _191 * cbObjMatrix._m0[_224].y;
    precise float _248 = _247 + _246;
    precise float _249 = _192 * cbObjMatrix._m0[_224].z;
    precise float _250 = _249 + _248;
    precise float _251 = 1.0 * cbObjMatrix._m0[_224].w;
    precise float _252 = _251 + _250;
    precise float _277 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].y;
    precise float _279 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].z;
    precise float _280 = _164 + _277;
    precise float _281 = _165 + _279;
    precise float _288 = _280 * cbTextureTilingScale._m0[4u].x;
    precise float _289 = cbTextureTilingScale._m0[4u].y * _281;
    precise float _290 = cbTextureTilingScale._m0[4u].z + _288;
    precise float _291 = cbTextureTilingScale._m0[4u].w + _289;
    vec4 _294 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_14, SS_WrapLinear), vec2(_290, _291), 0.0);
    precise float _300 = _294.x + (-0.5);
    precise float _302 = _294.y + (-0.5);
    precise float _303 = _294.z + (-0.5);
    precise float _308 = cbMtdParam._m0[14u].x * cbMtdParam._m0[13u].y;
    precise float _309 = _308 + 0.0;
    precise float _314 = cbMtdParam._m0[15u].x + _309;
    float _315 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
    float _316 = isnan(200.0) ? _315 : (isnan(_315) ? 200.0 : min(_315, 200.0));
    precise float _318 = _300 * _316;
    precise float _319 = _302 * _316;
    precise float _320 = _303 * _316;
    precise float _325 = _320 * cbMtdParam._m0[16u].x;
    precise float _334 = _164 * cbTextureTilingScale._m0[5u].x;
    precise float _335 = _165 * cbTextureTilingScale._m0[5u].y;
    precise float _336 = cbTextureTilingScale._m0[5u].z + _334;
    precise float _337 = cbTextureTilingScale._m0[5u].w + _335;
    precise float _343 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_15, SS_DiffuseMap), vec2(_336, _337), 0.0).x * cbMtdParam._m0[14u].w;
    precise float _344 = _316 * _343;
    precise float _345 = _319 + _344;
    precise float _346 = cbMtdParam._m0[15u].z * _345;
    precise float _348 = _318 * cbMtdParam._m0[15u].w;
    precise float _349 = _238 + _348;
    precise float _350 = _245 + _346;
    precise float _351 = _252 + _325;
    precise float _357 = _349 - cbSceneParam._m0[3u].x;
    precise float _358 = _350 - cbSceneParam._m0[3u].y;
    precise float _359 = _351 - cbSceneParam._m0[3u].z;
    precise float _386 = cbSceneParam._m0[24u].x * _357;
    precise float _387 = _358 * cbSceneParam._m0[24u].y;
    precise float _388 = _387 + _386;
    precise float _389 = _359 * cbSceneParam._m0[24u].z;
    precise float _390 = _389 + _388;
    precise float _391 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _392 = _391 + _390;
    precise float _393 = _357 * cbSceneParam._m0[25u].x;
    precise float _394 = _358 * cbSceneParam._m0[25u].y;
    precise float _395 = _394 + _393;
    precise float _396 = _359 * cbSceneParam._m0[25u].z;
    precise float _397 = _396 + _395;
    precise float _398 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _399 = _398 + _397;
    precise float _400 = _357 * cbSceneParam._m0[26u].x;
    precise float _401 = _358 * cbSceneParam._m0[26u].y;
    precise float _402 = _401 + _400;
    precise float _403 = _359 * cbSceneParam._m0[26u].z;
    precise float _404 = _403 + _402;
    precise float _405 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _406 = _405 + _404;
    precise float _407 = _357 * cbSceneParam._m0[27u].x;
    precise float _408 = _358 * cbSceneParam._m0[27u].y;
    precise float _409 = _408 + _407;
    precise float _410 = _359 * cbSceneParam._m0[27u].z;
    precise float _411 = _410 + _409;
    precise float _412 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _413 = _412 + _411;
    gl_Position.x = _392;
    gl_Position.y = _399;
    gl_Position.z = _406;
    gl_Position.w = _413;
    POSITION_1.x = _392;
    POSITION_1.y = _399;
    POSITION_1.z = _406;
    POSITION_1.w = _413;
    NORMAL_1.x = fma(_176, cbObjMatrix._m0[_210].z, fma(_175, cbObjMatrix._m0[_210].y, cbObjMatrix._m0[_210].x * _173));
    NORMAL_1.y = fma(_176, cbObjMatrix._m0[_217].z, fma(_175, cbObjMatrix._m0[_217].y, cbObjMatrix._m0[_217].x * _173));
    NORMAL_1.z = fma(_176, cbObjMatrix._m0[_224].z, fma(_175, cbObjMatrix._m0[_224].y, cbObjMatrix._m0[_224].x * _173));
    NORMAL_1.w = float(_200);
    TANGENT_1.x = fma(_188, cbObjMatrix._m0[_210].z, fma(_187, cbObjMatrix._m0[_210].y, cbObjMatrix._m0[_210].x * _186));
    TANGENT_1.y = fma(_188, cbObjMatrix._m0[_217].z, fma(_187, cbObjMatrix._m0[_217].y, cbObjMatrix._m0[_217].x * _186));
    TANGENT_1.z = fma(_188, cbObjMatrix._m0[_224].z, fma(_187, cbObjMatrix._m0[_224].y, cbObjMatrix._m0[_224].x * _186));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = _164;
    TEXCOORD_1.y = _165;
    TEXCOORD_1.z = COLOR_1.x;
}


