#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D C_c4210_illusion_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c4210_illusion_snp_0_Texture2D_15;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _138 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _140 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _145 = _138 * cbTexScroll._m0[0u].x;
    precise float _146 = _140 * cbTexScroll._m0[0u].y;
    precise float _149 = _145 + cbTexScroll._m0[0u].z;
    precise float _150 = _146 + cbTexScroll._m0[0u].w;
    precise float _155 = POSITION.x + 0.0;
    precise float _156 = POSITION.y + 0.0;
    precise float _157 = POSITION.z + 0.0;
    uint _162 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _166 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _171 = isnan(_166) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _166 : max(0.001000000047497451305389404296875, _166));
    precise float _173 = BLENDWEIGHT.x / _171;
    precise float _174 = BLENDWEIGHT.y / _171;
    precise float _175 = BLENDWEIGHT.z / _171;
    precise float _176 = BLENDWEIGHT.w / _171;
    uint _178 = texelFetch(g_InstanceIndexBuffer, int(_162)).x * 13u;
    uvec4 _183 = floatBitsToUint(cbInstanceData._m0[_178 + 4u]);
    uint _184 = _183.x;
    uint _186 = (_184 + uint(float(BLENDINDICES.x))) * 3u;
    uint _193 = _186 + 1u;
    uint _200 = _186 + 2u;
    precise float _207 = _173 * cbObjMatrix._m0[_186].x;
    precise float _208 = _173 * cbObjMatrix._m0[_193].x;
    precise float _209 = _173 * cbObjMatrix._m0[_200].x;
    precise float _210 = _173 * cbObjMatrix._m0[_186].y;
    precise float _211 = _173 * cbObjMatrix._m0[_193].y;
    precise float _212 = _173 * cbObjMatrix._m0[_200].y;
    precise float _213 = _173 * cbObjMatrix._m0[_186].z;
    precise float _214 = _173 * cbObjMatrix._m0[_193].z;
    precise float _215 = _173 * cbObjMatrix._m0[_200].z;
    precise float _216 = _173 * cbObjMatrix._m0[_186].w;
    precise float _217 = _173 * cbObjMatrix._m0[_193].w;
    precise float _218 = _173 * cbObjMatrix._m0[_200].w;
    uint _221 = (_184 + uint(float(BLENDINDICES.y))) * 3u;
    uint _228 = _221 + 1u;
    uint _235 = _221 + 2u;
    precise float _242 = _174 * cbObjMatrix._m0[_221].x;
    precise float _243 = _174 * cbObjMatrix._m0[_228].x;
    precise float _244 = _174 * cbObjMatrix._m0[_235].x;
    precise float _245 = _174 * cbObjMatrix._m0[_221].y;
    precise float _246 = _174 * cbObjMatrix._m0[_228].y;
    precise float _247 = _174 * cbObjMatrix._m0[_235].y;
    precise float _248 = _174 * cbObjMatrix._m0[_221].z;
    precise float _249 = _174 * cbObjMatrix._m0[_228].z;
    precise float _250 = _174 * cbObjMatrix._m0[_235].z;
    precise float _251 = _174 * cbObjMatrix._m0[_221].w;
    precise float _252 = _174 * cbObjMatrix._m0[_228].w;
    precise float _253 = _174 * cbObjMatrix._m0[_235].w;
    precise float _254 = _207 + _242;
    precise float _255 = _208 + _243;
    precise float _256 = _209 + _244;
    precise float _257 = _210 + _245;
    precise float _258 = _211 + _246;
    precise float _259 = _212 + _247;
    precise float _260 = _213 + _248;
    precise float _261 = _214 + _249;
    precise float _262 = _215 + _250;
    precise float _263 = _216 + _251;
    precise float _264 = _217 + _252;
    precise float _265 = _218 + _253;
    uint _268 = (_184 + uint(float(BLENDINDICES.z))) * 3u;
    uint _275 = _268 + 1u;
    uint _282 = _268 + 2u;
    precise float _289 = _175 * cbObjMatrix._m0[_268].x;
    precise float _290 = _175 * cbObjMatrix._m0[_275].x;
    precise float _291 = _175 * cbObjMatrix._m0[_282].x;
    precise float _292 = _175 * cbObjMatrix._m0[_268].y;
    precise float _293 = _175 * cbObjMatrix._m0[_275].y;
    precise float _294 = _175 * cbObjMatrix._m0[_282].y;
    precise float _295 = _175 * cbObjMatrix._m0[_268].z;
    precise float _296 = _175 * cbObjMatrix._m0[_275].z;
    precise float _297 = _175 * cbObjMatrix._m0[_282].z;
    precise float _298 = _175 * cbObjMatrix._m0[_268].w;
    precise float _299 = _175 * cbObjMatrix._m0[_275].w;
    precise float _300 = _175 * cbObjMatrix._m0[_282].w;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    precise float _308 = _261 + _296;
    precise float _309 = _262 + _297;
    precise float _310 = _263 + _298;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    uint _315 = (_184 + uint(float(BLENDINDICES.w))) * 3u;
    uint _322 = _315 + 1u;
    uint _329 = _315 + 2u;
    precise float _336 = _176 * cbObjMatrix._m0[_315].x;
    precise float _337 = _176 * cbObjMatrix._m0[_322].x;
    precise float _338 = _176 * cbObjMatrix._m0[_329].x;
    precise float _339 = _176 * cbObjMatrix._m0[_315].y;
    precise float _340 = _176 * cbObjMatrix._m0[_322].y;
    precise float _341 = _176 * cbObjMatrix._m0[_329].y;
    precise float _342 = _176 * cbObjMatrix._m0[_315].z;
    precise float _343 = _176 * cbObjMatrix._m0[_322].z;
    precise float _344 = _176 * cbObjMatrix._m0[_329].z;
    precise float _345 = _176 * cbObjMatrix._m0[_315].w;
    precise float _346 = _176 * cbObjMatrix._m0[_322].w;
    precise float _347 = _176 * cbObjMatrix._m0[_329].w;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _155 * _348;
    precise float _361 = _156 * _351;
    precise float _362 = _361 + _360;
    precise float _363 = _157 * _354;
    precise float _364 = _363 + _362;
    precise float _365 = 1.0 * _357;
    precise float _366 = _365 + _364;
    precise float _367 = _155 * _349;
    precise float _368 = _156 * _352;
    precise float _369 = _368 + _367;
    precise float _370 = _157 * _355;
    precise float _371 = _370 + _369;
    precise float _372 = 1.0 * _358;
    precise float _373 = _372 + _371;
    precise float _374 = _155 * _350;
    precise float _375 = _156 * _353;
    precise float _376 = _375 + _374;
    precise float _377 = _157 * _356;
    precise float _378 = _377 + _376;
    precise float _379 = 1.0 * _359;
    precise float _380 = _379 + _378;
    precise float _385 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].y;
    precise float _387 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].z;
    precise float _388 = _149 + _385;
    precise float _389 = _150 + _387;
    precise float _396 = _388 * cbTextureTilingScale._m0[4u].x;
    precise float _397 = cbTextureTilingScale._m0[4u].y * _389;
    precise float _398 = cbTextureTilingScale._m0[4u].z + _396;
    precise float _399 = cbTextureTilingScale._m0[4u].w + _397;
    vec4 _402 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_14, SS_WrapLinear), vec2(_398, _399), 0.0);
    precise float _408 = _402.x + (-0.5);
    precise float _410 = _402.y + (-0.5);
    precise float _411 = _402.z + (-0.5);
    precise float _416 = cbMtdParam._m0[14u].x * cbMtdParam._m0[13u].y;
    precise float _417 = _416 + 0.0;
    precise float _422 = cbMtdParam._m0[15u].x + _417;
    float _423 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _424 = isnan(200.0) ? _423 : (isnan(_423) ? 200.0 : min(_423, 200.0));
    precise float _426 = _408 * _424;
    precise float _427 = _410 * _424;
    precise float _428 = _411 * _424;
    precise float _433 = _428 * cbMtdParam._m0[16u].x;
    precise float _442 = _149 * cbTextureTilingScale._m0[5u].x;
    precise float _443 = _150 * cbTextureTilingScale._m0[5u].y;
    precise float _444 = cbTextureTilingScale._m0[5u].z + _442;
    precise float _445 = cbTextureTilingScale._m0[5u].w + _443;
    precise float _451 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_15, SS_DiffuseMap), vec2(_444, _445), 0.0).x * cbMtdParam._m0[14u].w;
    precise float _452 = _424 * _451;
    precise float _453 = _427 + _452;
    precise float _454 = cbMtdParam._m0[15u].z * _453;
    precise float _456 = _426 * cbMtdParam._m0[15u].w;
    precise float _457 = _366 + _456;
    precise float _458 = _373 + _454;
    precise float _459 = _380 + _433;
    precise float _465 = _457 - cbSceneParam._m0[3u].x;
    precise float _466 = _458 - cbSceneParam._m0[3u].y;
    precise float _467 = _459 - cbSceneParam._m0[3u].z;
    precise float _494 = cbSceneParam._m0[24u].x * _465;
    precise float _495 = _466 * cbSceneParam._m0[24u].y;
    precise float _496 = _495 + _494;
    precise float _497 = _467 * cbSceneParam._m0[24u].z;
    precise float _498 = _497 + _496;
    precise float _499 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _500 = _499 + _498;
    precise float _501 = _465 * cbSceneParam._m0[25u].x;
    precise float _502 = _466 * cbSceneParam._m0[25u].y;
    precise float _503 = _502 + _501;
    precise float _504 = _467 * cbSceneParam._m0[25u].z;
    precise float _505 = _504 + _503;
    precise float _506 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _507 = _506 + _505;
    precise float _508 = _465 * cbSceneParam._m0[26u].x;
    precise float _509 = _466 * cbSceneParam._m0[26u].y;
    precise float _510 = _509 + _508;
    precise float _511 = _467 * cbSceneParam._m0[26u].z;
    precise float _512 = _511 + _510;
    precise float _513 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _514 = _513 + _512;
    precise float _515 = _465 * cbSceneParam._m0[27u].x;
    precise float _516 = _466 * cbSceneParam._m0[27u].y;
    precise float _517 = _516 + _515;
    precise float _518 = _467 * cbSceneParam._m0[27u].z;
    precise float _519 = _518 + _517;
    precise float _520 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _521 = _520 + _519;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _500;
    gl_Position.y = _507;
    gl_Position.z = _514;
    gl_Position.w = _521;
    gl_ClipDistance[0u] = dot(vec4(_500, _507, _514, _521), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_500, _507, _514, _521), vec4(cbInstanceData._m0[_178 + 3u]));
}


