#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D C_c4210_illusion_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c4210_illusion_snp_0_Texture2D_15;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 3, component = 3) out float TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_8 = 0.0;
    precise float _165 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _167 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _172 = _165 * cbTexScroll._m0[0u].x;
    precise float _173 = _167 * cbTexScroll._m0[0u].y;
    precise float _176 = _172 + cbTexScroll._m0[0u].z;
    precise float _177 = _173 + cbTexScroll._m0[0u].w;
    float _185 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _187 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _205 = POSITION.x + 0.0;
    precise float _206 = POSITION.y + 0.0;
    precise float _207 = POSITION.z + 0.0;
    uint _212 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _214 = texelFetch(g_InstanceIndexBuffer, int(_212));
    uint _215 = _214.x;
    precise float _216 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _221 = isnan(_216) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _216 : max(0.001000000047497451305389404296875, _216));
    precise float _223 = BLENDWEIGHT.x / _221;
    precise float _224 = BLENDWEIGHT.y / _221;
    precise float _225 = BLENDWEIGHT.z / _221;
    precise float _226 = BLENDWEIGHT.w / _221;
    uvec4 _233 = floatBitsToUint(cbInstanceData._m0[(_215 * 13u) + 4u]);
    uint _234 = _233.x;
    uint _236 = (_234 + uint(float(BLENDINDICES.x))) * 3u;
    uint _243 = _236 + 1u;
    uint _250 = _236 + 2u;
    precise float _257 = _223 * cbObjMatrix._m0[_236].x;
    precise float _258 = _223 * cbObjMatrix._m0[_243].x;
    precise float _259 = _223 * cbObjMatrix._m0[_250].x;
    precise float _260 = _223 * cbObjMatrix._m0[_236].y;
    precise float _261 = _223 * cbObjMatrix._m0[_243].y;
    precise float _262 = _223 * cbObjMatrix._m0[_250].y;
    precise float _263 = _223 * cbObjMatrix._m0[_236].z;
    precise float _264 = _223 * cbObjMatrix._m0[_243].z;
    precise float _265 = _223 * cbObjMatrix._m0[_250].z;
    precise float _266 = _223 * cbObjMatrix._m0[_236].w;
    precise float _267 = _223 * cbObjMatrix._m0[_243].w;
    precise float _268 = _223 * cbObjMatrix._m0[_250].w;
    uint _271 = (_234 + uint(float(BLENDINDICES.y))) * 3u;
    uint _278 = _271 + 1u;
    uint _285 = _271 + 2u;
    precise float _292 = _224 * cbObjMatrix._m0[_271].x;
    precise float _293 = _224 * cbObjMatrix._m0[_278].x;
    precise float _294 = _224 * cbObjMatrix._m0[_285].x;
    precise float _295 = _224 * cbObjMatrix._m0[_271].y;
    precise float _296 = _224 * cbObjMatrix._m0[_278].y;
    precise float _297 = _224 * cbObjMatrix._m0[_285].y;
    precise float _298 = _224 * cbObjMatrix._m0[_271].z;
    precise float _299 = _224 * cbObjMatrix._m0[_278].z;
    precise float _300 = _224 * cbObjMatrix._m0[_285].z;
    precise float _301 = _224 * cbObjMatrix._m0[_271].w;
    precise float _302 = _224 * cbObjMatrix._m0[_278].w;
    precise float _303 = _224 * cbObjMatrix._m0[_285].w;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    precise float _308 = _261 + _296;
    precise float _309 = _262 + _297;
    precise float _310 = _263 + _298;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    uint _318 = (_234 + uint(float(BLENDINDICES.z))) * 3u;
    uint _325 = _318 + 1u;
    uint _332 = _318 + 2u;
    precise float _339 = _225 * cbObjMatrix._m0[_318].x;
    precise float _340 = _225 * cbObjMatrix._m0[_325].x;
    precise float _341 = _225 * cbObjMatrix._m0[_332].x;
    precise float _342 = _225 * cbObjMatrix._m0[_318].y;
    precise float _343 = _225 * cbObjMatrix._m0[_325].y;
    precise float _344 = _225 * cbObjMatrix._m0[_332].y;
    precise float _345 = _225 * cbObjMatrix._m0[_318].z;
    precise float _346 = _225 * cbObjMatrix._m0[_325].z;
    precise float _347 = _225 * cbObjMatrix._m0[_332].z;
    precise float _348 = _225 * cbObjMatrix._m0[_318].w;
    precise float _349 = _225 * cbObjMatrix._m0[_325].w;
    precise float _350 = _225 * cbObjMatrix._m0[_332].w;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    uint _365 = (_234 + uint(float(BLENDINDICES.w))) * 3u;
    uint _372 = _365 + 1u;
    uint _379 = _365 + 2u;
    precise float _386 = _226 * cbObjMatrix._m0[_365].x;
    precise float _387 = _226 * cbObjMatrix._m0[_372].x;
    precise float _388 = _226 * cbObjMatrix._m0[_379].x;
    precise float _389 = _226 * cbObjMatrix._m0[_365].y;
    precise float _390 = _226 * cbObjMatrix._m0[_372].y;
    precise float _391 = _226 * cbObjMatrix._m0[_379].y;
    precise float _392 = _226 * cbObjMatrix._m0[_365].z;
    precise float _393 = _226 * cbObjMatrix._m0[_372].z;
    precise float _394 = _226 * cbObjMatrix._m0[_379].z;
    precise float _395 = _226 * cbObjMatrix._m0[_365].w;
    precise float _396 = _226 * cbObjMatrix._m0[_372].w;
    precise float _397 = _226 * cbObjMatrix._m0[_379].w;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _205 * _398;
    precise float _411 = _206 * _401;
    precise float _412 = _411 + _410;
    precise float _413 = _207 * _404;
    precise float _414 = _413 + _412;
    precise float _415 = 1.0 * _407;
    precise float _416 = _415 + _414;
    precise float _417 = _205 * _399;
    precise float _418 = _206 * _402;
    precise float _419 = _418 + _417;
    precise float _420 = _207 * _405;
    precise float _421 = _420 + _419;
    precise float _422 = 1.0 * _408;
    precise float _423 = _422 + _421;
    precise float _424 = _205 * _400;
    precise float _425 = _206 * _403;
    precise float _426 = _425 + _424;
    precise float _427 = _207 * _406;
    precise float _428 = _427 + _426;
    precise float _429 = 1.0 * _409;
    precise float _430 = _429 + _428;
    float _436 = cbSceneParam._m0[3u].x - _416;
    float _437 = cbSceneParam._m0[3u].y - _423;
    float _438 = cbSceneParam._m0[3u].z - _430;
    precise float _468 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].y;
    precise float _470 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].z;
    precise float _471 = _176 + _468;
    precise float _472 = _177 + _470;
    precise float _479 = _471 * cbTextureTilingScale._m0[4u].x;
    precise float _480 = cbTextureTilingScale._m0[4u].y * _472;
    precise float _481 = cbTextureTilingScale._m0[4u].z + _479;
    precise float _482 = cbTextureTilingScale._m0[4u].w + _480;
    vec4 _485 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_14, SS_WrapLinear), vec2(_481, _482), 0.0);
    precise float _491 = _485.x + (-0.5);
    precise float _493 = _485.y + (-0.5);
    precise float _494 = _485.z + (-0.5);
    precise float _499 = cbMtdParam._m0[14u].x * cbMtdParam._m0[13u].y;
    precise float _500 = _499 + 0.0;
    precise float _505 = cbMtdParam._m0[15u].x + _500;
    float _506 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    float _507 = isnan(200.0) ? _506 : (isnan(_506) ? 200.0 : min(_506, 200.0));
    precise float _509 = _491 * _507;
    precise float _510 = _493 * _507;
    precise float _511 = _494 * _507;
    precise float _516 = _511 * cbMtdParam._m0[16u].x;
    precise float _525 = _176 * cbTextureTilingScale._m0[5u].x;
    precise float _526 = _177 * cbTextureTilingScale._m0[5u].y;
    precise float _527 = cbTextureTilingScale._m0[5u].z + _525;
    precise float _528 = cbTextureTilingScale._m0[5u].w + _526;
    precise float _534 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_15, SS_DiffuseMap), vec2(_527, _528), 0.0).x * cbMtdParam._m0[14u].w;
    precise float _535 = _507 * _534;
    precise float _536 = _510 + _535;
    precise float _537 = cbMtdParam._m0[15u].z * _536;
    precise float _539 = _509 * cbMtdParam._m0[15u].w;
    precise float _540 = _416 + _539;
    precise float _541 = _423 + _537;
    precise float _542 = _430 + _516;
    precise float _543 = _540 - cbSceneParam._m0[3u].x;
    precise float _544 = _541 - cbSceneParam._m0[3u].y;
    precise float _545 = _542 - cbSceneParam._m0[3u].z;
    precise float _572 = cbSceneParam._m0[24u].x * _543;
    precise float _573 = _544 * cbSceneParam._m0[24u].y;
    precise float _574 = _573 + _572;
    precise float _575 = _545 * cbSceneParam._m0[24u].z;
    precise float _576 = _575 + _574;
    precise float _577 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _578 = _577 + _576;
    precise float _579 = _543 * cbSceneParam._m0[25u].x;
    precise float _580 = _544 * cbSceneParam._m0[25u].y;
    precise float _581 = _580 + _579;
    precise float _582 = _545 * cbSceneParam._m0[25u].z;
    precise float _583 = _582 + _581;
    precise float _584 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _585 = _584 + _583;
    precise float _586 = _543 * cbSceneParam._m0[26u].x;
    precise float _587 = _544 * cbSceneParam._m0[26u].y;
    precise float _588 = _587 + _586;
    precise float _589 = _545 * cbSceneParam._m0[26u].z;
    precise float _590 = _589 + _588;
    precise float _591 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _592 = _591 + _590;
    precise float _593 = _543 * cbSceneParam._m0[27u].x;
    precise float _594 = _544 * cbSceneParam._m0[27u].y;
    precise float _595 = _594 + _593;
    precise float _596 = _545 * cbSceneParam._m0[27u].z;
    precise float _597 = _596 + _595;
    precise float _598 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _599 = _598 + _597;
    gl_Position.x = _578;
    gl_Position.y = _585;
    gl_Position.z = _592;
    gl_Position.w = _599;
    NORMAL_1.x = fma(_188, _404, fma(_187, _401, _398 * _185));
    NORMAL_1.y = fma(_188, _405, fma(_187, _402, _399 * _185));
    NORMAL_1.z = fma(_188, _406, fma(_187, _403, _400 * _185));
    NORMAL_1.w = float(_215);
    TANGENT_1.x = fma(_199, _404, fma(_198, _401, _398 * _197));
    TANGENT_1.y = fma(_199, _405, fma(_198, _402, _399 * _197));
    TANGENT_1.z = fma(_199, _406, fma(_198, _403, _400 * _197));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = _176;
    TEXCOORD_1.y = _177;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_8 = sqrt(((_436 * _436) + (_437 * _437)) + (_438 * _438));
}


