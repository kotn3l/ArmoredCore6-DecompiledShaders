#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D C_c4210_illusion_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c4210_illusion_snp_0_Texture2D_15;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 3, component = 3) out float TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_8 = 0.0;
    precise float _149 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _151 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _156 = _149 * cbTexScroll._m0[0u].x;
    precise float _157 = _151 * cbTexScroll._m0[0u].y;
    precise float _160 = _156 + cbTexScroll._m0[0u].z;
    precise float _161 = _157 + cbTexScroll._m0[0u].w;
    float _169 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _171 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _172 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _182 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _183 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _184 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _186 = POSITION.x + 0.0;
    precise float _187 = POSITION.y + 0.0;
    precise float _188 = POSITION.z + 0.0;
    uint _193 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _195 = texelFetch(g_InstanceIndexBuffer, int(_193));
    uint _196 = _195.x;
    uint _206 = (floatBitsToUint(cbInstanceData._m0[(_196 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _213 = _206 + 1u;
    uint _220 = _206 + 2u;
    precise float _227 = _186 * cbObjMatrix._m0[_206].x;
    precise float _228 = _187 * cbObjMatrix._m0[_206].y;
    precise float _229 = _228 + _227;
    precise float _230 = _188 * cbObjMatrix._m0[_206].z;
    precise float _231 = _230 + _229;
    precise float _232 = 1.0 * cbObjMatrix._m0[_206].w;
    precise float _234 = _232 + _231;
    precise float _235 = _186 * cbObjMatrix._m0[_213].x;
    precise float _236 = _187 * cbObjMatrix._m0[_213].y;
    precise float _237 = _236 + _235;
    precise float _238 = _188 * cbObjMatrix._m0[_213].z;
    precise float _239 = _238 + _237;
    precise float _240 = 1.0 * cbObjMatrix._m0[_213].w;
    precise float _241 = _240 + _239;
    precise float _242 = _186 * cbObjMatrix._m0[_220].x;
    precise float _243 = _187 * cbObjMatrix._m0[_220].y;
    precise float _244 = _243 + _242;
    precise float _245 = _188 * cbObjMatrix._m0[_220].z;
    precise float _246 = _245 + _244;
    precise float _247 = 1.0 * cbObjMatrix._m0[_220].w;
    precise float _248 = _247 + _246;
    float _254 = cbSceneParam._m0[3u].x - _234;
    float _255 = cbSceneParam._m0[3u].y - _241;
    float _256 = cbSceneParam._m0[3u].z - _248;
    precise float _287 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].y;
    precise float _289 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].z;
    precise float _290 = _160 + _287;
    precise float _291 = _161 + _289;
    precise float _298 = _290 * cbTextureTilingScale._m0[4u].x;
    precise float _299 = cbTextureTilingScale._m0[4u].y * _291;
    precise float _300 = cbTextureTilingScale._m0[4u].z + _298;
    precise float _301 = cbTextureTilingScale._m0[4u].w + _299;
    vec4 _304 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_14, SS_WrapLinear), vec2(_300, _301), 0.0);
    precise float _310 = _304.x + (-0.5);
    precise float _312 = _304.y + (-0.5);
    precise float _313 = _304.z + (-0.5);
    precise float _318 = cbMtdParam._m0[14u].x * cbMtdParam._m0[13u].y;
    precise float _319 = _318 + 0.0;
    precise float _324 = cbMtdParam._m0[15u].x + _319;
    float _325 = isnan(0.0) ? _324 : (isnan(_324) ? 0.0 : max(_324, 0.0));
    float _326 = isnan(200.0) ? _325 : (isnan(_325) ? 200.0 : min(_325, 200.0));
    precise float _328 = _310 * _326;
    precise float _329 = _312 * _326;
    precise float _330 = _313 * _326;
    precise float _335 = _330 * cbMtdParam._m0[16u].x;
    precise float _344 = _160 * cbTextureTilingScale._m0[5u].x;
    precise float _345 = _161 * cbTextureTilingScale._m0[5u].y;
    precise float _346 = cbTextureTilingScale._m0[5u].z + _344;
    precise float _347 = cbTextureTilingScale._m0[5u].w + _345;
    precise float _353 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_15, SS_DiffuseMap), vec2(_346, _347), 0.0).x * cbMtdParam._m0[14u].w;
    precise float _354 = _326 * _353;
    precise float _355 = _329 + _354;
    precise float _356 = cbMtdParam._m0[15u].z * _355;
    precise float _358 = _328 * cbMtdParam._m0[15u].w;
    precise float _359 = _234 + _358;
    precise float _360 = _241 + _356;
    precise float _361 = _248 + _335;
    precise float _362 = _359 - cbSceneParam._m0[3u].x;
    precise float _363 = _360 - cbSceneParam._m0[3u].y;
    precise float _364 = _361 - cbSceneParam._m0[3u].z;
    precise float _391 = cbSceneParam._m0[24u].x * _362;
    precise float _392 = _363 * cbSceneParam._m0[24u].y;
    precise float _393 = _392 + _391;
    precise float _394 = _364 * cbSceneParam._m0[24u].z;
    precise float _395 = _394 + _393;
    precise float _396 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _397 = _396 + _395;
    precise float _398 = _362 * cbSceneParam._m0[25u].x;
    precise float _399 = _363 * cbSceneParam._m0[25u].y;
    precise float _400 = _399 + _398;
    precise float _401 = _364 * cbSceneParam._m0[25u].z;
    precise float _402 = _401 + _400;
    precise float _403 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _404 = _403 + _402;
    precise float _405 = _362 * cbSceneParam._m0[26u].x;
    precise float _406 = _363 * cbSceneParam._m0[26u].y;
    precise float _407 = _406 + _405;
    precise float _408 = _364 * cbSceneParam._m0[26u].z;
    precise float _409 = _408 + _407;
    precise float _410 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _411 = _410 + _409;
    precise float _412 = _362 * cbSceneParam._m0[27u].x;
    precise float _413 = _363 * cbSceneParam._m0[27u].y;
    precise float _414 = _413 + _412;
    precise float _415 = _364 * cbSceneParam._m0[27u].z;
    precise float _416 = _415 + _414;
    precise float _417 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _418 = _417 + _416;
    gl_Position.x = _397;
    gl_Position.y = _404;
    gl_Position.z = _411;
    gl_Position.w = _418;
    NORMAL_1.x = fma(_172, cbObjMatrix._m0[_206].z, fma(_171, cbObjMatrix._m0[_206].y, cbObjMatrix._m0[_206].x * _169));
    NORMAL_1.y = fma(_172, cbObjMatrix._m0[_213].z, fma(_171, cbObjMatrix._m0[_213].y, cbObjMatrix._m0[_213].x * _169));
    NORMAL_1.z = fma(_172, cbObjMatrix._m0[_220].z, fma(_171, cbObjMatrix._m0[_220].y, cbObjMatrix._m0[_220].x * _169));
    NORMAL_1.w = float(_196);
    TANGENT_1.x = fma(_184, cbObjMatrix._m0[_206].z, fma(_183, cbObjMatrix._m0[_206].y, cbObjMatrix._m0[_206].x * _182));
    TANGENT_1.y = fma(_184, cbObjMatrix._m0[_213].z, fma(_183, cbObjMatrix._m0[_213].y, cbObjMatrix._m0[_213].x * _182));
    TANGENT_1.z = fma(_184, cbObjMatrix._m0[_220].z, fma(_183, cbObjMatrix._m0[_220].y, cbObjMatrix._m0[_220].x * _182));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = _160;
    TEXCOORD_1.y = _161;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_8 = sqrt(((_254 * _254) + (_255 * _255)) + (_256 * _256));
}


