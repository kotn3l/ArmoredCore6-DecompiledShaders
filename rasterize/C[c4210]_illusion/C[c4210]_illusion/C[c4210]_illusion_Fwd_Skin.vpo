#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D C_c4210_illusion_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c4210_illusion_snp_0_Texture2D_15;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _174 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _176 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _181 = _174 * cbTexScroll._m0[0u].x;
    precise float _182 = _176 * cbTexScroll._m0[0u].y;
    precise float _185 = _181 + cbTexScroll._m0[0u].z;
    precise float _186 = _182 + cbTexScroll._m0[0u].w;
    float _194 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _208 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _214 = POSITION.x + 0.0;
    precise float _215 = POSITION.y + 0.0;
    precise float _216 = POSITION.z + 0.0;
    uint _221 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _223 = texelFetch(g_InstanceIndexBuffer, int(_221));
    uint _224 = _223.x;
    precise float _225 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _230 = isnan(_225) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _225 : max(0.001000000047497451305389404296875, _225));
    precise float _232 = BLENDWEIGHT.x / _230;
    precise float _233 = BLENDWEIGHT.y / _230;
    precise float _234 = BLENDWEIGHT.z / _230;
    precise float _235 = BLENDWEIGHT.w / _230;
    uint _237 = _224 * 13u;
    uvec4 _242 = floatBitsToUint(cbInstanceData._m0[_237 + 4u]);
    uint _243 = _242.x;
    uint _245 = (_243 + uint(float(BLENDINDICES.x))) * 3u;
    uint _252 = _245 + 1u;
    uint _259 = _245 + 2u;
    precise float _266 = _232 * cbObjMatrix._m0[_245].x;
    precise float _267 = _232 * cbObjMatrix._m0[_252].x;
    precise float _268 = _232 * cbObjMatrix._m0[_259].x;
    precise float _269 = _232 * cbObjMatrix._m0[_245].y;
    precise float _270 = _232 * cbObjMatrix._m0[_252].y;
    precise float _271 = _232 * cbObjMatrix._m0[_259].y;
    precise float _272 = _232 * cbObjMatrix._m0[_245].z;
    precise float _273 = _232 * cbObjMatrix._m0[_252].z;
    precise float _274 = _232 * cbObjMatrix._m0[_259].z;
    precise float _275 = _232 * cbObjMatrix._m0[_245].w;
    precise float _276 = _232 * cbObjMatrix._m0[_252].w;
    precise float _277 = _232 * cbObjMatrix._m0[_259].w;
    uint _280 = (_243 + uint(float(BLENDINDICES.y))) * 3u;
    uint _287 = _280 + 1u;
    uint _294 = _280 + 2u;
    precise float _301 = _233 * cbObjMatrix._m0[_280].x;
    precise float _302 = _233 * cbObjMatrix._m0[_287].x;
    precise float _303 = _233 * cbObjMatrix._m0[_294].x;
    precise float _304 = _233 * cbObjMatrix._m0[_280].y;
    precise float _305 = _233 * cbObjMatrix._m0[_287].y;
    precise float _306 = _233 * cbObjMatrix._m0[_294].y;
    precise float _307 = _233 * cbObjMatrix._m0[_280].z;
    precise float _308 = _233 * cbObjMatrix._m0[_287].z;
    precise float _309 = _233 * cbObjMatrix._m0[_294].z;
    precise float _310 = _233 * cbObjMatrix._m0[_280].w;
    precise float _311 = _233 * cbObjMatrix._m0[_287].w;
    precise float _312 = _233 * cbObjMatrix._m0[_294].w;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    precise float _316 = _269 + _304;
    precise float _317 = _270 + _305;
    precise float _318 = _271 + _306;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    uint _327 = (_243 + uint(float(BLENDINDICES.z))) * 3u;
    uint _334 = _327 + 1u;
    uint _341 = _327 + 2u;
    precise float _348 = _234 * cbObjMatrix._m0[_327].x;
    precise float _349 = _234 * cbObjMatrix._m0[_334].x;
    precise float _350 = _234 * cbObjMatrix._m0[_341].x;
    precise float _351 = _234 * cbObjMatrix._m0[_327].y;
    precise float _352 = _234 * cbObjMatrix._m0[_334].y;
    precise float _353 = _234 * cbObjMatrix._m0[_341].y;
    precise float _354 = _234 * cbObjMatrix._m0[_327].z;
    precise float _355 = _234 * cbObjMatrix._m0[_334].z;
    precise float _356 = _234 * cbObjMatrix._m0[_341].z;
    precise float _357 = _234 * cbObjMatrix._m0[_327].w;
    precise float _358 = _234 * cbObjMatrix._m0[_334].w;
    precise float _359 = _234 * cbObjMatrix._m0[_341].w;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    uint _374 = (_243 + uint(float(BLENDINDICES.w))) * 3u;
    uint _381 = _374 + 1u;
    uint _388 = _374 + 2u;
    precise float _395 = _235 * cbObjMatrix._m0[_374].x;
    precise float _396 = _235 * cbObjMatrix._m0[_381].x;
    precise float _397 = _235 * cbObjMatrix._m0[_388].x;
    precise float _398 = _235 * cbObjMatrix._m0[_374].y;
    precise float _399 = _235 * cbObjMatrix._m0[_381].y;
    precise float _400 = _235 * cbObjMatrix._m0[_388].y;
    precise float _401 = _235 * cbObjMatrix._m0[_374].z;
    precise float _402 = _235 * cbObjMatrix._m0[_381].z;
    precise float _403 = _235 * cbObjMatrix._m0[_388].z;
    precise float _404 = _235 * cbObjMatrix._m0[_374].w;
    precise float _405 = _235 * cbObjMatrix._m0[_381].w;
    precise float _406 = _235 * cbObjMatrix._m0[_388].w;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _214 * _407;
    precise float _420 = _215 * _410;
    precise float _421 = _420 + _419;
    precise float _422 = _216 * _413;
    precise float _423 = _422 + _421;
    precise float _424 = 1.0 * _416;
    precise float _425 = _424 + _423;
    precise float _426 = _214 * _408;
    precise float _427 = _215 * _411;
    precise float _428 = _427 + _426;
    precise float _429 = _216 * _414;
    precise float _430 = _429 + _428;
    precise float _431 = 1.0 * _417;
    precise float _432 = _431 + _430;
    precise float _433 = _214 * _409;
    precise float _434 = _215 * _412;
    precise float _435 = _434 + _433;
    precise float _436 = _216 * _415;
    precise float _437 = _436 + _435;
    precise float _438 = 1.0 * _418;
    precise float _439 = _438 + _437;
    precise float _463 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].y;
    precise float _465 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].z;
    precise float _466 = _185 + _463;
    precise float _467 = _186 + _465;
    precise float _474 = _466 * cbTextureTilingScale._m0[4u].x;
    precise float _475 = cbTextureTilingScale._m0[4u].y * _467;
    precise float _476 = cbTextureTilingScale._m0[4u].z + _474;
    precise float _477 = cbTextureTilingScale._m0[4u].w + _475;
    vec4 _480 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_14, SS_WrapLinear), vec2(_476, _477), 0.0);
    precise float _486 = _480.x + (-0.5);
    precise float _488 = _480.y + (-0.5);
    precise float _489 = _480.z + (-0.5);
    precise float _494 = cbMtdParam._m0[14u].x * cbMtdParam._m0[13u].y;
    precise float _495 = _494 + 0.0;
    precise float _500 = cbMtdParam._m0[15u].x + _495;
    float _501 = isnan(0.0) ? _500 : (isnan(_500) ? 0.0 : max(_500, 0.0));
    float _502 = isnan(200.0) ? _501 : (isnan(_501) ? 200.0 : min(_501, 200.0));
    precise float _504 = _486 * _502;
    precise float _505 = _488 * _502;
    precise float _506 = _489 * _502;
    precise float _511 = _506 * cbMtdParam._m0[16u].x;
    precise float _520 = _185 * cbTextureTilingScale._m0[5u].x;
    precise float _521 = _186 * cbTextureTilingScale._m0[5u].y;
    precise float _522 = cbTextureTilingScale._m0[5u].z + _520;
    precise float _523 = cbTextureTilingScale._m0[5u].w + _521;
    precise float _529 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_15, SS_DiffuseMap), vec2(_522, _523), 0.0).x * cbMtdParam._m0[14u].w;
    precise float _530 = _502 * _529;
    precise float _531 = _505 + _530;
    precise float _532 = cbMtdParam._m0[15u].z * _531;
    precise float _534 = _504 * cbMtdParam._m0[15u].w;
    precise float _535 = _425 + _534;
    precise float _536 = _432 + _532;
    precise float _537 = _439 + _511;
    precise float _543 = _535 - cbSceneParam._m0[3u].x;
    precise float _544 = _536 - cbSceneParam._m0[3u].y;
    precise float _545 = _537 - cbSceneParam._m0[3u].z;
    precise float _572 = cbSceneParam._m0[24u].x * _543;
    precise float _573 = _544 * cbSceneParam._m0[24u].y;
    precise float _574 = _573 + _572;
    precise float _575 = _545 * cbSceneParam._m0[24u].z;
    precise float _576 = _575 + _574;
    precise float _577 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _578 = _577 + _576;
    precise float _579 = _543 * cbSceneParam._m0[25u].x;
    precise float _580 = _544 * cbSceneParam._m0[25u].y;
    precise float _581 = _580 + _579;
    precise float _582 = _545 * cbSceneParam._m0[25u].z;
    precise float _583 = _582 + _581;
    precise float _584 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _585 = _584 + _583;
    precise float _586 = _543 * cbSceneParam._m0[26u].x;
    precise float _587 = _544 * cbSceneParam._m0[26u].y;
    precise float _588 = _587 + _586;
    precise float _589 = _545 * cbSceneParam._m0[26u].z;
    precise float _590 = _589 + _588;
    precise float _591 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _592 = _591 + _590;
    precise float _593 = _543 * cbSceneParam._m0[27u].x;
    precise float _594 = _544 * cbSceneParam._m0[27u].y;
    precise float _595 = _594 + _593;
    precise float _596 = _545 * cbSceneParam._m0[27u].z;
    precise float _597 = _596 + _595;
    precise float _598 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _599 = _598 + _597;
    gl_Position.x = _578;
    gl_Position.y = _585;
    gl_Position.z = _592;
    gl_Position.w = _599;
    POSITION_1.x = _578;
    POSITION_1.y = _585;
    POSITION_1.z = _592;
    POSITION_1.w = _599;
    NORMAL_1.x = fma(_197, _413, fma(_196, _410, _407 * _194));
    NORMAL_1.y = fma(_197, _414, fma(_196, _411, _408 * _194));
    NORMAL_1.z = fma(_197, _415, fma(_196, _412, _409 * _194));
    NORMAL_1.w = float(_224);
    TANGENT_1.x = fma(_208, _413, fma(_207, _410, _407 * _206));
    TANGENT_1.y = fma(_208, _414, fma(_207, _411, _408 * _206));
    TANGENT_1.z = fma(_208, _415, fma(_207, _412, _409 * _206));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = _185;
    TEXCOORD_1.y = _186;
    TEXCOORD_1.z = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_578, _585, _592, _599), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_578, _585, _592, _599), vec4(cbInstanceData._m0[_237 + 3u]));
}


