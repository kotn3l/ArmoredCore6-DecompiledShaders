#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D C_c4210_illusion_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c4210_illusion_snp_0_Texture2D_15;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 3, component = 3) out float TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_8 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _170 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _172 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _177 = _170 * cbTexScroll._m0[0u].x;
    precise float _178 = _172 * cbTexScroll._m0[0u].y;
    precise float _181 = _177 + cbTexScroll._m0[0u].z;
    precise float _182 = _178 + cbTexScroll._m0[0u].w;
    float _190 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _202 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _203 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _204 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _210 = POSITION.x + 0.0;
    precise float _211 = POSITION.y + 0.0;
    precise float _212 = POSITION.z + 0.0;
    uint _217 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _219 = texelFetch(g_InstanceIndexBuffer, int(_217));
    uint _220 = _219.x;
    precise float _221 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _226 = isnan(_221) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _221 : max(0.001000000047497451305389404296875, _221));
    precise float _228 = BLENDWEIGHT.x / _226;
    precise float _229 = BLENDWEIGHT.y / _226;
    precise float _230 = BLENDWEIGHT.z / _226;
    precise float _231 = BLENDWEIGHT.w / _226;
    uint _233 = _220 * 13u;
    uvec4 _238 = floatBitsToUint(cbInstanceData._m0[_233 + 4u]);
    uint _239 = _238.x;
    uint _241 = (_239 + uint(float(BLENDINDICES.x))) * 3u;
    uint _248 = _241 + 1u;
    uint _255 = _241 + 2u;
    precise float _262 = _228 * cbObjMatrix._m0[_241].x;
    precise float _263 = _228 * cbObjMatrix._m0[_248].x;
    precise float _264 = _228 * cbObjMatrix._m0[_255].x;
    precise float _265 = _228 * cbObjMatrix._m0[_241].y;
    precise float _266 = _228 * cbObjMatrix._m0[_248].y;
    precise float _267 = _228 * cbObjMatrix._m0[_255].y;
    precise float _268 = _228 * cbObjMatrix._m0[_241].z;
    precise float _269 = _228 * cbObjMatrix._m0[_248].z;
    precise float _270 = _228 * cbObjMatrix._m0[_255].z;
    precise float _271 = _228 * cbObjMatrix._m0[_241].w;
    precise float _272 = _228 * cbObjMatrix._m0[_248].w;
    precise float _273 = _228 * cbObjMatrix._m0[_255].w;
    uint _276 = (_239 + uint(float(BLENDINDICES.y))) * 3u;
    uint _283 = _276 + 1u;
    uint _290 = _276 + 2u;
    precise float _297 = _229 * cbObjMatrix._m0[_276].x;
    precise float _298 = _229 * cbObjMatrix._m0[_283].x;
    precise float _299 = _229 * cbObjMatrix._m0[_290].x;
    precise float _300 = _229 * cbObjMatrix._m0[_276].y;
    precise float _301 = _229 * cbObjMatrix._m0[_283].y;
    precise float _302 = _229 * cbObjMatrix._m0[_290].y;
    precise float _303 = _229 * cbObjMatrix._m0[_276].z;
    precise float _304 = _229 * cbObjMatrix._m0[_283].z;
    precise float _305 = _229 * cbObjMatrix._m0[_290].z;
    precise float _306 = _229 * cbObjMatrix._m0[_276].w;
    precise float _307 = _229 * cbObjMatrix._m0[_283].w;
    precise float _308 = _229 * cbObjMatrix._m0[_290].w;
    precise float _309 = _262 + _297;
    precise float _310 = _263 + _298;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    precise float _316 = _269 + _304;
    precise float _317 = _270 + _305;
    precise float _318 = _271 + _306;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    uint _323 = (_239 + uint(float(BLENDINDICES.z))) * 3u;
    uint _330 = _323 + 1u;
    uint _337 = _323 + 2u;
    precise float _344 = _230 * cbObjMatrix._m0[_323].x;
    precise float _345 = _230 * cbObjMatrix._m0[_330].x;
    precise float _346 = _230 * cbObjMatrix._m0[_337].x;
    precise float _347 = _230 * cbObjMatrix._m0[_323].y;
    precise float _348 = _230 * cbObjMatrix._m0[_330].y;
    precise float _349 = _230 * cbObjMatrix._m0[_337].y;
    precise float _350 = _230 * cbObjMatrix._m0[_323].z;
    precise float _351 = _230 * cbObjMatrix._m0[_330].z;
    precise float _352 = _230 * cbObjMatrix._m0[_337].z;
    precise float _353 = _230 * cbObjMatrix._m0[_323].w;
    precise float _354 = _230 * cbObjMatrix._m0[_330].w;
    precise float _355 = _230 * cbObjMatrix._m0[_337].w;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    uint _370 = (_239 + uint(float(BLENDINDICES.w))) * 3u;
    uint _377 = _370 + 1u;
    uint _384 = _370 + 2u;
    precise float _391 = _231 * cbObjMatrix._m0[_370].x;
    precise float _392 = _231 * cbObjMatrix._m0[_377].x;
    precise float _393 = _231 * cbObjMatrix._m0[_384].x;
    precise float _394 = _231 * cbObjMatrix._m0[_370].y;
    precise float _395 = _231 * cbObjMatrix._m0[_377].y;
    precise float _396 = _231 * cbObjMatrix._m0[_384].y;
    precise float _397 = _231 * cbObjMatrix._m0[_370].z;
    precise float _398 = _231 * cbObjMatrix._m0[_377].z;
    precise float _399 = _231 * cbObjMatrix._m0[_384].z;
    precise float _400 = _231 * cbObjMatrix._m0[_370].w;
    precise float _401 = _231 * cbObjMatrix._m0[_377].w;
    precise float _402 = _231 * cbObjMatrix._m0[_384].w;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _210 * _403;
    precise float _416 = _211 * _406;
    precise float _417 = _416 + _415;
    precise float _418 = _212 * _409;
    precise float _419 = _418 + _417;
    precise float _420 = 1.0 * _412;
    precise float _421 = _420 + _419;
    precise float _422 = _210 * _404;
    precise float _423 = _211 * _407;
    precise float _424 = _423 + _422;
    precise float _425 = _212 * _410;
    precise float _426 = _425 + _424;
    precise float _427 = 1.0 * _413;
    precise float _428 = _427 + _426;
    precise float _429 = _210 * _405;
    precise float _430 = _211 * _408;
    precise float _431 = _430 + _429;
    precise float _432 = _212 * _411;
    precise float _433 = _432 + _431;
    precise float _434 = 1.0 * _414;
    precise float _435 = _434 + _433;
    float _441 = cbSceneParam._m0[3u].x - _421;
    float _442 = cbSceneParam._m0[3u].y - _428;
    float _443 = cbSceneParam._m0[3u].z - _435;
    precise float _473 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].y;
    precise float _475 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].z;
    precise float _476 = _181 + _473;
    precise float _477 = _182 + _475;
    precise float _484 = _476 * cbTextureTilingScale._m0[4u].x;
    precise float _485 = cbTextureTilingScale._m0[4u].y * _477;
    precise float _486 = cbTextureTilingScale._m0[4u].z + _484;
    precise float _487 = cbTextureTilingScale._m0[4u].w + _485;
    vec4 _490 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_14, SS_WrapLinear), vec2(_486, _487), 0.0);
    precise float _496 = _490.x + (-0.5);
    precise float _498 = _490.y + (-0.5);
    precise float _499 = _490.z + (-0.5);
    precise float _504 = cbMtdParam._m0[14u].x * cbMtdParam._m0[13u].y;
    precise float _505 = _504 + 0.0;
    precise float _510 = cbMtdParam._m0[15u].x + _505;
    float _511 = isnan(0.0) ? _510 : (isnan(_510) ? 0.0 : max(_510, 0.0));
    float _512 = isnan(200.0) ? _511 : (isnan(_511) ? 200.0 : min(_511, 200.0));
    precise float _514 = _496 * _512;
    precise float _515 = _498 * _512;
    precise float _516 = _499 * _512;
    precise float _521 = _516 * cbMtdParam._m0[16u].x;
    precise float _530 = _181 * cbTextureTilingScale._m0[5u].x;
    precise float _531 = _182 * cbTextureTilingScale._m0[5u].y;
    precise float _532 = cbTextureTilingScale._m0[5u].z + _530;
    precise float _533 = cbTextureTilingScale._m0[5u].w + _531;
    precise float _539 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_15, SS_DiffuseMap), vec2(_532, _533), 0.0).x * cbMtdParam._m0[14u].w;
    precise float _540 = _512 * _539;
    precise float _541 = _515 + _540;
    precise float _542 = cbMtdParam._m0[15u].z * _541;
    precise float _544 = _514 * cbMtdParam._m0[15u].w;
    precise float _545 = _421 + _544;
    precise float _546 = _428 + _542;
    precise float _547 = _435 + _521;
    precise float _548 = _545 - cbSceneParam._m0[3u].x;
    precise float _549 = _546 - cbSceneParam._m0[3u].y;
    precise float _550 = _547 - cbSceneParam._m0[3u].z;
    precise float _577 = cbSceneParam._m0[24u].x * _548;
    precise float _578 = _549 * cbSceneParam._m0[24u].y;
    precise float _579 = _578 + _577;
    precise float _580 = _550 * cbSceneParam._m0[24u].z;
    precise float _581 = _580 + _579;
    precise float _582 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _583 = _582 + _581;
    precise float _584 = _548 * cbSceneParam._m0[25u].x;
    precise float _585 = _549 * cbSceneParam._m0[25u].y;
    precise float _586 = _585 + _584;
    precise float _587 = _550 * cbSceneParam._m0[25u].z;
    precise float _588 = _587 + _586;
    precise float _589 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _590 = _589 + _588;
    precise float _591 = _548 * cbSceneParam._m0[26u].x;
    precise float _592 = _549 * cbSceneParam._m0[26u].y;
    precise float _593 = _592 + _591;
    precise float _594 = _550 * cbSceneParam._m0[26u].z;
    precise float _595 = _594 + _593;
    precise float _596 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _597 = _596 + _595;
    precise float _598 = _548 * cbSceneParam._m0[27u].x;
    precise float _599 = _549 * cbSceneParam._m0[27u].y;
    precise float _600 = _599 + _598;
    precise float _601 = _550 * cbSceneParam._m0[27u].z;
    precise float _602 = _601 + _600;
    precise float _603 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _604 = _603 + _602;
    gl_Position.x = _583;
    gl_Position.y = _590;
    gl_Position.z = _597;
    gl_Position.w = _604;
    NORMAL_1.x = fma(_193, _409, fma(_192, _406, _403 * _190));
    NORMAL_1.y = fma(_193, _410, fma(_192, _407, _404 * _190));
    NORMAL_1.z = fma(_193, _411, fma(_192, _408, _405 * _190));
    NORMAL_1.w = float(_220);
    TANGENT_1.x = fma(_204, _409, fma(_203, _406, _403 * _202));
    TANGENT_1.y = fma(_204, _410, fma(_203, _407, _404 * _202));
    TANGENT_1.z = fma(_204, _411, fma(_203, _408, _405 * _202));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = _181;
    TEXCOORD_1.y = _182;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_8 = sqrt(((_441 * _441) + (_442 * _442)) + (_443 * _443));
    gl_ClipDistance[0u] = dot(vec4(_583, _590, _597, _604), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_583, _590, _597, _604), vec4(cbInstanceData._m0[_233 + 3u]));
}


