#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D C_c4210_illusion_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c4210_illusion_snp_0_Texture2D_15;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    precise float _169 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _171 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _176 = _169 * cbTexScroll._m0[0u].x;
    precise float _177 = _171 * cbTexScroll._m0[0u].y;
    precise float _180 = _176 + cbTexScroll._m0[0u].z;
    precise float _181 = _177 + cbTexScroll._m0[0u].w;
    float _189 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _191 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _201 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _202 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _203 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _209 = POSITION.x + 0.0;
    precise float _210 = POSITION.y + 0.0;
    precise float _211 = POSITION.z + 0.0;
    uint _216 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _218 = texelFetch(g_InstanceIndexBuffer, int(_216));
    uint _219 = _218.x;
    precise float _220 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _225 = isnan(_220) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _220 : max(0.001000000047497451305389404296875, _220));
    precise float _227 = BLENDWEIGHT.x / _225;
    precise float _228 = BLENDWEIGHT.y / _225;
    precise float _229 = BLENDWEIGHT.z / _225;
    precise float _230 = BLENDWEIGHT.w / _225;
    uvec4 _237 = floatBitsToUint(cbInstanceData._m0[(_219 * 13u) + 4u]);
    uint _238 = _237.x;
    uint _240 = (_238 + uint(float(BLENDINDICES.x))) * 3u;
    uint _247 = _240 + 1u;
    uint _254 = _240 + 2u;
    precise float _261 = _227 * cbObjMatrix._m0[_240].x;
    precise float _262 = _227 * cbObjMatrix._m0[_247].x;
    precise float _263 = _227 * cbObjMatrix._m0[_254].x;
    precise float _264 = _227 * cbObjMatrix._m0[_240].y;
    precise float _265 = _227 * cbObjMatrix._m0[_247].y;
    precise float _266 = _227 * cbObjMatrix._m0[_254].y;
    precise float _267 = _227 * cbObjMatrix._m0[_240].z;
    precise float _268 = _227 * cbObjMatrix._m0[_247].z;
    precise float _269 = _227 * cbObjMatrix._m0[_254].z;
    precise float _270 = _227 * cbObjMatrix._m0[_240].w;
    precise float _271 = _227 * cbObjMatrix._m0[_247].w;
    precise float _272 = _227 * cbObjMatrix._m0[_254].w;
    uint _275 = (_238 + uint(float(BLENDINDICES.y))) * 3u;
    uint _282 = _275 + 1u;
    uint _289 = _275 + 2u;
    precise float _296 = _228 * cbObjMatrix._m0[_275].x;
    precise float _297 = _228 * cbObjMatrix._m0[_282].x;
    precise float _298 = _228 * cbObjMatrix._m0[_289].x;
    precise float _299 = _228 * cbObjMatrix._m0[_275].y;
    precise float _300 = _228 * cbObjMatrix._m0[_282].y;
    precise float _301 = _228 * cbObjMatrix._m0[_289].y;
    precise float _302 = _228 * cbObjMatrix._m0[_275].z;
    precise float _303 = _228 * cbObjMatrix._m0[_282].z;
    precise float _304 = _228 * cbObjMatrix._m0[_289].z;
    precise float _305 = _228 * cbObjMatrix._m0[_275].w;
    precise float _306 = _228 * cbObjMatrix._m0[_282].w;
    precise float _307 = _228 * cbObjMatrix._m0[_289].w;
    precise float _308 = _261 + _296;
    precise float _309 = _262 + _297;
    precise float _310 = _263 + _298;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    precise float _316 = _269 + _304;
    precise float _317 = _270 + _305;
    precise float _318 = _271 + _306;
    precise float _319 = _272 + _307;
    uint _322 = (_238 + uint(float(BLENDINDICES.z))) * 3u;
    uint _329 = _322 + 1u;
    uint _336 = _322 + 2u;
    precise float _343 = _229 * cbObjMatrix._m0[_322].x;
    precise float _344 = _229 * cbObjMatrix._m0[_329].x;
    precise float _345 = _229 * cbObjMatrix._m0[_336].x;
    precise float _346 = _229 * cbObjMatrix._m0[_322].y;
    precise float _347 = _229 * cbObjMatrix._m0[_329].y;
    precise float _348 = _229 * cbObjMatrix._m0[_336].y;
    precise float _349 = _229 * cbObjMatrix._m0[_322].z;
    precise float _350 = _229 * cbObjMatrix._m0[_329].z;
    precise float _351 = _229 * cbObjMatrix._m0[_336].z;
    precise float _352 = _229 * cbObjMatrix._m0[_322].w;
    precise float _353 = _229 * cbObjMatrix._m0[_329].w;
    precise float _354 = _229 * cbObjMatrix._m0[_336].w;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    uint _369 = (_238 + uint(float(BLENDINDICES.w))) * 3u;
    uint _376 = _369 + 1u;
    uint _383 = _369 + 2u;
    precise float _390 = _230 * cbObjMatrix._m0[_369].x;
    precise float _391 = _230 * cbObjMatrix._m0[_376].x;
    precise float _392 = _230 * cbObjMatrix._m0[_383].x;
    precise float _393 = _230 * cbObjMatrix._m0[_369].y;
    precise float _394 = _230 * cbObjMatrix._m0[_376].y;
    precise float _395 = _230 * cbObjMatrix._m0[_383].y;
    precise float _396 = _230 * cbObjMatrix._m0[_369].z;
    precise float _397 = _230 * cbObjMatrix._m0[_376].z;
    precise float _398 = _230 * cbObjMatrix._m0[_383].z;
    precise float _399 = _230 * cbObjMatrix._m0[_369].w;
    precise float _400 = _230 * cbObjMatrix._m0[_376].w;
    precise float _401 = _230 * cbObjMatrix._m0[_383].w;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _209 * _402;
    precise float _415 = _210 * _405;
    precise float _416 = _415 + _414;
    precise float _417 = _211 * _408;
    precise float _418 = _417 + _416;
    precise float _419 = 1.0 * _411;
    precise float _420 = _419 + _418;
    precise float _421 = _209 * _403;
    precise float _422 = _210 * _406;
    precise float _423 = _422 + _421;
    precise float _424 = _211 * _409;
    precise float _425 = _424 + _423;
    precise float _426 = 1.0 * _412;
    precise float _427 = _426 + _425;
    precise float _428 = _209 * _404;
    precise float _429 = _210 * _407;
    precise float _430 = _429 + _428;
    precise float _431 = _211 * _410;
    precise float _432 = _431 + _430;
    precise float _433 = 1.0 * _413;
    precise float _434 = _433 + _432;
    precise float _458 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].y;
    precise float _460 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].z;
    precise float _461 = _180 + _458;
    precise float _462 = _181 + _460;
    precise float _469 = _461 * cbTextureTilingScale._m0[4u].x;
    precise float _470 = cbTextureTilingScale._m0[4u].y * _462;
    precise float _471 = cbTextureTilingScale._m0[4u].z + _469;
    precise float _472 = cbTextureTilingScale._m0[4u].w + _470;
    vec4 _475 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_14, SS_WrapLinear), vec2(_471, _472), 0.0);
    precise float _481 = _475.x + (-0.5);
    precise float _483 = _475.y + (-0.5);
    precise float _484 = _475.z + (-0.5);
    precise float _489 = cbMtdParam._m0[14u].x * cbMtdParam._m0[13u].y;
    precise float _490 = _489 + 0.0;
    precise float _495 = cbMtdParam._m0[15u].x + _490;
    float _496 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _497 = isnan(200.0) ? _496 : (isnan(_496) ? 200.0 : min(_496, 200.0));
    precise float _499 = _481 * _497;
    precise float _500 = _483 * _497;
    precise float _501 = _484 * _497;
    precise float _506 = _501 * cbMtdParam._m0[16u].x;
    precise float _515 = _180 * cbTextureTilingScale._m0[5u].x;
    precise float _516 = _181 * cbTextureTilingScale._m0[5u].y;
    precise float _517 = cbTextureTilingScale._m0[5u].z + _515;
    precise float _518 = cbTextureTilingScale._m0[5u].w + _516;
    precise float _524 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_15, SS_DiffuseMap), vec2(_517, _518), 0.0).x * cbMtdParam._m0[14u].w;
    precise float _525 = _497 * _524;
    precise float _526 = _500 + _525;
    precise float _527 = cbMtdParam._m0[15u].z * _526;
    precise float _529 = _499 * cbMtdParam._m0[15u].w;
    precise float _530 = _420 + _529;
    precise float _531 = _427 + _527;
    precise float _532 = _434 + _506;
    precise float _538 = _530 - cbSceneParam._m0[3u].x;
    precise float _539 = _531 - cbSceneParam._m0[3u].y;
    precise float _540 = _532 - cbSceneParam._m0[3u].z;
    precise float _567 = cbSceneParam._m0[24u].x * _538;
    precise float _568 = _539 * cbSceneParam._m0[24u].y;
    precise float _569 = _568 + _567;
    precise float _570 = _540 * cbSceneParam._m0[24u].z;
    precise float _571 = _570 + _569;
    precise float _572 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _573 = _572 + _571;
    precise float _574 = _538 * cbSceneParam._m0[25u].x;
    precise float _575 = _539 * cbSceneParam._m0[25u].y;
    precise float _576 = _575 + _574;
    precise float _577 = _540 * cbSceneParam._m0[25u].z;
    precise float _578 = _577 + _576;
    precise float _579 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _580 = _579 + _578;
    precise float _581 = _538 * cbSceneParam._m0[26u].x;
    precise float _582 = _539 * cbSceneParam._m0[26u].y;
    precise float _583 = _582 + _581;
    precise float _584 = _540 * cbSceneParam._m0[26u].z;
    precise float _585 = _584 + _583;
    precise float _586 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _587 = _586 + _585;
    precise float _588 = _538 * cbSceneParam._m0[27u].x;
    precise float _589 = _539 * cbSceneParam._m0[27u].y;
    precise float _590 = _589 + _588;
    precise float _591 = _540 * cbSceneParam._m0[27u].z;
    precise float _592 = _591 + _590;
    precise float _593 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _594 = _593 + _592;
    gl_Position.x = _573;
    gl_Position.y = _580;
    gl_Position.z = _587;
    gl_Position.w = _594;
    POSITION_1.x = _573;
    POSITION_1.y = _580;
    POSITION_1.z = _587;
    POSITION_1.w = _594;
    NORMAL_1.x = fma(_192, _408, fma(_191, _405, _402 * _189));
    NORMAL_1.y = fma(_192, _409, fma(_191, _406, _403 * _189));
    NORMAL_1.z = fma(_192, _410, fma(_191, _407, _404 * _189));
    NORMAL_1.w = float(_219);
    TANGENT_1.x = fma(_203, _408, fma(_202, _405, _402 * _201));
    TANGENT_1.y = fma(_203, _409, fma(_202, _406, _403 * _201));
    TANGENT_1.z = fma(_203, _410, fma(_202, _407, _404 * _201));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = _180;
    TEXCOORD_1.y = _181;
    TEXCOORD_1.z = COLOR_1.x;
}


