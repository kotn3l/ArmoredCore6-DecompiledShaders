#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D C_c4210_illusion_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c4210_illusion_snp_0_Texture2D_15;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_6;
layout(location = 7) out vec3 TEXCOORD_7;

void main()
{
    uint _102 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _192 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _194 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _199 = _192 * cbTexScroll._m0[0u].x;
    precise float _200 = _194 * cbTexScroll._m0[0u].y;
    precise float _203 = _199 + cbTexScroll._m0[0u].z;
    precise float _204 = _200 + cbTexScroll._m0[0u].w;
    float _212 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _214 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _215 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _224 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _225 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _226 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _232 = POSITION.x + 0.0;
    precise float _233 = POSITION.y + 0.0;
    precise float _234 = POSITION.z + 0.0;
    uint _239 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _102;
    uvec4 _241 = texelFetch(g_InstanceIndexBuffer, int(_239));
    uint _242 = _241.x;
    precise float _243 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _248 = isnan(_243) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _243 : max(0.001000000047497451305389404296875, _243));
    precise float _250 = BLENDWEIGHT.x / _248;
    precise float _251 = BLENDWEIGHT.y / _248;
    precise float _252 = BLENDWEIGHT.z / _248;
    precise float _253 = BLENDWEIGHT.w / _248;
    uvec4 _260 = floatBitsToUint(cbInstanceData._m0[(_242 * 13u) + 4u]);
    uint _261 = _260.x;
    uint _263 = (_261 + uint(float(BLENDINDICES.x))) * 3u;
    uint _270 = _263 + 1u;
    uint _277 = _263 + 2u;
    precise float _284 = _250 * cbObjMatrix._m0[_263].x;
    precise float _285 = _250 * cbObjMatrix._m0[_270].x;
    precise float _286 = _250 * cbObjMatrix._m0[_277].x;
    precise float _287 = _250 * cbObjMatrix._m0[_263].y;
    precise float _288 = _250 * cbObjMatrix._m0[_270].y;
    precise float _289 = _250 * cbObjMatrix._m0[_277].y;
    precise float _290 = _250 * cbObjMatrix._m0[_263].z;
    precise float _291 = _250 * cbObjMatrix._m0[_270].z;
    precise float _292 = _250 * cbObjMatrix._m0[_277].z;
    precise float _293 = _250 * cbObjMatrix._m0[_263].w;
    precise float _294 = _250 * cbObjMatrix._m0[_270].w;
    precise float _295 = _250 * cbObjMatrix._m0[_277].w;
    uint _298 = (_261 + uint(float(BLENDINDICES.y))) * 3u;
    uint _305 = _298 + 1u;
    uint _312 = _298 + 2u;
    precise float _319 = _251 * cbObjMatrix._m0[_298].x;
    precise float _320 = _251 * cbObjMatrix._m0[_305].x;
    precise float _321 = _251 * cbObjMatrix._m0[_312].x;
    precise float _322 = _251 * cbObjMatrix._m0[_298].y;
    precise float _323 = _251 * cbObjMatrix._m0[_305].y;
    precise float _324 = _251 * cbObjMatrix._m0[_312].y;
    precise float _325 = _251 * cbObjMatrix._m0[_298].z;
    precise float _326 = _251 * cbObjMatrix._m0[_305].z;
    precise float _327 = _251 * cbObjMatrix._m0[_312].z;
    precise float _328 = _251 * cbObjMatrix._m0[_298].w;
    precise float _329 = _251 * cbObjMatrix._m0[_305].w;
    precise float _330 = _251 * cbObjMatrix._m0[_312].w;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    uint _345 = (_261 + uint(float(BLENDINDICES.z))) * 3u;
    uint _352 = _345 + 1u;
    uint _359 = _345 + 2u;
    precise float _366 = _252 * cbObjMatrix._m0[_345].x;
    precise float _367 = _252 * cbObjMatrix._m0[_352].x;
    precise float _368 = _252 * cbObjMatrix._m0[_359].x;
    precise float _369 = _252 * cbObjMatrix._m0[_345].y;
    precise float _370 = _252 * cbObjMatrix._m0[_352].y;
    precise float _371 = _252 * cbObjMatrix._m0[_359].y;
    precise float _372 = _252 * cbObjMatrix._m0[_345].z;
    precise float _373 = _252 * cbObjMatrix._m0[_352].z;
    precise float _374 = _252 * cbObjMatrix._m0[_359].z;
    precise float _375 = _252 * cbObjMatrix._m0[_345].w;
    precise float _376 = _252 * cbObjMatrix._m0[_352].w;
    precise float _377 = _252 * cbObjMatrix._m0[_359].w;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    uint _392 = (_261 + uint(float(BLENDINDICES.w))) * 3u;
    uint _399 = _392 + 1u;
    uint _406 = _392 + 2u;
    precise float _413 = _253 * cbObjMatrix._m0[_392].x;
    precise float _414 = _253 * cbObjMatrix._m0[_399].x;
    precise float _415 = _253 * cbObjMatrix._m0[_406].x;
    precise float _416 = _253 * cbObjMatrix._m0[_392].y;
    precise float _417 = _253 * cbObjMatrix._m0[_399].y;
    precise float _418 = _253 * cbObjMatrix._m0[_406].y;
    precise float _419 = _253 * cbObjMatrix._m0[_392].z;
    precise float _420 = _253 * cbObjMatrix._m0[_399].z;
    precise float _421 = _253 * cbObjMatrix._m0[_406].z;
    precise float _422 = _253 * cbObjMatrix._m0[_392].w;
    precise float _423 = _253 * cbObjMatrix._m0[_399].w;
    precise float _424 = _253 * cbObjMatrix._m0[_406].w;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _232 * _425;
    precise float _438 = _233 * _428;
    precise float _439 = _438 + _437;
    precise float _440 = _234 * _431;
    precise float _441 = _440 + _439;
    precise float _442 = 1.0 * _434;
    precise float _443 = _442 + _441;
    precise float _444 = _232 * _426;
    precise float _445 = _233 * _429;
    precise float _446 = _445 + _444;
    precise float _447 = _234 * _432;
    precise float _448 = _447 + _446;
    precise float _449 = 1.0 * _435;
    precise float _450 = _449 + _448;
    precise float _451 = _232 * _427;
    precise float _452 = _233 * _430;
    precise float _453 = _452 + _451;
    precise float _454 = _234 * _433;
    precise float _455 = _454 + _453;
    precise float _456 = 1.0 * _436;
    precise float _457 = _456 + _455;
    float _628 = fma(_215, _431, fma(_214, _428, _425 * _212));
    float _631 = fma(_215, _432, fma(_214, _429, _426 * _212));
    float _634 = fma(_215, _433, fma(_214, _430, _427 * _212));
    precise float _649 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].y;
    precise float _651 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].z;
    precise float _652 = _203 + _649;
    precise float _653 = _204 + _651;
    precise float _660 = _652 * cbTextureTilingScale._m0[4u].x;
    precise float _661 = cbTextureTilingScale._m0[4u].y * _653;
    precise float _662 = cbTextureTilingScale._m0[4u].z + _660;
    precise float _663 = cbTextureTilingScale._m0[4u].w + _661;
    vec4 _666 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_14, SS_WrapLinear), vec2(_662, _663), 0.0);
    precise float _672 = _666.x + (-0.5);
    precise float _674 = _666.y + (-0.5);
    precise float _675 = _666.z + (-0.5);
    precise float _680 = cbMtdParam._m0[14u].x * cbMtdParam._m0[13u].y;
    precise float _681 = _680 + 0.0;
    precise float _686 = cbMtdParam._m0[15u].x + _681;
    float _687 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    float _688 = isnan(200.0) ? _687 : (isnan(_687) ? 200.0 : min(_687, 200.0));
    precise float _690 = _672 * _688;
    precise float _691 = _674 * _688;
    precise float _692 = _675 * _688;
    precise float _697 = _692 * cbMtdParam._m0[16u].x;
    precise float _706 = _203 * cbTextureTilingScale._m0[5u].x;
    precise float _707 = _204 * cbTextureTilingScale._m0[5u].y;
    precise float _708 = cbTextureTilingScale._m0[5u].z + _706;
    precise float _709 = cbTextureTilingScale._m0[5u].w + _707;
    precise float _715 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_15, SS_DiffuseMap), vec2(_708, _709), 0.0).x * cbMtdParam._m0[14u].w;
    precise float _716 = _688 * _715;
    precise float _717 = _691 + _716;
    precise float _718 = cbMtdParam._m0[15u].z * _717;
    precise float _720 = _690 * cbMtdParam._m0[15u].w;
    precise float _721 = _443 + _720;
    precise float _722 = _450 + _718;
    precise float _723 = _457 + _697;
    float _724 = (((((cbPrevObjMatrix._m0[_298].w * _251) + (cbPrevObjMatrix._m0[_263].w * _250)) + (cbPrevObjMatrix._m0[_345].w * _252)) + (cbPrevObjMatrix._m0[_392].w * _253)) + fma(_234, (((cbPrevObjMatrix._m0[_298].z * _251) + (cbPrevObjMatrix._m0[_263].z * _250)) + (cbPrevObjMatrix._m0[_345].z * _252)) + (cbPrevObjMatrix._m0[_392].z * _253), fma(_233, (((cbPrevObjMatrix._m0[_298].y * _251) + (cbPrevObjMatrix._m0[_263].y * _250)) + (cbPrevObjMatrix._m0[_345].y * _252)) + (cbPrevObjMatrix._m0[_392].y * _253), ((((cbPrevObjMatrix._m0[_298].x * _251) + (cbPrevObjMatrix._m0[_263].x * _250)) + (cbPrevObjMatrix._m0[_345].x * _252)) + (cbPrevObjMatrix._m0[_392].x * _253)) * _232))) + _720;
    float _725 = (((((cbPrevObjMatrix._m0[_312].w * _251) + (cbPrevObjMatrix._m0[_277].w * _250)) + (cbPrevObjMatrix._m0[_359].w * _252)) + (cbPrevObjMatrix._m0[_406].w * _253)) + fma(_234, (((cbPrevObjMatrix._m0[_312].z * _251) + (cbPrevObjMatrix._m0[_277].z * _250)) + (cbPrevObjMatrix._m0[_359].z * _252)) + (cbPrevObjMatrix._m0[_406].z * _253), fma(_233, (((cbPrevObjMatrix._m0[_312].y * _251) + (cbPrevObjMatrix._m0[_277].y * _250)) + (cbPrevObjMatrix._m0[_359].y * _252)) + (cbPrevObjMatrix._m0[_406].y * _253), ((((cbPrevObjMatrix._m0[_312].x * _251) + (cbPrevObjMatrix._m0[_277].x * _250)) + (cbPrevObjMatrix._m0[_359].x * _252)) + (cbPrevObjMatrix._m0[_406].x * _253)) * _232))) + _697;
    float _732 = _724 - cbSceneParam._m0[28u].x;
    float _733 = (((((cbPrevObjMatrix._m0[_305].w * _251) + (cbPrevObjMatrix._m0[_270].w * _250)) + (cbPrevObjMatrix._m0[_352].w * _252)) + (cbPrevObjMatrix._m0[_399].w * _253)) + fma(_234, (((cbPrevObjMatrix._m0[_305].z * _251) + (cbPrevObjMatrix._m0[_270].z * _250)) + (cbPrevObjMatrix._m0[_352].z * _252)) + (cbPrevObjMatrix._m0[_399].z * _253), fma(_233, (((cbPrevObjMatrix._m0[_305].y * _251) + (cbPrevObjMatrix._m0[_270].y * _250)) + (cbPrevObjMatrix._m0[_352].y * _252)) + (cbPrevObjMatrix._m0[_399].y * _253), ((((cbPrevObjMatrix._m0[_305].x * _251) + (cbPrevObjMatrix._m0[_270].x * _250)) + (cbPrevObjMatrix._m0[_352].x * _252)) + (cbPrevObjMatrix._m0[_399].x * _253)) * _232))) - cbSceneParam._m0[28u].y;
    float _734 = _733 + _718;
    float _735 = _725 - cbSceneParam._m0[28u].z;
    precise float _785 = _721 - cbSceneParam._m0[3u].x;
    precise float _786 = _722 - cbSceneParam._m0[3u].y;
    precise float _787 = _723 - cbSceneParam._m0[3u].z;
    precise float _814 = _785 * cbSceneParam._m0[24u].x;
    precise float _815 = _786 * cbSceneParam._m0[24u].y;
    precise float _816 = _815 + _814;
    precise float _817 = _787 * cbSceneParam._m0[24u].z;
    precise float _818 = _817 + _816;
    precise float _819 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _820 = _819 + _818;
    precise float _821 = _785 * cbSceneParam._m0[25u].x;
    precise float _822 = _786 * cbSceneParam._m0[25u].y;
    precise float _823 = _822 + _821;
    precise float _824 = _787 * cbSceneParam._m0[25u].z;
    precise float _825 = _824 + _823;
    precise float _826 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _827 = _826 + _825;
    precise float _828 = _785 * cbSceneParam._m0[26u].x;
    precise float _829 = _786 * cbSceneParam._m0[26u].y;
    precise float _830 = _829 + _828;
    precise float _831 = _787 * cbSceneParam._m0[26u].z;
    precise float _832 = _831 + _830;
    precise float _833 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _834 = _833 + _832;
    precise float _835 = _785 * cbSceneParam._m0[27u].x;
    precise float _836 = _786 * cbSceneParam._m0[27u].y;
    precise float _837 = _836 + _835;
    precise float _838 = _787 * cbSceneParam._m0[27u].z;
    precise float _839 = _838 + _837;
    precise float _840 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _841 = _840 + _839;
    uint _846 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _102;
    gl_Position.x = _820;
    gl_Position.y = _827;
    gl_Position.z = _834;
    gl_Position.w = _841;
    POSITION_1.x = _820;
    POSITION_1.y = _827;
    POSITION_1.z = _834;
    POSITION_1.w = _841;
    NORMAL_1.x = _628;
    NORMAL_1.y = _631;
    NORMAL_1.z = _634;
    NORMAL_1.w = float(_242);
    TANGENT_1.x = fma(_226, _431, fma(_225, _428, _425 * _224));
    TANGENT_1.y = fma(_226, _432, fma(_225, _429, _426 * _224));
    TANGENT_1.z = fma(_226, _433, fma(_225, _430, _427 * _224));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = _203;
    TEXCOORD_1.y = _204;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_5.x = _820;
    TEXCOORD_5.y = _827;
    TEXCOORD_5.z = _834;
    TEXCOORD_5.w = _841;
    TEXCOORD_6.x = fma(_735, cbSceneParam._m0[29u].z, fma(_734, cbSceneParam._m0[29u].y, _732 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_6.y = fma(_735, cbSceneParam._m0[30u].z, fma(_734, cbSceneParam._m0[30u].y, _732 * cbSceneParam._m0[30u].x)) + cbSceneParam._m0[30u].w;
    TEXCOORD_6.z = fma(_735, cbSceneParam._m0[31u].z, fma(_734, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _732)) + cbSceneParam._m0[31u].w;
    TEXCOORD_6.w = fma(_735, cbSceneParam._m0[32u].z, fma(_734, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _732)) + cbSceneParam._m0[32u].w;
    TEXCOORD_7.x = _628;
    TEXCOORD_7.y = _631;
    TEXCOORD_7.z = _634;
    gl_ClipDistance[0u] = dot(vec4(_820, _827, _834, _841), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_820, _827, _834, _841), vec4(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_846)).x * 13u) + 3u]));
}


