#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D C_c4210_illusion_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c4210_illusion_snp_0_Texture2D_15;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 4) out vec2 TEXCOORD_4;
layout(location = 3, component = 3) out float TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_8 = 0.0;
    precise float _154 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _156 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _161 = _154 * cbTexScroll._m0[0u].x;
    precise float _162 = _156 * cbTexScroll._m0[0u].y;
    precise float _165 = _161 + cbTexScroll._m0[0u].z;
    precise float _166 = _162 + cbTexScroll._m0[0u].w;
    float _174 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _176 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _177 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _187 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _191 = POSITION.x + 0.0;
    precise float _192 = POSITION.y + 0.0;
    precise float _193 = POSITION.z + 0.0;
    uint _198 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _200 = texelFetch(g_InstanceIndexBuffer, int(_198));
    uint _201 = _200.x;
    uint _211 = (floatBitsToUint(cbInstanceData._m0[(_201 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _218 = _211 + 1u;
    uint _225 = _211 + 2u;
    precise float _232 = _191 * cbObjMatrix._m0[_211].x;
    precise float _233 = _192 * cbObjMatrix._m0[_211].y;
    precise float _234 = _233 + _232;
    precise float _235 = _193 * cbObjMatrix._m0[_211].z;
    precise float _236 = _235 + _234;
    precise float _237 = 1.0 * cbObjMatrix._m0[_211].w;
    precise float _239 = _237 + _236;
    precise float _240 = _191 * cbObjMatrix._m0[_218].x;
    precise float _241 = _192 * cbObjMatrix._m0[_218].y;
    precise float _242 = _241 + _240;
    precise float _243 = _193 * cbObjMatrix._m0[_218].z;
    precise float _244 = _243 + _242;
    precise float _245 = 1.0 * cbObjMatrix._m0[_218].w;
    precise float _246 = _245 + _244;
    precise float _247 = _191 * cbObjMatrix._m0[_225].x;
    precise float _248 = _192 * cbObjMatrix._m0[_225].y;
    precise float _249 = _248 + _247;
    precise float _250 = _193 * cbObjMatrix._m0[_225].z;
    precise float _251 = _250 + _249;
    precise float _252 = 1.0 * cbObjMatrix._m0[_225].w;
    precise float _253 = _252 + _251;
    float _259 = cbSceneParam._m0[3u].x - _239;
    float _260 = cbSceneParam._m0[3u].y - _246;
    float _261 = cbSceneParam._m0[3u].z - _253;
    precise float _292 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].y;
    precise float _294 = cbPerFrame._m0[22u].x * cbMtdParam._m0[14u].z;
    precise float _295 = _165 + _292;
    precise float _296 = _166 + _294;
    precise float _303 = _295 * cbTextureTilingScale._m0[4u].x;
    precise float _304 = cbTextureTilingScale._m0[4u].y * _296;
    precise float _305 = cbTextureTilingScale._m0[4u].z + _303;
    precise float _306 = cbTextureTilingScale._m0[4u].w + _304;
    vec4 _309 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_14, SS_WrapLinear), vec2(_305, _306), 0.0);
    precise float _314 = _309.x + (-0.5);
    precise float _316 = _309.y + (-0.5);
    precise float _317 = _309.z + (-0.5);
    precise float _322 = cbMtdParam._m0[14u].x * cbMtdParam._m0[13u].y;
    precise float _323 = _322 + 0.0;
    precise float _328 = cbMtdParam._m0[15u].x + _323;
    float _329 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _330 = isnan(200.0) ? _329 : (isnan(_329) ? 200.0 : min(_329, 200.0));
    precise float _332 = _314 * _330;
    precise float _333 = _316 * _330;
    precise float _334 = _317 * _330;
    precise float _339 = _334 * cbMtdParam._m0[16u].x;
    precise float _348 = _165 * cbTextureTilingScale._m0[5u].x;
    precise float _349 = _166 * cbTextureTilingScale._m0[5u].y;
    precise float _350 = cbTextureTilingScale._m0[5u].z + _348;
    precise float _351 = cbTextureTilingScale._m0[5u].w + _349;
    precise float _357 = textureLod(sampler2D(C_c4210_illusion_snp_0_Texture2D_15, SS_DiffuseMap), vec2(_350, _351), 0.0).x * cbMtdParam._m0[14u].w;
    precise float _358 = _330 * _357;
    precise float _359 = _333 + _358;
    precise float _360 = cbMtdParam._m0[15u].z * _359;
    precise float _362 = _332 * cbMtdParam._m0[15u].w;
    precise float _363 = _239 + _362;
    precise float _364 = _246 + _360;
    precise float _365 = _253 + _339;
    precise float _366 = _363 - cbSceneParam._m0[3u].x;
    precise float _367 = _364 - cbSceneParam._m0[3u].y;
    precise float _368 = _365 - cbSceneParam._m0[3u].z;
    precise float _395 = cbSceneParam._m0[24u].x * _366;
    precise float _396 = _367 * cbSceneParam._m0[24u].y;
    precise float _397 = _396 + _395;
    precise float _398 = _368 * cbSceneParam._m0[24u].z;
    precise float _399 = _398 + _397;
    precise float _400 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _401 = _400 + _399;
    precise float _402 = _366 * cbSceneParam._m0[25u].x;
    precise float _403 = _367 * cbSceneParam._m0[25u].y;
    precise float _404 = _403 + _402;
    precise float _405 = _368 * cbSceneParam._m0[25u].z;
    precise float _406 = _405 + _404;
    precise float _407 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _408 = _407 + _406;
    precise float _409 = _366 * cbSceneParam._m0[26u].x;
    precise float _410 = _367 * cbSceneParam._m0[26u].y;
    precise float _411 = _410 + _409;
    precise float _412 = _368 * cbSceneParam._m0[26u].z;
    precise float _413 = _412 + _411;
    precise float _414 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _415 = _414 + _413;
    precise float _416 = _366 * cbSceneParam._m0[27u].x;
    precise float _417 = _367 * cbSceneParam._m0[27u].y;
    precise float _418 = _417 + _416;
    precise float _419 = _368 * cbSceneParam._m0[27u].z;
    precise float _420 = _419 + _418;
    precise float _421 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _422 = _421 + _420;
    gl_Position.x = _401;
    gl_Position.y = _408;
    gl_Position.z = _415;
    gl_Position.w = _422;
    NORMAL_1.x = fma(_177, cbObjMatrix._m0[_211].z, fma(_176, cbObjMatrix._m0[_211].y, cbObjMatrix._m0[_211].x * _174));
    NORMAL_1.y = fma(_177, cbObjMatrix._m0[_218].z, fma(_176, cbObjMatrix._m0[_218].y, cbObjMatrix._m0[_218].x * _174));
    NORMAL_1.z = fma(_177, cbObjMatrix._m0[_225].z, fma(_176, cbObjMatrix._m0[_225].y, cbObjMatrix._m0[_225].x * _174));
    NORMAL_1.w = float(_201);
    TANGENT_1.x = fma(_189, cbObjMatrix._m0[_211].z, fma(_188, cbObjMatrix._m0[_211].y, cbObjMatrix._m0[_211].x * _187));
    TANGENT_1.y = fma(_189, cbObjMatrix._m0[_218].z, fma(_188, cbObjMatrix._m0[_218].y, cbObjMatrix._m0[_218].x * _187));
    TANGENT_1.z = fma(_189, cbObjMatrix._m0[_225].z, fma(_188, cbObjMatrix._m0[_225].y, cbObjMatrix._m0[_225].x * _187));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = _165;
    TEXCOORD_1.y = _166;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_4.x = _415;
    TEXCOORD_4.y = _422;
    TEXCOORD_8 = sqrt(((_259 * _259) + (_260 * _260)) + (_261 * _261));
}


