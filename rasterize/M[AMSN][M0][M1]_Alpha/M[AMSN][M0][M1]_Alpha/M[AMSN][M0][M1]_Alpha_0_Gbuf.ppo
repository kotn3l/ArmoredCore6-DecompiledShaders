#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Alpha_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_Alpha_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _124 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _125 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _131 = inversesqrt(dot(vec3(_123, _124, _125), vec3(_123, _124, _125)));
    float _138 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _139 = _138 * NORMAL.x;
    float _140 = _138 * NORMAL.y;
    float _141 = _138 * NORMAL.z;
    float _145 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _153;
    float _154;
    float _155;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _153 = (-0.0) - _139;
        _154 = (-0.0) - _140;
        _155 = (-0.0) - _141;
    }
    else
    {
        _153 = _139;
        _154 = _140;
        _155 = _141;
    }
    vec4 _175 = texture(sampler2D(M_AMSN_M0_M1_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _182 = _175.x * cbMtdParam._m0[9u].x;
    float _183 = _175.y * cbMtdParam._m0[9u].y;
    float _184 = _175.z * cbMtdParam._m0[9u].z;
    float _185 = _175.w * TEXCOORD_1.z;
    vec4 _197 = texture(sampler2D(M_AMSN_M0_M1_Alpha_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _199 = _197.x;
    vec4 _211 = texture(sampler2D(M_AMSN_M0_M1_Alpha_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _215 = _211.z;
    float _219 = (_211.x * 2.0) + (-1.0);
    float _221 = (_211.y * 2.0) + (-1.0);
    float _222 = dot(vec2(_219, _221), vec2(_219, _221));
    float _336 = isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0));
    float _228 = sqrt(1.0 - (isnan(1.0) ? _336 : (isnan(_336) ? 1.0 : min(_336, 1.0))));
    float _231 = fma(_228, _153, fma(_221, _145 * TANGENT.x, (_131 * _123) * _219));
    float _234 = fma(_228, _154, fma(_221, _145 * TANGENT.y, (_131 * _124) * _219));
    float _237 = fma(_228, _155, fma(_221, _145 * TANGENT.z, (_131 * _125) * _219));
    float _241 = inversesqrt(dot(vec3(_231, _234, _237), vec3(_231, _234, _237)));
    float _347 = isnan(0.0) ? _185 : (isnan(_185) ? 0.0 : max(_185, 0.0));
    float _242 = isnan(1.0) ? _347 : (isnan(_347) ? 1.0 : min(_347, 1.0));
    float _358 = isnan(0.0) ? _215 : (isnan(_215) ? 0.0 : max(_215, 0.0));
    float _369 = isnan(0.0) ? _182 : (isnan(_182) ? 0.0 : max(_182, 0.0));
    float _380 = isnan(0.0) ? _183 : (isnan(_183) ? 0.0 : max(_183, 0.0));
    float _391 = isnan(0.0) ? _184 : (isnan(_184) ? 0.0 : max(_184, 0.0));
    float _402 = isnan(0.0) ? _199 : (isnan(_199) ? 0.0 : max(_199, 0.0));
    uint _262 = uint(roundEven(NORMAL.w)) * 13u;
    uint _265 = (_262 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _271 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _369 : (isnan(_369) ? 1.0 : min(_369, 1.0)))) * cbInstanceData._m0[_265].x;
    float _272 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _380 : (isnan(_380) ? 1.0 : min(_380, 1.0)))) * cbInstanceData._m0[_265].y;
    float _273 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _391 : (isnan(_391) ? 1.0 : min(_391, 1.0)))) * cbInstanceData._m0[_265].z;
    float _413 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    float _424 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _435 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    float _446 = isnan(0.0) ? _242 : (isnan(_242) ? 0.0 : max(_242, 0.0));
    float _283 = cbInstanceData._m0[_262 + 6u].w * (isnan(1.0) ? _446 : (isnan(_446) ? 1.0 : min(_446, 1.0)));
    bool _308 = cbMtdParam._m0[1u].z != 0.0;
    float _309 = _308 ? _283 : 0.0;
    SV_Target.x = ((_231 * 0.5) * _241) + 0.500488758087158203125;
    SV_Target.y = ((_234 * 0.5) * _241) + 0.500488758087158203125;
    SV_Target.z = ((_237 * 0.5) * _241) + 0.500488758087158203125;
    SV_Target.w = _309;
    SV_Target_1.x = isnan(1.0) ? _402 : (isnan(_402) ? 1.0 : min(_402, 1.0));
    SV_Target_1.y = isnan(1.0) ? _358 : (isnan(_358) ? 1.0 : min(_358, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _308 ? _283 : TEXCOORD_1.w;
    SV_Target_2.x = isnan(1.0) ? _413 : (isnan(_413) ? 1.0 : min(_413, 1.0));
    SV_Target_2.y = isnan(1.0) ? _424 : (isnan(_424) ? 1.0 : min(_424, 1.0));
    SV_Target_2.z = isnan(1.0) ? _435 : (isnan(_435) ? 1.0 : min(_435, 1.0));
    SV_Target_2.w = _308 ? _283 : (float(floatBitsToUint(cbInstanceData._m0[_262 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _309;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _309;
}


