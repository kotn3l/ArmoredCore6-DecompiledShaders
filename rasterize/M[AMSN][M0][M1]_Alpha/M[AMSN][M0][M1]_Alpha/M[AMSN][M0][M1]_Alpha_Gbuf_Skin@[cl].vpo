#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_9 = 0.0;
    float _156 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _158 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _159 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _168 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _169 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _170 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _180 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _182 = texelFetch(g_InstanceIndexBuffer, int(_180));
    uint _183 = _182.x;
    precise float _184 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _189 = isnan(_184) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _184 : max(0.001000000047497451305389404296875, _184));
    precise float _191 = BLENDWEIGHT.x / _189;
    precise float _192 = BLENDWEIGHT.y / _189;
    precise float _193 = BLENDWEIGHT.z / _189;
    precise float _194 = BLENDWEIGHT.w / _189;
    uvec4 _201 = floatBitsToUint(cbInstanceData._m0[(_183 * 13u) + 4u]);
    uint _202 = _201.x;
    uint _204 = (_202 + uint(float(BLENDINDICES.x))) * 3u;
    uint _211 = _204 + 1u;
    uint _218 = _204 + 2u;
    precise float _225 = _191 * cbObjMatrix._m0[_204].x;
    precise float _226 = _191 * cbObjMatrix._m0[_211].x;
    precise float _227 = _191 * cbObjMatrix._m0[_218].x;
    precise float _228 = _191 * cbObjMatrix._m0[_204].y;
    precise float _229 = _191 * cbObjMatrix._m0[_211].y;
    precise float _230 = _191 * cbObjMatrix._m0[_218].y;
    precise float _231 = _191 * cbObjMatrix._m0[_204].z;
    precise float _232 = _191 * cbObjMatrix._m0[_211].z;
    precise float _233 = _191 * cbObjMatrix._m0[_218].z;
    precise float _234 = _191 * cbObjMatrix._m0[_204].w;
    precise float _235 = _191 * cbObjMatrix._m0[_211].w;
    precise float _236 = _191 * cbObjMatrix._m0[_218].w;
    uint _239 = (_202 + uint(float(BLENDINDICES.y))) * 3u;
    uint _246 = _239 + 1u;
    uint _253 = _239 + 2u;
    precise float _260 = _192 * cbObjMatrix._m0[_239].x;
    precise float _261 = _192 * cbObjMatrix._m0[_246].x;
    precise float _262 = _192 * cbObjMatrix._m0[_253].x;
    precise float _263 = _192 * cbObjMatrix._m0[_239].y;
    precise float _264 = _192 * cbObjMatrix._m0[_246].y;
    precise float _265 = _192 * cbObjMatrix._m0[_253].y;
    precise float _266 = _192 * cbObjMatrix._m0[_239].z;
    precise float _267 = _192 * cbObjMatrix._m0[_246].z;
    precise float _268 = _192 * cbObjMatrix._m0[_253].z;
    precise float _269 = _192 * cbObjMatrix._m0[_239].w;
    precise float _270 = _192 * cbObjMatrix._m0[_246].w;
    precise float _271 = _192 * cbObjMatrix._m0[_253].w;
    precise float _272 = _225 + _260;
    precise float _273 = _226 + _261;
    precise float _274 = _227 + _262;
    precise float _275 = _228 + _263;
    precise float _276 = _229 + _264;
    precise float _277 = _230 + _265;
    precise float _278 = _231 + _266;
    precise float _279 = _232 + _267;
    precise float _280 = _233 + _268;
    precise float _281 = _234 + _269;
    precise float _282 = _235 + _270;
    precise float _283 = _236 + _271;
    uint _286 = (_202 + uint(float(BLENDINDICES.z))) * 3u;
    uint _293 = _286 + 1u;
    uint _300 = _286 + 2u;
    precise float _307 = _193 * cbObjMatrix._m0[_286].x;
    precise float _308 = _193 * cbObjMatrix._m0[_293].x;
    precise float _309 = _193 * cbObjMatrix._m0[_300].x;
    precise float _310 = _193 * cbObjMatrix._m0[_286].y;
    precise float _311 = _193 * cbObjMatrix._m0[_293].y;
    precise float _312 = _193 * cbObjMatrix._m0[_300].y;
    precise float _313 = _193 * cbObjMatrix._m0[_286].z;
    precise float _314 = _193 * cbObjMatrix._m0[_293].z;
    precise float _315 = _193 * cbObjMatrix._m0[_300].z;
    precise float _316 = _193 * cbObjMatrix._m0[_286].w;
    precise float _317 = _193 * cbObjMatrix._m0[_293].w;
    precise float _318 = _193 * cbObjMatrix._m0[_300].w;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    uint _333 = (_202 + uint(float(BLENDINDICES.w))) * 3u;
    uint _340 = _333 + 1u;
    uint _347 = _333 + 2u;
    precise float _354 = _194 * cbObjMatrix._m0[_333].x;
    precise float _355 = _194 * cbObjMatrix._m0[_340].x;
    precise float _356 = _194 * cbObjMatrix._m0[_347].x;
    precise float _357 = _194 * cbObjMatrix._m0[_333].y;
    precise float _358 = _194 * cbObjMatrix._m0[_340].y;
    precise float _359 = _194 * cbObjMatrix._m0[_347].y;
    precise float _360 = _194 * cbObjMatrix._m0[_333].z;
    precise float _361 = _194 * cbObjMatrix._m0[_340].z;
    precise float _362 = _194 * cbObjMatrix._m0[_347].z;
    precise float _363 = _194 * cbObjMatrix._m0[_333].w;
    precise float _364 = _194 * cbObjMatrix._m0[_340].w;
    precise float _365 = _194 * cbObjMatrix._m0[_347].w;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = POSITION.x * _366;
    precise float _379 = POSITION.y * _369;
    precise float _380 = _379 + _378;
    precise float _381 = POSITION.z * _372;
    precise float _382 = _381 + _380;
    precise float _383 = 1.0 * _375;
    precise float _384 = _383 + _382;
    precise float _385 = POSITION.x * _367;
    precise float _386 = POSITION.y * _370;
    precise float _387 = _386 + _385;
    precise float _388 = POSITION.z * _373;
    precise float _389 = _388 + _387;
    precise float _390 = 1.0 * _376;
    precise float _391 = _390 + _389;
    precise float _392 = POSITION.x * _368;
    precise float _393 = POSITION.y * _371;
    precise float _394 = _393 + _392;
    precise float _395 = POSITION.z * _374;
    precise float _396 = _395 + _394;
    precise float _397 = 1.0 * _377;
    precise float _398 = _397 + _396;
    float _404 = cbSceneParam._m0[3u].x - _384;
    float _405 = cbSceneParam._m0[3u].y - _391;
    float _406 = cbSceneParam._m0[3u].z - _398;
    precise float _432 = _384 - cbSceneParam._m0[3u].x;
    precise float _433 = _391 - cbSceneParam._m0[3u].y;
    precise float _434 = _398 - cbSceneParam._m0[3u].z;
    precise float _462 = _432 * cbSceneParam._m0[24u].x;
    precise float _463 = _433 * cbSceneParam._m0[24u].y;
    precise float _464 = _463 + _462;
    precise float _465 = _434 * cbSceneParam._m0[24u].z;
    precise float _466 = _465 + _464;
    precise float _467 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _468 = _467 + _466;
    precise float _469 = _432 * cbSceneParam._m0[25u].x;
    precise float _470 = _433 * cbSceneParam._m0[25u].y;
    precise float _471 = _470 + _469;
    precise float _472 = _434 * cbSceneParam._m0[25u].z;
    precise float _473 = _472 + _471;
    precise float _474 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _475 = _474 + _473;
    precise float _476 = _432 * cbSceneParam._m0[26u].x;
    precise float _477 = _433 * cbSceneParam._m0[26u].y;
    precise float _478 = _477 + _476;
    precise float _479 = _434 * cbSceneParam._m0[26u].z;
    precise float _480 = _479 + _478;
    precise float _481 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _482 = _481 + _480;
    precise float _483 = _432 * cbSceneParam._m0[27u].x;
    precise float _484 = _433 * cbSceneParam._m0[27u].y;
    precise float _485 = _484 + _483;
    precise float _486 = _434 * cbSceneParam._m0[27u].z;
    precise float _487 = _486 + _485;
    precise float _488 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _489 = _488 + _487;
    gl_Position.x = _468;
    gl_Position.y = _475;
    gl_Position.z = _482;
    gl_Position.w = _489;
    NORMAL_1.x = fma(_159, _372, fma(_158, _369, _366 * _156));
    NORMAL_1.y = fma(_159, _373, fma(_158, _370, _367 * _156));
    NORMAL_1.z = fma(_159, _374, fma(_158, _371, _368 * _156));
    NORMAL_1.w = float(_183);
    TANGENT_1.x = fma(_170, _372, fma(_169, _369, _366 * _168));
    TANGENT_1.y = fma(_170, _373, fma(_169, _370, _367 * _168));
    TANGENT_1.z = fma(_170, _374, fma(_169, _371, _368 * _168));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    TEXCOORD_9 = sqrt(((_404 * _404) + (_405 * _405)) + (_406 * _406));
}


