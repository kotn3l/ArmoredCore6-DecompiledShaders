#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Alpha_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _119 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _120 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _121 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _127 = inversesqrt(dot(vec3(_119, _120, _121), vec3(_119, _120, _121)));
    float _134 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _135 = _134 * NORMAL.x;
    float _136 = _134 * NORMAL.y;
    float _137 = _134 * NORMAL.z;
    float _141 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _149;
    float _150;
    float _151;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _149 = (-0.0) - _135;
        _150 = (-0.0) - _136;
        _151 = (-0.0) - _137;
    }
    else
    {
        _149 = _135;
        _150 = _136;
        _151 = _137;
    }
    vec4 _171 = texture(sampler2D(M_AMSN_M0_M1_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _178 = _171.x * cbMtdParam._m0[9u].x;
    float _179 = _171.y * cbMtdParam._m0[9u].y;
    float _180 = _171.z * cbMtdParam._m0[9u].z;
    float _181 = _171.w * TEXCOORD_1.z;
    vec4 _193 = texture(sampler2D(M_AMSN_M0_M1_Alpha_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _197 = _193.z;
    float _201 = (_193.x * 2.0) + (-1.0);
    float _203 = (_193.y * 2.0) + (-1.0);
    float _204 = dot(vec2(_201, _203), vec2(_201, _203));
    float _317 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _210 = sqrt(1.0 - (isnan(1.0) ? _317 : (isnan(_317) ? 1.0 : min(_317, 1.0))));
    float _213 = fma(_210, _149, fma(_203, _141 * TANGENT.x, (_127 * _119) * _201));
    float _216 = fma(_210, _150, fma(_203, _141 * TANGENT.y, (_127 * _120) * _201));
    float _219 = fma(_210, _151, fma(_203, _141 * TANGENT.z, (_127 * _121) * _201));
    float _223 = inversesqrt(dot(vec3(_213, _216, _219), vec3(_213, _216, _219)));
    float _328 = isnan(0.0) ? _181 : (isnan(_181) ? 0.0 : max(_181, 0.0));
    float _224 = isnan(1.0) ? _328 : (isnan(_328) ? 1.0 : min(_328, 1.0));
    float _339 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    float _350 = isnan(0.0) ? _178 : (isnan(_178) ? 0.0 : max(_178, 0.0));
    float _361 = isnan(0.0) ? _179 : (isnan(_179) ? 0.0 : max(_179, 0.0));
    float _372 = isnan(0.0) ? _180 : (isnan(_180) ? 0.0 : max(_180, 0.0));
    uint _243 = uint(roundEven(NORMAL.w)) * 13u;
    uint _246 = (_243 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _252 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _350 : (isnan(_350) ? 1.0 : min(_350, 1.0)))) * cbInstanceData._m0[_246].x;
    float _253 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _361 : (isnan(_361) ? 1.0 : min(_361, 1.0)))) * cbInstanceData._m0[_246].y;
    float _254 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _372 : (isnan(_372) ? 1.0 : min(_372, 1.0)))) * cbInstanceData._m0[_246].z;
    float _383 = isnan(0.0) ? _252 : (isnan(_252) ? 0.0 : max(_252, 0.0));
    float _394 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
    float _405 = isnan(0.0) ? _254 : (isnan(_254) ? 0.0 : max(_254, 0.0));
    float _416 = isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0));
    float _264 = cbInstanceData._m0[_243 + 6u].w * (isnan(1.0) ? _416 : (isnan(_416) ? 1.0 : min(_416, 1.0)));
    bool _289 = cbMtdParam._m0[1u].z != 0.0;
    float _290 = _289 ? _264 : 0.0;
    SV_Target.x = ((_213 * 0.5) * _223) + 0.500488758087158203125;
    SV_Target.y = ((_216 * 0.5) * _223) + 0.500488758087158203125;
    SV_Target.z = ((_219 * 0.5) * _223) + 0.500488758087158203125;
    SV_Target.w = _290;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _339 : (isnan(_339) ? 1.0 : min(_339, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _289 ? _264 : TEXCOORD_1.w;
    SV_Target_2.x = isnan(1.0) ? _383 : (isnan(_383) ? 1.0 : min(_383, 1.0));
    SV_Target_2.y = isnan(1.0) ? _394 : (isnan(_394) ? 1.0 : min(_394, 1.0));
    SV_Target_2.z = isnan(1.0) ? _405 : (isnan(_405) ? 1.0 : min(_405, 1.0));
    SV_Target_2.w = _289 ? _264 : (float(floatBitsToUint(cbInstanceData._m0[_243 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _290;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _290;
}


