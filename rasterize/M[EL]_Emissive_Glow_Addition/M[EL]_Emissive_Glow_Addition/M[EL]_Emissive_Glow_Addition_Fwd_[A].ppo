#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_EL_Emissive_Glow_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_EL_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _617;
float _618;
float _619;
float _620;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _140 = texture(sampler2D(M_EL_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[11u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _172 = texture(sampler2D(M_EL_Emissive_Glow_Addition_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[11u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _199 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _240 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _250 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _240);
    float _251 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _240);
    float _252 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _240);
    vec4 _257 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _259 = _257.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _348 = sqrt(((_250 * _250) + (_251 * _251)) + (_252 * _252));
        float _355 = (cbMatDynParam._m0[5u].x * _348) + cbMatDynParam._m0[5u].y;
        float _629 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
        float _356 = isnan(1.0) ? _629 : (isnan(_629) ? 1.0 : min(_629, 1.0));
        float _360 = (cbMatDynParam._m0[5u].z * _348) + cbMatDynParam._m0[5u].w;
        float _640 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _640 : (isnan(_640) ? 1.0 : min(_640, 1.0))) - _356)) + _356) < ((_259 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _277 = uint(roundEven(NORMAL.w)) * 13u;
    uint _279 = _277 + 9u;
    uint _280 = _279 + uint(cbMatDynParam._m0[0u].w);
    float _286 = cbInstanceData._m0[_280].x * ((_172.x * cbMtdParam._m0[10u].x) + (_140.x * cbMtdParam._m0[9u].x));
    float _287 = cbInstanceData._m0[_280].y * ((_172.y * cbMtdParam._m0[10u].y) + (_140.y * cbMtdParam._m0[9u].y));
    float _288 = cbInstanceData._m0[_280].z * ((_172.z * cbMtdParam._m0[10u].z) + (_140.z * cbMtdParam._m0[9u].z));
    float _289 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
    float _290 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
    float _291 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _297 = cbMtdParam._m0[2u].x * _286;
    float _298 = cbMtdParam._m0[2u].y * _287;
    float _299 = cbMtdParam._m0[2u].z * _288;
    float _666 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _302 = isnan(1.0) ? _666 : (isnan(_666) ? 1.0 : min(_666, 1.0));
    uint _303 = _277 + 6u;
    float _312 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _313 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _328 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_312, _313, (log2((isnan(cbSceneParam._m0[77u].w) ? _199 : (isnan(_199) ? cbSceneParam._m0[77u].w : min(_199, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _331 = _328.x;
    float _332 = _328.y;
    float _333 = _328.z;
    float _334 = _328.w;
    float _416;
    float _418;
    float _420;
    float _422;
    if (_199 > cbSceneParam._m0[78u].w)
    {
        float _377 = isnan(_199) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _199 : min(cbSceneParam._m0[80u].w, _199));
        float _378 = _377 / _199;
        float _389 = _378 * _250;
        float _390 = _251 * _378;
        float _391 = (-0.0) - _390;
        float _393 = _378 * _252;
        float _395 = (cbSceneParam._m0[77u].w * _391) / _377;
        float _396 = _395 + cbSceneParam._m0[79u].w;
        float _397 = cbSceneParam._m0[79u].w - _390;
        float _403 = sqrt(((_389 * _389) + (_390 * _390)) + (_393 * _393));
        float _406 = (1.0 - (cbSceneParam._m0[77u].w / _377)) * _403;
        float _412 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _414 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _550;
        if (abs((_391 - _395) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _550 = ((((_396 > 0.0) ? exp2(_412 * _396) : (2.0 - exp2(_414 * _396))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _406;
        }
        else
        {
            float _502 = 1.0 / cbSceneParam._m0[80u].x;
            float _503 = isnan(_397) ? _396 : (isnan(_396) ? _397 : max(_396, _397));
            float _504 = isnan(_397) ? _396 : (isnan(_396) ? _397 : min(_396, _397));
            float _513 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : min(_503, 0.0));
            float _514 = isnan(0.0) ? _504 : (isnan(_504) ? 0.0 : min(_504, 0.0));
            _550 = ((abs(_403 / _391) * cbSceneParam._m0[80u].y) * ((((_513 - _514) * 2.0) - ((exp2(_412 * (isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0)))) - exp2(_412 * (isnan(0.0) ? _504 : (isnan(_504) ? 0.0 : max(_504, 0.0))))) * _502)) - ((exp2(_414 * _513) - exp2(_414 * _514)) * _502))) + (_406 * cbSceneParam._m0[80u].z);
        }
        vec4 _552 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_312, _313, 1.0), 0.0);
        float _561 = exp2((_550 * (-1.44269502162933349609375)) * (1.0 - _552.w));
        float _562 = log2(_561);
        float _578 = log2(_334);
        _416 = (exp2(_578 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_562 * cbSceneParam._m0[78u].x)) * _552.x) / cbSceneParam._m0[78u].x)) + _331;
        _418 = (exp2(_578 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_562 * cbSceneParam._m0[78u].y)) * _552.y) / cbSceneParam._m0[78u].y)) + _332;
        _420 = (exp2(_578 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_562 * cbSceneParam._m0[78u].z)) * _552.z) / cbSceneParam._m0[78u].z)) + _333;
        _422 = _561 * _334;
    }
    else
    {
        _416 = _331;
        _418 = _332;
        _420 = _333;
        _422 = _334;
    }
    bool _588;
    vec4 _432;
    vec4 _456;
    float _458;
    float _463;
    float _464;
    float _465;
    float _468;
    float _471;
    float _474;
    float _475;
    bool _486;
    for (;;)
    {
        _432 = cbMatDynParam._m0[0u];
        float _434 = roundEven(_432.y);
        bool _435 = _434 == 3.0;
        float _437 = log2(_422);
        float _441 = exp2(_437 * cbSceneParam._m0[78u].x);
        float _442 = exp2(_437 * cbSceneParam._m0[78u].y);
        float _443 = exp2(_437 * cbSceneParam._m0[78u].z);
        float _444 = _441 * _289;
        float _445 = _442 * _290;
        float _446 = _443 * _291;
        float _453 = _259 + (-0.5);
        _456 = cbMtdParam._m0[1u];
        _458 = _456.y * _453;
        float _462 = (_434 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _463 = _462 * (_435 ? _444 : (_444 + (cbSceneParam._m0[72u].w * _416)));
        _464 = _462 * (_435 ? _445 : (_445 + (cbSceneParam._m0[72u].w * _418)));
        _465 = _462 * (_435 ? _446 : (_446 + (cbSceneParam._m0[72u].w * _420)));
        _468 = ((_297 * _302) * _441) * _462;
        _471 = ((_298 * _302) * _442) * _462;
        _474 = ((_299 * _302) * _443) * _462;
        _475 = _453 * 0.999000012874603271484375;
        _486 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_486)
        {
            if ((cbInstanceData._m0[_277 + 7u].x + _475) < 0.5)
            {
                _588 = true;
                break;
            }
        }
        uint _539 = _279 + uint(_432.w);
        _588 = ((cbInstanceData._m0[_539].w < 1.0) && ((cbInstanceData._m0[_539].w + _475) < 0.5)) || (_458 < _456.x);
        break;
    }
    float _590;
    if (_588)
    {
        discard_state = true;
        _590 = 0.0;
    }
    else
    {
        _590 = cbInstanceData._m0[_303].w;
    }
    SV_Target.x = _463;
    SV_Target.y = _464;
    SV_Target.z = _465;
    SV_Target.w = _590;
    SV_Target_1.x = _468;
    SV_Target_1.y = _471;
    SV_Target_1.z = _474;
    SV_Target_1.w = cbInstanceData._m0[_303].w;
    discard_exit();
}


