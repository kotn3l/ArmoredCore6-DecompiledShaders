#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_EL_Emissive_Glow_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_EL_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _131 = texture(sampler2D(M_EL_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[11u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _163 = texture(sampler2D(M_EL_Emissive_Glow_Addition_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[11u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _190 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _207 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _222 = uint(roundEven(NORMAL.w)) * 13u;
    uint _225 = (_222 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _231 = cbInstanceData._m0[_225].x * ((_163.x * cbMtdParam._m0[10u].x) + (_131.x * cbMtdParam._m0[9u].x));
    float _232 = cbInstanceData._m0[_225].y * ((_163.y * cbMtdParam._m0[10u].y) + (_131.y * cbMtdParam._m0[9u].y));
    float _233 = cbInstanceData._m0[_225].z * ((_163.z * cbMtdParam._m0[10u].z) + (_131.z * cbMtdParam._m0[9u].z));
    float _525 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _247 = isnan(1.0) ? _525 : (isnan(_525) ? 1.0 : min(_525, 1.0));
    uint _248 = _222 + 6u;
    float _258 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _259 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _274 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_258, _259, (log2((isnan(cbSceneParam._m0[77u].w) ? _190 : (isnan(_190) ? cbSceneParam._m0[77u].w : min(_190, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _277 = _274.x;
    float _278 = _274.y;
    float _279 = _274.z;
    float _280 = _274.w;
    float _365;
    float _367;
    float _369;
    float _371;
    if (_190 > cbSceneParam._m0[78u].w)
    {
        float _326 = isnan(_190) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _190 : min(cbSceneParam._m0[80u].w, _190));
        float _327 = _326 / _190;
        float _338 = _327 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _207));
        float _339 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _207)) * _327;
        float _340 = (-0.0) - _339;
        float _342 = _327 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _207));
        float _344 = (cbSceneParam._m0[77u].w * _340) / _326;
        float _345 = _344 + cbSceneParam._m0[79u].w;
        float _346 = cbSceneParam._m0[79u].w - _339;
        float _352 = sqrt(((_338 * _338) + (_339 * _339)) + (_342 * _342));
        float _355 = (1.0 - (cbSceneParam._m0[77u].w / _326)) * _352;
        float _361 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _363 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _465;
        if (abs((_340 - _344) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _465 = ((((_345 > 0.0) ? exp2(_361 * _345) : (2.0 - exp2(_363 * _345))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _355;
        }
        else
        {
            float _438 = 1.0 / cbSceneParam._m0[80u].x;
            float _439 = isnan(_346) ? _345 : (isnan(_345) ? _346 : max(_345, _346));
            float _440 = isnan(_346) ? _345 : (isnan(_345) ? _346 : min(_345, _346));
            float _449 = isnan(0.0) ? _439 : (isnan(_439) ? 0.0 : min(_439, 0.0));
            float _450 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : min(_440, 0.0));
            _465 = ((abs(_352 / _340) * cbSceneParam._m0[80u].y) * ((((_449 - _450) * 2.0) - ((exp2(_361 * (isnan(0.0) ? _439 : (isnan(_439) ? 0.0 : max(_439, 0.0)))) - exp2(_361 * (isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0))))) * _438)) - ((exp2(_363 * _449) - exp2(_363 * _450)) * _438))) + (_355 * cbSceneParam._m0[80u].z);
        }
        vec4 _467 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_258, _259, 1.0), 0.0);
        float _476 = exp2((_465 * (-1.44269502162933349609375)) * (1.0 - _467.w));
        float _477 = log2(_476);
        float _493 = log2(_280);
        _365 = (exp2(_493 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_477 * cbSceneParam._m0[78u].x)) * _467.x) / cbSceneParam._m0[78u].x)) + _277;
        _367 = (exp2(_493 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_477 * cbSceneParam._m0[78u].y)) * _467.y) / cbSceneParam._m0[78u].y)) + _278;
        _369 = (exp2(_493 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_477 * cbSceneParam._m0[78u].z)) * _467.z) / cbSceneParam._m0[78u].z)) + _279;
        _371 = _476 * _280;
    }
    else
    {
        _365 = _277;
        _367 = _278;
        _369 = _279;
        _371 = _280;
    }
    float _383 = roundEven(cbMatDynParam._m0[0u].y);
    bool _384 = _383 == 3.0;
    float _386 = log2(_371);
    float _390 = exp2(_386 * cbSceneParam._m0[78u].x);
    float _391 = exp2(_386 * cbSceneParam._m0[78u].y);
    float _392 = exp2(_386 * cbSceneParam._m0[78u].z);
    float _393 = _390 * (isnan(0.0) ? _231 : (isnan(_231) ? 0.0 : max(_231, 0.0)));
    float _394 = _391 * (isnan(0.0) ? _232 : (isnan(_232) ? 0.0 : max(_232, 0.0)));
    float _395 = _392 * (isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0)));
    float _405 = (_383 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _405 * (_384 ? _393 : (_393 + (cbSceneParam._m0[72u].w * _365)));
    SV_Target.y = _405 * (_384 ? _394 : (_394 + (cbSceneParam._m0[72u].w * _367)));
    SV_Target.z = _405 * (_384 ? _395 : (_395 + (cbSceneParam._m0[72u].w * _369)));
    SV_Target.w = cbInstanceData._m0[_248].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _231) * _247) * _390) * _405;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _232) * _247) * _391) * _405;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _233) * _247) * _392) * _405;
    SV_Target_1.w = cbInstanceData._m0[_248].w;
}


