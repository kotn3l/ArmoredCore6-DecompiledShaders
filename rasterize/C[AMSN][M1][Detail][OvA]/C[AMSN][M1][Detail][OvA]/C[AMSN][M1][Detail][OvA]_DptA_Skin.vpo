#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_2;
layout(location = 4) out vec4 TEXCOORD_5;
layout(location = 5) out vec2 TEXCOORD_9;
layout(location = 5, component = 2) out float TEXCOORD_13;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_13 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _196 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _208 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _209 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _210 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _220 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _222 = texelFetch(g_InstanceIndexBuffer, int(_220));
    uint _223 = _222.x;
    precise float _224 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _229 = isnan(_224) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _224 : max(0.001000000047497451305389404296875, _224));
    precise float _231 = BLENDWEIGHT.x / _229;
    precise float _232 = BLENDWEIGHT.y / _229;
    precise float _233 = BLENDWEIGHT.z / _229;
    precise float _234 = BLENDWEIGHT.w / _229;
    uint _236 = _223 * 13u;
    uvec4 _241 = floatBitsToUint(cbInstanceData._m0[_236 + 4u]);
    uint _242 = _241.x;
    uint _244 = (_242 + uint(float(BLENDINDICES.x))) * 3u;
    uint _251 = _244 + 1u;
    uint _258 = _244 + 2u;
    precise float _265 = _231 * cbObjMatrix._m0[_244].x;
    precise float _266 = _231 * cbObjMatrix._m0[_251].x;
    precise float _267 = _231 * cbObjMatrix._m0[_258].x;
    precise float _268 = _231 * cbObjMatrix._m0[_244].y;
    precise float _269 = _231 * cbObjMatrix._m0[_251].y;
    precise float _270 = _231 * cbObjMatrix._m0[_258].y;
    precise float _271 = _231 * cbObjMatrix._m0[_244].z;
    precise float _272 = _231 * cbObjMatrix._m0[_251].z;
    precise float _273 = _231 * cbObjMatrix._m0[_258].z;
    precise float _274 = _231 * cbObjMatrix._m0[_244].w;
    precise float _275 = _231 * cbObjMatrix._m0[_251].w;
    precise float _276 = _231 * cbObjMatrix._m0[_258].w;
    uint _279 = (_242 + uint(float(BLENDINDICES.y))) * 3u;
    uint _286 = _279 + 1u;
    uint _293 = _279 + 2u;
    precise float _300 = _232 * cbObjMatrix._m0[_279].x;
    precise float _301 = _232 * cbObjMatrix._m0[_286].x;
    precise float _302 = _232 * cbObjMatrix._m0[_293].x;
    precise float _303 = _232 * cbObjMatrix._m0[_279].y;
    precise float _304 = _232 * cbObjMatrix._m0[_286].y;
    precise float _305 = _232 * cbObjMatrix._m0[_293].y;
    precise float _306 = _232 * cbObjMatrix._m0[_279].z;
    precise float _307 = _232 * cbObjMatrix._m0[_286].z;
    precise float _308 = _232 * cbObjMatrix._m0[_293].z;
    precise float _309 = _232 * cbObjMatrix._m0[_279].w;
    precise float _310 = _232 * cbObjMatrix._m0[_286].w;
    precise float _311 = _232 * cbObjMatrix._m0[_293].w;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    precise float _316 = _269 + _304;
    precise float _317 = _270 + _305;
    precise float _318 = _271 + _306;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    uint _326 = (_242 + uint(float(BLENDINDICES.z))) * 3u;
    uint _333 = _326 + 1u;
    uint _340 = _326 + 2u;
    precise float _347 = _233 * cbObjMatrix._m0[_326].x;
    precise float _348 = _233 * cbObjMatrix._m0[_333].x;
    precise float _349 = _233 * cbObjMatrix._m0[_340].x;
    precise float _350 = _233 * cbObjMatrix._m0[_326].y;
    precise float _351 = _233 * cbObjMatrix._m0[_333].y;
    precise float _352 = _233 * cbObjMatrix._m0[_340].y;
    precise float _353 = _233 * cbObjMatrix._m0[_326].z;
    precise float _354 = _233 * cbObjMatrix._m0[_333].z;
    precise float _355 = _233 * cbObjMatrix._m0[_340].z;
    precise float _356 = _233 * cbObjMatrix._m0[_326].w;
    precise float _357 = _233 * cbObjMatrix._m0[_333].w;
    precise float _358 = _233 * cbObjMatrix._m0[_340].w;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    uint _373 = (_242 + uint(float(BLENDINDICES.w))) * 3u;
    uint _380 = _373 + 1u;
    uint _387 = _373 + 2u;
    precise float _394 = _234 * cbObjMatrix._m0[_373].x;
    precise float _395 = _234 * cbObjMatrix._m0[_380].x;
    precise float _396 = _234 * cbObjMatrix._m0[_387].x;
    precise float _397 = _234 * cbObjMatrix._m0[_373].y;
    precise float _398 = _234 * cbObjMatrix._m0[_380].y;
    precise float _399 = _234 * cbObjMatrix._m0[_387].y;
    precise float _400 = _234 * cbObjMatrix._m0[_373].z;
    precise float _401 = _234 * cbObjMatrix._m0[_380].z;
    precise float _402 = _234 * cbObjMatrix._m0[_387].z;
    precise float _403 = _234 * cbObjMatrix._m0[_373].w;
    precise float _404 = _234 * cbObjMatrix._m0[_380].w;
    precise float _405 = _234 * cbObjMatrix._m0[_387].w;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = POSITION.x * _406;
    precise float _419 = POSITION.y * _409;
    precise float _420 = _419 + _418;
    precise float _421 = POSITION.z * _412;
    precise float _422 = _421 + _420;
    precise float _423 = 1.0 * _415;
    precise float _424 = _423 + _422;
    precise float _425 = POSITION.x * _407;
    precise float _426 = POSITION.y * _410;
    precise float _427 = _426 + _425;
    precise float _428 = POSITION.z * _413;
    precise float _429 = _428 + _427;
    precise float _430 = 1.0 * _416;
    precise float _431 = _430 + _429;
    precise float _432 = POSITION.x * _408;
    precise float _433 = POSITION.y * _411;
    precise float _434 = _433 + _432;
    precise float _435 = POSITION.z * _414;
    precise float _436 = _435 + _434;
    precise float _437 = 1.0 * _417;
    precise float _438 = _437 + _436;
    float _444 = cbSceneParam._m0[3u].x - _424;
    float _445 = cbSceneParam._m0[3u].y - _431;
    float _446 = cbSceneParam._m0[3u].z - _438;
    precise float _472 = _424 - cbSceneParam._m0[3u].x;
    precise float _473 = _431 - cbSceneParam._m0[3u].y;
    precise float _474 = _438 - cbSceneParam._m0[3u].z;
    precise float _502 = _472 * cbSceneParam._m0[24u].x;
    precise float _503 = _473 * cbSceneParam._m0[24u].y;
    precise float _504 = _503 + _502;
    precise float _505 = _474 * cbSceneParam._m0[24u].z;
    precise float _506 = _505 + _504;
    precise float _507 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _508 = _507 + _506;
    precise float _509 = _472 * cbSceneParam._m0[25u].x;
    precise float _510 = _473 * cbSceneParam._m0[25u].y;
    precise float _511 = _510 + _509;
    precise float _512 = _474 * cbSceneParam._m0[25u].z;
    precise float _513 = _512 + _511;
    precise float _514 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _515 = _514 + _513;
    precise float _516 = _472 * cbSceneParam._m0[26u].x;
    precise float _517 = _473 * cbSceneParam._m0[26u].y;
    precise float _518 = _517 + _516;
    precise float _519 = _474 * cbSceneParam._m0[26u].z;
    precise float _520 = _519 + _518;
    precise float _521 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _522 = _521 + _520;
    precise float _523 = _472 * cbSceneParam._m0[27u].x;
    precise float _524 = _473 * cbSceneParam._m0[27u].y;
    precise float _525 = _524 + _523;
    precise float _526 = _474 * cbSceneParam._m0[27u].z;
    precise float _527 = _526 + _525;
    precise float _528 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _529 = _528 + _527;
    gl_Position.x = _508;
    gl_Position.y = _515;
    gl_Position.z = _522;
    gl_Position.w = _529;
    NORMAL_1.x = fma(_199, _412, fma(_198, _409, _406 * _196));
    NORMAL_1.y = fma(_199, _413, fma(_198, _410, _407 * _196));
    NORMAL_1.z = fma(_199, _414, fma(_198, _411, _408 * _196));
    NORMAL_1.w = float(_223);
    TANGENT_1.x = fma(_210, _412, fma(_209, _409, _406 * _208));
    TANGENT_1.y = fma(_210, _413, fma(_209, _410, _407 * _208));
    TANGENT_1.z = fma(_210, _414, fma(_209, _411, _408 * _208));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_9.x = _522;
    TEXCOORD_9.y = _529;
    TEXCOORD_13 = sqrt(((_444 * _444) + (_445 * _445)) + (_446 * _446));
    gl_ClipDistance[0u] = dot(vec4(_508, _515, _522, _529), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_508, _515, _522, _529), vec4(cbInstanceData._m0[_236 + 3u]));
}


