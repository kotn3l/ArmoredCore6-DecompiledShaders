#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_A_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_A_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _648;
float _649;
float _650;
float _651;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _133 = texture(sampler2D(C_Enemy_A_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _139 = _133.x * cbMtdParam._m0[9u].x;
    float _140 = _133.y * cbMtdParam._m0[9u].y;
    float _141 = _133.z * cbMtdParam._m0[9u].z;
    vec4 _163 = texture(sampler2D(C_Enemy_A_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _180 = abs((fract(cbMtdParam._m0[12u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _660 = isnan(0.0) ? _180 : (isnan(_180) ? 0.0 : max(_180, 0.0));
    float _182 = isnan(1.0) ? _660 : (isnan(_660) ? 1.0 : min(_660, 1.0));
    float _190 = (((_182 * _182) * (3.0 - (_182 * 2.0))) * cbMtdParam._m0[11u].w) - cbMtdParam._m0[11u].z;
    float _209 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _250 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _260 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _250);
    float _261 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _250);
    float _262 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _250);
    vec4 _267 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _269 = _267.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _379 = sqrt(((_260 * _260) + (_261 * _261)) + (_262 * _262));
        float _386 = (cbMatDynParam._m0[5u].x * _379) + cbMatDynParam._m0[5u].y;
        float _686 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
        float _387 = isnan(1.0) ? _686 : (isnan(_686) ? 1.0 : min(_686, 1.0));
        float _391 = (cbMatDynParam._m0[5u].z * _379) + cbMatDynParam._m0[5u].w;
        float _697 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _697 : (isnan(_697) ? 1.0 : min(_697, 1.0))) - _387)) + _387) < ((_269 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _295 = uint(roundEven(NORMAL.w)) * 13u;
    uint _297 = _295 + 9u;
    uint _298 = _297 + uint(cbMatDynParam._m0[0u].w);
    float _306 = ((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _163.x) * _190;
    float _310 = ((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _163.y) * _190;
    float _314 = ((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _163.z) * _190;
    float _317 = cbInstanceData._m0[_298].x * (_306 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _139 : (isnan(_139) ? 0.0 : max(_139, 0.0)))));
    float _319 = cbInstanceData._m0[_298].y * (_310 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _140 : (isnan(_140) ? 0.0 : max(_140, 0.0)))));
    float _321 = cbInstanceData._m0[_298].z * (_314 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _141 : (isnan(_141) ? 0.0 : max(_141, 0.0)))));
    float _322 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _323 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
    float _324 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
    float _330 = cbMtdParam._m0[2u].x * (_306 * cbInstanceData._m0[_298].x);
    float _331 = cbMtdParam._m0[2u].y * (_310 * cbInstanceData._m0[_298].y);
    float _332 = cbMtdParam._m0[2u].z * (_314 * cbInstanceData._m0[_298].z);
    float _723 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _334 = isnan(1.0) ? _723 : (isnan(_723) ? 1.0 : min(_723, 1.0));
    uint _335 = _295 + 6u;
    float _344 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _345 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _360 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_344, _345, (log2((isnan(cbSceneParam._m0[77u].w) ? _209 : (isnan(_209) ? cbSceneParam._m0[77u].w : min(_209, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _362 = _360.x;
    float _363 = _360.y;
    float _364 = _360.z;
    float _365 = _360.w;
    float _447;
    float _449;
    float _451;
    float _453;
    if (_209 > cbSceneParam._m0[78u].w)
    {
        float _408 = isnan(_209) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _209 : min(cbSceneParam._m0[80u].w, _209));
        float _409 = _408 / _209;
        float _420 = _409 * _260;
        float _421 = _261 * _409;
        float _422 = (-0.0) - _421;
        float _424 = _409 * _262;
        float _426 = (cbSceneParam._m0[77u].w * _422) / _408;
        float _427 = _426 + cbSceneParam._m0[79u].w;
        float _428 = cbSceneParam._m0[79u].w - _421;
        float _434 = sqrt(((_420 * _420) + (_421 * _421)) + (_424 * _424));
        float _437 = (1.0 - (cbSceneParam._m0[77u].w / _408)) * _434;
        float _443 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _445 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _576;
        if (abs((_422 - _426) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _576 = ((((_427 > 0.0) ? exp2(_443 * _427) : (2.0 - exp2(_445 * _427))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _437;
        }
        else
        {
            float _531 = 1.0 / cbSceneParam._m0[80u].x;
            float _532 = isnan(_428) ? _427 : (isnan(_427) ? _428 : max(_427, _428));
            float _533 = isnan(_428) ? _427 : (isnan(_427) ? _428 : min(_427, _428));
            float _542 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : min(_532, 0.0));
            float _543 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : min(_533, 0.0));
            _576 = ((abs(_434 / _422) * cbSceneParam._m0[80u].y) * ((((_542 - _543) * 2.0) - ((exp2(_443 * (isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0)))) - exp2(_443 * (isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0))))) * _531)) - ((exp2(_445 * _542) - exp2(_445 * _543)) * _531))) + (_437 * cbSceneParam._m0[80u].z);
        }
        vec4 _578 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_344, _345, 1.0), 0.0);
        float _587 = exp2((_576 * (-1.44269502162933349609375)) * (1.0 - _578.w));
        float _588 = log2(_587);
        float _604 = log2(_365);
        _447 = (exp2(_604 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_588 * cbSceneParam._m0[78u].x)) * _578.x) / cbSceneParam._m0[78u].x)) + _362;
        _449 = (exp2(_604 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_588 * cbSceneParam._m0[78u].y)) * _578.y) / cbSceneParam._m0[78u].y)) + _363;
        _451 = (exp2(_604 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_588 * cbSceneParam._m0[78u].z)) * _578.z) / cbSceneParam._m0[78u].z)) + _364;
        _453 = _587 * _365;
    }
    else
    {
        _447 = _362;
        _449 = _363;
        _451 = _364;
        _453 = _365;
    }
    bool _614;
    vec4 _463;
    vec4 _486;
    float _488;
    float _492;
    float _493;
    float _494;
    float _497;
    float _500;
    float _503;
    float _504;
    bool _515;
    for (;;)
    {
        _463 = cbMatDynParam._m0[0u];
        float _465 = roundEven(_463.y);
        bool _466 = _465 == 3.0;
        float _467 = log2(_453);
        float _471 = exp2(_467 * cbSceneParam._m0[78u].x);
        float _472 = exp2(_467 * cbSceneParam._m0[78u].y);
        float _473 = exp2(_467 * cbSceneParam._m0[78u].z);
        float _474 = _471 * _322;
        float _475 = _472 * _323;
        float _476 = _473 * _324;
        float _483 = _269 + (-0.5);
        _486 = cbMtdParam._m0[1u];
        _488 = _486.y * _483;
        float _491 = (_465 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _492 = _491 * (_466 ? _474 : (_474 + (cbSceneParam._m0[72u].w * _447)));
        _493 = _491 * (_466 ? _475 : (_475 + (cbSceneParam._m0[72u].w * _449)));
        _494 = _491 * (_466 ? _476 : (_476 + (cbSceneParam._m0[72u].w * _451)));
        _497 = ((_330 * _334) * _471) * _491;
        _500 = ((_331 * _334) * _472) * _491;
        _503 = ((_332 * _334) * _473) * _491;
        _504 = _483 * 0.999000012874603271484375;
        _515 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_515)
        {
            if ((cbInstanceData._m0[_295 + 7u].x + _504) < 0.5)
            {
                _614 = true;
                break;
            }
        }
        uint _568 = _297 + uint(_463.w);
        if ((cbInstanceData._m0[_568].w < 1.0) && ((cbInstanceData._m0[_568].w + _504) < 0.5))
        {
            _614 = true;
            break;
        }
        if ((_488 + 1.0) < _486.x)
        {
            _614 = true;
            break;
        }
        _614 = false;
        break;
    }
    float _619;
    if (_614)
    {
        discard_state = true;
        _619 = 0.0;
    }
    else
    {
        _619 = cbInstanceData._m0[_335].w;
    }
    SV_Target.x = _492;
    SV_Target.y = _493;
    SV_Target.z = _494;
    SV_Target.w = _619;
    SV_Target_1.x = _497;
    SV_Target_1.y = _500;
    SV_Target_1.z = _503;
    SV_Target_1.w = cbInstanceData._m0[_335].w;
    discard_exit();
}


