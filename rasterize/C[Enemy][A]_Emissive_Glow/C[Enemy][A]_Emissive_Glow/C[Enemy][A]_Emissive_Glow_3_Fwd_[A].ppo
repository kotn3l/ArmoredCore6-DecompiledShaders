#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_A_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_A_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _659;
float _660;
float _661;
float _662;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _133 = texture(sampler2D(C_Enemy_A_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _139 = _133.x * cbMtdParam._m0[9u].x;
    float _140 = _133.y * cbMtdParam._m0[9u].y;
    float _141 = _133.z * cbMtdParam._m0[9u].z;
    vec4 _178 = texture(sampler2D(C_Enemy_A_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _192 = abs((fract(cbMtdParam._m0[12u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _671 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _194 = isnan(1.0) ? _671 : (isnan(_671) ? 1.0 : min(_671, 1.0));
    float _202 = (((_194 * _194) * (3.0 - (_194 * 2.0))) * cbMtdParam._m0[11u].w) - cbMtdParam._m0[11u].z;
    float _221 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _262 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _272 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _262);
    float _273 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _262);
    float _274 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _262);
    vec4 _279 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _281 = _279.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _390 = sqrt(((_272 * _272) + (_273 * _273)) + (_274 * _274));
        float _397 = (cbMatDynParam._m0[5u].x * _390) + cbMatDynParam._m0[5u].y;
        float _697 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
        float _398 = isnan(1.0) ? _697 : (isnan(_697) ? 1.0 : min(_697, 1.0));
        float _402 = (cbMatDynParam._m0[5u].z * _390) + cbMatDynParam._m0[5u].w;
        float _708 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _708 : (isnan(_708) ? 1.0 : min(_708, 1.0))) - _398)) + _398) < ((_281 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _307 = uint(roundEven(NORMAL.w)) * 13u;
    uint _308 = _307 + 9u;
    uint _309 = _308 + uint(cbMatDynParam._m0[0u].w);
    float _317 = ((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _178.x) * _202;
    float _321 = ((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _178.y) * _202;
    float _325 = ((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _178.z) * _202;
    float _328 = cbInstanceData._m0[_309].x * (_317 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _139 : (isnan(_139) ? 0.0 : max(_139, 0.0)))));
    float _330 = cbInstanceData._m0[_309].y * (_321 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _140 : (isnan(_140) ? 0.0 : max(_140, 0.0)))));
    float _332 = cbInstanceData._m0[_309].z * (_325 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _141 : (isnan(_141) ? 0.0 : max(_141, 0.0)))));
    float _333 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _334 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
    float _335 = isnan(0.0) ? _332 : (isnan(_332) ? 0.0 : max(_332, 0.0));
    float _341 = cbMtdParam._m0[2u].x * (_317 * cbInstanceData._m0[_309].x);
    float _342 = cbMtdParam._m0[2u].y * (_321 * cbInstanceData._m0[_309].y);
    float _343 = cbMtdParam._m0[2u].z * (_325 * cbInstanceData._m0[_309].z);
    float _734 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _345 = isnan(1.0) ? _734 : (isnan(_734) ? 1.0 : min(_734, 1.0));
    uint _346 = _307 + 6u;
    float _355 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _356 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _371 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_355, _356, (log2((isnan(cbSceneParam._m0[77u].w) ? _221 : (isnan(_221) ? cbSceneParam._m0[77u].w : min(_221, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _373 = _371.x;
    float _374 = _371.y;
    float _375 = _371.z;
    float _376 = _371.w;
    float _458;
    float _460;
    float _462;
    float _464;
    if (_221 > cbSceneParam._m0[78u].w)
    {
        float _419 = isnan(_221) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _221 : min(cbSceneParam._m0[80u].w, _221));
        float _420 = _419 / _221;
        float _431 = _420 * _272;
        float _432 = _273 * _420;
        float _433 = (-0.0) - _432;
        float _435 = _420 * _274;
        float _437 = (cbSceneParam._m0[77u].w * _433) / _419;
        float _438 = _437 + cbSceneParam._m0[79u].w;
        float _439 = cbSceneParam._m0[79u].w - _432;
        float _445 = sqrt(((_431 * _431) + (_432 * _432)) + (_435 * _435));
        float _448 = (1.0 - (cbSceneParam._m0[77u].w / _419)) * _445;
        float _454 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _456 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _587;
        if (abs((_433 - _437) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _587 = ((((_438 > 0.0) ? exp2(_454 * _438) : (2.0 - exp2(_456 * _438))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _448;
        }
        else
        {
            float _542 = 1.0 / cbSceneParam._m0[80u].x;
            float _543 = isnan(_439) ? _438 : (isnan(_438) ? _439 : max(_438, _439));
            float _544 = isnan(_439) ? _438 : (isnan(_438) ? _439 : min(_438, _439));
            float _553 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : min(_543, 0.0));
            float _554 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : min(_544, 0.0));
            _587 = ((abs(_445 / _433) * cbSceneParam._m0[80u].y) * ((((_553 - _554) * 2.0) - ((exp2(_454 * (isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0)))) - exp2(_454 * (isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0))))) * _542)) - ((exp2(_456 * _553) - exp2(_456 * _554)) * _542))) + (_448 * cbSceneParam._m0[80u].z);
        }
        vec4 _589 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_355, _356, 1.0), 0.0);
        float _598 = exp2((_587 * (-1.44269502162933349609375)) * (1.0 - _589.w));
        float _599 = log2(_598);
        float _615 = log2(_376);
        _458 = (exp2(_615 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_599 * cbSceneParam._m0[78u].x)) * _589.x) / cbSceneParam._m0[78u].x)) + _373;
        _460 = (exp2(_615 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_599 * cbSceneParam._m0[78u].y)) * _589.y) / cbSceneParam._m0[78u].y)) + _374;
        _462 = (exp2(_615 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_599 * cbSceneParam._m0[78u].z)) * _589.z) / cbSceneParam._m0[78u].z)) + _375;
        _464 = _598 * _376;
    }
    else
    {
        _458 = _373;
        _460 = _374;
        _462 = _375;
        _464 = _376;
    }
    bool _625;
    vec4 _474;
    vec4 _497;
    float _499;
    float _503;
    float _504;
    float _505;
    float _508;
    float _511;
    float _514;
    float _515;
    bool _526;
    for (;;)
    {
        _474 = cbMatDynParam._m0[0u];
        float _476 = roundEven(_474.y);
        bool _477 = _476 == 3.0;
        float _478 = log2(_464);
        float _482 = exp2(_478 * cbSceneParam._m0[78u].x);
        float _483 = exp2(_478 * cbSceneParam._m0[78u].y);
        float _484 = exp2(_478 * cbSceneParam._m0[78u].z);
        float _485 = _482 * _333;
        float _486 = _483 * _334;
        float _487 = _484 * _335;
        float _494 = _281 + (-0.5);
        _497 = cbMtdParam._m0[1u];
        _499 = _497.y * _494;
        float _502 = (_476 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _503 = _502 * (_477 ? _485 : (_485 + (cbSceneParam._m0[72u].w * _458)));
        _504 = _502 * (_477 ? _486 : (_486 + (cbSceneParam._m0[72u].w * _460)));
        _505 = _502 * (_477 ? _487 : (_487 + (cbSceneParam._m0[72u].w * _462)));
        _508 = ((_341 * _345) * _482) * _502;
        _511 = ((_342 * _345) * _483) * _502;
        _514 = ((_343 * _345) * _484) * _502;
        _515 = _494 * 0.999000012874603271484375;
        _526 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_526)
        {
            if ((cbInstanceData._m0[_307 + 7u].x + _515) < 0.5)
            {
                _625 = true;
                break;
            }
        }
        uint _579 = _308 + uint(_474.w);
        if ((cbInstanceData._m0[_579].w < 1.0) && ((cbInstanceData._m0[_579].w + _515) < 0.5))
        {
            _625 = true;
            break;
        }
        if ((_499 + 1.0) < _497.x)
        {
            _625 = true;
            break;
        }
        _625 = false;
        break;
    }
    float _630;
    if (_625)
    {
        discard_state = true;
        _630 = 0.0;
    }
    else
    {
        _630 = cbInstanceData._m0[_346].w;
    }
    SV_Target.x = _503;
    SV_Target.y = _504;
    SV_Target.z = _505;
    SV_Target.w = _630;
    SV_Target_1.x = _508;
    SV_Target_1.y = _511;
    SV_Target_1.z = _514;
    SV_Target_1.w = cbInstanceData._m0[_346].w;
    discard_exit();
}


