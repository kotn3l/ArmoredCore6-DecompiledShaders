#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_A_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_A_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _640;
float _641;
float _642;
float _643;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _133 = texture(sampler2D(C_Enemy_A_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _139 = _133.x * cbMtdParam._m0[9u].x;
    float _140 = _133.y * cbMtdParam._m0[9u].y;
    float _141 = _133.z * cbMtdParam._m0[9u].z;
    vec4 _178 = texture(sampler2D(C_Enemy_A_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _202 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _243 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _253 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _243);
    float _254 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _243);
    float _255 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _243);
    vec4 _260 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _262 = _260.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _369 = sqrt(((_253 * _253) + (_254 * _254)) + (_255 * _255));
        float _376 = (cbMatDynParam._m0[5u].x * _369) + cbMatDynParam._m0[5u].y;
        float _667 = isnan(0.0) ? _376 : (isnan(_376) ? 0.0 : max(_376, 0.0));
        float _377 = isnan(1.0) ? _667 : (isnan(_667) ? 1.0 : min(_667, 1.0));
        float _381 = (cbMatDynParam._m0[5u].z * _369) + cbMatDynParam._m0[5u].w;
        float _678 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _678 : (isnan(_678) ? 1.0 : min(_678, 1.0))) - _377)) + _377) < ((_262 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _288 = uint(roundEven(NORMAL.w)) * 13u;
    uint _289 = _288 + 9u;
    uint _290 = _289 + uint(cbMatDynParam._m0[0u].w);
    float _297 = (cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _178.x;
    float _300 = (cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _178.y;
    float _303 = (cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _178.z;
    float _306 = cbInstanceData._m0[_290].x * (_297 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _139 : (isnan(_139) ? 0.0 : max(_139, 0.0)))));
    float _308 = cbInstanceData._m0[_290].y * (_300 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _140 : (isnan(_140) ? 0.0 : max(_140, 0.0)))));
    float _310 = cbInstanceData._m0[_290].z * (_303 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _141 : (isnan(_141) ? 0.0 : max(_141, 0.0)))));
    float _311 = isnan(0.0) ? _306 : (isnan(_306) ? 0.0 : max(_306, 0.0));
    float _312 = isnan(0.0) ? _308 : (isnan(_308) ? 0.0 : max(_308, 0.0));
    float _313 = isnan(0.0) ? _310 : (isnan(_310) ? 0.0 : max(_310, 0.0));
    float _319 = cbMtdParam._m0[2u].x * (_297 * cbInstanceData._m0[_290].x);
    float _320 = cbMtdParam._m0[2u].y * (_300 * cbInstanceData._m0[_290].y);
    float _321 = cbMtdParam._m0[2u].z * (_303 * cbInstanceData._m0[_290].z);
    float _704 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _324 = isnan(1.0) ? _704 : (isnan(_704) ? 1.0 : min(_704, 1.0));
    uint _325 = _288 + 6u;
    float _334 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _335 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _350 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_334, _335, (log2((isnan(cbSceneParam._m0[77u].w) ? _202 : (isnan(_202) ? cbSceneParam._m0[77u].w : min(_202, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _352 = _350.x;
    float _353 = _350.y;
    float _354 = _350.z;
    float _355 = _350.w;
    float _437;
    float _439;
    float _441;
    float _443;
    if (_202 > cbSceneParam._m0[78u].w)
    {
        float _398 = isnan(_202) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _202 : min(cbSceneParam._m0[80u].w, _202));
        float _399 = _398 / _202;
        float _410 = _399 * _253;
        float _411 = _254 * _399;
        float _412 = (-0.0) - _411;
        float _414 = _399 * _255;
        float _416 = (cbSceneParam._m0[77u].w * _412) / _398;
        float _417 = _416 + cbSceneParam._m0[79u].w;
        float _418 = cbSceneParam._m0[79u].w - _411;
        float _424 = sqrt(((_410 * _410) + (_411 * _411)) + (_414 * _414));
        float _427 = (1.0 - (cbSceneParam._m0[77u].w / _398)) * _424;
        float _433 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _435 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _568;
        if (abs((_412 - _416) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _568 = ((((_417 > 0.0) ? exp2(_433 * _417) : (2.0 - exp2(_435 * _417))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _427;
        }
        else
        {
            float _523 = 1.0 / cbSceneParam._m0[80u].x;
            float _524 = isnan(_418) ? _417 : (isnan(_417) ? _418 : max(_417, _418));
            float _525 = isnan(_418) ? _417 : (isnan(_417) ? _418 : min(_417, _418));
            float _534 = isnan(0.0) ? _524 : (isnan(_524) ? 0.0 : min(_524, 0.0));
            float _535 = isnan(0.0) ? _525 : (isnan(_525) ? 0.0 : min(_525, 0.0));
            _568 = ((abs(_424 / _412) * cbSceneParam._m0[80u].y) * ((((_534 - _535) * 2.0) - ((exp2(_433 * (isnan(0.0) ? _524 : (isnan(_524) ? 0.0 : max(_524, 0.0)))) - exp2(_433 * (isnan(0.0) ? _525 : (isnan(_525) ? 0.0 : max(_525, 0.0))))) * _523)) - ((exp2(_435 * _534) - exp2(_435 * _535)) * _523))) + (_427 * cbSceneParam._m0[80u].z);
        }
        vec4 _570 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_334, _335, 1.0), 0.0);
        float _579 = exp2((_568 * (-1.44269502162933349609375)) * (1.0 - _570.w));
        float _580 = log2(_579);
        float _596 = log2(_355);
        _437 = (exp2(_596 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_580 * cbSceneParam._m0[78u].x)) * _570.x) / cbSceneParam._m0[78u].x)) + _352;
        _439 = (exp2(_596 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_580 * cbSceneParam._m0[78u].y)) * _570.y) / cbSceneParam._m0[78u].y)) + _353;
        _441 = (exp2(_596 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_580 * cbSceneParam._m0[78u].z)) * _570.z) / cbSceneParam._m0[78u].z)) + _354;
        _443 = _579 * _355;
    }
    else
    {
        _437 = _352;
        _439 = _353;
        _441 = _354;
        _443 = _355;
    }
    bool _606;
    vec4 _453;
    vec4 _477;
    float _479;
    float _484;
    float _485;
    float _486;
    float _489;
    float _492;
    float _495;
    float _496;
    bool _507;
    for (;;)
    {
        _453 = cbMatDynParam._m0[0u];
        float _455 = roundEven(_453.y);
        bool _456 = _455 == 3.0;
        float _458 = log2(_443);
        float _462 = exp2(_458 * cbSceneParam._m0[78u].x);
        float _463 = exp2(_458 * cbSceneParam._m0[78u].y);
        float _464 = exp2(_458 * cbSceneParam._m0[78u].z);
        float _465 = _462 * _311;
        float _466 = _463 * _312;
        float _467 = _464 * _313;
        float _474 = _262 + (-0.5);
        _477 = cbMtdParam._m0[1u];
        _479 = _477.y * _474;
        float _483 = (_455 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _484 = _483 * (_456 ? _465 : (_465 + (cbSceneParam._m0[72u].w * _437)));
        _485 = _483 * (_456 ? _466 : (_466 + (cbSceneParam._m0[72u].w * _439)));
        _486 = _483 * (_456 ? _467 : (_467 + (cbSceneParam._m0[72u].w * _441)));
        _489 = ((_319 * _324) * _462) * _483;
        _492 = ((_320 * _324) * _463) * _483;
        _495 = ((_321 * _324) * _464) * _483;
        _496 = _474 * 0.999000012874603271484375;
        _507 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_507)
        {
            if ((cbInstanceData._m0[_288 + 7u].x + _496) < 0.5)
            {
                _606 = true;
                break;
            }
        }
        uint _560 = _289 + uint(_453.w);
        if ((cbInstanceData._m0[_560].w < 1.0) && ((cbInstanceData._m0[_560].w + _496) < 0.5))
        {
            _606 = true;
            break;
        }
        if ((_479 + 1.0) < _477.x)
        {
            _606 = true;
            break;
        }
        _606 = false;
        break;
    }
    float _611;
    if (_606)
    {
        discard_state = true;
        _611 = 0.0;
    }
    else
    {
        _611 = cbInstanceData._m0[_325].w;
    }
    SV_Target.x = _484;
    SV_Target.y = _485;
    SV_Target.z = _486;
    SV_Target.w = _611;
    SV_Target_1.x = _489;
    SV_Target_1.y = _492;
    SV_Target_1.z = _495;
    SV_Target_1.w = cbInstanceData._m0[_325].w;
    discard_exit();
}


