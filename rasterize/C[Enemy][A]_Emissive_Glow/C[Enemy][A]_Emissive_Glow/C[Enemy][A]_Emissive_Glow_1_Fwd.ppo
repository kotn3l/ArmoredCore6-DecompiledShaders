#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_A_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_A_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _124 = texture(sampler2D(C_Enemy_A_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _130 = _124.x * cbMtdParam._m0[9u].x;
    float _131 = _124.y * cbMtdParam._m0[9u].y;
    float _132 = _124.z * cbMtdParam._m0[9u].z;
    vec4 _154 = texture(sampler2D(C_Enemy_A_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _171 = abs((fract(cbMtdParam._m0[12u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _539 = isnan(0.0) ? _171 : (isnan(_171) ? 0.0 : max(_171, 0.0));
    float _173 = isnan(1.0) ? _539 : (isnan(_539) ? 1.0 : min(_539, 1.0));
    float _181 = (((_173 * _173) * (3.0 - (_173 * 2.0))) * cbMtdParam._m0[11u].w) - cbMtdParam._m0[11u].z;
    float _200 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _217 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _240 = uint(roundEven(NORMAL.w)) * 13u;
    uint _243 = (_240 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _251 = ((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _154.x) * _181;
    float _255 = ((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _154.y) * _181;
    float _259 = ((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _154.z) * _181;
    float _262 = cbInstanceData._m0[_243].x * (_251 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _130 : (isnan(_130) ? 0.0 : max(_130, 0.0)))));
    float _264 = cbInstanceData._m0[_243].y * (_255 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _131 : (isnan(_131) ? 0.0 : max(_131, 0.0)))));
    float _266 = cbInstanceData._m0[_243].z * (_259 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _132 : (isnan(_132) ? 0.0 : max(_132, 0.0)))));
    float _580 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _279 = isnan(1.0) ? _580 : (isnan(_580) ? 1.0 : min(_580, 1.0));
    uint _280 = _240 + 6u;
    float _290 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _291 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _306 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_290, _291, (log2((isnan(cbSceneParam._m0[77u].w) ? _200 : (isnan(_200) ? cbSceneParam._m0[77u].w : min(_200, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _308 = _306.x;
    float _309 = _306.y;
    float _310 = _306.z;
    float _311 = _306.w;
    float _396;
    float _398;
    float _400;
    float _402;
    if (_200 > cbSceneParam._m0[78u].w)
    {
        float _357 = isnan(_200) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _200 : min(cbSceneParam._m0[80u].w, _200));
        float _358 = _357 / _200;
        float _369 = _358 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _217));
        float _370 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _217)) * _358;
        float _371 = (-0.0) - _370;
        float _373 = _358 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _217));
        float _375 = (cbSceneParam._m0[77u].w * _371) / _357;
        float _376 = _375 + cbSceneParam._m0[79u].w;
        float _377 = cbSceneParam._m0[79u].w - _370;
        float _383 = sqrt(((_369 * _369) + (_370 * _370)) + (_373 * _373));
        float _386 = (1.0 - (cbSceneParam._m0[77u].w / _357)) * _383;
        float _392 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _394 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _494;
        if (abs((_371 - _375) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _494 = ((((_376 > 0.0) ? exp2(_392 * _376) : (2.0 - exp2(_394 * _376))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _386;
        }
        else
        {
            float _467 = 1.0 / cbSceneParam._m0[80u].x;
            float _468 = isnan(_377) ? _376 : (isnan(_376) ? _377 : max(_376, _377));
            float _469 = isnan(_377) ? _376 : (isnan(_376) ? _377 : min(_376, _377));
            float _478 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : min(_468, 0.0));
            float _479 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : min(_469, 0.0));
            _494 = ((abs(_383 / _371) * cbSceneParam._m0[80u].y) * ((((_478 - _479) * 2.0) - ((exp2(_392 * (isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0)))) - exp2(_392 * (isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0))))) * _467)) - ((exp2(_394 * _478) - exp2(_394 * _479)) * _467))) + (_386 * cbSceneParam._m0[80u].z);
        }
        vec4 _496 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_290, _291, 1.0), 0.0);
        float _505 = exp2((_494 * (-1.44269502162933349609375)) * (1.0 - _496.w));
        float _506 = log2(_505);
        float _522 = log2(_311);
        _396 = (exp2(_522 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_506 * cbSceneParam._m0[78u].x)) * _496.x) / cbSceneParam._m0[78u].x)) + _308;
        _398 = (exp2(_522 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_506 * cbSceneParam._m0[78u].y)) * _496.y) / cbSceneParam._m0[78u].y)) + _309;
        _400 = (exp2(_522 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_506 * cbSceneParam._m0[78u].z)) * _496.z) / cbSceneParam._m0[78u].z)) + _310;
        _402 = _505 * _311;
    }
    else
    {
        _396 = _308;
        _398 = _309;
        _400 = _310;
        _402 = _311;
    }
    float _414 = roundEven(cbMatDynParam._m0[0u].y);
    bool _415 = _414 == 3.0;
    float _416 = log2(_402);
    float _420 = exp2(_416 * cbSceneParam._m0[78u].x);
    float _421 = exp2(_416 * cbSceneParam._m0[78u].y);
    float _422 = exp2(_416 * cbSceneParam._m0[78u].z);
    float _423 = _420 * (isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0)));
    float _424 = _421 * (isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0)));
    float _425 = _422 * (isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0)));
    float _434 = (_414 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _434 * (_415 ? _423 : (_423 + (cbSceneParam._m0[72u].w * _396)));
    SV_Target.y = _434 * (_415 ? _424 : (_424 + (cbSceneParam._m0[72u].w * _398)));
    SV_Target.z = _434 * (_415 ? _425 : (_425 + (cbSceneParam._m0[72u].w * _400)));
    SV_Target.w = cbInstanceData._m0[_280].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * (_251 * cbInstanceData._m0[_243].x)) * _279) * _420) * _434;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * (_255 * cbInstanceData._m0[_243].y)) * _279) * _421) * _434;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * (_259 * cbInstanceData._m0[_243].z)) * _279) * _422) * _434;
    SV_Target_1.w = cbInstanceData._m0[_280].w;
}


