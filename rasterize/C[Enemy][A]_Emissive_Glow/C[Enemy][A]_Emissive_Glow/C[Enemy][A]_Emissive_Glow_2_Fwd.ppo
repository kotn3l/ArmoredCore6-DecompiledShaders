#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_A_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_A_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _124 = texture(sampler2D(C_Enemy_A_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _130 = _124.x * cbMtdParam._m0[9u].x;
    float _131 = _124.y * cbMtdParam._m0[9u].y;
    float _132 = _124.z * cbMtdParam._m0[9u].z;
    vec4 _169 = texture(sampler2D(C_Enemy_A_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _193 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _210 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _233 = uint(roundEven(NORMAL.w)) * 13u;
    uint _235 = (_233 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _242 = (cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _169.x;
    float _245 = (cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _169.y;
    float _248 = (cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _169.z;
    float _251 = cbInstanceData._m0[_235].x * (_242 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _130 : (isnan(_130) ? 0.0 : max(_130, 0.0)))));
    float _253 = cbInstanceData._m0[_235].y * (_245 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _131 : (isnan(_131) ? 0.0 : max(_131, 0.0)))));
    float _255 = cbInstanceData._m0[_235].z * (_248 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _132 : (isnan(_132) ? 0.0 : max(_132, 0.0)))));
    float _561 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _269 = isnan(1.0) ? _561 : (isnan(_561) ? 1.0 : min(_561, 1.0));
    uint _270 = _233 + 6u;
    float _280 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _281 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _296 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_280, _281, (log2((isnan(cbSceneParam._m0[77u].w) ? _193 : (isnan(_193) ? cbSceneParam._m0[77u].w : min(_193, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _298 = _296.x;
    float _299 = _296.y;
    float _300 = _296.z;
    float _301 = _296.w;
    float _386;
    float _388;
    float _390;
    float _392;
    if (_193 > cbSceneParam._m0[78u].w)
    {
        float _347 = isnan(_193) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _193 : min(cbSceneParam._m0[80u].w, _193));
        float _348 = _347 / _193;
        float _359 = _348 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _210));
        float _360 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _210)) * _348;
        float _361 = (-0.0) - _360;
        float _363 = _348 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _210));
        float _365 = (cbSceneParam._m0[77u].w * _361) / _347;
        float _366 = _365 + cbSceneParam._m0[79u].w;
        float _367 = cbSceneParam._m0[79u].w - _360;
        float _373 = sqrt(((_359 * _359) + (_360 * _360)) + (_363 * _363));
        float _376 = (1.0 - (cbSceneParam._m0[77u].w / _347)) * _373;
        float _382 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _384 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _486;
        if (abs((_361 - _365) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _486 = ((((_366 > 0.0) ? exp2(_382 * _366) : (2.0 - exp2(_384 * _366))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _376;
        }
        else
        {
            float _459 = 1.0 / cbSceneParam._m0[80u].x;
            float _460 = isnan(_367) ? _366 : (isnan(_366) ? _367 : max(_366, _367));
            float _461 = isnan(_367) ? _366 : (isnan(_366) ? _367 : min(_366, _367));
            float _470 = isnan(0.0) ? _460 : (isnan(_460) ? 0.0 : min(_460, 0.0));
            float _471 = isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : min(_461, 0.0));
            _486 = ((abs(_373 / _361) * cbSceneParam._m0[80u].y) * ((((_470 - _471) * 2.0) - ((exp2(_382 * (isnan(0.0) ? _460 : (isnan(_460) ? 0.0 : max(_460, 0.0)))) - exp2(_382 * (isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : max(_461, 0.0))))) * _459)) - ((exp2(_384 * _470) - exp2(_384 * _471)) * _459))) + (_376 * cbSceneParam._m0[80u].z);
        }
        vec4 _488 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_280, _281, 1.0), 0.0);
        float _497 = exp2((_486 * (-1.44269502162933349609375)) * (1.0 - _488.w));
        float _498 = log2(_497);
        float _514 = log2(_301);
        _386 = (exp2(_514 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_498 * cbSceneParam._m0[78u].x)) * _488.x) / cbSceneParam._m0[78u].x)) + _298;
        _388 = (exp2(_514 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_498 * cbSceneParam._m0[78u].y)) * _488.y) / cbSceneParam._m0[78u].y)) + _299;
        _390 = (exp2(_514 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_498 * cbSceneParam._m0[78u].z)) * _488.z) / cbSceneParam._m0[78u].z)) + _300;
        _392 = _497 * _301;
    }
    else
    {
        _386 = _298;
        _388 = _299;
        _390 = _300;
        _392 = _301;
    }
    float _404 = roundEven(cbMatDynParam._m0[0u].y);
    bool _405 = _404 == 3.0;
    float _407 = log2(_392);
    float _411 = exp2(_407 * cbSceneParam._m0[78u].x);
    float _412 = exp2(_407 * cbSceneParam._m0[78u].y);
    float _413 = exp2(_407 * cbSceneParam._m0[78u].z);
    float _414 = _411 * (isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0)));
    float _415 = _412 * (isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0)));
    float _416 = _413 * (isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0)));
    float _426 = (_404 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _426 * (_405 ? _414 : (_414 + (cbSceneParam._m0[72u].w * _386)));
    SV_Target.y = _426 * (_405 ? _415 : (_415 + (cbSceneParam._m0[72u].w * _388)));
    SV_Target.z = _426 * (_405 ? _416 : (_416 + (cbSceneParam._m0[72u].w * _390)));
    SV_Target.w = cbInstanceData._m0[_270].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * (_242 * cbInstanceData._m0[_235].x)) * _269) * _411) * _426;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * (_245 * cbInstanceData._m0[_235].y)) * _269) * _412) * _426;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * (_248 * cbInstanceData._m0[_235].z)) * _269) * _413) * _426;
    SV_Target_1.w = cbInstanceData._m0[_270].w;
}


