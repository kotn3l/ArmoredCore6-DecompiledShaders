#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_10;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_8;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1263;
float _3911;
float _3912;
float _3913;
float _3914;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _211 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _212 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _213 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _219 = inversesqrt(dot(vec3(_211, _212, _213), vec3(_211, _212, _213)));
    float _226 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _227 = _226 * NORMAL.x;
    float _228 = _226 * NORMAL.y;
    float _229 = _226 * NORMAL.z;
    float _233 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _241;
    float _242;
    float _243;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _241 = (-0.0) - _227;
        _242 = (-0.0) - _228;
        _243 = (-0.0) - _229;
    }
    else
    {
        _241 = _227;
        _242 = _228;
        _243 = _229;
    }
    vec4 _267 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _296 = cbMtdParam._m0[14u].w * texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_7, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x;
    float _304 = ((cbMtdParam._m0[14u].x * (-1.39999997615814208984375)) * (((1.0 - _267.x) * 2.0) - _296)) + 1.0;
    float _3923 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
    float _305 = isnan(1.0) ? _3923 : (isnan(_3923) ? 1.0 : min(_3923, 1.0));
    vec4 _317 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    vec4 _334 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w));
    float _336 = _334.x;
    float _337 = _334.y;
    float _338 = _334.z;
    float _345 = ((_317.x - _336) * _305) + _336;
    float _346 = ((_317.y - _337) * _305) + _337;
    float _347 = ((_317.z - _338) * _305) + _338;
    float _353 = (((((1.0 - _267.y) * 2.0) - _296) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].y) + 1.0;
    float _3934 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _354 = isnan(1.0) ? _3934 : (isnan(_3934) ? 1.0 : min(_3934, 1.0));
    vec4 _366 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.z) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.w) + cbTextureTilingScale._m0[1u].w));
    float _377 = ((_366.x - _345) * _354) + _345;
    float _378 = ((_366.y - _346) * _354) + _346;
    float _379 = ((_366.z - _347) * _354) + _347;
    float _385 = (((((1.0 - _267.z) * 2.0) - _296) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].x) + 1.0;
    float _3945 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
    float _386 = isnan(1.0) ? _3945 : (isnan(_3945) ? 1.0 : min(_3945, 1.0));
    vec4 _399 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.z) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.w) + cbTextureTilingScale._m0[12u].w));
    float _412 = ((_399.z - _379) * _386) + _379;
    float _415 = ((((_399.x - _377) * _386) + _377) * 2.0) + (-1.0);
    float _417 = ((((_399.y - _378) * _386) + _378) * 2.0) + (-1.0);
    float _418 = dot(vec2(_415, _417), vec2(_415, _417));
    float _3956 = isnan(0.0) ? _418 : (isnan(_418) ? 0.0 : max(_418, 0.0));
    float _423 = sqrt(1.0 - (isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0))));
    float _424 = fma(_423, _241, 0.0);
    float _425 = fma(_423, _242, 0.0);
    float _426 = fma(_423, _243, 0.0);
    float _430 = inversesqrt(dot(vec3(_424, _425, _426), vec3(_424, _425, _426)));
    float _438 = cbMtdParam._m0[14u].y + dot(vec4(_430 * _424, _430 * _425, _430 * _426, 0.0), vec4(cbMtdParam._m0[15u].zw, cbMtdParam._m0[16u].x, 0.0));
    float _3967 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _439 = isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0));
    vec4 _457 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w));
    float _462 = _457.x * cbMtdParam._m0[10u].x;
    float _463 = _457.y * cbMtdParam._m0[10u].y;
    float _464 = _457.z * cbMtdParam._m0[10u].z;
    vec4 _482 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    float _496 = (((_482.x * cbMtdParam._m0[11u].x) - _462) * _305) + _462;
    float _497 = (((_482.y * cbMtdParam._m0[11u].y) - _463) * _305) + _463;
    float _498 = (((_482.z * cbMtdParam._m0[11u].z) - _464) * _305) + _464;
    vec4 _515 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _529 = (((_515.x * cbMtdParam._m0[12u].x) - _496) * _354) + _496;
    float _530 = (((_515.y * cbMtdParam._m0[12u].y) - _497) * _354) + _497;
    float _531 = (((_515.z * cbMtdParam._m0[12u].z) - _498) * _354) + _498;
    vec4 _549 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    vec4 _583 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _591 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * ((((_549.x * cbMtdParam._m0[13u].x) - _529) * _386) + _529)) * _583.x;
    float _594 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * ((((_549.y * cbMtdParam._m0[13u].y) - _530) * _386) + _530)) * _583.y;
    float _597 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * ((((_549.z * cbMtdParam._m0[13u].z) - _531) * _386) + _531)) * _583.z;
    vec4 _609 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _620 = ((_609.x - _591) * _439) + _591;
    float _621 = ((_609.y - _594) * _439) + _594;
    float _622 = ((_609.z - _597) * _439) + _597;
    vec4 _635 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _642 = (_635.x * 2.0) + (-1.0);
    float _643 = (_635.y * 2.0) + (-1.0);
    float _644 = dot(vec2(_642, _643), vec2(_642, _643));
    float _3978 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    float _652 = ((_635.z - _412) * _439) + _412;
    float _661 = ((sqrt(1.0 - (isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0)))) - _423) * _439) + _423;
    vec4 _675 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_AN_Snow2_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _685 = (((_642 - _415) * _439) + _415) + (((_675.x * 2.0) + (-1.0)) * cbMtdParam._m0[14u].z);
    float _686 = (((_643 - _417) * _439) + _417) + (((_675.y * 2.0) + (-1.0)) * cbMtdParam._m0[14u].z);
    float _689 = fma(_661, _241, fma(_686, _233 * TANGENT.x, (_219 * _211) * _685));
    float _692 = fma(_661, _242, fma(_686, _233 * TANGENT.y, (_219 * _212) * _685));
    float _695 = fma(_661, _243, fma(_686, _233 * TANGENT.z, (_219 * _213) * _685));
    float _699 = inversesqrt(dot(vec3(_689, _692, _695), vec3(_689, _692, _695)));
    float _700 = _699 * _689;
    float _701 = _699 * _692;
    float _702 = _699 * _695;
    float _3989 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
    float _703 = isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0));
    float _4000 = isnan(0.0) ? _620 : (isnan(_620) ? 0.0 : max(_620, 0.0));
    float _4011 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
    float _4022 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _722 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _762 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _772 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _762);
    float _773 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _762);
    float _774 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _762);
    float _778 = inversesqrt(dot(vec3(_772, _773, _774), vec3(_772, _773, _774)));
    float _779 = _772 * _778;
    float _780 = _773 * _778;
    float _781 = _774 * _778;
    vec4 _786 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _788 = _786.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _942 = sqrt(((_772 * _772) + (_773 * _773)) + (_774 * _774));
        float _948 = (cbMatDynParam._m0[5u].x * _942) + cbMatDynParam._m0[5u].y;
        float _4033 = isnan(0.0) ? _948 : (isnan(_948) ? 0.0 : max(_948, 0.0));
        float _949 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
        float _953 = (cbMatDynParam._m0[5u].z * _942) + cbMatDynParam._m0[5u].w;
        float _4044 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0))) - _949)) + _949) < ((_788 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _799 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _800 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _818 = fma(_702, cbSceneParam._m0[5u].z, fma(_701, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _700));
    float _821 = fma(_702, cbSceneParam._m0[6u].z, fma(_701, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _700));
    float _824 = fma(_702, cbSceneParam._m0[7u].z, fma(_701, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _700));
    uint _837 = uint(roundEven(NORMAL.w)) * 13u;
    uint _838 = _837 + 9u;
    uint _839 = _838 + uint(cbMatDynParam._m0[0u].w);
    float _845 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0)))) * cbInstanceData._m0[_839].x;
    float _846 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0)))) * cbInstanceData._m0[_839].y;
    float _847 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0)))) * cbInstanceData._m0[_839].z;
    float _4055 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _848 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
    float _4066 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _849 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
    float _4077 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _850 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
    vec4 _859 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _799, cbSceneParam._m0[86u].y * _800));
    float _862 = _859.x * TEXCOORD_4;
    float _863 = dot(vec3(_700, _701, _702), vec3(_779, _780, _781));
    float _866 = _863 * 2.0;
    float _870 = (_866 * _700) - _779;
    float _871 = (_866 * _701) - _780;
    float _872 = (_866 * _702) - _781;
    float _876 = abs(dot(vec3(_779, _780, _781), vec3(_700, _701, _702)));
    float _4088 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _878 = sqrt(_703);
    float _891 = exp2((_878 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_878 * 3.0));
    float _923 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _927 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _931 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1262;
    float _1264;
    float _1265;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _987 = fma(_931, cbModelParam._m0[26u].z, fma(_927, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _923));
        float _991 = fma(_931, cbModelParam._m0[27u].z, fma(_927, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _923));
        float _995 = fma(_931, cbModelParam._m0[28u].z, fma(_927, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _923));
        float _1020 = _923 + _700;
        float _1021 = _927 + _701;
        float _1022 = _931 + _702;
        float _1032 = fma(_1022, cbModelParam._m0[26u].z, fma(_1021, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1020)) - _987;
        float _1033 = fma(_1022, cbModelParam._m0[27u].z, fma(_1021, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1020)) - _991;
        float _1034 = fma(_1022, cbModelParam._m0[28u].z, fma(_1021, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1020)) - _995;
        float _1038 = inversesqrt(dot(vec3(_1032, _1033, _1034), vec3(_1032, _1033, _1034)));
        float _1051 = ((_1038 * _1032) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_987 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1052 = ((_1038 * _1033) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_991 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1053 = ((_1038 * _1034) / cbModelParam._m0[34u].z) + ((((((_995 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1056 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1051, _1052, _1053), 0.0);
        vec4 _1063 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1051, _1052, _1053), 0.0);
        vec4 _1070 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1051, _1052, _1053), 0.0);
        vec4 _1077 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1051, _1052, _1053), 0.0);
        float _1090 = exp2((_1056.w + (-0.5)) * 20.0) * 2.0;
        float _1091 = _1090 * (_1056.x + (-0.5));
        float _1092 = _1090 * (_1056.y + (-0.5));
        float _1093 = _1090 * (_1056.z + (-0.5));
        float _1100 = exp2((_1063.w + (-0.5)) * 20.0) * 2.0;
        float _1101 = _1100 * (_1063.x + (-0.5));
        float _1102 = _1100 * (_1063.y + (-0.5));
        float _1103 = _1100 * (_1063.z + (-0.5));
        float _1110 = exp2((_1070.w + (-0.5)) * 20.0) * 2.0;
        float _1111 = _1110 * (_1070.x + (-0.5));
        float _1112 = _1110 * (_1070.y + (-0.5));
        float _1113 = _1110 * (_1070.z + (-0.5));
        float _1120 = exp2((_1077.w + (-0.5)) * 20.0) * 2.0;
        float _1121 = _1120 * (_1077.x + (-0.5));
        float _1122 = _1120 * (_1077.y + (-0.5));
        float _1123 = _1120 * (_1077.z + (-0.5));
        float _1124 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
        float _1125 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
        float _1126 = isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0));
        float _1127 = _1091 * 0.5;
        float _1128 = _1101 * 0.5;
        float _1129 = _1111 * 0.5;
        float _1130 = dot(vec3(_1127, _1128, _1129), vec3(_1127, _1128, _1129));
        float _1135 = (_1130 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1130);
        float _1144 = (dot(vec3(_700, _701, _702), vec3(_1135 * _1127, _1135 * _1128, _1135 * _1129)) + 1.0) * 0.5;
        float _4114 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1154 = sqrt(((_1128 * _1128) + (_1127 * _1127)) + (_1129 * _1129)) / (_1124 + 9.9999997473787516355514526367188e-06);
        float _4125 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
        float _1155 = isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0));
        float _1156 = _1155 * 2.0;
        float _1160 = (1.0 - _1155) / (_1155 + 1.0);
        float _4136 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1161 = isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0));
        float _1170 = ((((1.0 - _1161) * (_1156 + 2.0)) * exp2(log2(isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0))) * (_1156 + 1.0))) + _1161) * _1124;
        float _1171 = _1092 * 0.5;
        float _1172 = _1102 * 0.5;
        float _1173 = _1112 * 0.5;
        float _1174 = dot(vec3(_1171, _1172, _1173), vec3(_1171, _1172, _1173));
        float _1179 = (_1174 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1174);
        float _1187 = (dot(vec3(_700, _701, _702), vec3(_1179 * _1171, _1179 * _1172, _1179 * _1173)) + 1.0) * 0.5;
        float _4147 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1196 = sqrt(((_1172 * _1172) + (_1171 * _1171)) + (_1173 * _1173)) / (_1125 + 9.9999997473787516355514526367188e-06);
        float _4158 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1197 = isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0));
        float _1198 = _1197 * 2.0;
        float _1202 = (1.0 - _1197) / (_1197 + 1.0);
        float _4169 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1203 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
        float _1212 = ((((1.0 - _1203) * (_1198 + 2.0)) * exp2(log2(isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0))) * (_1198 + 1.0))) + _1203) * _1125;
        float _1213 = _1093 * 0.5;
        float _1214 = _1103 * 0.5;
        float _1215 = _1113 * 0.5;
        float _1216 = dot(vec3(_1213, _1214, _1215), vec3(_1213, _1214, _1215));
        float _1221 = (_1216 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1216);
        float _1229 = (dot(vec3(_700, _701, _702), vec3(_1221 * _1213, _1221 * _1214, _1221 * _1215)) + 1.0) * 0.5;
        float _4180 = isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0));
        float _1238 = sqrt(((_1214 * _1214) + (_1213 * _1213)) + (_1215 * _1215)) / (_1126 + 9.9999997473787516355514526367188e-06);
        float _4191 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
        float _1239 = isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0));
        float _1240 = _1239 * 2.0;
        float _1244 = (1.0 - _1239) / (_1239 + 1.0);
        float _4202 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1245 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
        float _1254 = ((((1.0 - _1245) * (_1240 + 2.0)) * exp2(log2(isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0))) * (_1240 + 1.0))) + _1245) * _1126;
        _1262 = _1093;
        _1264 = _1092;
        _1265 = _1091;
        _1266 = _1103;
        _1267 = _1102;
        _1268 = _1101;
        _1269 = _1113;
        _1270 = _1112;
        _1271 = _1111;
        _1272 = _1126;
        _1273 = _1125;
        _1274 = _1124;
        _1275 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0)));
        _1276 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0)));
        _1277 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0)));
    }
    else
    {
        _1262 = _1263;
        _1264 = _1263;
        _1265 = _1263;
        _1266 = _1263;
        _1267 = _1263;
        _1268 = _1263;
        _1269 = _1263;
        _1270 = _1263;
        _1271 = _1263;
        _1272 = _1263;
        _1273 = _1263;
        _1274 = _1263;
        _1275 = 0.0;
        _1276 = 0.0;
        _1277 = 0.0;
    }
    float _1575;
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    float _1581;
    float _1582;
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1306 = fma(_931, cbModelParam._m0[30u].z, fma(_927, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _923));
        float _1310 = fma(_931, cbModelParam._m0[31u].z, fma(_927, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _923));
        float _1314 = fma(_931, cbModelParam._m0[32u].z, fma(_927, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _923));
        float _1337 = _923 + _700;
        float _1338 = _927 + _701;
        float _1339 = _931 + _702;
        float _1349 = fma(_1339, cbModelParam._m0[30u].z, fma(_1338, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1337)) - _1306;
        float _1350 = fma(_1339, cbModelParam._m0[31u].z, fma(_1338, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1337)) - _1310;
        float _1351 = fma(_1339, cbModelParam._m0[32u].z, fma(_1338, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1337)) - _1314;
        float _1355 = inversesqrt(dot(vec3(_1349, _1350, _1351), vec3(_1349, _1350, _1351)));
        float _1368 = ((_1355 * _1349) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1306 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1369 = ((_1355 * _1350) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1310 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1370 = ((_1355 * _1351) / cbModelParam._m0[35u].z) + ((((((_1314 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1372 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        vec4 _1379 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        vec4 _1386 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        vec4 _1393 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        float _1405 = exp2((_1372.w + (-0.5)) * 20.0) * 2.0;
        float _1406 = _1405 * (_1372.x + (-0.5));
        float _1407 = _1405 * (_1372.y + (-0.5));
        float _1408 = _1405 * (_1372.z + (-0.5));
        float _1415 = exp2((_1379.w + (-0.5)) * 20.0) * 2.0;
        float _1416 = _1415 * (_1379.x + (-0.5));
        float _1417 = _1415 * (_1379.y + (-0.5));
        float _1418 = _1415 * (_1379.z + (-0.5));
        float _1425 = exp2((_1386.w + (-0.5)) * 20.0) * 2.0;
        float _1426 = _1425 * (_1386.x + (-0.5));
        float _1427 = _1425 * (_1386.y + (-0.5));
        float _1428 = _1425 * (_1386.z + (-0.5));
        float _1435 = exp2((_1393.w + (-0.5)) * 20.0) * 2.0;
        float _1436 = _1435 * (_1393.x + (-0.5));
        float _1437 = _1435 * (_1393.y + (-0.5));
        float _1438 = _1435 * (_1393.z + (-0.5));
        float _1439 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1440 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1441 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1442 = _1406 * 0.5;
        float _1443 = _1416 * 0.5;
        float _1444 = _1426 * 0.5;
        float _1445 = dot(vec3(_1442, _1443, _1444), vec3(_1442, _1443, _1444));
        float _1450 = (_1445 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1445);
        float _1458 = (dot(vec3(_700, _701, _702), vec3(_1450 * _1442, _1450 * _1443, _1450 * _1444)) + 1.0) * 0.5;
        float _4243 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1467 = sqrt(((_1443 * _1443) + (_1442 * _1442)) + (_1444 * _1444)) / (_1439 + 9.9999997473787516355514526367188e-06);
        float _4254 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1468 = isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0));
        float _1469 = _1468 * 2.0;
        float _1473 = (1.0 - _1468) / (_1468 + 1.0);
        float _4265 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
        float _1474 = isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0));
        float _1483 = ((((1.0 - _1474) * (_1469 + 2.0)) * exp2(log2(isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0))) * (_1469 + 1.0))) + _1474) * _1439;
        float _1484 = _1407 * 0.5;
        float _1485 = _1417 * 0.5;
        float _1486 = _1427 * 0.5;
        float _1487 = dot(vec3(_1484, _1485, _1486), vec3(_1484, _1485, _1486));
        float _1492 = (_1487 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1487);
        float _1500 = (dot(vec3(_700, _701, _702), vec3(_1492 * _1484, _1492 * _1485, _1492 * _1486)) + 1.0) * 0.5;
        float _4276 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1509 = sqrt(((_1485 * _1485) + (_1484 * _1484)) + (_1486 * _1486)) / (_1440 + 9.9999997473787516355514526367188e-06);
        float _4287 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
        float _1510 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
        float _1511 = _1510 * 2.0;
        float _1515 = (1.0 - _1510) / (_1510 + 1.0);
        float _4298 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
        float _1516 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
        float _1525 = ((((1.0 - _1516) * (_1511 + 2.0)) * exp2(log2(isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0))) * (_1511 + 1.0))) + _1516) * _1440;
        float _1526 = _1408 * 0.5;
        float _1527 = _1418 * 0.5;
        float _1528 = _1428 * 0.5;
        float _1529 = dot(vec3(_1526, _1527, _1528), vec3(_1526, _1527, _1528));
        float _1534 = (_1529 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1529);
        float _1542 = (dot(vec3(_700, _701, _702), vec3(_1534 * _1526, _1534 * _1527, _1534 * _1528)) + 1.0) * 0.5;
        float _4309 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1551 = sqrt(((_1527 * _1527) + (_1526 * _1526)) + (_1528 * _1528)) / (_1441 + 9.9999997473787516355514526367188e-06);
        float _4320 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
        float _1552 = isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0));
        float _1553 = _1552 * 2.0;
        float _1557 = (1.0 - _1552) / (_1552 + 1.0);
        float _4331 = isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0));
        float _1558 = isnan(1.0) ? _4331 : (isnan(_4331) ? 1.0 : min(_4331, 1.0));
        float _1567 = ((((1.0 - _1558) * (_1553 + 2.0)) * exp2(log2(isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0))) * (_1553 + 1.0))) + _1558) * _1441;
        _1575 = _1408;
        _1576 = _1407;
        _1577 = _1406;
        _1578 = _1418;
        _1579 = _1417;
        _1580 = _1416;
        _1581 = _1428;
        _1582 = _1427;
        _1583 = _1426;
        _1584 = _1441;
        _1585 = _1440;
        _1586 = _1439;
        _1587 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0)));
        _1588 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0)));
        _1589 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0)));
    }
    else
    {
        _1575 = _1263;
        _1576 = _1263;
        _1577 = _1263;
        _1578 = _1263;
        _1579 = _1263;
        _1580 = _1263;
        _1581 = _1263;
        _1582 = _1263;
        _1583 = _1263;
        _1584 = _1263;
        _1585 = _1263;
        _1586 = _1263;
        _1587 = 0.0;
        _1588 = 0.0;
        _1589 = 0.0;
    }
    float _1599 = (cbModelParam._m0[1u].x * (_1587 - _1275)) + _1275;
    float _1600 = (cbModelParam._m0[1u].x * (_1588 - _1276)) + _1276;
    float _1601 = (cbModelParam._m0[1u].x * (_1589 - _1277)) + _1277;
    float _1622 = fma(_1601, cbSceneParam._m0[89u].z, fma(_1600, cbSceneParam._m0[89u].y, _1599 * cbSceneParam._m0[89u].x));
    float _1625 = fma(_1601, cbSceneParam._m0[90u].z, fma(_1600, cbSceneParam._m0[90u].y, _1599 * cbSceneParam._m0[90u].x));
    float _1628 = fma(_1601, cbSceneParam._m0[91u].z, fma(_1600, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1599));
    float _1643 = _870 * 0.5;
    float _1644 = _871 * 0.5;
    float _1645 = _872 * 0.5;
    float _1646 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1577, _1580, _1583, _1586));
    float _1649 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1576, _1579, _1582, _1585));
    float _1652 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1575, _1578, _1581, _1584));
    float _1686;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1659 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1262, _1266, _1269, _1272));
        float _1663 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1264, _1267, _1270, _1273));
        float _1667 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1265, _1268, _1271, _1274));
        float _1674 = dot(vec4(cbModelParam._m0[39u]), vec4(_1643, _1644, _1645, 1.0));
        _1686 = dot(vec3(isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0)), isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0)), isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1674) ? 0.0 : (isnan(0.0) ? _1674 : max(0.0, _1674))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1686 = 1.0;
    }
    float _1697;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1688 = dot(vec4(cbModelParam._m0[40u]), vec4(_1643, _1644, _1645, 1.0));
        _1697 = dot(vec3(isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0)), isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0)), isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1688) ? 0.0 : (isnan(0.0) ? _1688 : max(0.0, _1688))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1697 = 1.0;
    }
    float _1701 = (_1697 * cbModelParam._m0[1u].x) + (_1686 * (1.0 - cbModelParam._m0[1u].x));
    float _1711 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _703);
    float _1712 = isnan(_1711) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1711 : min(cbModelParam._m0[25u].z, _1711));
    float _1792;
    float _1794;
    float _1796;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1759 = fma(_931, cbModelParam._m0[13u].z, fma(_927, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _923)) + cbModelParam._m0[13u].w;
        float _1763 = fma(_931, cbModelParam._m0[14u].z, fma(_927, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _923)) + cbModelParam._m0[14u].w;
        float _1767 = fma(_931, cbModelParam._m0[15u].z, fma(_927, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _923)) + cbModelParam._m0[15u].w;
        float _1770 = fma(_872, cbModelParam._m0[13u].z, fma(_871, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _870));
        float _1773 = fma(_872, cbModelParam._m0[14u].z, fma(_871, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _870));
        float _1776 = fma(_872, cbModelParam._m0[15u].z, fma(_871, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _870));
        float _1804;
        if (_1770 > 0.0)
        {
            _1804 = abs((1.0 - _1759) / _1770);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1770 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1759 + 1.0) / _1770);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1804 = frontier_phi_19_17_ladder;
        }
        float _1977;
        if (_1773 > 0.0)
        {
            _1977 = abs((1.0 - _1763) / _1773);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1773 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1763 + 1.0) / _1773);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1977 = frontier_phi_28_24_ladder;
        }
        float _2272;
        if (_1776 > 0.0)
        {
            _2272 = abs((1.0 - _1767) / _1776);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1776 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1767 + 1.0) / _1776);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2272 = frontier_phi_40_35_ladder;
        }
        float _2274 = isnan(_1977) ? _1804 : (isnan(_1804) ? _1977 : min(_1804, _1977));
        float _2275 = isnan(_2272) ? _2274 : (isnan(_2274) ? _2272 : min(_2274, _2272));
        float _2279 = (_2275 * _1770) + _1759;
        float _2280 = (_2275 * _1773) + _1763;
        float _2281 = (_2275 * _1776) + _1767;
        float _2282 = _2275 * 9.9999997473787516355514526367188e-05;
        float _2284 = (-1.0) - _2282;
        float _2286 = _2282 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2281 > _2286) || ((_2281 < _2284) || ((_2280 > _2286) || ((_2280 < _2284) || ((_2279 < _2284) || (_2279 > _2286))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2426 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2281, cbModelParam._m0[9u].z, fma(_2280, cbModelParam._m0[9u].y, _2279 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2281, cbModelParam._m0[10u].z, fma(_2280, cbModelParam._m0[10u].y, _2279 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2281, cbModelParam._m0[11u].z, fma(_2280, cbModelParam._m0[11u].y, _2279 * cbModelParam._m0[11u].x))), _1712);
            frontier_phi_18_40_ladder = _2426.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2426.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2426.x * cbModelParam._m0[1u].y;
        }
        _1792 = frontier_phi_18_40_ladder_2;
        _1794 = frontier_phi_18_40_ladder_1;
        _1796 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1780 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_870, _871, _872), _1712);
        _1792 = _1780.x * cbModelParam._m0[1u].y;
        _1794 = _1780.y * cbModelParam._m0[1u].y;
        _1796 = _1780.z * cbModelParam._m0[1u].y;
    }
    float _1800 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _703);
    float _1801 = isnan(_1800) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1800 : min(cbModelParam._m0[25u].w, _1800));
    float _1894;
    float _1896;
    float _1898;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1858 = fma(_931, cbModelParam._m0[21u].z, fma(_927, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _923)) + cbModelParam._m0[21u].w;
        float _1862 = fma(_931, cbModelParam._m0[22u].z, fma(_927, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _923)) + cbModelParam._m0[22u].w;
        float _1866 = fma(_931, cbModelParam._m0[23u].z, fma(_927, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _923)) + cbModelParam._m0[23u].w;
        float _1869 = fma(_872, cbModelParam._m0[21u].z, fma(_871, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _870));
        float _1872 = fma(_872, cbModelParam._m0[22u].z, fma(_871, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _870));
        float _1875 = fma(_872, cbModelParam._m0[23u].z, fma(_871, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _870));
        float _1982;
        if (_1869 > 0.0)
        {
            _1982 = abs((1.0 - _1858) / _1869);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1869 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1858 + 1.0) / _1869);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1982 = frontier_phi_30_26_ladder;
        }
        float _2299;
        if (_1872 > 0.0)
        {
            _2299 = abs((1.0 - _1862) / _1872);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1872 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1862 + 1.0) / _1872);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2299 = frontier_phi_42_37_ladder;
        }
        float _2626;
        if (_1875 > 0.0)
        {
            _2626 = abs((1.0 - _1866) / _1875);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_1875 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_1866 + 1.0) / _1875);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2626 = frontier_phi_52_49_ladder;
        }
        float _2628 = isnan(_2299) ? _1982 : (isnan(_1982) ? _2299 : min(_1982, _2299));
        float _2629 = isnan(_2626) ? _2628 : (isnan(_2628) ? _2626 : min(_2628, _2626));
        float _2633 = (_2629 * _1869) + _1858;
        float _2634 = (_2629 * _1872) + _1862;
        float _2635 = (_2629 * _1875) + _1866;
        float _2636 = _2629 * 9.9999997473787516355514526367188e-05;
        float _2637 = (-1.0) - _2636;
        float _2639 = _2636 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2635 > _2639) || ((_2635 < _2637) || ((_2634 > _2639) || ((_2634 < _2637) || ((_2633 < _2637) || (_2633 > _2639))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2753 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2635, cbModelParam._m0[17u].z, fma(_2634, cbModelParam._m0[17u].y, _2633 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2635, cbModelParam._m0[18u].z, fma(_2634, cbModelParam._m0[18u].y, _2633 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2635, cbModelParam._m0[19u].z, fma(_2634, cbModelParam._m0[19u].y, _2633 * cbModelParam._m0[19u].x))), _1801);
            frontier_phi_27_52_ladder = _2753.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2753.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2753.x * cbModelParam._m0[1u].z;
        }
        _1894 = frontier_phi_27_52_ladder_2;
        _1896 = frontier_phi_27_52_ladder_1;
        _1898 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1878 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_870, _871, _872), _1801);
        _1894 = _1878.x * cbModelParam._m0[1u].z;
        _1896 = _1878.y * cbModelParam._m0[1u].z;
        _1898 = _1878.z * cbModelParam._m0[1u].z;
    }
    float _1910 = ((((1.0 - _891) * ((_878 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_891 * _878)) * _862;
    float _1911 = _1910 * ((cbModelParam._m0[1u].w * (_1894 - _1792)) + _1792);
    float _1912 = _1910 * ((cbModelParam._m0[1u].w * (_1896 - _1794)) + _1794);
    float _1913 = _1910 * ((cbModelParam._m0[1u].w * (_1898 - _1796)) + _1796);
    float _1916 = fma(_1913, cbSceneParam._m0[89u].z, fma(_1912, cbSceneParam._m0[89u].y, _1911 * cbSceneParam._m0[89u].x));
    float _1919 = fma(_1913, cbSceneParam._m0[90u].z, fma(_1912, cbSceneParam._m0[90u].y, _1911 * cbSceneParam._m0[90u].x));
    float _1922 = fma(_1913, cbSceneParam._m0[91u].z, fma(_1912, cbSceneParam._m0[91u].y, _1911 * cbSceneParam._m0[91u].x));
    float _1956 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1960 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1964 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1968 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1969 = _1956 / _1968;
    float _1970 = _1960 / _1968;
    float _1971 = _1964 / _1968;
    float _2118;
    float _2119;
    float _2120;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1998 = ((uint(_1971 > cbSceneParam._m0[59u].y) + uint(_1971 > cbSceneParam._m0[59u].x)) + uint(_1971 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1999 = _1998 + 43u;
        uint _2007 = _1998 + 44u;
        uint _2015 = _1998 + 45u;
        uint _2023 = _1998 + 46u;
        float _2034 = fma(_1968, cbSceneParam._m0[_1999].w, fma(_1964, cbSceneParam._m0[_1999].z, fma(_1960, cbSceneParam._m0[_1999].y, _1956 * cbSceneParam._m0[_1999].x)));
        float _2038 = fma(_1968, cbSceneParam._m0[_2007].w, fma(_1964, cbSceneParam._m0[_2007].z, fma(_1960, cbSceneParam._m0[_2007].y, _1956 * cbSceneParam._m0[_2007].x)));
        float _2046 = fma(_1968, cbSceneParam._m0[_2023].w, fma(_1964, cbSceneParam._m0[_2023].z, fma(_1960, cbSceneParam._m0[_2023].y, _1956 * cbSceneParam._m0[_2023].x)));
        float _2051 = cbSceneParam._m0[33u].z * _2046;
        float _2053 = cbSceneParam._m0[33u].w * _2046;
        float _2056 = fma(_1968, cbSceneParam._m0[_2015].w, fma(_1964, cbSceneParam._m0[_2015].z, fma(_1960, cbSceneParam._m0[_2015].y, _1956 * cbSceneParam._m0[_2015].x))) / _2046;
        float _2104 = (cbSceneParam._m0[33u].x - sqrt(((_1970 * _1970) + (_1969 * _1969)) + (_1971 * _1971))) * cbSceneParam._m0[33u].y;
        float _4457 = isnan(0.0) ? _2104 : (isnan(_2104) ? 0.0 : max(_2104, 0.0));
        float _2111 = (isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2051 + _2034) / _2046, (_2053 + _2038) / _2046), _2056), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2053 + _2034) / _2046, (_2038 - _2051) / _2046), _2056), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2034 - _2051) / _2046, (_2038 - _2053) / _2046), _2056), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2034 - _2053) / _2046, (_2051 + _2038) / _2046), _2056), 0.0)).x), vec4(0.25)));
        _2118 = 1.0 - (_2111 * cbSceneParam._m0[34u].x);
        _2119 = 1.0 - (_2111 * cbSceneParam._m0[34u].y);
        _2120 = 1.0 - (_2111 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2118 = 1.0;
        _2119 = 1.0;
        _2120 = 1.0;
    }
    float _2184;
    float _2186;
    float _2188;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2172 = fma(_1968, cbSceneParam._m0[63u].w, fma(_1964, cbSceneParam._m0[63u].z, fma(_1960, cbSceneParam._m0[63u].y, _1956 * cbSceneParam._m0[63u].x)));
        float _2173 = fma(_1968, cbSceneParam._m0[60u].w, fma(_1964, cbSceneParam._m0[60u].z, fma(_1960, cbSceneParam._m0[60u].y, _1956 * cbSceneParam._m0[60u].x))) / _2172;
        float _2174 = fma(_1968, cbSceneParam._m0[61u].w, fma(_1964, cbSceneParam._m0[61u].z, fma(_1960, cbSceneParam._m0[61u].y, _1956 * cbSceneParam._m0[61u].x))) / _2172;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2173 >= cbSceneParam._m0[64u].x) && (_2174 >= cbSceneParam._m0[64u].y)) && (_2173 <= cbSceneParam._m0[64u].z)) && (_2174 <= cbSceneParam._m0[64u].w))
        {
            float _2312 = fma(_1968, cbSceneParam._m0[62u].w, fma(_1964, cbSceneParam._m0[62u].z, fma(_1960, cbSceneParam._m0[62u].y, _1956 * cbSceneParam._m0[62u].x))) / _2172;
            float _2316 = isnan(cbSceneParam._m0[41u].w) ? _2312 : (isnan(_2312) ? cbSceneParam._m0[41u].w : max(_2312, cbSceneParam._m0[41u].w));
            float _2359 = (cbSceneParam._m0[33u].x - sqrt(((_1970 * _1970) + (_1969 * _1969)) + (_1971 * _1971))) * cbSceneParam._m0[33u].y;
            float _4473 = isnan(0.0) ? _2359 : (isnan(_2359) ? 0.0 : max(_2359, 0.0));
            float _2366 = (isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2173, cbSceneParam._m0[33u].w + _2174), _2316), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2173, _2174 - cbSceneParam._m0[33u].z), _2316), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2173 - cbSceneParam._m0[33u].z, _2174 - cbSceneParam._m0[33u].w), _2316), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2173 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2174), _2316), 0.0)).x), vec4(0.25)));
            float _2370 = 1.0 - (_2366 * cbSceneParam._m0[34u].x);
            float _2371 = 1.0 - (_2366 * cbSceneParam._m0[34u].y);
            float _2372 = 1.0 - (_2366 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2371) ? _2119 : (isnan(_2119) ? _2371 : min(_2119, _2371));
            frontier_phi_39_38_ladder_1 = isnan(_2370) ? _2118 : (isnan(_2118) ? _2370 : min(_2118, _2370));
            frontier_phi_39_38_ladder_2 = isnan(_2372) ? _2120 : (isnan(_2120) ? _2372 : min(_2120, _2372));
        }
        else
        {
            frontier_phi_39_38_ladder = _2119;
            frontier_phi_39_38_ladder_1 = _2118;
            frontier_phi_39_38_ladder_2 = _2120;
        }
        _2184 = frontier_phi_39_38_ladder_1;
        _2186 = frontier_phi_39_38_ladder;
        _2188 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _2184 = _2118;
        _2186 = _2119;
        _2188 = _2120;
    }
    uvec4 _2193 = floatBitsToUint(cbInstanceData._m0[_837 + 5u]);
    uint _2195 = _2193.x * 14u;
    uint _2196 = _2195 + 13u;
    float _2203 = _862 + (-1.0);
    float _2208 = (cbLight._m0[_2196].x * _2203) + 1.0;
    float _2209 = (cbLight._m0[_2196].y * _2203) + 1.0;
    float _2210 = (cbLight._m0[_2196].z * _2203) + 1.0;
    float _2211 = (cbLight._m0[_2196].w * _2203) + 1.0;
    uint _2212 = _2195 + 5u;
    float _2218 = isnan(1.0) ? _2209 : (isnan(_2209) ? 1.0 : min(_2209, 1.0));
    uint _2222 = _2195 + 4u;
    float _2231 = isnan(1.0) ? _2208 : (isnan(_2208) ? 1.0 : min(_2208, 1.0));
    uint _2235 = _2195 | 1u;
    float _2246 = dot(vec3(cbLight._m0[_2195].xyz), vec3(_700, _701, _702));
    float _2249 = dot(vec3(cbLight._m0[_2235].xyz), vec3(_700, _701, _702));
    float _4509 = isnan(0.0) ? _2246 : (isnan(_2246) ? 0.0 : max(_2246, 0.0));
    float _4520 = isnan(0.0) ? _2249 : (isnan(_2249) ? 0.0 : max(_2249, 0.0));
    float _2254 = (isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0))) * 0.3183098733425140380859375;
    float _2256 = (isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0))) * 0.3183098733425140380859375;
    float _2263 = ((cbLight._m0[_2212].x * _2218) * _2256) + (((cbLight._m0[_2222].x * _2184) * _2231) * _2254);
    float _2264 = ((_2218 * cbLight._m0[_2212].y) * _2256) + (((cbLight._m0[_2222].y * _2186) * _2231) * _2254);
    float _2265 = ((_2218 * cbLight._m0[_2212].z) * _2256) + (((cbLight._m0[_2222].z * _2188) * _2231) * _2254);
    uvec4 _2269 = floatBitsToUint(cbLight._m0[_2195 + 12u]);
    bool _2271 = _2269.x == 0u;
    float _2373;
    float _2375;
    float _2377;
    if (_2271)
    {
        _2373 = _2263;
        _2375 = _2264;
        _2377 = _2265;
    }
    else
    {
        uint _2381 = _2195 + 6u;
        float _2397 = (dot(vec3(cbLight._m0[_2195 + 2u].xyz), vec3(_700, _701, _702)) * 0.5) + 0.5;
        float _2398 = _2397 * _2397;
        float _4531 = isnan(0.0) ? _2398 : (isnan(_2398) ? 0.0 : max(_2398, 0.0));
        float _2399 = isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0));
        float _2400 = isnan(1.0) ? _2210 : (isnan(_2210) ? 1.0 : min(_2210, 1.0));
        _2373 = (((cbLight._m0[_2381].x * 0.3183098733425140380859375) * _2399) * _2400) + _2263;
        _2375 = (((cbLight._m0[_2381].y * 0.3183098733425140380859375) * _2399) * _2400) + _2264;
        _2377 = (((cbLight._m0[_2381].z * 0.3183098733425140380859375) * _2399) * _2400) + _2265;
    }
    bool _2380 = _2269.y == 0u;
    float _2435;
    float _2437;
    float _2439;
    if (_2380)
    {
        _2435 = _2373;
        _2437 = _2375;
        _2439 = _2377;
    }
    else
    {
        uint _2597 = _2195 + 7u;
        float _2613 = (dot(vec3(cbLight._m0[_2195 + 3u].xyz), vec3(_700, _701, _702)) * 0.5) + 0.5;
        float _2614 = _2613 * _2613;
        float _4547 = isnan(0.0) ? _2614 : (isnan(_2614) ? 0.0 : max(_2614, 0.0));
        float _2615 = isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0));
        float _2616 = isnan(1.0) ? _2211 : (isnan(_2211) ? 1.0 : min(_2211, 1.0));
        _2435 = (((cbLight._m0[_2597].x * 0.3183098733425140380859375) * _2615) * _2616) + _2373;
        _2437 = (((cbLight._m0[_2597].y * 0.3183098733425140380859375) * _2615) * _2616) + _2375;
        _2439 = (((cbLight._m0[_2597].z * 0.3183098733425140380859375) * _2615) * _2616) + _2377;
    }
    uint _2442 = _2195 + 8u;
    float _2455 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2195].w)) * _703) * 0.949999988079071044921875);
    float _2456 = _2455 * _2455;
    float _2457 = cbLight._m0[_2195].x + _779;
    float _2458 = cbLight._m0[_2195].y + _780;
    float _2459 = cbLight._m0[_2195].z + _781;
    float _2463 = inversesqrt(dot(vec3(_2457, _2458, _2459), vec3(_2457, _2458, _2459)));
    float _2464 = _2463 * _2457;
    float _2465 = _2463 * _2458;
    float _2466 = _2463 * _2459;
    float _2467 = dot(vec3(_700, _701, _702), vec3(cbLight._m0[_2195].xyz));
    float _4563 = isnan(0.0) ? _2467 : (isnan(_2467) ? 0.0 : max(_2467, 0.0));
    float _2470 = isnan(1.0) ? _4563 : (isnan(_4563) ? 1.0 : min(_4563, 1.0));
    float _4574 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _2471 = isnan(1.0) ? _4574 : (isnan(_4574) ? 1.0 : min(_4574, 1.0));
    float _2472 = dot(vec3(_700, _701, _702), vec3(_2464, _2465, _2466));
    float _4585 = isnan(0.0) ? _2472 : (isnan(_2472) ? 0.0 : max(_2472, 0.0));
    float _2475 = isnan(1.0) ? _4585 : (isnan(_4585) ? 1.0 : min(_4585, 1.0));
    float _2476 = dot(vec3(cbLight._m0[_2195].xyz), vec3(_2464, _2465, _2466));
    float _4596 = isnan(0.0) ? _2476 : (isnan(_2476) ? 0.0 : max(_2476, 0.0));
    float _2480 = _2456 * _2456;
    float _2484 = ((_2475 * _2475) * (_2480 + (-1.0))) + 1.0;
    float _2495 = (exp2(log2(1.0 - (isnan(1.0) ? _4596 : (isnan(_4596) ? 1.0 : min(_4596, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2496 = 1.0 - _2456;
    float _2507 = (0.5 / (((_2471 * ((_2470 * _2496) + _2456)) + 9.9999999392252902907785028219223e-09) + (((_2471 * _2496) + _2456) * _2470))) * _2470;
    float _4607 = isnan(0.0) ? _2507 : (isnan(_2507) ? 0.0 : max(_2507, 0.0));
    float _2509 = (isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0))) * (_2480 / ((_2484 * _2484) * 3.141590118408203125));
    uint _2523 = _2195 + 9u;
    float _2534 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2235].w)) * _703) * 0.949999988079071044921875);
    float _2535 = _2534 * _2534;
    float _2536 = cbLight._m0[_2235].x + _779;
    float _2537 = cbLight._m0[_2235].y + _780;
    float _2538 = cbLight._m0[_2235].z + _781;
    float _2542 = inversesqrt(dot(vec3(_2536, _2537, _2538), vec3(_2536, _2537, _2538)));
    float _2543 = _2542 * _2536;
    float _2544 = _2542 * _2537;
    float _2545 = _2542 * _2538;
    float _2546 = dot(vec3(_700, _701, _702), vec3(cbLight._m0[_2235].xyz));
    float _4618 = isnan(0.0) ? _2546 : (isnan(_2546) ? 0.0 : max(_2546, 0.0));
    float _2549 = isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0));
    float _2550 = dot(vec3(_700, _701, _702), vec3(_2543, _2544, _2545));
    float _4629 = isnan(0.0) ? _2550 : (isnan(_2550) ? 0.0 : max(_2550, 0.0));
    float _2553 = isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0));
    float _2554 = dot(vec3(cbLight._m0[_2235].xyz), vec3(_2543, _2544, _2545));
    float _4640 = isnan(0.0) ? _2554 : (isnan(_2554) ? 0.0 : max(_2554, 0.0));
    float _2558 = _2535 * _2535;
    float _2562 = ((_2553 * _2553) * (_2558 + (-1.0))) + 1.0;
    float _2571 = (exp2(log2(1.0 - (isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2572 = 1.0 - _2535;
    float _2582 = (0.5 / (((_2471 * ((_2549 * _2572) + _2535)) + 9.9999999392252902907785028219223e-09) + (((_2471 * _2572) + _2535) * _2549))) * _2549;
    float _4651 = isnan(0.0) ? _2582 : (isnan(_2582) ? 0.0 : max(_2582, 0.0));
    float _2584 = (isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0))) * (_2558 / ((_2562 * _2562) * 3.141590118408203125));
    float _2594 = (((_2571 * cbLight._m0[_2523].x) * _2584) * _2218) + ((((cbLight._m0[_2442].x * _2184) * _2495) * _2509) * _2231);
    float _2595 = (((_2571 * cbLight._m0[_2523].y) * _2584) * _2218) + ((((cbLight._m0[_2442].y * _2186) * _2495) * _2509) * _2231);
    float _2596 = (((_2571 * cbLight._m0[_2523].z) * _2584) * _2218) + ((((cbLight._m0[_2442].z * _2188) * _2495) * _2509) * _2231);
    float _2652;
    float _2654;
    float _2656;
    if (_2271)
    {
        _2652 = _2594;
        _2654 = _2595;
        _2656 = _2596;
    }
    else
    {
        uint _2658 = _2195 + 2u;
        uint _2662 = _2195 + 10u;
        float _2676 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2658].w)) * _703) * 0.949999988079071044921875);
        float _2677 = _2676 * _2676;
        float _2678 = cbLight._m0[_2658].x + _779;
        float _2679 = cbLight._m0[_2658].y + _780;
        float _2680 = cbLight._m0[_2658].z + _781;
        float _2684 = inversesqrt(dot(vec3(_2678, _2679, _2680), vec3(_2678, _2679, _2680)));
        float _2685 = _2684 * _2678;
        float _2686 = _2684 * _2679;
        float _2687 = _2684 * _2680;
        float _2688 = dot(vec3(_700, _701, _702), vec3(cbLight._m0[_2658].xyz));
        float _4662 = isnan(0.0) ? _2688 : (isnan(_2688) ? 0.0 : max(_2688, 0.0));
        float _2691 = isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0));
        float _2692 = dot(vec3(_700, _701, _702), vec3(_2685, _2686, _2687));
        float _4673 = isnan(0.0) ? _2692 : (isnan(_2692) ? 0.0 : max(_2692, 0.0));
        float _2695 = isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0));
        float _2696 = dot(vec3(cbLight._m0[_2658].xyz), vec3(_2685, _2686, _2687));
        float _4684 = isnan(0.0) ? _2696 : (isnan(_2696) ? 0.0 : max(_2696, 0.0));
        float _2700 = _2677 * _2677;
        float _2704 = ((_2695 * _2695) * (_2700 + (-1.0))) + 1.0;
        float _2713 = (exp2(log2(1.0 - (isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2714 = 1.0 - _2677;
        float _2724 = (0.5 / (((_2471 * ((_2691 * _2714) + _2677)) + 9.9999999392252902907785028219223e-09) + (((_2471 * _2714) + _2677) * _2691))) * _2691;
        float _4695 = isnan(0.0) ? _2724 : (isnan(_2724) ? 0.0 : max(_2724, 0.0));
        float _2726 = (isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0))) * (_2700 / ((_2704 * _2704) * 3.141590118408203125));
        float _2727 = isnan(1.0) ? _2210 : (isnan(_2210) ? 1.0 : min(_2210, 1.0));
        _2652 = (((_2713 * cbLight._m0[_2662].x) * _2726) * _2727) + _2594;
        _2654 = (((_2713 * cbLight._m0[_2662].y) * _2726) * _2727) + _2595;
        _2656 = (((_2713 * cbLight._m0[_2662].z) * _2726) * _2727) + _2596;
    }
    float _2758;
    float _2760;
    float _2762;
    if (_2380)
    {
        _2758 = _2652;
        _2760 = _2654;
        _2762 = _2656;
    }
    else
    {
        uint _2769 = _2195 + 3u;
        uint _2773 = _2195 + 11u;
        float _2787 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2769].w)) * _703) * 0.949999988079071044921875);
        float _2788 = _2787 * _2787;
        float _2789 = cbLight._m0[_2769].x + _779;
        float _2790 = cbLight._m0[_2769].y + _780;
        float _2791 = cbLight._m0[_2769].z + _781;
        float _2795 = inversesqrt(dot(vec3(_2789, _2790, _2791), vec3(_2789, _2790, _2791)));
        float _2796 = _2795 * _2789;
        float _2797 = _2795 * _2790;
        float _2798 = _2795 * _2791;
        float _2799 = dot(vec3(_700, _701, _702), vec3(cbLight._m0[_2769].xyz));
        float _4711 = isnan(0.0) ? _2799 : (isnan(_2799) ? 0.0 : max(_2799, 0.0));
        float _2802 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
        float _2803 = dot(vec3(_700, _701, _702), vec3(_2796, _2797, _2798));
        float _4722 = isnan(0.0) ? _2803 : (isnan(_2803) ? 0.0 : max(_2803, 0.0));
        float _2806 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
        float _2807 = dot(vec3(cbLight._m0[_2769].xyz), vec3(_2796, _2797, _2798));
        float _4733 = isnan(0.0) ? _2807 : (isnan(_2807) ? 0.0 : max(_2807, 0.0));
        float _2811 = _2788 * _2788;
        float _2815 = ((_2806 * _2806) * (_2811 + (-1.0))) + 1.0;
        float _2824 = (exp2(log2(1.0 - (isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2825 = 1.0 - _2788;
        float _2835 = (0.5 / (((_2471 * ((_2802 * _2825) + _2788)) + 9.9999999392252902907785028219223e-09) + (((_2471 * _2825) + _2788) * _2802))) * _2802;
        float _4744 = isnan(0.0) ? _2835 : (isnan(_2835) ? 0.0 : max(_2835, 0.0));
        float _2837 = (isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0))) * (_2811 / ((_2815 * _2815) * 3.141590118408203125));
        float _2838 = isnan(1.0) ? _2211 : (isnan(_2211) ? 1.0 : min(_2211, 1.0));
        _2758 = (((_2824 * cbLight._m0[_2773].x) * _2837) * _2838) + _2652;
        _2760 = (((_2824 * cbLight._m0[_2773].y) * _2837) * _2838) + _2654;
        _2762 = (((_2824 * cbLight._m0[_2773].z) * _2837) * _2838) + _2656;
    }
    float _2903;
    float _2905;
    float _2907;
    float _2909;
    float _2911;
    float _2913;
    if (_2193.y == 0u)
    {
        uvec4 _2859 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2860 = _2859.x;
        uint _2871 = uint((float(_2859.y) * floor(float(uint(cbSceneParam._m0[85u].y * _800) / _2860))) + floor(float(uint(cbSceneParam._m0[85u].x * _799) / _2860)));
        float _2881 = (log2(_1971 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2882 = isnan(0.0) ? _2881 : (isnan(_2881) ? 0.0 : max(_2881, 0.0));
        uint _2885 = uint(isnan(14.0) ? _2882 : (isnan(_2882) ? 14.0 : min(_2882, 14.0)));
        uvec4 _2890 = texelFetch(g_lightClusterGridBuffer, int(((_2885 << 2u) + (_2871 << 6u)) >> 2u));
        uint _2891 = _2890.x;
        uint _2892 = _2859.z;
        float _2970;
        float _2972;
        float _2974;
        float _2976;
        float _2978;
        float _2980;
        if (((((1u << ((_2892 >> 4u) & 15u)) + 4294967295u) & _2891) == 0u) || ((_2892 & 240u) == 0u))
        {
            _2970 = 0.0;
            _2972 = 0.0;
            _2974 = 0.0;
            _2976 = 0.0;
            _2978 = 0.0;
            _2980 = 0.0;
        }
        else
        {
            float _2971;
            float _2973;
            float _2975;
            float _2977;
            float _2979;
            float _2981;
            float _3122 = 0.0;
            float _3123 = 0.0;
            float _3124 = 0.0;
            float _3125 = 0.0;
            float _3126 = 0.0;
            float _3127 = 0.0;
            uint _3128 = 0u;
            uint _3137;
            bool _3138;
            for (;;)
            {
                _3137 = texelFetch(g_lightClassification, int((((_2885 << 5u) + (_2871 << 9u)) + (_3128 << 2u)) >> 2u)).x;
                _3138 = _3137 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_3138)
                {
                    frontier_phi_73_pred = _3127;
                    frontier_phi_73_pred_1 = _3126;
                    frontier_phi_73_pred_2 = _3125;
                    frontier_phi_73_pred_3 = _3124;
                    frontier_phi_73_pred_4 = _3123;
                    frontier_phi_73_pred_5 = _3122;
                }
                else
                {
                    float _3267;
                    float _3268;
                    float _3269;
                    float _3270;
                    float _3271;
                    float _3272;
                    uint _3273;
                    _3267 = _3122;
                    _3268 = _3123;
                    _3269 = _3124;
                    _3270 = _3125;
                    _3271 = _3126;
                    _3272 = _3127;
                    _3273 = _3137;
                    float _3194;
                    float _3195;
                    float _3196;
                    float _3197;
                    float _3198;
                    float _3199;
                    for (;;)
                    {
                        uint _3277 = uint(findLSB(_3273)) + (_3128 << 5u);
                        uint _3274 = (_3273 + 4294967295u) & _3273;
                        uint _3279 = _3277 * 48u;
                        vec4 _3293 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3279)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 3u)).x));
                        uint _3299 = (_3277 * 48u) + 4u;
                        vec4 _3312 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3299)).x, texelFetch(g_PointLightRenderingBuffer, int(_3299 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3299 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3299 + 3u)).x));
                        uint _3318 = (_3277 * 48u) + 8u;
                        vec3 _3329 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3318)).x, texelFetch(g_PointLightRenderingBuffer, int(_3318 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3318 + 2u)).x));
                        float _3333 = _3293.x - _1969;
                        float _3334 = _3293.y - _1970;
                        float _3335 = _3293.z - _1971;
                        float _3336 = dot(vec3(_3333, _3334, _3335), vec3(_3333, _3334, _3335));
                        float _3339 = inversesqrt(_3336);
                        float _3340 = _3339 * _3333;
                        float _3341 = _3339 * _3334;
                        float _3342 = _3339 * _3335;
                        float _3343 = dot(vec3(_818, _821, _824), vec3(_3340, _3341, _3342));
                        float _3348 = 1.0 - (_3336 * _3293.w);
                        float _4770 = isnan(0.0) ? _3348 : (isnan(_3348) ? 0.0 : max(_3348, 0.0));
                        float _3349 = isnan(1.0) ? _4770 : (isnan(_4770) ? 1.0 : min(_4770, 1.0));
                        float _3350 = sqrt(_3336) * _3312.w;
                        float _3353 = 1.39999997615814208984375 / (_3350 + 1.39999997615814208984375);
                        float _3354 = _3353 * _3353;
                        float _3357 = ((1.0 - _3354) * _3343) + _3354;
                        float _3360 = _3350 * _3350;
                        float _3364 = ((isnan(0.0) ? _3357 : (isnan(_3357) ? 0.0 : max(_3357, 0.0))) * _3349) / ((_3360 * 0.699999988079071044921875) + 1.0);
                        float _3368 = (-0.0) - _1969;
                        float _3369 = (-0.0) - _1970;
                        float _3370 = (-0.0) - _1971;
                        float _3374 = inversesqrt(dot(vec3(_3368, _3369, _3370), vec3(_3368, _3369, _3370)));
                        float _3375 = _3374 * _3368;
                        float _3376 = _3374 * _3369;
                        float _3377 = _3374 * _3370;
                        float _3384 = exp2(log2(1.0 / ((_3360 * 3.5) + 5.0)) * 0.25);
                        float _3385 = 1.0 - _878;
                        float _3392 = sqrt(1.0 - ((1.0 - (_3385 * _3385)) * (1.0 - (_3384 * _3384))));
                        float _3393 = _3392 * _3392;
                        float _3394 = _3393 * _3393;
                        float _3395 = _3375 + _3340;
                        float _3396 = _3376 + _3341;
                        float _3397 = _3377 + _3342;
                        float _3401 = inversesqrt(dot(vec3(_3395, _3396, _3397), vec3(_3395, _3396, _3397)));
                        float _3405 = dot(vec3(_818, _821, _824), vec3(_3375, _3376, _3377));
                        float _4786 = isnan(0.0) ? _3405 : (isnan(_3405) ? 0.0 : max(_3405, 0.0));
                        float _3408 = isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0));
                        float _3409 = dot(vec3(_818, _821, _824), vec3(_3401 * _3395, _3401 * _3396, _3401 * _3397));
                        float _4797 = isnan(0.0) ? _3409 : (isnan(_3409) ? 0.0 : max(_3409, 0.0));
                        float _3412 = isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0));
                        float _3416 = ((_3412 * _3412) * (_3394 + (-1.0))) + 1.0;
                        float _3417 = _3353 * _3393;
                        float _3418 = _3417 * _3417;
                        float _3421 = ((1.0 - _3418) * _3343) + _3418;
                        float _4808 = isnan(0.0) ? _3421 : (isnan(_3421) ? 0.0 : max(_3421, 0.0));
                        float _3422 = isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0));
                        float _3423 = 1.0 - _3393;
                        float _3433 = (0.5 / (((_3422 * ((_3408 * _3423) + _3393)) + 9.9999999392252902907785028219223e-09) + (((_3422 * _3423) + _3393) * _3408))) * _3422;
                        float _4819 = isnan(0.0) ? _3433 : (isnan(_3433) ? 0.0 : max(_3433, 0.0));
                        float _3444 = (((_3394 * 3.1415927410125732421875) * (isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0)))) / ((_3416 * _3416) * ((_3360 * 2.1991131305694580078125) + 3.141590118408203125))) * _3349;
                        _3197 = (_3364 * _3312.x) + _3270;
                        _3198 = (_3364 * _3312.y) + _3271;
                        _3199 = (_3364 * _3312.z) + _3272;
                        _3194 = (_3444 * _3329.x) + _3267;
                        _3195 = (_3444 * _3329.y) + _3268;
                        _3196 = (_3444 * _3329.z) + _3269;
                        if (_3274 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3267 = _3194;
                            _3268 = _3195;
                            _3269 = _3196;
                            _3270 = _3197;
                            _3271 = _3198;
                            _3272 = _3199;
                            _3273 = _3274;
                        }
                    }
                    frontier_phi_73_pred = _3199;
                    frontier_phi_73_pred_1 = _3198;
                    frontier_phi_73_pred_2 = _3197;
                    frontier_phi_73_pred_3 = _3196;
                    frontier_phi_73_pred_4 = _3195;
                    frontier_phi_73_pred_5 = _3194;
                }
                _2981 = frontier_phi_73_pred;
                _2979 = frontier_phi_73_pred_1;
                _2977 = frontier_phi_73_pred_2;
                _2975 = frontier_phi_73_pred_3;
                _2973 = frontier_phi_73_pred_4;
                _2971 = frontier_phi_73_pred_5;
                uint _3129 = _3128 + 1u;
                if (_3129 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3122 = _2971;
                    _3123 = _2973;
                    _3124 = _2975;
                    _3125 = _2977;
                    _3126 = _2979;
                    _3127 = _2981;
                    _3128 = _3129;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2970 = _2971;
            _2972 = _2973;
            _2974 = _2975;
            _2976 = _2977;
            _2978 = _2979;
            _2980 = _2981;
        }
        uvec4 _2984 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2985 = _2984.z;
        uint _2987 = (_2985 >> 8u) & 15u;
        float _3090;
        float _3092;
        float _3094;
        float _3096;
        float _3098;
        float _3100;
        if (((4294967295u << _2987) & _2891) == 0u)
        {
            _3090 = _2970;
            _3092 = _2972;
            _3094 = _2974;
            _3096 = _2976;
            _3098 = _2978;
            _3100 = _2980;
        }
        else
        {
            float _3115 = inversesqrt(dot(vec3(_1969, _1970, _1971), vec3(_1969, _1970, _1971)));
            float _3116 = _3115 * _1969;
            float _3117 = _3115 * _1970;
            float _3118 = _3115 * _1971;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_2987 < ((_2985 >> 12u) & 15u))
            {
                float _3091;
                float _3093;
                float _3095;
                float _3097;
                float _3099;
                float _3101;
                float _3250 = _2970;
                float _3251 = _2972;
                float _3252 = _2974;
                float _3253 = _2976;
                float _3254 = _2978;
                float _3255 = _2980;
                uint _3256 = _2987;
                uint _3265;
                bool _3266;
                for (;;)
                {
                    _3265 = texelFetch(g_lightClassification, int((((_2885 << 5u) + (_2871 << 9u)) + (_3256 << 2u)) >> 2u)).x;
                    _3266 = _3265 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3266)
                    {
                        frontier_phi_84_pred = _3254;
                        frontier_phi_84_pred_1 = _3253;
                        frontier_phi_84_pred_2 = _3252;
                        frontier_phi_84_pred_3 = _3251;
                        frontier_phi_84_pred_4 = _3250;
                        frontier_phi_84_pred_5 = _3255;
                    }
                    else
                    {
                        float _3458;
                        float _3459;
                        float _3460;
                        float _3461;
                        float _3462;
                        float _3463;
                        float _3753;
                        float _3754;
                        float _3755;
                        float _3756;
                        float _3757;
                        float _3758;
                        float _3471 = _3250;
                        float _3472 = _3251;
                        float _3473 = _3252;
                        float _3474 = _3253;
                        float _3475 = _3254;
                        float _3476 = _3255;
                        uint _3477 = _3265;
                        uint _3478;
                        vec4 _3503;
                        float _3504;
                        vec4 _3519;
                        vec3 _3531;
                        vec4 _3546;
                        vec4 _3562;
                        float _3609;
                        bool _3610;
                        for (;;)
                        {
                            uint _3488 = ((_3256 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3477));
                            _3478 = (_3477 + 4294967295u) & _3477;
                            uint _3490 = _3488 * 40u;
                            _3503 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3490)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 3u)).x));
                            _3504 = _3503.w;
                            uint _3506 = (_3488 * 40u) + 4u;
                            _3519 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3506)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 3u)).x));
                            uint _3521 = (_3488 * 40u) + 8u;
                            _3531 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3521)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 2u)).x));
                            uint _3533 = (_3488 * 40u) + 16u;
                            _3546 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3533)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 3u)).x));
                            uint _3549 = (_3488 * 40u) + 20u;
                            _3562 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3549)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3549 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3549 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3549 + 3u)).x));
                            uint _3565 = (_3488 * 40u) + 24u;
                            vec4 _3578 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3565)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3565 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3565 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3565 + 3u)).x));
                            uint _3584 = (_3488 * 40u) + 28u;
                            vec4 _3597 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3584)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 3u)).x));
                            _3609 = fma(_1971, _3597.z, fma(_1970, _3597.y, _3597.x * _1969)) + _3597.w;
                            _3610 = !((fma(_1971, _3578.z, fma(_1970, _3578.y, _3578.x * _1969)) + _3578.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_3610)
                            {
                                float _3637 = _3503.x - _1969;
                                float _3638 = _3503.y - _1970;
                                float _3639 = _3503.z - _1971;
                                float _3640 = dot(vec3(_3637, _3638, _3639), vec3(_3637, _3638, _3639));
                                float _3643 = inversesqrt(_3640);
                                float _3644 = _3643 * _3637;
                                float _3645 = _3643 * _3638;
                                float _3646 = _3643 * _3639;
                                float _3650 = 1.0 - (_3640 / (_3504 * _3504));
                                float _4830 = isnan(0.0) ? _3650 : (isnan(_3650) ? 0.0 : max(_3650, 0.0));
                                float _3651 = isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0));
                                float _3655 = sqrt(_3640) * _3519.w;
                                float _3657 = 1.39999997615814208984375 / (_3655 + 1.39999997615814208984375);
                                float _3658 = _3657 * _3657;
                                float _3661 = ((1.0 - _3658) * dot(vec3(_3644, _3645, _3646), vec3(_818, _821, _824))) + _3658;
                                float _3664 = _3655 * _3655;
                                float _3668 = (fma(_1971, _3546.z, fma(_1970, _3546.y, _3546.x * _1969)) + _3546.w) / _3609;
                                float _3669 = (fma(_1971, _3562.z, fma(_1970, _3562.y, _3562.x * _1969)) + _3562.w) / _3609;
                                float _3673 = 1.0 - dot(vec2(_3668, _3669), vec2(_3668, _3669));
                                float _4846 = isnan(0.0) ? _3673 : (isnan(_3673) ? 0.0 : max(_3673, 0.0));
                                float _3674 = isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0));
                                float _3675 = _3674 * (((isnan(0.0) ? _3661 : (isnan(_3661) ? 0.0 : max(_3661, 0.0))) * _3651) / ((_3664 * 0.699999988079071044921875) + 1.0));
                                float _3687 = exp2(log2(1.0 / ((_3664 * 3.5) + 5.0)) * 0.25);
                                float _3688 = 1.0 - _878;
                                float _3695 = sqrt(1.0 - ((1.0 - (_3688 * _3688)) * (1.0 - (_3687 * _3687))));
                                float _3696 = _3695 * _3695;
                                float _3697 = _3696 * _3696;
                                float _3698 = _3644 - _3116;
                                float _3699 = _3645 - _3117;
                                float _3700 = _3646 - _3118;
                                float _3704 = inversesqrt(dot(vec3(_3698, _3699, _3700), vec3(_3698, _3699, _3700)));
                                float _3708 = dot(vec3(_818, _821, _824), vec3((-0.0) - _3116, (-0.0) - _3117, (-0.0) - _3118));
                                float _4857 = isnan(0.0) ? _3708 : (isnan(_3708) ? 0.0 : max(_3708, 0.0));
                                float _3711 = isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0));
                                float _3712 = dot(vec3(_818, _821, _824), vec3(_3704 * _3698, _3704 * _3699, _3704 * _3700));
                                float _4868 = isnan(0.0) ? _3712 : (isnan(_3712) ? 0.0 : max(_3712, 0.0));
                                float _3715 = isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0));
                                float _3719 = ((_3715 * _3715) * (_3697 + (-1.0))) + 1.0;
                                float _3720 = _3657 * _3696;
                                float _3721 = _3720 * _3720;
                                float _3727 = ((1.0 - _3721) * dot(vec3(_818, _821, _824), vec3(_3644, _3645, _3646))) + _3721;
                                float _4879 = isnan(0.0) ? _3727 : (isnan(_3727) ? 0.0 : max(_3727, 0.0));
                                float _3728 = isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0));
                                float _3729 = 1.0 - _3696;
                                float _3739 = (0.5 / (((_3728 * ((_3711 * _3729) + _3696)) + 9.9999999392252902907785028219223e-09) + (((_3728 * _3729) + _3696) * _3711))) * _3728;
                                float _4890 = isnan(0.0) ? _3739 : (isnan(_3739) ? 0.0 : max(_3739, 0.0));
                                float _3749 = (_3674 * _3651) * (((_3697 * 3.1415927410125732421875) * (isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0)))) / ((_3719 * _3719) * ((_3664 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _3675 * _3519.y;
                                frontier_phi_90_pred_1 = _3675 * _3519.x;
                                frontier_phi_90_pred_2 = _3749 * _3531.z;
                                frontier_phi_90_pred_3 = _3749 * _3531.y;
                                frontier_phi_90_pred_4 = _3749 * _3531.x;
                                frontier_phi_90_pred_5 = _3675 * _3519.z;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _3757 = frontier_phi_90_pred;
                            _3756 = frontier_phi_90_pred_1;
                            _3755 = frontier_phi_90_pred_2;
                            _3754 = frontier_phi_90_pred_3;
                            _3753 = frontier_phi_90_pred_4;
                            _3758 = frontier_phi_90_pred_5;
                            _3461 = _3756 + _3474;
                            _3462 = _3757 + _3475;
                            _3463 = _3758 + _3476;
                            _3458 = _3753 + _3471;
                            _3459 = _3754 + _3472;
                            _3460 = _3755 + _3473;
                            if (_3478 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3471 = _3458;
                                _3472 = _3459;
                                _3473 = _3460;
                                _3474 = _3461;
                                _3475 = _3462;
                                _3476 = _3463;
                                _3477 = _3478;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _3462;
                        frontier_phi_84_pred_1 = _3461;
                        frontier_phi_84_pred_2 = _3460;
                        frontier_phi_84_pred_3 = _3459;
                        frontier_phi_84_pred_4 = _3458;
                        frontier_phi_84_pred_5 = _3463;
                    }
                    _3099 = frontier_phi_84_pred;
                    _3097 = frontier_phi_84_pred_1;
                    _3095 = frontier_phi_84_pred_2;
                    _3093 = frontier_phi_84_pred_3;
                    _3091 = frontier_phi_84_pred_4;
                    _3101 = frontier_phi_84_pred_5;
                    uint _3257 = _3256 + 1u;
                    if (_3257 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3250 = _3091;
                        _3251 = _3093;
                        _3252 = _3095;
                        _3253 = _3097;
                        _3254 = _3099;
                        _3255 = _3101;
                        _3256 = _3257;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _3101;
                frontier_phi_65_66_ladder_1 = _3097;
                frontier_phi_65_66_ladder_2 = _3099;
                frontier_phi_65_66_ladder_3 = _3093;
                frontier_phi_65_66_ladder_4 = _3091;
                frontier_phi_65_66_ladder_5 = _3095;
            }
            else
            {
                frontier_phi_65_66_ladder = _2980;
                frontier_phi_65_66_ladder_1 = _2976;
                frontier_phi_65_66_ladder_2 = _2978;
                frontier_phi_65_66_ladder_3 = _2972;
                frontier_phi_65_66_ladder_4 = _2970;
                frontier_phi_65_66_ladder_5 = _2974;
            }
            _3090 = frontier_phi_65_66_ladder_4;
            _3092 = frontier_phi_65_66_ladder_3;
            _3094 = frontier_phi_65_66_ladder_5;
            _3096 = frontier_phi_65_66_ladder_1;
            _3098 = frontier_phi_65_66_ladder_2;
            _3100 = frontier_phi_65_66_ladder;
        }
        float _3105 = isnan(1.0) ? _862 : (isnan(_862) ? 1.0 : min(_862, 1.0));
        _2903 = (_3105 * _3096) + _2435;
        _2905 = (_3105 * _3098) + _2437;
        _2907 = (_3105 * _3100) + _2439;
        _2909 = ((_3090 * 0.039999999105930328369140625) * _3105) + _2758;
        _2911 = ((_3092 * 0.039999999105930328369140625) * _3105) + _2760;
        _2913 = ((_3094 * 0.039999999105930328369140625) * _3105) + _2762;
    }
    else
    {
        _2903 = _2435;
        _2905 = _2437;
        _2907 = _2439;
        _2909 = _2758;
        _2911 = _2760;
        _2913 = _2762;
    }
    float _4906 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _4917 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    float _4928 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    float _2930 = ((isnan(1.0) ? _4906 : (isnan(_4906) ? 1.0 : min(_4906, 1.0))) * (_2903 + ((isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0))) * _862))) + ((_2909 + ((isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0))) * _1701)) * cbPerFrame._m0[3u].x);
    float _2931 = ((isnan(1.0) ? _4917 : (isnan(_4917) ? 1.0 : min(_4917, 1.0))) * (_2905 + ((isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0))) * _862))) + ((_2911 + ((isnan(0.0) ? _1919 : (isnan(_1919) ? 0.0 : max(_1919, 0.0))) * _1701)) * cbPerFrame._m0[3u].x);
    float _2932 = ((isnan(1.0) ? _4928 : (isnan(_4928) ? 1.0 : min(_4928, 1.0))) * (_2907 + ((isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0))) * _862))) + ((_2913 + ((isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0))) * _1701)) * cbPerFrame._m0[3u].x);
    uint _2933 = _837 + 6u;
    float _2941 = _799 / cbSceneParam._m0[86u].x;
    float _2942 = _800 / cbSceneParam._m0[86u].y;
    vec4 _2956 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2941, _2942, (log2((isnan(cbSceneParam._m0[77u].w) ? _722 : (isnan(_722) ? cbSceneParam._m0[77u].w : min(_722, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2958 = _2956.x;
    float _2959 = _2956.y;
    float _2960 = _2956.z;
    float _2961 = _2956.w;
    float _3032;
    float _3034;
    float _3036;
    float _3038;
    if (_722 > cbSceneParam._m0[78u].w)
    {
        float _2995 = isnan(_722) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _722 : min(cbSceneParam._m0[80u].w, _722));
        float _2996 = _2995 / _722;
        float _3007 = _2996 * _772;
        float _3008 = _773 * _2996;
        float _3009 = (-0.0) - _3008;
        float _3010 = _2996 * _774;
        float _3012 = (cbSceneParam._m0[77u].w * _3009) / _2995;
        float _3013 = _3012 + cbSceneParam._m0[79u].w;
        float _3014 = cbSceneParam._m0[79u].w - _3008;
        float _3020 = sqrt(((_3007 * _3007) + (_3008 * _3008)) + (_3010 * _3010));
        float _3023 = (1.0 - (cbSceneParam._m0[77u].w / _2995)) * _3020;
        float _3028 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3030 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3207;
        if (abs((_3009 - _3012) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3207 = ((((_3013 > 0.0) ? exp2(_3028 * _3013) : (2.0 - exp2(_3030 * _3013))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3023;
        }
        else
        {
            float _3151 = 1.0 / cbSceneParam._m0[80u].x;
            float _3152 = isnan(_3014) ? _3013 : (isnan(_3013) ? _3014 : max(_3013, _3014));
            float _3153 = isnan(_3014) ? _3013 : (isnan(_3013) ? _3014 : min(_3013, _3014));
            float _3162 = isnan(0.0) ? _3152 : (isnan(_3152) ? 0.0 : min(_3152, 0.0));
            float _3163 = isnan(0.0) ? _3153 : (isnan(_3153) ? 0.0 : min(_3153, 0.0));
            _3207 = ((abs(_3020 / _3009) * cbSceneParam._m0[80u].y) * ((((_3162 - _3163) * 2.0) - ((exp2(_3028 * (isnan(0.0) ? _3152 : (isnan(_3152) ? 0.0 : max(_3152, 0.0)))) - exp2(_3028 * (isnan(0.0) ? _3153 : (isnan(_3153) ? 0.0 : max(_3153, 0.0))))) * _3151)) - ((exp2(_3030 * _3162) - exp2(_3030 * _3163)) * _3151))) + (_3023 * cbSceneParam._m0[80u].z);
        }
        vec4 _3209 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2941, _2942, 1.0), 0.0);
        float _3218 = exp2((_3207 * (-1.44269502162933349609375)) * (1.0 - _3209.w));
        float _3219 = log2(_3218);
        float _3235 = log2(_2961);
        _3032 = (exp2(_3235 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3219 * cbSceneParam._m0[78u].x)) * _3209.x) / cbSceneParam._m0[78u].x)) + _2958;
        _3034 = (exp2(_3235 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3219 * cbSceneParam._m0[78u].y)) * _3209.y) / cbSceneParam._m0[78u].y)) + _2959;
        _3036 = (exp2(_3235 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3219 * cbSceneParam._m0[78u].z)) * _3209.z) / cbSceneParam._m0[78u].z)) + _2960;
        _3038 = _3218 * _2961;
    }
    else
    {
        _3032 = _2958;
        _3034 = _2959;
        _3036 = _2960;
        _3038 = _2961;
    }
    bool _3245;
    vec4 _3048;
    vec4 _3070;
    float _3072;
    float _3076;
    float _3077;
    float _3078;
    float _3079;
    bool _3089;
    for (;;)
    {
        _3048 = cbMatDynParam._m0[0u];
        float _3050 = roundEven(_3048.y);
        bool _3051 = _3050 == 3.0;
        float _3052 = log2(_3038);
        float _3059 = exp2(_3052 * cbSceneParam._m0[78u].x) * _2930;
        float _3060 = exp2(_3052 * cbSceneParam._m0[78u].y) * _2931;
        float _3061 = exp2(_3052 * cbSceneParam._m0[78u].z) * _2932;
        float _3068 = _788 + (-0.5);
        _3070 = cbMtdParam._m0[1u];
        _3072 = _3070.y * _3068;
        float _3075 = (_3050 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3076 = _3075 * (_3051 ? _3059 : (_3059 + (cbSceneParam._m0[72u].w * _3032)));
        _3077 = _3075 * (_3051 ? _3060 : (_3060 + (cbSceneParam._m0[72u].w * _3034)));
        _3078 = _3075 * (_3051 ? _3061 : (_3061 + (cbSceneParam._m0[72u].w * _3036)));
        _3079 = _3068 * 0.999000012874603271484375;
        _3089 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3089)
        {
            if ((cbInstanceData._m0[_837 + 7u].x + _3079) < 0.5)
            {
                _3245 = true;
                break;
            }
        }
        uint _3186 = _838 + uint(_3048.w);
        if ((cbInstanceData._m0[_3186].w < 1.0) && ((cbInstanceData._m0[_3186].w + _3079) < 0.5))
        {
            _3245 = true;
            break;
        }
        if ((_3072 + 1.0) < _3070.x)
        {
            _3245 = true;
            break;
        }
        _3245 = false;
        break;
    }
    float _3449;
    if (_3245)
    {
        discard_state = true;
        _3449 = 0.0;
    }
    else
    {
        _3449 = cbInstanceData._m0[_2933].w;
    }
    SV_Target.x = _3076;
    SV_Target.y = _3077;
    SV_Target.z = _3078;
    SV_Target.w = _3449;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2933].w;
    discard_exit();
}


