#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D G_Light_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D G_Light_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _119 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _120 = _119 * NORMAL.x;
    float _121 = _119 * NORMAL.y;
    float _122 = _119 * NORMAL.z;
    vec4 _142 = texture(sampler2D(G_Light_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _148 = _142.x * cbMtdParam._m0[9u].x;
    float _149 = _142.y * cbMtdParam._m0[9u].y;
    float _150 = _142.z * cbMtdParam._m0[9u].z;
    vec4 _172 = texture(sampler2D(G_Light_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _184 = inversesqrt(dot(vec3(_120, _121, _122), vec3(_120, _121, _122)));
    float _391 = isnan(0.0) ? _148 : (isnan(_148) ? 0.0 : max(_148, 0.0));
    float _186 = isnan(1.0) ? _391 : (isnan(_391) ? 1.0 : min(_391, 1.0));
    float _402 = isnan(0.0) ? _149 : (isnan(_149) ? 0.0 : max(_149, 0.0));
    float _187 = isnan(1.0) ? _402 : (isnan(_402) ? 1.0 : min(_402, 1.0));
    float _413 = isnan(0.0) ? _150 : (isnan(_150) ? 0.0 : max(_150, 0.0));
    float _188 = isnan(1.0) ? _413 : (isnan(_413) ? 1.0 : min(_413, 1.0));
    uint _190 = uint(roundEven(NORMAL.w));
    vec4 _195 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _197 = _195.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _263 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _424 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
        float _264 = isnan(1.0) ? _424 : (isnan(_424) ? 1.0 : min(_424, 1.0));
        float _268 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _435 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _435 : (isnan(_435) ? 1.0 : min(_435, 1.0))) - _264)) + _264) < ((_197 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _297;
    uint _217;
    vec4 _222;
    float _223;
    float _224;
    float _225;
    float _229;
    float _230;
    float _231;
    float _234;
    float _238;
    vec4 _242;
    float _244;
    float _245;
    bool _256;
    for (;;)
    {
        _217 = _190 * 13u;
        _222 = cbInstanceData._m0[(_217 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _223 = _222.x;
        _224 = _222.y;
        _225 = _222.z;
        float _226 = (cbMtdParam._m0[0u].x * _186) * _223;
        float _227 = (cbMtdParam._m0[0u].y * _187) * _224;
        float _228 = (cbMtdParam._m0[0u].z * _188) * _225;
        float _446 = isnan(0.0) ? _226 : (isnan(_226) ? 0.0 : max(_226, 0.0));
        _229 = isnan(1.0) ? _446 : (isnan(_446) ? 1.0 : min(_446, 1.0));
        float _457 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
        _230 = isnan(1.0) ? _457 : (isnan(_457) ? 1.0 : min(_457, 1.0));
        float _468 = isnan(0.0) ? _228 : (isnan(_228) ? 0.0 : max(_228, 0.0));
        _231 = isnan(1.0) ? _468 : (isnan(_468) ? 1.0 : min(_468, 1.0));
        _234 = cbMtdParam._m0[2u].w;
        _238 = cbInstanceData._m0[_217 + 6u].w;
        float _239 = _197 + (-0.5);
        _242 = cbMtdParam._m0[1u];
        _244 = _242.y * _239;
        _245 = _239 * 0.999000012874603271484375;
        _256 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_256)
        {
            if ((cbInstanceData._m0[_217 + 7u].x + _245) < 0.5)
            {
                _297 = true;
                break;
            }
        }
        if ((_222.w < 1.0) && ((_222.w + _245) < 0.5))
        {
            _297 = true;
            break;
        }
        if ((_244 + 1.0) < _242.x)
        {
            _297 = true;
            break;
        }
        _297 = false;
        break;
    }
    if (_297)
    {
        discard_state = true;
    }
    float _342;
    float _343;
    float _344;
    float _345;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _342 = _238;
        _343 = _238;
        _344 = _238;
        _345 = _238;
    }
    else
    {
        _342 = _234;
        _343 = 0.0;
        _344 = float(floatBitsToUint(cbInstanceData._m0[_217 + 5u]).x) * 0.0039215688593685626983642578125;
        _345 = TEXCOORD.z;
    }
    SV_Target.x = ((_120 * 0.5) * _184) + 0.500488758087158203125;
    SV_Target.y = ((_121 * 0.5) * _184) + 0.500488758087158203125;
    SV_Target.z = ((_122 * 0.5) * _184) + 0.500488758087158203125;
    SV_Target.w = _343;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _345;
    SV_Target_2.x = _229;
    SV_Target_2.y = _230;
    SV_Target_2.z = _231;
    SV_Target_2.w = _344;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _343;
    SV_Target_4.x = ((((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _172.x) * cbSceneParam._m0[72u].y) * _223) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = ((((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _172.y) * cbSceneParam._m0[72u].y) * _224) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = ((((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _172.z) * cbSceneParam._m0[72u].y) * _225) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _342;
    discard_exit();
}


