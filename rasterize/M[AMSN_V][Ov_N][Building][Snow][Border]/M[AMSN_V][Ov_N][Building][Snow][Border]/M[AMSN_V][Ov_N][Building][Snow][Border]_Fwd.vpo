#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_1;
layout(location = 7) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out float TEXCOORD_4;
layout(location = 7) out vec4 TEXCOORD_5;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _197 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _200 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _210 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _211 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _212 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _222 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _223 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _224 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _230 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _232 = texelFetch(g_InstanceIndexBuffer, int(_230));
    uint _233 = _232.x;
    uint _235 = _233 * 13u;
    uint _243 = (floatBitsToUint(cbInstanceData._m0[_235 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _250 = _243 + 1u;
    uint _257 = _243 + 2u;
    precise float _264 = POSITION.x * cbObjMatrix._m0[_243].x;
    precise float _265 = POSITION.y * cbObjMatrix._m0[_243].y;
    precise float _266 = _265 + _264;
    precise float _267 = POSITION.z * cbObjMatrix._m0[_243].z;
    precise float _268 = _267 + _266;
    precise float _269 = 1.0 * cbObjMatrix._m0[_243].w;
    precise float _271 = _269 + _268;
    precise float _272 = POSITION.x * cbObjMatrix._m0[_250].x;
    precise float _273 = POSITION.y * cbObjMatrix._m0[_250].y;
    precise float _274 = _273 + _272;
    precise float _275 = POSITION.z * cbObjMatrix._m0[_250].z;
    precise float _276 = _275 + _274;
    precise float _277 = 1.0 * cbObjMatrix._m0[_250].w;
    precise float _278 = _277 + _276;
    precise float _279 = POSITION.x * cbObjMatrix._m0[_257].x;
    precise float _280 = POSITION.y * cbObjMatrix._m0[_257].y;
    precise float _281 = _280 + _279;
    precise float _282 = POSITION.z * cbObjMatrix._m0[_257].z;
    precise float _283 = _282 + _281;
    precise float _284 = 1.0 * cbObjMatrix._m0[_257].w;
    precise float _285 = _284 + _283;
    precise float _320 = _271 - cbSceneParam._m0[3u].x;
    precise float _321 = _278 - cbSceneParam._m0[3u].y;
    precise float _322 = _285 - cbSceneParam._m0[3u].z;
    precise float _350 = _320 * cbSceneParam._m0[24u].x;
    precise float _351 = _321 * cbSceneParam._m0[24u].y;
    precise float _352 = _351 + _350;
    precise float _353 = _322 * cbSceneParam._m0[24u].z;
    precise float _354 = _353 + _352;
    precise float _355 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _356 = _355 + _354;
    precise float _357 = _320 * cbSceneParam._m0[25u].x;
    precise float _358 = _321 * cbSceneParam._m0[25u].y;
    precise float _359 = _358 + _357;
    precise float _360 = _322 * cbSceneParam._m0[25u].z;
    precise float _361 = _360 + _359;
    precise float _362 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _363 = _362 + _361;
    precise float _364 = _320 * cbSceneParam._m0[26u].x;
    precise float _365 = _321 * cbSceneParam._m0[26u].y;
    precise float _366 = _365 + _364;
    precise float _367 = _322 * cbSceneParam._m0[26u].z;
    precise float _368 = _367 + _366;
    precise float _369 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _370 = _369 + _368;
    precise float _371 = _320 * cbSceneParam._m0[27u].x;
    precise float _372 = _321 * cbSceneParam._m0[27u].y;
    precise float _373 = _372 + _371;
    precise float _374 = _322 * cbSceneParam._m0[27u].z;
    precise float _375 = _374 + _373;
    precise float _376 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _377 = _376 + _375;
    gl_Position.x = _356;
    gl_Position.y = _363;
    gl_Position.z = _370;
    gl_Position.w = _377;
    POSITION_1.x = _356;
    POSITION_1.y = _363;
    POSITION_1.z = _370;
    POSITION_1.w = _377;
    NORMAL_1.x = fma(_200, cbObjMatrix._m0[_243].z, fma(_199, cbObjMatrix._m0[_243].y, cbObjMatrix._m0[_243].x * _197));
    NORMAL_1.y = fma(_200, cbObjMatrix._m0[_250].z, fma(_199, cbObjMatrix._m0[_250].y, cbObjMatrix._m0[_250].x * _197));
    NORMAL_1.z = fma(_200, cbObjMatrix._m0[_257].z, fma(_199, cbObjMatrix._m0[_257].y, cbObjMatrix._m0[_257].x * _197));
    NORMAL_1.w = float(_233);
    TANGENT_1.x = fma(_212, cbObjMatrix._m0[_243].z, fma(_211, cbObjMatrix._m0[_243].y, cbObjMatrix._m0[_243].x * _210));
    TANGENT_1.y = fma(_212, cbObjMatrix._m0[_250].z, fma(_211, cbObjMatrix._m0[_250].y, cbObjMatrix._m0[_250].x * _210));
    TANGENT_1.z = fma(_212, cbObjMatrix._m0[_257].z, fma(_211, cbObjMatrix._m0[_257].y, cbObjMatrix._m0[_257].x * _210));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_224, cbObjMatrix._m0[_243].z, fma(_223, cbObjMatrix._m0[_243].y, cbObjMatrix._m0[_243].x * _222));
    TANGENT_2_1.y = fma(_224, cbObjMatrix._m0[_250].z, fma(_223, cbObjMatrix._m0[_250].y, cbObjMatrix._m0[_250].x * _222));
    TANGENT_2_1.z = fma(_224, cbObjMatrix._m0[_257].z, fma(_223, cbObjMatrix._m0[_257].y, cbObjMatrix._m0[_257].x * _222));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_2.x;
    TEXCOORD_5.w = TEXCOORD_2.y;
    gl_ClipDistance[0u] = dot(vec4(_356, _363, _370, _377), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_356, _363, _370, _377), vec4(cbInstanceData._m0[_235 + 3u]));
}


