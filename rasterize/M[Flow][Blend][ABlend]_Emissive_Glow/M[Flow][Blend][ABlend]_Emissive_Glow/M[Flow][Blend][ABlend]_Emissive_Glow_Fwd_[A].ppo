#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 4) uniform texture2D M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 5) uniform texture2D M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 6) uniform texture2D M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 7) uniform texture2D M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in float TEXCOORD_6;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1216;
float _1217;
float _1218;
float _1219;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _167 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _168 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _169 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _175 = inversesqrt(dot(vec3(_167, _168, _169), vec3(_167, _168, _169)));
    float _176 = _175 * _167;
    float _177 = _175 * _168;
    float _178 = _175 * _169;
    float _182 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _183 = _182 * NORMAL.x;
    float _184 = _182 * NORMAL.y;
    float _185 = _182 * NORMAL.z;
    float _189 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _190 = _189 * TANGENT.x;
    float _191 = _189 * TANGENT.y;
    float _192 = _189 * TANGENT.z;
    float _197;
    float _198;
    float _199;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _197 = (-0.0) - _183;
        _198 = (-0.0) - _184;
        _199 = (-0.0) - _185;
    }
    else
    {
        _197 = _183;
        _198 = _184;
        _199 = _185;
    }
    float _212 = cbMtdParam._m0[18u].z * cbPerFrame._m0[22u].x;
    float _219 = TEXCOORD_4.y - ((cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x) * 0.550000011920928955078125);
    float _265 = ((_219 * cbMtdParam._m0[15u].y) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w;
    float _303 = cbMtdParam._m0[15u].w + cbPerFrame._m0[22u].x;
    float _306 = ((cbMtdParam._m0[19u].z * cbMtdParam._m0[16u].x) * _303) + TEXCOORD_4.x;
    float _307 = ((cbMtdParam._m0[19u].w * cbMtdParam._m0[16u].x) * _303) + TEXCOORD_4.y;
    float _315 = _303 * cbMtdParam._m0[16u].x;
    vec4 _335 = texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * (((cbMtdParam._m0[20u].x * cbMtdParam._m0[16u].x) * _303) + TEXCOORD_4.x)) + cbTextureTilingScale._m0[3u].z, (((_315 * cbMtdParam._m0[20u].y) + TEXCOORD_4.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _342 = (_335.x * 2.0) + (-1.0);
    float _344 = (_335.y * 2.0) + (-1.0);
    float _348 = 1.0 - dot(vec2(_342, _344), vec2(_342, _344));
    float _1228 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _351 = sqrt(isnan(1.0) ? _1228 : (isnan(_1228) ? 1.0 : min(_1228, 1.0)));
    float _354 = fma(_351, _197, fma(_344, _190, _342 * _176));
    float _357 = fma(_351, _198, fma(_344, _191, _342 * _177));
    float _360 = fma(_351, _199, fma(_344, _192, _342 * _178));
    float _364 = inversesqrt(dot(vec3(_354, _357, _360), vec3(_354, _357, _360)));
    float _365 = cbPerFrame._m0[22u].x * 2.0;
    float _366 = _365 * cbMtdParam._m0[15u].x;
    float _370 = ((_354 * 0.5) * _364) + (-0.25);
    float _374 = ((_357 * 0.5) * _364) + (-0.25);
    float _375 = _374 * cbMtdParam._m0[14u].w;
    float _377 = (-0.0) - (cbMtdParam._m0[14u].w * _370);
    float _378 = fract(_366);
    float _380 = fract(_366 + 0.5);
    float _391 = abs((_378 * 2.0) + (-1.0));
    vec4 _408 = texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_378 * _377) + _306) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_375 * _378) + _307) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _410 = _408.x;
    float _411 = _408.y;
    float _412 = _408.z;
    vec4 _413 = texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_380 * _377) + _306) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_375 * _380) + _307) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _431 = cbMtdParam._m0[17u].w * TEXCOORD_4.w;
    float _445 = (_315 * cbMtdParam._m0[21u].x) + TEXCOORD_4.x;
    float _446 = (_315 * cbMtdParam._m0[21u].y) + TEXCOORD_4.y;
    float _449 = _365 * cbMtdParam._m0[16u].x;
    float _450 = _449 * cbMtdParam._m0[14u].y;
    float _451 = _374 * cbMtdParam._m0[16u].w;
    float _453 = (-0.0) - (cbMtdParam._m0[16u].w * _370);
    float _454 = fract(_450);
    float _456 = fract(_450 + 0.5);
    float _467 = abs((_454 * 2.0) + (-1.0));
    vec4 _483 = texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_454 * _453) + _445) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_451 * _454) + _446) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _485 = _483.x;
    float _486 = _483.y;
    float _487 = _483.z;
    vec4 _488 = texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_456 * _453) + _445) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_451 * _456) + _446) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _515 = (_315 * cbMtdParam._m0[18u].x) + TEXCOORD_4.x;
    float _516 = (_315 * cbMtdParam._m0[18u].y) + TEXCOORD_4.y;
    float _520 = _365 * (cbMtdParam._m0[16u].y * cbMtdParam._m0[16u].x);
    float _521 = _374 * cbMtdParam._m0[16u].z;
    float _523 = (-0.0) - (cbMtdParam._m0[16u].z * _370);
    float _524 = fract(_520);
    float _526 = fract(_520 + 0.5);
    float _527 = _524 * _523;
    float _528 = _521 * _524;
    float _531 = _526 * _523;
    float _532 = _521 * _526;
    float _537 = abs((_524 * 2.0) + (-1.0));
    vec4 _553 = texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2(((_527 + _515) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_528 + _516) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _555 = _553.x;
    float _556 = _553.y;
    float _557 = _553.z;
    vec4 _558 = texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2(((_531 + _515) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_532 + _516) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _588 = (_315 * cbMtdParam._m0[19u].x) + TEXCOORD_4.x;
    float _589 = (_315 * cbMtdParam._m0[19u].y) + TEXCOORD_4.y;
    vec4 _610 = texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2(((_527 + _588) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((_528 + _589) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _612 = _610.x;
    float _613 = _610.y;
    float _614 = _610.z;
    vec4 _615 = texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2(((_531 + _588) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((_532 + _589) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _636 = ((((((_558.x - _555) * _537) + _555) * cbMtdParam._m0[10u].x) + ((((_488.x - _485) * _467) + _485) * cbMtdParam._m0[9u].x)) + ((((_615.x - _612) * _537) + _612) * cbMtdParam._m0[12u].x)) * cbMtdParam._m0[14u].x;
    float _637 = ((((((_558.y - _556) * _537) + _556) * cbMtdParam._m0[10u].y) + ((((_488.y - _486) * _467) + _486) * cbMtdParam._m0[9u].y)) + ((((_615.y - _613) * _537) + _613) * cbMtdParam._m0[12u].y)) * cbMtdParam._m0[14u].x;
    float _638 = ((((((_558.z - _557) * _537) + _557) * cbMtdParam._m0[10u].z) + ((((_488.z - _487) * _467) + _487) * cbMtdParam._m0[9u].z)) + ((((_615.z - _614) * _537) + _614) * cbMtdParam._m0[12u].z)) * cbMtdParam._m0[14u].x;
    float _649 = (_315 * cbMtdParam._m0[20u].z) + TEXCOORD_4.x;
    float _650 = (_315 * cbMtdParam._m0[20u].w) + TEXCOORD_4.y;
    vec4 _671 = texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * ((_315 * cbMtdParam._m0[21u].z) + TEXCOORD_4.x)) + cbTextureTilingScale._m0[4u].z, (((_315 * cbMtdParam._m0[21u].w) + TEXCOORD_4.y) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _677 = (_671.x * 2.0) + (-1.0);
    float _678 = (_671.y * 2.0) + (-1.0);
    float _682 = 1.0 - dot(vec2(_677, _678), vec2(_677, _678));
    float _1239 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
    float _684 = sqrt(isnan(1.0) ? _1239 : (isnan(_1239) ? 1.0 : min(_1239, 1.0)));
    float _687 = fma(_684, _197, fma(_678, _190, _677 * _176));
    float _690 = fma(_684, _198, fma(_678, _191, _677 * _177));
    float _693 = fma(_684, _199, fma(_678, _192, _677 * _178));
    float _697 = inversesqrt(dot(vec3(_687, _690, _693), vec3(_687, _690, _693)));
    float _698 = _449 * cbMtdParam._m0[17u].y;
    float _705 = (((_690 * 0.5) * _697) + (-0.25)) * cbMtdParam._m0[17u].x;
    float _707 = (-0.0) - (cbMtdParam._m0[17u].x * (((_687 * 0.5) * _697) + (-0.25)));
    float _708 = fract(_698);
    float _710 = fract(_698 + 0.5);
    float _721 = abs((_708 * 2.0) + (-1.0));
    vec4 _737 = texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_708 * _707) + _649) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_705 * _708) + _650) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _739 = _737.x;
    float _740 = _737.y;
    float _741 = _737.z;
    vec4 _742 = texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_710 * _707) + _649) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_705 * _710) + _650) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _760 = cbMtdParam._m0[14u].z * TEXCOORD_4.z;
    float _767 = (_760 * (((((_742.x - _739) * _721) + _739) * cbMtdParam._m0[11u].x) - _636)) + _636;
    float _768 = (_760 * (((((_742.y - _740) * _721) + _740) * cbMtdParam._m0[11u].y) - _637)) + _637;
    float _769 = (_760 * (((((_742.z - _741) * _721) + _741) * cbMtdParam._m0[11u].z) - _638)) + _638;
    float _776 = (_431 * (((((_413.x - _410) * _391) + _410) * cbMtdParam._m0[13u].x) - _767)) + _767;
    float _779 = ((cbMtdParam._m0[17u].z * TEXCOORD.w) * cbMtdParam._m0[15u].z) * (((texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].x * cbPerFrame._m0[22u].x) + TEXCOORD_4.x) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((cbMtdParam._m0[22u].y * cbPerFrame._m0[22u].x) + TEXCOORD_4.y) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w)).z - (texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2(((cbTextureTilingScale._m0[7u].x * cbMtdParam._m0[15u].y) * ((_212 * 3.2999999523162841796875) + TEXCOORD_4.x)) + cbTextureTilingScale._m0[7u].z, ((cbTextureTilingScale._m0[7u].y * cbMtdParam._m0[15u].y) * _219) + cbTextureTilingScale._m0[7u].w)).y * 0.20000000298023223876953125)) + (texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2(((((_212 * 6.900000095367431640625) + TEXCOORD_4.x) * cbMtdParam._m0[15u].y) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, _265)).x * 0.0500000007450580596923828125)) + (texture(sampler2D(M_Flow_Blend_ABlend_Emissive_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2(((((_212 * 16.0) + TEXCOORD_4.x) * cbMtdParam._m0[15u].y) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, _265)).x * 0.100000001490116119384765625));
    float _780 = _779 * _776;
    float _1250 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _802 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _843 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _853 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _843);
    float _854 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _843);
    float _855 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _843);
    vec4 _860 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _862 = _860.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _948 = sqrt(((_853 * _853) + (_854 * _854)) + (_855 * _855));
        float _954 = (cbMatDynParam._m0[5u].x * _948) + cbMatDynParam._m0[5u].y;
        float _1261 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
        float _955 = isnan(1.0) ? _1261 : (isnan(_1261) ? 1.0 : min(_1261, 1.0));
        float _959 = (cbMatDynParam._m0[5u].z * _948) + cbMatDynParam._m0[5u].w;
        float _1272 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1272 : (isnan(_1272) ? 1.0 : min(_1272, 1.0))) - _955)) + _955) < ((_862 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _879 = uint(roundEven(NORMAL.w)) * 13u;
    uint _880 = _879 + 9u;
    uint _881 = _880 + uint(cbMatDynParam._m0[0u].w);
    float _887 = cbInstanceData._m0[_881].x * (_776 + TEXCOORD.x);
    float _888 = cbInstanceData._m0[_881].y * ((_768 + TEXCOORD.y) + (_431 * (((((_413.y - _411) * _391) + _411) * cbMtdParam._m0[13u].y) - _768)));
    float _889 = cbInstanceData._m0[_881].z * ((_769 + TEXCOORD.z) + (_431 * (((((_413.z - _412) * _391) + _412) * cbMtdParam._m0[13u].z) - _769)));
    float _890 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
    float _891 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _892 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    float _898 = cbMtdParam._m0[2u].x * _887;
    float _899 = cbMtdParam._m0[2u].y * _888;
    float _900 = cbMtdParam._m0[2u].z * _889;
    float _1298 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _902 = isnan(1.0) ? _1298 : (isnan(_1298) ? 1.0 : min(_1298, 1.0));
    float _907 = cbInstanceData._m0[_879 + 6u].w * (isnan(1.0) ? _1250 : (isnan(_1250) ? 1.0 : min(_1250, 1.0)));
    float _913 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _914 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _929 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_913, _914, (log2((isnan(cbSceneParam._m0[77u].w) ? _802 : (isnan(_802) ? cbSceneParam._m0[77u].w : min(_802, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _931 = _929.x;
    float _932 = _929.y;
    float _933 = _929.z;
    float _934 = _929.w;
    float _1014;
    float _1016;
    float _1018;
    float _1020;
    if (_802 > cbSceneParam._m0[78u].w)
    {
        float _976 = isnan(_802) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _802 : min(cbSceneParam._m0[80u].w, _802));
        float _977 = _976 / _802;
        float _988 = _977 * _853;
        float _989 = _854 * _977;
        float _990 = (-0.0) - _989;
        float _991 = _977 * _855;
        float _993 = (cbSceneParam._m0[77u].w * _990) / _976;
        float _994 = _993 + cbSceneParam._m0[79u].w;
        float _995 = cbSceneParam._m0[79u].w - _989;
        float _1001 = sqrt(((_988 * _988) + (_989 * _989)) + (_991 * _991));
        float _1004 = (1.0 - (cbSceneParam._m0[77u].w / _976)) * _1001;
        float _1010 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1012 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1142;
        if (abs((_990 - _993) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1142 = ((((_994 > 0.0) ? exp2(_1010 * _994) : (2.0 - exp2(_1012 * _994))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1004;
        }
        else
        {
            float _1099 = 1.0 / cbSceneParam._m0[80u].x;
            float _1100 = isnan(_995) ? _994 : (isnan(_994) ? _995 : max(_994, _995));
            float _1101 = isnan(_995) ? _994 : (isnan(_994) ? _995 : min(_994, _995));
            float _1110 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : min(_1100, 0.0));
            float _1111 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : min(_1101, 0.0));
            _1142 = ((abs(_1001 / _990) * cbSceneParam._m0[80u].y) * ((((_1110 - _1111) * 2.0) - ((exp2(_1010 * (isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0)))) - exp2(_1010 * (isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0))))) * _1099)) - ((exp2(_1012 * _1110) - exp2(_1012 * _1111)) * _1099))) + (_1004 * cbSceneParam._m0[80u].z);
        }
        vec4 _1144 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_913, _914, 1.0), 0.0);
        float _1153 = exp2((_1142 * (-1.44269502162933349609375)) * (1.0 - _1144.w));
        float _1154 = log2(_1153);
        float _1170 = log2(_934);
        _1014 = (exp2(_1170 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1154 * cbSceneParam._m0[78u].x)) * _1144.x) / cbSceneParam._m0[78u].x)) + _931;
        _1016 = (exp2(_1170 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1154 * cbSceneParam._m0[78u].y)) * _1144.y) / cbSceneParam._m0[78u].y)) + _932;
        _1018 = (exp2(_1170 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1154 * cbSceneParam._m0[78u].z)) * _1144.z) / cbSceneParam._m0[78u].z)) + _933;
        _1020 = _1153 * _934;
    }
    else
    {
        _1014 = _931;
        _1016 = _932;
        _1018 = _933;
        _1020 = _934;
    }
    bool _1180;
    vec4 _1030;
    vec4 _1054;
    float _1056;
    float _1060;
    float _1061;
    float _1062;
    float _1065;
    float _1068;
    float _1071;
    float _1072;
    bool _1083;
    for (;;)
    {
        _1030 = cbMatDynParam._m0[0u];
        float _1032 = roundEven(_1030.y);
        bool _1033 = _1032 == 3.0;
        float _1035 = log2(_1020);
        float _1039 = exp2(_1035 * cbSceneParam._m0[78u].x);
        float _1040 = exp2(_1035 * cbSceneParam._m0[78u].y);
        float _1041 = exp2(_1035 * cbSceneParam._m0[78u].z);
        float _1042 = _1039 * _890;
        float _1043 = _1040 * _891;
        float _1044 = _1041 * _892;
        float _1051 = _862 + (-0.5);
        _1054 = cbMtdParam._m0[1u];
        _1056 = _1054.y * _1051;
        float _1059 = (_1032 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1060 = _1059 * (_1033 ? _1042 : (_1042 + (cbSceneParam._m0[72u].w * _1014)));
        _1061 = _1059 * (_1033 ? _1043 : (_1043 + (cbSceneParam._m0[72u].w * _1016)));
        _1062 = _1059 * (_1033 ? _1044 : (_1044 + (cbSceneParam._m0[72u].w * _1018)));
        _1065 = ((_898 * _902) * _1039) * _1059;
        _1068 = ((_899 * _902) * _1040) * _1059;
        _1071 = ((_900 * _902) * _1041) * _1059;
        _1072 = _1051 * 0.999000012874603271484375;
        _1083 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1083)
        {
            if ((cbInstanceData._m0[_879 + 7u].x + _1072) < 0.5)
            {
                _1180 = true;
                break;
            }
        }
        uint _1134 = _880 + uint(_1030.w);
        if ((cbInstanceData._m0[_1134].w < 1.0) && ((cbInstanceData._m0[_1134].w + _1072) < 0.5))
        {
            _1180 = true;
            break;
        }
        if ((_1056 + 1.0) < _1054.x)
        {
            _1180 = true;
            break;
        }
        _1180 = false;
        break;
    }
    float _1185;
    if (_1180)
    {
        discard_state = true;
        _1185 = 0.0;
    }
    else
    {
        _1185 = _907;
    }
    SV_Target.x = _1060;
    SV_Target.y = _1061;
    SV_Target.z = _1062;
    SV_Target.w = _1185;
    SV_Target_1.x = _1065;
    SV_Target_1.y = _1068;
    SV_Target_1.z = _1071;
    SV_Target_1.w = _907;
    discard_exit();
}


