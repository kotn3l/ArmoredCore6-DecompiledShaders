#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 1) uniform texture2D S_PC_LG_M_5510_Booster_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out float TEXCOORD_1_1;
layout(location = 4, component = 1) out float TEXCOORD_2_1;
layout(location = 5) out vec4 TEXCOORD_4;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 4, component = 2) out float TEXCOORD_10;
layout(location = 4, component = 3) out float TEXCOORD_11;
layout(location = 7) out float TEXCOORD_12;
layout(location = 8) out vec4 TEXCOORD_15;
layout(location = 9) out vec4 TEXCOORD_16;
layout(location = 7, component = 1) out vec3 TEXCOORD_17;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_2_1 = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_15.x = 0.0;
    TEXCOORD_15.y = 0.0;
    TEXCOORD_15.z = 0.0;
    TEXCOORD_15.w = 0.0;
    TEXCOORD_16.x = 0.0;
    TEXCOORD_16.y = 0.0;
    TEXCOORD_16.z = 0.0;
    TEXCOORD_16.w = 0.0;
    TEXCOORD_17.x = 0.0;
    TEXCOORD_17.y = 0.0;
    TEXCOORD_17.z = 0.0;
    precise float _217 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _219 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _224 = _217 * cbTexScroll._m0[0u].x;
    precise float _225 = _219 * cbTexScroll._m0[0u].y;
    precise float _228 = _224 + cbTexScroll._m0[0u].z;
    precise float _229 = _225 + cbTexScroll._m0[0u].w;
    precise float _233 = float(NORMAL.x) + (-127.0);
    precise float _235 = float(NORMAL.y) + (-127.0);
    precise float _236 = float(NORMAL.z) + (-127.0);
    precise float _237 = _233 * 0.0078740157186985015869140625;
    precise float _239 = _235 * 0.0078740157186985015869140625;
    precise float _240 = _236 * 0.0078740157186985015869140625;
    float _249 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _250 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _251 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _261 = cbPerFrame._m0[22u].x * cbMtdParam._m0[15u].x;
    precise float _267 = _261 * cbMtdParam._m0[20u].x;
    precise float _268 = _261 * cbMtdParam._m0[20u].y;
    precise float _269 = _228 + _267;
    precise float _270 = _229 + _268;
    precise float _277 = _269 * cbTextureTilingScale._m0[1u].x;
    precise float _278 = cbTextureTilingScale._m0[1u].y * _270;
    precise float _279 = cbTextureTilingScale._m0[1u].z + _277;
    precise float _280 = cbTextureTilingScale._m0[1u].w + _278;
    precise float _291 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_1, SS_DiffuseMap), vec2(_279, _280), 0.0).x * cbMtdParam._m0[17u].x;
    precise float _297 = _237 * cbMtdParam._m0[23u].x;
    precise float _298 = _239 * cbMtdParam._m0[23u].y;
    precise float _299 = _240 * cbMtdParam._m0[23u].z;
    precise float _300 = _291 * _297;
    precise float _301 = _291 * _298;
    precise float _302 = _291 * _299;
    precise float _303 = _297 + _300;
    precise float _304 = _298 + _301;
    precise float _305 = _299 + _302;
    precise float _306 = _297 * 0.0;
    precise float _307 = _298 * 0.0;
    precise float _308 = _299 * 0.0;
    precise float _309 = _306 + _303;
    precise float _310 = _307 + _304;
    precise float _311 = _308 + _305;
    precise float _312 = TEXCOORD_3.x * _309;
    precise float _313 = TEXCOORD_3.y * _310;
    precise float _314 = TEXCOORD_3.z * _311;
    precise float _315 = POSITION.x + _312;
    precise float _316 = POSITION.y + _313;
    precise float _317 = POSITION.z + _314;
    uint _322 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _324 = texelFetch(g_InstanceIndexBuffer, int(_322));
    uint _325 = _324.x;
    precise float _326 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _331 = isnan(_326) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _326 : max(0.001000000047497451305389404296875, _326));
    precise float _333 = BLENDWEIGHT.x / _331;
    precise float _334 = BLENDWEIGHT.y / _331;
    precise float _335 = BLENDWEIGHT.z / _331;
    precise float _336 = BLENDWEIGHT.w / _331;
    uvec4 _343 = floatBitsToUint(cbInstanceData._m0[(_325 * 13u) + 4u]);
    uint _344 = _343.x;
    uint _346 = (_344 + uint(float(BLENDINDICES.x))) * 3u;
    uint _353 = _346 + 1u;
    uint _360 = _346 + 2u;
    precise float _367 = _333 * cbObjMatrix._m0[_346].x;
    precise float _368 = _333 * cbObjMatrix._m0[_353].x;
    precise float _369 = _333 * cbObjMatrix._m0[_360].x;
    precise float _370 = _333 * cbObjMatrix._m0[_346].y;
    precise float _371 = _333 * cbObjMatrix._m0[_353].y;
    precise float _372 = _333 * cbObjMatrix._m0[_360].y;
    precise float _373 = _333 * cbObjMatrix._m0[_346].z;
    precise float _374 = _333 * cbObjMatrix._m0[_353].z;
    precise float _375 = _333 * cbObjMatrix._m0[_360].z;
    precise float _376 = _333 * cbObjMatrix._m0[_346].w;
    precise float _377 = _333 * cbObjMatrix._m0[_353].w;
    precise float _378 = _333 * cbObjMatrix._m0[_360].w;
    uint _381 = (_344 + uint(float(BLENDINDICES.y))) * 3u;
    uint _388 = _381 + 1u;
    uint _395 = _381 + 2u;
    precise float _402 = _334 * cbObjMatrix._m0[_381].x;
    precise float _403 = _334 * cbObjMatrix._m0[_388].x;
    precise float _404 = _334 * cbObjMatrix._m0[_395].x;
    precise float _405 = _334 * cbObjMatrix._m0[_381].y;
    precise float _406 = _334 * cbObjMatrix._m0[_388].y;
    precise float _407 = _334 * cbObjMatrix._m0[_395].y;
    precise float _408 = _334 * cbObjMatrix._m0[_381].z;
    precise float _409 = _334 * cbObjMatrix._m0[_388].z;
    precise float _410 = _334 * cbObjMatrix._m0[_395].z;
    precise float _411 = _334 * cbObjMatrix._m0[_381].w;
    precise float _412 = _334 * cbObjMatrix._m0[_388].w;
    precise float _413 = _334 * cbObjMatrix._m0[_395].w;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    uint _428 = (_344 + uint(float(BLENDINDICES.z))) * 3u;
    uint _435 = _428 + 1u;
    uint _442 = _428 + 2u;
    precise float _449 = _335 * cbObjMatrix._m0[_428].x;
    precise float _450 = _335 * cbObjMatrix._m0[_435].x;
    precise float _451 = _335 * cbObjMatrix._m0[_442].x;
    precise float _452 = _335 * cbObjMatrix._m0[_428].y;
    precise float _453 = _335 * cbObjMatrix._m0[_435].y;
    precise float _454 = _335 * cbObjMatrix._m0[_442].y;
    precise float _455 = _335 * cbObjMatrix._m0[_428].z;
    precise float _456 = _335 * cbObjMatrix._m0[_435].z;
    precise float _457 = _335 * cbObjMatrix._m0[_442].z;
    precise float _458 = _335 * cbObjMatrix._m0[_428].w;
    precise float _459 = _335 * cbObjMatrix._m0[_435].w;
    precise float _460 = _335 * cbObjMatrix._m0[_442].w;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    uint _475 = (_344 + uint(float(BLENDINDICES.w))) * 3u;
    uint _482 = _475 + 1u;
    uint _489 = _475 + 2u;
    precise float _496 = _336 * cbObjMatrix._m0[_475].x;
    precise float _497 = _336 * cbObjMatrix._m0[_482].x;
    precise float _498 = _336 * cbObjMatrix._m0[_489].x;
    precise float _499 = _336 * cbObjMatrix._m0[_475].y;
    precise float _500 = _336 * cbObjMatrix._m0[_482].y;
    precise float _501 = _336 * cbObjMatrix._m0[_489].y;
    precise float _502 = _336 * cbObjMatrix._m0[_475].z;
    precise float _503 = _336 * cbObjMatrix._m0[_482].z;
    precise float _504 = _336 * cbObjMatrix._m0[_489].z;
    precise float _505 = _336 * cbObjMatrix._m0[_475].w;
    precise float _506 = _336 * cbObjMatrix._m0[_482].w;
    precise float _507 = _336 * cbObjMatrix._m0[_489].w;
    precise float _508 = _461 + _496;
    precise float _509 = _462 + _497;
    precise float _510 = _463 + _498;
    precise float _511 = _464 + _499;
    precise float _512 = _465 + _500;
    precise float _513 = _466 + _501;
    precise float _514 = _467 + _502;
    precise float _515 = _468 + _503;
    precise float _516 = _469 + _504;
    precise float _517 = _470 + _505;
    precise float _518 = _471 + _506;
    precise float _519 = _472 + _507;
    precise float _520 = _315 * _508;
    precise float _521 = _316 * _511;
    precise float _522 = _521 + _520;
    precise float _523 = _317 * _514;
    precise float _524 = _523 + _522;
    precise float _525 = 1.0 * _517;
    precise float _526 = _525 + _524;
    precise float _527 = _315 * _509;
    precise float _528 = _316 * _512;
    precise float _529 = _528 + _527;
    precise float _530 = _317 * _515;
    precise float _531 = _530 + _529;
    precise float _532 = 1.0 * _518;
    precise float _533 = _532 + _531;
    precise float _534 = _315 * _510;
    precise float _535 = _316 * _513;
    precise float _536 = _535 + _534;
    precise float _537 = _317 * _516;
    precise float _538 = _537 + _536;
    precise float _539 = 1.0 * _519;
    precise float _540 = _539 + _538;
    float _711 = fma(_240, _514, fma(_239, _511, _508 * _237));
    float _714 = fma(_240, _515, fma(_239, _512, _509 * _237));
    float _717 = fma(_240, _516, fma(_239, _513, _510 * _237));
    precise float _728 = _526 + 0.0;
    precise float _729 = _533 + 0.0;
    precise float _730 = _540 + 0.0;
    float _737 = (((((cbPrevObjMatrix._m0[_381].w * _334) + (cbPrevObjMatrix._m0[_346].w * _333)) + (cbPrevObjMatrix._m0[_428].w * _335)) + (cbPrevObjMatrix._m0[_475].w * _336)) + fma(_317, (((cbPrevObjMatrix._m0[_381].z * _334) + (cbPrevObjMatrix._m0[_346].z * _333)) + (cbPrevObjMatrix._m0[_428].z * _335)) + (cbPrevObjMatrix._m0[_475].z * _336), fma(_316, (((cbPrevObjMatrix._m0[_381].y * _334) + (cbPrevObjMatrix._m0[_346].y * _333)) + (cbPrevObjMatrix._m0[_428].y * _335)) + (cbPrevObjMatrix._m0[_475].y * _336), ((((cbPrevObjMatrix._m0[_381].x * _334) + (cbPrevObjMatrix._m0[_346].x * _333)) + (cbPrevObjMatrix._m0[_428].x * _335)) + (cbPrevObjMatrix._m0[_475].x * _336)) * _315))) - cbSceneParam._m0[28u].x;
    float _738 = (((((cbPrevObjMatrix._m0[_388].w * _334) + (cbPrevObjMatrix._m0[_353].w * _333)) + (cbPrevObjMatrix._m0[_435].w * _335)) + (cbPrevObjMatrix._m0[_482].w * _336)) + fma(_317, (((cbPrevObjMatrix._m0[_388].z * _334) + (cbPrevObjMatrix._m0[_353].z * _333)) + (cbPrevObjMatrix._m0[_435].z * _335)) + (cbPrevObjMatrix._m0[_482].z * _336), fma(_316, (((cbPrevObjMatrix._m0[_388].y * _334) + (cbPrevObjMatrix._m0[_353].y * _333)) + (cbPrevObjMatrix._m0[_435].y * _335)) + (cbPrevObjMatrix._m0[_482].y * _336), ((((cbPrevObjMatrix._m0[_388].x * _334) + (cbPrevObjMatrix._m0[_353].x * _333)) + (cbPrevObjMatrix._m0[_435].x * _335)) + (cbPrevObjMatrix._m0[_482].x * _336)) * _315))) - cbSceneParam._m0[28u].y;
    float _739 = (((((cbPrevObjMatrix._m0[_395].w * _334) + (cbPrevObjMatrix._m0[_360].w * _333)) + (cbPrevObjMatrix._m0[_442].w * _335)) + (cbPrevObjMatrix._m0[_489].w * _336)) + fma(_317, (((cbPrevObjMatrix._m0[_395].z * _334) + (cbPrevObjMatrix._m0[_360].z * _333)) + (cbPrevObjMatrix._m0[_442].z * _335)) + (cbPrevObjMatrix._m0[_489].z * _336), fma(_316, (((cbPrevObjMatrix._m0[_395].y * _334) + (cbPrevObjMatrix._m0[_360].y * _333)) + (cbPrevObjMatrix._m0[_442].y * _335)) + (cbPrevObjMatrix._m0[_489].y * _336), ((((cbPrevObjMatrix._m0[_395].x * _334) + (cbPrevObjMatrix._m0[_360].x * _333)) + (cbPrevObjMatrix._m0[_442].x * _335)) + (cbPrevObjMatrix._m0[_489].x * _336)) * _315))) - cbSceneParam._m0[28u].z;
    precise float _789 = _728 - cbSceneParam._m0[3u].x;
    precise float _790 = _729 - cbSceneParam._m0[3u].y;
    precise float _791 = _730 - cbSceneParam._m0[3u].z;
    precise float _817 = _789 * cbSceneParam._m0[24u].x;
    precise float _818 = _790 * cbSceneParam._m0[24u].y;
    precise float _819 = _818 + _817;
    precise float _820 = _791 * cbSceneParam._m0[24u].z;
    precise float _821 = _820 + _819;
    precise float _822 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _823 = _822 + _821;
    precise float _824 = _789 * cbSceneParam._m0[25u].x;
    precise float _825 = _790 * cbSceneParam._m0[25u].y;
    precise float _826 = _825 + _824;
    precise float _827 = _791 * cbSceneParam._m0[25u].z;
    precise float _828 = _827 + _826;
    precise float _829 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _830 = _829 + _828;
    precise float _831 = _789 * cbSceneParam._m0[26u].x;
    precise float _832 = _790 * cbSceneParam._m0[26u].y;
    precise float _833 = _832 + _831;
    precise float _834 = _791 * cbSceneParam._m0[26u].z;
    precise float _835 = _834 + _833;
    precise float _836 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _837 = _836 + _835;
    precise float _838 = _789 * cbSceneParam._m0[27u].x;
    precise float _839 = _790 * cbSceneParam._m0[27u].y;
    precise float _840 = _839 + _838;
    precise float _841 = _791 * cbSceneParam._m0[27u].z;
    precise float _842 = _841 + _840;
    precise float _843 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _844 = _843 + _842;
    gl_Position.x = _823;
    gl_Position.y = _830;
    gl_Position.z = _837;
    gl_Position.w = _844;
    POSITION_1.x = _823;
    POSITION_1.y = _830;
    POSITION_1.z = _837;
    POSITION_1.w = _844;
    NORMAL_1.x = _711;
    NORMAL_1.y = _714;
    NORMAL_1.z = _717;
    NORMAL_1.w = float(_325);
    TANGENT_1.x = fma(_251, _514, fma(_250, _511, _508 * _249));
    TANGENT_1.y = fma(_251, _515, fma(_250, _512, _509 * _249));
    TANGENT_1.z = fma(_251, _516, fma(_250, _513, _510 * _249));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1 = _228;
    TEXCOORD_2_1 = _229;
    TEXCOORD_4.x = TEXCOORD_1.x;
    TEXCOORD_4.y = TEXCOORD_1.y;
    TEXCOORD_4.z = TEXCOORD_1.z;
    TEXCOORD_4.w = COLOR_1.w;
    TEXCOORD_7.x = TEXCOORD_2.x;
    TEXCOORD_7.y = TEXCOORD_2.y;
    TEXCOORD_7.z = TEXCOORD_2.z;
    TEXCOORD_7.w = COLOR_1.x;
    TEXCOORD_10 = TEXCOORD_3.x;
    TEXCOORD_11 = TEXCOORD_3.y;
    TEXCOORD_12 = TEXCOORD_3.z;
    TEXCOORD_15.x = _823;
    TEXCOORD_15.y = _830;
    TEXCOORD_15.z = _837;
    TEXCOORD_15.w = _844;
    TEXCOORD_16.x = fma(_739, cbSceneParam._m0[29u].z, fma(_738, cbSceneParam._m0[29u].y, _737 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_16.y = fma(_739, cbSceneParam._m0[30u].z, fma(_738, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _737)) + cbSceneParam._m0[30u].w;
    TEXCOORD_16.z = fma(_739, cbSceneParam._m0[31u].z, fma(_738, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _737)) + cbSceneParam._m0[31u].w;
    TEXCOORD_16.w = fma(_739, cbSceneParam._m0[32u].z, fma(_738, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _737)) + cbSceneParam._m0[32u].w;
    TEXCOORD_17.x = _711;
    TEXCOORD_17.y = _714;
    TEXCOORD_17.z = _717;
}


