#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 1) uniform texture2D S_PC_LG_M_5510_Booster_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out float TEXCOORD_1_1;
layout(location = 4, component = 1) out float TEXCOORD_2_1;
layout(location = 5) out vec4 TEXCOORD_4;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 4, component = 2) out float TEXCOORD_10;
layout(location = 4, component = 3) out float TEXCOORD_11;
layout(location = 7) out float TEXCOORD_12;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_2_1 = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _203 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _205 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _210 = _203 * cbTexScroll._m0[0u].x;
    precise float _211 = _205 * cbTexScroll._m0[0u].y;
    precise float _214 = _210 + cbTexScroll._m0[0u].z;
    precise float _215 = _211 + cbTexScroll._m0[0u].w;
    precise float _219 = float(NORMAL.x) + (-127.0);
    precise float _221 = float(NORMAL.y) + (-127.0);
    precise float _222 = float(NORMAL.z) + (-127.0);
    precise float _223 = _219 * 0.0078740157186985015869140625;
    precise float _225 = _221 * 0.0078740157186985015869140625;
    precise float _226 = _222 * 0.0078740157186985015869140625;
    float _235 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _236 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _237 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _247 = cbPerFrame._m0[22u].x * cbMtdParam._m0[15u].x;
    precise float _253 = _247 * cbMtdParam._m0[20u].x;
    precise float _254 = _247 * cbMtdParam._m0[20u].y;
    precise float _255 = _214 + _253;
    precise float _256 = _215 + _254;
    precise float _263 = _255 * cbTextureTilingScale._m0[1u].x;
    precise float _264 = cbTextureTilingScale._m0[1u].y * _256;
    precise float _265 = cbTextureTilingScale._m0[1u].z + _263;
    precise float _266 = cbTextureTilingScale._m0[1u].w + _264;
    precise float _277 = textureLod(sampler2D(S_PC_LG_M_5510_Booster_snp_0_Texture2D_1, SS_DiffuseMap), vec2(_265, _266), 0.0).x * cbMtdParam._m0[17u].x;
    precise float _283 = _223 * cbMtdParam._m0[23u].x;
    precise float _284 = _225 * cbMtdParam._m0[23u].y;
    precise float _285 = _226 * cbMtdParam._m0[23u].z;
    precise float _286 = _277 * _283;
    precise float _287 = _277 * _284;
    precise float _288 = _277 * _285;
    precise float _289 = _283 + _286;
    precise float _290 = _284 + _287;
    precise float _291 = _285 + _288;
    precise float _292 = _283 * 0.0;
    precise float _293 = _284 * 0.0;
    precise float _294 = _285 * 0.0;
    precise float _295 = _292 + _289;
    precise float _296 = _293 + _290;
    precise float _297 = _294 + _291;
    precise float _298 = TEXCOORD_3.x * _295;
    precise float _299 = TEXCOORD_3.y * _296;
    precise float _300 = TEXCOORD_3.z * _297;
    precise float _301 = POSITION.x + _298;
    precise float _302 = POSITION.y + _299;
    precise float _303 = POSITION.z + _300;
    uint _308 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _310 = texelFetch(g_InstanceIndexBuffer, int(_308));
    uint _311 = _310.x;
    precise float _312 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _317 = isnan(_312) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _312 : max(0.001000000047497451305389404296875, _312));
    precise float _319 = BLENDWEIGHT.x / _317;
    precise float _320 = BLENDWEIGHT.y / _317;
    precise float _321 = BLENDWEIGHT.z / _317;
    precise float _322 = BLENDWEIGHT.w / _317;
    uint _324 = _311 * 13u;
    uvec4 _329 = floatBitsToUint(cbInstanceData._m0[_324 + 4u]);
    uint _330 = _329.x;
    uint _332 = (_330 + uint(float(BLENDINDICES.x))) * 3u;
    uint _339 = _332 + 1u;
    uint _346 = _332 + 2u;
    precise float _353 = _319 * cbObjMatrix._m0[_332].x;
    precise float _354 = _319 * cbObjMatrix._m0[_339].x;
    precise float _355 = _319 * cbObjMatrix._m0[_346].x;
    precise float _356 = _319 * cbObjMatrix._m0[_332].y;
    precise float _357 = _319 * cbObjMatrix._m0[_339].y;
    precise float _358 = _319 * cbObjMatrix._m0[_346].y;
    precise float _359 = _319 * cbObjMatrix._m0[_332].z;
    precise float _360 = _319 * cbObjMatrix._m0[_339].z;
    precise float _361 = _319 * cbObjMatrix._m0[_346].z;
    precise float _362 = _319 * cbObjMatrix._m0[_332].w;
    precise float _363 = _319 * cbObjMatrix._m0[_339].w;
    precise float _364 = _319 * cbObjMatrix._m0[_346].w;
    uint _367 = (_330 + uint(float(BLENDINDICES.y))) * 3u;
    uint _374 = _367 + 1u;
    uint _381 = _367 + 2u;
    precise float _388 = _320 * cbObjMatrix._m0[_367].x;
    precise float _389 = _320 * cbObjMatrix._m0[_374].x;
    precise float _390 = _320 * cbObjMatrix._m0[_381].x;
    precise float _391 = _320 * cbObjMatrix._m0[_367].y;
    precise float _392 = _320 * cbObjMatrix._m0[_374].y;
    precise float _393 = _320 * cbObjMatrix._m0[_381].y;
    precise float _394 = _320 * cbObjMatrix._m0[_367].z;
    precise float _395 = _320 * cbObjMatrix._m0[_374].z;
    precise float _396 = _320 * cbObjMatrix._m0[_381].z;
    precise float _397 = _320 * cbObjMatrix._m0[_367].w;
    precise float _398 = _320 * cbObjMatrix._m0[_374].w;
    precise float _399 = _320 * cbObjMatrix._m0[_381].w;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    uint _414 = (_330 + uint(float(BLENDINDICES.z))) * 3u;
    uint _421 = _414 + 1u;
    uint _428 = _414 + 2u;
    precise float _435 = _321 * cbObjMatrix._m0[_414].x;
    precise float _436 = _321 * cbObjMatrix._m0[_421].x;
    precise float _437 = _321 * cbObjMatrix._m0[_428].x;
    precise float _438 = _321 * cbObjMatrix._m0[_414].y;
    precise float _439 = _321 * cbObjMatrix._m0[_421].y;
    precise float _440 = _321 * cbObjMatrix._m0[_428].y;
    precise float _441 = _321 * cbObjMatrix._m0[_414].z;
    precise float _442 = _321 * cbObjMatrix._m0[_421].z;
    precise float _443 = _321 * cbObjMatrix._m0[_428].z;
    precise float _444 = _321 * cbObjMatrix._m0[_414].w;
    precise float _445 = _321 * cbObjMatrix._m0[_421].w;
    precise float _446 = _321 * cbObjMatrix._m0[_428].w;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    uint _461 = (_330 + uint(float(BLENDINDICES.w))) * 3u;
    uint _468 = _461 + 1u;
    uint _475 = _461 + 2u;
    precise float _482 = _322 * cbObjMatrix._m0[_461].x;
    precise float _483 = _322 * cbObjMatrix._m0[_468].x;
    precise float _484 = _322 * cbObjMatrix._m0[_475].x;
    precise float _485 = _322 * cbObjMatrix._m0[_461].y;
    precise float _486 = _322 * cbObjMatrix._m0[_468].y;
    precise float _487 = _322 * cbObjMatrix._m0[_475].y;
    precise float _488 = _322 * cbObjMatrix._m0[_461].z;
    precise float _489 = _322 * cbObjMatrix._m0[_468].z;
    precise float _490 = _322 * cbObjMatrix._m0[_475].z;
    precise float _491 = _322 * cbObjMatrix._m0[_461].w;
    precise float _492 = _322 * cbObjMatrix._m0[_468].w;
    precise float _493 = _322 * cbObjMatrix._m0[_475].w;
    precise float _494 = _447 + _482;
    precise float _495 = _448 + _483;
    precise float _496 = _449 + _484;
    precise float _497 = _450 + _485;
    precise float _498 = _451 + _486;
    precise float _499 = _452 + _487;
    precise float _500 = _453 + _488;
    precise float _501 = _454 + _489;
    precise float _502 = _455 + _490;
    precise float _503 = _456 + _491;
    precise float _504 = _457 + _492;
    precise float _505 = _458 + _493;
    precise float _506 = _301 * _494;
    precise float _507 = _302 * _497;
    precise float _508 = _507 + _506;
    precise float _509 = _303 * _500;
    precise float _510 = _509 + _508;
    precise float _511 = 1.0 * _503;
    precise float _512 = _511 + _510;
    precise float _513 = _301 * _495;
    precise float _514 = _302 * _498;
    precise float _515 = _514 + _513;
    precise float _516 = _303 * _501;
    precise float _517 = _516 + _515;
    precise float _518 = 1.0 * _504;
    precise float _519 = _518 + _517;
    precise float _520 = _301 * _496;
    precise float _521 = _302 * _499;
    precise float _522 = _521 + _520;
    precise float _523 = _303 * _502;
    precise float _524 = _523 + _522;
    precise float _525 = 1.0 * _505;
    precise float _526 = _525 + _524;
    precise float _546 = _512 + 0.0;
    precise float _547 = _519 + 0.0;
    precise float _548 = _526 + 0.0;
    precise float _554 = _546 - cbSceneParam._m0[3u].x;
    precise float _555 = _547 - cbSceneParam._m0[3u].y;
    precise float _556 = _548 - cbSceneParam._m0[3u].z;
    precise float _582 = _554 * cbSceneParam._m0[24u].x;
    precise float _583 = _555 * cbSceneParam._m0[24u].y;
    precise float _584 = _583 + _582;
    precise float _585 = _556 * cbSceneParam._m0[24u].z;
    precise float _586 = _585 + _584;
    precise float _587 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _588 = _587 + _586;
    precise float _589 = _554 * cbSceneParam._m0[25u].x;
    precise float _590 = _555 * cbSceneParam._m0[25u].y;
    precise float _591 = _590 + _589;
    precise float _592 = _556 * cbSceneParam._m0[25u].z;
    precise float _593 = _592 + _591;
    precise float _594 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _595 = _594 + _593;
    precise float _596 = _554 * cbSceneParam._m0[26u].x;
    precise float _597 = _555 * cbSceneParam._m0[26u].y;
    precise float _598 = _597 + _596;
    precise float _599 = _556 * cbSceneParam._m0[26u].z;
    precise float _600 = _599 + _598;
    precise float _601 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _602 = _601 + _600;
    precise float _603 = _554 * cbSceneParam._m0[27u].x;
    precise float _604 = _555 * cbSceneParam._m0[27u].y;
    precise float _605 = _604 + _603;
    precise float _606 = _556 * cbSceneParam._m0[27u].z;
    precise float _607 = _606 + _605;
    precise float _608 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _609 = _608 + _607;
    gl_Position.x = _588;
    gl_Position.y = _595;
    gl_Position.z = _602;
    gl_Position.w = _609;
    POSITION_1.x = _588;
    POSITION_1.y = _595;
    POSITION_1.z = _602;
    POSITION_1.w = _609;
    NORMAL_1.x = fma(_226, _500, fma(_225, _497, _494 * _223));
    NORMAL_1.y = fma(_226, _501, fma(_225, _498, _495 * _223));
    NORMAL_1.z = fma(_226, _502, fma(_225, _499, _496 * _223));
    NORMAL_1.w = float(_311);
    TANGENT_1.x = fma(_237, _500, fma(_236, _497, _494 * _235));
    TANGENT_1.y = fma(_237, _501, fma(_236, _498, _495 * _235));
    TANGENT_1.z = fma(_237, _502, fma(_236, _499, _496 * _235));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1 = _214;
    TEXCOORD_2_1 = _215;
    TEXCOORD_4.x = TEXCOORD_1.x;
    TEXCOORD_4.y = TEXCOORD_1.y;
    TEXCOORD_4.z = TEXCOORD_1.z;
    TEXCOORD_4.w = COLOR_1.w;
    TEXCOORD_7.x = TEXCOORD_2.x;
    TEXCOORD_7.y = TEXCOORD_2.y;
    TEXCOORD_7.z = TEXCOORD_2.z;
    TEXCOORD_7.w = COLOR_1.x;
    TEXCOORD_10 = TEXCOORD_3.x;
    TEXCOORD_11 = TEXCOORD_3.y;
    TEXCOORD_12 = TEXCOORD_3.z;
    gl_ClipDistance[0u] = dot(vec4(_588, _595, _602, _609), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_588, _595, _602, _609), vec4(cbInstanceData._m0[_324 + 3u]));
}


