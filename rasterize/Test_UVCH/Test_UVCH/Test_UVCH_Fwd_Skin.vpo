#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out vec4 TEXCOORD_5;
layout(location = 7) out float TEXCOORD_8;
layout(location = 7, component = 1) out float TEXCOORD_9;
layout(location = 7, component = 2) out float TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _219 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _221 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _222 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _231 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _232 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _233 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _243 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _244 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _245 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _255 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _257 = texelFetch(g_InstanceIndexBuffer, int(_255));
    uint _258 = _257.x;
    precise float _259 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _264 = isnan(_259) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _259 : max(0.001000000047497451305389404296875, _259));
    precise float _266 = BLENDWEIGHT.x / _264;
    precise float _267 = BLENDWEIGHT.y / _264;
    precise float _268 = BLENDWEIGHT.z / _264;
    precise float _269 = BLENDWEIGHT.w / _264;
    uint _271 = _258 * 13u;
    uvec4 _276 = floatBitsToUint(cbInstanceData._m0[_271 + 4u]);
    uint _277 = _276.x;
    uint _279 = (_277 + uint(float(BLENDINDICES.x))) * 3u;
    uint _286 = _279 + 1u;
    uint _293 = _279 + 2u;
    precise float _300 = _266 * cbObjMatrix._m0[_279].x;
    precise float _301 = _266 * cbObjMatrix._m0[_286].x;
    precise float _302 = _266 * cbObjMatrix._m0[_293].x;
    precise float _303 = _266 * cbObjMatrix._m0[_279].y;
    precise float _304 = _266 * cbObjMatrix._m0[_286].y;
    precise float _305 = _266 * cbObjMatrix._m0[_293].y;
    precise float _306 = _266 * cbObjMatrix._m0[_279].z;
    precise float _307 = _266 * cbObjMatrix._m0[_286].z;
    precise float _308 = _266 * cbObjMatrix._m0[_293].z;
    precise float _309 = _266 * cbObjMatrix._m0[_279].w;
    precise float _310 = _266 * cbObjMatrix._m0[_286].w;
    precise float _311 = _266 * cbObjMatrix._m0[_293].w;
    uint _314 = (_277 + uint(float(BLENDINDICES.y))) * 3u;
    uint _321 = _314 + 1u;
    uint _328 = _314 + 2u;
    precise float _335 = _267 * cbObjMatrix._m0[_314].x;
    precise float _336 = _267 * cbObjMatrix._m0[_321].x;
    precise float _337 = _267 * cbObjMatrix._m0[_328].x;
    precise float _338 = _267 * cbObjMatrix._m0[_314].y;
    precise float _339 = _267 * cbObjMatrix._m0[_321].y;
    precise float _340 = _267 * cbObjMatrix._m0[_328].y;
    precise float _341 = _267 * cbObjMatrix._m0[_314].z;
    precise float _342 = _267 * cbObjMatrix._m0[_321].z;
    precise float _343 = _267 * cbObjMatrix._m0[_328].z;
    precise float _344 = _267 * cbObjMatrix._m0[_314].w;
    precise float _345 = _267 * cbObjMatrix._m0[_321].w;
    precise float _346 = _267 * cbObjMatrix._m0[_328].w;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    uint _361 = (_277 + uint(float(BLENDINDICES.z))) * 3u;
    uint _368 = _361 + 1u;
    uint _375 = _361 + 2u;
    precise float _382 = _268 * cbObjMatrix._m0[_361].x;
    precise float _383 = _268 * cbObjMatrix._m0[_368].x;
    precise float _384 = _268 * cbObjMatrix._m0[_375].x;
    precise float _385 = _268 * cbObjMatrix._m0[_361].y;
    precise float _386 = _268 * cbObjMatrix._m0[_368].y;
    precise float _387 = _268 * cbObjMatrix._m0[_375].y;
    precise float _388 = _268 * cbObjMatrix._m0[_361].z;
    precise float _389 = _268 * cbObjMatrix._m0[_368].z;
    precise float _390 = _268 * cbObjMatrix._m0[_375].z;
    precise float _391 = _268 * cbObjMatrix._m0[_361].w;
    precise float _392 = _268 * cbObjMatrix._m0[_368].w;
    precise float _393 = _268 * cbObjMatrix._m0[_375].w;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    uint _408 = (_277 + uint(float(BLENDINDICES.w))) * 3u;
    uint _415 = _408 + 1u;
    uint _422 = _408 + 2u;
    precise float _429 = _269 * cbObjMatrix._m0[_408].x;
    precise float _430 = _269 * cbObjMatrix._m0[_415].x;
    precise float _431 = _269 * cbObjMatrix._m0[_422].x;
    precise float _432 = _269 * cbObjMatrix._m0[_408].y;
    precise float _433 = _269 * cbObjMatrix._m0[_415].y;
    precise float _434 = _269 * cbObjMatrix._m0[_422].y;
    precise float _435 = _269 * cbObjMatrix._m0[_408].z;
    precise float _436 = _269 * cbObjMatrix._m0[_415].z;
    precise float _437 = _269 * cbObjMatrix._m0[_422].z;
    precise float _438 = _269 * cbObjMatrix._m0[_408].w;
    precise float _439 = _269 * cbObjMatrix._m0[_415].w;
    precise float _440 = _269 * cbObjMatrix._m0[_422].w;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = POSITION.x * _441;
    precise float _454 = POSITION.y * _444;
    precise float _455 = _454 + _453;
    precise float _456 = POSITION.z * _447;
    precise float _457 = _456 + _455;
    precise float _458 = 1.0 * _450;
    precise float _459 = _458 + _457;
    precise float _460 = POSITION.x * _442;
    precise float _461 = POSITION.y * _445;
    precise float _462 = _461 + _460;
    precise float _463 = POSITION.z * _448;
    precise float _464 = _463 + _462;
    precise float _465 = 1.0 * _451;
    precise float _466 = _465 + _464;
    precise float _467 = POSITION.x * _443;
    precise float _468 = POSITION.y * _446;
    precise float _469 = _468 + _467;
    precise float _470 = POSITION.z * _449;
    precise float _471 = _470 + _469;
    precise float _472 = 1.0 * _452;
    precise float _473 = _472 + _471;
    precise float _507 = _459 - cbSceneParam._m0[3u].x;
    precise float _508 = _466 - cbSceneParam._m0[3u].y;
    precise float _509 = _473 - cbSceneParam._m0[3u].z;
    precise float _537 = _507 * cbSceneParam._m0[24u].x;
    precise float _538 = _508 * cbSceneParam._m0[24u].y;
    precise float _539 = _538 + _537;
    precise float _540 = _509 * cbSceneParam._m0[24u].z;
    precise float _541 = _540 + _539;
    precise float _542 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _543 = _542 + _541;
    precise float _544 = _507 * cbSceneParam._m0[25u].x;
    precise float _545 = _508 * cbSceneParam._m0[25u].y;
    precise float _546 = _545 + _544;
    precise float _547 = _509 * cbSceneParam._m0[25u].z;
    precise float _548 = _547 + _546;
    precise float _549 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _550 = _549 + _548;
    precise float _551 = _507 * cbSceneParam._m0[26u].x;
    precise float _552 = _508 * cbSceneParam._m0[26u].y;
    precise float _553 = _552 + _551;
    precise float _554 = _509 * cbSceneParam._m0[26u].z;
    precise float _555 = _554 + _553;
    precise float _556 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _557 = _556 + _555;
    precise float _558 = _507 * cbSceneParam._m0[27u].x;
    precise float _559 = _508 * cbSceneParam._m0[27u].y;
    precise float _560 = _559 + _558;
    precise float _561 = _509 * cbSceneParam._m0[27u].z;
    precise float _562 = _561 + _560;
    precise float _563 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _564 = _563 + _562;
    gl_Position.x = _543;
    gl_Position.y = _550;
    gl_Position.z = _557;
    gl_Position.w = _564;
    POSITION_1.x = _543;
    POSITION_1.y = _550;
    POSITION_1.z = _557;
    POSITION_1.w = _564;
    NORMAL_1.x = fma(_222, _447, fma(_221, _444, _441 * _219));
    NORMAL_1.y = fma(_222, _448, fma(_221, _445, _442 * _219));
    NORMAL_1.z = fma(_222, _449, fma(_221, _446, _443 * _219));
    NORMAL_1.w = float(_258);
    TANGENT_1.x = fma(_233, _447, fma(_232, _444, _441 * _231));
    TANGENT_1.y = fma(_233, _448, fma(_232, _445, _442 * _231));
    TANGENT_1.z = fma(_233, _449, fma(_232, _446, _443 * _231));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_245, _447, fma(_244, _444, _441 * _243));
    TANGENT_2_1.y = fma(_245, _448, fma(_244, _445, _442 * _243));
    TANGENT_2_1.z = fma(_245, _449, fma(_244, _446, _443 * _243));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_2.x;
    TEXCOORD_9 = TEXCOORD_2.y;
    TEXCOORD_10 = TEXCOORD_2.z;
    gl_ClipDistance[0u] = dot(vec4(_543, _550, _557, _564), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_543, _550, _557, _564), vec4(cbInstanceData._m0[_271 + 3u]));
}


