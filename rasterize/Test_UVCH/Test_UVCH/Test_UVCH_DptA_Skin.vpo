#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out float TEXCOORD_8;
layout(location = 6, component = 1) out float TEXCOORD_9;
layout(location = 6, component = 2) out float TEXCOORD_10;
layout(location = 7) out vec2 TEXCOORD_12;
layout(location = 6, component = 3) out float TEXCOORD_16;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    TEXCOORD_16 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _220 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _222 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _223 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _232 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _233 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _234 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _244 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _245 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _246 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _256 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _258 = texelFetch(g_InstanceIndexBuffer, int(_256));
    uint _259 = _258.x;
    precise float _260 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _265 = isnan(_260) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _260 : max(0.001000000047497451305389404296875, _260));
    precise float _267 = BLENDWEIGHT.x / _265;
    precise float _268 = BLENDWEIGHT.y / _265;
    precise float _269 = BLENDWEIGHT.z / _265;
    precise float _270 = BLENDWEIGHT.w / _265;
    uint _272 = _259 * 13u;
    uvec4 _277 = floatBitsToUint(cbInstanceData._m0[_272 + 4u]);
    uint _278 = _277.x;
    uint _280 = (_278 + uint(float(BLENDINDICES.x))) * 3u;
    uint _287 = _280 + 1u;
    uint _294 = _280 + 2u;
    precise float _301 = _267 * cbObjMatrix._m0[_280].x;
    precise float _302 = _267 * cbObjMatrix._m0[_287].x;
    precise float _303 = _267 * cbObjMatrix._m0[_294].x;
    precise float _304 = _267 * cbObjMatrix._m0[_280].y;
    precise float _305 = _267 * cbObjMatrix._m0[_287].y;
    precise float _306 = _267 * cbObjMatrix._m0[_294].y;
    precise float _307 = _267 * cbObjMatrix._m0[_280].z;
    precise float _308 = _267 * cbObjMatrix._m0[_287].z;
    precise float _309 = _267 * cbObjMatrix._m0[_294].z;
    precise float _310 = _267 * cbObjMatrix._m0[_280].w;
    precise float _311 = _267 * cbObjMatrix._m0[_287].w;
    precise float _312 = _267 * cbObjMatrix._m0[_294].w;
    uint _315 = (_278 + uint(float(BLENDINDICES.y))) * 3u;
    uint _322 = _315 + 1u;
    uint _329 = _315 + 2u;
    precise float _336 = _268 * cbObjMatrix._m0[_315].x;
    precise float _337 = _268 * cbObjMatrix._m0[_322].x;
    precise float _338 = _268 * cbObjMatrix._m0[_329].x;
    precise float _339 = _268 * cbObjMatrix._m0[_315].y;
    precise float _340 = _268 * cbObjMatrix._m0[_322].y;
    precise float _341 = _268 * cbObjMatrix._m0[_329].y;
    precise float _342 = _268 * cbObjMatrix._m0[_315].z;
    precise float _343 = _268 * cbObjMatrix._m0[_322].z;
    precise float _344 = _268 * cbObjMatrix._m0[_329].z;
    precise float _345 = _268 * cbObjMatrix._m0[_315].w;
    precise float _346 = _268 * cbObjMatrix._m0[_322].w;
    precise float _347 = _268 * cbObjMatrix._m0[_329].w;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    uint _362 = (_278 + uint(float(BLENDINDICES.z))) * 3u;
    uint _369 = _362 + 1u;
    uint _376 = _362 + 2u;
    precise float _383 = _269 * cbObjMatrix._m0[_362].x;
    precise float _384 = _269 * cbObjMatrix._m0[_369].x;
    precise float _385 = _269 * cbObjMatrix._m0[_376].x;
    precise float _386 = _269 * cbObjMatrix._m0[_362].y;
    precise float _387 = _269 * cbObjMatrix._m0[_369].y;
    precise float _388 = _269 * cbObjMatrix._m0[_376].y;
    precise float _389 = _269 * cbObjMatrix._m0[_362].z;
    precise float _390 = _269 * cbObjMatrix._m0[_369].z;
    precise float _391 = _269 * cbObjMatrix._m0[_376].z;
    precise float _392 = _269 * cbObjMatrix._m0[_362].w;
    precise float _393 = _269 * cbObjMatrix._m0[_369].w;
    precise float _394 = _269 * cbObjMatrix._m0[_376].w;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    uint _409 = (_278 + uint(float(BLENDINDICES.w))) * 3u;
    uint _416 = _409 + 1u;
    uint _423 = _409 + 2u;
    precise float _430 = _270 * cbObjMatrix._m0[_409].x;
    precise float _431 = _270 * cbObjMatrix._m0[_416].x;
    precise float _432 = _270 * cbObjMatrix._m0[_423].x;
    precise float _433 = _270 * cbObjMatrix._m0[_409].y;
    precise float _434 = _270 * cbObjMatrix._m0[_416].y;
    precise float _435 = _270 * cbObjMatrix._m0[_423].y;
    precise float _436 = _270 * cbObjMatrix._m0[_409].z;
    precise float _437 = _270 * cbObjMatrix._m0[_416].z;
    precise float _438 = _270 * cbObjMatrix._m0[_423].z;
    precise float _439 = _270 * cbObjMatrix._m0[_409].w;
    precise float _440 = _270 * cbObjMatrix._m0[_416].w;
    precise float _441 = _270 * cbObjMatrix._m0[_423].w;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = POSITION.x * _442;
    precise float _455 = POSITION.y * _445;
    precise float _456 = _455 + _454;
    precise float _457 = POSITION.z * _448;
    precise float _458 = _457 + _456;
    precise float _459 = 1.0 * _451;
    precise float _460 = _459 + _458;
    precise float _461 = POSITION.x * _443;
    precise float _462 = POSITION.y * _446;
    precise float _463 = _462 + _461;
    precise float _464 = POSITION.z * _449;
    precise float _465 = _464 + _463;
    precise float _466 = 1.0 * _452;
    precise float _467 = _466 + _465;
    precise float _468 = POSITION.x * _444;
    precise float _469 = POSITION.y * _447;
    precise float _470 = _469 + _468;
    precise float _471 = POSITION.z * _450;
    precise float _472 = _471 + _470;
    precise float _473 = 1.0 * _453;
    precise float _474 = _473 + _472;
    float _480 = cbSceneParam._m0[3u].x - _460;
    float _481 = cbSceneParam._m0[3u].y - _467;
    float _482 = cbSceneParam._m0[3u].z - _474;
    precise float _517 = _460 - cbSceneParam._m0[3u].x;
    precise float _518 = _467 - cbSceneParam._m0[3u].y;
    precise float _519 = _474 - cbSceneParam._m0[3u].z;
    precise float _547 = _517 * cbSceneParam._m0[24u].x;
    precise float _548 = _518 * cbSceneParam._m0[24u].y;
    precise float _549 = _548 + _547;
    precise float _550 = _519 * cbSceneParam._m0[24u].z;
    precise float _551 = _550 + _549;
    precise float _552 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _553 = _552 + _551;
    precise float _554 = _517 * cbSceneParam._m0[25u].x;
    precise float _555 = _518 * cbSceneParam._m0[25u].y;
    precise float _556 = _555 + _554;
    precise float _557 = _519 * cbSceneParam._m0[25u].z;
    precise float _558 = _557 + _556;
    precise float _559 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _560 = _559 + _558;
    precise float _561 = _517 * cbSceneParam._m0[26u].x;
    precise float _562 = _518 * cbSceneParam._m0[26u].y;
    precise float _563 = _562 + _561;
    precise float _564 = _519 * cbSceneParam._m0[26u].z;
    precise float _565 = _564 + _563;
    precise float _566 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _567 = _566 + _565;
    precise float _568 = _517 * cbSceneParam._m0[27u].x;
    precise float _569 = _518 * cbSceneParam._m0[27u].y;
    precise float _570 = _569 + _568;
    precise float _571 = _519 * cbSceneParam._m0[27u].z;
    precise float _572 = _571 + _570;
    precise float _573 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _574 = _573 + _572;
    gl_Position.x = _553;
    gl_Position.y = _560;
    gl_Position.z = _567;
    gl_Position.w = _574;
    NORMAL_1.x = fma(_223, _448, fma(_222, _445, _442 * _220));
    NORMAL_1.y = fma(_223, _449, fma(_222, _446, _443 * _220));
    NORMAL_1.z = fma(_223, _450, fma(_222, _447, _444 * _220));
    NORMAL_1.w = float(_259);
    TANGENT_1.x = fma(_234, _448, fma(_233, _445, _442 * _232));
    TANGENT_1.y = fma(_234, _449, fma(_233, _446, _443 * _232));
    TANGENT_1.z = fma(_234, _450, fma(_233, _447, _444 * _232));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_246, _448, fma(_245, _445, _442 * _244));
    TANGENT_2_1.y = fma(_246, _449, fma(_245, _446, _443 * _244));
    TANGENT_2_1.z = fma(_246, _450, fma(_245, _447, _444 * _244));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_2.x;
    TEXCOORD_9 = TEXCOORD_2.y;
    TEXCOORD_10 = TEXCOORD_2.z;
    TEXCOORD_12.x = _567;
    TEXCOORD_12.y = _574;
    TEXCOORD_16 = sqrt(((_480 * _480) + (_481 * _481)) + (_482 * _482));
    gl_ClipDistance[0u] = dot(vec4(_553, _560, _567, _574), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_553, _560, _567, _574), vec4(cbInstanceData._m0[_272 + 3u]));
}


