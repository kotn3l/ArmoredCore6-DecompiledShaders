#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out vec4 TEXCOORD_5;
layout(location = 7) out float TEXCOORD_8;
layout(location = 7, component = 1) out float TEXCOORD_9;
layout(location = 7, component = 2) out float TEXCOORD_10;
layout(location = 8) out vec4 TEXCOORD_13;
layout(location = 9) out vec4 TEXCOORD_14;
layout(location = 10) out vec3 TEXCOORD_15;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_15.x = 0.0;
    TEXCOORD_15.y = 0.0;
    TEXCOORD_15.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _238 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _240 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _241 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _250 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _251 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _252 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _262 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _263 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _264 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _274 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _276 = texelFetch(g_InstanceIndexBuffer, int(_274));
    uint _277 = _276.x;
    precise float _278 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _283 = isnan(_278) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _278 : max(0.001000000047497451305389404296875, _278));
    precise float _285 = BLENDWEIGHT.x / _283;
    precise float _286 = BLENDWEIGHT.y / _283;
    precise float _287 = BLENDWEIGHT.z / _283;
    precise float _288 = BLENDWEIGHT.w / _283;
    uint _290 = _277 * 13u;
    uvec4 _295 = floatBitsToUint(cbInstanceData._m0[_290 + 4u]);
    uint _296 = _295.x;
    uint _298 = (_296 + uint(float(BLENDINDICES.x))) * 3u;
    uint _305 = _298 + 1u;
    uint _312 = _298 + 2u;
    precise float _319 = _285 * cbObjMatrix._m0[_298].x;
    precise float _320 = _285 * cbObjMatrix._m0[_305].x;
    precise float _321 = _285 * cbObjMatrix._m0[_312].x;
    precise float _322 = _285 * cbObjMatrix._m0[_298].y;
    precise float _323 = _285 * cbObjMatrix._m0[_305].y;
    precise float _324 = _285 * cbObjMatrix._m0[_312].y;
    precise float _325 = _285 * cbObjMatrix._m0[_298].z;
    precise float _326 = _285 * cbObjMatrix._m0[_305].z;
    precise float _327 = _285 * cbObjMatrix._m0[_312].z;
    precise float _328 = _285 * cbObjMatrix._m0[_298].w;
    precise float _329 = _285 * cbObjMatrix._m0[_305].w;
    precise float _330 = _285 * cbObjMatrix._m0[_312].w;
    uint _333 = (_296 + uint(float(BLENDINDICES.y))) * 3u;
    uint _340 = _333 + 1u;
    uint _347 = _333 + 2u;
    precise float _354 = _286 * cbObjMatrix._m0[_333].x;
    precise float _355 = _286 * cbObjMatrix._m0[_340].x;
    precise float _356 = _286 * cbObjMatrix._m0[_347].x;
    precise float _357 = _286 * cbObjMatrix._m0[_333].y;
    precise float _358 = _286 * cbObjMatrix._m0[_340].y;
    precise float _359 = _286 * cbObjMatrix._m0[_347].y;
    precise float _360 = _286 * cbObjMatrix._m0[_333].z;
    precise float _361 = _286 * cbObjMatrix._m0[_340].z;
    precise float _362 = _286 * cbObjMatrix._m0[_347].z;
    precise float _363 = _286 * cbObjMatrix._m0[_333].w;
    precise float _364 = _286 * cbObjMatrix._m0[_340].w;
    precise float _365 = _286 * cbObjMatrix._m0[_347].w;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    uint _380 = (_296 + uint(float(BLENDINDICES.z))) * 3u;
    uint _387 = _380 + 1u;
    uint _394 = _380 + 2u;
    precise float _401 = _287 * cbObjMatrix._m0[_380].x;
    precise float _402 = _287 * cbObjMatrix._m0[_387].x;
    precise float _403 = _287 * cbObjMatrix._m0[_394].x;
    precise float _404 = _287 * cbObjMatrix._m0[_380].y;
    precise float _405 = _287 * cbObjMatrix._m0[_387].y;
    precise float _406 = _287 * cbObjMatrix._m0[_394].y;
    precise float _407 = _287 * cbObjMatrix._m0[_380].z;
    precise float _408 = _287 * cbObjMatrix._m0[_387].z;
    precise float _409 = _287 * cbObjMatrix._m0[_394].z;
    precise float _410 = _287 * cbObjMatrix._m0[_380].w;
    precise float _411 = _287 * cbObjMatrix._m0[_387].w;
    precise float _412 = _287 * cbObjMatrix._m0[_394].w;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    uint _427 = (_296 + uint(float(BLENDINDICES.w))) * 3u;
    uint _434 = _427 + 1u;
    uint _441 = _427 + 2u;
    precise float _448 = _288 * cbObjMatrix._m0[_427].x;
    precise float _449 = _288 * cbObjMatrix._m0[_434].x;
    precise float _450 = _288 * cbObjMatrix._m0[_441].x;
    precise float _451 = _288 * cbObjMatrix._m0[_427].y;
    precise float _452 = _288 * cbObjMatrix._m0[_434].y;
    precise float _453 = _288 * cbObjMatrix._m0[_441].y;
    precise float _454 = _288 * cbObjMatrix._m0[_427].z;
    precise float _455 = _288 * cbObjMatrix._m0[_434].z;
    precise float _456 = _288 * cbObjMatrix._m0[_441].z;
    precise float _457 = _288 * cbObjMatrix._m0[_427].w;
    precise float _458 = _288 * cbObjMatrix._m0[_434].w;
    precise float _459 = _288 * cbObjMatrix._m0[_441].w;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = POSITION.x * _460;
    precise float _473 = POSITION.y * _463;
    precise float _474 = _473 + _472;
    precise float _475 = POSITION.z * _466;
    precise float _476 = _475 + _474;
    precise float _477 = 1.0 * _469;
    precise float _478 = _477 + _476;
    precise float _479 = POSITION.x * _461;
    precise float _480 = POSITION.y * _464;
    precise float _481 = _480 + _479;
    precise float _482 = POSITION.z * _467;
    precise float _483 = _482 + _481;
    precise float _484 = 1.0 * _470;
    precise float _485 = _484 + _483;
    precise float _486 = POSITION.x * _462;
    precise float _487 = POSITION.y * _465;
    precise float _488 = _487 + _486;
    precise float _489 = POSITION.z * _468;
    precise float _490 = _489 + _488;
    precise float _491 = 1.0 * _471;
    precise float _492 = _491 + _490;
    float _667 = (((((cbPrevObjMatrix._m0[_333].w * _286) + (cbPrevObjMatrix._m0[_298].w * _285)) + (cbPrevObjMatrix._m0[_380].w * _287)) + (cbPrevObjMatrix._m0[_427].w * _288)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_333].z * _286) + (cbPrevObjMatrix._m0[_298].z * _285)) + (cbPrevObjMatrix._m0[_380].z * _287)) + (cbPrevObjMatrix._m0[_427].z * _288), fma(POSITION.y, (((cbPrevObjMatrix._m0[_333].y * _286) + (cbPrevObjMatrix._m0[_298].y * _285)) + (cbPrevObjMatrix._m0[_380].y * _287)) + (cbPrevObjMatrix._m0[_427].y * _288), ((((cbPrevObjMatrix._m0[_333].x * _286) + (cbPrevObjMatrix._m0[_298].x * _285)) + (cbPrevObjMatrix._m0[_380].x * _287)) + (cbPrevObjMatrix._m0[_427].x * _288)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _668 = (((((cbPrevObjMatrix._m0[_340].w * _286) + (cbPrevObjMatrix._m0[_305].w * _285)) + (cbPrevObjMatrix._m0[_387].w * _287)) + (cbPrevObjMatrix._m0[_434].w * _288)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_340].z * _286) + (cbPrevObjMatrix._m0[_305].z * _285)) + (cbPrevObjMatrix._m0[_387].z * _287)) + (cbPrevObjMatrix._m0[_434].z * _288), fma(POSITION.y, (((cbPrevObjMatrix._m0[_340].y * _286) + (cbPrevObjMatrix._m0[_305].y * _285)) + (cbPrevObjMatrix._m0[_387].y * _287)) + (cbPrevObjMatrix._m0[_434].y * _288), ((((cbPrevObjMatrix._m0[_340].x * _286) + (cbPrevObjMatrix._m0[_305].x * _285)) + (cbPrevObjMatrix._m0[_387].x * _287)) + (cbPrevObjMatrix._m0[_434].x * _288)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _669 = (((((cbPrevObjMatrix._m0[_347].w * _286) + (cbPrevObjMatrix._m0[_312].w * _285)) + (cbPrevObjMatrix._m0[_394].w * _287)) + (cbPrevObjMatrix._m0[_441].w * _288)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_347].z * _286) + (cbPrevObjMatrix._m0[_312].z * _285)) + (cbPrevObjMatrix._m0[_394].z * _287)) + (cbPrevObjMatrix._m0[_441].z * _288), fma(POSITION.y, (((cbPrevObjMatrix._m0[_347].y * _286) + (cbPrevObjMatrix._m0[_312].y * _285)) + (cbPrevObjMatrix._m0[_394].y * _287)) + (cbPrevObjMatrix._m0[_441].y * _288), ((((cbPrevObjMatrix._m0[_347].x * _286) + (cbPrevObjMatrix._m0[_312].x * _285)) + (cbPrevObjMatrix._m0[_394].x * _287)) + (cbPrevObjMatrix._m0[_441].x * _288)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _716 = fma(_241, _466, fma(_240, _463, _460 * _238));
    float _719 = fma(_241, _467, fma(_240, _464, _461 * _238));
    float _722 = fma(_241, _468, fma(_240, _465, _462 * _238));
    precise float _747 = _478 - cbSceneParam._m0[3u].x;
    precise float _748 = _485 - cbSceneParam._m0[3u].y;
    precise float _749 = _492 - cbSceneParam._m0[3u].z;
    precise float _777 = _747 * cbSceneParam._m0[24u].x;
    precise float _778 = _748 * cbSceneParam._m0[24u].y;
    precise float _779 = _778 + _777;
    precise float _780 = _749 * cbSceneParam._m0[24u].z;
    precise float _781 = _780 + _779;
    precise float _782 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _783 = _782 + _781;
    precise float _784 = _747 * cbSceneParam._m0[25u].x;
    precise float _785 = _748 * cbSceneParam._m0[25u].y;
    precise float _786 = _785 + _784;
    precise float _787 = _749 * cbSceneParam._m0[25u].z;
    precise float _788 = _787 + _786;
    precise float _789 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _790 = _789 + _788;
    precise float _791 = _747 * cbSceneParam._m0[26u].x;
    precise float _792 = _748 * cbSceneParam._m0[26u].y;
    precise float _793 = _792 + _791;
    precise float _794 = _749 * cbSceneParam._m0[26u].z;
    precise float _795 = _794 + _793;
    precise float _796 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _797 = _796 + _795;
    precise float _798 = _747 * cbSceneParam._m0[27u].x;
    precise float _799 = _748 * cbSceneParam._m0[27u].y;
    precise float _800 = _799 + _798;
    precise float _801 = _749 * cbSceneParam._m0[27u].z;
    precise float _802 = _801 + _800;
    precise float _803 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _804 = _803 + _802;
    gl_Position.x = _783;
    gl_Position.y = _790;
    gl_Position.z = _797;
    gl_Position.w = _804;
    POSITION_1.x = _783;
    POSITION_1.y = _790;
    POSITION_1.z = _797;
    POSITION_1.w = _804;
    NORMAL_1.x = _716;
    NORMAL_1.y = _719;
    NORMAL_1.z = _722;
    NORMAL_1.w = float(_277);
    TANGENT_1.x = fma(_252, _466, fma(_251, _463, _460 * _250));
    TANGENT_1.y = fma(_252, _467, fma(_251, _464, _461 * _250));
    TANGENT_1.z = fma(_252, _468, fma(_251, _465, _462 * _250));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_264, _466, fma(_263, _463, _460 * _262));
    TANGENT_2_1.y = fma(_264, _467, fma(_263, _464, _461 * _262));
    TANGENT_2_1.z = fma(_264, _468, fma(_263, _465, _462 * _262));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_2.x;
    TEXCOORD_9 = TEXCOORD_2.y;
    TEXCOORD_10 = TEXCOORD_2.z;
    TEXCOORD_13.x = _783;
    TEXCOORD_13.y = _790;
    TEXCOORD_13.z = _797;
    TEXCOORD_13.w = _804;
    TEXCOORD_14.x = fma(_669, cbSceneParam._m0[29u].z, fma(_668, cbSceneParam._m0[29u].y, _667 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_14.y = fma(_669, cbSceneParam._m0[30u].z, fma(_668, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _667)) + cbSceneParam._m0[30u].w;
    TEXCOORD_14.z = fma(_669, cbSceneParam._m0[31u].z, fma(_668, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _667)) + cbSceneParam._m0[31u].w;
    TEXCOORD_14.w = fma(_669, cbSceneParam._m0[32u].z, fma(_668, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _667)) + cbSceneParam._m0[32u].w;
    TEXCOORD_15.x = _716;
    TEXCOORD_15.y = _719;
    TEXCOORD_15.z = _722;
    gl_ClipDistance[0u] = dot(vec4(_783, _790, _797, _804), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_783, _790, _797, _804), vec4(cbInstanceData._m0[_290 + 3u]));
}


