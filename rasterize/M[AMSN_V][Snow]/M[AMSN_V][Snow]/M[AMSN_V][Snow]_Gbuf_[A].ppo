#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _139 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _140 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _141 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _146 = inversesqrt(dot(vec3(_139, _140, _141), vec3(_139, _140, _141)));
    float _147 = _146 * _139;
    float _148 = _146 * _140;
    float _149 = _146 * _141;
    float _153 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _154 = _153 * NORMAL.x;
    float _155 = _153 * NORMAL.y;
    float _156 = _153 * NORMAL.z;
    float _160 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _161 = _160 * TANGENT.x;
    float _162 = _160 * TANGENT.y;
    float _163 = _160 * TANGENT.z;
    float _168;
    float _169;
    float _170;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _168 = (-0.0) - _154;
        _169 = (-0.0) - _155;
        _170 = (-0.0) - _156;
    }
    else
    {
        _168 = _154;
        _169 = _155;
        _170 = _156;
    }
    vec4 _189 = texture(sampler2D(M_AMSN_V_Snow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _194 = _189.z;
    float _198 = (_189.x * 2.0) + (-1.0);
    float _200 = (_189.y * 2.0) + (-1.0);
    float _201 = dot(vec2(_198, _200), vec2(_198, _200));
    float _528 = isnan(0.0) ? _201 : (isnan(_201) ? 0.0 : max(_201, 0.0));
    float _207 = sqrt(1.0 - (isnan(1.0) ? _528 : (isnan(_528) ? 1.0 : min(_528, 1.0))));
    float _210 = fma(_207, _168, fma(_200, _161, _198 * _147));
    float _213 = fma(_207, _169, fma(_200, _162, _198 * _148));
    float _216 = fma(_207, _170, fma(_200, _163, _198 * _149));
    float _225 = exp2(log2(inversesqrt(dot(vec3(_210, _213, _216), vec3(_210, _213, _216))) * _213) * cbMtdParam._m0[9u].x) * cbMtdParam._m0[9u].y;
    float _539 = isnan(0.0) ? _225 : (isnan(_225) ? 0.0 : max(_225, 0.0));
    float _226 = isnan(1.0) ? _539 : (isnan(_539) ? 1.0 : min(_539, 1.0));
    vec4 _238 = texture(sampler2D(M_AMSN_V_Snow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _254 = texture(sampler2D(M_AMSN_V_Snow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _256 = _254.x;
    float _257 = _254.y;
    float _258 = _254.z;
    float _265 = ((_238.x - _256) * _226) + _256;
    float _266 = ((_238.y - _257) * _226) + _257;
    float _267 = ((_238.z - _258) * _226) + _258;
    vec4 _279 = texture(sampler2D(M_AMSN_V_Snow_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _286 = (_279.x * 2.0) + (-1.0);
    float _287 = (_279.y * 2.0) + (-1.0);
    float _288 = dot(vec2(_286, _287), vec2(_286, _287));
    float _550 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _296 = ((_279.z - _194) * _226) + _194;
    float _305 = ((sqrt(1.0 - (isnan(1.0) ? _550 : (isnan(_550) ? 1.0 : min(_550, 1.0)))) - _207) * _226) + _207;
    vec4 _319 = texture(sampler2D(M_AMSN_V_Snow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _329 = (((_286 - _198) * _226) + _198) + (((_319.x * 2.0) + (-1.0)) * cbMtdParam._m0[9u].z);
    float _330 = (((_287 - _200) * _226) + _200) + (((_319.y * 2.0) + (-1.0)) * cbMtdParam._m0[9u].z);
    float _333 = fma(_305, _168, fma(_330, _161, _329 * _147));
    float _336 = fma(_305, _169, fma(_330, _162, _329 * _148));
    float _339 = fma(_305, _170, fma(_330, _163, _329 * _149));
    float _343 = inversesqrt(dot(vec3(_333, _336, _339), vec3(_333, _336, _339)));
    float _561 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
    float _572 = isnan(0.0) ? _265 : (isnan(_265) ? 0.0 : max(_265, 0.0));
    float _345 = isnan(1.0) ? _572 : (isnan(_572) ? 1.0 : min(_572, 1.0));
    float _583 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _346 = isnan(1.0) ? _583 : (isnan(_583) ? 1.0 : min(_583, 1.0));
    float _594 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
    float _347 = isnan(1.0) ? _594 : (isnan(_594) ? 1.0 : min(_594, 1.0));
    uint _349 = uint(roundEven(NORMAL.w));
    vec4 _354 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _356 = _354.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _419 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _605 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
        float _420 = isnan(1.0) ? _605 : (isnan(_605) ? 1.0 : min(_605, 1.0));
        float _424 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _616 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _616 : (isnan(_616) ? 1.0 : min(_616, 1.0))) - _420)) + _420) < ((_356 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _453;
    uint _376;
    vec4 _381;
    float _388;
    float _389;
    float _390;
    float _394;
    vec4 _398;
    float _400;
    float _401;
    bool _412;
    for (;;)
    {
        _376 = _349 * 13u;
        _381 = cbInstanceData._m0[(_376 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _385 = (cbMtdParam._m0[0u].x * _345) * _381.x;
        float _386 = (cbMtdParam._m0[0u].y * _346) * _381.y;
        float _387 = (cbMtdParam._m0[0u].z * _347) * _381.z;
        float _627 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
        _388 = isnan(1.0) ? _627 : (isnan(_627) ? 1.0 : min(_627, 1.0));
        float _638 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
        _389 = isnan(1.0) ? _638 : (isnan(_638) ? 1.0 : min(_638, 1.0));
        float _649 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
        _390 = isnan(1.0) ? _649 : (isnan(_649) ? 1.0 : min(_649, 1.0));
        _394 = cbInstanceData._m0[_376 + 6u].w;
        float _395 = _356 + (-0.5);
        _398 = cbMtdParam._m0[1u];
        _400 = _398.y * _395;
        _401 = _395 * 0.999000012874603271484375;
        _412 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_412)
        {
            if ((cbInstanceData._m0[_376 + 7u].x + _401) < 0.5)
            {
                _453 = true;
                break;
            }
        }
        if ((_381.w < 1.0) && ((_381.w + _401) < 0.5))
        {
            _453 = true;
            break;
        }
        if ((_400 + 1.0) < _398.x)
        {
            _453 = true;
            break;
        }
        _453 = false;
        break;
    }
    if (_453)
    {
        discard_state = true;
    }
    bool _479 = cbMtdParam._m0[1u].z != 0.0;
    float _480 = _479 ? _394 : 0.0;
    SV_Target.x = ((_333 * 0.5) * _343) + 0.500488758087158203125;
    SV_Target.y = ((_336 * 0.5) * _343) + 0.500488758087158203125;
    SV_Target.z = ((_339 * 0.5) * _343) + 0.500488758087158203125;
    SV_Target.w = _480;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _561 : (isnan(_561) ? 1.0 : min(_561, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _479 ? _394 : TEXCOORD.z;
    SV_Target_2.x = _388;
    SV_Target_2.y = _389;
    SV_Target_2.z = _390;
    SV_Target_2.w = _479 ? _394 : (float(floatBitsToUint(cbInstanceData._m0[_376 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _480;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _480;
    discard_exit();
}


