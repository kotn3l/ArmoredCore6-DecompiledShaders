#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_M1_Scroll_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M1_Scroll_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M1_Scroll_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _134 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _135 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _140 = inversesqrt(dot(vec3(_133, _134, _135), vec3(_133, _134, _135)));
    float _147 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _148 = _147 * NORMAL.x;
    float _149 = _147 * NORMAL.y;
    float _150 = _147 * NORMAL.z;
    float _154 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _162;
    float _163;
    float _164;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _162 = (-0.0) - _148;
        _163 = (-0.0) - _149;
        _164 = (-0.0) - _150;
    }
    else
    {
        _162 = _148;
        _163 = _149;
        _164 = _150;
    }
    float _178 = (cbMtdParam._m0[10u].y * cbPerFrame._m0[22u].x) + TEXCOORD.x;
    float _179 = (cbMtdParam._m0[10u].z * cbPerFrame._m0[22u].x) + TEXCOORD.y;
    vec4 _192 = texture(sampler2D(M_AMSN_M1_Scroll_snp_0_Texture2D_0, SS_DiffuseMap), vec2((_178 * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (_179 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _198 = _192.x * cbMtdParam._m0[9u].x;
    float _199 = _192.y * cbMtdParam._m0[9u].y;
    float _200 = _192.z * cbMtdParam._m0[9u].z;
    float _216 = cbMtdParam._m0[10u].x + texture(sampler2D(M_AMSN_M1_Scroll_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _178) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _179) + cbTextureTilingScale._m0[2u].w)).x;
    vec4 _228 = texture(sampler2D(M_AMSN_M1_Scroll_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _178) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _179) + cbTextureTilingScale._m0[1u].w));
    float _232 = _228.z;
    float _236 = (_228.x * 2.0) + (-1.0);
    float _238 = (_228.y * 2.0) + (-1.0);
    float _239 = dot(vec2(_236, _238), vec2(_236, _238));
    float _350 = isnan(0.0) ? _239 : (isnan(_239) ? 0.0 : max(_239, 0.0));
    float _245 = sqrt(1.0 - (isnan(1.0) ? _350 : (isnan(_350) ? 1.0 : min(_350, 1.0))));
    float _248 = fma(_245, _162, fma(_238, _154 * TANGENT.x, (_140 * _133) * _236));
    float _251 = fma(_245, _163, fma(_238, _154 * TANGENT.y, (_140 * _134) * _236));
    float _254 = fma(_245, _164, fma(_238, _154 * TANGENT.z, (_140 * _135) * _236));
    float _258 = inversesqrt(dot(vec3(_248, _251, _254), vec3(_248, _251, _254)));
    float _361 = isnan(0.0) ? _232 : (isnan(_232) ? 0.0 : max(_232, 0.0));
    float _372 = isnan(0.0) ? _198 : (isnan(_198) ? 0.0 : max(_198, 0.0));
    float _383 = isnan(0.0) ? _199 : (isnan(_199) ? 0.0 : max(_199, 0.0));
    float _394 = isnan(0.0) ? _200 : (isnan(_200) ? 0.0 : max(_200, 0.0));
    float _405 = isnan(0.0) ? _216 : (isnan(_216) ? 0.0 : max(_216, 0.0));
    uint _278 = uint(roundEven(NORMAL.w)) * 13u;
    uint _281 = (_278 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _287 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _372 : (isnan(_372) ? 1.0 : min(_372, 1.0)))) * cbInstanceData._m0[_281].x;
    float _288 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _383 : (isnan(_383) ? 1.0 : min(_383, 1.0)))) * cbInstanceData._m0[_281].y;
    float _289 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _394 : (isnan(_394) ? 1.0 : min(_394, 1.0)))) * cbInstanceData._m0[_281].z;
    float _416 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
    float _427 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _438 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
    uint _293 = _278 + 6u;
    bool _322 = cbMtdParam._m0[1u].z != 0.0;
    float _323 = _322 ? cbInstanceData._m0[_293].w : 0.0;
    SV_Target.x = ((_248 * 0.5) * _258) + 0.500488758087158203125;
    SV_Target.y = ((_251 * 0.5) * _258) + 0.500488758087158203125;
    SV_Target.z = ((_254 * 0.5) * _258) + 0.500488758087158203125;
    SV_Target.w = _323;
    SV_Target_1.x = isnan(1.0) ? _405 : (isnan(_405) ? 1.0 : min(_405, 1.0));
    SV_Target_1.y = isnan(1.0) ? _361 : (isnan(_361) ? 1.0 : min(_361, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _322 ? cbInstanceData._m0[_293].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _416 : (isnan(_416) ? 1.0 : min(_416, 1.0));
    SV_Target_2.y = isnan(1.0) ? _427 : (isnan(_427) ? 1.0 : min(_427, 1.0));
    SV_Target_2.z = isnan(1.0) ? _438 : (isnan(_438) ? 1.0 : min(_438, 1.0));
    SV_Target_2.w = _322 ? cbInstanceData._m0[_293].w : (float(floatBitsToUint(cbInstanceData._m0[_278 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _323;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _323;
}


