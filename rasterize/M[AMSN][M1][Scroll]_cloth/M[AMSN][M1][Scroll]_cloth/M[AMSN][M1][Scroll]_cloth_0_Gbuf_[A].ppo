#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M1_Scroll_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M1_Scroll_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M1_Scroll_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _147 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _148 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _149 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _154 = inversesqrt(dot(vec3(_147, _148, _149), vec3(_147, _148, _149)));
    float _161 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _162 = _161 * NORMAL.x;
    float _163 = _161 * NORMAL.y;
    float _164 = _161 * NORMAL.z;
    float _168 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _176;
    float _177;
    float _178;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _176 = (-0.0) - _162;
        _177 = (-0.0) - _163;
        _178 = (-0.0) - _164;
    }
    else
    {
        _176 = _162;
        _177 = _163;
        _178 = _164;
    }
    float _192 = (cbMtdParam._m0[10u].y * cbPerFrame._m0[22u].x) + TEXCOORD.x;
    float _193 = (cbMtdParam._m0[10u].z * cbPerFrame._m0[22u].x) + TEXCOORD.y;
    vec4 _206 = texture(sampler2D(M_AMSN_M1_Scroll_snp_0_Texture2D_0, SS_DiffuseMap), vec2((_192 * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (_193 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _212 = _206.x * cbMtdParam._m0[9u].x;
    float _213 = _206.y * cbMtdParam._m0[9u].y;
    float _214 = _206.z * cbMtdParam._m0[9u].z;
    vec4 _226 = texture(sampler2D(M_AMSN_M1_Scroll_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _192) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _193) + cbTextureTilingScale._m0[2u].w));
    float _230 = cbMtdParam._m0[10u].x + _226.x;
    vec4 _242 = texture(sampler2D(M_AMSN_M1_Scroll_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _192) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _193) + cbTextureTilingScale._m0[1u].w));
    float _246 = _242.z;
    float _250 = (_242.x * 2.0) + (-1.0);
    float _252 = (_242.y * 2.0) + (-1.0);
    float _253 = dot(vec2(_250, _252), vec2(_250, _252));
    float _458 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
    float _259 = sqrt(1.0 - (isnan(1.0) ? _458 : (isnan(_458) ? 1.0 : min(_458, 1.0))));
    float _262 = fma(_259, _176, fma(_252, _168 * TANGENT.x, (_154 * _147) * _250));
    float _265 = fma(_259, _177, fma(_252, _168 * TANGENT.y, (_154 * _148) * _250));
    float _268 = fma(_259, _178, fma(_252, _168 * TANGENT.z, (_154 * _149) * _250));
    float _272 = inversesqrt(dot(vec3(_262, _265, _268), vec3(_262, _265, _268)));
    float _469 = isnan(0.0) ? _246 : (isnan(_246) ? 0.0 : max(_246, 0.0));
    float _480 = isnan(0.0) ? _212 : (isnan(_212) ? 0.0 : max(_212, 0.0));
    float _274 = isnan(1.0) ? _480 : (isnan(_480) ? 1.0 : min(_480, 1.0));
    float _491 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _275 = isnan(1.0) ? _491 : (isnan(_491) ? 1.0 : min(_491, 1.0));
    float _502 = isnan(0.0) ? _214 : (isnan(_214) ? 0.0 : max(_214, 0.0));
    float _276 = isnan(1.0) ? _502 : (isnan(_502) ? 1.0 : min(_502, 1.0));
    float _513 = isnan(0.0) ? _230 : (isnan(_230) ? 0.0 : max(_230, 0.0));
    uint _279 = uint(roundEven(NORMAL.w));
    vec4 _284 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _286 = _284.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _349 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _524 = isnan(0.0) ? _349 : (isnan(_349) ? 0.0 : max(_349, 0.0));
        float _350 = isnan(1.0) ? _524 : (isnan(_524) ? 1.0 : min(_524, 1.0));
        float _354 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _535 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _535 : (isnan(_535) ? 1.0 : min(_535, 1.0))) - _350)) + _350) < ((_286 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _383;
    uint _306;
    vec4 _311;
    float _318;
    float _319;
    float _320;
    float _324;
    vec4 _328;
    float _330;
    float _331;
    bool _342;
    for (;;)
    {
        _306 = _279 * 13u;
        _311 = cbInstanceData._m0[(_306 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _315 = (cbMtdParam._m0[0u].x * _274) * _311.x;
        float _316 = (cbMtdParam._m0[0u].y * _275) * _311.y;
        float _317 = (cbMtdParam._m0[0u].z * _276) * _311.z;
        float _546 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
        _318 = isnan(1.0) ? _546 : (isnan(_546) ? 1.0 : min(_546, 1.0));
        float _557 = isnan(0.0) ? _316 : (isnan(_316) ? 0.0 : max(_316, 0.0));
        _319 = isnan(1.0) ? _557 : (isnan(_557) ? 1.0 : min(_557, 1.0));
        float _568 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
        _320 = isnan(1.0) ? _568 : (isnan(_568) ? 1.0 : min(_568, 1.0));
        _324 = cbInstanceData._m0[_306 + 6u].w;
        float _325 = _286 + (-0.5);
        _328 = cbMtdParam._m0[1u];
        _330 = _328.y * _325;
        _331 = _325 * 0.999000012874603271484375;
        _342 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_342)
        {
            if ((cbInstanceData._m0[_306 + 7u].x + _331) < 0.5)
            {
                _383 = true;
                break;
            }
        }
        if ((_311.w < 1.0) && ((_311.w + _331) < 0.5))
        {
            _383 = true;
            break;
        }
        if ((_330 + 1.0) < _328.x)
        {
            _383 = true;
            break;
        }
        _383 = false;
        break;
    }
    if (_383)
    {
        discard_state = true;
    }
    bool _409 = cbMtdParam._m0[1u].z != 0.0;
    float _410 = _409 ? _324 : 0.0;
    SV_Target.x = ((_262 * 0.5) * _272) + 0.500488758087158203125;
    SV_Target.y = ((_265 * 0.5) * _272) + 0.500488758087158203125;
    SV_Target.z = ((_268 * 0.5) * _272) + 0.500488758087158203125;
    SV_Target.w = _410;
    SV_Target_1.x = isnan(1.0) ? _513 : (isnan(_513) ? 1.0 : min(_513, 1.0));
    SV_Target_1.y = isnan(1.0) ? _469 : (isnan(_469) ? 1.0 : min(_469, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _409 ? _324 : TEXCOORD.z;
    SV_Target_2.x = _318;
    SV_Target_2.y = _319;
    SV_Target_2.z = _320;
    SV_Target_2.w = _409 ? _324 : (float(floatBitsToUint(cbInstanceData._m0[_306 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _410;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _410;
    discard_exit();
}


