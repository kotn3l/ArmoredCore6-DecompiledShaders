#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_20;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_5;
layout(location = 5) in float TEXCOORD_13;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _168 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _169 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _170 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _176 = inversesqrt(dot(vec3(_168, _169, _170), vec3(_168, _169, _170)));
    float _183 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _190 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _213 = texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _219 = _213.x * cbMtdParam._m0[10u].x;
    float _220 = _213.y * cbMtdParam._m0[10u].y;
    float _221 = _213.z * cbMtdParam._m0[10u].z;
    vec4 _239 = texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _289 = cbMtdParam._m0[18u].y * texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w)).x;
    float _300 = ((cbMtdParam._m0[15u].x * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[19u].x * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[19u].y * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).x) * 2.0) - _289)) + 1.0;
    float _887 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
    float _301 = isnan(1.0) ? _887 : (isnan(_887) ? 1.0 : min(_887, 1.0));
    float _308 = (_301 * ((_239.x * cbMtdParam._m0[11u].x) - _219)) + _219;
    float _309 = (_301 * ((_239.y * cbMtdParam._m0[11u].y) - _220)) + _220;
    float _310 = (_301 * ((_239.z * cbMtdParam._m0[11u].z) - _221)) + _221;
    vec4 _328 = texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _355 = ((cbMtdParam._m0[17u].w * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[19u].z * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[19u].w * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).y) * 2.0) - _289)) + 1.0;
    float _898 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _356 = isnan(1.0) ? _898 : (isnan(_898) ? 1.0 : min(_898, 1.0));
    float _363 = (_356 * ((_328.x * cbMtdParam._m0[12u].x) - _308)) + _308;
    float _364 = (_356 * ((_328.y * cbMtdParam._m0[12u].y) - _309)) + _309;
    float _365 = (_356 * ((_328.z * cbMtdParam._m0[12u].z) - _310)) + _310;
    vec4 _382 = texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _407 = ((cbMtdParam._m0[18u].x * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[18u].z * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[18u].w * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z) * 2.0) - _289)) + 1.0;
    float _909 = isnan(0.0) ? _407 : (isnan(_407) ? 0.0 : max(_407, 0.0));
    float _408 = isnan(1.0) ? _909 : (isnan(_909) ? 1.0 : min(_909, 1.0));
    float _415 = (_408 * ((_382.x * cbMtdParam._m0[13u].x) - _363)) + _363;
    float _416 = (_408 * ((_382.y * cbMtdParam._m0[13u].y) - _364)) + _364;
    float _417 = (_408 * ((_382.z * cbMtdParam._m0[13u].z) - _365)) + _365;
    vec4 _437 = texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.z) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.w) + cbTextureTilingScale._m0[12u].w));
    float _466 = (TEXCOORD_5.x - ((cbMtdParam._m0[15u].w * (1.0 - TEXCOORD_5.x)) * (texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.z) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.w) + cbTextureTilingScale._m0[18u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[15u].z + 1.0);
    float _920 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _467 = isnan(1.0) ? _920 : (isnan(_920) ? 1.0 : min(_920, 1.0));
    float _474 = (_467 * ((_437.x * cbMtdParam._m0[14u].x) - _415)) + _415;
    float _475 = (_467 * ((_437.y * cbMtdParam._m0[14u].y) - _416)) + _416;
    float _476 = (_467 * ((_437.z * cbMtdParam._m0[14u].z) - _417)) + _417;
    vec4 _489 = texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _491 = _489.x;
    float _509 = ((texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w)).x - _491) * _301) + _491;
    float _527 = ((texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _509) * _356) + _509;
    float _544 = ((texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _527) * _408) + _527;
    float _546 = _544 - (_544 * TEXCOORD_5.x);
    vec4 _559 = texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    vec4 _581 = texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    float _583 = _581.x;
    float _584 = _581.y;
    float _587 = cbMtdParam._m0[17u].y * _581.z;
    vec4 _599 = texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _608 = (((cbMtdParam._m0[17u].x * _599.z) - _587) * _301) + _587;
    vec4 _621 = texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _633 = (((cbMtdParam._m0[16u].w * _621.z) - _608) * _356) + _608;
    vec4 _646 = texture(sampler2D(C_3Mask_Detail_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _655 = (((cbMtdParam._m0[16u].z * _646.z) - _633) * _408) + _633;
    float _660 = ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * ((_559.z * cbMtdParam._m0[17u].z) - _655)) + _655;
    float _665 = ((_599.x - _583) * _301) + _583;
    float _666 = ((_599.y - _584) * _301) + _584;
    float _671 = ((_621.x - _665) * _356) + _665;
    float _672 = ((_621.y - _666) * _356) + _666;
    float _681 = ((((_646.x - _671) * _408) + _671) * 2.0) + (-1.0);
    float _682 = ((((_646.y - _672) * _408) + _672) * 2.0) + (-1.0);
    float _683 = dot(vec2(_681, _682), vec2(_681, _682));
    float _931 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0));
    float _688 = sqrt(1.0 - (isnan(1.0) ? _931 : (isnan(_931) ? 1.0 : min(_931, 1.0))));
    float _694 = ((((_559.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _681;
    float _695 = ((((_559.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _682;
    float _698 = fma(_688, _183 * NORMAL.x, fma(_695, _190 * TANGENT.x, (_176 * _168) * _694));
    float _701 = fma(_688, _183 * NORMAL.y, fma(_695, _190 * TANGENT.y, (_176 * _169) * _694));
    float _704 = fma(_688, _183 * NORMAL.z, fma(_695, _190 * TANGENT.z, (_176 * _170) * _694));
    float _708 = inversesqrt(dot(vec3(_698, _701, _704), vec3(_698, _701, _704)));
    float _942 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _953 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _710 = isnan(1.0) ? _953 : (isnan(_953) ? 1.0 : min(_953, 1.0));
    float _964 = isnan(0.0) ? _475 : (isnan(_475) ? 0.0 : max(_475, 0.0));
    float _711 = isnan(1.0) ? _964 : (isnan(_964) ? 1.0 : min(_964, 1.0));
    float _975 = isnan(0.0) ? _476 : (isnan(_476) ? 0.0 : max(_476, 0.0));
    float _712 = isnan(1.0) ? _975 : (isnan(_975) ? 1.0 : min(_975, 1.0));
    float _986 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    uint _715 = uint(roundEven(NORMAL.w));
    vec4 _720 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _722 = _720.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _782 = (cbMatDynParam._m0[5u].x * TEXCOORD_13) + cbMatDynParam._m0[5u].y;
        float _997 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
        float _783 = isnan(1.0) ? _997 : (isnan(_997) ? 1.0 : min(_997, 1.0));
        float _787 = (cbMatDynParam._m0[5u].z * TEXCOORD_13) + cbMatDynParam._m0[5u].w;
        float _1008 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1008 : (isnan(_1008) ? 1.0 : min(_1008, 1.0))) - _783)) + _783) < ((_722 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _814;
    uint _741;
    vec4 _745;
    float _752;
    float _753;
    float _754;
    float _758;
    vec4 _762;
    float _764;
    float _765;
    bool _776;
    for (;;)
    {
        _741 = _715 * 13u;
        _745 = cbInstanceData._m0[(_741 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _749 = (cbMtdParam._m0[0u].x * _710) * _745.x;
        float _750 = (cbMtdParam._m0[0u].y * _711) * _745.y;
        float _751 = (cbMtdParam._m0[0u].z * _712) * _745.z;
        float _1019 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
        _752 = isnan(1.0) ? _1019 : (isnan(_1019) ? 1.0 : min(_1019, 1.0));
        float _1030 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
        _753 = isnan(1.0) ? _1030 : (isnan(_1030) ? 1.0 : min(_1030, 1.0));
        float _1041 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
        _754 = isnan(1.0) ? _1041 : (isnan(_1041) ? 1.0 : min(_1041, 1.0));
        _758 = cbInstanceData._m0[_741 + 6u].w;
        float _759 = _722 + (-0.5);
        _762 = cbMtdParam._m0[1u];
        _764 = _762.y * _759;
        _765 = _759 * 0.999000012874603271484375;
        _776 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_776)
        {
            if ((cbInstanceData._m0[_741 + 7u].x + _765) < 0.5)
            {
                _814 = true;
                break;
            }
        }
        if ((_745.w < 1.0) && ((_745.w + _765) < 0.5))
        {
            _814 = true;
            break;
        }
        if ((_764 + 1.0) < _762.x)
        {
            _814 = true;
            break;
        }
        _814 = false;
        break;
    }
    if (_814)
    {
        discard_state = true;
    }
    bool _840 = cbMtdParam._m0[1u].z != 0.0;
    float _841 = _840 ? _758 : 0.0;
    SV_Target.x = ((_698 * 0.5) * _708) + 0.500488758087158203125;
    SV_Target.y = ((_701 * 0.5) * _708) + 0.500488758087158203125;
    SV_Target.z = ((_704 * 0.5) * _708) + 0.500488758087158203125;
    SV_Target.w = _841;
    SV_Target_1.x = isnan(1.0) ? _986 : (isnan(_986) ? 1.0 : min(_986, 1.0));
    SV_Target_1.y = isnan(1.0) ? _942 : (isnan(_942) ? 1.0 : min(_942, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _840 ? _758 : TEXCOORD_5.w;
    SV_Target_2.x = _752;
    SV_Target_2.y = _753;
    SV_Target_2.z = _754;
    SV_Target_2.w = _840 ? _758 : (float(floatBitsToUint(cbInstanceData._m0[_741 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _841;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _841;
    discard_exit();
}


