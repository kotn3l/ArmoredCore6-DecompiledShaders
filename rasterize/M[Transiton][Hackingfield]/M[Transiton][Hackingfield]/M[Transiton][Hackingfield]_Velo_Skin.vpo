#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec3 TEXCOORD_4;
layout(location = 6) out vec4 TEXCOORD_9;
layout(location = 7) out vec4 TEXCOORD_10;
layout(location = 8) out vec3 TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _229 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _231 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _232 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _241 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _242 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _243 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _253 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _255 = texelFetch(g_InstanceIndexBuffer, int(_253));
    uint _256 = _255.x;
    precise float _257 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _262 = isnan(_257) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _257 : max(0.001000000047497451305389404296875, _257));
    precise float _264 = BLENDWEIGHT.x / _262;
    precise float _265 = BLENDWEIGHT.y / _262;
    precise float _266 = BLENDWEIGHT.z / _262;
    precise float _267 = BLENDWEIGHT.w / _262;
    uint _269 = _256 * 13u;
    uvec4 _274 = floatBitsToUint(cbInstanceData._m0[_269 + 4u]);
    uint _275 = _274.x;
    uint _277 = (_275 + uint(float(BLENDINDICES.x))) * 3u;
    uint _284 = _277 + 1u;
    uint _291 = _277 + 2u;
    precise float _298 = _264 * cbObjMatrix._m0[_277].x;
    precise float _299 = _264 * cbObjMatrix._m0[_284].x;
    precise float _300 = _264 * cbObjMatrix._m0[_291].x;
    precise float _301 = _264 * cbObjMatrix._m0[_277].y;
    precise float _302 = _264 * cbObjMatrix._m0[_284].y;
    precise float _303 = _264 * cbObjMatrix._m0[_291].y;
    precise float _304 = _264 * cbObjMatrix._m0[_277].z;
    precise float _305 = _264 * cbObjMatrix._m0[_284].z;
    precise float _306 = _264 * cbObjMatrix._m0[_291].z;
    precise float _307 = _264 * cbObjMatrix._m0[_277].w;
    precise float _308 = _264 * cbObjMatrix._m0[_284].w;
    precise float _309 = _264 * cbObjMatrix._m0[_291].w;
    uint _312 = (_275 + uint(float(BLENDINDICES.y))) * 3u;
    uint _319 = _312 + 1u;
    uint _326 = _312 + 2u;
    precise float _333 = _265 * cbObjMatrix._m0[_312].x;
    precise float _334 = _265 * cbObjMatrix._m0[_319].x;
    precise float _335 = _265 * cbObjMatrix._m0[_326].x;
    precise float _336 = _265 * cbObjMatrix._m0[_312].y;
    precise float _337 = _265 * cbObjMatrix._m0[_319].y;
    precise float _338 = _265 * cbObjMatrix._m0[_326].y;
    precise float _339 = _265 * cbObjMatrix._m0[_312].z;
    precise float _340 = _265 * cbObjMatrix._m0[_319].z;
    precise float _341 = _265 * cbObjMatrix._m0[_326].z;
    precise float _342 = _265 * cbObjMatrix._m0[_312].w;
    precise float _343 = _265 * cbObjMatrix._m0[_319].w;
    precise float _344 = _265 * cbObjMatrix._m0[_326].w;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    uint _359 = (_275 + uint(float(BLENDINDICES.z))) * 3u;
    uint _366 = _359 + 1u;
    uint _373 = _359 + 2u;
    precise float _380 = _266 * cbObjMatrix._m0[_359].x;
    precise float _381 = _266 * cbObjMatrix._m0[_366].x;
    precise float _382 = _266 * cbObjMatrix._m0[_373].x;
    precise float _383 = _266 * cbObjMatrix._m0[_359].y;
    precise float _384 = _266 * cbObjMatrix._m0[_366].y;
    precise float _385 = _266 * cbObjMatrix._m0[_373].y;
    precise float _386 = _266 * cbObjMatrix._m0[_359].z;
    precise float _387 = _266 * cbObjMatrix._m0[_366].z;
    precise float _388 = _266 * cbObjMatrix._m0[_373].z;
    precise float _389 = _266 * cbObjMatrix._m0[_359].w;
    precise float _390 = _266 * cbObjMatrix._m0[_366].w;
    precise float _391 = _266 * cbObjMatrix._m0[_373].w;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    uint _406 = (_275 + uint(float(BLENDINDICES.w))) * 3u;
    uint _413 = _406 + 1u;
    uint _420 = _406 + 2u;
    precise float _427 = _267 * cbObjMatrix._m0[_406].x;
    precise float _428 = _267 * cbObjMatrix._m0[_413].x;
    precise float _429 = _267 * cbObjMatrix._m0[_420].x;
    precise float _430 = _267 * cbObjMatrix._m0[_406].y;
    precise float _431 = _267 * cbObjMatrix._m0[_413].y;
    precise float _432 = _267 * cbObjMatrix._m0[_420].y;
    precise float _433 = _267 * cbObjMatrix._m0[_406].z;
    precise float _434 = _267 * cbObjMatrix._m0[_413].z;
    precise float _435 = _267 * cbObjMatrix._m0[_420].z;
    precise float _436 = _267 * cbObjMatrix._m0[_406].w;
    precise float _437 = _267 * cbObjMatrix._m0[_413].w;
    precise float _438 = _267 * cbObjMatrix._m0[_420].w;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = POSITION.x * _439;
    precise float _452 = POSITION.y * _442;
    precise float _453 = _452 + _451;
    precise float _454 = POSITION.z * _445;
    precise float _455 = _454 + _453;
    precise float _456 = 1.0 * _448;
    precise float _457 = _456 + _455;
    precise float _458 = POSITION.x * _440;
    precise float _459 = POSITION.y * _443;
    precise float _460 = _459 + _458;
    precise float _461 = POSITION.z * _446;
    precise float _462 = _461 + _460;
    precise float _463 = 1.0 * _449;
    precise float _464 = _463 + _462;
    precise float _465 = POSITION.x * _441;
    precise float _466 = POSITION.y * _444;
    precise float _467 = _466 + _465;
    precise float _468 = POSITION.z * _447;
    precise float _469 = _468 + _467;
    precise float _470 = 1.0 * _450;
    precise float _471 = _470 + _469;
    float _646 = (((((cbPrevObjMatrix._m0[_312].w * _265) + (cbPrevObjMatrix._m0[_277].w * _264)) + (cbPrevObjMatrix._m0[_359].w * _266)) + (cbPrevObjMatrix._m0[_406].w * _267)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_312].z * _265) + (cbPrevObjMatrix._m0[_277].z * _264)) + (cbPrevObjMatrix._m0[_359].z * _266)) + (cbPrevObjMatrix._m0[_406].z * _267), fma(POSITION.y, (((cbPrevObjMatrix._m0[_312].y * _265) + (cbPrevObjMatrix._m0[_277].y * _264)) + (cbPrevObjMatrix._m0[_359].y * _266)) + (cbPrevObjMatrix._m0[_406].y * _267), ((((cbPrevObjMatrix._m0[_312].x * _265) + (cbPrevObjMatrix._m0[_277].x * _264)) + (cbPrevObjMatrix._m0[_359].x * _266)) + (cbPrevObjMatrix._m0[_406].x * _267)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _647 = (((((cbPrevObjMatrix._m0[_319].w * _265) + (cbPrevObjMatrix._m0[_284].w * _264)) + (cbPrevObjMatrix._m0[_366].w * _266)) + (cbPrevObjMatrix._m0[_413].w * _267)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_319].z * _265) + (cbPrevObjMatrix._m0[_284].z * _264)) + (cbPrevObjMatrix._m0[_366].z * _266)) + (cbPrevObjMatrix._m0[_413].z * _267), fma(POSITION.y, (((cbPrevObjMatrix._m0[_319].y * _265) + (cbPrevObjMatrix._m0[_284].y * _264)) + (cbPrevObjMatrix._m0[_366].y * _266)) + (cbPrevObjMatrix._m0[_413].y * _267), ((((cbPrevObjMatrix._m0[_319].x * _265) + (cbPrevObjMatrix._m0[_284].x * _264)) + (cbPrevObjMatrix._m0[_366].x * _266)) + (cbPrevObjMatrix._m0[_413].x * _267)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _648 = (((((cbPrevObjMatrix._m0[_326].w * _265) + (cbPrevObjMatrix._m0[_291].w * _264)) + (cbPrevObjMatrix._m0[_373].w * _266)) + (cbPrevObjMatrix._m0[_420].w * _267)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_326].z * _265) + (cbPrevObjMatrix._m0[_291].z * _264)) + (cbPrevObjMatrix._m0[_373].z * _266)) + (cbPrevObjMatrix._m0[_420].z * _267), fma(POSITION.y, (((cbPrevObjMatrix._m0[_326].y * _265) + (cbPrevObjMatrix._m0[_291].y * _264)) + (cbPrevObjMatrix._m0[_373].y * _266)) + (cbPrevObjMatrix._m0[_420].y * _267), ((((cbPrevObjMatrix._m0[_326].x * _265) + (cbPrevObjMatrix._m0[_291].x * _264)) + (cbPrevObjMatrix._m0[_373].x * _266)) + (cbPrevObjMatrix._m0[_420].x * _267)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _695 = fma(_232, _445, fma(_231, _442, _439 * _229));
    float _698 = fma(_232, _446, fma(_231, _443, _440 * _229));
    float _701 = fma(_232, _447, fma(_231, _444, _441 * _229));
    precise float _717 = _457 - cbSceneParam._m0[3u].x;
    precise float _718 = _464 - cbSceneParam._m0[3u].y;
    precise float _719 = _471 - cbSceneParam._m0[3u].z;
    precise float _747 = _717 * cbSceneParam._m0[24u].x;
    precise float _748 = _718 * cbSceneParam._m0[24u].y;
    precise float _749 = _748 + _747;
    precise float _750 = _719 * cbSceneParam._m0[24u].z;
    precise float _751 = _750 + _749;
    precise float _752 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _753 = _752 + _751;
    precise float _754 = _717 * cbSceneParam._m0[25u].x;
    precise float _755 = _718 * cbSceneParam._m0[25u].y;
    precise float _756 = _755 + _754;
    precise float _757 = _719 * cbSceneParam._m0[25u].z;
    precise float _758 = _757 + _756;
    precise float _759 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _760 = _759 + _758;
    precise float _761 = _717 * cbSceneParam._m0[26u].x;
    precise float _762 = _718 * cbSceneParam._m0[26u].y;
    precise float _763 = _762 + _761;
    precise float _764 = _719 * cbSceneParam._m0[26u].z;
    precise float _765 = _764 + _763;
    precise float _766 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _767 = _766 + _765;
    precise float _768 = _717 * cbSceneParam._m0[27u].x;
    precise float _769 = _718 * cbSceneParam._m0[27u].y;
    precise float _770 = _769 + _768;
    precise float _771 = _719 * cbSceneParam._m0[27u].z;
    precise float _772 = _771 + _770;
    precise float _773 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _774 = _773 + _772;
    gl_Position.x = _753;
    gl_Position.y = _760;
    gl_Position.z = _767;
    gl_Position.w = _774;
    POSITION_1.x = _753;
    POSITION_1.y = _760;
    POSITION_1.z = _767;
    POSITION_1.w = _774;
    NORMAL_1.x = _695;
    NORMAL_1.y = _698;
    NORMAL_1.z = _701;
    NORMAL_1.w = float(_256);
    TANGENT_1.x = fma(_243, _445, fma(_242, _442, _439 * _241));
    TANGENT_1.y = fma(_243, _446, fma(_242, _443, _440 * _241));
    TANGENT_1.z = fma(_243, _447, fma(_242, _444, _441 * _241));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    TEXCOORD_9.x = _753;
    TEXCOORD_9.y = _760;
    TEXCOORD_9.z = _767;
    TEXCOORD_9.w = _774;
    TEXCOORD_10.x = fma(_648, cbSceneParam._m0[29u].z, fma(_647, cbSceneParam._m0[29u].y, _646 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_10.y = fma(_648, cbSceneParam._m0[30u].z, fma(_647, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _646)) + cbSceneParam._m0[30u].w;
    TEXCOORD_10.z = fma(_648, cbSceneParam._m0[31u].z, fma(_647, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _646)) + cbSceneParam._m0[31u].w;
    TEXCOORD_10.w = fma(_648, cbSceneParam._m0[32u].z, fma(_647, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _646)) + cbSceneParam._m0[32u].w;
    TEXCOORD_11.x = _695;
    TEXCOORD_11.y = _698;
    TEXCOORD_11.z = _701;
    gl_ClipDistance[0u] = dot(vec4(_753, _760, _767, _774), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_753, _760, _767, _774), vec4(cbInstanceData._m0[_269 + 3u]));
}


