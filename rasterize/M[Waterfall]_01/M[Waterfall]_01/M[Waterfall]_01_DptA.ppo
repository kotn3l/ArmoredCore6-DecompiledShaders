#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Waterfall_01_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in vec2 TEXCOORD_5;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    float _141 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _151 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _141);
    float _152 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _141);
    float _153 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _141);
    float _158 = cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x;
    float _196 = cbMtdParam._m0[13u].w - cbMtdParam._m0[15u].y;
    float _199 = (sqrt(((_151 * _151) + (_152 * _152)) + (_153 * _153)) - cbMtdParam._m0[15u].y) / (isnan(0.001000000047497451305389404296875) ? _196 : (isnan(_196) ? 0.001000000047497451305389404296875 : max(_196, 0.001000000047497451305389404296875)));
    float _393 = isnan(0.0) ? _199 : (isnan(_199) ? 0.0 : max(_199, 0.0));
    float _213 = gl_FragCoord.x * 0.125;
    float _215 = gl_FragCoord.y * 0.125;
    float _225 = float((((((isnan(1.0) ? _393 : (isnan(_393) ? 1.0 : min(_393, 1.0))) * (cbMtdParam._m0[15u].x + (-0.001000000047497451305389404296875))) + 0.001000000047497451305389404296875) * cbMtdParam._m0[15u].x) * ((TEXCOORD_1.z * 2.0) - (cbMtdParam._m0[13u].x * texture(sampler2D(M_Waterfall_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_158 * cbMtdParam._m0[17u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_158 * cbMtdParam._m0[17u].y) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w))) >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_213, _215)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    uint _227 = uint(roundEven(NORMAL.w));
    float _267 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _276 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _267);
    float _277 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _267);
    float _278 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _267);
    vec4 _279 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_213, _215));
    float _281 = _279.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _313 = sqrt(((_276 * _276) + (_277 * _277)) + (_278 * _278));
        float _320 = (cbMatDynParam._m0[5u].x * _313) + cbMatDynParam._m0[5u].y;
        float _404 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
        float _321 = isnan(1.0) ? _404 : (isnan(_404) ? 1.0 : min(_404, 1.0));
        float _325 = (cbMatDynParam._m0[5u].z * _313) + cbMatDynParam._m0[5u].w;
        float _415 = isnan(0.0) ? _325 : (isnan(_325) ? 0.0 : max(_325, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _415 : (isnan(_415) ? 1.0 : min(_415, 1.0))) - _321)) + _321) < ((_281 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _360;
    vec4 _292;
    float _294;
    float _295;
    bool _306;
    uint _307;
    for (;;)
    {
        float _289 = _281 + (-0.5);
        _292 = cbMtdParam._m0[1u];
        _294 = _292.y * _289;
        _295 = _289 * 0.999000012874603271484375;
        _306 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        _307 = _227 * 13u;
        if (_306)
        {
            if ((cbInstanceData._m0[_307 + 7u].x + _295) < 0.5)
            {
                _360 = true;
                break;
            }
        }
        uint _349 = (_307 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_349].w < 1.0) && ((cbInstanceData._m0[_349].w + _295) < 0.5))
        {
            _360 = true;
            break;
        }
        if ((_294 + _225) < _292.x)
        {
            _360 = true;
            break;
        }
        _360 = false;
        break;
    }
    if (_360)
    {
        discard_state = true;
    }
    discard_exit();
}


