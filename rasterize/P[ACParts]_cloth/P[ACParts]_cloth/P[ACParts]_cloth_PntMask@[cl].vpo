#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_4;

void main()
{
    uint _68 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    precise float _121 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _123 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _124 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _125 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _126 = _124 + 0.0;
    precise float _127 = _125 + 0.0;
    float _135 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _137 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _138 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _206;
    float _207;
    float _208;
    float _209;
    float _210;
    float _211;
    float _212;
    float _213;
    float _214;
    float _215;
    float _216;
    float _217;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _153 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _68;
        uint _167 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_153)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _174 = _167 + 1u;
        uint _181 = _167 + 2u;
        _206 = cbObjMatrix._m0[_167].x;
        _207 = cbObjMatrix._m0[_167].y;
        _208 = cbObjMatrix._m0[_167].z;
        _209 = cbObjMatrix._m0[_167].w;
        _210 = cbObjMatrix._m0[_174].x;
        _211 = cbObjMatrix._m0[_174].y;
        _212 = cbObjMatrix._m0[_174].z;
        _213 = cbObjMatrix._m0[_174].w;
        _214 = cbObjMatrix._m0[_181].x;
        _215 = cbObjMatrix._m0[_181].y;
        _216 = cbObjMatrix._m0[_181].z;
        _217 = cbObjMatrix._m0[_181].w;
    }
    else
    {
        _206 = cbvModelParam._m0[0u].x;
        _207 = cbvModelParam._m0[0u].y;
        _208 = cbvModelParam._m0[0u].z;
        _209 = cbvModelParam._m0[0u].w;
        _210 = cbvModelParam._m0[1u].x;
        _211 = cbvModelParam._m0[1u].y;
        _212 = cbvModelParam._m0[1u].z;
        _213 = cbvModelParam._m0[1u].w;
        _214 = cbvModelParam._m0[2u].x;
        _215 = cbvModelParam._m0[2u].y;
        _216 = cbvModelParam._m0[2u].z;
        _217 = cbvModelParam._m0[2u].w;
    }
    precise float _218 = POSITION.x * _206;
    precise float _219 = POSITION.y * _207;
    precise float _220 = _219 + _218;
    precise float _221 = POSITION.z * _208;
    precise float _222 = _221 + _220;
    precise float _223 = 1.0 * _209;
    precise float _225 = _223 + _222;
    precise float _226 = POSITION.x * _210;
    precise float _227 = POSITION.y * _211;
    precise float _228 = _227 + _226;
    precise float _229 = POSITION.z * _212;
    precise float _230 = _229 + _228;
    precise float _231 = 1.0 * _213;
    precise float _232 = _231 + _230;
    precise float _233 = POSITION.x * _214;
    precise float _234 = POSITION.y * _215;
    precise float _235 = _234 + _233;
    precise float _236 = POSITION.z * _216;
    precise float _237 = _236 + _235;
    precise float _238 = 1.0 * _217;
    precise float _239 = _238 + _237;
    uint _254 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _68;
    precise float _264 = _225 - cbSceneParam._m0[3u].x;
    precise float _265 = _232 - cbSceneParam._m0[3u].y;
    precise float _266 = _239 - cbSceneParam._m0[3u].z;
    precise float _302 = _264 * cbSceneParam._m0[26u].x;
    precise float _303 = _265 * cbSceneParam._m0[26u].y;
    precise float _304 = _303 + _302;
    precise float _305 = _266 * cbSceneParam._m0[26u].z;
    precise float _306 = _305 + _304;
    precise float _307 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _308 = _307 + _306;
    precise float _309 = _264 * cbSceneParam._m0[27u].x;
    precise float _310 = _265 * cbSceneParam._m0[27u].y;
    precise float _311 = _310 + _309;
    precise float _312 = _266 * cbSceneParam._m0[27u].z;
    precise float _313 = _312 + _311;
    precise float _314 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _315 = _314 + _313;
    precise float _316 = _126 * 2.0;
    precise float _318 = _127 * 2.0;
    precise float _319 = _316 + (-1.0);
    precise float _321 = 1.0 - _318;
    precise float _322 = _319 * _315;
    precise float _323 = _321 * _315;
    gl_Position.x = _322;
    gl_Position.y = _323;
    gl_Position.z = _308;
    gl_Position.w = _315;
    POSITION_1.x = fma(_266, cbSceneParam._m0[24u].z, fma(_265, cbSceneParam._m0[24u].y, _264 * cbSceneParam._m0[24u].x)) + cbSceneParam._m0[24u].w;
    POSITION_1.y = fma(_266, cbSceneParam._m0[25u].z, fma(_265, cbSceneParam._m0[25u].y, cbSceneParam._m0[25u].x * _264)) + cbSceneParam._m0[25u].w;
    POSITION_1.z = _308;
    POSITION_1.w = _315;
    NORMAL_1.x = fma(_138, _208, fma(_137, _207, _206 * _135));
    NORMAL_1.y = fma(_138, _212, fma(_137, _211, _210 * _135));
    NORMAL_1.z = fma(_138, _216, fma(_137, _215, _214 * _135));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_254)).x);
    TEXCOORD_1.x = _121;
    TEXCOORD_1.y = _123;
    TEXCOORD_1.z = _126;
    TEXCOORD_1.w = _127;
    TEXCOORD_4 = COLOR_1.x;
}


