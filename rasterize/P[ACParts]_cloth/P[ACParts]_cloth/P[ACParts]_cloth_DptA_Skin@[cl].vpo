#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_4;
layout(location = 4, component = 1) out vec2 TEXCOORD_6;
layout(location = 4, component = 3) out float TEXCOORD_10;

void main()
{
    uint _79 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_10 = 0.0;
    float _182 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _184 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _185 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _194 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _434;
    float _435;
    float _436;
    float _437;
    float _438;
    float _439;
    float _440;
    float _441;
    float _442;
    float _443;
    float _444;
    float _445;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _218 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
        precise float _222 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _227 = isnan(_222) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _222 : max(0.001000000047497451305389404296875, _222));
        precise float _229 = BLENDWEIGHT.x / _227;
        precise float _230 = BLENDWEIGHT.y / _227;
        precise float _231 = BLENDWEIGHT.z / _227;
        precise float _232 = BLENDWEIGHT.w / _227;
        uvec4 _239 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_218)).x * 13u) + 4u]);
        uint _240 = _239.x;
        uint _242 = (_240 + uint(float(BLENDINDICES.x))) * 3u;
        uint _249 = _242 + 1u;
        uint _256 = _242 + 2u;
        precise float _263 = _229 * cbObjMatrix._m0[_242].x;
        precise float _264 = _229 * cbObjMatrix._m0[_249].x;
        precise float _265 = _229 * cbObjMatrix._m0[_256].x;
        precise float _266 = _229 * cbObjMatrix._m0[_242].y;
        precise float _267 = _229 * cbObjMatrix._m0[_249].y;
        precise float _268 = _229 * cbObjMatrix._m0[_256].y;
        precise float _269 = _229 * cbObjMatrix._m0[_242].z;
        precise float _270 = _229 * cbObjMatrix._m0[_249].z;
        precise float _271 = _229 * cbObjMatrix._m0[_256].z;
        precise float _272 = _229 * cbObjMatrix._m0[_242].w;
        precise float _273 = _229 * cbObjMatrix._m0[_249].w;
        precise float _274 = _229 * cbObjMatrix._m0[_256].w;
        uint _277 = (_240 + uint(float(BLENDINDICES.y))) * 3u;
        uint _284 = _277 + 1u;
        uint _291 = _277 + 2u;
        precise float _298 = _230 * cbObjMatrix._m0[_277].x;
        precise float _299 = _230 * cbObjMatrix._m0[_284].x;
        precise float _300 = _230 * cbObjMatrix._m0[_291].x;
        precise float _301 = _230 * cbObjMatrix._m0[_277].y;
        precise float _302 = _230 * cbObjMatrix._m0[_284].y;
        precise float _303 = _230 * cbObjMatrix._m0[_291].y;
        precise float _304 = _230 * cbObjMatrix._m0[_277].z;
        precise float _305 = _230 * cbObjMatrix._m0[_284].z;
        precise float _306 = _230 * cbObjMatrix._m0[_291].z;
        precise float _307 = _230 * cbObjMatrix._m0[_277].w;
        precise float _308 = _230 * cbObjMatrix._m0[_284].w;
        precise float _309 = _230 * cbObjMatrix._m0[_291].w;
        precise float _310 = _263 + _298;
        precise float _311 = _264 + _299;
        precise float _312 = _265 + _300;
        precise float _313 = _266 + _301;
        precise float _314 = _267 + _302;
        precise float _315 = _268 + _303;
        precise float _316 = _269 + _304;
        precise float _317 = _270 + _305;
        precise float _318 = _271 + _306;
        precise float _319 = _272 + _307;
        precise float _320 = _273 + _308;
        precise float _321 = _274 + _309;
        uint _324 = (_240 + uint(float(BLENDINDICES.z))) * 3u;
        uint _331 = _324 + 1u;
        uint _338 = _324 + 2u;
        precise float _345 = _231 * cbObjMatrix._m0[_324].x;
        precise float _346 = _231 * cbObjMatrix._m0[_331].x;
        precise float _347 = _231 * cbObjMatrix._m0[_338].x;
        precise float _348 = _231 * cbObjMatrix._m0[_324].y;
        precise float _349 = _231 * cbObjMatrix._m0[_331].y;
        precise float _350 = _231 * cbObjMatrix._m0[_338].y;
        precise float _351 = _231 * cbObjMatrix._m0[_324].z;
        precise float _352 = _231 * cbObjMatrix._m0[_331].z;
        precise float _353 = _231 * cbObjMatrix._m0[_338].z;
        precise float _354 = _231 * cbObjMatrix._m0[_324].w;
        precise float _355 = _231 * cbObjMatrix._m0[_331].w;
        precise float _356 = _231 * cbObjMatrix._m0[_338].w;
        precise float _357 = _310 + _345;
        precise float _358 = _311 + _346;
        precise float _359 = _312 + _347;
        precise float _360 = _313 + _348;
        precise float _361 = _314 + _349;
        precise float _362 = _315 + _350;
        precise float _363 = _316 + _351;
        precise float _364 = _317 + _352;
        precise float _365 = _318 + _353;
        precise float _366 = _319 + _354;
        precise float _367 = _320 + _355;
        precise float _368 = _321 + _356;
        uint _371 = (_240 + uint(float(BLENDINDICES.w))) * 3u;
        uint _378 = _371 + 1u;
        uint _385 = _371 + 2u;
        precise float _392 = _232 * cbObjMatrix._m0[_371].x;
        precise float _393 = _232 * cbObjMatrix._m0[_378].x;
        precise float _394 = _232 * cbObjMatrix._m0[_385].x;
        precise float _395 = _232 * cbObjMatrix._m0[_371].y;
        precise float _396 = _232 * cbObjMatrix._m0[_378].y;
        precise float _397 = _232 * cbObjMatrix._m0[_385].y;
        precise float _398 = _232 * cbObjMatrix._m0[_371].z;
        precise float _399 = _232 * cbObjMatrix._m0[_378].z;
        precise float _400 = _232 * cbObjMatrix._m0[_385].z;
        precise float _401 = _232 * cbObjMatrix._m0[_371].w;
        precise float _402 = _232 * cbObjMatrix._m0[_378].w;
        precise float _403 = _232 * cbObjMatrix._m0[_385].w;
        precise float _404 = _357 + _392;
        precise float _405 = _358 + _393;
        precise float _406 = _359 + _394;
        precise float _407 = _360 + _395;
        precise float _408 = _361 + _396;
        precise float _409 = _362 + _397;
        precise float _410 = _363 + _398;
        precise float _411 = _364 + _399;
        precise float _412 = _365 + _400;
        precise float _413 = _366 + _401;
        precise float _414 = _367 + _402;
        precise float _415 = _368 + _403;
        _434 = _404;
        _435 = _407;
        _436 = _410;
        _437 = _413;
        _438 = _405;
        _439 = _408;
        _440 = _411;
        _441 = _414;
        _442 = _406;
        _443 = _409;
        _444 = _412;
        _445 = _415;
    }
    else
    {
        _434 = cbvModelParam._m0[0u].x;
        _435 = cbvModelParam._m0[0u].y;
        _436 = cbvModelParam._m0[0u].z;
        _437 = cbvModelParam._m0[0u].w;
        _438 = cbvModelParam._m0[1u].x;
        _439 = cbvModelParam._m0[1u].y;
        _440 = cbvModelParam._m0[1u].z;
        _441 = cbvModelParam._m0[1u].w;
        _442 = cbvModelParam._m0[2u].x;
        _443 = cbvModelParam._m0[2u].y;
        _444 = cbvModelParam._m0[2u].z;
        _445 = cbvModelParam._m0[2u].w;
    }
    precise float _446 = POSITION.x * _434;
    precise float _447 = POSITION.y * _435;
    precise float _448 = _447 + _446;
    precise float _449 = POSITION.z * _436;
    precise float _450 = _449 + _448;
    precise float _451 = 1.0 * _437;
    precise float _452 = _451 + _450;
    precise float _453 = POSITION.x * _438;
    precise float _454 = POSITION.y * _439;
    precise float _455 = _454 + _453;
    precise float _456 = POSITION.z * _440;
    precise float _457 = _456 + _455;
    precise float _458 = 1.0 * _441;
    precise float _459 = _458 + _457;
    precise float _460 = POSITION.x * _442;
    precise float _461 = POSITION.y * _443;
    precise float _462 = _461 + _460;
    precise float _463 = POSITION.z * _444;
    precise float _464 = _463 + _462;
    precise float _465 = 1.0 * _445;
    precise float _466 = _465 + _464;
    float _472 = cbSceneParam._m0[3u].x - _452;
    float _473 = cbSceneParam._m0[3u].y - _459;
    float _474 = cbSceneParam._m0[3u].z - _466;
    uint _494 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
    precise float _508 = _452 - cbSceneParam._m0[3u].x;
    precise float _509 = _459 - cbSceneParam._m0[3u].y;
    precise float _510 = _466 - cbSceneParam._m0[3u].z;
    precise float _538 = _508 * cbSceneParam._m0[24u].x;
    precise float _539 = _509 * cbSceneParam._m0[24u].y;
    precise float _540 = _539 + _538;
    precise float _541 = _510 * cbSceneParam._m0[24u].z;
    precise float _542 = _541 + _540;
    precise float _543 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _544 = _543 + _542;
    precise float _545 = _508 * cbSceneParam._m0[25u].x;
    precise float _546 = _509 * cbSceneParam._m0[25u].y;
    precise float _547 = _546 + _545;
    precise float _548 = _510 * cbSceneParam._m0[25u].z;
    precise float _549 = _548 + _547;
    precise float _550 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _551 = _550 + _549;
    precise float _552 = _508 * cbSceneParam._m0[26u].x;
    precise float _553 = _509 * cbSceneParam._m0[26u].y;
    precise float _554 = _553 + _552;
    precise float _555 = _510 * cbSceneParam._m0[26u].z;
    precise float _556 = _555 + _554;
    precise float _557 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _558 = _557 + _556;
    precise float _559 = _508 * cbSceneParam._m0[27u].x;
    precise float _560 = _509 * cbSceneParam._m0[27u].y;
    precise float _561 = _560 + _559;
    precise float _562 = _510 * cbSceneParam._m0[27u].z;
    precise float _563 = _562 + _561;
    precise float _564 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _565 = _564 + _563;
    gl_Position.x = _544;
    gl_Position.y = _551;
    gl_Position.z = _558;
    gl_Position.w = _565;
    NORMAL_1.x = fma(_185, _436, fma(_184, _435, _434 * _182));
    NORMAL_1.y = fma(_185, _440, fma(_184, _439, _438 * _182));
    NORMAL_1.z = fma(_185, _444, fma(_184, _443, _442 * _182));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_494)).x);
    TANGENT_1.x = fma(_194, _436, fma(_193, _435, _434 * _192));
    TANGENT_1.y = fma(_194, _440, fma(_193, _439, _438 * _192));
    TANGENT_1.z = fma(_194, _444, fma(_193, _443, _442 * _192));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_6.x = _558;
    TEXCOORD_6.y = _565;
    TEXCOORD_10 = sqrt(((_472 * _472) + (_473 * _473)) + (_474 * _474));
}


