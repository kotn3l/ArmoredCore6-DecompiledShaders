#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_4;

void main()
{
    uint _74 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _136 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _138 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _139 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _140 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _141 = _139 + 0.0;
    precise float _142 = _140 + 0.0;
    float _150 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _152 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _153 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _394;
    float _395;
    float _396;
    float _397;
    float _398;
    float _399;
    float _400;
    float _401;
    float _402;
    float _403;
    float _404;
    float _405;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _177 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _74;
        precise float _181 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _186 = isnan(_181) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _181 : max(0.001000000047497451305389404296875, _181));
        precise float _188 = BLENDWEIGHT.x / _186;
        precise float _189 = BLENDWEIGHT.y / _186;
        precise float _190 = BLENDWEIGHT.z / _186;
        precise float _191 = BLENDWEIGHT.w / _186;
        uvec4 _199 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_177)).x * 13u) + 4u]);
        uint _200 = _199.x;
        uint _202 = (_200 + uint(float(BLENDINDICES.x))) * 3u;
        uint _209 = _202 + 1u;
        uint _216 = _202 + 2u;
        precise float _223 = _188 * cbObjMatrix._m0[_202].x;
        precise float _224 = _188 * cbObjMatrix._m0[_209].x;
        precise float _225 = _188 * cbObjMatrix._m0[_216].x;
        precise float _226 = _188 * cbObjMatrix._m0[_202].y;
        precise float _227 = _188 * cbObjMatrix._m0[_209].y;
        precise float _228 = _188 * cbObjMatrix._m0[_216].y;
        precise float _229 = _188 * cbObjMatrix._m0[_202].z;
        precise float _230 = _188 * cbObjMatrix._m0[_209].z;
        precise float _231 = _188 * cbObjMatrix._m0[_216].z;
        precise float _232 = _188 * cbObjMatrix._m0[_202].w;
        precise float _233 = _188 * cbObjMatrix._m0[_209].w;
        precise float _234 = _188 * cbObjMatrix._m0[_216].w;
        uint _237 = (_200 + uint(float(BLENDINDICES.y))) * 3u;
        uint _244 = _237 + 1u;
        uint _251 = _237 + 2u;
        precise float _258 = _189 * cbObjMatrix._m0[_237].x;
        precise float _259 = _189 * cbObjMatrix._m0[_244].x;
        precise float _260 = _189 * cbObjMatrix._m0[_251].x;
        precise float _261 = _189 * cbObjMatrix._m0[_237].y;
        precise float _262 = _189 * cbObjMatrix._m0[_244].y;
        precise float _263 = _189 * cbObjMatrix._m0[_251].y;
        precise float _264 = _189 * cbObjMatrix._m0[_237].z;
        precise float _265 = _189 * cbObjMatrix._m0[_244].z;
        precise float _266 = _189 * cbObjMatrix._m0[_251].z;
        precise float _267 = _189 * cbObjMatrix._m0[_237].w;
        precise float _268 = _189 * cbObjMatrix._m0[_244].w;
        precise float _269 = _189 * cbObjMatrix._m0[_251].w;
        precise float _270 = _223 + _258;
        precise float _271 = _224 + _259;
        precise float _272 = _225 + _260;
        precise float _273 = _226 + _261;
        precise float _274 = _227 + _262;
        precise float _275 = _228 + _263;
        precise float _276 = _229 + _264;
        precise float _277 = _230 + _265;
        precise float _278 = _231 + _266;
        precise float _279 = _232 + _267;
        precise float _280 = _233 + _268;
        precise float _281 = _234 + _269;
        uint _284 = (_200 + uint(float(BLENDINDICES.z))) * 3u;
        uint _291 = _284 + 1u;
        uint _298 = _284 + 2u;
        precise float _305 = _190 * cbObjMatrix._m0[_284].x;
        precise float _306 = _190 * cbObjMatrix._m0[_291].x;
        precise float _307 = _190 * cbObjMatrix._m0[_298].x;
        precise float _308 = _190 * cbObjMatrix._m0[_284].y;
        precise float _309 = _190 * cbObjMatrix._m0[_291].y;
        precise float _310 = _190 * cbObjMatrix._m0[_298].y;
        precise float _311 = _190 * cbObjMatrix._m0[_284].z;
        precise float _312 = _190 * cbObjMatrix._m0[_291].z;
        precise float _313 = _190 * cbObjMatrix._m0[_298].z;
        precise float _314 = _190 * cbObjMatrix._m0[_284].w;
        precise float _315 = _190 * cbObjMatrix._m0[_291].w;
        precise float _316 = _190 * cbObjMatrix._m0[_298].w;
        precise float _317 = _270 + _305;
        precise float _318 = _271 + _306;
        precise float _319 = _272 + _307;
        precise float _320 = _273 + _308;
        precise float _321 = _274 + _309;
        precise float _322 = _275 + _310;
        precise float _323 = _276 + _311;
        precise float _324 = _277 + _312;
        precise float _325 = _278 + _313;
        precise float _326 = _279 + _314;
        precise float _327 = _280 + _315;
        precise float _328 = _281 + _316;
        uint _331 = (_200 + uint(float(BLENDINDICES.w))) * 3u;
        uint _338 = _331 + 1u;
        uint _345 = _331 + 2u;
        precise float _352 = _191 * cbObjMatrix._m0[_331].x;
        precise float _353 = _191 * cbObjMatrix._m0[_338].x;
        precise float _354 = _191 * cbObjMatrix._m0[_345].x;
        precise float _355 = _191 * cbObjMatrix._m0[_331].y;
        precise float _356 = _191 * cbObjMatrix._m0[_338].y;
        precise float _357 = _191 * cbObjMatrix._m0[_345].y;
        precise float _358 = _191 * cbObjMatrix._m0[_331].z;
        precise float _359 = _191 * cbObjMatrix._m0[_338].z;
        precise float _360 = _191 * cbObjMatrix._m0[_345].z;
        precise float _361 = _191 * cbObjMatrix._m0[_331].w;
        precise float _362 = _191 * cbObjMatrix._m0[_338].w;
        precise float _363 = _191 * cbObjMatrix._m0[_345].w;
        precise float _364 = _317 + _352;
        precise float _365 = _318 + _353;
        precise float _366 = _319 + _354;
        precise float _367 = _320 + _355;
        precise float _368 = _321 + _356;
        precise float _369 = _322 + _357;
        precise float _370 = _323 + _358;
        precise float _371 = _324 + _359;
        precise float _372 = _325 + _360;
        precise float _373 = _326 + _361;
        precise float _374 = _327 + _362;
        precise float _375 = _328 + _363;
        _394 = _364;
        _395 = _367;
        _396 = _370;
        _397 = _373;
        _398 = _365;
        _399 = _368;
        _400 = _371;
        _401 = _374;
        _402 = _366;
        _403 = _369;
        _404 = _372;
        _405 = _375;
    }
    else
    {
        _394 = cbvModelParam._m0[0u].x;
        _395 = cbvModelParam._m0[0u].y;
        _396 = cbvModelParam._m0[0u].z;
        _397 = cbvModelParam._m0[0u].w;
        _398 = cbvModelParam._m0[1u].x;
        _399 = cbvModelParam._m0[1u].y;
        _400 = cbvModelParam._m0[1u].z;
        _401 = cbvModelParam._m0[1u].w;
        _402 = cbvModelParam._m0[2u].x;
        _403 = cbvModelParam._m0[2u].y;
        _404 = cbvModelParam._m0[2u].z;
        _405 = cbvModelParam._m0[2u].w;
    }
    precise float _406 = POSITION.x * _394;
    precise float _407 = POSITION.y * _395;
    precise float _408 = _407 + _406;
    precise float _409 = POSITION.z * _396;
    precise float _410 = _409 + _408;
    precise float _411 = 1.0 * _397;
    precise float _412 = _411 + _410;
    precise float _413 = POSITION.x * _398;
    precise float _414 = POSITION.y * _399;
    precise float _415 = _414 + _413;
    precise float _416 = POSITION.z * _400;
    precise float _417 = _416 + _415;
    precise float _418 = 1.0 * _401;
    precise float _419 = _418 + _417;
    precise float _420 = POSITION.x * _402;
    precise float _421 = POSITION.y * _403;
    precise float _422 = _421 + _420;
    precise float _423 = POSITION.z * _404;
    precise float _424 = _423 + _422;
    precise float _425 = 1.0 * _405;
    precise float _426 = _425 + _424;
    uint _440 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _74;
    uvec4 _442 = texelFetch(g_InstanceIndexBuffer, int(_440));
    uint _443 = _442.x;
    precise float _450 = _412 - cbSceneParam._m0[3u].x;
    precise float _451 = _419 - cbSceneParam._m0[3u].y;
    precise float _452 = _426 - cbSceneParam._m0[3u].z;
    precise float _488 = _450 * cbSceneParam._m0[26u].x;
    precise float _489 = _451 * cbSceneParam._m0[26u].y;
    precise float _490 = _489 + _488;
    precise float _491 = _452 * cbSceneParam._m0[26u].z;
    precise float _492 = _491 + _490;
    precise float _493 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _494 = _493 + _492;
    precise float _495 = _450 * cbSceneParam._m0[27u].x;
    precise float _496 = _451 * cbSceneParam._m0[27u].y;
    precise float _497 = _496 + _495;
    precise float _498 = _452 * cbSceneParam._m0[27u].z;
    precise float _499 = _498 + _497;
    precise float _500 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _501 = _500 + _499;
    precise float _502 = _141 * 2.0;
    precise float _504 = _142 * 2.0;
    precise float _505 = _502 + (-1.0);
    precise float _507 = 1.0 - _504;
    precise float _508 = _505 * _501;
    precise float _509 = _507 * _501;
    gl_Position.x = _508;
    gl_Position.y = _509;
    gl_Position.z = _494;
    gl_Position.w = _501;
    POSITION_1.x = fma(_452, cbSceneParam._m0[24u].z, fma(_451, cbSceneParam._m0[24u].y, _450 * cbSceneParam._m0[24u].x)) + cbSceneParam._m0[24u].w;
    POSITION_1.y = fma(_452, cbSceneParam._m0[25u].z, fma(_451, cbSceneParam._m0[25u].y, cbSceneParam._m0[25u].x * _450)) + cbSceneParam._m0[25u].w;
    POSITION_1.z = _494;
    POSITION_1.w = _501;
    NORMAL_1.x = fma(_153, _396, fma(_152, _395, _394 * _150));
    NORMAL_1.y = fma(_153, _400, fma(_152, _399, _398 * _150));
    NORMAL_1.z = fma(_153, _404, fma(_152, _403, _402 * _150));
    NORMAL_1.w = float(_443);
    TEXCOORD_1.x = _136;
    TEXCOORD_1.y = _138;
    TEXCOORD_1.z = _141;
    TEXCOORD_1.w = _142;
    TEXCOORD_4 = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_508, _509, _494, _501), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_508, _509, _494, _501), vec4(cbInstanceData._m0[(_443 * 13u) + 3u]));
}


