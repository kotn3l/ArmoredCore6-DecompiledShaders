#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_4;

void main()
{
    uint _70 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    precise float _131 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _133 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _134 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _135 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _136 = _134 + 0.0;
    precise float _137 = _135 + 0.0;
    float _145 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _147 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _148 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _389;
    float _390;
    float _391;
    float _392;
    float _393;
    float _394;
    float _395;
    float _396;
    float _397;
    float _398;
    float _399;
    float _400;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _172 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _70;
        precise float _176 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _181 = isnan(_176) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _176 : max(0.001000000047497451305389404296875, _176));
        precise float _183 = BLENDWEIGHT.x / _181;
        precise float _184 = BLENDWEIGHT.y / _181;
        precise float _185 = BLENDWEIGHT.z / _181;
        precise float _186 = BLENDWEIGHT.w / _181;
        uvec4 _194 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_172)).x * 13u) + 4u]);
        uint _195 = _194.x;
        uint _197 = (_195 + uint(float(BLENDINDICES.x))) * 3u;
        uint _204 = _197 + 1u;
        uint _211 = _197 + 2u;
        precise float _218 = _183 * cbObjMatrix._m0[_197].x;
        precise float _219 = _183 * cbObjMatrix._m0[_204].x;
        precise float _220 = _183 * cbObjMatrix._m0[_211].x;
        precise float _221 = _183 * cbObjMatrix._m0[_197].y;
        precise float _222 = _183 * cbObjMatrix._m0[_204].y;
        precise float _223 = _183 * cbObjMatrix._m0[_211].y;
        precise float _224 = _183 * cbObjMatrix._m0[_197].z;
        precise float _225 = _183 * cbObjMatrix._m0[_204].z;
        precise float _226 = _183 * cbObjMatrix._m0[_211].z;
        precise float _227 = _183 * cbObjMatrix._m0[_197].w;
        precise float _228 = _183 * cbObjMatrix._m0[_204].w;
        precise float _229 = _183 * cbObjMatrix._m0[_211].w;
        uint _232 = (_195 + uint(float(BLENDINDICES.y))) * 3u;
        uint _239 = _232 + 1u;
        uint _246 = _232 + 2u;
        precise float _253 = _184 * cbObjMatrix._m0[_232].x;
        precise float _254 = _184 * cbObjMatrix._m0[_239].x;
        precise float _255 = _184 * cbObjMatrix._m0[_246].x;
        precise float _256 = _184 * cbObjMatrix._m0[_232].y;
        precise float _257 = _184 * cbObjMatrix._m0[_239].y;
        precise float _258 = _184 * cbObjMatrix._m0[_246].y;
        precise float _259 = _184 * cbObjMatrix._m0[_232].z;
        precise float _260 = _184 * cbObjMatrix._m0[_239].z;
        precise float _261 = _184 * cbObjMatrix._m0[_246].z;
        precise float _262 = _184 * cbObjMatrix._m0[_232].w;
        precise float _263 = _184 * cbObjMatrix._m0[_239].w;
        precise float _264 = _184 * cbObjMatrix._m0[_246].w;
        precise float _265 = _218 + _253;
        precise float _266 = _219 + _254;
        precise float _267 = _220 + _255;
        precise float _268 = _221 + _256;
        precise float _269 = _222 + _257;
        precise float _270 = _223 + _258;
        precise float _271 = _224 + _259;
        precise float _272 = _225 + _260;
        precise float _273 = _226 + _261;
        precise float _274 = _227 + _262;
        precise float _275 = _228 + _263;
        precise float _276 = _229 + _264;
        uint _279 = (_195 + uint(float(BLENDINDICES.z))) * 3u;
        uint _286 = _279 + 1u;
        uint _293 = _279 + 2u;
        precise float _300 = _185 * cbObjMatrix._m0[_279].x;
        precise float _301 = _185 * cbObjMatrix._m0[_286].x;
        precise float _302 = _185 * cbObjMatrix._m0[_293].x;
        precise float _303 = _185 * cbObjMatrix._m0[_279].y;
        precise float _304 = _185 * cbObjMatrix._m0[_286].y;
        precise float _305 = _185 * cbObjMatrix._m0[_293].y;
        precise float _306 = _185 * cbObjMatrix._m0[_279].z;
        precise float _307 = _185 * cbObjMatrix._m0[_286].z;
        precise float _308 = _185 * cbObjMatrix._m0[_293].z;
        precise float _309 = _185 * cbObjMatrix._m0[_279].w;
        precise float _310 = _185 * cbObjMatrix._m0[_286].w;
        precise float _311 = _185 * cbObjMatrix._m0[_293].w;
        precise float _312 = _265 + _300;
        precise float _313 = _266 + _301;
        precise float _314 = _267 + _302;
        precise float _315 = _268 + _303;
        precise float _316 = _269 + _304;
        precise float _317 = _270 + _305;
        precise float _318 = _271 + _306;
        precise float _319 = _272 + _307;
        precise float _320 = _273 + _308;
        precise float _321 = _274 + _309;
        precise float _322 = _275 + _310;
        precise float _323 = _276 + _311;
        uint _326 = (_195 + uint(float(BLENDINDICES.w))) * 3u;
        uint _333 = _326 + 1u;
        uint _340 = _326 + 2u;
        precise float _347 = _186 * cbObjMatrix._m0[_326].x;
        precise float _348 = _186 * cbObjMatrix._m0[_333].x;
        precise float _349 = _186 * cbObjMatrix._m0[_340].x;
        precise float _350 = _186 * cbObjMatrix._m0[_326].y;
        precise float _351 = _186 * cbObjMatrix._m0[_333].y;
        precise float _352 = _186 * cbObjMatrix._m0[_340].y;
        precise float _353 = _186 * cbObjMatrix._m0[_326].z;
        precise float _354 = _186 * cbObjMatrix._m0[_333].z;
        precise float _355 = _186 * cbObjMatrix._m0[_340].z;
        precise float _356 = _186 * cbObjMatrix._m0[_326].w;
        precise float _357 = _186 * cbObjMatrix._m0[_333].w;
        precise float _358 = _186 * cbObjMatrix._m0[_340].w;
        precise float _359 = _312 + _347;
        precise float _360 = _313 + _348;
        precise float _361 = _314 + _349;
        precise float _362 = _315 + _350;
        precise float _363 = _316 + _351;
        precise float _364 = _317 + _352;
        precise float _365 = _318 + _353;
        precise float _366 = _319 + _354;
        precise float _367 = _320 + _355;
        precise float _368 = _321 + _356;
        precise float _369 = _322 + _357;
        precise float _370 = _323 + _358;
        _389 = _359;
        _390 = _362;
        _391 = _365;
        _392 = _368;
        _393 = _360;
        _394 = _363;
        _395 = _366;
        _396 = _369;
        _397 = _361;
        _398 = _364;
        _399 = _367;
        _400 = _370;
    }
    else
    {
        _389 = cbvModelParam._m0[0u].x;
        _390 = cbvModelParam._m0[0u].y;
        _391 = cbvModelParam._m0[0u].z;
        _392 = cbvModelParam._m0[0u].w;
        _393 = cbvModelParam._m0[1u].x;
        _394 = cbvModelParam._m0[1u].y;
        _395 = cbvModelParam._m0[1u].z;
        _396 = cbvModelParam._m0[1u].w;
        _397 = cbvModelParam._m0[2u].x;
        _398 = cbvModelParam._m0[2u].y;
        _399 = cbvModelParam._m0[2u].z;
        _400 = cbvModelParam._m0[2u].w;
    }
    precise float _401 = POSITION.x * _389;
    precise float _402 = POSITION.y * _390;
    precise float _403 = _402 + _401;
    precise float _404 = POSITION.z * _391;
    precise float _405 = _404 + _403;
    precise float _406 = 1.0 * _392;
    precise float _407 = _406 + _405;
    precise float _408 = POSITION.x * _393;
    precise float _409 = POSITION.y * _394;
    precise float _410 = _409 + _408;
    precise float _411 = POSITION.z * _395;
    precise float _412 = _411 + _410;
    precise float _413 = 1.0 * _396;
    precise float _414 = _413 + _412;
    precise float _415 = POSITION.x * _397;
    precise float _416 = POSITION.y * _398;
    precise float _417 = _416 + _415;
    precise float _418 = POSITION.z * _399;
    precise float _419 = _418 + _417;
    precise float _420 = 1.0 * _400;
    precise float _421 = _420 + _419;
    uint _435 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _70;
    precise float _445 = _407 - cbSceneParam._m0[3u].x;
    precise float _446 = _414 - cbSceneParam._m0[3u].y;
    precise float _447 = _421 - cbSceneParam._m0[3u].z;
    precise float _483 = _445 * cbSceneParam._m0[26u].x;
    precise float _484 = _446 * cbSceneParam._m0[26u].y;
    precise float _485 = _484 + _483;
    precise float _486 = _447 * cbSceneParam._m0[26u].z;
    precise float _487 = _486 + _485;
    precise float _488 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _489 = _488 + _487;
    precise float _490 = _445 * cbSceneParam._m0[27u].x;
    precise float _491 = _446 * cbSceneParam._m0[27u].y;
    precise float _492 = _491 + _490;
    precise float _493 = _447 * cbSceneParam._m0[27u].z;
    precise float _494 = _493 + _492;
    precise float _495 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _496 = _495 + _494;
    precise float _497 = _136 * 2.0;
    precise float _499 = _137 * 2.0;
    precise float _500 = _497 + (-1.0);
    precise float _502 = 1.0 - _499;
    precise float _503 = _500 * _496;
    precise float _504 = _502 * _496;
    gl_Position.x = _503;
    gl_Position.y = _504;
    gl_Position.z = _489;
    gl_Position.w = _496;
    POSITION_1.x = fma(_447, cbSceneParam._m0[24u].z, fma(_446, cbSceneParam._m0[24u].y, _445 * cbSceneParam._m0[24u].x)) + cbSceneParam._m0[24u].w;
    POSITION_1.y = fma(_447, cbSceneParam._m0[25u].z, fma(_446, cbSceneParam._m0[25u].y, cbSceneParam._m0[25u].x * _445)) + cbSceneParam._m0[25u].w;
    POSITION_1.z = _489;
    POSITION_1.w = _496;
    NORMAL_1.x = fma(_148, _391, fma(_147, _390, _389 * _145));
    NORMAL_1.y = fma(_148, _395, fma(_147, _394, _393 * _145));
    NORMAL_1.z = fma(_148, _399, fma(_147, _398, _397 * _145));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_435)).x);
    TEXCOORD_1.x = _131;
    TEXCOORD_1.y = _133;
    TEXCOORD_1.z = _136;
    TEXCOORD_1.w = _137;
    TEXCOORD_4 = COLOR_1.x;
}


