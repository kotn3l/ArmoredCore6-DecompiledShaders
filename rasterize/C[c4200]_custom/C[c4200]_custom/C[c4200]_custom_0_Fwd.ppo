#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[28];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_c4200_custom_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_c4200_custom_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D C_c4200_custom_snp_0_Texture2D_27;
layout(set = 0, binding = 12) uniform texture2D C_c4200_custom_snp_0_Texture2D_28;
layout(set = 0, binding = 13) uniform texture2D C_c4200_custom_snp_0_Texture2D_29;
layout(set = 0, binding = 14) uniform texture2D C_c4200_custom_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_c4200_custom_snp_0_Texture2D_30;
layout(set = 0, binding = 16) uniform texture2D C_c4200_custom_snp_0_Texture2D_4;
layout(set = 0, binding = 17) uniform texture2D C_c4200_custom_snp_0_Texture2D_5;
layout(set = 0, binding = 18) uniform texture2D C_c4200_custom_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_c4200_custom_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D C_c4200_custom_snp_0_Texture2D_16;
layout(set = 0, binding = 20) uniform texture2D C_c4200_custom_snp_0_Texture2D_8;
layout(set = 0, binding = 21) uniform texture2D C_c4200_custom_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_c4200_custom_snp_0_Texture2D_17;
layout(set = 0, binding = 4) uniform texture2D C_c4200_custom_snp_0_Texture2D_18;
layout(set = 0, binding = 5) uniform texture2D C_c4200_custom_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D C_c4200_custom_snp_0_Texture2D_22;
layout(set = 0, binding = 7) uniform texture2D C_c4200_custom_snp_0_Texture2D_23;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 4, component = 2) in float TEXCOORD_6;
layout(location = 4, component = 3) in float TEXCOORD_7;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1519;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _219 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _220 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _221 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _227 = inversesqrt(dot(vec3(_219, _220, _221), vec3(_219, _220, _221)));
    float _234 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _241 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _309 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD_1) + cbTextureTilingScale._m0[19u].w));
    float _322 = exp2(log2(_309.w * cbMtdParam._m0[26u].x) * cbMtdParam._m0[18u].w);
    float _323 = isnan(0.0) ? _322 : (isnan(_322) ? 0.0 : max(_322, 0.0));
    float _324 = isnan(1.0) ? _323 : (isnan(_323) ? 1.0 : min(_323, 1.0));
    vec4 _338 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _342 = _338.z;
    float _347 = exp2(log2(_342 * cbMtdParam._m0[19u].x) * cbMtdParam._m0[18u].y);
    float _348 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
    float _349 = isnan(1.0) ? _348 : (isnan(_348) ? 1.0 : min(_348, 1.0));
    vec4 _361 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w));
    vec4 _386 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _397 = cbMtdParam._m0[9u].x * _386.x;
    float _398 = cbMtdParam._m0[9u].y * _386.y;
    float _399 = cbMtdParam._m0[9u].z * _386.z;
    float _406 = (((cbMtdParam._m0[10u].x * _361.x) - _397) * _349) + _397;
    float _407 = (((cbMtdParam._m0[10u].y * _361.y) - _398) * _349) + _398;
    float _408 = (((cbMtdParam._m0[10u].z * _361.z) - _399) * _349) + _399;
    vec4 _421 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_30, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_1) + cbTextureTilingScale._m0[15u].w));
    float _423 = _421.x;
    float _427 = exp2(log2(_423) * cbMtdParam._m0[19u].z);
    vec4 _440 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w));
    float _460 = (((cbMtdParam._m0[12u].x * _440.x) - _406) * _427) + _406;
    float _461 = (((cbMtdParam._m0[12u].y * _440.y) - _407) * _427) + _407;
    float _462 = (((cbMtdParam._m0[12u].z * _440.z) - _408) * _427) + _408;
    vec4 _475 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_1) + cbTextureTilingScale._m0[16u].w));
    float _500 = (_309.x * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].x * _475.x) - _460) * _324) + _460);
    float _502 = (_309.y * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].y * _475.y) - _461) * _324) + _461);
    float _504 = (_309.z * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].z * _475.z) - _462) * _324) + _462);
    vec4 _516 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _535 = TEXCOORD_3.x - ((cbMtdParam._m0[19u].w * (1.0 - TEXCOORD_3.x)) * (texture(sampler2D(C_c4200_custom_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1) + cbTextureTilingScale._m0[4u].w)).x + 0.00999999977648258209228515625));
    float _537 = _535 * (cbMtdParam._m0[20u].y + 1.0);
    float _3886 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _538 = isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0));
    float _545 = (_538 * ((cbMtdParam._m0[11u].x * _516.x) - _500)) + _500;
    float _546 = (((cbMtdParam._m0[11u].y * _516.y) - _502) * _538) + _502;
    float _547 = (((cbMtdParam._m0[11u].z * _516.z) - _504) * _538) + _504;
    float _549 = cbMtdParam._m0[22u].z * TEXCOORD_6;
    float _557 = (_549 - (((texture(sampler2D(C_c4200_custom_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[22u].x) * (1.0 - _549))) * (cbMtdParam._m0[22u].y + 1.0);
    float _3897 = isnan(0.0) ? _557 : (isnan(_557) ? 0.0 : max(_557, 0.0));
    float _558 = isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0));
    float _565 = ((cbMtdParam._m0[14u].x - _545) * _558) + _545;
    float _566 = ((cbMtdParam._m0[14u].y - _546) * _558) + _546;
    float _567 = ((cbMtdParam._m0[14u].z - _547) * _558) + _547;
    float _570 = (cbMtdParam._m0[20u].x + 1.0) * _535;
    float _3908 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _571 = isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0));
    float _573 = _423 - (_571 * _423);
    float _575 = _573 - (_573 * _549);
    vec4 _588 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD_1) + cbTextureTilingScale._m0[17u].w));
    vec4 _606 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD_1) + cbTextureTilingScale._m0[18u].w));
    float _608 = _606.x;
    float _609 = _606.y;
    float _612 = cbMtdParam._m0[18u].x + _606.z;
    float _615 = (((cbMtdParam._m0[18u].z + _588.z) - _612) * _349) + _612;
    vec4 _627 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD_1) + cbTextureTilingScale._m0[20u].w));
    float _639 = (((_627.z - _615) + cbMtdParam._m0[24u].z) * _427) + _615;
    float _645 = ((((_342 * 2.0) * _639) - _639) * cbMtdParam._m0[20u].z) + _639;
    vec4 _658 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[21u].x * TEXCOORD) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * TEXCOORD_1) + cbTextureTilingScale._m0[21u].w));
    float _667 = (((cbMtdParam._m0[19u].y + _658.z) - _645) * _324) + _645;
    vec4 _679 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w));
    float _691 = ((_679.z - _667) * _571) + _667;
    vec4 _707 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1) + cbTextureTilingScale._m0[6u].w));
    float _721 = ((cbMtdParam._m0[21u].w * _549) * ((_707.z * cbMtdParam._m0[21u].z) - _691)) + _691;
    float _732 = cbMtdParam._m0[23u].y * cbPerFrame._m0[22u].x;
    float _751 = (cbTextureTilingScale._m0[12u].x * ((_732 * cbMtdParam._m0[26u].y) + TEXCOORD)) + cbTextureTilingScale._m0[12u].z;
    float _752 = (cbTextureTilingScale._m0[12u].y * ((_732 * cbMtdParam._m0[26u].z) + TEXCOORD_1)) + cbTextureTilingScale._m0[12u].w;
    vec4 _754 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_28, SS_WrapLinear), vec2(_751, _752));
    float _758 = cbPerFrame._m0[22u].x * 2.0;
    float _759 = _758 * cbMtdParam._m0[25u].y;
    float _766 = ((_754.y * 0.5) + (-0.25)) * cbMtdParam._m0[25u].x;
    float _768 = (-0.0) - (cbMtdParam._m0[25u].x * ((_754.x * 0.5) + (-0.25)));
    float _770 = fract(_759);
    float _772 = fract(_759 + 0.5);
    float _783 = abs((_770 * 2.0) + (-1.0));
    vec4 _799 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_27, SS_DiffuseMap), vec2((((_770 * _768) + TEXCOORD) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((_766 * _770) + TEXCOORD_1) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _801 = _799.x;
    float _802 = _799.y;
    float _803 = _799.z;
    vec4 _804 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_27, SS_DiffuseMap), vec2((((_772 * _768) + TEXCOORD) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((_766 * _772) + TEXCOORD_1) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _815 = ((_804.x - _801) * _783) + _801;
    float _822 = exp2(log2(_815 * cbMtdParam._m0[23u].z) * cbMtdParam._m0[23u].w);
    float _823 = isnan(cbMtdParam._m0[24u].x) ? _822 : (isnan(_822) ? cbMtdParam._m0[24u].x : max(_822, cbMtdParam._m0[24u].x));
    vec4 _844 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_28, SS_WrapLinear), vec2(_751, _752));
    float _848 = _758 * cbMtdParam._m0[25u].w;
    float _853 = ((_844.y * 0.5) + (-0.25)) * cbMtdParam._m0[25u].z;
    float _855 = (-0.0) - (cbMtdParam._m0[25u].z * ((_844.x * 0.5) + (-0.25)));
    float _856 = fract(_848);
    float _858 = fract(_848 + 0.5);
    float _869 = abs((_856 * 2.0) + (-1.0));
    vec4 _885 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_29, SS_DiffuseMap), vec2((((_856 * _855) + TEXCOORD) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_853 * _856) + TEXCOORD_1) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _887 = _885.x;
    float _888 = _885.y;
    float _889 = _885.z;
    vec4 _890 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_29, SS_DiffuseMap), vec2((((_858 * _855) + TEXCOORD) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_853 * _858) + TEXCOORD_1) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _924 = ((_588.x - _608) * _349) + _608;
    float _925 = ((_588.y - _609) * _349) + _609;
    float _930 = ((_627.x - _924) * _427) + _924;
    float _931 = ((_627.y - _925) * _427) + _925;
    float _940 = ((((_658.x - _930) * _324) + _930) * 2.0) + (-1.0);
    float _941 = ((((_658.y - _931) * _324) + _931) * 2.0) + (-1.0);
    float _942 = dot(vec2(_940, _941), vec2(_940, _941));
    float _3929 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
    float _947 = sqrt(1.0 - (isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0))));
    float _963 = (((cbMtdParam._m0[20u].w * ((_338.x * 2.0) + (-1.0))) + _940) + (((((_679.x * 2.0) + (-1.0)) * TEXCOORD_3.x) * cbMtdParam._m0[21u].x) * _571)) + ((((_707.x * 2.0) + (-1.0)) * _549) * cbMtdParam._m0[21u].y);
    float _964 = (((cbMtdParam._m0[20u].w * ((_338.y * 2.0) + (-1.0))) + _941) + (((((_679.y * 2.0) + (-1.0)) * TEXCOORD_3.y) * cbMtdParam._m0[21u].x) * _571)) + (((cbMtdParam._m0[22u].z * TEXCOORD_7) * ((_707.y * 2.0) + (-1.0))) * cbMtdParam._m0[21u].y);
    float _967 = fma(_947, _234 * NORMAL.x, fma(_964, _241 * TANGENT.x, (_227 * _219) * _963));
    float _970 = fma(_947, _234 * NORMAL.y, fma(_964, _241 * TANGENT.y, (_227 * _220) * _963));
    float _973 = fma(_947, _234 * NORMAL.z, fma(_964, _241 * TANGENT.z, (_227 * _221) * _963));
    float _977 = inversesqrt(dot(vec3(_967, _970, _973), vec3(_967, _970, _973)));
    float _978 = _977 * _967;
    float _979 = _977 * _970;
    float _980 = _977 * _973;
    float _3940 = isnan(0.0) ? _721 : (isnan(_721) ? 0.0 : max(_721, 0.0));
    float _981 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
    float _3951 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _3962 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _3973 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _3984 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _985 = isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0));
    float _1001 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1042 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1052 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1042);
    float _1053 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1042);
    float _1054 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1042);
    float _1058 = inversesqrt(dot(vec3(_1052, _1053, _1054), vec3(_1052, _1053, _1054)));
    float _1059 = _1052 * _1058;
    float _1060 = _1053 * _1058;
    float _1061 = _1054 * _1058;
    float _1067 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1068 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1086 = fma(_980, cbSceneParam._m0[5u].z, fma(_979, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _978));
    float _1089 = fma(_980, cbSceneParam._m0[6u].z, fma(_979, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _978));
    float _1092 = fma(_980, cbSceneParam._m0[7u].z, fma(_979, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _978));
    uint _1105 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1106 = _1105 + 9u;
    uint _1107 = _1106 + uint(cbMatDynParam._m0[0u].w);
    float _1113 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0)))) * cbInstanceData._m0[_1107].x;
    float _1114 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0)))) * cbInstanceData._m0[_1107].y;
    float _1115 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0)))) * cbInstanceData._m0[_1107].z;
    float _3995 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
    float _1116 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
    float _4006 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
    float _1117 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
    float _4017 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
    float _1118 = isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0));
    float _1119 = 1.0 - _985;
    float _1120 = _1116 * _1119;
    float _1121 = _1117 * _1119;
    float _1122 = _1118 * _1119;
    float _1127 = (_1116 + (-0.039999999105930328369140625)) * _985;
    float _1128 = (_1117 + (-0.039999999105930328369140625)) * _985;
    float _1129 = (_1118 + (-0.039999999105930328369140625)) * _985;
    float _1130 = _1127 + 0.039999999105930328369140625;
    float _1132 = _1128 + 0.039999999105930328369140625;
    float _1133 = _1129 + 0.039999999105930328369140625;
    vec4 _1142 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1067, cbSceneParam._m0[86u].y * _1068));
    float _1145 = _1142.x * TEXCOORD_3.w;
    float _1146 = dot(vec3(_978, _979, _980), vec3(_1059, _1060, _1061));
    float _1149 = _1146 * 2.0;
    float _1153 = (_1149 * _978) - _1059;
    float _1154 = (_1149 * _979) - _1060;
    float _1155 = (_1149 * _980) - _1061;
    float _1159 = abs(dot(vec3(_1059, _1060, _1061), vec3(_978, _979, _980)));
    float _4028 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
    float _1161 = sqrt(_981);
    float _1174 = exp2((_1161 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1161 * 3.0));
    float _1180 = (1.0 - _1174) * ((_1161 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1181 = _1174 * _1161;
    float _1209 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1213 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1217 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1518;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1244 = fma(_1217, cbModelParam._m0[26u].z, fma(_1213, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1209));
        float _1248 = fma(_1217, cbModelParam._m0[27u].z, fma(_1213, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1209));
        float _1252 = fma(_1217, cbModelParam._m0[28u].z, fma(_1213, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1209));
        float _1276 = _1209 + _978;
        float _1277 = _1213 + _979;
        float _1278 = _1217 + _980;
        float _1288 = fma(_1278, cbModelParam._m0[26u].z, fma(_1277, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1276)) - _1244;
        float _1289 = fma(_1278, cbModelParam._m0[27u].z, fma(_1277, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1276)) - _1248;
        float _1290 = fma(_1278, cbModelParam._m0[28u].z, fma(_1277, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1276)) - _1252;
        float _1294 = inversesqrt(dot(vec3(_1288, _1289, _1290), vec3(_1288, _1289, _1290)));
        float _1307 = ((_1294 * _1288) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1244 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1308 = ((_1294 * _1289) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1248 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1309 = ((_1294 * _1290) / cbModelParam._m0[34u].z) + ((((((_1252 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1312 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1307, _1308, _1309), 0.0);
        vec4 _1319 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1307, _1308, _1309), 0.0);
        vec4 _1326 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1307, _1308, _1309), 0.0);
        vec4 _1333 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1307, _1308, _1309), 0.0);
        float _1346 = exp2((_1312.w + (-0.5)) * 20.0) * 2.0;
        float _1347 = _1346 * (_1312.x + (-0.5));
        float _1348 = _1346 * (_1312.y + (-0.5));
        float _1349 = _1346 * (_1312.z + (-0.5));
        float _1356 = exp2((_1319.w + (-0.5)) * 20.0) * 2.0;
        float _1357 = _1356 * (_1319.x + (-0.5));
        float _1358 = _1356 * (_1319.y + (-0.5));
        float _1359 = _1356 * (_1319.z + (-0.5));
        float _1366 = exp2((_1326.w + (-0.5)) * 20.0) * 2.0;
        float _1367 = _1366 * (_1326.x + (-0.5));
        float _1368 = _1366 * (_1326.y + (-0.5));
        float _1369 = _1366 * (_1326.z + (-0.5));
        float _1376 = exp2((_1333.w + (-0.5)) * 20.0) * 2.0;
        float _1377 = _1376 * (_1333.x + (-0.5));
        float _1378 = _1376 * (_1333.y + (-0.5));
        float _1379 = _1376 * (_1333.z + (-0.5));
        float _1380 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
        float _1381 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1382 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1383 = _1347 * 0.5;
        float _1384 = _1357 * 0.5;
        float _1385 = _1367 * 0.5;
        float _1386 = dot(vec3(_1383, _1384, _1385), vec3(_1383, _1384, _1385));
        float _1391 = (_1386 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1386);
        float _1400 = (dot(vec3(_978, _979, _980), vec3(_1391 * _1383, _1391 * _1384, _1391 * _1385)) + 1.0) * 0.5;
        float _4054 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1410 = sqrt(((_1384 * _1384) + (_1383 * _1383)) + (_1385 * _1385)) / (_1380 + 9.9999997473787516355514526367188e-06);
        float _4065 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
        float _1411 = isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0));
        float _1412 = _1411 * 2.0;
        float _1416 = (1.0 - _1411) / (_1411 + 1.0);
        float _4076 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1417 = isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0));
        float _1426 = ((((1.0 - _1417) * (_1412 + 2.0)) * exp2(log2(isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0))) * (_1412 + 1.0))) + _1417) * _1380;
        float _1427 = _1348 * 0.5;
        float _1428 = _1358 * 0.5;
        float _1429 = _1368 * 0.5;
        float _1430 = dot(vec3(_1427, _1428, _1429), vec3(_1427, _1428, _1429));
        float _1435 = (_1430 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1430);
        float _1443 = (dot(vec3(_978, _979, _980), vec3(_1435 * _1427, _1435 * _1428, _1435 * _1429)) + 1.0) * 0.5;
        float _4087 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1452 = sqrt(((_1428 * _1428) + (_1427 * _1427)) + (_1429 * _1429)) / (_1381 + 9.9999997473787516355514526367188e-06);
        float _4098 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
        float _1453 = isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0));
        float _1454 = _1453 * 2.0;
        float _1458 = (1.0 - _1453) / (_1453 + 1.0);
        float _4109 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1459 = isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0));
        float _1468 = ((((1.0 - _1459) * (_1454 + 2.0)) * exp2(log2(isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0))) * (_1454 + 1.0))) + _1459) * _1381;
        float _1469 = _1349 * 0.5;
        float _1470 = _1359 * 0.5;
        float _1471 = _1369 * 0.5;
        float _1472 = dot(vec3(_1469, _1470, _1471), vec3(_1469, _1470, _1471));
        float _1477 = (_1472 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1472);
        float _1485 = (dot(vec3(_978, _979, _980), vec3(_1477 * _1469, _1477 * _1470, _1477 * _1471)) + 1.0) * 0.5;
        float _4120 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1494 = sqrt(((_1470 * _1470) + (_1469 * _1469)) + (_1471 * _1471)) / (_1382 + 9.9999997473787516355514526367188e-06);
        float _4131 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
        float _1495 = isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0));
        float _1496 = _1495 * 2.0;
        float _1500 = (1.0 - _1495) / (_1495 + 1.0);
        float _4142 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0));
        float _1510 = ((((1.0 - _1501) * (_1496 + 2.0)) * exp2(log2(isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0))) * (_1496 + 1.0))) + _1501) * _1382;
        _1518 = _1349;
        _1520 = _1348;
        _1521 = _1347;
        _1522 = _1359;
        _1523 = _1358;
        _1524 = _1357;
        _1525 = _1369;
        _1526 = _1368;
        _1527 = _1367;
        _1528 = _1382;
        _1529 = _1381;
        _1530 = _1380;
        _1531 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0)));
        _1532 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0)));
        _1533 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0)));
    }
    else
    {
        _1518 = _1519;
        _1520 = _1519;
        _1521 = _1519;
        _1522 = _1519;
        _1523 = _1519;
        _1524 = _1519;
        _1525 = _1519;
        _1526 = _1519;
        _1527 = _1519;
        _1528 = _1519;
        _1529 = _1519;
        _1530 = _1519;
        _1531 = 0.0;
        _1532 = 0.0;
        _1533 = 0.0;
    }
    float _1828;
    float _1829;
    float _1830;
    float _1831;
    float _1832;
    float _1833;
    float _1834;
    float _1835;
    float _1836;
    float _1837;
    float _1838;
    float _1839;
    float _1840;
    float _1841;
    float _1842;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1559 = fma(_1217, cbModelParam._m0[30u].z, fma(_1213, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1209));
        float _1563 = fma(_1217, cbModelParam._m0[31u].z, fma(_1213, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1209));
        float _1567 = fma(_1217, cbModelParam._m0[32u].z, fma(_1213, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1209));
        float _1590 = _1209 + _978;
        float _1591 = _1213 + _979;
        float _1592 = _1217 + _980;
        float _1602 = fma(_1592, cbModelParam._m0[30u].z, fma(_1591, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1590)) - _1559;
        float _1603 = fma(_1592, cbModelParam._m0[31u].z, fma(_1591, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1590)) - _1563;
        float _1604 = fma(_1592, cbModelParam._m0[32u].z, fma(_1591, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1590)) - _1567;
        float _1608 = inversesqrt(dot(vec3(_1602, _1603, _1604), vec3(_1602, _1603, _1604)));
        float _1621 = ((_1608 * _1602) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1559 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1622 = ((_1608 * _1603) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1563 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1623 = ((_1608 * _1604) / cbModelParam._m0[35u].z) + ((((((_1567 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1625 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1621, _1622, _1623), 0.0);
        vec4 _1632 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1621, _1622, _1623), 0.0);
        vec4 _1639 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1621, _1622, _1623), 0.0);
        vec4 _1646 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1621, _1622, _1623), 0.0);
        float _1658 = exp2((_1625.w + (-0.5)) * 20.0) * 2.0;
        float _1659 = _1658 * (_1625.x + (-0.5));
        float _1660 = _1658 * (_1625.y + (-0.5));
        float _1661 = _1658 * (_1625.z + (-0.5));
        float _1668 = exp2((_1632.w + (-0.5)) * 20.0) * 2.0;
        float _1669 = _1668 * (_1632.x + (-0.5));
        float _1670 = _1668 * (_1632.y + (-0.5));
        float _1671 = _1668 * (_1632.z + (-0.5));
        float _1678 = exp2((_1639.w + (-0.5)) * 20.0) * 2.0;
        float _1679 = _1678 * (_1639.x + (-0.5));
        float _1680 = _1678 * (_1639.y + (-0.5));
        float _1681 = _1678 * (_1639.z + (-0.5));
        float _1688 = exp2((_1646.w + (-0.5)) * 20.0) * 2.0;
        float _1689 = _1688 * (_1646.x + (-0.5));
        float _1690 = _1688 * (_1646.y + (-0.5));
        float _1691 = _1688 * (_1646.z + (-0.5));
        float _1692 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
        float _1693 = isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0));
        float _1694 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
        float _1695 = _1659 * 0.5;
        float _1696 = _1669 * 0.5;
        float _1697 = _1679 * 0.5;
        float _1698 = dot(vec3(_1695, _1696, _1697), vec3(_1695, _1696, _1697));
        float _1703 = (_1698 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1698);
        float _1711 = (dot(vec3(_978, _979, _980), vec3(_1703 * _1695, _1703 * _1696, _1703 * _1697)) + 1.0) * 0.5;
        float _4183 = isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0));
        float _1720 = sqrt(((_1696 * _1696) + (_1695 * _1695)) + (_1697 * _1697)) / (_1692 + 9.9999997473787516355514526367188e-06);
        float _4194 = isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0));
        float _1721 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
        float _1722 = _1721 * 2.0;
        float _1726 = (1.0 - _1721) / (_1721 + 1.0);
        float _4205 = isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0));
        float _1727 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
        float _1736 = ((((1.0 - _1727) * (_1722 + 2.0)) * exp2(log2(isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0))) * (_1722 + 1.0))) + _1727) * _1692;
        float _1737 = _1660 * 0.5;
        float _1738 = _1670 * 0.5;
        float _1739 = _1680 * 0.5;
        float _1740 = dot(vec3(_1737, _1738, _1739), vec3(_1737, _1738, _1739));
        float _1745 = (_1740 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1740);
        float _1753 = (dot(vec3(_978, _979, _980), vec3(_1745 * _1737, _1745 * _1738, _1745 * _1739)) + 1.0) * 0.5;
        float _4216 = isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0));
        float _1762 = sqrt(((_1738 * _1738) + (_1737 * _1737)) + (_1739 * _1739)) / (_1693 + 9.9999997473787516355514526367188e-06);
        float _4227 = isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0));
        float _1763 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
        float _1764 = _1763 * 2.0;
        float _1768 = (1.0 - _1763) / (_1763 + 1.0);
        float _4238 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
        float _1769 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
        float _1778 = ((((1.0 - _1769) * (_1764 + 2.0)) * exp2(log2(isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0))) * (_1764 + 1.0))) + _1769) * _1693;
        float _1779 = _1661 * 0.5;
        float _1780 = _1671 * 0.5;
        float _1781 = _1681 * 0.5;
        float _1782 = dot(vec3(_1779, _1780, _1781), vec3(_1779, _1780, _1781));
        float _1787 = (_1782 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1782);
        float _1795 = (dot(vec3(_978, _979, _980), vec3(_1787 * _1779, _1787 * _1780, _1787 * _1781)) + 1.0) * 0.5;
        float _4249 = isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0));
        float _1804 = sqrt(((_1780 * _1780) + (_1779 * _1779)) + (_1781 * _1781)) / (_1694 + 9.9999997473787516355514526367188e-06);
        float _4260 = isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0));
        float _1805 = isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0));
        float _1806 = _1805 * 2.0;
        float _1810 = (1.0 - _1805) / (_1805 + 1.0);
        float _4271 = isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0));
        float _1811 = isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0));
        float _1820 = ((((1.0 - _1811) * (_1806 + 2.0)) * exp2(log2(isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0))) * (_1806 + 1.0))) + _1811) * _1694;
        _1828 = _1661;
        _1829 = _1660;
        _1830 = _1659;
        _1831 = _1671;
        _1832 = _1670;
        _1833 = _1669;
        _1834 = _1681;
        _1835 = _1680;
        _1836 = _1679;
        _1837 = _1694;
        _1838 = _1693;
        _1839 = _1692;
        _1840 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1736 : (isnan(_1736) ? 0.0 : max(_1736, 0.0)));
        _1841 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0)));
        _1842 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0)));
    }
    else
    {
        _1828 = _1519;
        _1829 = _1519;
        _1830 = _1519;
        _1831 = _1519;
        _1832 = _1519;
        _1833 = _1519;
        _1834 = _1519;
        _1835 = _1519;
        _1836 = _1519;
        _1837 = _1519;
        _1838 = _1519;
        _1839 = _1519;
        _1840 = 0.0;
        _1841 = 0.0;
        _1842 = 0.0;
    }
    float _1852 = (cbModelParam._m0[1u].x * (_1840 - _1531)) + _1531;
    float _1853 = (cbModelParam._m0[1u].x * (_1841 - _1532)) + _1532;
    float _1854 = (cbModelParam._m0[1u].x * (_1842 - _1533)) + _1533;
    float _1875 = fma(_1854, cbSceneParam._m0[89u].z, fma(_1853, cbSceneParam._m0[89u].y, _1852 * cbSceneParam._m0[89u].x));
    float _1878 = fma(_1854, cbSceneParam._m0[90u].z, fma(_1853, cbSceneParam._m0[90u].y, _1852 * cbSceneParam._m0[90u].x));
    float _1881 = fma(_1854, cbSceneParam._m0[91u].z, fma(_1853, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1852));
    float _1896 = _1153 * 0.5;
    float _1897 = _1154 * 0.5;
    float _1898 = _1155 * 0.5;
    float _1899 = dot(vec4(_1896, _1897, _1898, 1.0), vec4(_1830, _1833, _1836, _1839));
    float _1902 = dot(vec4(_1896, _1897, _1898, 1.0), vec4(_1829, _1832, _1835, _1838));
    float _1905 = dot(vec4(_1896, _1897, _1898, 1.0), vec4(_1828, _1831, _1834, _1837));
    float _1939;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1912 = dot(vec4(_1896, _1897, _1898, 1.0), vec4(_1518, _1522, _1525, _1528));
        float _1916 = dot(vec4(_1896, _1897, _1898, 1.0), vec4(_1520, _1523, _1526, _1529));
        float _1920 = dot(vec4(_1896, _1897, _1898, 1.0), vec4(_1521, _1524, _1527, _1530));
        float _1927 = dot(vec4(cbModelParam._m0[39u]), vec4(_1896, _1897, _1898, 1.0));
        _1939 = dot(vec3(isnan(0.0) ? _1920 : (isnan(_1920) ? 0.0 : max(_1920, 0.0)), isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0)), isnan(0.0) ? _1912 : (isnan(_1912) ? 0.0 : max(_1912, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1927) ? 0.0 : (isnan(0.0) ? _1927 : max(0.0, _1927))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1939 = 1.0;
    }
    float _1950;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1941 = dot(vec4(cbModelParam._m0[40u]), vec4(_1896, _1897, _1898, 1.0));
        _1950 = dot(vec3(isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0)), isnan(0.0) ? _1902 : (isnan(_1902) ? 0.0 : max(_1902, 0.0)), isnan(0.0) ? _1905 : (isnan(_1905) ? 0.0 : max(_1905, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1941) ? 0.0 : (isnan(0.0) ? _1941 : max(0.0, _1941))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1950 = 1.0;
    }
    float _1954 = (_1950 * cbModelParam._m0[1u].x) + (_1939 * (1.0 - cbModelParam._m0[1u].x));
    float _1964 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _981);
    float _1965 = isnan(_1964) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1964 : min(cbModelParam._m0[25u].z, _1964));
    float _2045;
    float _2047;
    float _2049;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2012 = fma(_1217, cbModelParam._m0[13u].z, fma(_1213, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1209)) + cbModelParam._m0[13u].w;
        float _2016 = fma(_1217, cbModelParam._m0[14u].z, fma(_1213, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1209)) + cbModelParam._m0[14u].w;
        float _2020 = fma(_1217, cbModelParam._m0[15u].z, fma(_1213, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1209)) + cbModelParam._m0[15u].w;
        float _2023 = fma(_1155, cbModelParam._m0[13u].z, fma(_1154, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1153));
        float _2026 = fma(_1155, cbModelParam._m0[14u].z, fma(_1154, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1153));
        float _2029 = fma(_1155, cbModelParam._m0[15u].z, fma(_1154, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1153));
        float _2057;
        if (_2023 > 0.0)
        {
            _2057 = abs((1.0 - _2012) / _2023);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2023 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2012 + 1.0) / _2023);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2057 = frontier_phi_14_12_ladder;
        }
        float _2259;
        if (_2026 > 0.0)
        {
            _2259 = abs((1.0 - _2016) / _2026);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2026 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2016 + 1.0) / _2026);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2259 = frontier_phi_23_19_ladder;
        }
        float _2513;
        if (_2029 > 0.0)
        {
            _2513 = abs((1.0 - _2020) / _2029);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2029 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2020 + 1.0) / _2029);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2513 = frontier_phi_35_30_ladder;
        }
        float _2515 = isnan(_2259) ? _2057 : (isnan(_2057) ? _2259 : min(_2057, _2259));
        float _2516 = isnan(_2513) ? _2515 : (isnan(_2515) ? _2513 : min(_2515, _2513));
        float _2520 = (_2516 * _2023) + _2012;
        float _2521 = (_2516 * _2026) + _2016;
        float _2522 = (_2516 * _2029) + _2020;
        float _2523 = _2516 * 9.9999997473787516355514526367188e-05;
        float _2525 = (-1.0) - _2523;
        float _2527 = _2523 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2522 > _2527) || ((_2522 < _2525) || ((_2521 > _2527) || ((_2521 < _2525) || ((_2520 < _2525) || (_2520 > _2527))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2650 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2522, cbModelParam._m0[9u].z, fma(_2521, cbModelParam._m0[9u].y, _2520 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2522, cbModelParam._m0[10u].z, fma(_2521, cbModelParam._m0[10u].y, _2520 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2522, cbModelParam._m0[11u].z, fma(_2521, cbModelParam._m0[11u].y, _2520 * cbModelParam._m0[11u].x))), _1965);
            frontier_phi_13_35_ladder = _2650.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2650.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2650.x * cbModelParam._m0[1u].y;
        }
        _2045 = frontier_phi_13_35_ladder_2;
        _2047 = frontier_phi_13_35_ladder_1;
        _2049 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2033 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1153, _1154, _1155), _1965);
        _2045 = _2033.x * cbModelParam._m0[1u].y;
        _2047 = _2033.y * cbModelParam._m0[1u].y;
        _2049 = _2033.z * cbModelParam._m0[1u].y;
    }
    float _2053 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _981);
    float _2054 = isnan(_2053) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2053 : min(cbModelParam._m0[25u].w, _2053));
    float _2143;
    float _2145;
    float _2147;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2107 = fma(_1217, cbModelParam._m0[21u].z, fma(_1213, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1209)) + cbModelParam._m0[21u].w;
        float _2111 = fma(_1217, cbModelParam._m0[22u].z, fma(_1213, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1209)) + cbModelParam._m0[22u].w;
        float _2115 = fma(_1217, cbModelParam._m0[23u].z, fma(_1213, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1209)) + cbModelParam._m0[23u].w;
        float _2118 = fma(_1155, cbModelParam._m0[21u].z, fma(_1154, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1153));
        float _2121 = fma(_1155, cbModelParam._m0[22u].z, fma(_1154, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1153));
        float _2124 = fma(_1155, cbModelParam._m0[23u].z, fma(_1154, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1153));
        float _2264;
        if (_2118 > 0.0)
        {
            _2264 = abs((1.0 - _2107) / _2118);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2118 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2107 + 1.0) / _2118);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2264 = frontier_phi_25_21_ladder;
        }
        float _2540;
        if (_2121 > 0.0)
        {
            _2540 = abs((1.0 - _2111) / _2121);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2121 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2111 + 1.0) / _2121);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2540 = frontier_phi_37_32_ladder;
        }
        float _2753;
        if (_2124 > 0.0)
        {
            _2753 = abs((1.0 - _2115) / _2124);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2124 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2115 + 1.0) / _2124);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2753 = frontier_phi_46_43_ladder;
        }
        float _2755 = isnan(_2540) ? _2264 : (isnan(_2264) ? _2540 : min(_2264, _2540));
        float _2756 = isnan(_2753) ? _2755 : (isnan(_2755) ? _2753 : min(_2755, _2753));
        float _2760 = (_2756 * _2118) + _2107;
        float _2761 = (_2756 * _2121) + _2111;
        float _2762 = (_2756 * _2124) + _2115;
        float _2763 = _2756 * 9.9999997473787516355514526367188e-05;
        float _2764 = (-1.0) - _2763;
        float _2766 = _2763 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2762 > _2766) || ((_2762 < _2764) || ((_2761 > _2766) || ((_2761 < _2764) || ((_2760 < _2764) || (_2760 > _2766))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2984 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2762, cbModelParam._m0[17u].z, fma(_2761, cbModelParam._m0[17u].y, _2760 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2762, cbModelParam._m0[18u].z, fma(_2761, cbModelParam._m0[18u].y, _2760 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2762, cbModelParam._m0[19u].z, fma(_2761, cbModelParam._m0[19u].y, _2760 * cbModelParam._m0[19u].x))), _2054);
            frontier_phi_22_46_ladder = _2984.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2984.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2984.x * cbModelParam._m0[1u].z;
        }
        _2143 = frontier_phi_22_46_ladder_2;
        _2145 = frontier_phi_22_46_ladder_1;
        _2147 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2127 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1153, _1154, _1155), _2054);
        _2143 = _2127.x * cbModelParam._m0[1u].z;
        _2145 = _2127.y * cbModelParam._m0[1u].z;
        _2147 = _2127.z * cbModelParam._m0[1u].z;
    }
    float _2160 = (((_1180 * _1130) + _1181) * _1145) * ((cbModelParam._m0[1u].w * (_2143 - _2045)) + _2045);
    float _2162 = (((_1180 * _1132) + _1181) * _1145) * ((cbModelParam._m0[1u].w * (_2145 - _2047)) + _2047);
    float _2164 = (((_1180 * _1133) + _1181) * _1145) * ((cbModelParam._m0[1u].w * (_2147 - _2049)) + _2049);
    float _2167 = fma(_2164, cbSceneParam._m0[89u].z, fma(_2162, cbSceneParam._m0[89u].y, _2160 * cbSceneParam._m0[89u].x));
    float _2170 = fma(_2164, cbSceneParam._m0[90u].z, fma(_2162, cbSceneParam._m0[90u].y, _2160 * cbSceneParam._m0[90u].x));
    float _2173 = fma(_2164, cbSceneParam._m0[91u].z, fma(_2162, cbSceneParam._m0[91u].y, _2160 * cbSceneParam._m0[91u].x));
    uvec4 _2183 = floatBitsToUint(cbInstanceData._m0[_1105 + 5u]);
    uint _2185 = _2183.x * 14u;
    uint _2186 = _2185 + 13u;
    float _2193 = _1145 + (-1.0);
    float _2198 = (cbLight._m0[_2186].x * _2193) + 1.0;
    float _2199 = (cbLight._m0[_2186].y * _2193) + 1.0;
    float _2200 = (cbLight._m0[_2186].z * _2193) + 1.0;
    float _2201 = (cbLight._m0[_2186].w * _2193) + 1.0;
    uint _2202 = _2185 + 5u;
    float _2208 = isnan(1.0) ? _2199 : (isnan(_2199) ? 1.0 : min(_2199, 1.0));
    uint _2212 = _2185 + 4u;
    float _2218 = isnan(1.0) ? _2198 : (isnan(_2198) ? 1.0 : min(_2198, 1.0));
    uint _2222 = _2185 | 1u;
    float _2233 = dot(vec3(cbLight._m0[_2185].xyz), vec3(_978, _979, _980));
    float _2236 = dot(vec3(cbLight._m0[_2222].xyz), vec3(_978, _979, _980));
    float _4407 = isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0));
    float _4418 = isnan(0.0) ? _2236 : (isnan(_2236) ? 0.0 : max(_2236, 0.0));
    float _2241 = (isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0))) * 0.3183098733425140380859375;
    float _2243 = (isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0))) * 0.3183098733425140380859375;
    float _2250 = ((cbLight._m0[_2202].x * _2208) * _2243) + ((cbLight._m0[_2212].x * _2218) * _2241);
    float _2251 = ((_2208 * cbLight._m0[_2202].y) * _2243) + ((_2218 * cbLight._m0[_2212].y) * _2241);
    float _2252 = ((_2208 * cbLight._m0[_2202].z) * _2243) + ((_2218 * cbLight._m0[_2212].z) * _2241);
    uvec4 _2256 = floatBitsToUint(cbLight._m0[_2185 + 12u]);
    bool _2258 = _2256.x == 0u;
    float _2269;
    float _2271;
    float _2273;
    if (_2258)
    {
        _2269 = _2250;
        _2271 = _2251;
        _2273 = _2252;
    }
    else
    {
        uint _2277 = _2185 + 6u;
        float _2293 = (dot(vec3(cbLight._m0[_2185 + 2u].xyz), vec3(_978, _979, _980)) * 0.5) + 0.5;
        float _2294 = _2293 * _2293;
        float _4429 = isnan(0.0) ? _2294 : (isnan(_2294) ? 0.0 : max(_2294, 0.0));
        float _2295 = isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0));
        float _2296 = isnan(1.0) ? _2200 : (isnan(_2200) ? 1.0 : min(_2200, 1.0));
        _2269 = (((cbLight._m0[_2277].x * 0.3183098733425140380859375) * _2295) * _2296) + _2250;
        _2271 = (((cbLight._m0[_2277].y * 0.3183098733425140380859375) * _2295) * _2296) + _2251;
        _2273 = (((cbLight._m0[_2277].z * 0.3183098733425140380859375) * _2295) * _2296) + _2252;
    }
    bool _2276 = _2256.y == 0u;
    float _2314;
    float _2316;
    float _2318;
    if (_2276)
    {
        _2314 = _2269;
        _2316 = _2271;
        _2318 = _2273;
    }
    else
    {
        uint _2484 = _2185 + 7u;
        float _2500 = (dot(vec3(cbLight._m0[_2185 + 3u].xyz), vec3(_978, _979, _980)) * 0.5) + 0.5;
        float _2501 = _2500 * _2500;
        float _4445 = isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0));
        float _2502 = isnan(1.0) ? _4445 : (isnan(_4445) ? 1.0 : min(_4445, 1.0));
        float _2503 = isnan(1.0) ? _2201 : (isnan(_2201) ? 1.0 : min(_2201, 1.0));
        _2314 = (((cbLight._m0[_2484].x * 0.3183098733425140380859375) * _2502) * _2503) + _2269;
        _2316 = (((cbLight._m0[_2484].y * 0.3183098733425140380859375) * _2502) * _2503) + _2271;
        _2318 = (((cbLight._m0[_2484].z * 0.3183098733425140380859375) * _2502) * _2503) + _2273;
    }
    uint _2321 = _2185 + 8u;
    float _2334 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2185].w)) * _981) * 0.949999988079071044921875);
    float _2335 = _2334 * _2334;
    float _2336 = cbLight._m0[_2185].x + _1059;
    float _2337 = cbLight._m0[_2185].y + _1060;
    float _2338 = cbLight._m0[_2185].z + _1061;
    float _2342 = inversesqrt(dot(vec3(_2336, _2337, _2338), vec3(_2336, _2337, _2338)));
    float _2343 = _2342 * _2336;
    float _2344 = _2342 * _2337;
    float _2345 = _2342 * _2338;
    float _2346 = dot(vec3(_978, _979, _980), vec3(cbLight._m0[_2185].xyz));
    float _4461 = isnan(0.0) ? _2346 : (isnan(_2346) ? 0.0 : max(_2346, 0.0));
    float _2349 = isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0));
    float _4472 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
    float _2350 = isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0));
    float _2351 = dot(vec3(_978, _979, _980), vec3(_2343, _2344, _2345));
    float _4483 = isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0));
    float _2354 = isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0));
    float _2355 = dot(vec3(cbLight._m0[_2185].xyz), vec3(_2343, _2344, _2345));
    float _4494 = isnan(0.0) ? _2355 : (isnan(_2355) ? 0.0 : max(_2355, 0.0));
    float _2359 = _2335 * _2335;
    float _2363 = ((_2354 * _2354) * (_2359 + (-1.0))) + 1.0;
    float _2371 = exp2(log2(1.0 - (isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0)))) * 5.0);
    float _2372 = 0.959999978542327880859375 - _1127;
    float _2374 = 0.959999978542327880859375 - _1128;
    float _2375 = 0.959999978542327880859375 - _1129;
    float _2382 = 1.0 - _2335;
    float _2393 = (0.5 / (((_2350 * ((_2349 * _2382) + _2335)) + 9.9999999392252902907785028219223e-09) + (((_2350 * _2382) + _2335) * _2349))) * _2349;
    float _4505 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
    float _2395 = (isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0))) * (_2359 / ((_2363 * _2363) * 3.141590118408203125));
    uint _2406 = _2185 + 9u;
    float _2417 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2222].w)) * _981) * 0.949999988079071044921875);
    float _2418 = _2417 * _2417;
    float _2419 = cbLight._m0[_2222].x + _1059;
    float _2420 = cbLight._m0[_2222].y + _1060;
    float _2421 = cbLight._m0[_2222].z + _1061;
    float _2425 = inversesqrt(dot(vec3(_2419, _2420, _2421), vec3(_2419, _2420, _2421)));
    float _2426 = _2425 * _2419;
    float _2427 = _2425 * _2420;
    float _2428 = _2425 * _2421;
    float _2429 = dot(vec3(_978, _979, _980), vec3(cbLight._m0[_2222].xyz));
    float _4516 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
    float _2432 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
    float _2433 = dot(vec3(_978, _979, _980), vec3(_2426, _2427, _2428));
    float _4527 = isnan(0.0) ? _2433 : (isnan(_2433) ? 0.0 : max(_2433, 0.0));
    float _2436 = isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0));
    float _2437 = dot(vec3(cbLight._m0[_2222].xyz), vec3(_2426, _2427, _2428));
    float _4538 = isnan(0.0) ? _2437 : (isnan(_2437) ? 0.0 : max(_2437, 0.0));
    float _2441 = _2418 * _2418;
    float _2445 = ((_2436 * _2436) * (_2441 + (-1.0))) + 1.0;
    float _2452 = exp2(log2(1.0 - (isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0)))) * 5.0);
    float _2459 = 1.0 - _2418;
    float _2469 = (0.5 / (((_2350 * ((_2432 * _2459) + _2418)) + 9.9999999392252902907785028219223e-09) + (((_2350 * _2459) + _2418) * _2432))) * _2432;
    float _4549 = isnan(0.0) ? _2469 : (isnan(_2469) ? 0.0 : max(_2469, 0.0));
    float _2471 = (isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0))) * (_2441 / ((_2445 * _2445) * 3.141590118408203125));
    float _2481 = (((((_2452 * _2372) + _1130) * cbLight._m0[_2406].x) * _2471) * _2208) + (((((_2371 * _2372) + _1130) * cbLight._m0[_2321].x) * _2395) * _2218);
    float _2482 = (((((_2452 * _2374) + _1132) * cbLight._m0[_2406].y) * _2471) * _2208) + (((((_2371 * _2374) + _1132) * cbLight._m0[_2321].y) * _2395) * _2218);
    float _2483 = (((((_2452 * _2375) + _1133) * cbLight._m0[_2406].z) * _2471) * _2208) + (((((_2371 * _2375) + _1133) * cbLight._m0[_2321].z) * _2395) * _2218);
    float _2545;
    float _2547;
    float _2549;
    if (_2258)
    {
        _2545 = _2481;
        _2547 = _2482;
        _2549 = _2483;
    }
    else
    {
        uint _2551 = _2185 + 2u;
        uint _2555 = _2185 + 10u;
        float _2569 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2551].w)) * _981) * 0.949999988079071044921875);
        float _2570 = _2569 * _2569;
        float _2571 = cbLight._m0[_2551].x + _1059;
        float _2572 = cbLight._m0[_2551].y + _1060;
        float _2573 = cbLight._m0[_2551].z + _1061;
        float _2577 = inversesqrt(dot(vec3(_2571, _2572, _2573), vec3(_2571, _2572, _2573)));
        float _2578 = _2577 * _2571;
        float _2579 = _2577 * _2572;
        float _2580 = _2577 * _2573;
        float _2581 = dot(vec3(_978, _979, _980), vec3(cbLight._m0[_2551].xyz));
        float _4560 = isnan(0.0) ? _2581 : (isnan(_2581) ? 0.0 : max(_2581, 0.0));
        float _2584 = isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0));
        float _2585 = dot(vec3(_978, _979, _980), vec3(_2578, _2579, _2580));
        float _4571 = isnan(0.0) ? _2585 : (isnan(_2585) ? 0.0 : max(_2585, 0.0));
        float _2588 = isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0));
        float _2589 = dot(vec3(cbLight._m0[_2551].xyz), vec3(_2578, _2579, _2580));
        float _4582 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0));
        float _2593 = _2570 * _2570;
        float _2597 = ((_2588 * _2588) * (_2593 + (-1.0))) + 1.0;
        float _2604 = exp2(log2(1.0 - (isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0)))) * 5.0);
        float _2611 = 1.0 - _2570;
        float _2621 = (0.5 / (((_2350 * ((_2584 * _2611) + _2570)) + 9.9999999392252902907785028219223e-09) + (((_2350 * _2611) + _2570) * _2584))) * _2584;
        float _4593 = isnan(0.0) ? _2621 : (isnan(_2621) ? 0.0 : max(_2621, 0.0));
        float _2623 = (isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0))) * (_2593 / ((_2597 * _2597) * 3.141590118408203125));
        float _2624 = isnan(1.0) ? _2200 : (isnan(_2200) ? 1.0 : min(_2200, 1.0));
        _2545 = (((((_2604 * _2372) + _1130) * cbLight._m0[_2555].x) * _2623) * _2624) + _2481;
        _2547 = (((((_2604 * _2374) + _1132) * cbLight._m0[_2555].y) * _2623) * _2624) + _2482;
        _2549 = (((((_2604 * _2375) + _1133) * cbLight._m0[_2555].z) * _2623) * _2624) + _2483;
    }
    float _2659;
    float _2661;
    float _2663;
    if (_2276)
    {
        _2659 = _2545;
        _2661 = _2547;
        _2663 = _2549;
    }
    else
    {
        uint _2670 = _2185 + 3u;
        uint _2674 = _2185 + 11u;
        float _2688 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2670].w)) * _981) * 0.949999988079071044921875);
        float _2689 = _2688 * _2688;
        float _2690 = cbLight._m0[_2670].x + _1059;
        float _2691 = cbLight._m0[_2670].y + _1060;
        float _2692 = cbLight._m0[_2670].z + _1061;
        float _2696 = inversesqrt(dot(vec3(_2690, _2691, _2692), vec3(_2690, _2691, _2692)));
        float _2697 = _2696 * _2690;
        float _2698 = _2696 * _2691;
        float _2699 = _2696 * _2692;
        float _2700 = dot(vec3(_978, _979, _980), vec3(cbLight._m0[_2670].xyz));
        float _4609 = isnan(0.0) ? _2700 : (isnan(_2700) ? 0.0 : max(_2700, 0.0));
        float _2703 = isnan(1.0) ? _4609 : (isnan(_4609) ? 1.0 : min(_4609, 1.0));
        float _2704 = dot(vec3(_978, _979, _980), vec3(_2697, _2698, _2699));
        float _4620 = isnan(0.0) ? _2704 : (isnan(_2704) ? 0.0 : max(_2704, 0.0));
        float _2707 = isnan(1.0) ? _4620 : (isnan(_4620) ? 1.0 : min(_4620, 1.0));
        float _2708 = dot(vec3(cbLight._m0[_2670].xyz), vec3(_2697, _2698, _2699));
        float _4631 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
        float _2712 = _2689 * _2689;
        float _2716 = ((_2707 * _2707) * (_2712 + (-1.0))) + 1.0;
        float _2723 = exp2(log2(1.0 - (isnan(1.0) ? _4631 : (isnan(_4631) ? 1.0 : min(_4631, 1.0)))) * 5.0);
        float _2730 = 1.0 - _2689;
        float _2740 = (0.5 / (((_2350 * ((_2703 * _2730) + _2689)) + 9.9999999392252902907785028219223e-09) + (((_2350 * _2730) + _2689) * _2703))) * _2703;
        float _4642 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
        float _2742 = (isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0))) * (_2712 / ((_2716 * _2716) * 3.141590118408203125));
        float _2743 = isnan(1.0) ? _2201 : (isnan(_2201) ? 1.0 : min(_2201, 1.0));
        _2659 = (((((_2723 * _2372) + _1130) * cbLight._m0[_2674].x) * _2742) * _2743) + _2545;
        _2661 = (((((_2723 * _2374) + _1132) * cbLight._m0[_2674].y) * _2742) * _2743) + _2547;
        _2663 = (((((_2723 * _2375) + _1133) * cbLight._m0[_2674].z) * _2742) * _2743) + _2549;
    }
    float _2878;
    float _2880;
    float _2882;
    float _2884;
    float _2886;
    float _2888;
    if (_2183.y == 0u)
    {
        float _2818 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2819 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2818;
        float _2820 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2818;
        float _2821 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2818;
        uvec4 _2833 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2834 = _2833.x;
        uint _2845 = uint((float(_2833.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1068) / _2834))) + floor(float(uint(cbSceneParam._m0[85u].x * _1067) / _2834)));
        float _2855 = (log2(_2821 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2856 = isnan(0.0) ? _2855 : (isnan(_2855) ? 0.0 : max(_2855, 0.0));
        uint _2859 = uint(isnan(14.0) ? _2856 : (isnan(_2856) ? 14.0 : min(_2856, 14.0)));
        uvec4 _2864 = texelFetch(g_lightClusterGridBuffer, int(((_2859 << 2u) + (_2845 << 6u)) >> 2u));
        uint _2865 = _2864.x;
        uint _2866 = _2833.z;
        float _2989;
        float _2991;
        float _2993;
        float _2995;
        float _2997;
        float _2999;
        if (((((1u << ((_2866 >> 4u) & 15u)) + 4294967295u) & _2865) == 0u) || ((_2866 & 240u) == 0u))
        {
            _2989 = 0.0;
            _2991 = 0.0;
            _2993 = 0.0;
            _2995 = 0.0;
            _2997 = 0.0;
            _2999 = 0.0;
        }
        else
        {
            float _2990;
            float _2992;
            float _2994;
            float _2996;
            float _2998;
            float _3000;
            float _3132 = 0.0;
            float _3133 = 0.0;
            float _3134 = 0.0;
            float _3135 = 0.0;
            float _3136 = 0.0;
            float _3137 = 0.0;
            uint _3138 = 0u;
            uint _3147;
            bool _3148;
            for (;;)
            {
                _3147 = texelFetch(g_lightClassification, int((((_2859 << 5u) + (_2845 << 9u)) + (_3138 << 2u)) >> 2u)).x;
                _3148 = _3147 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3148)
                {
                    frontier_phi_61_pred = _3132;
                    frontier_phi_61_pred_1 = _3137;
                    frontier_phi_61_pred_2 = _3136;
                    frontier_phi_61_pred_3 = _3135;
                    frontier_phi_61_pred_4 = _3134;
                    frontier_phi_61_pred_5 = _3133;
                }
                else
                {
                    float _3256;
                    float _3257;
                    float _3258;
                    float _3259;
                    float _3260;
                    float _3261;
                    uint _3262;
                    _3256 = _3132;
                    _3257 = _3133;
                    _3258 = _3134;
                    _3259 = _3135;
                    _3260 = _3136;
                    _3261 = _3137;
                    _3262 = _3147;
                    float _3188;
                    float _3189;
                    float _3190;
                    float _3191;
                    float _3192;
                    float _3193;
                    for (;;)
                    {
                        uint _3266 = uint(findLSB(_3262)) + (_3138 << 5u);
                        uint _3263 = (_3262 + 4294967295u) & _3262;
                        uint _3268 = _3266 * 48u;
                        vec4 _3282 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3268)).x, texelFetch(g_PointLightRenderingBuffer, int(_3268 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3268 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3268 + 3u)).x));
                        uint _3288 = (_3266 * 48u) + 4u;
                        vec4 _3301 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3288)).x, texelFetch(g_PointLightRenderingBuffer, int(_3288 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3288 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3288 + 3u)).x));
                        uint _3307 = (_3266 * 48u) + 8u;
                        vec3 _3318 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3307)).x, texelFetch(g_PointLightRenderingBuffer, int(_3307 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3307 + 2u)).x));
                        float _3322 = _3282.x - _2819;
                        float _3323 = _3282.y - _2820;
                        float _3324 = _3282.z - _2821;
                        float _3325 = dot(vec3(_3322, _3323, _3324), vec3(_3322, _3323, _3324));
                        float _3328 = inversesqrt(_3325);
                        float _3329 = _3328 * _3322;
                        float _3330 = _3328 * _3323;
                        float _3331 = _3328 * _3324;
                        float _3332 = dot(vec3(_1086, _1089, _1092), vec3(_3329, _3330, _3331));
                        float _3337 = 1.0 - (_3325 * _3282.w);
                        float _4668 = isnan(0.0) ? _3337 : (isnan(_3337) ? 0.0 : max(_3337, 0.0));
                        float _3338 = isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0));
                        float _3339 = sqrt(_3325) * _3301.w;
                        float _3342 = 1.39999997615814208984375 / (_3339 + 1.39999997615814208984375);
                        float _3343 = _3342 * _3342;
                        float _3346 = ((1.0 - _3343) * _3332) + _3343;
                        float _3349 = _3339 * _3339;
                        float _3353 = ((isnan(0.0) ? _3346 : (isnan(_3346) ? 0.0 : max(_3346, 0.0))) * _3338) / ((_3349 * 0.699999988079071044921875) + 1.0);
                        float _3357 = (-0.0) - _2819;
                        float _3358 = (-0.0) - _2820;
                        float _3359 = (-0.0) - _2821;
                        float _3363 = inversesqrt(dot(vec3(_3357, _3358, _3359), vec3(_3357, _3358, _3359)));
                        float _3364 = _3363 * _3357;
                        float _3365 = _3363 * _3358;
                        float _3366 = _3363 * _3359;
                        float _3374 = exp2(log2(1.0 / ((_3349 * 3.5) + 5.0)) * 0.25);
                        float _3375 = 1.0 - _1161;
                        float _3382 = sqrt(1.0 - ((1.0 - (_3375 * _3375)) * (1.0 - (_3374 * _3374))));
                        float _3383 = _3382 * _3382;
                        float _3384 = _3383 * _3383;
                        float _3385 = _3364 + _3329;
                        float _3386 = _3365 + _3330;
                        float _3387 = _3366 + _3331;
                        float _3391 = inversesqrt(dot(vec3(_3385, _3386, _3387), vec3(_3385, _3386, _3387)));
                        float _3395 = dot(vec3(_1086, _1089, _1092), vec3(_3364, _3365, _3366));
                        float _4684 = isnan(0.0) ? _3395 : (isnan(_3395) ? 0.0 : max(_3395, 0.0));
                        float _3398 = isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0));
                        float _3399 = dot(vec3(_1086, _1089, _1092), vec3(_3391 * _3385, _3391 * _3386, _3391 * _3387));
                        float _4695 = isnan(0.0) ? _3399 : (isnan(_3399) ? 0.0 : max(_3399, 0.0));
                        float _3402 = isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0));
                        float _3406 = ((_3402 * _3402) * (_3384 + (-1.0))) + 1.0;
                        float _3407 = _3342 * _3383;
                        float _3408 = _3407 * _3407;
                        float _3411 = ((1.0 - _3408) * _3332) + _3408;
                        float _4706 = isnan(0.0) ? _3411 : (isnan(_3411) ? 0.0 : max(_3411, 0.0));
                        float _3412 = isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0));
                        float _3413 = 1.0 - _3383;
                        float _3423 = (0.5 / (((_3412 * ((_3398 * _3413) + _3383)) + 9.9999999392252902907785028219223e-09) + (((_3412 * _3413) + _3383) * _3398))) * _3412;
                        float _4717 = isnan(0.0) ? _3423 : (isnan(_3423) ? 0.0 : max(_3423, 0.0));
                        float _3434 = (((_3384 * 3.1415927410125732421875) * (isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0)))) / ((_3406 * _3406) * ((_3349 * 2.1991131305694580078125) + 3.141590118408203125))) * _3338;
                        _3191 = (_3353 * _3301.x) + _3259;
                        _3192 = (_3353 * _3301.y) + _3260;
                        _3193 = (_3353 * _3301.z) + _3261;
                        _3188 = (_3434 * _3318.x) + _3256;
                        _3189 = (_3434 * _3318.y) + _3257;
                        _3190 = (_3434 * _3318.z) + _3258;
                        if (_3263 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3256 = _3188;
                            _3257 = _3189;
                            _3258 = _3190;
                            _3259 = _3191;
                            _3260 = _3192;
                            _3261 = _3193;
                            _3262 = _3263;
                        }
                    }
                    frontier_phi_61_pred = _3188;
                    frontier_phi_61_pred_1 = _3193;
                    frontier_phi_61_pred_2 = _3192;
                    frontier_phi_61_pred_3 = _3191;
                    frontier_phi_61_pred_4 = _3190;
                    frontier_phi_61_pred_5 = _3189;
                }
                _2990 = frontier_phi_61_pred;
                _3000 = frontier_phi_61_pred_1;
                _2998 = frontier_phi_61_pred_2;
                _2996 = frontier_phi_61_pred_3;
                _2994 = frontier_phi_61_pred_4;
                _2992 = frontier_phi_61_pred_5;
                uint _3139 = _3138 + 1u;
                if (_3139 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3132 = _2990;
                    _3133 = _2992;
                    _3134 = _2994;
                    _3135 = _2996;
                    _3136 = _2998;
                    _3137 = _3000;
                    _3138 = _3139;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2989 = _2990;
            _2991 = _2992;
            _2993 = _2994;
            _2995 = _2996;
            _2997 = _2998;
            _2999 = _3000;
        }
        uvec4 _3003 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3004 = _3003.z;
        uint _3006 = (_3004 >> 8u) & 15u;
        float _3100;
        float _3102;
        float _3104;
        float _3106;
        float _3108;
        float _3110;
        if (((4294967295u << _3006) & _2865) == 0u)
        {
            _3100 = _2989;
            _3102 = _2991;
            _3104 = _2993;
            _3106 = _2995;
            _3108 = _2997;
            _3110 = _2999;
        }
        else
        {
            float _3125 = inversesqrt(dot(vec3(_2819, _2820, _2821), vec3(_2819, _2820, _2821)));
            float _3126 = _3125 * _2819;
            float _3127 = _3125 * _2820;
            float _3128 = _3125 * _2821;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_3006 < ((_3004 >> 12u) & 15u))
            {
                float _3101;
                float _3103;
                float _3105;
                float _3107;
                float _3109;
                float _3111;
                float _3239 = _2989;
                float _3240 = _2991;
                float _3241 = _2993;
                float _3242 = _2995;
                float _3243 = _2997;
                float _3244 = _2999;
                uint _3245 = _3006;
                uint _3254;
                bool _3255;
                for (;;)
                {
                    _3254 = texelFetch(g_lightClassification, int((((_2859 << 5u) + (_2845 << 9u)) + (_3245 << 2u)) >> 2u)).x;
                    _3255 = _3254 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3255)
                    {
                        frontier_phi_67_pred = _3242;
                        frontier_phi_67_pred_1 = _3243;
                        frontier_phi_67_pred_2 = _3244;
                        frontier_phi_67_pred_3 = _3241;
                        frontier_phi_67_pred_4 = _3240;
                        frontier_phi_67_pred_5 = _3239;
                    }
                    else
                    {
                        float _3439;
                        float _3440;
                        float _3441;
                        float _3442;
                        float _3443;
                        float _3444;
                        float _3732;
                        float _3733;
                        float _3734;
                        float _3735;
                        float _3736;
                        float _3737;
                        float _3452 = _3239;
                        float _3453 = _3240;
                        float _3454 = _3241;
                        float _3455 = _3242;
                        float _3456 = _3243;
                        float _3457 = _3244;
                        uint _3458 = _3254;
                        uint _3459;
                        vec4 _3484;
                        float _3485;
                        vec4 _3500;
                        vec3 _3512;
                        vec4 _3527;
                        vec4 _3542;
                        float _3588;
                        bool _3589;
                        for (;;)
                        {
                            uint _3469 = ((_3245 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3458));
                            _3459 = (_3458 + 4294967295u) & _3458;
                            uint _3471 = _3469 * 40u;
                            _3484 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3471)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 3u)).x));
                            _3485 = _3484.w;
                            uint _3487 = (_3469 * 40u) + 4u;
                            _3500 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3487)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3487 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3487 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3487 + 3u)).x));
                            uint _3502 = (_3469 * 40u) + 8u;
                            _3512 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3502)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3502 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3502 + 2u)).x));
                            uint _3514 = (_3469 * 40u) + 16u;
                            _3527 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3514)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 3u)).x));
                            uint _3529 = (_3469 * 40u) + 20u;
                            _3542 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3529)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3529 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3529 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3529 + 3u)).x));
                            uint _3544 = (_3469 * 40u) + 24u;
                            vec4 _3557 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3544)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3544 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3544 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3544 + 3u)).x));
                            uint _3563 = (_3469 * 40u) + 28u;
                            vec4 _3576 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3563)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3563 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3563 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3563 + 3u)).x));
                            _3588 = fma(_2821, _3576.z, fma(_2820, _3576.y, _3576.x * _2819)) + _3576.w;
                            _3589 = !((fma(_2821, _3557.z, fma(_2820, _3557.y, _3557.x * _2819)) + _3557.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3589)
                            {
                                float _3616 = _3484.x - _2819;
                                float _3617 = _3484.y - _2820;
                                float _3618 = _3484.z - _2821;
                                float _3619 = dot(vec3(_3616, _3617, _3618), vec3(_3616, _3617, _3618));
                                float _3622 = inversesqrt(_3619);
                                float _3623 = _3622 * _3616;
                                float _3624 = _3622 * _3617;
                                float _3625 = _3622 * _3618;
                                float _3629 = 1.0 - (_3619 / (_3485 * _3485));
                                float _4728 = isnan(0.0) ? _3629 : (isnan(_3629) ? 0.0 : max(_3629, 0.0));
                                float _3630 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
                                float _3634 = sqrt(_3619) * _3500.w;
                                float _3636 = 1.39999997615814208984375 / (_3634 + 1.39999997615814208984375);
                                float _3637 = _3636 * _3636;
                                float _3640 = ((1.0 - _3637) * dot(vec3(_3623, _3624, _3625), vec3(_1086, _1089, _1092))) + _3637;
                                float _3643 = _3634 * _3634;
                                float _3647 = (fma(_2821, _3527.z, fma(_2820, _3527.y, _3527.x * _2819)) + _3527.w) / _3588;
                                float _3648 = (fma(_2821, _3542.z, fma(_2820, _3542.y, _3542.x * _2819)) + _3542.w) / _3588;
                                float _3652 = 1.0 - dot(vec2(_3647, _3648), vec2(_3647, _3648));
                                float _4744 = isnan(0.0) ? _3652 : (isnan(_3652) ? 0.0 : max(_3652, 0.0));
                                float _3653 = isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0));
                                float _3654 = _3653 * (((isnan(0.0) ? _3640 : (isnan(_3640) ? 0.0 : max(_3640, 0.0))) * _3630) / ((_3643 * 0.699999988079071044921875) + 1.0));
                                float _3666 = exp2(log2(1.0 / ((_3643 * 3.5) + 5.0)) * 0.25);
                                float _3667 = 1.0 - _1161;
                                float _3674 = sqrt(1.0 - ((1.0 - (_3667 * _3667)) * (1.0 - (_3666 * _3666))));
                                float _3675 = _3674 * _3674;
                                float _3676 = _3675 * _3675;
                                float _3677 = _3623 - _3126;
                                float _3678 = _3624 - _3127;
                                float _3679 = _3625 - _3128;
                                float _3683 = inversesqrt(dot(vec3(_3677, _3678, _3679), vec3(_3677, _3678, _3679)));
                                float _3687 = dot(vec3(_1086, _1089, _1092), vec3((-0.0) - _3126, (-0.0) - _3127, (-0.0) - _3128));
                                float _4755 = isnan(0.0) ? _3687 : (isnan(_3687) ? 0.0 : max(_3687, 0.0));
                                float _3690 = isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0));
                                float _3691 = dot(vec3(_1086, _1089, _1092), vec3(_3683 * _3677, _3683 * _3678, _3683 * _3679));
                                float _4766 = isnan(0.0) ? _3691 : (isnan(_3691) ? 0.0 : max(_3691, 0.0));
                                float _3694 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
                                float _3698 = ((_3694 * _3694) * (_3676 + (-1.0))) + 1.0;
                                float _3699 = _3636 * _3675;
                                float _3700 = _3699 * _3699;
                                float _3706 = ((1.0 - _3700) * dot(vec3(_1086, _1089, _1092), vec3(_3623, _3624, _3625))) + _3700;
                                float _4777 = isnan(0.0) ? _3706 : (isnan(_3706) ? 0.0 : max(_3706, 0.0));
                                float _3707 = isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0));
                                float _3708 = 1.0 - _3675;
                                float _3718 = (0.5 / (((_3707 * ((_3690 * _3708) + _3675)) + 9.9999999392252902907785028219223e-09) + (((_3707 * _3708) + _3675) * _3690))) * _3707;
                                float _4788 = isnan(0.0) ? _3718 : (isnan(_3718) ? 0.0 : max(_3718, 0.0));
                                float _3728 = (_3653 * _3630) * (((_3676 * 3.1415927410125732421875) * (isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0)))) / ((_3698 * _3698) * ((_3643 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3728 * _3512.x;
                                frontier_phi_73_pred_1 = _3728 * _3512.y;
                                frontier_phi_73_pred_2 = _3654 * _3500.z;
                                frontier_phi_73_pred_3 = _3654 * _3500.y;
                                frontier_phi_73_pred_4 = _3654 * _3500.x;
                                frontier_phi_73_pred_5 = _3728 * _3512.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3732 = frontier_phi_73_pred;
                            _3733 = frontier_phi_73_pred_1;
                            _3737 = frontier_phi_73_pred_2;
                            _3736 = frontier_phi_73_pred_3;
                            _3735 = frontier_phi_73_pred_4;
                            _3734 = frontier_phi_73_pred_5;
                            _3442 = _3735 + _3455;
                            _3443 = _3736 + _3456;
                            _3444 = _3737 + _3457;
                            _3439 = _3732 + _3452;
                            _3440 = _3733 + _3453;
                            _3441 = _3734 + _3454;
                            if (_3459 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3452 = _3439;
                                _3453 = _3440;
                                _3454 = _3441;
                                _3455 = _3442;
                                _3456 = _3443;
                                _3457 = _3444;
                                _3458 = _3459;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3442;
                        frontier_phi_67_pred_1 = _3443;
                        frontier_phi_67_pred_2 = _3444;
                        frontier_phi_67_pred_3 = _3441;
                        frontier_phi_67_pred_4 = _3440;
                        frontier_phi_67_pred_5 = _3439;
                    }
                    _3107 = frontier_phi_67_pred;
                    _3109 = frontier_phi_67_pred_1;
                    _3111 = frontier_phi_67_pred_2;
                    _3105 = frontier_phi_67_pred_3;
                    _3103 = frontier_phi_67_pred_4;
                    _3101 = frontier_phi_67_pred_5;
                    uint _3246 = _3245 + 1u;
                    if (_3246 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3239 = _3101;
                        _3240 = _3103;
                        _3241 = _3105;
                        _3242 = _3107;
                        _3243 = _3109;
                        _3244 = _3111;
                        _3245 = _3246;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3109;
                frontier_phi_55_56_ladder_1 = _3111;
                frontier_phi_55_56_ladder_2 = _3107;
                frontier_phi_55_56_ladder_3 = _3105;
                frontier_phi_55_56_ladder_4 = _3103;
                frontier_phi_55_56_ladder_5 = _3101;
            }
            else
            {
                frontier_phi_55_56_ladder = _2997;
                frontier_phi_55_56_ladder_1 = _2999;
                frontier_phi_55_56_ladder_2 = _2995;
                frontier_phi_55_56_ladder_3 = _2993;
                frontier_phi_55_56_ladder_4 = _2991;
                frontier_phi_55_56_ladder_5 = _2989;
            }
            _3100 = frontier_phi_55_56_ladder_5;
            _3102 = frontier_phi_55_56_ladder_4;
            _3104 = frontier_phi_55_56_ladder_3;
            _3106 = frontier_phi_55_56_ladder_2;
            _3108 = frontier_phi_55_56_ladder;
            _3110 = frontier_phi_55_56_ladder_1;
        }
        float _3115 = isnan(1.0) ? _1145 : (isnan(_1145) ? 1.0 : min(_1145, 1.0));
        _2878 = (_3115 * _3106) + _2314;
        _2880 = (_3115 * _3108) + _2316;
        _2882 = (_3115 * _3110) + _2318;
        _2884 = ((_3100 * _1130) * _3115) + _2659;
        _2886 = ((_3102 * _1132) * _3115) + _2661;
        _2888 = ((_3104 * _1133) * _3115) + _2663;
    }
    else
    {
        _2878 = _2314;
        _2880 = _2316;
        _2882 = _2318;
        _2884 = _2659;
        _2886 = _2661;
        _2888 = _2663;
    }
    uint _2894 = _1106 + uint(cbMatDynParam._m0[0u].w);
    float _2900 = (isnan(cbMtdParam._m0[24u].y) ? _823 : (isnan(_823) ? cbMtdParam._m0[24u].y : min(_823, cbMtdParam._m0[24u].y))) * cbSceneParam._m0[72u].y;
    float _4804 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
    float _4815 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
    float _4826 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
    float _2923 = (((isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0))) * (_2878 + ((isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0))) * _1145))) + ((_2884 + ((isnan(0.0) ? _2167 : (isnan(_2167) ? 0.0 : max(_2167, 0.0))) * _1954)) * cbPerFrame._m0[3u].x)) + ((_2900 * (((((_890.x - _887) * _869) + _887) * cbMtdParam._m0[17u].x) + ((cbMtdParam._m0[24u].w * _815) * cbMtdParam._m0[16u].x))) * cbInstanceData._m0[_2894].x);
    float _2925 = (((_2900 * (((((_890.y - _888) * _869) + _888) * cbMtdParam._m0[17u].y) + ((cbMtdParam._m0[24u].w * (((_804.y - _802) * _783) + _802)) * cbMtdParam._m0[16u].y))) * cbInstanceData._m0[_2894].y) + ((_2886 + ((isnan(0.0) ? _2170 : (isnan(_2170) ? 0.0 : max(_2170, 0.0))) * _1954)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0))) * (_2880 + ((isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0))) * _1145)));
    float _2927 = (((_2900 * (((((_890.z - _889) * _869) + _889) * cbMtdParam._m0[17u].z) + ((cbMtdParam._m0[24u].w * (((_804.z - _803) * _783) + _803)) * cbMtdParam._m0[16u].z))) * cbInstanceData._m0[_2894].z) + ((_2888 + ((isnan(0.0) ? _2173 : (isnan(_2173) ? 0.0 : max(_2173, 0.0))) * _1954)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0))) * (_2882 + ((isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0))) * _1145)));
    uint _2931 = _1105 + 6u;
    float _2939 = _1067 / cbSceneParam._m0[86u].x;
    float _2940 = _1068 / cbSceneParam._m0[86u].y;
    vec4 _2954 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2939, _2940, (log2((isnan(cbSceneParam._m0[77u].w) ? _1001 : (isnan(_1001) ? cbSceneParam._m0[77u].w : min(_1001, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2956 = _2954.x;
    float _2957 = _2954.y;
    float _2958 = _2954.z;
    float _2959 = _2954.w;
    float _3051;
    float _3053;
    float _3055;
    float _3057;
    if (_1001 > cbSceneParam._m0[78u].w)
    {
        float _3014 = isnan(_1001) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1001 : min(cbSceneParam._m0[80u].w, _1001));
        float _3015 = _3014 / _1001;
        float _3026 = _3015 * _1052;
        float _3027 = _1053 * _3015;
        float _3028 = (-0.0) - _3027;
        float _3029 = _3015 * _1054;
        float _3031 = (cbSceneParam._m0[77u].w * _3028) / _3014;
        float _3032 = _3031 + cbSceneParam._m0[79u].w;
        float _3033 = cbSceneParam._m0[79u].w - _3027;
        float _3039 = sqrt(((_3026 * _3026) + (_3027 * _3027)) + (_3029 * _3029));
        float _3042 = (1.0 - (cbSceneParam._m0[77u].w / _3014)) * _3039;
        float _3047 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3049 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3201;
        if (abs((_3028 - _3031) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3201 = ((((_3032 > 0.0) ? exp2(_3047 * _3032) : (2.0 - exp2(_3049 * _3032))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3042;
        }
        else
        {
            float _3161 = 1.0 / cbSceneParam._m0[80u].x;
            float _3162 = isnan(_3033) ? _3032 : (isnan(_3032) ? _3033 : max(_3032, _3033));
            float _3163 = isnan(_3033) ? _3032 : (isnan(_3032) ? _3033 : min(_3032, _3033));
            float _3172 = isnan(0.0) ? _3162 : (isnan(_3162) ? 0.0 : min(_3162, 0.0));
            float _3173 = isnan(0.0) ? _3163 : (isnan(_3163) ? 0.0 : min(_3163, 0.0));
            _3201 = ((abs(_3039 / _3028) * cbSceneParam._m0[80u].y) * ((((_3172 - _3173) * 2.0) - ((exp2(_3047 * (isnan(0.0) ? _3162 : (isnan(_3162) ? 0.0 : max(_3162, 0.0)))) - exp2(_3047 * (isnan(0.0) ? _3163 : (isnan(_3163) ? 0.0 : max(_3163, 0.0))))) * _3161)) - ((exp2(_3049 * _3172) - exp2(_3049 * _3173)) * _3161))) + (_3042 * cbSceneParam._m0[80u].z);
        }
        vec4 _3203 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2939, _2940, 1.0), 0.0);
        float _3212 = exp2((_3201 * (-1.44269502162933349609375)) * (1.0 - _3203.w));
        float _3213 = log2(_3212);
        float _3229 = log2(_2959);
        _3051 = (exp2(_3229 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3213 * cbSceneParam._m0[78u].x)) * _3203.x) / cbSceneParam._m0[78u].x)) + _2956;
        _3053 = (exp2(_3229 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3213 * cbSceneParam._m0[78u].y)) * _3203.y) / cbSceneParam._m0[78u].y)) + _2957;
        _3055 = (exp2(_3229 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3213 * cbSceneParam._m0[78u].z)) * _3203.z) / cbSceneParam._m0[78u].z)) + _2958;
        _3057 = _3212 * _2959;
    }
    else
    {
        _3051 = _2956;
        _3053 = _2957;
        _3055 = _2958;
        _3057 = _2959;
    }
    float _3068 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3069 = _3068 == 3.0;
    float _3070 = log2(_3057);
    float _3077 = exp2(_3070 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2923 : (isnan(_2923) ? 0.0 : max(_2923, 0.0)));
    float _3078 = exp2(_3070 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2925 : (isnan(_2925) ? 0.0 : max(_2925, 0.0)));
    float _3079 = exp2(_3070 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2927 : (isnan(_2927) ? 0.0 : max(_2927, 0.0)));
    float _3088 = (_3068 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3088 * (_3069 ? _3077 : (_3077 + (cbSceneParam._m0[72u].w * _3051)));
    SV_Target.y = _3088 * (_3069 ? _3078 : (_3078 + (cbSceneParam._m0[72u].w * _3053)));
    SV_Target.z = _3088 * (_3069 ? _3079 : (_3079 + (cbSceneParam._m0[72u].w * _3055)));
    SV_Target.w = cbInstanceData._m0[_2931].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2931].w;
}


