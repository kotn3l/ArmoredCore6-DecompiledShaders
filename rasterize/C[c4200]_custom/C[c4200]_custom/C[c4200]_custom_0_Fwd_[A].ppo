#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[28];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_c4200_custom_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_c4200_custom_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D C_c4200_custom_snp_0_Texture2D_27;
layout(set = 0, binding = 12) uniform texture2D C_c4200_custom_snp_0_Texture2D_28;
layout(set = 0, binding = 13) uniform texture2D C_c4200_custom_snp_0_Texture2D_29;
layout(set = 0, binding = 14) uniform texture2D C_c4200_custom_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_c4200_custom_snp_0_Texture2D_30;
layout(set = 0, binding = 16) uniform texture2D C_c4200_custom_snp_0_Texture2D_4;
layout(set = 0, binding = 17) uniform texture2D C_c4200_custom_snp_0_Texture2D_5;
layout(set = 0, binding = 18) uniform texture2D C_c4200_custom_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_c4200_custom_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D C_c4200_custom_snp_0_Texture2D_16;
layout(set = 0, binding = 20) uniform texture2D C_c4200_custom_snp_0_Texture2D_8;
layout(set = 0, binding = 21) uniform texture2D C_c4200_custom_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_c4200_custom_snp_0_Texture2D_17;
layout(set = 0, binding = 4) uniform texture2D C_c4200_custom_snp_0_Texture2D_18;
layout(set = 0, binding = 5) uniform texture2D C_c4200_custom_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D C_c4200_custom_snp_0_Texture2D_22;
layout(set = 0, binding = 7) uniform texture2D C_c4200_custom_snp_0_Texture2D_23;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 4, component = 2) in float TEXCOORD_6;
layout(location = 4, component = 3) in float TEXCOORD_7;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1563;
float _3964;
float _3965;
float _3966;
float _3967;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _223 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _224 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _225 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _231 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _238 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _245 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _272 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w));
    vec4 _313 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD_1) + cbTextureTilingScale._m0[19u].w));
    float _326 = exp2(log2(_313.w * cbMtdParam._m0[26u].x) * cbMtdParam._m0[18u].w);
    float _327 = isnan(0.0) ? _326 : (isnan(_326) ? 0.0 : max(_326, 0.0));
    float _328 = isnan(1.0) ? _327 : (isnan(_327) ? 1.0 : min(_327, 1.0));
    vec4 _342 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _346 = _342.z;
    float _351 = exp2(log2(_346 * cbMtdParam._m0[19u].x) * cbMtdParam._m0[18u].y);
    float _352 = isnan(0.0) ? _351 : (isnan(_351) ? 0.0 : max(_351, 0.0));
    float _353 = isnan(1.0) ? _352 : (isnan(_352) ? 1.0 : min(_352, 1.0));
    vec4 _365 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w));
    vec4 _390 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _401 = cbMtdParam._m0[9u].x * _390.x;
    float _402 = cbMtdParam._m0[9u].y * _390.y;
    float _403 = cbMtdParam._m0[9u].z * _390.z;
    float _410 = (((cbMtdParam._m0[10u].x * _365.x) - _401) * _353) + _401;
    float _411 = (((cbMtdParam._m0[10u].y * _365.y) - _402) * _353) + _402;
    float _412 = (((cbMtdParam._m0[10u].z * _365.z) - _403) * _353) + _403;
    vec4 _425 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_30, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_1) + cbTextureTilingScale._m0[15u].w));
    float _427 = _425.x;
    float _431 = exp2(log2(_427) * cbMtdParam._m0[19u].z);
    vec4 _444 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w));
    float _464 = (((cbMtdParam._m0[12u].x * _444.x) - _410) * _431) + _410;
    float _465 = (((cbMtdParam._m0[12u].y * _444.y) - _411) * _431) + _411;
    float _466 = (((cbMtdParam._m0[12u].z * _444.z) - _412) * _431) + _412;
    vec4 _479 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_1) + cbTextureTilingScale._m0[16u].w));
    float _504 = (_313.x * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].x * _479.x) - _464) * _328) + _464);
    float _506 = (_313.y * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].y * _479.y) - _465) * _328) + _465);
    float _508 = (_313.z * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].z * _479.z) - _466) * _328) + _466);
    vec4 _520 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _539 = TEXCOORD_3.x - ((cbMtdParam._m0[19u].w * (1.0 - TEXCOORD_3.x)) * (texture(sampler2D(C_c4200_custom_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1) + cbTextureTilingScale._m0[4u].w)).x + 0.00999999977648258209228515625));
    float _541 = _539 * (cbMtdParam._m0[20u].y + 1.0);
    float _3996 = isnan(0.0) ? _541 : (isnan(_541) ? 0.0 : max(_541, 0.0));
    float _542 = isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0));
    float _549 = (_542 * ((cbMtdParam._m0[11u].x * _520.x) - _504)) + _504;
    float _550 = (((cbMtdParam._m0[11u].y * _520.y) - _506) * _542) + _506;
    float _551 = (((cbMtdParam._m0[11u].z * _520.z) - _508) * _542) + _508;
    float _553 = cbMtdParam._m0[22u].z * TEXCOORD_6;
    float _561 = (_553 - (((_272.x + 0.00999999977648258209228515625) * cbMtdParam._m0[22u].x) * (1.0 - _553))) * (cbMtdParam._m0[22u].y + 1.0);
    float _4007 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0));
    float _562 = isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0));
    float _569 = ((cbMtdParam._m0[14u].x - _549) * _562) + _549;
    float _570 = ((cbMtdParam._m0[14u].y - _550) * _562) + _550;
    float _571 = ((cbMtdParam._m0[14u].z - _551) * _562) + _551;
    float _574 = (cbMtdParam._m0[20u].x + 1.0) * _539;
    float _4018 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
    float _575 = isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0));
    float _577 = _427 - (_575 * _427);
    float _579 = _577 - (_577 * _553);
    vec4 _592 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD_1) + cbTextureTilingScale._m0[17u].w));
    vec4 _610 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD_1) + cbTextureTilingScale._m0[18u].w));
    float _612 = _610.x;
    float _613 = _610.y;
    float _616 = cbMtdParam._m0[18u].x + _610.z;
    float _619 = (((cbMtdParam._m0[18u].z + _592.z) - _616) * _353) + _616;
    vec4 _631 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD_1) + cbTextureTilingScale._m0[20u].w));
    float _643 = (((_631.z - _619) + cbMtdParam._m0[24u].z) * _431) + _619;
    float _649 = ((((_346 * 2.0) * _643) - _643) * cbMtdParam._m0[20u].z) + _643;
    vec4 _662 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[21u].x * TEXCOORD) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * TEXCOORD_1) + cbTextureTilingScale._m0[21u].w));
    float _671 = (((cbMtdParam._m0[19u].y + _662.z) - _649) * _328) + _649;
    vec4 _683 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w));
    float _695 = ((_683.z - _671) * _575) + _671;
    vec4 _711 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1) + cbTextureTilingScale._m0[6u].w));
    float _725 = ((cbMtdParam._m0[21u].w * _553) * ((_711.z * cbMtdParam._m0[21u].z) - _695)) + _695;
    float _736 = cbMtdParam._m0[23u].y * cbPerFrame._m0[22u].x;
    float _755 = (cbTextureTilingScale._m0[12u].x * ((_736 * cbMtdParam._m0[26u].y) + TEXCOORD)) + cbTextureTilingScale._m0[12u].z;
    float _756 = (cbTextureTilingScale._m0[12u].y * ((_736 * cbMtdParam._m0[26u].z) + TEXCOORD_1)) + cbTextureTilingScale._m0[12u].w;
    vec4 _758 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_28, SS_WrapLinear), vec2(_755, _756));
    float _762 = cbPerFrame._m0[22u].x * 2.0;
    float _763 = _762 * cbMtdParam._m0[25u].y;
    float _770 = ((_758.y * 0.5) + (-0.25)) * cbMtdParam._m0[25u].x;
    float _772 = (-0.0) - (cbMtdParam._m0[25u].x * ((_758.x * 0.5) + (-0.25)));
    float _774 = fract(_763);
    float _776 = fract(_763 + 0.5);
    float _787 = abs((_774 * 2.0) + (-1.0));
    vec4 _803 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_27, SS_DiffuseMap), vec2((((_774 * _772) + TEXCOORD) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((_770 * _774) + TEXCOORD_1) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _805 = _803.x;
    float _806 = _803.y;
    float _807 = _803.z;
    vec4 _808 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_27, SS_DiffuseMap), vec2((((_776 * _772) + TEXCOORD) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((_770 * _776) + TEXCOORD_1) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _819 = ((_808.x - _805) * _787) + _805;
    float _826 = exp2(log2(_819 * cbMtdParam._m0[23u].z) * cbMtdParam._m0[23u].w);
    float _827 = isnan(cbMtdParam._m0[24u].x) ? _826 : (isnan(_826) ? cbMtdParam._m0[24u].x : max(_826, cbMtdParam._m0[24u].x));
    vec4 _848 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_28, SS_WrapLinear), vec2(_755, _756));
    float _852 = _762 * cbMtdParam._m0[25u].w;
    float _857 = ((_848.y * 0.5) + (-0.25)) * cbMtdParam._m0[25u].z;
    float _859 = (-0.0) - (cbMtdParam._m0[25u].z * ((_848.x * 0.5) + (-0.25)));
    float _860 = fract(_852);
    float _862 = fract(_852 + 0.5);
    float _873 = abs((_860 * 2.0) + (-1.0));
    vec4 _889 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_29, SS_DiffuseMap), vec2((((_860 * _859) + TEXCOORD) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_857 * _860) + TEXCOORD_1) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _891 = _889.x;
    float _892 = _889.y;
    float _893 = _889.z;
    vec4 _894 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_29, SS_DiffuseMap), vec2((((_862 * _859) + TEXCOORD) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_857 * _862) + TEXCOORD_1) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _928 = ((_592.x - _612) * _353) + _612;
    float _929 = ((_592.y - _613) * _353) + _613;
    float _934 = ((_631.x - _928) * _431) + _928;
    float _935 = ((_631.y - _929) * _431) + _929;
    float _944 = ((((_662.x - _934) * _328) + _934) * 2.0) + (-1.0);
    float _945 = ((((_662.y - _935) * _328) + _935) * 2.0) + (-1.0);
    float _946 = dot(vec2(_944, _945), vec2(_944, _945));
    float _4039 = isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0));
    float _951 = sqrt(1.0 - (isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0))));
    float _967 = (((cbMtdParam._m0[20u].w * ((_342.x * 2.0) + (-1.0))) + _944) + (((((_683.x * 2.0) + (-1.0)) * TEXCOORD_3.x) * cbMtdParam._m0[21u].x) * _575)) + ((((_711.x * 2.0) + (-1.0)) * _553) * cbMtdParam._m0[21u].y);
    float _968 = (((cbMtdParam._m0[20u].w * ((_342.y * 2.0) + (-1.0))) + _945) + (((((_683.y * 2.0) + (-1.0)) * TEXCOORD_3.y) * cbMtdParam._m0[21u].x) * _575)) + (((cbMtdParam._m0[22u].z * TEXCOORD_7) * ((_711.y * 2.0) + (-1.0))) * cbMtdParam._m0[21u].y);
    float _971 = fma(_951, _238 * NORMAL.x, fma(_968, _245 * TANGENT.x, (_231 * _223) * _967));
    float _974 = fma(_951, _238 * NORMAL.y, fma(_968, _245 * TANGENT.y, (_231 * _224) * _967));
    float _977 = fma(_951, _238 * NORMAL.z, fma(_968, _245 * TANGENT.z, (_231 * _225) * _967));
    float _981 = inversesqrt(dot(vec3(_971, _974, _977), vec3(_971, _974, _977)));
    float _982 = _981 * _971;
    float _983 = _981 * _974;
    float _984 = _981 * _977;
    float _4050 = isnan(0.0) ? _725 : (isnan(_725) ? 0.0 : max(_725, 0.0));
    float _985 = isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0));
    float _4061 = isnan(0.0) ? _569 : (isnan(_569) ? 0.0 : max(_569, 0.0));
    float _4072 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _4083 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
    float _4094 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _989 = isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0));
    float _1005 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1046 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1056 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1046);
    float _1057 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1046);
    float _1058 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1046);
    float _1062 = inversesqrt(dot(vec3(_1056, _1057, _1058), vec3(_1056, _1057, _1058)));
    float _1063 = _1056 * _1062;
    float _1064 = _1057 * _1062;
    float _1065 = _1058 * _1062;
    vec4 _1070 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1072 = _1070.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1244 = sqrt(((_1056 * _1056) + (_1057 * _1057)) + (_1058 * _1058));
        float _1250 = (cbMatDynParam._m0[5u].x * _1244) + cbMatDynParam._m0[5u].y;
        float _4105 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1251 = isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0));
        float _1255 = (cbMatDynParam._m0[5u].z * _1244) + cbMatDynParam._m0[5u].w;
        float _4116 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0))) - _1251)) + _1251) < ((_1072 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1083 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1084 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1102 = fma(_984, cbSceneParam._m0[5u].z, fma(_983, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _982));
    float _1105 = fma(_984, cbSceneParam._m0[6u].z, fma(_983, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _982));
    float _1108 = fma(_984, cbSceneParam._m0[7u].z, fma(_983, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _982));
    uint _1121 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1122 = _1121 + 9u;
    uint _1123 = _1122 + uint(cbMatDynParam._m0[0u].w);
    float _1129 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0)))) * cbInstanceData._m0[_1123].x;
    float _1130 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0)))) * cbInstanceData._m0[_1123].y;
    float _1131 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0)))) * cbInstanceData._m0[_1123].z;
    float _4127 = isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0));
    float _1132 = isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0));
    float _4138 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
    float _1133 = isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0));
    float _4149 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
    float _1134 = isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0));
    float _1135 = 1.0 - _989;
    float _1136 = _1132 * _1135;
    float _1137 = _1133 * _1135;
    float _1138 = _1134 * _1135;
    float _1143 = (_1132 + (-0.039999999105930328369140625)) * _989;
    float _1144 = (_1133 + (-0.039999999105930328369140625)) * _989;
    float _1145 = (_1134 + (-0.039999999105930328369140625)) * _989;
    float _1146 = _1143 + 0.039999999105930328369140625;
    float _1148 = _1144 + 0.039999999105930328369140625;
    float _1149 = _1145 + 0.039999999105930328369140625;
    vec4 _1158 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1083, cbSceneParam._m0[86u].y * _1084));
    float _1161 = _1158.x * TEXCOORD_3.w;
    float _1162 = dot(vec3(_982, _983, _984), vec3(_1063, _1064, _1065));
    float _1165 = _1162 * 2.0;
    float _1169 = (_1165 * _982) - _1063;
    float _1170 = (_1165 * _983) - _1064;
    float _1171 = (_1165 * _984) - _1065;
    float _1175 = abs(dot(vec3(_1063, _1064, _1065), vec3(_982, _983, _984)));
    float _4160 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
    float _1177 = sqrt(_985);
    float _1190 = exp2((_1177 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1177 * 3.0));
    float _1196 = (1.0 - _1190) * ((_1177 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1197 = _1190 * _1177;
    float _1225 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1229 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1233 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1562;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    float _1575;
    float _1576;
    float _1577;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1288 = fma(_1233, cbModelParam._m0[26u].z, fma(_1229, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1225));
        float _1292 = fma(_1233, cbModelParam._m0[27u].z, fma(_1229, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1225));
        float _1296 = fma(_1233, cbModelParam._m0[28u].z, fma(_1229, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1225));
        float _1320 = _1225 + _982;
        float _1321 = _1229 + _983;
        float _1322 = _1233 + _984;
        float _1332 = fma(_1322, cbModelParam._m0[26u].z, fma(_1321, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1320)) - _1288;
        float _1333 = fma(_1322, cbModelParam._m0[27u].z, fma(_1321, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1320)) - _1292;
        float _1334 = fma(_1322, cbModelParam._m0[28u].z, fma(_1321, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1320)) - _1296;
        float _1338 = inversesqrt(dot(vec3(_1332, _1333, _1334), vec3(_1332, _1333, _1334)));
        float _1351 = ((_1338 * _1332) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1288 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1352 = ((_1338 * _1333) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1292 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1353 = ((_1338 * _1334) / cbModelParam._m0[34u].z) + ((((((_1296 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1356 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        vec4 _1363 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        vec4 _1370 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        vec4 _1377 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        float _1390 = exp2((_1356.w + (-0.5)) * 20.0) * 2.0;
        float _1391 = _1390 * (_1356.x + (-0.5));
        float _1392 = _1390 * (_1356.y + (-0.5));
        float _1393 = _1390 * (_1356.z + (-0.5));
        float _1400 = exp2((_1363.w + (-0.5)) * 20.0) * 2.0;
        float _1401 = _1400 * (_1363.x + (-0.5));
        float _1402 = _1400 * (_1363.y + (-0.5));
        float _1403 = _1400 * (_1363.z + (-0.5));
        float _1410 = exp2((_1370.w + (-0.5)) * 20.0) * 2.0;
        float _1411 = _1410 * (_1370.x + (-0.5));
        float _1412 = _1410 * (_1370.y + (-0.5));
        float _1413 = _1410 * (_1370.z + (-0.5));
        float _1420 = exp2((_1377.w + (-0.5)) * 20.0) * 2.0;
        float _1421 = _1420 * (_1377.x + (-0.5));
        float _1422 = _1420 * (_1377.y + (-0.5));
        float _1423 = _1420 * (_1377.z + (-0.5));
        float _1424 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1425 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1426 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1427 = _1391 * 0.5;
        float _1428 = _1401 * 0.5;
        float _1429 = _1411 * 0.5;
        float _1430 = dot(vec3(_1427, _1428, _1429), vec3(_1427, _1428, _1429));
        float _1435 = (_1430 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1430);
        float _1444 = (dot(vec3(_982, _983, _984), vec3(_1435 * _1427, _1435 * _1428, _1435 * _1429)) + 1.0) * 0.5;
        float _4186 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1454 = sqrt(((_1428 * _1428) + (_1427 * _1427)) + (_1429 * _1429)) / (_1424 + 9.9999997473787516355514526367188e-06);
        float _4197 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1455 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
        float _1456 = _1455 * 2.0;
        float _1460 = (1.0 - _1455) / (_1455 + 1.0);
        float _4208 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1461 = isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0));
        float _1470 = ((((1.0 - _1461) * (_1456 + 2.0)) * exp2(log2(isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0))) * (_1456 + 1.0))) + _1461) * _1424;
        float _1471 = _1392 * 0.5;
        float _1472 = _1402 * 0.5;
        float _1473 = _1412 * 0.5;
        float _1474 = dot(vec3(_1471, _1472, _1473), vec3(_1471, _1472, _1473));
        float _1479 = (_1474 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1474);
        float _1487 = (dot(vec3(_982, _983, _984), vec3(_1479 * _1471, _1479 * _1472, _1479 * _1473)) + 1.0) * 0.5;
        float _4219 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1496 = sqrt(((_1472 * _1472) + (_1471 * _1471)) + (_1473 * _1473)) / (_1425 + 9.9999997473787516355514526367188e-06);
        float _4230 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1497 = isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0));
        float _1498 = _1497 * 2.0;
        float _1502 = (1.0 - _1497) / (_1497 + 1.0);
        float _4241 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1503 = isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0));
        float _1512 = ((((1.0 - _1503) * (_1498 + 2.0)) * exp2(log2(isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0))) * (_1498 + 1.0))) + _1503) * _1425;
        float _1513 = _1393 * 0.5;
        float _1514 = _1403 * 0.5;
        float _1515 = _1413 * 0.5;
        float _1516 = dot(vec3(_1513, _1514, _1515), vec3(_1513, _1514, _1515));
        float _1521 = (_1516 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1516);
        float _1529 = (dot(vec3(_982, _983, _984), vec3(_1521 * _1513, _1521 * _1514, _1521 * _1515)) + 1.0) * 0.5;
        float _4252 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1538 = sqrt(((_1514 * _1514) + (_1513 * _1513)) + (_1515 * _1515)) / (_1426 + 9.9999997473787516355514526367188e-06);
        float _4263 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1539 = isnan(1.0) ? _4263 : (isnan(_4263) ? 1.0 : min(_4263, 1.0));
        float _1540 = _1539 * 2.0;
        float _1544 = (1.0 - _1539) / (_1539 + 1.0);
        float _4274 = isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0));
        float _1545 = isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0));
        float _1554 = ((((1.0 - _1545) * (_1540 + 2.0)) * exp2(log2(isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0))) * (_1540 + 1.0))) + _1545) * _1426;
        _1562 = _1393;
        _1564 = _1392;
        _1565 = _1391;
        _1566 = _1403;
        _1567 = _1402;
        _1568 = _1401;
        _1569 = _1413;
        _1570 = _1412;
        _1571 = _1411;
        _1572 = _1426;
        _1573 = _1425;
        _1574 = _1424;
        _1575 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0)));
        _1576 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0)));
        _1577 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0)));
    }
    else
    {
        _1562 = _1563;
        _1564 = _1563;
        _1565 = _1563;
        _1566 = _1563;
        _1567 = _1563;
        _1568 = _1563;
        _1569 = _1563;
        _1570 = _1563;
        _1571 = _1563;
        _1572 = _1563;
        _1573 = _1563;
        _1574 = _1563;
        _1575 = 0.0;
        _1576 = 0.0;
        _1577 = 0.0;
    }
    float _1875;
    float _1876;
    float _1877;
    float _1878;
    float _1879;
    float _1880;
    float _1881;
    float _1882;
    float _1883;
    float _1884;
    float _1885;
    float _1886;
    float _1887;
    float _1888;
    float _1889;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1606 = fma(_1233, cbModelParam._m0[30u].z, fma(_1229, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1225));
        float _1610 = fma(_1233, cbModelParam._m0[31u].z, fma(_1229, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1225));
        float _1614 = fma(_1233, cbModelParam._m0[32u].z, fma(_1229, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1225));
        float _1637 = _1225 + _982;
        float _1638 = _1229 + _983;
        float _1639 = _1233 + _984;
        float _1649 = fma(_1639, cbModelParam._m0[30u].z, fma(_1638, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1637)) - _1606;
        float _1650 = fma(_1639, cbModelParam._m0[31u].z, fma(_1638, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1637)) - _1610;
        float _1651 = fma(_1639, cbModelParam._m0[32u].z, fma(_1638, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1637)) - _1614;
        float _1655 = inversesqrt(dot(vec3(_1649, _1650, _1651), vec3(_1649, _1650, _1651)));
        float _1668 = ((_1655 * _1649) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1606 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1669 = ((_1655 * _1650) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1610 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1670 = ((_1655 * _1651) / cbModelParam._m0[35u].z) + ((((((_1614 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1672 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1668, _1669, _1670), 0.0);
        vec4 _1679 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1668, _1669, _1670), 0.0);
        vec4 _1686 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1668, _1669, _1670), 0.0);
        vec4 _1693 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1668, _1669, _1670), 0.0);
        float _1705 = exp2((_1672.w + (-0.5)) * 20.0) * 2.0;
        float _1706 = _1705 * (_1672.x + (-0.5));
        float _1707 = _1705 * (_1672.y + (-0.5));
        float _1708 = _1705 * (_1672.z + (-0.5));
        float _1715 = exp2((_1679.w + (-0.5)) * 20.0) * 2.0;
        float _1716 = _1715 * (_1679.x + (-0.5));
        float _1717 = _1715 * (_1679.y + (-0.5));
        float _1718 = _1715 * (_1679.z + (-0.5));
        float _1725 = exp2((_1686.w + (-0.5)) * 20.0) * 2.0;
        float _1726 = _1725 * (_1686.x + (-0.5));
        float _1727 = _1725 * (_1686.y + (-0.5));
        float _1728 = _1725 * (_1686.z + (-0.5));
        float _1735 = exp2((_1693.w + (-0.5)) * 20.0) * 2.0;
        float _1736 = _1735 * (_1693.x + (-0.5));
        float _1737 = _1735 * (_1693.y + (-0.5));
        float _1738 = _1735 * (_1693.z + (-0.5));
        float _1739 = isnan(0.0) ? _1736 : (isnan(_1736) ? 0.0 : max(_1736, 0.0));
        float _1740 = isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0));
        float _1741 = isnan(0.0) ? _1738 : (isnan(_1738) ? 0.0 : max(_1738, 0.0));
        float _1742 = _1706 * 0.5;
        float _1743 = _1716 * 0.5;
        float _1744 = _1726 * 0.5;
        float _1745 = dot(vec3(_1742, _1743, _1744), vec3(_1742, _1743, _1744));
        float _1750 = (_1745 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1745);
        float _1758 = (dot(vec3(_982, _983, _984), vec3(_1750 * _1742, _1750 * _1743, _1750 * _1744)) + 1.0) * 0.5;
        float _4315 = isnan(0.0) ? _1758 : (isnan(_1758) ? 0.0 : max(_1758, 0.0));
        float _1767 = sqrt(((_1743 * _1743) + (_1742 * _1742)) + (_1744 * _1744)) / (_1739 + 9.9999997473787516355514526367188e-06);
        float _4326 = isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0));
        float _1768 = isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0));
        float _1769 = _1768 * 2.0;
        float _1773 = (1.0 - _1768) / (_1768 + 1.0);
        float _4337 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
        float _1774 = isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0));
        float _1783 = ((((1.0 - _1774) * (_1769 + 2.0)) * exp2(log2(isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0))) * (_1769 + 1.0))) + _1774) * _1739;
        float _1784 = _1707 * 0.5;
        float _1785 = _1717 * 0.5;
        float _1786 = _1727 * 0.5;
        float _1787 = dot(vec3(_1784, _1785, _1786), vec3(_1784, _1785, _1786));
        float _1792 = (_1787 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1787);
        float _1800 = (dot(vec3(_982, _983, _984), vec3(_1792 * _1784, _1792 * _1785, _1792 * _1786)) + 1.0) * 0.5;
        float _4348 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
        float _1809 = sqrt(((_1785 * _1785) + (_1784 * _1784)) + (_1786 * _1786)) / (_1740 + 9.9999997473787516355514526367188e-06);
        float _4359 = isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0));
        float _1810 = isnan(1.0) ? _4359 : (isnan(_4359) ? 1.0 : min(_4359, 1.0));
        float _1811 = _1810 * 2.0;
        float _1815 = (1.0 - _1810) / (_1810 + 1.0);
        float _4370 = isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0));
        float _1816 = isnan(1.0) ? _4370 : (isnan(_4370) ? 1.0 : min(_4370, 1.0));
        float _1825 = ((((1.0 - _1816) * (_1811 + 2.0)) * exp2(log2(isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0))) * (_1811 + 1.0))) + _1816) * _1740;
        float _1826 = _1708 * 0.5;
        float _1827 = _1718 * 0.5;
        float _1828 = _1728 * 0.5;
        float _1829 = dot(vec3(_1826, _1827, _1828), vec3(_1826, _1827, _1828));
        float _1834 = (_1829 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1829);
        float _1842 = (dot(vec3(_982, _983, _984), vec3(_1834 * _1826, _1834 * _1827, _1834 * _1828)) + 1.0) * 0.5;
        float _4381 = isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0));
        float _1851 = sqrt(((_1827 * _1827) + (_1826 * _1826)) + (_1828 * _1828)) / (_1741 + 9.9999997473787516355514526367188e-06);
        float _4392 = isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0));
        float _1852 = isnan(1.0) ? _4392 : (isnan(_4392) ? 1.0 : min(_4392, 1.0));
        float _1853 = _1852 * 2.0;
        float _1857 = (1.0 - _1852) / (_1852 + 1.0);
        float _4403 = isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0));
        float _1858 = isnan(1.0) ? _4403 : (isnan(_4403) ? 1.0 : min(_4403, 1.0));
        float _1867 = ((((1.0 - _1858) * (_1853 + 2.0)) * exp2(log2(isnan(1.0) ? _4381 : (isnan(_4381) ? 1.0 : min(_4381, 1.0))) * (_1853 + 1.0))) + _1858) * _1741;
        _1875 = _1708;
        _1876 = _1707;
        _1877 = _1706;
        _1878 = _1718;
        _1879 = _1717;
        _1880 = _1716;
        _1881 = _1728;
        _1882 = _1727;
        _1883 = _1726;
        _1884 = _1741;
        _1885 = _1740;
        _1886 = _1739;
        _1887 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0)));
        _1888 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0)));
        _1889 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0)));
    }
    else
    {
        _1875 = _1563;
        _1876 = _1563;
        _1877 = _1563;
        _1878 = _1563;
        _1879 = _1563;
        _1880 = _1563;
        _1881 = _1563;
        _1882 = _1563;
        _1883 = _1563;
        _1884 = _1563;
        _1885 = _1563;
        _1886 = _1563;
        _1887 = 0.0;
        _1888 = 0.0;
        _1889 = 0.0;
    }
    float _1899 = (cbModelParam._m0[1u].x * (_1887 - _1575)) + _1575;
    float _1900 = (cbModelParam._m0[1u].x * (_1888 - _1576)) + _1576;
    float _1901 = (cbModelParam._m0[1u].x * (_1889 - _1577)) + _1577;
    float _1922 = fma(_1901, cbSceneParam._m0[89u].z, fma(_1900, cbSceneParam._m0[89u].y, _1899 * cbSceneParam._m0[89u].x));
    float _1925 = fma(_1901, cbSceneParam._m0[90u].z, fma(_1900, cbSceneParam._m0[90u].y, _1899 * cbSceneParam._m0[90u].x));
    float _1928 = fma(_1901, cbSceneParam._m0[91u].z, fma(_1900, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1899));
    float _1943 = _1169 * 0.5;
    float _1944 = _1170 * 0.5;
    float _1945 = _1171 * 0.5;
    float _1946 = dot(vec4(_1943, _1944, _1945, 1.0), vec4(_1877, _1880, _1883, _1886));
    float _1949 = dot(vec4(_1943, _1944, _1945, 1.0), vec4(_1876, _1879, _1882, _1885));
    float _1952 = dot(vec4(_1943, _1944, _1945, 1.0), vec4(_1875, _1878, _1881, _1884));
    float _1986;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1959 = dot(vec4(_1943, _1944, _1945, 1.0), vec4(_1562, _1566, _1569, _1572));
        float _1963 = dot(vec4(_1943, _1944, _1945, 1.0), vec4(_1564, _1567, _1570, _1573));
        float _1967 = dot(vec4(_1943, _1944, _1945, 1.0), vec4(_1565, _1568, _1571, _1574));
        float _1974 = dot(vec4(cbModelParam._m0[39u]), vec4(_1943, _1944, _1945, 1.0));
        _1986 = dot(vec3(isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0)), isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0)), isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1974) ? 0.0 : (isnan(0.0) ? _1974 : max(0.0, _1974))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1986 = 1.0;
    }
    float _1997;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1988 = dot(vec4(cbModelParam._m0[40u]), vec4(_1943, _1944, _1945, 1.0));
        _1997 = dot(vec3(isnan(0.0) ? _1946 : (isnan(_1946) ? 0.0 : max(_1946, 0.0)), isnan(0.0) ? _1949 : (isnan(_1949) ? 0.0 : max(_1949, 0.0)), isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1988) ? 0.0 : (isnan(0.0) ? _1988 : max(0.0, _1988))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1997 = 1.0;
    }
    float _2001 = (_1997 * cbModelParam._m0[1u].x) + (_1986 * (1.0 - cbModelParam._m0[1u].x));
    float _2011 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _985);
    float _2012 = isnan(_2011) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2011 : min(cbModelParam._m0[25u].z, _2011));
    float _2092;
    float _2094;
    float _2096;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2059 = fma(_1233, cbModelParam._m0[13u].z, fma(_1229, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1225)) + cbModelParam._m0[13u].w;
        float _2063 = fma(_1233, cbModelParam._m0[14u].z, fma(_1229, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1225)) + cbModelParam._m0[14u].w;
        float _2067 = fma(_1233, cbModelParam._m0[15u].z, fma(_1229, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1225)) + cbModelParam._m0[15u].w;
        float _2070 = fma(_1171, cbModelParam._m0[13u].z, fma(_1170, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1169));
        float _2073 = fma(_1171, cbModelParam._m0[14u].z, fma(_1170, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1169));
        float _2076 = fma(_1171, cbModelParam._m0[15u].z, fma(_1170, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1169));
        float _2104;
        if (_2070 > 0.0)
        {
            _2104 = abs((1.0 - _2059) / _2070);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2070 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2059 + 1.0) / _2070);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2104 = frontier_phi_17_15_ladder;
        }
        float _2306;
        if (_2073 > 0.0)
        {
            _2306 = abs((1.0 - _2063) / _2073);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2073 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2063 + 1.0) / _2073);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2306 = frontier_phi_26_22_ladder;
        }
        float _2560;
        if (_2076 > 0.0)
        {
            _2560 = abs((1.0 - _2067) / _2076);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2076 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2067 + 1.0) / _2076);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2560 = frontier_phi_38_33_ladder;
        }
        float _2562 = isnan(_2306) ? _2104 : (isnan(_2104) ? _2306 : min(_2104, _2306));
        float _2563 = isnan(_2560) ? _2562 : (isnan(_2562) ? _2560 : min(_2562, _2560));
        float _2567 = (_2563 * _2070) + _2059;
        float _2568 = (_2563 * _2073) + _2063;
        float _2569 = (_2563 * _2076) + _2067;
        float _2570 = _2563 * 9.9999997473787516355514526367188e-05;
        float _2572 = (-1.0) - _2570;
        float _2574 = _2570 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2569 > _2574) || ((_2569 < _2572) || ((_2568 > _2574) || ((_2568 < _2572) || ((_2567 < _2572) || (_2567 > _2574))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2697 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2569, cbModelParam._m0[9u].z, fma(_2568, cbModelParam._m0[9u].y, _2567 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2569, cbModelParam._m0[10u].z, fma(_2568, cbModelParam._m0[10u].y, _2567 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2569, cbModelParam._m0[11u].z, fma(_2568, cbModelParam._m0[11u].y, _2567 * cbModelParam._m0[11u].x))), _2012);
            frontier_phi_16_38_ladder = _2697.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2697.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2697.x * cbModelParam._m0[1u].y;
        }
        _2092 = frontier_phi_16_38_ladder_2;
        _2094 = frontier_phi_16_38_ladder_1;
        _2096 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2080 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1169, _1170, _1171), _2012);
        _2092 = _2080.x * cbModelParam._m0[1u].y;
        _2094 = _2080.y * cbModelParam._m0[1u].y;
        _2096 = _2080.z * cbModelParam._m0[1u].y;
    }
    float _2100 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _985);
    float _2101 = isnan(_2100) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2100 : min(cbModelParam._m0[25u].w, _2100));
    float _2190;
    float _2192;
    float _2194;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2154 = fma(_1233, cbModelParam._m0[21u].z, fma(_1229, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1225)) + cbModelParam._m0[21u].w;
        float _2158 = fma(_1233, cbModelParam._m0[22u].z, fma(_1229, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1225)) + cbModelParam._m0[22u].w;
        float _2162 = fma(_1233, cbModelParam._m0[23u].z, fma(_1229, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1225)) + cbModelParam._m0[23u].w;
        float _2165 = fma(_1171, cbModelParam._m0[21u].z, fma(_1170, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1169));
        float _2168 = fma(_1171, cbModelParam._m0[22u].z, fma(_1170, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1169));
        float _2171 = fma(_1171, cbModelParam._m0[23u].z, fma(_1170, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1169));
        float _2311;
        if (_2165 > 0.0)
        {
            _2311 = abs((1.0 - _2154) / _2165);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2165 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2154 + 1.0) / _2165);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2311 = frontier_phi_28_24_ladder;
        }
        float _2587;
        if (_2168 > 0.0)
        {
            _2587 = abs((1.0 - _2158) / _2168);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2168 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2158 + 1.0) / _2168);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2587 = frontier_phi_40_35_ladder;
        }
        float _2800;
        if (_2171 > 0.0)
        {
            _2800 = abs((1.0 - _2162) / _2171);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2171 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2162 + 1.0) / _2171);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2800 = frontier_phi_49_46_ladder;
        }
        float _2802 = isnan(_2587) ? _2311 : (isnan(_2311) ? _2587 : min(_2311, _2587));
        float _2803 = isnan(_2800) ? _2802 : (isnan(_2802) ? _2800 : min(_2802, _2800));
        float _2807 = (_2803 * _2165) + _2154;
        float _2808 = (_2803 * _2168) + _2158;
        float _2809 = (_2803 * _2171) + _2162;
        float _2810 = _2803 * 9.9999997473787516355514526367188e-05;
        float _2811 = (-1.0) - _2810;
        float _2813 = _2810 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2809 > _2813) || ((_2809 < _2811) || ((_2808 > _2813) || ((_2808 < _2811) || ((_2807 < _2811) || (_2807 > _2813))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3031 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2809, cbModelParam._m0[17u].z, fma(_2808, cbModelParam._m0[17u].y, _2807 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2809, cbModelParam._m0[18u].z, fma(_2808, cbModelParam._m0[18u].y, _2807 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2809, cbModelParam._m0[19u].z, fma(_2808, cbModelParam._m0[19u].y, _2807 * cbModelParam._m0[19u].x))), _2101);
            frontier_phi_25_49_ladder = _3031.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _3031.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _3031.x * cbModelParam._m0[1u].z;
        }
        _2190 = frontier_phi_25_49_ladder_2;
        _2192 = frontier_phi_25_49_ladder_1;
        _2194 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _2174 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1169, _1170, _1171), _2101);
        _2190 = _2174.x * cbModelParam._m0[1u].z;
        _2192 = _2174.y * cbModelParam._m0[1u].z;
        _2194 = _2174.z * cbModelParam._m0[1u].z;
    }
    float _2207 = (((_1196 * _1146) + _1197) * _1161) * ((cbModelParam._m0[1u].w * (_2190 - _2092)) + _2092);
    float _2209 = (((_1196 * _1148) + _1197) * _1161) * ((cbModelParam._m0[1u].w * (_2192 - _2094)) + _2094);
    float _2211 = (((_1196 * _1149) + _1197) * _1161) * ((cbModelParam._m0[1u].w * (_2194 - _2096)) + _2096);
    float _2214 = fma(_2211, cbSceneParam._m0[89u].z, fma(_2209, cbSceneParam._m0[89u].y, _2207 * cbSceneParam._m0[89u].x));
    float _2217 = fma(_2211, cbSceneParam._m0[90u].z, fma(_2209, cbSceneParam._m0[90u].y, _2207 * cbSceneParam._m0[90u].x));
    float _2220 = fma(_2211, cbSceneParam._m0[91u].z, fma(_2209, cbSceneParam._m0[91u].y, _2207 * cbSceneParam._m0[91u].x));
    uvec4 _2230 = floatBitsToUint(cbInstanceData._m0[_1121 + 5u]);
    uint _2232 = _2230.x * 14u;
    uint _2233 = _2232 + 13u;
    float _2240 = _1161 + (-1.0);
    float _2245 = (cbLight._m0[_2233].x * _2240) + 1.0;
    float _2246 = (cbLight._m0[_2233].y * _2240) + 1.0;
    float _2247 = (cbLight._m0[_2233].z * _2240) + 1.0;
    float _2248 = (cbLight._m0[_2233].w * _2240) + 1.0;
    uint _2249 = _2232 + 5u;
    float _2255 = isnan(1.0) ? _2246 : (isnan(_2246) ? 1.0 : min(_2246, 1.0));
    uint _2259 = _2232 + 4u;
    float _2265 = isnan(1.0) ? _2245 : (isnan(_2245) ? 1.0 : min(_2245, 1.0));
    uint _2269 = _2232 | 1u;
    float _2280 = dot(vec3(cbLight._m0[_2232].xyz), vec3(_982, _983, _984));
    float _2283 = dot(vec3(cbLight._m0[_2269].xyz), vec3(_982, _983, _984));
    float _4539 = isnan(0.0) ? _2280 : (isnan(_2280) ? 0.0 : max(_2280, 0.0));
    float _4550 = isnan(0.0) ? _2283 : (isnan(_2283) ? 0.0 : max(_2283, 0.0));
    float _2288 = (isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0))) * 0.3183098733425140380859375;
    float _2290 = (isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0))) * 0.3183098733425140380859375;
    float _2297 = ((cbLight._m0[_2249].x * _2255) * _2290) + ((cbLight._m0[_2259].x * _2265) * _2288);
    float _2298 = ((_2255 * cbLight._m0[_2249].y) * _2290) + ((_2265 * cbLight._m0[_2259].y) * _2288);
    float _2299 = ((_2255 * cbLight._m0[_2249].z) * _2290) + ((_2265 * cbLight._m0[_2259].z) * _2288);
    uvec4 _2303 = floatBitsToUint(cbLight._m0[_2232 + 12u]);
    bool _2305 = _2303.x == 0u;
    float _2316;
    float _2318;
    float _2320;
    if (_2305)
    {
        _2316 = _2297;
        _2318 = _2298;
        _2320 = _2299;
    }
    else
    {
        uint _2324 = _2232 + 6u;
        float _2340 = (dot(vec3(cbLight._m0[_2232 + 2u].xyz), vec3(_982, _983, _984)) * 0.5) + 0.5;
        float _2341 = _2340 * _2340;
        float _4561 = isnan(0.0) ? _2341 : (isnan(_2341) ? 0.0 : max(_2341, 0.0));
        float _2342 = isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0));
        float _2343 = isnan(1.0) ? _2247 : (isnan(_2247) ? 1.0 : min(_2247, 1.0));
        _2316 = (((cbLight._m0[_2324].x * 0.3183098733425140380859375) * _2342) * _2343) + _2297;
        _2318 = (((cbLight._m0[_2324].y * 0.3183098733425140380859375) * _2342) * _2343) + _2298;
        _2320 = (((cbLight._m0[_2324].z * 0.3183098733425140380859375) * _2342) * _2343) + _2299;
    }
    bool _2323 = _2303.y == 0u;
    float _2361;
    float _2363;
    float _2365;
    if (_2323)
    {
        _2361 = _2316;
        _2363 = _2318;
        _2365 = _2320;
    }
    else
    {
        uint _2531 = _2232 + 7u;
        float _2547 = (dot(vec3(cbLight._m0[_2232 + 3u].xyz), vec3(_982, _983, _984)) * 0.5) + 0.5;
        float _2548 = _2547 * _2547;
        float _4577 = isnan(0.0) ? _2548 : (isnan(_2548) ? 0.0 : max(_2548, 0.0));
        float _2549 = isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0));
        float _2550 = isnan(1.0) ? _2248 : (isnan(_2248) ? 1.0 : min(_2248, 1.0));
        _2361 = (((cbLight._m0[_2531].x * 0.3183098733425140380859375) * _2549) * _2550) + _2316;
        _2363 = (((cbLight._m0[_2531].y * 0.3183098733425140380859375) * _2549) * _2550) + _2318;
        _2365 = (((cbLight._m0[_2531].z * 0.3183098733425140380859375) * _2549) * _2550) + _2320;
    }
    uint _2368 = _2232 + 8u;
    float _2381 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2232].w)) * _985) * 0.949999988079071044921875);
    float _2382 = _2381 * _2381;
    float _2383 = cbLight._m0[_2232].x + _1063;
    float _2384 = cbLight._m0[_2232].y + _1064;
    float _2385 = cbLight._m0[_2232].z + _1065;
    float _2389 = inversesqrt(dot(vec3(_2383, _2384, _2385), vec3(_2383, _2384, _2385)));
    float _2390 = _2389 * _2383;
    float _2391 = _2389 * _2384;
    float _2392 = _2389 * _2385;
    float _2393 = dot(vec3(_982, _983, _984), vec3(cbLight._m0[_2232].xyz));
    float _4593 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
    float _2396 = isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0));
    float _4604 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
    float _2397 = isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0));
    float _2398 = dot(vec3(_982, _983, _984), vec3(_2390, _2391, _2392));
    float _4615 = isnan(0.0) ? _2398 : (isnan(_2398) ? 0.0 : max(_2398, 0.0));
    float _2401 = isnan(1.0) ? _4615 : (isnan(_4615) ? 1.0 : min(_4615, 1.0));
    float _2402 = dot(vec3(cbLight._m0[_2232].xyz), vec3(_2390, _2391, _2392));
    float _4626 = isnan(0.0) ? _2402 : (isnan(_2402) ? 0.0 : max(_2402, 0.0));
    float _2406 = _2382 * _2382;
    float _2410 = ((_2401 * _2401) * (_2406 + (-1.0))) + 1.0;
    float _2418 = exp2(log2(1.0 - (isnan(1.0) ? _4626 : (isnan(_4626) ? 1.0 : min(_4626, 1.0)))) * 5.0);
    float _2419 = 0.959999978542327880859375 - _1143;
    float _2421 = 0.959999978542327880859375 - _1144;
    float _2422 = 0.959999978542327880859375 - _1145;
    float _2429 = 1.0 - _2382;
    float _2440 = (0.5 / (((_2397 * ((_2396 * _2429) + _2382)) + 9.9999999392252902907785028219223e-09) + (((_2397 * _2429) + _2382) * _2396))) * _2396;
    float _4637 = isnan(0.0) ? _2440 : (isnan(_2440) ? 0.0 : max(_2440, 0.0));
    float _2442 = (isnan(1.0) ? _4637 : (isnan(_4637) ? 1.0 : min(_4637, 1.0))) * (_2406 / ((_2410 * _2410) * 3.141590118408203125));
    uint _2453 = _2232 + 9u;
    float _2464 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2269].w)) * _985) * 0.949999988079071044921875);
    float _2465 = _2464 * _2464;
    float _2466 = cbLight._m0[_2269].x + _1063;
    float _2467 = cbLight._m0[_2269].y + _1064;
    float _2468 = cbLight._m0[_2269].z + _1065;
    float _2472 = inversesqrt(dot(vec3(_2466, _2467, _2468), vec3(_2466, _2467, _2468)));
    float _2473 = _2472 * _2466;
    float _2474 = _2472 * _2467;
    float _2475 = _2472 * _2468;
    float _2476 = dot(vec3(_982, _983, _984), vec3(cbLight._m0[_2269].xyz));
    float _4648 = isnan(0.0) ? _2476 : (isnan(_2476) ? 0.0 : max(_2476, 0.0));
    float _2479 = isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0));
    float _2480 = dot(vec3(_982, _983, _984), vec3(_2473, _2474, _2475));
    float _4659 = isnan(0.0) ? _2480 : (isnan(_2480) ? 0.0 : max(_2480, 0.0));
    float _2483 = isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0));
    float _2484 = dot(vec3(cbLight._m0[_2269].xyz), vec3(_2473, _2474, _2475));
    float _4670 = isnan(0.0) ? _2484 : (isnan(_2484) ? 0.0 : max(_2484, 0.0));
    float _2488 = _2465 * _2465;
    float _2492 = ((_2483 * _2483) * (_2488 + (-1.0))) + 1.0;
    float _2499 = exp2(log2(1.0 - (isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0)))) * 5.0);
    float _2506 = 1.0 - _2465;
    float _2516 = (0.5 / (((_2397 * ((_2479 * _2506) + _2465)) + 9.9999999392252902907785028219223e-09) + (((_2397 * _2506) + _2465) * _2479))) * _2479;
    float _4681 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
    float _2518 = (isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0))) * (_2488 / ((_2492 * _2492) * 3.141590118408203125));
    float _2528 = (((((_2499 * _2419) + _1146) * cbLight._m0[_2453].x) * _2518) * _2255) + (((((_2418 * _2419) + _1146) * cbLight._m0[_2368].x) * _2442) * _2265);
    float _2529 = (((((_2499 * _2421) + _1148) * cbLight._m0[_2453].y) * _2518) * _2255) + (((((_2418 * _2421) + _1148) * cbLight._m0[_2368].y) * _2442) * _2265);
    float _2530 = (((((_2499 * _2422) + _1149) * cbLight._m0[_2453].z) * _2518) * _2255) + (((((_2418 * _2422) + _1149) * cbLight._m0[_2368].z) * _2442) * _2265);
    float _2592;
    float _2594;
    float _2596;
    if (_2305)
    {
        _2592 = _2528;
        _2594 = _2529;
        _2596 = _2530;
    }
    else
    {
        uint _2598 = _2232 + 2u;
        uint _2602 = _2232 + 10u;
        float _2616 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2598].w)) * _985) * 0.949999988079071044921875);
        float _2617 = _2616 * _2616;
        float _2618 = cbLight._m0[_2598].x + _1063;
        float _2619 = cbLight._m0[_2598].y + _1064;
        float _2620 = cbLight._m0[_2598].z + _1065;
        float _2624 = inversesqrt(dot(vec3(_2618, _2619, _2620), vec3(_2618, _2619, _2620)));
        float _2625 = _2624 * _2618;
        float _2626 = _2624 * _2619;
        float _2627 = _2624 * _2620;
        float _2628 = dot(vec3(_982, _983, _984), vec3(cbLight._m0[_2598].xyz));
        float _4692 = isnan(0.0) ? _2628 : (isnan(_2628) ? 0.0 : max(_2628, 0.0));
        float _2631 = isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0));
        float _2632 = dot(vec3(_982, _983, _984), vec3(_2625, _2626, _2627));
        float _4703 = isnan(0.0) ? _2632 : (isnan(_2632) ? 0.0 : max(_2632, 0.0));
        float _2635 = isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0));
        float _2636 = dot(vec3(cbLight._m0[_2598].xyz), vec3(_2625, _2626, _2627));
        float _4714 = isnan(0.0) ? _2636 : (isnan(_2636) ? 0.0 : max(_2636, 0.0));
        float _2640 = _2617 * _2617;
        float _2644 = ((_2635 * _2635) * (_2640 + (-1.0))) + 1.0;
        float _2651 = exp2(log2(1.0 - (isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0)))) * 5.0);
        float _2658 = 1.0 - _2617;
        float _2668 = (0.5 / (((_2397 * ((_2631 * _2658) + _2617)) + 9.9999999392252902907785028219223e-09) + (((_2397 * _2658) + _2617) * _2631))) * _2631;
        float _4725 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
        float _2670 = (isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0))) * (_2640 / ((_2644 * _2644) * 3.141590118408203125));
        float _2671 = isnan(1.0) ? _2247 : (isnan(_2247) ? 1.0 : min(_2247, 1.0));
        _2592 = (((((_2651 * _2419) + _1146) * cbLight._m0[_2602].x) * _2670) * _2671) + _2528;
        _2594 = (((((_2651 * _2421) + _1148) * cbLight._m0[_2602].y) * _2670) * _2671) + _2529;
        _2596 = (((((_2651 * _2422) + _1149) * cbLight._m0[_2602].z) * _2670) * _2671) + _2530;
    }
    float _2706;
    float _2708;
    float _2710;
    if (_2323)
    {
        _2706 = _2592;
        _2708 = _2594;
        _2710 = _2596;
    }
    else
    {
        uint _2717 = _2232 + 3u;
        uint _2721 = _2232 + 11u;
        float _2735 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2717].w)) * _985) * 0.949999988079071044921875);
        float _2736 = _2735 * _2735;
        float _2737 = cbLight._m0[_2717].x + _1063;
        float _2738 = cbLight._m0[_2717].y + _1064;
        float _2739 = cbLight._m0[_2717].z + _1065;
        float _2743 = inversesqrt(dot(vec3(_2737, _2738, _2739), vec3(_2737, _2738, _2739)));
        float _2744 = _2743 * _2737;
        float _2745 = _2743 * _2738;
        float _2746 = _2743 * _2739;
        float _2747 = dot(vec3(_982, _983, _984), vec3(cbLight._m0[_2717].xyz));
        float _4741 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
        float _2750 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
        float _2751 = dot(vec3(_982, _983, _984), vec3(_2744, _2745, _2746));
        float _4752 = isnan(0.0) ? _2751 : (isnan(_2751) ? 0.0 : max(_2751, 0.0));
        float _2754 = isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0));
        float _2755 = dot(vec3(cbLight._m0[_2717].xyz), vec3(_2744, _2745, _2746));
        float _4763 = isnan(0.0) ? _2755 : (isnan(_2755) ? 0.0 : max(_2755, 0.0));
        float _2759 = _2736 * _2736;
        float _2763 = ((_2754 * _2754) * (_2759 + (-1.0))) + 1.0;
        float _2770 = exp2(log2(1.0 - (isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0)))) * 5.0);
        float _2777 = 1.0 - _2736;
        float _2787 = (0.5 / (((_2397 * ((_2750 * _2777) + _2736)) + 9.9999999392252902907785028219223e-09) + (((_2397 * _2777) + _2736) * _2750))) * _2750;
        float _4774 = isnan(0.0) ? _2787 : (isnan(_2787) ? 0.0 : max(_2787, 0.0));
        float _2789 = (isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0))) * (_2759 / ((_2763 * _2763) * 3.141590118408203125));
        float _2790 = isnan(1.0) ? _2248 : (isnan(_2248) ? 1.0 : min(_2248, 1.0));
        _2706 = (((((_2770 * _2419) + _1146) * cbLight._m0[_2721].x) * _2789) * _2790) + _2592;
        _2708 = (((((_2770 * _2421) + _1148) * cbLight._m0[_2721].y) * _2789) * _2790) + _2594;
        _2710 = (((((_2770 * _2422) + _1149) * cbLight._m0[_2721].z) * _2789) * _2790) + _2596;
    }
    float _2925;
    float _2927;
    float _2929;
    float _2931;
    float _2933;
    float _2935;
    if (_2230.y == 0u)
    {
        float _2865 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2866 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2865;
        float _2867 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2865;
        float _2868 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2865;
        uvec4 _2880 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2881 = _2880.x;
        uint _2892 = uint((float(_2880.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1084) / _2881))) + floor(float(uint(cbSceneParam._m0[85u].x * _1083) / _2881)));
        float _2902 = (log2(_2868 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2903 = isnan(0.0) ? _2902 : (isnan(_2902) ? 0.0 : max(_2902, 0.0));
        uint _2906 = uint(isnan(14.0) ? _2903 : (isnan(_2903) ? 14.0 : min(_2903, 14.0)));
        uvec4 _2911 = texelFetch(g_lightClusterGridBuffer, int(((_2906 << 2u) + (_2892 << 6u)) >> 2u));
        uint _2912 = _2911.x;
        uint _2913 = _2880.z;
        float _3036;
        float _3038;
        float _3040;
        float _3042;
        float _3044;
        float _3046;
        if (((((1u << ((_2913 >> 4u) & 15u)) + 4294967295u) & _2912) == 0u) || ((_2913 & 240u) == 0u))
        {
            _3036 = 0.0;
            _3038 = 0.0;
            _3040 = 0.0;
            _3042 = 0.0;
            _3044 = 0.0;
            _3046 = 0.0;
        }
        else
        {
            float _3037;
            float _3039;
            float _3041;
            float _3043;
            float _3045;
            float _3047;
            float _3187 = 0.0;
            float _3188 = 0.0;
            float _3189 = 0.0;
            float _3190 = 0.0;
            float _3191 = 0.0;
            float _3192 = 0.0;
            uint _3193 = 0u;
            uint _3202;
            bool _3203;
            for (;;)
            {
                _3202 = texelFetch(g_lightClassification, int((((_2906 << 5u) + (_2892 << 9u)) + (_3193 << 2u)) >> 2u)).x;
                _3203 = _3202 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3203)
                {
                    frontier_phi_66_pred = _3187;
                    frontier_phi_66_pred_1 = _3192;
                    frontier_phi_66_pred_2 = _3191;
                    frontier_phi_66_pred_3 = _3190;
                    frontier_phi_66_pred_4 = _3189;
                    frontier_phi_66_pred_5 = _3188;
                }
                else
                {
                    float _3332;
                    float _3333;
                    float _3334;
                    float _3335;
                    float _3336;
                    float _3337;
                    uint _3338;
                    _3332 = _3187;
                    _3333 = _3188;
                    _3334 = _3189;
                    _3335 = _3190;
                    _3336 = _3191;
                    _3337 = _3192;
                    _3338 = _3202;
                    float _3259;
                    float _3260;
                    float _3261;
                    float _3262;
                    float _3263;
                    float _3264;
                    for (;;)
                    {
                        uint _3342 = uint(findLSB(_3338)) + (_3193 << 5u);
                        uint _3339 = (_3338 + 4294967295u) & _3338;
                        uint _3344 = _3342 * 48u;
                        vec4 _3358 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3344)).x, texelFetch(g_PointLightRenderingBuffer, int(_3344 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3344 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3344 + 3u)).x));
                        uint _3364 = (_3342 * 48u) + 4u;
                        vec4 _3377 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3364)).x, texelFetch(g_PointLightRenderingBuffer, int(_3364 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3364 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3364 + 3u)).x));
                        uint _3383 = (_3342 * 48u) + 8u;
                        vec3 _3394 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3383)).x, texelFetch(g_PointLightRenderingBuffer, int(_3383 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3383 + 2u)).x));
                        float _3398 = _3358.x - _2866;
                        float _3399 = _3358.y - _2867;
                        float _3400 = _3358.z - _2868;
                        float _3401 = dot(vec3(_3398, _3399, _3400), vec3(_3398, _3399, _3400));
                        float _3404 = inversesqrt(_3401);
                        float _3405 = _3404 * _3398;
                        float _3406 = _3404 * _3399;
                        float _3407 = _3404 * _3400;
                        float _3408 = dot(vec3(_1102, _1105, _1108), vec3(_3405, _3406, _3407));
                        float _3413 = 1.0 - (_3401 * _3358.w);
                        float _4800 = isnan(0.0) ? _3413 : (isnan(_3413) ? 0.0 : max(_3413, 0.0));
                        float _3414 = isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0));
                        float _3415 = sqrt(_3401) * _3377.w;
                        float _3418 = 1.39999997615814208984375 / (_3415 + 1.39999997615814208984375);
                        float _3419 = _3418 * _3418;
                        float _3422 = ((1.0 - _3419) * _3408) + _3419;
                        float _3425 = _3415 * _3415;
                        float _3429 = ((isnan(0.0) ? _3422 : (isnan(_3422) ? 0.0 : max(_3422, 0.0))) * _3414) / ((_3425 * 0.699999988079071044921875) + 1.0);
                        float _3433 = (-0.0) - _2866;
                        float _3434 = (-0.0) - _2867;
                        float _3435 = (-0.0) - _2868;
                        float _3439 = inversesqrt(dot(vec3(_3433, _3434, _3435), vec3(_3433, _3434, _3435)));
                        float _3440 = _3439 * _3433;
                        float _3441 = _3439 * _3434;
                        float _3442 = _3439 * _3435;
                        float _3450 = exp2(log2(1.0 / ((_3425 * 3.5) + 5.0)) * 0.25);
                        float _3451 = 1.0 - _1177;
                        float _3458 = sqrt(1.0 - ((1.0 - (_3451 * _3451)) * (1.0 - (_3450 * _3450))));
                        float _3459 = _3458 * _3458;
                        float _3460 = _3459 * _3459;
                        float _3461 = _3440 + _3405;
                        float _3462 = _3441 + _3406;
                        float _3463 = _3442 + _3407;
                        float _3467 = inversesqrt(dot(vec3(_3461, _3462, _3463), vec3(_3461, _3462, _3463)));
                        float _3471 = dot(vec3(_1102, _1105, _1108), vec3(_3440, _3441, _3442));
                        float _4816 = isnan(0.0) ? _3471 : (isnan(_3471) ? 0.0 : max(_3471, 0.0));
                        float _3474 = isnan(1.0) ? _4816 : (isnan(_4816) ? 1.0 : min(_4816, 1.0));
                        float _3475 = dot(vec3(_1102, _1105, _1108), vec3(_3467 * _3461, _3467 * _3462, _3467 * _3463));
                        float _4827 = isnan(0.0) ? _3475 : (isnan(_3475) ? 0.0 : max(_3475, 0.0));
                        float _3478 = isnan(1.0) ? _4827 : (isnan(_4827) ? 1.0 : min(_4827, 1.0));
                        float _3482 = ((_3478 * _3478) * (_3460 + (-1.0))) + 1.0;
                        float _3483 = _3418 * _3459;
                        float _3484 = _3483 * _3483;
                        float _3487 = ((1.0 - _3484) * _3408) + _3484;
                        float _4838 = isnan(0.0) ? _3487 : (isnan(_3487) ? 0.0 : max(_3487, 0.0));
                        float _3488 = isnan(1.0) ? _4838 : (isnan(_4838) ? 1.0 : min(_4838, 1.0));
                        float _3489 = 1.0 - _3459;
                        float _3499 = (0.5 / (((_3488 * ((_3474 * _3489) + _3459)) + 9.9999999392252902907785028219223e-09) + (((_3488 * _3489) + _3459) * _3474))) * _3488;
                        float _4849 = isnan(0.0) ? _3499 : (isnan(_3499) ? 0.0 : max(_3499, 0.0));
                        float _3510 = (((_3460 * 3.1415927410125732421875) * (isnan(1.0) ? _4849 : (isnan(_4849) ? 1.0 : min(_4849, 1.0)))) / ((_3482 * _3482) * ((_3425 * 2.1991131305694580078125) + 3.141590118408203125))) * _3414;
                        _3262 = (_3429 * _3377.x) + _3335;
                        _3263 = (_3429 * _3377.y) + _3336;
                        _3264 = (_3429 * _3377.z) + _3337;
                        _3259 = (_3510 * _3394.x) + _3332;
                        _3260 = (_3510 * _3394.y) + _3333;
                        _3261 = (_3510 * _3394.z) + _3334;
                        if (_3339 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3332 = _3259;
                            _3333 = _3260;
                            _3334 = _3261;
                            _3335 = _3262;
                            _3336 = _3263;
                            _3337 = _3264;
                            _3338 = _3339;
                        }
                    }
                    frontier_phi_66_pred = _3259;
                    frontier_phi_66_pred_1 = _3264;
                    frontier_phi_66_pred_2 = _3263;
                    frontier_phi_66_pred_3 = _3262;
                    frontier_phi_66_pred_4 = _3261;
                    frontier_phi_66_pred_5 = _3260;
                }
                _3037 = frontier_phi_66_pred;
                _3047 = frontier_phi_66_pred_1;
                _3045 = frontier_phi_66_pred_2;
                _3043 = frontier_phi_66_pred_3;
                _3041 = frontier_phi_66_pred_4;
                _3039 = frontier_phi_66_pred_5;
                uint _3194 = _3193 + 1u;
                if (_3194 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3187 = _3037;
                    _3188 = _3039;
                    _3189 = _3041;
                    _3190 = _3043;
                    _3191 = _3045;
                    _3192 = _3047;
                    _3193 = _3194;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3036 = _3037;
            _3038 = _3039;
            _3040 = _3041;
            _3042 = _3043;
            _3044 = _3045;
            _3046 = _3047;
        }
        uvec4 _3050 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3051 = _3050.z;
        uint _3053 = (_3051 >> 8u) & 15u;
        float _3155;
        float _3157;
        float _3159;
        float _3161;
        float _3163;
        float _3165;
        if (((4294967295u << _3053) & _2912) == 0u)
        {
            _3155 = _3036;
            _3157 = _3038;
            _3159 = _3040;
            _3161 = _3042;
            _3163 = _3044;
            _3165 = _3046;
        }
        else
        {
            float _3180 = inversesqrt(dot(vec3(_2866, _2867, _2868), vec3(_2866, _2867, _2868)));
            float _3181 = _3180 * _2866;
            float _3182 = _3180 * _2867;
            float _3183 = _3180 * _2868;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_3053 < ((_3051 >> 12u) & 15u))
            {
                float _3156;
                float _3158;
                float _3160;
                float _3162;
                float _3164;
                float _3166;
                float _3315 = _3036;
                float _3316 = _3038;
                float _3317 = _3040;
                float _3318 = _3042;
                float _3319 = _3044;
                float _3320 = _3046;
                uint _3321 = _3053;
                uint _3330;
                bool _3331;
                for (;;)
                {
                    _3330 = texelFetch(g_lightClassification, int((((_2906 << 5u) + (_2892 << 9u)) + (_3321 << 2u)) >> 2u)).x;
                    _3331 = _3330 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3331)
                    {
                        frontier_phi_77_pred = _3320;
                        frontier_phi_77_pred_1 = _3319;
                        frontier_phi_77_pred_2 = _3318;
                        frontier_phi_77_pred_3 = _3317;
                        frontier_phi_77_pred_4 = _3316;
                        frontier_phi_77_pred_5 = _3315;
                    }
                    else
                    {
                        float _3524;
                        float _3525;
                        float _3526;
                        float _3527;
                        float _3528;
                        float _3529;
                        float _3817;
                        float _3818;
                        float _3819;
                        float _3820;
                        float _3821;
                        float _3822;
                        float _3537 = _3315;
                        float _3538 = _3316;
                        float _3539 = _3317;
                        float _3540 = _3318;
                        float _3541 = _3319;
                        float _3542 = _3320;
                        uint _3543 = _3330;
                        uint _3544;
                        vec4 _3569;
                        float _3570;
                        vec4 _3585;
                        vec3 _3597;
                        vec4 _3612;
                        vec4 _3627;
                        float _3673;
                        bool _3674;
                        for (;;)
                        {
                            uint _3554 = ((_3321 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3543));
                            _3544 = (_3543 + 4294967295u) & _3543;
                            uint _3556 = _3554 * 40u;
                            _3569 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3556)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 3u)).x));
                            _3570 = _3569.w;
                            uint _3572 = (_3554 * 40u) + 4u;
                            _3585 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3572)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 3u)).x));
                            uint _3587 = (_3554 * 40u) + 8u;
                            _3597 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3587)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 2u)).x));
                            uint _3599 = (_3554 * 40u) + 16u;
                            _3612 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3599)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3599 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3599 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3599 + 3u)).x));
                            uint _3614 = (_3554 * 40u) + 20u;
                            _3627 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3614)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3614 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3614 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3614 + 3u)).x));
                            uint _3629 = (_3554 * 40u) + 24u;
                            vec4 _3642 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3629)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3629 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3629 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3629 + 3u)).x));
                            uint _3648 = (_3554 * 40u) + 28u;
                            vec4 _3661 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3648)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 3u)).x));
                            _3673 = fma(_2868, _3661.z, fma(_2867, _3661.y, _3661.x * _2866)) + _3661.w;
                            _3674 = !((fma(_2868, _3642.z, fma(_2867, _3642.y, _3642.x * _2866)) + _3642.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3674)
                            {
                                float _3701 = _3569.x - _2866;
                                float _3702 = _3569.y - _2867;
                                float _3703 = _3569.z - _2868;
                                float _3704 = dot(vec3(_3701, _3702, _3703), vec3(_3701, _3702, _3703));
                                float _3707 = inversesqrt(_3704);
                                float _3708 = _3707 * _3701;
                                float _3709 = _3707 * _3702;
                                float _3710 = _3707 * _3703;
                                float _3714 = 1.0 - (_3704 / (_3570 * _3570));
                                float _4860 = isnan(0.0) ? _3714 : (isnan(_3714) ? 0.0 : max(_3714, 0.0));
                                float _3715 = isnan(1.0) ? _4860 : (isnan(_4860) ? 1.0 : min(_4860, 1.0));
                                float _3719 = sqrt(_3704) * _3585.w;
                                float _3721 = 1.39999997615814208984375 / (_3719 + 1.39999997615814208984375);
                                float _3722 = _3721 * _3721;
                                float _3725 = ((1.0 - _3722) * dot(vec3(_3708, _3709, _3710), vec3(_1102, _1105, _1108))) + _3722;
                                float _3728 = _3719 * _3719;
                                float _3732 = (fma(_2868, _3612.z, fma(_2867, _3612.y, _3612.x * _2866)) + _3612.w) / _3673;
                                float _3733 = (fma(_2868, _3627.z, fma(_2867, _3627.y, _3627.x * _2866)) + _3627.w) / _3673;
                                float _3737 = 1.0 - dot(vec2(_3732, _3733), vec2(_3732, _3733));
                                float _4876 = isnan(0.0) ? _3737 : (isnan(_3737) ? 0.0 : max(_3737, 0.0));
                                float _3738 = isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0));
                                float _3739 = _3738 * (((isnan(0.0) ? _3725 : (isnan(_3725) ? 0.0 : max(_3725, 0.0))) * _3715) / ((_3728 * 0.699999988079071044921875) + 1.0));
                                float _3751 = exp2(log2(1.0 / ((_3728 * 3.5) + 5.0)) * 0.25);
                                float _3752 = 1.0 - _1177;
                                float _3759 = sqrt(1.0 - ((1.0 - (_3752 * _3752)) * (1.0 - (_3751 * _3751))));
                                float _3760 = _3759 * _3759;
                                float _3761 = _3760 * _3760;
                                float _3762 = _3708 - _3181;
                                float _3763 = _3709 - _3182;
                                float _3764 = _3710 - _3183;
                                float _3768 = inversesqrt(dot(vec3(_3762, _3763, _3764), vec3(_3762, _3763, _3764)));
                                float _3772 = dot(vec3(_1102, _1105, _1108), vec3((-0.0) - _3181, (-0.0) - _3182, (-0.0) - _3183));
                                float _4887 = isnan(0.0) ? _3772 : (isnan(_3772) ? 0.0 : max(_3772, 0.0));
                                float _3775 = isnan(1.0) ? _4887 : (isnan(_4887) ? 1.0 : min(_4887, 1.0));
                                float _3776 = dot(vec3(_1102, _1105, _1108), vec3(_3768 * _3762, _3768 * _3763, _3768 * _3764));
                                float _4898 = isnan(0.0) ? _3776 : (isnan(_3776) ? 0.0 : max(_3776, 0.0));
                                float _3779 = isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0));
                                float _3783 = ((_3779 * _3779) * (_3761 + (-1.0))) + 1.0;
                                float _3784 = _3721 * _3760;
                                float _3785 = _3784 * _3784;
                                float _3791 = ((1.0 - _3785) * dot(vec3(_1102, _1105, _1108), vec3(_3708, _3709, _3710))) + _3785;
                                float _4909 = isnan(0.0) ? _3791 : (isnan(_3791) ? 0.0 : max(_3791, 0.0));
                                float _3792 = isnan(1.0) ? _4909 : (isnan(_4909) ? 1.0 : min(_4909, 1.0));
                                float _3793 = 1.0 - _3760;
                                float _3803 = (0.5 / (((_3792 * ((_3775 * _3793) + _3760)) + 9.9999999392252902907785028219223e-09) + (((_3792 * _3793) + _3760) * _3775))) * _3792;
                                float _4920 = isnan(0.0) ? _3803 : (isnan(_3803) ? 0.0 : max(_3803, 0.0));
                                float _3813 = (_3738 * _3715) * (((_3761 * 3.1415927410125732421875) * (isnan(1.0) ? _4920 : (isnan(_4920) ? 1.0 : min(_4920, 1.0)))) / ((_3783 * _3783) * ((_3728 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3739 * _3585.y;
                                frontier_phi_83_pred_1 = _3739 * _3585.x;
                                frontier_phi_83_pred_2 = _3813 * _3597.z;
                                frontier_phi_83_pred_3 = _3813 * _3597.y;
                                frontier_phi_83_pred_4 = _3813 * _3597.x;
                                frontier_phi_83_pred_5 = _3739 * _3585.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3821 = frontier_phi_83_pred;
                            _3820 = frontier_phi_83_pred_1;
                            _3819 = frontier_phi_83_pred_2;
                            _3818 = frontier_phi_83_pred_3;
                            _3817 = frontier_phi_83_pred_4;
                            _3822 = frontier_phi_83_pred_5;
                            _3527 = _3820 + _3540;
                            _3528 = _3821 + _3541;
                            _3529 = _3822 + _3542;
                            _3524 = _3817 + _3537;
                            _3525 = _3818 + _3538;
                            _3526 = _3819 + _3539;
                            if (_3544 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3537 = _3524;
                                _3538 = _3525;
                                _3539 = _3526;
                                _3540 = _3527;
                                _3541 = _3528;
                                _3542 = _3529;
                                _3543 = _3544;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3529;
                        frontier_phi_77_pred_1 = _3528;
                        frontier_phi_77_pred_2 = _3527;
                        frontier_phi_77_pred_3 = _3526;
                        frontier_phi_77_pred_4 = _3525;
                        frontier_phi_77_pred_5 = _3524;
                    }
                    _3166 = frontier_phi_77_pred;
                    _3164 = frontier_phi_77_pred_1;
                    _3162 = frontier_phi_77_pred_2;
                    _3160 = frontier_phi_77_pred_3;
                    _3158 = frontier_phi_77_pred_4;
                    _3156 = frontier_phi_77_pred_5;
                    uint _3322 = _3321 + 1u;
                    if (_3322 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3315 = _3156;
                        _3316 = _3158;
                        _3317 = _3160;
                        _3318 = _3162;
                        _3319 = _3164;
                        _3320 = _3166;
                        _3321 = _3322;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _3160;
                frontier_phi_58_59_ladder_1 = _3166;
                frontier_phi_58_59_ladder_2 = _3164;
                frontier_phi_58_59_ladder_3 = _3162;
                frontier_phi_58_59_ladder_4 = _3158;
                frontier_phi_58_59_ladder_5 = _3156;
            }
            else
            {
                frontier_phi_58_59_ladder = _3040;
                frontier_phi_58_59_ladder_1 = _3046;
                frontier_phi_58_59_ladder_2 = _3044;
                frontier_phi_58_59_ladder_3 = _3042;
                frontier_phi_58_59_ladder_4 = _3038;
                frontier_phi_58_59_ladder_5 = _3036;
            }
            _3155 = frontier_phi_58_59_ladder_5;
            _3157 = frontier_phi_58_59_ladder_4;
            _3159 = frontier_phi_58_59_ladder;
            _3161 = frontier_phi_58_59_ladder_3;
            _3163 = frontier_phi_58_59_ladder_2;
            _3165 = frontier_phi_58_59_ladder_1;
        }
        float _3170 = isnan(1.0) ? _1161 : (isnan(_1161) ? 1.0 : min(_1161, 1.0));
        _2925 = (_3170 * _3161) + _2361;
        _2927 = (_3170 * _3163) + _2363;
        _2929 = (_3170 * _3165) + _2365;
        _2931 = ((_3155 * _1146) * _3170) + _2706;
        _2933 = ((_3157 * _1148) * _3170) + _2708;
        _2935 = ((_3159 * _1149) * _3170) + _2710;
    }
    else
    {
        _2925 = _2361;
        _2927 = _2363;
        _2929 = _2365;
        _2931 = _2706;
        _2933 = _2708;
        _2935 = _2710;
    }
    uint _2941 = _1122 + uint(cbMatDynParam._m0[0u].w);
    float _2947 = (isnan(cbMtdParam._m0[24u].y) ? _827 : (isnan(_827) ? cbMtdParam._m0[24u].y : min(_827, cbMtdParam._m0[24u].y))) * cbSceneParam._m0[72u].y;
    float _4936 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
    float _4947 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
    float _4958 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
    float _2970 = (((isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0))) * (_2925 + ((isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0))) * _1161))) + ((_2931 + ((isnan(0.0) ? _2214 : (isnan(_2214) ? 0.0 : max(_2214, 0.0))) * _2001)) * cbPerFrame._m0[3u].x)) + ((_2947 * (((((_894.x - _891) * _873) + _891) * cbMtdParam._m0[17u].x) + ((cbMtdParam._m0[24u].w * _819) * cbMtdParam._m0[16u].x))) * cbInstanceData._m0[_2941].x);
    float _2972 = (((_2947 * (((((_894.y - _892) * _873) + _892) * cbMtdParam._m0[17u].y) + ((cbMtdParam._m0[24u].w * (((_808.y - _806) * _787) + _806)) * cbMtdParam._m0[16u].y))) * cbInstanceData._m0[_2941].y) + ((_2933 + ((isnan(0.0) ? _2217 : (isnan(_2217) ? 0.0 : max(_2217, 0.0))) * _2001)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0))) * (_2927 + ((isnan(0.0) ? _1925 : (isnan(_1925) ? 0.0 : max(_1925, 0.0))) * _1161)));
    float _2974 = (((_2947 * (((((_894.z - _893) * _873) + _893) * cbMtdParam._m0[17u].z) + ((cbMtdParam._m0[24u].w * (((_808.z - _807) * _787) + _807)) * cbMtdParam._m0[16u].z))) * cbInstanceData._m0[_2941].z) + ((_2935 + ((isnan(0.0) ? _2220 : (isnan(_2220) ? 0.0 : max(_2220, 0.0))) * _2001)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0))) * (_2929 + ((isnan(0.0) ? _1928 : (isnan(_1928) ? 0.0 : max(_1928, 0.0))) * _1161)));
    float _2975 = isnan(0.0) ? _2970 : (isnan(_2970) ? 0.0 : max(_2970, 0.0));
    float _2976 = isnan(0.0) ? _2972 : (isnan(_2972) ? 0.0 : max(_2972, 0.0));
    float _2977 = isnan(0.0) ? _2974 : (isnan(_2974) ? 0.0 : max(_2974, 0.0));
    uint _2978 = _1121 + 6u;
    float _2986 = _1083 / cbSceneParam._m0[86u].x;
    float _2987 = _1084 / cbSceneParam._m0[86u].y;
    vec4 _3001 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2986, _2987, (log2((isnan(cbSceneParam._m0[77u].w) ? _1005 : (isnan(_1005) ? cbSceneParam._m0[77u].w : min(_1005, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3003 = _3001.x;
    float _3004 = _3001.y;
    float _3005 = _3001.z;
    float _3006 = _3001.w;
    float _3098;
    float _3100;
    float _3102;
    float _3104;
    if (_1005 > cbSceneParam._m0[78u].w)
    {
        float _3061 = isnan(_1005) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1005 : min(cbSceneParam._m0[80u].w, _1005));
        float _3062 = _3061 / _1005;
        float _3073 = _3062 * _1056;
        float _3074 = _1057 * _3062;
        float _3075 = (-0.0) - _3074;
        float _3076 = _3062 * _1058;
        float _3078 = (cbSceneParam._m0[77u].w * _3075) / _3061;
        float _3079 = _3078 + cbSceneParam._m0[79u].w;
        float _3080 = cbSceneParam._m0[79u].w - _3074;
        float _3086 = sqrt(((_3073 * _3073) + (_3074 * _3074)) + (_3076 * _3076));
        float _3089 = (1.0 - (cbSceneParam._m0[77u].w / _3061)) * _3086;
        float _3094 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3096 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3272;
        if (abs((_3075 - _3078) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3272 = ((((_3079 > 0.0) ? exp2(_3094 * _3079) : (2.0 - exp2(_3096 * _3079))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3089;
        }
        else
        {
            float _3216 = 1.0 / cbSceneParam._m0[80u].x;
            float _3217 = isnan(_3080) ? _3079 : (isnan(_3079) ? _3080 : max(_3079, _3080));
            float _3218 = isnan(_3080) ? _3079 : (isnan(_3079) ? _3080 : min(_3079, _3080));
            float _3227 = isnan(0.0) ? _3217 : (isnan(_3217) ? 0.0 : min(_3217, 0.0));
            float _3228 = isnan(0.0) ? _3218 : (isnan(_3218) ? 0.0 : min(_3218, 0.0));
            _3272 = ((abs(_3086 / _3075) * cbSceneParam._m0[80u].y) * ((((_3227 - _3228) * 2.0) - ((exp2(_3094 * (isnan(0.0) ? _3217 : (isnan(_3217) ? 0.0 : max(_3217, 0.0)))) - exp2(_3094 * (isnan(0.0) ? _3218 : (isnan(_3218) ? 0.0 : max(_3218, 0.0))))) * _3216)) - ((exp2(_3096 * _3227) - exp2(_3096 * _3228)) * _3216))) + (_3089 * cbSceneParam._m0[80u].z);
        }
        vec4 _3274 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2986, _2987, 1.0), 0.0);
        float _3283 = exp2((_3272 * (-1.44269502162933349609375)) * (1.0 - _3274.w));
        float _3284 = log2(_3283);
        float _3300 = log2(_3006);
        _3098 = (exp2(_3300 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3284 * cbSceneParam._m0[78u].x)) * _3274.x) / cbSceneParam._m0[78u].x)) + _3003;
        _3100 = (exp2(_3300 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3284 * cbSceneParam._m0[78u].y)) * _3274.y) / cbSceneParam._m0[78u].y)) + _3004;
        _3102 = (exp2(_3300 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3284 * cbSceneParam._m0[78u].z)) * _3274.z) / cbSceneParam._m0[78u].z)) + _3005;
        _3104 = _3283 * _3006;
    }
    else
    {
        _3098 = _3003;
        _3100 = _3004;
        _3102 = _3005;
        _3104 = _3006;
    }
    bool _3310;
    vec4 _3113;
    vec4 _3135;
    float _3137;
    float _3141;
    float _3142;
    float _3143;
    float _3144;
    bool _3154;
    for (;;)
    {
        _3113 = cbMatDynParam._m0[0u];
        float _3115 = roundEven(_3113.y);
        bool _3116 = _3115 == 3.0;
        float _3117 = log2(_3104);
        float _3124 = exp2(_3117 * cbSceneParam._m0[78u].x) * _2975;
        float _3125 = exp2(_3117 * cbSceneParam._m0[78u].y) * _2976;
        float _3126 = exp2(_3117 * cbSceneParam._m0[78u].z) * _2977;
        float _3133 = _1072 + (-0.5);
        _3135 = cbMtdParam._m0[1u];
        _3137 = _3135.y * _3133;
        float _3140 = (_3115 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3141 = _3140 * (_3116 ? _3124 : (_3124 + (cbSceneParam._m0[72u].w * _3098)));
        _3142 = _3140 * (_3116 ? _3125 : (_3125 + (cbSceneParam._m0[72u].w * _3100)));
        _3143 = _3140 * (_3116 ? _3126 : (_3126 + (cbSceneParam._m0[72u].w * _3102)));
        _3144 = _3133 * 0.999000012874603271484375;
        _3154 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3154)
        {
            if ((cbInstanceData._m0[_1121 + 7u].x + _3144) < 0.5)
            {
                _3310 = true;
                break;
            }
        }
        uint _3251 = _1122 + uint(_3113.w);
        if ((cbInstanceData._m0[_3251].w < 1.0) && ((cbInstanceData._m0[_3251].w + _3144) < 0.5))
        {
            _3310 = true;
            break;
        }
        if ((_3137 + 1.0) < _3135.x)
        {
            _3310 = true;
            break;
        }
        _3310 = false;
        break;
    }
    float _3515;
    if (_3310)
    {
        discard_state = true;
        _3515 = 0.0;
    }
    else
    {
        _3515 = cbInstanceData._m0[_2978].w;
    }
    SV_Target.x = _3141;
    SV_Target.y = _3142;
    SV_Target.z = _3143;
    SV_Target.w = _3515;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2978].w;
    discard_exit();
}


