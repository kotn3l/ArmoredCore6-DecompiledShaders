#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[28];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_c4200_custom_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_c4200_custom_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D C_c4200_custom_snp_0_Texture2D_27;
layout(set = 0, binding = 12) uniform texture2D C_c4200_custom_snp_0_Texture2D_28;
layout(set = 0, binding = 13) uniform texture2D C_c4200_custom_snp_0_Texture2D_29;
layout(set = 0, binding = 14) uniform texture2D C_c4200_custom_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_c4200_custom_snp_0_Texture2D_30;
layout(set = 0, binding = 16) uniform texture2D C_c4200_custom_snp_0_Texture2D_4;
layout(set = 0, binding = 17) uniform texture2D C_c4200_custom_snp_0_Texture2D_5;
layout(set = 0, binding = 18) uniform texture2D C_c4200_custom_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_c4200_custom_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D C_c4200_custom_snp_0_Texture2D_16;
layout(set = 0, binding = 20) uniform texture2D C_c4200_custom_snp_0_Texture2D_8;
layout(set = 0, binding = 21) uniform texture2D C_c4200_custom_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_c4200_custom_snp_0_Texture2D_17;
layout(set = 0, binding = 4) uniform texture2D C_c4200_custom_snp_0_Texture2D_18;
layout(set = 0, binding = 5) uniform texture2D C_c4200_custom_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D C_c4200_custom_snp_0_Texture2D_22;
layout(set = 0, binding = 7) uniform texture2D C_c4200_custom_snp_0_Texture2D_23;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 4, component = 2) in float TEXCOORD_6;
layout(location = 4, component = 3) in float TEXCOORD_7;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1567;
float _4251;
float _4252;
float _4253;
float _4254;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _227 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _228 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _229 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _235 = inversesqrt(dot(vec3(_227, _228, _229), vec3(_227, _228, _229)));
    float _242 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _249 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _276 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w));
    vec4 _317 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD_1) + cbTextureTilingScale._m0[19u].w));
    float _330 = exp2(log2(_317.w * cbMtdParam._m0[26u].x) * cbMtdParam._m0[18u].w);
    float _331 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
    float _332 = isnan(1.0) ? _331 : (isnan(_331) ? 1.0 : min(_331, 1.0));
    vec4 _346 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _350 = _346.z;
    float _355 = exp2(log2(_350 * cbMtdParam._m0[19u].x) * cbMtdParam._m0[18u].y);
    float _356 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _357 = isnan(1.0) ? _356 : (isnan(_356) ? 1.0 : min(_356, 1.0));
    vec4 _369 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w));
    vec4 _394 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _405 = cbMtdParam._m0[9u].x * _394.x;
    float _406 = cbMtdParam._m0[9u].y * _394.y;
    float _407 = cbMtdParam._m0[9u].z * _394.z;
    float _414 = (((cbMtdParam._m0[10u].x * _369.x) - _405) * _357) + _405;
    float _415 = (((cbMtdParam._m0[10u].y * _369.y) - _406) * _357) + _406;
    float _416 = (((cbMtdParam._m0[10u].z * _369.z) - _407) * _357) + _407;
    vec4 _429 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_30, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_1) + cbTextureTilingScale._m0[15u].w));
    float _431 = _429.x;
    float _435 = exp2(log2(_431) * cbMtdParam._m0[19u].z);
    vec4 _448 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w));
    float _468 = (((cbMtdParam._m0[12u].x * _448.x) - _414) * _435) + _414;
    float _469 = (((cbMtdParam._m0[12u].y * _448.y) - _415) * _435) + _415;
    float _470 = (((cbMtdParam._m0[12u].z * _448.z) - _416) * _435) + _416;
    vec4 _483 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_1) + cbTextureTilingScale._m0[16u].w));
    float _508 = (_317.x * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].x * _483.x) - _468) * _332) + _468);
    float _510 = (_317.y * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].y * _483.y) - _469) * _332) + _469);
    float _512 = (_317.z * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].z * _483.z) - _470) * _332) + _470);
    vec4 _524 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _543 = TEXCOORD_3.x - ((cbMtdParam._m0[19u].w * (1.0 - TEXCOORD_3.x)) * (texture(sampler2D(C_c4200_custom_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1) + cbTextureTilingScale._m0[4u].w)).x + 0.00999999977648258209228515625));
    float _545 = _543 * (cbMtdParam._m0[20u].y + 1.0);
    float _4283 = isnan(0.0) ? _545 : (isnan(_545) ? 0.0 : max(_545, 0.0));
    float _546 = isnan(1.0) ? _4283 : (isnan(_4283) ? 1.0 : min(_4283, 1.0));
    float _553 = (_546 * ((cbMtdParam._m0[11u].x * _524.x) - _508)) + _508;
    float _554 = (((cbMtdParam._m0[11u].y * _524.y) - _510) * _546) + _510;
    float _555 = (((cbMtdParam._m0[11u].z * _524.z) - _512) * _546) + _512;
    float _557 = cbMtdParam._m0[22u].z * TEXCOORD_6;
    float _565 = (_557 - (((_276.x + 0.00999999977648258209228515625) * cbMtdParam._m0[22u].x) * (1.0 - _557))) * (cbMtdParam._m0[22u].y + 1.0);
    float _4294 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _566 = isnan(1.0) ? _4294 : (isnan(_4294) ? 1.0 : min(_4294, 1.0));
    float _573 = ((cbMtdParam._m0[14u].x - _553) * _566) + _553;
    float _574 = ((cbMtdParam._m0[14u].y - _554) * _566) + _554;
    float _575 = ((cbMtdParam._m0[14u].z - _555) * _566) + _555;
    float _578 = (cbMtdParam._m0[20u].x + 1.0) * _543;
    float _4305 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _579 = isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0));
    float _581 = _431 - (_579 * _431);
    float _583 = _581 - (_581 * _557);
    vec4 _596 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD_1) + cbTextureTilingScale._m0[17u].w));
    vec4 _614 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD_1) + cbTextureTilingScale._m0[18u].w));
    float _616 = _614.x;
    float _617 = _614.y;
    float _620 = cbMtdParam._m0[18u].x + _614.z;
    float _623 = (((cbMtdParam._m0[18u].z + _596.z) - _620) * _357) + _620;
    vec4 _635 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD_1) + cbTextureTilingScale._m0[20u].w));
    float _647 = (((_635.z - _623) + cbMtdParam._m0[24u].z) * _435) + _623;
    float _653 = ((((_350 * 2.0) * _647) - _647) * cbMtdParam._m0[20u].z) + _647;
    vec4 _666 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[21u].x * TEXCOORD) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * TEXCOORD_1) + cbTextureTilingScale._m0[21u].w));
    float _675 = (((cbMtdParam._m0[19u].y + _666.z) - _653) * _332) + _653;
    vec4 _687 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w));
    float _699 = ((_687.z - _675) * _579) + _675;
    vec4 _715 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1) + cbTextureTilingScale._m0[6u].w));
    float _729 = ((cbMtdParam._m0[21u].w * _557) * ((_715.z * cbMtdParam._m0[21u].z) - _699)) + _699;
    float _740 = cbMtdParam._m0[23u].y * cbPerFrame._m0[22u].x;
    float _759 = (cbTextureTilingScale._m0[12u].x * ((_740 * cbMtdParam._m0[26u].y) + TEXCOORD)) + cbTextureTilingScale._m0[12u].z;
    float _760 = (cbTextureTilingScale._m0[12u].y * ((_740 * cbMtdParam._m0[26u].z) + TEXCOORD_1)) + cbTextureTilingScale._m0[12u].w;
    vec4 _762 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_28, SS_WrapLinear), vec2(_759, _760));
    float _766 = cbPerFrame._m0[22u].x * 2.0;
    float _767 = _766 * cbMtdParam._m0[25u].y;
    float _774 = ((_762.y * 0.5) + (-0.25)) * cbMtdParam._m0[25u].x;
    float _776 = (-0.0) - (cbMtdParam._m0[25u].x * ((_762.x * 0.5) + (-0.25)));
    float _778 = fract(_767);
    float _780 = fract(_767 + 0.5);
    float _791 = abs((_778 * 2.0) + (-1.0));
    vec4 _807 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_27, SS_DiffuseMap), vec2((((_778 * _776) + TEXCOORD) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((_774 * _778) + TEXCOORD_1) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _809 = _807.x;
    float _810 = _807.y;
    float _811 = _807.z;
    vec4 _812 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_27, SS_DiffuseMap), vec2((((_780 * _776) + TEXCOORD) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((_774 * _780) + TEXCOORD_1) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _823 = ((_812.x - _809) * _791) + _809;
    float _830 = exp2(log2(_823 * cbMtdParam._m0[23u].z) * cbMtdParam._m0[23u].w);
    float _831 = isnan(cbMtdParam._m0[24u].x) ? _830 : (isnan(_830) ? cbMtdParam._m0[24u].x : max(_830, cbMtdParam._m0[24u].x));
    vec4 _852 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_28, SS_WrapLinear), vec2(_759, _760));
    float _856 = _766 * cbMtdParam._m0[25u].w;
    float _861 = ((_852.y * 0.5) + (-0.25)) * cbMtdParam._m0[25u].z;
    float _863 = (-0.0) - (cbMtdParam._m0[25u].z * ((_852.x * 0.5) + (-0.25)));
    float _864 = fract(_856);
    float _866 = fract(_856 + 0.5);
    float _877 = abs((_864 * 2.0) + (-1.0));
    vec4 _893 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_29, SS_DiffuseMap), vec2((((_864 * _863) + TEXCOORD) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_861 * _864) + TEXCOORD_1) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _895 = _893.x;
    float _896 = _893.y;
    float _897 = _893.z;
    vec4 _898 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_29, SS_DiffuseMap), vec2((((_866 * _863) + TEXCOORD) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_861 * _866) + TEXCOORD_1) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _932 = ((_596.x - _616) * _357) + _616;
    float _933 = ((_596.y - _617) * _357) + _617;
    float _938 = ((_635.x - _932) * _435) + _932;
    float _939 = ((_635.y - _933) * _435) + _933;
    float _948 = ((((_666.x - _938) * _332) + _938) * 2.0) + (-1.0);
    float _949 = ((((_666.y - _939) * _332) + _939) * 2.0) + (-1.0);
    float _950 = dot(vec2(_948, _949), vec2(_948, _949));
    float _4326 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
    float _955 = sqrt(1.0 - (isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0))));
    float _971 = (((cbMtdParam._m0[20u].w * ((_346.x * 2.0) + (-1.0))) + _948) + (((((_687.x * 2.0) + (-1.0)) * TEXCOORD_3.x) * cbMtdParam._m0[21u].x) * _579)) + ((((_715.x * 2.0) + (-1.0)) * _557) * cbMtdParam._m0[21u].y);
    float _972 = (((cbMtdParam._m0[20u].w * ((_346.y * 2.0) + (-1.0))) + _949) + (((((_687.y * 2.0) + (-1.0)) * TEXCOORD_3.y) * cbMtdParam._m0[21u].x) * _579)) + (((cbMtdParam._m0[22u].z * TEXCOORD_7) * ((_715.y * 2.0) + (-1.0))) * cbMtdParam._m0[21u].y);
    float _975 = fma(_955, _242 * NORMAL.x, fma(_972, _249 * TANGENT.x, (_235 * _227) * _971));
    float _978 = fma(_955, _242 * NORMAL.y, fma(_972, _249 * TANGENT.y, (_235 * _228) * _971));
    float _981 = fma(_955, _242 * NORMAL.z, fma(_972, _249 * TANGENT.z, (_235 * _229) * _971));
    float _985 = inversesqrt(dot(vec3(_975, _978, _981), vec3(_975, _978, _981)));
    float _986 = _985 * _975;
    float _987 = _985 * _978;
    float _988 = _985 * _981;
    float _4337 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
    float _989 = isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0));
    float _4348 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    float _4359 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
    float _4370 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _4381 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    float _993 = isnan(1.0) ? _4381 : (isnan(_4381) ? 1.0 : min(_4381, 1.0));
    float _1009 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1050 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1060 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1050);
    float _1061 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1050);
    float _1062 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1050);
    float _1066 = inversesqrt(dot(vec3(_1060, _1061, _1062), vec3(_1060, _1061, _1062)));
    float _1067 = _1060 * _1066;
    float _1068 = _1061 * _1066;
    float _1069 = _1062 * _1066;
    vec4 _1074 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1076 = _1074.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1248 = sqrt(((_1060 * _1060) + (_1061 * _1061)) + (_1062 * _1062));
        float _1254 = (cbMatDynParam._m0[5u].x * _1248) + cbMatDynParam._m0[5u].y;
        float _4392 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
        float _1255 = isnan(1.0) ? _4392 : (isnan(_4392) ? 1.0 : min(_4392, 1.0));
        float _1259 = (cbMatDynParam._m0[5u].z * _1248) + cbMatDynParam._m0[5u].w;
        float _4403 = isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4403 : (isnan(_4403) ? 1.0 : min(_4403, 1.0))) - _1255)) + _1255) < ((_1076 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1087 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1088 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1106 = fma(_988, cbSceneParam._m0[5u].z, fma(_987, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _986));
    float _1109 = fma(_988, cbSceneParam._m0[6u].z, fma(_987, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _986));
    float _1112 = fma(_988, cbSceneParam._m0[7u].z, fma(_987, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _986));
    uint _1125 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1126 = _1125 + 9u;
    uint _1127 = _1126 + uint(cbMatDynParam._m0[0u].w);
    float _1133 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0)))) * cbInstanceData._m0[_1127].x;
    float _1134 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4359 : (isnan(_4359) ? 1.0 : min(_4359, 1.0)))) * cbInstanceData._m0[_1127].y;
    float _1135 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4370 : (isnan(_4370) ? 1.0 : min(_4370, 1.0)))) * cbInstanceData._m0[_1127].z;
    float _4414 = isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0));
    float _1136 = isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0));
    float _4425 = isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0));
    float _1137 = isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0));
    float _4436 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
    float _1138 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
    float _1139 = 1.0 - _993;
    float _1140 = _1136 * _1139;
    float _1141 = _1137 * _1139;
    float _1142 = _1138 * _1139;
    float _1147 = (_1136 + (-0.039999999105930328369140625)) * _993;
    float _1148 = (_1137 + (-0.039999999105930328369140625)) * _993;
    float _1149 = (_1138 + (-0.039999999105930328369140625)) * _993;
    float _1150 = _1147 + 0.039999999105930328369140625;
    float _1152 = _1148 + 0.039999999105930328369140625;
    float _1153 = _1149 + 0.039999999105930328369140625;
    vec4 _1162 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1087, cbSceneParam._m0[86u].y * _1088));
    float _1165 = _1162.x * TEXCOORD_3.w;
    float _1166 = dot(vec3(_986, _987, _988), vec3(_1067, _1068, _1069));
    float _1169 = _1166 * 2.0;
    float _1173 = (_1169 * _986) - _1067;
    float _1174 = (_1169 * _987) - _1068;
    float _1175 = (_1169 * _988) - _1069;
    float _1179 = abs(dot(vec3(_1067, _1068, _1069), vec3(_986, _987, _988)));
    float _4447 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
    float _1181 = sqrt(_989);
    float _1194 = exp2((_1181 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1181 * 3.0));
    float _1200 = (1.0 - _1194) * ((_1181 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1201 = _1194 * _1181;
    float _1229 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1233 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1237 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1566;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    float _1575;
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    float _1581;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1292 = fma(_1237, cbModelParam._m0[26u].z, fma(_1233, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1229));
        float _1296 = fma(_1237, cbModelParam._m0[27u].z, fma(_1233, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1229));
        float _1300 = fma(_1237, cbModelParam._m0[28u].z, fma(_1233, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1229));
        float _1324 = _1229 + _986;
        float _1325 = _1233 + _987;
        float _1326 = _1237 + _988;
        float _1336 = fma(_1326, cbModelParam._m0[26u].z, fma(_1325, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1324)) - _1292;
        float _1337 = fma(_1326, cbModelParam._m0[27u].z, fma(_1325, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1324)) - _1296;
        float _1338 = fma(_1326, cbModelParam._m0[28u].z, fma(_1325, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1324)) - _1300;
        float _1342 = inversesqrt(dot(vec3(_1336, _1337, _1338), vec3(_1336, _1337, _1338)));
        float _1355 = ((_1342 * _1336) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1292 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1356 = ((_1342 * _1337) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1296 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1357 = ((_1342 * _1338) / cbModelParam._m0[34u].z) + ((((((_1300 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1360 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1355, _1356, _1357), 0.0);
        vec4 _1367 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1355, _1356, _1357), 0.0);
        vec4 _1374 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1355, _1356, _1357), 0.0);
        vec4 _1381 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1355, _1356, _1357), 0.0);
        float _1394 = exp2((_1360.w + (-0.5)) * 20.0) * 2.0;
        float _1395 = _1394 * (_1360.x + (-0.5));
        float _1396 = _1394 * (_1360.y + (-0.5));
        float _1397 = _1394 * (_1360.z + (-0.5));
        float _1404 = exp2((_1367.w + (-0.5)) * 20.0) * 2.0;
        float _1405 = _1404 * (_1367.x + (-0.5));
        float _1406 = _1404 * (_1367.y + (-0.5));
        float _1407 = _1404 * (_1367.z + (-0.5));
        float _1414 = exp2((_1374.w + (-0.5)) * 20.0) * 2.0;
        float _1415 = _1414 * (_1374.x + (-0.5));
        float _1416 = _1414 * (_1374.y + (-0.5));
        float _1417 = _1414 * (_1374.z + (-0.5));
        float _1424 = exp2((_1381.w + (-0.5)) * 20.0) * 2.0;
        float _1425 = _1424 * (_1381.x + (-0.5));
        float _1426 = _1424 * (_1381.y + (-0.5));
        float _1427 = _1424 * (_1381.z + (-0.5));
        float _1428 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1429 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1430 = isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0));
        float _1431 = _1395 * 0.5;
        float _1432 = _1405 * 0.5;
        float _1433 = _1415 * 0.5;
        float _1434 = dot(vec3(_1431, _1432, _1433), vec3(_1431, _1432, _1433));
        float _1439 = (_1434 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1434);
        float _1448 = (dot(vec3(_986, _987, _988), vec3(_1439 * _1431, _1439 * _1432, _1439 * _1433)) + 1.0) * 0.5;
        float _4473 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
        float _1458 = sqrt(((_1432 * _1432) + (_1431 * _1431)) + (_1433 * _1433)) / (_1428 + 9.9999997473787516355514526367188e-06);
        float _4484 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1459 = isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0));
        float _1460 = _1459 * 2.0;
        float _1464 = (1.0 - _1459) / (_1459 + 1.0);
        float _4495 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
        float _1465 = isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0));
        float _1474 = ((((1.0 - _1465) * (_1460 + 2.0)) * exp2(log2(isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0))) * (_1460 + 1.0))) + _1465) * _1428;
        float _1475 = _1396 * 0.5;
        float _1476 = _1406 * 0.5;
        float _1477 = _1416 * 0.5;
        float _1478 = dot(vec3(_1475, _1476, _1477), vec3(_1475, _1476, _1477));
        float _1483 = (_1478 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1478);
        float _1491 = (dot(vec3(_986, _987, _988), vec3(_1483 * _1475, _1483 * _1476, _1483 * _1477)) + 1.0) * 0.5;
        float _4506 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1500 = sqrt(((_1476 * _1476) + (_1475 * _1475)) + (_1477 * _1477)) / (_1429 + 9.9999997473787516355514526367188e-06);
        float _4517 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _4517 : (isnan(_4517) ? 1.0 : min(_4517, 1.0));
        float _1502 = _1501 * 2.0;
        float _1506 = (1.0 - _1501) / (_1501 + 1.0);
        float _4528 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1507 = isnan(1.0) ? _4528 : (isnan(_4528) ? 1.0 : min(_4528, 1.0));
        float _1516 = ((((1.0 - _1507) * (_1502 + 2.0)) * exp2(log2(isnan(1.0) ? _4506 : (isnan(_4506) ? 1.0 : min(_4506, 1.0))) * (_1502 + 1.0))) + _1507) * _1429;
        float _1517 = _1397 * 0.5;
        float _1518 = _1407 * 0.5;
        float _1519 = _1417 * 0.5;
        float _1520 = dot(vec3(_1517, _1518, _1519), vec3(_1517, _1518, _1519));
        float _1525 = (_1520 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1520);
        float _1533 = (dot(vec3(_986, _987, _988), vec3(_1525 * _1517, _1525 * _1518, _1525 * _1519)) + 1.0) * 0.5;
        float _4539 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1542 = sqrt(((_1518 * _1518) + (_1517 * _1517)) + (_1519 * _1519)) / (_1430 + 9.9999997473787516355514526367188e-06);
        float _4550 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1543 = isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0));
        float _1544 = _1543 * 2.0;
        float _1548 = (1.0 - _1543) / (_1543 + 1.0);
        float _4561 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
        float _1549 = isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0));
        float _1558 = ((((1.0 - _1549) * (_1544 + 2.0)) * exp2(log2(isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0))) * (_1544 + 1.0))) + _1549) * _1430;
        _1566 = _1397;
        _1568 = _1396;
        _1569 = _1395;
        _1570 = _1407;
        _1571 = _1406;
        _1572 = _1405;
        _1573 = _1417;
        _1574 = _1416;
        _1575 = _1415;
        _1576 = _1430;
        _1577 = _1429;
        _1578 = _1428;
        _1579 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0)));
        _1580 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0)));
        _1581 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0)));
    }
    else
    {
        _1566 = _1567;
        _1568 = _1567;
        _1569 = _1567;
        _1570 = _1567;
        _1571 = _1567;
        _1572 = _1567;
        _1573 = _1567;
        _1574 = _1567;
        _1575 = _1567;
        _1576 = _1567;
        _1577 = _1567;
        _1578 = _1567;
        _1579 = 0.0;
        _1580 = 0.0;
        _1581 = 0.0;
    }
    float _1879;
    float _1880;
    float _1881;
    float _1882;
    float _1883;
    float _1884;
    float _1885;
    float _1886;
    float _1887;
    float _1888;
    float _1889;
    float _1890;
    float _1891;
    float _1892;
    float _1893;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1610 = fma(_1237, cbModelParam._m0[30u].z, fma(_1233, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1229));
        float _1614 = fma(_1237, cbModelParam._m0[31u].z, fma(_1233, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1229));
        float _1618 = fma(_1237, cbModelParam._m0[32u].z, fma(_1233, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1229));
        float _1641 = _1229 + _986;
        float _1642 = _1233 + _987;
        float _1643 = _1237 + _988;
        float _1653 = fma(_1643, cbModelParam._m0[30u].z, fma(_1642, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1641)) - _1610;
        float _1654 = fma(_1643, cbModelParam._m0[31u].z, fma(_1642, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1641)) - _1614;
        float _1655 = fma(_1643, cbModelParam._m0[32u].z, fma(_1642, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1641)) - _1618;
        float _1659 = inversesqrt(dot(vec3(_1653, _1654, _1655), vec3(_1653, _1654, _1655)));
        float _1672 = ((_1659 * _1653) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1610 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1673 = ((_1659 * _1654) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1614 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1674 = ((_1659 * _1655) / cbModelParam._m0[35u].z) + ((((((_1618 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1676 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1672, _1673, _1674), 0.0);
        vec4 _1683 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1672, _1673, _1674), 0.0);
        vec4 _1690 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1672, _1673, _1674), 0.0);
        vec4 _1697 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1672, _1673, _1674), 0.0);
        float _1709 = exp2((_1676.w + (-0.5)) * 20.0) * 2.0;
        float _1710 = _1709 * (_1676.x + (-0.5));
        float _1711 = _1709 * (_1676.y + (-0.5));
        float _1712 = _1709 * (_1676.z + (-0.5));
        float _1719 = exp2((_1683.w + (-0.5)) * 20.0) * 2.0;
        float _1720 = _1719 * (_1683.x + (-0.5));
        float _1721 = _1719 * (_1683.y + (-0.5));
        float _1722 = _1719 * (_1683.z + (-0.5));
        float _1729 = exp2((_1690.w + (-0.5)) * 20.0) * 2.0;
        float _1730 = _1729 * (_1690.x + (-0.5));
        float _1731 = _1729 * (_1690.y + (-0.5));
        float _1732 = _1729 * (_1690.z + (-0.5));
        float _1739 = exp2((_1697.w + (-0.5)) * 20.0) * 2.0;
        float _1740 = _1739 * (_1697.x + (-0.5));
        float _1741 = _1739 * (_1697.y + (-0.5));
        float _1742 = _1739 * (_1697.z + (-0.5));
        float _1743 = isnan(0.0) ? _1740 : (isnan(_1740) ? 0.0 : max(_1740, 0.0));
        float _1744 = isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0));
        float _1745 = isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0));
        float _1746 = _1710 * 0.5;
        float _1747 = _1720 * 0.5;
        float _1748 = _1730 * 0.5;
        float _1749 = dot(vec3(_1746, _1747, _1748), vec3(_1746, _1747, _1748));
        float _1754 = (_1749 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1749);
        float _1762 = (dot(vec3(_986, _987, _988), vec3(_1754 * _1746, _1754 * _1747, _1754 * _1748)) + 1.0) * 0.5;
        float _4602 = isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0));
        float _1771 = sqrt(((_1747 * _1747) + (_1746 * _1746)) + (_1748 * _1748)) / (_1743 + 9.9999997473787516355514526367188e-06);
        float _4613 = isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0));
        float _1772 = isnan(1.0) ? _4613 : (isnan(_4613) ? 1.0 : min(_4613, 1.0));
        float _1773 = _1772 * 2.0;
        float _1777 = (1.0 - _1772) / (_1772 + 1.0);
        float _4624 = isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0));
        float _1778 = isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0));
        float _1787 = ((((1.0 - _1778) * (_1773 + 2.0)) * exp2(log2(isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0))) * (_1773 + 1.0))) + _1778) * _1743;
        float _1788 = _1711 * 0.5;
        float _1789 = _1721 * 0.5;
        float _1790 = _1731 * 0.5;
        float _1791 = dot(vec3(_1788, _1789, _1790), vec3(_1788, _1789, _1790));
        float _1796 = (_1791 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1791);
        float _1804 = (dot(vec3(_986, _987, _988), vec3(_1796 * _1788, _1796 * _1789, _1796 * _1790)) + 1.0) * 0.5;
        float _4635 = isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0));
        float _1813 = sqrt(((_1789 * _1789) + (_1788 * _1788)) + (_1790 * _1790)) / (_1744 + 9.9999997473787516355514526367188e-06);
        float _4646 = isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0));
        float _1814 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
        float _1815 = _1814 * 2.0;
        float _1819 = (1.0 - _1814) / (_1814 + 1.0);
        float _4657 = isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0));
        float _1820 = isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0));
        float _1829 = ((((1.0 - _1820) * (_1815 + 2.0)) * exp2(log2(isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0))) * (_1815 + 1.0))) + _1820) * _1744;
        float _1830 = _1712 * 0.5;
        float _1831 = _1722 * 0.5;
        float _1832 = _1732 * 0.5;
        float _1833 = dot(vec3(_1830, _1831, _1832), vec3(_1830, _1831, _1832));
        float _1838 = (_1833 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1833);
        float _1846 = (dot(vec3(_986, _987, _988), vec3(_1838 * _1830, _1838 * _1831, _1838 * _1832)) + 1.0) * 0.5;
        float _4668 = isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0));
        float _1855 = sqrt(((_1831 * _1831) + (_1830 * _1830)) + (_1832 * _1832)) / (_1745 + 9.9999997473787516355514526367188e-06);
        float _4679 = isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0));
        float _1856 = isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0));
        float _1857 = _1856 * 2.0;
        float _1861 = (1.0 - _1856) / (_1856 + 1.0);
        float _4690 = isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0));
        float _1862 = isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0));
        float _1871 = ((((1.0 - _1862) * (_1857 + 2.0)) * exp2(log2(isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0))) * (_1857 + 1.0))) + _1862) * _1745;
        _1879 = _1712;
        _1880 = _1711;
        _1881 = _1710;
        _1882 = _1722;
        _1883 = _1721;
        _1884 = _1720;
        _1885 = _1732;
        _1886 = _1731;
        _1887 = _1730;
        _1888 = _1745;
        _1889 = _1744;
        _1890 = _1743;
        _1891 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0)));
        _1892 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0)));
        _1893 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0)));
    }
    else
    {
        _1879 = _1567;
        _1880 = _1567;
        _1881 = _1567;
        _1882 = _1567;
        _1883 = _1567;
        _1884 = _1567;
        _1885 = _1567;
        _1886 = _1567;
        _1887 = _1567;
        _1888 = _1567;
        _1889 = _1567;
        _1890 = _1567;
        _1891 = 0.0;
        _1892 = 0.0;
        _1893 = 0.0;
    }
    float _1903 = (cbModelParam._m0[1u].x * (_1891 - _1579)) + _1579;
    float _1904 = (cbModelParam._m0[1u].x * (_1892 - _1580)) + _1580;
    float _1905 = (cbModelParam._m0[1u].x * (_1893 - _1581)) + _1581;
    float _1926 = fma(_1905, cbSceneParam._m0[89u].z, fma(_1904, cbSceneParam._m0[89u].y, _1903 * cbSceneParam._m0[89u].x));
    float _1929 = fma(_1905, cbSceneParam._m0[90u].z, fma(_1904, cbSceneParam._m0[90u].y, _1903 * cbSceneParam._m0[90u].x));
    float _1932 = fma(_1905, cbSceneParam._m0[91u].z, fma(_1904, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1903));
    float _1947 = _1173 * 0.5;
    float _1948 = _1174 * 0.5;
    float _1949 = _1175 * 0.5;
    float _1950 = dot(vec4(_1947, _1948, _1949, 1.0), vec4(_1881, _1884, _1887, _1890));
    float _1953 = dot(vec4(_1947, _1948, _1949, 1.0), vec4(_1880, _1883, _1886, _1889));
    float _1956 = dot(vec4(_1947, _1948, _1949, 1.0), vec4(_1879, _1882, _1885, _1888));
    float _1990;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1963 = dot(vec4(_1947, _1948, _1949, 1.0), vec4(_1566, _1570, _1573, _1576));
        float _1967 = dot(vec4(_1947, _1948, _1949, 1.0), vec4(_1568, _1571, _1574, _1577));
        float _1971 = dot(vec4(_1947, _1948, _1949, 1.0), vec4(_1569, _1572, _1575, _1578));
        float _1978 = dot(vec4(cbModelParam._m0[39u]), vec4(_1947, _1948, _1949, 1.0));
        _1990 = dot(vec3(isnan(0.0) ? _1971 : (isnan(_1971) ? 0.0 : max(_1971, 0.0)), isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0)), isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1978) ? 0.0 : (isnan(0.0) ? _1978 : max(0.0, _1978))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1990 = 1.0;
    }
    float _2001;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1992 = dot(vec4(cbModelParam._m0[40u]), vec4(_1947, _1948, _1949, 1.0));
        _2001 = dot(vec3(isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0)), isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0)), isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1992) ? 0.0 : (isnan(0.0) ? _1992 : max(0.0, _1992))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2001 = 1.0;
    }
    float _2005 = (_2001 * cbModelParam._m0[1u].x) + (_1990 * (1.0 - cbModelParam._m0[1u].x));
    float _2015 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _989);
    float _2016 = isnan(_2015) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2015 : min(cbModelParam._m0[25u].z, _2015));
    float _2096;
    float _2098;
    float _2100;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2063 = fma(_1237, cbModelParam._m0[13u].z, fma(_1233, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1229)) + cbModelParam._m0[13u].w;
        float _2067 = fma(_1237, cbModelParam._m0[14u].z, fma(_1233, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1229)) + cbModelParam._m0[14u].w;
        float _2071 = fma(_1237, cbModelParam._m0[15u].z, fma(_1233, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1229)) + cbModelParam._m0[15u].w;
        float _2074 = fma(_1175, cbModelParam._m0[13u].z, fma(_1174, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1173));
        float _2077 = fma(_1175, cbModelParam._m0[14u].z, fma(_1174, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1173));
        float _2080 = fma(_1175, cbModelParam._m0[15u].z, fma(_1174, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1173));
        float _2108;
        if (_2074 > 0.0)
        {
            _2108 = abs((1.0 - _2063) / _2074);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2074 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2063 + 1.0) / _2074);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2108 = frontier_phi_17_15_ladder;
        }
        float _2279;
        if (_2077 > 0.0)
        {
            _2279 = abs((1.0 - _2067) / _2077);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2077 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2067 + 1.0) / _2077);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2279 = frontier_phi_26_22_ladder;
        }
        float _2574;
        if (_2080 > 0.0)
        {
            _2574 = abs((1.0 - _2071) / _2080);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2080 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2071 + 1.0) / _2080);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2574 = frontier_phi_38_33_ladder;
        }
        float _2576 = isnan(_2279) ? _2108 : (isnan(_2108) ? _2279 : min(_2108, _2279));
        float _2577 = isnan(_2574) ? _2576 : (isnan(_2576) ? _2574 : min(_2576, _2574));
        float _2581 = (_2577 * _2074) + _2063;
        float _2582 = (_2577 * _2077) + _2067;
        float _2583 = (_2577 * _2080) + _2071;
        float _2584 = _2577 * 9.9999997473787516355514526367188e-05;
        float _2586 = (-1.0) - _2584;
        float _2588 = _2584 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2583 > _2588) || ((_2583 < _2586) || ((_2582 > _2588) || ((_2582 < _2586) || ((_2581 < _2586) || (_2581 > _2588))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2728 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2583, cbModelParam._m0[9u].z, fma(_2582, cbModelParam._m0[9u].y, _2581 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2583, cbModelParam._m0[10u].z, fma(_2582, cbModelParam._m0[10u].y, _2581 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2583, cbModelParam._m0[11u].z, fma(_2582, cbModelParam._m0[11u].y, _2581 * cbModelParam._m0[11u].x))), _2016);
            frontier_phi_16_38_ladder = _2728.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2728.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2728.x * cbModelParam._m0[1u].y;
        }
        _2096 = frontier_phi_16_38_ladder_2;
        _2098 = frontier_phi_16_38_ladder_1;
        _2100 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2084 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1173, _1174, _1175), _2016);
        _2096 = _2084.x * cbModelParam._m0[1u].y;
        _2098 = _2084.y * cbModelParam._m0[1u].y;
        _2100 = _2084.z * cbModelParam._m0[1u].y;
    }
    float _2104 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _989);
    float _2105 = isnan(_2104) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2104 : min(cbModelParam._m0[25u].w, _2104));
    float _2194;
    float _2196;
    float _2198;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2158 = fma(_1237, cbModelParam._m0[21u].z, fma(_1233, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1229)) + cbModelParam._m0[21u].w;
        float _2162 = fma(_1237, cbModelParam._m0[22u].z, fma(_1233, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1229)) + cbModelParam._m0[22u].w;
        float _2166 = fma(_1237, cbModelParam._m0[23u].z, fma(_1233, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1229)) + cbModelParam._m0[23u].w;
        float _2169 = fma(_1175, cbModelParam._m0[21u].z, fma(_1174, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1173));
        float _2172 = fma(_1175, cbModelParam._m0[22u].z, fma(_1174, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1173));
        float _2175 = fma(_1175, cbModelParam._m0[23u].z, fma(_1174, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1173));
        float _2284;
        if (_2169 > 0.0)
        {
            _2284 = abs((1.0 - _2158) / _2169);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2169 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2158 + 1.0) / _2169);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2284 = frontier_phi_28_24_ladder;
        }
        float _2601;
        if (_2172 > 0.0)
        {
            _2601 = abs((1.0 - _2162) / _2172);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2172 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2162 + 1.0) / _2172);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2601 = frontier_phi_40_35_ladder;
        }
        float _2939;
        if (_2175 > 0.0)
        {
            _2939 = abs((1.0 - _2166) / _2175);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2175 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2166 + 1.0) / _2175);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2939 = frontier_phi_50_47_ladder;
        }
        float _2941 = isnan(_2601) ? _2284 : (isnan(_2284) ? _2601 : min(_2284, _2601));
        float _2942 = isnan(_2939) ? _2941 : (isnan(_2941) ? _2939 : min(_2941, _2939));
        float _2946 = (_2942 * _2169) + _2158;
        float _2947 = (_2942 * _2172) + _2162;
        float _2948 = (_2942 * _2175) + _2166;
        float _2949 = _2942 * 9.9999997473787516355514526367188e-05;
        float _2950 = (-1.0) - _2949;
        float _2952 = _2949 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2948 > _2952) || ((_2948 < _2950) || ((_2947 > _2952) || ((_2947 < _2950) || ((_2946 < _2950) || (_2946 > _2952))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3070 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2948, cbModelParam._m0[17u].z, fma(_2947, cbModelParam._m0[17u].y, _2946 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2948, cbModelParam._m0[18u].z, fma(_2947, cbModelParam._m0[18u].y, _2946 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2948, cbModelParam._m0[19u].z, fma(_2947, cbModelParam._m0[19u].y, _2946 * cbModelParam._m0[19u].x))), _2105);
            frontier_phi_25_50_ladder = _3070.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _3070.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _3070.x * cbModelParam._m0[1u].z;
        }
        _2194 = frontier_phi_25_50_ladder_2;
        _2196 = frontier_phi_25_50_ladder_1;
        _2198 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2178 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1173, _1174, _1175), _2105);
        _2194 = _2178.x * cbModelParam._m0[1u].z;
        _2196 = _2178.y * cbModelParam._m0[1u].z;
        _2198 = _2178.z * cbModelParam._m0[1u].z;
    }
    float _2211 = (((_1200 * _1150) + _1201) * _1165) * ((cbModelParam._m0[1u].w * (_2194 - _2096)) + _2096);
    float _2213 = (((_1200 * _1152) + _1201) * _1165) * ((cbModelParam._m0[1u].w * (_2196 - _2098)) + _2098);
    float _2215 = (((_1200 * _1153) + _1201) * _1165) * ((cbModelParam._m0[1u].w * (_2198 - _2100)) + _2100);
    float _2218 = fma(_2215, cbSceneParam._m0[89u].z, fma(_2213, cbSceneParam._m0[89u].y, _2211 * cbSceneParam._m0[89u].x));
    float _2221 = fma(_2215, cbSceneParam._m0[90u].z, fma(_2213, cbSceneParam._m0[90u].y, _2211 * cbSceneParam._m0[90u].x));
    float _2224 = fma(_2215, cbSceneParam._m0[91u].z, fma(_2213, cbSceneParam._m0[91u].y, _2211 * cbSceneParam._m0[91u].x));
    float _2258 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2262 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2266 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2270 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2271 = _2258 / _2270;
    float _2272 = _2262 / _2270;
    float _2273 = _2266 / _2270;
    float _2420;
    float _2421;
    float _2422;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2300 = ((uint(_2273 > cbSceneParam._m0[59u].y) + uint(_2273 > cbSceneParam._m0[59u].x)) + uint(_2273 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2301 = _2300 + 43u;
        uint _2309 = _2300 + 44u;
        uint _2317 = _2300 + 45u;
        uint _2325 = _2300 + 46u;
        float _2336 = fma(_2270, cbSceneParam._m0[_2301].w, fma(_2266, cbSceneParam._m0[_2301].z, fma(_2262, cbSceneParam._m0[_2301].y, _2258 * cbSceneParam._m0[_2301].x)));
        float _2340 = fma(_2270, cbSceneParam._m0[_2309].w, fma(_2266, cbSceneParam._m0[_2309].z, fma(_2262, cbSceneParam._m0[_2309].y, _2258 * cbSceneParam._m0[_2309].x)));
        float _2348 = fma(_2270, cbSceneParam._m0[_2325].w, fma(_2266, cbSceneParam._m0[_2325].z, fma(_2262, cbSceneParam._m0[_2325].y, _2258 * cbSceneParam._m0[_2325].x)));
        float _2353 = cbSceneParam._m0[33u].z * _2348;
        float _2355 = cbSceneParam._m0[33u].w * _2348;
        float _2358 = fma(_2270, cbSceneParam._m0[_2317].w, fma(_2266, cbSceneParam._m0[_2317].z, fma(_2262, cbSceneParam._m0[_2317].y, _2258 * cbSceneParam._m0[_2317].x))) / _2348;
        float _2406 = (cbSceneParam._m0[33u].x - sqrt(((_2272 * _2272) + (_2271 * _2271)) + (_2273 * _2273))) * cbSceneParam._m0[33u].y;
        float _4816 = isnan(0.0) ? _2406 : (isnan(_2406) ? 0.0 : max(_2406, 0.0));
        float _2413 = (isnan(1.0) ? _4816 : (isnan(_4816) ? 1.0 : min(_4816, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2353 + _2336) / _2348, (_2355 + _2340) / _2348), _2358), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2355 + _2336) / _2348, (_2340 - _2353) / _2348), _2358), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2336 - _2353) / _2348, (_2340 - _2355) / _2348), _2358), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2336 - _2355) / _2348, (_2353 + _2340) / _2348), _2358), 0.0)).x), vec4(0.25)));
        _2420 = 1.0 - (_2413 * cbSceneParam._m0[34u].x);
        _2421 = 1.0 - (_2413 * cbSceneParam._m0[34u].y);
        _2422 = 1.0 - (_2413 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2420 = 1.0;
        _2421 = 1.0;
        _2422 = 1.0;
    }
    float _2486;
    float _2488;
    float _2490;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2474 = fma(_2270, cbSceneParam._m0[63u].w, fma(_2266, cbSceneParam._m0[63u].z, fma(_2262, cbSceneParam._m0[63u].y, _2258 * cbSceneParam._m0[63u].x)));
        float _2475 = fma(_2270, cbSceneParam._m0[60u].w, fma(_2266, cbSceneParam._m0[60u].z, fma(_2262, cbSceneParam._m0[60u].y, _2258 * cbSceneParam._m0[60u].x))) / _2474;
        float _2476 = fma(_2270, cbSceneParam._m0[61u].w, fma(_2266, cbSceneParam._m0[61u].z, fma(_2262, cbSceneParam._m0[61u].y, _2258 * cbSceneParam._m0[61u].x))) / _2474;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2475 >= cbSceneParam._m0[64u].x) && (_2476 >= cbSceneParam._m0[64u].y)) && (_2475 <= cbSceneParam._m0[64u].z)) && (_2476 <= cbSceneParam._m0[64u].w))
        {
            float _2614 = fma(_2270, cbSceneParam._m0[62u].w, fma(_2266, cbSceneParam._m0[62u].z, fma(_2262, cbSceneParam._m0[62u].y, _2258 * cbSceneParam._m0[62u].x))) / _2474;
            float _2618 = isnan(cbSceneParam._m0[41u].w) ? _2614 : (isnan(_2614) ? cbSceneParam._m0[41u].w : max(_2614, cbSceneParam._m0[41u].w));
            float _2661 = (cbSceneParam._m0[33u].x - sqrt(((_2272 * _2272) + (_2271 * _2271)) + (_2273 * _2273))) * cbSceneParam._m0[33u].y;
            float _4832 = isnan(0.0) ? _2661 : (isnan(_2661) ? 0.0 : max(_2661, 0.0));
            float _2668 = (isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2475, cbSceneParam._m0[33u].w + _2476), _2618), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2475, _2476 - cbSceneParam._m0[33u].z), _2618), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2475 - cbSceneParam._m0[33u].z, _2476 - cbSceneParam._m0[33u].w), _2618), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2475 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2476), _2618), 0.0)).x), vec4(0.25)));
            float _2672 = 1.0 - (_2668 * cbSceneParam._m0[34u].x);
            float _2673 = 1.0 - (_2668 * cbSceneParam._m0[34u].y);
            float _2674 = 1.0 - (_2668 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2674) ? _2422 : (isnan(_2422) ? _2674 : min(_2422, _2674));
            frontier_phi_37_36_ladder_1 = isnan(_2673) ? _2421 : (isnan(_2421) ? _2673 : min(_2421, _2673));
            frontier_phi_37_36_ladder_2 = isnan(_2672) ? _2420 : (isnan(_2420) ? _2672 : min(_2420, _2672));
        }
        else
        {
            frontier_phi_37_36_ladder = _2422;
            frontier_phi_37_36_ladder_1 = _2421;
            frontier_phi_37_36_ladder_2 = _2420;
        }
        _2486 = frontier_phi_37_36_ladder_2;
        _2488 = frontier_phi_37_36_ladder_1;
        _2490 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2486 = _2420;
        _2488 = _2421;
        _2490 = _2422;
    }
    uvec4 _2495 = floatBitsToUint(cbInstanceData._m0[_1125 + 5u]);
    uint _2497 = _2495.x * 14u;
    uint _2498 = _2497 + 13u;
    float _2505 = _1165 + (-1.0);
    float _2510 = (cbLight._m0[_2498].x * _2505) + 1.0;
    float _2511 = (cbLight._m0[_2498].y * _2505) + 1.0;
    float _2512 = (cbLight._m0[_2498].z * _2505) + 1.0;
    float _2513 = (cbLight._m0[_2498].w * _2505) + 1.0;
    uint _2514 = _2497 + 5u;
    float _2520 = isnan(1.0) ? _2511 : (isnan(_2511) ? 1.0 : min(_2511, 1.0));
    uint _2524 = _2497 + 4u;
    float _2533 = isnan(1.0) ? _2510 : (isnan(_2510) ? 1.0 : min(_2510, 1.0));
    uint _2537 = _2497 | 1u;
    float _2548 = dot(vec3(cbLight._m0[_2497].xyz), vec3(_986, _987, _988));
    float _2551 = dot(vec3(cbLight._m0[_2537].xyz), vec3(_986, _987, _988));
    float _4868 = isnan(0.0) ? _2548 : (isnan(_2548) ? 0.0 : max(_2548, 0.0));
    float _4879 = isnan(0.0) ? _2551 : (isnan(_2551) ? 0.0 : max(_2551, 0.0));
    float _2556 = (isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0))) * 0.3183098733425140380859375;
    float _2558 = (isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0))) * 0.3183098733425140380859375;
    float _2565 = ((cbLight._m0[_2514].x * _2520) * _2558) + (((cbLight._m0[_2524].x * _2486) * _2533) * _2556);
    float _2566 = ((_2520 * cbLight._m0[_2514].y) * _2558) + (((cbLight._m0[_2524].y * _2488) * _2533) * _2556);
    float _2567 = ((_2520 * cbLight._m0[_2514].z) * _2558) + (((cbLight._m0[_2524].z * _2490) * _2533) * _2556);
    uvec4 _2571 = floatBitsToUint(cbLight._m0[_2497 + 12u]);
    bool _2573 = _2571.x == 0u;
    float _2675;
    float _2677;
    float _2679;
    if (_2573)
    {
        _2675 = _2565;
        _2677 = _2566;
        _2679 = _2567;
    }
    else
    {
        uint _2683 = _2497 + 6u;
        float _2699 = (dot(vec3(cbLight._m0[_2497 + 2u].xyz), vec3(_986, _987, _988)) * 0.5) + 0.5;
        float _2700 = _2699 * _2699;
        float _4890 = isnan(0.0) ? _2700 : (isnan(_2700) ? 0.0 : max(_2700, 0.0));
        float _2701 = isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0));
        float _2702 = isnan(1.0) ? _2512 : (isnan(_2512) ? 1.0 : min(_2512, 1.0));
        _2675 = (((cbLight._m0[_2683].x * 0.3183098733425140380859375) * _2701) * _2702) + _2565;
        _2677 = (((cbLight._m0[_2683].y * 0.3183098733425140380859375) * _2701) * _2702) + _2566;
        _2679 = (((cbLight._m0[_2683].z * 0.3183098733425140380859375) * _2701) * _2702) + _2567;
    }
    bool _2682 = _2571.y == 0u;
    float _2737;
    float _2739;
    float _2741;
    if (_2682)
    {
        _2737 = _2675;
        _2739 = _2677;
        _2741 = _2679;
    }
    else
    {
        uint _2910 = _2497 + 7u;
        float _2926 = (dot(vec3(cbLight._m0[_2497 + 3u].xyz), vec3(_986, _987, _988)) * 0.5) + 0.5;
        float _2927 = _2926 * _2926;
        float _4906 = isnan(0.0) ? _2927 : (isnan(_2927) ? 0.0 : max(_2927, 0.0));
        float _2928 = isnan(1.0) ? _4906 : (isnan(_4906) ? 1.0 : min(_4906, 1.0));
        float _2929 = isnan(1.0) ? _2513 : (isnan(_2513) ? 1.0 : min(_2513, 1.0));
        _2737 = (((cbLight._m0[_2910].x * 0.3183098733425140380859375) * _2928) * _2929) + _2675;
        _2739 = (((cbLight._m0[_2910].y * 0.3183098733425140380859375) * _2928) * _2929) + _2677;
        _2741 = (((cbLight._m0[_2910].z * 0.3183098733425140380859375) * _2928) * _2929) + _2679;
    }
    uint _2744 = _2497 + 8u;
    float _2757 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2497].w)) * _989) * 0.949999988079071044921875);
    float _2758 = _2757 * _2757;
    float _2759 = cbLight._m0[_2497].x + _1067;
    float _2760 = cbLight._m0[_2497].y + _1068;
    float _2761 = cbLight._m0[_2497].z + _1069;
    float _2765 = inversesqrt(dot(vec3(_2759, _2760, _2761), vec3(_2759, _2760, _2761)));
    float _2766 = _2765 * _2759;
    float _2767 = _2765 * _2760;
    float _2768 = _2765 * _2761;
    float _2769 = dot(vec3(_986, _987, _988), vec3(cbLight._m0[_2497].xyz));
    float _4922 = isnan(0.0) ? _2769 : (isnan(_2769) ? 0.0 : max(_2769, 0.0));
    float _2772 = isnan(1.0) ? _4922 : (isnan(_4922) ? 1.0 : min(_4922, 1.0));
    float _4933 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
    float _2773 = isnan(1.0) ? _4933 : (isnan(_4933) ? 1.0 : min(_4933, 1.0));
    float _2774 = dot(vec3(_986, _987, _988), vec3(_2766, _2767, _2768));
    float _4944 = isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : max(_2774, 0.0));
    float _2777 = isnan(1.0) ? _4944 : (isnan(_4944) ? 1.0 : min(_4944, 1.0));
    float _2778 = dot(vec3(cbLight._m0[_2497].xyz), vec3(_2766, _2767, _2768));
    float _4955 = isnan(0.0) ? _2778 : (isnan(_2778) ? 0.0 : max(_2778, 0.0));
    float _2782 = _2758 * _2758;
    float _2786 = ((_2777 * _2777) * (_2782 + (-1.0))) + 1.0;
    float _2794 = exp2(log2(1.0 - (isnan(1.0) ? _4955 : (isnan(_4955) ? 1.0 : min(_4955, 1.0)))) * 5.0);
    float _2795 = 0.959999978542327880859375 - _1147;
    float _2797 = 0.959999978542327880859375 - _1148;
    float _2798 = 0.959999978542327880859375 - _1149;
    float _2805 = 1.0 - _2758;
    float _2816 = (0.5 / (((_2773 * ((_2772 * _2805) + _2758)) + 9.9999999392252902907785028219223e-09) + (((_2773 * _2805) + _2758) * _2772))) * _2772;
    float _4966 = isnan(0.0) ? _2816 : (isnan(_2816) ? 0.0 : max(_2816, 0.0));
    float _2818 = (isnan(1.0) ? _4966 : (isnan(_4966) ? 1.0 : min(_4966, 1.0))) * (_2782 / ((_2786 * _2786) * 3.141590118408203125));
    uint _2832 = _2497 + 9u;
    float _2843 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2537].w)) * _989) * 0.949999988079071044921875);
    float _2844 = _2843 * _2843;
    float _2845 = cbLight._m0[_2537].x + _1067;
    float _2846 = cbLight._m0[_2537].y + _1068;
    float _2847 = cbLight._m0[_2537].z + _1069;
    float _2851 = inversesqrt(dot(vec3(_2845, _2846, _2847), vec3(_2845, _2846, _2847)));
    float _2852 = _2851 * _2845;
    float _2853 = _2851 * _2846;
    float _2854 = _2851 * _2847;
    float _2855 = dot(vec3(_986, _987, _988), vec3(cbLight._m0[_2537].xyz));
    float _4977 = isnan(0.0) ? _2855 : (isnan(_2855) ? 0.0 : max(_2855, 0.0));
    float _2858 = isnan(1.0) ? _4977 : (isnan(_4977) ? 1.0 : min(_4977, 1.0));
    float _2859 = dot(vec3(_986, _987, _988), vec3(_2852, _2853, _2854));
    float _4988 = isnan(0.0) ? _2859 : (isnan(_2859) ? 0.0 : max(_2859, 0.0));
    float _2862 = isnan(1.0) ? _4988 : (isnan(_4988) ? 1.0 : min(_4988, 1.0));
    float _2863 = dot(vec3(cbLight._m0[_2537].xyz), vec3(_2852, _2853, _2854));
    float _4999 = isnan(0.0) ? _2863 : (isnan(_2863) ? 0.0 : max(_2863, 0.0));
    float _2867 = _2844 * _2844;
    float _2871 = ((_2862 * _2862) * (_2867 + (-1.0))) + 1.0;
    float _2878 = exp2(log2(1.0 - (isnan(1.0) ? _4999 : (isnan(_4999) ? 1.0 : min(_4999, 1.0)))) * 5.0);
    float _2885 = 1.0 - _2844;
    float _2895 = (0.5 / (((_2773 * ((_2858 * _2885) + _2844)) + 9.9999999392252902907785028219223e-09) + (((_2773 * _2885) + _2844) * _2858))) * _2858;
    float _5010 = isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0));
    float _2897 = (isnan(1.0) ? _5010 : (isnan(_5010) ? 1.0 : min(_5010, 1.0))) * (_2867 / ((_2871 * _2871) * 3.141590118408203125));
    float _2907 = (((((_2878 * _2795) + _1150) * cbLight._m0[_2832].x) * _2897) * _2520) + ((((cbLight._m0[_2744].x * _2486) * ((_2794 * _2795) + _1150)) * _2818) * _2533);
    float _2908 = (((((_2878 * _2797) + _1152) * cbLight._m0[_2832].y) * _2897) * _2520) + ((((cbLight._m0[_2744].y * _2488) * ((_2794 * _2797) + _1152)) * _2818) * _2533);
    float _2909 = (((((_2878 * _2798) + _1153) * cbLight._m0[_2832].z) * _2897) * _2520) + ((((cbLight._m0[_2744].z * _2490) * ((_2794 * _2798) + _1153)) * _2818) * _2533);
    float _2965;
    float _2967;
    float _2969;
    if (_2573)
    {
        _2965 = _2907;
        _2967 = _2908;
        _2969 = _2909;
    }
    else
    {
        uint _2971 = _2497 + 2u;
        uint _2975 = _2497 + 10u;
        float _2989 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2971].w)) * _989) * 0.949999988079071044921875);
        float _2990 = _2989 * _2989;
        float _2991 = cbLight._m0[_2971].x + _1067;
        float _2992 = cbLight._m0[_2971].y + _1068;
        float _2993 = cbLight._m0[_2971].z + _1069;
        float _2997 = inversesqrt(dot(vec3(_2991, _2992, _2993), vec3(_2991, _2992, _2993)));
        float _2998 = _2997 * _2991;
        float _2999 = _2997 * _2992;
        float _3000 = _2997 * _2993;
        float _3001 = dot(vec3(_986, _987, _988), vec3(cbLight._m0[_2971].xyz));
        float _5021 = isnan(0.0) ? _3001 : (isnan(_3001) ? 0.0 : max(_3001, 0.0));
        float _3004 = isnan(1.0) ? _5021 : (isnan(_5021) ? 1.0 : min(_5021, 1.0));
        float _3005 = dot(vec3(_986, _987, _988), vec3(_2998, _2999, _3000));
        float _5032 = isnan(0.0) ? _3005 : (isnan(_3005) ? 0.0 : max(_3005, 0.0));
        float _3008 = isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0));
        float _3009 = dot(vec3(cbLight._m0[_2971].xyz), vec3(_2998, _2999, _3000));
        float _5043 = isnan(0.0) ? _3009 : (isnan(_3009) ? 0.0 : max(_3009, 0.0));
        float _3013 = _2990 * _2990;
        float _3017 = ((_3008 * _3008) * (_3013 + (-1.0))) + 1.0;
        float _3024 = exp2(log2(1.0 - (isnan(1.0) ? _5043 : (isnan(_5043) ? 1.0 : min(_5043, 1.0)))) * 5.0);
        float _3031 = 1.0 - _2990;
        float _3041 = (0.5 / (((_2773 * ((_3004 * _3031) + _2990)) + 9.9999999392252902907785028219223e-09) + (((_2773 * _3031) + _2990) * _3004))) * _3004;
        float _5054 = isnan(0.0) ? _3041 : (isnan(_3041) ? 0.0 : max(_3041, 0.0));
        float _3043 = (isnan(1.0) ? _5054 : (isnan(_5054) ? 1.0 : min(_5054, 1.0))) * (_3013 / ((_3017 * _3017) * 3.141590118408203125));
        float _3044 = isnan(1.0) ? _2512 : (isnan(_2512) ? 1.0 : min(_2512, 1.0));
        _2965 = (((((_3024 * _2795) + _1150) * cbLight._m0[_2975].x) * _3043) * _3044) + _2907;
        _2967 = (((((_3024 * _2797) + _1152) * cbLight._m0[_2975].y) * _3043) * _3044) + _2908;
        _2969 = (((((_3024 * _2798) + _1153) * cbLight._m0[_2975].z) * _3043) * _3044) + _2909;
    }
    float _3075;
    float _3077;
    float _3079;
    if (_2682)
    {
        _3075 = _2965;
        _3077 = _2967;
        _3079 = _2969;
    }
    else
    {
        uint _3086 = _2497 + 3u;
        uint _3090 = _2497 + 11u;
        float _3104 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3086].w)) * _989) * 0.949999988079071044921875);
        float _3105 = _3104 * _3104;
        float _3106 = cbLight._m0[_3086].x + _1067;
        float _3107 = cbLight._m0[_3086].y + _1068;
        float _3108 = cbLight._m0[_3086].z + _1069;
        float _3112 = inversesqrt(dot(vec3(_3106, _3107, _3108), vec3(_3106, _3107, _3108)));
        float _3113 = _3112 * _3106;
        float _3114 = _3112 * _3107;
        float _3115 = _3112 * _3108;
        float _3116 = dot(vec3(_986, _987, _988), vec3(cbLight._m0[_3086].xyz));
        float _5070 = isnan(0.0) ? _3116 : (isnan(_3116) ? 0.0 : max(_3116, 0.0));
        float _3119 = isnan(1.0) ? _5070 : (isnan(_5070) ? 1.0 : min(_5070, 1.0));
        float _3120 = dot(vec3(_986, _987, _988), vec3(_3113, _3114, _3115));
        float _5081 = isnan(0.0) ? _3120 : (isnan(_3120) ? 0.0 : max(_3120, 0.0));
        float _3123 = isnan(1.0) ? _5081 : (isnan(_5081) ? 1.0 : min(_5081, 1.0));
        float _3124 = dot(vec3(cbLight._m0[_3086].xyz), vec3(_3113, _3114, _3115));
        float _5092 = isnan(0.0) ? _3124 : (isnan(_3124) ? 0.0 : max(_3124, 0.0));
        float _3128 = _3105 * _3105;
        float _3132 = ((_3123 * _3123) * (_3128 + (-1.0))) + 1.0;
        float _3139 = exp2(log2(1.0 - (isnan(1.0) ? _5092 : (isnan(_5092) ? 1.0 : min(_5092, 1.0)))) * 5.0);
        float _3146 = 1.0 - _3105;
        float _3156 = (0.5 / (((_2773 * ((_3119 * _3146) + _3105)) + 9.9999999392252902907785028219223e-09) + (((_2773 * _3146) + _3105) * _3119))) * _3119;
        float _5103 = isnan(0.0) ? _3156 : (isnan(_3156) ? 0.0 : max(_3156, 0.0));
        float _3158 = (isnan(1.0) ? _5103 : (isnan(_5103) ? 1.0 : min(_5103, 1.0))) * (_3128 / ((_3132 * _3132) * 3.141590118408203125));
        float _3159 = isnan(1.0) ? _2513 : (isnan(_2513) ? 1.0 : min(_2513, 1.0));
        _3075 = (((((_3139 * _2795) + _1150) * cbLight._m0[_3090].x) * _3158) * _3159) + _2965;
        _3077 = (((((_3139 * _2797) + _1152) * cbLight._m0[_3090].y) * _3158) * _3159) + _2967;
        _3079 = (((((_3139 * _2798) + _1153) * cbLight._m0[_3090].z) * _3158) * _3159) + _2969;
    }
    float _3225;
    float _3227;
    float _3229;
    float _3231;
    float _3233;
    float _3235;
    if (_2495.y == 0u)
    {
        uvec4 _3180 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3181 = _3180.x;
        uint _3192 = uint((float(_3180.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1088) / _3181))) + floor(float(uint(cbSceneParam._m0[85u].x * _1087) / _3181)));
        float _3202 = (log2(_2273 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3203 = isnan(0.0) ? _3202 : (isnan(_3202) ? 0.0 : max(_3202, 0.0));
        uint _3206 = uint(isnan(14.0) ? _3203 : (isnan(_3203) ? 14.0 : min(_3203, 14.0)));
        uvec4 _3211 = texelFetch(g_lightClusterGridBuffer, int(((_3206 << 2u) + (_3192 << 6u)) >> 2u));
        uint _3212 = _3211.x;
        uint _3213 = _3180.z;
        float _3315;
        float _3317;
        float _3319;
        float _3321;
        float _3323;
        float _3325;
        if (((((1u << ((_3213 >> 4u) & 15u)) + 4294967295u) & _3212) == 0u) || ((_3213 & 240u) == 0u))
        {
            _3315 = 0.0;
            _3317 = 0.0;
            _3319 = 0.0;
            _3321 = 0.0;
            _3323 = 0.0;
            _3325 = 0.0;
        }
        else
        {
            float _3316;
            float _3318;
            float _3320;
            float _3322;
            float _3324;
            float _3326;
            float _3466 = 0.0;
            float _3467 = 0.0;
            float _3468 = 0.0;
            float _3469 = 0.0;
            float _3470 = 0.0;
            float _3471 = 0.0;
            uint _3472 = 0u;
            uint _3481;
            bool _3482;
            for (;;)
            {
                _3481 = texelFetch(g_lightClassification, int((((_3206 << 5u) + (_3192 << 9u)) + (_3472 << 2u)) >> 2u)).x;
                _3482 = _3481 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3482)
                {
                    frontier_phi_71_pred = _3471;
                    frontier_phi_71_pred_1 = _3470;
                    frontier_phi_71_pred_2 = _3469;
                    frontier_phi_71_pred_3 = _3468;
                    frontier_phi_71_pred_4 = _3467;
                    frontier_phi_71_pred_5 = _3466;
                }
                else
                {
                    float _3611;
                    float _3612;
                    float _3613;
                    float _3614;
                    float _3615;
                    float _3616;
                    uint _3617;
                    _3611 = _3466;
                    _3612 = _3467;
                    _3613 = _3468;
                    _3614 = _3469;
                    _3615 = _3470;
                    _3616 = _3471;
                    _3617 = _3481;
                    float _3538;
                    float _3539;
                    float _3540;
                    float _3541;
                    float _3542;
                    float _3543;
                    for (;;)
                    {
                        uint _3621 = uint(findLSB(_3617)) + (_3472 << 5u);
                        uint _3618 = (_3617 + 4294967295u) & _3617;
                        uint _3623 = _3621 * 48u;
                        vec4 _3637 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3623)).x, texelFetch(g_PointLightRenderingBuffer, int(_3623 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3623 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3623 + 3u)).x));
                        uint _3643 = (_3621 * 48u) + 4u;
                        vec4 _3656 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3643)).x, texelFetch(g_PointLightRenderingBuffer, int(_3643 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3643 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3643 + 3u)).x));
                        uint _3662 = (_3621 * 48u) + 8u;
                        vec3 _3673 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3662)).x, texelFetch(g_PointLightRenderingBuffer, int(_3662 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3662 + 2u)).x));
                        float _3677 = _3637.x - _2271;
                        float _3678 = _3637.y - _2272;
                        float _3679 = _3637.z - _2273;
                        float _3680 = dot(vec3(_3677, _3678, _3679), vec3(_3677, _3678, _3679));
                        float _3683 = inversesqrt(_3680);
                        float _3684 = _3683 * _3677;
                        float _3685 = _3683 * _3678;
                        float _3686 = _3683 * _3679;
                        float _3687 = dot(vec3(_1106, _1109, _1112), vec3(_3684, _3685, _3686));
                        float _3692 = 1.0 - (_3680 * _3637.w);
                        float _5129 = isnan(0.0) ? _3692 : (isnan(_3692) ? 0.0 : max(_3692, 0.0));
                        float _3693 = isnan(1.0) ? _5129 : (isnan(_5129) ? 1.0 : min(_5129, 1.0));
                        float _3694 = sqrt(_3680) * _3656.w;
                        float _3697 = 1.39999997615814208984375 / (_3694 + 1.39999997615814208984375);
                        float _3698 = _3697 * _3697;
                        float _3701 = ((1.0 - _3698) * _3687) + _3698;
                        float _3704 = _3694 * _3694;
                        float _3708 = ((isnan(0.0) ? _3701 : (isnan(_3701) ? 0.0 : max(_3701, 0.0))) * _3693) / ((_3704 * 0.699999988079071044921875) + 1.0);
                        float _3712 = (-0.0) - _2271;
                        float _3713 = (-0.0) - _2272;
                        float _3714 = (-0.0) - _2273;
                        float _3718 = inversesqrt(dot(vec3(_3712, _3713, _3714), vec3(_3712, _3713, _3714)));
                        float _3719 = _3718 * _3712;
                        float _3720 = _3718 * _3713;
                        float _3721 = _3718 * _3714;
                        float _3728 = exp2(log2(1.0 / ((_3704 * 3.5) + 5.0)) * 0.25);
                        float _3729 = 1.0 - _1181;
                        float _3736 = sqrt(1.0 - ((1.0 - (_3729 * _3729)) * (1.0 - (_3728 * _3728))));
                        float _3737 = _3736 * _3736;
                        float _3738 = _3737 * _3737;
                        float _3739 = _3719 + _3684;
                        float _3740 = _3720 + _3685;
                        float _3741 = _3721 + _3686;
                        float _3745 = inversesqrt(dot(vec3(_3739, _3740, _3741), vec3(_3739, _3740, _3741)));
                        float _3749 = dot(vec3(_1106, _1109, _1112), vec3(_3719, _3720, _3721));
                        float _5145 = isnan(0.0) ? _3749 : (isnan(_3749) ? 0.0 : max(_3749, 0.0));
                        float _3752 = isnan(1.0) ? _5145 : (isnan(_5145) ? 1.0 : min(_5145, 1.0));
                        float _3753 = dot(vec3(_1106, _1109, _1112), vec3(_3745 * _3739, _3745 * _3740, _3745 * _3741));
                        float _5156 = isnan(0.0) ? _3753 : (isnan(_3753) ? 0.0 : max(_3753, 0.0));
                        float _3756 = isnan(1.0) ? _5156 : (isnan(_5156) ? 1.0 : min(_5156, 1.0));
                        float _3760 = ((_3756 * _3756) * (_3738 + (-1.0))) + 1.0;
                        float _3761 = _3697 * _3737;
                        float _3762 = _3761 * _3761;
                        float _3765 = ((1.0 - _3762) * _3687) + _3762;
                        float _5167 = isnan(0.0) ? _3765 : (isnan(_3765) ? 0.0 : max(_3765, 0.0));
                        float _3766 = isnan(1.0) ? _5167 : (isnan(_5167) ? 1.0 : min(_5167, 1.0));
                        float _3767 = 1.0 - _3737;
                        float _3777 = (0.5 / (((_3766 * ((_3752 * _3767) + _3737)) + 9.9999999392252902907785028219223e-09) + (((_3766 * _3767) + _3737) * _3752))) * _3766;
                        float _5178 = isnan(0.0) ? _3777 : (isnan(_3777) ? 0.0 : max(_3777, 0.0));
                        float _3788 = (((_3738 * 3.1415927410125732421875) * (isnan(1.0) ? _5178 : (isnan(_5178) ? 1.0 : min(_5178, 1.0)))) / ((_3760 * _3760) * ((_3704 * 2.1991131305694580078125) + 3.141590118408203125))) * _3693;
                        _3541 = (_3708 * _3656.x) + _3614;
                        _3542 = (_3708 * _3656.y) + _3615;
                        _3543 = (_3708 * _3656.z) + _3616;
                        _3538 = (_3788 * _3673.x) + _3611;
                        _3539 = (_3788 * _3673.y) + _3612;
                        _3540 = (_3788 * _3673.z) + _3613;
                        if (_3618 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3611 = _3538;
                            _3612 = _3539;
                            _3613 = _3540;
                            _3614 = _3541;
                            _3615 = _3542;
                            _3616 = _3543;
                            _3617 = _3618;
                        }
                    }
                    frontier_phi_71_pred = _3543;
                    frontier_phi_71_pred_1 = _3542;
                    frontier_phi_71_pred_2 = _3541;
                    frontier_phi_71_pred_3 = _3540;
                    frontier_phi_71_pred_4 = _3539;
                    frontier_phi_71_pred_5 = _3538;
                }
                _3326 = frontier_phi_71_pred;
                _3324 = frontier_phi_71_pred_1;
                _3322 = frontier_phi_71_pred_2;
                _3320 = frontier_phi_71_pred_3;
                _3318 = frontier_phi_71_pred_4;
                _3316 = frontier_phi_71_pred_5;
                uint _3473 = _3472 + 1u;
                if (_3473 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3466 = _3316;
                    _3467 = _3318;
                    _3468 = _3320;
                    _3469 = _3322;
                    _3470 = _3324;
                    _3471 = _3326;
                    _3472 = _3473;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3315 = _3316;
            _3317 = _3318;
            _3319 = _3320;
            _3321 = _3322;
            _3323 = _3324;
            _3325 = _3326;
        }
        uvec4 _3329 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3330 = _3329.z;
        uint _3332 = (_3330 >> 8u) & 15u;
        float _3434;
        float _3436;
        float _3438;
        float _3440;
        float _3442;
        float _3444;
        if (((4294967295u << _3332) & _3212) == 0u)
        {
            _3434 = _3315;
            _3436 = _3317;
            _3438 = _3319;
            _3440 = _3321;
            _3442 = _3323;
            _3444 = _3325;
        }
        else
        {
            float _3459 = inversesqrt(dot(vec3(_2271, _2272, _2273), vec3(_2271, _2272, _2273)));
            float _3460 = _3459 * _2271;
            float _3461 = _3459 * _2272;
            float _3462 = _3459 * _2273;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3332 < ((_3330 >> 12u) & 15u))
            {
                float _3435;
                float _3437;
                float _3439;
                float _3441;
                float _3443;
                float _3445;
                float _3594 = _3315;
                float _3595 = _3317;
                float _3596 = _3319;
                float _3597 = _3321;
                float _3598 = _3323;
                float _3599 = _3325;
                uint _3600 = _3332;
                uint _3609;
                bool _3610;
                for (;;)
                {
                    _3609 = texelFetch(g_lightClassification, int((((_3206 << 5u) + (_3192 << 9u)) + (_3600 << 2u)) >> 2u)).x;
                    _3610 = _3609 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3610)
                    {
                        frontier_phi_82_pred = _3599;
                        frontier_phi_82_pred_1 = _3598;
                        frontier_phi_82_pred_2 = _3597;
                        frontier_phi_82_pred_3 = _3596;
                        frontier_phi_82_pred_4 = _3595;
                        frontier_phi_82_pred_5 = _3594;
                    }
                    else
                    {
                        float _3802;
                        float _3803;
                        float _3804;
                        float _3805;
                        float _3806;
                        float _3807;
                        float _4095;
                        float _4096;
                        float _4097;
                        float _4098;
                        float _4099;
                        float _4100;
                        float _3815 = _3594;
                        float _3816 = _3595;
                        float _3817 = _3596;
                        float _3818 = _3597;
                        float _3819 = _3598;
                        float _3820 = _3599;
                        uint _3821 = _3609;
                        uint _3822;
                        vec4 _3847;
                        float _3848;
                        vec4 _3863;
                        vec3 _3875;
                        vec4 _3890;
                        vec4 _3905;
                        float _3951;
                        bool _3952;
                        for (;;)
                        {
                            uint _3832 = ((_3600 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3821));
                            _3822 = (_3821 + 4294967295u) & _3821;
                            uint _3834 = _3832 * 40u;
                            _3847 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3834)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3834 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3834 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3834 + 3u)).x));
                            _3848 = _3847.w;
                            uint _3850 = (_3832 * 40u) + 4u;
                            _3863 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3850)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3850 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3850 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3850 + 3u)).x));
                            uint _3865 = (_3832 * 40u) + 8u;
                            _3875 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3865)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3865 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3865 + 2u)).x));
                            uint _3877 = (_3832 * 40u) + 16u;
                            _3890 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3877)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3877 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3877 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3877 + 3u)).x));
                            uint _3892 = (_3832 * 40u) + 20u;
                            _3905 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3892)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3892 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3892 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3892 + 3u)).x));
                            uint _3907 = (_3832 * 40u) + 24u;
                            vec4 _3920 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3907)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3907 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3907 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3907 + 3u)).x));
                            uint _3926 = (_3832 * 40u) + 28u;
                            vec4 _3939 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3926)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3926 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3926 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3926 + 3u)).x));
                            _3951 = fma(_2273, _3939.z, fma(_2272, _3939.y, _3939.x * _2271)) + _3939.w;
                            _3952 = !((fma(_2273, _3920.z, fma(_2272, _3920.y, _3920.x * _2271)) + _3920.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3952)
                            {
                                float _3979 = _3847.x - _2271;
                                float _3980 = _3847.y - _2272;
                                float _3981 = _3847.z - _2273;
                                float _3982 = dot(vec3(_3979, _3980, _3981), vec3(_3979, _3980, _3981));
                                float _3985 = inversesqrt(_3982);
                                float _3986 = _3985 * _3979;
                                float _3987 = _3985 * _3980;
                                float _3988 = _3985 * _3981;
                                float _3992 = 1.0 - (_3982 / (_3848 * _3848));
                                float _5189 = isnan(0.0) ? _3992 : (isnan(_3992) ? 0.0 : max(_3992, 0.0));
                                float _3993 = isnan(1.0) ? _5189 : (isnan(_5189) ? 1.0 : min(_5189, 1.0));
                                float _3997 = sqrt(_3982) * _3863.w;
                                float _3999 = 1.39999997615814208984375 / (_3997 + 1.39999997615814208984375);
                                float _4000 = _3999 * _3999;
                                float _4003 = ((1.0 - _4000) * dot(vec3(_3986, _3987, _3988), vec3(_1106, _1109, _1112))) + _4000;
                                float _4006 = _3997 * _3997;
                                float _4010 = (fma(_2273, _3890.z, fma(_2272, _3890.y, _3890.x * _2271)) + _3890.w) / _3951;
                                float _4011 = (fma(_2273, _3905.z, fma(_2272, _3905.y, _3905.x * _2271)) + _3905.w) / _3951;
                                float _4015 = 1.0 - dot(vec2(_4010, _4011), vec2(_4010, _4011));
                                float _5205 = isnan(0.0) ? _4015 : (isnan(_4015) ? 0.0 : max(_4015, 0.0));
                                float _4016 = isnan(1.0) ? _5205 : (isnan(_5205) ? 1.0 : min(_5205, 1.0));
                                float _4017 = _4016 * (((isnan(0.0) ? _4003 : (isnan(_4003) ? 0.0 : max(_4003, 0.0))) * _3993) / ((_4006 * 0.699999988079071044921875) + 1.0));
                                float _4029 = exp2(log2(1.0 / ((_4006 * 3.5) + 5.0)) * 0.25);
                                float _4030 = 1.0 - _1181;
                                float _4037 = sqrt(1.0 - ((1.0 - (_4030 * _4030)) * (1.0 - (_4029 * _4029))));
                                float _4038 = _4037 * _4037;
                                float _4039 = _4038 * _4038;
                                float _4040 = _3986 - _3460;
                                float _4041 = _3987 - _3461;
                                float _4042 = _3988 - _3462;
                                float _4046 = inversesqrt(dot(vec3(_4040, _4041, _4042), vec3(_4040, _4041, _4042)));
                                float _4050 = dot(vec3(_1106, _1109, _1112), vec3((-0.0) - _3460, (-0.0) - _3461, (-0.0) - _3462));
                                float _5216 = isnan(0.0) ? _4050 : (isnan(_4050) ? 0.0 : max(_4050, 0.0));
                                float _4053 = isnan(1.0) ? _5216 : (isnan(_5216) ? 1.0 : min(_5216, 1.0));
                                float _4054 = dot(vec3(_1106, _1109, _1112), vec3(_4046 * _4040, _4046 * _4041, _4046 * _4042));
                                float _5227 = isnan(0.0) ? _4054 : (isnan(_4054) ? 0.0 : max(_4054, 0.0));
                                float _4057 = isnan(1.0) ? _5227 : (isnan(_5227) ? 1.0 : min(_5227, 1.0));
                                float _4061 = ((_4057 * _4057) * (_4039 + (-1.0))) + 1.0;
                                float _4062 = _3999 * _4038;
                                float _4063 = _4062 * _4062;
                                float _4069 = ((1.0 - _4063) * dot(vec3(_1106, _1109, _1112), vec3(_3986, _3987, _3988))) + _4063;
                                float _5238 = isnan(0.0) ? _4069 : (isnan(_4069) ? 0.0 : max(_4069, 0.0));
                                float _4070 = isnan(1.0) ? _5238 : (isnan(_5238) ? 1.0 : min(_5238, 1.0));
                                float _4071 = 1.0 - _4038;
                                float _4081 = (0.5 / (((_4070 * ((_4053 * _4071) + _4038)) + 9.9999999392252902907785028219223e-09) + (((_4070 * _4071) + _4038) * _4053))) * _4070;
                                float _5249 = isnan(0.0) ? _4081 : (isnan(_4081) ? 0.0 : max(_4081, 0.0));
                                float _4091 = (_4016 * _3993) * (((_4039 * 3.1415927410125732421875) * (isnan(1.0) ? _5249 : (isnan(_5249) ? 1.0 : min(_5249, 1.0)))) / ((_4061 * _4061) * ((_4006 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _4017 * _3863.z;
                                frontier_phi_88_pred_1 = _4017 * _3863.y;
                                frontier_phi_88_pred_2 = _4017 * _3863.x;
                                frontier_phi_88_pred_3 = _4091 * _3875.z;
                                frontier_phi_88_pred_4 = _4091 * _3875.y;
                                frontier_phi_88_pred_5 = _4091 * _3875.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _4100 = frontier_phi_88_pred;
                            _4099 = frontier_phi_88_pred_1;
                            _4098 = frontier_phi_88_pred_2;
                            _4097 = frontier_phi_88_pred_3;
                            _4096 = frontier_phi_88_pred_4;
                            _4095 = frontier_phi_88_pred_5;
                            _3805 = _4098 + _3818;
                            _3806 = _4099 + _3819;
                            _3807 = _4100 + _3820;
                            _3802 = _4095 + _3815;
                            _3803 = _4096 + _3816;
                            _3804 = _4097 + _3817;
                            if (_3822 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3815 = _3802;
                                _3816 = _3803;
                                _3817 = _3804;
                                _3818 = _3805;
                                _3819 = _3806;
                                _3820 = _3807;
                                _3821 = _3822;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3807;
                        frontier_phi_82_pred_1 = _3806;
                        frontier_phi_82_pred_2 = _3805;
                        frontier_phi_82_pred_3 = _3804;
                        frontier_phi_82_pred_4 = _3803;
                        frontier_phi_82_pred_5 = _3802;
                    }
                    _3445 = frontier_phi_82_pred;
                    _3443 = frontier_phi_82_pred_1;
                    _3441 = frontier_phi_82_pred_2;
                    _3439 = frontier_phi_82_pred_3;
                    _3437 = frontier_phi_82_pred_4;
                    _3435 = frontier_phi_82_pred_5;
                    uint _3601 = _3600 + 1u;
                    if (_3601 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3594 = _3435;
                        _3595 = _3437;
                        _3596 = _3439;
                        _3597 = _3441;
                        _3598 = _3443;
                        _3599 = _3445;
                        _3600 = _3601;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3441;
                frontier_phi_63_64_ladder_1 = _3445;
                frontier_phi_63_64_ladder_2 = _3443;
                frontier_phi_63_64_ladder_3 = _3439;
                frontier_phi_63_64_ladder_4 = _3437;
                frontier_phi_63_64_ladder_5 = _3435;
            }
            else
            {
                frontier_phi_63_64_ladder = _3321;
                frontier_phi_63_64_ladder_1 = _3325;
                frontier_phi_63_64_ladder_2 = _3323;
                frontier_phi_63_64_ladder_3 = _3319;
                frontier_phi_63_64_ladder_4 = _3317;
                frontier_phi_63_64_ladder_5 = _3315;
            }
            _3434 = frontier_phi_63_64_ladder_5;
            _3436 = frontier_phi_63_64_ladder_4;
            _3438 = frontier_phi_63_64_ladder_3;
            _3440 = frontier_phi_63_64_ladder;
            _3442 = frontier_phi_63_64_ladder_2;
            _3444 = frontier_phi_63_64_ladder_1;
        }
        float _3449 = isnan(1.0) ? _1165 : (isnan(_1165) ? 1.0 : min(_1165, 1.0));
        _3225 = (_3449 * _3440) + _2737;
        _3227 = (_3449 * _3442) + _2739;
        _3229 = (_3449 * _3444) + _2741;
        _3231 = ((_3434 * _1150) * _3449) + _3075;
        _3233 = ((_3436 * _1152) * _3449) + _3077;
        _3235 = ((_3438 * _1153) * _3449) + _3079;
    }
    else
    {
        _3225 = _2737;
        _3227 = _2739;
        _3229 = _2741;
        _3231 = _3075;
        _3233 = _3077;
        _3235 = _3079;
    }
    uint _3241 = _1126 + uint(cbMatDynParam._m0[0u].w);
    float _3247 = (isnan(cbMtdParam._m0[24u].y) ? _831 : (isnan(_831) ? cbMtdParam._m0[24u].y : min(_831, cbMtdParam._m0[24u].y))) * cbSceneParam._m0[72u].y;
    float _5265 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
    float _5276 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
    float _5287 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
    float _3270 = (((isnan(1.0) ? _5265 : (isnan(_5265) ? 1.0 : min(_5265, 1.0))) * (_3225 + ((isnan(0.0) ? _1926 : (isnan(_1926) ? 0.0 : max(_1926, 0.0))) * _1165))) + ((_3231 + ((isnan(0.0) ? _2218 : (isnan(_2218) ? 0.0 : max(_2218, 0.0))) * _2005)) * cbPerFrame._m0[3u].x)) + ((_3247 * (((((_898.x - _895) * _877) + _895) * cbMtdParam._m0[17u].x) + ((cbMtdParam._m0[24u].w * _823) * cbMtdParam._m0[16u].x))) * cbInstanceData._m0[_3241].x);
    float _3272 = (((_3247 * (((((_898.y - _896) * _877) + _896) * cbMtdParam._m0[17u].y) + ((cbMtdParam._m0[24u].w * (((_812.y - _810) * _791) + _810)) * cbMtdParam._m0[16u].y))) * cbInstanceData._m0[_3241].y) + ((_3233 + ((isnan(0.0) ? _2221 : (isnan(_2221) ? 0.0 : max(_2221, 0.0))) * _2005)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5276 : (isnan(_5276) ? 1.0 : min(_5276, 1.0))) * (_3227 + ((isnan(0.0) ? _1929 : (isnan(_1929) ? 0.0 : max(_1929, 0.0))) * _1165)));
    float _3274 = (((_3247 * (((((_898.z - _897) * _877) + _897) * cbMtdParam._m0[17u].z) + ((cbMtdParam._m0[24u].w * (((_812.z - _811) * _791) + _811)) * cbMtdParam._m0[16u].z))) * cbInstanceData._m0[_3241].z) + ((_3235 + ((isnan(0.0) ? _2224 : (isnan(_2224) ? 0.0 : max(_2224, 0.0))) * _2005)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5287 : (isnan(_5287) ? 1.0 : min(_5287, 1.0))) * (_3229 + ((isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0))) * _1165)));
    float _3275 = isnan(0.0) ? _3270 : (isnan(_3270) ? 0.0 : max(_3270, 0.0));
    float _3276 = isnan(0.0) ? _3272 : (isnan(_3272) ? 0.0 : max(_3272, 0.0));
    float _3277 = isnan(0.0) ? _3274 : (isnan(_3274) ? 0.0 : max(_3274, 0.0));
    uint _3278 = _1125 + 6u;
    float _3286 = _1087 / cbSceneParam._m0[86u].x;
    float _3287 = _1088 / cbSceneParam._m0[86u].y;
    vec4 _3301 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3286, _3287, (log2((isnan(cbSceneParam._m0[77u].w) ? _1009 : (isnan(_1009) ? cbSceneParam._m0[77u].w : min(_1009, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3303 = _3301.x;
    float _3304 = _3301.y;
    float _3305 = _3301.z;
    float _3306 = _3301.w;
    float _3377;
    float _3379;
    float _3381;
    float _3383;
    if (_1009 > cbSceneParam._m0[78u].w)
    {
        float _3340 = isnan(_1009) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1009 : min(cbSceneParam._m0[80u].w, _1009));
        float _3341 = _3340 / _1009;
        float _3352 = _3341 * _1060;
        float _3353 = _1061 * _3341;
        float _3354 = (-0.0) - _3353;
        float _3355 = _3341 * _1062;
        float _3357 = (cbSceneParam._m0[77u].w * _3354) / _3340;
        float _3358 = _3357 + cbSceneParam._m0[79u].w;
        float _3359 = cbSceneParam._m0[79u].w - _3353;
        float _3365 = sqrt(((_3352 * _3352) + (_3353 * _3353)) + (_3355 * _3355));
        float _3368 = (1.0 - (cbSceneParam._m0[77u].w / _3340)) * _3365;
        float _3373 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3375 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3551;
        if (abs((_3354 - _3357) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3551 = ((((_3358 > 0.0) ? exp2(_3373 * _3358) : (2.0 - exp2(_3375 * _3358))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3368;
        }
        else
        {
            float _3495 = 1.0 / cbSceneParam._m0[80u].x;
            float _3496 = isnan(_3359) ? _3358 : (isnan(_3358) ? _3359 : max(_3358, _3359));
            float _3497 = isnan(_3359) ? _3358 : (isnan(_3358) ? _3359 : min(_3358, _3359));
            float _3506 = isnan(0.0) ? _3496 : (isnan(_3496) ? 0.0 : min(_3496, 0.0));
            float _3507 = isnan(0.0) ? _3497 : (isnan(_3497) ? 0.0 : min(_3497, 0.0));
            _3551 = ((abs(_3365 / _3354) * cbSceneParam._m0[80u].y) * ((((_3506 - _3507) * 2.0) - ((exp2(_3373 * (isnan(0.0) ? _3496 : (isnan(_3496) ? 0.0 : max(_3496, 0.0)))) - exp2(_3373 * (isnan(0.0) ? _3497 : (isnan(_3497) ? 0.0 : max(_3497, 0.0))))) * _3495)) - ((exp2(_3375 * _3506) - exp2(_3375 * _3507)) * _3495))) + (_3368 * cbSceneParam._m0[80u].z);
        }
        vec4 _3553 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3286, _3287, 1.0), 0.0);
        float _3562 = exp2((_3551 * (-1.44269502162933349609375)) * (1.0 - _3553.w));
        float _3563 = log2(_3562);
        float _3579 = log2(_3306);
        _3377 = (exp2(_3579 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3563 * cbSceneParam._m0[78u].x)) * _3553.x) / cbSceneParam._m0[78u].x)) + _3303;
        _3379 = (exp2(_3579 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3563 * cbSceneParam._m0[78u].y)) * _3553.y) / cbSceneParam._m0[78u].y)) + _3304;
        _3381 = (exp2(_3579 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3563 * cbSceneParam._m0[78u].z)) * _3553.z) / cbSceneParam._m0[78u].z)) + _3305;
        _3383 = _3562 * _3306;
    }
    else
    {
        _3377 = _3303;
        _3379 = _3304;
        _3381 = _3305;
        _3383 = _3306;
    }
    bool _3589;
    vec4 _3392;
    vec4 _3414;
    float _3416;
    float _3420;
    float _3421;
    float _3422;
    float _3423;
    bool _3433;
    for (;;)
    {
        _3392 = cbMatDynParam._m0[0u];
        float _3394 = roundEven(_3392.y);
        bool _3395 = _3394 == 3.0;
        float _3396 = log2(_3383);
        float _3403 = exp2(_3396 * cbSceneParam._m0[78u].x) * _3275;
        float _3404 = exp2(_3396 * cbSceneParam._m0[78u].y) * _3276;
        float _3405 = exp2(_3396 * cbSceneParam._m0[78u].z) * _3277;
        float _3412 = _1076 + (-0.5);
        _3414 = cbMtdParam._m0[1u];
        _3416 = _3414.y * _3412;
        float _3419 = (_3394 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3420 = _3419 * (_3395 ? _3403 : (_3403 + (cbSceneParam._m0[72u].w * _3377)));
        _3421 = _3419 * (_3395 ? _3404 : (_3404 + (cbSceneParam._m0[72u].w * _3379)));
        _3422 = _3419 * (_3395 ? _3405 : (_3405 + (cbSceneParam._m0[72u].w * _3381)));
        _3423 = _3412 * 0.999000012874603271484375;
        _3433 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3433)
        {
            if ((cbInstanceData._m0[_1125 + 7u].x + _3423) < 0.5)
            {
                _3589 = true;
                break;
            }
        }
        uint _3530 = _1126 + uint(_3392.w);
        if ((cbInstanceData._m0[_3530].w < 1.0) && ((cbInstanceData._m0[_3530].w + _3423) < 0.5))
        {
            _3589 = true;
            break;
        }
        if ((_3416 + 1.0) < _3414.x)
        {
            _3589 = true;
            break;
        }
        _3589 = false;
        break;
    }
    float _3793;
    if (_3589)
    {
        discard_state = true;
        _3793 = 0.0;
    }
    else
    {
        _3793 = cbInstanceData._m0[_3278].w;
    }
    SV_Target.x = _3420;
    SV_Target.y = _3421;
    SV_Target.z = _3422;
    SV_Target.w = _3793;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3278].w;
    discard_exit();
}


