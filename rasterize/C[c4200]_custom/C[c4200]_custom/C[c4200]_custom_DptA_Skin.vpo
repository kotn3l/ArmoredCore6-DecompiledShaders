#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out float TEXCOORD_3;
layout(location = 4, component = 1) out float TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_3_1;
layout(location = 4, component = 2) out float TEXCOORD_6;
layout(location = 4, component = 3) out float TEXCOORD_7;
layout(location = 6) out float TEXCOORD_8;
layout(location = 6, component = 1) out vec2 TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3 = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_3_1.x = 0.0;
    TEXCOORD_3_1.y = 0.0;
    TEXCOORD_3_1.z = 0.0;
    TEXCOORD_3_1.w = 0.0;
    TEXCOORD_6 = 0.0;
    TEXCOORD_7 = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _187 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _190 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _200 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _201 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _211 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _213 = texelFetch(g_InstanceIndexBuffer, int(_211));
    uint _214 = _213.x;
    precise float _215 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _220 = isnan(_215) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _215 : max(0.001000000047497451305389404296875, _215));
    precise float _222 = BLENDWEIGHT.x / _220;
    precise float _223 = BLENDWEIGHT.y / _220;
    precise float _224 = BLENDWEIGHT.z / _220;
    precise float _225 = BLENDWEIGHT.w / _220;
    uint _227 = _214 * 13u;
    uvec4 _232 = floatBitsToUint(cbInstanceData._m0[_227 + 4u]);
    uint _233 = _232.x;
    uint _235 = (_233 + uint(float(BLENDINDICES.x))) * 3u;
    uint _242 = _235 + 1u;
    uint _249 = _235 + 2u;
    precise float _256 = _222 * cbObjMatrix._m0[_235].x;
    precise float _257 = _222 * cbObjMatrix._m0[_242].x;
    precise float _258 = _222 * cbObjMatrix._m0[_249].x;
    precise float _259 = _222 * cbObjMatrix._m0[_235].y;
    precise float _260 = _222 * cbObjMatrix._m0[_242].y;
    precise float _261 = _222 * cbObjMatrix._m0[_249].y;
    precise float _262 = _222 * cbObjMatrix._m0[_235].z;
    precise float _263 = _222 * cbObjMatrix._m0[_242].z;
    precise float _264 = _222 * cbObjMatrix._m0[_249].z;
    precise float _265 = _222 * cbObjMatrix._m0[_235].w;
    precise float _266 = _222 * cbObjMatrix._m0[_242].w;
    precise float _267 = _222 * cbObjMatrix._m0[_249].w;
    uint _270 = (_233 + uint(float(BLENDINDICES.y))) * 3u;
    uint _277 = _270 + 1u;
    uint _284 = _270 + 2u;
    precise float _291 = _223 * cbObjMatrix._m0[_270].x;
    precise float _292 = _223 * cbObjMatrix._m0[_277].x;
    precise float _293 = _223 * cbObjMatrix._m0[_284].x;
    precise float _294 = _223 * cbObjMatrix._m0[_270].y;
    precise float _295 = _223 * cbObjMatrix._m0[_277].y;
    precise float _296 = _223 * cbObjMatrix._m0[_284].y;
    precise float _297 = _223 * cbObjMatrix._m0[_270].z;
    precise float _298 = _223 * cbObjMatrix._m0[_277].z;
    precise float _299 = _223 * cbObjMatrix._m0[_284].z;
    precise float _300 = _223 * cbObjMatrix._m0[_270].w;
    precise float _301 = _223 * cbObjMatrix._m0[_277].w;
    precise float _302 = _223 * cbObjMatrix._m0[_284].w;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    precise float _308 = _261 + _296;
    precise float _309 = _262 + _297;
    precise float _310 = _263 + _298;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    uint _317 = (_233 + uint(float(BLENDINDICES.z))) * 3u;
    uint _324 = _317 + 1u;
    uint _331 = _317 + 2u;
    precise float _338 = _224 * cbObjMatrix._m0[_317].x;
    precise float _339 = _224 * cbObjMatrix._m0[_324].x;
    precise float _340 = _224 * cbObjMatrix._m0[_331].x;
    precise float _341 = _224 * cbObjMatrix._m0[_317].y;
    precise float _342 = _224 * cbObjMatrix._m0[_324].y;
    precise float _343 = _224 * cbObjMatrix._m0[_331].y;
    precise float _344 = _224 * cbObjMatrix._m0[_317].z;
    precise float _345 = _224 * cbObjMatrix._m0[_324].z;
    precise float _346 = _224 * cbObjMatrix._m0[_331].z;
    precise float _347 = _224 * cbObjMatrix._m0[_317].w;
    precise float _348 = _224 * cbObjMatrix._m0[_324].w;
    precise float _349 = _224 * cbObjMatrix._m0[_331].w;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    uint _364 = (_233 + uint(float(BLENDINDICES.w))) * 3u;
    uint _371 = _364 + 1u;
    uint _378 = _364 + 2u;
    precise float _385 = _225 * cbObjMatrix._m0[_364].x;
    precise float _386 = _225 * cbObjMatrix._m0[_371].x;
    precise float _387 = _225 * cbObjMatrix._m0[_378].x;
    precise float _388 = _225 * cbObjMatrix._m0[_364].y;
    precise float _389 = _225 * cbObjMatrix._m0[_371].y;
    precise float _390 = _225 * cbObjMatrix._m0[_378].y;
    precise float _391 = _225 * cbObjMatrix._m0[_364].z;
    precise float _392 = _225 * cbObjMatrix._m0[_371].z;
    precise float _393 = _225 * cbObjMatrix._m0[_378].z;
    precise float _394 = _225 * cbObjMatrix._m0[_364].w;
    precise float _395 = _225 * cbObjMatrix._m0[_371].w;
    precise float _396 = _225 * cbObjMatrix._m0[_378].w;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = POSITION.x * _397;
    precise float _410 = POSITION.y * _400;
    precise float _411 = _410 + _409;
    precise float _412 = POSITION.z * _403;
    precise float _413 = _412 + _411;
    precise float _414 = 1.0 * _406;
    precise float _415 = _414 + _413;
    precise float _416 = POSITION.x * _398;
    precise float _417 = POSITION.y * _401;
    precise float _418 = _417 + _416;
    precise float _419 = POSITION.z * _404;
    precise float _420 = _419 + _418;
    precise float _421 = 1.0 * _407;
    precise float _422 = _421 + _420;
    precise float _423 = POSITION.x * _399;
    precise float _424 = POSITION.y * _402;
    precise float _425 = _424 + _423;
    precise float _426 = POSITION.z * _405;
    precise float _427 = _426 + _425;
    precise float _428 = 1.0 * _408;
    precise float _429 = _428 + _427;
    precise float _454 = _415 - cbSceneParam._m0[3u].x;
    precise float _455 = _422 - cbSceneParam._m0[3u].y;
    precise float _456 = _429 - cbSceneParam._m0[3u].z;
    precise float _484 = _454 * cbSceneParam._m0[24u].x;
    precise float _485 = _455 * cbSceneParam._m0[24u].y;
    precise float _486 = _485 + _484;
    precise float _487 = _456 * cbSceneParam._m0[24u].z;
    precise float _488 = _487 + _486;
    precise float _489 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _490 = _489 + _488;
    precise float _491 = _454 * cbSceneParam._m0[25u].x;
    precise float _492 = _455 * cbSceneParam._m0[25u].y;
    precise float _493 = _492 + _491;
    precise float _494 = _456 * cbSceneParam._m0[25u].z;
    precise float _495 = _494 + _493;
    precise float _496 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _497 = _496 + _495;
    precise float _498 = _454 * cbSceneParam._m0[26u].x;
    precise float _499 = _455 * cbSceneParam._m0[26u].y;
    precise float _500 = _499 + _498;
    precise float _501 = _456 * cbSceneParam._m0[26u].z;
    precise float _502 = _501 + _500;
    precise float _503 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _504 = _503 + _502;
    precise float _505 = _454 * cbSceneParam._m0[27u].x;
    precise float _506 = _455 * cbSceneParam._m0[27u].y;
    precise float _507 = _506 + _505;
    precise float _508 = _456 * cbSceneParam._m0[27u].z;
    precise float _509 = _508 + _507;
    precise float _510 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _511 = _510 + _509;
    gl_Position.x = _490;
    gl_Position.y = _497;
    gl_Position.z = _504;
    gl_Position.w = _511;
    POSITION_1.x = _490;
    POSITION_1.y = _497;
    POSITION_1.z = _504;
    POSITION_1.w = _511;
    NORMAL_1.x = fma(_190, _403, fma(_189, _400, _397 * _187));
    NORMAL_1.y = fma(_190, _404, fma(_189, _401, _398 * _187));
    NORMAL_1.z = fma(_190, _405, fma(_189, _402, _399 * _187));
    NORMAL_1.w = float(_214);
    TANGENT_1.x = fma(_201, _403, fma(_200, _400, _397 * _199));
    TANGENT_1.y = fma(_201, _404, fma(_200, _401, _398 * _199));
    TANGENT_1.z = fma(_201, _405, fma(_200, _402, _399 * _199));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3 = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1 = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3_1.x = TEXCOORD_1.x;
    TEXCOORD_3_1.y = TEXCOORD_1.y;
    TEXCOORD_3_1.z = TEXCOORD_1.z;
    TEXCOORD_3_1.w = COLOR_1.x;
    TEXCOORD_6 = TEXCOORD_2.x;
    TEXCOORD_7 = TEXCOORD_2.y;
    TEXCOORD_8 = TEXCOORD_2.z;
    TEXCOORD_10.x = _504;
    TEXCOORD_10.y = _511;
    gl_ClipDistance[0u] = dot(vec4(_490, _497, _504, _511), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_490, _497, _504, _511), vec4(cbInstanceData._m0[_227 + 3u]));
}


