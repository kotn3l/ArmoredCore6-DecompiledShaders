#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[28];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_c4200_custom_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_c4200_custom_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D C_c4200_custom_snp_0_Texture2D_27;
layout(set = 0, binding = 12) uniform texture2D C_c4200_custom_snp_0_Texture2D_28;
layout(set = 0, binding = 13) uniform texture2D C_c4200_custom_snp_0_Texture2D_29;
layout(set = 0, binding = 14) uniform texture2D C_c4200_custom_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_c4200_custom_snp_0_Texture2D_30;
layout(set = 0, binding = 16) uniform texture2D C_c4200_custom_snp_0_Texture2D_4;
layout(set = 0, binding = 17) uniform texture2D C_c4200_custom_snp_0_Texture2D_5;
layout(set = 0, binding = 18) uniform texture2D C_c4200_custom_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_c4200_custom_snp_0_Texture2D_7;
layout(set = 0, binding = 20) uniform texture2D C_c4200_custom_snp_0_Texture2D_8;
layout(set = 0, binding = 21) uniform texture2D C_c4200_custom_snp_0_Texture2D_9;
layout(set = 0, binding = 5) uniform texture2D C_c4200_custom_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D C_c4200_custom_snp_0_Texture2D_22;
layout(set = 0, binding = 7) uniform texture2D C_c4200_custom_snp_0_Texture2D_23;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 4, component = 2) in float TEXCOORD_6;
layout(location = 4, component = 3) in float TEXCOORD_7;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1448;
float _4133;
float _4134;
float _4135;
float _4136;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _217 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _218 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _219 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _225 = inversesqrt(dot(vec3(_217, _218, _219), vec3(_217, _218, _219)));
    float _232 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _239 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _282 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD_1) + cbTextureTilingScale._m0[19u].w));
    float _291 = log2(0.0);
    float _293 = exp2(_291 * cbMtdParam._m0[18u].w);
    float _294 = isnan(0.0) ? _293 : (isnan(_293) ? 0.0 : max(_293, 0.0));
    float _295 = isnan(1.0) ? _294 : (isnan(_294) ? 1.0 : min(_294, 1.0));
    vec4 _311 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _315 = _311.z;
    float _320 = exp2(log2(_315 * cbMtdParam._m0[19u].x) * cbMtdParam._m0[18u].y);
    float _321 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
    float _322 = isnan(1.0) ? _321 : (isnan(_321) ? 1.0 : min(_321, 1.0));
    vec4 _334 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w));
    vec4 _359 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _370 = cbMtdParam._m0[9u].x * _359.x;
    float _371 = cbMtdParam._m0[9u].y * _359.y;
    float _372 = cbMtdParam._m0[9u].z * _359.z;
    float _379 = (((cbMtdParam._m0[10u].x * _334.x) - _370) * _322) + _370;
    float _380 = (((cbMtdParam._m0[10u].y * _334.y) - _371) * _322) + _371;
    float _381 = (((cbMtdParam._m0[10u].z * _334.z) - _372) * _322) + _372;
    vec4 _394 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_30, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_1) + cbTextureTilingScale._m0[15u].w));
    float _396 = _394.x;
    float _400 = exp2(log2(_396) * cbMtdParam._m0[19u].z);
    vec4 _413 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w));
    float _433 = (((cbMtdParam._m0[12u].x * _413.x) - _379) * _400) + _379;
    float _434 = (((cbMtdParam._m0[12u].y * _413.y) - _380) * _400) + _380;
    float _435 = (((cbMtdParam._m0[12u].z * _413.z) - _381) * _400) + _381;
    vec4 _448 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_1) + cbTextureTilingScale._m0[16u].w));
    float _473 = (_282.x * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].x * _448.x) - _433) * _295) + _433);
    float _475 = (_282.y * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].y * _448.y) - _434) * _295) + _434);
    float _477 = (_282.z * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].z * _448.z) - _435) * _295) + _435);
    float _479 = cbMtdParam._m0[22u].z * TEXCOORD_6;
    float _488 = (_479 - (((texture(sampler2D(C_c4200_custom_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[22u].x) * (1.0 - _479))) * (cbMtdParam._m0[22u].y + 1.0);
    float _4165 = isnan(0.0) ? _488 : (isnan(_488) ? 0.0 : max(_488, 0.0));
    float _489 = isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0));
    float _496 = ((cbMtdParam._m0[14u].x - _473) * _489) + _473;
    float _497 = ((cbMtdParam._m0[14u].y - _475) * _489) + _475;
    float _498 = ((cbMtdParam._m0[14u].z - _477) * _489) + _477;
    float _500 = _396 - (_479 * _396);
    vec4 _516 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD_1) + cbTextureTilingScale._m0[17u].w));
    vec4 _534 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD_1) + cbTextureTilingScale._m0[18u].w));
    float _536 = _534.x;
    float _537 = _534.y;
    float _540 = cbMtdParam._m0[18u].x + _534.z;
    float _543 = (((cbMtdParam._m0[18u].z + _516.z) - _540) * _322) + _540;
    vec4 _555 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD_1) + cbTextureTilingScale._m0[20u].w));
    float _567 = (((_555.z - _543) + cbMtdParam._m0[24u].z) * _400) + _543;
    float _573 = ((((_315 * 2.0) * _567) - _567) * cbMtdParam._m0[20u].z) + _567;
    vec4 _586 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[21u].x * TEXCOORD) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * TEXCOORD_1) + cbTextureTilingScale._m0[21u].w));
    float _595 = (((cbMtdParam._m0[19u].y + _586.z) - _573) * _295) + _573;
    vec4 _611 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1) + cbTextureTilingScale._m0[6u].w));
    float _626 = ((cbMtdParam._m0[21u].w * _479) * ((_611.z * cbMtdParam._m0[21u].z) - _595)) + _595;
    float _637 = cbMtdParam._m0[23u].y * cbPerFrame._m0[22u].x;
    vec4 _661 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_28, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * ((_637 * cbMtdParam._m0[26u].y) + TEXCOORD)) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * ((_637 * cbMtdParam._m0[26u].z) + TEXCOORD_1)) + cbTextureTilingScale._m0[12u].w));
    float _665 = cbPerFrame._m0[22u].x * 2.0;
    float _666 = _665 * cbMtdParam._m0[25u].y;
    float _669 = (_661.x * 0.5) + (-0.25);
    float _672 = (_661.y * 0.5) + (-0.25);
    float _673 = _672 * cbMtdParam._m0[25u].x;
    float _675 = (-0.0) - (cbMtdParam._m0[25u].x * _669);
    float _677 = fract(_666);
    float _679 = fract(_666 + 0.5);
    float _690 = abs((_677 * 2.0) + (-1.0));
    vec4 _707 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_27, SS_DiffuseMap), vec2((((_677 * _675) + TEXCOORD) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((_673 * _677) + TEXCOORD_1) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _709 = _707.x;
    float _710 = _707.y;
    float _711 = _707.z;
    vec4 _712 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_27, SS_DiffuseMap), vec2((((_679 * _675) + TEXCOORD) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((_673 * _679) + TEXCOORD_1) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _723 = ((_712.x - _709) * _690) + _709;
    float _730 = exp2(log2(_723 * cbMtdParam._m0[23u].z) * cbMtdParam._m0[23u].w);
    float _731 = isnan(cbMtdParam._m0[24u].x) ? _730 : (isnan(_730) ? cbMtdParam._m0[24u].x : max(_730, cbMtdParam._m0[24u].x));
    float _752 = _665 * cbMtdParam._m0[25u].w;
    float _753 = _672 * cbMtdParam._m0[25u].z;
    float _755 = (-0.0) - (cbMtdParam._m0[25u].z * _669);
    float _756 = fract(_752);
    float _758 = fract(_752 + 0.5);
    float _769 = abs((_756 * 2.0) + (-1.0));
    vec4 _785 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_29, SS_DiffuseMap), vec2((((_756 * _755) + TEXCOORD) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_753 * _756) + TEXCOORD_1) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _787 = _785.x;
    float _788 = _785.y;
    float _789 = _785.z;
    vec4 _790 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_29, SS_DiffuseMap), vec2((((_758 * _755) + TEXCOORD) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_753 * _758) + TEXCOORD_1) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _819 = ((_516.x - _536) * _322) + _536;
    float _820 = ((_516.y - _537) * _322) + _537;
    float _825 = ((_555.x - _819) * _400) + _819;
    float _826 = ((_555.y - _820) * _400) + _820;
    float _835 = ((((_586.x - _825) * _295) + _825) * 2.0) + (-1.0);
    float _836 = ((((_586.y - _826) * _295) + _826) * 2.0) + (-1.0);
    float _837 = dot(vec2(_835, _836), vec2(_835, _836));
    float _4186 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    float _842 = sqrt(1.0 - (isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0))));
    float _852 = ((cbMtdParam._m0[20u].w * ((_311.x * 2.0) + (-1.0))) + _835) + ((((_611.x * 2.0) + (-1.0)) * _479) * cbMtdParam._m0[21u].y);
    float _853 = ((cbMtdParam._m0[20u].w * ((_311.y * 2.0) + (-1.0))) + _836) + (((cbMtdParam._m0[22u].z * TEXCOORD_7) * ((_611.y * 2.0) + (-1.0))) * cbMtdParam._m0[21u].y);
    float _856 = fma(_842, _232 * NORMAL.x, fma(_853, _239 * TANGENT.x, (_225 * _217) * _852));
    float _859 = fma(_842, _232 * NORMAL.y, fma(_853, _239 * TANGENT.y, (_225 * _218) * _852));
    float _862 = fma(_842, _232 * NORMAL.z, fma(_853, _239 * TANGENT.z, (_225 * _219) * _852));
    float _866 = inversesqrt(dot(vec3(_856, _859, _862), vec3(_856, _859, _862)));
    float _867 = _866 * _856;
    float _868 = _866 * _859;
    float _869 = _866 * _862;
    float _4197 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
    float _870 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
    float _4208 = isnan(0.0) ? _496 : (isnan(_496) ? 0.0 : max(_496, 0.0));
    float _4219 = isnan(0.0) ? _497 : (isnan(_497) ? 0.0 : max(_497, 0.0));
    float _4230 = isnan(0.0) ? _498 : (isnan(_498) ? 0.0 : max(_498, 0.0));
    float _4241 = isnan(0.0) ? _500 : (isnan(_500) ? 0.0 : max(_500, 0.0));
    float _874 = isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0));
    float _890 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _931 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _941 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _931);
    float _942 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _931);
    float _943 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _931);
    float _947 = inversesqrt(dot(vec3(_941, _942, _943), vec3(_941, _942, _943)));
    float _948 = _941 * _947;
    float _949 = _942 * _947;
    float _950 = _943 * _947;
    vec4 _955 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _957 = _955.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1129 = sqrt(((_941 * _941) + (_942 * _942)) + (_943 * _943));
        float _1135 = (cbMatDynParam._m0[5u].x * _1129) + cbMatDynParam._m0[5u].y;
        float _4252 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
        float _1136 = isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0));
        float _1140 = (cbMatDynParam._m0[5u].z * _1129) + cbMatDynParam._m0[5u].w;
        float _4263 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4263 : (isnan(_4263) ? 1.0 : min(_4263, 1.0))) - _1136)) + _1136) < ((_957 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _968 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _969 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _987 = fma(_869, cbSceneParam._m0[5u].z, fma(_868, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _867));
    float _990 = fma(_869, cbSceneParam._m0[6u].z, fma(_868, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _867));
    float _993 = fma(_869, cbSceneParam._m0[7u].z, fma(_868, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _867));
    uint _1006 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1007 = _1006 + 9u;
    uint _1008 = _1007 + uint(cbMatDynParam._m0[0u].w);
    float _1014 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0)))) * cbInstanceData._m0[_1008].x;
    float _1015 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0)))) * cbInstanceData._m0[_1008].y;
    float _1016 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0)))) * cbInstanceData._m0[_1008].z;
    float _4274 = isnan(0.0) ? _1014 : (isnan(_1014) ? 0.0 : max(_1014, 0.0));
    float _1017 = isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0));
    float _4285 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
    float _1018 = isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0));
    float _4296 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
    float _1019 = isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0));
    float _1020 = 1.0 - _874;
    float _1021 = _1017 * _1020;
    float _1022 = _1018 * _1020;
    float _1023 = _1019 * _1020;
    float _1028 = (_1017 + (-0.039999999105930328369140625)) * _874;
    float _1029 = (_1018 + (-0.039999999105930328369140625)) * _874;
    float _1030 = (_1019 + (-0.039999999105930328369140625)) * _874;
    float _1031 = _1028 + 0.039999999105930328369140625;
    float _1033 = _1029 + 0.039999999105930328369140625;
    float _1034 = _1030 + 0.039999999105930328369140625;
    vec4 _1043 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _968, cbSceneParam._m0[86u].y * _969));
    float _1046 = _1043.x * TEXCOORD_3.w;
    float _1047 = dot(vec3(_867, _868, _869), vec3(_948, _949, _950));
    float _1050 = _1047 * 2.0;
    float _1054 = (_1050 * _867) - _948;
    float _1055 = (_1050 * _868) - _949;
    float _1056 = (_1050 * _869) - _950;
    float _1060 = abs(dot(vec3(_948, _949, _950), vec3(_867, _868, _869)));
    float _4307 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
    float _1062 = sqrt(_870);
    float _1075 = exp2((_1062 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1062 * 3.0));
    float _1081 = (1.0 - _1075) * ((_1062 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1082 = _1075 * _1062;
    float _1110 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1114 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1118 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1447;
    float _1449;
    float _1450;
    float _1451;
    float _1452;
    float _1453;
    float _1454;
    float _1455;
    float _1456;
    float _1457;
    float _1458;
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1173 = fma(_1118, cbModelParam._m0[26u].z, fma(_1114, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1110));
        float _1177 = fma(_1118, cbModelParam._m0[27u].z, fma(_1114, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1110));
        float _1181 = fma(_1118, cbModelParam._m0[28u].z, fma(_1114, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1110));
        float _1205 = _1110 + _867;
        float _1206 = _1114 + _868;
        float _1207 = _1118 + _869;
        float _1217 = fma(_1207, cbModelParam._m0[26u].z, fma(_1206, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1205)) - _1173;
        float _1218 = fma(_1207, cbModelParam._m0[27u].z, fma(_1206, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1205)) - _1177;
        float _1219 = fma(_1207, cbModelParam._m0[28u].z, fma(_1206, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1205)) - _1181;
        float _1223 = inversesqrt(dot(vec3(_1217, _1218, _1219), vec3(_1217, _1218, _1219)));
        float _1236 = ((_1223 * _1217) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1173 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1237 = ((_1223 * _1218) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1177 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1238 = ((_1223 * _1219) / cbModelParam._m0[34u].z) + ((((((_1181 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1241 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1236, _1237, _1238), 0.0);
        vec4 _1248 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1236, _1237, _1238), 0.0);
        vec4 _1255 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1236, _1237, _1238), 0.0);
        vec4 _1262 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1236, _1237, _1238), 0.0);
        float _1275 = exp2((_1241.w + (-0.5)) * 20.0) * 2.0;
        float _1276 = _1275 * (_1241.x + (-0.5));
        float _1277 = _1275 * (_1241.y + (-0.5));
        float _1278 = _1275 * (_1241.z + (-0.5));
        float _1285 = exp2((_1248.w + (-0.5)) * 20.0) * 2.0;
        float _1286 = _1285 * (_1248.x + (-0.5));
        float _1287 = _1285 * (_1248.y + (-0.5));
        float _1288 = _1285 * (_1248.z + (-0.5));
        float _1295 = exp2((_1255.w + (-0.5)) * 20.0) * 2.0;
        float _1296 = _1295 * (_1255.x + (-0.5));
        float _1297 = _1295 * (_1255.y + (-0.5));
        float _1298 = _1295 * (_1255.z + (-0.5));
        float _1305 = exp2((_1262.w + (-0.5)) * 20.0) * 2.0;
        float _1306 = _1305 * (_1262.x + (-0.5));
        float _1307 = _1305 * (_1262.y + (-0.5));
        float _1308 = _1305 * (_1262.z + (-0.5));
        float _1309 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        float _1310 = isnan(0.0) ? _1307 : (isnan(_1307) ? 0.0 : max(_1307, 0.0));
        float _1311 = isnan(0.0) ? _1308 : (isnan(_1308) ? 0.0 : max(_1308, 0.0));
        float _1312 = _1276 * 0.5;
        float _1313 = _1286 * 0.5;
        float _1314 = _1296 * 0.5;
        float _1315 = dot(vec3(_1312, _1313, _1314), vec3(_1312, _1313, _1314));
        float _1320 = (_1315 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1315);
        float _1329 = (dot(vec3(_867, _868, _869), vec3(_1320 * _1312, _1320 * _1313, _1320 * _1314)) + 1.0) * 0.5;
        float _4333 = isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0));
        float _1339 = sqrt(((_1313 * _1313) + (_1312 * _1312)) + (_1314 * _1314)) / (_1309 + 9.9999997473787516355514526367188e-06);
        float _4344 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
        float _1340 = isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0));
        float _1341 = _1340 * 2.0;
        float _1345 = (1.0 - _1340) / (_1340 + 1.0);
        float _4355 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1346 = isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0));
        float _1355 = ((((1.0 - _1346) * (_1341 + 2.0)) * exp2(log2(isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0))) * (_1341 + 1.0))) + _1346) * _1309;
        float _1356 = _1277 * 0.5;
        float _1357 = _1287 * 0.5;
        float _1358 = _1297 * 0.5;
        float _1359 = dot(vec3(_1356, _1357, _1358), vec3(_1356, _1357, _1358));
        float _1364 = (_1359 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1359);
        float _1372 = (dot(vec3(_867, _868, _869), vec3(_1364 * _1356, _1364 * _1357, _1364 * _1358)) + 1.0) * 0.5;
        float _4366 = isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0));
        float _1381 = sqrt(((_1357 * _1357) + (_1356 * _1356)) + (_1358 * _1358)) / (_1310 + 9.9999997473787516355514526367188e-06);
        float _4377 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1382 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
        float _1383 = _1382 * 2.0;
        float _1387 = (1.0 - _1382) / (_1382 + 1.0);
        float _4388 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1388 = isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0));
        float _1397 = ((((1.0 - _1388) * (_1383 + 2.0)) * exp2(log2(isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0))) * (_1383 + 1.0))) + _1388) * _1310;
        float _1398 = _1278 * 0.5;
        float _1399 = _1288 * 0.5;
        float _1400 = _1298 * 0.5;
        float _1401 = dot(vec3(_1398, _1399, _1400), vec3(_1398, _1399, _1400));
        float _1406 = (_1401 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1401);
        float _1414 = (dot(vec3(_867, _868, _869), vec3(_1406 * _1398, _1406 * _1399, _1406 * _1400)) + 1.0) * 0.5;
        float _4399 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1423 = sqrt(((_1399 * _1399) + (_1398 * _1398)) + (_1400 * _1400)) / (_1311 + 9.9999997473787516355514526367188e-06);
        float _4410 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1424 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
        float _1425 = _1424 * 2.0;
        float _1429 = (1.0 - _1424) / (_1424 + 1.0);
        float _4421 = isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0));
        float _1430 = isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0));
        float _1439 = ((((1.0 - _1430) * (_1425 + 2.0)) * exp2(log2(isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0))) * (_1425 + 1.0))) + _1430) * _1311;
        _1447 = _1278;
        _1449 = _1277;
        _1450 = _1276;
        _1451 = _1288;
        _1452 = _1287;
        _1453 = _1286;
        _1454 = _1298;
        _1455 = _1297;
        _1456 = _1296;
        _1457 = _1311;
        _1458 = _1310;
        _1459 = _1309;
        _1460 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0)));
        _1461 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0)));
        _1462 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0)));
    }
    else
    {
        _1447 = _1448;
        _1449 = _1448;
        _1450 = _1448;
        _1451 = _1448;
        _1452 = _1448;
        _1453 = _1448;
        _1454 = _1448;
        _1455 = _1448;
        _1456 = _1448;
        _1457 = _1448;
        _1458 = _1448;
        _1459 = _1448;
        _1460 = 0.0;
        _1461 = 0.0;
        _1462 = 0.0;
    }
    float _1760;
    float _1761;
    float _1762;
    float _1763;
    float _1764;
    float _1765;
    float _1766;
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1491 = fma(_1118, cbModelParam._m0[30u].z, fma(_1114, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1110));
        float _1495 = fma(_1118, cbModelParam._m0[31u].z, fma(_1114, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1110));
        float _1499 = fma(_1118, cbModelParam._m0[32u].z, fma(_1114, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1110));
        float _1522 = _1110 + _867;
        float _1523 = _1114 + _868;
        float _1524 = _1118 + _869;
        float _1534 = fma(_1524, cbModelParam._m0[30u].z, fma(_1523, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1522)) - _1491;
        float _1535 = fma(_1524, cbModelParam._m0[31u].z, fma(_1523, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1522)) - _1495;
        float _1536 = fma(_1524, cbModelParam._m0[32u].z, fma(_1523, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1522)) - _1499;
        float _1540 = inversesqrt(dot(vec3(_1534, _1535, _1536), vec3(_1534, _1535, _1536)));
        float _1553 = ((_1540 * _1534) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1491 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1554 = ((_1540 * _1535) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1495 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1555 = ((_1540 * _1536) / cbModelParam._m0[35u].z) + ((((((_1499 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1557 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1553, _1554, _1555), 0.0);
        vec4 _1564 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1553, _1554, _1555), 0.0);
        vec4 _1571 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1553, _1554, _1555), 0.0);
        vec4 _1578 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1553, _1554, _1555), 0.0);
        float _1590 = exp2((_1557.w + (-0.5)) * 20.0) * 2.0;
        float _1591 = _1590 * (_1557.x + (-0.5));
        float _1592 = _1590 * (_1557.y + (-0.5));
        float _1593 = _1590 * (_1557.z + (-0.5));
        float _1600 = exp2((_1564.w + (-0.5)) * 20.0) * 2.0;
        float _1601 = _1600 * (_1564.x + (-0.5));
        float _1602 = _1600 * (_1564.y + (-0.5));
        float _1603 = _1600 * (_1564.z + (-0.5));
        float _1610 = exp2((_1571.w + (-0.5)) * 20.0) * 2.0;
        float _1611 = _1610 * (_1571.x + (-0.5));
        float _1612 = _1610 * (_1571.y + (-0.5));
        float _1613 = _1610 * (_1571.z + (-0.5));
        float _1620 = exp2((_1578.w + (-0.5)) * 20.0) * 2.0;
        float _1621 = _1620 * (_1578.x + (-0.5));
        float _1622 = _1620 * (_1578.y + (-0.5));
        float _1623 = _1620 * (_1578.z + (-0.5));
        float _1624 = isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0));
        float _1625 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1626 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
        float _1627 = _1591 * 0.5;
        float _1628 = _1601 * 0.5;
        float _1629 = _1611 * 0.5;
        float _1630 = dot(vec3(_1627, _1628, _1629), vec3(_1627, _1628, _1629));
        float _1635 = (_1630 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1630);
        float _1643 = (dot(vec3(_867, _868, _869), vec3(_1635 * _1627, _1635 * _1628, _1635 * _1629)) + 1.0) * 0.5;
        float _4462 = isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0));
        float _1652 = sqrt(((_1628 * _1628) + (_1627 * _1627)) + (_1629 * _1629)) / (_1624 + 9.9999997473787516355514526367188e-06);
        float _4473 = isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0));
        float _1653 = isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0));
        float _1654 = _1653 * 2.0;
        float _1658 = (1.0 - _1653) / (_1653 + 1.0);
        float _4484 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1659 = isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0));
        float _1668 = ((((1.0 - _1659) * (_1654 + 2.0)) * exp2(log2(isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0))) * (_1654 + 1.0))) + _1659) * _1624;
        float _1669 = _1592 * 0.5;
        float _1670 = _1602 * 0.5;
        float _1671 = _1612 * 0.5;
        float _1672 = dot(vec3(_1669, _1670, _1671), vec3(_1669, _1670, _1671));
        float _1677 = (_1672 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1672);
        float _1685 = (dot(vec3(_867, _868, _869), vec3(_1677 * _1669, _1677 * _1670, _1677 * _1671)) + 1.0) * 0.5;
        float _4495 = isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0));
        float _1694 = sqrt(((_1670 * _1670) + (_1669 * _1669)) + (_1671 * _1671)) / (_1625 + 9.9999997473787516355514526367188e-06);
        float _4506 = isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0));
        float _1695 = isnan(1.0) ? _4506 : (isnan(_4506) ? 1.0 : min(_4506, 1.0));
        float _1696 = _1695 * 2.0;
        float _1700 = (1.0 - _1695) / (_1695 + 1.0);
        float _4517 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
        float _1701 = isnan(1.0) ? _4517 : (isnan(_4517) ? 1.0 : min(_4517, 1.0));
        float _1710 = ((((1.0 - _1701) * (_1696 + 2.0)) * exp2(log2(isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0))) * (_1696 + 1.0))) + _1701) * _1625;
        float _1711 = _1593 * 0.5;
        float _1712 = _1603 * 0.5;
        float _1713 = _1613 * 0.5;
        float _1714 = dot(vec3(_1711, _1712, _1713), vec3(_1711, _1712, _1713));
        float _1719 = (_1714 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1714);
        float _1727 = (dot(vec3(_867, _868, _869), vec3(_1719 * _1711, _1719 * _1712, _1719 * _1713)) + 1.0) * 0.5;
        float _4528 = isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0));
        float _1736 = sqrt(((_1712 * _1712) + (_1711 * _1711)) + (_1713 * _1713)) / (_1626 + 9.9999997473787516355514526367188e-06);
        float _4539 = isnan(0.0) ? _1736 : (isnan(_1736) ? 0.0 : max(_1736, 0.0));
        float _1737 = isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0));
        float _1738 = _1737 * 2.0;
        float _1742 = (1.0 - _1737) / (_1737 + 1.0);
        float _4550 = isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0));
        float _1743 = isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0));
        float _1752 = ((((1.0 - _1743) * (_1738 + 2.0)) * exp2(log2(isnan(1.0) ? _4528 : (isnan(_4528) ? 1.0 : min(_4528, 1.0))) * (_1738 + 1.0))) + _1743) * _1626;
        _1760 = _1593;
        _1761 = _1592;
        _1762 = _1591;
        _1763 = _1603;
        _1764 = _1602;
        _1765 = _1601;
        _1766 = _1613;
        _1767 = _1612;
        _1768 = _1611;
        _1769 = _1626;
        _1770 = _1625;
        _1771 = _1624;
        _1772 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0)));
        _1773 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0)));
        _1774 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0)));
    }
    else
    {
        _1760 = _1448;
        _1761 = _1448;
        _1762 = _1448;
        _1763 = _1448;
        _1764 = _1448;
        _1765 = _1448;
        _1766 = _1448;
        _1767 = _1448;
        _1768 = _1448;
        _1769 = _1448;
        _1770 = _1448;
        _1771 = _1448;
        _1772 = 0.0;
        _1773 = 0.0;
        _1774 = 0.0;
    }
    float _1784 = (cbModelParam._m0[1u].x * (_1772 - _1460)) + _1460;
    float _1785 = (cbModelParam._m0[1u].x * (_1773 - _1461)) + _1461;
    float _1786 = (cbModelParam._m0[1u].x * (_1774 - _1462)) + _1462;
    float _1807 = fma(_1786, cbSceneParam._m0[89u].z, fma(_1785, cbSceneParam._m0[89u].y, _1784 * cbSceneParam._m0[89u].x));
    float _1810 = fma(_1786, cbSceneParam._m0[90u].z, fma(_1785, cbSceneParam._m0[90u].y, _1784 * cbSceneParam._m0[90u].x));
    float _1813 = fma(_1786, cbSceneParam._m0[91u].z, fma(_1785, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1784));
    float _1828 = _1054 * 0.5;
    float _1829 = _1055 * 0.5;
    float _1830 = _1056 * 0.5;
    float _1831 = dot(vec4(_1828, _1829, _1830, 1.0), vec4(_1762, _1765, _1768, _1771));
    float _1834 = dot(vec4(_1828, _1829, _1830, 1.0), vec4(_1761, _1764, _1767, _1770));
    float _1837 = dot(vec4(_1828, _1829, _1830, 1.0), vec4(_1760, _1763, _1766, _1769));
    float _1871;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1844 = dot(vec4(_1828, _1829, _1830, 1.0), vec4(_1447, _1451, _1454, _1457));
        float _1848 = dot(vec4(_1828, _1829, _1830, 1.0), vec4(_1449, _1452, _1455, _1458));
        float _1852 = dot(vec4(_1828, _1829, _1830, 1.0), vec4(_1450, _1453, _1456, _1459));
        float _1859 = dot(vec4(cbModelParam._m0[39u]), vec4(_1828, _1829, _1830, 1.0));
        _1871 = dot(vec3(isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0)), isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0)), isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1859) ? 0.0 : (isnan(0.0) ? _1859 : max(0.0, _1859))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1871 = 1.0;
    }
    float _1882;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1873 = dot(vec4(cbModelParam._m0[40u]), vec4(_1828, _1829, _1830, 1.0));
        _1882 = dot(vec3(isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0)), isnan(0.0) ? _1834 : (isnan(_1834) ? 0.0 : max(_1834, 0.0)), isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1873) ? 0.0 : (isnan(0.0) ? _1873 : max(0.0, _1873))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1882 = 1.0;
    }
    float _1886 = (_1882 * cbModelParam._m0[1u].x) + (_1871 * (1.0 - cbModelParam._m0[1u].x));
    float _1896 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _870);
    float _1897 = isnan(_1896) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1896 : min(cbModelParam._m0[25u].z, _1896));
    float _1977;
    float _1979;
    float _1981;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1944 = fma(_1118, cbModelParam._m0[13u].z, fma(_1114, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1110)) + cbModelParam._m0[13u].w;
        float _1948 = fma(_1118, cbModelParam._m0[14u].z, fma(_1114, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1110)) + cbModelParam._m0[14u].w;
        float _1952 = fma(_1118, cbModelParam._m0[15u].z, fma(_1114, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1110)) + cbModelParam._m0[15u].w;
        float _1955 = fma(_1056, cbModelParam._m0[13u].z, fma(_1055, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1054));
        float _1958 = fma(_1056, cbModelParam._m0[14u].z, fma(_1055, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1054));
        float _1961 = fma(_1056, cbModelParam._m0[15u].z, fma(_1055, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1054));
        float _1989;
        if (_1955 > 0.0)
        {
            _1989 = abs((1.0 - _1944) / _1955);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1955 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1944 + 1.0) / _1955);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1989 = frontier_phi_17_15_ladder;
        }
        float _2160;
        if (_1958 > 0.0)
        {
            _2160 = abs((1.0 - _1948) / _1958);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1958 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1948 + 1.0) / _1958);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2160 = frontier_phi_26_22_ladder;
        }
        float _2456;
        if (_1961 > 0.0)
        {
            _2456 = abs((1.0 - _1952) / _1961);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1961 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1952 + 1.0) / _1961);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2456 = frontier_phi_38_33_ladder;
        }
        float _2458 = isnan(_2160) ? _1989 : (isnan(_1989) ? _2160 : min(_1989, _2160));
        float _2459 = isnan(_2456) ? _2458 : (isnan(_2458) ? _2456 : min(_2458, _2456));
        float _2463 = (_2459 * _1955) + _1944;
        float _2464 = (_2459 * _1958) + _1948;
        float _2465 = (_2459 * _1961) + _1952;
        float _2466 = _2459 * 9.9999997473787516355514526367188e-05;
        float _2468 = (-1.0) - _2466;
        float _2470 = _2466 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2465 > _2470) || ((_2465 < _2468) || ((_2464 > _2470) || ((_2464 < _2468) || ((_2463 < _2468) || (_2463 > _2470))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2610 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2465, cbModelParam._m0[9u].z, fma(_2464, cbModelParam._m0[9u].y, _2463 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2465, cbModelParam._m0[10u].z, fma(_2464, cbModelParam._m0[10u].y, _2463 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2465, cbModelParam._m0[11u].z, fma(_2464, cbModelParam._m0[11u].y, _2463 * cbModelParam._m0[11u].x))), _1897);
            frontier_phi_16_38_ladder = _2610.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2610.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2610.x * cbModelParam._m0[1u].y;
        }
        _1977 = frontier_phi_16_38_ladder_2;
        _1979 = frontier_phi_16_38_ladder_1;
        _1981 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1965 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1054, _1055, _1056), _1897);
        _1977 = _1965.x * cbModelParam._m0[1u].y;
        _1979 = _1965.y * cbModelParam._m0[1u].y;
        _1981 = _1965.z * cbModelParam._m0[1u].y;
    }
    float _1985 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _870);
    float _1986 = isnan(_1985) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1985 : min(cbModelParam._m0[25u].w, _1985));
    float _2075;
    float _2077;
    float _2079;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2039 = fma(_1118, cbModelParam._m0[21u].z, fma(_1114, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1110)) + cbModelParam._m0[21u].w;
        float _2043 = fma(_1118, cbModelParam._m0[22u].z, fma(_1114, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1110)) + cbModelParam._m0[22u].w;
        float _2047 = fma(_1118, cbModelParam._m0[23u].z, fma(_1114, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1110)) + cbModelParam._m0[23u].w;
        float _2050 = fma(_1056, cbModelParam._m0[21u].z, fma(_1055, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1054));
        float _2053 = fma(_1056, cbModelParam._m0[22u].z, fma(_1055, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1054));
        float _2056 = fma(_1056, cbModelParam._m0[23u].z, fma(_1055, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1054));
        float _2165;
        if (_2050 > 0.0)
        {
            _2165 = abs((1.0 - _2039) / _2050);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2050 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2039 + 1.0) / _2050);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2165 = frontier_phi_28_24_ladder;
        }
        float _2483;
        if (_2053 > 0.0)
        {
            _2483 = abs((1.0 - _2043) / _2053);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2053 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2043 + 1.0) / _2053);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2483 = frontier_phi_40_35_ladder;
        }
        float _2821;
        if (_2056 > 0.0)
        {
            _2821 = abs((1.0 - _2047) / _2056);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2056 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2047 + 1.0) / _2056);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2821 = frontier_phi_50_47_ladder;
        }
        float _2823 = isnan(_2483) ? _2165 : (isnan(_2165) ? _2483 : min(_2165, _2483));
        float _2824 = isnan(_2821) ? _2823 : (isnan(_2823) ? _2821 : min(_2823, _2821));
        float _2828 = (_2824 * _2050) + _2039;
        float _2829 = (_2824 * _2053) + _2043;
        float _2830 = (_2824 * _2056) + _2047;
        float _2831 = _2824 * 9.9999997473787516355514526367188e-05;
        float _2832 = (-1.0) - _2831;
        float _2834 = _2831 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2830 > _2834) || ((_2830 < _2832) || ((_2829 > _2834) || ((_2829 < _2832) || ((_2828 < _2832) || (_2828 > _2834))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2952 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2830, cbModelParam._m0[17u].z, fma(_2829, cbModelParam._m0[17u].y, _2828 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2830, cbModelParam._m0[18u].z, fma(_2829, cbModelParam._m0[18u].y, _2828 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2830, cbModelParam._m0[19u].z, fma(_2829, cbModelParam._m0[19u].y, _2828 * cbModelParam._m0[19u].x))), _1986);
            frontier_phi_25_50_ladder = _2952.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2952.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2952.x * cbModelParam._m0[1u].z;
        }
        _2075 = frontier_phi_25_50_ladder_2;
        _2077 = frontier_phi_25_50_ladder_1;
        _2079 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2059 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1054, _1055, _1056), _1986);
        _2075 = _2059.x * cbModelParam._m0[1u].z;
        _2077 = _2059.y * cbModelParam._m0[1u].z;
        _2079 = _2059.z * cbModelParam._m0[1u].z;
    }
    float _2092 = (((_1081 * _1031) + _1082) * _1046) * ((cbModelParam._m0[1u].w * (_2075 - _1977)) + _1977);
    float _2094 = (((_1081 * _1033) + _1082) * _1046) * ((cbModelParam._m0[1u].w * (_2077 - _1979)) + _1979);
    float _2096 = (((_1081 * _1034) + _1082) * _1046) * ((cbModelParam._m0[1u].w * (_2079 - _1981)) + _1981);
    float _2099 = fma(_2096, cbSceneParam._m0[89u].z, fma(_2094, cbSceneParam._m0[89u].y, _2092 * cbSceneParam._m0[89u].x));
    float _2102 = fma(_2096, cbSceneParam._m0[90u].z, fma(_2094, cbSceneParam._m0[90u].y, _2092 * cbSceneParam._m0[90u].x));
    float _2105 = fma(_2096, cbSceneParam._m0[91u].z, fma(_2094, cbSceneParam._m0[91u].y, _2092 * cbSceneParam._m0[91u].x));
    float _2139 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2143 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2147 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2151 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2152 = _2139 / _2151;
    float _2153 = _2143 / _2151;
    float _2154 = _2147 / _2151;
    float _2301;
    float _2302;
    float _2303;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2181 = ((uint(_2154 > cbSceneParam._m0[59u].y) + uint(_2154 > cbSceneParam._m0[59u].x)) + uint(_2154 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2182 = _2181 + 43u;
        uint _2190 = _2181 + 44u;
        uint _2198 = _2181 + 45u;
        uint _2206 = _2181 + 46u;
        float _2217 = fma(_2151, cbSceneParam._m0[_2182].w, fma(_2147, cbSceneParam._m0[_2182].z, fma(_2143, cbSceneParam._m0[_2182].y, _2139 * cbSceneParam._m0[_2182].x)));
        float _2221 = fma(_2151, cbSceneParam._m0[_2190].w, fma(_2147, cbSceneParam._m0[_2190].z, fma(_2143, cbSceneParam._m0[_2190].y, _2139 * cbSceneParam._m0[_2190].x)));
        float _2229 = fma(_2151, cbSceneParam._m0[_2206].w, fma(_2147, cbSceneParam._m0[_2206].z, fma(_2143, cbSceneParam._m0[_2206].y, _2139 * cbSceneParam._m0[_2206].x)));
        float _2234 = cbSceneParam._m0[33u].z * _2229;
        float _2236 = cbSceneParam._m0[33u].w * _2229;
        float _2239 = fma(_2151, cbSceneParam._m0[_2198].w, fma(_2147, cbSceneParam._m0[_2198].z, fma(_2143, cbSceneParam._m0[_2198].y, _2139 * cbSceneParam._m0[_2198].x))) / _2229;
        float _2287 = (cbSceneParam._m0[33u].x - sqrt(((_2153 * _2153) + (_2152 * _2152)) + (_2154 * _2154))) * cbSceneParam._m0[33u].y;
        float _4676 = isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0));
        float _2294 = (isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2234 + _2217) / _2229, (_2236 + _2221) / _2229), _2239), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2236 + _2217) / _2229, (_2221 - _2234) / _2229), _2239), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2217 - _2234) / _2229, (_2221 - _2236) / _2229), _2239), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2217 - _2236) / _2229, (_2234 + _2221) / _2229), _2239), 0.0)).x), vec4(0.25)));
        _2301 = 1.0 - (_2294 * cbSceneParam._m0[34u].x);
        _2302 = 1.0 - (_2294 * cbSceneParam._m0[34u].y);
        _2303 = 1.0 - (_2294 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2301 = 1.0;
        _2302 = 1.0;
        _2303 = 1.0;
    }
    float _2367;
    float _2369;
    float _2371;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2355 = fma(_2151, cbSceneParam._m0[63u].w, fma(_2147, cbSceneParam._m0[63u].z, fma(_2143, cbSceneParam._m0[63u].y, _2139 * cbSceneParam._m0[63u].x)));
        float _2356 = fma(_2151, cbSceneParam._m0[60u].w, fma(_2147, cbSceneParam._m0[60u].z, fma(_2143, cbSceneParam._m0[60u].y, _2139 * cbSceneParam._m0[60u].x))) / _2355;
        float _2357 = fma(_2151, cbSceneParam._m0[61u].w, fma(_2147, cbSceneParam._m0[61u].z, fma(_2143, cbSceneParam._m0[61u].y, _2139 * cbSceneParam._m0[61u].x))) / _2355;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2356 >= cbSceneParam._m0[64u].x) && (_2357 >= cbSceneParam._m0[64u].y)) && (_2356 <= cbSceneParam._m0[64u].z)) && (_2357 <= cbSceneParam._m0[64u].w))
        {
            float _2496 = fma(_2151, cbSceneParam._m0[62u].w, fma(_2147, cbSceneParam._m0[62u].z, fma(_2143, cbSceneParam._m0[62u].y, _2139 * cbSceneParam._m0[62u].x))) / _2355;
            float _2500 = isnan(cbSceneParam._m0[41u].w) ? _2496 : (isnan(_2496) ? cbSceneParam._m0[41u].w : max(_2496, cbSceneParam._m0[41u].w));
            float _2543 = (cbSceneParam._m0[33u].x - sqrt(((_2153 * _2153) + (_2152 * _2152)) + (_2154 * _2154))) * cbSceneParam._m0[33u].y;
            float _4692 = isnan(0.0) ? _2543 : (isnan(_2543) ? 0.0 : max(_2543, 0.0));
            float _2550 = (isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2356, cbSceneParam._m0[33u].w + _2357), _2500), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2356, _2357 - cbSceneParam._m0[33u].z), _2500), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2356 - cbSceneParam._m0[33u].z, _2357 - cbSceneParam._m0[33u].w), _2500), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2356 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2357), _2500), 0.0)).x), vec4(0.25)));
            float _2554 = 1.0 - (_2550 * cbSceneParam._m0[34u].x);
            float _2555 = 1.0 - (_2550 * cbSceneParam._m0[34u].y);
            float _2556 = 1.0 - (_2550 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2556) ? _2303 : (isnan(_2303) ? _2556 : min(_2303, _2556));
            frontier_phi_37_36_ladder_1 = isnan(_2555) ? _2302 : (isnan(_2302) ? _2555 : min(_2302, _2555));
            frontier_phi_37_36_ladder_2 = isnan(_2554) ? _2301 : (isnan(_2301) ? _2554 : min(_2301, _2554));
        }
        else
        {
            frontier_phi_37_36_ladder = _2303;
            frontier_phi_37_36_ladder_1 = _2302;
            frontier_phi_37_36_ladder_2 = _2301;
        }
        _2367 = frontier_phi_37_36_ladder_2;
        _2369 = frontier_phi_37_36_ladder_1;
        _2371 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2367 = _2301;
        _2369 = _2302;
        _2371 = _2303;
    }
    uvec4 _2376 = floatBitsToUint(cbInstanceData._m0[_1006 + 5u]);
    uint _2378 = _2376.x * 14u;
    uint _2379 = _2378 + 13u;
    float _2386 = _1046 + (-1.0);
    float _2391 = (cbLight._m0[_2379].x * _2386) + 1.0;
    float _2392 = (cbLight._m0[_2379].y * _2386) + 1.0;
    float _2393 = (cbLight._m0[_2379].z * _2386) + 1.0;
    float _2394 = (cbLight._m0[_2379].w * _2386) + 1.0;
    uint _2395 = _2378 + 5u;
    float _2401 = isnan(1.0) ? _2392 : (isnan(_2392) ? 1.0 : min(_2392, 1.0));
    uint _2405 = _2378 + 4u;
    float _2415 = isnan(1.0) ? _2391 : (isnan(_2391) ? 1.0 : min(_2391, 1.0));
    uint _2419 = _2378 | 1u;
    float _2430 = dot(vec3(cbLight._m0[_2378].xyz), vec3(_867, _868, _869));
    float _2433 = dot(vec3(cbLight._m0[_2419].xyz), vec3(_867, _868, _869));
    float _4728 = isnan(0.0) ? _2430 : (isnan(_2430) ? 0.0 : max(_2430, 0.0));
    float _4739 = isnan(0.0) ? _2433 : (isnan(_2433) ? 0.0 : max(_2433, 0.0));
    float _2438 = (isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0))) * 0.3183098733425140380859375;
    float _2440 = (isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0))) * 0.3183098733425140380859375;
    float _2447 = ((cbLight._m0[_2395].x * _2401) * _2440) + (((cbLight._m0[_2405].x * _2367) * _2415) * _2438);
    float _2448 = ((_2401 * cbLight._m0[_2395].y) * _2440) + (((cbLight._m0[_2405].y * _2369) * _2415) * _2438);
    float _2449 = ((_2401 * cbLight._m0[_2395].z) * _2440) + (((cbLight._m0[_2405].z * _2371) * _2415) * _2438);
    uvec4 _2453 = floatBitsToUint(cbLight._m0[_2378 + 12u]);
    bool _2455 = _2453.x == 0u;
    float _2557;
    float _2559;
    float _2561;
    if (_2455)
    {
        _2557 = _2447;
        _2559 = _2448;
        _2561 = _2449;
    }
    else
    {
        uint _2565 = _2378 + 6u;
        float _2581 = (dot(vec3(cbLight._m0[_2378 + 2u].xyz), vec3(_867, _868, _869)) * 0.5) + 0.5;
        float _2582 = _2581 * _2581;
        float _4750 = isnan(0.0) ? _2582 : (isnan(_2582) ? 0.0 : max(_2582, 0.0));
        float _2583 = isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0));
        float _2584 = isnan(1.0) ? _2393 : (isnan(_2393) ? 1.0 : min(_2393, 1.0));
        _2557 = (((cbLight._m0[_2565].x * 0.3183098733425140380859375) * _2583) * _2584) + _2447;
        _2559 = (((cbLight._m0[_2565].y * 0.3183098733425140380859375) * _2583) * _2584) + _2448;
        _2561 = (((cbLight._m0[_2565].z * 0.3183098733425140380859375) * _2583) * _2584) + _2449;
    }
    bool _2564 = _2453.y == 0u;
    float _2619;
    float _2621;
    float _2623;
    if (_2564)
    {
        _2619 = _2557;
        _2621 = _2559;
        _2623 = _2561;
    }
    else
    {
        uint _2792 = _2378 + 7u;
        float _2808 = (dot(vec3(cbLight._m0[_2378 + 3u].xyz), vec3(_867, _868, _869)) * 0.5) + 0.5;
        float _2809 = _2808 * _2808;
        float _4766 = isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : max(_2809, 0.0));
        float _2810 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
        float _2811 = isnan(1.0) ? _2394 : (isnan(_2394) ? 1.0 : min(_2394, 1.0));
        _2619 = (((cbLight._m0[_2792].x * 0.3183098733425140380859375) * _2810) * _2811) + _2557;
        _2621 = (((cbLight._m0[_2792].y * 0.3183098733425140380859375) * _2810) * _2811) + _2559;
        _2623 = (((cbLight._m0[_2792].z * 0.3183098733425140380859375) * _2810) * _2811) + _2561;
    }
    uint _2626 = _2378 + 8u;
    float _2639 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2378].w)) * _870) * 0.949999988079071044921875);
    float _2640 = _2639 * _2639;
    float _2641 = cbLight._m0[_2378].x + _948;
    float _2642 = cbLight._m0[_2378].y + _949;
    float _2643 = cbLight._m0[_2378].z + _950;
    float _2647 = inversesqrt(dot(vec3(_2641, _2642, _2643), vec3(_2641, _2642, _2643)));
    float _2648 = _2647 * _2641;
    float _2649 = _2647 * _2642;
    float _2650 = _2647 * _2643;
    float _2651 = dot(vec3(_867, _868, _869), vec3(cbLight._m0[_2378].xyz));
    float _4782 = isnan(0.0) ? _2651 : (isnan(_2651) ? 0.0 : max(_2651, 0.0));
    float _2654 = isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0));
    float _4793 = isnan(0.0) ? _1047 : (isnan(_1047) ? 0.0 : max(_1047, 0.0));
    float _2655 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
    float _2656 = dot(vec3(_867, _868, _869), vec3(_2648, _2649, _2650));
    float _4804 = isnan(0.0) ? _2656 : (isnan(_2656) ? 0.0 : max(_2656, 0.0));
    float _2659 = isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0));
    float _2660 = dot(vec3(cbLight._m0[_2378].xyz), vec3(_2648, _2649, _2650));
    float _4815 = isnan(0.0) ? _2660 : (isnan(_2660) ? 0.0 : max(_2660, 0.0));
    float _2664 = _2640 * _2640;
    float _2668 = ((_2659 * _2659) * (_2664 + (-1.0))) + 1.0;
    float _2676 = exp2(log2(1.0 - (isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0)))) * 5.0);
    float _2677 = 0.959999978542327880859375 - _1028;
    float _2679 = 0.959999978542327880859375 - _1029;
    float _2680 = 0.959999978542327880859375 - _1030;
    float _2687 = 1.0 - _2640;
    float _2698 = (0.5 / (((_2655 * ((_2654 * _2687) + _2640)) + 9.9999999392252902907785028219223e-09) + (((_2655 * _2687) + _2640) * _2654))) * _2654;
    float _4826 = isnan(0.0) ? _2698 : (isnan(_2698) ? 0.0 : max(_2698, 0.0));
    float _2700 = (isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0))) * (_2664 / ((_2668 * _2668) * 3.141590118408203125));
    uint _2714 = _2378 + 9u;
    float _2725 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2419].w)) * _870) * 0.949999988079071044921875);
    float _2726 = _2725 * _2725;
    float _2727 = cbLight._m0[_2419].x + _948;
    float _2728 = cbLight._m0[_2419].y + _949;
    float _2729 = cbLight._m0[_2419].z + _950;
    float _2733 = inversesqrt(dot(vec3(_2727, _2728, _2729), vec3(_2727, _2728, _2729)));
    float _2734 = _2733 * _2727;
    float _2735 = _2733 * _2728;
    float _2736 = _2733 * _2729;
    float _2737 = dot(vec3(_867, _868, _869), vec3(cbLight._m0[_2419].xyz));
    float _4837 = isnan(0.0) ? _2737 : (isnan(_2737) ? 0.0 : max(_2737, 0.0));
    float _2740 = isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0));
    float _2741 = dot(vec3(_867, _868, _869), vec3(_2734, _2735, _2736));
    float _4848 = isnan(0.0) ? _2741 : (isnan(_2741) ? 0.0 : max(_2741, 0.0));
    float _2744 = isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0));
    float _2745 = dot(vec3(cbLight._m0[_2419].xyz), vec3(_2734, _2735, _2736));
    float _4859 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0));
    float _2749 = _2726 * _2726;
    float _2753 = ((_2744 * _2744) * (_2749 + (-1.0))) + 1.0;
    float _2760 = exp2(log2(1.0 - (isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0)))) * 5.0);
    float _2767 = 1.0 - _2726;
    float _2777 = (0.5 / (((_2655 * ((_2740 * _2767) + _2726)) + 9.9999999392252902907785028219223e-09) + (((_2655 * _2767) + _2726) * _2740))) * _2740;
    float _4870 = isnan(0.0) ? _2777 : (isnan(_2777) ? 0.0 : max(_2777, 0.0));
    float _2779 = (isnan(1.0) ? _4870 : (isnan(_4870) ? 1.0 : min(_4870, 1.0))) * (_2749 / ((_2753 * _2753) * 3.141590118408203125));
    float _2789 = (((((_2760 * _2677) + _1031) * cbLight._m0[_2714].x) * _2779) * _2401) + ((((cbLight._m0[_2626].x * _2367) * ((_2676 * _2677) + _1031)) * _2700) * _2415);
    float _2790 = (((((_2760 * _2679) + _1033) * cbLight._m0[_2714].y) * _2779) * _2401) + ((((cbLight._m0[_2626].y * _2369) * ((_2676 * _2679) + _1033)) * _2700) * _2415);
    float _2791 = (((((_2760 * _2680) + _1034) * cbLight._m0[_2714].z) * _2779) * _2401) + ((((cbLight._m0[_2626].z * _2371) * ((_2676 * _2680) + _1034)) * _2700) * _2415);
    float _2847;
    float _2849;
    float _2851;
    if (_2455)
    {
        _2847 = _2789;
        _2849 = _2790;
        _2851 = _2791;
    }
    else
    {
        uint _2853 = _2378 + 2u;
        uint _2857 = _2378 + 10u;
        float _2871 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2853].w)) * _870) * 0.949999988079071044921875);
        float _2872 = _2871 * _2871;
        float _2873 = cbLight._m0[_2853].x + _948;
        float _2874 = cbLight._m0[_2853].y + _949;
        float _2875 = cbLight._m0[_2853].z + _950;
        float _2879 = inversesqrt(dot(vec3(_2873, _2874, _2875), vec3(_2873, _2874, _2875)));
        float _2880 = _2879 * _2873;
        float _2881 = _2879 * _2874;
        float _2882 = _2879 * _2875;
        float _2883 = dot(vec3(_867, _868, _869), vec3(cbLight._m0[_2853].xyz));
        float _4881 = isnan(0.0) ? _2883 : (isnan(_2883) ? 0.0 : max(_2883, 0.0));
        float _2886 = isnan(1.0) ? _4881 : (isnan(_4881) ? 1.0 : min(_4881, 1.0));
        float _2887 = dot(vec3(_867, _868, _869), vec3(_2880, _2881, _2882));
        float _4892 = isnan(0.0) ? _2887 : (isnan(_2887) ? 0.0 : max(_2887, 0.0));
        float _2890 = isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0));
        float _2891 = dot(vec3(cbLight._m0[_2853].xyz), vec3(_2880, _2881, _2882));
        float _4903 = isnan(0.0) ? _2891 : (isnan(_2891) ? 0.0 : max(_2891, 0.0));
        float _2895 = _2872 * _2872;
        float _2899 = ((_2890 * _2890) * (_2895 + (-1.0))) + 1.0;
        float _2906 = exp2(log2(1.0 - (isnan(1.0) ? _4903 : (isnan(_4903) ? 1.0 : min(_4903, 1.0)))) * 5.0);
        float _2913 = 1.0 - _2872;
        float _2923 = (0.5 / (((_2655 * ((_2886 * _2913) + _2872)) + 9.9999999392252902907785028219223e-09) + (((_2655 * _2913) + _2872) * _2886))) * _2886;
        float _4914 = isnan(0.0) ? _2923 : (isnan(_2923) ? 0.0 : max(_2923, 0.0));
        float _2925 = (isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0))) * (_2895 / ((_2899 * _2899) * 3.141590118408203125));
        float _2926 = isnan(1.0) ? _2393 : (isnan(_2393) ? 1.0 : min(_2393, 1.0));
        _2847 = (((((_2906 * _2677) + _1031) * cbLight._m0[_2857].x) * _2925) * _2926) + _2789;
        _2849 = (((((_2906 * _2679) + _1033) * cbLight._m0[_2857].y) * _2925) * _2926) + _2790;
        _2851 = (((((_2906 * _2680) + _1034) * cbLight._m0[_2857].z) * _2925) * _2926) + _2791;
    }
    float _2957;
    float _2959;
    float _2961;
    if (_2564)
    {
        _2957 = _2847;
        _2959 = _2849;
        _2961 = _2851;
    }
    else
    {
        uint _2968 = _2378 + 3u;
        uint _2972 = _2378 + 11u;
        float _2986 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2968].w)) * _870) * 0.949999988079071044921875);
        float _2987 = _2986 * _2986;
        float _2988 = cbLight._m0[_2968].x + _948;
        float _2989 = cbLight._m0[_2968].y + _949;
        float _2990 = cbLight._m0[_2968].z + _950;
        float _2994 = inversesqrt(dot(vec3(_2988, _2989, _2990), vec3(_2988, _2989, _2990)));
        float _2995 = _2994 * _2988;
        float _2996 = _2994 * _2989;
        float _2997 = _2994 * _2990;
        float _2998 = dot(vec3(_867, _868, _869), vec3(cbLight._m0[_2968].xyz));
        float _4930 = isnan(0.0) ? _2998 : (isnan(_2998) ? 0.0 : max(_2998, 0.0));
        float _3001 = isnan(1.0) ? _4930 : (isnan(_4930) ? 1.0 : min(_4930, 1.0));
        float _3002 = dot(vec3(_867, _868, _869), vec3(_2995, _2996, _2997));
        float _4941 = isnan(0.0) ? _3002 : (isnan(_3002) ? 0.0 : max(_3002, 0.0));
        float _3005 = isnan(1.0) ? _4941 : (isnan(_4941) ? 1.0 : min(_4941, 1.0));
        float _3006 = dot(vec3(cbLight._m0[_2968].xyz), vec3(_2995, _2996, _2997));
        float _4952 = isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : max(_3006, 0.0));
        float _3010 = _2987 * _2987;
        float _3014 = ((_3005 * _3005) * (_3010 + (-1.0))) + 1.0;
        float _3021 = exp2(log2(1.0 - (isnan(1.0) ? _4952 : (isnan(_4952) ? 1.0 : min(_4952, 1.0)))) * 5.0);
        float _3028 = 1.0 - _2987;
        float _3038 = (0.5 / (((_2655 * ((_3001 * _3028) + _2987)) + 9.9999999392252902907785028219223e-09) + (((_2655 * _3028) + _2987) * _3001))) * _3001;
        float _4963 = isnan(0.0) ? _3038 : (isnan(_3038) ? 0.0 : max(_3038, 0.0));
        float _3040 = (isnan(1.0) ? _4963 : (isnan(_4963) ? 1.0 : min(_4963, 1.0))) * (_3010 / ((_3014 * _3014) * 3.141590118408203125));
        float _3041 = isnan(1.0) ? _2394 : (isnan(_2394) ? 1.0 : min(_2394, 1.0));
        _2957 = (((((_3021 * _2677) + _1031) * cbLight._m0[_2972].x) * _3040) * _3041) + _2847;
        _2959 = (((((_3021 * _2679) + _1033) * cbLight._m0[_2972].y) * _3040) * _3041) + _2849;
        _2961 = (((((_3021 * _2680) + _1034) * cbLight._m0[_2972].z) * _3040) * _3041) + _2851;
    }
    float _3107;
    float _3109;
    float _3111;
    float _3113;
    float _3115;
    float _3117;
    if (_2376.y == 0u)
    {
        uvec4 _3062 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3063 = _3062.x;
        uint _3074 = uint((float(_3062.y) * floor(float(uint(cbSceneParam._m0[85u].y * _969) / _3063))) + floor(float(uint(cbSceneParam._m0[85u].x * _968) / _3063)));
        float _3084 = (log2(_2154 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3085 = isnan(0.0) ? _3084 : (isnan(_3084) ? 0.0 : max(_3084, 0.0));
        uint _3088 = uint(isnan(14.0) ? _3085 : (isnan(_3085) ? 14.0 : min(_3085, 14.0)));
        uvec4 _3093 = texelFetch(g_lightClusterGridBuffer, int(((_3088 << 2u) + (_3074 << 6u)) >> 2u));
        uint _3094 = _3093.x;
        uint _3095 = _3062.z;
        float _3197;
        float _3199;
        float _3201;
        float _3203;
        float _3205;
        float _3207;
        if (((((1u << ((_3095 >> 4u) & 15u)) + 4294967295u) & _3094) == 0u) || ((_3095 & 240u) == 0u))
        {
            _3197 = 0.0;
            _3199 = 0.0;
            _3201 = 0.0;
            _3203 = 0.0;
            _3205 = 0.0;
            _3207 = 0.0;
        }
        else
        {
            float _3198;
            float _3200;
            float _3202;
            float _3204;
            float _3206;
            float _3208;
            float _3348 = 0.0;
            float _3349 = 0.0;
            float _3350 = 0.0;
            float _3351 = 0.0;
            float _3352 = 0.0;
            float _3353 = 0.0;
            uint _3354 = 0u;
            uint _3363;
            bool _3364;
            for (;;)
            {
                _3363 = texelFetch(g_lightClassification, int((((_3088 << 5u) + (_3074 << 9u)) + (_3354 << 2u)) >> 2u)).x;
                _3364 = _3363 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3364)
                {
                    frontier_phi_71_pred = _3353;
                    frontier_phi_71_pred_1 = _3352;
                    frontier_phi_71_pred_2 = _3351;
                    frontier_phi_71_pred_3 = _3350;
                    frontier_phi_71_pred_4 = _3349;
                    frontier_phi_71_pred_5 = _3348;
                }
                else
                {
                    float _3493;
                    float _3494;
                    float _3495;
                    float _3496;
                    float _3497;
                    float _3498;
                    uint _3499;
                    _3493 = _3348;
                    _3494 = _3349;
                    _3495 = _3350;
                    _3496 = _3351;
                    _3497 = _3352;
                    _3498 = _3353;
                    _3499 = _3363;
                    float _3420;
                    float _3421;
                    float _3422;
                    float _3423;
                    float _3424;
                    float _3425;
                    for (;;)
                    {
                        uint _3503 = uint(findLSB(_3499)) + (_3354 << 5u);
                        uint _3500 = (_3499 + 4294967295u) & _3499;
                        uint _3505 = _3503 * 48u;
                        vec4 _3519 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3505)).x, texelFetch(g_PointLightRenderingBuffer, int(_3505 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3505 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3505 + 3u)).x));
                        uint _3525 = (_3503 * 48u) + 4u;
                        vec4 _3538 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3525)).x, texelFetch(g_PointLightRenderingBuffer, int(_3525 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3525 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3525 + 3u)).x));
                        uint _3544 = (_3503 * 48u) + 8u;
                        vec3 _3555 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3544)).x, texelFetch(g_PointLightRenderingBuffer, int(_3544 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3544 + 2u)).x));
                        float _3559 = _3519.x - _2152;
                        float _3560 = _3519.y - _2153;
                        float _3561 = _3519.z - _2154;
                        float _3562 = dot(vec3(_3559, _3560, _3561), vec3(_3559, _3560, _3561));
                        float _3565 = inversesqrt(_3562);
                        float _3566 = _3565 * _3559;
                        float _3567 = _3565 * _3560;
                        float _3568 = _3565 * _3561;
                        float _3569 = dot(vec3(_987, _990, _993), vec3(_3566, _3567, _3568));
                        float _3574 = 1.0 - (_3562 * _3519.w);
                        float _4989 = isnan(0.0) ? _3574 : (isnan(_3574) ? 0.0 : max(_3574, 0.0));
                        float _3575 = isnan(1.0) ? _4989 : (isnan(_4989) ? 1.0 : min(_4989, 1.0));
                        float _3576 = sqrt(_3562) * _3538.w;
                        float _3579 = 1.39999997615814208984375 / (_3576 + 1.39999997615814208984375);
                        float _3580 = _3579 * _3579;
                        float _3583 = ((1.0 - _3580) * _3569) + _3580;
                        float _3586 = _3576 * _3576;
                        float _3590 = ((isnan(0.0) ? _3583 : (isnan(_3583) ? 0.0 : max(_3583, 0.0))) * _3575) / ((_3586 * 0.699999988079071044921875) + 1.0);
                        float _3594 = (-0.0) - _2152;
                        float _3595 = (-0.0) - _2153;
                        float _3596 = (-0.0) - _2154;
                        float _3600 = inversesqrt(dot(vec3(_3594, _3595, _3596), vec3(_3594, _3595, _3596)));
                        float _3601 = _3600 * _3594;
                        float _3602 = _3600 * _3595;
                        float _3603 = _3600 * _3596;
                        float _3610 = exp2(log2(1.0 / ((_3586 * 3.5) + 5.0)) * 0.25);
                        float _3611 = 1.0 - _1062;
                        float _3618 = sqrt(1.0 - ((1.0 - (_3611 * _3611)) * (1.0 - (_3610 * _3610))));
                        float _3619 = _3618 * _3618;
                        float _3620 = _3619 * _3619;
                        float _3621 = _3601 + _3566;
                        float _3622 = _3602 + _3567;
                        float _3623 = _3603 + _3568;
                        float _3627 = inversesqrt(dot(vec3(_3621, _3622, _3623), vec3(_3621, _3622, _3623)));
                        float _3631 = dot(vec3(_987, _990, _993), vec3(_3601, _3602, _3603));
                        float _5005 = isnan(0.0) ? _3631 : (isnan(_3631) ? 0.0 : max(_3631, 0.0));
                        float _3634 = isnan(1.0) ? _5005 : (isnan(_5005) ? 1.0 : min(_5005, 1.0));
                        float _3635 = dot(vec3(_987, _990, _993), vec3(_3627 * _3621, _3627 * _3622, _3627 * _3623));
                        float _5016 = isnan(0.0) ? _3635 : (isnan(_3635) ? 0.0 : max(_3635, 0.0));
                        float _3638 = isnan(1.0) ? _5016 : (isnan(_5016) ? 1.0 : min(_5016, 1.0));
                        float _3642 = ((_3638 * _3638) * (_3620 + (-1.0))) + 1.0;
                        float _3643 = _3579 * _3619;
                        float _3644 = _3643 * _3643;
                        float _3647 = ((1.0 - _3644) * _3569) + _3644;
                        float _5027 = isnan(0.0) ? _3647 : (isnan(_3647) ? 0.0 : max(_3647, 0.0));
                        float _3648 = isnan(1.0) ? _5027 : (isnan(_5027) ? 1.0 : min(_5027, 1.0));
                        float _3649 = 1.0 - _3619;
                        float _3659 = (0.5 / (((_3648 * ((_3634 * _3649) + _3619)) + 9.9999999392252902907785028219223e-09) + (((_3648 * _3649) + _3619) * _3634))) * _3648;
                        float _5038 = isnan(0.0) ? _3659 : (isnan(_3659) ? 0.0 : max(_3659, 0.0));
                        float _3670 = (((_3620 * 3.1415927410125732421875) * (isnan(1.0) ? _5038 : (isnan(_5038) ? 1.0 : min(_5038, 1.0)))) / ((_3642 * _3642) * ((_3586 * 2.1991131305694580078125) + 3.141590118408203125))) * _3575;
                        _3423 = (_3590 * _3538.x) + _3496;
                        _3424 = (_3590 * _3538.y) + _3497;
                        _3425 = (_3590 * _3538.z) + _3498;
                        _3420 = (_3670 * _3555.x) + _3493;
                        _3421 = (_3670 * _3555.y) + _3494;
                        _3422 = (_3670 * _3555.z) + _3495;
                        if (_3500 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3493 = _3420;
                            _3494 = _3421;
                            _3495 = _3422;
                            _3496 = _3423;
                            _3497 = _3424;
                            _3498 = _3425;
                            _3499 = _3500;
                        }
                    }
                    frontier_phi_71_pred = _3425;
                    frontier_phi_71_pred_1 = _3424;
                    frontier_phi_71_pred_2 = _3423;
                    frontier_phi_71_pred_3 = _3422;
                    frontier_phi_71_pred_4 = _3421;
                    frontier_phi_71_pred_5 = _3420;
                }
                _3208 = frontier_phi_71_pred;
                _3206 = frontier_phi_71_pred_1;
                _3204 = frontier_phi_71_pred_2;
                _3202 = frontier_phi_71_pred_3;
                _3200 = frontier_phi_71_pred_4;
                _3198 = frontier_phi_71_pred_5;
                uint _3355 = _3354 + 1u;
                if (_3355 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3348 = _3198;
                    _3349 = _3200;
                    _3350 = _3202;
                    _3351 = _3204;
                    _3352 = _3206;
                    _3353 = _3208;
                    _3354 = _3355;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3197 = _3198;
            _3199 = _3200;
            _3201 = _3202;
            _3203 = _3204;
            _3205 = _3206;
            _3207 = _3208;
        }
        uvec4 _3211 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3212 = _3211.z;
        uint _3214 = (_3212 >> 8u) & 15u;
        float _3316;
        float _3318;
        float _3320;
        float _3322;
        float _3324;
        float _3326;
        if (((4294967295u << _3214) & _3094) == 0u)
        {
            _3316 = _3197;
            _3318 = _3199;
            _3320 = _3201;
            _3322 = _3203;
            _3324 = _3205;
            _3326 = _3207;
        }
        else
        {
            float _3341 = inversesqrt(dot(vec3(_2152, _2153, _2154), vec3(_2152, _2153, _2154)));
            float _3342 = _3341 * _2152;
            float _3343 = _3341 * _2153;
            float _3344 = _3341 * _2154;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3214 < ((_3212 >> 12u) & 15u))
            {
                float _3317;
                float _3319;
                float _3321;
                float _3323;
                float _3325;
                float _3327;
                float _3476 = _3197;
                float _3477 = _3199;
                float _3478 = _3201;
                float _3479 = _3203;
                float _3480 = _3205;
                float _3481 = _3207;
                uint _3482 = _3214;
                uint _3491;
                bool _3492;
                for (;;)
                {
                    _3491 = texelFetch(g_lightClassification, int((((_3088 << 5u) + (_3074 << 9u)) + (_3482 << 2u)) >> 2u)).x;
                    _3492 = _3491 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3492)
                    {
                        frontier_phi_82_pred = _3481;
                        frontier_phi_82_pred_1 = _3480;
                        frontier_phi_82_pred_2 = _3479;
                        frontier_phi_82_pred_3 = _3478;
                        frontier_phi_82_pred_4 = _3477;
                        frontier_phi_82_pred_5 = _3476;
                    }
                    else
                    {
                        float _3684;
                        float _3685;
                        float _3686;
                        float _3687;
                        float _3688;
                        float _3689;
                        float _3977;
                        float _3978;
                        float _3979;
                        float _3980;
                        float _3981;
                        float _3982;
                        float _3697 = _3476;
                        float _3698 = _3477;
                        float _3699 = _3478;
                        float _3700 = _3479;
                        float _3701 = _3480;
                        float _3702 = _3481;
                        uint _3703 = _3491;
                        uint _3704;
                        vec4 _3729;
                        float _3730;
                        vec4 _3745;
                        vec3 _3757;
                        vec4 _3772;
                        vec4 _3787;
                        float _3833;
                        bool _3834;
                        for (;;)
                        {
                            uint _3714 = ((_3482 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3703));
                            _3704 = (_3703 + 4294967295u) & _3703;
                            uint _3716 = _3714 * 40u;
                            _3729 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3716)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 3u)).x));
                            _3730 = _3729.w;
                            uint _3732 = (_3714 * 40u) + 4u;
                            _3745 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3732)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3732 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3732 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3732 + 3u)).x));
                            uint _3747 = (_3714 * 40u) + 8u;
                            _3757 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3747)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3747 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3747 + 2u)).x));
                            uint _3759 = (_3714 * 40u) + 16u;
                            _3772 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3759)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3759 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3759 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3759 + 3u)).x));
                            uint _3774 = (_3714 * 40u) + 20u;
                            _3787 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3774)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3774 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3774 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3774 + 3u)).x));
                            uint _3789 = (_3714 * 40u) + 24u;
                            vec4 _3802 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3789)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3789 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3789 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3789 + 3u)).x));
                            uint _3808 = (_3714 * 40u) + 28u;
                            vec4 _3821 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3808)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3808 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3808 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3808 + 3u)).x));
                            _3833 = fma(_2154, _3821.z, fma(_2153, _3821.y, _3821.x * _2152)) + _3821.w;
                            _3834 = !((fma(_2154, _3802.z, fma(_2153, _3802.y, _3802.x * _2152)) + _3802.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3834)
                            {
                                float _3861 = _3729.x - _2152;
                                float _3862 = _3729.y - _2153;
                                float _3863 = _3729.z - _2154;
                                float _3864 = dot(vec3(_3861, _3862, _3863), vec3(_3861, _3862, _3863));
                                float _3867 = inversesqrt(_3864);
                                float _3868 = _3867 * _3861;
                                float _3869 = _3867 * _3862;
                                float _3870 = _3867 * _3863;
                                float _3874 = 1.0 - (_3864 / (_3730 * _3730));
                                float _5049 = isnan(0.0) ? _3874 : (isnan(_3874) ? 0.0 : max(_3874, 0.0));
                                float _3875 = isnan(1.0) ? _5049 : (isnan(_5049) ? 1.0 : min(_5049, 1.0));
                                float _3879 = sqrt(_3864) * _3745.w;
                                float _3881 = 1.39999997615814208984375 / (_3879 + 1.39999997615814208984375);
                                float _3882 = _3881 * _3881;
                                float _3885 = ((1.0 - _3882) * dot(vec3(_3868, _3869, _3870), vec3(_987, _990, _993))) + _3882;
                                float _3888 = _3879 * _3879;
                                float _3892 = (fma(_2154, _3772.z, fma(_2153, _3772.y, _3772.x * _2152)) + _3772.w) / _3833;
                                float _3893 = (fma(_2154, _3787.z, fma(_2153, _3787.y, _3787.x * _2152)) + _3787.w) / _3833;
                                float _3897 = 1.0 - dot(vec2(_3892, _3893), vec2(_3892, _3893));
                                float _5065 = isnan(0.0) ? _3897 : (isnan(_3897) ? 0.0 : max(_3897, 0.0));
                                float _3898 = isnan(1.0) ? _5065 : (isnan(_5065) ? 1.0 : min(_5065, 1.0));
                                float _3899 = _3898 * (((isnan(0.0) ? _3885 : (isnan(_3885) ? 0.0 : max(_3885, 0.0))) * _3875) / ((_3888 * 0.699999988079071044921875) + 1.0));
                                float _3911 = exp2(log2(1.0 / ((_3888 * 3.5) + 5.0)) * 0.25);
                                float _3912 = 1.0 - _1062;
                                float _3919 = sqrt(1.0 - ((1.0 - (_3912 * _3912)) * (1.0 - (_3911 * _3911))));
                                float _3920 = _3919 * _3919;
                                float _3921 = _3920 * _3920;
                                float _3922 = _3868 - _3342;
                                float _3923 = _3869 - _3343;
                                float _3924 = _3870 - _3344;
                                float _3928 = inversesqrt(dot(vec3(_3922, _3923, _3924), vec3(_3922, _3923, _3924)));
                                float _3932 = dot(vec3(_987, _990, _993), vec3((-0.0) - _3342, (-0.0) - _3343, (-0.0) - _3344));
                                float _5076 = isnan(0.0) ? _3932 : (isnan(_3932) ? 0.0 : max(_3932, 0.0));
                                float _3935 = isnan(1.0) ? _5076 : (isnan(_5076) ? 1.0 : min(_5076, 1.0));
                                float _3936 = dot(vec3(_987, _990, _993), vec3(_3928 * _3922, _3928 * _3923, _3928 * _3924));
                                float _5087 = isnan(0.0) ? _3936 : (isnan(_3936) ? 0.0 : max(_3936, 0.0));
                                float _3939 = isnan(1.0) ? _5087 : (isnan(_5087) ? 1.0 : min(_5087, 1.0));
                                float _3943 = ((_3939 * _3939) * (_3921 + (-1.0))) + 1.0;
                                float _3944 = _3881 * _3920;
                                float _3945 = _3944 * _3944;
                                float _3951 = ((1.0 - _3945) * dot(vec3(_987, _990, _993), vec3(_3868, _3869, _3870))) + _3945;
                                float _5098 = isnan(0.0) ? _3951 : (isnan(_3951) ? 0.0 : max(_3951, 0.0));
                                float _3952 = isnan(1.0) ? _5098 : (isnan(_5098) ? 1.0 : min(_5098, 1.0));
                                float _3953 = 1.0 - _3920;
                                float _3963 = (0.5 / (((_3952 * ((_3935 * _3953) + _3920)) + 9.9999999392252902907785028219223e-09) + (((_3952 * _3953) + _3920) * _3935))) * _3952;
                                float _5109 = isnan(0.0) ? _3963 : (isnan(_3963) ? 0.0 : max(_3963, 0.0));
                                float _3973 = (_3898 * _3875) * (((_3921 * 3.1415927410125732421875) * (isnan(1.0) ? _5109 : (isnan(_5109) ? 1.0 : min(_5109, 1.0)))) / ((_3943 * _3943) * ((_3888 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3899 * _3745.z;
                                frontier_phi_88_pred_1 = _3899 * _3745.y;
                                frontier_phi_88_pred_2 = _3899 * _3745.x;
                                frontier_phi_88_pred_3 = _3973 * _3757.z;
                                frontier_phi_88_pred_4 = _3973 * _3757.y;
                                frontier_phi_88_pred_5 = _3973 * _3757.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3982 = frontier_phi_88_pred;
                            _3981 = frontier_phi_88_pred_1;
                            _3980 = frontier_phi_88_pred_2;
                            _3979 = frontier_phi_88_pred_3;
                            _3978 = frontier_phi_88_pred_4;
                            _3977 = frontier_phi_88_pred_5;
                            _3687 = _3980 + _3700;
                            _3688 = _3981 + _3701;
                            _3689 = _3982 + _3702;
                            _3684 = _3977 + _3697;
                            _3685 = _3978 + _3698;
                            _3686 = _3979 + _3699;
                            if (_3704 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3697 = _3684;
                                _3698 = _3685;
                                _3699 = _3686;
                                _3700 = _3687;
                                _3701 = _3688;
                                _3702 = _3689;
                                _3703 = _3704;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3689;
                        frontier_phi_82_pred_1 = _3688;
                        frontier_phi_82_pred_2 = _3687;
                        frontier_phi_82_pred_3 = _3686;
                        frontier_phi_82_pred_4 = _3685;
                        frontier_phi_82_pred_5 = _3684;
                    }
                    _3327 = frontier_phi_82_pred;
                    _3325 = frontier_phi_82_pred_1;
                    _3323 = frontier_phi_82_pred_2;
                    _3321 = frontier_phi_82_pred_3;
                    _3319 = frontier_phi_82_pred_4;
                    _3317 = frontier_phi_82_pred_5;
                    uint _3483 = _3482 + 1u;
                    if (_3483 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3476 = _3317;
                        _3477 = _3319;
                        _3478 = _3321;
                        _3479 = _3323;
                        _3480 = _3325;
                        _3481 = _3327;
                        _3482 = _3483;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3323;
                frontier_phi_63_64_ladder_1 = _3327;
                frontier_phi_63_64_ladder_2 = _3325;
                frontier_phi_63_64_ladder_3 = _3321;
                frontier_phi_63_64_ladder_4 = _3319;
                frontier_phi_63_64_ladder_5 = _3317;
            }
            else
            {
                frontier_phi_63_64_ladder = _3203;
                frontier_phi_63_64_ladder_1 = _3207;
                frontier_phi_63_64_ladder_2 = _3205;
                frontier_phi_63_64_ladder_3 = _3201;
                frontier_phi_63_64_ladder_4 = _3199;
                frontier_phi_63_64_ladder_5 = _3197;
            }
            _3316 = frontier_phi_63_64_ladder_5;
            _3318 = frontier_phi_63_64_ladder_4;
            _3320 = frontier_phi_63_64_ladder_3;
            _3322 = frontier_phi_63_64_ladder;
            _3324 = frontier_phi_63_64_ladder_2;
            _3326 = frontier_phi_63_64_ladder_1;
        }
        float _3331 = isnan(1.0) ? _1046 : (isnan(_1046) ? 1.0 : min(_1046, 1.0));
        _3107 = (_3331 * _3322) + _2619;
        _3109 = (_3331 * _3324) + _2621;
        _3111 = (_3331 * _3326) + _2623;
        _3113 = ((_3316 * _1031) * _3331) + _2957;
        _3115 = ((_3318 * _1033) * _3331) + _2959;
        _3117 = ((_3320 * _1034) * _3331) + _2961;
    }
    else
    {
        _3107 = _2619;
        _3109 = _2621;
        _3111 = _2623;
        _3113 = _2957;
        _3115 = _2959;
        _3117 = _2961;
    }
    uint _3123 = _1007 + uint(cbMatDynParam._m0[0u].w);
    float _3129 = (isnan(cbMtdParam._m0[24u].y) ? _731 : (isnan(_731) ? cbMtdParam._m0[24u].y : min(_731, cbMtdParam._m0[24u].y))) * cbSceneParam._m0[72u].y;
    float _5125 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
    float _5136 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
    float _5147 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
    float _3152 = (((isnan(1.0) ? _5125 : (isnan(_5125) ? 1.0 : min(_5125, 1.0))) * (_3107 + ((isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0))) * _1046))) + ((_3113 + ((isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0))) * _1886)) * cbPerFrame._m0[3u].x)) + ((_3129 * (((((_790.x - _787) * _769) + _787) * cbMtdParam._m0[17u].x) + ((cbMtdParam._m0[24u].w * _723) * cbMtdParam._m0[16u].x))) * cbInstanceData._m0[_3123].x);
    float _3154 = (((_3129 * (((((_790.y - _788) * _769) + _788) * cbMtdParam._m0[17u].y) + ((cbMtdParam._m0[24u].w * (((_712.y - _710) * _690) + _710)) * cbMtdParam._m0[16u].y))) * cbInstanceData._m0[_3123].y) + ((_3115 + ((isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0))) * _1886)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5136 : (isnan(_5136) ? 1.0 : min(_5136, 1.0))) * (_3109 + ((isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0))) * _1046)));
    float _3156 = (((_3129 * (((((_790.z - _789) * _769) + _789) * cbMtdParam._m0[17u].z) + ((cbMtdParam._m0[24u].w * (((_712.z - _711) * _690) + _711)) * cbMtdParam._m0[16u].z))) * cbInstanceData._m0[_3123].z) + ((_3117 + ((isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0))) * _1886)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5147 : (isnan(_5147) ? 1.0 : min(_5147, 1.0))) * (_3111 + ((isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0))) * _1046)));
    float _3157 = isnan(0.0) ? _3152 : (isnan(_3152) ? 0.0 : max(_3152, 0.0));
    float _3158 = isnan(0.0) ? _3154 : (isnan(_3154) ? 0.0 : max(_3154, 0.0));
    float _3159 = isnan(0.0) ? _3156 : (isnan(_3156) ? 0.0 : max(_3156, 0.0));
    uint _3160 = _1006 + 6u;
    float _3168 = _968 / cbSceneParam._m0[86u].x;
    float _3169 = _969 / cbSceneParam._m0[86u].y;
    vec4 _3183 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3168, _3169, (log2((isnan(cbSceneParam._m0[77u].w) ? _890 : (isnan(_890) ? cbSceneParam._m0[77u].w : min(_890, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3185 = _3183.x;
    float _3186 = _3183.y;
    float _3187 = _3183.z;
    float _3188 = _3183.w;
    float _3259;
    float _3261;
    float _3263;
    float _3265;
    if (_890 > cbSceneParam._m0[78u].w)
    {
        float _3222 = isnan(_890) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _890 : min(cbSceneParam._m0[80u].w, _890));
        float _3223 = _3222 / _890;
        float _3234 = _3223 * _941;
        float _3235 = _942 * _3223;
        float _3236 = (-0.0) - _3235;
        float _3237 = _3223 * _943;
        float _3239 = (cbSceneParam._m0[77u].w * _3236) / _3222;
        float _3240 = _3239 + cbSceneParam._m0[79u].w;
        float _3241 = cbSceneParam._m0[79u].w - _3235;
        float _3247 = sqrt(((_3234 * _3234) + (_3235 * _3235)) + (_3237 * _3237));
        float _3250 = (1.0 - (cbSceneParam._m0[77u].w / _3222)) * _3247;
        float _3255 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3257 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3433;
        if (abs((_3236 - _3239) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3433 = ((((_3240 > 0.0) ? exp2(_3255 * _3240) : (2.0 - exp2(_3257 * _3240))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3250;
        }
        else
        {
            float _3377 = 1.0 / cbSceneParam._m0[80u].x;
            float _3378 = isnan(_3241) ? _3240 : (isnan(_3240) ? _3241 : max(_3240, _3241));
            float _3379 = isnan(_3241) ? _3240 : (isnan(_3240) ? _3241 : min(_3240, _3241));
            float _3388 = isnan(0.0) ? _3378 : (isnan(_3378) ? 0.0 : min(_3378, 0.0));
            float _3389 = isnan(0.0) ? _3379 : (isnan(_3379) ? 0.0 : min(_3379, 0.0));
            _3433 = ((abs(_3247 / _3236) * cbSceneParam._m0[80u].y) * ((((_3388 - _3389) * 2.0) - ((exp2(_3255 * (isnan(0.0) ? _3378 : (isnan(_3378) ? 0.0 : max(_3378, 0.0)))) - exp2(_3255 * (isnan(0.0) ? _3379 : (isnan(_3379) ? 0.0 : max(_3379, 0.0))))) * _3377)) - ((exp2(_3257 * _3388) - exp2(_3257 * _3389)) * _3377))) + (_3250 * cbSceneParam._m0[80u].z);
        }
        vec4 _3435 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3168, _3169, 1.0), 0.0);
        float _3444 = exp2((_3433 * (-1.44269502162933349609375)) * (1.0 - _3435.w));
        float _3445 = log2(_3444);
        float _3461 = log2(_3188);
        _3259 = (exp2(_3461 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3445 * cbSceneParam._m0[78u].x)) * _3435.x) / cbSceneParam._m0[78u].x)) + _3185;
        _3261 = (exp2(_3461 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3445 * cbSceneParam._m0[78u].y)) * _3435.y) / cbSceneParam._m0[78u].y)) + _3186;
        _3263 = (exp2(_3461 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3445 * cbSceneParam._m0[78u].z)) * _3435.z) / cbSceneParam._m0[78u].z)) + _3187;
        _3265 = _3444 * _3188;
    }
    else
    {
        _3259 = _3185;
        _3261 = _3186;
        _3263 = _3187;
        _3265 = _3188;
    }
    bool _3471;
    vec4 _3274;
    vec4 _3296;
    float _3298;
    float _3302;
    float _3303;
    float _3304;
    float _3305;
    bool _3315;
    for (;;)
    {
        _3274 = cbMatDynParam._m0[0u];
        float _3276 = roundEven(_3274.y);
        bool _3277 = _3276 == 3.0;
        float _3278 = log2(_3265);
        float _3285 = exp2(_3278 * cbSceneParam._m0[78u].x) * _3157;
        float _3286 = exp2(_3278 * cbSceneParam._m0[78u].y) * _3158;
        float _3287 = exp2(_3278 * cbSceneParam._m0[78u].z) * _3159;
        float _3294 = _957 + (-0.5);
        _3296 = cbMtdParam._m0[1u];
        _3298 = _3296.y * _3294;
        float _3301 = (_3276 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3302 = _3301 * (_3277 ? _3285 : (_3285 + (cbSceneParam._m0[72u].w * _3259)));
        _3303 = _3301 * (_3277 ? _3286 : (_3286 + (cbSceneParam._m0[72u].w * _3261)));
        _3304 = _3301 * (_3277 ? _3287 : (_3287 + (cbSceneParam._m0[72u].w * _3263)));
        _3305 = _3294 * 0.999000012874603271484375;
        _3315 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3315)
        {
            if ((cbInstanceData._m0[_1006 + 7u].x + _3305) < 0.5)
            {
                _3471 = true;
                break;
            }
        }
        uint _3412 = _1007 + uint(_3274.w);
        if ((cbInstanceData._m0[_3412].w < 1.0) && ((cbInstanceData._m0[_3412].w + _3305) < 0.5))
        {
            _3471 = true;
            break;
        }
        if ((_3298 + 1.0) < _3296.x)
        {
            _3471 = true;
            break;
        }
        _3471 = false;
        break;
    }
    float _3675;
    if (_3471)
    {
        discard_state = true;
        _3675 = 0.0;
    }
    else
    {
        _3675 = cbInstanceData._m0[_3160].w;
    }
    SV_Target.x = _3302;
    SV_Target.y = _3303;
    SV_Target.z = _3304;
    SV_Target.w = _3675;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3160].w;
    discard_exit();
}


