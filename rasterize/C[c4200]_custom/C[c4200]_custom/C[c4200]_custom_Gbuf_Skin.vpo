#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out float TEXCOORD_3;
layout(location = 4, component = 1) out float TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_3_1;
layout(location = 4, component = 2) out float TEXCOORD_6;
layout(location = 4, component = 3) out float TEXCOORD_7;
layout(location = 6) out float TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3 = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_3_1.x = 0.0;
    TEXCOORD_3_1.y = 0.0;
    TEXCOORD_3_1.z = 0.0;
    TEXCOORD_3_1.w = 0.0;
    TEXCOORD_6 = 0.0;
    TEXCOORD_7 = 0.0;
    TEXCOORD_8 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _182 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _184 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _185 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _194 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _195 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _206 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _208 = texelFetch(g_InstanceIndexBuffer, int(_206));
    uint _209 = _208.x;
    precise float _210 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _215 = isnan(_210) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _210 : max(0.001000000047497451305389404296875, _210));
    precise float _217 = BLENDWEIGHT.x / _215;
    precise float _218 = BLENDWEIGHT.y / _215;
    precise float _219 = BLENDWEIGHT.z / _215;
    precise float _220 = BLENDWEIGHT.w / _215;
    uint _222 = _209 * 13u;
    uvec4 _227 = floatBitsToUint(cbInstanceData._m0[_222 + 4u]);
    uint _228 = _227.x;
    uint _230 = (_228 + uint(float(BLENDINDICES.x))) * 3u;
    uint _237 = _230 + 1u;
    uint _244 = _230 + 2u;
    precise float _251 = _217 * cbObjMatrix._m0[_230].x;
    precise float _252 = _217 * cbObjMatrix._m0[_237].x;
    precise float _253 = _217 * cbObjMatrix._m0[_244].x;
    precise float _254 = _217 * cbObjMatrix._m0[_230].y;
    precise float _255 = _217 * cbObjMatrix._m0[_237].y;
    precise float _256 = _217 * cbObjMatrix._m0[_244].y;
    precise float _257 = _217 * cbObjMatrix._m0[_230].z;
    precise float _258 = _217 * cbObjMatrix._m0[_237].z;
    precise float _259 = _217 * cbObjMatrix._m0[_244].z;
    precise float _260 = _217 * cbObjMatrix._m0[_230].w;
    precise float _261 = _217 * cbObjMatrix._m0[_237].w;
    precise float _262 = _217 * cbObjMatrix._m0[_244].w;
    uint _265 = (_228 + uint(float(BLENDINDICES.y))) * 3u;
    uint _272 = _265 + 1u;
    uint _279 = _265 + 2u;
    precise float _286 = _218 * cbObjMatrix._m0[_265].x;
    precise float _287 = _218 * cbObjMatrix._m0[_272].x;
    precise float _288 = _218 * cbObjMatrix._m0[_279].x;
    precise float _289 = _218 * cbObjMatrix._m0[_265].y;
    precise float _290 = _218 * cbObjMatrix._m0[_272].y;
    precise float _291 = _218 * cbObjMatrix._m0[_279].y;
    precise float _292 = _218 * cbObjMatrix._m0[_265].z;
    precise float _293 = _218 * cbObjMatrix._m0[_272].z;
    precise float _294 = _218 * cbObjMatrix._m0[_279].z;
    precise float _295 = _218 * cbObjMatrix._m0[_265].w;
    precise float _296 = _218 * cbObjMatrix._m0[_272].w;
    precise float _297 = _218 * cbObjMatrix._m0[_279].w;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    precise float _308 = _261 + _296;
    precise float _309 = _262 + _297;
    uint _312 = (_228 + uint(float(BLENDINDICES.z))) * 3u;
    uint _319 = _312 + 1u;
    uint _326 = _312 + 2u;
    precise float _333 = _219 * cbObjMatrix._m0[_312].x;
    precise float _334 = _219 * cbObjMatrix._m0[_319].x;
    precise float _335 = _219 * cbObjMatrix._m0[_326].x;
    precise float _336 = _219 * cbObjMatrix._m0[_312].y;
    precise float _337 = _219 * cbObjMatrix._m0[_319].y;
    precise float _338 = _219 * cbObjMatrix._m0[_326].y;
    precise float _339 = _219 * cbObjMatrix._m0[_312].z;
    precise float _340 = _219 * cbObjMatrix._m0[_319].z;
    precise float _341 = _219 * cbObjMatrix._m0[_326].z;
    precise float _342 = _219 * cbObjMatrix._m0[_312].w;
    precise float _343 = _219 * cbObjMatrix._m0[_319].w;
    precise float _344 = _219 * cbObjMatrix._m0[_326].w;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    uint _359 = (_228 + uint(float(BLENDINDICES.w))) * 3u;
    uint _366 = _359 + 1u;
    uint _373 = _359 + 2u;
    precise float _380 = _220 * cbObjMatrix._m0[_359].x;
    precise float _381 = _220 * cbObjMatrix._m0[_366].x;
    precise float _382 = _220 * cbObjMatrix._m0[_373].x;
    precise float _383 = _220 * cbObjMatrix._m0[_359].y;
    precise float _384 = _220 * cbObjMatrix._m0[_366].y;
    precise float _385 = _220 * cbObjMatrix._m0[_373].y;
    precise float _386 = _220 * cbObjMatrix._m0[_359].z;
    precise float _387 = _220 * cbObjMatrix._m0[_366].z;
    precise float _388 = _220 * cbObjMatrix._m0[_373].z;
    precise float _389 = _220 * cbObjMatrix._m0[_359].w;
    precise float _390 = _220 * cbObjMatrix._m0[_366].w;
    precise float _391 = _220 * cbObjMatrix._m0[_373].w;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = POSITION.x * _392;
    precise float _405 = POSITION.y * _395;
    precise float _406 = _405 + _404;
    precise float _407 = POSITION.z * _398;
    precise float _408 = _407 + _406;
    precise float _409 = 1.0 * _401;
    precise float _410 = _409 + _408;
    precise float _411 = POSITION.x * _393;
    precise float _412 = POSITION.y * _396;
    precise float _413 = _412 + _411;
    precise float _414 = POSITION.z * _399;
    precise float _415 = _414 + _413;
    precise float _416 = 1.0 * _402;
    precise float _417 = _416 + _415;
    precise float _418 = POSITION.x * _394;
    precise float _419 = POSITION.y * _397;
    precise float _420 = _419 + _418;
    precise float _421 = POSITION.z * _400;
    precise float _422 = _421 + _420;
    precise float _423 = 1.0 * _403;
    precise float _424 = _423 + _422;
    precise float _449 = _410 - cbSceneParam._m0[3u].x;
    precise float _450 = _417 - cbSceneParam._m0[3u].y;
    precise float _451 = _424 - cbSceneParam._m0[3u].z;
    precise float _479 = _449 * cbSceneParam._m0[24u].x;
    precise float _480 = _450 * cbSceneParam._m0[24u].y;
    precise float _481 = _480 + _479;
    precise float _482 = _451 * cbSceneParam._m0[24u].z;
    precise float _483 = _482 + _481;
    precise float _484 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _485 = _484 + _483;
    precise float _486 = _449 * cbSceneParam._m0[25u].x;
    precise float _487 = _450 * cbSceneParam._m0[25u].y;
    precise float _488 = _487 + _486;
    precise float _489 = _451 * cbSceneParam._m0[25u].z;
    precise float _490 = _489 + _488;
    precise float _491 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _492 = _491 + _490;
    precise float _493 = _449 * cbSceneParam._m0[26u].x;
    precise float _494 = _450 * cbSceneParam._m0[26u].y;
    precise float _495 = _494 + _493;
    precise float _496 = _451 * cbSceneParam._m0[26u].z;
    precise float _497 = _496 + _495;
    precise float _498 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _499 = _498 + _497;
    precise float _500 = _449 * cbSceneParam._m0[27u].x;
    precise float _501 = _450 * cbSceneParam._m0[27u].y;
    precise float _502 = _501 + _500;
    precise float _503 = _451 * cbSceneParam._m0[27u].z;
    precise float _504 = _503 + _502;
    precise float _505 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _506 = _505 + _504;
    gl_Position.x = _485;
    gl_Position.y = _492;
    gl_Position.z = _499;
    gl_Position.w = _506;
    POSITION_1.x = _485;
    POSITION_1.y = _492;
    POSITION_1.z = _499;
    POSITION_1.w = _506;
    NORMAL_1.x = fma(_185, _398, fma(_184, _395, _392 * _182));
    NORMAL_1.y = fma(_185, _399, fma(_184, _396, _393 * _182));
    NORMAL_1.z = fma(_185, _400, fma(_184, _397, _394 * _182));
    NORMAL_1.w = float(_209);
    TANGENT_1.x = fma(_196, _398, fma(_195, _395, _392 * _194));
    TANGENT_1.y = fma(_196, _399, fma(_195, _396, _393 * _194));
    TANGENT_1.z = fma(_196, _400, fma(_195, _397, _394 * _194));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3 = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1 = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3_1.x = TEXCOORD_1.x;
    TEXCOORD_3_1.y = TEXCOORD_1.y;
    TEXCOORD_3_1.z = TEXCOORD_1.z;
    TEXCOORD_3_1.w = COLOR_1.x;
    TEXCOORD_6 = TEXCOORD_2.x;
    TEXCOORD_7 = TEXCOORD_2.y;
    TEXCOORD_8 = TEXCOORD_2.z;
    gl_ClipDistance[0u] = dot(vec4(_485, _492, _499, _506), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_485, _492, _499, _506), vec4(cbInstanceData._m0[_222 + 3u]));
}


