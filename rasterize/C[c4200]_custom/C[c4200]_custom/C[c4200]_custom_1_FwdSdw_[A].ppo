#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[28];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_c4200_custom_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_c4200_custom_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D C_c4200_custom_snp_0_Texture2D_27;
layout(set = 0, binding = 12) uniform texture2D C_c4200_custom_snp_0_Texture2D_28;
layout(set = 0, binding = 13) uniform texture2D C_c4200_custom_snp_0_Texture2D_29;
layout(set = 0, binding = 14) uniform texture2D C_c4200_custom_snp_0_Texture2D_3;
layout(set = 0, binding = 15) uniform texture2D C_c4200_custom_snp_0_Texture2D_30;
layout(set = 0, binding = 16) uniform texture2D C_c4200_custom_snp_0_Texture2D_4;
layout(set = 0, binding = 17) uniform texture2D C_c4200_custom_snp_0_Texture2D_5;
layout(set = 0, binding = 18) uniform texture2D C_c4200_custom_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_c4200_custom_snp_0_Texture2D_7;
layout(set = 0, binding = 20) uniform texture2D C_c4200_custom_snp_0_Texture2D_8;
layout(set = 0, binding = 21) uniform texture2D C_c4200_custom_snp_0_Texture2D_9;
layout(set = 0, binding = 5) uniform texture2D C_c4200_custom_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D C_c4200_custom_snp_0_Texture2D_22;
layout(set = 0, binding = 7) uniform texture2D C_c4200_custom_snp_0_Texture2D_23;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 4, component = 2) in float TEXCOORD_6;
layout(location = 4, component = 3) in float TEXCOORD_7;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1451;
float _4136;
float _4137;
float _4138;
float _4139;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _217 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _218 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _219 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _225 = inversesqrt(dot(vec3(_217, _218, _219), vec3(_217, _218, _219)));
    float _232 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _239 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _285 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD_1) + cbTextureTilingScale._m0[19u].w));
    float _298 = exp2(log2(_285.w * cbMtdParam._m0[26u].x) * cbMtdParam._m0[18u].w);
    float _299 = isnan(0.0) ? _298 : (isnan(_298) ? 0.0 : max(_298, 0.0));
    float _300 = isnan(1.0) ? _299 : (isnan(_299) ? 1.0 : min(_299, 1.0));
    vec4 _316 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _320 = _316.z;
    float _325 = exp2(log2(_320 * cbMtdParam._m0[19u].x) * cbMtdParam._m0[18u].y);
    float _326 = isnan(0.0) ? _325 : (isnan(_325) ? 0.0 : max(_325, 0.0));
    float _327 = isnan(1.0) ? _326 : (isnan(_326) ? 1.0 : min(_326, 1.0));
    vec4 _339 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_1) + cbTextureTilingScale._m0[14u].w));
    vec4 _364 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _375 = cbMtdParam._m0[9u].x * _364.x;
    float _376 = cbMtdParam._m0[9u].y * _364.y;
    float _377 = cbMtdParam._m0[9u].z * _364.z;
    float _384 = (((cbMtdParam._m0[10u].x * _339.x) - _375) * _327) + _375;
    float _385 = (((cbMtdParam._m0[10u].y * _339.y) - _376) * _327) + _376;
    float _386 = (((cbMtdParam._m0[10u].z * _339.z) - _377) * _327) + _377;
    vec4 _399 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_30, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_1) + cbTextureTilingScale._m0[15u].w));
    float _401 = _399.x;
    float _405 = exp2(log2(_401) * cbMtdParam._m0[19u].z);
    vec4 _418 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w));
    float _438 = (((cbMtdParam._m0[12u].x * _418.x) - _384) * _405) + _384;
    float _439 = (((cbMtdParam._m0[12u].y * _418.y) - _385) * _405) + _385;
    float _440 = (((cbMtdParam._m0[12u].z * _418.z) - _386) * _405) + _386;
    vec4 _453 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_1) + cbTextureTilingScale._m0[16u].w));
    float _478 = (_285.x * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].x * _453.x) - _438) * _300) + _438);
    float _480 = (_285.y * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].y * _453.y) - _439) * _300) + _439);
    float _482 = (_285.z * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].z * _453.z) - _440) * _300) + _440);
    float _484 = cbMtdParam._m0[22u].z * TEXCOORD_6;
    float _493 = (_484 - (((texture(sampler2D(C_c4200_custom_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[22u].x) * (1.0 - _484))) * (cbMtdParam._m0[22u].y + 1.0);
    float _4168 = isnan(0.0) ? _493 : (isnan(_493) ? 0.0 : max(_493, 0.0));
    float _494 = isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0));
    float _501 = ((cbMtdParam._m0[14u].x - _478) * _494) + _478;
    float _502 = ((cbMtdParam._m0[14u].y - _480) * _494) + _480;
    float _503 = ((cbMtdParam._m0[14u].z - _482) * _494) + _482;
    float _505 = _401 - (_484 * _401);
    vec4 _521 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD_1) + cbTextureTilingScale._m0[17u].w));
    vec4 _539 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD_1) + cbTextureTilingScale._m0[18u].w));
    float _541 = _539.x;
    float _542 = _539.y;
    float _545 = cbMtdParam._m0[18u].x + _539.z;
    float _548 = (((cbMtdParam._m0[18u].z + _521.z) - _545) * _327) + _545;
    vec4 _560 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD_1) + cbTextureTilingScale._m0[20u].w));
    float _572 = (((_560.z - _548) + cbMtdParam._m0[24u].z) * _405) + _548;
    float _578 = ((((_320 * 2.0) * _572) - _572) * cbMtdParam._m0[20u].z) + _572;
    vec4 _591 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[21u].x * TEXCOORD) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * TEXCOORD_1) + cbTextureTilingScale._m0[21u].w));
    float _600 = (((cbMtdParam._m0[19u].y + _591.z) - _578) * _300) + _578;
    vec4 _616 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1) + cbTextureTilingScale._m0[6u].w));
    float _631 = ((cbMtdParam._m0[21u].w * _484) * ((_616.z * cbMtdParam._m0[21u].z) - _600)) + _600;
    float _642 = cbMtdParam._m0[23u].y * cbPerFrame._m0[22u].x;
    vec4 _664 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_28, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * ((_642 * cbMtdParam._m0[26u].y) + TEXCOORD)) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * ((_642 * cbMtdParam._m0[26u].z) + TEXCOORD_1)) + cbTextureTilingScale._m0[12u].w));
    float _668 = cbPerFrame._m0[22u].x * 2.0;
    float _669 = _668 * cbMtdParam._m0[25u].y;
    float _672 = (_664.x * 0.5) + (-0.25);
    float _675 = (_664.y * 0.5) + (-0.25);
    float _676 = _675 * cbMtdParam._m0[25u].x;
    float _678 = (-0.0) - (cbMtdParam._m0[25u].x * _672);
    float _680 = fract(_669);
    float _682 = fract(_669 + 0.5);
    float _693 = abs((_680 * 2.0) + (-1.0));
    vec4 _710 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_27, SS_DiffuseMap), vec2((((_680 * _678) + TEXCOORD) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((_676 * _680) + TEXCOORD_1) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _712 = _710.x;
    float _713 = _710.y;
    float _714 = _710.z;
    vec4 _715 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_27, SS_DiffuseMap), vec2((((_682 * _678) + TEXCOORD) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((_676 * _682) + TEXCOORD_1) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _726 = ((_715.x - _712) * _693) + _712;
    float _733 = exp2(log2(_726 * cbMtdParam._m0[23u].z) * cbMtdParam._m0[23u].w);
    float _734 = isnan(cbMtdParam._m0[24u].x) ? _733 : (isnan(_733) ? cbMtdParam._m0[24u].x : max(_733, cbMtdParam._m0[24u].x));
    float _755 = _668 * cbMtdParam._m0[25u].w;
    float _756 = _675 * cbMtdParam._m0[25u].z;
    float _758 = (-0.0) - (cbMtdParam._m0[25u].z * _672);
    float _759 = fract(_755);
    float _761 = fract(_755 + 0.5);
    float _772 = abs((_759 * 2.0) + (-1.0));
    vec4 _788 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_29, SS_DiffuseMap), vec2((((_759 * _758) + TEXCOORD) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_756 * _759) + TEXCOORD_1) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _790 = _788.x;
    float _791 = _788.y;
    float _792 = _788.z;
    vec4 _793 = texture(sampler2D(C_c4200_custom_snp_0_Texture2D_29, SS_DiffuseMap), vec2((((_761 * _758) + TEXCOORD) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_756 * _761) + TEXCOORD_1) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _822 = ((_521.x - _541) * _327) + _541;
    float _823 = ((_521.y - _542) * _327) + _542;
    float _828 = ((_560.x - _822) * _405) + _822;
    float _829 = ((_560.y - _823) * _405) + _823;
    float _838 = ((((_591.x - _828) * _300) + _828) * 2.0) + (-1.0);
    float _839 = ((((_591.y - _829) * _300) + _829) * 2.0) + (-1.0);
    float _840 = dot(vec2(_838, _839), vec2(_838, _839));
    float _4189 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    float _845 = sqrt(1.0 - (isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0))));
    float _855 = ((cbMtdParam._m0[20u].w * ((_316.x * 2.0) + (-1.0))) + _838) + ((((_616.x * 2.0) + (-1.0)) * _484) * cbMtdParam._m0[21u].y);
    float _856 = ((cbMtdParam._m0[20u].w * ((_316.y * 2.0) + (-1.0))) + _839) + (((cbMtdParam._m0[22u].z * TEXCOORD_7) * ((_616.y * 2.0) + (-1.0))) * cbMtdParam._m0[21u].y);
    float _859 = fma(_845, _232 * NORMAL.x, fma(_856, _239 * TANGENT.x, (_225 * _217) * _855));
    float _862 = fma(_845, _232 * NORMAL.y, fma(_856, _239 * TANGENT.y, (_225 * _218) * _855));
    float _865 = fma(_845, _232 * NORMAL.z, fma(_856, _239 * TANGENT.z, (_225 * _219) * _855));
    float _869 = inversesqrt(dot(vec3(_859, _862, _865), vec3(_859, _862, _865)));
    float _870 = _869 * _859;
    float _871 = _869 * _862;
    float _872 = _869 * _865;
    float _4200 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _873 = isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0));
    float _4211 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    float _4222 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _4233 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0));
    float _4244 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    float _877 = isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0));
    float _893 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _934 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _944 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _934);
    float _945 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _934);
    float _946 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _934);
    float _950 = inversesqrt(dot(vec3(_944, _945, _946), vec3(_944, _945, _946)));
    float _951 = _944 * _950;
    float _952 = _945 * _950;
    float _953 = _946 * _950;
    vec4 _958 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _960 = _958.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1132 = sqrt(((_944 * _944) + (_945 * _945)) + (_946 * _946));
        float _1138 = (cbMatDynParam._m0[5u].x * _1132) + cbMatDynParam._m0[5u].y;
        float _4255 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
        float _1139 = isnan(1.0) ? _4255 : (isnan(_4255) ? 1.0 : min(_4255, 1.0));
        float _1143 = (cbMatDynParam._m0[5u].z * _1132) + cbMatDynParam._m0[5u].w;
        float _4266 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4266 : (isnan(_4266) ? 1.0 : min(_4266, 1.0))) - _1139)) + _1139) < ((_960 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _971 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _972 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _990 = fma(_872, cbSceneParam._m0[5u].z, fma(_871, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _870));
    float _993 = fma(_872, cbSceneParam._m0[6u].z, fma(_871, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _870));
    float _996 = fma(_872, cbSceneParam._m0[7u].z, fma(_871, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _870));
    uint _1009 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1010 = _1009 + 9u;
    uint _1011 = _1010 + uint(cbMatDynParam._m0[0u].w);
    float _1017 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0)))) * cbInstanceData._m0[_1011].x;
    float _1018 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0)))) * cbInstanceData._m0[_1011].y;
    float _1019 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0)))) * cbInstanceData._m0[_1011].z;
    float _4277 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
    float _1020 = isnan(1.0) ? _4277 : (isnan(_4277) ? 1.0 : min(_4277, 1.0));
    float _4288 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
    float _1021 = isnan(1.0) ? _4288 : (isnan(_4288) ? 1.0 : min(_4288, 1.0));
    float _4299 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
    float _1022 = isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0));
    float _1023 = 1.0 - _877;
    float _1024 = _1020 * _1023;
    float _1025 = _1021 * _1023;
    float _1026 = _1022 * _1023;
    float _1031 = (_1020 + (-0.039999999105930328369140625)) * _877;
    float _1032 = (_1021 + (-0.039999999105930328369140625)) * _877;
    float _1033 = (_1022 + (-0.039999999105930328369140625)) * _877;
    float _1034 = _1031 + 0.039999999105930328369140625;
    float _1036 = _1032 + 0.039999999105930328369140625;
    float _1037 = _1033 + 0.039999999105930328369140625;
    vec4 _1046 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _971, cbSceneParam._m0[86u].y * _972));
    float _1049 = _1046.x * TEXCOORD_3.w;
    float _1050 = dot(vec3(_870, _871, _872), vec3(_951, _952, _953));
    float _1053 = _1050 * 2.0;
    float _1057 = (_1053 * _870) - _951;
    float _1058 = (_1053 * _871) - _952;
    float _1059 = (_1053 * _872) - _953;
    float _1063 = abs(dot(vec3(_951, _952, _953), vec3(_870, _871, _872)));
    float _4310 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
    float _1065 = sqrt(_873);
    float _1078 = exp2((_1065 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1065 * 3.0));
    float _1084 = (1.0 - _1078) * ((_1065 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1085 = _1078 * _1065;
    float _1113 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1117 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1121 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1450;
    float _1452;
    float _1453;
    float _1454;
    float _1455;
    float _1456;
    float _1457;
    float _1458;
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1176 = fma(_1121, cbModelParam._m0[26u].z, fma(_1117, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1113));
        float _1180 = fma(_1121, cbModelParam._m0[27u].z, fma(_1117, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1113));
        float _1184 = fma(_1121, cbModelParam._m0[28u].z, fma(_1117, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1113));
        float _1208 = _1113 + _870;
        float _1209 = _1117 + _871;
        float _1210 = _1121 + _872;
        float _1220 = fma(_1210, cbModelParam._m0[26u].z, fma(_1209, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1208)) - _1176;
        float _1221 = fma(_1210, cbModelParam._m0[27u].z, fma(_1209, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1208)) - _1180;
        float _1222 = fma(_1210, cbModelParam._m0[28u].z, fma(_1209, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1208)) - _1184;
        float _1226 = inversesqrt(dot(vec3(_1220, _1221, _1222), vec3(_1220, _1221, _1222)));
        float _1239 = ((_1226 * _1220) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1176 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1240 = ((_1226 * _1221) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1180 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1241 = ((_1226 * _1222) / cbModelParam._m0[34u].z) + ((((((_1184 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1244 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1239, _1240, _1241), 0.0);
        vec4 _1251 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1239, _1240, _1241), 0.0);
        vec4 _1258 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1239, _1240, _1241), 0.0);
        vec4 _1265 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1239, _1240, _1241), 0.0);
        float _1278 = exp2((_1244.w + (-0.5)) * 20.0) * 2.0;
        float _1279 = _1278 * (_1244.x + (-0.5));
        float _1280 = _1278 * (_1244.y + (-0.5));
        float _1281 = _1278 * (_1244.z + (-0.5));
        float _1288 = exp2((_1251.w + (-0.5)) * 20.0) * 2.0;
        float _1289 = _1288 * (_1251.x + (-0.5));
        float _1290 = _1288 * (_1251.y + (-0.5));
        float _1291 = _1288 * (_1251.z + (-0.5));
        float _1298 = exp2((_1258.w + (-0.5)) * 20.0) * 2.0;
        float _1299 = _1298 * (_1258.x + (-0.5));
        float _1300 = _1298 * (_1258.y + (-0.5));
        float _1301 = _1298 * (_1258.z + (-0.5));
        float _1308 = exp2((_1265.w + (-0.5)) * 20.0) * 2.0;
        float _1309 = _1308 * (_1265.x + (-0.5));
        float _1310 = _1308 * (_1265.y + (-0.5));
        float _1311 = _1308 * (_1265.z + (-0.5));
        float _1312 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
        float _1313 = isnan(0.0) ? _1310 : (isnan(_1310) ? 0.0 : max(_1310, 0.0));
        float _1314 = isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0));
        float _1315 = _1279 * 0.5;
        float _1316 = _1289 * 0.5;
        float _1317 = _1299 * 0.5;
        float _1318 = dot(vec3(_1315, _1316, _1317), vec3(_1315, _1316, _1317));
        float _1323 = (_1318 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1318);
        float _1332 = (dot(vec3(_870, _871, _872), vec3(_1323 * _1315, _1323 * _1316, _1323 * _1317)) + 1.0) * 0.5;
        float _4336 = isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0));
        float _1342 = sqrt(((_1316 * _1316) + (_1315 * _1315)) + (_1317 * _1317)) / (_1312 + 9.9999997473787516355514526367188e-06);
        float _4347 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1343 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
        float _1344 = _1343 * 2.0;
        float _1348 = (1.0 - _1343) / (_1343 + 1.0);
        float _4358 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1349 = isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0));
        float _1358 = ((((1.0 - _1349) * (_1344 + 2.0)) * exp2(log2(isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0))) * (_1344 + 1.0))) + _1349) * _1312;
        float _1359 = _1280 * 0.5;
        float _1360 = _1290 * 0.5;
        float _1361 = _1300 * 0.5;
        float _1362 = dot(vec3(_1359, _1360, _1361), vec3(_1359, _1360, _1361));
        float _1367 = (_1362 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1362);
        float _1375 = (dot(vec3(_870, _871, _872), vec3(_1367 * _1359, _1367 * _1360, _1367 * _1361)) + 1.0) * 0.5;
        float _4369 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
        float _1384 = sqrt(((_1360 * _1360) + (_1359 * _1359)) + (_1361 * _1361)) / (_1313 + 9.9999997473787516355514526367188e-06);
        float _4380 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
        float _1385 = isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0));
        float _1386 = _1385 * 2.0;
        float _1390 = (1.0 - _1385) / (_1385 + 1.0);
        float _4391 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
        float _1391 = isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0));
        float _1400 = ((((1.0 - _1391) * (_1386 + 2.0)) * exp2(log2(isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0))) * (_1386 + 1.0))) + _1391) * _1313;
        float _1401 = _1281 * 0.5;
        float _1402 = _1291 * 0.5;
        float _1403 = _1301 * 0.5;
        float _1404 = dot(vec3(_1401, _1402, _1403), vec3(_1401, _1402, _1403));
        float _1409 = (_1404 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1404);
        float _1417 = (dot(vec3(_870, _871, _872), vec3(_1409 * _1401, _1409 * _1402, _1409 * _1403)) + 1.0) * 0.5;
        float _4402 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
        float _1426 = sqrt(((_1402 * _1402) + (_1401 * _1401)) + (_1403 * _1403)) / (_1314 + 9.9999997473787516355514526367188e-06);
        float _4413 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1427 = isnan(1.0) ? _4413 : (isnan(_4413) ? 1.0 : min(_4413, 1.0));
        float _1428 = _1427 * 2.0;
        float _1432 = (1.0 - _1427) / (_1427 + 1.0);
        float _4424 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1433 = isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0));
        float _1442 = ((((1.0 - _1433) * (_1428 + 2.0)) * exp2(log2(isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0))) * (_1428 + 1.0))) + _1433) * _1314;
        _1450 = _1281;
        _1452 = _1280;
        _1453 = _1279;
        _1454 = _1291;
        _1455 = _1290;
        _1456 = _1289;
        _1457 = _1301;
        _1458 = _1300;
        _1459 = _1299;
        _1460 = _1314;
        _1461 = _1313;
        _1462 = _1312;
        _1463 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0)));
        _1464 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0)));
        _1465 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0)));
    }
    else
    {
        _1450 = _1451;
        _1452 = _1451;
        _1453 = _1451;
        _1454 = _1451;
        _1455 = _1451;
        _1456 = _1451;
        _1457 = _1451;
        _1458 = _1451;
        _1459 = _1451;
        _1460 = _1451;
        _1461 = _1451;
        _1462 = _1451;
        _1463 = 0.0;
        _1464 = 0.0;
        _1465 = 0.0;
    }
    float _1763;
    float _1764;
    float _1765;
    float _1766;
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1494 = fma(_1121, cbModelParam._m0[30u].z, fma(_1117, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1113));
        float _1498 = fma(_1121, cbModelParam._m0[31u].z, fma(_1117, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1113));
        float _1502 = fma(_1121, cbModelParam._m0[32u].z, fma(_1117, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1113));
        float _1525 = _1113 + _870;
        float _1526 = _1117 + _871;
        float _1527 = _1121 + _872;
        float _1537 = fma(_1527, cbModelParam._m0[30u].z, fma(_1526, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1525)) - _1494;
        float _1538 = fma(_1527, cbModelParam._m0[31u].z, fma(_1526, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1525)) - _1498;
        float _1539 = fma(_1527, cbModelParam._m0[32u].z, fma(_1526, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1525)) - _1502;
        float _1543 = inversesqrt(dot(vec3(_1537, _1538, _1539), vec3(_1537, _1538, _1539)));
        float _1556 = ((_1543 * _1537) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1494 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1557 = ((_1543 * _1538) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1498 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1558 = ((_1543 * _1539) / cbModelParam._m0[35u].z) + ((((((_1502 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1560 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1556, _1557, _1558), 0.0);
        vec4 _1567 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1556, _1557, _1558), 0.0);
        vec4 _1574 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1556, _1557, _1558), 0.0);
        vec4 _1581 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1556, _1557, _1558), 0.0);
        float _1593 = exp2((_1560.w + (-0.5)) * 20.0) * 2.0;
        float _1594 = _1593 * (_1560.x + (-0.5));
        float _1595 = _1593 * (_1560.y + (-0.5));
        float _1596 = _1593 * (_1560.z + (-0.5));
        float _1603 = exp2((_1567.w + (-0.5)) * 20.0) * 2.0;
        float _1604 = _1603 * (_1567.x + (-0.5));
        float _1605 = _1603 * (_1567.y + (-0.5));
        float _1606 = _1603 * (_1567.z + (-0.5));
        float _1613 = exp2((_1574.w + (-0.5)) * 20.0) * 2.0;
        float _1614 = _1613 * (_1574.x + (-0.5));
        float _1615 = _1613 * (_1574.y + (-0.5));
        float _1616 = _1613 * (_1574.z + (-0.5));
        float _1623 = exp2((_1581.w + (-0.5)) * 20.0) * 2.0;
        float _1624 = _1623 * (_1581.x + (-0.5));
        float _1625 = _1623 * (_1581.y + (-0.5));
        float _1626 = _1623 * (_1581.z + (-0.5));
        float _1627 = isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0));
        float _1628 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1629 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
        float _1630 = _1594 * 0.5;
        float _1631 = _1604 * 0.5;
        float _1632 = _1614 * 0.5;
        float _1633 = dot(vec3(_1630, _1631, _1632), vec3(_1630, _1631, _1632));
        float _1638 = (_1633 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1633);
        float _1646 = (dot(vec3(_870, _871, _872), vec3(_1638 * _1630, _1638 * _1631, _1638 * _1632)) + 1.0) * 0.5;
        float _4465 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
        float _1655 = sqrt(((_1631 * _1631) + (_1630 * _1630)) + (_1632 * _1632)) / (_1627 + 9.9999997473787516355514526367188e-06);
        float _4476 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
        float _1656 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
        float _1657 = _1656 * 2.0;
        float _1661 = (1.0 - _1656) / (_1656 + 1.0);
        float _4487 = isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0));
        float _1662 = isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0));
        float _1671 = ((((1.0 - _1662) * (_1657 + 2.0)) * exp2(log2(isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0))) * (_1657 + 1.0))) + _1662) * _1627;
        float _1672 = _1595 * 0.5;
        float _1673 = _1605 * 0.5;
        float _1674 = _1615 * 0.5;
        float _1675 = dot(vec3(_1672, _1673, _1674), vec3(_1672, _1673, _1674));
        float _1680 = (_1675 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1675);
        float _1688 = (dot(vec3(_870, _871, _872), vec3(_1680 * _1672, _1680 * _1673, _1680 * _1674)) + 1.0) * 0.5;
        float _4498 = isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0));
        float _1697 = sqrt(((_1673 * _1673) + (_1672 * _1672)) + (_1674 * _1674)) / (_1628 + 9.9999997473787516355514526367188e-06);
        float _4509 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
        float _1698 = isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0));
        float _1699 = _1698 * 2.0;
        float _1703 = (1.0 - _1698) / (_1698 + 1.0);
        float _4520 = isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0));
        float _1704 = isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0));
        float _1713 = ((((1.0 - _1704) * (_1699 + 2.0)) * exp2(log2(isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0))) * (_1699 + 1.0))) + _1704) * _1628;
        float _1714 = _1596 * 0.5;
        float _1715 = _1606 * 0.5;
        float _1716 = _1616 * 0.5;
        float _1717 = dot(vec3(_1714, _1715, _1716), vec3(_1714, _1715, _1716));
        float _1722 = (_1717 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1717);
        float _1730 = (dot(vec3(_870, _871, _872), vec3(_1722 * _1714, _1722 * _1715, _1722 * _1716)) + 1.0) * 0.5;
        float _4531 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
        float _1739 = sqrt(((_1715 * _1715) + (_1714 * _1714)) + (_1716 * _1716)) / (_1629 + 9.9999997473787516355514526367188e-06);
        float _4542 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
        float _1740 = isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0));
        float _1741 = _1740 * 2.0;
        float _1745 = (1.0 - _1740) / (_1740 + 1.0);
        float _4553 = isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0));
        float _1746 = isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0));
        float _1755 = ((((1.0 - _1746) * (_1741 + 2.0)) * exp2(log2(isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0))) * (_1741 + 1.0))) + _1746) * _1629;
        _1763 = _1596;
        _1764 = _1595;
        _1765 = _1594;
        _1766 = _1606;
        _1767 = _1605;
        _1768 = _1604;
        _1769 = _1616;
        _1770 = _1615;
        _1771 = _1614;
        _1772 = _1629;
        _1773 = _1628;
        _1774 = _1627;
        _1775 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0)));
        _1776 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1713 : (isnan(_1713) ? 0.0 : max(_1713, 0.0)));
        _1777 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0)));
    }
    else
    {
        _1763 = _1451;
        _1764 = _1451;
        _1765 = _1451;
        _1766 = _1451;
        _1767 = _1451;
        _1768 = _1451;
        _1769 = _1451;
        _1770 = _1451;
        _1771 = _1451;
        _1772 = _1451;
        _1773 = _1451;
        _1774 = _1451;
        _1775 = 0.0;
        _1776 = 0.0;
        _1777 = 0.0;
    }
    float _1787 = (cbModelParam._m0[1u].x * (_1775 - _1463)) + _1463;
    float _1788 = (cbModelParam._m0[1u].x * (_1776 - _1464)) + _1464;
    float _1789 = (cbModelParam._m0[1u].x * (_1777 - _1465)) + _1465;
    float _1810 = fma(_1789, cbSceneParam._m0[89u].z, fma(_1788, cbSceneParam._m0[89u].y, _1787 * cbSceneParam._m0[89u].x));
    float _1813 = fma(_1789, cbSceneParam._m0[90u].z, fma(_1788, cbSceneParam._m0[90u].y, _1787 * cbSceneParam._m0[90u].x));
    float _1816 = fma(_1789, cbSceneParam._m0[91u].z, fma(_1788, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1787));
    float _1831 = _1057 * 0.5;
    float _1832 = _1058 * 0.5;
    float _1833 = _1059 * 0.5;
    float _1834 = dot(vec4(_1831, _1832, _1833, 1.0), vec4(_1765, _1768, _1771, _1774));
    float _1837 = dot(vec4(_1831, _1832, _1833, 1.0), vec4(_1764, _1767, _1770, _1773));
    float _1840 = dot(vec4(_1831, _1832, _1833, 1.0), vec4(_1763, _1766, _1769, _1772));
    float _1874;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1847 = dot(vec4(_1831, _1832, _1833, 1.0), vec4(_1450, _1454, _1457, _1460));
        float _1851 = dot(vec4(_1831, _1832, _1833, 1.0), vec4(_1452, _1455, _1458, _1461));
        float _1855 = dot(vec4(_1831, _1832, _1833, 1.0), vec4(_1453, _1456, _1459, _1462));
        float _1862 = dot(vec4(cbModelParam._m0[39u]), vec4(_1831, _1832, _1833, 1.0));
        _1874 = dot(vec3(isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0)), isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0)), isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1862) ? 0.0 : (isnan(0.0) ? _1862 : max(0.0, _1862))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1874 = 1.0;
    }
    float _1885;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1876 = dot(vec4(cbModelParam._m0[40u]), vec4(_1831, _1832, _1833, 1.0));
        _1885 = dot(vec3(isnan(0.0) ? _1834 : (isnan(_1834) ? 0.0 : max(_1834, 0.0)), isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0)), isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1876) ? 0.0 : (isnan(0.0) ? _1876 : max(0.0, _1876))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1885 = 1.0;
    }
    float _1889 = (_1885 * cbModelParam._m0[1u].x) + (_1874 * (1.0 - cbModelParam._m0[1u].x));
    float _1899 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _873);
    float _1900 = isnan(_1899) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1899 : min(cbModelParam._m0[25u].z, _1899));
    float _1980;
    float _1982;
    float _1984;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1947 = fma(_1121, cbModelParam._m0[13u].z, fma(_1117, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1113)) + cbModelParam._m0[13u].w;
        float _1951 = fma(_1121, cbModelParam._m0[14u].z, fma(_1117, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1113)) + cbModelParam._m0[14u].w;
        float _1955 = fma(_1121, cbModelParam._m0[15u].z, fma(_1117, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1113)) + cbModelParam._m0[15u].w;
        float _1958 = fma(_1059, cbModelParam._m0[13u].z, fma(_1058, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1057));
        float _1961 = fma(_1059, cbModelParam._m0[14u].z, fma(_1058, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1057));
        float _1964 = fma(_1059, cbModelParam._m0[15u].z, fma(_1058, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1057));
        float _1992;
        if (_1958 > 0.0)
        {
            _1992 = abs((1.0 - _1947) / _1958);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1958 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1947 + 1.0) / _1958);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1992 = frontier_phi_17_15_ladder;
        }
        float _2163;
        if (_1961 > 0.0)
        {
            _2163 = abs((1.0 - _1951) / _1961);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1961 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1951 + 1.0) / _1961);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2163 = frontier_phi_26_22_ladder;
        }
        float _2459;
        if (_1964 > 0.0)
        {
            _2459 = abs((1.0 - _1955) / _1964);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1964 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1955 + 1.0) / _1964);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2459 = frontier_phi_38_33_ladder;
        }
        float _2461 = isnan(_2163) ? _1992 : (isnan(_1992) ? _2163 : min(_1992, _2163));
        float _2462 = isnan(_2459) ? _2461 : (isnan(_2461) ? _2459 : min(_2461, _2459));
        float _2466 = (_2462 * _1958) + _1947;
        float _2467 = (_2462 * _1961) + _1951;
        float _2468 = (_2462 * _1964) + _1955;
        float _2469 = _2462 * 9.9999997473787516355514526367188e-05;
        float _2471 = (-1.0) - _2469;
        float _2473 = _2469 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2468 > _2473) || ((_2468 < _2471) || ((_2467 > _2473) || ((_2467 < _2471) || ((_2466 < _2471) || (_2466 > _2473))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2613 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2468, cbModelParam._m0[9u].z, fma(_2467, cbModelParam._m0[9u].y, _2466 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2468, cbModelParam._m0[10u].z, fma(_2467, cbModelParam._m0[10u].y, _2466 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2468, cbModelParam._m0[11u].z, fma(_2467, cbModelParam._m0[11u].y, _2466 * cbModelParam._m0[11u].x))), _1900);
            frontier_phi_16_38_ladder = _2613.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2613.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2613.x * cbModelParam._m0[1u].y;
        }
        _1980 = frontier_phi_16_38_ladder_2;
        _1982 = frontier_phi_16_38_ladder_1;
        _1984 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1968 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1057, _1058, _1059), _1900);
        _1980 = _1968.x * cbModelParam._m0[1u].y;
        _1982 = _1968.y * cbModelParam._m0[1u].y;
        _1984 = _1968.z * cbModelParam._m0[1u].y;
    }
    float _1988 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _873);
    float _1989 = isnan(_1988) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1988 : min(cbModelParam._m0[25u].w, _1988));
    float _2078;
    float _2080;
    float _2082;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2042 = fma(_1121, cbModelParam._m0[21u].z, fma(_1117, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1113)) + cbModelParam._m0[21u].w;
        float _2046 = fma(_1121, cbModelParam._m0[22u].z, fma(_1117, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1113)) + cbModelParam._m0[22u].w;
        float _2050 = fma(_1121, cbModelParam._m0[23u].z, fma(_1117, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1113)) + cbModelParam._m0[23u].w;
        float _2053 = fma(_1059, cbModelParam._m0[21u].z, fma(_1058, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1057));
        float _2056 = fma(_1059, cbModelParam._m0[22u].z, fma(_1058, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1057));
        float _2059 = fma(_1059, cbModelParam._m0[23u].z, fma(_1058, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1057));
        float _2168;
        if (_2053 > 0.0)
        {
            _2168 = abs((1.0 - _2042) / _2053);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2053 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2042 + 1.0) / _2053);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2168 = frontier_phi_28_24_ladder;
        }
        float _2486;
        if (_2056 > 0.0)
        {
            _2486 = abs((1.0 - _2046) / _2056);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2056 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2046 + 1.0) / _2056);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2486 = frontier_phi_40_35_ladder;
        }
        float _2824;
        if (_2059 > 0.0)
        {
            _2824 = abs((1.0 - _2050) / _2059);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2059 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2050 + 1.0) / _2059);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2824 = frontier_phi_50_47_ladder;
        }
        float _2826 = isnan(_2486) ? _2168 : (isnan(_2168) ? _2486 : min(_2168, _2486));
        float _2827 = isnan(_2824) ? _2826 : (isnan(_2826) ? _2824 : min(_2826, _2824));
        float _2831 = (_2827 * _2053) + _2042;
        float _2832 = (_2827 * _2056) + _2046;
        float _2833 = (_2827 * _2059) + _2050;
        float _2834 = _2827 * 9.9999997473787516355514526367188e-05;
        float _2835 = (-1.0) - _2834;
        float _2837 = _2834 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2833 > _2837) || ((_2833 < _2835) || ((_2832 > _2837) || ((_2832 < _2835) || ((_2831 < _2835) || (_2831 > _2837))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2955 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2833, cbModelParam._m0[17u].z, fma(_2832, cbModelParam._m0[17u].y, _2831 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2833, cbModelParam._m0[18u].z, fma(_2832, cbModelParam._m0[18u].y, _2831 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2833, cbModelParam._m0[19u].z, fma(_2832, cbModelParam._m0[19u].y, _2831 * cbModelParam._m0[19u].x))), _1989);
            frontier_phi_25_50_ladder = _2955.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2955.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2955.x * cbModelParam._m0[1u].z;
        }
        _2078 = frontier_phi_25_50_ladder_2;
        _2080 = frontier_phi_25_50_ladder_1;
        _2082 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2062 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1057, _1058, _1059), _1989);
        _2078 = _2062.x * cbModelParam._m0[1u].z;
        _2080 = _2062.y * cbModelParam._m0[1u].z;
        _2082 = _2062.z * cbModelParam._m0[1u].z;
    }
    float _2095 = (((_1084 * _1034) + _1085) * _1049) * ((cbModelParam._m0[1u].w * (_2078 - _1980)) + _1980);
    float _2097 = (((_1084 * _1036) + _1085) * _1049) * ((cbModelParam._m0[1u].w * (_2080 - _1982)) + _1982);
    float _2099 = (((_1084 * _1037) + _1085) * _1049) * ((cbModelParam._m0[1u].w * (_2082 - _1984)) + _1984);
    float _2102 = fma(_2099, cbSceneParam._m0[89u].z, fma(_2097, cbSceneParam._m0[89u].y, _2095 * cbSceneParam._m0[89u].x));
    float _2105 = fma(_2099, cbSceneParam._m0[90u].z, fma(_2097, cbSceneParam._m0[90u].y, _2095 * cbSceneParam._m0[90u].x));
    float _2108 = fma(_2099, cbSceneParam._m0[91u].z, fma(_2097, cbSceneParam._m0[91u].y, _2095 * cbSceneParam._m0[91u].x));
    float _2142 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2146 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2150 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2154 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2155 = _2142 / _2154;
    float _2156 = _2146 / _2154;
    float _2157 = _2150 / _2154;
    float _2304;
    float _2305;
    float _2306;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2184 = ((uint(_2157 > cbSceneParam._m0[59u].y) + uint(_2157 > cbSceneParam._m0[59u].x)) + uint(_2157 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2185 = _2184 + 43u;
        uint _2193 = _2184 + 44u;
        uint _2201 = _2184 + 45u;
        uint _2209 = _2184 + 46u;
        float _2220 = fma(_2154, cbSceneParam._m0[_2185].w, fma(_2150, cbSceneParam._m0[_2185].z, fma(_2146, cbSceneParam._m0[_2185].y, _2142 * cbSceneParam._m0[_2185].x)));
        float _2224 = fma(_2154, cbSceneParam._m0[_2193].w, fma(_2150, cbSceneParam._m0[_2193].z, fma(_2146, cbSceneParam._m0[_2193].y, _2142 * cbSceneParam._m0[_2193].x)));
        float _2232 = fma(_2154, cbSceneParam._m0[_2209].w, fma(_2150, cbSceneParam._m0[_2209].z, fma(_2146, cbSceneParam._m0[_2209].y, _2142 * cbSceneParam._m0[_2209].x)));
        float _2237 = cbSceneParam._m0[33u].z * _2232;
        float _2239 = cbSceneParam._m0[33u].w * _2232;
        float _2242 = fma(_2154, cbSceneParam._m0[_2201].w, fma(_2150, cbSceneParam._m0[_2201].z, fma(_2146, cbSceneParam._m0[_2201].y, _2142 * cbSceneParam._m0[_2201].x))) / _2232;
        float _2290 = (cbSceneParam._m0[33u].x - sqrt(((_2156 * _2156) + (_2155 * _2155)) + (_2157 * _2157))) * cbSceneParam._m0[33u].y;
        float _4679 = isnan(0.0) ? _2290 : (isnan(_2290) ? 0.0 : max(_2290, 0.0));
        float _2297 = (isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2237 + _2220) / _2232, (_2239 + _2224) / _2232), _2242), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2239 + _2220) / _2232, (_2224 - _2237) / _2232), _2242), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2220 - _2237) / _2232, (_2224 - _2239) / _2232), _2242), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2220 - _2239) / _2232, (_2237 + _2224) / _2232), _2242), 0.0)).x), vec4(0.25)));
        _2304 = 1.0 - (_2297 * cbSceneParam._m0[34u].x);
        _2305 = 1.0 - (_2297 * cbSceneParam._m0[34u].y);
        _2306 = 1.0 - (_2297 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2304 = 1.0;
        _2305 = 1.0;
        _2306 = 1.0;
    }
    float _2370;
    float _2372;
    float _2374;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2358 = fma(_2154, cbSceneParam._m0[63u].w, fma(_2150, cbSceneParam._m0[63u].z, fma(_2146, cbSceneParam._m0[63u].y, _2142 * cbSceneParam._m0[63u].x)));
        float _2359 = fma(_2154, cbSceneParam._m0[60u].w, fma(_2150, cbSceneParam._m0[60u].z, fma(_2146, cbSceneParam._m0[60u].y, _2142 * cbSceneParam._m0[60u].x))) / _2358;
        float _2360 = fma(_2154, cbSceneParam._m0[61u].w, fma(_2150, cbSceneParam._m0[61u].z, fma(_2146, cbSceneParam._m0[61u].y, _2142 * cbSceneParam._m0[61u].x))) / _2358;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2359 >= cbSceneParam._m0[64u].x) && (_2360 >= cbSceneParam._m0[64u].y)) && (_2359 <= cbSceneParam._m0[64u].z)) && (_2360 <= cbSceneParam._m0[64u].w))
        {
            float _2499 = fma(_2154, cbSceneParam._m0[62u].w, fma(_2150, cbSceneParam._m0[62u].z, fma(_2146, cbSceneParam._m0[62u].y, _2142 * cbSceneParam._m0[62u].x))) / _2358;
            float _2503 = isnan(cbSceneParam._m0[41u].w) ? _2499 : (isnan(_2499) ? cbSceneParam._m0[41u].w : max(_2499, cbSceneParam._m0[41u].w));
            float _2546 = (cbSceneParam._m0[33u].x - sqrt(((_2156 * _2156) + (_2155 * _2155)) + (_2157 * _2157))) * cbSceneParam._m0[33u].y;
            float _4695 = isnan(0.0) ? _2546 : (isnan(_2546) ? 0.0 : max(_2546, 0.0));
            float _2553 = (isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2359, cbSceneParam._m0[33u].w + _2360), _2503), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2359, _2360 - cbSceneParam._m0[33u].z), _2503), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2359 - cbSceneParam._m0[33u].z, _2360 - cbSceneParam._m0[33u].w), _2503), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2359 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2360), _2503), 0.0)).x), vec4(0.25)));
            float _2557 = 1.0 - (_2553 * cbSceneParam._m0[34u].x);
            float _2558 = 1.0 - (_2553 * cbSceneParam._m0[34u].y);
            float _2559 = 1.0 - (_2553 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2559) ? _2306 : (isnan(_2306) ? _2559 : min(_2306, _2559));
            frontier_phi_37_36_ladder_1 = isnan(_2558) ? _2305 : (isnan(_2305) ? _2558 : min(_2305, _2558));
            frontier_phi_37_36_ladder_2 = isnan(_2557) ? _2304 : (isnan(_2304) ? _2557 : min(_2304, _2557));
        }
        else
        {
            frontier_phi_37_36_ladder = _2306;
            frontier_phi_37_36_ladder_1 = _2305;
            frontier_phi_37_36_ladder_2 = _2304;
        }
        _2370 = frontier_phi_37_36_ladder_2;
        _2372 = frontier_phi_37_36_ladder_1;
        _2374 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2370 = _2304;
        _2372 = _2305;
        _2374 = _2306;
    }
    uvec4 _2379 = floatBitsToUint(cbInstanceData._m0[_1009 + 5u]);
    uint _2381 = _2379.x * 14u;
    uint _2382 = _2381 + 13u;
    float _2389 = _1049 + (-1.0);
    float _2394 = (cbLight._m0[_2382].x * _2389) + 1.0;
    float _2395 = (cbLight._m0[_2382].y * _2389) + 1.0;
    float _2396 = (cbLight._m0[_2382].z * _2389) + 1.0;
    float _2397 = (cbLight._m0[_2382].w * _2389) + 1.0;
    uint _2398 = _2381 + 5u;
    float _2404 = isnan(1.0) ? _2395 : (isnan(_2395) ? 1.0 : min(_2395, 1.0));
    uint _2408 = _2381 + 4u;
    float _2418 = isnan(1.0) ? _2394 : (isnan(_2394) ? 1.0 : min(_2394, 1.0));
    uint _2422 = _2381 | 1u;
    float _2433 = dot(vec3(cbLight._m0[_2381].xyz), vec3(_870, _871, _872));
    float _2436 = dot(vec3(cbLight._m0[_2422].xyz), vec3(_870, _871, _872));
    float _4731 = isnan(0.0) ? _2433 : (isnan(_2433) ? 0.0 : max(_2433, 0.0));
    float _4742 = isnan(0.0) ? _2436 : (isnan(_2436) ? 0.0 : max(_2436, 0.0));
    float _2441 = (isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0))) * 0.3183098733425140380859375;
    float _2443 = (isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0))) * 0.3183098733425140380859375;
    float _2450 = ((cbLight._m0[_2398].x * _2404) * _2443) + (((cbLight._m0[_2408].x * _2370) * _2418) * _2441);
    float _2451 = ((_2404 * cbLight._m0[_2398].y) * _2443) + (((cbLight._m0[_2408].y * _2372) * _2418) * _2441);
    float _2452 = ((_2404 * cbLight._m0[_2398].z) * _2443) + (((cbLight._m0[_2408].z * _2374) * _2418) * _2441);
    uvec4 _2456 = floatBitsToUint(cbLight._m0[_2381 + 12u]);
    bool _2458 = _2456.x == 0u;
    float _2560;
    float _2562;
    float _2564;
    if (_2458)
    {
        _2560 = _2450;
        _2562 = _2451;
        _2564 = _2452;
    }
    else
    {
        uint _2568 = _2381 + 6u;
        float _2584 = (dot(vec3(cbLight._m0[_2381 + 2u].xyz), vec3(_870, _871, _872)) * 0.5) + 0.5;
        float _2585 = _2584 * _2584;
        float _4753 = isnan(0.0) ? _2585 : (isnan(_2585) ? 0.0 : max(_2585, 0.0));
        float _2586 = isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0));
        float _2587 = isnan(1.0) ? _2396 : (isnan(_2396) ? 1.0 : min(_2396, 1.0));
        _2560 = (((cbLight._m0[_2568].x * 0.3183098733425140380859375) * _2586) * _2587) + _2450;
        _2562 = (((cbLight._m0[_2568].y * 0.3183098733425140380859375) * _2586) * _2587) + _2451;
        _2564 = (((cbLight._m0[_2568].z * 0.3183098733425140380859375) * _2586) * _2587) + _2452;
    }
    bool _2567 = _2456.y == 0u;
    float _2622;
    float _2624;
    float _2626;
    if (_2567)
    {
        _2622 = _2560;
        _2624 = _2562;
        _2626 = _2564;
    }
    else
    {
        uint _2795 = _2381 + 7u;
        float _2811 = (dot(vec3(cbLight._m0[_2381 + 3u].xyz), vec3(_870, _871, _872)) * 0.5) + 0.5;
        float _2812 = _2811 * _2811;
        float _4769 = isnan(0.0) ? _2812 : (isnan(_2812) ? 0.0 : max(_2812, 0.0));
        float _2813 = isnan(1.0) ? _4769 : (isnan(_4769) ? 1.0 : min(_4769, 1.0));
        float _2814 = isnan(1.0) ? _2397 : (isnan(_2397) ? 1.0 : min(_2397, 1.0));
        _2622 = (((cbLight._m0[_2795].x * 0.3183098733425140380859375) * _2813) * _2814) + _2560;
        _2624 = (((cbLight._m0[_2795].y * 0.3183098733425140380859375) * _2813) * _2814) + _2562;
        _2626 = (((cbLight._m0[_2795].z * 0.3183098733425140380859375) * _2813) * _2814) + _2564;
    }
    uint _2629 = _2381 + 8u;
    float _2642 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2381].w)) * _873) * 0.949999988079071044921875);
    float _2643 = _2642 * _2642;
    float _2644 = cbLight._m0[_2381].x + _951;
    float _2645 = cbLight._m0[_2381].y + _952;
    float _2646 = cbLight._m0[_2381].z + _953;
    float _2650 = inversesqrt(dot(vec3(_2644, _2645, _2646), vec3(_2644, _2645, _2646)));
    float _2651 = _2650 * _2644;
    float _2652 = _2650 * _2645;
    float _2653 = _2650 * _2646;
    float _2654 = dot(vec3(_870, _871, _872), vec3(cbLight._m0[_2381].xyz));
    float _4785 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0));
    float _2657 = isnan(1.0) ? _4785 : (isnan(_4785) ? 1.0 : min(_4785, 1.0));
    float _4796 = isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0));
    float _2658 = isnan(1.0) ? _4796 : (isnan(_4796) ? 1.0 : min(_4796, 1.0));
    float _2659 = dot(vec3(_870, _871, _872), vec3(_2651, _2652, _2653));
    float _4807 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
    float _2662 = isnan(1.0) ? _4807 : (isnan(_4807) ? 1.0 : min(_4807, 1.0));
    float _2663 = dot(vec3(cbLight._m0[_2381].xyz), vec3(_2651, _2652, _2653));
    float _4818 = isnan(0.0) ? _2663 : (isnan(_2663) ? 0.0 : max(_2663, 0.0));
    float _2667 = _2643 * _2643;
    float _2671 = ((_2662 * _2662) * (_2667 + (-1.0))) + 1.0;
    float _2679 = exp2(log2(1.0 - (isnan(1.0) ? _4818 : (isnan(_4818) ? 1.0 : min(_4818, 1.0)))) * 5.0);
    float _2680 = 0.959999978542327880859375 - _1031;
    float _2682 = 0.959999978542327880859375 - _1032;
    float _2683 = 0.959999978542327880859375 - _1033;
    float _2690 = 1.0 - _2643;
    float _2701 = (0.5 / (((_2658 * ((_2657 * _2690) + _2643)) + 9.9999999392252902907785028219223e-09) + (((_2658 * _2690) + _2643) * _2657))) * _2657;
    float _4829 = isnan(0.0) ? _2701 : (isnan(_2701) ? 0.0 : max(_2701, 0.0));
    float _2703 = (isnan(1.0) ? _4829 : (isnan(_4829) ? 1.0 : min(_4829, 1.0))) * (_2667 / ((_2671 * _2671) * 3.141590118408203125));
    uint _2717 = _2381 + 9u;
    float _2728 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2422].w)) * _873) * 0.949999988079071044921875);
    float _2729 = _2728 * _2728;
    float _2730 = cbLight._m0[_2422].x + _951;
    float _2731 = cbLight._m0[_2422].y + _952;
    float _2732 = cbLight._m0[_2422].z + _953;
    float _2736 = inversesqrt(dot(vec3(_2730, _2731, _2732), vec3(_2730, _2731, _2732)));
    float _2737 = _2736 * _2730;
    float _2738 = _2736 * _2731;
    float _2739 = _2736 * _2732;
    float _2740 = dot(vec3(_870, _871, _872), vec3(cbLight._m0[_2422].xyz));
    float _4840 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
    float _2743 = isnan(1.0) ? _4840 : (isnan(_4840) ? 1.0 : min(_4840, 1.0));
    float _2744 = dot(vec3(_870, _871, _872), vec3(_2737, _2738, _2739));
    float _4851 = isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : max(_2744, 0.0));
    float _2747 = isnan(1.0) ? _4851 : (isnan(_4851) ? 1.0 : min(_4851, 1.0));
    float _2748 = dot(vec3(cbLight._m0[_2422].xyz), vec3(_2737, _2738, _2739));
    float _4862 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
    float _2752 = _2729 * _2729;
    float _2756 = ((_2747 * _2747) * (_2752 + (-1.0))) + 1.0;
    float _2763 = exp2(log2(1.0 - (isnan(1.0) ? _4862 : (isnan(_4862) ? 1.0 : min(_4862, 1.0)))) * 5.0);
    float _2770 = 1.0 - _2729;
    float _2780 = (0.5 / (((_2658 * ((_2743 * _2770) + _2729)) + 9.9999999392252902907785028219223e-09) + (((_2658 * _2770) + _2729) * _2743))) * _2743;
    float _4873 = isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : max(_2780, 0.0));
    float _2782 = (isnan(1.0) ? _4873 : (isnan(_4873) ? 1.0 : min(_4873, 1.0))) * (_2752 / ((_2756 * _2756) * 3.141590118408203125));
    float _2792 = (((((_2763 * _2680) + _1034) * cbLight._m0[_2717].x) * _2782) * _2404) + ((((cbLight._m0[_2629].x * _2370) * ((_2679 * _2680) + _1034)) * _2703) * _2418);
    float _2793 = (((((_2763 * _2682) + _1036) * cbLight._m0[_2717].y) * _2782) * _2404) + ((((cbLight._m0[_2629].y * _2372) * ((_2679 * _2682) + _1036)) * _2703) * _2418);
    float _2794 = (((((_2763 * _2683) + _1037) * cbLight._m0[_2717].z) * _2782) * _2404) + ((((cbLight._m0[_2629].z * _2374) * ((_2679 * _2683) + _1037)) * _2703) * _2418);
    float _2850;
    float _2852;
    float _2854;
    if (_2458)
    {
        _2850 = _2792;
        _2852 = _2793;
        _2854 = _2794;
    }
    else
    {
        uint _2856 = _2381 + 2u;
        uint _2860 = _2381 + 10u;
        float _2874 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2856].w)) * _873) * 0.949999988079071044921875);
        float _2875 = _2874 * _2874;
        float _2876 = cbLight._m0[_2856].x + _951;
        float _2877 = cbLight._m0[_2856].y + _952;
        float _2878 = cbLight._m0[_2856].z + _953;
        float _2882 = inversesqrt(dot(vec3(_2876, _2877, _2878), vec3(_2876, _2877, _2878)));
        float _2883 = _2882 * _2876;
        float _2884 = _2882 * _2877;
        float _2885 = _2882 * _2878;
        float _2886 = dot(vec3(_870, _871, _872), vec3(cbLight._m0[_2856].xyz));
        float _4884 = isnan(0.0) ? _2886 : (isnan(_2886) ? 0.0 : max(_2886, 0.0));
        float _2889 = isnan(1.0) ? _4884 : (isnan(_4884) ? 1.0 : min(_4884, 1.0));
        float _2890 = dot(vec3(_870, _871, _872), vec3(_2883, _2884, _2885));
        float _4895 = isnan(0.0) ? _2890 : (isnan(_2890) ? 0.0 : max(_2890, 0.0));
        float _2893 = isnan(1.0) ? _4895 : (isnan(_4895) ? 1.0 : min(_4895, 1.0));
        float _2894 = dot(vec3(cbLight._m0[_2856].xyz), vec3(_2883, _2884, _2885));
        float _4906 = isnan(0.0) ? _2894 : (isnan(_2894) ? 0.0 : max(_2894, 0.0));
        float _2898 = _2875 * _2875;
        float _2902 = ((_2893 * _2893) * (_2898 + (-1.0))) + 1.0;
        float _2909 = exp2(log2(1.0 - (isnan(1.0) ? _4906 : (isnan(_4906) ? 1.0 : min(_4906, 1.0)))) * 5.0);
        float _2916 = 1.0 - _2875;
        float _2926 = (0.5 / (((_2658 * ((_2889 * _2916) + _2875)) + 9.9999999392252902907785028219223e-09) + (((_2658 * _2916) + _2875) * _2889))) * _2889;
        float _4917 = isnan(0.0) ? _2926 : (isnan(_2926) ? 0.0 : max(_2926, 0.0));
        float _2928 = (isnan(1.0) ? _4917 : (isnan(_4917) ? 1.0 : min(_4917, 1.0))) * (_2898 / ((_2902 * _2902) * 3.141590118408203125));
        float _2929 = isnan(1.0) ? _2396 : (isnan(_2396) ? 1.0 : min(_2396, 1.0));
        _2850 = (((((_2909 * _2680) + _1034) * cbLight._m0[_2860].x) * _2928) * _2929) + _2792;
        _2852 = (((((_2909 * _2682) + _1036) * cbLight._m0[_2860].y) * _2928) * _2929) + _2793;
        _2854 = (((((_2909 * _2683) + _1037) * cbLight._m0[_2860].z) * _2928) * _2929) + _2794;
    }
    float _2960;
    float _2962;
    float _2964;
    if (_2567)
    {
        _2960 = _2850;
        _2962 = _2852;
        _2964 = _2854;
    }
    else
    {
        uint _2971 = _2381 + 3u;
        uint _2975 = _2381 + 11u;
        float _2989 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2971].w)) * _873) * 0.949999988079071044921875);
        float _2990 = _2989 * _2989;
        float _2991 = cbLight._m0[_2971].x + _951;
        float _2992 = cbLight._m0[_2971].y + _952;
        float _2993 = cbLight._m0[_2971].z + _953;
        float _2997 = inversesqrt(dot(vec3(_2991, _2992, _2993), vec3(_2991, _2992, _2993)));
        float _2998 = _2997 * _2991;
        float _2999 = _2997 * _2992;
        float _3000 = _2997 * _2993;
        float _3001 = dot(vec3(_870, _871, _872), vec3(cbLight._m0[_2971].xyz));
        float _4933 = isnan(0.0) ? _3001 : (isnan(_3001) ? 0.0 : max(_3001, 0.0));
        float _3004 = isnan(1.0) ? _4933 : (isnan(_4933) ? 1.0 : min(_4933, 1.0));
        float _3005 = dot(vec3(_870, _871, _872), vec3(_2998, _2999, _3000));
        float _4944 = isnan(0.0) ? _3005 : (isnan(_3005) ? 0.0 : max(_3005, 0.0));
        float _3008 = isnan(1.0) ? _4944 : (isnan(_4944) ? 1.0 : min(_4944, 1.0));
        float _3009 = dot(vec3(cbLight._m0[_2971].xyz), vec3(_2998, _2999, _3000));
        float _4955 = isnan(0.0) ? _3009 : (isnan(_3009) ? 0.0 : max(_3009, 0.0));
        float _3013 = _2990 * _2990;
        float _3017 = ((_3008 * _3008) * (_3013 + (-1.0))) + 1.0;
        float _3024 = exp2(log2(1.0 - (isnan(1.0) ? _4955 : (isnan(_4955) ? 1.0 : min(_4955, 1.0)))) * 5.0);
        float _3031 = 1.0 - _2990;
        float _3041 = (0.5 / (((_2658 * ((_3004 * _3031) + _2990)) + 9.9999999392252902907785028219223e-09) + (((_2658 * _3031) + _2990) * _3004))) * _3004;
        float _4966 = isnan(0.0) ? _3041 : (isnan(_3041) ? 0.0 : max(_3041, 0.0));
        float _3043 = (isnan(1.0) ? _4966 : (isnan(_4966) ? 1.0 : min(_4966, 1.0))) * (_3013 / ((_3017 * _3017) * 3.141590118408203125));
        float _3044 = isnan(1.0) ? _2397 : (isnan(_2397) ? 1.0 : min(_2397, 1.0));
        _2960 = (((((_3024 * _2680) + _1034) * cbLight._m0[_2975].x) * _3043) * _3044) + _2850;
        _2962 = (((((_3024 * _2682) + _1036) * cbLight._m0[_2975].y) * _3043) * _3044) + _2852;
        _2964 = (((((_3024 * _2683) + _1037) * cbLight._m0[_2975].z) * _3043) * _3044) + _2854;
    }
    float _3110;
    float _3112;
    float _3114;
    float _3116;
    float _3118;
    float _3120;
    if (_2379.y == 0u)
    {
        uvec4 _3065 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3066 = _3065.x;
        uint _3077 = uint((float(_3065.y) * floor(float(uint(cbSceneParam._m0[85u].y * _972) / _3066))) + floor(float(uint(cbSceneParam._m0[85u].x * _971) / _3066)));
        float _3087 = (log2(_2157 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3088 = isnan(0.0) ? _3087 : (isnan(_3087) ? 0.0 : max(_3087, 0.0));
        uint _3091 = uint(isnan(14.0) ? _3088 : (isnan(_3088) ? 14.0 : min(_3088, 14.0)));
        uvec4 _3096 = texelFetch(g_lightClusterGridBuffer, int(((_3091 << 2u) + (_3077 << 6u)) >> 2u));
        uint _3097 = _3096.x;
        uint _3098 = _3065.z;
        float _3200;
        float _3202;
        float _3204;
        float _3206;
        float _3208;
        float _3210;
        if (((((1u << ((_3098 >> 4u) & 15u)) + 4294967295u) & _3097) == 0u) || ((_3098 & 240u) == 0u))
        {
            _3200 = 0.0;
            _3202 = 0.0;
            _3204 = 0.0;
            _3206 = 0.0;
            _3208 = 0.0;
            _3210 = 0.0;
        }
        else
        {
            float _3201;
            float _3203;
            float _3205;
            float _3207;
            float _3209;
            float _3211;
            float _3351 = 0.0;
            float _3352 = 0.0;
            float _3353 = 0.0;
            float _3354 = 0.0;
            float _3355 = 0.0;
            float _3356 = 0.0;
            uint _3357 = 0u;
            uint _3366;
            bool _3367;
            for (;;)
            {
                _3366 = texelFetch(g_lightClassification, int((((_3091 << 5u) + (_3077 << 9u)) + (_3357 << 2u)) >> 2u)).x;
                _3367 = _3366 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3367)
                {
                    frontier_phi_71_pred = _3356;
                    frontier_phi_71_pred_1 = _3355;
                    frontier_phi_71_pred_2 = _3354;
                    frontier_phi_71_pred_3 = _3353;
                    frontier_phi_71_pred_4 = _3352;
                    frontier_phi_71_pred_5 = _3351;
                }
                else
                {
                    float _3496;
                    float _3497;
                    float _3498;
                    float _3499;
                    float _3500;
                    float _3501;
                    uint _3502;
                    _3496 = _3351;
                    _3497 = _3352;
                    _3498 = _3353;
                    _3499 = _3354;
                    _3500 = _3355;
                    _3501 = _3356;
                    _3502 = _3366;
                    float _3423;
                    float _3424;
                    float _3425;
                    float _3426;
                    float _3427;
                    float _3428;
                    for (;;)
                    {
                        uint _3506 = uint(findLSB(_3502)) + (_3357 << 5u);
                        uint _3503 = (_3502 + 4294967295u) & _3502;
                        uint _3508 = _3506 * 48u;
                        vec4 _3522 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3508)).x, texelFetch(g_PointLightRenderingBuffer, int(_3508 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3508 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3508 + 3u)).x));
                        uint _3528 = (_3506 * 48u) + 4u;
                        vec4 _3541 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3528)).x, texelFetch(g_PointLightRenderingBuffer, int(_3528 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3528 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3528 + 3u)).x));
                        uint _3547 = (_3506 * 48u) + 8u;
                        vec3 _3558 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3547)).x, texelFetch(g_PointLightRenderingBuffer, int(_3547 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3547 + 2u)).x));
                        float _3562 = _3522.x - _2155;
                        float _3563 = _3522.y - _2156;
                        float _3564 = _3522.z - _2157;
                        float _3565 = dot(vec3(_3562, _3563, _3564), vec3(_3562, _3563, _3564));
                        float _3568 = inversesqrt(_3565);
                        float _3569 = _3568 * _3562;
                        float _3570 = _3568 * _3563;
                        float _3571 = _3568 * _3564;
                        float _3572 = dot(vec3(_990, _993, _996), vec3(_3569, _3570, _3571));
                        float _3577 = 1.0 - (_3565 * _3522.w);
                        float _4992 = isnan(0.0) ? _3577 : (isnan(_3577) ? 0.0 : max(_3577, 0.0));
                        float _3578 = isnan(1.0) ? _4992 : (isnan(_4992) ? 1.0 : min(_4992, 1.0));
                        float _3579 = sqrt(_3565) * _3541.w;
                        float _3582 = 1.39999997615814208984375 / (_3579 + 1.39999997615814208984375);
                        float _3583 = _3582 * _3582;
                        float _3586 = ((1.0 - _3583) * _3572) + _3583;
                        float _3589 = _3579 * _3579;
                        float _3593 = ((isnan(0.0) ? _3586 : (isnan(_3586) ? 0.0 : max(_3586, 0.0))) * _3578) / ((_3589 * 0.699999988079071044921875) + 1.0);
                        float _3597 = (-0.0) - _2155;
                        float _3598 = (-0.0) - _2156;
                        float _3599 = (-0.0) - _2157;
                        float _3603 = inversesqrt(dot(vec3(_3597, _3598, _3599), vec3(_3597, _3598, _3599)));
                        float _3604 = _3603 * _3597;
                        float _3605 = _3603 * _3598;
                        float _3606 = _3603 * _3599;
                        float _3613 = exp2(log2(1.0 / ((_3589 * 3.5) + 5.0)) * 0.25);
                        float _3614 = 1.0 - _1065;
                        float _3621 = sqrt(1.0 - ((1.0 - (_3614 * _3614)) * (1.0 - (_3613 * _3613))));
                        float _3622 = _3621 * _3621;
                        float _3623 = _3622 * _3622;
                        float _3624 = _3604 + _3569;
                        float _3625 = _3605 + _3570;
                        float _3626 = _3606 + _3571;
                        float _3630 = inversesqrt(dot(vec3(_3624, _3625, _3626), vec3(_3624, _3625, _3626)));
                        float _3634 = dot(vec3(_990, _993, _996), vec3(_3604, _3605, _3606));
                        float _5008 = isnan(0.0) ? _3634 : (isnan(_3634) ? 0.0 : max(_3634, 0.0));
                        float _3637 = isnan(1.0) ? _5008 : (isnan(_5008) ? 1.0 : min(_5008, 1.0));
                        float _3638 = dot(vec3(_990, _993, _996), vec3(_3630 * _3624, _3630 * _3625, _3630 * _3626));
                        float _5019 = isnan(0.0) ? _3638 : (isnan(_3638) ? 0.0 : max(_3638, 0.0));
                        float _3641 = isnan(1.0) ? _5019 : (isnan(_5019) ? 1.0 : min(_5019, 1.0));
                        float _3645 = ((_3641 * _3641) * (_3623 + (-1.0))) + 1.0;
                        float _3646 = _3582 * _3622;
                        float _3647 = _3646 * _3646;
                        float _3650 = ((1.0 - _3647) * _3572) + _3647;
                        float _5030 = isnan(0.0) ? _3650 : (isnan(_3650) ? 0.0 : max(_3650, 0.0));
                        float _3651 = isnan(1.0) ? _5030 : (isnan(_5030) ? 1.0 : min(_5030, 1.0));
                        float _3652 = 1.0 - _3622;
                        float _3662 = (0.5 / (((_3651 * ((_3637 * _3652) + _3622)) + 9.9999999392252902907785028219223e-09) + (((_3651 * _3652) + _3622) * _3637))) * _3651;
                        float _5041 = isnan(0.0) ? _3662 : (isnan(_3662) ? 0.0 : max(_3662, 0.0));
                        float _3673 = (((_3623 * 3.1415927410125732421875) * (isnan(1.0) ? _5041 : (isnan(_5041) ? 1.0 : min(_5041, 1.0)))) / ((_3645 * _3645) * ((_3589 * 2.1991131305694580078125) + 3.141590118408203125))) * _3578;
                        _3426 = (_3593 * _3541.x) + _3499;
                        _3427 = (_3593 * _3541.y) + _3500;
                        _3428 = (_3593 * _3541.z) + _3501;
                        _3423 = (_3673 * _3558.x) + _3496;
                        _3424 = (_3673 * _3558.y) + _3497;
                        _3425 = (_3673 * _3558.z) + _3498;
                        if (_3503 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3496 = _3423;
                            _3497 = _3424;
                            _3498 = _3425;
                            _3499 = _3426;
                            _3500 = _3427;
                            _3501 = _3428;
                            _3502 = _3503;
                        }
                    }
                    frontier_phi_71_pred = _3428;
                    frontier_phi_71_pred_1 = _3427;
                    frontier_phi_71_pred_2 = _3426;
                    frontier_phi_71_pred_3 = _3425;
                    frontier_phi_71_pred_4 = _3424;
                    frontier_phi_71_pred_5 = _3423;
                }
                _3211 = frontier_phi_71_pred;
                _3209 = frontier_phi_71_pred_1;
                _3207 = frontier_phi_71_pred_2;
                _3205 = frontier_phi_71_pred_3;
                _3203 = frontier_phi_71_pred_4;
                _3201 = frontier_phi_71_pred_5;
                uint _3358 = _3357 + 1u;
                if (_3358 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3351 = _3201;
                    _3352 = _3203;
                    _3353 = _3205;
                    _3354 = _3207;
                    _3355 = _3209;
                    _3356 = _3211;
                    _3357 = _3358;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3200 = _3201;
            _3202 = _3203;
            _3204 = _3205;
            _3206 = _3207;
            _3208 = _3209;
            _3210 = _3211;
        }
        uvec4 _3214 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3215 = _3214.z;
        uint _3217 = (_3215 >> 8u) & 15u;
        float _3319;
        float _3321;
        float _3323;
        float _3325;
        float _3327;
        float _3329;
        if (((4294967295u << _3217) & _3097) == 0u)
        {
            _3319 = _3200;
            _3321 = _3202;
            _3323 = _3204;
            _3325 = _3206;
            _3327 = _3208;
            _3329 = _3210;
        }
        else
        {
            float _3344 = inversesqrt(dot(vec3(_2155, _2156, _2157), vec3(_2155, _2156, _2157)));
            float _3345 = _3344 * _2155;
            float _3346 = _3344 * _2156;
            float _3347 = _3344 * _2157;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3217 < ((_3215 >> 12u) & 15u))
            {
                float _3320;
                float _3322;
                float _3324;
                float _3326;
                float _3328;
                float _3330;
                float _3479 = _3200;
                float _3480 = _3202;
                float _3481 = _3204;
                float _3482 = _3206;
                float _3483 = _3208;
                float _3484 = _3210;
                uint _3485 = _3217;
                uint _3494;
                bool _3495;
                for (;;)
                {
                    _3494 = texelFetch(g_lightClassification, int((((_3091 << 5u) + (_3077 << 9u)) + (_3485 << 2u)) >> 2u)).x;
                    _3495 = _3494 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3495)
                    {
                        frontier_phi_82_pred = _3484;
                        frontier_phi_82_pred_1 = _3483;
                        frontier_phi_82_pred_2 = _3482;
                        frontier_phi_82_pred_3 = _3481;
                        frontier_phi_82_pred_4 = _3480;
                        frontier_phi_82_pred_5 = _3479;
                    }
                    else
                    {
                        float _3687;
                        float _3688;
                        float _3689;
                        float _3690;
                        float _3691;
                        float _3692;
                        float _3980;
                        float _3981;
                        float _3982;
                        float _3983;
                        float _3984;
                        float _3985;
                        float _3700 = _3479;
                        float _3701 = _3480;
                        float _3702 = _3481;
                        float _3703 = _3482;
                        float _3704 = _3483;
                        float _3705 = _3484;
                        uint _3706 = _3494;
                        uint _3707;
                        vec4 _3732;
                        float _3733;
                        vec4 _3748;
                        vec3 _3760;
                        vec4 _3775;
                        vec4 _3790;
                        float _3836;
                        bool _3837;
                        for (;;)
                        {
                            uint _3717 = ((_3485 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3706));
                            _3707 = (_3706 + 4294967295u) & _3706;
                            uint _3719 = _3717 * 40u;
                            _3732 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3719)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 3u)).x));
                            _3733 = _3732.w;
                            uint _3735 = (_3717 * 40u) + 4u;
                            _3748 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3735)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3735 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3735 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3735 + 3u)).x));
                            uint _3750 = (_3717 * 40u) + 8u;
                            _3760 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3750)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3750 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3750 + 2u)).x));
                            uint _3762 = (_3717 * 40u) + 16u;
                            _3775 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3762)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3762 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3762 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3762 + 3u)).x));
                            uint _3777 = (_3717 * 40u) + 20u;
                            _3790 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3777)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3777 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3777 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3777 + 3u)).x));
                            uint _3792 = (_3717 * 40u) + 24u;
                            vec4 _3805 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3792)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3792 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3792 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3792 + 3u)).x));
                            uint _3811 = (_3717 * 40u) + 28u;
                            vec4 _3824 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3811)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3811 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3811 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3811 + 3u)).x));
                            _3836 = fma(_2157, _3824.z, fma(_2156, _3824.y, _3824.x * _2155)) + _3824.w;
                            _3837 = !((fma(_2157, _3805.z, fma(_2156, _3805.y, _3805.x * _2155)) + _3805.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3837)
                            {
                                float _3864 = _3732.x - _2155;
                                float _3865 = _3732.y - _2156;
                                float _3866 = _3732.z - _2157;
                                float _3867 = dot(vec3(_3864, _3865, _3866), vec3(_3864, _3865, _3866));
                                float _3870 = inversesqrt(_3867);
                                float _3871 = _3870 * _3864;
                                float _3872 = _3870 * _3865;
                                float _3873 = _3870 * _3866;
                                float _3877 = 1.0 - (_3867 / (_3733 * _3733));
                                float _5052 = isnan(0.0) ? _3877 : (isnan(_3877) ? 0.0 : max(_3877, 0.0));
                                float _3878 = isnan(1.0) ? _5052 : (isnan(_5052) ? 1.0 : min(_5052, 1.0));
                                float _3882 = sqrt(_3867) * _3748.w;
                                float _3884 = 1.39999997615814208984375 / (_3882 + 1.39999997615814208984375);
                                float _3885 = _3884 * _3884;
                                float _3888 = ((1.0 - _3885) * dot(vec3(_3871, _3872, _3873), vec3(_990, _993, _996))) + _3885;
                                float _3891 = _3882 * _3882;
                                float _3895 = (fma(_2157, _3775.z, fma(_2156, _3775.y, _3775.x * _2155)) + _3775.w) / _3836;
                                float _3896 = (fma(_2157, _3790.z, fma(_2156, _3790.y, _3790.x * _2155)) + _3790.w) / _3836;
                                float _3900 = 1.0 - dot(vec2(_3895, _3896), vec2(_3895, _3896));
                                float _5068 = isnan(0.0) ? _3900 : (isnan(_3900) ? 0.0 : max(_3900, 0.0));
                                float _3901 = isnan(1.0) ? _5068 : (isnan(_5068) ? 1.0 : min(_5068, 1.0));
                                float _3902 = _3901 * (((isnan(0.0) ? _3888 : (isnan(_3888) ? 0.0 : max(_3888, 0.0))) * _3878) / ((_3891 * 0.699999988079071044921875) + 1.0));
                                float _3914 = exp2(log2(1.0 / ((_3891 * 3.5) + 5.0)) * 0.25);
                                float _3915 = 1.0 - _1065;
                                float _3922 = sqrt(1.0 - ((1.0 - (_3915 * _3915)) * (1.0 - (_3914 * _3914))));
                                float _3923 = _3922 * _3922;
                                float _3924 = _3923 * _3923;
                                float _3925 = _3871 - _3345;
                                float _3926 = _3872 - _3346;
                                float _3927 = _3873 - _3347;
                                float _3931 = inversesqrt(dot(vec3(_3925, _3926, _3927), vec3(_3925, _3926, _3927)));
                                float _3935 = dot(vec3(_990, _993, _996), vec3((-0.0) - _3345, (-0.0) - _3346, (-0.0) - _3347));
                                float _5079 = isnan(0.0) ? _3935 : (isnan(_3935) ? 0.0 : max(_3935, 0.0));
                                float _3938 = isnan(1.0) ? _5079 : (isnan(_5079) ? 1.0 : min(_5079, 1.0));
                                float _3939 = dot(vec3(_990, _993, _996), vec3(_3931 * _3925, _3931 * _3926, _3931 * _3927));
                                float _5090 = isnan(0.0) ? _3939 : (isnan(_3939) ? 0.0 : max(_3939, 0.0));
                                float _3942 = isnan(1.0) ? _5090 : (isnan(_5090) ? 1.0 : min(_5090, 1.0));
                                float _3946 = ((_3942 * _3942) * (_3924 + (-1.0))) + 1.0;
                                float _3947 = _3884 * _3923;
                                float _3948 = _3947 * _3947;
                                float _3954 = ((1.0 - _3948) * dot(vec3(_990, _993, _996), vec3(_3871, _3872, _3873))) + _3948;
                                float _5101 = isnan(0.0) ? _3954 : (isnan(_3954) ? 0.0 : max(_3954, 0.0));
                                float _3955 = isnan(1.0) ? _5101 : (isnan(_5101) ? 1.0 : min(_5101, 1.0));
                                float _3956 = 1.0 - _3923;
                                float _3966 = (0.5 / (((_3955 * ((_3938 * _3956) + _3923)) + 9.9999999392252902907785028219223e-09) + (((_3955 * _3956) + _3923) * _3938))) * _3955;
                                float _5112 = isnan(0.0) ? _3966 : (isnan(_3966) ? 0.0 : max(_3966, 0.0));
                                float _3976 = (_3901 * _3878) * (((_3924 * 3.1415927410125732421875) * (isnan(1.0) ? _5112 : (isnan(_5112) ? 1.0 : min(_5112, 1.0)))) / ((_3946 * _3946) * ((_3891 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3902 * _3748.z;
                                frontier_phi_88_pred_1 = _3902 * _3748.y;
                                frontier_phi_88_pred_2 = _3902 * _3748.x;
                                frontier_phi_88_pred_3 = _3976 * _3760.z;
                                frontier_phi_88_pred_4 = _3976 * _3760.y;
                                frontier_phi_88_pred_5 = _3976 * _3760.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3985 = frontier_phi_88_pred;
                            _3984 = frontier_phi_88_pred_1;
                            _3983 = frontier_phi_88_pred_2;
                            _3982 = frontier_phi_88_pred_3;
                            _3981 = frontier_phi_88_pred_4;
                            _3980 = frontier_phi_88_pred_5;
                            _3690 = _3983 + _3703;
                            _3691 = _3984 + _3704;
                            _3692 = _3985 + _3705;
                            _3687 = _3980 + _3700;
                            _3688 = _3981 + _3701;
                            _3689 = _3982 + _3702;
                            if (_3707 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3700 = _3687;
                                _3701 = _3688;
                                _3702 = _3689;
                                _3703 = _3690;
                                _3704 = _3691;
                                _3705 = _3692;
                                _3706 = _3707;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3692;
                        frontier_phi_82_pred_1 = _3691;
                        frontier_phi_82_pred_2 = _3690;
                        frontier_phi_82_pred_3 = _3689;
                        frontier_phi_82_pred_4 = _3688;
                        frontier_phi_82_pred_5 = _3687;
                    }
                    _3330 = frontier_phi_82_pred;
                    _3328 = frontier_phi_82_pred_1;
                    _3326 = frontier_phi_82_pred_2;
                    _3324 = frontier_phi_82_pred_3;
                    _3322 = frontier_phi_82_pred_4;
                    _3320 = frontier_phi_82_pred_5;
                    uint _3486 = _3485 + 1u;
                    if (_3486 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3479 = _3320;
                        _3480 = _3322;
                        _3481 = _3324;
                        _3482 = _3326;
                        _3483 = _3328;
                        _3484 = _3330;
                        _3485 = _3486;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3326;
                frontier_phi_63_64_ladder_1 = _3330;
                frontier_phi_63_64_ladder_2 = _3328;
                frontier_phi_63_64_ladder_3 = _3324;
                frontier_phi_63_64_ladder_4 = _3322;
                frontier_phi_63_64_ladder_5 = _3320;
            }
            else
            {
                frontier_phi_63_64_ladder = _3206;
                frontier_phi_63_64_ladder_1 = _3210;
                frontier_phi_63_64_ladder_2 = _3208;
                frontier_phi_63_64_ladder_3 = _3204;
                frontier_phi_63_64_ladder_4 = _3202;
                frontier_phi_63_64_ladder_5 = _3200;
            }
            _3319 = frontier_phi_63_64_ladder_5;
            _3321 = frontier_phi_63_64_ladder_4;
            _3323 = frontier_phi_63_64_ladder_3;
            _3325 = frontier_phi_63_64_ladder;
            _3327 = frontier_phi_63_64_ladder_2;
            _3329 = frontier_phi_63_64_ladder_1;
        }
        float _3334 = isnan(1.0) ? _1049 : (isnan(_1049) ? 1.0 : min(_1049, 1.0));
        _3110 = (_3334 * _3325) + _2622;
        _3112 = (_3334 * _3327) + _2624;
        _3114 = (_3334 * _3329) + _2626;
        _3116 = ((_3319 * _1034) * _3334) + _2960;
        _3118 = ((_3321 * _1036) * _3334) + _2962;
        _3120 = ((_3323 * _1037) * _3334) + _2964;
    }
    else
    {
        _3110 = _2622;
        _3112 = _2624;
        _3114 = _2626;
        _3116 = _2960;
        _3118 = _2962;
        _3120 = _2964;
    }
    uint _3126 = _1010 + uint(cbMatDynParam._m0[0u].w);
    float _3132 = (isnan(cbMtdParam._m0[24u].y) ? _734 : (isnan(_734) ? cbMtdParam._m0[24u].y : min(_734, cbMtdParam._m0[24u].y))) * cbSceneParam._m0[72u].y;
    float _5128 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
    float _5139 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
    float _5150 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    float _3155 = (((isnan(1.0) ? _5128 : (isnan(_5128) ? 1.0 : min(_5128, 1.0))) * (_3110 + ((isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0))) * _1049))) + ((_3116 + ((isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0))) * _1889)) * cbPerFrame._m0[3u].x)) + ((_3132 * (((((_793.x - _790) * _772) + _790) * cbMtdParam._m0[17u].x) + ((cbMtdParam._m0[24u].w * _726) * cbMtdParam._m0[16u].x))) * cbInstanceData._m0[_3126].x);
    float _3157 = (((_3132 * (((((_793.y - _791) * _772) + _791) * cbMtdParam._m0[17u].y) + ((cbMtdParam._m0[24u].w * (((_715.y - _713) * _693) + _713)) * cbMtdParam._m0[16u].y))) * cbInstanceData._m0[_3126].y) + ((_3118 + ((isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0))) * _1889)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5139 : (isnan(_5139) ? 1.0 : min(_5139, 1.0))) * (_3112 + ((isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0))) * _1049)));
    float _3159 = (((_3132 * (((((_793.z - _792) * _772) + _792) * cbMtdParam._m0[17u].z) + ((cbMtdParam._m0[24u].w * (((_715.z - _714) * _693) + _714)) * cbMtdParam._m0[16u].z))) * cbInstanceData._m0[_3126].z) + ((_3120 + ((isnan(0.0) ? _2108 : (isnan(_2108) ? 0.0 : max(_2108, 0.0))) * _1889)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5150 : (isnan(_5150) ? 1.0 : min(_5150, 1.0))) * (_3114 + ((isnan(0.0) ? _1816 : (isnan(_1816) ? 0.0 : max(_1816, 0.0))) * _1049)));
    float _3160 = isnan(0.0) ? _3155 : (isnan(_3155) ? 0.0 : max(_3155, 0.0));
    float _3161 = isnan(0.0) ? _3157 : (isnan(_3157) ? 0.0 : max(_3157, 0.0));
    float _3162 = isnan(0.0) ? _3159 : (isnan(_3159) ? 0.0 : max(_3159, 0.0));
    uint _3163 = _1009 + 6u;
    float _3171 = _971 / cbSceneParam._m0[86u].x;
    float _3172 = _972 / cbSceneParam._m0[86u].y;
    vec4 _3186 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3171, _3172, (log2((isnan(cbSceneParam._m0[77u].w) ? _893 : (isnan(_893) ? cbSceneParam._m0[77u].w : min(_893, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3188 = _3186.x;
    float _3189 = _3186.y;
    float _3190 = _3186.z;
    float _3191 = _3186.w;
    float _3262;
    float _3264;
    float _3266;
    float _3268;
    if (_893 > cbSceneParam._m0[78u].w)
    {
        float _3225 = isnan(_893) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _893 : min(cbSceneParam._m0[80u].w, _893));
        float _3226 = _3225 / _893;
        float _3237 = _3226 * _944;
        float _3238 = _945 * _3226;
        float _3239 = (-0.0) - _3238;
        float _3240 = _3226 * _946;
        float _3242 = (cbSceneParam._m0[77u].w * _3239) / _3225;
        float _3243 = _3242 + cbSceneParam._m0[79u].w;
        float _3244 = cbSceneParam._m0[79u].w - _3238;
        float _3250 = sqrt(((_3237 * _3237) + (_3238 * _3238)) + (_3240 * _3240));
        float _3253 = (1.0 - (cbSceneParam._m0[77u].w / _3225)) * _3250;
        float _3258 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3260 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3436;
        if (abs((_3239 - _3242) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3436 = ((((_3243 > 0.0) ? exp2(_3258 * _3243) : (2.0 - exp2(_3260 * _3243))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3253;
        }
        else
        {
            float _3380 = 1.0 / cbSceneParam._m0[80u].x;
            float _3381 = isnan(_3244) ? _3243 : (isnan(_3243) ? _3244 : max(_3243, _3244));
            float _3382 = isnan(_3244) ? _3243 : (isnan(_3243) ? _3244 : min(_3243, _3244));
            float _3391 = isnan(0.0) ? _3381 : (isnan(_3381) ? 0.0 : min(_3381, 0.0));
            float _3392 = isnan(0.0) ? _3382 : (isnan(_3382) ? 0.0 : min(_3382, 0.0));
            _3436 = ((abs(_3250 / _3239) * cbSceneParam._m0[80u].y) * ((((_3391 - _3392) * 2.0) - ((exp2(_3258 * (isnan(0.0) ? _3381 : (isnan(_3381) ? 0.0 : max(_3381, 0.0)))) - exp2(_3258 * (isnan(0.0) ? _3382 : (isnan(_3382) ? 0.0 : max(_3382, 0.0))))) * _3380)) - ((exp2(_3260 * _3391) - exp2(_3260 * _3392)) * _3380))) + (_3253 * cbSceneParam._m0[80u].z);
        }
        vec4 _3438 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3171, _3172, 1.0), 0.0);
        float _3447 = exp2((_3436 * (-1.44269502162933349609375)) * (1.0 - _3438.w));
        float _3448 = log2(_3447);
        float _3464 = log2(_3191);
        _3262 = (exp2(_3464 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3448 * cbSceneParam._m0[78u].x)) * _3438.x) / cbSceneParam._m0[78u].x)) + _3188;
        _3264 = (exp2(_3464 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3448 * cbSceneParam._m0[78u].y)) * _3438.y) / cbSceneParam._m0[78u].y)) + _3189;
        _3266 = (exp2(_3464 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3448 * cbSceneParam._m0[78u].z)) * _3438.z) / cbSceneParam._m0[78u].z)) + _3190;
        _3268 = _3447 * _3191;
    }
    else
    {
        _3262 = _3188;
        _3264 = _3189;
        _3266 = _3190;
        _3268 = _3191;
    }
    bool _3474;
    vec4 _3277;
    vec4 _3299;
    float _3301;
    float _3305;
    float _3306;
    float _3307;
    float _3308;
    bool _3318;
    for (;;)
    {
        _3277 = cbMatDynParam._m0[0u];
        float _3279 = roundEven(_3277.y);
        bool _3280 = _3279 == 3.0;
        float _3281 = log2(_3268);
        float _3288 = exp2(_3281 * cbSceneParam._m0[78u].x) * _3160;
        float _3289 = exp2(_3281 * cbSceneParam._m0[78u].y) * _3161;
        float _3290 = exp2(_3281 * cbSceneParam._m0[78u].z) * _3162;
        float _3297 = _960 + (-0.5);
        _3299 = cbMtdParam._m0[1u];
        _3301 = _3299.y * _3297;
        float _3304 = (_3279 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3305 = _3304 * (_3280 ? _3288 : (_3288 + (cbSceneParam._m0[72u].w * _3262)));
        _3306 = _3304 * (_3280 ? _3289 : (_3289 + (cbSceneParam._m0[72u].w * _3264)));
        _3307 = _3304 * (_3280 ? _3290 : (_3290 + (cbSceneParam._m0[72u].w * _3266)));
        _3308 = _3297 * 0.999000012874603271484375;
        _3318 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3318)
        {
            if ((cbInstanceData._m0[_1009 + 7u].x + _3308) < 0.5)
            {
                _3474 = true;
                break;
            }
        }
        uint _3415 = _1010 + uint(_3277.w);
        if ((cbInstanceData._m0[_3415].w < 1.0) && ((cbInstanceData._m0[_3415].w + _3308) < 0.5))
        {
            _3474 = true;
            break;
        }
        if ((_3301 + 1.0) < _3299.x)
        {
            _3474 = true;
            break;
        }
        _3474 = false;
        break;
    }
    float _3678;
    if (_3474)
    {
        discard_state = true;
        _3678 = 0.0;
    }
    else
    {
        _3678 = cbInstanceData._m0[_3163].w;
    }
    SV_Target.x = _3305;
    SV_Target.y = _3306;
    SV_Target.z = _3307;
    SV_Target.w = _3678;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3163].w;
    discard_exit();
}


