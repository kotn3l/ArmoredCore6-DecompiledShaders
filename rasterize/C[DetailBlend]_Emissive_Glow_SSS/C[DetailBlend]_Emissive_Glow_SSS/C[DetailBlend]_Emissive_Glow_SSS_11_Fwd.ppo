#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_12;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1324;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _211 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _212 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _213 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _219 = inversesqrt(dot(vec3(_211, _212, _213), vec3(_211, _212, _213)));
    float _226 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _227 = _226 * NORMAL.x;
    float _228 = _226 * NORMAL.y;
    float _229 = _226 * NORMAL.z;
    float _233 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _241;
    float _242;
    float _243;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _241 = (-0.0) - _227;
        _242 = (-0.0) - _228;
        _243 = (-0.0) - _229;
    }
    else
    {
        _241 = _227;
        _242 = _228;
        _243 = _229;
    }
    vec4 _256 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _261 = _256.z;
    float _262 = _256.w;
    float _268 = exp2(log2(_261 * 22.0) * 260.0);
    float _269 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _270 = isnan(1.0) ? _269 : (isnan(_269) ? 1.0 : min(_269, 1.0));
    vec4 _284 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _295 = cbMtdParam._m0[10u].x * _284.x;
    float _296 = cbMtdParam._m0[10u].y * _284.y;
    float _297 = cbMtdParam._m0[10u].z * _284.z;
    vec4 _309 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _337 = exp2(log2(1.0 - _262) * 8.0);
    vec4 _349 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _365 = exp2(log2(_262) * 8.0);
    vec4 _378 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _403 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _411 = (((((cbMtdParam._m0[9u].x * _309.x) - _295) * _270) + _295) * 4.55000019073486328125) * _403.x;
    float _413 = (((((cbMtdParam._m0[9u].y * _309.y) - _296) * _270) + _296) * 4.55000019073486328125) * _403.y;
    float _415 = (((((cbMtdParam._m0[9u].z * _309.z) - _297) * _270) + _297) * 4.55000019073486328125) * _403.z;
    float _422 = (((cbMtdParam._m0[13u].x * _349.x) - _411) * _337) + _411;
    float _423 = (((cbMtdParam._m0[13u].y * _349.y) - _413) * _337) + _413;
    float _424 = (((cbMtdParam._m0[13u].z * _349.z) - _415) * _337) + _415;
    float _431 = (((cbMtdParam._m0[11u].x * _378.x) - _422) * _365) + _422;
    float _432 = (((cbMtdParam._m0[11u].y * _378.y) - _423) * _365) + _423;
    float _433 = (((cbMtdParam._m0[11u].z * _378.z) - _424) * _365) + _424;
    float _434 = _403.w * _309.w;
    float _464 = (((texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w)).x - cbMtdParam._m0[17u].x) + cbMtdParam._m0[16u].x) * _270) + cbMtdParam._m0[17u].x;
    float _468 = ((cbMtdParam._m0[15u].z - _464) * _337) + _464;
    float _471 = ((cbMtdParam._m0[16u].w - _468) * _365) + _468;
    vec4 _483 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _485 = _483.x;
    float _486 = _483.y;
    float _492 = cbMtdParam._m0[14u].y + _483.z;
    vec4 _504 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    vec4 _526 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    vec4 _544 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _557 = (((_270 * (_261 + (-0.5))) + 0.5) * 2.0) * ((((_504.z - _492) + cbMtdParam._m0[14u].x) * _270) + _492);
    float _561 = (((_526.z - _557) + cbMtdParam._m0[15u].y) * _337) + _557;
    float _565 = (((_544.z - _561) + cbMtdParam._m0[14u].w) * _365) + _561;
    float _579 = abs((fract(cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3713 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _580 = isnan(1.0) ? _3713 : (isnan(_3713) ? 1.0 : min(_3713, 1.0));
    float _585 = (_580 * _580) * (3.0 - (_580 * 2.0));
    vec4 _598 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _606 = (_256.x * 2.0) + (-1.0);
    float _607 = (_256.y * 2.0) + (-1.0);
    float _608 = dot(vec2(_606, _607), vec2(_606, _607));
    float _3724 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _613 = sqrt(1.0 - (isnan(1.0) ? _3724 : (isnan(_3724) ? 1.0 : min(_3724, 1.0))));
    float _618 = ((_504.x - _485) * _270) + _485;
    float _619 = ((_504.y - _486) * _270) + _486;
    float _624 = ((_526.x - _618) * _337) + _618;
    float _625 = ((_526.y - _619) * _337) + _619;
    float _638 = (cbMtdParam._m0[14u].z * (((((_544.x - _624) * _365) + _624) * 2.0) + (-1.0))) + _606;
    float _639 = (cbMtdParam._m0[14u].z * (((((_544.y - _625) * _365) + _625) * 2.0) + (-1.0))) + _607;
    float _642 = fma(_613, _241, fma(_639, _233 * TANGENT.x, (_219 * _211) * _638));
    float _645 = fma(_613, _242, fma(_639, _233 * TANGENT.y, (_219 * _212) * _638));
    float _648 = fma(_613, _243, fma(_639, _233 * TANGENT.z, (_219 * _213) * _638));
    float _652 = inversesqrt(dot(vec3(_642, _645, _648), vec3(_642, _645, _648)));
    float _653 = _652 * _642;
    float _654 = _652 * _645;
    float _655 = _652 * _648;
    float _3735 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _656 = isnan(1.0) ? _3735 : (isnan(_3735) ? 1.0 : min(_3735, 1.0));
    float _3746 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _657 = isnan(1.0) ? _3746 : (isnan(_3746) ? 1.0 : min(_3746, 1.0));
    float _3757 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
    float _658 = isnan(1.0) ? _3757 : (isnan(_3757) ? 1.0 : min(_3757, 1.0));
    float _3768 = isnan(0.0) ? _432 : (isnan(_432) ? 0.0 : max(_432, 0.0));
    float _659 = isnan(1.0) ? _3768 : (isnan(_3768) ? 1.0 : min(_3768, 1.0));
    float _3779 = isnan(0.0) ? _433 : (isnan(_433) ? 0.0 : max(_433, 0.0));
    float _660 = isnan(1.0) ? _3779 : (isnan(_3779) ? 1.0 : min(_3779, 1.0));
    float _3790 = isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : max(_471, 0.0));
    float _661 = isnan(1.0) ? _3790 : (isnan(_3790) ? 1.0 : min(_3790, 1.0));
    float _677 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _717 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _727 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _717);
    float _728 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _717);
    float _729 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _717);
    float _733 = inversesqrt(dot(vec3(_727, _728, _729), vec3(_727, _728, _729)));
    float _734 = _727 * _733;
    float _735 = _728 * _733;
    float _736 = _729 * _733;
    float _742 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _743 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _745 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _747 = _745.w;
    float _765 = fma(_655, cbSceneParam._m0[5u].z, fma(_654, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _653));
    float _768 = fma(_655, cbSceneParam._m0[6u].z, fma(_654, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _653));
    float _771 = fma(_655, cbSceneParam._m0[7u].z, fma(_654, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _653));
    vec4 _773 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _775 = _773.x;
    float _787 = (((_773.y - _657) + (_773.w * _657)) * cbMtdParam._m0[3u].x) + _657;
    vec4 _788 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _804 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_775 * _775)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _788.z;
    float _812 = (((cbMatDynParam._m0[15u].x - _661) * cbMatDynParam._m0[15u].w) * _804) + _661;
    float _820 = ((_804 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _787)) + _787;
    uint _844 = uint(roundEven(NORMAL.w)) * 13u;
    uint _845 = _844 + 9u;
    uint _846 = _845 + uint(cbMatDynParam._m0[0u].w);
    float _852 = (cbMtdParam._m0[0u].x * _658) * cbInstanceData._m0[_846].x;
    float _853 = (cbMtdParam._m0[0u].y * _659) * cbInstanceData._m0[_846].y;
    float _854 = (cbMtdParam._m0[0u].z * _660) * cbInstanceData._m0[_846].z;
    float _3801 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _855 = isnan(1.0) ? _3801 : (isnan(_3801) ? 1.0 : min(_3801, 1.0));
    float _3812 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
    float _856 = isnan(1.0) ? _3812 : (isnan(_3812) ? 1.0 : min(_3812, 1.0));
    float _3823 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    float _857 = isnan(1.0) ? _3823 : (isnan(_3823) ? 1.0 : min(_3823, 1.0));
    vec4 _858 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _863 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _874 = (((_863.x - _812) + (_863.w * _812)) * cbMtdParam._m0[3u].x) + _812;
    float _887 = (cbMtdParam._m0[3u].x * (((_855 * _747) - _855) + _858.x)) + _855;
    float _888 = (cbMtdParam._m0[3u].x * (((_856 * _747) - _856) + _858.y)) + _856;
    float _889 = (cbMtdParam._m0[3u].x * (((_857 * _747) - _857) + _858.z)) + _857;
    float _903 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_812 * (_658 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_812 * (_659 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_812 * (_660 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _907 = _903 * cbMatDynParam._m0[13u].w;
    float _917 = (_907 * (cbMatDynParam._m0[13u].x - _887)) + _887;
    float _918 = (_907 * (cbMatDynParam._m0[13u].y - _888)) + _888;
    float _919 = (_907 * (cbMatDynParam._m0[13u].z - _889)) + _889;
    float _927 = ((_903 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _874)) + _874;
    float _928 = 1.0 - _927;
    float _929 = _928 * _917;
    float _930 = _928 * _918;
    float _931 = _928 * _919;
    float _935 = (_917 + (-0.039999999105930328369140625)) * _927;
    float _936 = (_918 + (-0.039999999105930328369140625)) * _927;
    float _937 = (_919 + (-0.039999999105930328369140625)) * _927;
    float _938 = _935 + 0.039999999105930328369140625;
    float _939 = _936 + 0.039999999105930328369140625;
    float _940 = _937 + 0.039999999105930328369140625;
    vec4 _949 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _742, cbSceneParam._m0[86u].y * _743));
    float _952 = _949.x * TEXCOORD_4;
    float _953 = dot(vec3(_653, _654, _655), vec3(_734, _735, _736));
    float _956 = _953 * 2.0;
    float _960 = (_956 * _653) - _734;
    float _961 = (_956 * _654) - _735;
    float _962 = (_956 * _655) - _736;
    float _966 = abs(dot(vec3(_734, _735, _736), vec3(_653, _654, _655)));
    float _3834 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
    float _968 = sqrt(_820);
    float _980 = exp2((_968 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3834 : (isnan(_3834) ? 1.0 : min(_3834, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_968 * 3.0));
    float _986 = (1.0 - _980) * ((_968 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _987 = _980 * _968;
    float _1015 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1019 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1023 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1323;
    float _1325;
    float _1326;
    float _1327;
    float _1328;
    float _1329;
    float _1330;
    float _1331;
    float _1332;
    float _1333;
    float _1334;
    float _1335;
    float _1336;
    float _1337;
    float _1338;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1050 = fma(_1023, cbModelParam._m0[26u].z, fma(_1019, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1015));
        float _1054 = fma(_1023, cbModelParam._m0[27u].z, fma(_1019, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1015));
        float _1058 = fma(_1023, cbModelParam._m0[28u].z, fma(_1019, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1015));
        float _1081 = _1015 + _653;
        float _1082 = _1019 + _654;
        float _1083 = _1023 + _655;
        float _1093 = fma(_1083, cbModelParam._m0[26u].z, fma(_1082, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1081)) - _1050;
        float _1094 = fma(_1083, cbModelParam._m0[27u].z, fma(_1082, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1081)) - _1054;
        float _1095 = fma(_1083, cbModelParam._m0[28u].z, fma(_1082, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1081)) - _1058;
        float _1099 = inversesqrt(dot(vec3(_1093, _1094, _1095), vec3(_1093, _1094, _1095)));
        float _1112 = ((_1099 * _1093) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1050 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1113 = ((_1099 * _1094) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1054 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1114 = ((_1099 * _1095) / cbModelParam._m0[34u].z) + ((((((_1058 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1117 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1112, _1113, _1114), 0.0);
        vec4 _1124 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1112, _1113, _1114), 0.0);
        vec4 _1131 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1112, _1113, _1114), 0.0);
        vec4 _1138 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1112, _1113, _1114), 0.0);
        float _1151 = exp2((_1117.w + (-0.5)) * 20.0) * 2.0;
        float _1152 = _1151 * (_1117.x + (-0.5));
        float _1153 = _1151 * (_1117.y + (-0.5));
        float _1154 = _1151 * (_1117.z + (-0.5));
        float _1161 = exp2((_1124.w + (-0.5)) * 20.0) * 2.0;
        float _1162 = _1161 * (_1124.x + (-0.5));
        float _1163 = _1161 * (_1124.y + (-0.5));
        float _1164 = _1161 * (_1124.z + (-0.5));
        float _1171 = exp2((_1131.w + (-0.5)) * 20.0) * 2.0;
        float _1172 = _1171 * (_1131.x + (-0.5));
        float _1173 = _1171 * (_1131.y + (-0.5));
        float _1174 = _1171 * (_1131.z + (-0.5));
        float _1181 = exp2((_1138.w + (-0.5)) * 20.0) * 2.0;
        float _1182 = _1181 * (_1138.x + (-0.5));
        float _1183 = _1181 * (_1138.y + (-0.5));
        float _1184 = _1181 * (_1138.z + (-0.5));
        float _1185 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
        float _1186 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1187 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
        float _1188 = _1152 * 0.5;
        float _1189 = _1162 * 0.5;
        float _1190 = _1172 * 0.5;
        float _1191 = dot(vec3(_1188, _1189, _1190), vec3(_1188, _1189, _1190));
        float _1196 = (_1191 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1191);
        float _1205 = (dot(vec3(_653, _654, _655), vec3(_1196 * _1188, _1196 * _1189, _1196 * _1190)) + 1.0) * 0.5;
        float _3860 = isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0));
        float _1215 = sqrt(((_1189 * _1189) + (_1188 * _1188)) + (_1190 * _1190)) / (_1185 + 9.9999997473787516355514526367188e-06);
        float _3871 = isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0));
        float _1216 = isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0));
        float _1217 = _1216 * 2.0;
        float _1221 = (1.0 - _1216) / (_1216 + 1.0);
        float _3882 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1222 = isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0));
        float _1231 = ((((1.0 - _1222) * (_1217 + 2.0)) * exp2(log2(isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0))) * (_1217 + 1.0))) + _1222) * _1185;
        float _1232 = _1153 * 0.5;
        float _1233 = _1163 * 0.5;
        float _1234 = _1173 * 0.5;
        float _1235 = dot(vec3(_1232, _1233, _1234), vec3(_1232, _1233, _1234));
        float _1240 = (_1235 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1235);
        float _1248 = (dot(vec3(_653, _654, _655), vec3(_1240 * _1232, _1240 * _1233, _1240 * _1234)) + 1.0) * 0.5;
        float _3893 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
        float _1257 = sqrt(((_1233 * _1233) + (_1232 * _1232)) + (_1234 * _1234)) / (_1186 + 9.9999997473787516355514526367188e-06);
        float _3904 = isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0));
        float _1258 = isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0));
        float _1259 = _1258 * 2.0;
        float _1263 = (1.0 - _1258) / (_1258 + 1.0);
        float _3915 = isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0));
        float _1264 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
        float _1273 = ((((1.0 - _1264) * (_1259 + 2.0)) * exp2(log2(isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0))) * (_1259 + 1.0))) + _1264) * _1186;
        float _1274 = _1154 * 0.5;
        float _1275 = _1164 * 0.5;
        float _1276 = _1174 * 0.5;
        float _1277 = dot(vec3(_1274, _1275, _1276), vec3(_1274, _1275, _1276));
        float _1282 = (_1277 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1277);
        float _1290 = (dot(vec3(_653, _654, _655), vec3(_1282 * _1274, _1282 * _1275, _1282 * _1276)) + 1.0) * 0.5;
        float _3926 = isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0));
        float _1299 = sqrt(((_1275 * _1275) + (_1274 * _1274)) + (_1276 * _1276)) / (_1187 + 9.9999997473787516355514526367188e-06);
        float _3937 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1300 = isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0));
        float _1301 = _1300 * 2.0;
        float _1305 = (1.0 - _1300) / (_1300 + 1.0);
        float _3948 = isnan(0.0) ? _1305 : (isnan(_1305) ? 0.0 : max(_1305, 0.0));
        float _1306 = isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0));
        float _1315 = ((((1.0 - _1306) * (_1301 + 2.0)) * exp2(log2(isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0))) * (_1301 + 1.0))) + _1306) * _1187;
        _1323 = _1154;
        _1325 = _1153;
        _1326 = _1152;
        _1327 = _1164;
        _1328 = _1163;
        _1329 = _1162;
        _1330 = _1174;
        _1331 = _1173;
        _1332 = _1172;
        _1333 = _1187;
        _1334 = _1186;
        _1335 = _1185;
        _1336 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0)));
        _1337 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1273 : (isnan(_1273) ? 0.0 : max(_1273, 0.0)));
        _1338 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0)));
    }
    else
    {
        _1323 = _1324;
        _1325 = _1324;
        _1326 = _1324;
        _1327 = _1324;
        _1328 = _1324;
        _1329 = _1324;
        _1330 = _1324;
        _1331 = _1324;
        _1332 = _1324;
        _1333 = _1324;
        _1334 = _1324;
        _1335 = _1324;
        _1336 = 0.0;
        _1337 = 0.0;
        _1338 = 0.0;
    }
    float _1633;
    float _1634;
    float _1635;
    float _1636;
    float _1637;
    float _1638;
    float _1639;
    float _1640;
    float _1641;
    float _1642;
    float _1643;
    float _1644;
    float _1645;
    float _1646;
    float _1647;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1364 = fma(_1023, cbModelParam._m0[30u].z, fma(_1019, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1015));
        float _1368 = fma(_1023, cbModelParam._m0[31u].z, fma(_1019, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1015));
        float _1372 = fma(_1023, cbModelParam._m0[32u].z, fma(_1019, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1015));
        float _1395 = _1015 + _653;
        float _1396 = _1019 + _654;
        float _1397 = _1023 + _655;
        float _1407 = fma(_1397, cbModelParam._m0[30u].z, fma(_1396, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1395)) - _1364;
        float _1408 = fma(_1397, cbModelParam._m0[31u].z, fma(_1396, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1395)) - _1368;
        float _1409 = fma(_1397, cbModelParam._m0[32u].z, fma(_1396, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1395)) - _1372;
        float _1413 = inversesqrt(dot(vec3(_1407, _1408, _1409), vec3(_1407, _1408, _1409)));
        float _1426 = ((_1413 * _1407) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1364 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1427 = ((_1413 * _1408) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1368 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1428 = ((_1413 * _1409) / cbModelParam._m0[35u].z) + ((((((_1372 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1430 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1426, _1427, _1428), 0.0);
        vec4 _1437 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1426, _1427, _1428), 0.0);
        vec4 _1444 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1426, _1427, _1428), 0.0);
        vec4 _1451 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1426, _1427, _1428), 0.0);
        float _1463 = exp2((_1430.w + (-0.5)) * 20.0) * 2.0;
        float _1464 = _1463 * (_1430.x + (-0.5));
        float _1465 = _1463 * (_1430.y + (-0.5));
        float _1466 = _1463 * (_1430.z + (-0.5));
        float _1473 = exp2((_1437.w + (-0.5)) * 20.0) * 2.0;
        float _1474 = _1473 * (_1437.x + (-0.5));
        float _1475 = _1473 * (_1437.y + (-0.5));
        float _1476 = _1473 * (_1437.z + (-0.5));
        float _1483 = exp2((_1444.w + (-0.5)) * 20.0) * 2.0;
        float _1484 = _1483 * (_1444.x + (-0.5));
        float _1485 = _1483 * (_1444.y + (-0.5));
        float _1486 = _1483 * (_1444.z + (-0.5));
        float _1493 = exp2((_1451.w + (-0.5)) * 20.0) * 2.0;
        float _1494 = _1493 * (_1451.x + (-0.5));
        float _1495 = _1493 * (_1451.y + (-0.5));
        float _1496 = _1493 * (_1451.z + (-0.5));
        float _1497 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
        float _1498 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
        float _1499 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1500 = _1464 * 0.5;
        float _1501 = _1474 * 0.5;
        float _1502 = _1484 * 0.5;
        float _1503 = dot(vec3(_1500, _1501, _1502), vec3(_1500, _1501, _1502));
        float _1508 = (_1503 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1503);
        float _1516 = (dot(vec3(_653, _654, _655), vec3(_1508 * _1500, _1508 * _1501, _1508 * _1502)) + 1.0) * 0.5;
        float _3989 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
        float _1525 = sqrt(((_1501 * _1501) + (_1500 * _1500)) + (_1502 * _1502)) / (_1497 + 9.9999997473787516355514526367188e-06);
        float _4000 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
        float _1526 = isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0));
        float _1527 = _1526 * 2.0;
        float _1531 = (1.0 - _1526) / (_1526 + 1.0);
        float _4011 = isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0));
        float _1532 = isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0));
        float _1541 = ((((1.0 - _1532) * (_1527 + 2.0)) * exp2(log2(isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0))) * (_1527 + 1.0))) + _1532) * _1497;
        float _1542 = _1465 * 0.5;
        float _1543 = _1475 * 0.5;
        float _1544 = _1485 * 0.5;
        float _1545 = dot(vec3(_1542, _1543, _1544), vec3(_1542, _1543, _1544));
        float _1550 = (_1545 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1545);
        float _1558 = (dot(vec3(_653, _654, _655), vec3(_1550 * _1542, _1550 * _1543, _1550 * _1544)) + 1.0) * 0.5;
        float _4022 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1567 = sqrt(((_1543 * _1543) + (_1542 * _1542)) + (_1544 * _1544)) / (_1498 + 9.9999997473787516355514526367188e-06);
        float _4033 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
        float _1568 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
        float _1569 = _1568 * 2.0;
        float _1573 = (1.0 - _1568) / (_1568 + 1.0);
        float _4044 = isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0));
        float _1574 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
        float _1583 = ((((1.0 - _1574) * (_1569 + 2.0)) * exp2(log2(isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0))) * (_1569 + 1.0))) + _1574) * _1498;
        float _1584 = _1466 * 0.5;
        float _1585 = _1476 * 0.5;
        float _1586 = _1486 * 0.5;
        float _1587 = dot(vec3(_1584, _1585, _1586), vec3(_1584, _1585, _1586));
        float _1592 = (_1587 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1587);
        float _1600 = (dot(vec3(_653, _654, _655), vec3(_1592 * _1584, _1592 * _1585, _1592 * _1586)) + 1.0) * 0.5;
        float _4055 = isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0));
        float _1609 = sqrt(((_1585 * _1585) + (_1584 * _1584)) + (_1586 * _1586)) / (_1499 + 9.9999997473787516355514526367188e-06);
        float _4066 = isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0));
        float _1610 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
        float _1611 = _1610 * 2.0;
        float _1615 = (1.0 - _1610) / (_1610 + 1.0);
        float _4077 = isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0));
        float _1616 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
        float _1625 = ((((1.0 - _1616) * (_1611 + 2.0)) * exp2(log2(isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0))) * (_1611 + 1.0))) + _1616) * _1499;
        _1633 = _1466;
        _1634 = _1465;
        _1635 = _1464;
        _1636 = _1476;
        _1637 = _1475;
        _1638 = _1474;
        _1639 = _1486;
        _1640 = _1485;
        _1641 = _1484;
        _1642 = _1499;
        _1643 = _1498;
        _1644 = _1497;
        _1645 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0)));
        _1646 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0)));
        _1647 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0)));
    }
    else
    {
        _1633 = _1324;
        _1634 = _1324;
        _1635 = _1324;
        _1636 = _1324;
        _1637 = _1324;
        _1638 = _1324;
        _1639 = _1324;
        _1640 = _1324;
        _1641 = _1324;
        _1642 = _1324;
        _1643 = _1324;
        _1644 = _1324;
        _1645 = 0.0;
        _1646 = 0.0;
        _1647 = 0.0;
    }
    float _1657 = (cbModelParam._m0[1u].x * (_1645 - _1336)) + _1336;
    float _1658 = (cbModelParam._m0[1u].x * (_1646 - _1337)) + _1337;
    float _1659 = (cbModelParam._m0[1u].x * (_1647 - _1338)) + _1338;
    float _1680 = fma(_1659, cbSceneParam._m0[89u].z, fma(_1658, cbSceneParam._m0[89u].y, _1657 * cbSceneParam._m0[89u].x));
    float _1683 = fma(_1659, cbSceneParam._m0[90u].z, fma(_1658, cbSceneParam._m0[90u].y, _1657 * cbSceneParam._m0[90u].x));
    float _1686 = fma(_1659, cbSceneParam._m0[91u].z, fma(_1658, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1657));
    float _1701 = _960 * 0.5;
    float _1702 = _961 * 0.5;
    float _1703 = _962 * 0.5;
    float _1704 = dot(vec4(_1701, _1702, _1703, 1.0), vec4(_1635, _1638, _1641, _1644));
    float _1707 = dot(vec4(_1701, _1702, _1703, 1.0), vec4(_1634, _1637, _1640, _1643));
    float _1710 = dot(vec4(_1701, _1702, _1703, 1.0), vec4(_1633, _1636, _1639, _1642));
    float _1741;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1717 = dot(vec4(_1701, _1702, _1703, 1.0), vec4(_1323, _1327, _1330, _1333));
        float _1721 = dot(vec4(_1701, _1702, _1703, 1.0), vec4(_1325, _1328, _1331, _1334));
        float _1725 = dot(vec4(_1701, _1702, _1703, 1.0), vec4(_1326, _1329, _1332, _1335));
        float _1732 = dot(vec4(cbModelParam._m0[39u]), vec4(_1701, _1702, _1703, 1.0));
        _1741 = dot(vec3(isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0)), isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0)), isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1732) ? 0.0 : (isnan(0.0) ? _1732 : max(0.0, _1732))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1741 = 1.0;
    }
    float _1752;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1743 = dot(vec4(cbModelParam._m0[40u]), vec4(_1701, _1702, _1703, 1.0));
        _1752 = dot(vec3(isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0)), isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0)), isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1743) ? 0.0 : (isnan(0.0) ? _1743 : max(0.0, _1743))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1752 = 1.0;
    }
    float _1756 = (_1752 * cbModelParam._m0[1u].x) + (_1741 * (1.0 - cbModelParam._m0[1u].x));
    float _1766 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _820);
    float _1767 = isnan(_1766) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1766 : min(cbModelParam._m0[25u].z, _1766));
    float _1847;
    float _1849;
    float _1851;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1814 = fma(_1023, cbModelParam._m0[13u].z, fma(_1019, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1015)) + cbModelParam._m0[13u].w;
        float _1818 = fma(_1023, cbModelParam._m0[14u].z, fma(_1019, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1015)) + cbModelParam._m0[14u].w;
        float _1822 = fma(_1023, cbModelParam._m0[15u].z, fma(_1019, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1015)) + cbModelParam._m0[15u].w;
        float _1825 = fma(_962, cbModelParam._m0[13u].z, fma(_961, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _960));
        float _1828 = fma(_962, cbModelParam._m0[14u].z, fma(_961, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _960));
        float _1831 = fma(_962, cbModelParam._m0[15u].z, fma(_961, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _960));
        float _1859;
        if (_1825 > 0.0)
        {
            _1859 = abs((1.0 - _1814) / _1825);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1825 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1814 + 1.0) / _1825);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1859 = frontier_phi_16_14_ladder;
        }
        float _2063;
        if (_1828 > 0.0)
        {
            _2063 = abs((1.0 - _1818) / _1828);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1828 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1818 + 1.0) / _1828);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2063 = frontier_phi_25_21_ladder;
        }
        float _2317;
        if (_1831 > 0.0)
        {
            _2317 = abs((1.0 - _1822) / _1831);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1831 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1822 + 1.0) / _1831);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2317 = frontier_phi_37_32_ladder;
        }
        float _2319 = isnan(_2063) ? _1859 : (isnan(_1859) ? _2063 : min(_1859, _2063));
        float _2320 = isnan(_2317) ? _2319 : (isnan(_2319) ? _2317 : min(_2319, _2317));
        float _2324 = (_2320 * _1825) + _1814;
        float _2325 = (_2320 * _1828) + _1818;
        float _2326 = (_2320 * _1831) + _1822;
        float _2327 = _2320 * 9.9999997473787516355514526367188e-05;
        float _2329 = (-1.0) - _2327;
        float _2331 = _2327 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2326 > _2331) || ((_2326 < _2329) || ((_2325 > _2331) || ((_2325 < _2329) || ((_2324 < _2329) || (_2324 > _2331))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2454 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2326, cbModelParam._m0[9u].z, fma(_2325, cbModelParam._m0[9u].y, _2324 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2326, cbModelParam._m0[10u].z, fma(_2325, cbModelParam._m0[10u].y, _2324 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2326, cbModelParam._m0[11u].z, fma(_2325, cbModelParam._m0[11u].y, _2324 * cbModelParam._m0[11u].x))), _1767);
            frontier_phi_15_37_ladder = _2454.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2454.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2454.x * cbModelParam._m0[1u].y;
        }
        _1847 = frontier_phi_15_37_ladder_2;
        _1849 = frontier_phi_15_37_ladder_1;
        _1851 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1835 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_960, _961, _962), _1767);
        _1847 = _1835.x * cbModelParam._m0[1u].y;
        _1849 = _1835.y * cbModelParam._m0[1u].y;
        _1851 = _1835.z * cbModelParam._m0[1u].y;
    }
    float _1855 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _820);
    float _1856 = isnan(_1855) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1855 : min(cbModelParam._m0[25u].w, _1855));
    float _1947;
    float _1949;
    float _1951;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1911 = fma(_1023, cbModelParam._m0[21u].z, fma(_1019, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1015)) + cbModelParam._m0[21u].w;
        float _1915 = fma(_1023, cbModelParam._m0[22u].z, fma(_1019, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1015)) + cbModelParam._m0[22u].w;
        float _1919 = fma(_1023, cbModelParam._m0[23u].z, fma(_1019, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1015)) + cbModelParam._m0[23u].w;
        float _1922 = fma(_962, cbModelParam._m0[21u].z, fma(_961, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _960));
        float _1925 = fma(_962, cbModelParam._m0[22u].z, fma(_961, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _960));
        float _1928 = fma(_962, cbModelParam._m0[23u].z, fma(_961, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _960));
        float _2068;
        if (_1922 > 0.0)
        {
            _2068 = abs((1.0 - _1911) / _1922);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1922 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1911 + 1.0) / _1922);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2068 = frontier_phi_27_23_ladder;
        }
        float _2344;
        if (_1925 > 0.0)
        {
            _2344 = abs((1.0 - _1915) / _1925);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1925 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1915 + 1.0) / _1925);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2344 = frontier_phi_39_34_ladder;
        }
        float _2557;
        if (_1928 > 0.0)
        {
            _2557 = abs((1.0 - _1919) / _1928);
        }
        else
        {
            float frontier_phi_48_45_ladder;
            if (_1928 < 0.0)
            {
                frontier_phi_48_45_ladder = abs((_1919 + 1.0) / _1928);
            }
            else
            {
                frontier_phi_48_45_ladder = 5000.0;
            }
            _2557 = frontier_phi_48_45_ladder;
        }
        float _2559 = isnan(_2344) ? _2068 : (isnan(_2068) ? _2344 : min(_2068, _2344));
        float _2560 = isnan(_2557) ? _2559 : (isnan(_2559) ? _2557 : min(_2559, _2557));
        float _2564 = (_2560 * _1922) + _1911;
        float _2565 = (_2560 * _1925) + _1915;
        float _2566 = (_2560 * _1928) + _1919;
        float _2567 = _2560 * 9.9999997473787516355514526367188e-05;
        float _2568 = (-1.0) - _2567;
        float _2570 = _2567 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2566 > _2570) || ((_2566 < _2568) || ((_2565 > _2570) || ((_2565 < _2568) || ((_2564 < _2568) || (_2564 > _2570))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2807 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2566, cbModelParam._m0[17u].z, fma(_2565, cbModelParam._m0[17u].y, _2564 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2566, cbModelParam._m0[18u].z, fma(_2565, cbModelParam._m0[18u].y, _2564 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2566, cbModelParam._m0[19u].z, fma(_2565, cbModelParam._m0[19u].y, _2564 * cbModelParam._m0[19u].x))), _1856);
            frontier_phi_24_48_ladder = _2807.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2807.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2807.x * cbModelParam._m0[1u].z;
        }
        _1947 = frontier_phi_24_48_ladder_2;
        _1949 = frontier_phi_24_48_ladder_1;
        _1951 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1931 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_960, _961, _962), _1856);
        _1947 = _1931.x * cbModelParam._m0[1u].z;
        _1949 = _1931.y * cbModelParam._m0[1u].z;
        _1951 = _1931.z * cbModelParam._m0[1u].z;
    }
    float _1964 = (((_986 * _938) + _987) * _952) * ((cbModelParam._m0[1u].w * (_1947 - _1847)) + _1847);
    float _1966 = (((_986 * _939) + _987) * _952) * ((cbModelParam._m0[1u].w * (_1949 - _1849)) + _1849);
    float _1968 = (((_986 * _940) + _987) * _952) * ((cbModelParam._m0[1u].w * (_1951 - _1851)) + _1851);
    float _1971 = fma(_1968, cbSceneParam._m0[89u].z, fma(_1966, cbSceneParam._m0[89u].y, _1964 * cbSceneParam._m0[89u].x));
    float _1974 = fma(_1968, cbSceneParam._m0[90u].z, fma(_1966, cbSceneParam._m0[90u].y, _1964 * cbSceneParam._m0[90u].x));
    float _1977 = fma(_1968, cbSceneParam._m0[91u].z, fma(_1966, cbSceneParam._m0[91u].y, _1964 * cbSceneParam._m0[91u].x));
    uvec4 _1987 = floatBitsToUint(cbInstanceData._m0[_844 + 5u]);
    uint _1989 = _1987.x * 14u;
    uint _1990 = _1989 + 13u;
    float _1997 = _952 + (-1.0);
    float _2002 = (cbLight._m0[_1990].x * _1997) + 1.0;
    float _2003 = (cbLight._m0[_1990].y * _1997) + 1.0;
    float _2004 = (cbLight._m0[_1990].z * _1997) + 1.0;
    float _2005 = (cbLight._m0[_1990].w * _1997) + 1.0;
    uint _2006 = _1989 + 5u;
    float _2012 = isnan(1.0) ? _2003 : (isnan(_2003) ? 1.0 : min(_2003, 1.0));
    uint _2016 = _1989 + 4u;
    float _2022 = isnan(1.0) ? _2002 : (isnan(_2002) ? 1.0 : min(_2002, 1.0));
    uint _2026 = _1989 | 1u;
    float _2037 = dot(vec3(cbLight._m0[_1989].xyz), vec3(_653, _654, _655));
    float _2040 = dot(vec3(cbLight._m0[_2026].xyz), vec3(_653, _654, _655));
    float _4213 = isnan(0.0) ? _2037 : (isnan(_2037) ? 0.0 : max(_2037, 0.0));
    float _4224 = isnan(0.0) ? _2040 : (isnan(_2040) ? 0.0 : max(_2040, 0.0));
    float _2045 = (isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0))) * 0.3183098733425140380859375;
    float _2047 = (isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0))) * 0.3183098733425140380859375;
    float _2054 = ((cbLight._m0[_2006].x * _2012) * _2047) + ((cbLight._m0[_2016].x * _2022) * _2045);
    float _2055 = ((_2012 * cbLight._m0[_2006].y) * _2047) + ((_2022 * cbLight._m0[_2016].y) * _2045);
    float _2056 = ((_2012 * cbLight._m0[_2006].z) * _2047) + ((_2022 * cbLight._m0[_2016].z) * _2045);
    uvec4 _2060 = floatBitsToUint(cbLight._m0[_1989 + 12u]);
    bool _2062 = _2060.x == 0u;
    float _2073;
    float _2075;
    float _2077;
    if (_2062)
    {
        _2073 = _2054;
        _2075 = _2055;
        _2077 = _2056;
    }
    else
    {
        uint _2081 = _1989 + 6u;
        float _2097 = (dot(vec3(cbLight._m0[_1989 + 2u].xyz), vec3(_653, _654, _655)) * 0.5) + 0.5;
        float _2098 = _2097 * _2097;
        float _4235 = isnan(0.0) ? _2098 : (isnan(_2098) ? 0.0 : max(_2098, 0.0));
        float _2099 = isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0));
        float _2100 = isnan(1.0) ? _2004 : (isnan(_2004) ? 1.0 : min(_2004, 1.0));
        _2073 = (((cbLight._m0[_2081].x * 0.3183098733425140380859375) * _2099) * _2100) + _2054;
        _2075 = (((cbLight._m0[_2081].y * 0.3183098733425140380859375) * _2099) * _2100) + _2055;
        _2077 = (((cbLight._m0[_2081].z * 0.3183098733425140380859375) * _2099) * _2100) + _2056;
    }
    bool _2080 = _2060.y == 0u;
    float _2118;
    float _2120;
    float _2122;
    if (_2080)
    {
        _2118 = _2073;
        _2120 = _2075;
        _2122 = _2077;
    }
    else
    {
        uint _2288 = _1989 + 7u;
        float _2304 = (dot(vec3(cbLight._m0[_1989 + 3u].xyz), vec3(_653, _654, _655)) * 0.5) + 0.5;
        float _2305 = _2304 * _2304;
        float _4251 = isnan(0.0) ? _2305 : (isnan(_2305) ? 0.0 : max(_2305, 0.0));
        float _2306 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
        float _2307 = isnan(1.0) ? _2005 : (isnan(_2005) ? 1.0 : min(_2005, 1.0));
        _2118 = (((cbLight._m0[_2288].x * 0.3183098733425140380859375) * _2306) * _2307) + _2073;
        _2120 = (((cbLight._m0[_2288].y * 0.3183098733425140380859375) * _2306) * _2307) + _2075;
        _2122 = (((cbLight._m0[_2288].z * 0.3183098733425140380859375) * _2306) * _2307) + _2077;
    }
    uint _2125 = _1989 + 8u;
    float _2138 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1989].w)) * _820) * 0.949999988079071044921875);
    float _2139 = _2138 * _2138;
    float _2140 = cbLight._m0[_1989].x + _734;
    float _2141 = cbLight._m0[_1989].y + _735;
    float _2142 = cbLight._m0[_1989].z + _736;
    float _2146 = inversesqrt(dot(vec3(_2140, _2141, _2142), vec3(_2140, _2141, _2142)));
    float _2147 = _2146 * _2140;
    float _2148 = _2146 * _2141;
    float _2149 = _2146 * _2142;
    float _2150 = dot(vec3(_653, _654, _655), vec3(cbLight._m0[_1989].xyz));
    float _4267 = isnan(0.0) ? _2150 : (isnan(_2150) ? 0.0 : max(_2150, 0.0));
    float _2153 = isnan(1.0) ? _4267 : (isnan(_4267) ? 1.0 : min(_4267, 1.0));
    float _4278 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    float _2154 = isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0));
    float _2155 = dot(vec3(_653, _654, _655), vec3(_2147, _2148, _2149));
    float _4289 = isnan(0.0) ? _2155 : (isnan(_2155) ? 0.0 : max(_2155, 0.0));
    float _2158 = isnan(1.0) ? _4289 : (isnan(_4289) ? 1.0 : min(_4289, 1.0));
    float _2159 = dot(vec3(cbLight._m0[_1989].xyz), vec3(_2147, _2148, _2149));
    float _4300 = isnan(0.0) ? _2159 : (isnan(_2159) ? 0.0 : max(_2159, 0.0));
    float _2163 = _2139 * _2139;
    float _2167 = ((_2158 * _2158) * (_2163 + (-1.0))) + 1.0;
    float _2175 = exp2(log2(1.0 - (isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0)))) * 5.0);
    float _2176 = 0.959999978542327880859375 - _935;
    float _2178 = 0.959999978542327880859375 - _936;
    float _2179 = 0.959999978542327880859375 - _937;
    float _2186 = 1.0 - _2139;
    float _2197 = (0.5 / (((_2154 * ((_2153 * _2186) + _2139)) + 9.9999999392252902907785028219223e-09) + (((_2154 * _2186) + _2139) * _2153))) * _2153;
    float _4311 = isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0));
    float _2199 = (isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0))) * (_2163 / ((_2167 * _2167) * 3.141590118408203125));
    uint _2210 = _1989 + 9u;
    float _2221 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2026].w)) * _820) * 0.949999988079071044921875);
    float _2222 = _2221 * _2221;
    float _2223 = cbLight._m0[_2026].x + _734;
    float _2224 = cbLight._m0[_2026].y + _735;
    float _2225 = cbLight._m0[_2026].z + _736;
    float _2229 = inversesqrt(dot(vec3(_2223, _2224, _2225), vec3(_2223, _2224, _2225)));
    float _2230 = _2229 * _2223;
    float _2231 = _2229 * _2224;
    float _2232 = _2229 * _2225;
    float _2233 = dot(vec3(_653, _654, _655), vec3(cbLight._m0[_2026].xyz));
    float _4322 = isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0));
    float _2236 = isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0));
    float _2237 = dot(vec3(_653, _654, _655), vec3(_2230, _2231, _2232));
    float _4333 = isnan(0.0) ? _2237 : (isnan(_2237) ? 0.0 : max(_2237, 0.0));
    float _2240 = isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0));
    float _2241 = dot(vec3(cbLight._m0[_2026].xyz), vec3(_2230, _2231, _2232));
    float _4344 = isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0));
    float _2245 = _2222 * _2222;
    float _2249 = ((_2240 * _2240) * (_2245 + (-1.0))) + 1.0;
    float _2256 = exp2(log2(1.0 - (isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0)))) * 5.0);
    float _2263 = 1.0 - _2222;
    float _2273 = (0.5 / (((_2154 * ((_2236 * _2263) + _2222)) + 9.9999999392252902907785028219223e-09) + (((_2154 * _2263) + _2222) * _2236))) * _2236;
    float _4355 = isnan(0.0) ? _2273 : (isnan(_2273) ? 0.0 : max(_2273, 0.0));
    float _2275 = (isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0))) * (_2245 / ((_2249 * _2249) * 3.141590118408203125));
    float _2285 = (((((_2256 * _2176) + _938) * cbLight._m0[_2210].x) * _2275) * _2012) + (((((_2175 * _2176) + _938) * cbLight._m0[_2125].x) * _2199) * _2022);
    float _2286 = (((((_2256 * _2178) + _939) * cbLight._m0[_2210].y) * _2275) * _2012) + (((((_2175 * _2178) + _939) * cbLight._m0[_2125].y) * _2199) * _2022);
    float _2287 = (((((_2256 * _2179) + _940) * cbLight._m0[_2210].z) * _2275) * _2012) + (((((_2175 * _2179) + _940) * cbLight._m0[_2125].z) * _2199) * _2022);
    float _2349;
    float _2351;
    float _2353;
    if (_2062)
    {
        _2349 = _2285;
        _2351 = _2286;
        _2353 = _2287;
    }
    else
    {
        uint _2355 = _1989 + 2u;
        uint _2359 = _1989 + 10u;
        float _2373 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2355].w)) * _820) * 0.949999988079071044921875);
        float _2374 = _2373 * _2373;
        float _2375 = cbLight._m0[_2355].x + _734;
        float _2376 = cbLight._m0[_2355].y + _735;
        float _2377 = cbLight._m0[_2355].z + _736;
        float _2381 = inversesqrt(dot(vec3(_2375, _2376, _2377), vec3(_2375, _2376, _2377)));
        float _2382 = _2381 * _2375;
        float _2383 = _2381 * _2376;
        float _2384 = _2381 * _2377;
        float _2385 = dot(vec3(_653, _654, _655), vec3(cbLight._m0[_2355].xyz));
        float _4366 = isnan(0.0) ? _2385 : (isnan(_2385) ? 0.0 : max(_2385, 0.0));
        float _2388 = isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0));
        float _2389 = dot(vec3(_653, _654, _655), vec3(_2382, _2383, _2384));
        float _4377 = isnan(0.0) ? _2389 : (isnan(_2389) ? 0.0 : max(_2389, 0.0));
        float _2392 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
        float _2393 = dot(vec3(cbLight._m0[_2355].xyz), vec3(_2382, _2383, _2384));
        float _4388 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
        float _2397 = _2374 * _2374;
        float _2401 = ((_2392 * _2392) * (_2397 + (-1.0))) + 1.0;
        float _2408 = exp2(log2(1.0 - (isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0)))) * 5.0);
        float _2415 = 1.0 - _2374;
        float _2425 = (0.5 / (((_2154 * ((_2388 * _2415) + _2374)) + 9.9999999392252902907785028219223e-09) + (((_2154 * _2415) + _2374) * _2388))) * _2388;
        float _4399 = isnan(0.0) ? _2425 : (isnan(_2425) ? 0.0 : max(_2425, 0.0));
        float _2427 = (isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0))) * (_2397 / ((_2401 * _2401) * 3.141590118408203125));
        float _2428 = isnan(1.0) ? _2004 : (isnan(_2004) ? 1.0 : min(_2004, 1.0));
        _2349 = (((((_2408 * _2176) + _938) * cbLight._m0[_2359].x) * _2427) * _2428) + _2285;
        _2351 = (((((_2408 * _2178) + _939) * cbLight._m0[_2359].y) * _2427) * _2428) + _2286;
        _2353 = (((((_2408 * _2179) + _940) * cbLight._m0[_2359].z) * _2427) * _2428) + _2287;
    }
    float _2463;
    float _2465;
    float _2467;
    if (_2080)
    {
        _2463 = _2349;
        _2465 = _2351;
        _2467 = _2353;
    }
    else
    {
        uint _2474 = _1989 + 3u;
        uint _2478 = _1989 + 11u;
        float _2492 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2474].w)) * _820) * 0.949999988079071044921875);
        float _2493 = _2492 * _2492;
        float _2494 = cbLight._m0[_2474].x + _734;
        float _2495 = cbLight._m0[_2474].y + _735;
        float _2496 = cbLight._m0[_2474].z + _736;
        float _2500 = inversesqrt(dot(vec3(_2494, _2495, _2496), vec3(_2494, _2495, _2496)));
        float _2501 = _2500 * _2494;
        float _2502 = _2500 * _2495;
        float _2503 = _2500 * _2496;
        float _2504 = dot(vec3(_653, _654, _655), vec3(cbLight._m0[_2474].xyz));
        float _4415 = isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0));
        float _2507 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
        float _2508 = dot(vec3(_653, _654, _655), vec3(_2501, _2502, _2503));
        float _4426 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
        float _2511 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
        float _2512 = dot(vec3(cbLight._m0[_2474].xyz), vec3(_2501, _2502, _2503));
        float _4437 = isnan(0.0) ? _2512 : (isnan(_2512) ? 0.0 : max(_2512, 0.0));
        float _2516 = _2493 * _2493;
        float _2520 = ((_2511 * _2511) * (_2516 + (-1.0))) + 1.0;
        float _2527 = exp2(log2(1.0 - (isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0)))) * 5.0);
        float _2534 = 1.0 - _2493;
        float _2544 = (0.5 / (((_2154 * ((_2507 * _2534) + _2493)) + 9.9999999392252902907785028219223e-09) + (((_2154 * _2534) + _2493) * _2507))) * _2507;
        float _4448 = isnan(0.0) ? _2544 : (isnan(_2544) ? 0.0 : max(_2544, 0.0));
        float _2546 = (isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0))) * (_2516 / ((_2520 * _2520) * 3.141590118408203125));
        float _2547 = isnan(1.0) ? _2005 : (isnan(_2005) ? 1.0 : min(_2005, 1.0));
        _2463 = (((((_2527 * _2176) + _938) * cbLight._m0[_2478].x) * _2546) * _2547) + _2349;
        _2465 = (((((_2527 * _2178) + _939) * cbLight._m0[_2478].y) * _2546) * _2547) + _2351;
        _2467 = (((((_2527 * _2179) + _940) * cbLight._m0[_2478].z) * _2546) * _2547) + _2353;
    }
    float _2681;
    float _2683;
    float _2685;
    float _2687;
    float _2689;
    float _2691;
    if (_1987.y == 0u)
    {
        float _2622 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2623 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2622;
        float _2624 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2622;
        float _2625 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2622;
        uvec4 _2637 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2638 = _2637.x;
        uint _2649 = uint((float(_2637.y) * floor(float(uint(cbSceneParam._m0[85u].y * _743) / _2638))) + floor(float(uint(cbSceneParam._m0[85u].x * _742) / _2638)));
        float _2659 = (log2(_2625 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2660 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
        uint _2663 = uint(isnan(14.0) ? _2660 : (isnan(_2660) ? 14.0 : min(_2660, 14.0)));
        uvec4 _2668 = texelFetch(g_lightClusterGridBuffer, int(((_2663 << 2u) + (_2649 << 6u)) >> 2u));
        uint _2669 = _2668.x;
        uint _2670 = _2637.z;
        float _2812;
        float _2814;
        float _2816;
        float _2818;
        float _2820;
        float _2822;
        if (((((1u << ((_2670 >> 4u) & 15u)) + 4294967295u) & _2669) == 0u) || ((_2670 & 240u) == 0u))
        {
            _2812 = 0.0;
            _2814 = 0.0;
            _2816 = 0.0;
            _2818 = 0.0;
            _2820 = 0.0;
            _2822 = 0.0;
        }
        else
        {
            float _2813;
            float _2815;
            float _2817;
            float _2819;
            float _2821;
            float _2823;
            float _2965 = 0.0;
            float _2966 = 0.0;
            float _2967 = 0.0;
            float _2968 = 0.0;
            float _2969 = 0.0;
            float _2970 = 0.0;
            uint _2971 = 0u;
            uint _2980;
            bool _2981;
            for (;;)
            {
                _2980 = texelFetch(g_lightClassification, int((((_2663 << 5u) + (_2649 << 9u)) + (_2971 << 2u)) >> 2u)).x;
                _2981 = _2980 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2981)
                {
                    frontier_phi_63_pred = _2970;
                    frontier_phi_63_pred_1 = _2969;
                    frontier_phi_63_pred_2 = _2968;
                    frontier_phi_63_pred_3 = _2967;
                    frontier_phi_63_pred_4 = _2966;
                    frontier_phi_63_pred_5 = _2965;
                }
                else
                {
                    float _3089;
                    float _3090;
                    float _3091;
                    float _3092;
                    float _3093;
                    float _3094;
                    uint _3095;
                    _3089 = _2965;
                    _3090 = _2966;
                    _3091 = _2967;
                    _3092 = _2968;
                    _3093 = _2969;
                    _3094 = _2970;
                    _3095 = _2980;
                    float _3021;
                    float _3022;
                    float _3023;
                    float _3024;
                    float _3025;
                    float _3026;
                    for (;;)
                    {
                        uint _3099 = uint(findLSB(_3095)) + (_2971 << 5u);
                        uint _3096 = (_3095 + 4294967295u) & _3095;
                        uint _3101 = _3099 * 48u;
                        vec4 _3115 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3101)).x, texelFetch(g_PointLightRenderingBuffer, int(_3101 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3101 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3101 + 3u)).x));
                        uint _3121 = (_3099 * 48u) + 4u;
                        vec4 _3134 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3121)).x, texelFetch(g_PointLightRenderingBuffer, int(_3121 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3121 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3121 + 3u)).x));
                        uint _3140 = (_3099 * 48u) + 8u;
                        vec3 _3151 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3140)).x, texelFetch(g_PointLightRenderingBuffer, int(_3140 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3140 + 2u)).x));
                        float _3155 = _3115.x - _2623;
                        float _3156 = _3115.y - _2624;
                        float _3157 = _3115.z - _2625;
                        float _3158 = dot(vec3(_3155, _3156, _3157), vec3(_3155, _3156, _3157));
                        float _3161 = inversesqrt(_3158);
                        float _3162 = _3161 * _3155;
                        float _3163 = _3161 * _3156;
                        float _3164 = _3161 * _3157;
                        float _3165 = dot(vec3(_765, _768, _771), vec3(_3162, _3163, _3164));
                        float _3170 = 1.0 - (_3158 * _3115.w);
                        float _4474 = isnan(0.0) ? _3170 : (isnan(_3170) ? 0.0 : max(_3170, 0.0));
                        float _3171 = isnan(1.0) ? _4474 : (isnan(_4474) ? 1.0 : min(_4474, 1.0));
                        float _3172 = sqrt(_3158) * _3134.w;
                        float _3175 = 1.39999997615814208984375 / (_3172 + 1.39999997615814208984375);
                        float _3176 = _3175 * _3175;
                        float _3179 = ((1.0 - _3176) * _3165) + _3176;
                        float _3182 = _3172 * _3172;
                        float _3186 = ((isnan(0.0) ? _3179 : (isnan(_3179) ? 0.0 : max(_3179, 0.0))) * _3171) / ((_3182 * 0.699999988079071044921875) + 1.0);
                        float _3190 = (-0.0) - _2623;
                        float _3191 = (-0.0) - _2624;
                        float _3192 = (-0.0) - _2625;
                        float _3196 = inversesqrt(dot(vec3(_3190, _3191, _3192), vec3(_3190, _3191, _3192)));
                        float _3197 = _3196 * _3190;
                        float _3198 = _3196 * _3191;
                        float _3199 = _3196 * _3192;
                        float _3207 = exp2(log2(1.0 / ((_3182 * 3.5) + 5.0)) * 0.25);
                        float _3208 = 1.0 - _968;
                        float _3215 = sqrt(1.0 - ((1.0 - (_3208 * _3208)) * (1.0 - (_3207 * _3207))));
                        float _3216 = _3215 * _3215;
                        float _3217 = _3216 * _3216;
                        float _3218 = _3197 + _3162;
                        float _3219 = _3198 + _3163;
                        float _3220 = _3199 + _3164;
                        float _3224 = inversesqrt(dot(vec3(_3218, _3219, _3220), vec3(_3218, _3219, _3220)));
                        float _3228 = dot(vec3(_765, _768, _771), vec3(_3197, _3198, _3199));
                        float _4490 = isnan(0.0) ? _3228 : (isnan(_3228) ? 0.0 : max(_3228, 0.0));
                        float _3231 = isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0));
                        float _3232 = dot(vec3(_765, _768, _771), vec3(_3224 * _3218, _3224 * _3219, _3224 * _3220));
                        float _4501 = isnan(0.0) ? _3232 : (isnan(_3232) ? 0.0 : max(_3232, 0.0));
                        float _3235 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
                        float _3239 = ((_3235 * _3235) * (_3217 + (-1.0))) + 1.0;
                        float _3240 = _3175 * _3216;
                        float _3241 = _3240 * _3240;
                        float _3244 = ((1.0 - _3241) * _3165) + _3241;
                        float _4512 = isnan(0.0) ? _3244 : (isnan(_3244) ? 0.0 : max(_3244, 0.0));
                        float _3245 = isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0));
                        float _3246 = 1.0 - _3216;
                        float _3256 = (0.5 / (((_3245 * ((_3231 * _3246) + _3216)) + 9.9999999392252902907785028219223e-09) + (((_3245 * _3246) + _3216) * _3231))) * _3245;
                        float _4523 = isnan(0.0) ? _3256 : (isnan(_3256) ? 0.0 : max(_3256, 0.0));
                        float _3267 = (((_3217 * 3.1415927410125732421875) * (isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0)))) / ((_3239 * _3239) * ((_3182 * 2.1991131305694580078125) + 3.141590118408203125))) * _3171;
                        _3024 = (_3186 * _3134.x) + _3092;
                        _3025 = (_3186 * _3134.y) + _3093;
                        _3026 = (_3186 * _3134.z) + _3094;
                        _3021 = (_3267 * _3151.x) + _3089;
                        _3022 = (_3267 * _3151.y) + _3090;
                        _3023 = (_3267 * _3151.z) + _3091;
                        if (_3096 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3089 = _3021;
                            _3090 = _3022;
                            _3091 = _3023;
                            _3092 = _3024;
                            _3093 = _3025;
                            _3094 = _3026;
                            _3095 = _3096;
                        }
                    }
                    frontier_phi_63_pred = _3026;
                    frontier_phi_63_pred_1 = _3025;
                    frontier_phi_63_pred_2 = _3024;
                    frontier_phi_63_pred_3 = _3023;
                    frontier_phi_63_pred_4 = _3022;
                    frontier_phi_63_pred_5 = _3021;
                }
                _2823 = frontier_phi_63_pred;
                _2821 = frontier_phi_63_pred_1;
                _2819 = frontier_phi_63_pred_2;
                _2817 = frontier_phi_63_pred_3;
                _2815 = frontier_phi_63_pred_4;
                _2813 = frontier_phi_63_pred_5;
                uint _2972 = _2971 + 1u;
                if (_2972 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2965 = _2813;
                    _2966 = _2815;
                    _2967 = _2817;
                    _2968 = _2819;
                    _2969 = _2821;
                    _2970 = _2823;
                    _2971 = _2972;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2812 = _2813;
            _2814 = _2815;
            _2816 = _2817;
            _2818 = _2819;
            _2820 = _2821;
            _2822 = _2823;
        }
        uvec4 _2826 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2827 = _2826.z;
        uint _2829 = (_2827 >> 8u) & 15u;
        float _2933;
        float _2935;
        float _2937;
        float _2939;
        float _2941;
        float _2943;
        if (((4294967295u << _2829) & _2669) == 0u)
        {
            _2933 = _2812;
            _2935 = _2814;
            _2937 = _2816;
            _2939 = _2818;
            _2941 = _2820;
            _2943 = _2822;
        }
        else
        {
            float _2958 = inversesqrt(dot(vec3(_2623, _2624, _2625), vec3(_2623, _2624, _2625)));
            float _2959 = _2958 * _2623;
            float _2960 = _2958 * _2624;
            float _2961 = _2958 * _2625;
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_2829 < ((_2827 >> 12u) & 15u))
            {
                float _2934;
                float _2936;
                float _2938;
                float _2940;
                float _2942;
                float _2944;
                float _3072 = _2812;
                float _3073 = _2814;
                float _3074 = _2816;
                float _3075 = _2818;
                float _3076 = _2820;
                float _3077 = _2822;
                uint _3078 = _2829;
                uint _3087;
                bool _3088;
                for (;;)
                {
                    _3087 = texelFetch(g_lightClassification, int((((_2663 << 5u) + (_2649 << 9u)) + (_3078 << 2u)) >> 2u)).x;
                    _3088 = _3087 == 0u;
                    float frontier_phi_69_pred;
                    float frontier_phi_69_pred_1;
                    float frontier_phi_69_pred_2;
                    float frontier_phi_69_pred_3;
                    float frontier_phi_69_pred_4;
                    float frontier_phi_69_pred_5;
                    if (_3088)
                    {
                        frontier_phi_69_pred = _3077;
                        frontier_phi_69_pred_1 = _3076;
                        frontier_phi_69_pred_2 = _3075;
                        frontier_phi_69_pred_3 = _3074;
                        frontier_phi_69_pred_4 = _3073;
                        frontier_phi_69_pred_5 = _3072;
                    }
                    else
                    {
                        float _3272;
                        float _3273;
                        float _3274;
                        float _3275;
                        float _3276;
                        float _3277;
                        float _3567;
                        float _3568;
                        float _3569;
                        float _3570;
                        float _3571;
                        float _3572;
                        float _3285 = _3072;
                        float _3286 = _3073;
                        float _3287 = _3074;
                        float _3288 = _3075;
                        float _3289 = _3076;
                        float _3290 = _3077;
                        uint _3291 = _3087;
                        uint _3292;
                        vec4 _3317;
                        float _3318;
                        vec4 _3333;
                        vec3 _3345;
                        vec4 _3360;
                        vec4 _3376;
                        float _3423;
                        bool _3424;
                        for (;;)
                        {
                            uint _3302 = ((_3078 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3291));
                            _3292 = (_3291 + 4294967295u) & _3291;
                            uint _3304 = _3302 * 40u;
                            _3317 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3304)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3304 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3304 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3304 + 3u)).x));
                            _3318 = _3317.w;
                            uint _3320 = (_3302 * 40u) + 4u;
                            _3333 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3320)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3320 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3320 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3320 + 3u)).x));
                            uint _3335 = (_3302 * 40u) + 8u;
                            _3345 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3335)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3335 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3335 + 2u)).x));
                            uint _3347 = (_3302 * 40u) + 16u;
                            _3360 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3347)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3347 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3347 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3347 + 3u)).x));
                            uint _3363 = (_3302 * 40u) + 20u;
                            _3376 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3363)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3363 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3363 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3363 + 3u)).x));
                            uint _3379 = (_3302 * 40u) + 24u;
                            vec4 _3392 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3379)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3379 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3379 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3379 + 3u)).x));
                            uint _3398 = (_3302 * 40u) + 28u;
                            vec4 _3411 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3398)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3398 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3398 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3398 + 3u)).x));
                            _3423 = fma(_2625, _3411.z, fma(_2624, _3411.y, _3411.x * _2623)) + _3411.w;
                            _3424 = !((fma(_2625, _3392.z, fma(_2624, _3392.y, _3392.x * _2623)) + _3392.w) <= 0.0);
                            float frontier_phi_75_pred;
                            float frontier_phi_75_pred_1;
                            float frontier_phi_75_pred_2;
                            float frontier_phi_75_pred_3;
                            float frontier_phi_75_pred_4;
                            float frontier_phi_75_pred_5;
                            if (_3424)
                            {
                                float _3451 = _3317.x - _2623;
                                float _3452 = _3317.y - _2624;
                                float _3453 = _3317.z - _2625;
                                float _3454 = dot(vec3(_3451, _3452, _3453), vec3(_3451, _3452, _3453));
                                float _3457 = inversesqrt(_3454);
                                float _3458 = _3457 * _3451;
                                float _3459 = _3457 * _3452;
                                float _3460 = _3457 * _3453;
                                float _3464 = 1.0 - (_3454 / (_3318 * _3318));
                                float _4534 = isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : max(_3464, 0.0));
                                float _3465 = isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0));
                                float _3469 = sqrt(_3454) * _3333.w;
                                float _3471 = 1.39999997615814208984375 / (_3469 + 1.39999997615814208984375);
                                float _3472 = _3471 * _3471;
                                float _3475 = ((1.0 - _3472) * dot(vec3(_3458, _3459, _3460), vec3(_765, _768, _771))) + _3472;
                                float _3478 = _3469 * _3469;
                                float _3482 = (fma(_2625, _3360.z, fma(_2624, _3360.y, _3360.x * _2623)) + _3360.w) / _3423;
                                float _3483 = (fma(_2625, _3376.z, fma(_2624, _3376.y, _3376.x * _2623)) + _3376.w) / _3423;
                                float _3487 = 1.0 - dot(vec2(_3482, _3483), vec2(_3482, _3483));
                                float _4550 = isnan(0.0) ? _3487 : (isnan(_3487) ? 0.0 : max(_3487, 0.0));
                                float _3488 = isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0));
                                float _3489 = _3488 * (((isnan(0.0) ? _3475 : (isnan(_3475) ? 0.0 : max(_3475, 0.0))) * _3465) / ((_3478 * 0.699999988079071044921875) + 1.0));
                                float _3501 = exp2(log2(1.0 / ((_3478 * 3.5) + 5.0)) * 0.25);
                                float _3502 = 1.0 - _968;
                                float _3509 = sqrt(1.0 - ((1.0 - (_3502 * _3502)) * (1.0 - (_3501 * _3501))));
                                float _3510 = _3509 * _3509;
                                float _3511 = _3510 * _3510;
                                float _3512 = _3458 - _2959;
                                float _3513 = _3459 - _2960;
                                float _3514 = _3460 - _2961;
                                float _3518 = inversesqrt(dot(vec3(_3512, _3513, _3514), vec3(_3512, _3513, _3514)));
                                float _3522 = dot(vec3(_765, _768, _771), vec3((-0.0) - _2959, (-0.0) - _2960, (-0.0) - _2961));
                                float _4561 = isnan(0.0) ? _3522 : (isnan(_3522) ? 0.0 : max(_3522, 0.0));
                                float _3525 = isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0));
                                float _3526 = dot(vec3(_765, _768, _771), vec3(_3518 * _3512, _3518 * _3513, _3518 * _3514));
                                float _4572 = isnan(0.0) ? _3526 : (isnan(_3526) ? 0.0 : max(_3526, 0.0));
                                float _3529 = isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0));
                                float _3533 = ((_3529 * _3529) * (_3511 + (-1.0))) + 1.0;
                                float _3534 = _3471 * _3510;
                                float _3535 = _3534 * _3534;
                                float _3541 = ((1.0 - _3535) * dot(vec3(_765, _768, _771), vec3(_3458, _3459, _3460))) + _3535;
                                float _4583 = isnan(0.0) ? _3541 : (isnan(_3541) ? 0.0 : max(_3541, 0.0));
                                float _3542 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
                                float _3543 = 1.0 - _3510;
                                float _3553 = (0.5 / (((_3542 * ((_3525 * _3543) + _3510)) + 9.9999999392252902907785028219223e-09) + (((_3542 * _3543) + _3510) * _3525))) * _3542;
                                float _4594 = isnan(0.0) ? _3553 : (isnan(_3553) ? 0.0 : max(_3553, 0.0));
                                float _3563 = (_3488 * _3465) * (((_3511 * 3.1415927410125732421875) * (isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0)))) / ((_3533 * _3533) * ((_3478 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_75_pred = _3489 * _3333.z;
                                frontier_phi_75_pred_1 = _3489 * _3333.y;
                                frontier_phi_75_pred_2 = _3489 * _3333.x;
                                frontier_phi_75_pred_3 = _3563 * _3345.z;
                                frontier_phi_75_pred_4 = _3563 * _3345.y;
                                frontier_phi_75_pred_5 = _3563 * _3345.x;
                            }
                            else
                            {
                                frontier_phi_75_pred = 0.0;
                                frontier_phi_75_pred_1 = 0.0;
                                frontier_phi_75_pred_2 = 0.0;
                                frontier_phi_75_pred_3 = 0.0;
                                frontier_phi_75_pred_4 = 0.0;
                                frontier_phi_75_pred_5 = 0.0;
                            }
                            _3572 = frontier_phi_75_pred;
                            _3571 = frontier_phi_75_pred_1;
                            _3570 = frontier_phi_75_pred_2;
                            _3569 = frontier_phi_75_pred_3;
                            _3568 = frontier_phi_75_pred_4;
                            _3567 = frontier_phi_75_pred_5;
                            _3275 = _3570 + _3288;
                            _3276 = _3571 + _3289;
                            _3277 = _3572 + _3290;
                            _3272 = _3567 + _3285;
                            _3273 = _3568 + _3286;
                            _3274 = _3569 + _3287;
                            if (_3292 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3285 = _3272;
                                _3286 = _3273;
                                _3287 = _3274;
                                _3288 = _3275;
                                _3289 = _3276;
                                _3290 = _3277;
                                _3291 = _3292;
                                continue;
                            }
                        }
                        frontier_phi_69_pred = _3277;
                        frontier_phi_69_pred_1 = _3276;
                        frontier_phi_69_pred_2 = _3275;
                        frontier_phi_69_pred_3 = _3274;
                        frontier_phi_69_pred_4 = _3273;
                        frontier_phi_69_pred_5 = _3272;
                    }
                    _2944 = frontier_phi_69_pred;
                    _2942 = frontier_phi_69_pred_1;
                    _2940 = frontier_phi_69_pred_2;
                    _2938 = frontier_phi_69_pred_3;
                    _2936 = frontier_phi_69_pred_4;
                    _2934 = frontier_phi_69_pred_5;
                    uint _3079 = _3078 + 1u;
                    if (_3079 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3072 = _2934;
                        _3073 = _2936;
                        _3074 = _2938;
                        _3075 = _2940;
                        _3076 = _2942;
                        _3077 = _2944;
                        _3078 = _3079;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _2944;
                frontier_phi_57_58_ladder_1 = _2942;
                frontier_phi_57_58_ladder_2 = _2940;
                frontier_phi_57_58_ladder_3 = _2938;
                frontier_phi_57_58_ladder_4 = _2936;
                frontier_phi_57_58_ladder_5 = _2934;
            }
            else
            {
                frontier_phi_57_58_ladder = _2822;
                frontier_phi_57_58_ladder_1 = _2820;
                frontier_phi_57_58_ladder_2 = _2818;
                frontier_phi_57_58_ladder_3 = _2816;
                frontier_phi_57_58_ladder_4 = _2814;
                frontier_phi_57_58_ladder_5 = _2812;
            }
            _2933 = frontier_phi_57_58_ladder_5;
            _2935 = frontier_phi_57_58_ladder_4;
            _2937 = frontier_phi_57_58_ladder_3;
            _2939 = frontier_phi_57_58_ladder_2;
            _2941 = frontier_phi_57_58_ladder_1;
            _2943 = frontier_phi_57_58_ladder;
        }
        float _2948 = isnan(1.0) ? _952 : (isnan(_952) ? 1.0 : min(_952, 1.0));
        _2681 = (_2948 * _2939) + _2118;
        _2683 = (_2948 * _2941) + _2120;
        _2685 = (_2948 * _2943) + _2122;
        _2687 = ((_2933 * _938) * _2948) + _2463;
        _2689 = ((_2935 * _939) * _2948) + _2465;
        _2691 = ((_2937 * _940) * _2948) + _2467;
    }
    else
    {
        _2681 = _2118;
        _2683 = _2120;
        _2685 = _2122;
        _2687 = _2463;
        _2689 = _2465;
        _2691 = _2467;
    }
    uint _2697 = _845 + uint(cbMatDynParam._m0[0u].w);
    float _2707 = ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _585) * _598.x) * cbInstanceData._m0[_2697].x;
    float _2712 = ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _585) * _598.y) * cbInstanceData._m0[_2697].y;
    float _2717 = ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _585) * _598.z) * cbInstanceData._m0[_2697].z;
    float _4610 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
    float _4621 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
    float _4632 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
    float _4643 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _2735 = (((isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0))) * (_2681 + ((isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0))) * _952))) + ((_2687 + ((isnan(0.0) ? _1971 : (isnan(_1971) ? 0.0 : max(_1971, 0.0))) * _1756)) * cbPerFrame._m0[3u].x)) + _2707;
    float _2737 = (_2712 + ((_2689 + ((isnan(0.0) ? _1974 : (isnan(_1974) ? 0.0 : max(_1974, 0.0))) * _1756)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0))) * (_2683 + ((isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0))) * _952)));
    float _2739 = (_2717 + ((_2691 + ((isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0))) * _1756)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0))) * (_2685 + ((isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0))) * _952)));
    float _4669 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2752 = isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0));
    float _2757 = cbInstanceData._m0[_844 + 6u].w * (isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0)));
    float _2762 = _742 / cbSceneParam._m0[86u].x;
    float _2763 = _743 / cbSceneParam._m0[86u].y;
    vec4 _2777 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2762, _2763, (log2((isnan(cbSceneParam._m0[77u].w) ? _677 : (isnan(_677) ? cbSceneParam._m0[77u].w : min(_677, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2779 = _2777.x;
    float _2780 = _2777.y;
    float _2781 = _2777.z;
    float _2782 = _2777.w;
    float _2874;
    float _2876;
    float _2878;
    float _2880;
    if (_677 > cbSceneParam._m0[78u].w)
    {
        float _2837 = isnan(_677) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _677 : min(cbSceneParam._m0[80u].w, _677));
        float _2838 = _2837 / _677;
        float _2849 = _2838 * _727;
        float _2850 = _728 * _2838;
        float _2851 = (-0.0) - _2850;
        float _2852 = _2838 * _729;
        float _2854 = (cbSceneParam._m0[77u].w * _2851) / _2837;
        float _2855 = _2854 + cbSceneParam._m0[79u].w;
        float _2856 = cbSceneParam._m0[79u].w - _2850;
        float _2862 = sqrt(((_2849 * _2849) + (_2850 * _2850)) + (_2852 * _2852));
        float _2865 = (1.0 - (cbSceneParam._m0[77u].w / _2837)) * _2862;
        float _2870 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2872 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3034;
        if (abs((_2851 - _2854) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3034 = ((((_2855 > 0.0) ? exp2(_2870 * _2855) : (2.0 - exp2(_2872 * _2855))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2865;
        }
        else
        {
            float _2994 = 1.0 / cbSceneParam._m0[80u].x;
            float _2995 = isnan(_2856) ? _2855 : (isnan(_2855) ? _2856 : max(_2855, _2856));
            float _2996 = isnan(_2856) ? _2855 : (isnan(_2855) ? _2856 : min(_2855, _2856));
            float _3005 = isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : min(_2995, 0.0));
            float _3006 = isnan(0.0) ? _2996 : (isnan(_2996) ? 0.0 : min(_2996, 0.0));
            _3034 = ((abs(_2862 / _2851) * cbSceneParam._m0[80u].y) * ((((_3005 - _3006) * 2.0) - ((exp2(_2870 * (isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : max(_2995, 0.0)))) - exp2(_2870 * (isnan(0.0) ? _2996 : (isnan(_2996) ? 0.0 : max(_2996, 0.0))))) * _2994)) - ((exp2(_2872 * _3005) - exp2(_2872 * _3006)) * _2994))) + (_2865 * cbSceneParam._m0[80u].z);
        }
        vec4 _3036 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2762, _2763, 1.0), 0.0);
        float _3045 = exp2((_3034 * (-1.44269502162933349609375)) * (1.0 - _3036.w));
        float _3046 = log2(_3045);
        float _3062 = log2(_2782);
        _2874 = (exp2(_3062 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3046 * cbSceneParam._m0[78u].x)) * _3036.x) / cbSceneParam._m0[78u].x)) + _2779;
        _2876 = (exp2(_3062 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3046 * cbSceneParam._m0[78u].y)) * _3036.y) / cbSceneParam._m0[78u].y)) + _2780;
        _2878 = (exp2(_3062 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3046 * cbSceneParam._m0[78u].z)) * _3036.z) / cbSceneParam._m0[78u].z)) + _2781;
        _2880 = _3045 * _2782;
    }
    else
    {
        _2874 = _2779;
        _2876 = _2780;
        _2878 = _2781;
        _2880 = _2782;
    }
    float _2892 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2893 = _2892 == 3.0;
    float _2894 = log2(_2880);
    float _2898 = exp2(_2894 * cbSceneParam._m0[78u].x);
    float _2899 = exp2(_2894 * cbSceneParam._m0[78u].y);
    float _2900 = exp2(_2894 * cbSceneParam._m0[78u].z);
    float _2901 = _2898 * (isnan(0.0) ? _2735 : (isnan(_2735) ? 0.0 : max(_2735, 0.0)));
    float _2902 = _2899 * (isnan(0.0) ? _2737 : (isnan(_2737) ? 0.0 : max(_2737, 0.0)));
    float _2903 = _2900 * (isnan(0.0) ? _2739 : (isnan(_2739) ? 0.0 : max(_2739, 0.0)));
    float _2912 = (_2892 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2912 * (_2893 ? _2901 : (_2901 + (cbSceneParam._m0[72u].w * _2874)));
    SV_Target.y = _2912 * (_2893 ? _2902 : (_2902 + (cbSceneParam._m0[72u].w * _2876)));
    SV_Target.z = _2912 * (_2893 ? _2903 : (_2903 + (cbSceneParam._m0[72u].w * _2878)));
    SV_Target.w = _2757;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2707) * _2752) * _2898) * _2912;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2712) * _2752) * _2899) * _2912;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2717) * _2752) * _2900) * _2912;
    SV_Target_1.w = _2757;
}


