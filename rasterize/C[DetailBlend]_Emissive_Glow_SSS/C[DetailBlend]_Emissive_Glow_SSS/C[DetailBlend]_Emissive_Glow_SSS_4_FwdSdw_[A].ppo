#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_12;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1302;
float _4018;
float _4019;
float _4020;
float _4021;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _215 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _216 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _217 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _223 = inversesqrt(dot(vec3(_215, _216, _217), vec3(_215, _216, _217)));
    float _230 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _231 = _230 * NORMAL.x;
    float _232 = _230 * NORMAL.y;
    float _233 = _230 * NORMAL.z;
    float _237 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _245;
    float _246;
    float _247;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _245 = (-0.0) - _231;
        _246 = (-0.0) - _232;
        _247 = (-0.0) - _233;
    }
    else
    {
        _245 = _231;
        _246 = _232;
        _247 = _233;
    }
    vec4 _260 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _265 = _260.z;
    float _272 = exp2(log2(_265 * 22.0) * 260.0);
    float _273 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _274 = isnan(1.0) ? _273 : (isnan(_273) ? 1.0 : min(_273, 1.0));
    vec4 _288 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _299 = cbMtdParam._m0[10u].x * _288.x;
    float _300 = cbMtdParam._m0[10u].y * _288.y;
    float _301 = cbMtdParam._m0[10u].z * _288.z;
    vec4 _313 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _341 = exp2(log2(1.0 - _260.w) * 8.0);
    vec4 _353 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    vec4 _378 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _386 = (((((cbMtdParam._m0[9u].x * _313.x) - _299) * _274) + _299) * 4.55000019073486328125) * _378.x;
    float _388 = (((((cbMtdParam._m0[9u].y * _313.y) - _300) * _274) + _300) * 4.55000019073486328125) * _378.y;
    float _390 = (((((cbMtdParam._m0[9u].z * _313.z) - _301) * _274) + _301) * 4.55000019073486328125) * _378.z;
    float _397 = (((cbMtdParam._m0[13u].x * _353.x) - _386) * _341) + _386;
    float _398 = (((cbMtdParam._m0[13u].y * _353.y) - _388) * _341) + _388;
    float _399 = (((cbMtdParam._m0[13u].z * _353.z) - _390) * _341) + _390;
    float _400 = _378.w * _313.w;
    float _430 = (((texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w)).x - cbMtdParam._m0[17u].x) + cbMtdParam._m0[16u].x) * _274) + cbMtdParam._m0[17u].x;
    float _433 = ((cbMtdParam._m0[15u].z - _430) * _341) + _430;
    vec4 _445 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _447 = _445.x;
    float _448 = _445.y;
    float _454 = cbMtdParam._m0[14u].y + _445.z;
    vec4 _466 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    vec4 _488 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _501 = (((_274 * (_265 + (-0.5))) + 0.5) * 2.0) * ((((_466.z - _454) + cbMtdParam._m0[14u].x) * _274) + _454);
    float _505 = (((_488.z - _501) + cbMtdParam._m0[15u].y) * _341) + _501;
    float _520 = abs((fract(cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4040 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _521 = isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0));
    float _526 = (_521 * _521) * (3.0 - (_521 * 2.0));
    vec4 _539 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _547 = (_260.x * 2.0) + (-1.0);
    float _548 = (_260.y * 2.0) + (-1.0);
    float _549 = dot(vec2(_547, _548), vec2(_547, _548));
    float _4051 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    float _554 = sqrt(1.0 - (isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0))));
    float _559 = ((_466.x - _447) * _274) + _447;
    float _560 = ((_466.y - _448) * _274) + _448;
    float _573 = (cbMtdParam._m0[14u].z * (((((_488.x - _559) * _341) + _559) * 2.0) + (-1.0))) + _547;
    float _574 = (cbMtdParam._m0[14u].z * (((((_488.y - _560) * _341) + _560) * 2.0) + (-1.0))) + _548;
    float _577 = fma(_554, _245, fma(_574, _237 * TANGENT.x, (_223 * _215) * _573));
    float _580 = fma(_554, _246, fma(_574, _237 * TANGENT.y, (_223 * _216) * _573));
    float _583 = fma(_554, _247, fma(_574, _237 * TANGENT.z, (_223 * _217) * _573));
    float _587 = inversesqrt(dot(vec3(_577, _580, _583), vec3(_577, _580, _583)));
    float _588 = _587 * _577;
    float _589 = _587 * _580;
    float _590 = _587 * _583;
    float _4062 = isnan(0.0) ? _400 : (isnan(_400) ? 0.0 : max(_400, 0.0));
    float _591 = isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0));
    float _4073 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    float _592 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
    float _4084 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    float _593 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
    float _4095 = isnan(0.0) ? _398 : (isnan(_398) ? 0.0 : max(_398, 0.0));
    float _594 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
    float _4106 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
    float _595 = isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0));
    float _4117 = isnan(0.0) ? _433 : (isnan(_433) ? 0.0 : max(_433, 0.0));
    float _596 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
    float _612 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _654 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _664 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _654);
    float _665 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _654);
    float _666 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _654);
    float _670 = inversesqrt(dot(vec3(_664, _665, _666), vec3(_664, _665, _666)));
    float _671 = _664 * _670;
    float _672 = _665 * _670;
    float _673 = _666 * _670;
    vec4 _678 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _680 = _678.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _983 = sqrt(((_664 * _664) + (_665 * _665)) + (_666 * _666));
        float _989 = (cbMatDynParam._m0[5u].x * _983) + cbMatDynParam._m0[5u].y;
        float _4128 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
        float _990 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
        float _994 = (cbMatDynParam._m0[5u].z * _983) + cbMatDynParam._m0[5u].w;
        float _4139 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0))) - _990)) + _990) < ((_680 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _691 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _692 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _694 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _696 = _694.w;
    float _714 = fma(_590, cbSceneParam._m0[5u].z, fma(_589, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _588));
    float _717 = fma(_590, cbSceneParam._m0[6u].z, fma(_589, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _588));
    float _720 = fma(_590, cbSceneParam._m0[7u].z, fma(_589, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _588));
    vec4 _722 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _724 = _722.x;
    float _736 = (((_722.y - _592) + (_722.w * _592)) * cbMtdParam._m0[3u].x) + _592;
    vec4 _737 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _753 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_724 * _724)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _737.z;
    float _761 = (((cbMatDynParam._m0[15u].x - _596) * cbMatDynParam._m0[15u].w) * _753) + _596;
    float _769 = ((_753 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _736)) + _736;
    uint _793 = uint(roundEven(NORMAL.w)) * 13u;
    uint _794 = _793 + 9u;
    uint _795 = _794 + uint(cbMatDynParam._m0[0u].w);
    float _801 = (cbMtdParam._m0[0u].x * _593) * cbInstanceData._m0[_795].x;
    float _802 = (cbMtdParam._m0[0u].y * _594) * cbInstanceData._m0[_795].y;
    float _803 = (cbMtdParam._m0[0u].z * _595) * cbInstanceData._m0[_795].z;
    float _4150 = isnan(0.0) ? _801 : (isnan(_801) ? 0.0 : max(_801, 0.0));
    float _804 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
    float _4161 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
    float _805 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
    float _4172 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
    float _806 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
    vec4 _807 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _812 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _823 = (((_812.x - _761) + (_812.w * _761)) * cbMtdParam._m0[3u].x) + _761;
    float _836 = (cbMtdParam._m0[3u].x * (((_804 * _696) - _804) + _807.x)) + _804;
    float _837 = (cbMtdParam._m0[3u].x * (((_805 * _696) - _805) + _807.y)) + _805;
    float _838 = (cbMtdParam._m0[3u].x * (((_806 * _696) - _806) + _807.z)) + _806;
    float _852 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_761 * (_593 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_761 * (_594 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_761 * (_595 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _856 = _852 * cbMatDynParam._m0[13u].w;
    float _866 = (_856 * (cbMatDynParam._m0[13u].x - _836)) + _836;
    float _867 = (_856 * (cbMatDynParam._m0[13u].y - _837)) + _837;
    float _868 = (_856 * (cbMatDynParam._m0[13u].z - _838)) + _838;
    float _876 = ((_852 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _823)) + _823;
    float _877 = 1.0 - _876;
    float _878 = _877 * _866;
    float _879 = _877 * _867;
    float _880 = _877 * _868;
    float _884 = (_866 + (-0.039999999105930328369140625)) * _876;
    float _885 = (_867 + (-0.039999999105930328369140625)) * _876;
    float _886 = (_868 + (-0.039999999105930328369140625)) * _876;
    float _887 = _884 + 0.039999999105930328369140625;
    float _888 = _885 + 0.039999999105930328369140625;
    float _889 = _886 + 0.039999999105930328369140625;
    vec4 _898 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _691, cbSceneParam._m0[86u].y * _692));
    float _901 = _898.x * TEXCOORD_4;
    float _902 = dot(vec3(_588, _589, _590), vec3(_671, _672, _673));
    float _905 = _902 * 2.0;
    float _909 = (_905 * _588) - _671;
    float _910 = (_905 * _589) - _672;
    float _911 = (_905 * _590) - _673;
    float _915 = abs(dot(vec3(_671, _672, _673), vec3(_588, _589, _590)));
    float _4183 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
    float _917 = sqrt(_769);
    float _929 = exp2((_917 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_917 * 3.0));
    float _935 = (1.0 - _929) * ((_917 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _936 = _929 * _917;
    float _964 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _968 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _972 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1301;
    float _1303;
    float _1304;
    float _1305;
    float _1306;
    float _1307;
    float _1308;
    float _1309;
    float _1310;
    float _1311;
    float _1312;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1028 = fma(_972, cbModelParam._m0[26u].z, fma(_968, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _964));
        float _1032 = fma(_972, cbModelParam._m0[27u].z, fma(_968, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _964));
        float _1036 = fma(_972, cbModelParam._m0[28u].z, fma(_968, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _964));
        float _1059 = _964 + _588;
        float _1060 = _968 + _589;
        float _1061 = _972 + _590;
        float _1071 = fma(_1061, cbModelParam._m0[26u].z, fma(_1060, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1059)) - _1028;
        float _1072 = fma(_1061, cbModelParam._m0[27u].z, fma(_1060, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1059)) - _1032;
        float _1073 = fma(_1061, cbModelParam._m0[28u].z, fma(_1060, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1059)) - _1036;
        float _1077 = inversesqrt(dot(vec3(_1071, _1072, _1073), vec3(_1071, _1072, _1073)));
        float _1090 = ((_1077 * _1071) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1028 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1091 = ((_1077 * _1072) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1032 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1092 = ((_1077 * _1073) / cbModelParam._m0[34u].z) + ((((((_1036 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1095 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1090, _1091, _1092), 0.0);
        vec4 _1102 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1090, _1091, _1092), 0.0);
        vec4 _1109 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1090, _1091, _1092), 0.0);
        vec4 _1116 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1090, _1091, _1092), 0.0);
        float _1129 = exp2((_1095.w + (-0.5)) * 20.0) * 2.0;
        float _1130 = _1129 * (_1095.x + (-0.5));
        float _1131 = _1129 * (_1095.y + (-0.5));
        float _1132 = _1129 * (_1095.z + (-0.5));
        float _1139 = exp2((_1102.w + (-0.5)) * 20.0) * 2.0;
        float _1140 = _1139 * (_1102.x + (-0.5));
        float _1141 = _1139 * (_1102.y + (-0.5));
        float _1142 = _1139 * (_1102.z + (-0.5));
        float _1149 = exp2((_1109.w + (-0.5)) * 20.0) * 2.0;
        float _1150 = _1149 * (_1109.x + (-0.5));
        float _1151 = _1149 * (_1109.y + (-0.5));
        float _1152 = _1149 * (_1109.z + (-0.5));
        float _1159 = exp2((_1116.w + (-0.5)) * 20.0) * 2.0;
        float _1160 = _1159 * (_1116.x + (-0.5));
        float _1161 = _1159 * (_1116.y + (-0.5));
        float _1162 = _1159 * (_1116.z + (-0.5));
        float _1163 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1164 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
        float _1165 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
        float _1166 = _1130 * 0.5;
        float _1167 = _1140 * 0.5;
        float _1168 = _1150 * 0.5;
        float _1169 = dot(vec3(_1166, _1167, _1168), vec3(_1166, _1167, _1168));
        float _1174 = (_1169 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1169);
        float _1183 = (dot(vec3(_588, _589, _590), vec3(_1174 * _1166, _1174 * _1167, _1174 * _1168)) + 1.0) * 0.5;
        float _4209 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1193 = sqrt(((_1167 * _1167) + (_1166 * _1166)) + (_1168 * _1168)) / (_1163 + 9.9999997473787516355514526367188e-06);
        float _4220 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
        float _1194 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
        float _1195 = _1194 * 2.0;
        float _1199 = (1.0 - _1194) / (_1194 + 1.0);
        float _4231 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
        float _1200 = isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0));
        float _1209 = ((((1.0 - _1200) * (_1195 + 2.0)) * exp2(log2(isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0))) * (_1195 + 1.0))) + _1200) * _1163;
        float _1210 = _1131 * 0.5;
        float _1211 = _1141 * 0.5;
        float _1212 = _1151 * 0.5;
        float _1213 = dot(vec3(_1210, _1211, _1212), vec3(_1210, _1211, _1212));
        float _1218 = (_1213 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1213);
        float _1226 = (dot(vec3(_588, _589, _590), vec3(_1218 * _1210, _1218 * _1211, _1218 * _1212)) + 1.0) * 0.5;
        float _4242 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
        float _1235 = sqrt(((_1211 * _1211) + (_1210 * _1210)) + (_1212 * _1212)) / (_1164 + 9.9999997473787516355514526367188e-06);
        float _4253 = isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0));
        float _1236 = isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0));
        float _1237 = _1236 * 2.0;
        float _1241 = (1.0 - _1236) / (_1236 + 1.0);
        float _4264 = isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0));
        float _1242 = isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0));
        float _1251 = ((((1.0 - _1242) * (_1237 + 2.0)) * exp2(log2(isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0))) * (_1237 + 1.0))) + _1242) * _1164;
        float _1252 = _1132 * 0.5;
        float _1253 = _1142 * 0.5;
        float _1254 = _1152 * 0.5;
        float _1255 = dot(vec3(_1252, _1253, _1254), vec3(_1252, _1253, _1254));
        float _1260 = (_1255 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1255);
        float _1268 = (dot(vec3(_588, _589, _590), vec3(_1260 * _1252, _1260 * _1253, _1260 * _1254)) + 1.0) * 0.5;
        float _4275 = isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0));
        float _1277 = sqrt(((_1253 * _1253) + (_1252 * _1252)) + (_1254 * _1254)) / (_1165 + 9.9999997473787516355514526367188e-06);
        float _4286 = isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0));
        float _1278 = isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0));
        float _1279 = _1278 * 2.0;
        float _1283 = (1.0 - _1278) / (_1278 + 1.0);
        float _4297 = isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0));
        float _1284 = isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0));
        float _1293 = ((((1.0 - _1284) * (_1279 + 2.0)) * exp2(log2(isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0))) * (_1279 + 1.0))) + _1284) * _1165;
        _1301 = _1132;
        _1303 = _1131;
        _1304 = _1130;
        _1305 = _1142;
        _1306 = _1141;
        _1307 = _1140;
        _1308 = _1152;
        _1309 = _1151;
        _1310 = _1150;
        _1311 = _1165;
        _1312 = _1164;
        _1313 = _1163;
        _1314 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0)));
        _1315 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1251 : (isnan(_1251) ? 0.0 : max(_1251, 0.0)));
        _1316 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1293 : (isnan(_1293) ? 0.0 : max(_1293, 0.0)));
    }
    else
    {
        _1301 = _1302;
        _1303 = _1302;
        _1304 = _1302;
        _1305 = _1302;
        _1306 = _1302;
        _1307 = _1302;
        _1308 = _1302;
        _1309 = _1302;
        _1310 = _1302;
        _1311 = _1302;
        _1312 = _1302;
        _1313 = _1302;
        _1314 = 0.0;
        _1315 = 0.0;
        _1316 = 0.0;
    }
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    float _1628;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1345 = fma(_972, cbModelParam._m0[30u].z, fma(_968, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _964));
        float _1349 = fma(_972, cbModelParam._m0[31u].z, fma(_968, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _964));
        float _1353 = fma(_972, cbModelParam._m0[32u].z, fma(_968, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _964));
        float _1376 = _964 + _588;
        float _1377 = _968 + _589;
        float _1378 = _972 + _590;
        float _1388 = fma(_1378, cbModelParam._m0[30u].z, fma(_1377, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1376)) - _1345;
        float _1389 = fma(_1378, cbModelParam._m0[31u].z, fma(_1377, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1376)) - _1349;
        float _1390 = fma(_1378, cbModelParam._m0[32u].z, fma(_1377, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1376)) - _1353;
        float _1394 = inversesqrt(dot(vec3(_1388, _1389, _1390), vec3(_1388, _1389, _1390)));
        float _1407 = ((_1394 * _1388) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1345 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1408 = ((_1394 * _1389) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1349 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1409 = ((_1394 * _1390) / cbModelParam._m0[35u].z) + ((((((_1353 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1411 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1407, _1408, _1409), 0.0);
        vec4 _1418 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1407, _1408, _1409), 0.0);
        vec4 _1425 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1407, _1408, _1409), 0.0);
        vec4 _1432 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1407, _1408, _1409), 0.0);
        float _1444 = exp2((_1411.w + (-0.5)) * 20.0) * 2.0;
        float _1445 = _1444 * (_1411.x + (-0.5));
        float _1446 = _1444 * (_1411.y + (-0.5));
        float _1447 = _1444 * (_1411.z + (-0.5));
        float _1454 = exp2((_1418.w + (-0.5)) * 20.0) * 2.0;
        float _1455 = _1454 * (_1418.x + (-0.5));
        float _1456 = _1454 * (_1418.y + (-0.5));
        float _1457 = _1454 * (_1418.z + (-0.5));
        float _1464 = exp2((_1425.w + (-0.5)) * 20.0) * 2.0;
        float _1465 = _1464 * (_1425.x + (-0.5));
        float _1466 = _1464 * (_1425.y + (-0.5));
        float _1467 = _1464 * (_1425.z + (-0.5));
        float _1474 = exp2((_1432.w + (-0.5)) * 20.0) * 2.0;
        float _1475 = _1474 * (_1432.x + (-0.5));
        float _1476 = _1474 * (_1432.y + (-0.5));
        float _1477 = _1474 * (_1432.z + (-0.5));
        float _1478 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1479 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1480 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1481 = _1445 * 0.5;
        float _1482 = _1455 * 0.5;
        float _1483 = _1465 * 0.5;
        float _1484 = dot(vec3(_1481, _1482, _1483), vec3(_1481, _1482, _1483));
        float _1489 = (_1484 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1484);
        float _1497 = (dot(vec3(_588, _589, _590), vec3(_1489 * _1481, _1489 * _1482, _1489 * _1483)) + 1.0) * 0.5;
        float _4338 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1506 = sqrt(((_1482 * _1482) + (_1481 * _1481)) + (_1483 * _1483)) / (_1478 + 9.9999997473787516355514526367188e-06);
        float _4349 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1507 = isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0));
        float _1508 = _1507 * 2.0;
        float _1512 = (1.0 - _1507) / (_1507 + 1.0);
        float _4360 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
        float _1513 = isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0));
        float _1522 = ((((1.0 - _1513) * (_1508 + 2.0)) * exp2(log2(isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0))) * (_1508 + 1.0))) + _1513) * _1478;
        float _1523 = _1446 * 0.5;
        float _1524 = _1456 * 0.5;
        float _1525 = _1466 * 0.5;
        float _1526 = dot(vec3(_1523, _1524, _1525), vec3(_1523, _1524, _1525));
        float _1531 = (_1526 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1526);
        float _1539 = (dot(vec3(_588, _589, _590), vec3(_1531 * _1523, _1531 * _1524, _1531 * _1525)) + 1.0) * 0.5;
        float _4371 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0));
        float _1548 = sqrt(((_1524 * _1524) + (_1523 * _1523)) + (_1525 * _1525)) / (_1479 + 9.9999997473787516355514526367188e-06);
        float _4382 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
        float _1549 = isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0));
        float _1550 = _1549 * 2.0;
        float _1554 = (1.0 - _1549) / (_1549 + 1.0);
        float _4393 = isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0));
        float _1555 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
        float _1564 = ((((1.0 - _1555) * (_1550 + 2.0)) * exp2(log2(isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0))) * (_1550 + 1.0))) + _1555) * _1479;
        float _1565 = _1447 * 0.5;
        float _1566 = _1457 * 0.5;
        float _1567 = _1467 * 0.5;
        float _1568 = dot(vec3(_1565, _1566, _1567), vec3(_1565, _1566, _1567));
        float _1573 = (_1568 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1568);
        float _1581 = (dot(vec3(_588, _589, _590), vec3(_1573 * _1565, _1573 * _1566, _1573 * _1567)) + 1.0) * 0.5;
        float _4404 = isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0));
        float _1590 = sqrt(((_1566 * _1566) + (_1565 * _1565)) + (_1567 * _1567)) / (_1480 + 9.9999997473787516355514526367188e-06);
        float _4415 = isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0));
        float _1591 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
        float _1592 = _1591 * 2.0;
        float _1596 = (1.0 - _1591) / (_1591 + 1.0);
        float _4426 = isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0));
        float _1597 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
        float _1606 = ((((1.0 - _1597) * (_1592 + 2.0)) * exp2(log2(isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0))) * (_1592 + 1.0))) + _1597) * _1480;
        _1614 = _1447;
        _1615 = _1446;
        _1616 = _1445;
        _1617 = _1457;
        _1618 = _1456;
        _1619 = _1455;
        _1620 = _1467;
        _1621 = _1466;
        _1622 = _1465;
        _1623 = _1480;
        _1624 = _1479;
        _1625 = _1478;
        _1626 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0)));
        _1627 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0)));
        _1628 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0)));
    }
    else
    {
        _1614 = _1302;
        _1615 = _1302;
        _1616 = _1302;
        _1617 = _1302;
        _1618 = _1302;
        _1619 = _1302;
        _1620 = _1302;
        _1621 = _1302;
        _1622 = _1302;
        _1623 = _1302;
        _1624 = _1302;
        _1625 = _1302;
        _1626 = 0.0;
        _1627 = 0.0;
        _1628 = 0.0;
    }
    float _1638 = (cbModelParam._m0[1u].x * (_1626 - _1314)) + _1314;
    float _1639 = (cbModelParam._m0[1u].x * (_1627 - _1315)) + _1315;
    float _1640 = (cbModelParam._m0[1u].x * (_1628 - _1316)) + _1316;
    float _1661 = fma(_1640, cbSceneParam._m0[89u].z, fma(_1639, cbSceneParam._m0[89u].y, _1638 * cbSceneParam._m0[89u].x));
    float _1664 = fma(_1640, cbSceneParam._m0[90u].z, fma(_1639, cbSceneParam._m0[90u].y, _1638 * cbSceneParam._m0[90u].x));
    float _1667 = fma(_1640, cbSceneParam._m0[91u].z, fma(_1639, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1638));
    float _1682 = _909 * 0.5;
    float _1683 = _910 * 0.5;
    float _1684 = _911 * 0.5;
    float _1685 = dot(vec4(_1682, _1683, _1684, 1.0), vec4(_1616, _1619, _1622, _1625));
    float _1688 = dot(vec4(_1682, _1683, _1684, 1.0), vec4(_1615, _1618, _1621, _1624));
    float _1691 = dot(vec4(_1682, _1683, _1684, 1.0), vec4(_1614, _1617, _1620, _1623));
    float _1722;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1698 = dot(vec4(_1682, _1683, _1684, 1.0), vec4(_1301, _1305, _1308, _1311));
        float _1702 = dot(vec4(_1682, _1683, _1684, 1.0), vec4(_1303, _1306, _1309, _1312));
        float _1706 = dot(vec4(_1682, _1683, _1684, 1.0), vec4(_1304, _1307, _1310, _1313));
        float _1713 = dot(vec4(cbModelParam._m0[39u]), vec4(_1682, _1683, _1684, 1.0));
        _1722 = dot(vec3(isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0)), isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0)), isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1713) ? 0.0 : (isnan(0.0) ? _1713 : max(0.0, _1713))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1722 = 1.0;
    }
    float _1733;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1724 = dot(vec4(cbModelParam._m0[40u]), vec4(_1682, _1683, _1684, 1.0));
        _1733 = dot(vec3(isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0)), isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0)), isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1724) ? 0.0 : (isnan(0.0) ? _1724 : max(0.0, _1724))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1733 = 1.0;
    }
    float _1737 = (_1733 * cbModelParam._m0[1u].x) + (_1722 * (1.0 - cbModelParam._m0[1u].x));
    float _1747 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _769);
    float _1748 = isnan(_1747) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1747 : min(cbModelParam._m0[25u].z, _1747));
    float _1828;
    float _1830;
    float _1832;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1795 = fma(_972, cbModelParam._m0[13u].z, fma(_968, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _964)) + cbModelParam._m0[13u].w;
        float _1799 = fma(_972, cbModelParam._m0[14u].z, fma(_968, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _964)) + cbModelParam._m0[14u].w;
        float _1803 = fma(_972, cbModelParam._m0[15u].z, fma(_968, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _964)) + cbModelParam._m0[15u].w;
        float _1806 = fma(_911, cbModelParam._m0[13u].z, fma(_910, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _909));
        float _1809 = fma(_911, cbModelParam._m0[14u].z, fma(_910, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _909));
        float _1812 = fma(_911, cbModelParam._m0[15u].z, fma(_910, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _909));
        float _1840;
        if (_1806 > 0.0)
        {
            _1840 = abs((1.0 - _1795) / _1806);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1806 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1795 + 1.0) / _1806);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1840 = frontier_phi_19_17_ladder;
        }
        float _2013;
        if (_1809 > 0.0)
        {
            _2013 = abs((1.0 - _1799) / _1809);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1809 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1799 + 1.0) / _1809);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2013 = frontier_phi_28_24_ladder;
        }
        float _2308;
        if (_1812 > 0.0)
        {
            _2308 = abs((1.0 - _1803) / _1812);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1812 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1803 + 1.0) / _1812);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2308 = frontier_phi_40_35_ladder;
        }
        float _2310 = isnan(_2013) ? _1840 : (isnan(_1840) ? _2013 : min(_1840, _2013));
        float _2311 = isnan(_2308) ? _2310 : (isnan(_2310) ? _2308 : min(_2310, _2308));
        float _2315 = (_2311 * _1806) + _1795;
        float _2316 = (_2311 * _1809) + _1799;
        float _2317 = (_2311 * _1812) + _1803;
        float _2318 = _2311 * 9.9999997473787516355514526367188e-05;
        float _2320 = (-1.0) - _2318;
        float _2322 = _2318 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2317 > _2322) || ((_2317 < _2320) || ((_2316 > _2322) || ((_2316 < _2320) || ((_2315 < _2320) || (_2315 > _2322))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2462 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2317, cbModelParam._m0[9u].z, fma(_2316, cbModelParam._m0[9u].y, _2315 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2317, cbModelParam._m0[10u].z, fma(_2316, cbModelParam._m0[10u].y, _2315 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2317, cbModelParam._m0[11u].z, fma(_2316, cbModelParam._m0[11u].y, _2315 * cbModelParam._m0[11u].x))), _1748);
            frontier_phi_18_40_ladder = _2462.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2462.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2462.x * cbModelParam._m0[1u].y;
        }
        _1828 = frontier_phi_18_40_ladder_2;
        _1830 = frontier_phi_18_40_ladder_1;
        _1832 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1816 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_909, _910, _911), _1748);
        _1828 = _1816.x * cbModelParam._m0[1u].y;
        _1830 = _1816.y * cbModelParam._m0[1u].y;
        _1832 = _1816.z * cbModelParam._m0[1u].y;
    }
    float _1836 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _769);
    float _1837 = isnan(_1836) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1836 : min(cbModelParam._m0[25u].w, _1836));
    float _1928;
    float _1930;
    float _1932;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1892 = fma(_972, cbModelParam._m0[21u].z, fma(_968, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _964)) + cbModelParam._m0[21u].w;
        float _1896 = fma(_972, cbModelParam._m0[22u].z, fma(_968, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _964)) + cbModelParam._m0[22u].w;
        float _1900 = fma(_972, cbModelParam._m0[23u].z, fma(_968, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _964)) + cbModelParam._m0[23u].w;
        float _1903 = fma(_911, cbModelParam._m0[21u].z, fma(_910, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _909));
        float _1906 = fma(_911, cbModelParam._m0[22u].z, fma(_910, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _909));
        float _1909 = fma(_911, cbModelParam._m0[23u].z, fma(_910, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _909));
        float _2018;
        if (_1903 > 0.0)
        {
            _2018 = abs((1.0 - _1892) / _1903);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1903 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1892 + 1.0) / _1903);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2018 = frontier_phi_30_26_ladder;
        }
        float _2335;
        if (_1906 > 0.0)
        {
            _2335 = abs((1.0 - _1896) / _1906);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1906 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1896 + 1.0) / _1906);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2335 = frontier_phi_42_37_ladder;
        }
        float _2673;
        if (_1909 > 0.0)
        {
            _2673 = abs((1.0 - _1900) / _1909);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_1909 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_1900 + 1.0) / _1909);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2673 = frontier_phi_52_49_ladder;
        }
        float _2675 = isnan(_2335) ? _2018 : (isnan(_2018) ? _2335 : min(_2018, _2335));
        float _2676 = isnan(_2673) ? _2675 : (isnan(_2675) ? _2673 : min(_2675, _2673));
        float _2680 = (_2676 * _1903) + _1892;
        float _2681 = (_2676 * _1906) + _1896;
        float _2682 = (_2676 * _1909) + _1900;
        float _2683 = _2676 * 9.9999997473787516355514526367188e-05;
        float _2684 = (-1.0) - _2683;
        float _2686 = _2683 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2682 > _2686) || ((_2682 < _2684) || ((_2681 > _2686) || ((_2681 < _2684) || ((_2680 < _2684) || (_2680 > _2686))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2804 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2682, cbModelParam._m0[17u].z, fma(_2681, cbModelParam._m0[17u].y, _2680 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2682, cbModelParam._m0[18u].z, fma(_2681, cbModelParam._m0[18u].y, _2680 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2682, cbModelParam._m0[19u].z, fma(_2681, cbModelParam._m0[19u].y, _2680 * cbModelParam._m0[19u].x))), _1837);
            frontier_phi_27_52_ladder = _2804.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2804.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2804.x * cbModelParam._m0[1u].z;
        }
        _1928 = frontier_phi_27_52_ladder_2;
        _1930 = frontier_phi_27_52_ladder_1;
        _1932 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1912 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_909, _910, _911), _1837);
        _1928 = _1912.x * cbModelParam._m0[1u].z;
        _1930 = _1912.y * cbModelParam._m0[1u].z;
        _1932 = _1912.z * cbModelParam._m0[1u].z;
    }
    float _1945 = (((_935 * _887) + _936) * _901) * ((cbModelParam._m0[1u].w * (_1928 - _1828)) + _1828);
    float _1947 = (((_935 * _888) + _936) * _901) * ((cbModelParam._m0[1u].w * (_1930 - _1830)) + _1830);
    float _1949 = (((_935 * _889) + _936) * _901) * ((cbModelParam._m0[1u].w * (_1932 - _1832)) + _1832);
    float _1952 = fma(_1949, cbSceneParam._m0[89u].z, fma(_1947, cbSceneParam._m0[89u].y, _1945 * cbSceneParam._m0[89u].x));
    float _1955 = fma(_1949, cbSceneParam._m0[90u].z, fma(_1947, cbSceneParam._m0[90u].y, _1945 * cbSceneParam._m0[90u].x));
    float _1958 = fma(_1949, cbSceneParam._m0[91u].z, fma(_1947, cbSceneParam._m0[91u].y, _1945 * cbSceneParam._m0[91u].x));
    float _1992 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1996 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2000 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2004 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2005 = _1992 / _2004;
    float _2006 = _1996 / _2004;
    float _2007 = _2000 / _2004;
    float _2154;
    float _2155;
    float _2156;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2034 = ((uint(_2007 > cbSceneParam._m0[59u].y) + uint(_2007 > cbSceneParam._m0[59u].x)) + uint(_2007 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2035 = _2034 + 43u;
        uint _2043 = _2034 + 44u;
        uint _2051 = _2034 + 45u;
        uint _2059 = _2034 + 46u;
        float _2070 = fma(_2004, cbSceneParam._m0[_2035].w, fma(_2000, cbSceneParam._m0[_2035].z, fma(_1996, cbSceneParam._m0[_2035].y, _1992 * cbSceneParam._m0[_2035].x)));
        float _2074 = fma(_2004, cbSceneParam._m0[_2043].w, fma(_2000, cbSceneParam._m0[_2043].z, fma(_1996, cbSceneParam._m0[_2043].y, _1992 * cbSceneParam._m0[_2043].x)));
        float _2082 = fma(_2004, cbSceneParam._m0[_2059].w, fma(_2000, cbSceneParam._m0[_2059].z, fma(_1996, cbSceneParam._m0[_2059].y, _1992 * cbSceneParam._m0[_2059].x)));
        float _2087 = cbSceneParam._m0[33u].z * _2082;
        float _2089 = cbSceneParam._m0[33u].w * _2082;
        float _2092 = fma(_2004, cbSceneParam._m0[_2051].w, fma(_2000, cbSceneParam._m0[_2051].z, fma(_1996, cbSceneParam._m0[_2051].y, _1992 * cbSceneParam._m0[_2051].x))) / _2082;
        float _2140 = (cbSceneParam._m0[33u].x - sqrt(((_2006 * _2006) + (_2005 * _2005)) + (_2007 * _2007))) * cbSceneParam._m0[33u].y;
        float _4552 = isnan(0.0) ? _2140 : (isnan(_2140) ? 0.0 : max(_2140, 0.0));
        float _2147 = (isnan(1.0) ? _4552 : (isnan(_4552) ? 1.0 : min(_4552, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2087 + _2070) / _2082, (_2089 + _2074) / _2082), _2092), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2089 + _2070) / _2082, (_2074 - _2087) / _2082), _2092), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2070 - _2087) / _2082, (_2074 - _2089) / _2082), _2092), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2070 - _2089) / _2082, (_2087 + _2074) / _2082), _2092), 0.0)).x), vec4(0.25)));
        _2154 = 1.0 - (_2147 * cbSceneParam._m0[34u].x);
        _2155 = 1.0 - (_2147 * cbSceneParam._m0[34u].y);
        _2156 = 1.0 - (_2147 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2154 = 1.0;
        _2155 = 1.0;
        _2156 = 1.0;
    }
    float _2220;
    float _2222;
    float _2224;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2208 = fma(_2004, cbSceneParam._m0[63u].w, fma(_2000, cbSceneParam._m0[63u].z, fma(_1996, cbSceneParam._m0[63u].y, _1992 * cbSceneParam._m0[63u].x)));
        float _2209 = fma(_2004, cbSceneParam._m0[60u].w, fma(_2000, cbSceneParam._m0[60u].z, fma(_1996, cbSceneParam._m0[60u].y, _1992 * cbSceneParam._m0[60u].x))) / _2208;
        float _2210 = fma(_2004, cbSceneParam._m0[61u].w, fma(_2000, cbSceneParam._m0[61u].z, fma(_1996, cbSceneParam._m0[61u].y, _1992 * cbSceneParam._m0[61u].x))) / _2208;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2209 >= cbSceneParam._m0[64u].x) && (_2210 >= cbSceneParam._m0[64u].y)) && (_2209 <= cbSceneParam._m0[64u].z)) && (_2210 <= cbSceneParam._m0[64u].w))
        {
            float _2348 = fma(_2004, cbSceneParam._m0[62u].w, fma(_2000, cbSceneParam._m0[62u].z, fma(_1996, cbSceneParam._m0[62u].y, _1992 * cbSceneParam._m0[62u].x))) / _2208;
            float _2352 = isnan(cbSceneParam._m0[41u].w) ? _2348 : (isnan(_2348) ? cbSceneParam._m0[41u].w : max(_2348, cbSceneParam._m0[41u].w));
            float _2395 = (cbSceneParam._m0[33u].x - sqrt(((_2006 * _2006) + (_2005 * _2005)) + (_2007 * _2007))) * cbSceneParam._m0[33u].y;
            float _4568 = isnan(0.0) ? _2395 : (isnan(_2395) ? 0.0 : max(_2395, 0.0));
            float _2402 = (isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2209, cbSceneParam._m0[33u].w + _2210), _2352), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2209, _2210 - cbSceneParam._m0[33u].z), _2352), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2209 - cbSceneParam._m0[33u].z, _2210 - cbSceneParam._m0[33u].w), _2352), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2209 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2210), _2352), 0.0)).x), vec4(0.25)));
            float _2406 = 1.0 - (_2402 * cbSceneParam._m0[34u].x);
            float _2407 = 1.0 - (_2402 * cbSceneParam._m0[34u].y);
            float _2408 = 1.0 - (_2402 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2407) ? _2155 : (isnan(_2155) ? _2407 : min(_2155, _2407));
            frontier_phi_39_38_ladder_1 = isnan(_2406) ? _2154 : (isnan(_2154) ? _2406 : min(_2154, _2406));
            frontier_phi_39_38_ladder_2 = isnan(_2408) ? _2156 : (isnan(_2156) ? _2408 : min(_2156, _2408));
        }
        else
        {
            frontier_phi_39_38_ladder = _2155;
            frontier_phi_39_38_ladder_1 = _2154;
            frontier_phi_39_38_ladder_2 = _2156;
        }
        _2220 = frontier_phi_39_38_ladder_1;
        _2222 = frontier_phi_39_38_ladder;
        _2224 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _2220 = _2154;
        _2222 = _2155;
        _2224 = _2156;
    }
    uvec4 _2229 = floatBitsToUint(cbInstanceData._m0[_793 + 5u]);
    uint _2231 = _2229.x * 14u;
    uint _2232 = _2231 + 13u;
    float _2239 = _901 + (-1.0);
    float _2244 = (cbLight._m0[_2232].x * _2239) + 1.0;
    float _2245 = (cbLight._m0[_2232].y * _2239) + 1.0;
    float _2246 = (cbLight._m0[_2232].z * _2239) + 1.0;
    float _2247 = (cbLight._m0[_2232].w * _2239) + 1.0;
    uint _2248 = _2231 + 5u;
    float _2254 = isnan(1.0) ? _2245 : (isnan(_2245) ? 1.0 : min(_2245, 1.0));
    uint _2258 = _2231 + 4u;
    float _2267 = isnan(1.0) ? _2244 : (isnan(_2244) ? 1.0 : min(_2244, 1.0));
    uint _2271 = _2231 | 1u;
    float _2282 = dot(vec3(cbLight._m0[_2231].xyz), vec3(_588, _589, _590));
    float _2285 = dot(vec3(cbLight._m0[_2271].xyz), vec3(_588, _589, _590));
    float _4604 = isnan(0.0) ? _2282 : (isnan(_2282) ? 0.0 : max(_2282, 0.0));
    float _4615 = isnan(0.0) ? _2285 : (isnan(_2285) ? 0.0 : max(_2285, 0.0));
    float _2290 = (isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0))) * 0.3183098733425140380859375;
    float _2292 = (isnan(1.0) ? _4615 : (isnan(_4615) ? 1.0 : min(_4615, 1.0))) * 0.3183098733425140380859375;
    float _2299 = ((cbLight._m0[_2248].x * _2254) * _2292) + (((cbLight._m0[_2258].x * _2220) * _2267) * _2290);
    float _2300 = ((_2254 * cbLight._m0[_2248].y) * _2292) + (((cbLight._m0[_2258].y * _2222) * _2267) * _2290);
    float _2301 = ((_2254 * cbLight._m0[_2248].z) * _2292) + (((cbLight._m0[_2258].z * _2224) * _2267) * _2290);
    uvec4 _2305 = floatBitsToUint(cbLight._m0[_2231 + 12u]);
    bool _2307 = _2305.x == 0u;
    float _2409;
    float _2411;
    float _2413;
    if (_2307)
    {
        _2409 = _2299;
        _2411 = _2300;
        _2413 = _2301;
    }
    else
    {
        uint _2417 = _2231 + 6u;
        float _2433 = (dot(vec3(cbLight._m0[_2231 + 2u].xyz), vec3(_588, _589, _590)) * 0.5) + 0.5;
        float _2434 = _2433 * _2433;
        float _4626 = isnan(0.0) ? _2434 : (isnan(_2434) ? 0.0 : max(_2434, 0.0));
        float _2435 = isnan(1.0) ? _4626 : (isnan(_4626) ? 1.0 : min(_4626, 1.0));
        float _2436 = isnan(1.0) ? _2246 : (isnan(_2246) ? 1.0 : min(_2246, 1.0));
        _2409 = (((cbLight._m0[_2417].x * 0.3183098733425140380859375) * _2435) * _2436) + _2299;
        _2411 = (((cbLight._m0[_2417].y * 0.3183098733425140380859375) * _2435) * _2436) + _2300;
        _2413 = (((cbLight._m0[_2417].z * 0.3183098733425140380859375) * _2435) * _2436) + _2301;
    }
    bool _2416 = _2305.y == 0u;
    float _2471;
    float _2473;
    float _2475;
    if (_2416)
    {
        _2471 = _2409;
        _2473 = _2411;
        _2475 = _2413;
    }
    else
    {
        uint _2644 = _2231 + 7u;
        float _2660 = (dot(vec3(cbLight._m0[_2231 + 3u].xyz), vec3(_588, _589, _590)) * 0.5) + 0.5;
        float _2661 = _2660 * _2660;
        float _4642 = isnan(0.0) ? _2661 : (isnan(_2661) ? 0.0 : max(_2661, 0.0));
        float _2662 = isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0));
        float _2663 = isnan(1.0) ? _2247 : (isnan(_2247) ? 1.0 : min(_2247, 1.0));
        _2471 = (((cbLight._m0[_2644].x * 0.3183098733425140380859375) * _2662) * _2663) + _2409;
        _2473 = (((cbLight._m0[_2644].y * 0.3183098733425140380859375) * _2662) * _2663) + _2411;
        _2475 = (((cbLight._m0[_2644].z * 0.3183098733425140380859375) * _2662) * _2663) + _2413;
    }
    uint _2478 = _2231 + 8u;
    float _2491 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2231].w)) * _769) * 0.949999988079071044921875);
    float _2492 = _2491 * _2491;
    float _2493 = cbLight._m0[_2231].x + _671;
    float _2494 = cbLight._m0[_2231].y + _672;
    float _2495 = cbLight._m0[_2231].z + _673;
    float _2499 = inversesqrt(dot(vec3(_2493, _2494, _2495), vec3(_2493, _2494, _2495)));
    float _2500 = _2499 * _2493;
    float _2501 = _2499 * _2494;
    float _2502 = _2499 * _2495;
    float _2503 = dot(vec3(_588, _589, _590), vec3(cbLight._m0[_2231].xyz));
    float _4658 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0));
    float _2506 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
    float _4669 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
    float _2507 = isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0));
    float _2508 = dot(vec3(_588, _589, _590), vec3(_2500, _2501, _2502));
    float _4680 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
    float _2511 = isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0));
    float _2512 = dot(vec3(cbLight._m0[_2231].xyz), vec3(_2500, _2501, _2502));
    float _4691 = isnan(0.0) ? _2512 : (isnan(_2512) ? 0.0 : max(_2512, 0.0));
    float _2516 = _2492 * _2492;
    float _2520 = ((_2511 * _2511) * (_2516 + (-1.0))) + 1.0;
    float _2528 = exp2(log2(1.0 - (isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0)))) * 5.0);
    float _2529 = 0.959999978542327880859375 - _884;
    float _2531 = 0.959999978542327880859375 - _885;
    float _2532 = 0.959999978542327880859375 - _886;
    float _2539 = 1.0 - _2492;
    float _2550 = (0.5 / (((_2507 * ((_2506 * _2539) + _2492)) + 9.9999999392252902907785028219223e-09) + (((_2507 * _2539) + _2492) * _2506))) * _2506;
    float _4702 = isnan(0.0) ? _2550 : (isnan(_2550) ? 0.0 : max(_2550, 0.0));
    float _2552 = (isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0))) * (_2516 / ((_2520 * _2520) * 3.141590118408203125));
    uint _2566 = _2231 + 9u;
    float _2577 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2271].w)) * _769) * 0.949999988079071044921875);
    float _2578 = _2577 * _2577;
    float _2579 = cbLight._m0[_2271].x + _671;
    float _2580 = cbLight._m0[_2271].y + _672;
    float _2581 = cbLight._m0[_2271].z + _673;
    float _2585 = inversesqrt(dot(vec3(_2579, _2580, _2581), vec3(_2579, _2580, _2581)));
    float _2586 = _2585 * _2579;
    float _2587 = _2585 * _2580;
    float _2588 = _2585 * _2581;
    float _2589 = dot(vec3(_588, _589, _590), vec3(cbLight._m0[_2271].xyz));
    float _4713 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0));
    float _2592 = isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0));
    float _2593 = dot(vec3(_588, _589, _590), vec3(_2586, _2587, _2588));
    float _4724 = isnan(0.0) ? _2593 : (isnan(_2593) ? 0.0 : max(_2593, 0.0));
    float _2596 = isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0));
    float _2597 = dot(vec3(cbLight._m0[_2271].xyz), vec3(_2586, _2587, _2588));
    float _4735 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
    float _2601 = _2578 * _2578;
    float _2605 = ((_2596 * _2596) * (_2601 + (-1.0))) + 1.0;
    float _2612 = exp2(log2(1.0 - (isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0)))) * 5.0);
    float _2619 = 1.0 - _2578;
    float _2629 = (0.5 / (((_2507 * ((_2592 * _2619) + _2578)) + 9.9999999392252902907785028219223e-09) + (((_2507 * _2619) + _2578) * _2592))) * _2592;
    float _4746 = isnan(0.0) ? _2629 : (isnan(_2629) ? 0.0 : max(_2629, 0.0));
    float _2631 = (isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0))) * (_2601 / ((_2605 * _2605) * 3.141590118408203125));
    float _2641 = (((((_2612 * _2529) + _887) * cbLight._m0[_2566].x) * _2631) * _2254) + ((((cbLight._m0[_2478].x * _2220) * ((_2528 * _2529) + _887)) * _2552) * _2267);
    float _2642 = (((((_2612 * _2531) + _888) * cbLight._m0[_2566].y) * _2631) * _2254) + ((((cbLight._m0[_2478].y * _2222) * ((_2528 * _2531) + _888)) * _2552) * _2267);
    float _2643 = (((((_2612 * _2532) + _889) * cbLight._m0[_2566].z) * _2631) * _2254) + ((((cbLight._m0[_2478].z * _2224) * ((_2528 * _2532) + _889)) * _2552) * _2267);
    float _2699;
    float _2701;
    float _2703;
    if (_2307)
    {
        _2699 = _2641;
        _2701 = _2642;
        _2703 = _2643;
    }
    else
    {
        uint _2705 = _2231 + 2u;
        uint _2709 = _2231 + 10u;
        float _2723 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2705].w)) * _769) * 0.949999988079071044921875);
        float _2724 = _2723 * _2723;
        float _2725 = cbLight._m0[_2705].x + _671;
        float _2726 = cbLight._m0[_2705].y + _672;
        float _2727 = cbLight._m0[_2705].z + _673;
        float _2731 = inversesqrt(dot(vec3(_2725, _2726, _2727), vec3(_2725, _2726, _2727)));
        float _2732 = _2731 * _2725;
        float _2733 = _2731 * _2726;
        float _2734 = _2731 * _2727;
        float _2735 = dot(vec3(_588, _589, _590), vec3(cbLight._m0[_2705].xyz));
        float _4757 = isnan(0.0) ? _2735 : (isnan(_2735) ? 0.0 : max(_2735, 0.0));
        float _2738 = isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0));
        float _2739 = dot(vec3(_588, _589, _590), vec3(_2732, _2733, _2734));
        float _4768 = isnan(0.0) ? _2739 : (isnan(_2739) ? 0.0 : max(_2739, 0.0));
        float _2742 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
        float _2743 = dot(vec3(cbLight._m0[_2705].xyz), vec3(_2732, _2733, _2734));
        float _4779 = isnan(0.0) ? _2743 : (isnan(_2743) ? 0.0 : max(_2743, 0.0));
        float _2747 = _2724 * _2724;
        float _2751 = ((_2742 * _2742) * (_2747 + (-1.0))) + 1.0;
        float _2758 = exp2(log2(1.0 - (isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0)))) * 5.0);
        float _2765 = 1.0 - _2724;
        float _2775 = (0.5 / (((_2507 * ((_2738 * _2765) + _2724)) + 9.9999999392252902907785028219223e-09) + (((_2507 * _2765) + _2724) * _2738))) * _2738;
        float _4790 = isnan(0.0) ? _2775 : (isnan(_2775) ? 0.0 : max(_2775, 0.0));
        float _2777 = (isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0))) * (_2747 / ((_2751 * _2751) * 3.141590118408203125));
        float _2778 = isnan(1.0) ? _2246 : (isnan(_2246) ? 1.0 : min(_2246, 1.0));
        _2699 = (((((_2758 * _2529) + _887) * cbLight._m0[_2709].x) * _2777) * _2778) + _2641;
        _2701 = (((((_2758 * _2531) + _888) * cbLight._m0[_2709].y) * _2777) * _2778) + _2642;
        _2703 = (((((_2758 * _2532) + _889) * cbLight._m0[_2709].z) * _2777) * _2778) + _2643;
    }
    float _2809;
    float _2811;
    float _2813;
    if (_2416)
    {
        _2809 = _2699;
        _2811 = _2701;
        _2813 = _2703;
    }
    else
    {
        uint _2820 = _2231 + 3u;
        uint _2824 = _2231 + 11u;
        float _2838 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2820].w)) * _769) * 0.949999988079071044921875);
        float _2839 = _2838 * _2838;
        float _2840 = cbLight._m0[_2820].x + _671;
        float _2841 = cbLight._m0[_2820].y + _672;
        float _2842 = cbLight._m0[_2820].z + _673;
        float _2846 = inversesqrt(dot(vec3(_2840, _2841, _2842), vec3(_2840, _2841, _2842)));
        float _2847 = _2846 * _2840;
        float _2848 = _2846 * _2841;
        float _2849 = _2846 * _2842;
        float _2850 = dot(vec3(_588, _589, _590), vec3(cbLight._m0[_2820].xyz));
        float _4806 = isnan(0.0) ? _2850 : (isnan(_2850) ? 0.0 : max(_2850, 0.0));
        float _2853 = isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0));
        float _2854 = dot(vec3(_588, _589, _590), vec3(_2847, _2848, _2849));
        float _4817 = isnan(0.0) ? _2854 : (isnan(_2854) ? 0.0 : max(_2854, 0.0));
        float _2857 = isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0));
        float _2858 = dot(vec3(cbLight._m0[_2820].xyz), vec3(_2847, _2848, _2849));
        float _4828 = isnan(0.0) ? _2858 : (isnan(_2858) ? 0.0 : max(_2858, 0.0));
        float _2862 = _2839 * _2839;
        float _2866 = ((_2857 * _2857) * (_2862 + (-1.0))) + 1.0;
        float _2873 = exp2(log2(1.0 - (isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0)))) * 5.0);
        float _2880 = 1.0 - _2839;
        float _2890 = (0.5 / (((_2507 * ((_2853 * _2880) + _2839)) + 9.9999999392252902907785028219223e-09) + (((_2507 * _2880) + _2839) * _2853))) * _2853;
        float _4839 = isnan(0.0) ? _2890 : (isnan(_2890) ? 0.0 : max(_2890, 0.0));
        float _2892 = (isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0))) * (_2862 / ((_2866 * _2866) * 3.141590118408203125));
        float _2893 = isnan(1.0) ? _2247 : (isnan(_2247) ? 1.0 : min(_2247, 1.0));
        _2809 = (((((_2873 * _2529) + _887) * cbLight._m0[_2824].x) * _2892) * _2893) + _2699;
        _2811 = (((((_2873 * _2531) + _888) * cbLight._m0[_2824].y) * _2892) * _2893) + _2701;
        _2813 = (((((_2873 * _2532) + _889) * cbLight._m0[_2824].z) * _2892) * _2893) + _2703;
    }
    float _2958;
    float _2960;
    float _2962;
    float _2964;
    float _2966;
    float _2968;
    if (_2229.y == 0u)
    {
        uvec4 _2914 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2915 = _2914.x;
        uint _2926 = uint((float(_2914.y) * floor(float(uint(cbSceneParam._m0[85u].y * _692) / _2915))) + floor(float(uint(cbSceneParam._m0[85u].x * _691) / _2915)));
        float _2936 = (log2(_2007 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2937 = isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : max(_2936, 0.0));
        uint _2940 = uint(isnan(14.0) ? _2937 : (isnan(_2937) ? 14.0 : min(_2937, 14.0)));
        uvec4 _2945 = texelFetch(g_lightClusterGridBuffer, int(((_2940 << 2u) + (_2926 << 6u)) >> 2u));
        uint _2946 = _2945.x;
        uint _2947 = _2914.z;
        float _3068;
        float _3070;
        float _3072;
        float _3074;
        float _3076;
        float _3078;
        if (((((1u << ((_2947 >> 4u) & 15u)) + 4294967295u) & _2946) == 0u) || ((_2947 & 240u) == 0u))
        {
            _3068 = 0.0;
            _3070 = 0.0;
            _3072 = 0.0;
            _3074 = 0.0;
            _3076 = 0.0;
            _3078 = 0.0;
        }
        else
        {
            float _3069;
            float _3071;
            float _3073;
            float _3075;
            float _3077;
            float _3079;
            float _3229 = 0.0;
            float _3230 = 0.0;
            float _3231 = 0.0;
            float _3232 = 0.0;
            float _3233 = 0.0;
            float _3234 = 0.0;
            uint _3235 = 0u;
            uint _3244;
            bool _3245;
            for (;;)
            {
                _3244 = texelFetch(g_lightClassification, int((((_2940 << 5u) + (_2926 << 9u)) + (_3235 << 2u)) >> 2u)).x;
                _3245 = _3244 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_3245)
                {
                    frontier_phi_73_pred = _3234;
                    frontier_phi_73_pred_1 = _3233;
                    frontier_phi_73_pred_2 = _3232;
                    frontier_phi_73_pred_3 = _3231;
                    frontier_phi_73_pred_4 = _3230;
                    frontier_phi_73_pred_5 = _3229;
                }
                else
                {
                    float _3374;
                    float _3375;
                    float _3376;
                    float _3377;
                    float _3378;
                    float _3379;
                    uint _3380;
                    _3374 = _3229;
                    _3375 = _3230;
                    _3376 = _3231;
                    _3377 = _3232;
                    _3378 = _3233;
                    _3379 = _3234;
                    _3380 = _3244;
                    float _3301;
                    float _3302;
                    float _3303;
                    float _3304;
                    float _3305;
                    float _3306;
                    for (;;)
                    {
                        uint _3384 = uint(findLSB(_3380)) + (_3235 << 5u);
                        uint _3381 = (_3380 + 4294967295u) & _3380;
                        uint _3386 = _3384 * 48u;
                        vec4 _3400 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3386)).x, texelFetch(g_PointLightRenderingBuffer, int(_3386 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3386 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3386 + 3u)).x));
                        uint _3406 = (_3384 * 48u) + 4u;
                        vec4 _3419 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3406)).x, texelFetch(g_PointLightRenderingBuffer, int(_3406 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3406 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3406 + 3u)).x));
                        uint _3425 = (_3384 * 48u) + 8u;
                        vec3 _3436 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3425)).x, texelFetch(g_PointLightRenderingBuffer, int(_3425 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3425 + 2u)).x));
                        float _3440 = _3400.x - _2005;
                        float _3441 = _3400.y - _2006;
                        float _3442 = _3400.z - _2007;
                        float _3443 = dot(vec3(_3440, _3441, _3442), vec3(_3440, _3441, _3442));
                        float _3446 = inversesqrt(_3443);
                        float _3447 = _3446 * _3440;
                        float _3448 = _3446 * _3441;
                        float _3449 = _3446 * _3442;
                        float _3450 = dot(vec3(_714, _717, _720), vec3(_3447, _3448, _3449));
                        float _3455 = 1.0 - (_3443 * _3400.w);
                        float _4865 = isnan(0.0) ? _3455 : (isnan(_3455) ? 0.0 : max(_3455, 0.0));
                        float _3456 = isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0));
                        float _3457 = sqrt(_3443) * _3419.w;
                        float _3460 = 1.39999997615814208984375 / (_3457 + 1.39999997615814208984375);
                        float _3461 = _3460 * _3460;
                        float _3464 = ((1.0 - _3461) * _3450) + _3461;
                        float _3467 = _3457 * _3457;
                        float _3471 = ((isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : max(_3464, 0.0))) * _3456) / ((_3467 * 0.699999988079071044921875) + 1.0);
                        float _3475 = (-0.0) - _2005;
                        float _3476 = (-0.0) - _2006;
                        float _3477 = (-0.0) - _2007;
                        float _3481 = inversesqrt(dot(vec3(_3475, _3476, _3477), vec3(_3475, _3476, _3477)));
                        float _3482 = _3481 * _3475;
                        float _3483 = _3481 * _3476;
                        float _3484 = _3481 * _3477;
                        float _3491 = exp2(log2(1.0 / ((_3467 * 3.5) + 5.0)) * 0.25);
                        float _3492 = 1.0 - _917;
                        float _3499 = sqrt(1.0 - ((1.0 - (_3492 * _3492)) * (1.0 - (_3491 * _3491))));
                        float _3500 = _3499 * _3499;
                        float _3501 = _3500 * _3500;
                        float _3502 = _3482 + _3447;
                        float _3503 = _3483 + _3448;
                        float _3504 = _3484 + _3449;
                        float _3508 = inversesqrt(dot(vec3(_3502, _3503, _3504), vec3(_3502, _3503, _3504)));
                        float _3512 = dot(vec3(_714, _717, _720), vec3(_3482, _3483, _3484));
                        float _4881 = isnan(0.0) ? _3512 : (isnan(_3512) ? 0.0 : max(_3512, 0.0));
                        float _3515 = isnan(1.0) ? _4881 : (isnan(_4881) ? 1.0 : min(_4881, 1.0));
                        float _3516 = dot(vec3(_714, _717, _720), vec3(_3508 * _3502, _3508 * _3503, _3508 * _3504));
                        float _4892 = isnan(0.0) ? _3516 : (isnan(_3516) ? 0.0 : max(_3516, 0.0));
                        float _3519 = isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0));
                        float _3523 = ((_3519 * _3519) * (_3501 + (-1.0))) + 1.0;
                        float _3524 = _3460 * _3500;
                        float _3525 = _3524 * _3524;
                        float _3528 = ((1.0 - _3525) * _3450) + _3525;
                        float _4903 = isnan(0.0) ? _3528 : (isnan(_3528) ? 0.0 : max(_3528, 0.0));
                        float _3529 = isnan(1.0) ? _4903 : (isnan(_4903) ? 1.0 : min(_4903, 1.0));
                        float _3530 = 1.0 - _3500;
                        float _3540 = (0.5 / (((_3529 * ((_3515 * _3530) + _3500)) + 9.9999999392252902907785028219223e-09) + (((_3529 * _3530) + _3500) * _3515))) * _3529;
                        float _4914 = isnan(0.0) ? _3540 : (isnan(_3540) ? 0.0 : max(_3540, 0.0));
                        float _3551 = (((_3501 * 3.1415927410125732421875) * (isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0)))) / ((_3523 * _3523) * ((_3467 * 2.1991131305694580078125) + 3.141590118408203125))) * _3456;
                        _3304 = (_3471 * _3419.x) + _3377;
                        _3305 = (_3471 * _3419.y) + _3378;
                        _3306 = (_3471 * _3419.z) + _3379;
                        _3301 = (_3551 * _3436.x) + _3374;
                        _3302 = (_3551 * _3436.y) + _3375;
                        _3303 = (_3551 * _3436.z) + _3376;
                        if (_3381 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3374 = _3301;
                            _3375 = _3302;
                            _3376 = _3303;
                            _3377 = _3304;
                            _3378 = _3305;
                            _3379 = _3306;
                            _3380 = _3381;
                        }
                    }
                    frontier_phi_73_pred = _3306;
                    frontier_phi_73_pred_1 = _3305;
                    frontier_phi_73_pred_2 = _3304;
                    frontier_phi_73_pred_3 = _3303;
                    frontier_phi_73_pred_4 = _3302;
                    frontier_phi_73_pred_5 = _3301;
                }
                _3079 = frontier_phi_73_pred;
                _3077 = frontier_phi_73_pred_1;
                _3075 = frontier_phi_73_pred_2;
                _3073 = frontier_phi_73_pred_3;
                _3071 = frontier_phi_73_pred_4;
                _3069 = frontier_phi_73_pred_5;
                uint _3236 = _3235 + 1u;
                if (_3236 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3229 = _3069;
                    _3230 = _3071;
                    _3231 = _3073;
                    _3232 = _3075;
                    _3233 = _3077;
                    _3234 = _3079;
                    _3235 = _3236;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3068 = _3069;
            _3070 = _3071;
            _3072 = _3073;
            _3074 = _3075;
            _3076 = _3077;
            _3078 = _3079;
        }
        uvec4 _3082 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3083 = _3082.z;
        uint _3085 = (_3083 >> 8u) & 15u;
        float _3197;
        float _3199;
        float _3201;
        float _3203;
        float _3205;
        float _3207;
        if (((4294967295u << _3085) & _2946) == 0u)
        {
            _3197 = _3068;
            _3199 = _3070;
            _3201 = _3072;
            _3203 = _3074;
            _3205 = _3076;
            _3207 = _3078;
        }
        else
        {
            float _3222 = inversesqrt(dot(vec3(_2005, _2006, _2007), vec3(_2005, _2006, _2007)));
            float _3223 = _3222 * _2005;
            float _3224 = _3222 * _2006;
            float _3225 = _3222 * _2007;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_3085 < ((_3083 >> 12u) & 15u))
            {
                float _3198;
                float _3200;
                float _3202;
                float _3204;
                float _3206;
                float _3208;
                float _3357 = _3068;
                float _3358 = _3070;
                float _3359 = _3072;
                float _3360 = _3074;
                float _3361 = _3076;
                float _3362 = _3078;
                uint _3363 = _3085;
                uint _3372;
                bool _3373;
                for (;;)
                {
                    _3372 = texelFetch(g_lightClassification, int((((_2940 << 5u) + (_2926 << 9u)) + (_3363 << 2u)) >> 2u)).x;
                    _3373 = _3372 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3373)
                    {
                        frontier_phi_84_pred = _3361;
                        frontier_phi_84_pred_1 = _3360;
                        frontier_phi_84_pred_2 = _3359;
                        frontier_phi_84_pred_3 = _3358;
                        frontier_phi_84_pred_4 = _3357;
                        frontier_phi_84_pred_5 = _3362;
                    }
                    else
                    {
                        float _3565;
                        float _3566;
                        float _3567;
                        float _3568;
                        float _3569;
                        float _3570;
                        float _3860;
                        float _3861;
                        float _3862;
                        float _3863;
                        float _3864;
                        float _3865;
                        float _3578 = _3357;
                        float _3579 = _3358;
                        float _3580 = _3359;
                        float _3581 = _3360;
                        float _3582 = _3361;
                        float _3583 = _3362;
                        uint _3584 = _3372;
                        uint _3585;
                        vec4 _3610;
                        float _3611;
                        vec4 _3626;
                        vec3 _3638;
                        vec4 _3653;
                        vec4 _3669;
                        float _3716;
                        bool _3717;
                        for (;;)
                        {
                            uint _3595 = ((_3363 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3584));
                            _3585 = (_3584 + 4294967295u) & _3584;
                            uint _3597 = _3595 * 40u;
                            _3610 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3597)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 3u)).x));
                            _3611 = _3610.w;
                            uint _3613 = (_3595 * 40u) + 4u;
                            _3626 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3613)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3613 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3613 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3613 + 3u)).x));
                            uint _3628 = (_3595 * 40u) + 8u;
                            _3638 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3628)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3628 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3628 + 2u)).x));
                            uint _3640 = (_3595 * 40u) + 16u;
                            _3653 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3640)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3640 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3640 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3640 + 3u)).x));
                            uint _3656 = (_3595 * 40u) + 20u;
                            _3669 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3656)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3656 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3656 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3656 + 3u)).x));
                            uint _3672 = (_3595 * 40u) + 24u;
                            vec4 _3685 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3672)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3672 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3672 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3672 + 3u)).x));
                            uint _3691 = (_3595 * 40u) + 28u;
                            vec4 _3704 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3691)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3691 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3691 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3691 + 3u)).x));
                            _3716 = fma(_2007, _3704.z, fma(_2006, _3704.y, _3704.x * _2005)) + _3704.w;
                            _3717 = !((fma(_2007, _3685.z, fma(_2006, _3685.y, _3685.x * _2005)) + _3685.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_3717)
                            {
                                float _3744 = _3610.x - _2005;
                                float _3745 = _3610.y - _2006;
                                float _3746 = _3610.z - _2007;
                                float _3747 = dot(vec3(_3744, _3745, _3746), vec3(_3744, _3745, _3746));
                                float _3750 = inversesqrt(_3747);
                                float _3751 = _3750 * _3744;
                                float _3752 = _3750 * _3745;
                                float _3753 = _3750 * _3746;
                                float _3757 = 1.0 - (_3747 / (_3611 * _3611));
                                float _4925 = isnan(0.0) ? _3757 : (isnan(_3757) ? 0.0 : max(_3757, 0.0));
                                float _3758 = isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0));
                                float _3762 = sqrt(_3747) * _3626.w;
                                float _3764 = 1.39999997615814208984375 / (_3762 + 1.39999997615814208984375);
                                float _3765 = _3764 * _3764;
                                float _3768 = ((1.0 - _3765) * dot(vec3(_3751, _3752, _3753), vec3(_714, _717, _720))) + _3765;
                                float _3771 = _3762 * _3762;
                                float _3775 = (fma(_2007, _3653.z, fma(_2006, _3653.y, _3653.x * _2005)) + _3653.w) / _3716;
                                float _3776 = (fma(_2007, _3669.z, fma(_2006, _3669.y, _3669.x * _2005)) + _3669.w) / _3716;
                                float _3780 = 1.0 - dot(vec2(_3775, _3776), vec2(_3775, _3776));
                                float _4941 = isnan(0.0) ? _3780 : (isnan(_3780) ? 0.0 : max(_3780, 0.0));
                                float _3781 = isnan(1.0) ? _4941 : (isnan(_4941) ? 1.0 : min(_4941, 1.0));
                                float _3782 = _3781 * (((isnan(0.0) ? _3768 : (isnan(_3768) ? 0.0 : max(_3768, 0.0))) * _3758) / ((_3771 * 0.699999988079071044921875) + 1.0));
                                float _3794 = exp2(log2(1.0 / ((_3771 * 3.5) + 5.0)) * 0.25);
                                float _3795 = 1.0 - _917;
                                float _3802 = sqrt(1.0 - ((1.0 - (_3795 * _3795)) * (1.0 - (_3794 * _3794))));
                                float _3803 = _3802 * _3802;
                                float _3804 = _3803 * _3803;
                                float _3805 = _3751 - _3223;
                                float _3806 = _3752 - _3224;
                                float _3807 = _3753 - _3225;
                                float _3811 = inversesqrt(dot(vec3(_3805, _3806, _3807), vec3(_3805, _3806, _3807)));
                                float _3815 = dot(vec3(_714, _717, _720), vec3((-0.0) - _3223, (-0.0) - _3224, (-0.0) - _3225));
                                float _4952 = isnan(0.0) ? _3815 : (isnan(_3815) ? 0.0 : max(_3815, 0.0));
                                float _3818 = isnan(1.0) ? _4952 : (isnan(_4952) ? 1.0 : min(_4952, 1.0));
                                float _3819 = dot(vec3(_714, _717, _720), vec3(_3811 * _3805, _3811 * _3806, _3811 * _3807));
                                float _4963 = isnan(0.0) ? _3819 : (isnan(_3819) ? 0.0 : max(_3819, 0.0));
                                float _3822 = isnan(1.0) ? _4963 : (isnan(_4963) ? 1.0 : min(_4963, 1.0));
                                float _3826 = ((_3822 * _3822) * (_3804 + (-1.0))) + 1.0;
                                float _3827 = _3764 * _3803;
                                float _3828 = _3827 * _3827;
                                float _3834 = ((1.0 - _3828) * dot(vec3(_714, _717, _720), vec3(_3751, _3752, _3753))) + _3828;
                                float _4974 = isnan(0.0) ? _3834 : (isnan(_3834) ? 0.0 : max(_3834, 0.0));
                                float _3835 = isnan(1.0) ? _4974 : (isnan(_4974) ? 1.0 : min(_4974, 1.0));
                                float _3836 = 1.0 - _3803;
                                float _3846 = (0.5 / (((_3835 * ((_3818 * _3836) + _3803)) + 9.9999999392252902907785028219223e-09) + (((_3835 * _3836) + _3803) * _3818))) * _3835;
                                float _4985 = isnan(0.0) ? _3846 : (isnan(_3846) ? 0.0 : max(_3846, 0.0));
                                float _3856 = (_3781 * _3758) * (((_3804 * 3.1415927410125732421875) * (isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0)))) / ((_3826 * _3826) * ((_3771 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _3782 * _3626.y;
                                frontier_phi_90_pred_1 = _3782 * _3626.x;
                                frontier_phi_90_pred_2 = _3856 * _3638.z;
                                frontier_phi_90_pred_3 = _3856 * _3638.y;
                                frontier_phi_90_pred_4 = _3856 * _3638.x;
                                frontier_phi_90_pred_5 = _3782 * _3626.z;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _3864 = frontier_phi_90_pred;
                            _3863 = frontier_phi_90_pred_1;
                            _3862 = frontier_phi_90_pred_2;
                            _3861 = frontier_phi_90_pred_3;
                            _3860 = frontier_phi_90_pred_4;
                            _3865 = frontier_phi_90_pred_5;
                            _3568 = _3863 + _3581;
                            _3569 = _3864 + _3582;
                            _3570 = _3865 + _3583;
                            _3565 = _3860 + _3578;
                            _3566 = _3861 + _3579;
                            _3567 = _3862 + _3580;
                            if (_3585 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3578 = _3565;
                                _3579 = _3566;
                                _3580 = _3567;
                                _3581 = _3568;
                                _3582 = _3569;
                                _3583 = _3570;
                                _3584 = _3585;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _3569;
                        frontier_phi_84_pred_1 = _3568;
                        frontier_phi_84_pred_2 = _3567;
                        frontier_phi_84_pred_3 = _3566;
                        frontier_phi_84_pred_4 = _3565;
                        frontier_phi_84_pred_5 = _3570;
                    }
                    _3206 = frontier_phi_84_pred;
                    _3204 = frontier_phi_84_pred_1;
                    _3202 = frontier_phi_84_pred_2;
                    _3200 = frontier_phi_84_pred_3;
                    _3198 = frontier_phi_84_pred_4;
                    _3208 = frontier_phi_84_pred_5;
                    uint _3364 = _3363 + 1u;
                    if (_3364 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3357 = _3198;
                        _3358 = _3200;
                        _3359 = _3202;
                        _3360 = _3204;
                        _3361 = _3206;
                        _3362 = _3208;
                        _3363 = _3364;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _3208;
                frontier_phi_65_66_ladder_1 = _3204;
                frontier_phi_65_66_ladder_2 = _3206;
                frontier_phi_65_66_ladder_3 = _3200;
                frontier_phi_65_66_ladder_4 = _3198;
                frontier_phi_65_66_ladder_5 = _3202;
            }
            else
            {
                frontier_phi_65_66_ladder = _3078;
                frontier_phi_65_66_ladder_1 = _3074;
                frontier_phi_65_66_ladder_2 = _3076;
                frontier_phi_65_66_ladder_3 = _3070;
                frontier_phi_65_66_ladder_4 = _3068;
                frontier_phi_65_66_ladder_5 = _3072;
            }
            _3197 = frontier_phi_65_66_ladder_4;
            _3199 = frontier_phi_65_66_ladder_3;
            _3201 = frontier_phi_65_66_ladder_5;
            _3203 = frontier_phi_65_66_ladder_1;
            _3205 = frontier_phi_65_66_ladder_2;
            _3207 = frontier_phi_65_66_ladder;
        }
        float _3212 = isnan(1.0) ? _901 : (isnan(_901) ? 1.0 : min(_901, 1.0));
        _2958 = (_3212 * _3203) + _2471;
        _2960 = (_3212 * _3205) + _2473;
        _2962 = (_3212 * _3207) + _2475;
        _2964 = ((_3197 * _887) * _3212) + _2809;
        _2966 = ((_3199 * _888) * _3212) + _2811;
        _2968 = ((_3201 * _889) * _3212) + _2813;
    }
    else
    {
        _2958 = _2471;
        _2960 = _2473;
        _2962 = _2475;
        _2964 = _2809;
        _2966 = _2811;
        _2968 = _2813;
    }
    uint _2974 = _794 + uint(cbMatDynParam._m0[0u].w);
    float _2984 = ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _526) * _539.x) * cbInstanceData._m0[_2974].x;
    float _2989 = ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _526) * _539.y) * cbInstanceData._m0[_2974].y;
    float _2994 = ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _526) * _539.z) * cbInstanceData._m0[_2974].z;
    float _5001 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    float _5012 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    float _5023 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _5034 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
    float _3012 = (((isnan(1.0) ? _5001 : (isnan(_5001) ? 1.0 : min(_5001, 1.0))) * (_2958 + ((isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0))) * _901))) + ((_2964 + ((isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0))) * _1737)) * cbPerFrame._m0[3u].x)) + _2984;
    float _3014 = (_2989 + ((_2966 + ((isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0))) * _1737)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5012 : (isnan(_5012) ? 1.0 : min(_5012, 1.0))) * (_2960 + ((isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0))) * _901)));
    float _3016 = (_2994 + ((_2968 + ((isnan(0.0) ? _1958 : (isnan(_1958) ? 0.0 : max(_1958, 0.0))) * _1737)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5023 : (isnan(_5023) ? 1.0 : min(_5023, 1.0))) * (_2962 + ((isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0))) * _901)));
    float _3017 = isnan(0.0) ? _3012 : (isnan(_3012) ? 0.0 : max(_3012, 0.0));
    float _3018 = isnan(0.0) ? _3014 : (isnan(_3014) ? 0.0 : max(_3014, 0.0));
    float _3019 = isnan(0.0) ? _3016 : (isnan(_3016) ? 0.0 : max(_3016, 0.0));
    float _3025 = cbMtdParam._m0[2u].x * _2984;
    float _3026 = cbMtdParam._m0[2u].y * _2989;
    float _3027 = cbMtdParam._m0[2u].z * _2994;
    float _5060 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3029 = isnan(1.0) ? _5060 : (isnan(_5060) ? 1.0 : min(_5060, 1.0));
    float _3034 = cbInstanceData._m0[_793 + 6u].w * (isnan(1.0) ? _5034 : (isnan(_5034) ? 1.0 : min(_5034, 1.0)));
    float _3039 = _691 / cbSceneParam._m0[86u].x;
    float _3040 = _692 / cbSceneParam._m0[86u].y;
    vec4 _3054 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3039, _3040, (log2((isnan(cbSceneParam._m0[77u].w) ? _612 : (isnan(_612) ? cbSceneParam._m0[77u].w : min(_612, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3056 = _3054.x;
    float _3057 = _3054.y;
    float _3058 = _3054.z;
    float _3059 = _3054.w;
    float _3130;
    float _3132;
    float _3134;
    float _3136;
    if (_612 > cbSceneParam._m0[78u].w)
    {
        float _3093 = isnan(_612) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _612 : min(cbSceneParam._m0[80u].w, _612));
        float _3094 = _3093 / _612;
        float _3105 = _3094 * _664;
        float _3106 = _665 * _3094;
        float _3107 = (-0.0) - _3106;
        float _3108 = _3094 * _666;
        float _3110 = (cbSceneParam._m0[77u].w * _3107) / _3093;
        float _3111 = _3110 + cbSceneParam._m0[79u].w;
        float _3112 = cbSceneParam._m0[79u].w - _3106;
        float _3118 = sqrt(((_3105 * _3105) + (_3106 * _3106)) + (_3108 * _3108));
        float _3121 = (1.0 - (cbSceneParam._m0[77u].w / _3093)) * _3118;
        float _3126 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3128 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3314;
        if (abs((_3107 - _3110) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3314 = ((((_3111 > 0.0) ? exp2(_3126 * _3111) : (2.0 - exp2(_3128 * _3111))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3121;
        }
        else
        {
            float _3258 = 1.0 / cbSceneParam._m0[80u].x;
            float _3259 = isnan(_3112) ? _3111 : (isnan(_3111) ? _3112 : max(_3111, _3112));
            float _3260 = isnan(_3112) ? _3111 : (isnan(_3111) ? _3112 : min(_3111, _3112));
            float _3269 = isnan(0.0) ? _3259 : (isnan(_3259) ? 0.0 : min(_3259, 0.0));
            float _3270 = isnan(0.0) ? _3260 : (isnan(_3260) ? 0.0 : min(_3260, 0.0));
            _3314 = ((abs(_3118 / _3107) * cbSceneParam._m0[80u].y) * ((((_3269 - _3270) * 2.0) - ((exp2(_3126 * (isnan(0.0) ? _3259 : (isnan(_3259) ? 0.0 : max(_3259, 0.0)))) - exp2(_3126 * (isnan(0.0) ? _3260 : (isnan(_3260) ? 0.0 : max(_3260, 0.0))))) * _3258)) - ((exp2(_3128 * _3269) - exp2(_3128 * _3270)) * _3258))) + (_3121 * cbSceneParam._m0[80u].z);
        }
        vec4 _3316 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3039, _3040, 1.0), 0.0);
        float _3325 = exp2((_3314 * (-1.44269502162933349609375)) * (1.0 - _3316.w));
        float _3326 = log2(_3325);
        float _3342 = log2(_3059);
        _3130 = (exp2(_3342 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3326 * cbSceneParam._m0[78u].x)) * _3316.x) / cbSceneParam._m0[78u].x)) + _3056;
        _3132 = (exp2(_3342 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3326 * cbSceneParam._m0[78u].y)) * _3316.y) / cbSceneParam._m0[78u].y)) + _3057;
        _3134 = (exp2(_3342 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3326 * cbSceneParam._m0[78u].z)) * _3316.z) / cbSceneParam._m0[78u].z)) + _3058;
        _3136 = _3325 * _3059;
    }
    else
    {
        _3130 = _3056;
        _3132 = _3057;
        _3134 = _3058;
        _3136 = _3059;
    }
    bool _3352;
    vec4 _3146;
    vec4 _3168;
    float _3170;
    float _3174;
    float _3175;
    float _3176;
    float _3179;
    float _3182;
    float _3185;
    float _3186;
    bool _3196;
    for (;;)
    {
        _3146 = cbMatDynParam._m0[0u];
        float _3148 = roundEven(_3146.y);
        bool _3149 = _3148 == 3.0;
        float _3150 = log2(_3136);
        float _3154 = exp2(_3150 * cbSceneParam._m0[78u].x);
        float _3155 = exp2(_3150 * cbSceneParam._m0[78u].y);
        float _3156 = exp2(_3150 * cbSceneParam._m0[78u].z);
        float _3157 = _3154 * _3017;
        float _3158 = _3155 * _3018;
        float _3159 = _3156 * _3019;
        float _3166 = _680 + (-0.5);
        _3168 = cbMtdParam._m0[1u];
        _3170 = _3168.y * _3166;
        float _3173 = (_3148 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3174 = _3173 * (_3149 ? _3157 : (_3157 + (cbSceneParam._m0[72u].w * _3130)));
        _3175 = _3173 * (_3149 ? _3158 : (_3158 + (cbSceneParam._m0[72u].w * _3132)));
        _3176 = _3173 * (_3149 ? _3159 : (_3159 + (cbSceneParam._m0[72u].w * _3134)));
        _3179 = ((_3025 * _3029) * _3154) * _3173;
        _3182 = ((_3026 * _3029) * _3155) * _3173;
        _3185 = ((_3027 * _3029) * _3156) * _3173;
        _3186 = _3166 * 0.999000012874603271484375;
        _3196 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3196)
        {
            if ((cbInstanceData._m0[_793 + 7u].x + _3186) < 0.5)
            {
                _3352 = true;
                break;
            }
        }
        uint _3293 = _794 + uint(_3146.w);
        if ((cbInstanceData._m0[_3293].w < 1.0) && ((cbInstanceData._m0[_3293].w + _3186) < 0.5))
        {
            _3352 = true;
            break;
        }
        if ((_3170 + _400) < _3168.x)
        {
            _3352 = true;
            break;
        }
        _3352 = false;
        break;
    }
    float _3556;
    if (_3352)
    {
        discard_state = true;
        _3556 = 0.0;
    }
    else
    {
        _3556 = _3034;
    }
    SV_Target.x = _3174;
    SV_Target.y = _3175;
    SV_Target.z = _3176;
    SV_Target.w = _3556;
    SV_Target_1.x = _3179;
    SV_Target_1.y = _3182;
    SV_Target_1.z = _3185;
    SV_Target_1.w = _3034;
    discard_exit();
}


