#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_8;
layout(set = 0, binding = 12) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_12;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _187 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _188 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _189 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _195 = inversesqrt(dot(vec3(_187, _188, _189), vec3(_187, _188, _189)));
    float _202 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _203 = _202 * NORMAL.x;
    float _204 = _202 * NORMAL.y;
    float _205 = _202 * NORMAL.z;
    float _209 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _217;
    float _218;
    float _219;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _217 = (-0.0) - _203;
        _218 = (-0.0) - _204;
        _219 = (-0.0) - _205;
    }
    else
    {
        _217 = _203;
        _218 = _204;
        _219 = _205;
    }
    float _263 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _273 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _263);
    float _274 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _263);
    float _275 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _263);
    vec4 _288 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _293 = _288.z;
    float _294 = _288.w;
    float _300 = exp2(log2(_293 * 22.0) * 260.0);
    float _301 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
    float _302 = isnan(1.0) ? _301 : (isnan(_301) ? 1.0 : min(_301, 1.0));
    vec4 _316 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _326 = cbMtdParam._m0[10u].x * _316.x;
    float _327 = cbMtdParam._m0[10u].y * _316.y;
    float _328 = cbMtdParam._m0[10u].z * _316.z;
    vec4 _340 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _360 = (((cbMtdParam._m0[9u].x * _340.x) - _326) * _302) + _326;
    float _361 = (((cbMtdParam._m0[9u].y * _340.y) - _327) * _302) + _327;
    float _362 = (((cbMtdParam._m0[9u].z * _340.z) - _328) * _302) + _328;
    float _367 = exp2(log2(1.0 - _294) * 8.0);
    vec4 _379 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _399 = (((cbMtdParam._m0[13u].x * _379.x) - _360) * _367) + _360;
    float _400 = (((cbMtdParam._m0[13u].y * _379.y) - _361) * _367) + _361;
    float _401 = (((cbMtdParam._m0[13u].z * _379.z) - _362) * _367) + _362;
    float _404 = exp2(log2(_294) * 8.0);
    vec4 _416 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _449 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _457 = (((((cbMtdParam._m0[11u].x * _416.x) - _399) * _404) + _399) * 4.55000019073486328125) * _449.x;
    float _459 = (((((cbMtdParam._m0[11u].y * _416.y) - _400) * _404) + _400) * 4.55000019073486328125) * _449.y;
    float _461 = (((((cbMtdParam._m0[11u].z * _416.z) - _401) * _404) + _401) * 4.55000019073486328125) * _449.z;
    float _462 = _449.w * _340.w;
    float _492 = (((texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w)).x - cbMtdParam._m0[17u].x) + cbMtdParam._m0[16u].x) * _302) + cbMtdParam._m0[17u].x;
    float _495 = ((cbMtdParam._m0[15u].z - _492) * _367) + _492;
    float _499 = ((cbMtdParam._m0[16u].w - _495) * _404) + _495;
    vec4 _511 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _513 = _511.x;
    float _514 = _511.y;
    float _520 = cbMtdParam._m0[14u].y + _511.z;
    vec4 _532 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _541 = (((_532.z - _520) + cbMtdParam._m0[14u].x) * _302) + _520;
    vec4 _554 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _563 = (((_554.z - _541) + cbMtdParam._m0[15u].y) * _367) + _541;
    vec4 _576 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _593 = (((_302 * (_293 + (-0.5))) + 0.5) * 2.0) * ((((_576.z - _563) + cbMtdParam._m0[14u].w) * _404) + _563);
    float _607 = abs((fract(cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1215 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _608 = isnan(1.0) ? _1215 : (isnan(_1215) ? 1.0 : min(_1215, 1.0));
    float _613 = (_608 * _608) * (3.0 - (_608 * 2.0));
    vec4 _626 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _634 = (_288.x * 2.0) + (-1.0);
    float _635 = (_288.y * 2.0) + (-1.0);
    float _636 = dot(vec2(_634, _635), vec2(_634, _635));
    float _1226 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
    float _641 = sqrt(1.0 - (isnan(1.0) ? _1226 : (isnan(_1226) ? 1.0 : min(_1226, 1.0))));
    float _646 = ((_532.x - _513) * _302) + _513;
    float _647 = ((_532.y - _514) * _302) + _514;
    float _652 = ((_554.x - _646) * _367) + _646;
    float _653 = ((_554.y - _647) * _367) + _647;
    float _666 = (cbMtdParam._m0[14u].z * (((((_576.x - _652) * _404) + _652) * 2.0) + (-1.0))) + _634;
    float _667 = (cbMtdParam._m0[14u].z * (((((_576.y - _653) * _404) + _653) * 2.0) + (-1.0))) + _635;
    vec4 _679 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_8, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _686 = fma(_641, _217, fma(_667, _209 * TANGENT.x, (_195 * _187) * _666));
    float _689 = fma(_641, _218, fma(_667, _209 * TANGENT.y, (_195 * _188) * _666));
    float _692 = fma(_641, _219, fma(_667, _209 * TANGENT.z, (_195 * _189) * _666));
    float _696 = inversesqrt(dot(vec3(_686, _689, _692), vec3(_686, _689, _692)));
    float _697 = _696 * _686;
    float _698 = _696 * _689;
    float _699 = _696 * _692;
    float _1237 = isnan(0.0) ? _462 : (isnan(_462) ? 0.0 : max(_462, 0.0));
    float _700 = isnan(1.0) ? _1237 : (isnan(_1237) ? 1.0 : min(_1237, 1.0));
    float _1248 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
    float _701 = isnan(1.0) ? _1248 : (isnan(_1248) ? 1.0 : min(_1248, 1.0));
    float _1259 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
    float _702 = isnan(1.0) ? _1259 : (isnan(_1259) ? 1.0 : min(_1259, 1.0));
    float _1270 = isnan(0.0) ? _459 : (isnan(_459) ? 0.0 : max(_459, 0.0));
    float _703 = isnan(1.0) ? _1270 : (isnan(_1270) ? 1.0 : min(_1270, 1.0));
    float _1281 = isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : max(_461, 0.0));
    float _704 = isnan(1.0) ? _1281 : (isnan(_1281) ? 1.0 : min(_1281, 1.0));
    float _1292 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0));
    float _705 = isnan(1.0) ? _1292 : (isnan(_1292) ? 1.0 : min(_1292, 1.0));
    uint _707 = uint(roundEven(NORMAL.w));
    float _713 = cbMatDynParam._m0[9u].x * _702;
    float _714 = cbMatDynParam._m0[9u].y * _703;
    float _715 = cbMatDynParam._m0[9u].z * _704;
    float _722 = inversesqrt(dot(vec3(_273, _274, _275), vec3(_273, _274, _275)));
    float _723 = _722 * _273;
    float _724 = _722 * _274;
    float _725 = _722 * _275;
    float _732 = abs(exp2(log2(dot(vec3(_697, _698, _699), vec3(_723, _724, _725))) * cbMatDynParam._m0[12u].x));
    float _733 = isnan(0.100000001490116119384765625) ? _732 : (isnan(_732) ? 0.100000001490116119384765625 : max(_732, 0.100000001490116119384765625));
    float _739 = ((isnan(0.699999988079071044921875) ? _733 : (isnan(_733) ? 0.699999988079071044921875 : min(_733, 0.699999988079071044921875))) + (-0.100000001490116119384765625)) * 1.66666662693023681640625;
    float _761 = 1.0 - cbMatDynParam._m0[8u].w;
    float _1313 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _764 = 1.0 - cbMatDynParam._m0[7u].w;
    float _1324 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _765 = isnan(1.0) ? _1324 : (isnan(_1324) ? 1.0 : min(_1324, 1.0));
    float _768 = (((isnan(1.0) ? _1313 : (isnan(_1313) ? 1.0 : min(_1313, 1.0))) - _765) * _739) + _765;
    float _787 = dot(vec3(_697, _698, _699), vec3(0.0, -1.0, 0.0));
    float _1335 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    float _790 = isnan(1.0) ? _1335 : (isnan(_1335) ? 1.0 : min(_1335, 1.0));
    float _797 = (_790 * _702) * cbMatDynParam._m0[11u].x;
    float _799 = (_790 * _703) * cbMatDynParam._m0[11u].y;
    float _801 = (_790 * _704) * cbMatDynParam._m0[11u].z;
    float _811 = dot(vec3(_723, _724, _725), vec3(_697, _698, _699)) * 2.0;
    float _821 = dot(vec3((-0.0) - (_723 - (_811 * _697)), (-0.0) - (_724 - (_811 * _698)), (-0.0) - (_725 - (_811 * _699))), vec3(0.0, -1.0, 0.0));
    float _1346 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _828 = exp2(log2(isnan(1.0) ? _1346 : (isnan(_1346) ? 1.0 : min(_1346, 1.0))) * 4.0);
    float _838 = ((((cbMatDynParam._m0[8u].x - cbMatDynParam._m0[7u].x) * _739) + cbMatDynParam._m0[7u].x) + (((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _613) * _626.x) * _768)) + (((_797 - (_797 * _705)) + (cbMatDynParam._m0[11u].x * _828)) * cbMatDynParam._m0[9u].x);
    float _839 = ((((cbMatDynParam._m0[8u].y - cbMatDynParam._m0[7u].y) * _739) + cbMatDynParam._m0[7u].y) + (((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _613) * _626.y) * _768)) + (((_799 - (_799 * _705)) + (cbMatDynParam._m0[11u].y * _828)) * cbMatDynParam._m0[9u].y);
    float _840 = ((((cbMatDynParam._m0[8u].z - cbMatDynParam._m0[7u].z) * _739) + cbMatDynParam._m0[7u].z) + (((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _613) * _626.z) * _768)) + (((_801 - (_801 * _705)) + (cbMatDynParam._m0[11u].z * _828)) * cbMatDynParam._m0[9u].z);
    float _880 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _889 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _880);
    float _890 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _880);
    float _891 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _880);
    vec4 _896 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _898 = _896.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1081 = sqrt(((_889 * _889) + (_890 * _890)) + (_891 * _891));
        float _1087 = (cbMatDynParam._m0[5u].x * _1081) + cbMatDynParam._m0[5u].y;
        float _1357 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
        float _1088 = isnan(1.0) ? _1357 : (isnan(_1357) ? 1.0 : min(_1357, 1.0));
        float _1092 = (cbMatDynParam._m0[5u].z * _1081) + cbMatDynParam._m0[5u].w;
        float _1368 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1368 : (isnan(_1368) ? 1.0 : min(_1368, 1.0))) - _1088)) + _1088) < ((_898 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _1119;
    float _948;
    uint _961;
    float _1020;
    float _1021;
    float _1022;
    float _1030;
    vec4 _1037;
    float _1041;
    float _1042;
    float _1043;
    float _1053;
    float _1058;
    vec4 _1061;
    float _1063;
    float _1064;
    bool _1075;
    for (;;)
    {
        vec4 _906 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
        float _908 = _906.w;
        vec4 _910 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
        float _921 = (((_910.y - _701) + (_910.w * _701)) * cbMtdParam._m0[3u].x) + _701;
        float _932 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * _705) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
        float _940 = (((cbMatDynParam._m0[15u].x - _705) * cbMatDynParam._m0[15u].w) * _932) + _705;
        _948 = ((_932 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _921)) + _921;
        _961 = _707 * 13u;
        uint _962 = _961 + 9u;
        uint _963 = _962 + uint(cbMatDynParam._m0[0u].w);
        float _969 = (_713 * cbMtdParam._m0[0u].x) * cbInstanceData._m0[_963].x;
        float _970 = (_714 * cbMtdParam._m0[0u].y) * cbInstanceData._m0[_963].y;
        float _971 = (_715 * cbMtdParam._m0[0u].z) * cbInstanceData._m0[_963].z;
        float _1379 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
        float _972 = isnan(1.0) ? _1379 : (isnan(_1379) ? 1.0 : min(_1379, 1.0));
        float _1390 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
        float _973 = isnan(1.0) ? _1390 : (isnan(_1390) ? 1.0 : min(_1390, 1.0));
        float _1401 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
        float _974 = isnan(1.0) ? _1401 : (isnan(_1401) ? 1.0 : min(_1401, 1.0));
        vec4 _975 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
        vec4 _980 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
        float _991 = (((_980.x - _940) + (_980.w * _940)) * cbMtdParam._m0[3u].x) + _940;
        float _1004 = (cbMtdParam._m0[3u].x * (((_972 * _908) - _972) + _975.x)) + _972;
        float _1005 = (cbMtdParam._m0[3u].x * (((_973 * _908) - _973) + _975.y)) + _973;
        float _1006 = (cbMtdParam._m0[3u].x * (((_974 * _908) - _974) + _975.z)) + _974;
        float _1010 = cbMatDynParam._m0[13u].w * _932;
        _1020 = ((cbMatDynParam._m0[13u].x - _1004) * _1010) + _1004;
        _1021 = ((cbMatDynParam._m0[13u].y - _1005) * _1010) + _1005;
        _1022 = ((cbMatDynParam._m0[13u].z - _1006) * _1010) + _1006;
        _1030 = ((cbMatDynParam._m0[15u].w * _932) * (cbMatDynParam._m0[15u].x - _991)) + _991;
        _1037 = cbInstanceData._m0[_962 + uint(cbMatDynParam._m0[0u].w)];
        _1041 = _1037.x * _838;
        _1042 = _1037.y * _839;
        _1043 = _1037.z * _840;
        float _1412 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
        _1053 = ((cbMtdParam._m0[2u].w - cbMatDynParam._m0[12u].y) * _768) + cbMatDynParam._m0[12u].y;
        _1058 = cbInstanceData._m0[_961 + 6u].w * (isnan(1.0) ? _1412 : (isnan(_1412) ? 1.0 : min(_1412, 1.0)));
        float _1059 = _898 + (-0.5);
        _1061 = cbMtdParam._m0[1u];
        _1063 = _1061.y * _1059;
        _1064 = _1059 * 0.999000012874603271484375;
        _1075 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1075)
        {
            if ((cbInstanceData._m0[_961 + 7u].x + _1064) < 0.5)
            {
                _1119 = true;
                break;
            }
        }
        if ((_1037.w < 1.0) && ((_1037.w + _1064) < 0.5))
        {
            _1119 = true;
            break;
        }
        if ((_1063 + _462) < _1061.x)
        {
            _1119 = true;
            break;
        }
        _1119 = false;
        break;
    }
    if (_1119)
    {
        discard_state = true;
    }
    float _1154;
    float _1155;
    float _1156;
    float _1157;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _1154 = _1058;
        _1155 = _1058;
        _1156 = _1058;
        _1157 = _1058;
    }
    else
    {
        _1154 = _1053;
        _1155 = 0.0;
        _1156 = float(floatBitsToUint(cbInstanceData._m0[_961 + 5u]).x) * 0.0039215688593685626983642578125;
        _1157 = TEXCOORD_4;
    }
    SV_Target.x = (_697 * 0.5) + 0.500488758087158203125;
    SV_Target.y = (_698 * 0.5) + 0.500488758087158203125;
    SV_Target.z = (_699 * 0.5) + 0.500488758087158203125;
    SV_Target.w = _1155;
    SV_Target_1.x = _1030;
    SV_Target_1.y = _948;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1157;
    SV_Target_2.x = _1020;
    SV_Target_2.y = _1021;
    SV_Target_2.z = _1022;
    SV_Target_2.w = _1156;
    SV_Target_3.x = cbMtdParam._m0[16u].y + _679.x;
    SV_Target_3.y = cbMatDynParam._m0[1u].w * 0.0039215688593685626983642578125;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _1155;
    SV_Target_4.x = _1041 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _1042 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _1043 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _1154;
    discard_exit();
}


