#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D S_AMSN_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _137 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _138 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _139 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _145 = inversesqrt(dot(vec3(_137, _138, _139), vec3(_137, _138, _139)));
    float _152 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _153 = _152 * NORMAL.x;
    float _154 = _152 * NORMAL.y;
    float _155 = _152 * NORMAL.z;
    float _159 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _167;
    float _168;
    float _169;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _167 = (-0.0) - _153;
        _168 = (-0.0) - _154;
        _169 = (-0.0) - _155;
    }
    else
    {
        _167 = _153;
        _168 = _154;
        _169 = _155;
    }
    vec4 _183 = texture(sampler2D(S_AMSN_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _186 = _183.x;
    float _187 = _183.y;
    float _188 = _183.z;
    float _189 = _183.w;
    float _190 = _189 * TEXCOORD_1.z;
    vec4 _206 = texture(sampler2D(S_AMSN_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _209 = _206.x + cbMtdParam._m0[9u].x;
    vec4 _221 = texture(sampler2D(S_AMSN_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _225 = _221.z;
    float _229 = (_221.x * 2.0) + (-1.0);
    float _231 = (_221.y * 2.0) + (-1.0);
    float _232 = dot(vec2(_229, _231), vec2(_229, _231));
    float _440 = isnan(0.0) ? _232 : (isnan(_232) ? 0.0 : max(_232, 0.0));
    float _238 = sqrt(1.0 - (isnan(1.0) ? _440 : (isnan(_440) ? 1.0 : min(_440, 1.0))));
    float _241 = fma(_238, _167, fma(_231, _159 * TANGENT.x, (_145 * _137) * _229));
    float _244 = fma(_238, _168, fma(_231, _159 * TANGENT.y, (_145 * _138) * _229));
    float _247 = fma(_238, _169, fma(_231, _159 * TANGENT.z, (_145 * _139) * _229));
    float _251 = inversesqrt(dot(vec3(_241, _244, _247), vec3(_241, _244, _247)));
    float _451 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _252 = isnan(1.0) ? _451 : (isnan(_451) ? 1.0 : min(_451, 1.0));
    float _462 = isnan(0.0) ? _225 : (isnan(_225) ? 0.0 : max(_225, 0.0));
    float _473 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
    float _254 = isnan(1.0) ? _473 : (isnan(_473) ? 1.0 : min(_473, 1.0));
    float _484 = isnan(0.0) ? _187 : (isnan(_187) ? 0.0 : max(_187, 0.0));
    float _255 = isnan(1.0) ? _484 : (isnan(_484) ? 1.0 : min(_484, 1.0));
    float _495 = isnan(0.0) ? _188 : (isnan(_188) ? 0.0 : max(_188, 0.0));
    float _256 = isnan(1.0) ? _495 : (isnan(_495) ? 1.0 : min(_495, 1.0));
    float _506 = isnan(0.0) ? _209 : (isnan(_209) ? 0.0 : max(_209, 0.0));
    uint _259 = uint(roundEven(NORMAL.w));
    vec4 _264 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _266 = _264.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _331 = (cbMatDynParam._m0[5u].x * TEXCOORD_9) + cbMatDynParam._m0[5u].y;
        float _517 = isnan(0.0) ? _331 : (isnan(_331) ? 0.0 : max(_331, 0.0));
        float _332 = isnan(1.0) ? _517 : (isnan(_517) ? 1.0 : min(_517, 1.0));
        float _336 = (cbMatDynParam._m0[5u].z * TEXCOORD_9) + cbMatDynParam._m0[5u].w;
        float _528 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _528 : (isnan(_528) ? 1.0 : min(_528, 1.0))) - _332)) + _332) < ((_266 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _365;
    uint _286;
    vec4 _291;
    float _298;
    float _299;
    float _300;
    float _306;
    vec4 _310;
    float _312;
    float _313;
    bool _324;
    for (;;)
    {
        _286 = _259 * 13u;
        _291 = cbInstanceData._m0[(_286 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _295 = (cbMtdParam._m0[0u].x * _254) * _291.x;
        float _296 = (cbMtdParam._m0[0u].y * _255) * _291.y;
        float _297 = (cbMtdParam._m0[0u].z * _256) * _291.z;
        float _539 = isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0));
        _298 = isnan(1.0) ? _539 : (isnan(_539) ? 1.0 : min(_539, 1.0));
        float _550 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
        _299 = isnan(1.0) ? _550 : (isnan(_550) ? 1.0 : min(_550, 1.0));
        float _561 = isnan(0.0) ? _297 : (isnan(_297) ? 0.0 : max(_297, 0.0));
        _300 = isnan(1.0) ? _561 : (isnan(_561) ? 1.0 : min(_561, 1.0));
        float _572 = isnan(0.0) ? _252 : (isnan(_252) ? 0.0 : max(_252, 0.0));
        _306 = cbInstanceData._m0[_286 + 6u].w * (isnan(1.0) ? _572 : (isnan(_572) ? 1.0 : min(_572, 1.0)));
        float _307 = _266 + (-0.5);
        _310 = cbMtdParam._m0[1u];
        _312 = _310.y * _307;
        _313 = _307 * 0.999000012874603271484375;
        _324 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_324)
        {
            if ((cbInstanceData._m0[_286 + 7u].x + _313) < 0.5)
            {
                _365 = true;
                break;
            }
        }
        if ((_291.w < 1.0) && ((_291.w + _313) < 0.5))
        {
            _365 = true;
            break;
        }
        if ((_312 + _189) < _310.x)
        {
            _365 = true;
            break;
        }
        _365 = false;
        break;
    }
    if (_365)
    {
        discard_state = true;
    }
    bool _391 = cbMtdParam._m0[1u].z != 0.0;
    float _392 = _391 ? _306 : 0.0;
    SV_Target.x = ((_241 * 0.5) * _251) + 0.500488758087158203125;
    SV_Target.y = ((_244 * 0.5) * _251) + 0.500488758087158203125;
    SV_Target.z = ((_247 * 0.5) * _251) + 0.500488758087158203125;
    SV_Target.w = _392;
    SV_Target_1.x = isnan(1.0) ? _506 : (isnan(_506) ? 1.0 : min(_506, 1.0));
    SV_Target_1.y = isnan(1.0) ? _462 : (isnan(_462) ? 1.0 : min(_462, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _391 ? _306 : TEXCOORD_1.w;
    SV_Target_2.x = _298;
    SV_Target_2.y = _299;
    SV_Target_2.z = _300;
    SV_Target_2.w = _391 ? _306 : (float(floatBitsToUint(cbInstanceData._m0[_286 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _392;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _392;
    discard_exit();
}


