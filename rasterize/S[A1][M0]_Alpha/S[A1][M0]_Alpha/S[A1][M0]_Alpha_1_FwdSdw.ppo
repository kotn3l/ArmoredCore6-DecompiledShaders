#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D S_A1_M0_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _695;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _162 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _163 = _162 * NORMAL.x;
    float _164 = _162 * NORMAL.y;
    float _165 = _162 * NORMAL.z;
    vec4 _185 = texture(sampler2D(S_A1_M0_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _189 = _185.w * TEXCOORD_1.z;
    float _193 = inversesqrt(dot(vec3(_163, _164, _165), vec3(_163, _164, _165)));
    float _194 = _193 * _163;
    float _195 = _193 * _164;
    float _196 = _193 * _165;
    float _3091 = isnan(0.0) ? _189 : (isnan(_189) ? 0.0 : max(_189, 0.0));
    float _198 = isnan(1.0) ? _3091 : (isnan(_3091) ? 1.0 : min(_3091, 1.0));
    float _3102 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    float _3113 = isnan(0.0) ? cbMtdParam._m0[10u].y : (isnan(cbMtdParam._m0[10u].y) ? 0.0 : max(cbMtdParam._m0[10u].y, 0.0));
    float _3124 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    float _217 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _259 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _269 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _259);
    float _270 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _259);
    float _271 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _259);
    float _275 = inversesqrt(dot(vec3(_269, _270, _271), vec3(_269, _270, _271)));
    float _276 = _269 * _275;
    float _277 = _270 * _275;
    float _278 = _271 * _275;
    float _284 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _285 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _306 = fma(_196, cbSceneParam._m0[5u].z, fma(_195, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _194));
    float _309 = fma(_196, cbSceneParam._m0[6u].z, fma(_195, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _194));
    float _312 = fma(_196, cbSceneParam._m0[7u].z, fma(_195, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _194));
    uint _325 = uint(roundEven(NORMAL.w)) * 13u;
    uint _328 = (_325 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _334 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3102 : (isnan(_3102) ? 1.0 : min(_3102, 1.0)))) * cbInstanceData._m0[_328].x;
    float _335 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3113 : (isnan(_3113) ? 1.0 : min(_3113, 1.0)))) * cbInstanceData._m0[_328].y;
    float _336 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3124 : (isnan(_3124) ? 1.0 : min(_3124, 1.0)))) * cbInstanceData._m0[_328].z;
    float _3135 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _337 = isnan(1.0) ? _3135 : (isnan(_3135) ? 1.0 : min(_3135, 1.0));
    float _3146 = isnan(0.0) ? _335 : (isnan(_335) ? 0.0 : max(_335, 0.0));
    float _338 = isnan(1.0) ? _3146 : (isnan(_3146) ? 1.0 : min(_3146, 1.0));
    float _3157 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
    float _339 = isnan(1.0) ? _3157 : (isnan(_3157) ? 1.0 : min(_3157, 1.0));
    vec4 _348 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _284, cbSceneParam._m0[86u].y * _285));
    float _351 = _348.x * TEXCOORD_1.w;
    float _352 = dot(vec3(_194, _195, _196), vec3(_276, _277, _278));
    float _355 = _352 * 2.0;
    float _360 = (_355 * _194) - _276;
    float _361 = (_355 * _195) - _277;
    float _362 = (_355 * _196) - _278;
    float _384 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _388 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _392 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _694;
    float _696;
    float _697;
    float _698;
    float _699;
    float _700;
    float _701;
    float _702;
    float _703;
    float _704;
    float _705;
    float _706;
    float _707;
    float _708;
    float _709;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _419 = fma(_392, cbModelParam._m0[26u].z, fma(_388, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _384));
        float _423 = fma(_392, cbModelParam._m0[27u].z, fma(_388, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _384));
        float _427 = fma(_392, cbModelParam._m0[28u].z, fma(_388, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _384));
        float _452 = _384 + _194;
        float _453 = _388 + _195;
        float _454 = _392 + _196;
        float _464 = fma(_454, cbModelParam._m0[26u].z, fma(_453, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _452)) - _419;
        float _465 = fma(_454, cbModelParam._m0[27u].z, fma(_453, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _452)) - _423;
        float _466 = fma(_454, cbModelParam._m0[28u].z, fma(_453, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _452)) - _427;
        float _470 = inversesqrt(dot(vec3(_464, _465, _466), vec3(_464, _465, _466)));
        float _483 = ((_470 * _464) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_419 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _484 = ((_470 * _465) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_423 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _485 = ((_470 * _466) / cbModelParam._m0[34u].z) + ((((((_427 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _488 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_483, _484, _485), 0.0);
        vec4 _495 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_483, _484, _485), 0.0);
        vec4 _502 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_483, _484, _485), 0.0);
        vec4 _509 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_483, _484, _485), 0.0);
        float _522 = exp2((_488.w + (-0.5)) * 20.0) * 2.0;
        float _523 = _522 * (_488.x + (-0.5));
        float _524 = _522 * (_488.y + (-0.5));
        float _525 = _522 * (_488.z + (-0.5));
        float _532 = exp2((_495.w + (-0.5)) * 20.0) * 2.0;
        float _533 = _532 * (_495.x + (-0.5));
        float _534 = _532 * (_495.y + (-0.5));
        float _535 = _532 * (_495.z + (-0.5));
        float _542 = exp2((_502.w + (-0.5)) * 20.0) * 2.0;
        float _543 = _542 * (_502.x + (-0.5));
        float _544 = _542 * (_502.y + (-0.5));
        float _545 = _542 * (_502.z + (-0.5));
        float _552 = exp2((_509.w + (-0.5)) * 20.0) * 2.0;
        float _553 = _552 * (_509.x + (-0.5));
        float _554 = _552 * (_509.y + (-0.5));
        float _555 = _552 * (_509.z + (-0.5));
        float _556 = isnan(0.0) ? _553 : (isnan(_553) ? 0.0 : max(_553, 0.0));
        float _557 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0));
        float _558 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
        float _559 = _523 * 0.5;
        float _560 = _533 * 0.5;
        float _561 = _543 * 0.5;
        float _562 = dot(vec3(_559, _560, _561), vec3(_559, _560, _561));
        float _567 = (_562 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_562);
        float _576 = (dot(vec3(_194, _195, _196), vec3(_567 * _559, _567 * _560, _567 * _561)) + 1.0) * 0.5;
        float _3183 = isnan(0.0) ? _576 : (isnan(_576) ? 0.0 : max(_576, 0.0));
        float _586 = sqrt(((_560 * _560) + (_559 * _559)) + (_561 * _561)) / (_556 + 9.9999997473787516355514526367188e-06);
        float _3194 = isnan(0.0) ? _586 : (isnan(_586) ? 0.0 : max(_586, 0.0));
        float _587 = isnan(1.0) ? _3194 : (isnan(_3194) ? 1.0 : min(_3194, 1.0));
        float _588 = _587 * 2.0;
        float _592 = (1.0 - _587) / (_587 + 1.0);
        float _3205 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
        float _593 = isnan(1.0) ? _3205 : (isnan(_3205) ? 1.0 : min(_3205, 1.0));
        float _602 = ((((1.0 - _593) * (_588 + 2.0)) * exp2(log2(isnan(1.0) ? _3183 : (isnan(_3183) ? 1.0 : min(_3183, 1.0))) * (_588 + 1.0))) + _593) * _556;
        float _603 = _524 * 0.5;
        float _604 = _534 * 0.5;
        float _605 = _544 * 0.5;
        float _606 = dot(vec3(_603, _604, _605), vec3(_603, _604, _605));
        float _611 = (_606 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_606);
        float _619 = (dot(vec3(_194, _195, _196), vec3(_611 * _603, _611 * _604, _611 * _605)) + 1.0) * 0.5;
        float _3216 = isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0));
        float _628 = sqrt(((_604 * _604) + (_603 * _603)) + (_605 * _605)) / (_557 + 9.9999997473787516355514526367188e-06);
        float _3227 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
        float _629 = isnan(1.0) ? _3227 : (isnan(_3227) ? 1.0 : min(_3227, 1.0));
        float _630 = _629 * 2.0;
        float _634 = (1.0 - _629) / (_629 + 1.0);
        float _3238 = isnan(0.0) ? _634 : (isnan(_634) ? 0.0 : max(_634, 0.0));
        float _635 = isnan(1.0) ? _3238 : (isnan(_3238) ? 1.0 : min(_3238, 1.0));
        float _644 = ((((1.0 - _635) * (_630 + 2.0)) * exp2(log2(isnan(1.0) ? _3216 : (isnan(_3216) ? 1.0 : min(_3216, 1.0))) * (_630 + 1.0))) + _635) * _557;
        float _645 = _525 * 0.5;
        float _646 = _535 * 0.5;
        float _647 = _545 * 0.5;
        float _648 = dot(vec3(_645, _646, _647), vec3(_645, _646, _647));
        float _653 = (_648 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_648);
        float _661 = (dot(vec3(_194, _195, _196), vec3(_653 * _645, _653 * _646, _653 * _647)) + 1.0) * 0.5;
        float _3249 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
        float _670 = sqrt(((_646 * _646) + (_645 * _645)) + (_647 * _647)) / (_558 + 9.9999997473787516355514526367188e-06);
        float _3260 = isnan(0.0) ? _670 : (isnan(_670) ? 0.0 : max(_670, 0.0));
        float _671 = isnan(1.0) ? _3260 : (isnan(_3260) ? 1.0 : min(_3260, 1.0));
        float _672 = _671 * 2.0;
        float _676 = (1.0 - _671) / (_671 + 1.0);
        float _3271 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
        float _677 = isnan(1.0) ? _3271 : (isnan(_3271) ? 1.0 : min(_3271, 1.0));
        float _686 = ((((1.0 - _677) * (_672 + 2.0)) * exp2(log2(isnan(1.0) ? _3249 : (isnan(_3249) ? 1.0 : min(_3249, 1.0))) * (_672 + 1.0))) + _677) * _558;
        _694 = _525;
        _696 = _524;
        _697 = _523;
        _698 = _535;
        _699 = _534;
        _700 = _533;
        _701 = _545;
        _702 = _544;
        _703 = _543;
        _704 = _558;
        _705 = _557;
        _706 = _556;
        _707 = cbModelParam._m0[36u].z * (isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0)));
        _708 = cbModelParam._m0[36u].z * (isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0)));
        _709 = cbModelParam._m0[36u].z * (isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0)));
    }
    else
    {
        _694 = _695;
        _696 = _695;
        _697 = _695;
        _698 = _695;
        _699 = _695;
        _700 = _695;
        _701 = _695;
        _702 = _695;
        _703 = _695;
        _704 = _695;
        _705 = _695;
        _706 = _695;
        _707 = 0.0;
        _708 = 0.0;
        _709 = 0.0;
    }
    float _1004;
    float _1005;
    float _1006;
    float _1007;
    float _1008;
    float _1009;
    float _1010;
    float _1011;
    float _1012;
    float _1013;
    float _1014;
    float _1015;
    float _1016;
    float _1017;
    float _1018;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _735 = fma(_392, cbModelParam._m0[30u].z, fma(_388, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _384));
        float _739 = fma(_392, cbModelParam._m0[31u].z, fma(_388, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _384));
        float _743 = fma(_392, cbModelParam._m0[32u].z, fma(_388, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _384));
        float _766 = _384 + _194;
        float _767 = _388 + _195;
        float _768 = _392 + _196;
        float _778 = fma(_768, cbModelParam._m0[30u].z, fma(_767, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _766)) - _735;
        float _779 = fma(_768, cbModelParam._m0[31u].z, fma(_767, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _766)) - _739;
        float _780 = fma(_768, cbModelParam._m0[32u].z, fma(_767, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _766)) - _743;
        float _784 = inversesqrt(dot(vec3(_778, _779, _780), vec3(_778, _779, _780)));
        float _797 = ((_784 * _778) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_735 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _798 = ((_784 * _779) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_739 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _799 = ((_784 * _780) / cbModelParam._m0[35u].z) + ((((((_743 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _801 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_797, _798, _799), 0.0);
        vec4 _808 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_797, _798, _799), 0.0);
        vec4 _815 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_797, _798, _799), 0.0);
        vec4 _822 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_797, _798, _799), 0.0);
        float _834 = exp2((_801.w + (-0.5)) * 20.0) * 2.0;
        float _835 = _834 * (_801.x + (-0.5));
        float _836 = _834 * (_801.y + (-0.5));
        float _837 = _834 * (_801.z + (-0.5));
        float _844 = exp2((_808.w + (-0.5)) * 20.0) * 2.0;
        float _845 = _844 * (_808.x + (-0.5));
        float _846 = _844 * (_808.y + (-0.5));
        float _847 = _844 * (_808.z + (-0.5));
        float _854 = exp2((_815.w + (-0.5)) * 20.0) * 2.0;
        float _855 = _854 * (_815.x + (-0.5));
        float _856 = _854 * (_815.y + (-0.5));
        float _857 = _854 * (_815.z + (-0.5));
        float _864 = exp2((_822.w + (-0.5)) * 20.0) * 2.0;
        float _865 = _864 * (_822.x + (-0.5));
        float _866 = _864 * (_822.y + (-0.5));
        float _867 = _864 * (_822.z + (-0.5));
        float _868 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
        float _869 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
        float _870 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
        float _871 = _835 * 0.5;
        float _872 = _845 * 0.5;
        float _873 = _855 * 0.5;
        float _874 = dot(vec3(_871, _872, _873), vec3(_871, _872, _873));
        float _879 = (_874 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_874);
        float _887 = (dot(vec3(_194, _195, _196), vec3(_879 * _871, _879 * _872, _879 * _873)) + 1.0) * 0.5;
        float _3312 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
        float _896 = sqrt(((_872 * _872) + (_871 * _871)) + (_873 * _873)) / (_868 + 9.9999997473787516355514526367188e-06);
        float _3323 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
        float _897 = isnan(1.0) ? _3323 : (isnan(_3323) ? 1.0 : min(_3323, 1.0));
        float _898 = _897 * 2.0;
        float _902 = (1.0 - _897) / (_897 + 1.0);
        float _3334 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
        float _903 = isnan(1.0) ? _3334 : (isnan(_3334) ? 1.0 : min(_3334, 1.0));
        float _912 = ((((1.0 - _903) * (_898 + 2.0)) * exp2(log2(isnan(1.0) ? _3312 : (isnan(_3312) ? 1.0 : min(_3312, 1.0))) * (_898 + 1.0))) + _903) * _868;
        float _913 = _836 * 0.5;
        float _914 = _846 * 0.5;
        float _915 = _856 * 0.5;
        float _916 = dot(vec3(_913, _914, _915), vec3(_913, _914, _915));
        float _921 = (_916 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_916);
        float _929 = (dot(vec3(_194, _195, _196), vec3(_921 * _913, _921 * _914, _921 * _915)) + 1.0) * 0.5;
        float _3345 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
        float _938 = sqrt(((_914 * _914) + (_913 * _913)) + (_915 * _915)) / (_869 + 9.9999997473787516355514526367188e-06);
        float _3356 = isnan(0.0) ? _938 : (isnan(_938) ? 0.0 : max(_938, 0.0));
        float _939 = isnan(1.0) ? _3356 : (isnan(_3356) ? 1.0 : min(_3356, 1.0));
        float _940 = _939 * 2.0;
        float _944 = (1.0 - _939) / (_939 + 1.0);
        float _3367 = isnan(0.0) ? _944 : (isnan(_944) ? 0.0 : max(_944, 0.0));
        float _945 = isnan(1.0) ? _3367 : (isnan(_3367) ? 1.0 : min(_3367, 1.0));
        float _954 = ((((1.0 - _945) * (_940 + 2.0)) * exp2(log2(isnan(1.0) ? _3345 : (isnan(_3345) ? 1.0 : min(_3345, 1.0))) * (_940 + 1.0))) + _945) * _869;
        float _955 = _837 * 0.5;
        float _956 = _847 * 0.5;
        float _957 = _857 * 0.5;
        float _958 = dot(vec3(_955, _956, _957), vec3(_955, _956, _957));
        float _963 = (_958 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_958);
        float _971 = (dot(vec3(_194, _195, _196), vec3(_963 * _955, _963 * _956, _963 * _957)) + 1.0) * 0.5;
        float _3378 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
        float _980 = sqrt(((_956 * _956) + (_955 * _955)) + (_957 * _957)) / (_870 + 9.9999997473787516355514526367188e-06);
        float _3389 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
        float _981 = isnan(1.0) ? _3389 : (isnan(_3389) ? 1.0 : min(_3389, 1.0));
        float _982 = _981 * 2.0;
        float _986 = (1.0 - _981) / (_981 + 1.0);
        float _3400 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
        float _987 = isnan(1.0) ? _3400 : (isnan(_3400) ? 1.0 : min(_3400, 1.0));
        float _996 = ((((1.0 - _987) * (_982 + 2.0)) * exp2(log2(isnan(1.0) ? _3378 : (isnan(_3378) ? 1.0 : min(_3378, 1.0))) * (_982 + 1.0))) + _987) * _870;
        _1004 = _837;
        _1005 = _836;
        _1006 = _835;
        _1007 = _847;
        _1008 = _846;
        _1009 = _845;
        _1010 = _857;
        _1011 = _856;
        _1012 = _855;
        _1013 = _870;
        _1014 = _869;
        _1015 = _868;
        _1016 = cbModelParam._m0[36u].w * (isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0)));
        _1017 = cbModelParam._m0[36u].w * (isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0)));
        _1018 = cbModelParam._m0[36u].w * (isnan(0.0) ? _996 : (isnan(_996) ? 0.0 : max(_996, 0.0)));
    }
    else
    {
        _1004 = _695;
        _1005 = _695;
        _1006 = _695;
        _1007 = _695;
        _1008 = _695;
        _1009 = _695;
        _1010 = _695;
        _1011 = _695;
        _1012 = _695;
        _1013 = _695;
        _1014 = _695;
        _1015 = _695;
        _1016 = 0.0;
        _1017 = 0.0;
        _1018 = 0.0;
    }
    float _1028 = (cbModelParam._m0[1u].x * (_1016 - _707)) + _707;
    float _1029 = (cbModelParam._m0[1u].x * (_1017 - _708)) + _708;
    float _1030 = (cbModelParam._m0[1u].x * (_1018 - _709)) + _709;
    float _1051 = fma(_1030, cbSceneParam._m0[89u].z, fma(_1029, cbSceneParam._m0[89u].y, _1028 * cbSceneParam._m0[89u].x));
    float _1054 = fma(_1030, cbSceneParam._m0[90u].z, fma(_1029, cbSceneParam._m0[90u].y, _1028 * cbSceneParam._m0[90u].x));
    float _1057 = fma(_1030, cbSceneParam._m0[91u].z, fma(_1029, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1028));
    float _1072 = _360 * 0.5;
    float _1073 = _361 * 0.5;
    float _1074 = _362 * 0.5;
    float _1075 = dot(vec4(_1072, _1073, _1074, 1.0), vec4(_1006, _1009, _1012, _1015));
    float _1078 = dot(vec4(_1072, _1073, _1074, 1.0), vec4(_1005, _1008, _1011, _1014));
    float _1081 = dot(vec4(_1072, _1073, _1074, 1.0), vec4(_1004, _1007, _1010, _1013));
    float _1115;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1088 = dot(vec4(_1072, _1073, _1074, 1.0), vec4(_694, _698, _701, _704));
        float _1092 = dot(vec4(_1072, _1073, _1074, 1.0), vec4(_696, _699, _702, _705));
        float _1096 = dot(vec4(_1072, _1073, _1074, 1.0), vec4(_697, _700, _703, _706));
        float _1103 = dot(vec4(cbModelParam._m0[39u]), vec4(_1072, _1073, _1074, 1.0));
        _1115 = dot(vec3(isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0)), isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0)), isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1103) ? 0.0 : (isnan(0.0) ? _1103 : max(0.0, _1103))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1115 = 1.0;
    }
    float _1126;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1117 = dot(vec4(cbModelParam._m0[40u]), vec4(_1072, _1073, _1074, 1.0));
        _1126 = dot(vec3(isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0)), isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0)), isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1117) ? 0.0 : (isnan(0.0) ? _1117 : max(0.0, _1117))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1126 = 1.0;
    }
    float _1130 = (_1126 * cbModelParam._m0[1u].x) + (_1115 * (1.0 - cbModelParam._m0[1u].x));
    float _1139 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1221;
    float _1223;
    float _1225;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1188 = fma(_392, cbModelParam._m0[13u].z, fma(_388, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _384)) + cbModelParam._m0[13u].w;
        float _1192 = fma(_392, cbModelParam._m0[14u].z, fma(_388, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _384)) + cbModelParam._m0[14u].w;
        float _1196 = fma(_392, cbModelParam._m0[15u].z, fma(_388, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _384)) + cbModelParam._m0[15u].w;
        float _1199 = fma(_362, cbModelParam._m0[13u].z, fma(_361, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _360));
        float _1202 = fma(_362, cbModelParam._m0[14u].z, fma(_361, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _360));
        float _1205 = fma(_362, cbModelParam._m0[15u].z, fma(_361, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _360));
        float _1231;
        if (_1199 > 0.0)
        {
            _1231 = abs((1.0 - _1188) / _1199);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1199 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1188 + 1.0) / _1199);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1231 = frontier_phi_14_12_ladder;
        }
        float _1406;
        if (_1202 > 0.0)
        {
            _1406 = abs((1.0 - _1192) / _1202);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1202 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1192 + 1.0) / _1202);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1406 = frontier_phi_23_19_ladder;
        }
        float _1703;
        if (_1205 > 0.0)
        {
            _1703 = abs((1.0 - _1196) / _1205);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1205 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1196 + 1.0) / _1205);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _1703 = frontier_phi_35_30_ladder;
        }
        float _1705 = isnan(_1406) ? _1231 : (isnan(_1231) ? _1406 : min(_1231, _1406));
        float _1706 = isnan(_1703) ? _1705 : (isnan(_1705) ? _1703 : min(_1705, _1703));
        float _1710 = (_1706 * _1199) + _1188;
        float _1711 = (_1706 * _1202) + _1192;
        float _1712 = (_1706 * _1205) + _1196;
        float _1713 = _1706 * 9.9999997473787516355514526367188e-05;
        float _1715 = (-1.0) - _1713;
        float _1717 = _1713 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_1712 > _1717) || ((_1712 < _1715) || ((_1711 > _1717) || ((_1711 < _1715) || ((_1710 < _1715) || (_1710 > _1717))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1857 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1712, cbModelParam._m0[9u].z, fma(_1711, cbModelParam._m0[9u].y, _1710 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1712, cbModelParam._m0[10u].z, fma(_1711, cbModelParam._m0[10u].y, _1710 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1712, cbModelParam._m0[11u].z, fma(_1711, cbModelParam._m0[11u].y, _1710 * cbModelParam._m0[11u].x))), _1139);
            frontier_phi_13_35_ladder = _1857.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _1857.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _1857.x * cbModelParam._m0[1u].y;
        }
        _1221 = frontier_phi_13_35_ladder_2;
        _1223 = frontier_phi_13_35_ladder_1;
        _1225 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1209 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_360, _361, _362), _1139);
        _1221 = _1209.x * cbModelParam._m0[1u].y;
        _1223 = _1209.y * cbModelParam._m0[1u].y;
        _1225 = _1209.z * cbModelParam._m0[1u].y;
    }
    float _1228 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1321;
    float _1323;
    float _1325;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1285 = fma(_392, cbModelParam._m0[21u].z, fma(_388, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _384)) + cbModelParam._m0[21u].w;
        float _1289 = fma(_392, cbModelParam._m0[22u].z, fma(_388, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _384)) + cbModelParam._m0[22u].w;
        float _1293 = fma(_392, cbModelParam._m0[23u].z, fma(_388, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _384)) + cbModelParam._m0[23u].w;
        float _1296 = fma(_362, cbModelParam._m0[21u].z, fma(_361, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _360));
        float _1299 = fma(_362, cbModelParam._m0[22u].z, fma(_361, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _360));
        float _1302 = fma(_362, cbModelParam._m0[23u].z, fma(_361, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _360));
        float _1411;
        if (_1296 > 0.0)
        {
            _1411 = abs((1.0 - _1285) / _1296);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1296 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1285 + 1.0) / _1296);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1411 = frontier_phi_25_21_ladder;
        }
        float _1730;
        if (_1299 > 0.0)
        {
            _1730 = abs((1.0 - _1289) / _1299);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1299 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1289 + 1.0) / _1299);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1730 = frontier_phi_37_32_ladder;
        }
        float _2003;
        if (_1302 > 0.0)
        {
            _2003 = abs((1.0 - _1293) / _1302);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1302 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1293 + 1.0) / _1302);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2003 = frontier_phi_47_44_ladder;
        }
        float _2005 = isnan(_1730) ? _1411 : (isnan(_1411) ? _1730 : min(_1411, _1730));
        float _2006 = isnan(_2003) ? _2005 : (isnan(_2005) ? _2003 : min(_2005, _2003));
        float _2010 = (_2006 * _1296) + _1285;
        float _2011 = (_2006 * _1299) + _1289;
        float _2012 = (_2006 * _1302) + _1293;
        float _2013 = _2006 * 9.9999997473787516355514526367188e-05;
        float _2014 = (-1.0) - _2013;
        float _2016 = _2013 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2012 > _2016) || ((_2012 < _2014) || ((_2011 > _2016) || ((_2011 < _2014) || ((_2010 < _2014) || (_2010 > _2016))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2103 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2012, cbModelParam._m0[17u].z, fma(_2011, cbModelParam._m0[17u].y, _2010 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2012, cbModelParam._m0[18u].z, fma(_2011, cbModelParam._m0[18u].y, _2010 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2012, cbModelParam._m0[19u].z, fma(_2011, cbModelParam._m0[19u].y, _2010 * cbModelParam._m0[19u].x))), _1228);
            frontier_phi_22_47_ladder = _2103.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2103.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2103.x * cbModelParam._m0[1u].z;
        }
        _1321 = frontier_phi_22_47_ladder_2;
        _1323 = frontier_phi_22_47_ladder_1;
        _1325 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1305 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_360, _361, _362), _1228);
        _1321 = _1305.x * cbModelParam._m0[1u].z;
        _1323 = _1305.y * cbModelParam._m0[1u].z;
        _1325 = _1305.z * cbModelParam._m0[1u].z;
    }
    float _1337 = _351 * 0.01200000010430812835693359375;
    float _1339 = _1337 * ((cbModelParam._m0[1u].w * (_1321 - _1221)) + _1221);
    float _1340 = _1337 * ((cbModelParam._m0[1u].w * (_1323 - _1223)) + _1223);
    float _1341 = _1337 * ((cbModelParam._m0[1u].w * (_1325 - _1225)) + _1225);
    float _1344 = fma(_1341, cbSceneParam._m0[89u].z, fma(_1340, cbSceneParam._m0[89u].y, _1339 * cbSceneParam._m0[89u].x));
    float _1347 = fma(_1341, cbSceneParam._m0[90u].z, fma(_1340, cbSceneParam._m0[90u].y, _1339 * cbSceneParam._m0[90u].x));
    float _1350 = fma(_1341, cbSceneParam._m0[91u].z, fma(_1340, cbSceneParam._m0[91u].y, _1339 * cbSceneParam._m0[91u].x));
    float _1385 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1389 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1393 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1397 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1398 = _1385 / _1397;
    float _1399 = _1389 / _1397;
    float _1400 = _1393 / _1397;
    float _1547;
    float _1548;
    float _1549;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1427 = ((uint(_1400 > cbSceneParam._m0[59u].y) + uint(_1400 > cbSceneParam._m0[59u].x)) + uint(_1400 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1428 = _1427 + 43u;
        uint _1436 = _1427 + 44u;
        uint _1444 = _1427 + 45u;
        uint _1452 = _1427 + 46u;
        float _1463 = fma(_1397, cbSceneParam._m0[_1428].w, fma(_1393, cbSceneParam._m0[_1428].z, fma(_1389, cbSceneParam._m0[_1428].y, _1385 * cbSceneParam._m0[_1428].x)));
        float _1467 = fma(_1397, cbSceneParam._m0[_1436].w, fma(_1393, cbSceneParam._m0[_1436].z, fma(_1389, cbSceneParam._m0[_1436].y, _1385 * cbSceneParam._m0[_1436].x)));
        float _1475 = fma(_1397, cbSceneParam._m0[_1452].w, fma(_1393, cbSceneParam._m0[_1452].z, fma(_1389, cbSceneParam._m0[_1452].y, _1385 * cbSceneParam._m0[_1452].x)));
        float _1480 = cbSceneParam._m0[33u].z * _1475;
        float _1482 = cbSceneParam._m0[33u].w * _1475;
        float _1485 = fma(_1397, cbSceneParam._m0[_1444].w, fma(_1393, cbSceneParam._m0[_1444].z, fma(_1389, cbSceneParam._m0[_1444].y, _1385 * cbSceneParam._m0[_1444].x))) / _1475;
        float _1533 = (cbSceneParam._m0[33u].x - sqrt(((_1399 * _1399) + (_1398 * _1398)) + (_1400 * _1400))) * cbSceneParam._m0[33u].y;
        float _3526 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1540 = (isnan(1.0) ? _3526 : (isnan(_3526) ? 1.0 : min(_3526, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1480 + _1463) / _1475, (_1482 + _1467) / _1475), _1485), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1482 + _1463) / _1475, (_1467 - _1480) / _1475), _1485), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1463 - _1480) / _1475, (_1467 - _1482) / _1475), _1485), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1463 - _1482) / _1475, (_1480 + _1467) / _1475), _1485), 0.0)).x), vec4(0.25)));
        _1547 = 1.0 - (_1540 * cbSceneParam._m0[34u].x);
        _1548 = 1.0 - (_1540 * cbSceneParam._m0[34u].y);
        _1549 = 1.0 - (_1540 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1547 = 1.0;
        _1548 = 1.0;
        _1549 = 1.0;
    }
    float _1613;
    float _1615;
    float _1617;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1601 = fma(_1397, cbSceneParam._m0[63u].w, fma(_1393, cbSceneParam._m0[63u].z, fma(_1389, cbSceneParam._m0[63u].y, _1385 * cbSceneParam._m0[63u].x)));
        float _1602 = fma(_1397, cbSceneParam._m0[60u].w, fma(_1393, cbSceneParam._m0[60u].z, fma(_1389, cbSceneParam._m0[60u].y, _1385 * cbSceneParam._m0[60u].x))) / _1601;
        float _1603 = fma(_1397, cbSceneParam._m0[61u].w, fma(_1393, cbSceneParam._m0[61u].z, fma(_1389, cbSceneParam._m0[61u].y, _1385 * cbSceneParam._m0[61u].x))) / _1601;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_1602 >= cbSceneParam._m0[64u].x) && (_1603 >= cbSceneParam._m0[64u].y)) && (_1602 <= cbSceneParam._m0[64u].z)) && (_1603 <= cbSceneParam._m0[64u].w))
        {
            float _1743 = fma(_1397, cbSceneParam._m0[62u].w, fma(_1393, cbSceneParam._m0[62u].z, fma(_1389, cbSceneParam._m0[62u].y, _1385 * cbSceneParam._m0[62u].x))) / _1601;
            float _1747 = isnan(cbSceneParam._m0[41u].w) ? _1743 : (isnan(_1743) ? cbSceneParam._m0[41u].w : max(_1743, cbSceneParam._m0[41u].w));
            float _1790 = (cbSceneParam._m0[33u].x - sqrt(((_1399 * _1399) + (_1398 * _1398)) + (_1400 * _1400))) * cbSceneParam._m0[33u].y;
            float _3542 = isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0));
            float _1797 = (isnan(1.0) ? _3542 : (isnan(_3542) ? 1.0 : min(_3542, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1602, cbSceneParam._m0[33u].w + _1603), _1747), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1602, _1603 - cbSceneParam._m0[33u].z), _1747), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1602 - cbSceneParam._m0[33u].z, _1603 - cbSceneParam._m0[33u].w), _1747), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1602 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1603), _1747), 0.0)).x), vec4(0.25)));
            float _1801 = 1.0 - (_1797 * cbSceneParam._m0[34u].x);
            float _1802 = 1.0 - (_1797 * cbSceneParam._m0[34u].y);
            float _1803 = 1.0 - (_1797 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_1803) ? _1549 : (isnan(_1549) ? _1803 : min(_1549, _1803));
            frontier_phi_34_33_ladder_1 = isnan(_1802) ? _1548 : (isnan(_1548) ? _1802 : min(_1548, _1802));
            frontier_phi_34_33_ladder_2 = isnan(_1801) ? _1547 : (isnan(_1547) ? _1801 : min(_1547, _1801));
        }
        else
        {
            frontier_phi_34_33_ladder = _1549;
            frontier_phi_34_33_ladder_1 = _1548;
            frontier_phi_34_33_ladder_2 = _1547;
        }
        _1613 = frontier_phi_34_33_ladder_2;
        _1615 = frontier_phi_34_33_ladder_1;
        _1617 = frontier_phi_34_33_ladder;
    }
    else
    {
        _1613 = _1547;
        _1615 = _1548;
        _1617 = _1549;
    }
    uvec4 _1622 = floatBitsToUint(cbInstanceData._m0[_325 + 5u]);
    uint _1624 = _1622.x * 14u;
    uint _1625 = _1624 + 13u;
    float _1632 = _351 + (-1.0);
    float _1638 = (cbLight._m0[_1625].x * _1632) + 1.0;
    float _1639 = (cbLight._m0[_1625].y * _1632) + 1.0;
    float _1640 = (cbLight._m0[_1625].z * _1632) + 1.0;
    float _1641 = (cbLight._m0[_1625].w * _1632) + 1.0;
    uint _1642 = _1624 + 5u;
    float _1648 = isnan(1.0) ? _1639 : (isnan(_1639) ? 1.0 : min(_1639, 1.0));
    uint _1652 = _1624 + 4u;
    float _1662 = isnan(1.0) ? _1638 : (isnan(_1638) ? 1.0 : min(_1638, 1.0));
    uint _1666 = _1624 | 1u;
    float _1677 = dot(vec3(cbLight._m0[_1624].xyz), vec3(_194, _195, _196));
    float _1680 = dot(vec3(cbLight._m0[_1666].xyz), vec3(_194, _195, _196));
    float _3578 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
    float _3589 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
    float _1685 = (isnan(1.0) ? _3578 : (isnan(_3578) ? 1.0 : min(_3578, 1.0))) * 0.3183098733425140380859375;
    float _1687 = (isnan(1.0) ? _3589 : (isnan(_3589) ? 1.0 : min(_3589, 1.0))) * 0.3183098733425140380859375;
    float _1694 = ((cbLight._m0[_1642].x * _1648) * _1687) + (((cbLight._m0[_1652].x * _1613) * _1662) * _1685);
    float _1695 = ((_1648 * cbLight._m0[_1642].y) * _1687) + (((cbLight._m0[_1652].y * _1615) * _1662) * _1685);
    float _1696 = ((_1648 * cbLight._m0[_1642].z) * _1687) + (((cbLight._m0[_1652].z * _1617) * _1662) * _1685);
    uvec4 _1700 = floatBitsToUint(cbLight._m0[_1624 + 12u]);
    bool _1702 = _1700.x == 0u;
    float _1804;
    float _1806;
    float _1808;
    if (_1702)
    {
        _1804 = _1694;
        _1806 = _1695;
        _1808 = _1696;
    }
    else
    {
        uint _1812 = _1624 + 6u;
        float _1828 = (dot(vec3(cbLight._m0[_1624 + 2u].xyz), vec3(_194, _195, _196)) * 0.5) + 0.5;
        float _1829 = _1828 * _1828;
        float _3600 = isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0));
        float _1830 = isnan(1.0) ? _3600 : (isnan(_3600) ? 1.0 : min(_3600, 1.0));
        float _1831 = isnan(1.0) ? _1640 : (isnan(_1640) ? 1.0 : min(_1640, 1.0));
        _1804 = (((cbLight._m0[_1812].x * 0.3183098733425140380859375) * _1830) * _1831) + _1694;
        _1806 = (((cbLight._m0[_1812].y * 0.3183098733425140380859375) * _1830) * _1831) + _1695;
        _1808 = (((cbLight._m0[_1812].z * 0.3183098733425140380859375) * _1830) * _1831) + _1696;
    }
    bool _1811 = _1700.y == 0u;
    float _1866;
    float _1868;
    float _1870;
    if (_1811)
    {
        _1866 = _1804;
        _1868 = _1806;
        _1870 = _1808;
    }
    else
    {
        uint _1974 = _1624 + 7u;
        float _1990 = (dot(vec3(cbLight._m0[_1624 + 3u].xyz), vec3(_194, _195, _196)) * 0.5) + 0.5;
        float _1991 = _1990 * _1990;
        float _3616 = isnan(0.0) ? _1991 : (isnan(_1991) ? 0.0 : max(_1991, 0.0));
        float _1992 = isnan(1.0) ? _3616 : (isnan(_3616) ? 1.0 : min(_3616, 1.0));
        float _1993 = isnan(1.0) ? _1641 : (isnan(_1641) ? 1.0 : min(_1641, 1.0));
        _1866 = (((cbLight._m0[_1974].x * 0.3183098733425140380859375) * _1992) * _1993) + _1804;
        _1868 = (((cbLight._m0[_1974].y * 0.3183098733425140380859375) * _1992) * _1993) + _1806;
        _1870 = (((cbLight._m0[_1974].z * 0.3183098733425140380859375) * _1992) * _1993) + _1808;
    }
    uint _1872 = _1624 + 8u;
    float _1878 = cbLight._m0[_1624].x + _276;
    float _1879 = cbLight._m0[_1624].y + _277;
    float _1880 = cbLight._m0[_1624].z + _278;
    float _1884 = inversesqrt(dot(vec3(_1878, _1879, _1880), vec3(_1878, _1879, _1880)));
    float _1888 = dot(vec3(_194, _195, _196), vec3(cbLight._m0[_1624].xyz));
    float _3632 = isnan(0.0) ? _1888 : (isnan(_1888) ? 0.0 : max(_1888, 0.0));
    float _1891 = isnan(1.0) ? _3632 : (isnan(_3632) ? 1.0 : min(_3632, 1.0));
    float _3643 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _1892 = isnan(1.0) ? _3643 : (isnan(_3643) ? 1.0 : min(_3643, 1.0));
    float _1893 = dot(vec3(cbLight._m0[_1624].xyz), vec3(_1878 * _1884, _1879 * _1884, _1880 * _1884));
    float _3654 = isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0));
    float _1904 = (exp2(log2(1.0 - (isnan(1.0) ? _3654 : (isnan(_3654) ? 1.0 : min(_3654, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1910 = (0.5 / ((_1891 + 9.9999999392252902907785028219223e-09) + _1892)) * _1891;
    float _3665 = isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0));
    float _1912 = (isnan(1.0) ? _3665 : (isnan(_3665) ? 1.0 : min(_3665, 1.0))) * 0.31831014156341552734375;
    uint _1926 = _1624 + 9u;
    float _1932 = cbLight._m0[_1666].x + _276;
    float _1933 = cbLight._m0[_1666].y + _277;
    float _1934 = cbLight._m0[_1666].z + _278;
    float _1938 = inversesqrt(dot(vec3(_1932, _1933, _1934), vec3(_1932, _1933, _1934)));
    float _1942 = dot(vec3(_194, _195, _196), vec3(cbLight._m0[_1666].xyz));
    float _3676 = isnan(0.0) ? _1942 : (isnan(_1942) ? 0.0 : max(_1942, 0.0));
    float _1945 = isnan(1.0) ? _3676 : (isnan(_3676) ? 1.0 : min(_3676, 1.0));
    float _1946 = dot(vec3(cbLight._m0[_1666].xyz), vec3(_1932 * _1938, _1933 * _1938, _1934 * _1938));
    float _3687 = isnan(0.0) ? _1946 : (isnan(_1946) ? 0.0 : max(_1946, 0.0));
    float _1955 = (exp2(log2(1.0 - (isnan(1.0) ? _3687 : (isnan(_3687) ? 1.0 : min(_3687, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1959 = (0.5 / ((_1945 + 9.9999999392252902907785028219223e-09) + _1892)) * _1945;
    float _3698 = isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0));
    float _1961 = (isnan(1.0) ? _3698 : (isnan(_3698) ? 1.0 : min(_3698, 1.0))) * 0.31831014156341552734375;
    float _1971 = (((_1955 * cbLight._m0[_1926].x) * _1961) * _1648) + ((((cbLight._m0[_1872].x * _1613) * _1904) * _1912) * _1662);
    float _1972 = (((_1955 * cbLight._m0[_1926].y) * _1961) * _1648) + ((((cbLight._m0[_1872].y * _1615) * _1904) * _1912) * _1662);
    float _1973 = (((_1955 * cbLight._m0[_1926].z) * _1961) * _1648) + ((((cbLight._m0[_1872].z * _1617) * _1904) * _1912) * _1662);
    float _2029;
    float _2031;
    float _2033;
    if (_1702)
    {
        _2029 = _1971;
        _2031 = _1972;
        _2033 = _1973;
    }
    else
    {
        uint _2035 = _1624 + 10u;
        uint _2041 = _1624 + 2u;
        float _2047 = cbLight._m0[_2041].x + _276;
        float _2048 = cbLight._m0[_2041].y + _277;
        float _2049 = cbLight._m0[_2041].z + _278;
        float _2053 = inversesqrt(dot(vec3(_2047, _2048, _2049), vec3(_2047, _2048, _2049)));
        float _2057 = dot(vec3(_194, _195, _196), vec3(cbLight._m0[_2041].xyz));
        float _3709 = isnan(0.0) ? _2057 : (isnan(_2057) ? 0.0 : max(_2057, 0.0));
        float _2060 = isnan(1.0) ? _3709 : (isnan(_3709) ? 1.0 : min(_3709, 1.0));
        float _2061 = dot(vec3(cbLight._m0[_2041].xyz), vec3(_2047 * _2053, _2048 * _2053, _2049 * _2053));
        float _3720 = isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : max(_2061, 0.0));
        float _2070 = (exp2(log2(1.0 - (isnan(1.0) ? _3720 : (isnan(_3720) ? 1.0 : min(_3720, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2074 = (0.5 / ((_2060 + 9.9999999392252902907785028219223e-09) + _1892)) * _2060;
        float _3731 = isnan(0.0) ? _2074 : (isnan(_2074) ? 0.0 : max(_2074, 0.0));
        float _2076 = (isnan(1.0) ? _3731 : (isnan(_3731) ? 1.0 : min(_3731, 1.0))) * 0.31831014156341552734375;
        float _2077 = isnan(1.0) ? _1640 : (isnan(_1640) ? 1.0 : min(_1640, 1.0));
        _2029 = (((_2070 * cbLight._m0[_2035].x) * _2076) * _2077) + _1971;
        _2031 = (((_2070 * cbLight._m0[_2035].y) * _2076) * _2077) + _1972;
        _2033 = (((_2070 * cbLight._m0[_2035].z) * _2076) * _2077) + _1973;
    }
    float _2108;
    float _2110;
    float _2112;
    if (_1811)
    {
        _2108 = _2029;
        _2110 = _2031;
        _2112 = _2033;
    }
    else
    {
        uint _2119 = _1624 + 11u;
        uint _2125 = _1624 + 3u;
        float _2131 = cbLight._m0[_2125].x + _276;
        float _2132 = cbLight._m0[_2125].y + _277;
        float _2133 = cbLight._m0[_2125].z + _278;
        float _2137 = inversesqrt(dot(vec3(_2131, _2132, _2133), vec3(_2131, _2132, _2133)));
        float _2141 = dot(vec3(_194, _195, _196), vec3(cbLight._m0[_2125].xyz));
        float _3747 = isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0));
        float _2144 = isnan(1.0) ? _3747 : (isnan(_3747) ? 1.0 : min(_3747, 1.0));
        float _2145 = dot(vec3(cbLight._m0[_2125].xyz), vec3(_2131 * _2137, _2132 * _2137, _2133 * _2137));
        float _3758 = isnan(0.0) ? _2145 : (isnan(_2145) ? 0.0 : max(_2145, 0.0));
        float _2154 = (exp2(log2(1.0 - (isnan(1.0) ? _3758 : (isnan(_3758) ? 1.0 : min(_3758, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2158 = (0.5 / ((_2144 + 9.9999999392252902907785028219223e-09) + _1892)) * _2144;
        float _3769 = isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0));
        float _2160 = (isnan(1.0) ? _3769 : (isnan(_3769) ? 1.0 : min(_3769, 1.0))) * 0.31831014156341552734375;
        float _2161 = isnan(1.0) ? _1641 : (isnan(_1641) ? 1.0 : min(_1641, 1.0));
        _2108 = (((_2154 * cbLight._m0[_2119].x) * _2160) * _2161) + _2029;
        _2110 = (((_2154 * cbLight._m0[_2119].y) * _2160) * _2161) + _2031;
        _2112 = (((_2154 * cbLight._m0[_2119].z) * _2160) * _2161) + _2033;
    }
    float _2227;
    float _2229;
    float _2231;
    float _2233;
    float _2235;
    float _2237;
    if (_1622.y == 0u)
    {
        uvec4 _2182 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2183 = _2182.x;
        uint _2194 = uint((float(_2182.y) * floor(float(uint(cbSceneParam._m0[85u].y * _285) / _2183))) + floor(float(uint(cbSceneParam._m0[85u].x * _284) / _2183)));
        float _2204 = (log2(_1400 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2205 = isnan(0.0) ? _2204 : (isnan(_2204) ? 0.0 : max(_2204, 0.0));
        uint _2208 = uint(isnan(14.0) ? _2205 : (isnan(_2205) ? 14.0 : min(_2205, 14.0)));
        uvec4 _2213 = texelFetch(g_lightClusterGridBuffer, int(((_2208 << 2u) + (_2194 << 6u)) >> 2u));
        uint _2214 = _2213.x;
        uint _2215 = _2182.z;
        float _2296;
        float _2298;
        float _2300;
        float _2302;
        float _2304;
        float _2306;
        if (((((1u << ((_2215 >> 4u) & 15u)) + 4294967295u) & _2214) == 0u) || ((_2215 & 240u) == 0u))
        {
            _2296 = 0.0;
            _2298 = 0.0;
            _2300 = 0.0;
            _2302 = 0.0;
            _2304 = 0.0;
            _2306 = 0.0;
        }
        else
        {
            float _2297;
            float _2299;
            float _2301;
            float _2303;
            float _2305;
            float _2307;
            float _2439 = 0.0;
            float _2440 = 0.0;
            float _2441 = 0.0;
            float _2442 = 0.0;
            float _2443 = 0.0;
            float _2444 = 0.0;
            uint _2445 = 0u;
            uint _2454;
            bool _2455;
            for (;;)
            {
                _2454 = texelFetch(g_lightClassification, int((((_2208 << 5u) + (_2194 << 9u)) + (_2445 << 2u)) >> 2u)).x;
                _2455 = _2454 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2455)
                {
                    frontier_phi_66_pred = _2444;
                    frontier_phi_66_pred_1 = _2443;
                    frontier_phi_66_pred_2 = _2442;
                    frontier_phi_66_pred_3 = _2441;
                    frontier_phi_66_pred_4 = _2440;
                    frontier_phi_66_pred_5 = _2439;
                }
                else
                {
                    float _2563;
                    float _2564;
                    float _2565;
                    float _2566;
                    float _2567;
                    float _2568;
                    uint _2569;
                    _2563 = _2439;
                    _2564 = _2440;
                    _2565 = _2441;
                    _2566 = _2442;
                    _2567 = _2443;
                    _2568 = _2444;
                    _2569 = _2454;
                    float _2495;
                    float _2496;
                    float _2497;
                    float _2498;
                    float _2499;
                    float _2500;
                    for (;;)
                    {
                        uint _2573 = uint(findLSB(_2569)) + (_2445 << 5u);
                        uint _2570 = (_2569 + 4294967295u) & _2569;
                        uint _2575 = _2573 * 48u;
                        vec4 _2589 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2575)).x, texelFetch(g_PointLightRenderingBuffer, int(_2575 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2575 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2575 + 3u)).x));
                        uint _2595 = (_2573 * 48u) + 4u;
                        vec4 _2608 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2595)).x, texelFetch(g_PointLightRenderingBuffer, int(_2595 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2595 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2595 + 3u)).x));
                        uint _2614 = (_2573 * 48u) + 8u;
                        vec3 _2625 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2614)).x, texelFetch(g_PointLightRenderingBuffer, int(_2614 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2614 + 2u)).x));
                        float _2629 = _2589.x - _1398;
                        float _2630 = _2589.y - _1399;
                        float _2631 = _2589.z - _1400;
                        float _2632 = dot(vec3(_2629, _2630, _2631), vec3(_2629, _2630, _2631));
                        float _2635 = inversesqrt(_2632);
                        float _2644 = 1.0 - (_2632 * _2589.w);
                        float _3795 = isnan(0.0) ? _2644 : (isnan(_2644) ? 0.0 : max(_2644, 0.0));
                        float _2645 = isnan(1.0) ? _3795 : (isnan(_3795) ? 1.0 : min(_3795, 1.0));
                        float _2646 = sqrt(_2632) * _2608.w;
                        float _2649 = 1.39999997615814208984375 / (_2646 + 1.39999997615814208984375);
                        float _2650 = _2649 * _2649;
                        float _2653 = ((1.0 - _2650) * dot(vec3(_306, _309, _312), vec3(_2635 * _2629, _2635 * _2630, _2635 * _2631))) + _2650;
                        float _2656 = _2646 * _2646;
                        float _2660 = ((isnan(0.0) ? _2653 : (isnan(_2653) ? 0.0 : max(_2653, 0.0))) * _2645) / ((_2656 * 0.699999988079071044921875) + 1.0);
                        float _2664 = (-0.0) - _1398;
                        float _2665 = (-0.0) - _1399;
                        float _2666 = (-0.0) - _1400;
                        float _2670 = inversesqrt(dot(vec3(_2664, _2665, _2666), vec3(_2664, _2665, _2666)));
                        float _2674 = dot(vec3(_306, _309, _312), vec3(_2670 * _2664, _2670 * _2665, _2670 * _2666));
                        float _3811 = isnan(0.0) ? _2674 : (isnan(_2674) ? 0.0 : max(_2674, 0.0));
                        float _3822 = isnan(0.0) ? _2653 : (isnan(_2653) ? 0.0 : max(_2653, 0.0));
                        float _2678 = isnan(1.0) ? _3822 : (isnan(_3822) ? 1.0 : min(_3822, 1.0));
                        float _2682 = (0.5 / (((isnan(1.0) ? _3811 : (isnan(_3811) ? 1.0 : min(_3811, 1.0))) + 9.9999999392252902907785028219223e-09) + _2678)) * _2678;
                        float _3833 = isnan(0.0) ? _2682 : (isnan(_2682) ? 0.0 : max(_2682, 0.0));
                        float _2691 = (((isnan(1.0) ? _3833 : (isnan(_3833) ? 1.0 : min(_3833, 1.0))) * 3.1415927410125732421875) / ((_2656 * 2.1991131305694580078125) + 3.141590118408203125)) * _2645;
                        _2498 = (_2660 * _2608.x) + _2566;
                        _2499 = (_2660 * _2608.y) + _2567;
                        _2500 = (_2660 * _2608.z) + _2568;
                        _2495 = (_2691 * _2625.x) + _2563;
                        _2496 = (_2691 * _2625.y) + _2564;
                        _2497 = (_2691 * _2625.z) + _2565;
                        if (_2570 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2563 = _2495;
                            _2564 = _2496;
                            _2565 = _2497;
                            _2566 = _2498;
                            _2567 = _2499;
                            _2568 = _2500;
                            _2569 = _2570;
                        }
                    }
                    frontier_phi_66_pred = _2500;
                    frontier_phi_66_pred_1 = _2499;
                    frontier_phi_66_pred_2 = _2498;
                    frontier_phi_66_pred_3 = _2497;
                    frontier_phi_66_pred_4 = _2496;
                    frontier_phi_66_pred_5 = _2495;
                }
                _2307 = frontier_phi_66_pred;
                _2305 = frontier_phi_66_pred_1;
                _2303 = frontier_phi_66_pred_2;
                _2301 = frontier_phi_66_pred_3;
                _2299 = frontier_phi_66_pred_4;
                _2297 = frontier_phi_66_pred_5;
                uint _2446 = _2445 + 1u;
                if (_2446 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2439 = _2297;
                    _2440 = _2299;
                    _2441 = _2301;
                    _2442 = _2303;
                    _2443 = _2305;
                    _2444 = _2307;
                    _2445 = _2446;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2296 = _2297;
            _2298 = _2299;
            _2300 = _2301;
            _2302 = _2303;
            _2304 = _2305;
            _2306 = _2307;
        }
        uvec4 _2310 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2311 = _2310.z;
        uint _2313 = (_2311 >> 8u) & 15u;
        float _2410;
        float _2412;
        float _2414;
        float _2416;
        float _2418;
        float _2420;
        if (((4294967295u << _2313) & _2214) == 0u)
        {
            _2410 = _2296;
            _2412 = _2298;
            _2414 = _2300;
            _2416 = _2302;
            _2418 = _2304;
            _2420 = _2306;
        }
        else
        {
            float _2435 = inversesqrt(dot(vec3(_1398, _1399, _1400), vec3(_1398, _1399, _1400)));
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2313 < ((_2311 >> 12u) & 15u))
            {
                float _2411;
                float _2413;
                float _2415;
                float _2417;
                float _2419;
                float _2421;
                float _2546 = _2296;
                float _2547 = _2298;
                float _2548 = _2300;
                float _2549 = _2302;
                float _2550 = _2304;
                float _2551 = _2306;
                uint _2552 = _2313;
                uint _2561;
                bool _2562;
                for (;;)
                {
                    _2561 = texelFetch(g_lightClassification, int((((_2208 << 5u) + (_2194 << 9u)) + (_2552 << 2u)) >> 2u)).x;
                    _2562 = _2561 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_2562)
                    {
                        frontier_phi_72_pred = _2551;
                        frontier_phi_72_pred_1 = _2550;
                        frontier_phi_72_pred_2 = _2549;
                        frontier_phi_72_pred_3 = _2548;
                        frontier_phi_72_pred_4 = _2547;
                        frontier_phi_72_pred_5 = _2546;
                    }
                    else
                    {
                        float _2696;
                        float _2697;
                        float _2698;
                        float _2699;
                        float _2700;
                        float _2701;
                        float _2948;
                        float _2949;
                        float _2950;
                        float _2951;
                        float _2952;
                        float _2953;
                        float _2709 = _2546;
                        float _2710 = _2547;
                        float _2711 = _2548;
                        float _2712 = _2549;
                        float _2713 = _2550;
                        float _2714 = _2551;
                        uint _2715 = _2561;
                        uint _2716;
                        vec4 _2741;
                        float _2742;
                        vec4 _2757;
                        vec3 _2769;
                        vec4 _2785;
                        vec4 _2801;
                        float _2848;
                        bool _2849;
                        for (;;)
                        {
                            uint _2726 = ((_2552 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2715));
                            _2716 = (_2715 + 4294967295u) & _2715;
                            uint _2728 = _2726 * 40u;
                            _2741 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2728)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2728 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2728 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2728 + 3u)).x));
                            _2742 = _2741.w;
                            uint _2744 = (_2726 * 40u) + 4u;
                            _2757 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2744)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2744 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2744 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2744 + 3u)).x));
                            uint _2759 = (_2726 * 40u) + 8u;
                            _2769 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2759)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2759 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2759 + 2u)).x));
                            uint _2772 = (_2726 * 40u) + 16u;
                            _2785 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2772)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2772 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2772 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2772 + 3u)).x));
                            uint _2788 = (_2726 * 40u) + 20u;
                            _2801 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2788)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2788 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2788 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2788 + 3u)).x));
                            uint _2804 = (_2726 * 40u) + 24u;
                            vec4 _2817 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2804)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2804 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2804 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2804 + 3u)).x));
                            uint _2823 = (_2726 * 40u) + 28u;
                            vec4 _2836 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2823)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2823 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2823 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2823 + 3u)).x));
                            _2848 = fma(_1400, _2836.z, fma(_1399, _2836.y, _2836.x * _1398)) + _2836.w;
                            _2849 = !((fma(_1400, _2817.z, fma(_1399, _2817.y, _2817.x * _1398)) + _2817.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_2849)
                            {
                                float _2876 = _2741.x - _1398;
                                float _2877 = _2741.y - _1399;
                                float _2878 = _2741.z - _1400;
                                float _2879 = dot(vec3(_2876, _2877, _2878), vec3(_2876, _2877, _2878));
                                float _2882 = inversesqrt(_2879);
                                float _2883 = _2882 * _2876;
                                float _2884 = _2882 * _2877;
                                float _2885 = _2882 * _2878;
                                float _2889 = 1.0 - (_2879 / (_2742 * _2742));
                                float _3844 = isnan(0.0) ? _2889 : (isnan(_2889) ? 0.0 : max(_2889, 0.0));
                                float _2890 = isnan(1.0) ? _3844 : (isnan(_3844) ? 1.0 : min(_3844, 1.0));
                                float _2894 = sqrt(_2879) * _2757.w;
                                float _2896 = 1.39999997615814208984375 / (_2894 + 1.39999997615814208984375);
                                float _2897 = _2896 * _2896;
                                float _2898 = 1.0 - _2897;
                                float _2900 = (_2898 * dot(vec3(_2883, _2884, _2885), vec3(_306, _309, _312))) + _2897;
                                float _2903 = _2894 * _2894;
                                float _2907 = (fma(_1400, _2785.z, fma(_1399, _2785.y, _2785.x * _1398)) + _2785.w) / _2848;
                                float _2908 = (fma(_1400, _2801.z, fma(_1399, _2801.y, _2801.x * _1398)) + _2801.w) / _2848;
                                float _2912 = 1.0 - dot(vec2(_2907, _2908), vec2(_2907, _2908));
                                float _3860 = isnan(0.0) ? _2912 : (isnan(_2912) ? 0.0 : max(_2912, 0.0));
                                float _2913 = isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0));
                                float _2914 = _2913 * (((isnan(0.0) ? _2900 : (isnan(_2900) ? 0.0 : max(_2900, 0.0))) * _2890) / ((_2903 * 0.699999988079071044921875) + 1.0));
                                float _2924 = dot(vec3(_306, _309, _312), vec3((-0.0) - (_1398 * _2435), (-0.0) - (_1399 * _2435), (-0.0) - (_1400 * _2435)));
                                float _3871 = isnan(0.0) ? _2924 : (isnan(_2924) ? 0.0 : max(_2924, 0.0));
                                float _2932 = (_2898 * dot(vec3(_306, _309, _312), vec3(_2883, _2884, _2885))) + _2897;
                                float _3882 = isnan(0.0) ? _2932 : (isnan(_2932) ? 0.0 : max(_2932, 0.0));
                                float _2933 = isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0));
                                float _2937 = (0.5 / (((isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0))) + 9.9999999392252902907785028219223e-09) + _2933)) * _2933;
                                float _3893 = isnan(0.0) ? _2937 : (isnan(_2937) ? 0.0 : max(_2937, 0.0));
                                float _2944 = (_2913 * _2890) * (((isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0))) * 3.1415927410125732421875) / ((_2903 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_78_pred = _2914 * _2757.y;
                                frontier_phi_78_pred_1 = _2914 * _2757.x;
                                frontier_phi_78_pred_2 = _2944 * _2769.z;
                                frontier_phi_78_pred_3 = _2944 * _2769.y;
                                frontier_phi_78_pred_4 = _2944 * _2769.x;
                                frontier_phi_78_pred_5 = _2914 * _2757.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _2952 = frontier_phi_78_pred;
                            _2951 = frontier_phi_78_pred_1;
                            _2950 = frontier_phi_78_pred_2;
                            _2949 = frontier_phi_78_pred_3;
                            _2948 = frontier_phi_78_pred_4;
                            _2953 = frontier_phi_78_pred_5;
                            _2699 = _2951 + _2712;
                            _2700 = _2952 + _2713;
                            _2701 = _2953 + _2714;
                            _2696 = _2948 + _2709;
                            _2697 = _2949 + _2710;
                            _2698 = _2950 + _2711;
                            if (_2716 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2709 = _2696;
                                _2710 = _2697;
                                _2711 = _2698;
                                _2712 = _2699;
                                _2713 = _2700;
                                _2714 = _2701;
                                _2715 = _2716;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _2701;
                        frontier_phi_72_pred_1 = _2700;
                        frontier_phi_72_pred_2 = _2699;
                        frontier_phi_72_pred_3 = _2698;
                        frontier_phi_72_pred_4 = _2697;
                        frontier_phi_72_pred_5 = _2696;
                    }
                    _2421 = frontier_phi_72_pred;
                    _2419 = frontier_phi_72_pred_1;
                    _2417 = frontier_phi_72_pred_2;
                    _2415 = frontier_phi_72_pred_3;
                    _2413 = frontier_phi_72_pred_4;
                    _2411 = frontier_phi_72_pred_5;
                    uint _2553 = _2552 + 1u;
                    if (_2553 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2546 = _2411;
                        _2547 = _2413;
                        _2548 = _2415;
                        _2549 = _2417;
                        _2550 = _2419;
                        _2551 = _2421;
                        _2552 = _2553;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _2421;
                frontier_phi_60_61_ladder_1 = _2419;
                frontier_phi_60_61_ladder_2 = _2415;
                frontier_phi_60_61_ladder_3 = _2413;
                frontier_phi_60_61_ladder_4 = _2411;
                frontier_phi_60_61_ladder_5 = _2417;
            }
            else
            {
                frontier_phi_60_61_ladder = _2306;
                frontier_phi_60_61_ladder_1 = _2304;
                frontier_phi_60_61_ladder_2 = _2300;
                frontier_phi_60_61_ladder_3 = _2298;
                frontier_phi_60_61_ladder_4 = _2296;
                frontier_phi_60_61_ladder_5 = _2302;
            }
            _2410 = frontier_phi_60_61_ladder_4;
            _2412 = frontier_phi_60_61_ladder_3;
            _2414 = frontier_phi_60_61_ladder_2;
            _2416 = frontier_phi_60_61_ladder_5;
            _2418 = frontier_phi_60_61_ladder_1;
            _2420 = frontier_phi_60_61_ladder;
        }
        float _2425 = isnan(1.0) ? _351 : (isnan(_351) ? 1.0 : min(_351, 1.0));
        _2227 = (_2425 * _2416) + _1866;
        _2229 = (_2425 * _2418) + _1868;
        _2231 = (_2425 * _2420) + _1870;
        _2233 = ((_2410 * 0.039999999105930328369140625) * _2425) + _2108;
        _2235 = ((_2412 * 0.039999999105930328369140625) * _2425) + _2110;
        _2237 = ((_2414 * 0.039999999105930328369140625) * _2425) + _2112;
    }
    else
    {
        _2227 = _1866;
        _2229 = _1868;
        _2231 = _1870;
        _2233 = _2108;
        _2235 = _2110;
        _2237 = _2112;
    }
    float _3909 = isnan(0.0) ? _337 : (isnan(_337) ? 0.0 : max(_337, 0.0));
    float _3920 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
    float _3931 = isnan(0.0) ? _339 : (isnan(_339) ? 0.0 : max(_339, 0.0));
    float _3942 = isnan(0.0) ? _198 : (isnan(_198) ? 0.0 : max(_198, 0.0));
    float _2262 = cbInstanceData._m0[_325 + 6u].w * (isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0)));
    float _2267 = _284 / cbSceneParam._m0[86u].x;
    float _2268 = _285 / cbSceneParam._m0[86u].y;
    vec4 _2282 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2267, _2268, (log2((isnan(cbSceneParam._m0[77u].w) ? _217 : (isnan(_217) ? cbSceneParam._m0[77u].w : min(_217, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2284 = _2282.x;
    float _2285 = _2282.y;
    float _2286 = _2282.z;
    float _2287 = _2282.w;
    float _2359;
    float _2361;
    float _2363;
    float _2365;
    if (_217 > cbSceneParam._m0[78u].w)
    {
        float _2321 = isnan(_217) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _217 : min(cbSceneParam._m0[80u].w, _217));
        float _2322 = _2321 / _217;
        float _2333 = _2322 * _269;
        float _2334 = _270 * _2322;
        float _2335 = (-0.0) - _2334;
        float _2337 = _2322 * _271;
        float _2339 = (cbSceneParam._m0[77u].w * _2335) / _2321;
        float _2340 = _2339 + cbSceneParam._m0[79u].w;
        float _2341 = cbSceneParam._m0[79u].w - _2334;
        float _2347 = sqrt(((_2333 * _2333) + (_2334 * _2334)) + (_2337 * _2337));
        float _2350 = (1.0 - (cbSceneParam._m0[77u].w / _2321)) * _2347;
        float _2355 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2357 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2508;
        if (abs((_2335 - _2339) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2508 = ((((_2340 > 0.0) ? exp2(_2355 * _2340) : (2.0 - exp2(_2357 * _2340))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2350;
        }
        else
        {
            float _2468 = 1.0 / cbSceneParam._m0[80u].x;
            float _2469 = isnan(_2341) ? _2340 : (isnan(_2340) ? _2341 : max(_2340, _2341));
            float _2470 = isnan(_2341) ? _2340 : (isnan(_2340) ? _2341 : min(_2340, _2341));
            float _2479 = isnan(0.0) ? _2469 : (isnan(_2469) ? 0.0 : min(_2469, 0.0));
            float _2480 = isnan(0.0) ? _2470 : (isnan(_2470) ? 0.0 : min(_2470, 0.0));
            _2508 = ((abs(_2347 / _2335) * cbSceneParam._m0[80u].y) * ((((_2479 - _2480) * 2.0) - ((exp2(_2355 * (isnan(0.0) ? _2469 : (isnan(_2469) ? 0.0 : max(_2469, 0.0)))) - exp2(_2355 * (isnan(0.0) ? _2470 : (isnan(_2470) ? 0.0 : max(_2470, 0.0))))) * _2468)) - ((exp2(_2357 * _2479) - exp2(_2357 * _2480)) * _2468))) + (_2350 * cbSceneParam._m0[80u].z);
        }
        vec4 _2510 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2267, _2268, 1.0), 0.0);
        float _2519 = exp2((_2508 * (-1.44269502162933349609375)) * (1.0 - _2510.w));
        float _2520 = log2(_2519);
        float _2536 = log2(_2287);
        _2359 = (exp2(_2536 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2520 * cbSceneParam._m0[78u].x)) * _2510.x) / cbSceneParam._m0[78u].x)) + _2284;
        _2361 = (exp2(_2536 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2520 * cbSceneParam._m0[78u].y)) * _2510.y) / cbSceneParam._m0[78u].y)) + _2285;
        _2363 = (exp2(_2536 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2520 * cbSceneParam._m0[78u].z)) * _2510.z) / cbSceneParam._m0[78u].z)) + _2286;
        _2365 = _2519 * _2287;
    }
    else
    {
        _2359 = _2284;
        _2361 = _2285;
        _2363 = _2286;
        _2365 = _2287;
    }
    float _2377 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2378 = _2377 == 3.0;
    float _2380 = log2(_2365);
    float _2387 = exp2(_2380 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0))) * (_2227 + ((isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0))) * _351))) + ((_2233 + ((isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0))) * _1130)) * cbPerFrame._m0[3u].x));
    float _2388 = exp2(_2380 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0))) * (_2229 + ((isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0))) * _351))) + ((_2235 + ((isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0))) * _1130)) * cbPerFrame._m0[3u].x));
    float _2389 = exp2(_2380 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0))) * (_2231 + ((isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0))) * _351))) + ((_2237 + ((isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0))) * _1130)) * cbPerFrame._m0[3u].x));
    float _2398 = (_2377 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2398 * (_2378 ? _2387 : (_2387 + (cbSceneParam._m0[72u].w * _2359)));
    SV_Target.y = _2398 * (_2378 ? _2388 : (_2388 + (cbSceneParam._m0[72u].w * _2361)));
    SV_Target.z = _2398 * (_2378 ? _2389 : (_2389 + (cbSceneParam._m0[72u].w * _2363)));
    SV_Target.w = _2262;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2262;
}


