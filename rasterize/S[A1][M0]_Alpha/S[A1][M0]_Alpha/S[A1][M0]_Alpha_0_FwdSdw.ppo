#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D S_A1_M0_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _701;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _162 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _163 = _162 * NORMAL.x;
    float _164 = _162 * NORMAL.y;
    float _165 = _162 * NORMAL.z;
    vec4 _185 = texture(sampler2D(S_A1_M0_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _192 = _185.x * cbMtdParam._m0[9u].x;
    float _193 = _185.y * cbMtdParam._m0[9u].y;
    float _194 = _185.z * cbMtdParam._m0[9u].z;
    float _195 = _185.w * TEXCOORD_1.z;
    float _199 = inversesqrt(dot(vec3(_163, _164, _165), vec3(_163, _164, _165)));
    float _200 = _199 * _163;
    float _201 = _199 * _164;
    float _202 = _199 * _165;
    float _3097 = isnan(0.0) ? _195 : (isnan(_195) ? 0.0 : max(_195, 0.0));
    float _204 = isnan(1.0) ? _3097 : (isnan(_3097) ? 1.0 : min(_3097, 1.0));
    float _3108 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _3119 = isnan(0.0) ? _193 : (isnan(_193) ? 0.0 : max(_193, 0.0));
    float _3130 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _223 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _265 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _275 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _265);
    float _276 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _265);
    float _277 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _265);
    float _281 = inversesqrt(dot(vec3(_275, _276, _277), vec3(_275, _276, _277)));
    float _282 = _275 * _281;
    float _283 = _276 * _281;
    float _284 = _277 * _281;
    float _290 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _291 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _312 = fma(_202, cbSceneParam._m0[5u].z, fma(_201, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _200));
    float _315 = fma(_202, cbSceneParam._m0[6u].z, fma(_201, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _200));
    float _318 = fma(_202, cbSceneParam._m0[7u].z, fma(_201, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _200));
    uint _331 = uint(roundEven(NORMAL.w)) * 13u;
    uint _334 = (_331 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _340 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3108 : (isnan(_3108) ? 1.0 : min(_3108, 1.0)))) * cbInstanceData._m0[_334].x;
    float _341 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3119 : (isnan(_3119) ? 1.0 : min(_3119, 1.0)))) * cbInstanceData._m0[_334].y;
    float _342 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3130 : (isnan(_3130) ? 1.0 : min(_3130, 1.0)))) * cbInstanceData._m0[_334].z;
    float _3141 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    float _343 = isnan(1.0) ? _3141 : (isnan(_3141) ? 1.0 : min(_3141, 1.0));
    float _3152 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
    float _344 = isnan(1.0) ? _3152 : (isnan(_3152) ? 1.0 : min(_3152, 1.0));
    float _3163 = isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : max(_342, 0.0));
    float _345 = isnan(1.0) ? _3163 : (isnan(_3163) ? 1.0 : min(_3163, 1.0));
    vec4 _354 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _290, cbSceneParam._m0[86u].y * _291));
    float _357 = _354.x * TEXCOORD_1.w;
    float _358 = dot(vec3(_200, _201, _202), vec3(_282, _283, _284));
    float _361 = _358 * 2.0;
    float _366 = (_361 * _200) - _282;
    float _367 = (_361 * _201) - _283;
    float _368 = (_361 * _202) - _284;
    float _390 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _394 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _398 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _700;
    float _702;
    float _703;
    float _704;
    float _705;
    float _706;
    float _707;
    float _708;
    float _709;
    float _710;
    float _711;
    float _712;
    float _713;
    float _714;
    float _715;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _425 = fma(_398, cbModelParam._m0[26u].z, fma(_394, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _390));
        float _429 = fma(_398, cbModelParam._m0[27u].z, fma(_394, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _390));
        float _433 = fma(_398, cbModelParam._m0[28u].z, fma(_394, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _390));
        float _458 = _390 + _200;
        float _459 = _394 + _201;
        float _460 = _398 + _202;
        float _470 = fma(_460, cbModelParam._m0[26u].z, fma(_459, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _458)) - _425;
        float _471 = fma(_460, cbModelParam._m0[27u].z, fma(_459, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _458)) - _429;
        float _472 = fma(_460, cbModelParam._m0[28u].z, fma(_459, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _458)) - _433;
        float _476 = inversesqrt(dot(vec3(_470, _471, _472), vec3(_470, _471, _472)));
        float _489 = ((_476 * _470) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_425 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _490 = ((_476 * _471) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_429 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _491 = ((_476 * _472) / cbModelParam._m0[34u].z) + ((((((_433 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _494 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_489, _490, _491), 0.0);
        vec4 _501 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_489, _490, _491), 0.0);
        vec4 _508 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_489, _490, _491), 0.0);
        vec4 _515 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_489, _490, _491), 0.0);
        float _528 = exp2((_494.w + (-0.5)) * 20.0) * 2.0;
        float _529 = _528 * (_494.x + (-0.5));
        float _530 = _528 * (_494.y + (-0.5));
        float _531 = _528 * (_494.z + (-0.5));
        float _538 = exp2((_501.w + (-0.5)) * 20.0) * 2.0;
        float _539 = _538 * (_501.x + (-0.5));
        float _540 = _538 * (_501.y + (-0.5));
        float _541 = _538 * (_501.z + (-0.5));
        float _548 = exp2((_508.w + (-0.5)) * 20.0) * 2.0;
        float _549 = _548 * (_508.x + (-0.5));
        float _550 = _548 * (_508.y + (-0.5));
        float _551 = _548 * (_508.z + (-0.5));
        float _558 = exp2((_515.w + (-0.5)) * 20.0) * 2.0;
        float _559 = _558 * (_515.x + (-0.5));
        float _560 = _558 * (_515.y + (-0.5));
        float _561 = _558 * (_515.z + (-0.5));
        float _562 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
        float _563 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
        float _564 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0));
        float _565 = _529 * 0.5;
        float _566 = _539 * 0.5;
        float _567 = _549 * 0.5;
        float _568 = dot(vec3(_565, _566, _567), vec3(_565, _566, _567));
        float _573 = (_568 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_568);
        float _582 = (dot(vec3(_200, _201, _202), vec3(_573 * _565, _573 * _566, _573 * _567)) + 1.0) * 0.5;
        float _3189 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
        float _592 = sqrt(((_566 * _566) + (_565 * _565)) + (_567 * _567)) / (_562 + 9.9999997473787516355514526367188e-06);
        float _3200 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
        float _593 = isnan(1.0) ? _3200 : (isnan(_3200) ? 1.0 : min(_3200, 1.0));
        float _594 = _593 * 2.0;
        float _598 = (1.0 - _593) / (_593 + 1.0);
        float _3211 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
        float _599 = isnan(1.0) ? _3211 : (isnan(_3211) ? 1.0 : min(_3211, 1.0));
        float _608 = ((((1.0 - _599) * (_594 + 2.0)) * exp2(log2(isnan(1.0) ? _3189 : (isnan(_3189) ? 1.0 : min(_3189, 1.0))) * (_594 + 1.0))) + _599) * _562;
        float _609 = _530 * 0.5;
        float _610 = _540 * 0.5;
        float _611 = _550 * 0.5;
        float _612 = dot(vec3(_609, _610, _611), vec3(_609, _610, _611));
        float _617 = (_612 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_612);
        float _625 = (dot(vec3(_200, _201, _202), vec3(_617 * _609, _617 * _610, _617 * _611)) + 1.0) * 0.5;
        float _3222 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
        float _634 = sqrt(((_610 * _610) + (_609 * _609)) + (_611 * _611)) / (_563 + 9.9999997473787516355514526367188e-06);
        float _3233 = isnan(0.0) ? _634 : (isnan(_634) ? 0.0 : max(_634, 0.0));
        float _635 = isnan(1.0) ? _3233 : (isnan(_3233) ? 1.0 : min(_3233, 1.0));
        float _636 = _635 * 2.0;
        float _640 = (1.0 - _635) / (_635 + 1.0);
        float _3244 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
        float _641 = isnan(1.0) ? _3244 : (isnan(_3244) ? 1.0 : min(_3244, 1.0));
        float _650 = ((((1.0 - _641) * (_636 + 2.0)) * exp2(log2(isnan(1.0) ? _3222 : (isnan(_3222) ? 1.0 : min(_3222, 1.0))) * (_636 + 1.0))) + _641) * _563;
        float _651 = _531 * 0.5;
        float _652 = _541 * 0.5;
        float _653 = _551 * 0.5;
        float _654 = dot(vec3(_651, _652, _653), vec3(_651, _652, _653));
        float _659 = (_654 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_654);
        float _667 = (dot(vec3(_200, _201, _202), vec3(_659 * _651, _659 * _652, _659 * _653)) + 1.0) * 0.5;
        float _3255 = isnan(0.0) ? _667 : (isnan(_667) ? 0.0 : max(_667, 0.0));
        float _676 = sqrt(((_652 * _652) + (_651 * _651)) + (_653 * _653)) / (_564 + 9.9999997473787516355514526367188e-06);
        float _3266 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
        float _677 = isnan(1.0) ? _3266 : (isnan(_3266) ? 1.0 : min(_3266, 1.0));
        float _678 = _677 * 2.0;
        float _682 = (1.0 - _677) / (_677 + 1.0);
        float _3277 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
        float _683 = isnan(1.0) ? _3277 : (isnan(_3277) ? 1.0 : min(_3277, 1.0));
        float _692 = ((((1.0 - _683) * (_678 + 2.0)) * exp2(log2(isnan(1.0) ? _3255 : (isnan(_3255) ? 1.0 : min(_3255, 1.0))) * (_678 + 1.0))) + _683) * _564;
        _700 = _531;
        _702 = _530;
        _703 = _529;
        _704 = _541;
        _705 = _540;
        _706 = _539;
        _707 = _551;
        _708 = _550;
        _709 = _549;
        _710 = _564;
        _711 = _563;
        _712 = _562;
        _713 = cbModelParam._m0[36u].z * (isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0)));
        _714 = cbModelParam._m0[36u].z * (isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0)));
        _715 = cbModelParam._m0[36u].z * (isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0)));
    }
    else
    {
        _700 = _701;
        _702 = _701;
        _703 = _701;
        _704 = _701;
        _705 = _701;
        _706 = _701;
        _707 = _701;
        _708 = _701;
        _709 = _701;
        _710 = _701;
        _711 = _701;
        _712 = _701;
        _713 = 0.0;
        _714 = 0.0;
        _715 = 0.0;
    }
    float _1010;
    float _1011;
    float _1012;
    float _1013;
    float _1014;
    float _1015;
    float _1016;
    float _1017;
    float _1018;
    float _1019;
    float _1020;
    float _1021;
    float _1022;
    float _1023;
    float _1024;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _741 = fma(_398, cbModelParam._m0[30u].z, fma(_394, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _390));
        float _745 = fma(_398, cbModelParam._m0[31u].z, fma(_394, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _390));
        float _749 = fma(_398, cbModelParam._m0[32u].z, fma(_394, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _390));
        float _772 = _390 + _200;
        float _773 = _394 + _201;
        float _774 = _398 + _202;
        float _784 = fma(_774, cbModelParam._m0[30u].z, fma(_773, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _772)) - _741;
        float _785 = fma(_774, cbModelParam._m0[31u].z, fma(_773, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _772)) - _745;
        float _786 = fma(_774, cbModelParam._m0[32u].z, fma(_773, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _772)) - _749;
        float _790 = inversesqrt(dot(vec3(_784, _785, _786), vec3(_784, _785, _786)));
        float _803 = ((_790 * _784) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_741 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _804 = ((_790 * _785) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_745 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _805 = ((_790 * _786) / cbModelParam._m0[35u].z) + ((((((_749 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _807 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_803, _804, _805), 0.0);
        vec4 _814 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_803, _804, _805), 0.0);
        vec4 _821 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_803, _804, _805), 0.0);
        vec4 _828 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_803, _804, _805), 0.0);
        float _840 = exp2((_807.w + (-0.5)) * 20.0) * 2.0;
        float _841 = _840 * (_807.x + (-0.5));
        float _842 = _840 * (_807.y + (-0.5));
        float _843 = _840 * (_807.z + (-0.5));
        float _850 = exp2((_814.w + (-0.5)) * 20.0) * 2.0;
        float _851 = _850 * (_814.x + (-0.5));
        float _852 = _850 * (_814.y + (-0.5));
        float _853 = _850 * (_814.z + (-0.5));
        float _860 = exp2((_821.w + (-0.5)) * 20.0) * 2.0;
        float _861 = _860 * (_821.x + (-0.5));
        float _862 = _860 * (_821.y + (-0.5));
        float _863 = _860 * (_821.z + (-0.5));
        float _870 = exp2((_828.w + (-0.5)) * 20.0) * 2.0;
        float _871 = _870 * (_828.x + (-0.5));
        float _872 = _870 * (_828.y + (-0.5));
        float _873 = _870 * (_828.z + (-0.5));
        float _874 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
        float _875 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
        float _876 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
        float _877 = _841 * 0.5;
        float _878 = _851 * 0.5;
        float _879 = _861 * 0.5;
        float _880 = dot(vec3(_877, _878, _879), vec3(_877, _878, _879));
        float _885 = (_880 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_880);
        float _893 = (dot(vec3(_200, _201, _202), vec3(_885 * _877, _885 * _878, _885 * _879)) + 1.0) * 0.5;
        float _3318 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
        float _902 = sqrt(((_878 * _878) + (_877 * _877)) + (_879 * _879)) / (_874 + 9.9999997473787516355514526367188e-06);
        float _3329 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
        float _903 = isnan(1.0) ? _3329 : (isnan(_3329) ? 1.0 : min(_3329, 1.0));
        float _904 = _903 * 2.0;
        float _908 = (1.0 - _903) / (_903 + 1.0);
        float _3340 = isnan(0.0) ? _908 : (isnan(_908) ? 0.0 : max(_908, 0.0));
        float _909 = isnan(1.0) ? _3340 : (isnan(_3340) ? 1.0 : min(_3340, 1.0));
        float _918 = ((((1.0 - _909) * (_904 + 2.0)) * exp2(log2(isnan(1.0) ? _3318 : (isnan(_3318) ? 1.0 : min(_3318, 1.0))) * (_904 + 1.0))) + _909) * _874;
        float _919 = _842 * 0.5;
        float _920 = _852 * 0.5;
        float _921 = _862 * 0.5;
        float _922 = dot(vec3(_919, _920, _921), vec3(_919, _920, _921));
        float _927 = (_922 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_922);
        float _935 = (dot(vec3(_200, _201, _202), vec3(_927 * _919, _927 * _920, _927 * _921)) + 1.0) * 0.5;
        float _3351 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
        float _944 = sqrt(((_920 * _920) + (_919 * _919)) + (_921 * _921)) / (_875 + 9.9999997473787516355514526367188e-06);
        float _3362 = isnan(0.0) ? _944 : (isnan(_944) ? 0.0 : max(_944, 0.0));
        float _945 = isnan(1.0) ? _3362 : (isnan(_3362) ? 1.0 : min(_3362, 1.0));
        float _946 = _945 * 2.0;
        float _950 = (1.0 - _945) / (_945 + 1.0);
        float _3373 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
        float _951 = isnan(1.0) ? _3373 : (isnan(_3373) ? 1.0 : min(_3373, 1.0));
        float _960 = ((((1.0 - _951) * (_946 + 2.0)) * exp2(log2(isnan(1.0) ? _3351 : (isnan(_3351) ? 1.0 : min(_3351, 1.0))) * (_946 + 1.0))) + _951) * _875;
        float _961 = _843 * 0.5;
        float _962 = _853 * 0.5;
        float _963 = _863 * 0.5;
        float _964 = dot(vec3(_961, _962, _963), vec3(_961, _962, _963));
        float _969 = (_964 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_964);
        float _977 = (dot(vec3(_200, _201, _202), vec3(_969 * _961, _969 * _962, _969 * _963)) + 1.0) * 0.5;
        float _3384 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
        float _986 = sqrt(((_962 * _962) + (_961 * _961)) + (_963 * _963)) / (_876 + 9.9999997473787516355514526367188e-06);
        float _3395 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
        float _987 = isnan(1.0) ? _3395 : (isnan(_3395) ? 1.0 : min(_3395, 1.0));
        float _988 = _987 * 2.0;
        float _992 = (1.0 - _987) / (_987 + 1.0);
        float _3406 = isnan(0.0) ? _992 : (isnan(_992) ? 0.0 : max(_992, 0.0));
        float _993 = isnan(1.0) ? _3406 : (isnan(_3406) ? 1.0 : min(_3406, 1.0));
        float _1002 = ((((1.0 - _993) * (_988 + 2.0)) * exp2(log2(isnan(1.0) ? _3384 : (isnan(_3384) ? 1.0 : min(_3384, 1.0))) * (_988 + 1.0))) + _993) * _876;
        _1010 = _843;
        _1011 = _842;
        _1012 = _841;
        _1013 = _853;
        _1014 = _852;
        _1015 = _851;
        _1016 = _863;
        _1017 = _862;
        _1018 = _861;
        _1019 = _876;
        _1020 = _875;
        _1021 = _874;
        _1022 = cbModelParam._m0[36u].w * (isnan(0.0) ? _918 : (isnan(_918) ? 0.0 : max(_918, 0.0)));
        _1023 = cbModelParam._m0[36u].w * (isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0)));
        _1024 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0)));
    }
    else
    {
        _1010 = _701;
        _1011 = _701;
        _1012 = _701;
        _1013 = _701;
        _1014 = _701;
        _1015 = _701;
        _1016 = _701;
        _1017 = _701;
        _1018 = _701;
        _1019 = _701;
        _1020 = _701;
        _1021 = _701;
        _1022 = 0.0;
        _1023 = 0.0;
        _1024 = 0.0;
    }
    float _1034 = (cbModelParam._m0[1u].x * (_1022 - _713)) + _713;
    float _1035 = (cbModelParam._m0[1u].x * (_1023 - _714)) + _714;
    float _1036 = (cbModelParam._m0[1u].x * (_1024 - _715)) + _715;
    float _1057 = fma(_1036, cbSceneParam._m0[89u].z, fma(_1035, cbSceneParam._m0[89u].y, _1034 * cbSceneParam._m0[89u].x));
    float _1060 = fma(_1036, cbSceneParam._m0[90u].z, fma(_1035, cbSceneParam._m0[90u].y, _1034 * cbSceneParam._m0[90u].x));
    float _1063 = fma(_1036, cbSceneParam._m0[91u].z, fma(_1035, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1034));
    float _1078 = _366 * 0.5;
    float _1079 = _367 * 0.5;
    float _1080 = _368 * 0.5;
    float _1081 = dot(vec4(_1078, _1079, _1080, 1.0), vec4(_1012, _1015, _1018, _1021));
    float _1084 = dot(vec4(_1078, _1079, _1080, 1.0), vec4(_1011, _1014, _1017, _1020));
    float _1087 = dot(vec4(_1078, _1079, _1080, 1.0), vec4(_1010, _1013, _1016, _1019));
    float _1121;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1094 = dot(vec4(_1078, _1079, _1080, 1.0), vec4(_700, _704, _707, _710));
        float _1098 = dot(vec4(_1078, _1079, _1080, 1.0), vec4(_702, _705, _708, _711));
        float _1102 = dot(vec4(_1078, _1079, _1080, 1.0), vec4(_703, _706, _709, _712));
        float _1109 = dot(vec4(cbModelParam._m0[39u]), vec4(_1078, _1079, _1080, 1.0));
        _1121 = dot(vec3(isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0)), isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0)), isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1109) ? 0.0 : (isnan(0.0) ? _1109 : max(0.0, _1109))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1121 = 1.0;
    }
    float _1132;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1123 = dot(vec4(cbModelParam._m0[40u]), vec4(_1078, _1079, _1080, 1.0));
        _1132 = dot(vec3(isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0)), isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0)), isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1123) ? 0.0 : (isnan(0.0) ? _1123 : max(0.0, _1123))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1132 = 1.0;
    }
    float _1136 = (_1132 * cbModelParam._m0[1u].x) + (_1121 * (1.0 - cbModelParam._m0[1u].x));
    float _1145 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1227;
    float _1229;
    float _1231;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1194 = fma(_398, cbModelParam._m0[13u].z, fma(_394, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _390)) + cbModelParam._m0[13u].w;
        float _1198 = fma(_398, cbModelParam._m0[14u].z, fma(_394, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _390)) + cbModelParam._m0[14u].w;
        float _1202 = fma(_398, cbModelParam._m0[15u].z, fma(_394, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _390)) + cbModelParam._m0[15u].w;
        float _1205 = fma(_368, cbModelParam._m0[13u].z, fma(_367, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _366));
        float _1208 = fma(_368, cbModelParam._m0[14u].z, fma(_367, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _366));
        float _1211 = fma(_368, cbModelParam._m0[15u].z, fma(_367, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _366));
        float _1237;
        if (_1205 > 0.0)
        {
            _1237 = abs((1.0 - _1194) / _1205);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1205 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1194 + 1.0) / _1205);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1237 = frontier_phi_14_12_ladder;
        }
        float _1412;
        if (_1208 > 0.0)
        {
            _1412 = abs((1.0 - _1198) / _1208);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1208 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1198 + 1.0) / _1208);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1412 = frontier_phi_23_19_ladder;
        }
        float _1709;
        if (_1211 > 0.0)
        {
            _1709 = abs((1.0 - _1202) / _1211);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1211 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1202 + 1.0) / _1211);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _1709 = frontier_phi_35_30_ladder;
        }
        float _1711 = isnan(_1412) ? _1237 : (isnan(_1237) ? _1412 : min(_1237, _1412));
        float _1712 = isnan(_1709) ? _1711 : (isnan(_1711) ? _1709 : min(_1711, _1709));
        float _1716 = (_1712 * _1205) + _1194;
        float _1717 = (_1712 * _1208) + _1198;
        float _1718 = (_1712 * _1211) + _1202;
        float _1719 = _1712 * 9.9999997473787516355514526367188e-05;
        float _1721 = (-1.0) - _1719;
        float _1723 = _1719 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_1718 > _1723) || ((_1718 < _1721) || ((_1717 > _1723) || ((_1717 < _1721) || ((_1716 < _1721) || (_1716 > _1723))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1863 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1718, cbModelParam._m0[9u].z, fma(_1717, cbModelParam._m0[9u].y, _1716 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1718, cbModelParam._m0[10u].z, fma(_1717, cbModelParam._m0[10u].y, _1716 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1718, cbModelParam._m0[11u].z, fma(_1717, cbModelParam._m0[11u].y, _1716 * cbModelParam._m0[11u].x))), _1145);
            frontier_phi_13_35_ladder = _1863.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _1863.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _1863.x * cbModelParam._m0[1u].y;
        }
        _1227 = frontier_phi_13_35_ladder_2;
        _1229 = frontier_phi_13_35_ladder_1;
        _1231 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1215 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_366, _367, _368), _1145);
        _1227 = _1215.x * cbModelParam._m0[1u].y;
        _1229 = _1215.y * cbModelParam._m0[1u].y;
        _1231 = _1215.z * cbModelParam._m0[1u].y;
    }
    float _1234 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1327;
    float _1329;
    float _1331;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1291 = fma(_398, cbModelParam._m0[21u].z, fma(_394, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _390)) + cbModelParam._m0[21u].w;
        float _1295 = fma(_398, cbModelParam._m0[22u].z, fma(_394, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _390)) + cbModelParam._m0[22u].w;
        float _1299 = fma(_398, cbModelParam._m0[23u].z, fma(_394, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _390)) + cbModelParam._m0[23u].w;
        float _1302 = fma(_368, cbModelParam._m0[21u].z, fma(_367, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _366));
        float _1305 = fma(_368, cbModelParam._m0[22u].z, fma(_367, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _366));
        float _1308 = fma(_368, cbModelParam._m0[23u].z, fma(_367, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _366));
        float _1417;
        if (_1302 > 0.0)
        {
            _1417 = abs((1.0 - _1291) / _1302);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1302 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1291 + 1.0) / _1302);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1417 = frontier_phi_25_21_ladder;
        }
        float _1736;
        if (_1305 > 0.0)
        {
            _1736 = abs((1.0 - _1295) / _1305);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1305 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1295 + 1.0) / _1305);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1736 = frontier_phi_37_32_ladder;
        }
        float _2009;
        if (_1308 > 0.0)
        {
            _2009 = abs((1.0 - _1299) / _1308);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1308 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1299 + 1.0) / _1308);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2009 = frontier_phi_47_44_ladder;
        }
        float _2011 = isnan(_1736) ? _1417 : (isnan(_1417) ? _1736 : min(_1417, _1736));
        float _2012 = isnan(_2009) ? _2011 : (isnan(_2011) ? _2009 : min(_2011, _2009));
        float _2016 = (_2012 * _1302) + _1291;
        float _2017 = (_2012 * _1305) + _1295;
        float _2018 = (_2012 * _1308) + _1299;
        float _2019 = _2012 * 9.9999997473787516355514526367188e-05;
        float _2020 = (-1.0) - _2019;
        float _2022 = _2019 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2018 > _2022) || ((_2018 < _2020) || ((_2017 > _2022) || ((_2017 < _2020) || ((_2016 < _2020) || (_2016 > _2022))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2109 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2018, cbModelParam._m0[17u].z, fma(_2017, cbModelParam._m0[17u].y, _2016 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2018, cbModelParam._m0[18u].z, fma(_2017, cbModelParam._m0[18u].y, _2016 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2018, cbModelParam._m0[19u].z, fma(_2017, cbModelParam._m0[19u].y, _2016 * cbModelParam._m0[19u].x))), _1234);
            frontier_phi_22_47_ladder = _2109.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2109.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2109.x * cbModelParam._m0[1u].z;
        }
        _1327 = frontier_phi_22_47_ladder_2;
        _1329 = frontier_phi_22_47_ladder_1;
        _1331 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1311 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_366, _367, _368), _1234);
        _1327 = _1311.x * cbModelParam._m0[1u].z;
        _1329 = _1311.y * cbModelParam._m0[1u].z;
        _1331 = _1311.z * cbModelParam._m0[1u].z;
    }
    float _1343 = _357 * 0.01200000010430812835693359375;
    float _1345 = _1343 * ((cbModelParam._m0[1u].w * (_1327 - _1227)) + _1227);
    float _1346 = _1343 * ((cbModelParam._m0[1u].w * (_1329 - _1229)) + _1229);
    float _1347 = _1343 * ((cbModelParam._m0[1u].w * (_1331 - _1231)) + _1231);
    float _1350 = fma(_1347, cbSceneParam._m0[89u].z, fma(_1346, cbSceneParam._m0[89u].y, _1345 * cbSceneParam._m0[89u].x));
    float _1353 = fma(_1347, cbSceneParam._m0[90u].z, fma(_1346, cbSceneParam._m0[90u].y, _1345 * cbSceneParam._m0[90u].x));
    float _1356 = fma(_1347, cbSceneParam._m0[91u].z, fma(_1346, cbSceneParam._m0[91u].y, _1345 * cbSceneParam._m0[91u].x));
    float _1391 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1395 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1399 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1403 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1404 = _1391 / _1403;
    float _1405 = _1395 / _1403;
    float _1406 = _1399 / _1403;
    float _1553;
    float _1554;
    float _1555;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1433 = ((uint(_1406 > cbSceneParam._m0[59u].y) + uint(_1406 > cbSceneParam._m0[59u].x)) + uint(_1406 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1434 = _1433 + 43u;
        uint _1442 = _1433 + 44u;
        uint _1450 = _1433 + 45u;
        uint _1458 = _1433 + 46u;
        float _1469 = fma(_1403, cbSceneParam._m0[_1434].w, fma(_1399, cbSceneParam._m0[_1434].z, fma(_1395, cbSceneParam._m0[_1434].y, _1391 * cbSceneParam._m0[_1434].x)));
        float _1473 = fma(_1403, cbSceneParam._m0[_1442].w, fma(_1399, cbSceneParam._m0[_1442].z, fma(_1395, cbSceneParam._m0[_1442].y, _1391 * cbSceneParam._m0[_1442].x)));
        float _1481 = fma(_1403, cbSceneParam._m0[_1458].w, fma(_1399, cbSceneParam._m0[_1458].z, fma(_1395, cbSceneParam._m0[_1458].y, _1391 * cbSceneParam._m0[_1458].x)));
        float _1486 = cbSceneParam._m0[33u].z * _1481;
        float _1488 = cbSceneParam._m0[33u].w * _1481;
        float _1491 = fma(_1403, cbSceneParam._m0[_1450].w, fma(_1399, cbSceneParam._m0[_1450].z, fma(_1395, cbSceneParam._m0[_1450].y, _1391 * cbSceneParam._m0[_1450].x))) / _1481;
        float _1539 = (cbSceneParam._m0[33u].x - sqrt(((_1405 * _1405) + (_1404 * _1404)) + (_1406 * _1406))) * cbSceneParam._m0[33u].y;
        float _3532 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0));
        float _1546 = (isnan(1.0) ? _3532 : (isnan(_3532) ? 1.0 : min(_3532, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1486 + _1469) / _1481, (_1488 + _1473) / _1481), _1491), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1488 + _1469) / _1481, (_1473 - _1486) / _1481), _1491), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1469 - _1486) / _1481, (_1473 - _1488) / _1481), _1491), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1469 - _1488) / _1481, (_1486 + _1473) / _1481), _1491), 0.0)).x), vec4(0.25)));
        _1553 = 1.0 - (_1546 * cbSceneParam._m0[34u].x);
        _1554 = 1.0 - (_1546 * cbSceneParam._m0[34u].y);
        _1555 = 1.0 - (_1546 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1553 = 1.0;
        _1554 = 1.0;
        _1555 = 1.0;
    }
    float _1619;
    float _1621;
    float _1623;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1607 = fma(_1403, cbSceneParam._m0[63u].w, fma(_1399, cbSceneParam._m0[63u].z, fma(_1395, cbSceneParam._m0[63u].y, _1391 * cbSceneParam._m0[63u].x)));
        float _1608 = fma(_1403, cbSceneParam._m0[60u].w, fma(_1399, cbSceneParam._m0[60u].z, fma(_1395, cbSceneParam._m0[60u].y, _1391 * cbSceneParam._m0[60u].x))) / _1607;
        float _1609 = fma(_1403, cbSceneParam._m0[61u].w, fma(_1399, cbSceneParam._m0[61u].z, fma(_1395, cbSceneParam._m0[61u].y, _1391 * cbSceneParam._m0[61u].x))) / _1607;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_1608 >= cbSceneParam._m0[64u].x) && (_1609 >= cbSceneParam._m0[64u].y)) && (_1608 <= cbSceneParam._m0[64u].z)) && (_1609 <= cbSceneParam._m0[64u].w))
        {
            float _1749 = fma(_1403, cbSceneParam._m0[62u].w, fma(_1399, cbSceneParam._m0[62u].z, fma(_1395, cbSceneParam._m0[62u].y, _1391 * cbSceneParam._m0[62u].x))) / _1607;
            float _1753 = isnan(cbSceneParam._m0[41u].w) ? _1749 : (isnan(_1749) ? cbSceneParam._m0[41u].w : max(_1749, cbSceneParam._m0[41u].w));
            float _1796 = (cbSceneParam._m0[33u].x - sqrt(((_1405 * _1405) + (_1404 * _1404)) + (_1406 * _1406))) * cbSceneParam._m0[33u].y;
            float _3548 = isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0));
            float _1803 = (isnan(1.0) ? _3548 : (isnan(_3548) ? 1.0 : min(_3548, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1608, cbSceneParam._m0[33u].w + _1609), _1753), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1608, _1609 - cbSceneParam._m0[33u].z), _1753), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1608 - cbSceneParam._m0[33u].z, _1609 - cbSceneParam._m0[33u].w), _1753), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1608 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1609), _1753), 0.0)).x), vec4(0.25)));
            float _1807 = 1.0 - (_1803 * cbSceneParam._m0[34u].x);
            float _1808 = 1.0 - (_1803 * cbSceneParam._m0[34u].y);
            float _1809 = 1.0 - (_1803 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_1809) ? _1555 : (isnan(_1555) ? _1809 : min(_1555, _1809));
            frontier_phi_34_33_ladder_1 = isnan(_1808) ? _1554 : (isnan(_1554) ? _1808 : min(_1554, _1808));
            frontier_phi_34_33_ladder_2 = isnan(_1807) ? _1553 : (isnan(_1553) ? _1807 : min(_1553, _1807));
        }
        else
        {
            frontier_phi_34_33_ladder = _1555;
            frontier_phi_34_33_ladder_1 = _1554;
            frontier_phi_34_33_ladder_2 = _1553;
        }
        _1619 = frontier_phi_34_33_ladder_2;
        _1621 = frontier_phi_34_33_ladder_1;
        _1623 = frontier_phi_34_33_ladder;
    }
    else
    {
        _1619 = _1553;
        _1621 = _1554;
        _1623 = _1555;
    }
    uvec4 _1628 = floatBitsToUint(cbInstanceData._m0[_331 + 5u]);
    uint _1630 = _1628.x * 14u;
    uint _1631 = _1630 + 13u;
    float _1638 = _357 + (-1.0);
    float _1644 = (cbLight._m0[_1631].x * _1638) + 1.0;
    float _1645 = (cbLight._m0[_1631].y * _1638) + 1.0;
    float _1646 = (cbLight._m0[_1631].z * _1638) + 1.0;
    float _1647 = (cbLight._m0[_1631].w * _1638) + 1.0;
    uint _1648 = _1630 + 5u;
    float _1654 = isnan(1.0) ? _1645 : (isnan(_1645) ? 1.0 : min(_1645, 1.0));
    uint _1658 = _1630 + 4u;
    float _1668 = isnan(1.0) ? _1644 : (isnan(_1644) ? 1.0 : min(_1644, 1.0));
    uint _1672 = _1630 | 1u;
    float _1683 = dot(vec3(cbLight._m0[_1630].xyz), vec3(_200, _201, _202));
    float _1686 = dot(vec3(cbLight._m0[_1672].xyz), vec3(_200, _201, _202));
    float _3584 = isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0));
    float _3595 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
    float _1691 = (isnan(1.0) ? _3584 : (isnan(_3584) ? 1.0 : min(_3584, 1.0))) * 0.3183098733425140380859375;
    float _1693 = (isnan(1.0) ? _3595 : (isnan(_3595) ? 1.0 : min(_3595, 1.0))) * 0.3183098733425140380859375;
    float _1700 = ((cbLight._m0[_1648].x * _1654) * _1693) + (((cbLight._m0[_1658].x * _1619) * _1668) * _1691);
    float _1701 = ((_1654 * cbLight._m0[_1648].y) * _1693) + (((cbLight._m0[_1658].y * _1621) * _1668) * _1691);
    float _1702 = ((_1654 * cbLight._m0[_1648].z) * _1693) + (((cbLight._m0[_1658].z * _1623) * _1668) * _1691);
    uvec4 _1706 = floatBitsToUint(cbLight._m0[_1630 + 12u]);
    bool _1708 = _1706.x == 0u;
    float _1810;
    float _1812;
    float _1814;
    if (_1708)
    {
        _1810 = _1700;
        _1812 = _1701;
        _1814 = _1702;
    }
    else
    {
        uint _1818 = _1630 + 6u;
        float _1834 = (dot(vec3(cbLight._m0[_1630 + 2u].xyz), vec3(_200, _201, _202)) * 0.5) + 0.5;
        float _1835 = _1834 * _1834;
        float _3606 = isnan(0.0) ? _1835 : (isnan(_1835) ? 0.0 : max(_1835, 0.0));
        float _1836 = isnan(1.0) ? _3606 : (isnan(_3606) ? 1.0 : min(_3606, 1.0));
        float _1837 = isnan(1.0) ? _1646 : (isnan(_1646) ? 1.0 : min(_1646, 1.0));
        _1810 = (((cbLight._m0[_1818].x * 0.3183098733425140380859375) * _1836) * _1837) + _1700;
        _1812 = (((cbLight._m0[_1818].y * 0.3183098733425140380859375) * _1836) * _1837) + _1701;
        _1814 = (((cbLight._m0[_1818].z * 0.3183098733425140380859375) * _1836) * _1837) + _1702;
    }
    bool _1817 = _1706.y == 0u;
    float _1872;
    float _1874;
    float _1876;
    if (_1817)
    {
        _1872 = _1810;
        _1874 = _1812;
        _1876 = _1814;
    }
    else
    {
        uint _1980 = _1630 + 7u;
        float _1996 = (dot(vec3(cbLight._m0[_1630 + 3u].xyz), vec3(_200, _201, _202)) * 0.5) + 0.5;
        float _1997 = _1996 * _1996;
        float _3622 = isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0));
        float _1998 = isnan(1.0) ? _3622 : (isnan(_3622) ? 1.0 : min(_3622, 1.0));
        float _1999 = isnan(1.0) ? _1647 : (isnan(_1647) ? 1.0 : min(_1647, 1.0));
        _1872 = (((cbLight._m0[_1980].x * 0.3183098733425140380859375) * _1998) * _1999) + _1810;
        _1874 = (((cbLight._m0[_1980].y * 0.3183098733425140380859375) * _1998) * _1999) + _1812;
        _1876 = (((cbLight._m0[_1980].z * 0.3183098733425140380859375) * _1998) * _1999) + _1814;
    }
    uint _1878 = _1630 + 8u;
    float _1884 = cbLight._m0[_1630].x + _282;
    float _1885 = cbLight._m0[_1630].y + _283;
    float _1886 = cbLight._m0[_1630].z + _284;
    float _1890 = inversesqrt(dot(vec3(_1884, _1885, _1886), vec3(_1884, _1885, _1886)));
    float _1894 = dot(vec3(_200, _201, _202), vec3(cbLight._m0[_1630].xyz));
    float _3638 = isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0));
    float _1897 = isnan(1.0) ? _3638 : (isnan(_3638) ? 1.0 : min(_3638, 1.0));
    float _3649 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
    float _1898 = isnan(1.0) ? _3649 : (isnan(_3649) ? 1.0 : min(_3649, 1.0));
    float _1899 = dot(vec3(cbLight._m0[_1630].xyz), vec3(_1884 * _1890, _1885 * _1890, _1886 * _1890));
    float _3660 = isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0));
    float _1910 = (exp2(log2(1.0 - (isnan(1.0) ? _3660 : (isnan(_3660) ? 1.0 : min(_3660, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1916 = (0.5 / ((_1897 + 9.9999999392252902907785028219223e-09) + _1898)) * _1897;
    float _3671 = isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0));
    float _1918 = (isnan(1.0) ? _3671 : (isnan(_3671) ? 1.0 : min(_3671, 1.0))) * 0.31831014156341552734375;
    uint _1932 = _1630 + 9u;
    float _1938 = cbLight._m0[_1672].x + _282;
    float _1939 = cbLight._m0[_1672].y + _283;
    float _1940 = cbLight._m0[_1672].z + _284;
    float _1944 = inversesqrt(dot(vec3(_1938, _1939, _1940), vec3(_1938, _1939, _1940)));
    float _1948 = dot(vec3(_200, _201, _202), vec3(cbLight._m0[_1672].xyz));
    float _3682 = isnan(0.0) ? _1948 : (isnan(_1948) ? 0.0 : max(_1948, 0.0));
    float _1951 = isnan(1.0) ? _3682 : (isnan(_3682) ? 1.0 : min(_3682, 1.0));
    float _1952 = dot(vec3(cbLight._m0[_1672].xyz), vec3(_1938 * _1944, _1939 * _1944, _1940 * _1944));
    float _3693 = isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0));
    float _1961 = (exp2(log2(1.0 - (isnan(1.0) ? _3693 : (isnan(_3693) ? 1.0 : min(_3693, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1965 = (0.5 / ((_1951 + 9.9999999392252902907785028219223e-09) + _1898)) * _1951;
    float _3704 = isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0));
    float _1967 = (isnan(1.0) ? _3704 : (isnan(_3704) ? 1.0 : min(_3704, 1.0))) * 0.31831014156341552734375;
    float _1977 = (((_1961 * cbLight._m0[_1932].x) * _1967) * _1654) + ((((cbLight._m0[_1878].x * _1619) * _1910) * _1918) * _1668);
    float _1978 = (((_1961 * cbLight._m0[_1932].y) * _1967) * _1654) + ((((cbLight._m0[_1878].y * _1621) * _1910) * _1918) * _1668);
    float _1979 = (((_1961 * cbLight._m0[_1932].z) * _1967) * _1654) + ((((cbLight._m0[_1878].z * _1623) * _1910) * _1918) * _1668);
    float _2035;
    float _2037;
    float _2039;
    if (_1708)
    {
        _2035 = _1977;
        _2037 = _1978;
        _2039 = _1979;
    }
    else
    {
        uint _2041 = _1630 + 10u;
        uint _2047 = _1630 + 2u;
        float _2053 = cbLight._m0[_2047].x + _282;
        float _2054 = cbLight._m0[_2047].y + _283;
        float _2055 = cbLight._m0[_2047].z + _284;
        float _2059 = inversesqrt(dot(vec3(_2053, _2054, _2055), vec3(_2053, _2054, _2055)));
        float _2063 = dot(vec3(_200, _201, _202), vec3(cbLight._m0[_2047].xyz));
        float _3715 = isnan(0.0) ? _2063 : (isnan(_2063) ? 0.0 : max(_2063, 0.0));
        float _2066 = isnan(1.0) ? _3715 : (isnan(_3715) ? 1.0 : min(_3715, 1.0));
        float _2067 = dot(vec3(cbLight._m0[_2047].xyz), vec3(_2053 * _2059, _2054 * _2059, _2055 * _2059));
        float _3726 = isnan(0.0) ? _2067 : (isnan(_2067) ? 0.0 : max(_2067, 0.0));
        float _2076 = (exp2(log2(1.0 - (isnan(1.0) ? _3726 : (isnan(_3726) ? 1.0 : min(_3726, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2080 = (0.5 / ((_2066 + 9.9999999392252902907785028219223e-09) + _1898)) * _2066;
        float _3737 = isnan(0.0) ? _2080 : (isnan(_2080) ? 0.0 : max(_2080, 0.0));
        float _2082 = (isnan(1.0) ? _3737 : (isnan(_3737) ? 1.0 : min(_3737, 1.0))) * 0.31831014156341552734375;
        float _2083 = isnan(1.0) ? _1646 : (isnan(_1646) ? 1.0 : min(_1646, 1.0));
        _2035 = (((_2076 * cbLight._m0[_2041].x) * _2082) * _2083) + _1977;
        _2037 = (((_2076 * cbLight._m0[_2041].y) * _2082) * _2083) + _1978;
        _2039 = (((_2076 * cbLight._m0[_2041].z) * _2082) * _2083) + _1979;
    }
    float _2114;
    float _2116;
    float _2118;
    if (_1817)
    {
        _2114 = _2035;
        _2116 = _2037;
        _2118 = _2039;
    }
    else
    {
        uint _2125 = _1630 + 11u;
        uint _2131 = _1630 + 3u;
        float _2137 = cbLight._m0[_2131].x + _282;
        float _2138 = cbLight._m0[_2131].y + _283;
        float _2139 = cbLight._m0[_2131].z + _284;
        float _2143 = inversesqrt(dot(vec3(_2137, _2138, _2139), vec3(_2137, _2138, _2139)));
        float _2147 = dot(vec3(_200, _201, _202), vec3(cbLight._m0[_2131].xyz));
        float _3753 = isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0));
        float _2150 = isnan(1.0) ? _3753 : (isnan(_3753) ? 1.0 : min(_3753, 1.0));
        float _2151 = dot(vec3(cbLight._m0[_2131].xyz), vec3(_2137 * _2143, _2138 * _2143, _2139 * _2143));
        float _3764 = isnan(0.0) ? _2151 : (isnan(_2151) ? 0.0 : max(_2151, 0.0));
        float _2160 = (exp2(log2(1.0 - (isnan(1.0) ? _3764 : (isnan(_3764) ? 1.0 : min(_3764, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2164 = (0.5 / ((_2150 + 9.9999999392252902907785028219223e-09) + _1898)) * _2150;
        float _3775 = isnan(0.0) ? _2164 : (isnan(_2164) ? 0.0 : max(_2164, 0.0));
        float _2166 = (isnan(1.0) ? _3775 : (isnan(_3775) ? 1.0 : min(_3775, 1.0))) * 0.31831014156341552734375;
        float _2167 = isnan(1.0) ? _1647 : (isnan(_1647) ? 1.0 : min(_1647, 1.0));
        _2114 = (((_2160 * cbLight._m0[_2125].x) * _2166) * _2167) + _2035;
        _2116 = (((_2160 * cbLight._m0[_2125].y) * _2166) * _2167) + _2037;
        _2118 = (((_2160 * cbLight._m0[_2125].z) * _2166) * _2167) + _2039;
    }
    float _2233;
    float _2235;
    float _2237;
    float _2239;
    float _2241;
    float _2243;
    if (_1628.y == 0u)
    {
        uvec4 _2188 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2189 = _2188.x;
        uint _2200 = uint((float(_2188.y) * floor(float(uint(cbSceneParam._m0[85u].y * _291) / _2189))) + floor(float(uint(cbSceneParam._m0[85u].x * _290) / _2189)));
        float _2210 = (log2(_1406 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2211 = isnan(0.0) ? _2210 : (isnan(_2210) ? 0.0 : max(_2210, 0.0));
        uint _2214 = uint(isnan(14.0) ? _2211 : (isnan(_2211) ? 14.0 : min(_2211, 14.0)));
        uvec4 _2219 = texelFetch(g_lightClusterGridBuffer, int(((_2214 << 2u) + (_2200 << 6u)) >> 2u));
        uint _2220 = _2219.x;
        uint _2221 = _2188.z;
        float _2302;
        float _2304;
        float _2306;
        float _2308;
        float _2310;
        float _2312;
        if (((((1u << ((_2221 >> 4u) & 15u)) + 4294967295u) & _2220) == 0u) || ((_2221 & 240u) == 0u))
        {
            _2302 = 0.0;
            _2304 = 0.0;
            _2306 = 0.0;
            _2308 = 0.0;
            _2310 = 0.0;
            _2312 = 0.0;
        }
        else
        {
            float _2303;
            float _2305;
            float _2307;
            float _2309;
            float _2311;
            float _2313;
            float _2445 = 0.0;
            float _2446 = 0.0;
            float _2447 = 0.0;
            float _2448 = 0.0;
            float _2449 = 0.0;
            float _2450 = 0.0;
            uint _2451 = 0u;
            uint _2460;
            bool _2461;
            for (;;)
            {
                _2460 = texelFetch(g_lightClassification, int((((_2214 << 5u) + (_2200 << 9u)) + (_2451 << 2u)) >> 2u)).x;
                _2461 = _2460 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2461)
                {
                    frontier_phi_66_pred = _2450;
                    frontier_phi_66_pred_1 = _2449;
                    frontier_phi_66_pred_2 = _2448;
                    frontier_phi_66_pred_3 = _2447;
                    frontier_phi_66_pred_4 = _2446;
                    frontier_phi_66_pred_5 = _2445;
                }
                else
                {
                    float _2569;
                    float _2570;
                    float _2571;
                    float _2572;
                    float _2573;
                    float _2574;
                    uint _2575;
                    _2569 = _2445;
                    _2570 = _2446;
                    _2571 = _2447;
                    _2572 = _2448;
                    _2573 = _2449;
                    _2574 = _2450;
                    _2575 = _2460;
                    float _2501;
                    float _2502;
                    float _2503;
                    float _2504;
                    float _2505;
                    float _2506;
                    for (;;)
                    {
                        uint _2579 = uint(findLSB(_2575)) + (_2451 << 5u);
                        uint _2576 = (_2575 + 4294967295u) & _2575;
                        uint _2581 = _2579 * 48u;
                        vec4 _2595 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2581)).x, texelFetch(g_PointLightRenderingBuffer, int(_2581 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2581 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2581 + 3u)).x));
                        uint _2601 = (_2579 * 48u) + 4u;
                        vec4 _2614 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2601)).x, texelFetch(g_PointLightRenderingBuffer, int(_2601 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2601 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2601 + 3u)).x));
                        uint _2620 = (_2579 * 48u) + 8u;
                        vec3 _2631 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2620)).x, texelFetch(g_PointLightRenderingBuffer, int(_2620 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2620 + 2u)).x));
                        float _2635 = _2595.x - _1404;
                        float _2636 = _2595.y - _1405;
                        float _2637 = _2595.z - _1406;
                        float _2638 = dot(vec3(_2635, _2636, _2637), vec3(_2635, _2636, _2637));
                        float _2641 = inversesqrt(_2638);
                        float _2650 = 1.0 - (_2638 * _2595.w);
                        float _3801 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
                        float _2651 = isnan(1.0) ? _3801 : (isnan(_3801) ? 1.0 : min(_3801, 1.0));
                        float _2652 = sqrt(_2638) * _2614.w;
                        float _2655 = 1.39999997615814208984375 / (_2652 + 1.39999997615814208984375);
                        float _2656 = _2655 * _2655;
                        float _2659 = ((1.0 - _2656) * dot(vec3(_312, _315, _318), vec3(_2641 * _2635, _2641 * _2636, _2641 * _2637))) + _2656;
                        float _2662 = _2652 * _2652;
                        float _2666 = ((isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0))) * _2651) / ((_2662 * 0.699999988079071044921875) + 1.0);
                        float _2670 = (-0.0) - _1404;
                        float _2671 = (-0.0) - _1405;
                        float _2672 = (-0.0) - _1406;
                        float _2676 = inversesqrt(dot(vec3(_2670, _2671, _2672), vec3(_2670, _2671, _2672)));
                        float _2680 = dot(vec3(_312, _315, _318), vec3(_2676 * _2670, _2676 * _2671, _2676 * _2672));
                        float _3817 = isnan(0.0) ? _2680 : (isnan(_2680) ? 0.0 : max(_2680, 0.0));
                        float _3828 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
                        float _2684 = isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0));
                        float _2688 = (0.5 / (((isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0))) + 9.9999999392252902907785028219223e-09) + _2684)) * _2684;
                        float _3839 = isnan(0.0) ? _2688 : (isnan(_2688) ? 0.0 : max(_2688, 0.0));
                        float _2697 = (((isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0))) * 3.1415927410125732421875) / ((_2662 * 2.1991131305694580078125) + 3.141590118408203125)) * _2651;
                        _2504 = (_2666 * _2614.x) + _2572;
                        _2505 = (_2666 * _2614.y) + _2573;
                        _2506 = (_2666 * _2614.z) + _2574;
                        _2501 = (_2697 * _2631.x) + _2569;
                        _2502 = (_2697 * _2631.y) + _2570;
                        _2503 = (_2697 * _2631.z) + _2571;
                        if (_2576 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2569 = _2501;
                            _2570 = _2502;
                            _2571 = _2503;
                            _2572 = _2504;
                            _2573 = _2505;
                            _2574 = _2506;
                            _2575 = _2576;
                        }
                    }
                    frontier_phi_66_pred = _2506;
                    frontier_phi_66_pred_1 = _2505;
                    frontier_phi_66_pred_2 = _2504;
                    frontier_phi_66_pred_3 = _2503;
                    frontier_phi_66_pred_4 = _2502;
                    frontier_phi_66_pred_5 = _2501;
                }
                _2313 = frontier_phi_66_pred;
                _2311 = frontier_phi_66_pred_1;
                _2309 = frontier_phi_66_pred_2;
                _2307 = frontier_phi_66_pred_3;
                _2305 = frontier_phi_66_pred_4;
                _2303 = frontier_phi_66_pred_5;
                uint _2452 = _2451 + 1u;
                if (_2452 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2445 = _2303;
                    _2446 = _2305;
                    _2447 = _2307;
                    _2448 = _2309;
                    _2449 = _2311;
                    _2450 = _2313;
                    _2451 = _2452;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2302 = _2303;
            _2304 = _2305;
            _2306 = _2307;
            _2308 = _2309;
            _2310 = _2311;
            _2312 = _2313;
        }
        uvec4 _2316 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2317 = _2316.z;
        uint _2319 = (_2317 >> 8u) & 15u;
        float _2416;
        float _2418;
        float _2420;
        float _2422;
        float _2424;
        float _2426;
        if (((4294967295u << _2319) & _2220) == 0u)
        {
            _2416 = _2302;
            _2418 = _2304;
            _2420 = _2306;
            _2422 = _2308;
            _2424 = _2310;
            _2426 = _2312;
        }
        else
        {
            float _2441 = inversesqrt(dot(vec3(_1404, _1405, _1406), vec3(_1404, _1405, _1406)));
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2319 < ((_2317 >> 12u) & 15u))
            {
                float _2417;
                float _2419;
                float _2421;
                float _2423;
                float _2425;
                float _2427;
                float _2552 = _2302;
                float _2553 = _2304;
                float _2554 = _2306;
                float _2555 = _2308;
                float _2556 = _2310;
                float _2557 = _2312;
                uint _2558 = _2319;
                uint _2567;
                bool _2568;
                for (;;)
                {
                    _2567 = texelFetch(g_lightClassification, int((((_2214 << 5u) + (_2200 << 9u)) + (_2558 << 2u)) >> 2u)).x;
                    _2568 = _2567 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_2568)
                    {
                        frontier_phi_72_pred = _2557;
                        frontier_phi_72_pred_1 = _2556;
                        frontier_phi_72_pred_2 = _2555;
                        frontier_phi_72_pred_3 = _2554;
                        frontier_phi_72_pred_4 = _2553;
                        frontier_phi_72_pred_5 = _2552;
                    }
                    else
                    {
                        float _2702;
                        float _2703;
                        float _2704;
                        float _2705;
                        float _2706;
                        float _2707;
                        float _2954;
                        float _2955;
                        float _2956;
                        float _2957;
                        float _2958;
                        float _2959;
                        float _2715 = _2552;
                        float _2716 = _2553;
                        float _2717 = _2554;
                        float _2718 = _2555;
                        float _2719 = _2556;
                        float _2720 = _2557;
                        uint _2721 = _2567;
                        uint _2722;
                        vec4 _2747;
                        float _2748;
                        vec4 _2763;
                        vec3 _2775;
                        vec4 _2791;
                        vec4 _2807;
                        float _2854;
                        bool _2855;
                        for (;;)
                        {
                            uint _2732 = ((_2558 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2721));
                            _2722 = (_2721 + 4294967295u) & _2721;
                            uint _2734 = _2732 * 40u;
                            _2747 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2734)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2734 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2734 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2734 + 3u)).x));
                            _2748 = _2747.w;
                            uint _2750 = (_2732 * 40u) + 4u;
                            _2763 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2750)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2750 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2750 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2750 + 3u)).x));
                            uint _2765 = (_2732 * 40u) + 8u;
                            _2775 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2765)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2765 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2765 + 2u)).x));
                            uint _2778 = (_2732 * 40u) + 16u;
                            _2791 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2778)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2778 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2778 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2778 + 3u)).x));
                            uint _2794 = (_2732 * 40u) + 20u;
                            _2807 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2794)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2794 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2794 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2794 + 3u)).x));
                            uint _2810 = (_2732 * 40u) + 24u;
                            vec4 _2823 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2810)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2810 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2810 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2810 + 3u)).x));
                            uint _2829 = (_2732 * 40u) + 28u;
                            vec4 _2842 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2829)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2829 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2829 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2829 + 3u)).x));
                            _2854 = fma(_1406, _2842.z, fma(_1405, _2842.y, _2842.x * _1404)) + _2842.w;
                            _2855 = !((fma(_1406, _2823.z, fma(_1405, _2823.y, _2823.x * _1404)) + _2823.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_2855)
                            {
                                float _2882 = _2747.x - _1404;
                                float _2883 = _2747.y - _1405;
                                float _2884 = _2747.z - _1406;
                                float _2885 = dot(vec3(_2882, _2883, _2884), vec3(_2882, _2883, _2884));
                                float _2888 = inversesqrt(_2885);
                                float _2889 = _2888 * _2882;
                                float _2890 = _2888 * _2883;
                                float _2891 = _2888 * _2884;
                                float _2895 = 1.0 - (_2885 / (_2748 * _2748));
                                float _3850 = isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0));
                                float _2896 = isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0));
                                float _2900 = sqrt(_2885) * _2763.w;
                                float _2902 = 1.39999997615814208984375 / (_2900 + 1.39999997615814208984375);
                                float _2903 = _2902 * _2902;
                                float _2904 = 1.0 - _2903;
                                float _2906 = (_2904 * dot(vec3(_2889, _2890, _2891), vec3(_312, _315, _318))) + _2903;
                                float _2909 = _2900 * _2900;
                                float _2913 = (fma(_1406, _2791.z, fma(_1405, _2791.y, _2791.x * _1404)) + _2791.w) / _2854;
                                float _2914 = (fma(_1406, _2807.z, fma(_1405, _2807.y, _2807.x * _1404)) + _2807.w) / _2854;
                                float _2918 = 1.0 - dot(vec2(_2913, _2914), vec2(_2913, _2914));
                                float _3866 = isnan(0.0) ? _2918 : (isnan(_2918) ? 0.0 : max(_2918, 0.0));
                                float _2919 = isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0));
                                float _2920 = _2919 * (((isnan(0.0) ? _2906 : (isnan(_2906) ? 0.0 : max(_2906, 0.0))) * _2896) / ((_2909 * 0.699999988079071044921875) + 1.0));
                                float _2930 = dot(vec3(_312, _315, _318), vec3((-0.0) - (_1404 * _2441), (-0.0) - (_1405 * _2441), (-0.0) - (_1406 * _2441)));
                                float _3877 = isnan(0.0) ? _2930 : (isnan(_2930) ? 0.0 : max(_2930, 0.0));
                                float _2938 = (_2904 * dot(vec3(_312, _315, _318), vec3(_2889, _2890, _2891))) + _2903;
                                float _3888 = isnan(0.0) ? _2938 : (isnan(_2938) ? 0.0 : max(_2938, 0.0));
                                float _2939 = isnan(1.0) ? _3888 : (isnan(_3888) ? 1.0 : min(_3888, 1.0));
                                float _2943 = (0.5 / (((isnan(1.0) ? _3877 : (isnan(_3877) ? 1.0 : min(_3877, 1.0))) + 9.9999999392252902907785028219223e-09) + _2939)) * _2939;
                                float _3899 = isnan(0.0) ? _2943 : (isnan(_2943) ? 0.0 : max(_2943, 0.0));
                                float _2950 = (_2919 * _2896) * (((isnan(1.0) ? _3899 : (isnan(_3899) ? 1.0 : min(_3899, 1.0))) * 3.1415927410125732421875) / ((_2909 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_78_pred = _2920 * _2763.y;
                                frontier_phi_78_pred_1 = _2920 * _2763.x;
                                frontier_phi_78_pred_2 = _2950 * _2775.z;
                                frontier_phi_78_pred_3 = _2950 * _2775.y;
                                frontier_phi_78_pred_4 = _2950 * _2775.x;
                                frontier_phi_78_pred_5 = _2920 * _2763.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _2958 = frontier_phi_78_pred;
                            _2957 = frontier_phi_78_pred_1;
                            _2956 = frontier_phi_78_pred_2;
                            _2955 = frontier_phi_78_pred_3;
                            _2954 = frontier_phi_78_pred_4;
                            _2959 = frontier_phi_78_pred_5;
                            _2705 = _2957 + _2718;
                            _2706 = _2958 + _2719;
                            _2707 = _2959 + _2720;
                            _2702 = _2954 + _2715;
                            _2703 = _2955 + _2716;
                            _2704 = _2956 + _2717;
                            if (_2722 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2715 = _2702;
                                _2716 = _2703;
                                _2717 = _2704;
                                _2718 = _2705;
                                _2719 = _2706;
                                _2720 = _2707;
                                _2721 = _2722;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _2707;
                        frontier_phi_72_pred_1 = _2706;
                        frontier_phi_72_pred_2 = _2705;
                        frontier_phi_72_pred_3 = _2704;
                        frontier_phi_72_pred_4 = _2703;
                        frontier_phi_72_pred_5 = _2702;
                    }
                    _2427 = frontier_phi_72_pred;
                    _2425 = frontier_phi_72_pred_1;
                    _2423 = frontier_phi_72_pred_2;
                    _2421 = frontier_phi_72_pred_3;
                    _2419 = frontier_phi_72_pred_4;
                    _2417 = frontier_phi_72_pred_5;
                    uint _2559 = _2558 + 1u;
                    if (_2559 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2552 = _2417;
                        _2553 = _2419;
                        _2554 = _2421;
                        _2555 = _2423;
                        _2556 = _2425;
                        _2557 = _2427;
                        _2558 = _2559;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _2427;
                frontier_phi_60_61_ladder_1 = _2425;
                frontier_phi_60_61_ladder_2 = _2421;
                frontier_phi_60_61_ladder_3 = _2419;
                frontier_phi_60_61_ladder_4 = _2417;
                frontier_phi_60_61_ladder_5 = _2423;
            }
            else
            {
                frontier_phi_60_61_ladder = _2312;
                frontier_phi_60_61_ladder_1 = _2310;
                frontier_phi_60_61_ladder_2 = _2306;
                frontier_phi_60_61_ladder_3 = _2304;
                frontier_phi_60_61_ladder_4 = _2302;
                frontier_phi_60_61_ladder_5 = _2308;
            }
            _2416 = frontier_phi_60_61_ladder_4;
            _2418 = frontier_phi_60_61_ladder_3;
            _2420 = frontier_phi_60_61_ladder_2;
            _2422 = frontier_phi_60_61_ladder_5;
            _2424 = frontier_phi_60_61_ladder_1;
            _2426 = frontier_phi_60_61_ladder;
        }
        float _2431 = isnan(1.0) ? _357 : (isnan(_357) ? 1.0 : min(_357, 1.0));
        _2233 = (_2431 * _2422) + _1872;
        _2235 = (_2431 * _2424) + _1874;
        _2237 = (_2431 * _2426) + _1876;
        _2239 = ((_2416 * 0.039999999105930328369140625) * _2431) + _2114;
        _2241 = ((_2418 * 0.039999999105930328369140625) * _2431) + _2116;
        _2243 = ((_2420 * 0.039999999105930328369140625) * _2431) + _2118;
    }
    else
    {
        _2233 = _1872;
        _2235 = _1874;
        _2237 = _1876;
        _2239 = _2114;
        _2241 = _2116;
        _2243 = _2118;
    }
    float _3915 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    float _3926 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
    float _3937 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    float _3948 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _2268 = cbInstanceData._m0[_331 + 6u].w * (isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0)));
    float _2273 = _290 / cbSceneParam._m0[86u].x;
    float _2274 = _291 / cbSceneParam._m0[86u].y;
    vec4 _2288 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2273, _2274, (log2((isnan(cbSceneParam._m0[77u].w) ? _223 : (isnan(_223) ? cbSceneParam._m0[77u].w : min(_223, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2290 = _2288.x;
    float _2291 = _2288.y;
    float _2292 = _2288.z;
    float _2293 = _2288.w;
    float _2365;
    float _2367;
    float _2369;
    float _2371;
    if (_223 > cbSceneParam._m0[78u].w)
    {
        float _2327 = isnan(_223) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _223 : min(cbSceneParam._m0[80u].w, _223));
        float _2328 = _2327 / _223;
        float _2339 = _2328 * _275;
        float _2340 = _276 * _2328;
        float _2341 = (-0.0) - _2340;
        float _2343 = _2328 * _277;
        float _2345 = (cbSceneParam._m0[77u].w * _2341) / _2327;
        float _2346 = _2345 + cbSceneParam._m0[79u].w;
        float _2347 = cbSceneParam._m0[79u].w - _2340;
        float _2353 = sqrt(((_2339 * _2339) + (_2340 * _2340)) + (_2343 * _2343));
        float _2356 = (1.0 - (cbSceneParam._m0[77u].w / _2327)) * _2353;
        float _2361 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2363 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2514;
        if (abs((_2341 - _2345) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2514 = ((((_2346 > 0.0) ? exp2(_2361 * _2346) : (2.0 - exp2(_2363 * _2346))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2356;
        }
        else
        {
            float _2474 = 1.0 / cbSceneParam._m0[80u].x;
            float _2475 = isnan(_2347) ? _2346 : (isnan(_2346) ? _2347 : max(_2346, _2347));
            float _2476 = isnan(_2347) ? _2346 : (isnan(_2346) ? _2347 : min(_2346, _2347));
            float _2485 = isnan(0.0) ? _2475 : (isnan(_2475) ? 0.0 : min(_2475, 0.0));
            float _2486 = isnan(0.0) ? _2476 : (isnan(_2476) ? 0.0 : min(_2476, 0.0));
            _2514 = ((abs(_2353 / _2341) * cbSceneParam._m0[80u].y) * ((((_2485 - _2486) * 2.0) - ((exp2(_2361 * (isnan(0.0) ? _2475 : (isnan(_2475) ? 0.0 : max(_2475, 0.0)))) - exp2(_2361 * (isnan(0.0) ? _2476 : (isnan(_2476) ? 0.0 : max(_2476, 0.0))))) * _2474)) - ((exp2(_2363 * _2485) - exp2(_2363 * _2486)) * _2474))) + (_2356 * cbSceneParam._m0[80u].z);
        }
        vec4 _2516 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2273, _2274, 1.0), 0.0);
        float _2525 = exp2((_2514 * (-1.44269502162933349609375)) * (1.0 - _2516.w));
        float _2526 = log2(_2525);
        float _2542 = log2(_2293);
        _2365 = (exp2(_2542 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2526 * cbSceneParam._m0[78u].x)) * _2516.x) / cbSceneParam._m0[78u].x)) + _2290;
        _2367 = (exp2(_2542 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2526 * cbSceneParam._m0[78u].y)) * _2516.y) / cbSceneParam._m0[78u].y)) + _2291;
        _2369 = (exp2(_2542 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2526 * cbSceneParam._m0[78u].z)) * _2516.z) / cbSceneParam._m0[78u].z)) + _2292;
        _2371 = _2525 * _2293;
    }
    else
    {
        _2365 = _2290;
        _2367 = _2291;
        _2369 = _2292;
        _2371 = _2293;
    }
    float _2383 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2384 = _2383 == 3.0;
    float _2386 = log2(_2371);
    float _2393 = exp2(_2386 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0))) * (_2233 + ((isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0))) * _357))) + ((_2239 + ((isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0))) * _1136)) * cbPerFrame._m0[3u].x));
    float _2394 = exp2(_2386 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0))) * (_2235 + ((isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0))) * _357))) + ((_2241 + ((isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0))) * _1136)) * cbPerFrame._m0[3u].x));
    float _2395 = exp2(_2386 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0))) * (_2237 + ((isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0))) * _357))) + ((_2243 + ((isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0))) * _1136)) * cbPerFrame._m0[3u].x));
    float _2404 = (_2383 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2404 * (_2384 ? _2393 : (_2393 + (cbSceneParam._m0[72u].w * _2365)));
    SV_Target.y = _2404 * (_2384 ? _2394 : (_2394 + (cbSceneParam._m0[72u].w * _2367)));
    SV_Target.z = _2404 * (_2384 ? _2395 : (_2395 + (cbSceneParam._m0[72u].w * _2369)));
    SV_Target.w = _2268;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2268;
}


