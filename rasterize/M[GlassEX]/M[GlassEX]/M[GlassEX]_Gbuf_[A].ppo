#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_GlassEX_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _128 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _129 = _128 * NORMAL.x;
    float _130 = _128 * NORMAL.y;
    float _131 = _128 * NORMAL.z;
    float _136;
    float _137;
    float _138;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _136 = (-0.0) - _129;
        _137 = (-0.0) - _130;
        _138 = (-0.0) - _131;
    }
    else
    {
        _136 = _129;
        _137 = _130;
        _138 = _131;
    }
    vec4 _162 = texture(sampler2D(M_GlassEX_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _168 = (_162.z * 0.5) + cbMtdParam._m0[10u].z;
    float _172 = inversesqrt(dot(vec3(_136, _137, _138), vec3(_136, _137, _138)));
    float _491 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    float _174 = isnan(1.0) ? _491 : (isnan(_491) ? 1.0 : min(_491, 1.0));
    float _502 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    float _175 = isnan(1.0) ? _502 : (isnan(_502) ? 1.0 : min(_502, 1.0));
    float _513 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _176 = isnan(1.0) ? _513 : (isnan(_513) ? 1.0 : min(_513, 1.0));
    float _524 = isnan(0.0) ? _168 : (isnan(_168) ? 0.0 : max(_168, 0.0));
    uint _179 = uint(roundEven(NORMAL.w));
    float _221 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _231 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _221);
    float _232 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _221);
    float _233 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _221);
    vec4 _238 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _240 = _238.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _376 = sqrt(((_231 * _231) + (_232 * _232)) + (_233 * _233));
        float _383 = (cbMatDynParam._m0[5u].x * _376) + cbMatDynParam._m0[5u].y;
        float _535 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
        float _384 = isnan(1.0) ? _535 : (isnan(_535) ? 1.0 : min(_535, 1.0));
        float _388 = (cbMatDynParam._m0[5u].z * _376) + cbMatDynParam._m0[5u].w;
        float _546 = isnan(0.0) ? _388 : (isnan(_388) ? 0.0 : max(_388, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _546 : (isnan(_546) ? 1.0 : min(_546, 1.0))) - _384)) + _384) < ((_240 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _416;
    float _315;
    uint _334;
    vec4 _339;
    float _346;
    float _347;
    float _348;
    float _352;
    vec4 _356;
    float _358;
    float _359;
    bool _370;
    for (;;)
    {
        float _248 = _174 * 3.3333332538604736328125;
        float _250 = _175 * 3.3333332538604736328125;
        float _251 = _176 * 3.3333332538604736328125;
        float _259 = ((isnan(1.0) ? _248 : (isnan(_248) ? 1.0 : min(_248, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
        float _261 = ((isnan(1.0) ? _250 : (isnan(_250) ? 1.0 : min(_250, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
        float _262 = ((isnan(1.0) ? _251 : (isnan(_251) ? 1.0 : min(_251, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
        float _263 = isnan(_259) ? 0.0 : (isnan(0.0) ? _259 : max(0.0, _259));
        float _264 = isnan(_261) ? 0.0 : (isnan(0.0) ? _261 : max(0.0, _261));
        float _265 = isnan(_262) ? 0.0 : (isnan(0.0) ? _262 : max(0.0, _262));
        float _268 = (_174 + (-0.0599999986588954925537109375)) + _263;
        float _270 = (_175 + (-0.0599999986588954925537109375)) + _264;
        float _272 = (_176 + (-0.0599999986588954925537109375)) + _265;
        float _284 = (_268 * _268) - ((0.02999999932944774627685546875 - _174) * 0.119999997317790985107421875);
        float _285 = (_270 * _270) - ((0.02999999932944774627685546875 - _175) * 0.119999997317790985107421875);
        float _286 = (_272 * _272) - ((0.02999999932944774627685546875 - _176) * 0.119999997317790985107421875);
        float _296 = (sqrt(isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0))) - _268) * 16.666667938232421875;
        float _298 = (sqrt(isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0))) - _270) * 16.666667938232421875;
        float _299 = (sqrt(isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0))) - _272) * 16.666667938232421875;
        float _300 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
        float _301 = isnan(0.0) ? _298 : (isnan(_298) ? 0.0 : max(_298, 0.0));
        float _302 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
        float _313 = (((isnan(1.0) ? _301 : (isnan(_301) ? 1.0 : min(_301, 1.0))) * 0.58700001239776611328125) + ((isnan(1.0) ? _300 : (isnan(_300) ? 1.0 : min(_300, 1.0))) * 0.29890000820159912109375)) + ((isnan(1.0) ? _302 : (isnan(_302) ? 1.0 : min(_302, 1.0))) * 0.114000000059604644775390625);
        float _314 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
        _315 = isnan(1.0) ? _314 : (isnan(_314) ? 1.0 : min(_314, 1.0));
        float _318 = 1.0 - (isnan(0.99989998340606689453125) ? _315 : (isnan(_315) ? 0.99989998340606689453125 : min(_315, 0.99989998340606689453125)));
        _334 = _179 * 13u;
        _339 = cbInstanceData._m0[(_334 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _343 = (cbMtdParam._m0[0u].x * (_263 / _318)) * _339.x;
        float _344 = (cbMtdParam._m0[0u].y * (_264 / _318)) * _339.y;
        float _345 = (cbMtdParam._m0[0u].z * (_265 / _318)) * _339.z;
        float _647 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
        _346 = isnan(1.0) ? _647 : (isnan(_647) ? 1.0 : min(_647, 1.0));
        float _658 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
        _347 = isnan(1.0) ? _658 : (isnan(_658) ? 1.0 : min(_658, 1.0));
        float _669 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
        _348 = isnan(1.0) ? _669 : (isnan(_669) ? 1.0 : min(_669, 1.0));
        _352 = cbInstanceData._m0[_334 + 6u].w;
        float _353 = _240 + (-0.5);
        _356 = cbMtdParam._m0[1u];
        _358 = _356.y * _353;
        _359 = _353 * 0.999000012874603271484375;
        _370 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_370)
        {
            if ((cbInstanceData._m0[_334 + 7u].x + _359) < 0.5)
            {
                _416 = true;
                break;
            }
        }
        if ((_339.w < 1.0) && ((_339.w + _359) < 0.5))
        {
            _416 = true;
            break;
        }
        if ((_358 + 1.0) < _356.x)
        {
            _416 = true;
            break;
        }
        _416 = false;
        break;
    }
    if (_416)
    {
        discard_state = true;
    }
    bool _442 = cbMtdParam._m0[1u].z != 0.0;
    float _443 = _442 ? _352 : 0.0;
    SV_Target.x = ((_136 * 0.5) * _172) + 0.500488758087158203125;
    SV_Target.y = ((_137 * 0.5) * _172) + 0.500488758087158203125;
    SV_Target.z = ((_138 * 0.5) * _172) + 0.500488758087158203125;
    SV_Target.w = _443;
    SV_Target_1.x = _315;
    SV_Target_1.y = isnan(1.0) ? _524 : (isnan(_524) ? 1.0 : min(_524, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _442 ? _352 : TEXCOORD.z;
    SV_Target_2.x = _346;
    SV_Target_2.y = _347;
    SV_Target_2.z = _348;
    SV_Target_2.w = _442 ? _352 : (float(floatBitsToUint(cbInstanceData._m0[_334 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _443;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _443;
    discard_exit();
}


