#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_Emissive_Glow_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D S_AMSN_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D S_AMSN_Emissive_Glow_Addition_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _144 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _145 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _146 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _151 = inversesqrt(dot(vec3(_144, _145, _146), vec3(_144, _145, _146)));
    float _158 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _159 = _158 * NORMAL.x;
    float _160 = _158 * NORMAL.y;
    float _161 = _158 * NORMAL.z;
    float _165 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _173;
    float _174;
    float _175;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _173 = (-0.0) - _159;
        _174 = (-0.0) - _160;
        _175 = (-0.0) - _161;
    }
    else
    {
        _173 = _159;
        _174 = _160;
        _175 = _161;
    }
    vec4 _189 = texture(sampler2D(S_AMSN_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _192 = _189.x;
    float _193 = _189.y;
    float _194 = _189.z;
    vec4 _210 = texture(sampler2D(S_AMSN_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _213 = _210.x + cbMtdParam._m0[9u].x;
    vec4 _225 = texture(sampler2D(S_AMSN_Emissive_Glow_Addition_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _229 = _225.z;
    float _233 = (_225.x * 2.0) + (-1.0);
    float _235 = (_225.y * 2.0) + (-1.0);
    float _236 = dot(vec2(_233, _235), vec2(_233, _235));
    float _477 = isnan(0.0) ? _236 : (isnan(_236) ? 0.0 : max(_236, 0.0));
    float _242 = sqrt(1.0 - (isnan(1.0) ? _477 : (isnan(_477) ? 1.0 : min(_477, 1.0))));
    vec4 _255 = texture(sampler2D(S_AMSN_Emissive_Glow_Addition_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _260 = _255.x * cbMtdParam._m0[9u].y;
    float _261 = _255.y * cbMtdParam._m0[9u].y;
    float _262 = _255.z * cbMtdParam._m0[9u].y;
    float _265 = fma(_242, _173, fma(_235, _165 * TANGENT.x, (_151 * _144) * _233));
    float _268 = fma(_242, _174, fma(_235, _165 * TANGENT.y, (_151 * _145) * _233));
    float _271 = fma(_242, _175, fma(_235, _165 * TANGENT.z, (_151 * _146) * _233));
    float _275 = inversesqrt(dot(vec3(_265, _268, _271), vec3(_265, _268, _271)));
    float _488 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
    float _499 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _277 = isnan(1.0) ? _499 : (isnan(_499) ? 1.0 : min(_499, 1.0));
    float _510 = isnan(0.0) ? _193 : (isnan(_193) ? 0.0 : max(_193, 0.0));
    float _278 = isnan(1.0) ? _510 : (isnan(_510) ? 1.0 : min(_510, 1.0));
    float _521 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _279 = isnan(1.0) ? _521 : (isnan(_521) ? 1.0 : min(_521, 1.0));
    float _532 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    uint _282 = uint(roundEven(NORMAL.w));
    vec4 _287 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _289 = _287.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _358 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _543 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
        float _359 = isnan(1.0) ? _543 : (isnan(_543) ? 1.0 : min(_543, 1.0));
        float _363 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _554 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _554 : (isnan(_554) ? 1.0 : min(_554, 1.0))) - _359)) + _359) < ((_289 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _392;
    uint _309;
    vec4 _314;
    float _321;
    float _322;
    float _323;
    float _324;
    float _325;
    float _326;
    float _329;
    float _333;
    vec4 _337;
    float _339;
    float _340;
    bool _351;
    for (;;)
    {
        _309 = _282 * 13u;
        _314 = cbInstanceData._m0[(_309 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _318 = (cbMtdParam._m0[0u].x * _277) * _314.x;
        float _319 = (cbMtdParam._m0[0u].y * _278) * _314.y;
        float _320 = (cbMtdParam._m0[0u].z * _279) * _314.z;
        float _565 = isnan(0.0) ? _318 : (isnan(_318) ? 0.0 : max(_318, 0.0));
        _321 = isnan(1.0) ? _565 : (isnan(_565) ? 1.0 : min(_565, 1.0));
        float _576 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
        _322 = isnan(1.0) ? _576 : (isnan(_576) ? 1.0 : min(_576, 1.0));
        float _587 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
        _323 = isnan(1.0) ? _587 : (isnan(_587) ? 1.0 : min(_587, 1.0));
        _324 = _260 * _314.x;
        _325 = _261 * _314.y;
        _326 = _262 * _314.z;
        _329 = cbMtdParam._m0[2u].w;
        _333 = cbInstanceData._m0[_309 + 6u].w;
        float _334 = _289 + (-0.5);
        _337 = cbMtdParam._m0[1u];
        _339 = _337.y * _334;
        _340 = _334 * 0.999000012874603271484375;
        _351 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_351)
        {
            if ((cbInstanceData._m0[_309 + 7u].x + _340) < 0.5)
            {
                _392 = true;
                break;
            }
        }
        if ((_314.w < 1.0) && ((_314.w + _340) < 0.5))
        {
            _392 = true;
            break;
        }
        if ((_339 + 1.0) < _337.x)
        {
            _392 = true;
            break;
        }
        _392 = false;
        break;
    }
    if (_392)
    {
        discard_state = true;
    }
    float _426;
    float _427;
    float _428;
    float _429;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _426 = _333;
        _427 = _333;
        _428 = _333;
        _429 = _333;
    }
    else
    {
        _426 = _329;
        _427 = 0.0;
        _428 = float(floatBitsToUint(cbInstanceData._m0[_309 + 5u]).x) * 0.0039215688593685626983642578125;
        _429 = TEXCOORD.z;
    }
    SV_Target.x = ((_265 * 0.5) * _275) + 0.500488758087158203125;
    SV_Target.y = ((_268 * 0.5) * _275) + 0.500488758087158203125;
    SV_Target.z = ((_271 * 0.5) * _275) + 0.500488758087158203125;
    SV_Target.w = _427;
    SV_Target_1.x = isnan(1.0) ? _532 : (isnan(_532) ? 1.0 : min(_532, 1.0));
    SV_Target_1.y = isnan(1.0) ? _488 : (isnan(_488) ? 1.0 : min(_488, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _429;
    SV_Target_2.x = _321;
    SV_Target_2.y = _322;
    SV_Target_2.z = _323;
    SV_Target_2.w = _428;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _427;
    SV_Target_4.x = _324 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _325 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _326 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _426;
    discard_exit();
}


