#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

float _360;
float _361;
float _362;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _110 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _111 = _110 * NORMAL.x;
    float _112 = _110 * NORMAL.y;
    float _113 = _110 * NORMAL.z;
    float _118;
    float _119;
    float _120;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _118 = (-0.0) - _111;
        _119 = (-0.0) - _112;
        _120 = (-0.0) - _113;
    }
    else
    {
        _118 = _111;
        _119 = _112;
        _120 = _113;
    }
    bool _283;
    float _165;
    float _202;
    uint _224;
    vec4 _229;
    float _236;
    float _237;
    float _238;
    float _239;
    float _240;
    float _241;
    float _245;
    float _251;
    vec4 _254;
    float _256;
    float _257;
    bool _269;
    for (;;)
    {
        float _131 = TEXCOORD.x + (-0.5);
        float _133 = TEXCOORD.y + (-0.5);
        float _138 = 1.0 - sqrt((_133 * _133) + (_131 * _131));
        float _144 = exp2(log2(cbMtdParam._m0[13u].z * _138) * cbMtdParam._m0[13u].w);
        float _148 = exp2(log2(_144 * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
        float _371 = isnan(0.0) ? _148 : (isnan(_148) ? 0.0 : max(_148, 0.0));
        float _149 = isnan(1.0) ? _371 : (isnan(_371) ? 1.0 : min(_371, 1.0));
        float _158 = cbMtdParam._m0[15u].z + TEXCOORD.y;
        float _382 = isnan(0.0) ? _158 : (isnan(_158) ? 0.0 : max(_158, 0.0));
        float _164 = exp2(log2(cbMtdParam._m0[15u].w * (isnan(1.0) ? _382 : (isnan(_382) ? 1.0 : min(_382, 1.0)))) * cbMtdParam._m0[16u].x);
        float _393 = isnan(0.0) ? _164 : (isnan(_164) ? 0.0 : max(_164, 0.0));
        _165 = isnan(1.0) ? _393 : (isnan(_393) ? 1.0 : min(_393, 1.0));
        float _180 = exp2(log2(cbMtdParam._m0[14u].w * _144) * cbMtdParam._m0[14u].z);
        float _404 = isnan(0.0) ? _180 : (isnan(_180) ? 0.0 : max(_180, 0.0));
        float _181 = isnan(1.0) ? _404 : (isnan(_404) ? 1.0 : min(_404, 1.0));
        float _415 = isnan(0.0) ? _181 : (isnan(_181) ? 0.0 : max(_181, 0.0));
        float _188 = exp2(log2(cbMtdParam._m0[14u].y * _138) * cbMtdParam._m0[14u].x);
        float _426 = isnan(0.0) ? _188 : (isnan(_188) ? 0.0 : max(_188, 0.0));
        float _190 = (isnan(1.0) ? _426 : (isnan(_426) ? 1.0 : min(_426, 1.0))) - (isnan(1.0) ? _415 : (isnan(_415) ? 1.0 : min(_415, 1.0)));
        float _191 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
        float _192 = _191 * cbMtdParam._m0[10u].x;
        float _193 = _191 * cbMtdParam._m0[10u].y;
        float _194 = _191 * cbMtdParam._m0[10u].z;
        _202 = inversesqrt(dot(vec3(_118, _119, _120), vec3(_118, _119, _120)));
        float _457 = isnan(0.0) ? _149 : (isnan(_149) ? 0.0 : max(_149, 0.0));
        float _203 = isnan(1.0) ? _457 : (isnan(_457) ? 1.0 : min(_457, 1.0));
        _224 = uint(roundEven(NORMAL.w)) * 13u;
        _229 = cbInstanceData._m0[(_224 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _233 = _229.x * cbMtdParam._m0[0u].x;
        float _234 = _229.y * cbMtdParam._m0[0u].y;
        float _235 = _229.z * cbMtdParam._m0[0u].z;
        float _468 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
        _236 = isnan(1.0) ? _468 : (isnan(_468) ? 1.0 : min(_468, 1.0));
        float _479 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
        _237 = isnan(1.0) ? _479 : (isnan(_479) ? 1.0 : min(_479, 1.0));
        float _490 = isnan(0.0) ? _235 : (isnan(_235) ? 0.0 : max(_235, 0.0));
        _238 = isnan(1.0) ? _490 : (isnan(_490) ? 1.0 : min(_490, 1.0));
        _239 = _229.x * (isnan(4.0) ? _192 : (isnan(_192) ? 4.0 : min(_192, 4.0)));
        _240 = _229.y * (isnan(4.0) ? _193 : (isnan(_193) ? 4.0 : min(_193, 4.0)));
        _241 = _229.z * (isnan(4.0) ? _194 : (isnan(_194) ? 4.0 : min(_194, 4.0)));
        float _501 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
        _245 = cbMtdParam._m0[2u].w;
        _251 = cbInstanceData._m0[_224 + 6u].w * (isnan(1.0) ? _501 : (isnan(_501) ? 1.0 : min(_501, 1.0)));
        float _252 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125)).w + (-0.5);
        _254 = cbMtdParam._m0[1u];
        _256 = _254.y * _252;
        _257 = _252 * 0.999000012874603271484375;
        _269 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_269)
        {
            if ((cbInstanceData._m0[_224 + 7u].x + _257) < 0.5)
            {
                _283 = true;
                break;
            }
        }
        if ((_229.w < 1.0) && ((_229.w + _257) < 0.5))
        {
            _283 = true;
            break;
        }
        if ((_256 + _165) < _254.x)
        {
            _283 = true;
            break;
        }
        _283 = false;
        break;
    }
    if (_283)
    {
        discard_state = true;
    }
    float _321;
    float _322;
    float _323;
    float _324;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _321 = _251;
        _322 = _251;
        _323 = _251;
        _324 = _251;
    }
    else
    {
        _321 = _245;
        _322 = 0.0;
        _323 = float(floatBitsToUint(cbInstanceData._m0[_224 + 5u]).x) * 0.0039215688593685626983642578125;
        _324 = TEXCOORD.z;
    }
    SV_Target.x = ((_118 * 0.5) * _202) + 0.500488758087158203125;
    SV_Target.y = ((_119 * 0.5) * _202) + 0.500488758087158203125;
    SV_Target.z = ((_120 * 0.5) * _202) + 0.500488758087158203125;
    SV_Target.w = _322;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _324;
    SV_Target_2.x = _236;
    SV_Target_2.y = _237;
    SV_Target_2.z = _238;
    SV_Target_2.w = _323;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _322;
    SV_Target_4.x = _239 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _240 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _241 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _321;
    discard_exit();
}


