#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_003_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_003_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _784;
float _1880;
float _1881;
float _1882;
float _1883;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _166 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _167 = _166 * NORMAL.x;
    float _168 = _166 * NORMAL.y;
    float _169 = _166 * NORMAL.z;
    float _174;
    float _175;
    float _176;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _174 = (-0.0) - _167;
        _175 = (-0.0) - _168;
        _176 = (-0.0) - _169;
    }
    else
    {
        _174 = _167;
        _175 = _168;
        _176 = _169;
    }
    float _186 = TEXCOORD.x + (-0.5);
    float _188 = TEXCOORD.y + (-0.5);
    float _193 = 1.0 - sqrt((_188 * _188) + (_186 * _186));
    float _199 = exp2(log2(cbMtdParam._m0[13u].z * _193) * cbMtdParam._m0[13u].w);
    float _203 = exp2(log2(_199 * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _1892 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _204 = isnan(1.0) ? _1892 : (isnan(_1892) ? 1.0 : min(_1892, 1.0));
    float _213 = cbMtdParam._m0[15u].z + TEXCOORD.y;
    float _1903 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _219 = exp2(log2(cbMtdParam._m0[15u].w * (isnan(1.0) ? _1903 : (isnan(_1903) ? 1.0 : min(_1903, 1.0)))) * cbMtdParam._m0[16u].x);
    float _1914 = isnan(0.0) ? _219 : (isnan(_219) ? 0.0 : max(_219, 0.0));
    float _220 = isnan(1.0) ? _1914 : (isnan(_1914) ? 1.0 : min(_1914, 1.0));
    float _235 = exp2(log2(cbMtdParam._m0[14u].w * _199) * cbMtdParam._m0[14u].z);
    float _1925 = isnan(0.0) ? _235 : (isnan(_235) ? 0.0 : max(_235, 0.0));
    float _236 = isnan(1.0) ? _1925 : (isnan(_1925) ? 1.0 : min(_1925, 1.0));
    float _1936 = isnan(0.0) ? _236 : (isnan(_236) ? 0.0 : max(_236, 0.0));
    float _243 = exp2(log2(cbMtdParam._m0[14u].y * _193) * cbMtdParam._m0[14u].x);
    float _1947 = isnan(0.0) ? _243 : (isnan(_243) ? 0.0 : max(_243, 0.0));
    float _245 = (isnan(1.0) ? _1947 : (isnan(_1947) ? 1.0 : min(_1947, 1.0))) - (isnan(1.0) ? _1936 : (isnan(_1936) ? 1.0 : min(_1936, 1.0)));
    float _246 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _247 = _246 * cbMtdParam._m0[10u].x;
    float _248 = _246 * cbMtdParam._m0[10u].y;
    float _249 = _246 * cbMtdParam._m0[10u].z;
    float _259 = exp2(log2(cbMtdParam._m0[13u].x * _199) * cbMtdParam._m0[13u].y);
    float _1978 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
    float _260 = isnan(1.0) ? _1978 : (isnan(_1978) ? 1.0 : min(_1978, 1.0));
    float _276 = cbMtdParam._m0[16u].y * cbPerFrame._m0[22u].x;
    float _281 = _276 * cbMtdParam._m0[11u].w;
    float _282 = sin(_281);
    float _283 = cos(_281);
    vec4 _304 = texture(sampler2D(M_Blackhole_003_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_188, (-0.0) - _282, _283 * _186) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_188, _283, _282 * _186) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _319 = exp2(log2(cbMtdParam._m0[12u].y * _199) * cbMtdParam._m0[12u].x);
    float _1989 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
    float _320 = isnan(1.0) ? _1989 : (isnan(_1989) ? 1.0 : min(_1989, 1.0));
    float _321 = ((_304.x + (-0.5)) * cbMtdParam._m0[16u].z) * _320;
    float _322 = ((_304.y + (-0.5)) * cbMtdParam._m0[16u].z) * _320;
    float _325 = cbSceneParam._m0[86u].x * (_321 + ((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x));
    float _326 = (_322 + ((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _334 = isnan(cbInstanceData._m0[8u].x) ? _325 : (isnan(_325) ? cbInstanceData._m0[8u].x : max(_325, cbInstanceData._m0[8u].x));
    float _335 = isnan(cbInstanceData._m0[8u].y) ? _326 : (isnan(_326) ? cbInstanceData._m0[8u].y : max(_326, cbInstanceData._m0[8u].y));
    vec4 _339 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _334 : (isnan(_334) ? cbInstanceData._m0[8u].z : min(_334, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _335 : (isnan(_335) ? cbInstanceData._m0[8u].w : min(_335, cbInstanceData._m0[8u].w))));
    float _348 = cbSceneParam._m0[72u].w * _339.x;
    float _349 = cbSceneParam._m0[72u].w * _339.y;
    float _350 = cbSceneParam._m0[72u].w * _339.z;
    float _364 = cbMtdParam._m0[11u].z * _276;
    float _365 = sin(_364);
    float _366 = cos(_364);
    float _367 = _186 + (cbMtdParam._m0[17u].z * _276);
    float _368 = _188 + (cbMtdParam._m0[17u].w * _276);
    float _374 = _321 + 0.5;
    float _376 = _322 + 0.5;
    vec4 _389 = texture(sampler2D(M_Blackhole_003_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_374 + fma(_368, (-0.0) - _365, _367 * _366))) + cbTextureTilingScale._m0[0u].z, ((_376 + fma(_368, _366, _367 * _365)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _391 = _389.x;
    float _392 = _389.y;
    float _393 = _389.z;
    float _399 = cbMtdParam._m0[16u].w * _276;
    float _400 = sin(_399);
    float _401 = cos(_399);
    float _402 = _186 + (cbMtdParam._m0[17u].x * _276);
    float _403 = _188 + (cbMtdParam._m0[17u].y * _276);
    vec4 _415 = texture(sampler2D(M_Blackhole_003_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_374 + fma(_403, (-0.0) - _400, _402 * _401))) + cbTextureTilingScale._m0[0u].z, ((_376 + fma(_403, _401, _402 * _400)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _425 = exp2(log2(cbMtdParam._m0[15u].y * _193) * cbMtdParam._m0[15u].x);
    float _2020 = isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0));
    float _426 = isnan(1.0) ? _2020 : (isnan(_2020) ? 1.0 : min(_2020, 1.0));
    float _444 = exp2(log2(cbMtdParam._m0[11u].x * _199) * cbMtdParam._m0[11u].y);
    float _2031 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _445 = isnan(1.0) ? _2031 : (isnan(_2031) ? 1.0 : min(_2031, 1.0));
    float _452 = (_445 * ((((_426 * (_415.x - _391)) + _391) * cbMtdParam._m0[9u].x) - _348)) + _348;
    float _453 = (_445 * ((((_426 * (_415.y - _392)) + _392) * cbMtdParam._m0[9u].y) - _349)) + _349;
    float _454 = (_445 * ((((_426 * (_415.z - _393)) + _393) * cbMtdParam._m0[9u].z) - _350)) + _350;
    float _464 = inversesqrt(dot(vec3(_174, _175, _176), vec3(_174, _175, _176)));
    float _465 = _464 * _174;
    float _466 = _464 * _175;
    float _467 = _464 * _176;
    float _2042 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _468 = isnan(1.0) ? _2042 : (isnan(_2042) ? 1.0 : min(_2042, 1.0));
    float _484 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _524 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _534 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _524);
    float _535 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _524);
    float _536 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _524);
    float _540 = inversesqrt(dot(vec3(_534, _535, _536), vec3(_534, _535, _536)));
    float _541 = _534 * _540;
    float _542 = _535 * _540;
    float _543 = _536 * _540;
    vec4 _548 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _550 = _548.w;
    float _555 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _556 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _564 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_555 * cbSceneParam._m0[86u].x, _556 * cbSceneParam._m0[86u].y));
    float _567 = _564.x * TEXCOORD.z;
    float _568 = dot(vec3(_465, _466, _467), vec3(_541, _542, _543));
    float _571 = _568 * 2.0;
    float _576 = (_571 * _465) - _541;
    float _577 = (_571 * _466) - _542;
    float _578 = (_571 * _467) - _543;
    float _582 = abs(dot(vec3(_541, _542, _543), vec3(_465, _466, _467)));
    float _2053 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
    float _610 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _614 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _618 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _783;
    float _785;
    float _786;
    float _787;
    float _788;
    float _789;
    float _790;
    float _791;
    float _792;
    float _793;
    float _794;
    float _795;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _645 = fma(_618, cbModelParam._m0[26u].z, fma(_614, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _610));
        float _649 = fma(_618, cbModelParam._m0[27u].z, fma(_614, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _610));
        float _653 = fma(_618, cbModelParam._m0[28u].z, fma(_614, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _610));
        float _676 = _610 + _465;
        float _677 = _614 + _466;
        float _678 = _618 + _467;
        float _688 = fma(_678, cbModelParam._m0[26u].z, fma(_677, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _676)) - _645;
        float _689 = fma(_678, cbModelParam._m0[27u].z, fma(_677, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _676)) - _649;
        float _690 = fma(_678, cbModelParam._m0[28u].z, fma(_677, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _676)) - _653;
        float _694 = inversesqrt(dot(vec3(_688, _689, _690), vec3(_688, _689, _690)));
        float _707 = ((_694 * _688) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_645 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _708 = ((_694 * _689) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_649 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _709 = ((_694 * _690) / cbModelParam._m0[34u].z) + ((((((_653 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _712 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_707, _708, _709), 0.0);
        vec4 _719 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_707, _708, _709), 0.0);
        vec4 _726 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_707, _708, _709), 0.0);
        vec4 _733 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_707, _708, _709), 0.0);
        float _746 = exp2((_712.w + (-0.5)) * 20.0) * 2.0;
        float _756 = exp2((_719.w + (-0.5)) * 20.0) * 2.0;
        float _766 = exp2((_726.w + (-0.5)) * 20.0) * 2.0;
        float _776 = exp2((_733.w + (-0.5)) * 20.0) * 2.0;
        float _777 = _776 * (_733.x + (-0.5));
        float _778 = _776 * (_733.y + (-0.5));
        float _779 = _776 * (_733.z + (-0.5));
        _783 = _746 * (_712.z + (-0.5));
        _785 = _746 * (_712.y + (-0.5));
        _786 = _746 * (_712.x + (-0.5));
        _787 = _756 * (_719.z + (-0.5));
        _788 = _756 * (_719.y + (-0.5));
        _789 = _756 * (_719.x + (-0.5));
        _790 = _766 * (_726.z + (-0.5));
        _791 = _766 * (_726.y + (-0.5));
        _792 = _766 * (_726.x + (-0.5));
        _793 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
        _794 = isnan(0.0) ? _778 : (isnan(_778) ? 0.0 : max(_778, 0.0));
        _795 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
    }
    else
    {
        _783 = _784;
        _785 = _784;
        _786 = _784;
        _787 = _784;
        _788 = _784;
        _789 = _784;
        _790 = _784;
        _791 = _784;
        _792 = _784;
        _793 = _784;
        _794 = _784;
        _795 = _784;
    }
    float _957;
    float _958;
    float _959;
    float _960;
    float _961;
    float _962;
    float _963;
    float _964;
    float _965;
    float _966;
    float _967;
    float _968;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _821 = fma(_618, cbModelParam._m0[30u].z, fma(_614, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _610));
        float _825 = fma(_618, cbModelParam._m0[31u].z, fma(_614, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _610));
        float _829 = fma(_618, cbModelParam._m0[32u].z, fma(_614, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _610));
        float _852 = _610 + _465;
        float _853 = _614 + _466;
        float _854 = _618 + _467;
        float _864 = fma(_854, cbModelParam._m0[30u].z, fma(_853, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _852)) - _821;
        float _865 = fma(_854, cbModelParam._m0[31u].z, fma(_853, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _852)) - _825;
        float _866 = fma(_854, cbModelParam._m0[32u].z, fma(_853, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _852)) - _829;
        float _870 = inversesqrt(dot(vec3(_864, _865, _866), vec3(_864, _865, _866)));
        float _883 = ((_870 * _864) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_821 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _884 = ((_870 * _865) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_825 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _885 = ((_870 * _866) / cbModelParam._m0[35u].z) + ((((((_829 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _887 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_883, _884, _885), 0.0);
        vec4 _894 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_883, _884, _885), 0.0);
        vec4 _901 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_883, _884, _885), 0.0);
        vec4 _908 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_883, _884, _885), 0.0);
        float _920 = exp2((_887.w + (-0.5)) * 20.0) * 2.0;
        float _930 = exp2((_894.w + (-0.5)) * 20.0) * 2.0;
        float _940 = exp2((_901.w + (-0.5)) * 20.0) * 2.0;
        float _950 = exp2((_908.w + (-0.5)) * 20.0) * 2.0;
        float _951 = _950 * (_908.x + (-0.5));
        float _952 = _950 * (_908.y + (-0.5));
        float _953 = _950 * (_908.z + (-0.5));
        _957 = _920 * (_887.z + (-0.5));
        _958 = _920 * (_887.y + (-0.5));
        _959 = _920 * (_887.x + (-0.5));
        _960 = _930 * (_894.z + (-0.5));
        _961 = _930 * (_894.y + (-0.5));
        _962 = _930 * (_894.x + (-0.5));
        _963 = _940 * (_901.z + (-0.5));
        _964 = _940 * (_901.y + (-0.5));
        _965 = _940 * (_901.x + (-0.5));
        _966 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
        _967 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
        _968 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
    }
    else
    {
        _957 = _784;
        _958 = _784;
        _959 = _784;
        _960 = _784;
        _961 = _784;
        _962 = _784;
        _963 = _784;
        _964 = _784;
        _965 = _784;
        _966 = _784;
        _967 = _784;
        _968 = _784;
    }
    float _983 = _576 * 0.5;
    float _984 = _577 * 0.5;
    float _985 = _578 * 0.5;
    float _986 = dot(vec4(_983, _984, _985, 1.0), vec4(_959, _962, _965, _968));
    float _989 = dot(vec4(_983, _984, _985, 1.0), vec4(_958, _961, _964, _967));
    float _992 = dot(vec4(_983, _984, _985, 1.0), vec4(_957, _960, _963, _966));
    float _1027;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _999 = dot(vec4(_983, _984, _985, 1.0), vec4(_783, _787, _790, _793));
        float _1003 = dot(vec4(_983, _984, _985, 1.0), vec4(_785, _788, _791, _794));
        float _1007 = dot(vec4(_983, _984, _985, 1.0), vec4(_786, _789, _792, _795));
        float _1014 = dot(vec4(cbModelParam._m0[39u]), vec4(_983, _984, _985, 1.0));
        _1027 = dot(vec3(isnan(0.0) ? _1007 : (isnan(_1007) ? 0.0 : max(_1007, 0.0)), isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0)), isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1014) ? 0.0 : (isnan(0.0) ? _1014 : max(0.0, _1014))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1027 = 1.0;
    }
    float _1038;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1029 = dot(vec4(cbModelParam._m0[40u]), vec4(_983, _984, _985, 1.0));
        _1038 = dot(vec3(isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0)), isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0)), isnan(0.0) ? _992 : (isnan(_992) ? 0.0 : max(_992, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1029) ? 0.0 : (isnan(0.0) ? _1029 : max(0.0, _1029))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1038 = 1.0;
    }
    float _1042 = (_1038 * cbModelParam._m0[1u].x) + (_1027 * (1.0 - cbModelParam._m0[1u].x));
    float _1048 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1129;
    float _1131;
    float _1133;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1096 = fma(_618, cbModelParam._m0[13u].z, fma(_614, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _610)) + cbModelParam._m0[13u].w;
        float _1100 = fma(_618, cbModelParam._m0[14u].z, fma(_614, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _610)) + cbModelParam._m0[14u].w;
        float _1104 = fma(_618, cbModelParam._m0[15u].z, fma(_614, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _610)) + cbModelParam._m0[15u].w;
        float _1107 = fma(_578, cbModelParam._m0[13u].z, fma(_577, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _576));
        float _1110 = fma(_578, cbModelParam._m0[14u].z, fma(_577, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _576));
        float _1113 = fma(_578, cbModelParam._m0[15u].z, fma(_577, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _576));
        float _1139;
        if (_1107 > 0.0)
        {
            _1139 = abs((1.0 - _1096) / _1107);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1107 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1096 + 1.0) / _1107);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1139 = frontier_phi_16_14_ladder;
        }
        float _1461;
        if (_1110 > 0.0)
        {
            _1461 = abs((1.0 - _1100) / _1110);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1110 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1100 + 1.0) / _1110);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1461 = frontier_phi_25_21_ladder;
        }
        float _1644;
        if (_1113 > 0.0)
        {
            _1644 = abs((1.0 - _1104) / _1113);
        }
        else
        {
            float frontier_phi_39_32_ladder;
            if (_1113 < 0.0)
            {
                frontier_phi_39_32_ladder = abs((_1104 + 1.0) / _1113);
            }
            else
            {
                frontier_phi_39_32_ladder = 5000.0;
            }
            _1644 = frontier_phi_39_32_ladder;
        }
        float _1646 = isnan(_1461) ? _1139 : (isnan(_1139) ? _1461 : min(_1139, _1461));
        float _1647 = isnan(_1644) ? _1646 : (isnan(_1646) ? _1644 : min(_1646, _1644));
        float _1651 = (_1647 * _1107) + _1096;
        float _1652 = (_1647 * _1110) + _1100;
        float _1653 = (_1647 * _1113) + _1104;
        float _1654 = _1647 * 9.9999997473787516355514526367188e-05;
        float _1655 = (-1.0) - _1654;
        float _1657 = _1654 + 1.0;
        float frontier_phi_15_39_ladder;
        float frontier_phi_15_39_ladder_1;
        float frontier_phi_15_39_ladder_2;
        if ((_1653 > _1657) || ((_1653 < _1655) || ((_1652 > _1657) || ((_1652 < _1655) || ((_1651 < _1655) || (_1651 > _1657))))))
        {
            frontier_phi_15_39_ladder = 0.0;
            frontier_phi_15_39_ladder_1 = 0.0;
            frontier_phi_15_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1735 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1653, cbModelParam._m0[9u].z, fma(_1652, cbModelParam._m0[9u].y, _1651 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1653, cbModelParam._m0[10u].z, fma(_1652, cbModelParam._m0[10u].y, _1651 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1653, cbModelParam._m0[11u].z, fma(_1652, cbModelParam._m0[11u].y, _1651 * cbModelParam._m0[11u].x))), _1048);
            frontier_phi_15_39_ladder = _1735.z * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_1 = _1735.y * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_2 = _1735.x * cbModelParam._m0[1u].y;
        }
        _1129 = frontier_phi_15_39_ladder_2;
        _1131 = frontier_phi_15_39_ladder_1;
        _1133 = frontier_phi_15_39_ladder;
    }
    else
    {
        vec4 _1117 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_576, _577, _578), _1048);
        _1129 = _1117.x * cbModelParam._m0[1u].y;
        _1131 = _1117.y * cbModelParam._m0[1u].y;
        _1133 = _1117.z * cbModelParam._m0[1u].y;
    }
    float _1136 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1227;
    float _1229;
    float _1231;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1191 = fma(_618, cbModelParam._m0[21u].z, fma(_614, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _610)) + cbModelParam._m0[21u].w;
        float _1195 = fma(_618, cbModelParam._m0[22u].z, fma(_614, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _610)) + cbModelParam._m0[22u].w;
        float _1199 = fma(_618, cbModelParam._m0[23u].z, fma(_614, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _610)) + cbModelParam._m0[23u].w;
        float _1202 = fma(_578, cbModelParam._m0[21u].z, fma(_577, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _576));
        float _1205 = fma(_578, cbModelParam._m0[22u].z, fma(_577, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _576));
        float _1208 = fma(_578, cbModelParam._m0[23u].z, fma(_577, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _576));
        float _1466;
        if (_1202 > 0.0)
        {
            _1466 = abs((1.0 - _1191) / _1202);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1202 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1191 + 1.0) / _1202);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1466 = frontier_phi_27_23_ladder;
        }
        float _1670;
        if (_1205 > 0.0)
        {
            _1670 = abs((1.0 - _1195) / _1205);
        }
        else
        {
            float frontier_phi_41_34_ladder;
            if (_1205 < 0.0)
            {
                frontier_phi_41_34_ladder = abs((_1195 + 1.0) / _1205);
            }
            else
            {
                frontier_phi_41_34_ladder = 5000.0;
            }
            _1670 = frontier_phi_41_34_ladder;
        }
        float _1755;
        if (_1208 > 0.0)
        {
            _1755 = abs((1.0 - _1199) / _1208);
        }
        else
        {
            float frontier_phi_52_48_ladder;
            if (_1208 < 0.0)
            {
                frontier_phi_52_48_ladder = abs((_1199 + 1.0) / _1208);
            }
            else
            {
                frontier_phi_52_48_ladder = 5000.0;
            }
            _1755 = frontier_phi_52_48_ladder;
        }
        float _1757 = isnan(_1670) ? _1466 : (isnan(_1466) ? _1670 : min(_1466, _1670));
        float _1758 = isnan(_1755) ? _1757 : (isnan(_1757) ? _1755 : min(_1757, _1755));
        float _1762 = (_1758 * _1202) + _1191;
        float _1763 = (_1758 * _1205) + _1195;
        float _1764 = (_1758 * _1208) + _1199;
        float _1765 = _1758 * 9.9999997473787516355514526367188e-05;
        float _1766 = (-1.0) - _1765;
        float _1768 = _1765 + 1.0;
        float frontier_phi_24_52_ladder;
        float frontier_phi_24_52_ladder_1;
        float frontier_phi_24_52_ladder_2;
        if ((_1764 > _1768) || ((_1764 < _1766) || ((_1763 > _1768) || ((_1763 < _1766) || ((_1762 < _1766) || (_1762 > _1768))))))
        {
            frontier_phi_24_52_ladder = 0.0;
            frontier_phi_24_52_ladder_1 = 0.0;
            frontier_phi_24_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1797 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1764, cbModelParam._m0[17u].z, fma(_1763, cbModelParam._m0[17u].y, _1762 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1764, cbModelParam._m0[18u].z, fma(_1763, cbModelParam._m0[18u].y, _1762 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1764, cbModelParam._m0[19u].z, fma(_1763, cbModelParam._m0[19u].y, _1762 * cbModelParam._m0[19u].x))), _1136);
            frontier_phi_24_52_ladder = _1797.z * cbModelParam._m0[1u].z;
            frontier_phi_24_52_ladder_1 = _1797.y * cbModelParam._m0[1u].z;
            frontier_phi_24_52_ladder_2 = _1797.x * cbModelParam._m0[1u].z;
        }
        _1227 = frontier_phi_24_52_ladder_2;
        _1229 = frontier_phi_24_52_ladder_1;
        _1231 = frontier_phi_24_52_ladder;
    }
    else
    {
        vec4 _1211 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_576, _577, _578), _1136);
        _1227 = _1211.x * cbModelParam._m0[1u].z;
        _1229 = _1211.y * cbModelParam._m0[1u].z;
        _1231 = _1211.z * cbModelParam._m0[1u].z;
    }
    float _1243 = _567 * 0.01200000010430812835693359375;
    float _1245 = _1243 * ((cbModelParam._m0[1u].w * (_1227 - _1129)) + _1129);
    float _1246 = _1243 * ((cbModelParam._m0[1u].w * (_1229 - _1131)) + _1131);
    float _1247 = _1243 * ((cbModelParam._m0[1u].w * (_1231 - _1133)) + _1133);
    float _1268 = fma(_1247, cbSceneParam._m0[89u].z, fma(_1246, cbSceneParam._m0[89u].y, _1245 * cbSceneParam._m0[89u].x));
    float _1271 = fma(_1247, cbSceneParam._m0[90u].z, fma(_1246, cbSceneParam._m0[90u].y, _1245 * cbSceneParam._m0[90u].x));
    float _1274 = fma(_1247, cbSceneParam._m0[91u].z, fma(_1246, cbSceneParam._m0[91u].y, _1245 * cbSceneParam._m0[91u].x));
    vec4 _1282 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_555, _556));
    float _1284 = _1282.w;
    uint _1299 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1306 = floatBitsToUint(cbInstanceData._m0[_1299 + 5u]).x * 14u;
    float _1314 = (cbLight._m0[_1306 + 13u].x * (_567 + (-1.0))) + 1.0;
    uint _1315 = _1306 + 8u;
    float _1326 = cbLight._m0[_1306].x + _541;
    float _1327 = cbLight._m0[_1306].y + _542;
    float _1328 = cbLight._m0[_1306].z + _543;
    float _1332 = inversesqrt(dot(vec3(_1326, _1327, _1328), vec3(_1326, _1327, _1328)));
    float _1336 = dot(vec3(_465, _466, _467), vec3(cbLight._m0[_1306].xyz));
    float _2179 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
    float _1339 = isnan(1.0) ? _2179 : (isnan(_2179) ? 1.0 : min(_2179, 1.0));
    float _2190 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _1341 = dot(vec3(cbLight._m0[_1306].xyz), vec3(_1326 * _1332, _1327 * _1332, _1328 * _1332));
    float _2201 = isnan(0.0) ? _1341 : (isnan(_1341) ? 0.0 : max(_1341, 0.0));
    float _1351 = (exp2(log2(1.0 - (isnan(1.0) ? _2201 : (isnan(_2201) ? 1.0 : min(_2201, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1357 = (0.5 / ((_1339 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2190 : (isnan(_2190) ? 1.0 : min(_2190, 1.0))))) * _1339;
    float _2212 = isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0));
    float _1359 = (isnan(1.0) ? _2212 : (isnan(_2212) ? 1.0 : min(_2212, 1.0))) * 0.31831014156341552734375;
    float _1361 = isnan(1.0) ? _1314 : (isnan(_1314) ? 1.0 : min(_1314, 1.0));
    uint _1381 = _1299 + 9u;
    uint _1382 = _1381 + uint(cbMatDynParam._m0[0u].w);
    float _1388 = cbInstanceData._m0[_1382].x * (isnan(4.0) ? _247 : (isnan(_247) ? 4.0 : min(_247, 4.0)));
    float _1389 = cbInstanceData._m0[_1382].y * (isnan(4.0) ? _248 : (isnan(_248) ? 4.0 : min(_248, 4.0)));
    float _1390 = cbInstanceData._m0[_1382].z * (isnan(4.0) ? _249 : (isnan(_249) ? 4.0 : min(_249, 4.0)));
    float _2228 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _1399 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _2053 : (isnan(_2053) ? 1.0 : min(_2053, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1406 = (((((((cbLight._m0[_1315].x * ((1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1284))) * _1351) * _1359) * _1361) + ((isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0))) * _1042)) * cbPerFrame._m0[3u].x) + (_1399 * (_452 - (_452 * _260)))) + _1388;
    float _1407 = (((((((cbLight._m0[_1315].y * ((1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1284))) * _1351) * _1359) * _1361) + ((isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0))) * _1042)) * cbPerFrame._m0[3u].x) + (_1399 * (_453 - (_453 * _260)))) + _1389;
    float _1408 = (((((((cbLight._m0[_1315].z * ((1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1284))) * _1351) * _1359) * _1361) + ((isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0))) * _1042)) * cbPerFrame._m0[3u].x) + (_1399 * (_454 - (_454 * _260)))) + _1390;
    float _1409 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
    float _1410 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
    float _1411 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
    float _1417 = cbMtdParam._m0[2u].x * _1388;
    float _1418 = cbMtdParam._m0[2u].y * _1389;
    float _1419 = cbMtdParam._m0[2u].z * _1390;
    float _2254 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1421 = isnan(1.0) ? _2254 : (isnan(_2254) ? 1.0 : min(_2254, 1.0));
    float _1427 = cbInstanceData._m0[_1299 + 6u].w * (isnan(1.0) ? _2228 : (isnan(_2228) ? 1.0 : min(_2228, 1.0)));
    float _1432 = _555 / cbSceneParam._m0[86u].x;
    float _1433 = _556 / cbSceneParam._m0[86u].y;
    vec4 _1447 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1432, _1433, (log2((isnan(cbSceneParam._m0[77u].w) ? _484 : (isnan(_484) ? cbSceneParam._m0[77u].w : min(_484, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1449 = _1447.x;
    float _1450 = _1447.y;
    float _1451 = _1447.z;
    float _1452 = _1447.w;
    float _1513;
    float _1515;
    float _1517;
    float _1519;
    if (_484 > cbSceneParam._m0[78u].w)
    {
        float _1475 = isnan(_484) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _484 : min(cbSceneParam._m0[80u].w, _484));
        float _1476 = _1475 / _484;
        float _1487 = _1476 * _534;
        float _1488 = _535 * _1476;
        float _1489 = (-0.0) - _1488;
        float _1490 = _1476 * _536;
        float _1492 = (cbSceneParam._m0[77u].w * _1489) / _1475;
        float _1493 = _1492 + cbSceneParam._m0[79u].w;
        float _1494 = cbSceneParam._m0[79u].w - _1488;
        float _1500 = sqrt(((_1487 * _1487) + (_1488 * _1488)) + (_1490 * _1490));
        float _1503 = (1.0 - (cbSceneParam._m0[77u].w / _1475)) * _1500;
        float _1509 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1511 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1675;
        if (abs((_1489 - _1492) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1675 = ((((_1493 > 0.0) ? exp2(_1509 * _1493) : (2.0 - exp2(_1511 * _1493))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1503;
        }
        else
        {
            float _1601 = 1.0 / cbSceneParam._m0[80u].x;
            float _1602 = isnan(_1494) ? _1493 : (isnan(_1493) ? _1494 : max(_1493, _1494));
            float _1603 = isnan(_1494) ? _1493 : (isnan(_1493) ? _1494 : min(_1493, _1494));
            float _1612 = isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : min(_1602, 0.0));
            float _1613 = isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : min(_1603, 0.0));
            _1675 = ((abs(_1500 / _1489) * cbSceneParam._m0[80u].y) * ((((_1612 - _1613) * 2.0) - ((exp2(_1509 * (isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0)))) - exp2(_1509 * (isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0))))) * _1601)) - ((exp2(_1511 * _1612) - exp2(_1511 * _1613)) * _1601))) + (_1503 * cbSceneParam._m0[80u].z);
        }
        vec4 _1677 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1432, _1433, 1.0), 0.0);
        float _1686 = exp2((_1675 * (-1.44269502162933349609375)) * (1.0 - _1677.w));
        float _1687 = log2(_1686);
        float _1703 = log2(_1452);
        _1513 = (exp2(_1703 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1687 * cbSceneParam._m0[78u].x)) * _1677.x) / cbSceneParam._m0[78u].x)) + _1449;
        _1515 = (exp2(_1703 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1687 * cbSceneParam._m0[78u].y)) * _1677.y) / cbSceneParam._m0[78u].y)) + _1450;
        _1517 = (exp2(_1703 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1687 * cbSceneParam._m0[78u].z)) * _1677.z) / cbSceneParam._m0[78u].z)) + _1451;
        _1519 = _1686 * _1452;
    }
    else
    {
        _1513 = _1449;
        _1515 = _1450;
        _1517 = _1451;
        _1519 = _1452;
    }
    bool _1713;
    vec4 _1528;
    vec4 _1551;
    float _1553;
    float _1557;
    float _1558;
    float _1559;
    float _1562;
    float _1565;
    float _1568;
    float _1569;
    bool _1580;
    for (;;)
    {
        _1528 = cbMatDynParam._m0[0u];
        float _1530 = roundEven(_1528.y);
        bool _1531 = _1530 == 3.0;
        float _1533 = log2(_1519);
        float _1537 = exp2(_1533 * cbSceneParam._m0[78u].x);
        float _1538 = exp2(_1533 * cbSceneParam._m0[78u].y);
        float _1539 = exp2(_1533 * cbSceneParam._m0[78u].z);
        float _1540 = _1537 * _1409;
        float _1541 = _1538 * _1410;
        float _1542 = _1539 * _1411;
        float _1549 = _550 + (-0.5);
        _1551 = cbMtdParam._m0[1u];
        _1553 = _1551.y * _1549;
        float _1556 = (_1530 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1557 = _1556 * (_1531 ? _1540 : (_1540 + (cbSceneParam._m0[72u].w * _1513)));
        _1558 = _1556 * (_1531 ? _1541 : (_1541 + (cbSceneParam._m0[72u].w * _1515)));
        _1559 = _1556 * (_1531 ? _1542 : (_1542 + (cbSceneParam._m0[72u].w * _1517)));
        _1562 = ((_1417 * _1421) * _1537) * _1556;
        _1565 = ((_1418 * _1421) * _1538) * _1556;
        _1568 = ((_1419 * _1421) * _1539) * _1556;
        _1569 = _1549 * 0.999000012874603271484375;
        _1580 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1580)
        {
            if ((cbInstanceData._m0[_1299 + 7u].x + _1569) < 0.5)
            {
                _1713 = true;
                break;
            }
        }
        uint _1636 = _1381 + uint(_1528.w);
        if ((cbInstanceData._m0[_1636].w < 1.0) && ((cbInstanceData._m0[_1636].w + _1569) < 0.5))
        {
            _1713 = true;
            break;
        }
        if ((_1553 + _220) < _1551.x)
        {
            _1713 = true;
            break;
        }
        _1713 = false;
        break;
    }
    float _1746;
    if (_1713)
    {
        discard_state = true;
        _1746 = 0.0;
    }
    else
    {
        _1746 = _1427;
    }
    SV_Target.x = _1557;
    SV_Target.y = _1558;
    SV_Target.z = _1559;
    SV_Target.w = _1746;
    SV_Target_1.x = _1562;
    SV_Target_1.y = _1565;
    SV_Target_1.z = _1568;
    SV_Target_1.w = _1427;
    discard_exit();
}


