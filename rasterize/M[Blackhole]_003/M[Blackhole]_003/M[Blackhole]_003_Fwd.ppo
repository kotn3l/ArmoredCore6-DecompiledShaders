#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_003_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_003_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _751;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _160 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _161 = _160 * NORMAL.x;
    float _162 = _160 * NORMAL.y;
    float _163 = _160 * NORMAL.z;
    float _168;
    float _169;
    float _170;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _168 = (-0.0) - _161;
        _169 = (-0.0) - _162;
        _170 = (-0.0) - _163;
    }
    else
    {
        _168 = _161;
        _169 = _162;
        _170 = _163;
    }
    float _180 = TEXCOORD.x + (-0.5);
    float _182 = TEXCOORD.y + (-0.5);
    float _187 = 1.0 - sqrt((_182 * _182) + (_180 * _180));
    float _193 = exp2(log2(cbMtdParam._m0[13u].z * _187) * cbMtdParam._m0[13u].w);
    float _197 = exp2(log2(_193 * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _1775 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    float _198 = isnan(1.0) ? _1775 : (isnan(_1775) ? 1.0 : min(_1775, 1.0));
    float _213 = exp2(log2(cbMtdParam._m0[14u].w * _193) * cbMtdParam._m0[14u].z);
    float _1786 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _214 = isnan(1.0) ? _1786 : (isnan(_1786) ? 1.0 : min(_1786, 1.0));
    float _1797 = isnan(0.0) ? _214 : (isnan(_214) ? 0.0 : max(_214, 0.0));
    float _221 = exp2(log2(cbMtdParam._m0[14u].y * _187) * cbMtdParam._m0[14u].x);
    float _1808 = isnan(0.0) ? _221 : (isnan(_221) ? 0.0 : max(_221, 0.0));
    float _223 = (isnan(1.0) ? _1808 : (isnan(_1808) ? 1.0 : min(_1808, 1.0))) - (isnan(1.0) ? _1797 : (isnan(_1797) ? 1.0 : min(_1797, 1.0)));
    float _224 = isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0));
    float _225 = _224 * cbMtdParam._m0[10u].x;
    float _226 = _224 * cbMtdParam._m0[10u].y;
    float _227 = _224 * cbMtdParam._m0[10u].z;
    float _237 = exp2(log2(cbMtdParam._m0[13u].x * _193) * cbMtdParam._m0[13u].y);
    float _1839 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
    float _238 = isnan(1.0) ? _1839 : (isnan(_1839) ? 1.0 : min(_1839, 1.0));
    float _244 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _245 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _257 = cbMtdParam._m0[16u].y * cbPerFrame._m0[22u].x;
    float _262 = _257 * cbMtdParam._m0[11u].w;
    float _263 = sin(_262);
    float _264 = cos(_262);
    vec4 _285 = texture(sampler2D(M_Blackhole_003_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_182, (-0.0) - _263, _264 * _180) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_182, _264, _263 * _180) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _300 = exp2(log2(cbMtdParam._m0[12u].y * _193) * cbMtdParam._m0[12u].x);
    float _1850 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
    float _301 = isnan(1.0) ? _1850 : (isnan(_1850) ? 1.0 : min(_1850, 1.0));
    float _302 = ((_285.x + (-0.5)) * cbMtdParam._m0[16u].z) * _301;
    float _303 = ((_285.y + (-0.5)) * cbMtdParam._m0[16u].z) * _301;
    float _306 = cbSceneParam._m0[86u].x * (_302 + (_244 / cbSceneParam._m0[86u].x));
    float _307 = (_303 + (_245 / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _315 = isnan(cbInstanceData._m0[8u].x) ? _306 : (isnan(_306) ? cbInstanceData._m0[8u].x : max(_306, cbInstanceData._m0[8u].x));
    float _316 = isnan(cbInstanceData._m0[8u].y) ? _307 : (isnan(_307) ? cbInstanceData._m0[8u].y : max(_307, cbInstanceData._m0[8u].y));
    vec4 _320 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _315 : (isnan(_315) ? cbInstanceData._m0[8u].z : min(_315, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _316 : (isnan(_316) ? cbInstanceData._m0[8u].w : min(_316, cbInstanceData._m0[8u].w))));
    float _329 = cbSceneParam._m0[72u].w * _320.x;
    float _330 = cbSceneParam._m0[72u].w * _320.y;
    float _331 = cbSceneParam._m0[72u].w * _320.z;
    float _345 = cbMtdParam._m0[11u].z * _257;
    float _346 = sin(_345);
    float _347 = cos(_345);
    float _348 = _180 + (cbMtdParam._m0[17u].z * _257);
    float _349 = _182 + (cbMtdParam._m0[17u].w * _257);
    float _355 = _302 + 0.5;
    float _357 = _303 + 0.5;
    vec4 _370 = texture(sampler2D(M_Blackhole_003_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_355 + fma(_349, (-0.0) - _346, _348 * _347))) + cbTextureTilingScale._m0[0u].z, ((_357 + fma(_349, _347, _348 * _346)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _372 = _370.x;
    float _373 = _370.y;
    float _374 = _370.z;
    float _380 = cbMtdParam._m0[16u].w * _257;
    float _381 = sin(_380);
    float _382 = cos(_380);
    float _383 = _180 + (cbMtdParam._m0[17u].x * _257);
    float _384 = _182 + (cbMtdParam._m0[17u].y * _257);
    vec4 _396 = texture(sampler2D(M_Blackhole_003_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_355 + fma(_384, (-0.0) - _381, _383 * _382))) + cbTextureTilingScale._m0[0u].z, ((_357 + fma(_384, _382, _383 * _381)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _409 = exp2(log2(cbMtdParam._m0[15u].y * _187) * cbMtdParam._m0[15u].x);
    float _1881 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _410 = isnan(1.0) ? _1881 : (isnan(_1881) ? 1.0 : min(_1881, 1.0));
    float _428 = exp2(log2(cbMtdParam._m0[11u].x * _193) * cbMtdParam._m0[11u].y);
    float _1892 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _429 = isnan(1.0) ? _1892 : (isnan(_1892) ? 1.0 : min(_1892, 1.0));
    float _436 = (_429 * ((((_410 * (_396.x - _372)) + _372) * cbMtdParam._m0[9u].x) - _329)) + _329;
    float _437 = (_429 * ((((_410 * (_396.y - _373)) + _373) * cbMtdParam._m0[9u].y) - _330)) + _330;
    float _438 = (_429 * ((((_410 * (_396.z - _374)) + _374) * cbMtdParam._m0[9u].z) - _331)) + _331;
    float _448 = inversesqrt(dot(vec3(_168, _169, _170), vec3(_168, _169, _170)));
    float _449 = _448 * _168;
    float _450 = _448 * _169;
    float _451 = _448 * _170;
    float _1903 = isnan(0.0) ? _198 : (isnan(_198) ? 0.0 : max(_198, 0.0));
    float _452 = isnan(1.0) ? _1903 : (isnan(_1903) ? 1.0 : min(_1903, 1.0));
    float _468 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _508 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _518 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _508);
    float _519 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _508);
    float _520 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _508);
    float _524 = inversesqrt(dot(vec3(_518, _519, _520), vec3(_518, _519, _520)));
    float _525 = _518 * _524;
    float _526 = _519 * _524;
    float _527 = _520 * _524;
    vec4 _531 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_244 * cbSceneParam._m0[86u].x, _245 * cbSceneParam._m0[86u].y));
    float _534 = _531.x * TEXCOORD.z;
    float _535 = dot(vec3(_449, _450, _451), vec3(_525, _526, _527));
    float _538 = _535 * 2.0;
    float _543 = (_538 * _449) - _525;
    float _544 = (_538 * _450) - _526;
    float _545 = (_538 * _451) - _527;
    float _549 = abs(dot(vec3(_525, _526, _527), vec3(_449, _450, _451)));
    float _1914 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    float _577 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _581 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _585 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _750;
    float _752;
    float _753;
    float _754;
    float _755;
    float _756;
    float _757;
    float _758;
    float _759;
    float _760;
    float _761;
    float _762;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _612 = fma(_585, cbModelParam._m0[26u].z, fma(_581, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _577));
        float _616 = fma(_585, cbModelParam._m0[27u].z, fma(_581, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _577));
        float _620 = fma(_585, cbModelParam._m0[28u].z, fma(_581, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _577));
        float _643 = _577 + _449;
        float _644 = _581 + _450;
        float _645 = _585 + _451;
        float _655 = fma(_645, cbModelParam._m0[26u].z, fma(_644, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _643)) - _612;
        float _656 = fma(_645, cbModelParam._m0[27u].z, fma(_644, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _643)) - _616;
        float _657 = fma(_645, cbModelParam._m0[28u].z, fma(_644, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _643)) - _620;
        float _661 = inversesqrt(dot(vec3(_655, _656, _657), vec3(_655, _656, _657)));
        float _674 = ((_661 * _655) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_612 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _675 = ((_661 * _656) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_616 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _676 = ((_661 * _657) / cbModelParam._m0[34u].z) + ((((((_620 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _679 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_674, _675, _676), 0.0);
        vec4 _686 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_674, _675, _676), 0.0);
        vec4 _693 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_674, _675, _676), 0.0);
        vec4 _700 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_674, _675, _676), 0.0);
        float _713 = exp2((_679.w + (-0.5)) * 20.0) * 2.0;
        float _723 = exp2((_686.w + (-0.5)) * 20.0) * 2.0;
        float _733 = exp2((_693.w + (-0.5)) * 20.0) * 2.0;
        float _743 = exp2((_700.w + (-0.5)) * 20.0) * 2.0;
        float _744 = _743 * (_700.x + (-0.5));
        float _745 = _743 * (_700.y + (-0.5));
        float _746 = _743 * (_700.z + (-0.5));
        _750 = _713 * (_679.z + (-0.5));
        _752 = _713 * (_679.y + (-0.5));
        _753 = _713 * (_679.x + (-0.5));
        _754 = _723 * (_686.z + (-0.5));
        _755 = _723 * (_686.y + (-0.5));
        _756 = _723 * (_686.x + (-0.5));
        _757 = _733 * (_693.z + (-0.5));
        _758 = _733 * (_693.y + (-0.5));
        _759 = _733 * (_693.x + (-0.5));
        _760 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
        _761 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
        _762 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    }
    else
    {
        _750 = _751;
        _752 = _751;
        _753 = _751;
        _754 = _751;
        _755 = _751;
        _756 = _751;
        _757 = _751;
        _758 = _751;
        _759 = _751;
        _760 = _751;
        _761 = _751;
        _762 = _751;
    }
    float _924;
    float _925;
    float _926;
    float _927;
    float _928;
    float _929;
    float _930;
    float _931;
    float _932;
    float _933;
    float _934;
    float _935;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _788 = fma(_585, cbModelParam._m0[30u].z, fma(_581, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _577));
        float _792 = fma(_585, cbModelParam._m0[31u].z, fma(_581, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _577));
        float _796 = fma(_585, cbModelParam._m0[32u].z, fma(_581, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _577));
        float _819 = _577 + _449;
        float _820 = _581 + _450;
        float _821 = _585 + _451;
        float _831 = fma(_821, cbModelParam._m0[30u].z, fma(_820, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _819)) - _788;
        float _832 = fma(_821, cbModelParam._m0[31u].z, fma(_820, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _819)) - _792;
        float _833 = fma(_821, cbModelParam._m0[32u].z, fma(_820, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _819)) - _796;
        float _837 = inversesqrt(dot(vec3(_831, _832, _833), vec3(_831, _832, _833)));
        float _850 = ((_837 * _831) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_788 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _851 = ((_837 * _832) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_792 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _852 = ((_837 * _833) / cbModelParam._m0[35u].z) + ((((((_796 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _854 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_850, _851, _852), 0.0);
        vec4 _861 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_850, _851, _852), 0.0);
        vec4 _868 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_850, _851, _852), 0.0);
        vec4 _875 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_850, _851, _852), 0.0);
        float _887 = exp2((_854.w + (-0.5)) * 20.0) * 2.0;
        float _897 = exp2((_861.w + (-0.5)) * 20.0) * 2.0;
        float _907 = exp2((_868.w + (-0.5)) * 20.0) * 2.0;
        float _917 = exp2((_875.w + (-0.5)) * 20.0) * 2.0;
        float _918 = _917 * (_875.x + (-0.5));
        float _919 = _917 * (_875.y + (-0.5));
        float _920 = _917 * (_875.z + (-0.5));
        _924 = _887 * (_854.z + (-0.5));
        _925 = _887 * (_854.y + (-0.5));
        _926 = _887 * (_854.x + (-0.5));
        _927 = _897 * (_861.z + (-0.5));
        _928 = _897 * (_861.y + (-0.5));
        _929 = _897 * (_861.x + (-0.5));
        _930 = _907 * (_868.z + (-0.5));
        _931 = _907 * (_868.y + (-0.5));
        _932 = _907 * (_868.x + (-0.5));
        _933 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
        _934 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
        _935 = isnan(0.0) ? _918 : (isnan(_918) ? 0.0 : max(_918, 0.0));
    }
    else
    {
        _924 = _751;
        _925 = _751;
        _926 = _751;
        _927 = _751;
        _928 = _751;
        _929 = _751;
        _930 = _751;
        _931 = _751;
        _932 = _751;
        _933 = _751;
        _934 = _751;
        _935 = _751;
    }
    float _950 = _543 * 0.5;
    float _951 = _544 * 0.5;
    float _952 = _545 * 0.5;
    float _953 = dot(vec4(_950, _951, _952, 1.0), vec4(_926, _929, _932, _935));
    float _956 = dot(vec4(_950, _951, _952, 1.0), vec4(_925, _928, _931, _934));
    float _959 = dot(vec4(_950, _951, _952, 1.0), vec4(_924, _927, _930, _933));
    float _994;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _966 = dot(vec4(_950, _951, _952, 1.0), vec4(_750, _754, _757, _760));
        float _970 = dot(vec4(_950, _951, _952, 1.0), vec4(_752, _755, _758, _761));
        float _974 = dot(vec4(_950, _951, _952, 1.0), vec4(_753, _756, _759, _762));
        float _981 = dot(vec4(cbModelParam._m0[39u]), vec4(_950, _951, _952, 1.0));
        _994 = dot(vec3(isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0)), isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0)), isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_981) ? 0.0 : (isnan(0.0) ? _981 : max(0.0, _981))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _994 = 1.0;
    }
    float _1005;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _996 = dot(vec4(cbModelParam._m0[40u]), vec4(_950, _951, _952, 1.0));
        _1005 = dot(vec3(isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0)), isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0)), isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_996) ? 0.0 : (isnan(0.0) ? _996 : max(0.0, _996))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1005 = 1.0;
    }
    float _1009 = (_1005 * cbModelParam._m0[1u].x) + (_994 * (1.0 - cbModelParam._m0[1u].x));
    float _1015 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1096;
    float _1098;
    float _1100;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1063 = fma(_585, cbModelParam._m0[13u].z, fma(_581, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _577)) + cbModelParam._m0[13u].w;
        float _1067 = fma(_585, cbModelParam._m0[14u].z, fma(_581, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _577)) + cbModelParam._m0[14u].w;
        float _1071 = fma(_585, cbModelParam._m0[15u].z, fma(_581, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _577)) + cbModelParam._m0[15u].w;
        float _1074 = fma(_545, cbModelParam._m0[13u].z, fma(_544, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _543));
        float _1077 = fma(_545, cbModelParam._m0[14u].z, fma(_544, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _543));
        float _1080 = fma(_545, cbModelParam._m0[15u].z, fma(_544, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _543));
        float _1106;
        if (_1074 > 0.0)
        {
            _1106 = abs((1.0 - _1063) / _1074);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1074 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1063 + 1.0) / _1074);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1106 = frontier_phi_16_14_ladder;
        }
        float _1407;
        if (_1077 > 0.0)
        {
            _1407 = abs((1.0 - _1067) / _1077);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1077 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1067 + 1.0) / _1077);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1407 = frontier_phi_25_21_ladder;
        }
        float _1565;
        if (_1080 > 0.0)
        {
            _1565 = abs((1.0 - _1071) / _1080);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1080 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1071 + 1.0) / _1080);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1565 = frontier_phi_37_32_ladder;
        }
        float _1567 = isnan(_1407) ? _1106 : (isnan(_1106) ? _1407 : min(_1106, _1407));
        float _1568 = isnan(_1565) ? _1567 : (isnan(_1567) ? _1565 : min(_1567, _1565));
        float _1572 = (_1568 * _1074) + _1063;
        float _1573 = (_1568 * _1077) + _1067;
        float _1574 = (_1568 * _1080) + _1071;
        float _1575 = _1568 * 9.9999997473787516355514526367188e-05;
        float _1576 = (-1.0) - _1575;
        float _1578 = _1575 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1574 > _1578) || ((_1574 < _1576) || ((_1573 > _1578) || ((_1573 < _1576) || ((_1572 < _1576) || (_1572 > _1578))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1650 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1574, cbModelParam._m0[9u].z, fma(_1573, cbModelParam._m0[9u].y, _1572 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1574, cbModelParam._m0[10u].z, fma(_1573, cbModelParam._m0[10u].y, _1572 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1574, cbModelParam._m0[11u].z, fma(_1573, cbModelParam._m0[11u].y, _1572 * cbModelParam._m0[11u].x))), _1015);
            frontier_phi_15_37_ladder = _1650.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1650.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1650.x * cbModelParam._m0[1u].y;
        }
        _1096 = frontier_phi_15_37_ladder_2;
        _1098 = frontier_phi_15_37_ladder_1;
        _1100 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1084 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_543, _544, _545), _1015);
        _1096 = _1084.x * cbModelParam._m0[1u].y;
        _1098 = _1084.y * cbModelParam._m0[1u].y;
        _1100 = _1084.z * cbModelParam._m0[1u].y;
    }
    float _1103 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1194;
    float _1196;
    float _1198;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1158 = fma(_585, cbModelParam._m0[21u].z, fma(_581, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _577)) + cbModelParam._m0[21u].w;
        float _1162 = fma(_585, cbModelParam._m0[22u].z, fma(_581, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _577)) + cbModelParam._m0[22u].w;
        float _1166 = fma(_585, cbModelParam._m0[23u].z, fma(_581, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _577)) + cbModelParam._m0[23u].w;
        float _1169 = fma(_545, cbModelParam._m0[21u].z, fma(_544, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _543));
        float _1172 = fma(_545, cbModelParam._m0[22u].z, fma(_544, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _543));
        float _1175 = fma(_545, cbModelParam._m0[23u].z, fma(_544, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _543));
        float _1412;
        if (_1169 > 0.0)
        {
            _1412 = abs((1.0 - _1158) / _1169);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1169 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1158 + 1.0) / _1169);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1412 = frontier_phi_27_23_ladder;
        }
        float _1591;
        if (_1172 > 0.0)
        {
            _1591 = abs((1.0 - _1162) / _1172);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1172 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1162 + 1.0) / _1172);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1591 = frontier_phi_39_34_ladder;
        }
        float _1659;
        if (_1175 > 0.0)
        {
            _1659 = abs((1.0 - _1166) / _1175);
        }
        else
        {
            float frontier_phi_45_44_ladder;
            if (_1175 < 0.0)
            {
                frontier_phi_45_44_ladder = abs((_1166 + 1.0) / _1175);
            }
            else
            {
                frontier_phi_45_44_ladder = 5000.0;
            }
            _1659 = frontier_phi_45_44_ladder;
        }
        float _1661 = isnan(_1591) ? _1412 : (isnan(_1412) ? _1591 : min(_1412, _1591));
        float _1662 = isnan(_1659) ? _1661 : (isnan(_1661) ? _1659 : min(_1661, _1659));
        float _1666 = (_1662 * _1169) + _1158;
        float _1667 = (_1662 * _1172) + _1162;
        float _1668 = (_1662 * _1175) + _1166;
        float _1669 = _1662 * 9.9999997473787516355514526367188e-05;
        float _1670 = (-1.0) - _1669;
        float _1672 = _1669 + 1.0;
        float frontier_phi_24_45_ladder;
        float frontier_phi_24_45_ladder_1;
        float frontier_phi_24_45_ladder_2;
        if ((_1668 > _1672) || ((_1668 < _1670) || ((_1667 > _1672) || ((_1667 < _1670) || ((_1666 < _1670) || (_1666 > _1672))))))
        {
            frontier_phi_24_45_ladder = 0.0;
            frontier_phi_24_45_ladder_1 = 0.0;
            frontier_phi_24_45_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1701 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1668, cbModelParam._m0[17u].z, fma(_1667, cbModelParam._m0[17u].y, _1666 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1668, cbModelParam._m0[18u].z, fma(_1667, cbModelParam._m0[18u].y, _1666 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1668, cbModelParam._m0[19u].z, fma(_1667, cbModelParam._m0[19u].y, _1666 * cbModelParam._m0[19u].x))), _1103);
            frontier_phi_24_45_ladder = _1701.x * cbModelParam._m0[1u].z;
            frontier_phi_24_45_ladder_1 = _1701.z * cbModelParam._m0[1u].z;
            frontier_phi_24_45_ladder_2 = _1701.y * cbModelParam._m0[1u].z;
        }
        _1194 = frontier_phi_24_45_ladder;
        _1196 = frontier_phi_24_45_ladder_2;
        _1198 = frontier_phi_24_45_ladder_1;
    }
    else
    {
        vec4 _1178 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_543, _544, _545), _1103);
        _1194 = _1178.x * cbModelParam._m0[1u].z;
        _1196 = _1178.y * cbModelParam._m0[1u].z;
        _1198 = _1178.z * cbModelParam._m0[1u].z;
    }
    float _1210 = _534 * 0.01200000010430812835693359375;
    float _1212 = _1210 * ((cbModelParam._m0[1u].w * (_1194 - _1096)) + _1096);
    float _1213 = _1210 * ((cbModelParam._m0[1u].w * (_1196 - _1098)) + _1098);
    float _1214 = _1210 * ((cbModelParam._m0[1u].w * (_1198 - _1100)) + _1100);
    float _1235 = fma(_1214, cbSceneParam._m0[89u].z, fma(_1213, cbSceneParam._m0[89u].y, _1212 * cbSceneParam._m0[89u].x));
    float _1238 = fma(_1214, cbSceneParam._m0[90u].z, fma(_1213, cbSceneParam._m0[90u].y, _1212 * cbSceneParam._m0[90u].x));
    float _1241 = fma(_1214, cbSceneParam._m0[91u].z, fma(_1213, cbSceneParam._m0[91u].y, _1212 * cbSceneParam._m0[91u].x));
    uint _1248 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1255 = floatBitsToUint(cbInstanceData._m0[_1248 + 5u]).x * 14u;
    float _1263 = (cbLight._m0[_1255 + 13u].x * (_534 + (-1.0))) + 1.0;
    uint _1264 = _1255 + 8u;
    float _1275 = cbLight._m0[_1255].x + _525;
    float _1276 = cbLight._m0[_1255].y + _526;
    float _1277 = cbLight._m0[_1255].z + _527;
    float _1281 = inversesqrt(dot(vec3(_1275, _1276, _1277), vec3(_1275, _1276, _1277)));
    float _1285 = dot(vec3(_449, _450, _451), vec3(cbLight._m0[_1255].xyz));
    float _2040 = isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0));
    float _1288 = isnan(1.0) ? _2040 : (isnan(_2040) ? 1.0 : min(_2040, 1.0));
    float _2051 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
    float _1290 = dot(vec3(cbLight._m0[_1255].xyz), vec3(_1275 * _1281, _1276 * _1281, _1277 * _1281));
    float _2062 = isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0));
    float _1300 = (exp2(log2(1.0 - (isnan(1.0) ? _2062 : (isnan(_2062) ? 1.0 : min(_2062, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1306 = (0.5 / ((_1288 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2051 : (isnan(_2051) ? 1.0 : min(_2051, 1.0))))) * _1288;
    float _2073 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
    float _1308 = (isnan(1.0) ? _2073 : (isnan(_2073) ? 1.0 : min(_2073, 1.0))) * 0.31831014156341552734375;
    float _1310 = isnan(1.0) ? _1263 : (isnan(_1263) ? 1.0 : min(_1263, 1.0));
    uint _1328 = (_1248 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1334 = cbInstanceData._m0[_1328].x * (isnan(4.0) ? _225 : (isnan(_225) ? 4.0 : min(_225, 4.0)));
    float _1335 = cbInstanceData._m0[_1328].y * (isnan(4.0) ? _226 : (isnan(_226) ? 4.0 : min(_226, 4.0)));
    float _1336 = cbInstanceData._m0[_1328].z * (isnan(4.0) ? _227 : (isnan(_227) ? 4.0 : min(_227, 4.0)));
    float _2089 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _1345 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _1914 : (isnan(_1914) ? 1.0 : min(_1914, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1352 = ((cbPerFrame._m0[3u].x * ((((_1300 * cbLight._m0[_1264].x) * _1308) * _1310) + ((isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0))) * _1009))) + (_1345 * (_436 - (_436 * _238)))) + _1334;
    float _1353 = ((cbPerFrame._m0[3u].x * ((((_1300 * cbLight._m0[_1264].y) * _1308) * _1310) + ((isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0))) * _1009))) + (_1345 * (_437 - (_437 * _238)))) + _1335;
    float _1354 = ((cbPerFrame._m0[3u].x * ((((_1300 * cbLight._m0[_1264].z) * _1308) * _1310) + ((isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0))) * _1009))) + (_1345 * (_438 - (_438 * _238)))) + _1336;
    float _2115 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1367 = isnan(1.0) ? _2115 : (isnan(_2115) ? 1.0 : min(_2115, 1.0));
    float _1373 = cbInstanceData._m0[_1248 + 6u].w * (isnan(1.0) ? _2089 : (isnan(_2089) ? 1.0 : min(_2089, 1.0)));
    float _1378 = _244 / cbSceneParam._m0[86u].x;
    float _1379 = _245 / cbSceneParam._m0[86u].y;
    vec4 _1393 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1378, _1379, (log2((isnan(cbSceneParam._m0[77u].w) ? _468 : (isnan(_468) ? cbSceneParam._m0[77u].w : min(_468, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1395 = _1393.x;
    float _1396 = _1393.y;
    float _1397 = _1393.z;
    float _1398 = _1393.w;
    float _1459;
    float _1461;
    float _1463;
    float _1465;
    if (_468 > cbSceneParam._m0[78u].w)
    {
        float _1421 = isnan(_468) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _468 : min(cbSceneParam._m0[80u].w, _468));
        float _1422 = _1421 / _468;
        float _1433 = _1422 * _518;
        float _1434 = _519 * _1422;
        float _1435 = (-0.0) - _1434;
        float _1436 = _1422 * _520;
        float _1438 = (cbSceneParam._m0[77u].w * _1435) / _1421;
        float _1439 = _1438 + cbSceneParam._m0[79u].w;
        float _1440 = cbSceneParam._m0[79u].w - _1434;
        float _1446 = sqrt(((_1433 * _1433) + (_1434 * _1434)) + (_1436 * _1436));
        float _1449 = (1.0 - (cbSceneParam._m0[77u].w / _1421)) * _1446;
        float _1455 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1457 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1596;
        if (abs((_1435 - _1438) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1596 = ((((_1439 > 0.0) ? exp2(_1455 * _1439) : (2.0 - exp2(_1457 * _1439))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1449;
        }
        else
        {
            float _1538 = 1.0 / cbSceneParam._m0[80u].x;
            float _1539 = isnan(_1440) ? _1439 : (isnan(_1439) ? _1440 : max(_1439, _1440));
            float _1540 = isnan(_1440) ? _1439 : (isnan(_1439) ? _1440 : min(_1439, _1440));
            float _1549 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : min(_1539, 0.0));
            float _1550 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : min(_1540, 0.0));
            _1596 = ((abs(_1446 / _1435) * cbSceneParam._m0[80u].y) * ((((_1549 - _1550) * 2.0) - ((exp2(_1455 * (isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0)))) - exp2(_1455 * (isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0))))) * _1538)) - ((exp2(_1457 * _1549) - exp2(_1457 * _1550)) * _1538))) + (_1449 * cbSceneParam._m0[80u].z);
        }
        vec4 _1598 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1378, _1379, 1.0), 0.0);
        float _1607 = exp2((_1596 * (-1.44269502162933349609375)) * (1.0 - _1598.w));
        float _1608 = log2(_1607);
        float _1624 = log2(_1398);
        _1459 = (exp2(_1624 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1608 * cbSceneParam._m0[78u].x)) * _1598.x) / cbSceneParam._m0[78u].x)) + _1395;
        _1461 = (exp2(_1624 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1608 * cbSceneParam._m0[78u].y)) * _1598.y) / cbSceneParam._m0[78u].y)) + _1396;
        _1463 = (exp2(_1624 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1608 * cbSceneParam._m0[78u].z)) * _1598.z) / cbSceneParam._m0[78u].z)) + _1397;
        _1465 = _1607 * _1398;
    }
    else
    {
        _1459 = _1395;
        _1461 = _1396;
        _1463 = _1397;
        _1465 = _1398;
    }
    float _1476 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1477 = _1476 == 3.0;
    float _1479 = log2(_1465);
    float _1483 = exp2(_1479 * cbSceneParam._m0[78u].x);
    float _1484 = exp2(_1479 * cbSceneParam._m0[78u].y);
    float _1485 = exp2(_1479 * cbSceneParam._m0[78u].z);
    float _1486 = _1483 * (isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0)));
    float _1487 = _1484 * (isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0)));
    float _1488 = _1485 * (isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0)));
    float _1497 = (_1476 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1497 * (_1477 ? _1486 : (_1486 + (cbSceneParam._m0[72u].w * _1459)));
    SV_Target.y = _1497 * (_1477 ? _1487 : (_1487 + (cbSceneParam._m0[72u].w * _1461)));
    SV_Target.z = _1497 * (_1477 ? _1488 : (_1488 + (cbSceneParam._m0[72u].w * _1463)));
    SV_Target.w = _1373;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _1334) * _1367) * _1483) * _1497;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _1335) * _1367) * _1484) * _1497;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _1336) * _1367) * _1485) * _1497;
    SV_Target_1.w = _1373;
}


