#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_003_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_003_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _782;
float _1857;
float _1858;
float _1859;
float _1860;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _164 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _165 = _164 * NORMAL.x;
    float _166 = _164 * NORMAL.y;
    float _167 = _164 * NORMAL.z;
    float _172;
    float _173;
    float _174;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _172 = (-0.0) - _165;
        _173 = (-0.0) - _166;
        _174 = (-0.0) - _167;
    }
    else
    {
        _172 = _165;
        _173 = _166;
        _174 = _167;
    }
    float _184 = TEXCOORD.x + (-0.5);
    float _186 = TEXCOORD.y + (-0.5);
    float _191 = 1.0 - sqrt((_186 * _186) + (_184 * _184));
    float _197 = exp2(log2(cbMtdParam._m0[13u].z * _191) * cbMtdParam._m0[13u].w);
    float _201 = exp2(log2(_197 * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _1869 = isnan(0.0) ? _201 : (isnan(_201) ? 0.0 : max(_201, 0.0));
    float _202 = isnan(1.0) ? _1869 : (isnan(_1869) ? 1.0 : min(_1869, 1.0));
    float _211 = cbMtdParam._m0[15u].z + TEXCOORD.y;
    float _1880 = isnan(0.0) ? _211 : (isnan(_211) ? 0.0 : max(_211, 0.0));
    float _217 = exp2(log2(cbMtdParam._m0[15u].w * (isnan(1.0) ? _1880 : (isnan(_1880) ? 1.0 : min(_1880, 1.0)))) * cbMtdParam._m0[16u].x);
    float _1891 = isnan(0.0) ? _217 : (isnan(_217) ? 0.0 : max(_217, 0.0));
    float _218 = isnan(1.0) ? _1891 : (isnan(_1891) ? 1.0 : min(_1891, 1.0));
    float _233 = exp2(log2(cbMtdParam._m0[14u].w * _197) * cbMtdParam._m0[14u].z);
    float _1902 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
    float _234 = isnan(1.0) ? _1902 : (isnan(_1902) ? 1.0 : min(_1902, 1.0));
    float _1913 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
    float _241 = exp2(log2(cbMtdParam._m0[14u].y * _191) * cbMtdParam._m0[14u].x);
    float _1924 = isnan(0.0) ? _241 : (isnan(_241) ? 0.0 : max(_241, 0.0));
    float _243 = (isnan(1.0) ? _1924 : (isnan(_1924) ? 1.0 : min(_1924, 1.0))) - (isnan(1.0) ? _1913 : (isnan(_1913) ? 1.0 : min(_1913, 1.0)));
    float _244 = isnan(0.0) ? _243 : (isnan(_243) ? 0.0 : max(_243, 0.0));
    float _245 = _244 * cbMtdParam._m0[10u].x;
    float _246 = _244 * cbMtdParam._m0[10u].y;
    float _247 = _244 * cbMtdParam._m0[10u].z;
    float _257 = exp2(log2(cbMtdParam._m0[13u].x * _197) * cbMtdParam._m0[13u].y);
    float _1955 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _258 = isnan(1.0) ? _1955 : (isnan(_1955) ? 1.0 : min(_1955, 1.0));
    float _274 = cbMtdParam._m0[16u].y * cbPerFrame._m0[22u].x;
    float _279 = _274 * cbMtdParam._m0[11u].w;
    float _280 = sin(_279);
    float _281 = cos(_279);
    vec4 _302 = texture(sampler2D(M_Blackhole_003_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_186, (-0.0) - _280, _281 * _184) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_186, _281, _280 * _184) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _317 = exp2(log2(cbMtdParam._m0[12u].y * _197) * cbMtdParam._m0[12u].x);
    float _1966 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _318 = isnan(1.0) ? _1966 : (isnan(_1966) ? 1.0 : min(_1966, 1.0));
    float _319 = ((_302.x + (-0.5)) * cbMtdParam._m0[16u].z) * _318;
    float _320 = ((_302.y + (-0.5)) * cbMtdParam._m0[16u].z) * _318;
    float _323 = cbSceneParam._m0[86u].x * (_319 + ((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x));
    float _324 = (_320 + ((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _332 = isnan(cbInstanceData._m0[8u].x) ? _323 : (isnan(_323) ? cbInstanceData._m0[8u].x : max(_323, cbInstanceData._m0[8u].x));
    float _333 = isnan(cbInstanceData._m0[8u].y) ? _324 : (isnan(_324) ? cbInstanceData._m0[8u].y : max(_324, cbInstanceData._m0[8u].y));
    vec4 _337 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _332 : (isnan(_332) ? cbInstanceData._m0[8u].z : min(_332, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _333 : (isnan(_333) ? cbInstanceData._m0[8u].w : min(_333, cbInstanceData._m0[8u].w))));
    float _346 = cbSceneParam._m0[72u].w * _337.x;
    float _347 = cbSceneParam._m0[72u].w * _337.y;
    float _348 = cbSceneParam._m0[72u].w * _337.z;
    float _362 = cbMtdParam._m0[11u].z * _274;
    float _363 = sin(_362);
    float _364 = cos(_362);
    float _365 = _184 + (cbMtdParam._m0[17u].z * _274);
    float _366 = _186 + (cbMtdParam._m0[17u].w * _274);
    float _372 = _319 + 0.5;
    float _374 = _320 + 0.5;
    vec4 _387 = texture(sampler2D(M_Blackhole_003_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_372 + fma(_366, (-0.0) - _363, _365 * _364))) + cbTextureTilingScale._m0[0u].z, ((_374 + fma(_366, _364, _365 * _363)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _389 = _387.x;
    float _390 = _387.y;
    float _391 = _387.z;
    float _397 = cbMtdParam._m0[16u].w * _274;
    float _398 = sin(_397);
    float _399 = cos(_397);
    float _400 = _184 + (cbMtdParam._m0[17u].x * _274);
    float _401 = _186 + (cbMtdParam._m0[17u].y * _274);
    vec4 _413 = texture(sampler2D(M_Blackhole_003_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_372 + fma(_401, (-0.0) - _398, _400 * _399))) + cbTextureTilingScale._m0[0u].z, ((_374 + fma(_401, _399, _400 * _398)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _423 = exp2(log2(cbMtdParam._m0[15u].y * _191) * cbMtdParam._m0[15u].x);
    float _1997 = isnan(0.0) ? _423 : (isnan(_423) ? 0.0 : max(_423, 0.0));
    float _424 = isnan(1.0) ? _1997 : (isnan(_1997) ? 1.0 : min(_1997, 1.0));
    float _442 = exp2(log2(cbMtdParam._m0[11u].x * _197) * cbMtdParam._m0[11u].y);
    float _2008 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _443 = isnan(1.0) ? _2008 : (isnan(_2008) ? 1.0 : min(_2008, 1.0));
    float _450 = (_443 * ((((_424 * (_413.x - _389)) + _389) * cbMtdParam._m0[9u].x) - _346)) + _346;
    float _451 = (_443 * ((((_424 * (_413.y - _390)) + _390) * cbMtdParam._m0[9u].y) - _347)) + _347;
    float _452 = (_443 * ((((_424 * (_413.z - _391)) + _391) * cbMtdParam._m0[9u].z) - _348)) + _348;
    float _462 = inversesqrt(dot(vec3(_172, _173, _174), vec3(_172, _173, _174)));
    float _463 = _462 * _172;
    float _464 = _462 * _173;
    float _465 = _462 * _174;
    float _2019 = isnan(0.0) ? _202 : (isnan(_202) ? 0.0 : max(_202, 0.0));
    float _466 = isnan(1.0) ? _2019 : (isnan(_2019) ? 1.0 : min(_2019, 1.0));
    float _482 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _522 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _532 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _522);
    float _533 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _522);
    float _534 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _522);
    float _538 = inversesqrt(dot(vec3(_532, _533, _534), vec3(_532, _533, _534)));
    float _539 = _532 * _538;
    float _540 = _533 * _538;
    float _541 = _534 * _538;
    vec4 _546 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _548 = _546.w;
    float _553 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _554 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _562 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_553 * cbSceneParam._m0[86u].x, _554 * cbSceneParam._m0[86u].y));
    float _565 = _562.x * TEXCOORD.z;
    float _566 = dot(vec3(_463, _464, _465), vec3(_539, _540, _541));
    float _569 = _566 * 2.0;
    float _574 = (_569 * _463) - _539;
    float _575 = (_569 * _464) - _540;
    float _576 = (_569 * _465) - _541;
    float _580 = abs(dot(vec3(_539, _540, _541), vec3(_463, _464, _465)));
    float _2030 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _608 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _612 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _616 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _781;
    float _783;
    float _784;
    float _785;
    float _786;
    float _787;
    float _788;
    float _789;
    float _790;
    float _791;
    float _792;
    float _793;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _643 = fma(_616, cbModelParam._m0[26u].z, fma(_612, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _608));
        float _647 = fma(_616, cbModelParam._m0[27u].z, fma(_612, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _608));
        float _651 = fma(_616, cbModelParam._m0[28u].z, fma(_612, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _608));
        float _674 = _608 + _463;
        float _675 = _612 + _464;
        float _676 = _616 + _465;
        float _686 = fma(_676, cbModelParam._m0[26u].z, fma(_675, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _674)) - _643;
        float _687 = fma(_676, cbModelParam._m0[27u].z, fma(_675, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _674)) - _647;
        float _688 = fma(_676, cbModelParam._m0[28u].z, fma(_675, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _674)) - _651;
        float _692 = inversesqrt(dot(vec3(_686, _687, _688), vec3(_686, _687, _688)));
        float _705 = ((_692 * _686) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_643 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _706 = ((_692 * _687) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_647 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _707 = ((_692 * _688) / cbModelParam._m0[34u].z) + ((((((_651 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _710 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_705, _706, _707), 0.0);
        vec4 _717 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_705, _706, _707), 0.0);
        vec4 _724 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_705, _706, _707), 0.0);
        vec4 _731 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_705, _706, _707), 0.0);
        float _744 = exp2((_710.w + (-0.5)) * 20.0) * 2.0;
        float _754 = exp2((_717.w + (-0.5)) * 20.0) * 2.0;
        float _764 = exp2((_724.w + (-0.5)) * 20.0) * 2.0;
        float _774 = exp2((_731.w + (-0.5)) * 20.0) * 2.0;
        float _775 = _774 * (_731.x + (-0.5));
        float _776 = _774 * (_731.y + (-0.5));
        float _777 = _774 * (_731.z + (-0.5));
        _781 = _744 * (_710.z + (-0.5));
        _783 = _744 * (_710.y + (-0.5));
        _784 = _744 * (_710.x + (-0.5));
        _785 = _754 * (_717.z + (-0.5));
        _786 = _754 * (_717.y + (-0.5));
        _787 = _754 * (_717.x + (-0.5));
        _788 = _764 * (_724.z + (-0.5));
        _789 = _764 * (_724.y + (-0.5));
        _790 = _764 * (_724.x + (-0.5));
        _791 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
        _792 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
        _793 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    }
    else
    {
        _781 = _782;
        _783 = _782;
        _784 = _782;
        _785 = _782;
        _786 = _782;
        _787 = _782;
        _788 = _782;
        _789 = _782;
        _790 = _782;
        _791 = _782;
        _792 = _782;
        _793 = _782;
    }
    float _955;
    float _956;
    float _957;
    float _958;
    float _959;
    float _960;
    float _961;
    float _962;
    float _963;
    float _964;
    float _965;
    float _966;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _819 = fma(_616, cbModelParam._m0[30u].z, fma(_612, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _608));
        float _823 = fma(_616, cbModelParam._m0[31u].z, fma(_612, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _608));
        float _827 = fma(_616, cbModelParam._m0[32u].z, fma(_612, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _608));
        float _850 = _608 + _463;
        float _851 = _612 + _464;
        float _852 = _616 + _465;
        float _862 = fma(_852, cbModelParam._m0[30u].z, fma(_851, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _850)) - _819;
        float _863 = fma(_852, cbModelParam._m0[31u].z, fma(_851, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _850)) - _823;
        float _864 = fma(_852, cbModelParam._m0[32u].z, fma(_851, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _850)) - _827;
        float _868 = inversesqrt(dot(vec3(_862, _863, _864), vec3(_862, _863, _864)));
        float _881 = ((_868 * _862) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_819 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _882 = ((_868 * _863) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_823 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _883 = ((_868 * _864) / cbModelParam._m0[35u].z) + ((((((_827 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _885 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_881, _882, _883), 0.0);
        vec4 _892 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_881, _882, _883), 0.0);
        vec4 _899 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_881, _882, _883), 0.0);
        vec4 _906 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_881, _882, _883), 0.0);
        float _918 = exp2((_885.w + (-0.5)) * 20.0) * 2.0;
        float _928 = exp2((_892.w + (-0.5)) * 20.0) * 2.0;
        float _938 = exp2((_899.w + (-0.5)) * 20.0) * 2.0;
        float _948 = exp2((_906.w + (-0.5)) * 20.0) * 2.0;
        float _949 = _948 * (_906.x + (-0.5));
        float _950 = _948 * (_906.y + (-0.5));
        float _951 = _948 * (_906.z + (-0.5));
        _955 = _918 * (_885.z + (-0.5));
        _956 = _918 * (_885.y + (-0.5));
        _957 = _918 * (_885.x + (-0.5));
        _958 = _928 * (_892.z + (-0.5));
        _959 = _928 * (_892.y + (-0.5));
        _960 = _928 * (_892.x + (-0.5));
        _961 = _938 * (_899.z + (-0.5));
        _962 = _938 * (_899.y + (-0.5));
        _963 = _938 * (_899.x + (-0.5));
        _964 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
        _965 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
        _966 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
    }
    else
    {
        _955 = _782;
        _956 = _782;
        _957 = _782;
        _958 = _782;
        _959 = _782;
        _960 = _782;
        _961 = _782;
        _962 = _782;
        _963 = _782;
        _964 = _782;
        _965 = _782;
        _966 = _782;
    }
    float _981 = _574 * 0.5;
    float _982 = _575 * 0.5;
    float _983 = _576 * 0.5;
    float _984 = dot(vec4(_981, _982, _983, 1.0), vec4(_957, _960, _963, _966));
    float _987 = dot(vec4(_981, _982, _983, 1.0), vec4(_956, _959, _962, _965));
    float _990 = dot(vec4(_981, _982, _983, 1.0), vec4(_955, _958, _961, _964));
    float _1025;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _997 = dot(vec4(_981, _982, _983, 1.0), vec4(_781, _785, _788, _791));
        float _1001 = dot(vec4(_981, _982, _983, 1.0), vec4(_783, _786, _789, _792));
        float _1005 = dot(vec4(_981, _982, _983, 1.0), vec4(_784, _787, _790, _793));
        float _1012 = dot(vec4(cbModelParam._m0[39u]), vec4(_981, _982, _983, 1.0));
        _1025 = dot(vec3(isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0)), isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0)), isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1012) ? 0.0 : (isnan(0.0) ? _1012 : max(0.0, _1012))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1025 = 1.0;
    }
    float _1036;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1027 = dot(vec4(cbModelParam._m0[40u]), vec4(_981, _982, _983, 1.0));
        _1036 = dot(vec3(isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0)), isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0)), isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1027) ? 0.0 : (isnan(0.0) ? _1027 : max(0.0, _1027))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1036 = 1.0;
    }
    float _1040 = (_1036 * cbModelParam._m0[1u].x) + (_1025 * (1.0 - cbModelParam._m0[1u].x));
    float _1046 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1127;
    float _1129;
    float _1131;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1094 = fma(_616, cbModelParam._m0[13u].z, fma(_612, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _608)) + cbModelParam._m0[13u].w;
        float _1098 = fma(_616, cbModelParam._m0[14u].z, fma(_612, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _608)) + cbModelParam._m0[14u].w;
        float _1102 = fma(_616, cbModelParam._m0[15u].z, fma(_612, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _608)) + cbModelParam._m0[15u].w;
        float _1105 = fma(_576, cbModelParam._m0[13u].z, fma(_575, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _574));
        float _1108 = fma(_576, cbModelParam._m0[14u].z, fma(_575, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _574));
        float _1111 = fma(_576, cbModelParam._m0[15u].z, fma(_575, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _574));
        float _1137;
        if (_1105 > 0.0)
        {
            _1137 = abs((1.0 - _1094) / _1105);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1105 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1094 + 1.0) / _1105);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1137 = frontier_phi_16_14_ladder;
        }
        float _1438;
        if (_1108 > 0.0)
        {
            _1438 = abs((1.0 - _1098) / _1108);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1108 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1098 + 1.0) / _1108);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1438 = frontier_phi_25_21_ladder;
        }
        float _1621;
        if (_1111 > 0.0)
        {
            _1621 = abs((1.0 - _1102) / _1111);
        }
        else
        {
            float frontier_phi_39_32_ladder;
            if (_1111 < 0.0)
            {
                frontier_phi_39_32_ladder = abs((_1102 + 1.0) / _1111);
            }
            else
            {
                frontier_phi_39_32_ladder = 5000.0;
            }
            _1621 = frontier_phi_39_32_ladder;
        }
        float _1623 = isnan(_1438) ? _1137 : (isnan(_1137) ? _1438 : min(_1137, _1438));
        float _1624 = isnan(_1621) ? _1623 : (isnan(_1623) ? _1621 : min(_1623, _1621));
        float _1628 = (_1624 * _1105) + _1094;
        float _1629 = (_1624 * _1108) + _1098;
        float _1630 = (_1624 * _1111) + _1102;
        float _1631 = _1624 * 9.9999997473787516355514526367188e-05;
        float _1632 = (-1.0) - _1631;
        float _1634 = _1631 + 1.0;
        float frontier_phi_15_39_ladder;
        float frontier_phi_15_39_ladder_1;
        float frontier_phi_15_39_ladder_2;
        if ((_1630 > _1634) || ((_1630 < _1632) || ((_1629 > _1634) || ((_1629 < _1632) || ((_1628 < _1632) || (_1628 > _1634))))))
        {
            frontier_phi_15_39_ladder = 0.0;
            frontier_phi_15_39_ladder_1 = 0.0;
            frontier_phi_15_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1712 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1630, cbModelParam._m0[9u].z, fma(_1629, cbModelParam._m0[9u].y, _1628 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1630, cbModelParam._m0[10u].z, fma(_1629, cbModelParam._m0[10u].y, _1628 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1630, cbModelParam._m0[11u].z, fma(_1629, cbModelParam._m0[11u].y, _1628 * cbModelParam._m0[11u].x))), _1046);
            frontier_phi_15_39_ladder = _1712.z * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_1 = _1712.y * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_2 = _1712.x * cbModelParam._m0[1u].y;
        }
        _1127 = frontier_phi_15_39_ladder_2;
        _1129 = frontier_phi_15_39_ladder_1;
        _1131 = frontier_phi_15_39_ladder;
    }
    else
    {
        vec4 _1115 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_574, _575, _576), _1046);
        _1127 = _1115.x * cbModelParam._m0[1u].y;
        _1129 = _1115.y * cbModelParam._m0[1u].y;
        _1131 = _1115.z * cbModelParam._m0[1u].y;
    }
    float _1134 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1225;
    float _1227;
    float _1229;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1189 = fma(_616, cbModelParam._m0[21u].z, fma(_612, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _608)) + cbModelParam._m0[21u].w;
        float _1193 = fma(_616, cbModelParam._m0[22u].z, fma(_612, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _608)) + cbModelParam._m0[22u].w;
        float _1197 = fma(_616, cbModelParam._m0[23u].z, fma(_612, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _608)) + cbModelParam._m0[23u].w;
        float _1200 = fma(_576, cbModelParam._m0[21u].z, fma(_575, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _574));
        float _1203 = fma(_576, cbModelParam._m0[22u].z, fma(_575, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _574));
        float _1206 = fma(_576, cbModelParam._m0[23u].z, fma(_575, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _574));
        float _1443;
        if (_1200 > 0.0)
        {
            _1443 = abs((1.0 - _1189) / _1200);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1200 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1189 + 1.0) / _1200);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1443 = frontier_phi_27_23_ladder;
        }
        float _1647;
        if (_1203 > 0.0)
        {
            _1647 = abs((1.0 - _1193) / _1203);
        }
        else
        {
            float frontier_phi_41_34_ladder;
            if (_1203 < 0.0)
            {
                frontier_phi_41_34_ladder = abs((_1193 + 1.0) / _1203);
            }
            else
            {
                frontier_phi_41_34_ladder = 5000.0;
            }
            _1647 = frontier_phi_41_34_ladder;
        }
        float _1732;
        if (_1206 > 0.0)
        {
            _1732 = abs((1.0 - _1197) / _1206);
        }
        else
        {
            float frontier_phi_52_48_ladder;
            if (_1206 < 0.0)
            {
                frontier_phi_52_48_ladder = abs((_1197 + 1.0) / _1206);
            }
            else
            {
                frontier_phi_52_48_ladder = 5000.0;
            }
            _1732 = frontier_phi_52_48_ladder;
        }
        float _1734 = isnan(_1647) ? _1443 : (isnan(_1443) ? _1647 : min(_1443, _1647));
        float _1735 = isnan(_1732) ? _1734 : (isnan(_1734) ? _1732 : min(_1734, _1732));
        float _1739 = (_1735 * _1200) + _1189;
        float _1740 = (_1735 * _1203) + _1193;
        float _1741 = (_1735 * _1206) + _1197;
        float _1742 = _1735 * 9.9999997473787516355514526367188e-05;
        float _1743 = (-1.0) - _1742;
        float _1745 = _1742 + 1.0;
        float frontier_phi_24_52_ladder;
        float frontier_phi_24_52_ladder_1;
        float frontier_phi_24_52_ladder_2;
        if ((_1741 > _1745) || ((_1741 < _1743) || ((_1740 > _1745) || ((_1740 < _1743) || ((_1739 < _1743) || (_1739 > _1745))))))
        {
            frontier_phi_24_52_ladder = 0.0;
            frontier_phi_24_52_ladder_1 = 0.0;
            frontier_phi_24_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1774 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1741, cbModelParam._m0[17u].z, fma(_1740, cbModelParam._m0[17u].y, _1739 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1741, cbModelParam._m0[18u].z, fma(_1740, cbModelParam._m0[18u].y, _1739 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1741, cbModelParam._m0[19u].z, fma(_1740, cbModelParam._m0[19u].y, _1739 * cbModelParam._m0[19u].x))), _1134);
            frontier_phi_24_52_ladder = _1774.z * cbModelParam._m0[1u].z;
            frontier_phi_24_52_ladder_1 = _1774.y * cbModelParam._m0[1u].z;
            frontier_phi_24_52_ladder_2 = _1774.x * cbModelParam._m0[1u].z;
        }
        _1225 = frontier_phi_24_52_ladder_2;
        _1227 = frontier_phi_24_52_ladder_1;
        _1229 = frontier_phi_24_52_ladder;
    }
    else
    {
        vec4 _1209 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_574, _575, _576), _1134);
        _1225 = _1209.x * cbModelParam._m0[1u].z;
        _1227 = _1209.y * cbModelParam._m0[1u].z;
        _1229 = _1209.z * cbModelParam._m0[1u].z;
    }
    float _1241 = _565 * 0.01200000010430812835693359375;
    float _1243 = _1241 * ((cbModelParam._m0[1u].w * (_1225 - _1127)) + _1127);
    float _1244 = _1241 * ((cbModelParam._m0[1u].w * (_1227 - _1129)) + _1129);
    float _1245 = _1241 * ((cbModelParam._m0[1u].w * (_1229 - _1131)) + _1131);
    float _1266 = fma(_1245, cbSceneParam._m0[89u].z, fma(_1244, cbSceneParam._m0[89u].y, _1243 * cbSceneParam._m0[89u].x));
    float _1269 = fma(_1245, cbSceneParam._m0[90u].z, fma(_1244, cbSceneParam._m0[90u].y, _1243 * cbSceneParam._m0[90u].x));
    float _1272 = fma(_1245, cbSceneParam._m0[91u].z, fma(_1244, cbSceneParam._m0[91u].y, _1243 * cbSceneParam._m0[91u].x));
    uint _1279 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1286 = floatBitsToUint(cbInstanceData._m0[_1279 + 5u]).x * 14u;
    float _1294 = (cbLight._m0[_1286 + 13u].x * (_565 + (-1.0))) + 1.0;
    uint _1295 = _1286 + 8u;
    float _1306 = cbLight._m0[_1286].x + _539;
    float _1307 = cbLight._m0[_1286].y + _540;
    float _1308 = cbLight._m0[_1286].z + _541;
    float _1312 = inversesqrt(dot(vec3(_1306, _1307, _1308), vec3(_1306, _1307, _1308)));
    float _1316 = dot(vec3(_463, _464, _465), vec3(cbLight._m0[_1286].xyz));
    float _2156 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
    float _1319 = isnan(1.0) ? _2156 : (isnan(_2156) ? 1.0 : min(_2156, 1.0));
    float _2167 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _1321 = dot(vec3(cbLight._m0[_1286].xyz), vec3(_1306 * _1312, _1307 * _1312, _1308 * _1312));
    float _2178 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
    float _1331 = (exp2(log2(1.0 - (isnan(1.0) ? _2178 : (isnan(_2178) ? 1.0 : min(_2178, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1337 = (0.5 / ((_1319 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2167 : (isnan(_2167) ? 1.0 : min(_2167, 1.0))))) * _1319;
    float _2189 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
    float _1339 = (isnan(1.0) ? _2189 : (isnan(_2189) ? 1.0 : min(_2189, 1.0))) * 0.31831014156341552734375;
    float _1341 = isnan(1.0) ? _1294 : (isnan(_1294) ? 1.0 : min(_1294, 1.0));
    uint _1358 = _1279 + 9u;
    uint _1359 = _1358 + uint(cbMatDynParam._m0[0u].w);
    float _1365 = cbInstanceData._m0[_1359].x * (isnan(4.0) ? _245 : (isnan(_245) ? 4.0 : min(_245, 4.0)));
    float _1366 = cbInstanceData._m0[_1359].y * (isnan(4.0) ? _246 : (isnan(_246) ? 4.0 : min(_246, 4.0)));
    float _1367 = cbInstanceData._m0[_1359].z * (isnan(4.0) ? _247 : (isnan(_247) ? 4.0 : min(_247, 4.0)));
    float _2205 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _1376 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _2030 : (isnan(_2030) ? 1.0 : min(_2030, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1383 = ((cbPerFrame._m0[3u].x * ((((_1331 * cbLight._m0[_1295].x) * _1339) * _1341) + ((isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0))) * _1040))) + (_1376 * (_450 - (_450 * _258)))) + _1365;
    float _1384 = ((cbPerFrame._m0[3u].x * ((((_1331 * cbLight._m0[_1295].y) * _1339) * _1341) + ((isnan(0.0) ? _1269 : (isnan(_1269) ? 0.0 : max(_1269, 0.0))) * _1040))) + (_1376 * (_451 - (_451 * _258)))) + _1366;
    float _1385 = ((cbPerFrame._m0[3u].x * ((((_1331 * cbLight._m0[_1295].z) * _1339) * _1341) + ((isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0))) * _1040))) + (_1376 * (_452 - (_452 * _258)))) + _1367;
    float _1386 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
    float _1387 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
    float _1388 = isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0));
    float _1394 = cbMtdParam._m0[2u].x * _1365;
    float _1395 = cbMtdParam._m0[2u].y * _1366;
    float _1396 = cbMtdParam._m0[2u].z * _1367;
    float _2231 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1398 = isnan(1.0) ? _2231 : (isnan(_2231) ? 1.0 : min(_2231, 1.0));
    float _1404 = cbInstanceData._m0[_1279 + 6u].w * (isnan(1.0) ? _2205 : (isnan(_2205) ? 1.0 : min(_2205, 1.0)));
    float _1409 = _553 / cbSceneParam._m0[86u].x;
    float _1410 = _554 / cbSceneParam._m0[86u].y;
    vec4 _1424 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1409, _1410, (log2((isnan(cbSceneParam._m0[77u].w) ? _482 : (isnan(_482) ? cbSceneParam._m0[77u].w : min(_482, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1426 = _1424.x;
    float _1427 = _1424.y;
    float _1428 = _1424.z;
    float _1429 = _1424.w;
    float _1490;
    float _1492;
    float _1494;
    float _1496;
    if (_482 > cbSceneParam._m0[78u].w)
    {
        float _1452 = isnan(_482) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _482 : min(cbSceneParam._m0[80u].w, _482));
        float _1453 = _1452 / _482;
        float _1464 = _1453 * _532;
        float _1465 = _533 * _1453;
        float _1466 = (-0.0) - _1465;
        float _1467 = _1453 * _534;
        float _1469 = (cbSceneParam._m0[77u].w * _1466) / _1452;
        float _1470 = _1469 + cbSceneParam._m0[79u].w;
        float _1471 = cbSceneParam._m0[79u].w - _1465;
        float _1477 = sqrt(((_1464 * _1464) + (_1465 * _1465)) + (_1467 * _1467));
        float _1480 = (1.0 - (cbSceneParam._m0[77u].w / _1452)) * _1477;
        float _1486 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1488 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1652;
        if (abs((_1466 - _1469) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1652 = ((((_1470 > 0.0) ? exp2(_1486 * _1470) : (2.0 - exp2(_1488 * _1470))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1480;
        }
        else
        {
            float _1578 = 1.0 / cbSceneParam._m0[80u].x;
            float _1579 = isnan(_1471) ? _1470 : (isnan(_1470) ? _1471 : max(_1470, _1471));
            float _1580 = isnan(_1471) ? _1470 : (isnan(_1470) ? _1471 : min(_1470, _1471));
            float _1589 = isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : min(_1579, 0.0));
            float _1590 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : min(_1580, 0.0));
            _1652 = ((abs(_1477 / _1466) * cbSceneParam._m0[80u].y) * ((((_1589 - _1590) * 2.0) - ((exp2(_1486 * (isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0)))) - exp2(_1486 * (isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0))))) * _1578)) - ((exp2(_1488 * _1589) - exp2(_1488 * _1590)) * _1578))) + (_1480 * cbSceneParam._m0[80u].z);
        }
        vec4 _1654 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1409, _1410, 1.0), 0.0);
        float _1663 = exp2((_1652 * (-1.44269502162933349609375)) * (1.0 - _1654.w));
        float _1664 = log2(_1663);
        float _1680 = log2(_1429);
        _1490 = (exp2(_1680 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1664 * cbSceneParam._m0[78u].x)) * _1654.x) / cbSceneParam._m0[78u].x)) + _1426;
        _1492 = (exp2(_1680 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1664 * cbSceneParam._m0[78u].y)) * _1654.y) / cbSceneParam._m0[78u].y)) + _1427;
        _1494 = (exp2(_1680 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1664 * cbSceneParam._m0[78u].z)) * _1654.z) / cbSceneParam._m0[78u].z)) + _1428;
        _1496 = _1663 * _1429;
    }
    else
    {
        _1490 = _1426;
        _1492 = _1427;
        _1494 = _1428;
        _1496 = _1429;
    }
    bool _1690;
    vec4 _1505;
    vec4 _1528;
    float _1530;
    float _1534;
    float _1535;
    float _1536;
    float _1539;
    float _1542;
    float _1545;
    float _1546;
    bool _1557;
    for (;;)
    {
        _1505 = cbMatDynParam._m0[0u];
        float _1507 = roundEven(_1505.y);
        bool _1508 = _1507 == 3.0;
        float _1510 = log2(_1496);
        float _1514 = exp2(_1510 * cbSceneParam._m0[78u].x);
        float _1515 = exp2(_1510 * cbSceneParam._m0[78u].y);
        float _1516 = exp2(_1510 * cbSceneParam._m0[78u].z);
        float _1517 = _1514 * _1386;
        float _1518 = _1515 * _1387;
        float _1519 = _1516 * _1388;
        float _1526 = _548 + (-0.5);
        _1528 = cbMtdParam._m0[1u];
        _1530 = _1528.y * _1526;
        float _1533 = (_1507 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1534 = _1533 * (_1508 ? _1517 : (_1517 + (cbSceneParam._m0[72u].w * _1490)));
        _1535 = _1533 * (_1508 ? _1518 : (_1518 + (cbSceneParam._m0[72u].w * _1492)));
        _1536 = _1533 * (_1508 ? _1519 : (_1519 + (cbSceneParam._m0[72u].w * _1494)));
        _1539 = ((_1394 * _1398) * _1514) * _1533;
        _1542 = ((_1395 * _1398) * _1515) * _1533;
        _1545 = ((_1396 * _1398) * _1516) * _1533;
        _1546 = _1526 * 0.999000012874603271484375;
        _1557 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1557)
        {
            if ((cbInstanceData._m0[_1279 + 7u].x + _1546) < 0.5)
            {
                _1690 = true;
                break;
            }
        }
        uint _1613 = _1358 + uint(_1505.w);
        if ((cbInstanceData._m0[_1613].w < 1.0) && ((cbInstanceData._m0[_1613].w + _1546) < 0.5))
        {
            _1690 = true;
            break;
        }
        if ((_1530 + _218) < _1528.x)
        {
            _1690 = true;
            break;
        }
        _1690 = false;
        break;
    }
    float _1723;
    if (_1690)
    {
        discard_state = true;
        _1723 = 0.0;
    }
    else
    {
        _1723 = _1404;
    }
    SV_Target.x = _1534;
    SV_Target.y = _1535;
    SV_Target.z = _1536;
    SV_Target.w = _1723;
    SV_Target_1.x = _1539;
    SV_Target_1.y = _1542;
    SV_Target_1.z = _1545;
    SV_Target_1.w = _1404;
    discard_exit();
}


