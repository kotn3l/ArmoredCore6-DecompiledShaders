#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_003_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_003_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _786;
float _2185;
float _2186;
float _2187;
float _2188;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _168 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _169 = _168 * NORMAL.x;
    float _170 = _168 * NORMAL.y;
    float _171 = _168 * NORMAL.z;
    float _176;
    float _177;
    float _178;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _176 = (-0.0) - _169;
        _177 = (-0.0) - _170;
        _178 = (-0.0) - _171;
    }
    else
    {
        _176 = _169;
        _177 = _170;
        _178 = _171;
    }
    float _188 = TEXCOORD.x + (-0.5);
    float _190 = TEXCOORD.y + (-0.5);
    float _195 = 1.0 - sqrt((_190 * _190) + (_188 * _188));
    float _201 = exp2(log2(cbMtdParam._m0[13u].z * _195) * cbMtdParam._m0[13u].w);
    float _205 = exp2(log2(_201 * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _2197 = isnan(0.0) ? _205 : (isnan(_205) ? 0.0 : max(_205, 0.0));
    float _206 = isnan(1.0) ? _2197 : (isnan(_2197) ? 1.0 : min(_2197, 1.0));
    float _215 = cbMtdParam._m0[15u].z + TEXCOORD.y;
    float _2208 = isnan(0.0) ? _215 : (isnan(_215) ? 0.0 : max(_215, 0.0));
    float _221 = exp2(log2(cbMtdParam._m0[15u].w * (isnan(1.0) ? _2208 : (isnan(_2208) ? 1.0 : min(_2208, 1.0)))) * cbMtdParam._m0[16u].x);
    float _2219 = isnan(0.0) ? _221 : (isnan(_221) ? 0.0 : max(_221, 0.0));
    float _222 = isnan(1.0) ? _2219 : (isnan(_2219) ? 1.0 : min(_2219, 1.0));
    float _237 = exp2(log2(cbMtdParam._m0[14u].w * _201) * cbMtdParam._m0[14u].z);
    float _2230 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
    float _238 = isnan(1.0) ? _2230 : (isnan(_2230) ? 1.0 : min(_2230, 1.0));
    float _2241 = isnan(0.0) ? _238 : (isnan(_238) ? 0.0 : max(_238, 0.0));
    float _245 = exp2(log2(cbMtdParam._m0[14u].y * _195) * cbMtdParam._m0[14u].x);
    float _2252 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _247 = (isnan(1.0) ? _2252 : (isnan(_2252) ? 1.0 : min(_2252, 1.0))) - (isnan(1.0) ? _2241 : (isnan(_2241) ? 1.0 : min(_2241, 1.0)));
    float _248 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
    float _249 = _248 * cbMtdParam._m0[10u].x;
    float _250 = _248 * cbMtdParam._m0[10u].y;
    float _251 = _248 * cbMtdParam._m0[10u].z;
    float _261 = exp2(log2(cbMtdParam._m0[13u].x * _201) * cbMtdParam._m0[13u].y);
    float _2283 = isnan(0.0) ? _261 : (isnan(_261) ? 0.0 : max(_261, 0.0));
    float _262 = isnan(1.0) ? _2283 : (isnan(_2283) ? 1.0 : min(_2283, 1.0));
    float _278 = cbMtdParam._m0[16u].y * cbPerFrame._m0[22u].x;
    float _283 = _278 * cbMtdParam._m0[11u].w;
    float _284 = sin(_283);
    float _285 = cos(_283);
    vec4 _306 = texture(sampler2D(M_Blackhole_003_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_190, (-0.0) - _284, _285 * _188) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_190, _285, _284 * _188) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _321 = exp2(log2(cbMtdParam._m0[12u].y * _201) * cbMtdParam._m0[12u].x);
    float _2294 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
    float _322 = isnan(1.0) ? _2294 : (isnan(_2294) ? 1.0 : min(_2294, 1.0));
    float _323 = ((_306.x + (-0.5)) * cbMtdParam._m0[16u].z) * _322;
    float _324 = ((_306.y + (-0.5)) * cbMtdParam._m0[16u].z) * _322;
    float _327 = cbSceneParam._m0[86u].x * (_323 + ((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x));
    float _328 = (_324 + ((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _336 = isnan(cbInstanceData._m0[8u].x) ? _327 : (isnan(_327) ? cbInstanceData._m0[8u].x : max(_327, cbInstanceData._m0[8u].x));
    float _337 = isnan(cbInstanceData._m0[8u].y) ? _328 : (isnan(_328) ? cbInstanceData._m0[8u].y : max(_328, cbInstanceData._m0[8u].y));
    vec4 _341 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _336 : (isnan(_336) ? cbInstanceData._m0[8u].z : min(_336, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _337 : (isnan(_337) ? cbInstanceData._m0[8u].w : min(_337, cbInstanceData._m0[8u].w))));
    float _350 = cbSceneParam._m0[72u].w * _341.x;
    float _351 = cbSceneParam._m0[72u].w * _341.y;
    float _352 = cbSceneParam._m0[72u].w * _341.z;
    float _366 = cbMtdParam._m0[11u].z * _278;
    float _367 = sin(_366);
    float _368 = cos(_366);
    float _369 = _188 + (cbMtdParam._m0[17u].z * _278);
    float _370 = _190 + (cbMtdParam._m0[17u].w * _278);
    float _376 = _323 + 0.5;
    float _378 = _324 + 0.5;
    vec4 _391 = texture(sampler2D(M_Blackhole_003_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_376 + fma(_370, (-0.0) - _367, _369 * _368))) + cbTextureTilingScale._m0[0u].z, ((_378 + fma(_370, _368, _369 * _367)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _393 = _391.x;
    float _394 = _391.y;
    float _395 = _391.z;
    float _401 = cbMtdParam._m0[16u].w * _278;
    float _402 = sin(_401);
    float _403 = cos(_401);
    float _404 = _188 + (cbMtdParam._m0[17u].x * _278);
    float _405 = _190 + (cbMtdParam._m0[17u].y * _278);
    vec4 _417 = texture(sampler2D(M_Blackhole_003_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_376 + fma(_405, (-0.0) - _402, _404 * _403))) + cbTextureTilingScale._m0[0u].z, ((_378 + fma(_405, _403, _404 * _402)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _427 = exp2(log2(cbMtdParam._m0[15u].y * _195) * cbMtdParam._m0[15u].x);
    float _2325 = isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0));
    float _428 = isnan(1.0) ? _2325 : (isnan(_2325) ? 1.0 : min(_2325, 1.0));
    float _446 = exp2(log2(cbMtdParam._m0[11u].x * _201) * cbMtdParam._m0[11u].y);
    float _2336 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _447 = isnan(1.0) ? _2336 : (isnan(_2336) ? 1.0 : min(_2336, 1.0));
    float _454 = (_447 * ((((_428 * (_417.x - _393)) + _393) * cbMtdParam._m0[9u].x) - _350)) + _350;
    float _455 = (_447 * ((((_428 * (_417.y - _394)) + _394) * cbMtdParam._m0[9u].y) - _351)) + _351;
    float _456 = (_447 * ((((_428 * (_417.z - _395)) + _395) * cbMtdParam._m0[9u].z) - _352)) + _352;
    float _466 = inversesqrt(dot(vec3(_176, _177, _178), vec3(_176, _177, _178)));
    float _467 = _466 * _176;
    float _468 = _466 * _177;
    float _469 = _466 * _178;
    float _2347 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
    float _470 = isnan(1.0) ? _2347 : (isnan(_2347) ? 1.0 : min(_2347, 1.0));
    float _486 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _526 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _536 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _526);
    float _537 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _526);
    float _538 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _526);
    float _542 = inversesqrt(dot(vec3(_536, _537, _538), vec3(_536, _537, _538)));
    float _543 = _536 * _542;
    float _544 = _537 * _542;
    float _545 = _538 * _542;
    vec4 _550 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _552 = _550.w;
    float _557 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _558 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _566 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_557 * cbSceneParam._m0[86u].x, _558 * cbSceneParam._m0[86u].y));
    float _569 = _566.x * TEXCOORD.z;
    float _570 = dot(vec3(_467, _468, _469), vec3(_543, _544, _545));
    float _573 = _570 * 2.0;
    float _578 = (_573 * _467) - _543;
    float _579 = (_573 * _468) - _544;
    float _580 = (_573 * _469) - _545;
    float _584 = abs(dot(vec3(_543, _544, _545), vec3(_467, _468, _469)));
    float _2358 = isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : max(_584, 0.0));
    float _612 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _616 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _620 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _785;
    float _787;
    float _788;
    float _789;
    float _790;
    float _791;
    float _792;
    float _793;
    float _794;
    float _795;
    float _796;
    float _797;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _647 = fma(_620, cbModelParam._m0[26u].z, fma(_616, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _612));
        float _651 = fma(_620, cbModelParam._m0[27u].z, fma(_616, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _612));
        float _655 = fma(_620, cbModelParam._m0[28u].z, fma(_616, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _612));
        float _678 = _612 + _467;
        float _679 = _616 + _468;
        float _680 = _620 + _469;
        float _690 = fma(_680, cbModelParam._m0[26u].z, fma(_679, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _678)) - _647;
        float _691 = fma(_680, cbModelParam._m0[27u].z, fma(_679, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _678)) - _651;
        float _692 = fma(_680, cbModelParam._m0[28u].z, fma(_679, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _678)) - _655;
        float _696 = inversesqrt(dot(vec3(_690, _691, _692), vec3(_690, _691, _692)));
        float _709 = ((_696 * _690) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_647 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _710 = ((_696 * _691) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_651 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _711 = ((_696 * _692) / cbModelParam._m0[34u].z) + ((((((_655 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _714 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_709, _710, _711), 0.0);
        vec4 _721 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_709, _710, _711), 0.0);
        vec4 _728 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_709, _710, _711), 0.0);
        vec4 _735 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_709, _710, _711), 0.0);
        float _748 = exp2((_714.w + (-0.5)) * 20.0) * 2.0;
        float _758 = exp2((_721.w + (-0.5)) * 20.0) * 2.0;
        float _768 = exp2((_728.w + (-0.5)) * 20.0) * 2.0;
        float _778 = exp2((_735.w + (-0.5)) * 20.0) * 2.0;
        float _779 = _778 * (_735.x + (-0.5));
        float _780 = _778 * (_735.y + (-0.5));
        float _781 = _778 * (_735.z + (-0.5));
        _785 = _748 * (_714.z + (-0.5));
        _787 = _748 * (_714.y + (-0.5));
        _788 = _748 * (_714.x + (-0.5));
        _789 = _758 * (_721.z + (-0.5));
        _790 = _758 * (_721.y + (-0.5));
        _791 = _758 * (_721.x + (-0.5));
        _792 = _768 * (_728.z + (-0.5));
        _793 = _768 * (_728.y + (-0.5));
        _794 = _768 * (_728.x + (-0.5));
        _795 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
        _796 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
        _797 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
    }
    else
    {
        _785 = _786;
        _787 = _786;
        _788 = _786;
        _789 = _786;
        _790 = _786;
        _791 = _786;
        _792 = _786;
        _793 = _786;
        _794 = _786;
        _795 = _786;
        _796 = _786;
        _797 = _786;
    }
    float _959;
    float _960;
    float _961;
    float _962;
    float _963;
    float _964;
    float _965;
    float _966;
    float _967;
    float _968;
    float _969;
    float _970;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _823 = fma(_620, cbModelParam._m0[30u].z, fma(_616, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _612));
        float _827 = fma(_620, cbModelParam._m0[31u].z, fma(_616, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _612));
        float _831 = fma(_620, cbModelParam._m0[32u].z, fma(_616, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _612));
        float _854 = _612 + _467;
        float _855 = _616 + _468;
        float _856 = _620 + _469;
        float _866 = fma(_856, cbModelParam._m0[30u].z, fma(_855, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _854)) - _823;
        float _867 = fma(_856, cbModelParam._m0[31u].z, fma(_855, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _854)) - _827;
        float _868 = fma(_856, cbModelParam._m0[32u].z, fma(_855, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _854)) - _831;
        float _872 = inversesqrt(dot(vec3(_866, _867, _868), vec3(_866, _867, _868)));
        float _885 = ((_872 * _866) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_823 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _886 = ((_872 * _867) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_827 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _887 = ((_872 * _868) / cbModelParam._m0[35u].z) + ((((((_831 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _889 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_885, _886, _887), 0.0);
        vec4 _896 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_885, _886, _887), 0.0);
        vec4 _903 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_885, _886, _887), 0.0);
        vec4 _910 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_885, _886, _887), 0.0);
        float _922 = exp2((_889.w + (-0.5)) * 20.0) * 2.0;
        float _932 = exp2((_896.w + (-0.5)) * 20.0) * 2.0;
        float _942 = exp2((_903.w + (-0.5)) * 20.0) * 2.0;
        float _952 = exp2((_910.w + (-0.5)) * 20.0) * 2.0;
        float _953 = _952 * (_910.x + (-0.5));
        float _954 = _952 * (_910.y + (-0.5));
        float _955 = _952 * (_910.z + (-0.5));
        _959 = _922 * (_889.z + (-0.5));
        _960 = _922 * (_889.y + (-0.5));
        _961 = _922 * (_889.x + (-0.5));
        _962 = _932 * (_896.z + (-0.5));
        _963 = _932 * (_896.y + (-0.5));
        _964 = _932 * (_896.x + (-0.5));
        _965 = _942 * (_903.z + (-0.5));
        _966 = _942 * (_903.y + (-0.5));
        _967 = _942 * (_903.x + (-0.5));
        _968 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
        _969 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
        _970 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    }
    else
    {
        _959 = _786;
        _960 = _786;
        _961 = _786;
        _962 = _786;
        _963 = _786;
        _964 = _786;
        _965 = _786;
        _966 = _786;
        _967 = _786;
        _968 = _786;
        _969 = _786;
        _970 = _786;
    }
    float _985 = _578 * 0.5;
    float _986 = _579 * 0.5;
    float _987 = _580 * 0.5;
    float _988 = dot(vec4(_985, _986, _987, 1.0), vec4(_961, _964, _967, _970));
    float _991 = dot(vec4(_985, _986, _987, 1.0), vec4(_960, _963, _966, _969));
    float _994 = dot(vec4(_985, _986, _987, 1.0), vec4(_959, _962, _965, _968));
    float _1029;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1001 = dot(vec4(_985, _986, _987, 1.0), vec4(_785, _789, _792, _795));
        float _1005 = dot(vec4(_985, _986, _987, 1.0), vec4(_787, _790, _793, _796));
        float _1009 = dot(vec4(_985, _986, _987, 1.0), vec4(_788, _791, _794, _797));
        float _1016 = dot(vec4(cbModelParam._m0[39u]), vec4(_985, _986, _987, 1.0));
        _1029 = dot(vec3(isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0)), isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0)), isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1016) ? 0.0 : (isnan(0.0) ? _1016 : max(0.0, _1016))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1029 = 1.0;
    }
    float _1040;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1031 = dot(vec4(cbModelParam._m0[40u]), vec4(_985, _986, _987, 1.0));
        _1040 = dot(vec3(isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0)), isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0)), isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1031) ? 0.0 : (isnan(0.0) ? _1031 : max(0.0, _1031))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1040 = 1.0;
    }
    float _1044 = (_1040 * cbModelParam._m0[1u].x) + (_1029 * (1.0 - cbModelParam._m0[1u].x));
    float _1050 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1131;
    float _1133;
    float _1135;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1098 = fma(_620, cbModelParam._m0[13u].z, fma(_616, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _612)) + cbModelParam._m0[13u].w;
        float _1102 = fma(_620, cbModelParam._m0[14u].z, fma(_616, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _612)) + cbModelParam._m0[14u].w;
        float _1106 = fma(_620, cbModelParam._m0[15u].z, fma(_616, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _612)) + cbModelParam._m0[15u].w;
        float _1109 = fma(_580, cbModelParam._m0[13u].z, fma(_579, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _578));
        float _1112 = fma(_580, cbModelParam._m0[14u].z, fma(_579, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _578));
        float _1115 = fma(_580, cbModelParam._m0[15u].z, fma(_579, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _578));
        float _1141;
        if (_1109 > 0.0)
        {
            _1141 = abs((1.0 - _1098) / _1109);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1109 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1098 + 1.0) / _1109);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1141 = frontier_phi_16_14_ladder;
        }
        float _1331;
        if (_1112 > 0.0)
        {
            _1331 = abs((1.0 - _1102) / _1112);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1112 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1102 + 1.0) / _1112);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1331 = frontier_phi_25_21_ladder;
        }
        float _1706;
        if (_1115 > 0.0)
        {
            _1706 = abs((1.0 - _1106) / _1115);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1115 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1106 + 1.0) / _1115);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1706 = frontier_phi_37_32_ladder;
        }
        float _1708 = isnan(_1331) ? _1141 : (isnan(_1141) ? _1331 : min(_1141, _1331));
        float _1709 = isnan(_1706) ? _1708 : (isnan(_1708) ? _1706 : min(_1708, _1706));
        float _1713 = (_1709 * _1109) + _1098;
        float _1714 = (_1709 * _1112) + _1102;
        float _1715 = (_1709 * _1115) + _1106;
        float _1716 = _1709 * 9.9999997473787516355514526367188e-05;
        float _1718 = (-1.0) - _1716;
        float _1720 = _1716 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1715 > _1720) || ((_1715 < _1718) || ((_1714 > _1720) || ((_1714 < _1718) || ((_1713 < _1718) || (_1713 > _1720))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1932 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1715, cbModelParam._m0[9u].z, fma(_1714, cbModelParam._m0[9u].y, _1713 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1715, cbModelParam._m0[10u].z, fma(_1714, cbModelParam._m0[10u].y, _1713 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1715, cbModelParam._m0[11u].z, fma(_1714, cbModelParam._m0[11u].y, _1713 * cbModelParam._m0[11u].x))), _1050);
            frontier_phi_15_37_ladder = _1932.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1932.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1932.x * cbModelParam._m0[1u].y;
        }
        _1131 = frontier_phi_15_37_ladder_2;
        _1133 = frontier_phi_15_37_ladder_1;
        _1135 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1119 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_578, _579, _580), _1050);
        _1131 = _1119.x * cbModelParam._m0[1u].y;
        _1133 = _1119.y * cbModelParam._m0[1u].y;
        _1135 = _1119.z * cbModelParam._m0[1u].y;
    }
    float _1138 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1229;
    float _1231;
    float _1233;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1193 = fma(_620, cbModelParam._m0[21u].z, fma(_616, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _612)) + cbModelParam._m0[21u].w;
        float _1197 = fma(_620, cbModelParam._m0[22u].z, fma(_616, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _612)) + cbModelParam._m0[22u].w;
        float _1201 = fma(_620, cbModelParam._m0[23u].z, fma(_616, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _612)) + cbModelParam._m0[23u].w;
        float _1204 = fma(_580, cbModelParam._m0[21u].z, fma(_579, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _578));
        float _1207 = fma(_580, cbModelParam._m0[22u].z, fma(_579, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _578));
        float _1210 = fma(_580, cbModelParam._m0[23u].z, fma(_579, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _578));
        float _1336;
        if (_1204 > 0.0)
        {
            _1336 = abs((1.0 - _1193) / _1204);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1204 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1193 + 1.0) / _1204);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1336 = frontier_phi_27_23_ladder;
        }
        float _1733;
        if (_1207 > 0.0)
        {
            _1733 = abs((1.0 - _1197) / _1207);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1207 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1197 + 1.0) / _1207);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1733 = frontier_phi_39_34_ladder;
        }
        float _1996;
        if (_1210 > 0.0)
        {
            _1996 = abs((1.0 - _1201) / _1210);
        }
        else
        {
            float frontier_phi_51_46_ladder;
            if (_1210 < 0.0)
            {
                frontier_phi_51_46_ladder = abs((_1201 + 1.0) / _1210);
            }
            else
            {
                frontier_phi_51_46_ladder = 5000.0;
            }
            _1996 = frontier_phi_51_46_ladder;
        }
        float _1998 = isnan(_1733) ? _1336 : (isnan(_1336) ? _1733 : min(_1336, _1733));
        float _1999 = isnan(_1996) ? _1998 : (isnan(_1998) ? _1996 : min(_1998, _1996));
        float _2003 = (_1999 * _1204) + _1193;
        float _2004 = (_1999 * _1207) + _1197;
        float _2005 = (_1999 * _1210) + _1201;
        float _2006 = _1999 * 9.9999997473787516355514526367188e-05;
        float _2007 = (-1.0) - _2006;
        float _2009 = _2006 + 1.0;
        float frontier_phi_24_51_ladder;
        float frontier_phi_24_51_ladder_1;
        float frontier_phi_24_51_ladder_2;
        if ((_2005 > _2009) || ((_2005 < _2007) || ((_2004 > _2009) || ((_2004 < _2007) || ((_2003 < _2007) || (_2003 > _2009))))))
        {
            frontier_phi_24_51_ladder = 0.0;
            frontier_phi_24_51_ladder_1 = 0.0;
            frontier_phi_24_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2082 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2005, cbModelParam._m0[17u].z, fma(_2004, cbModelParam._m0[17u].y, _2003 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2005, cbModelParam._m0[18u].z, fma(_2004, cbModelParam._m0[18u].y, _2003 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2005, cbModelParam._m0[19u].z, fma(_2004, cbModelParam._m0[19u].y, _2003 * cbModelParam._m0[19u].x))), _1138);
            frontier_phi_24_51_ladder = _2082.z * cbModelParam._m0[1u].z;
            frontier_phi_24_51_ladder_1 = _2082.y * cbModelParam._m0[1u].z;
            frontier_phi_24_51_ladder_2 = _2082.x * cbModelParam._m0[1u].z;
        }
        _1229 = frontier_phi_24_51_ladder_2;
        _1231 = frontier_phi_24_51_ladder_1;
        _1233 = frontier_phi_24_51_ladder;
    }
    else
    {
        vec4 _1213 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_578, _579, _580), _1138);
        _1229 = _1213.x * cbModelParam._m0[1u].z;
        _1231 = _1213.y * cbModelParam._m0[1u].z;
        _1233 = _1213.z * cbModelParam._m0[1u].z;
    }
    float _1245 = _569 * 0.01200000010430812835693359375;
    float _1247 = _1245 * ((cbModelParam._m0[1u].w * (_1229 - _1131)) + _1131);
    float _1248 = _1245 * ((cbModelParam._m0[1u].w * (_1231 - _1133)) + _1133);
    float _1249 = _1245 * ((cbModelParam._m0[1u].w * (_1233 - _1135)) + _1135);
    float _1270 = fma(_1249, cbSceneParam._m0[89u].z, fma(_1248, cbSceneParam._m0[89u].y, _1247 * cbSceneParam._m0[89u].x));
    float _1273 = fma(_1249, cbSceneParam._m0[90u].z, fma(_1248, cbSceneParam._m0[90u].y, _1247 * cbSceneParam._m0[90u].x));
    float _1276 = fma(_1249, cbSceneParam._m0[91u].z, fma(_1248, cbSceneParam._m0[91u].y, _1247 * cbSceneParam._m0[91u].x));
    float _1310 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1314 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1318 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1322 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1323 = _1310 / _1322;
    float _1324 = _1314 / _1322;
    float _1325 = _1318 / _1322;
    float _1472;
    float _1473;
    float _1474;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1352 = ((uint(_1325 > cbSceneParam._m0[59u].y) + uint(_1325 > cbSceneParam._m0[59u].x)) + uint(_1325 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1353 = _1352 + 43u;
        uint _1361 = _1352 + 44u;
        uint _1369 = _1352 + 45u;
        uint _1377 = _1352 + 46u;
        float _1388 = fma(_1322, cbSceneParam._m0[_1353].w, fma(_1318, cbSceneParam._m0[_1353].z, fma(_1314, cbSceneParam._m0[_1353].y, _1310 * cbSceneParam._m0[_1353].x)));
        float _1392 = fma(_1322, cbSceneParam._m0[_1361].w, fma(_1318, cbSceneParam._m0[_1361].z, fma(_1314, cbSceneParam._m0[_1361].y, _1310 * cbSceneParam._m0[_1361].x)));
        float _1400 = fma(_1322, cbSceneParam._m0[_1377].w, fma(_1318, cbSceneParam._m0[_1377].z, fma(_1314, cbSceneParam._m0[_1377].y, _1310 * cbSceneParam._m0[_1377].x)));
        float _1405 = cbSceneParam._m0[33u].z * _1400;
        float _1407 = cbSceneParam._m0[33u].w * _1400;
        float _1410 = fma(_1322, cbSceneParam._m0[_1369].w, fma(_1318, cbSceneParam._m0[_1369].z, fma(_1314, cbSceneParam._m0[_1369].y, _1310 * cbSceneParam._m0[_1369].x))) / _1400;
        float _1458 = (cbSceneParam._m0[33u].x - sqrt(((_1324 * _1324) + (_1323 * _1323)) + (_1325 * _1325))) * cbSceneParam._m0[33u].y;
        float _2484 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1465 = (isnan(1.0) ? _2484 : (isnan(_2484) ? 1.0 : min(_2484, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1405 + _1388) / _1400, (_1407 + _1392) / _1400), _1410), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1407 + _1388) / _1400, (_1392 - _1405) / _1400), _1410), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1388 - _1405) / _1400, (_1392 - _1407) / _1400), _1410), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1388 - _1407) / _1400, (_1405 + _1392) / _1400), _1410), 0.0)).x), vec4(0.25)));
        _1472 = 1.0 - (_1465 * cbSceneParam._m0[34u].x);
        _1473 = 1.0 - (_1465 * cbSceneParam._m0[34u].y);
        _1474 = 1.0 - (_1465 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1472 = 1.0;
        _1473 = 1.0;
        _1474 = 1.0;
    }
    float _1538;
    float _1540;
    float _1542;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1526 = fma(_1322, cbSceneParam._m0[63u].w, fma(_1318, cbSceneParam._m0[63u].z, fma(_1314, cbSceneParam._m0[63u].y, _1310 * cbSceneParam._m0[63u].x)));
        float _1527 = fma(_1322, cbSceneParam._m0[60u].w, fma(_1318, cbSceneParam._m0[60u].z, fma(_1314, cbSceneParam._m0[60u].y, _1310 * cbSceneParam._m0[60u].x))) / _1526;
        float _1528 = fma(_1322, cbSceneParam._m0[61u].w, fma(_1318, cbSceneParam._m0[61u].z, fma(_1314, cbSceneParam._m0[61u].y, _1310 * cbSceneParam._m0[61u].x))) / _1526;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1527 >= cbSceneParam._m0[64u].x) && (_1528 >= cbSceneParam._m0[64u].y)) && (_1527 <= cbSceneParam._m0[64u].z)) && (_1528 <= cbSceneParam._m0[64u].w))
        {
            float _1746 = fma(_1322, cbSceneParam._m0[62u].w, fma(_1318, cbSceneParam._m0[62u].z, fma(_1314, cbSceneParam._m0[62u].y, _1310 * cbSceneParam._m0[62u].x))) / _1526;
            float _1750 = isnan(cbSceneParam._m0[41u].w) ? _1746 : (isnan(_1746) ? cbSceneParam._m0[41u].w : max(_1746, cbSceneParam._m0[41u].w));
            float _1793 = (cbSceneParam._m0[33u].x - sqrt(((_1324 * _1324) + (_1323 * _1323)) + (_1325 * _1325))) * cbSceneParam._m0[33u].y;
            float _2500 = isnan(0.0) ? _1793 : (isnan(_1793) ? 0.0 : max(_1793, 0.0));
            float _1800 = (isnan(1.0) ? _2500 : (isnan(_2500) ? 1.0 : min(_2500, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1527, cbSceneParam._m0[33u].w + _1528), _1750), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1527, _1528 - cbSceneParam._m0[33u].z), _1750), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1527 - cbSceneParam._m0[33u].z, _1528 - cbSceneParam._m0[33u].w), _1750), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1527 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1528), _1750), 0.0)).x), vec4(0.25)));
            float _1804 = 1.0 - (_1800 * cbSceneParam._m0[34u].x);
            float _1805 = 1.0 - (_1800 * cbSceneParam._m0[34u].y);
            float _1806 = 1.0 - (_1800 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_1804) ? _1472 : (isnan(_1472) ? _1804 : min(_1472, _1804));
            frontier_phi_36_35_ladder_1 = isnan(_1805) ? _1473 : (isnan(_1473) ? _1805 : min(_1473, _1805));
            frontier_phi_36_35_ladder_2 = isnan(_1806) ? _1474 : (isnan(_1474) ? _1806 : min(_1474, _1806));
        }
        else
        {
            frontier_phi_36_35_ladder = _1472;
            frontier_phi_36_35_ladder_1 = _1473;
            frontier_phi_36_35_ladder_2 = _1474;
        }
        _1538 = frontier_phi_36_35_ladder;
        _1540 = frontier_phi_36_35_ladder_1;
        _1542 = frontier_phi_36_35_ladder_2;
    }
    else
    {
        _1538 = _1472;
        _1540 = _1473;
        _1542 = _1474;
    }
    uint _1544 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1551 = floatBitsToUint(cbInstanceData._m0[_1544 + 5u]).x * 14u;
    float _1559 = (cbLight._m0[_1551 + 13u].x * (_569 + (-1.0))) + 1.0;
    uint _1560 = _1551 + 8u;
    float _1571 = cbLight._m0[_1551].x + _543;
    float _1572 = cbLight._m0[_1551].y + _544;
    float _1573 = cbLight._m0[_1551].z + _545;
    float _1577 = inversesqrt(dot(vec3(_1571, _1572, _1573), vec3(_1571, _1572, _1573)));
    float _1581 = dot(vec3(_467, _468, _469), vec3(cbLight._m0[_1551].xyz));
    float _2526 = isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0));
    float _1584 = isnan(1.0) ? _2526 : (isnan(_2526) ? 1.0 : min(_2526, 1.0));
    float _2537 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _1586 = dot(vec3(cbLight._m0[_1551].xyz), vec3(_1571 * _1577, _1572 * _1577, _1573 * _1577));
    float _2548 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
    float _1596 = (exp2(log2(1.0 - (isnan(1.0) ? _2548 : (isnan(_2548) ? 1.0 : min(_2548, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1602 = (0.5 / ((_1584 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2537 : (isnan(_2537) ? 1.0 : min(_2537, 1.0))))) * _1584;
    float _2559 = isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0));
    float _1604 = (isnan(1.0) ? _2559 : (isnan(_2559) ? 1.0 : min(_2559, 1.0))) * 0.31831014156341552734375;
    float _1606 = isnan(1.0) ? _1559 : (isnan(_1559) ? 1.0 : min(_1559, 1.0));
    uint _1626 = _1544 + 9u;
    uint _1627 = _1626 + uint(cbMatDynParam._m0[0u].w);
    float _1633 = cbInstanceData._m0[_1627].x * (isnan(4.0) ? _249 : (isnan(_249) ? 4.0 : min(_249, 4.0)));
    float _1634 = cbInstanceData._m0[_1627].y * (isnan(4.0) ? _250 : (isnan(_250) ? 4.0 : min(_250, 4.0)));
    float _1635 = cbInstanceData._m0[_1627].z * (isnan(4.0) ? _251 : (isnan(_251) ? 4.0 : min(_251, 4.0)));
    float _2575 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _1644 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _2358 : (isnan(_2358) ? 1.0 : min(_2358, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1651 = (((((((cbLight._m0[_1560].x * _1538) * _1596) * _1604) * _1606) + ((isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0))) * _1044)) * cbPerFrame._m0[3u].x) + (_1644 * (_454 - (_454 * _262)))) + _1633;
    float _1652 = (((((((cbLight._m0[_1560].y * _1540) * _1596) * _1604) * _1606) + ((isnan(0.0) ? _1273 : (isnan(_1273) ? 0.0 : max(_1273, 0.0))) * _1044)) * cbPerFrame._m0[3u].x) + (_1644 * (_455 - (_455 * _262)))) + _1634;
    float _1653 = (((((((cbLight._m0[_1560].z * _1542) * _1596) * _1604) * _1606) + ((isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0))) * _1044)) * cbPerFrame._m0[3u].x) + (_1644 * (_456 - (_456 * _262)))) + _1635;
    float _1654 = isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0));
    float _1655 = isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0));
    float _1656 = isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0));
    float _1662 = cbMtdParam._m0[2u].x * _1633;
    float _1663 = cbMtdParam._m0[2u].y * _1634;
    float _1664 = cbMtdParam._m0[2u].z * _1635;
    float _2601 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1666 = isnan(1.0) ? _2601 : (isnan(_2601) ? 1.0 : min(_2601, 1.0));
    float _1672 = cbInstanceData._m0[_1544 + 6u].w * (isnan(1.0) ? _2575 : (isnan(_2575) ? 1.0 : min(_2575, 1.0)));
    float _1677 = _557 / cbSceneParam._m0[86u].x;
    float _1678 = _558 / cbSceneParam._m0[86u].y;
    vec4 _1692 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1677, _1678, (log2((isnan(cbSceneParam._m0[77u].w) ? _486 : (isnan(_486) ? cbSceneParam._m0[77u].w : min(_486, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1694 = _1692.x;
    float _1695 = _1692.y;
    float _1696 = _1692.z;
    float _1697 = _1692.w;
    float _1848;
    float _1850;
    float _1852;
    float _1854;
    if (_486 > cbSceneParam._m0[78u].w)
    {
        float _1811 = isnan(_486) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _486 : min(cbSceneParam._m0[80u].w, _486));
        float _1812 = _1811 / _486;
        float _1823 = _1812 * _536;
        float _1824 = _537 * _1812;
        float _1825 = (-0.0) - _1824;
        float _1826 = _1812 * _538;
        float _1828 = (cbSceneParam._m0[77u].w * _1825) / _1811;
        float _1829 = _1828 + cbSceneParam._m0[79u].w;
        float _1830 = cbSceneParam._m0[79u].w - _1824;
        float _1836 = sqrt(((_1823 * _1823) + (_1824 * _1824)) + (_1826 * _1826));
        float _1839 = (1.0 - (cbSceneParam._m0[77u].w / _1811)) * _1836;
        float _1844 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1846 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2022;
        if (abs((_1825 - _1828) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2022 = ((((_1829 > 0.0) ? exp2(_1844 * _1829) : (2.0 - exp2(_1846 * _1829))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1839;
        }
        else
        {
            float _1953 = 1.0 / cbSceneParam._m0[80u].x;
            float _1954 = isnan(_1830) ? _1829 : (isnan(_1829) ? _1830 : max(_1829, _1830));
            float _1955 = isnan(_1830) ? _1829 : (isnan(_1829) ? _1830 : min(_1829, _1830));
            float _1964 = isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : min(_1954, 0.0));
            float _1965 = isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : min(_1955, 0.0));
            _2022 = ((abs(_1836 / _1825) * cbSceneParam._m0[80u].y) * ((((_1964 - _1965) * 2.0) - ((exp2(_1844 * (isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0)))) - exp2(_1844 * (isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0))))) * _1953)) - ((exp2(_1846 * _1964) - exp2(_1846 * _1965)) * _1953))) + (_1839 * cbSceneParam._m0[80u].z);
        }
        vec4 _2024 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1677, _1678, 1.0), 0.0);
        float _2033 = exp2((_2022 * (-1.44269502162933349609375)) * (1.0 - _2024.w));
        float _2034 = log2(_2033);
        float _2050 = log2(_1697);
        _1848 = (exp2(_2050 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2034 * cbSceneParam._m0[78u].x)) * _2024.x) / cbSceneParam._m0[78u].x)) + _1694;
        _1850 = (exp2(_2050 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2034 * cbSceneParam._m0[78u].y)) * _2024.y) / cbSceneParam._m0[78u].y)) + _1695;
        _1852 = (exp2(_2050 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2034 * cbSceneParam._m0[78u].z)) * _2024.z) / cbSceneParam._m0[78u].z)) + _1696;
        _1854 = _2033 * _1697;
    }
    else
    {
        _1848 = _1694;
        _1850 = _1695;
        _1852 = _1696;
        _1854 = _1697;
    }
    bool _2060;
    vec4 _1863;
    vec4 _1886;
    float _1888;
    float _1892;
    float _1893;
    float _1894;
    float _1897;
    float _1900;
    float _1903;
    float _1904;
    bool _1915;
    for (;;)
    {
        _1863 = cbMatDynParam._m0[0u];
        float _1865 = roundEven(_1863.y);
        bool _1866 = _1865 == 3.0;
        float _1868 = log2(_1854);
        float _1872 = exp2(_1868 * cbSceneParam._m0[78u].x);
        float _1873 = exp2(_1868 * cbSceneParam._m0[78u].y);
        float _1874 = exp2(_1868 * cbSceneParam._m0[78u].z);
        float _1875 = _1872 * _1654;
        float _1876 = _1873 * _1655;
        float _1877 = _1874 * _1656;
        float _1884 = _552 + (-0.5);
        _1886 = cbMtdParam._m0[1u];
        _1888 = _1886.y * _1884;
        float _1891 = (_1865 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1892 = _1891 * (_1866 ? _1875 : (_1875 + (cbSceneParam._m0[72u].w * _1848)));
        _1893 = _1891 * (_1866 ? _1876 : (_1876 + (cbSceneParam._m0[72u].w * _1850)));
        _1894 = _1891 * (_1866 ? _1877 : (_1877 + (cbSceneParam._m0[72u].w * _1852)));
        _1897 = ((_1662 * _1666) * _1872) * _1891;
        _1900 = ((_1663 * _1666) * _1873) * _1891;
        _1903 = ((_1664 * _1666) * _1874) * _1891;
        _1904 = _1884 * 0.999000012874603271484375;
        _1915 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1915)
        {
            if ((cbInstanceData._m0[_1544 + 7u].x + _1904) < 0.5)
            {
                _2060 = true;
                break;
            }
        }
        uint _1988 = _1626 + uint(_1863.w);
        if ((cbInstanceData._m0[_1988].w < 1.0) && ((cbInstanceData._m0[_1988].w + _1904) < 0.5))
        {
            _2060 = true;
            break;
        }
        if ((_1888 + _222) < _1886.x)
        {
            _2060 = true;
            break;
        }
        _2060 = false;
        break;
    }
    float _2089;
    if (_2060)
    {
        discard_state = true;
        _2089 = 0.0;
    }
    else
    {
        _2089 = _1672;
    }
    SV_Target.x = _1892;
    SV_Target.y = _1893;
    SV_Target.z = _1894;
    SV_Target.w = _2089;
    SV_Target_1.x = _1897;
    SV_Target_1.y = _1900;
    SV_Target_1.z = _1903;
    SV_Target_1.w = _1672;
    discard_exit();
}


