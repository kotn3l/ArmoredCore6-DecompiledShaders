#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_18;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1914;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _237 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _238 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _239 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _245 = inversesqrt(dot(vec3(_237, _238, _239), vec3(_237, _238, _239)));
    float _246 = _245 * _237;
    float _247 = _245 * _238;
    float _248 = _245 * _239;
    float _258 = ((NORMAL.y * TANGENT_2.z) - (NORMAL.z * TANGENT_2.y)) * TANGENT_2.w;
    float _259 = ((NORMAL.z * TANGENT_2.x) - (NORMAL.x * TANGENT_2.z)) * TANGENT_2.w;
    float _260 = ((NORMAL.x * TANGENT_2.y) - (NORMAL.y * TANGENT_2.x)) * TANGENT_2.w;
    float _264 = inversesqrt(dot(vec3(_258, _259, _260), vec3(_258, _259, _260)));
    float _265 = _264 * _258;
    float _266 = _264 * _259;
    float _267 = _264 * _260;
    float _271 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _272 = _271 * NORMAL.x;
    float _273 = _271 * NORMAL.y;
    float _274 = _271 * NORMAL.z;
    float _278 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _279 = _278 * TANGENT.x;
    float _280 = _278 * TANGENT.y;
    float _281 = _278 * TANGENT.z;
    float _285 = inversesqrt(dot(vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z), vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z)));
    float _286 = _285 * TANGENT_2.x;
    float _287 = _285 * TANGENT_2.y;
    float _288 = _285 * TANGENT_2.z;
    float _293;
    float _294;
    float _295;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _293 = (-0.0) - _272;
        _294 = (-0.0) - _273;
        _295 = (-0.0) - _274;
    }
    else
    {
        _293 = _272;
        _294 = _273;
        _295 = _274;
    }
    vec4 _321 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _333 = 1.0 - ((1.0 - _321.z) * 1.39999997615814208984375);
    float _4265 = isnan(0.0) ? _333 : (isnan(_333) ? 0.0 : max(_333, 0.0));
    float _334 = isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0));
    float _336 = 1.0 - ((1.0 - _321.x) * 1.39999997615814208984375);
    float _4276 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
    float _337 = isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0));
    float _339 = 1.0 - ((1.0 - _321.y) * 1.39999997615814208984375);
    float _4287 = isnan(0.0) ? _339 : (isnan(_339) ? 0.0 : max(_339, 0.0));
    float _340 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
    float _342 = (_337 + _334) + _340;
    float _349 = (_342 * (1.0 - cbMtdParam._m0[20u].x)) + cbMtdParam._m0[20u].x;
    float _350 = (_342 * (1.0 - cbMtdParam._m0[20u].y)) + cbMtdParam._m0[20u].y;
    float _351 = (_342 * (1.0 - cbMtdParam._m0[20u].z)) + cbMtdParam._m0[20u].z;
    vec4 _376 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _385 = 1.0 - ((1.0 - _376.x) * 1.39999997615814208984375);
    float _4298 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
    float _386 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
    float _396 = (_386 * ((cbMtdParam._m0[9u].x - _349) + ((1.0 - cbMtdParam._m0[9u].x) * _342))) + _349;
    float _397 = (_386 * ((cbMtdParam._m0[9u].y - _350) + ((1.0 - cbMtdParam._m0[9u].y) * _342))) + _350;
    float _398 = (_386 * ((cbMtdParam._m0[9u].z - _351) + ((1.0 - cbMtdParam._m0[9u].z) * _342))) + _351;
    float _412 = 1.0 - ((1.0 - _376.y) * 1.39999997615814208984375);
    float _4309 = isnan(0.0) ? _412 : (isnan(_412) ? 0.0 : max(_412, 0.0));
    float _413 = isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0));
    float _423 = (((cbMtdParam._m0[18u].x - _396) + ((1.0 - cbMtdParam._m0[18u].x) * _342)) * _413) + _396;
    float _424 = (((cbMtdParam._m0[18u].y - _397) + ((1.0 - cbMtdParam._m0[18u].y) * _342)) * _413) + _397;
    float _425 = (((cbMtdParam._m0[18u].z - _398) + ((1.0 - cbMtdParam._m0[18u].z) * _342)) * _413) + _398;
    float _439 = 1.0 - ((1.0 - _376.z) * 1.39999997615814208984375);
    float _4320 = isnan(0.0) ? _439 : (isnan(_439) ? 0.0 : max(_439, 0.0));
    float _440 = isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0));
    vec4 _468 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.z) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.w) + cbTextureTilingScale._m0[10u].w));
    float _470 = _468.x;
    float _471 = _470 * cbMtdParam._m0[25u].w;
    float _485 = ((cbMtdParam._m0[22u].z * (-1.39999997615814208984375)) * ((TEXCOORD_5.w - _471) + (cbMtdParam._m0[23u].y * TEXCOORD_5.w))) + 1.0;
    float _4331 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _487 = 1.0 - (isnan(1.0) ? _4331 : (isnan(_4331) ? 1.0 : min(_4331, 1.0)));
    float _495 = ((cbMtdParam._m0[22u].y * (-1.39999997615814208984375)) * ((TEXCOORD_5.z - _471) + (cbMtdParam._m0[23u].z * TEXCOORD_5.z))) + 1.0;
    float _4342 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _497 = 1.0 - (isnan(1.0) ? _4342 : (isnan(_4342) ? 1.0 : min(_4342, 1.0)));
    vec4 _515 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    float _517 = _515.x;
    float _518 = _515.y;
    float _519 = _515.z;
    float _520 = cbMtdParam._m0[10u].x * _497;
    float _522 = cbMtdParam._m0[10u].y * _497;
    float _524 = cbMtdParam._m0[10u].z * _497;
    float _540 = ((_517 * (cbMtdParam._m0[17u].x - _520)) * _487) + (_520 * _517);
    float _541 = ((_518 * (cbMtdParam._m0[17u].y - _522)) * _487) + (_522 * _518);
    float _542 = ((_519 * (cbMtdParam._m0[17u].z - _524)) * _487) + (_524 * _519);
    float _562 = cbMtdParam._m0[23u].x * (-1.39999997615814208984375);
    float _566 = (_562 * ((TEXCOORD_9.x - _471) + (cbMtdParam._m0[22u].x * TEXCOORD_9.x))) + 1.0;
    float _567 = (_562 * ((TEXCOORD_9.y - _471) + (cbMtdParam._m0[22u].x * TEXCOORD_9.y))) + 1.0;
    float _568 = (_562 * ((TEXCOORD_9.z - _471) + (cbMtdParam._m0[22u].x * TEXCOORD_9.z))) + 1.0;
    float _4353 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _4364 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _4375 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _580 = (1.0 - cbMtdParam._m0[24u].y) + _337;
    float _583 = _580 * (1.0 - (isnan(1.0) ? _4353 : (isnan(_4353) ? 1.0 : min(_4353, 1.0))));
    float _584 = _580 * (1.0 - (isnan(1.0) ? _4364 : (isnan(_4364) ? 1.0 : min(_4364, 1.0))));
    float _585 = ((_337 + 1.0) - cbMtdParam._m0[24u].y) * (1.0 - (isnan(1.0) ? _4375 : (isnan(_4375) ? 1.0 : min(_4375, 1.0))));
    float _595 = _497 + _487;
    float _596 = _595 + _583;
    float _597 = _595 + _584;
    float _598 = _595 + _585;
    float _599 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    float _600 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
    float _601 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _602 = isnan(1.0) ? _599 : (isnan(_599) ? 1.0 : min(_599, 1.0));
    float _603 = isnan(1.0) ? _600 : (isnan(_600) ? 1.0 : min(_600, 1.0));
    float _604 = isnan(1.0) ? _601 : (isnan(_601) ? 1.0 : min(_601, 1.0));
    vec4 _622 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _627 = _622.w;
    float _628 = _622.x * cbMtdParam._m0[13u].x;
    float _629 = _622.y * cbMtdParam._m0[13u].y;
    float _630 = _622.z * cbMtdParam._m0[13u].z;
    vec4 _648 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w));
    float _662 = (((_648.x * cbMtdParam._m0[14u].x) - _628) * _337) + _628;
    float _663 = (((_648.y * cbMtdParam._m0[14u].y) - _629) * _337) + _629;
    float _664 = (((_648.z * cbMtdParam._m0[14u].z) - _630) * _337) + _630;
    vec4 _682 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w));
    float _696 = (((_682.x * cbMtdParam._m0[15u].x) - _662) * _340) + _662;
    float _697 = (((_682.y * cbMtdParam._m0[15u].y) - _663) * _340) + _663;
    float _698 = (((_682.z * cbMtdParam._m0[15u].z) - _664) * _340) + _664;
    vec4 _716 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _730 = (((_716.x * cbMtdParam._m0[16u].x) - _696) * _334) + _696;
    float _731 = (((_716.y * cbMtdParam._m0[16u].y) - _697) * _334) + _697;
    float _732 = (((_716.z * cbMtdParam._m0[16u].z) - _698) * _334) + _698;
    float _752 = ((_730 - (_730 * _602)) + (((_602 * 4.55000019073486328125) * ((_583 * ((cbMtdParam._m0[11u].x * _517) - _540)) + _540)) * _730)) * ((((cbMtdParam._m0[19u].x - _423) + ((1.0 - cbMtdParam._m0[19u].x) * _342)) * _440) + _423);
    float _753 = ((_731 - (_731 * _603)) + (((_603 * 4.55000019073486328125) * ((_584 * ((cbMtdParam._m0[11u].y * _518) - _541)) + _541)) * _731)) * ((((cbMtdParam._m0[19u].y - _424) + ((1.0 - cbMtdParam._m0[19u].y) * _342)) * _440) + _424);
    float _754 = ((_732 - (_604 * _732)) + (((_604 * 4.55000019073486328125) * ((_585 * ((cbMtdParam._m0[11u].z * _519) - _542)) + _542)) * _732)) * ((((cbMtdParam._m0[19u].z - _425) + ((1.0 - cbMtdParam._m0[19u].z) * _342)) * _440) + _425);
    float _760 = (((1.0 - TEXCOORD_5.y) * (-2.7999999523162841796875)) * cbMtdParam._m0[25u].y) + 1.0;
    float _4416 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _772 = ((((_470 + (-1.0)) + ((1.0 - TEXCOORD_5.x) * 2.0)) * (-1.39999997615814208984375)) * cbMtdParam._m0[25u].x) + 1.0;
    float _4427 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
    vec4 _787 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _793 = (_787.x * 2.0) + (-1.0);
    float _794 = (_787.y * 2.0) + (-1.0);
    float _795 = dot(vec2(_793, _794), vec2(_793, _794));
    float _4438 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
    float _800 = sqrt(1.0 - (isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0))));
    float _803 = fma(_800, _293, fma(_794, _279, _793 * _246));
    float _806 = fma(_800, _294, fma(_794, _280, _793 * _247));
    float _809 = fma(_800, _295, fma(_794, _281, _793 * _248));
    float _818 = exp2(log2(inversesqrt(dot(vec3(_803, _806, _809), vec3(_803, _806, _809))) * _806) * cbMtdParam._m0[24u].w) * cbMtdParam._m0[24u].z;
    float _4449 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
    float _821 = ((isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0))) + (isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0)))) * (1.0 - (isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0))));
    float _4460 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _822 = isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0));
    float _824 = 3.0 - (_822 * 2.0);
    float _829 = _822 * _822;
    float _836 = ((_829 * (cbMtdParam._m0[12u].x - _752)) * _824) + _752;
    float _837 = ((_829 * (cbMtdParam._m0[12u].y - _753)) * _824) + _753;
    float _838 = ((_829 * (cbMtdParam._m0[12u].z - _754)) * _824) + _754;
    float _851 = ((cbMtdParam._m0[21u].w - cbMtdParam._m0[26u].x) * _602) + cbMtdParam._m0[26u].x;
    float _854 = ((cbMtdParam._m0[21u].x - _851) * _337) + _851;
    float _857 = ((cbMtdParam._m0[21u].y - _854) * _340) + _854;
    float _860 = ((cbMtdParam._m0[21u].z - _857) * _334) + _857;
    vec4 _872 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    float _876 = _872.z;
    float _879 = (_872.x * 2.0) + (-1.0);
    float _880 = (_872.y * 2.0) + (-1.0);
    float _881 = dot(vec2(_879, _880), vec2(_879, _880));
    float _4471 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
    float _886 = sqrt(1.0 - (isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0))));
    float _889 = fma(_886, _293, fma(_880, _286, _879 * _265));
    float _892 = fma(_886, _294, fma(_880, _287, _879 * _266));
    float _895 = fma(_886, _295, fma(_880, _288, _879 * _267));
    float _899 = inversesqrt(dot(vec3(_889, _892, _895), vec3(_889, _892, _895)));
    float _900 = _899 * _889;
    float _901 = _899 * _892;
    float _902 = _899 * _895;
    vec4 _915 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_18, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.w) + cbTextureTilingScale._m0[8u].w));
    float _922 = (_915.x * 2.0) + (-1.0);
    float _923 = (_915.y * 2.0) + (-1.0);
    float _924 = dot(vec2(_922, _923), vec2(_922, _923));
    float _4482 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
    float _932 = ((_915.z - _876) * _821) + _876;
    vec4 _945 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w));
    float _951 = (_945.x * 2.0) + (-1.0);
    float _952 = (_945.y * 2.0) + (-1.0);
    float _953 = dot(vec2(_951, _952), vec2(_951, _952));
    float _4493 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    float _958 = sqrt(1.0 - (isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0))));
    float _961 = fma(_958, _293, fma(_952, _286, _951 * _265));
    float _964 = fma(_958, _294, fma(_952, _287, _951 * _266));
    float _967 = fma(_958, _295, fma(_952, _288, _951 * _267));
    float _971 = inversesqrt(dot(vec3(_961, _964, _967), vec3(_961, _964, _967)));
    float _972 = _971 * _961;
    float _973 = _971 * _964;
    float _974 = _971 * _967;
    float _977 = fma(_974, _248, fma(_973, _247, _972 * _246));
    float _980 = fma(_974, _281, fma(_973, _280, _972 * _279));
    float _983 = fma(_974, _295, fma(_973, _294, _972 * _293));
    float _987 = inversesqrt(dot(vec3(_977, _980, _983), vec3(_977, _980, _983)));
    vec4 _1000 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _1006 = (_1000.x * 2.0) + (-1.0);
    float _1007 = (_1000.y * 2.0) + (-1.0);
    float _1008 = dot(vec2(_1006, _1007), vec2(_1006, _1007));
    float _4504 = isnan(0.0) ? _1008 : (isnan(_1008) ? 0.0 : max(_1008, 0.0));
    float _1013 = sqrt(1.0 - (isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0))));
    float _1016 = fma(_1013, _293, fma(_1007, _286, _1006 * _265));
    float _1019 = fma(_1013, _294, fma(_1007, _287, _1006 * _266));
    float _1022 = fma(_1013, _295, fma(_1007, _288, _1006 * _267));
    float _1026 = inversesqrt(dot(vec3(_1016, _1019, _1022), vec3(_1016, _1019, _1022)));
    float _1027 = _1026 * _1016;
    float _1028 = _1026 * _1019;
    float _1029 = _1026 * _1022;
    float _1032 = fma(_1029, _248, fma(_1028, _247, _1027 * _246));
    float _1035 = fma(_1029, _281, fma(_1028, _280, _1027 * _279));
    float _1038 = fma(_1029, _295, fma(_1028, _294, _1027 * _293));
    float _1042 = inversesqrt(dot(vec3(_1032, _1035, _1038), vec3(_1032, _1035, _1038)));
    vec4 _1057 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _1063 = (_1057.x * 2.0) + (-1.0);
    float _1064 = (_1057.y * 2.0) + (-1.0);
    float _1065 = dot(vec2(_1063, _1064), vec2(_1063, _1064));
    float _4515 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
    float _1070 = sqrt(1.0 - (isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0))));
    float _1073 = fma(_1070, _293, fma(_1064, _286, _1063 * _265));
    float _1076 = fma(_1070, _294, fma(_1064, _287, _1063 * _266));
    float _1079 = fma(_1070, _295, fma(_1064, _288, _1063 * _267));
    float _1083 = inversesqrt(dot(vec3(_1073, _1076, _1079), vec3(_1073, _1076, _1079)));
    float _1084 = _1083 * _1073;
    float _1085 = _1083 * _1076;
    float _1086 = _1083 * _1079;
    float _1089 = fma(_1086, _248, fma(_1085, _247, _1084 * _246));
    float _1092 = fma(_1086, _281, fma(_1085, _280, _1084 * _279));
    float _1095 = fma(_1086, _295, fma(_1085, _294, _1084 * _293));
    float _1099 = inversesqrt(dot(vec3(_1089, _1092, _1095), vec3(_1089, _1092, _1095)));
    float _1105 = fma(_902, _248, fma(_901, _247, _900 * _246));
    float _1108 = fma(_902, _281, fma(_901, _280, _900 * _279));
    float _1111 = fma(_902, _295, fma(_901, _294, _900 * _293));
    float _1115 = inversesqrt(dot(vec3(_1105, _1108, _1111), vec3(_1105, _1108, _1111)));
    float _1116 = _1115 * _1105;
    float _1117 = _1115 * _1108;
    float _1118 = _1115 * _1111;
    float _1125 = (((_1099 * _1089) - _1116) * _337) + _1116;
    float _1126 = (((_1099 * _1092) - _1117) * _337) + _1117;
    float _1127 = (((_1099 * _1095) - _1118) * _337) + _1118;
    vec4 _1140 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w));
    float _1146 = (_1140.x * 2.0) + (-1.0);
    float _1147 = (_1140.y * 2.0) + (-1.0);
    float _1148 = dot(vec2(_1146, _1147), vec2(_1146, _1147));
    float _4526 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
    float _1153 = sqrt(1.0 - (isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0))));
    float _1156 = fma(_1153, _293, fma(_1147, _286, _1146 * _265));
    float _1159 = fma(_1153, _294, fma(_1147, _287, _1146 * _266));
    float _1162 = fma(_1153, _295, fma(_1147, _288, _1146 * _267));
    float _1166 = inversesqrt(dot(vec3(_1156, _1159, _1162), vec3(_1156, _1159, _1162)));
    float _1167 = _1166 * _1156;
    float _1168 = _1166 * _1159;
    float _1169 = _1166 * _1162;
    float _1172 = fma(_1169, _248, fma(_1168, _247, _1167 * _246));
    float _1175 = fma(_1169, _281, fma(_1168, _280, _1167 * _279));
    float _1178 = fma(_1169, _295, fma(_1168, _294, _1167 * _293));
    float _1182 = inversesqrt(dot(vec3(_1172, _1175, _1178), vec3(_1172, _1175, _1178)));
    float _1192 = (((_1182 * _1172) - _1125) * _340) + _1125;
    float _1193 = (((_1182 * _1175) - _1126) * _340) + _1126;
    float _1194 = (((_1182 * _1178) - _1127) * _340) + _1127;
    vec4 _1207 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.z) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.w) + cbTextureTilingScale._m0[7u].w));
    float _1213 = (_1207.x * 2.0) + (-1.0);
    float _1214 = (_1207.y * 2.0) + (-1.0);
    float _1215 = dot(vec2(_1213, _1214), vec2(_1213, _1214));
    float _4537 = isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0));
    float _1220 = sqrt(1.0 - (isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0))));
    float _1223 = fma(_1220, _293, fma(_1214, _286, _1213 * _265));
    float _1226 = fma(_1220, _294, fma(_1214, _287, _1213 * _266));
    float _1229 = fma(_1220, _295, fma(_1214, _288, _1213 * _267));
    float _1233 = inversesqrt(dot(vec3(_1223, _1226, _1229), vec3(_1223, _1226, _1229)));
    float _1234 = _1233 * _1223;
    float _1235 = _1233 * _1226;
    float _1236 = _1233 * _1229;
    float _1239 = fma(_1236, _248, fma(_1235, _247, _1234 * _246));
    float _1242 = fma(_1236, _281, fma(_1235, _280, _1234 * _279));
    float _1245 = fma(_1236, _295, fma(_1235, _294, _1234 * _293));
    float _1249 = inversesqrt(dot(vec3(_1239, _1242, _1245), vec3(_1239, _1242, _1245)));
    float _1259 = (((_1249 * _1245) - _1194) * _334) + _1194;
    vec4 _1271 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w));
    float _1277 = (_1271.x * 2.0) + (-1.0);
    float _1278 = (_1271.y * 2.0) + (-1.0);
    float _1279 = dot(vec2(_1277, _1278), vec2(_1277, _1278));
    float _4548 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
    float _1284 = sqrt(1.0 - (isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0))));
    float _1287 = fma(_1284, _293, fma(_1278, _286, _1277 * _265));
    float _1290 = fma(_1284, _294, fma(_1278, _287, _1277 * _266));
    float _1293 = fma(_1284, _295, fma(_1278, _288, _1277 * _267));
    float _1297 = inversesqrt(dot(vec3(_1287, _1290, _1293), vec3(_1287, _1290, _1293)));
    float _1298 = _1297 * _1287;
    float _1299 = _1297 * _1290;
    float _1300 = _1297 * _1293;
    float _1303 = fma(_1300, _248, fma(_1299, _247, _1298 * _246));
    float _1306 = fma(_1300, _281, fma(_1299, _280, _1298 * _279));
    float _1309 = fma(_1300, _295, fma(_1299, _294, _1298 * _293));
    float _1313 = inversesqrt(dot(vec3(_1303, _1306, _1309), vec3(_1303, _1306, _1309)));
    float _1346 = (((((((_1032 * _487) * _1042) * cbMtdParam._m0[23u].w) + ((((_596 * _580) * _977) * _987) * cbMtdParam._m0[24u].x)) + _1192) + (((_1249 * _1239) - _1192) * _334)) + (((_1303 * _497) * _1313) * cbMtdParam._m0[22u].w)) + (cbMtdParam._m0[25u].z * _793);
    float _1351 = (((((((_1035 * _487) * _1042) * cbMtdParam._m0[23u].w) + ((((_597 * _580) * _980) * _987) * cbMtdParam._m0[24u].x)) + _1193) + (((_1249 * _1242) - _1193) * _334)) + (((_1306 * _497) * _1313) * cbMtdParam._m0[22u].w)) + (cbMtdParam._m0[25u].z * _794);
    float _1358 = ((_922 - _1346) * _821) + _1346;
    float _1359 = (_821 * (_923 - _1351)) + _1351;
    float _1360 = (_821 * (sqrt(1.0 - (isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0)))) - _1259)) + _1259;
    float _1363 = fma(_1360, _293, fma(_1359, _279, _1358 * _246));
    float _1366 = fma(_1360, _294, fma(_1359, _280, _1358 * _247));
    float _1369 = fma(_1360, _295, fma(_1359, _281, _1358 * _248));
    float _1373 = inversesqrt(dot(vec3(_1363, _1366, _1369), vec3(_1363, _1366, _1369)));
    float _1374 = _1373 * _1363;
    float _1375 = _1373 * _1366;
    float _1376 = _1373 * _1369;
    float _4559 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _1377 = isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0));
    float _4570 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    float _1378 = isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0));
    float _4581 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _4592 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    float _4603 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _4614 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
    float _1382 = isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0));
    float _1398 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1438 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1448 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1438);
    float _1449 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1438);
    float _1450 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1438);
    float _1454 = inversesqrt(dot(vec3(_1448, _1449, _1450), vec3(_1448, _1449, _1450)));
    float _1455 = _1448 * _1454;
    float _1456 = _1449 * _1454;
    float _1457 = _1450 * _1454;
    float _1463 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1464 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1482 = fma(_1376, cbSceneParam._m0[5u].z, fma(_1375, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1374));
    float _1485 = fma(_1376, cbSceneParam._m0[6u].z, fma(_1375, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1374));
    float _1488 = fma(_1376, cbSceneParam._m0[7u].z, fma(_1375, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1374));
    uint _1501 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1503 = (_1501 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1509 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0)))) * cbInstanceData._m0[_1503].x;
    float _1510 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0)))) * cbInstanceData._m0[_1503].y;
    float _1511 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0)))) * cbInstanceData._m0[_1503].z;
    float _4625 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
    float _1512 = isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0));
    float _4636 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
    float _1513 = isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0));
    float _4647 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
    float _1514 = isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0));
    float _1515 = 1.0 - _1382;
    float _1516 = _1512 * _1515;
    float _1517 = _1513 * _1515;
    float _1518 = _1514 * _1515;
    float _1523 = (_1512 + (-0.039999999105930328369140625)) * _1382;
    float _1524 = (_1513 + (-0.039999999105930328369140625)) * _1382;
    float _1525 = (_1514 + (-0.039999999105930328369140625)) * _1382;
    float _1526 = _1523 + 0.039999999105930328369140625;
    float _1528 = _1524 + 0.039999999105930328369140625;
    float _1529 = _1525 + 0.039999999105930328369140625;
    vec4 _1538 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1463, cbSceneParam._m0[86u].y * _1464));
    float _1541 = _1538.x * TEXCOORD_9.w;
    float _1542 = dot(vec3(_1374, _1375, _1376), vec3(_1455, _1456, _1457));
    float _1545 = _1542 * 2.0;
    float _1549 = (_1545 * _1374) - _1455;
    float _1550 = (_1545 * _1375) - _1456;
    float _1551 = (_1545 * _1376) - _1457;
    float _1555 = abs(dot(vec3(_1455, _1456, _1457), vec3(_1374, _1375, _1376)));
    float _4658 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
    float _1557 = sqrt(_1378);
    float _1569 = exp2((_1557 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1557 * 3.0));
    float _1575 = (1.0 - _1569) * ((_1557 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1576 = _1569 * _1557;
    float _1604 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1608 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1612 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1913;
    float _1915;
    float _1916;
    float _1917;
    float _1918;
    float _1919;
    float _1920;
    float _1921;
    float _1922;
    float _1923;
    float _1924;
    float _1925;
    float _1926;
    float _1927;
    float _1928;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1638 = fma(_1612, cbModelParam._m0[26u].z, fma(_1608, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1604));
        float _1642 = fma(_1612, cbModelParam._m0[27u].z, fma(_1608, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1604));
        float _1646 = fma(_1612, cbModelParam._m0[28u].z, fma(_1608, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1604));
        float _1671 = _1604 + _1374;
        float _1672 = _1608 + _1375;
        float _1673 = _1612 + _1376;
        float _1683 = fma(_1673, cbModelParam._m0[26u].z, fma(_1672, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1671)) - _1638;
        float _1684 = fma(_1673, cbModelParam._m0[27u].z, fma(_1672, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1671)) - _1642;
        float _1685 = fma(_1673, cbModelParam._m0[28u].z, fma(_1672, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1671)) - _1646;
        float _1689 = inversesqrt(dot(vec3(_1683, _1684, _1685), vec3(_1683, _1684, _1685)));
        float _1702 = ((_1689 * _1683) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1638 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1703 = ((_1689 * _1684) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1642 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1704 = ((_1689 * _1685) / cbModelParam._m0[34u].z) + ((((((_1646 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1707 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1702, _1703, _1704), 0.0);
        vec4 _1714 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1702, _1703, _1704), 0.0);
        vec4 _1721 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1702, _1703, _1704), 0.0);
        vec4 _1728 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1702, _1703, _1704), 0.0);
        float _1741 = exp2((_1707.w + (-0.5)) * 20.0) * 2.0;
        float _1742 = _1741 * (_1707.x + (-0.5));
        float _1743 = _1741 * (_1707.y + (-0.5));
        float _1744 = _1741 * (_1707.z + (-0.5));
        float _1751 = exp2((_1714.w + (-0.5)) * 20.0) * 2.0;
        float _1752 = _1751 * (_1714.x + (-0.5));
        float _1753 = _1751 * (_1714.y + (-0.5));
        float _1754 = _1751 * (_1714.z + (-0.5));
        float _1761 = exp2((_1721.w + (-0.5)) * 20.0) * 2.0;
        float _1762 = _1761 * (_1721.x + (-0.5));
        float _1763 = _1761 * (_1721.y + (-0.5));
        float _1764 = _1761 * (_1721.z + (-0.5));
        float _1771 = exp2((_1728.w + (-0.5)) * 20.0) * 2.0;
        float _1772 = _1771 * (_1728.x + (-0.5));
        float _1773 = _1771 * (_1728.y + (-0.5));
        float _1774 = _1771 * (_1728.z + (-0.5));
        float _1775 = isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0));
        float _1776 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
        float _1777 = isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0));
        float _1778 = _1742 * 0.5;
        float _1779 = _1752 * 0.5;
        float _1780 = _1762 * 0.5;
        float _1781 = dot(vec3(_1778, _1779, _1780), vec3(_1778, _1779, _1780));
        float _1786 = (_1781 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1781);
        float _1795 = (dot(vec3(_1374, _1375, _1376), vec3(_1786 * _1778, _1786 * _1779, _1786 * _1780)) + 1.0) * 0.5;
        float _4684 = isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0));
        float _1805 = sqrt(((_1779 * _1779) + (_1778 * _1778)) + (_1780 * _1780)) / (_1775 + 9.9999997473787516355514526367188e-06);
        float _4695 = isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0));
        float _1806 = isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0));
        float _1807 = _1806 * 2.0;
        float _1811 = (1.0 - _1806) / (_1806 + 1.0);
        float _4706 = isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0));
        float _1812 = isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0));
        float _1821 = ((((1.0 - _1812) * (_1807 + 2.0)) * exp2(log2(isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0))) * (_1807 + 1.0))) + _1812) * _1775;
        float _1822 = _1743 * 0.5;
        float _1823 = _1753 * 0.5;
        float _1824 = _1763 * 0.5;
        float _1825 = dot(vec3(_1822, _1823, _1824), vec3(_1822, _1823, _1824));
        float _1830 = (_1825 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1825);
        float _1838 = (dot(vec3(_1374, _1375, _1376), vec3(_1830 * _1822, _1830 * _1823, _1830 * _1824)) + 1.0) * 0.5;
        float _4717 = isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0));
        float _1847 = sqrt(((_1823 * _1823) + (_1822 * _1822)) + (_1824 * _1824)) / (_1776 + 9.9999997473787516355514526367188e-06);
        float _4728 = isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0));
        float _1848 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
        float _1849 = _1848 * 2.0;
        float _1853 = (1.0 - _1848) / (_1848 + 1.0);
        float _4739 = isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0));
        float _1854 = isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0));
        float _1863 = ((((1.0 - _1854) * (_1849 + 2.0)) * exp2(log2(isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0))) * (_1849 + 1.0))) + _1854) * _1776;
        float _1864 = _1744 * 0.5;
        float _1865 = _1754 * 0.5;
        float _1866 = _1764 * 0.5;
        float _1867 = dot(vec3(_1864, _1865, _1866), vec3(_1864, _1865, _1866));
        float _1872 = (_1867 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1867);
        float _1880 = (dot(vec3(_1374, _1375, _1376), vec3(_1872 * _1864, _1872 * _1865, _1872 * _1866)) + 1.0) * 0.5;
        float _4750 = isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0));
        float _1889 = sqrt(((_1865 * _1865) + (_1864 * _1864)) + (_1866 * _1866)) / (_1777 + 9.9999997473787516355514526367188e-06);
        float _4761 = isnan(0.0) ? _1889 : (isnan(_1889) ? 0.0 : max(_1889, 0.0));
        float _1890 = isnan(1.0) ? _4761 : (isnan(_4761) ? 1.0 : min(_4761, 1.0));
        float _1891 = _1890 * 2.0;
        float _1895 = (1.0 - _1890) / (_1890 + 1.0);
        float _4772 = isnan(0.0) ? _1895 : (isnan(_1895) ? 0.0 : max(_1895, 0.0));
        float _1896 = isnan(1.0) ? _4772 : (isnan(_4772) ? 1.0 : min(_4772, 1.0));
        float _1905 = ((((1.0 - _1896) * (_1891 + 2.0)) * exp2(log2(isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0))) * (_1891 + 1.0))) + _1896) * _1777;
        _1913 = _1744;
        _1915 = _1743;
        _1916 = _1742;
        _1917 = _1754;
        _1918 = _1753;
        _1919 = _1752;
        _1920 = _1764;
        _1921 = _1763;
        _1922 = _1762;
        _1923 = _1777;
        _1924 = _1776;
        _1925 = _1775;
        _1926 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0)));
        _1927 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0)));
        _1928 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1905 : (isnan(_1905) ? 0.0 : max(_1905, 0.0)));
    }
    else
    {
        _1913 = _1914;
        _1915 = _1914;
        _1916 = _1914;
        _1917 = _1914;
        _1918 = _1914;
        _1919 = _1914;
        _1920 = _1914;
        _1921 = _1914;
        _1922 = _1914;
        _1923 = _1914;
        _1924 = _1914;
        _1925 = _1914;
        _1926 = 0.0;
        _1927 = 0.0;
        _1928 = 0.0;
    }
    float _2223;
    float _2224;
    float _2225;
    float _2226;
    float _2227;
    float _2228;
    float _2229;
    float _2230;
    float _2231;
    float _2232;
    float _2233;
    float _2234;
    float _2235;
    float _2236;
    float _2237;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1954 = fma(_1612, cbModelParam._m0[30u].z, fma(_1608, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1604));
        float _1958 = fma(_1612, cbModelParam._m0[31u].z, fma(_1608, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1604));
        float _1962 = fma(_1612, cbModelParam._m0[32u].z, fma(_1608, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1604));
        float _1985 = _1604 + _1374;
        float _1986 = _1608 + _1375;
        float _1987 = _1612 + _1376;
        float _1997 = fma(_1987, cbModelParam._m0[30u].z, fma(_1986, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1985)) - _1954;
        float _1998 = fma(_1987, cbModelParam._m0[31u].z, fma(_1986, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1985)) - _1958;
        float _1999 = fma(_1987, cbModelParam._m0[32u].z, fma(_1986, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1985)) - _1962;
        float _2003 = inversesqrt(dot(vec3(_1997, _1998, _1999), vec3(_1997, _1998, _1999)));
        float _2016 = ((_2003 * _1997) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1954 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2017 = ((_2003 * _1998) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1958 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2018 = ((_2003 * _1999) / cbModelParam._m0[35u].z) + ((((((_1962 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _2020 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_2016, _2017, _2018), 0.0);
        vec4 _2027 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_2016, _2017, _2018), 0.0);
        vec4 _2034 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_2016, _2017, _2018), 0.0);
        vec4 _2041 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_2016, _2017, _2018), 0.0);
        float _2053 = exp2((_2020.w + (-0.5)) * 20.0) * 2.0;
        float _2054 = _2053 * (_2020.x + (-0.5));
        float _2055 = _2053 * (_2020.y + (-0.5));
        float _2056 = _2053 * (_2020.z + (-0.5));
        float _2063 = exp2((_2027.w + (-0.5)) * 20.0) * 2.0;
        float _2064 = _2063 * (_2027.x + (-0.5));
        float _2065 = _2063 * (_2027.y + (-0.5));
        float _2066 = _2063 * (_2027.z + (-0.5));
        float _2073 = exp2((_2034.w + (-0.5)) * 20.0) * 2.0;
        float _2074 = _2073 * (_2034.x + (-0.5));
        float _2075 = _2073 * (_2034.y + (-0.5));
        float _2076 = _2073 * (_2034.z + (-0.5));
        float _2083 = exp2((_2041.w + (-0.5)) * 20.0) * 2.0;
        float _2084 = _2083 * (_2041.x + (-0.5));
        float _2085 = _2083 * (_2041.y + (-0.5));
        float _2086 = _2083 * (_2041.z + (-0.5));
        float _2087 = isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0));
        float _2088 = isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0));
        float _2089 = isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0));
        float _2090 = _2054 * 0.5;
        float _2091 = _2064 * 0.5;
        float _2092 = _2074 * 0.5;
        float _2093 = dot(vec3(_2090, _2091, _2092), vec3(_2090, _2091, _2092));
        float _2098 = (_2093 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2093);
        float _2106 = (dot(vec3(_1374, _1375, _1376), vec3(_2098 * _2090, _2098 * _2091, _2098 * _2092)) + 1.0) * 0.5;
        float _4813 = isnan(0.0) ? _2106 : (isnan(_2106) ? 0.0 : max(_2106, 0.0));
        float _2115 = sqrt(((_2091 * _2091) + (_2090 * _2090)) + (_2092 * _2092)) / (_2087 + 9.9999997473787516355514526367188e-06);
        float _4824 = isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0));
        float _2116 = isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0));
        float _2117 = _2116 * 2.0;
        float _2121 = (1.0 - _2116) / (_2116 + 1.0);
        float _4835 = isnan(0.0) ? _2121 : (isnan(_2121) ? 0.0 : max(_2121, 0.0));
        float _2122 = isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0));
        float _2131 = ((((1.0 - _2122) * (_2117 + 2.0)) * exp2(log2(isnan(1.0) ? _4813 : (isnan(_4813) ? 1.0 : min(_4813, 1.0))) * (_2117 + 1.0))) + _2122) * _2087;
        float _2132 = _2055 * 0.5;
        float _2133 = _2065 * 0.5;
        float _2134 = _2075 * 0.5;
        float _2135 = dot(vec3(_2132, _2133, _2134), vec3(_2132, _2133, _2134));
        float _2140 = (_2135 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2135);
        float _2148 = (dot(vec3(_1374, _1375, _1376), vec3(_2140 * _2132, _2140 * _2133, _2140 * _2134)) + 1.0) * 0.5;
        float _4846 = isnan(0.0) ? _2148 : (isnan(_2148) ? 0.0 : max(_2148, 0.0));
        float _2157 = sqrt(((_2133 * _2133) + (_2132 * _2132)) + (_2134 * _2134)) / (_2088 + 9.9999997473787516355514526367188e-06);
        float _4857 = isnan(0.0) ? _2157 : (isnan(_2157) ? 0.0 : max(_2157, 0.0));
        float _2158 = isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0));
        float _2159 = _2158 * 2.0;
        float _2163 = (1.0 - _2158) / (_2158 + 1.0);
        float _4868 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
        float _2164 = isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0));
        float _2173 = ((((1.0 - _2164) * (_2159 + 2.0)) * exp2(log2(isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0))) * (_2159 + 1.0))) + _2164) * _2088;
        float _2174 = _2056 * 0.5;
        float _2175 = _2066 * 0.5;
        float _2176 = _2076 * 0.5;
        float _2177 = dot(vec3(_2174, _2175, _2176), vec3(_2174, _2175, _2176));
        float _2182 = (_2177 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2177);
        float _2190 = (dot(vec3(_1374, _1375, _1376), vec3(_2182 * _2174, _2182 * _2175, _2182 * _2176)) + 1.0) * 0.5;
        float _4879 = isnan(0.0) ? _2190 : (isnan(_2190) ? 0.0 : max(_2190, 0.0));
        float _2199 = sqrt(((_2175 * _2175) + (_2174 * _2174)) + (_2176 * _2176)) / (_2089 + 9.9999997473787516355514526367188e-06);
        float _4890 = isnan(0.0) ? _2199 : (isnan(_2199) ? 0.0 : max(_2199, 0.0));
        float _2200 = isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0));
        float _2201 = _2200 * 2.0;
        float _2205 = (1.0 - _2200) / (_2200 + 1.0);
        float _4901 = isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0));
        float _2206 = isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0));
        float _2215 = ((((1.0 - _2206) * (_2201 + 2.0)) * exp2(log2(isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0))) * (_2201 + 1.0))) + _2206) * _2089;
        _2223 = _2056;
        _2224 = _2055;
        _2225 = _2054;
        _2226 = _2066;
        _2227 = _2065;
        _2228 = _2064;
        _2229 = _2076;
        _2230 = _2075;
        _2231 = _2074;
        _2232 = _2089;
        _2233 = _2088;
        _2234 = _2087;
        _2235 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0)));
        _2236 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2173 : (isnan(_2173) ? 0.0 : max(_2173, 0.0)));
        _2237 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2215 : (isnan(_2215) ? 0.0 : max(_2215, 0.0)));
    }
    else
    {
        _2223 = _1914;
        _2224 = _1914;
        _2225 = _1914;
        _2226 = _1914;
        _2227 = _1914;
        _2228 = _1914;
        _2229 = _1914;
        _2230 = _1914;
        _2231 = _1914;
        _2232 = _1914;
        _2233 = _1914;
        _2234 = _1914;
        _2235 = 0.0;
        _2236 = 0.0;
        _2237 = 0.0;
    }
    float _2247 = (cbModelParam._m0[1u].x * (_2235 - _1926)) + _1926;
    float _2248 = (cbModelParam._m0[1u].x * (_2236 - _1927)) + _1927;
    float _2249 = (cbModelParam._m0[1u].x * (_2237 - _1928)) + _1928;
    float _2270 = fma(_2249, cbSceneParam._m0[89u].z, fma(_2248, cbSceneParam._m0[89u].y, _2247 * cbSceneParam._m0[89u].x));
    float _2273 = fma(_2249, cbSceneParam._m0[90u].z, fma(_2248, cbSceneParam._m0[90u].y, _2247 * cbSceneParam._m0[90u].x));
    float _2276 = fma(_2249, cbSceneParam._m0[91u].z, fma(_2248, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2247));
    float _2291 = _1549 * 0.5;
    float _2292 = _1550 * 0.5;
    float _2293 = _1551 * 0.5;
    float _2294 = dot(vec4(_2291, _2292, _2293, 1.0), vec4(_2225, _2228, _2231, _2234));
    float _2297 = dot(vec4(_2291, _2292, _2293, 1.0), vec4(_2224, _2227, _2230, _2233));
    float _2300 = dot(vec4(_2291, _2292, _2293, 1.0), vec4(_2223, _2226, _2229, _2232));
    float _2334;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2307 = dot(vec4(_2291, _2292, _2293, 1.0), vec4(_1913, _1917, _1920, _1923));
        float _2311 = dot(vec4(_2291, _2292, _2293, 1.0), vec4(_1915, _1918, _1921, _1924));
        float _2315 = dot(vec4(_2291, _2292, _2293, 1.0), vec4(_1916, _1919, _1922, _1925));
        float _2322 = dot(vec4(cbModelParam._m0[39u]), vec4(_2291, _2292, _2293, 1.0));
        _2334 = dot(vec3(isnan(0.0) ? _2315 : (isnan(_2315) ? 0.0 : max(_2315, 0.0)), isnan(0.0) ? _2311 : (isnan(_2311) ? 0.0 : max(_2311, 0.0)), isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : max(_2307, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2322) ? 0.0 : (isnan(0.0) ? _2322 : max(0.0, _2322))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2334 = 1.0;
    }
    float _2345;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2336 = dot(vec4(cbModelParam._m0[40u]), vec4(_2291, _2292, _2293, 1.0));
        _2345 = dot(vec3(isnan(0.0) ? _2294 : (isnan(_2294) ? 0.0 : max(_2294, 0.0)), isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0)), isnan(0.0) ? _2300 : (isnan(_2300) ? 0.0 : max(_2300, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2336) ? 0.0 : (isnan(0.0) ? _2336 : max(0.0, _2336))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2345 = 1.0;
    }
    float _2349 = (_2345 * cbModelParam._m0[1u].x) + (_2334 * (1.0 - cbModelParam._m0[1u].x));
    float _2359 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1378);
    float _2360 = isnan(_2359) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2359 : min(cbModelParam._m0[25u].z, _2359));
    float _2440;
    float _2442;
    float _2444;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2407 = fma(_1612, cbModelParam._m0[13u].z, fma(_1608, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1604)) + cbModelParam._m0[13u].w;
        float _2411 = fma(_1612, cbModelParam._m0[14u].z, fma(_1608, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1604)) + cbModelParam._m0[14u].w;
        float _2415 = fma(_1612, cbModelParam._m0[15u].z, fma(_1608, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1604)) + cbModelParam._m0[15u].w;
        float _2418 = fma(_1551, cbModelParam._m0[13u].z, fma(_1550, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1549));
        float _2421 = fma(_1551, cbModelParam._m0[14u].z, fma(_1550, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1549));
        float _2424 = fma(_1551, cbModelParam._m0[15u].z, fma(_1550, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1549));
        float _2452;
        if (_2418 > 0.0)
        {
            _2452 = abs((1.0 - _2407) / _2418);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_2418 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_2407 + 1.0) / _2418);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _2452 = frontier_phi_16_14_ladder;
        }
        float _2675;
        if (_2421 > 0.0)
        {
            _2675 = abs((1.0 - _2411) / _2421);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2421 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2411 + 1.0) / _2421);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2675 = frontier_phi_25_21_ladder;
        }
        float _2932;
        if (_2424 > 0.0)
        {
            _2932 = abs((1.0 - _2415) / _2424);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2424 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2415 + 1.0) / _2424);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2932 = frontier_phi_37_32_ladder;
        }
        float _2934 = isnan(_2675) ? _2452 : (isnan(_2452) ? _2675 : min(_2452, _2675));
        float _2935 = isnan(_2932) ? _2934 : (isnan(_2934) ? _2932 : min(_2934, _2932));
        float _2939 = (_2935 * _2418) + _2407;
        float _2940 = (_2935 * _2421) + _2411;
        float _2941 = (_2935 * _2424) + _2415;
        float _2942 = _2935 * 9.9999997473787516355514526367188e-05;
        float _2944 = (-1.0) - _2942;
        float _2946 = _2942 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2941 > _2946) || ((_2941 < _2944) || ((_2940 > _2946) || ((_2940 < _2944) || ((_2939 < _2944) || (_2939 > _2946))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3069 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2941, cbModelParam._m0[9u].z, fma(_2940, cbModelParam._m0[9u].y, _2939 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2941, cbModelParam._m0[10u].z, fma(_2940, cbModelParam._m0[10u].y, _2939 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2941, cbModelParam._m0[11u].z, fma(_2940, cbModelParam._m0[11u].y, _2939 * cbModelParam._m0[11u].x))), _2360);
            frontier_phi_15_37_ladder = _3069.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _3069.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _3069.x * cbModelParam._m0[1u].y;
        }
        _2440 = frontier_phi_15_37_ladder_2;
        _2442 = frontier_phi_15_37_ladder_1;
        _2444 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _2428 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1549, _1550, _1551), _2360);
        _2440 = _2428.x * cbModelParam._m0[1u].y;
        _2442 = _2428.y * cbModelParam._m0[1u].y;
        _2444 = _2428.z * cbModelParam._m0[1u].y;
    }
    float _2448 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1378);
    float _2449 = isnan(_2448) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2448 : min(cbModelParam._m0[25u].w, _2448));
    float _2538;
    float _2540;
    float _2542;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2502 = fma(_1612, cbModelParam._m0[21u].z, fma(_1608, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1604)) + cbModelParam._m0[21u].w;
        float _2506 = fma(_1612, cbModelParam._m0[22u].z, fma(_1608, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1604)) + cbModelParam._m0[22u].w;
        float _2510 = fma(_1612, cbModelParam._m0[23u].z, fma(_1608, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1604)) + cbModelParam._m0[23u].w;
        float _2513 = fma(_1551, cbModelParam._m0[21u].z, fma(_1550, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1549));
        float _2516 = fma(_1551, cbModelParam._m0[22u].z, fma(_1550, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1549));
        float _2519 = fma(_1551, cbModelParam._m0[23u].z, fma(_1550, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1549));
        float _2680;
        if (_2513 > 0.0)
        {
            _2680 = abs((1.0 - _2502) / _2513);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_2513 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_2502 + 1.0) / _2513);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2680 = frontier_phi_27_23_ladder;
        }
        float _2959;
        if (_2516 > 0.0)
        {
            _2959 = abs((1.0 - _2506) / _2516);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_2516 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_2506 + 1.0) / _2516);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2959 = frontier_phi_39_34_ladder;
        }
        float _3172;
        if (_2519 > 0.0)
        {
            _3172 = abs((1.0 - _2510) / _2519);
        }
        else
        {
            float frontier_phi_48_45_ladder;
            if (_2519 < 0.0)
            {
                frontier_phi_48_45_ladder = abs((_2510 + 1.0) / _2519);
            }
            else
            {
                frontier_phi_48_45_ladder = 5000.0;
            }
            _3172 = frontier_phi_48_45_ladder;
        }
        float _3174 = isnan(_2959) ? _2680 : (isnan(_2680) ? _2959 : min(_2680, _2959));
        float _3175 = isnan(_3172) ? _3174 : (isnan(_3174) ? _3172 : min(_3174, _3172));
        float _3179 = (_3175 * _2513) + _2502;
        float _3180 = (_3175 * _2516) + _2506;
        float _3181 = (_3175 * _2519) + _2510;
        float _3182 = _3175 * 9.9999997473787516355514526367188e-05;
        float _3183 = (-1.0) - _3182;
        float _3185 = _3182 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_3181 > _3185) || ((_3181 < _3183) || ((_3180 > _3185) || ((_3180 < _3183) || ((_3179 < _3183) || (_3179 > _3185))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3381 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3181, cbModelParam._m0[17u].z, fma(_3180, cbModelParam._m0[17u].y, _3179 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3181, cbModelParam._m0[18u].z, fma(_3180, cbModelParam._m0[18u].y, _3179 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3181, cbModelParam._m0[19u].z, fma(_3180, cbModelParam._m0[19u].y, _3179 * cbModelParam._m0[19u].x))), _2449);
            frontier_phi_24_48_ladder = _3381.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _3381.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _3381.x * cbModelParam._m0[1u].z;
        }
        _2538 = frontier_phi_24_48_ladder_2;
        _2540 = frontier_phi_24_48_ladder_1;
        _2542 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _2522 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1549, _1550, _1551), _2449);
        _2538 = _2522.x * cbModelParam._m0[1u].z;
        _2540 = _2522.y * cbModelParam._m0[1u].z;
        _2542 = _2522.z * cbModelParam._m0[1u].z;
    }
    float _2555 = (((_1575 * _1526) + _1576) * _1541) * ((cbModelParam._m0[1u].w * (_2538 - _2440)) + _2440);
    float _2557 = (((_1575 * _1528) + _1576) * _1541) * ((cbModelParam._m0[1u].w * (_2540 - _2442)) + _2442);
    float _2559 = (((_1575 * _1529) + _1576) * _1541) * ((cbModelParam._m0[1u].w * (_2542 - _2444)) + _2444);
    float _2562 = fma(_2559, cbSceneParam._m0[89u].z, fma(_2557, cbSceneParam._m0[89u].y, _2555 * cbSceneParam._m0[89u].x));
    float _2565 = fma(_2559, cbSceneParam._m0[90u].z, fma(_2557, cbSceneParam._m0[90u].y, _2555 * cbSceneParam._m0[90u].x));
    float _2568 = fma(_2559, cbSceneParam._m0[91u].z, fma(_2557, cbSceneParam._m0[91u].y, _2555 * cbSceneParam._m0[91u].x));
    vec4 _2576 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1463, _1464));
    float _2578 = _2576.w;
    float _2590 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2578);
    float _2591 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2578);
    float _2592 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2578);
    uvec4 _2596 = floatBitsToUint(cbInstanceData._m0[_1501 + 5u]);
    uint _2598 = _2596.x * 14u;
    uint _2599 = _2598 + 13u;
    float _2606 = _1541 + (-1.0);
    float _2611 = (cbLight._m0[_2599].x * _2606) + 1.0;
    float _2612 = (cbLight._m0[_2599].y * _2606) + 1.0;
    float _2613 = (cbLight._m0[_2599].z * _2606) + 1.0;
    float _2614 = (cbLight._m0[_2599].w * _2606) + 1.0;
    uint _2615 = _2598 + 5u;
    float _2621 = isnan(1.0) ? _2612 : (isnan(_2612) ? 1.0 : min(_2612, 1.0));
    uint _2625 = _2598 + 4u;
    float _2634 = isnan(1.0) ? _2611 : (isnan(_2611) ? 1.0 : min(_2611, 1.0));
    uint _2638 = _2598 | 1u;
    float _2649 = dot(vec3(cbLight._m0[_2598].xyz), vec3(_1374, _1375, _1376));
    float _2652 = dot(vec3(cbLight._m0[_2638].xyz), vec3(_1374, _1375, _1376));
    float _5037 = isnan(0.0) ? _2649 : (isnan(_2649) ? 0.0 : max(_2649, 0.0));
    float _5048 = isnan(0.0) ? _2652 : (isnan(_2652) ? 0.0 : max(_2652, 0.0));
    float _2657 = (isnan(1.0) ? _5037 : (isnan(_5037) ? 1.0 : min(_5037, 1.0))) * 0.3183098733425140380859375;
    float _2659 = (isnan(1.0) ? _5048 : (isnan(_5048) ? 1.0 : min(_5048, 1.0))) * 0.3183098733425140380859375;
    float _2666 = ((cbLight._m0[_2615].x * _2621) * _2659) + (((cbLight._m0[_2625].x * _2590) * _2634) * _2657);
    float _2667 = ((_2621 * cbLight._m0[_2615].y) * _2659) + (((cbLight._m0[_2625].y * _2591) * _2634) * _2657);
    float _2668 = ((_2621 * cbLight._m0[_2615].z) * _2659) + (((cbLight._m0[_2625].z * _2592) * _2634) * _2657);
    uvec4 _2672 = floatBitsToUint(cbLight._m0[_2598 + 12u]);
    bool _2674 = _2672.x == 0u;
    float _2685;
    float _2687;
    float _2689;
    if (_2674)
    {
        _2685 = _2666;
        _2687 = _2667;
        _2689 = _2668;
    }
    else
    {
        uint _2693 = _2598 + 6u;
        float _2709 = (dot(vec3(cbLight._m0[_2598 + 2u].xyz), vec3(_1374, _1375, _1376)) * 0.5) + 0.5;
        float _2710 = _2709 * _2709;
        float _5059 = isnan(0.0) ? _2710 : (isnan(_2710) ? 0.0 : max(_2710, 0.0));
        float _2711 = isnan(1.0) ? _5059 : (isnan(_5059) ? 1.0 : min(_5059, 1.0));
        float _2712 = isnan(1.0) ? _2613 : (isnan(_2613) ? 1.0 : min(_2613, 1.0));
        _2685 = (((cbLight._m0[_2693].x * 0.3183098733425140380859375) * _2711) * _2712) + _2666;
        _2687 = (((cbLight._m0[_2693].y * 0.3183098733425140380859375) * _2711) * _2712) + _2667;
        _2689 = (((cbLight._m0[_2693].z * 0.3183098733425140380859375) * _2711) * _2712) + _2668;
    }
    bool _2692 = _2672.y == 0u;
    float _2730;
    float _2732;
    float _2734;
    if (_2692)
    {
        _2730 = _2685;
        _2732 = _2687;
        _2734 = _2689;
    }
    else
    {
        uint _2903 = _2598 + 7u;
        float _2919 = (dot(vec3(cbLight._m0[_2598 + 3u].xyz), vec3(_1374, _1375, _1376)) * 0.5) + 0.5;
        float _2920 = _2919 * _2919;
        float _5075 = isnan(0.0) ? _2920 : (isnan(_2920) ? 0.0 : max(_2920, 0.0));
        float _2921 = isnan(1.0) ? _5075 : (isnan(_5075) ? 1.0 : min(_5075, 1.0));
        float _2922 = isnan(1.0) ? _2614 : (isnan(_2614) ? 1.0 : min(_2614, 1.0));
        _2730 = (((cbLight._m0[_2903].x * 0.3183098733425140380859375) * _2921) * _2922) + _2685;
        _2732 = (((cbLight._m0[_2903].y * 0.3183098733425140380859375) * _2921) * _2922) + _2687;
        _2734 = (((cbLight._m0[_2903].z * 0.3183098733425140380859375) * _2921) * _2922) + _2689;
    }
    uint _2737 = _2598 + 8u;
    float _2750 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2598].w)) * _1378) * 0.949999988079071044921875);
    float _2751 = _2750 * _2750;
    float _2752 = cbLight._m0[_2598].x + _1455;
    float _2753 = cbLight._m0[_2598].y + _1456;
    float _2754 = cbLight._m0[_2598].z + _1457;
    float _2758 = inversesqrt(dot(vec3(_2752, _2753, _2754), vec3(_2752, _2753, _2754)));
    float _2759 = _2758 * _2752;
    float _2760 = _2758 * _2753;
    float _2761 = _2758 * _2754;
    float _2762 = dot(vec3(_1374, _1375, _1376), vec3(cbLight._m0[_2598].xyz));
    float _5091 = isnan(0.0) ? _2762 : (isnan(_2762) ? 0.0 : max(_2762, 0.0));
    float _2765 = isnan(1.0) ? _5091 : (isnan(_5091) ? 1.0 : min(_5091, 1.0));
    float _5102 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
    float _2766 = isnan(1.0) ? _5102 : (isnan(_5102) ? 1.0 : min(_5102, 1.0));
    float _2767 = dot(vec3(_1374, _1375, _1376), vec3(_2759, _2760, _2761));
    float _5113 = isnan(0.0) ? _2767 : (isnan(_2767) ? 0.0 : max(_2767, 0.0));
    float _2770 = isnan(1.0) ? _5113 : (isnan(_5113) ? 1.0 : min(_5113, 1.0));
    float _2771 = dot(vec3(cbLight._m0[_2598].xyz), vec3(_2759, _2760, _2761));
    float _5124 = isnan(0.0) ? _2771 : (isnan(_2771) ? 0.0 : max(_2771, 0.0));
    float _2775 = _2751 * _2751;
    float _2779 = ((_2770 * _2770) * (_2775 + (-1.0))) + 1.0;
    float _2787 = exp2(log2(1.0 - (isnan(1.0) ? _5124 : (isnan(_5124) ? 1.0 : min(_5124, 1.0)))) * 5.0);
    float _2788 = 0.959999978542327880859375 - _1523;
    float _2790 = 0.959999978542327880859375 - _1524;
    float _2791 = 0.959999978542327880859375 - _1525;
    float _2798 = 1.0 - _2751;
    float _2809 = (0.5 / (((_2766 * ((_2765 * _2798) + _2751)) + 9.9999999392252902907785028219223e-09) + (((_2766 * _2798) + _2751) * _2765))) * _2765;
    float _5135 = isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : max(_2809, 0.0));
    float _2811 = (isnan(1.0) ? _5135 : (isnan(_5135) ? 1.0 : min(_5135, 1.0))) * (_2775 / ((_2779 * _2779) * 3.141590118408203125));
    uint _2825 = _2598 + 9u;
    float _2836 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2638].w)) * _1378) * 0.949999988079071044921875);
    float _2837 = _2836 * _2836;
    float _2838 = cbLight._m0[_2638].x + _1455;
    float _2839 = cbLight._m0[_2638].y + _1456;
    float _2840 = cbLight._m0[_2638].z + _1457;
    float _2844 = inversesqrt(dot(vec3(_2838, _2839, _2840), vec3(_2838, _2839, _2840)));
    float _2845 = _2844 * _2838;
    float _2846 = _2844 * _2839;
    float _2847 = _2844 * _2840;
    float _2848 = dot(vec3(_1374, _1375, _1376), vec3(cbLight._m0[_2638].xyz));
    float _5146 = isnan(0.0) ? _2848 : (isnan(_2848) ? 0.0 : max(_2848, 0.0));
    float _2851 = isnan(1.0) ? _5146 : (isnan(_5146) ? 1.0 : min(_5146, 1.0));
    float _2852 = dot(vec3(_1374, _1375, _1376), vec3(_2845, _2846, _2847));
    float _5157 = isnan(0.0) ? _2852 : (isnan(_2852) ? 0.0 : max(_2852, 0.0));
    float _2855 = isnan(1.0) ? _5157 : (isnan(_5157) ? 1.0 : min(_5157, 1.0));
    float _2856 = dot(vec3(cbLight._m0[_2638].xyz), vec3(_2845, _2846, _2847));
    float _5168 = isnan(0.0) ? _2856 : (isnan(_2856) ? 0.0 : max(_2856, 0.0));
    float _2860 = _2837 * _2837;
    float _2864 = ((_2855 * _2855) * (_2860 + (-1.0))) + 1.0;
    float _2871 = exp2(log2(1.0 - (isnan(1.0) ? _5168 : (isnan(_5168) ? 1.0 : min(_5168, 1.0)))) * 5.0);
    float _2878 = 1.0 - _2837;
    float _2888 = (0.5 / (((_2766 * ((_2851 * _2878) + _2837)) + 9.9999999392252902907785028219223e-09) + (((_2766 * _2878) + _2837) * _2851))) * _2851;
    float _5179 = isnan(0.0) ? _2888 : (isnan(_2888) ? 0.0 : max(_2888, 0.0));
    float _2890 = (isnan(1.0) ? _5179 : (isnan(_5179) ? 1.0 : min(_5179, 1.0))) * (_2860 / ((_2864 * _2864) * 3.141590118408203125));
    float _2900 = (((((_2871 * _2788) + _1526) * cbLight._m0[_2825].x) * _2890) * _2621) + ((((cbLight._m0[_2737].x * _2590) * ((_2787 * _2788) + _1526)) * _2811) * _2634);
    float _2901 = (((((_2871 * _2790) + _1528) * cbLight._m0[_2825].y) * _2890) * _2621) + ((((cbLight._m0[_2737].y * _2591) * ((_2787 * _2790) + _1528)) * _2811) * _2634);
    float _2902 = (((((_2871 * _2791) + _1529) * cbLight._m0[_2825].z) * _2890) * _2621) + ((((cbLight._m0[_2737].z * _2592) * ((_2787 * _2791) + _1529)) * _2811) * _2634);
    float _2964;
    float _2966;
    float _2968;
    if (_2674)
    {
        _2964 = _2900;
        _2966 = _2901;
        _2968 = _2902;
    }
    else
    {
        uint _2970 = _2598 + 2u;
        uint _2974 = _2598 + 10u;
        float _2988 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2970].w)) * _1378) * 0.949999988079071044921875);
        float _2989 = _2988 * _2988;
        float _2990 = cbLight._m0[_2970].x + _1455;
        float _2991 = cbLight._m0[_2970].y + _1456;
        float _2992 = cbLight._m0[_2970].z + _1457;
        float _2996 = inversesqrt(dot(vec3(_2990, _2991, _2992), vec3(_2990, _2991, _2992)));
        float _2997 = _2996 * _2990;
        float _2998 = _2996 * _2991;
        float _2999 = _2996 * _2992;
        float _3000 = dot(vec3(_1374, _1375, _1376), vec3(cbLight._m0[_2970].xyz));
        float _5190 = isnan(0.0) ? _3000 : (isnan(_3000) ? 0.0 : max(_3000, 0.0));
        float _3003 = isnan(1.0) ? _5190 : (isnan(_5190) ? 1.0 : min(_5190, 1.0));
        float _3004 = dot(vec3(_1374, _1375, _1376), vec3(_2997, _2998, _2999));
        float _5201 = isnan(0.0) ? _3004 : (isnan(_3004) ? 0.0 : max(_3004, 0.0));
        float _3007 = isnan(1.0) ? _5201 : (isnan(_5201) ? 1.0 : min(_5201, 1.0));
        float _3008 = dot(vec3(cbLight._m0[_2970].xyz), vec3(_2997, _2998, _2999));
        float _5212 = isnan(0.0) ? _3008 : (isnan(_3008) ? 0.0 : max(_3008, 0.0));
        float _3012 = _2989 * _2989;
        float _3016 = ((_3007 * _3007) * (_3012 + (-1.0))) + 1.0;
        float _3023 = exp2(log2(1.0 - (isnan(1.0) ? _5212 : (isnan(_5212) ? 1.0 : min(_5212, 1.0)))) * 5.0);
        float _3030 = 1.0 - _2989;
        float _3040 = (0.5 / (((_2766 * ((_3003 * _3030) + _2989)) + 9.9999999392252902907785028219223e-09) + (((_2766 * _3030) + _2989) * _3003))) * _3003;
        float _5223 = isnan(0.0) ? _3040 : (isnan(_3040) ? 0.0 : max(_3040, 0.0));
        float _3042 = (isnan(1.0) ? _5223 : (isnan(_5223) ? 1.0 : min(_5223, 1.0))) * (_3012 / ((_3016 * _3016) * 3.141590118408203125));
        float _3043 = isnan(1.0) ? _2613 : (isnan(_2613) ? 1.0 : min(_2613, 1.0));
        _2964 = (((((_3023 * _2788) + _1526) * cbLight._m0[_2974].x) * _3042) * _3043) + _2900;
        _2966 = (((((_3023 * _2790) + _1528) * cbLight._m0[_2974].y) * _3042) * _3043) + _2901;
        _2968 = (((((_3023 * _2791) + _1529) * cbLight._m0[_2974].z) * _3042) * _3043) + _2902;
    }
    float _3078;
    float _3080;
    float _3082;
    if (_2692)
    {
        _3078 = _2964;
        _3080 = _2966;
        _3082 = _2968;
    }
    else
    {
        uint _3089 = _2598 + 3u;
        uint _3093 = _2598 + 11u;
        float _3107 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3089].w)) * _1378) * 0.949999988079071044921875);
        float _3108 = _3107 * _3107;
        float _3109 = cbLight._m0[_3089].x + _1455;
        float _3110 = cbLight._m0[_3089].y + _1456;
        float _3111 = cbLight._m0[_3089].z + _1457;
        float _3115 = inversesqrt(dot(vec3(_3109, _3110, _3111), vec3(_3109, _3110, _3111)));
        float _3116 = _3115 * _3109;
        float _3117 = _3115 * _3110;
        float _3118 = _3115 * _3111;
        float _3119 = dot(vec3(_1374, _1375, _1376), vec3(cbLight._m0[_3089].xyz));
        float _5239 = isnan(0.0) ? _3119 : (isnan(_3119) ? 0.0 : max(_3119, 0.0));
        float _3122 = isnan(1.0) ? _5239 : (isnan(_5239) ? 1.0 : min(_5239, 1.0));
        float _3123 = dot(vec3(_1374, _1375, _1376), vec3(_3116, _3117, _3118));
        float _5250 = isnan(0.0) ? _3123 : (isnan(_3123) ? 0.0 : max(_3123, 0.0));
        float _3126 = isnan(1.0) ? _5250 : (isnan(_5250) ? 1.0 : min(_5250, 1.0));
        float _3127 = dot(vec3(cbLight._m0[_3089].xyz), vec3(_3116, _3117, _3118));
        float _5261 = isnan(0.0) ? _3127 : (isnan(_3127) ? 0.0 : max(_3127, 0.0));
        float _3131 = _3108 * _3108;
        float _3135 = ((_3126 * _3126) * (_3131 + (-1.0))) + 1.0;
        float _3142 = exp2(log2(1.0 - (isnan(1.0) ? _5261 : (isnan(_5261) ? 1.0 : min(_5261, 1.0)))) * 5.0);
        float _3149 = 1.0 - _3108;
        float _3159 = (0.5 / (((_2766 * ((_3122 * _3149) + _3108)) + 9.9999999392252902907785028219223e-09) + (((_2766 * _3149) + _3108) * _3122))) * _3122;
        float _5272 = isnan(0.0) ? _3159 : (isnan(_3159) ? 0.0 : max(_3159, 0.0));
        float _3161 = (isnan(1.0) ? _5272 : (isnan(_5272) ? 1.0 : min(_5272, 1.0))) * (_3131 / ((_3135 * _3135) * 3.141590118408203125));
        float _3162 = isnan(1.0) ? _2614 : (isnan(_2614) ? 1.0 : min(_2614, 1.0));
        _3078 = (((((_3142 * _2788) + _1526) * cbLight._m0[_3093].x) * _3161) * _3162) + _2964;
        _3080 = (((((_3142 * _2790) + _1528) * cbLight._m0[_3093].y) * _3161) * _3162) + _2966;
        _3082 = (((((_3142 * _2791) + _1529) * cbLight._m0[_3093].z) * _3161) * _3162) + _2968;
    }
    float _3296;
    float _3298;
    float _3300;
    float _3302;
    float _3304;
    float _3306;
    if (_2596.y == 0u)
    {
        float _3237 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _3238 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _3237;
        float _3239 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _3237;
        float _3240 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _3237;
        uvec4 _3252 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3253 = _3252.x;
        uint _3264 = uint((float(_3252.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1464) / _3253))) + floor(float(uint(cbSceneParam._m0[85u].x * _1463) / _3253)));
        float _3274 = (log2(_3240 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3275 = isnan(0.0) ? _3274 : (isnan(_3274) ? 0.0 : max(_3274, 0.0));
        uint _3278 = uint(isnan(14.0) ? _3275 : (isnan(_3275) ? 14.0 : min(_3275, 14.0)));
        uvec4 _3283 = texelFetch(g_lightClusterGridBuffer, int(((_3278 << 2u) + (_3264 << 6u)) >> 2u));
        uint _3284 = _3283.x;
        uint _3285 = _3252.z;
        float _3386;
        float _3388;
        float _3390;
        float _3392;
        float _3394;
        float _3396;
        if (((((1u << ((_3285 >> 4u) & 15u)) + 4294967295u) & _3284) == 0u) || ((_3285 & 240u) == 0u))
        {
            _3386 = 0.0;
            _3388 = 0.0;
            _3390 = 0.0;
            _3392 = 0.0;
            _3394 = 0.0;
            _3396 = 0.0;
        }
        else
        {
            float _3387;
            float _3389;
            float _3391;
            float _3393;
            float _3395;
            float _3397;
            float _3530 = 0.0;
            float _3531 = 0.0;
            float _3532 = 0.0;
            float _3533 = 0.0;
            float _3534 = 0.0;
            float _3535 = 0.0;
            uint _3536 = 0u;
            uint _3545;
            bool _3546;
            for (;;)
            {
                _3545 = texelFetch(g_lightClassification, int((((_3278 << 5u) + (_3264 << 9u)) + (_3536 << 2u)) >> 2u)).x;
                _3546 = _3545 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_3546)
                {
                    frontier_phi_63_pred = _3535;
                    frontier_phi_63_pred_1 = _3534;
                    frontier_phi_63_pred_2 = _3533;
                    frontier_phi_63_pred_3 = _3532;
                    frontier_phi_63_pred_4 = _3531;
                    frontier_phi_63_pred_5 = _3530;
                }
                else
                {
                    float _3654;
                    float _3655;
                    float _3656;
                    float _3657;
                    float _3658;
                    float _3659;
                    uint _3660;
                    _3654 = _3530;
                    _3655 = _3531;
                    _3656 = _3532;
                    _3657 = _3533;
                    _3658 = _3534;
                    _3659 = _3535;
                    _3660 = _3545;
                    float _3586;
                    float _3587;
                    float _3588;
                    float _3589;
                    float _3590;
                    float _3591;
                    for (;;)
                    {
                        uint _3664 = uint(findLSB(_3660)) + (_3536 << 5u);
                        uint _3661 = (_3660 + 4294967295u) & _3660;
                        uint _3666 = _3664 * 48u;
                        vec4 _3680 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3666)).x, texelFetch(g_PointLightRenderingBuffer, int(_3666 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3666 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3666 + 3u)).x));
                        uint _3686 = (_3664 * 48u) + 4u;
                        vec4 _3699 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3686)).x, texelFetch(g_PointLightRenderingBuffer, int(_3686 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3686 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3686 + 3u)).x));
                        uint _3705 = (_3664 * 48u) + 8u;
                        vec3 _3716 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3705)).x, texelFetch(g_PointLightRenderingBuffer, int(_3705 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3705 + 2u)).x));
                        float _3720 = _3680.x - _3238;
                        float _3721 = _3680.y - _3239;
                        float _3722 = _3680.z - _3240;
                        float _3723 = dot(vec3(_3720, _3721, _3722), vec3(_3720, _3721, _3722));
                        float _3726 = inversesqrt(_3723);
                        float _3727 = _3726 * _3720;
                        float _3728 = _3726 * _3721;
                        float _3729 = _3726 * _3722;
                        float _3730 = dot(vec3(_1482, _1485, _1488), vec3(_3727, _3728, _3729));
                        float _3735 = 1.0 - (_3723 * _3680.w);
                        float _5298 = isnan(0.0) ? _3735 : (isnan(_3735) ? 0.0 : max(_3735, 0.0));
                        float _3736 = isnan(1.0) ? _5298 : (isnan(_5298) ? 1.0 : min(_5298, 1.0));
                        float _3737 = sqrt(_3723) * _3699.w;
                        float _3739 = 1.39999997615814208984375 / (_3737 + 1.39999997615814208984375);
                        float _3740 = _3739 * _3739;
                        float _3743 = ((1.0 - _3740) * _3730) + _3740;
                        float _3746 = _3737 * _3737;
                        float _3750 = ((isnan(0.0) ? _3743 : (isnan(_3743) ? 0.0 : max(_3743, 0.0))) * _3736) / ((_3746 * 0.699999988079071044921875) + 1.0);
                        float _3754 = (-0.0) - _3238;
                        float _3755 = (-0.0) - _3239;
                        float _3756 = (-0.0) - _3240;
                        float _3760 = inversesqrt(dot(vec3(_3754, _3755, _3756), vec3(_3754, _3755, _3756)));
                        float _3761 = _3760 * _3754;
                        float _3762 = _3760 * _3755;
                        float _3763 = _3760 * _3756;
                        float _3771 = exp2(log2(1.0 / ((_3746 * 3.5) + 5.0)) * 0.25);
                        float _3772 = 1.0 - _1557;
                        float _3779 = sqrt(1.0 - ((1.0 - (_3772 * _3772)) * (1.0 - (_3771 * _3771))));
                        float _3780 = _3779 * _3779;
                        float _3781 = _3780 * _3780;
                        float _3782 = _3761 + _3727;
                        float _3783 = _3762 + _3728;
                        float _3784 = _3763 + _3729;
                        float _3788 = inversesqrt(dot(vec3(_3782, _3783, _3784), vec3(_3782, _3783, _3784)));
                        float _3792 = dot(vec3(_1482, _1485, _1488), vec3(_3761, _3762, _3763));
                        float _5314 = isnan(0.0) ? _3792 : (isnan(_3792) ? 0.0 : max(_3792, 0.0));
                        float _3795 = isnan(1.0) ? _5314 : (isnan(_5314) ? 1.0 : min(_5314, 1.0));
                        float _3796 = dot(vec3(_1482, _1485, _1488), vec3(_3788 * _3782, _3788 * _3783, _3788 * _3784));
                        float _5325 = isnan(0.0) ? _3796 : (isnan(_3796) ? 0.0 : max(_3796, 0.0));
                        float _3799 = isnan(1.0) ? _5325 : (isnan(_5325) ? 1.0 : min(_5325, 1.0));
                        float _3803 = ((_3799 * _3799) * (_3781 + (-1.0))) + 1.0;
                        float _3804 = _3739 * _3780;
                        float _3805 = _3804 * _3804;
                        float _3808 = ((1.0 - _3805) * _3730) + _3805;
                        float _5336 = isnan(0.0) ? _3808 : (isnan(_3808) ? 0.0 : max(_3808, 0.0));
                        float _3809 = isnan(1.0) ? _5336 : (isnan(_5336) ? 1.0 : min(_5336, 1.0));
                        float _3810 = 1.0 - _3780;
                        float _3820 = (0.5 / (((_3809 * ((_3795 * _3810) + _3780)) + 9.9999999392252902907785028219223e-09) + (((_3809 * _3810) + _3780) * _3795))) * _3809;
                        float _5347 = isnan(0.0) ? _3820 : (isnan(_3820) ? 0.0 : max(_3820, 0.0));
                        float _3831 = (((_3781 * 3.1415927410125732421875) * (isnan(1.0) ? _5347 : (isnan(_5347) ? 1.0 : min(_5347, 1.0)))) / ((_3803 * _3803) * ((_3746 * 2.1991131305694580078125) + 3.141590118408203125))) * _3736;
                        _3589 = (_3750 * _3699.x) + _3657;
                        _3590 = (_3750 * _3699.y) + _3658;
                        _3591 = (_3750 * _3699.z) + _3659;
                        _3586 = (_3831 * _3716.x) + _3654;
                        _3587 = (_3831 * _3716.y) + _3655;
                        _3588 = (_3831 * _3716.z) + _3656;
                        if (_3661 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3654 = _3586;
                            _3655 = _3587;
                            _3656 = _3588;
                            _3657 = _3589;
                            _3658 = _3590;
                            _3659 = _3591;
                            _3660 = _3661;
                        }
                    }
                    frontier_phi_63_pred = _3591;
                    frontier_phi_63_pred_1 = _3590;
                    frontier_phi_63_pred_2 = _3589;
                    frontier_phi_63_pred_3 = _3588;
                    frontier_phi_63_pred_4 = _3587;
                    frontier_phi_63_pred_5 = _3586;
                }
                _3397 = frontier_phi_63_pred;
                _3395 = frontier_phi_63_pred_1;
                _3393 = frontier_phi_63_pred_2;
                _3391 = frontier_phi_63_pred_3;
                _3389 = frontier_phi_63_pred_4;
                _3387 = frontier_phi_63_pred_5;
                uint _3537 = _3536 + 1u;
                if (_3537 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3530 = _3387;
                    _3531 = _3389;
                    _3532 = _3391;
                    _3533 = _3393;
                    _3534 = _3395;
                    _3535 = _3397;
                    _3536 = _3537;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3386 = _3387;
            _3388 = _3389;
            _3390 = _3391;
            _3392 = _3393;
            _3394 = _3395;
            _3396 = _3397;
        }
        uvec4 _3400 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3401 = _3400.z;
        uint _3403 = (_3401 >> 8u) & 15u;
        float _3498;
        float _3500;
        float _3502;
        float _3504;
        float _3506;
        float _3508;
        if (((4294967295u << _3403) & _3284) == 0u)
        {
            _3498 = _3386;
            _3500 = _3388;
            _3502 = _3390;
            _3504 = _3392;
            _3506 = _3394;
            _3508 = _3396;
        }
        else
        {
            float _3523 = inversesqrt(dot(vec3(_3238, _3239, _3240), vec3(_3238, _3239, _3240)));
            float _3524 = _3523 * _3238;
            float _3525 = _3523 * _3239;
            float _3526 = _3523 * _3240;
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_3403 < ((_3401 >> 12u) & 15u))
            {
                float _3499;
                float _3501;
                float _3503;
                float _3505;
                float _3507;
                float _3509;
                float _3637 = _3386;
                float _3638 = _3388;
                float _3639 = _3390;
                float _3640 = _3392;
                float _3641 = _3394;
                float _3642 = _3396;
                uint _3643 = _3403;
                uint _3652;
                bool _3653;
                for (;;)
                {
                    _3652 = texelFetch(g_lightClassification, int((((_3278 << 5u) + (_3264 << 9u)) + (_3643 << 2u)) >> 2u)).x;
                    _3653 = _3652 == 0u;
                    float frontier_phi_69_pred;
                    float frontier_phi_69_pred_1;
                    float frontier_phi_69_pred_2;
                    float frontier_phi_69_pred_3;
                    float frontier_phi_69_pred_4;
                    float frontier_phi_69_pred_5;
                    if (_3653)
                    {
                        frontier_phi_69_pred = _3642;
                        frontier_phi_69_pred_1 = _3641;
                        frontier_phi_69_pred_2 = _3640;
                        frontier_phi_69_pred_3 = _3639;
                        frontier_phi_69_pred_4 = _3638;
                        frontier_phi_69_pred_5 = _3637;
                    }
                    else
                    {
                        float _3836;
                        float _3837;
                        float _3838;
                        float _3839;
                        float _3840;
                        float _3841;
                        float _4129;
                        float _4130;
                        float _4131;
                        float _4132;
                        float _4133;
                        float _4134;
                        float _3849 = _3637;
                        float _3850 = _3638;
                        float _3851 = _3639;
                        float _3852 = _3640;
                        float _3853 = _3641;
                        float _3854 = _3642;
                        uint _3855 = _3652;
                        uint _3856;
                        vec4 _3881;
                        float _3882;
                        vec4 _3897;
                        vec3 _3909;
                        vec4 _3924;
                        vec4 _3939;
                        float _3985;
                        bool _3986;
                        for (;;)
                        {
                            uint _3866 = ((_3643 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3855));
                            _3856 = (_3855 + 4294967295u) & _3855;
                            uint _3868 = _3866 * 40u;
                            _3881 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3868)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3868 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3868 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3868 + 3u)).x));
                            _3882 = _3881.w;
                            uint _3884 = (_3866 * 40u) + 4u;
                            _3897 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3884)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3884 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3884 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3884 + 3u)).x));
                            uint _3899 = (_3866 * 40u) + 8u;
                            _3909 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3899)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3899 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3899 + 2u)).x));
                            uint _3911 = (_3866 * 40u) + 16u;
                            _3924 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3911)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3911 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3911 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3911 + 3u)).x));
                            uint _3926 = (_3866 * 40u) + 20u;
                            _3939 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3926)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3926 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3926 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3926 + 3u)).x));
                            uint _3941 = (_3866 * 40u) + 24u;
                            vec4 _3954 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3941)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3941 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3941 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3941 + 3u)).x));
                            uint _3960 = (_3866 * 40u) + 28u;
                            vec4 _3973 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3960)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3960 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3960 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3960 + 3u)).x));
                            _3985 = fma(_3240, _3973.z, fma(_3239, _3973.y, _3973.x * _3238)) + _3973.w;
                            _3986 = !((fma(_3240, _3954.z, fma(_3239, _3954.y, _3954.x * _3238)) + _3954.w) <= 0.0);
                            float frontier_phi_75_pred;
                            float frontier_phi_75_pred_1;
                            float frontier_phi_75_pred_2;
                            float frontier_phi_75_pred_3;
                            float frontier_phi_75_pred_4;
                            float frontier_phi_75_pred_5;
                            if (_3986)
                            {
                                float _4013 = _3881.x - _3238;
                                float _4014 = _3881.y - _3239;
                                float _4015 = _3881.z - _3240;
                                float _4016 = dot(vec3(_4013, _4014, _4015), vec3(_4013, _4014, _4015));
                                float _4019 = inversesqrt(_4016);
                                float _4020 = _4019 * _4013;
                                float _4021 = _4019 * _4014;
                                float _4022 = _4019 * _4015;
                                float _4026 = 1.0 - (_4016 / (_3882 * _3882));
                                float _5358 = isnan(0.0) ? _4026 : (isnan(_4026) ? 0.0 : max(_4026, 0.0));
                                float _4027 = isnan(1.0) ? _5358 : (isnan(_5358) ? 1.0 : min(_5358, 1.0));
                                float _4031 = sqrt(_4016) * _3897.w;
                                float _4033 = 1.39999997615814208984375 / (_4031 + 1.39999997615814208984375);
                                float _4034 = _4033 * _4033;
                                float _4037 = ((1.0 - _4034) * dot(vec3(_4020, _4021, _4022), vec3(_1482, _1485, _1488))) + _4034;
                                float _4040 = _4031 * _4031;
                                float _4044 = (fma(_3240, _3924.z, fma(_3239, _3924.y, _3924.x * _3238)) + _3924.w) / _3985;
                                float _4045 = (fma(_3240, _3939.z, fma(_3239, _3939.y, _3939.x * _3238)) + _3939.w) / _3985;
                                float _4049 = 1.0 - dot(vec2(_4044, _4045), vec2(_4044, _4045));
                                float _5374 = isnan(0.0) ? _4049 : (isnan(_4049) ? 0.0 : max(_4049, 0.0));
                                float _4050 = isnan(1.0) ? _5374 : (isnan(_5374) ? 1.0 : min(_5374, 1.0));
                                float _4051 = _4050 * (((isnan(0.0) ? _4037 : (isnan(_4037) ? 0.0 : max(_4037, 0.0))) * _4027) / ((_4040 * 0.699999988079071044921875) + 1.0));
                                float _4063 = exp2(log2(1.0 / ((_4040 * 3.5) + 5.0)) * 0.25);
                                float _4064 = 1.0 - _1557;
                                float _4071 = sqrt(1.0 - ((1.0 - (_4064 * _4064)) * (1.0 - (_4063 * _4063))));
                                float _4072 = _4071 * _4071;
                                float _4073 = _4072 * _4072;
                                float _4074 = _4020 - _3524;
                                float _4075 = _4021 - _3525;
                                float _4076 = _4022 - _3526;
                                float _4080 = inversesqrt(dot(vec3(_4074, _4075, _4076), vec3(_4074, _4075, _4076)));
                                float _4084 = dot(vec3(_1482, _1485, _1488), vec3((-0.0) - _3524, (-0.0) - _3525, (-0.0) - _3526));
                                float _5385 = isnan(0.0) ? _4084 : (isnan(_4084) ? 0.0 : max(_4084, 0.0));
                                float _4087 = isnan(1.0) ? _5385 : (isnan(_5385) ? 1.0 : min(_5385, 1.0));
                                float _4088 = dot(vec3(_1482, _1485, _1488), vec3(_4080 * _4074, _4080 * _4075, _4080 * _4076));
                                float _5396 = isnan(0.0) ? _4088 : (isnan(_4088) ? 0.0 : max(_4088, 0.0));
                                float _4091 = isnan(1.0) ? _5396 : (isnan(_5396) ? 1.0 : min(_5396, 1.0));
                                float _4095 = ((_4091 * _4091) * (_4073 + (-1.0))) + 1.0;
                                float _4096 = _4033 * _4072;
                                float _4097 = _4096 * _4096;
                                float _4103 = ((1.0 - _4097) * dot(vec3(_1482, _1485, _1488), vec3(_4020, _4021, _4022))) + _4097;
                                float _5407 = isnan(0.0) ? _4103 : (isnan(_4103) ? 0.0 : max(_4103, 0.0));
                                float _4104 = isnan(1.0) ? _5407 : (isnan(_5407) ? 1.0 : min(_5407, 1.0));
                                float _4105 = 1.0 - _4072;
                                float _4115 = (0.5 / (((_4104 * ((_4087 * _4105) + _4072)) + 9.9999999392252902907785028219223e-09) + (((_4104 * _4105) + _4072) * _4087))) * _4104;
                                float _5418 = isnan(0.0) ? _4115 : (isnan(_4115) ? 0.0 : max(_4115, 0.0));
                                float _4125 = (_4050 * _4027) * (((_4073 * 3.1415927410125732421875) * (isnan(1.0) ? _5418 : (isnan(_5418) ? 1.0 : min(_5418, 1.0)))) / ((_4095 * _4095) * ((_4040 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_75_pred = _4051 * _3897.z;
                                frontier_phi_75_pred_1 = _4051 * _3897.y;
                                frontier_phi_75_pred_2 = _4051 * _3897.x;
                                frontier_phi_75_pred_3 = _4125 * _3909.z;
                                frontier_phi_75_pred_4 = _4125 * _3909.y;
                                frontier_phi_75_pred_5 = _4125 * _3909.x;
                            }
                            else
                            {
                                frontier_phi_75_pred = 0.0;
                                frontier_phi_75_pred_1 = 0.0;
                                frontier_phi_75_pred_2 = 0.0;
                                frontier_phi_75_pred_3 = 0.0;
                                frontier_phi_75_pred_4 = 0.0;
                                frontier_phi_75_pred_5 = 0.0;
                            }
                            _4134 = frontier_phi_75_pred;
                            _4133 = frontier_phi_75_pred_1;
                            _4132 = frontier_phi_75_pred_2;
                            _4131 = frontier_phi_75_pred_3;
                            _4130 = frontier_phi_75_pred_4;
                            _4129 = frontier_phi_75_pred_5;
                            _3839 = _4132 + _3852;
                            _3840 = _4133 + _3853;
                            _3841 = _4134 + _3854;
                            _3836 = _4129 + _3849;
                            _3837 = _4130 + _3850;
                            _3838 = _4131 + _3851;
                            if (_3856 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3849 = _3836;
                                _3850 = _3837;
                                _3851 = _3838;
                                _3852 = _3839;
                                _3853 = _3840;
                                _3854 = _3841;
                                _3855 = _3856;
                                continue;
                            }
                        }
                        frontier_phi_69_pred = _3841;
                        frontier_phi_69_pred_1 = _3840;
                        frontier_phi_69_pred_2 = _3839;
                        frontier_phi_69_pred_3 = _3838;
                        frontier_phi_69_pred_4 = _3837;
                        frontier_phi_69_pred_5 = _3836;
                    }
                    _3509 = frontier_phi_69_pred;
                    _3507 = frontier_phi_69_pred_1;
                    _3505 = frontier_phi_69_pred_2;
                    _3503 = frontier_phi_69_pred_3;
                    _3501 = frontier_phi_69_pred_4;
                    _3499 = frontier_phi_69_pred_5;
                    uint _3644 = _3643 + 1u;
                    if (_3644 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3637 = _3499;
                        _3638 = _3501;
                        _3639 = _3503;
                        _3640 = _3505;
                        _3641 = _3507;
                        _3642 = _3509;
                        _3643 = _3644;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _3509;
                frontier_phi_57_58_ladder_1 = _3507;
                frontier_phi_57_58_ladder_2 = _3505;
                frontier_phi_57_58_ladder_3 = _3503;
                frontier_phi_57_58_ladder_4 = _3501;
                frontier_phi_57_58_ladder_5 = _3499;
            }
            else
            {
                frontier_phi_57_58_ladder = _3396;
                frontier_phi_57_58_ladder_1 = _3394;
                frontier_phi_57_58_ladder_2 = _3392;
                frontier_phi_57_58_ladder_3 = _3390;
                frontier_phi_57_58_ladder_4 = _3388;
                frontier_phi_57_58_ladder_5 = _3386;
            }
            _3498 = frontier_phi_57_58_ladder_5;
            _3500 = frontier_phi_57_58_ladder_4;
            _3502 = frontier_phi_57_58_ladder_3;
            _3504 = frontier_phi_57_58_ladder_2;
            _3506 = frontier_phi_57_58_ladder_1;
            _3508 = frontier_phi_57_58_ladder;
        }
        float _3513 = isnan(1.0) ? _1541 : (isnan(_1541) ? 1.0 : min(_1541, 1.0));
        _3296 = (_3513 * _3504) + _2730;
        _3298 = (_3513 * _3506) + _2732;
        _3300 = (_3513 * _3508) + _2734;
        _3302 = ((_3498 * _1526) * _3513) + _3078;
        _3304 = ((_3500 * _1528) * _3513) + _3080;
        _3306 = ((_3502 * _1529) * _3513) + _3082;
    }
    else
    {
        _3296 = _2730;
        _3298 = _2732;
        _3300 = _2734;
        _3302 = _3078;
        _3304 = _3080;
        _3306 = _3082;
    }
    float _5434 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
    float _5445 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
    float _5456 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
    float _5467 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
    float _3331 = cbInstanceData._m0[_1501 + 6u].w * (isnan(1.0) ? _5467 : (isnan(_5467) ? 1.0 : min(_5467, 1.0)));
    float _3336 = _1463 / cbSceneParam._m0[86u].x;
    float _3337 = _1464 / cbSceneParam._m0[86u].y;
    vec4 _3351 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3336, _3337, (log2((isnan(cbSceneParam._m0[77u].w) ? _1398 : (isnan(_1398) ? cbSceneParam._m0[77u].w : min(_1398, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3353 = _3351.x;
    float _3354 = _3351.y;
    float _3355 = _3351.z;
    float _3356 = _3351.w;
    float _3448;
    float _3450;
    float _3452;
    float _3454;
    if (_1398 > cbSceneParam._m0[78u].w)
    {
        float _3411 = isnan(_1398) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1398 : min(cbSceneParam._m0[80u].w, _1398));
        float _3412 = _3411 / _1398;
        float _3423 = _3412 * _1448;
        float _3424 = _1449 * _3412;
        float _3425 = (-0.0) - _3424;
        float _3426 = _3412 * _1450;
        float _3428 = (cbSceneParam._m0[77u].w * _3425) / _3411;
        float _3429 = _3428 + cbSceneParam._m0[79u].w;
        float _3430 = cbSceneParam._m0[79u].w - _3424;
        float _3436 = sqrt(((_3423 * _3423) + (_3424 * _3424)) + (_3426 * _3426));
        float _3439 = (1.0 - (cbSceneParam._m0[77u].w / _3411)) * _3436;
        float _3444 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3446 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3599;
        if (abs((_3425 - _3428) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3599 = ((((_3429 > 0.0) ? exp2(_3444 * _3429) : (2.0 - exp2(_3446 * _3429))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3439;
        }
        else
        {
            float _3559 = 1.0 / cbSceneParam._m0[80u].x;
            float _3560 = isnan(_3430) ? _3429 : (isnan(_3429) ? _3430 : max(_3429, _3430));
            float _3561 = isnan(_3430) ? _3429 : (isnan(_3429) ? _3430 : min(_3429, _3430));
            float _3570 = isnan(0.0) ? _3560 : (isnan(_3560) ? 0.0 : min(_3560, 0.0));
            float _3571 = isnan(0.0) ? _3561 : (isnan(_3561) ? 0.0 : min(_3561, 0.0));
            _3599 = ((abs(_3436 / _3425) * cbSceneParam._m0[80u].y) * ((((_3570 - _3571) * 2.0) - ((exp2(_3444 * (isnan(0.0) ? _3560 : (isnan(_3560) ? 0.0 : max(_3560, 0.0)))) - exp2(_3444 * (isnan(0.0) ? _3561 : (isnan(_3561) ? 0.0 : max(_3561, 0.0))))) * _3559)) - ((exp2(_3446 * _3570) - exp2(_3446 * _3571)) * _3559))) + (_3439 * cbSceneParam._m0[80u].z);
        }
        vec4 _3601 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3336, _3337, 1.0), 0.0);
        float _3610 = exp2((_3599 * (-1.44269502162933349609375)) * (1.0 - _3601.w));
        float _3611 = log2(_3610);
        float _3627 = log2(_3356);
        _3448 = (exp2(_3627 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3611 * cbSceneParam._m0[78u].x)) * _3601.x) / cbSceneParam._m0[78u].x)) + _3353;
        _3450 = (exp2(_3627 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3611 * cbSceneParam._m0[78u].y)) * _3601.y) / cbSceneParam._m0[78u].y)) + _3354;
        _3452 = (exp2(_3627 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3611 * cbSceneParam._m0[78u].z)) * _3601.z) / cbSceneParam._m0[78u].z)) + _3355;
        _3454 = _3610 * _3356;
    }
    else
    {
        _3448 = _3353;
        _3450 = _3354;
        _3452 = _3355;
        _3454 = _3356;
    }
    float _3466 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3467 = _3466 == 3.0;
    float _3468 = log2(_3454);
    float _3475 = exp2(_3468 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5434 : (isnan(_5434) ? 1.0 : min(_5434, 1.0))) * (_3296 + ((isnan(0.0) ? _2270 : (isnan(_2270) ? 0.0 : max(_2270, 0.0))) * _1541))) + ((_3302 + ((isnan(0.0) ? _2562 : (isnan(_2562) ? 0.0 : max(_2562, 0.0))) * _2349)) * cbPerFrame._m0[3u].x));
    float _3476 = exp2(_3468 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5445 : (isnan(_5445) ? 1.0 : min(_5445, 1.0))) * (_3298 + ((isnan(0.0) ? _2273 : (isnan(_2273) ? 0.0 : max(_2273, 0.0))) * _1541))) + ((_3304 + ((isnan(0.0) ? _2565 : (isnan(_2565) ? 0.0 : max(_2565, 0.0))) * _2349)) * cbPerFrame._m0[3u].x));
    float _3477 = exp2(_3468 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5456 : (isnan(_5456) ? 1.0 : min(_5456, 1.0))) * (_3300 + ((isnan(0.0) ? _2276 : (isnan(_2276) ? 0.0 : max(_2276, 0.0))) * _1541))) + ((_3306 + ((isnan(0.0) ? _2568 : (isnan(_2568) ? 0.0 : max(_2568, 0.0))) * _2349)) * cbPerFrame._m0[3u].x));
    float _3486 = (_3466 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3486 * (_3467 ? _3475 : (_3475 + (cbSceneParam._m0[72u].w * _3448)));
    SV_Target.y = _3486 * (_3467 ? _3476 : (_3476 + (cbSceneParam._m0[72u].w * _3450)));
    SV_Target.z = _3486 * (_3467 ? _3477 : (_3477 + (cbSceneParam._m0[72u].w * _3452)));
    SV_Target.w = _3331;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3331;
}


