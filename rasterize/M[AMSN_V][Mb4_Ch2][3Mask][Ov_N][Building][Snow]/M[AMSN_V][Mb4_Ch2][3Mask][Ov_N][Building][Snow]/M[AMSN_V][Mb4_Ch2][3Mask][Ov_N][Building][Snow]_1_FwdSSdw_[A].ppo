#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_18;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1959;
float _4364;
float _4365;
float _4366;
float _4367;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _241 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _242 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _243 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _249 = inversesqrt(dot(vec3(_241, _242, _243), vec3(_241, _242, _243)));
    float _250 = _249 * _241;
    float _251 = _249 * _242;
    float _252 = _249 * _243;
    float _262 = ((NORMAL.y * TANGENT_2.z) - (NORMAL.z * TANGENT_2.y)) * TANGENT_2.w;
    float _263 = ((NORMAL.z * TANGENT_2.x) - (NORMAL.x * TANGENT_2.z)) * TANGENT_2.w;
    float _264 = ((NORMAL.x * TANGENT_2.y) - (NORMAL.y * TANGENT_2.x)) * TANGENT_2.w;
    float _268 = inversesqrt(dot(vec3(_262, _263, _264), vec3(_262, _263, _264)));
    float _269 = _268 * _262;
    float _270 = _268 * _263;
    float _271 = _268 * _264;
    float _275 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _276 = _275 * NORMAL.x;
    float _277 = _275 * NORMAL.y;
    float _278 = _275 * NORMAL.z;
    float _282 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _283 = _282 * TANGENT.x;
    float _284 = _282 * TANGENT.y;
    float _285 = _282 * TANGENT.z;
    float _289 = inversesqrt(dot(vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z), vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z)));
    float _290 = _289 * TANGENT_2.x;
    float _291 = _289 * TANGENT_2.y;
    float _292 = _289 * TANGENT_2.z;
    float _297;
    float _298;
    float _299;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _297 = (-0.0) - _276;
        _298 = (-0.0) - _277;
        _299 = (-0.0) - _278;
    }
    else
    {
        _297 = _276;
        _298 = _277;
        _299 = _278;
    }
    vec4 _325 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _337 = 1.0 - ((1.0 - _325.z) * 1.39999997615814208984375);
    float _4376 = isnan(0.0) ? _337 : (isnan(_337) ? 0.0 : max(_337, 0.0));
    float _338 = isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0));
    float _340 = 1.0 - ((1.0 - _325.x) * 1.39999997615814208984375);
    float _4387 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    float _341 = isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0));
    float _343 = 1.0 - ((1.0 - _325.y) * 1.39999997615814208984375);
    float _4398 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    float _344 = isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0));
    float _346 = (_341 + _338) + _344;
    float _353 = (_346 * (1.0 - cbMtdParam._m0[20u].x)) + cbMtdParam._m0[20u].x;
    float _354 = (_346 * (1.0 - cbMtdParam._m0[20u].y)) + cbMtdParam._m0[20u].y;
    float _355 = (_346 * (1.0 - cbMtdParam._m0[20u].z)) + cbMtdParam._m0[20u].z;
    vec4 _380 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _389 = 1.0 - ((1.0 - _380.x) * 1.39999997615814208984375);
    float _4409 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _390 = isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0));
    float _400 = (_390 * ((cbMtdParam._m0[9u].x - _353) + ((1.0 - cbMtdParam._m0[9u].x) * _346))) + _353;
    float _401 = (_390 * ((cbMtdParam._m0[9u].y - _354) + ((1.0 - cbMtdParam._m0[9u].y) * _346))) + _354;
    float _402 = (_390 * ((cbMtdParam._m0[9u].z - _355) + ((1.0 - cbMtdParam._m0[9u].z) * _346))) + _355;
    float _416 = 1.0 - ((1.0 - _380.y) * 1.39999997615814208984375);
    float _4420 = isnan(0.0) ? _416 : (isnan(_416) ? 0.0 : max(_416, 0.0));
    float _417 = isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0));
    float _427 = (((cbMtdParam._m0[18u].x - _400) + ((1.0 - cbMtdParam._m0[18u].x) * _346)) * _417) + _400;
    float _428 = (((cbMtdParam._m0[18u].y - _401) + ((1.0 - cbMtdParam._m0[18u].y) * _346)) * _417) + _401;
    float _429 = (((cbMtdParam._m0[18u].z - _402) + ((1.0 - cbMtdParam._m0[18u].z) * _346)) * _417) + _402;
    float _443 = 1.0 - ((1.0 - _380.z) * 1.39999997615814208984375);
    float _4431 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    float _444 = isnan(1.0) ? _4431 : (isnan(_4431) ? 1.0 : min(_4431, 1.0));
    vec4 _472 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.z) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.w) + cbTextureTilingScale._m0[10u].w));
    float _474 = _472.x;
    float _475 = _474 * cbMtdParam._m0[25u].w;
    float _489 = ((cbMtdParam._m0[22u].z * (-1.39999997615814208984375)) * ((TEXCOORD_5.w - _475) + (cbMtdParam._m0[23u].y * TEXCOORD_5.w))) + 1.0;
    float _4442 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _491 = 1.0 - (isnan(1.0) ? _4442 : (isnan(_4442) ? 1.0 : min(_4442, 1.0)));
    float _499 = ((cbMtdParam._m0[22u].y * (-1.39999997615814208984375)) * ((TEXCOORD_5.z - _475) + (cbMtdParam._m0[23u].z * TEXCOORD_5.z))) + 1.0;
    float _4453 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0));
    float _501 = 1.0 - (isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0)));
    vec4 _519 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    float _521 = _519.x;
    float _522 = _519.y;
    float _523 = _519.z;
    float _524 = cbMtdParam._m0[10u].x * _501;
    float _526 = cbMtdParam._m0[10u].y * _501;
    float _528 = cbMtdParam._m0[10u].z * _501;
    float _544 = ((_521 * (cbMtdParam._m0[17u].x - _524)) * _491) + (_524 * _521);
    float _545 = ((_522 * (cbMtdParam._m0[17u].y - _526)) * _491) + (_526 * _522);
    float _546 = ((_523 * (cbMtdParam._m0[17u].z - _528)) * _491) + (_528 * _523);
    float _566 = cbMtdParam._m0[23u].x * (-1.39999997615814208984375);
    float _570 = (_566 * ((TEXCOORD_9.x - _475) + (cbMtdParam._m0[22u].x * TEXCOORD_9.x))) + 1.0;
    float _571 = (_566 * ((TEXCOORD_9.y - _475) + (cbMtdParam._m0[22u].x * TEXCOORD_9.y))) + 1.0;
    float _572 = (_566 * ((TEXCOORD_9.z - _475) + (cbMtdParam._m0[22u].x * TEXCOORD_9.z))) + 1.0;
    float _4464 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _4475 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
    float _4486 = isnan(0.0) ? _572 : (isnan(_572) ? 0.0 : max(_572, 0.0));
    float _584 = (1.0 - cbMtdParam._m0[24u].y) + _341;
    float _587 = _584 * (1.0 - (isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0))));
    float _588 = _584 * (1.0 - (isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0))));
    float _589 = ((_341 + 1.0) - cbMtdParam._m0[24u].y) * (1.0 - (isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0))));
    float _599 = _501 + _491;
    float _600 = _599 + _587;
    float _601 = _599 + _588;
    float _602 = _599 + _589;
    float _603 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    float _604 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _605 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _606 = isnan(1.0) ? _603 : (isnan(_603) ? 1.0 : min(_603, 1.0));
    float _607 = isnan(1.0) ? _604 : (isnan(_604) ? 1.0 : min(_604, 1.0));
    float _608 = isnan(1.0) ? _605 : (isnan(_605) ? 1.0 : min(_605, 1.0));
    vec4 _626 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _631 = _626.w;
    float _632 = _626.x * cbMtdParam._m0[13u].x;
    float _633 = _626.y * cbMtdParam._m0[13u].y;
    float _634 = _626.z * cbMtdParam._m0[13u].z;
    vec4 _652 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w));
    float _666 = (((_652.x * cbMtdParam._m0[14u].x) - _632) * _341) + _632;
    float _667 = (((_652.y * cbMtdParam._m0[14u].y) - _633) * _341) + _633;
    float _668 = (((_652.z * cbMtdParam._m0[14u].z) - _634) * _341) + _634;
    vec4 _686 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w));
    float _700 = (((_686.x * cbMtdParam._m0[15u].x) - _666) * _344) + _666;
    float _701 = (((_686.y * cbMtdParam._m0[15u].y) - _667) * _344) + _667;
    float _702 = (((_686.z * cbMtdParam._m0[15u].z) - _668) * _344) + _668;
    vec4 _720 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _734 = (((_720.x * cbMtdParam._m0[16u].x) - _700) * _338) + _700;
    float _735 = (((_720.y * cbMtdParam._m0[16u].y) - _701) * _338) + _701;
    float _736 = (((_720.z * cbMtdParam._m0[16u].z) - _702) * _338) + _702;
    float _756 = ((_734 - (_734 * _606)) + (((_606 * 4.55000019073486328125) * ((_587 * ((cbMtdParam._m0[11u].x * _521) - _544)) + _544)) * _734)) * ((((cbMtdParam._m0[19u].x - _427) + ((1.0 - cbMtdParam._m0[19u].x) * _346)) * _444) + _427);
    float _757 = ((_735 - (_735 * _607)) + (((_607 * 4.55000019073486328125) * ((_588 * ((cbMtdParam._m0[11u].y * _522) - _545)) + _545)) * _735)) * ((((cbMtdParam._m0[19u].y - _428) + ((1.0 - cbMtdParam._m0[19u].y) * _346)) * _444) + _428);
    float _758 = ((_736 - (_608 * _736)) + (((_608 * 4.55000019073486328125) * ((_589 * ((cbMtdParam._m0[11u].z * _523) - _546)) + _546)) * _736)) * ((((cbMtdParam._m0[19u].z - _429) + ((1.0 - cbMtdParam._m0[19u].z) * _346)) * _444) + _429);
    float _764 = (((1.0 - TEXCOORD_5.y) * (-2.7999999523162841796875)) * cbMtdParam._m0[25u].y) + 1.0;
    float _4527 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _776 = ((((_474 + (-1.0)) + ((1.0 - TEXCOORD_5.x) * 2.0)) * (-1.39999997615814208984375)) * cbMtdParam._m0[25u].x) + 1.0;
    float _4538 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    vec4 _791 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _797 = (_791.x * 2.0) + (-1.0);
    float _798 = (_791.y * 2.0) + (-1.0);
    float _799 = dot(vec2(_797, _798), vec2(_797, _798));
    float _4549 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _804 = sqrt(1.0 - (isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0))));
    float _807 = fma(_804, _297, fma(_798, _283, _797 * _250));
    float _810 = fma(_804, _298, fma(_798, _284, _797 * _251));
    float _813 = fma(_804, _299, fma(_798, _285, _797 * _252));
    float _822 = exp2(log2(inversesqrt(dot(vec3(_807, _810, _813), vec3(_807, _810, _813))) * _810) * cbMtdParam._m0[24u].w) * cbMtdParam._m0[24u].z;
    float _4560 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _825 = ((isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0))) + (isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0)))) * (1.0 - (isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0))));
    float _4571 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _826 = isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0));
    float _828 = 3.0 - (_826 * 2.0);
    float _833 = _826 * _826;
    float _840 = ((_833 * (cbMtdParam._m0[12u].x - _756)) * _828) + _756;
    float _841 = ((_833 * (cbMtdParam._m0[12u].y - _757)) * _828) + _757;
    float _842 = ((_833 * (cbMtdParam._m0[12u].z - _758)) * _828) + _758;
    float _855 = ((cbMtdParam._m0[21u].w - cbMtdParam._m0[26u].x) * _606) + cbMtdParam._m0[26u].x;
    float _858 = ((cbMtdParam._m0[21u].x - _855) * _341) + _855;
    float _861 = ((cbMtdParam._m0[21u].y - _858) * _344) + _858;
    float _864 = ((cbMtdParam._m0[21u].z - _861) * _338) + _861;
    vec4 _876 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    float _880 = _876.z;
    float _883 = (_876.x * 2.0) + (-1.0);
    float _884 = (_876.y * 2.0) + (-1.0);
    float _885 = dot(vec2(_883, _884), vec2(_883, _884));
    float _4582 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
    float _890 = sqrt(1.0 - (isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0))));
    float _893 = fma(_890, _297, fma(_884, _290, _883 * _269));
    float _896 = fma(_890, _298, fma(_884, _291, _883 * _270));
    float _899 = fma(_890, _299, fma(_884, _292, _883 * _271));
    float _903 = inversesqrt(dot(vec3(_893, _896, _899), vec3(_893, _896, _899)));
    float _904 = _903 * _893;
    float _905 = _903 * _896;
    float _906 = _903 * _899;
    vec4 _919 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_18, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.w) + cbTextureTilingScale._m0[8u].w));
    float _926 = (_919.x * 2.0) + (-1.0);
    float _927 = (_919.y * 2.0) + (-1.0);
    float _928 = dot(vec2(_926, _927), vec2(_926, _927));
    float _4593 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _936 = ((_919.z - _880) * _825) + _880;
    vec4 _949 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w));
    float _955 = (_949.x * 2.0) + (-1.0);
    float _956 = (_949.y * 2.0) + (-1.0);
    float _957 = dot(vec2(_955, _956), vec2(_955, _956));
    float _4604 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
    float _962 = sqrt(1.0 - (isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0))));
    float _965 = fma(_962, _297, fma(_956, _290, _955 * _269));
    float _968 = fma(_962, _298, fma(_956, _291, _955 * _270));
    float _971 = fma(_962, _299, fma(_956, _292, _955 * _271));
    float _975 = inversesqrt(dot(vec3(_965, _968, _971), vec3(_965, _968, _971)));
    float _976 = _975 * _965;
    float _977 = _975 * _968;
    float _978 = _975 * _971;
    float _981 = fma(_978, _252, fma(_977, _251, _976 * _250));
    float _984 = fma(_978, _285, fma(_977, _284, _976 * _283));
    float _987 = fma(_978, _299, fma(_977, _298, _976 * _297));
    float _991 = inversesqrt(dot(vec3(_981, _984, _987), vec3(_981, _984, _987)));
    vec4 _1004 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _1010 = (_1004.x * 2.0) + (-1.0);
    float _1011 = (_1004.y * 2.0) + (-1.0);
    float _1012 = dot(vec2(_1010, _1011), vec2(_1010, _1011));
    float _4615 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0));
    float _1017 = sqrt(1.0 - (isnan(1.0) ? _4615 : (isnan(_4615) ? 1.0 : min(_4615, 1.0))));
    float _1020 = fma(_1017, _297, fma(_1011, _290, _1010 * _269));
    float _1023 = fma(_1017, _298, fma(_1011, _291, _1010 * _270));
    float _1026 = fma(_1017, _299, fma(_1011, _292, _1010 * _271));
    float _1030 = inversesqrt(dot(vec3(_1020, _1023, _1026), vec3(_1020, _1023, _1026)));
    float _1031 = _1030 * _1020;
    float _1032 = _1030 * _1023;
    float _1033 = _1030 * _1026;
    float _1036 = fma(_1033, _252, fma(_1032, _251, _1031 * _250));
    float _1039 = fma(_1033, _285, fma(_1032, _284, _1031 * _283));
    float _1042 = fma(_1033, _299, fma(_1032, _298, _1031 * _297));
    float _1046 = inversesqrt(dot(vec3(_1036, _1039, _1042), vec3(_1036, _1039, _1042)));
    vec4 _1061 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _1067 = (_1061.x * 2.0) + (-1.0);
    float _1068 = (_1061.y * 2.0) + (-1.0);
    float _1069 = dot(vec2(_1067, _1068), vec2(_1067, _1068));
    float _4626 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
    float _1074 = sqrt(1.0 - (isnan(1.0) ? _4626 : (isnan(_4626) ? 1.0 : min(_4626, 1.0))));
    float _1077 = fma(_1074, _297, fma(_1068, _290, _1067 * _269));
    float _1080 = fma(_1074, _298, fma(_1068, _291, _1067 * _270));
    float _1083 = fma(_1074, _299, fma(_1068, _292, _1067 * _271));
    float _1087 = inversesqrt(dot(vec3(_1077, _1080, _1083), vec3(_1077, _1080, _1083)));
    float _1088 = _1087 * _1077;
    float _1089 = _1087 * _1080;
    float _1090 = _1087 * _1083;
    float _1093 = fma(_1090, _252, fma(_1089, _251, _1088 * _250));
    float _1096 = fma(_1090, _285, fma(_1089, _284, _1088 * _283));
    float _1099 = fma(_1090, _299, fma(_1089, _298, _1088 * _297));
    float _1103 = inversesqrt(dot(vec3(_1093, _1096, _1099), vec3(_1093, _1096, _1099)));
    float _1109 = fma(_906, _252, fma(_905, _251, _904 * _250));
    float _1112 = fma(_906, _285, fma(_905, _284, _904 * _283));
    float _1115 = fma(_906, _299, fma(_905, _298, _904 * _297));
    float _1119 = inversesqrt(dot(vec3(_1109, _1112, _1115), vec3(_1109, _1112, _1115)));
    float _1120 = _1119 * _1109;
    float _1121 = _1119 * _1112;
    float _1122 = _1119 * _1115;
    float _1129 = (((_1103 * _1093) - _1120) * _341) + _1120;
    float _1130 = (((_1103 * _1096) - _1121) * _341) + _1121;
    float _1131 = (((_1103 * _1099) - _1122) * _341) + _1122;
    vec4 _1144 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w));
    float _1150 = (_1144.x * 2.0) + (-1.0);
    float _1151 = (_1144.y * 2.0) + (-1.0);
    float _1152 = dot(vec2(_1150, _1151), vec2(_1150, _1151));
    float _4637 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
    float _1157 = sqrt(1.0 - (isnan(1.0) ? _4637 : (isnan(_4637) ? 1.0 : min(_4637, 1.0))));
    float _1160 = fma(_1157, _297, fma(_1151, _290, _1150 * _269));
    float _1163 = fma(_1157, _298, fma(_1151, _291, _1150 * _270));
    float _1166 = fma(_1157, _299, fma(_1151, _292, _1150 * _271));
    float _1170 = inversesqrt(dot(vec3(_1160, _1163, _1166), vec3(_1160, _1163, _1166)));
    float _1171 = _1170 * _1160;
    float _1172 = _1170 * _1163;
    float _1173 = _1170 * _1166;
    float _1176 = fma(_1173, _252, fma(_1172, _251, _1171 * _250));
    float _1179 = fma(_1173, _285, fma(_1172, _284, _1171 * _283));
    float _1182 = fma(_1173, _299, fma(_1172, _298, _1171 * _297));
    float _1186 = inversesqrt(dot(vec3(_1176, _1179, _1182), vec3(_1176, _1179, _1182)));
    float _1196 = (((_1186 * _1176) - _1129) * _344) + _1129;
    float _1197 = (((_1186 * _1179) - _1130) * _344) + _1130;
    float _1198 = (((_1186 * _1182) - _1131) * _344) + _1131;
    vec4 _1211 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.z) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.w) + cbTextureTilingScale._m0[7u].w));
    float _1217 = (_1211.x * 2.0) + (-1.0);
    float _1218 = (_1211.y * 2.0) + (-1.0);
    float _1219 = dot(vec2(_1217, _1218), vec2(_1217, _1218));
    float _4648 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
    float _1224 = sqrt(1.0 - (isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0))));
    float _1227 = fma(_1224, _297, fma(_1218, _290, _1217 * _269));
    float _1230 = fma(_1224, _298, fma(_1218, _291, _1217 * _270));
    float _1233 = fma(_1224, _299, fma(_1218, _292, _1217 * _271));
    float _1237 = inversesqrt(dot(vec3(_1227, _1230, _1233), vec3(_1227, _1230, _1233)));
    float _1238 = _1237 * _1227;
    float _1239 = _1237 * _1230;
    float _1240 = _1237 * _1233;
    float _1243 = fma(_1240, _252, fma(_1239, _251, _1238 * _250));
    float _1246 = fma(_1240, _285, fma(_1239, _284, _1238 * _283));
    float _1249 = fma(_1240, _299, fma(_1239, _298, _1238 * _297));
    float _1253 = inversesqrt(dot(vec3(_1243, _1246, _1249), vec3(_1243, _1246, _1249)));
    float _1263 = (((_1253 * _1249) - _1198) * _338) + _1198;
    vec4 _1275 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w));
    float _1281 = (_1275.x * 2.0) + (-1.0);
    float _1282 = (_1275.y * 2.0) + (-1.0);
    float _1283 = dot(vec2(_1281, _1282), vec2(_1281, _1282));
    float _4659 = isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0));
    float _1288 = sqrt(1.0 - (isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0))));
    float _1291 = fma(_1288, _297, fma(_1282, _290, _1281 * _269));
    float _1294 = fma(_1288, _298, fma(_1282, _291, _1281 * _270));
    float _1297 = fma(_1288, _299, fma(_1282, _292, _1281 * _271));
    float _1301 = inversesqrt(dot(vec3(_1291, _1294, _1297), vec3(_1291, _1294, _1297)));
    float _1302 = _1301 * _1291;
    float _1303 = _1301 * _1294;
    float _1304 = _1301 * _1297;
    float _1307 = fma(_1304, _252, fma(_1303, _251, _1302 * _250));
    float _1310 = fma(_1304, _285, fma(_1303, _284, _1302 * _283));
    float _1313 = fma(_1304, _299, fma(_1303, _298, _1302 * _297));
    float _1317 = inversesqrt(dot(vec3(_1307, _1310, _1313), vec3(_1307, _1310, _1313)));
    float _1350 = (((((((_1036 * _491) * _1046) * cbMtdParam._m0[23u].w) + ((((_600 * _584) * _981) * _991) * cbMtdParam._m0[24u].x)) + _1196) + (((_1253 * _1243) - _1196) * _338)) + (((_1307 * _501) * _1317) * cbMtdParam._m0[22u].w)) + (cbMtdParam._m0[25u].z * _797);
    float _1355 = (((((((_1039 * _491) * _1046) * cbMtdParam._m0[23u].w) + ((((_601 * _584) * _984) * _991) * cbMtdParam._m0[24u].x)) + _1197) + (((_1253 * _1246) - _1197) * _338)) + (((_1310 * _501) * _1317) * cbMtdParam._m0[22u].w)) + (cbMtdParam._m0[25u].z * _798);
    float _1362 = ((_926 - _1350) * _825) + _1350;
    float _1363 = (_825 * (_927 - _1355)) + _1355;
    float _1364 = (_825 * (sqrt(1.0 - (isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0)))) - _1263)) + _1263;
    float _1367 = fma(_1364, _297, fma(_1363, _283, _1362 * _250));
    float _1370 = fma(_1364, _298, fma(_1363, _284, _1362 * _251));
    float _1373 = fma(_1364, _299, fma(_1363, _285, _1362 * _252));
    float _1377 = inversesqrt(dot(vec3(_1367, _1370, _1373), vec3(_1367, _1370, _1373)));
    float _1378 = _1377 * _1367;
    float _1379 = _1377 * _1370;
    float _1380 = _1377 * _1373;
    float _4670 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _1381 = isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0));
    float _4681 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
    float _1382 = isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0));
    float _4692 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    float _4703 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
    float _4714 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _4725 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _1386 = isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0));
    float _1402 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1442 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1452 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1442);
    float _1453 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1442);
    float _1454 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1442);
    float _1458 = inversesqrt(dot(vec3(_1452, _1453, _1454), vec3(_1452, _1453, _1454)));
    float _1459 = _1452 * _1458;
    float _1460 = _1453 * _1458;
    float _1461 = _1454 * _1458;
    vec4 _1466 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1468 = _1466.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1639 = sqrt(((_1452 * _1452) + (_1453 * _1453)) + (_1454 * _1454));
        float _1645 = (cbMatDynParam._m0[5u].x * _1639) + cbMatDynParam._m0[5u].y;
        float _4736 = isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0));
        float _1646 = isnan(1.0) ? _4736 : (isnan(_4736) ? 1.0 : min(_4736, 1.0));
        float _1650 = (cbMatDynParam._m0[5u].z * _1639) + cbMatDynParam._m0[5u].w;
        float _4747 = isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4747 : (isnan(_4747) ? 1.0 : min(_4747, 1.0))) - _1646)) + _1646) < ((_1468 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1479 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1480 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1498 = fma(_1380, cbSceneParam._m0[5u].z, fma(_1379, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1378));
    float _1501 = fma(_1380, cbSceneParam._m0[6u].z, fma(_1379, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1378));
    float _1504 = fma(_1380, cbSceneParam._m0[7u].z, fma(_1379, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1378));
    uint _1517 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1518 = _1517 + 9u;
    uint _1519 = _1518 + uint(cbMatDynParam._m0[0u].w);
    float _1525 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0)))) * cbInstanceData._m0[_1519].x;
    float _1526 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0)))) * cbInstanceData._m0[_1519].y;
    float _1527 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0)))) * cbInstanceData._m0[_1519].z;
    float _4758 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
    float _1528 = isnan(1.0) ? _4758 : (isnan(_4758) ? 1.0 : min(_4758, 1.0));
    float _4769 = isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0));
    float _1529 = isnan(1.0) ? _4769 : (isnan(_4769) ? 1.0 : min(_4769, 1.0));
    float _4780 = isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0));
    float _1530 = isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0));
    float _1531 = 1.0 - _1386;
    float _1532 = _1528 * _1531;
    float _1533 = _1529 * _1531;
    float _1534 = _1530 * _1531;
    float _1539 = (_1528 + (-0.039999999105930328369140625)) * _1386;
    float _1540 = (_1529 + (-0.039999999105930328369140625)) * _1386;
    float _1541 = (_1530 + (-0.039999999105930328369140625)) * _1386;
    float _1542 = _1539 + 0.039999999105930328369140625;
    float _1544 = _1540 + 0.039999999105930328369140625;
    float _1545 = _1541 + 0.039999999105930328369140625;
    vec4 _1554 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1479, cbSceneParam._m0[86u].y * _1480));
    float _1557 = _1554.x * TEXCOORD_9.w;
    float _1558 = dot(vec3(_1378, _1379, _1380), vec3(_1459, _1460, _1461));
    float _1561 = _1558 * 2.0;
    float _1565 = (_1561 * _1378) - _1459;
    float _1566 = (_1561 * _1379) - _1460;
    float _1567 = (_1561 * _1380) - _1461;
    float _1571 = abs(dot(vec3(_1459, _1460, _1461), vec3(_1378, _1379, _1380)));
    float _4791 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
    float _1573 = sqrt(_1382);
    float _1585 = exp2((_1573 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1573 * 3.0));
    float _1591 = (1.0 - _1585) * ((_1573 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1592 = _1585 * _1573;
    float _1620 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1624 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1628 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1958;
    float _1960;
    float _1961;
    float _1962;
    float _1963;
    float _1964;
    float _1965;
    float _1966;
    float _1967;
    float _1968;
    float _1969;
    float _1970;
    float _1971;
    float _1972;
    float _1973;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1683 = fma(_1628, cbModelParam._m0[26u].z, fma(_1624, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1620));
        float _1687 = fma(_1628, cbModelParam._m0[27u].z, fma(_1624, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1620));
        float _1691 = fma(_1628, cbModelParam._m0[28u].z, fma(_1624, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1620));
        float _1716 = _1620 + _1378;
        float _1717 = _1624 + _1379;
        float _1718 = _1628 + _1380;
        float _1728 = fma(_1718, cbModelParam._m0[26u].z, fma(_1717, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1716)) - _1683;
        float _1729 = fma(_1718, cbModelParam._m0[27u].z, fma(_1717, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1716)) - _1687;
        float _1730 = fma(_1718, cbModelParam._m0[28u].z, fma(_1717, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1716)) - _1691;
        float _1734 = inversesqrt(dot(vec3(_1728, _1729, _1730), vec3(_1728, _1729, _1730)));
        float _1747 = ((_1734 * _1728) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1683 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1748 = ((_1734 * _1729) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1687 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1749 = ((_1734 * _1730) / cbModelParam._m0[34u].z) + ((((((_1691 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1752 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1747, _1748, _1749), 0.0);
        vec4 _1759 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1747, _1748, _1749), 0.0);
        vec4 _1766 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1747, _1748, _1749), 0.0);
        vec4 _1773 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1747, _1748, _1749), 0.0);
        float _1786 = exp2((_1752.w + (-0.5)) * 20.0) * 2.0;
        float _1787 = _1786 * (_1752.x + (-0.5));
        float _1788 = _1786 * (_1752.y + (-0.5));
        float _1789 = _1786 * (_1752.z + (-0.5));
        float _1796 = exp2((_1759.w + (-0.5)) * 20.0) * 2.0;
        float _1797 = _1796 * (_1759.x + (-0.5));
        float _1798 = _1796 * (_1759.y + (-0.5));
        float _1799 = _1796 * (_1759.z + (-0.5));
        float _1806 = exp2((_1766.w + (-0.5)) * 20.0) * 2.0;
        float _1807 = _1806 * (_1766.x + (-0.5));
        float _1808 = _1806 * (_1766.y + (-0.5));
        float _1809 = _1806 * (_1766.z + (-0.5));
        float _1816 = exp2((_1773.w + (-0.5)) * 20.0) * 2.0;
        float _1817 = _1816 * (_1773.x + (-0.5));
        float _1818 = _1816 * (_1773.y + (-0.5));
        float _1819 = _1816 * (_1773.z + (-0.5));
        float _1820 = isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0));
        float _1821 = isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0));
        float _1822 = isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0));
        float _1823 = _1787 * 0.5;
        float _1824 = _1797 * 0.5;
        float _1825 = _1807 * 0.5;
        float _1826 = dot(vec3(_1823, _1824, _1825), vec3(_1823, _1824, _1825));
        float _1831 = (_1826 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1826);
        float _1840 = (dot(vec3(_1378, _1379, _1380), vec3(_1831 * _1823, _1831 * _1824, _1831 * _1825)) + 1.0) * 0.5;
        float _4817 = isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0));
        float _1850 = sqrt(((_1824 * _1824) + (_1823 * _1823)) + (_1825 * _1825)) / (_1820 + 9.9999997473787516355514526367188e-06);
        float _4828 = isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0));
        float _1851 = isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0));
        float _1852 = _1851 * 2.0;
        float _1856 = (1.0 - _1851) / (_1851 + 1.0);
        float _4839 = isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0));
        float _1857 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
        float _1866 = ((((1.0 - _1857) * (_1852 + 2.0)) * exp2(log2(isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0))) * (_1852 + 1.0))) + _1857) * _1820;
        float _1867 = _1788 * 0.5;
        float _1868 = _1798 * 0.5;
        float _1869 = _1808 * 0.5;
        float _1870 = dot(vec3(_1867, _1868, _1869), vec3(_1867, _1868, _1869));
        float _1875 = (_1870 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1870);
        float _1883 = (dot(vec3(_1378, _1379, _1380), vec3(_1875 * _1867, _1875 * _1868, _1875 * _1869)) + 1.0) * 0.5;
        float _4850 = isnan(0.0) ? _1883 : (isnan(_1883) ? 0.0 : max(_1883, 0.0));
        float _1892 = sqrt(((_1868 * _1868) + (_1867 * _1867)) + (_1869 * _1869)) / (_1821 + 9.9999997473787516355514526367188e-06);
        float _4861 = isnan(0.0) ? _1892 : (isnan(_1892) ? 0.0 : max(_1892, 0.0));
        float _1893 = isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0));
        float _1894 = _1893 * 2.0;
        float _1898 = (1.0 - _1893) / (_1893 + 1.0);
        float _4872 = isnan(0.0) ? _1898 : (isnan(_1898) ? 0.0 : max(_1898, 0.0));
        float _1899 = isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0));
        float _1908 = ((((1.0 - _1899) * (_1894 + 2.0)) * exp2(log2(isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0))) * (_1894 + 1.0))) + _1899) * _1821;
        float _1909 = _1789 * 0.5;
        float _1910 = _1799 * 0.5;
        float _1911 = _1809 * 0.5;
        float _1912 = dot(vec3(_1909, _1910, _1911), vec3(_1909, _1910, _1911));
        float _1917 = (_1912 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1912);
        float _1925 = (dot(vec3(_1378, _1379, _1380), vec3(_1917 * _1909, _1917 * _1910, _1917 * _1911)) + 1.0) * 0.5;
        float _4883 = isnan(0.0) ? _1925 : (isnan(_1925) ? 0.0 : max(_1925, 0.0));
        float _1934 = sqrt(((_1910 * _1910) + (_1909 * _1909)) + (_1911 * _1911)) / (_1822 + 9.9999997473787516355514526367188e-06);
        float _4894 = isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0));
        float _1935 = isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0));
        float _1936 = _1935 * 2.0;
        float _1940 = (1.0 - _1935) / (_1935 + 1.0);
        float _4905 = isnan(0.0) ? _1940 : (isnan(_1940) ? 0.0 : max(_1940, 0.0));
        float _1941 = isnan(1.0) ? _4905 : (isnan(_4905) ? 1.0 : min(_4905, 1.0));
        float _1950 = ((((1.0 - _1941) * (_1936 + 2.0)) * exp2(log2(isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0))) * (_1936 + 1.0))) + _1941) * _1822;
        _1958 = _1789;
        _1960 = _1788;
        _1961 = _1787;
        _1962 = _1799;
        _1963 = _1798;
        _1964 = _1797;
        _1965 = _1809;
        _1966 = _1808;
        _1967 = _1807;
        _1968 = _1822;
        _1969 = _1821;
        _1970 = _1820;
        _1971 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0)));
        _1972 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0)));
        _1973 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0)));
    }
    else
    {
        _1958 = _1959;
        _1960 = _1959;
        _1961 = _1959;
        _1962 = _1959;
        _1963 = _1959;
        _1964 = _1959;
        _1965 = _1959;
        _1966 = _1959;
        _1967 = _1959;
        _1968 = _1959;
        _1969 = _1959;
        _1970 = _1959;
        _1971 = 0.0;
        _1972 = 0.0;
        _1973 = 0.0;
    }
    float _2271;
    float _2272;
    float _2273;
    float _2274;
    float _2275;
    float _2276;
    float _2277;
    float _2278;
    float _2279;
    float _2280;
    float _2281;
    float _2282;
    float _2283;
    float _2284;
    float _2285;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _2002 = fma(_1628, cbModelParam._m0[30u].z, fma(_1624, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1620));
        float _2006 = fma(_1628, cbModelParam._m0[31u].z, fma(_1624, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1620));
        float _2010 = fma(_1628, cbModelParam._m0[32u].z, fma(_1624, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1620));
        float _2033 = _1620 + _1378;
        float _2034 = _1624 + _1379;
        float _2035 = _1628 + _1380;
        float _2045 = fma(_2035, cbModelParam._m0[30u].z, fma(_2034, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _2033)) - _2002;
        float _2046 = fma(_2035, cbModelParam._m0[31u].z, fma(_2034, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _2033)) - _2006;
        float _2047 = fma(_2035, cbModelParam._m0[32u].z, fma(_2034, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _2033)) - _2010;
        float _2051 = inversesqrt(dot(vec3(_2045, _2046, _2047), vec3(_2045, _2046, _2047)));
        float _2064 = ((_2051 * _2045) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_2002 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2065 = ((_2051 * _2046) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_2006 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2066 = ((_2051 * _2047) / cbModelParam._m0[35u].z) + ((((((_2010 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _2068 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_2064, _2065, _2066), 0.0);
        vec4 _2075 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_2064, _2065, _2066), 0.0);
        vec4 _2082 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_2064, _2065, _2066), 0.0);
        vec4 _2089 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_2064, _2065, _2066), 0.0);
        float _2101 = exp2((_2068.w + (-0.5)) * 20.0) * 2.0;
        float _2102 = _2101 * (_2068.x + (-0.5));
        float _2103 = _2101 * (_2068.y + (-0.5));
        float _2104 = _2101 * (_2068.z + (-0.5));
        float _2111 = exp2((_2075.w + (-0.5)) * 20.0) * 2.0;
        float _2112 = _2111 * (_2075.x + (-0.5));
        float _2113 = _2111 * (_2075.y + (-0.5));
        float _2114 = _2111 * (_2075.z + (-0.5));
        float _2121 = exp2((_2082.w + (-0.5)) * 20.0) * 2.0;
        float _2122 = _2121 * (_2082.x + (-0.5));
        float _2123 = _2121 * (_2082.y + (-0.5));
        float _2124 = _2121 * (_2082.z + (-0.5));
        float _2131 = exp2((_2089.w + (-0.5)) * 20.0) * 2.0;
        float _2132 = _2131 * (_2089.x + (-0.5));
        float _2133 = _2131 * (_2089.y + (-0.5));
        float _2134 = _2131 * (_2089.z + (-0.5));
        float _2135 = isnan(0.0) ? _2132 : (isnan(_2132) ? 0.0 : max(_2132, 0.0));
        float _2136 = isnan(0.0) ? _2133 : (isnan(_2133) ? 0.0 : max(_2133, 0.0));
        float _2137 = isnan(0.0) ? _2134 : (isnan(_2134) ? 0.0 : max(_2134, 0.0));
        float _2138 = _2102 * 0.5;
        float _2139 = _2112 * 0.5;
        float _2140 = _2122 * 0.5;
        float _2141 = dot(vec3(_2138, _2139, _2140), vec3(_2138, _2139, _2140));
        float _2146 = (_2141 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2141);
        float _2154 = (dot(vec3(_1378, _1379, _1380), vec3(_2146 * _2138, _2146 * _2139, _2146 * _2140)) + 1.0) * 0.5;
        float _4946 = isnan(0.0) ? _2154 : (isnan(_2154) ? 0.0 : max(_2154, 0.0));
        float _2163 = sqrt(((_2139 * _2139) + (_2138 * _2138)) + (_2140 * _2140)) / (_2135 + 9.9999997473787516355514526367188e-06);
        float _4957 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
        float _2164 = isnan(1.0) ? _4957 : (isnan(_4957) ? 1.0 : min(_4957, 1.0));
        float _2165 = _2164 * 2.0;
        float _2169 = (1.0 - _2164) / (_2164 + 1.0);
        float _4968 = isnan(0.0) ? _2169 : (isnan(_2169) ? 0.0 : max(_2169, 0.0));
        float _2170 = isnan(1.0) ? _4968 : (isnan(_4968) ? 1.0 : min(_4968, 1.0));
        float _2179 = ((((1.0 - _2170) * (_2165 + 2.0)) * exp2(log2(isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0))) * (_2165 + 1.0))) + _2170) * _2135;
        float _2180 = _2103 * 0.5;
        float _2181 = _2113 * 0.5;
        float _2182 = _2123 * 0.5;
        float _2183 = dot(vec3(_2180, _2181, _2182), vec3(_2180, _2181, _2182));
        float _2188 = (_2183 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2183);
        float _2196 = (dot(vec3(_1378, _1379, _1380), vec3(_2188 * _2180, _2188 * _2181, _2188 * _2182)) + 1.0) * 0.5;
        float _4979 = isnan(0.0) ? _2196 : (isnan(_2196) ? 0.0 : max(_2196, 0.0));
        float _2205 = sqrt(((_2181 * _2181) + (_2180 * _2180)) + (_2182 * _2182)) / (_2136 + 9.9999997473787516355514526367188e-06);
        float _4990 = isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0));
        float _2206 = isnan(1.0) ? _4990 : (isnan(_4990) ? 1.0 : min(_4990, 1.0));
        float _2207 = _2206 * 2.0;
        float _2211 = (1.0 - _2206) / (_2206 + 1.0);
        float _5001 = isnan(0.0) ? _2211 : (isnan(_2211) ? 0.0 : max(_2211, 0.0));
        float _2212 = isnan(1.0) ? _5001 : (isnan(_5001) ? 1.0 : min(_5001, 1.0));
        float _2221 = ((((1.0 - _2212) * (_2207 + 2.0)) * exp2(log2(isnan(1.0) ? _4979 : (isnan(_4979) ? 1.0 : min(_4979, 1.0))) * (_2207 + 1.0))) + _2212) * _2136;
        float _2222 = _2104 * 0.5;
        float _2223 = _2114 * 0.5;
        float _2224 = _2124 * 0.5;
        float _2225 = dot(vec3(_2222, _2223, _2224), vec3(_2222, _2223, _2224));
        float _2230 = (_2225 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2225);
        float _2238 = (dot(vec3(_1378, _1379, _1380), vec3(_2230 * _2222, _2230 * _2223, _2230 * _2224)) + 1.0) * 0.5;
        float _5012 = isnan(0.0) ? _2238 : (isnan(_2238) ? 0.0 : max(_2238, 0.0));
        float _2247 = sqrt(((_2223 * _2223) + (_2222 * _2222)) + (_2224 * _2224)) / (_2137 + 9.9999997473787516355514526367188e-06);
        float _5023 = isnan(0.0) ? _2247 : (isnan(_2247) ? 0.0 : max(_2247, 0.0));
        float _2248 = isnan(1.0) ? _5023 : (isnan(_5023) ? 1.0 : min(_5023, 1.0));
        float _2249 = _2248 * 2.0;
        float _2253 = (1.0 - _2248) / (_2248 + 1.0);
        float _5034 = isnan(0.0) ? _2253 : (isnan(_2253) ? 0.0 : max(_2253, 0.0));
        float _2254 = isnan(1.0) ? _5034 : (isnan(_5034) ? 1.0 : min(_5034, 1.0));
        float _2263 = ((((1.0 - _2254) * (_2249 + 2.0)) * exp2(log2(isnan(1.0) ? _5012 : (isnan(_5012) ? 1.0 : min(_5012, 1.0))) * (_2249 + 1.0))) + _2254) * _2137;
        _2271 = _2104;
        _2272 = _2103;
        _2273 = _2102;
        _2274 = _2114;
        _2275 = _2113;
        _2276 = _2112;
        _2277 = _2124;
        _2278 = _2123;
        _2279 = _2122;
        _2280 = _2137;
        _2281 = _2136;
        _2282 = _2135;
        _2283 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0)));
        _2284 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2221 : (isnan(_2221) ? 0.0 : max(_2221, 0.0)));
        _2285 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2263 : (isnan(_2263) ? 0.0 : max(_2263, 0.0)));
    }
    else
    {
        _2271 = _1959;
        _2272 = _1959;
        _2273 = _1959;
        _2274 = _1959;
        _2275 = _1959;
        _2276 = _1959;
        _2277 = _1959;
        _2278 = _1959;
        _2279 = _1959;
        _2280 = _1959;
        _2281 = _1959;
        _2282 = _1959;
        _2283 = 0.0;
        _2284 = 0.0;
        _2285 = 0.0;
    }
    float _2295 = (cbModelParam._m0[1u].x * (_2283 - _1971)) + _1971;
    float _2296 = (cbModelParam._m0[1u].x * (_2284 - _1972)) + _1972;
    float _2297 = (cbModelParam._m0[1u].x * (_2285 - _1973)) + _1973;
    float _2318 = fma(_2297, cbSceneParam._m0[89u].z, fma(_2296, cbSceneParam._m0[89u].y, _2295 * cbSceneParam._m0[89u].x));
    float _2321 = fma(_2297, cbSceneParam._m0[90u].z, fma(_2296, cbSceneParam._m0[90u].y, _2295 * cbSceneParam._m0[90u].x));
    float _2324 = fma(_2297, cbSceneParam._m0[91u].z, fma(_2296, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2295));
    float _2339 = _1565 * 0.5;
    float _2340 = _1566 * 0.5;
    float _2341 = _1567 * 0.5;
    float _2342 = dot(vec4(_2339, _2340, _2341, 1.0), vec4(_2273, _2276, _2279, _2282));
    float _2345 = dot(vec4(_2339, _2340, _2341, 1.0), vec4(_2272, _2275, _2278, _2281));
    float _2348 = dot(vec4(_2339, _2340, _2341, 1.0), vec4(_2271, _2274, _2277, _2280));
    float _2382;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2355 = dot(vec4(_2339, _2340, _2341, 1.0), vec4(_1958, _1962, _1965, _1968));
        float _2359 = dot(vec4(_2339, _2340, _2341, 1.0), vec4(_1960, _1963, _1966, _1969));
        float _2363 = dot(vec4(_2339, _2340, _2341, 1.0), vec4(_1961, _1964, _1967, _1970));
        float _2370 = dot(vec4(cbModelParam._m0[39u]), vec4(_2339, _2340, _2341, 1.0));
        _2382 = dot(vec3(isnan(0.0) ? _2363 : (isnan(_2363) ? 0.0 : max(_2363, 0.0)), isnan(0.0) ? _2359 : (isnan(_2359) ? 0.0 : max(_2359, 0.0)), isnan(0.0) ? _2355 : (isnan(_2355) ? 0.0 : max(_2355, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2370) ? 0.0 : (isnan(0.0) ? _2370 : max(0.0, _2370))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2382 = 1.0;
    }
    float _2393;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2384 = dot(vec4(cbModelParam._m0[40u]), vec4(_2339, _2340, _2341, 1.0));
        _2393 = dot(vec3(isnan(0.0) ? _2342 : (isnan(_2342) ? 0.0 : max(_2342, 0.0)), isnan(0.0) ? _2345 : (isnan(_2345) ? 0.0 : max(_2345, 0.0)), isnan(0.0) ? _2348 : (isnan(_2348) ? 0.0 : max(_2348, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2384) ? 0.0 : (isnan(0.0) ? _2384 : max(0.0, _2384))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2393 = 1.0;
    }
    float _2397 = (_2393 * cbModelParam._m0[1u].x) + (_2382 * (1.0 - cbModelParam._m0[1u].x));
    float _2407 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1382);
    float _2408 = isnan(_2407) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2407 : min(cbModelParam._m0[25u].z, _2407));
    float _2488;
    float _2490;
    float _2492;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2455 = fma(_1628, cbModelParam._m0[13u].z, fma(_1624, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1620)) + cbModelParam._m0[13u].w;
        float _2459 = fma(_1628, cbModelParam._m0[14u].z, fma(_1624, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1620)) + cbModelParam._m0[14u].w;
        float _2463 = fma(_1628, cbModelParam._m0[15u].z, fma(_1624, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1620)) + cbModelParam._m0[15u].w;
        float _2466 = fma(_1567, cbModelParam._m0[13u].z, fma(_1566, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1565));
        float _2469 = fma(_1567, cbModelParam._m0[14u].z, fma(_1566, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1565));
        float _2472 = fma(_1567, cbModelParam._m0[15u].z, fma(_1566, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1565));
        float _2500;
        if (_2466 > 0.0)
        {
            _2500 = abs((1.0 - _2455) / _2466);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_2466 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_2455 + 1.0) / _2466);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _2500 = frontier_phi_19_17_ladder;
        }
        float _2723;
        if (_2469 > 0.0)
        {
            _2723 = abs((1.0 - _2459) / _2469);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2469 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2459 + 1.0) / _2469);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2723 = frontier_phi_28_24_ladder;
        }
        float _2980;
        if (_2472 > 0.0)
        {
            _2980 = abs((1.0 - _2463) / _2472);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2472 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2463 + 1.0) / _2472);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2980 = frontier_phi_40_35_ladder;
        }
        float _2982 = isnan(_2723) ? _2500 : (isnan(_2500) ? _2723 : min(_2500, _2723));
        float _2983 = isnan(_2980) ? _2982 : (isnan(_2982) ? _2980 : min(_2982, _2980));
        float _2987 = (_2983 * _2466) + _2455;
        float _2988 = (_2983 * _2469) + _2459;
        float _2989 = (_2983 * _2472) + _2463;
        float _2990 = _2983 * 9.9999997473787516355514526367188e-05;
        float _2992 = (-1.0) - _2990;
        float _2994 = _2990 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2989 > _2994) || ((_2989 < _2992) || ((_2988 > _2994) || ((_2988 < _2992) || ((_2987 < _2992) || (_2987 > _2994))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3117 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2989, cbModelParam._m0[9u].z, fma(_2988, cbModelParam._m0[9u].y, _2987 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2989, cbModelParam._m0[10u].z, fma(_2988, cbModelParam._m0[10u].y, _2987 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2989, cbModelParam._m0[11u].z, fma(_2988, cbModelParam._m0[11u].y, _2987 * cbModelParam._m0[11u].x))), _2408);
            frontier_phi_18_40_ladder = _3117.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _3117.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _3117.x * cbModelParam._m0[1u].y;
        }
        _2488 = frontier_phi_18_40_ladder_2;
        _2490 = frontier_phi_18_40_ladder_1;
        _2492 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _2476 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1565, _1566, _1567), _2408);
        _2488 = _2476.x * cbModelParam._m0[1u].y;
        _2490 = _2476.y * cbModelParam._m0[1u].y;
        _2492 = _2476.z * cbModelParam._m0[1u].y;
    }
    float _2496 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1382);
    float _2497 = isnan(_2496) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2496 : min(cbModelParam._m0[25u].w, _2496));
    float _2586;
    float _2588;
    float _2590;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2550 = fma(_1628, cbModelParam._m0[21u].z, fma(_1624, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1620)) + cbModelParam._m0[21u].w;
        float _2554 = fma(_1628, cbModelParam._m0[22u].z, fma(_1624, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1620)) + cbModelParam._m0[22u].w;
        float _2558 = fma(_1628, cbModelParam._m0[23u].z, fma(_1624, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1620)) + cbModelParam._m0[23u].w;
        float _2561 = fma(_1567, cbModelParam._m0[21u].z, fma(_1566, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1565));
        float _2564 = fma(_1567, cbModelParam._m0[22u].z, fma(_1566, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1565));
        float _2567 = fma(_1567, cbModelParam._m0[23u].z, fma(_1566, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1565));
        float _2728;
        if (_2561 > 0.0)
        {
            _2728 = abs((1.0 - _2550) / _2561);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2561 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2550 + 1.0) / _2561);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2728 = frontier_phi_30_26_ladder;
        }
        float _3007;
        if (_2564 > 0.0)
        {
            _3007 = abs((1.0 - _2554) / _2564);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_2564 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_2554 + 1.0) / _2564);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _3007 = frontier_phi_42_37_ladder;
        }
        float _3220;
        if (_2567 > 0.0)
        {
            _3220 = abs((1.0 - _2558) / _2567);
        }
        else
        {
            float frontier_phi_51_48_ladder;
            if (_2567 < 0.0)
            {
                frontier_phi_51_48_ladder = abs((_2558 + 1.0) / _2567);
            }
            else
            {
                frontier_phi_51_48_ladder = 5000.0;
            }
            _3220 = frontier_phi_51_48_ladder;
        }
        float _3222 = isnan(_3007) ? _2728 : (isnan(_2728) ? _3007 : min(_2728, _3007));
        float _3223 = isnan(_3220) ? _3222 : (isnan(_3222) ? _3220 : min(_3222, _3220));
        float _3227 = (_3223 * _2561) + _2550;
        float _3228 = (_3223 * _2564) + _2554;
        float _3229 = (_3223 * _2567) + _2558;
        float _3230 = _3223 * 9.9999997473787516355514526367188e-05;
        float _3231 = (-1.0) - _3230;
        float _3233 = _3230 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_3229 > _3233) || ((_3229 < _3231) || ((_3228 > _3233) || ((_3228 < _3231) || ((_3227 < _3231) || (_3227 > _3233))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3429 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3229, cbModelParam._m0[17u].z, fma(_3228, cbModelParam._m0[17u].y, _3227 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3229, cbModelParam._m0[18u].z, fma(_3228, cbModelParam._m0[18u].y, _3227 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3229, cbModelParam._m0[19u].z, fma(_3228, cbModelParam._m0[19u].y, _3227 * cbModelParam._m0[19u].x))), _2497);
            frontier_phi_27_51_ladder = _3429.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _3429.y * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _3429.x * cbModelParam._m0[1u].z;
        }
        _2586 = frontier_phi_27_51_ladder_2;
        _2588 = frontier_phi_27_51_ladder_1;
        _2590 = frontier_phi_27_51_ladder;
    }
    else
    {
        vec4 _2570 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1565, _1566, _1567), _2497);
        _2586 = _2570.x * cbModelParam._m0[1u].z;
        _2588 = _2570.y * cbModelParam._m0[1u].z;
        _2590 = _2570.z * cbModelParam._m0[1u].z;
    }
    float _2603 = (((_1591 * _1542) + _1592) * _1557) * ((cbModelParam._m0[1u].w * (_2586 - _2488)) + _2488);
    float _2605 = (((_1591 * _1544) + _1592) * _1557) * ((cbModelParam._m0[1u].w * (_2588 - _2490)) + _2490);
    float _2607 = (((_1591 * _1545) + _1592) * _1557) * ((cbModelParam._m0[1u].w * (_2590 - _2492)) + _2492);
    float _2610 = fma(_2607, cbSceneParam._m0[89u].z, fma(_2605, cbSceneParam._m0[89u].y, _2603 * cbSceneParam._m0[89u].x));
    float _2613 = fma(_2607, cbSceneParam._m0[90u].z, fma(_2605, cbSceneParam._m0[90u].y, _2603 * cbSceneParam._m0[90u].x));
    float _2616 = fma(_2607, cbSceneParam._m0[91u].z, fma(_2605, cbSceneParam._m0[91u].y, _2603 * cbSceneParam._m0[91u].x));
    vec4 _2624 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1479, _1480));
    float _2626 = _2624.w;
    float _2638 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2626);
    float _2639 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2626);
    float _2640 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2626);
    uvec4 _2644 = floatBitsToUint(cbInstanceData._m0[_1517 + 5u]);
    uint _2646 = _2644.x * 14u;
    uint _2647 = _2646 + 13u;
    float _2654 = _1557 + (-1.0);
    float _2659 = (cbLight._m0[_2647].x * _2654) + 1.0;
    float _2660 = (cbLight._m0[_2647].y * _2654) + 1.0;
    float _2661 = (cbLight._m0[_2647].z * _2654) + 1.0;
    float _2662 = (cbLight._m0[_2647].w * _2654) + 1.0;
    uint _2663 = _2646 + 5u;
    float _2669 = isnan(1.0) ? _2660 : (isnan(_2660) ? 1.0 : min(_2660, 1.0));
    uint _2673 = _2646 + 4u;
    float _2682 = isnan(1.0) ? _2659 : (isnan(_2659) ? 1.0 : min(_2659, 1.0));
    uint _2686 = _2646 | 1u;
    float _2697 = dot(vec3(cbLight._m0[_2646].xyz), vec3(_1378, _1379, _1380));
    float _2700 = dot(vec3(cbLight._m0[_2686].xyz), vec3(_1378, _1379, _1380));
    float _5170 = isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : max(_2697, 0.0));
    float _5181 = isnan(0.0) ? _2700 : (isnan(_2700) ? 0.0 : max(_2700, 0.0));
    float _2705 = (isnan(1.0) ? _5170 : (isnan(_5170) ? 1.0 : min(_5170, 1.0))) * 0.3183098733425140380859375;
    float _2707 = (isnan(1.0) ? _5181 : (isnan(_5181) ? 1.0 : min(_5181, 1.0))) * 0.3183098733425140380859375;
    float _2714 = ((cbLight._m0[_2663].x * _2669) * _2707) + (((cbLight._m0[_2673].x * _2638) * _2682) * _2705);
    float _2715 = ((_2669 * cbLight._m0[_2663].y) * _2707) + (((cbLight._m0[_2673].y * _2639) * _2682) * _2705);
    float _2716 = ((_2669 * cbLight._m0[_2663].z) * _2707) + (((cbLight._m0[_2673].z * _2640) * _2682) * _2705);
    uvec4 _2720 = floatBitsToUint(cbLight._m0[_2646 + 12u]);
    bool _2722 = _2720.x == 0u;
    float _2733;
    float _2735;
    float _2737;
    if (_2722)
    {
        _2733 = _2714;
        _2735 = _2715;
        _2737 = _2716;
    }
    else
    {
        uint _2741 = _2646 + 6u;
        float _2757 = (dot(vec3(cbLight._m0[_2646 + 2u].xyz), vec3(_1378, _1379, _1380)) * 0.5) + 0.5;
        float _2758 = _2757 * _2757;
        float _5192 = isnan(0.0) ? _2758 : (isnan(_2758) ? 0.0 : max(_2758, 0.0));
        float _2759 = isnan(1.0) ? _5192 : (isnan(_5192) ? 1.0 : min(_5192, 1.0));
        float _2760 = isnan(1.0) ? _2661 : (isnan(_2661) ? 1.0 : min(_2661, 1.0));
        _2733 = (((cbLight._m0[_2741].x * 0.3183098733425140380859375) * _2759) * _2760) + _2714;
        _2735 = (((cbLight._m0[_2741].y * 0.3183098733425140380859375) * _2759) * _2760) + _2715;
        _2737 = (((cbLight._m0[_2741].z * 0.3183098733425140380859375) * _2759) * _2760) + _2716;
    }
    bool _2740 = _2720.y == 0u;
    float _2778;
    float _2780;
    float _2782;
    if (_2740)
    {
        _2778 = _2733;
        _2780 = _2735;
        _2782 = _2737;
    }
    else
    {
        uint _2951 = _2646 + 7u;
        float _2967 = (dot(vec3(cbLight._m0[_2646 + 3u].xyz), vec3(_1378, _1379, _1380)) * 0.5) + 0.5;
        float _2968 = _2967 * _2967;
        float _5208 = isnan(0.0) ? _2968 : (isnan(_2968) ? 0.0 : max(_2968, 0.0));
        float _2969 = isnan(1.0) ? _5208 : (isnan(_5208) ? 1.0 : min(_5208, 1.0));
        float _2970 = isnan(1.0) ? _2662 : (isnan(_2662) ? 1.0 : min(_2662, 1.0));
        _2778 = (((cbLight._m0[_2951].x * 0.3183098733425140380859375) * _2969) * _2970) + _2733;
        _2780 = (((cbLight._m0[_2951].y * 0.3183098733425140380859375) * _2969) * _2970) + _2735;
        _2782 = (((cbLight._m0[_2951].z * 0.3183098733425140380859375) * _2969) * _2970) + _2737;
    }
    uint _2785 = _2646 + 8u;
    float _2798 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2646].w)) * _1382) * 0.949999988079071044921875);
    float _2799 = _2798 * _2798;
    float _2800 = cbLight._m0[_2646].x + _1459;
    float _2801 = cbLight._m0[_2646].y + _1460;
    float _2802 = cbLight._m0[_2646].z + _1461;
    float _2806 = inversesqrt(dot(vec3(_2800, _2801, _2802), vec3(_2800, _2801, _2802)));
    float _2807 = _2806 * _2800;
    float _2808 = _2806 * _2801;
    float _2809 = _2806 * _2802;
    float _2810 = dot(vec3(_1378, _1379, _1380), vec3(cbLight._m0[_2646].xyz));
    float _5224 = isnan(0.0) ? _2810 : (isnan(_2810) ? 0.0 : max(_2810, 0.0));
    float _2813 = isnan(1.0) ? _5224 : (isnan(_5224) ? 1.0 : min(_5224, 1.0));
    float _5235 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
    float _2814 = isnan(1.0) ? _5235 : (isnan(_5235) ? 1.0 : min(_5235, 1.0));
    float _2815 = dot(vec3(_1378, _1379, _1380), vec3(_2807, _2808, _2809));
    float _5246 = isnan(0.0) ? _2815 : (isnan(_2815) ? 0.0 : max(_2815, 0.0));
    float _2818 = isnan(1.0) ? _5246 : (isnan(_5246) ? 1.0 : min(_5246, 1.0));
    float _2819 = dot(vec3(cbLight._m0[_2646].xyz), vec3(_2807, _2808, _2809));
    float _5257 = isnan(0.0) ? _2819 : (isnan(_2819) ? 0.0 : max(_2819, 0.0));
    float _2823 = _2799 * _2799;
    float _2827 = ((_2818 * _2818) * (_2823 + (-1.0))) + 1.0;
    float _2835 = exp2(log2(1.0 - (isnan(1.0) ? _5257 : (isnan(_5257) ? 1.0 : min(_5257, 1.0)))) * 5.0);
    float _2836 = 0.959999978542327880859375 - _1539;
    float _2838 = 0.959999978542327880859375 - _1540;
    float _2839 = 0.959999978542327880859375 - _1541;
    float _2846 = 1.0 - _2799;
    float _2857 = (0.5 / (((_2814 * ((_2813 * _2846) + _2799)) + 9.9999999392252902907785028219223e-09) + (((_2814 * _2846) + _2799) * _2813))) * _2813;
    float _5268 = isnan(0.0) ? _2857 : (isnan(_2857) ? 0.0 : max(_2857, 0.0));
    float _2859 = (isnan(1.0) ? _5268 : (isnan(_5268) ? 1.0 : min(_5268, 1.0))) * (_2823 / ((_2827 * _2827) * 3.141590118408203125));
    uint _2873 = _2646 + 9u;
    float _2884 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2686].w)) * _1382) * 0.949999988079071044921875);
    float _2885 = _2884 * _2884;
    float _2886 = cbLight._m0[_2686].x + _1459;
    float _2887 = cbLight._m0[_2686].y + _1460;
    float _2888 = cbLight._m0[_2686].z + _1461;
    float _2892 = inversesqrt(dot(vec3(_2886, _2887, _2888), vec3(_2886, _2887, _2888)));
    float _2893 = _2892 * _2886;
    float _2894 = _2892 * _2887;
    float _2895 = _2892 * _2888;
    float _2896 = dot(vec3(_1378, _1379, _1380), vec3(cbLight._m0[_2686].xyz));
    float _5279 = isnan(0.0) ? _2896 : (isnan(_2896) ? 0.0 : max(_2896, 0.0));
    float _2899 = isnan(1.0) ? _5279 : (isnan(_5279) ? 1.0 : min(_5279, 1.0));
    float _2900 = dot(vec3(_1378, _1379, _1380), vec3(_2893, _2894, _2895));
    float _5290 = isnan(0.0) ? _2900 : (isnan(_2900) ? 0.0 : max(_2900, 0.0));
    float _2903 = isnan(1.0) ? _5290 : (isnan(_5290) ? 1.0 : min(_5290, 1.0));
    float _2904 = dot(vec3(cbLight._m0[_2686].xyz), vec3(_2893, _2894, _2895));
    float _5301 = isnan(0.0) ? _2904 : (isnan(_2904) ? 0.0 : max(_2904, 0.0));
    float _2908 = _2885 * _2885;
    float _2912 = ((_2903 * _2903) * (_2908 + (-1.0))) + 1.0;
    float _2919 = exp2(log2(1.0 - (isnan(1.0) ? _5301 : (isnan(_5301) ? 1.0 : min(_5301, 1.0)))) * 5.0);
    float _2926 = 1.0 - _2885;
    float _2936 = (0.5 / (((_2814 * ((_2899 * _2926) + _2885)) + 9.9999999392252902907785028219223e-09) + (((_2814 * _2926) + _2885) * _2899))) * _2899;
    float _5312 = isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : max(_2936, 0.0));
    float _2938 = (isnan(1.0) ? _5312 : (isnan(_5312) ? 1.0 : min(_5312, 1.0))) * (_2908 / ((_2912 * _2912) * 3.141590118408203125));
    float _2948 = (((((_2919 * _2836) + _1542) * cbLight._m0[_2873].x) * _2938) * _2669) + ((((cbLight._m0[_2785].x * _2638) * ((_2835 * _2836) + _1542)) * _2859) * _2682);
    float _2949 = (((((_2919 * _2838) + _1544) * cbLight._m0[_2873].y) * _2938) * _2669) + ((((cbLight._m0[_2785].y * _2639) * ((_2835 * _2838) + _1544)) * _2859) * _2682);
    float _2950 = (((((_2919 * _2839) + _1545) * cbLight._m0[_2873].z) * _2938) * _2669) + ((((cbLight._m0[_2785].z * _2640) * ((_2835 * _2839) + _1545)) * _2859) * _2682);
    float _3012;
    float _3014;
    float _3016;
    if (_2722)
    {
        _3012 = _2948;
        _3014 = _2949;
        _3016 = _2950;
    }
    else
    {
        uint _3018 = _2646 + 2u;
        uint _3022 = _2646 + 10u;
        float _3036 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3018].w)) * _1382) * 0.949999988079071044921875);
        float _3037 = _3036 * _3036;
        float _3038 = cbLight._m0[_3018].x + _1459;
        float _3039 = cbLight._m0[_3018].y + _1460;
        float _3040 = cbLight._m0[_3018].z + _1461;
        float _3044 = inversesqrt(dot(vec3(_3038, _3039, _3040), vec3(_3038, _3039, _3040)));
        float _3045 = _3044 * _3038;
        float _3046 = _3044 * _3039;
        float _3047 = _3044 * _3040;
        float _3048 = dot(vec3(_1378, _1379, _1380), vec3(cbLight._m0[_3018].xyz));
        float _5323 = isnan(0.0) ? _3048 : (isnan(_3048) ? 0.0 : max(_3048, 0.0));
        float _3051 = isnan(1.0) ? _5323 : (isnan(_5323) ? 1.0 : min(_5323, 1.0));
        float _3052 = dot(vec3(_1378, _1379, _1380), vec3(_3045, _3046, _3047));
        float _5334 = isnan(0.0) ? _3052 : (isnan(_3052) ? 0.0 : max(_3052, 0.0));
        float _3055 = isnan(1.0) ? _5334 : (isnan(_5334) ? 1.0 : min(_5334, 1.0));
        float _3056 = dot(vec3(cbLight._m0[_3018].xyz), vec3(_3045, _3046, _3047));
        float _5345 = isnan(0.0) ? _3056 : (isnan(_3056) ? 0.0 : max(_3056, 0.0));
        float _3060 = _3037 * _3037;
        float _3064 = ((_3055 * _3055) * (_3060 + (-1.0))) + 1.0;
        float _3071 = exp2(log2(1.0 - (isnan(1.0) ? _5345 : (isnan(_5345) ? 1.0 : min(_5345, 1.0)))) * 5.0);
        float _3078 = 1.0 - _3037;
        float _3088 = (0.5 / (((_2814 * ((_3051 * _3078) + _3037)) + 9.9999999392252902907785028219223e-09) + (((_2814 * _3078) + _3037) * _3051))) * _3051;
        float _5356 = isnan(0.0) ? _3088 : (isnan(_3088) ? 0.0 : max(_3088, 0.0));
        float _3090 = (isnan(1.0) ? _5356 : (isnan(_5356) ? 1.0 : min(_5356, 1.0))) * (_3060 / ((_3064 * _3064) * 3.141590118408203125));
        float _3091 = isnan(1.0) ? _2661 : (isnan(_2661) ? 1.0 : min(_2661, 1.0));
        _3012 = (((((_3071 * _2836) + _1542) * cbLight._m0[_3022].x) * _3090) * _3091) + _2948;
        _3014 = (((((_3071 * _2838) + _1544) * cbLight._m0[_3022].y) * _3090) * _3091) + _2949;
        _3016 = (((((_3071 * _2839) + _1545) * cbLight._m0[_3022].z) * _3090) * _3091) + _2950;
    }
    float _3126;
    float _3128;
    float _3130;
    if (_2740)
    {
        _3126 = _3012;
        _3128 = _3014;
        _3130 = _3016;
    }
    else
    {
        uint _3137 = _2646 + 3u;
        uint _3141 = _2646 + 11u;
        float _3155 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3137].w)) * _1382) * 0.949999988079071044921875);
        float _3156 = _3155 * _3155;
        float _3157 = cbLight._m0[_3137].x + _1459;
        float _3158 = cbLight._m0[_3137].y + _1460;
        float _3159 = cbLight._m0[_3137].z + _1461;
        float _3163 = inversesqrt(dot(vec3(_3157, _3158, _3159), vec3(_3157, _3158, _3159)));
        float _3164 = _3163 * _3157;
        float _3165 = _3163 * _3158;
        float _3166 = _3163 * _3159;
        float _3167 = dot(vec3(_1378, _1379, _1380), vec3(cbLight._m0[_3137].xyz));
        float _5372 = isnan(0.0) ? _3167 : (isnan(_3167) ? 0.0 : max(_3167, 0.0));
        float _3170 = isnan(1.0) ? _5372 : (isnan(_5372) ? 1.0 : min(_5372, 1.0));
        float _3171 = dot(vec3(_1378, _1379, _1380), vec3(_3164, _3165, _3166));
        float _5383 = isnan(0.0) ? _3171 : (isnan(_3171) ? 0.0 : max(_3171, 0.0));
        float _3174 = isnan(1.0) ? _5383 : (isnan(_5383) ? 1.0 : min(_5383, 1.0));
        float _3175 = dot(vec3(cbLight._m0[_3137].xyz), vec3(_3164, _3165, _3166));
        float _5394 = isnan(0.0) ? _3175 : (isnan(_3175) ? 0.0 : max(_3175, 0.0));
        float _3179 = _3156 * _3156;
        float _3183 = ((_3174 * _3174) * (_3179 + (-1.0))) + 1.0;
        float _3190 = exp2(log2(1.0 - (isnan(1.0) ? _5394 : (isnan(_5394) ? 1.0 : min(_5394, 1.0)))) * 5.0);
        float _3197 = 1.0 - _3156;
        float _3207 = (0.5 / (((_2814 * ((_3170 * _3197) + _3156)) + 9.9999999392252902907785028219223e-09) + (((_2814 * _3197) + _3156) * _3170))) * _3170;
        float _5405 = isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : max(_3207, 0.0));
        float _3209 = (isnan(1.0) ? _5405 : (isnan(_5405) ? 1.0 : min(_5405, 1.0))) * (_3179 / ((_3183 * _3183) * 3.141590118408203125));
        float _3210 = isnan(1.0) ? _2662 : (isnan(_2662) ? 1.0 : min(_2662, 1.0));
        _3126 = (((((_3190 * _2836) + _1542) * cbLight._m0[_3141].x) * _3209) * _3210) + _3012;
        _3128 = (((((_3190 * _2838) + _1544) * cbLight._m0[_3141].y) * _3209) * _3210) + _3014;
        _3130 = (((((_3190 * _2839) + _1545) * cbLight._m0[_3141].z) * _3209) * _3210) + _3016;
    }
    float _3344;
    float _3346;
    float _3348;
    float _3350;
    float _3352;
    float _3354;
    if (_2644.y == 0u)
    {
        float _3285 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _3286 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _3285;
        float _3287 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _3285;
        float _3288 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _3285;
        uvec4 _3300 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3301 = _3300.x;
        uint _3312 = uint((float(_3300.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1480) / _3301))) + floor(float(uint(cbSceneParam._m0[85u].x * _1479) / _3301)));
        float _3322 = (log2(_3288 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3323 = isnan(0.0) ? _3322 : (isnan(_3322) ? 0.0 : max(_3322, 0.0));
        uint _3326 = uint(isnan(14.0) ? _3323 : (isnan(_3323) ? 14.0 : min(_3323, 14.0)));
        uvec4 _3331 = texelFetch(g_lightClusterGridBuffer, int(((_3326 << 2u) + (_3312 << 6u)) >> 2u));
        uint _3332 = _3331.x;
        uint _3333 = _3300.z;
        float _3434;
        float _3436;
        float _3438;
        float _3440;
        float _3442;
        float _3444;
        if (((((1u << ((_3333 >> 4u) & 15u)) + 4294967295u) & _3332) == 0u) || ((_3333 & 240u) == 0u))
        {
            _3434 = 0.0;
            _3436 = 0.0;
            _3438 = 0.0;
            _3440 = 0.0;
            _3442 = 0.0;
            _3444 = 0.0;
        }
        else
        {
            float _3435;
            float _3437;
            float _3439;
            float _3441;
            float _3443;
            float _3445;
            float _3586 = 0.0;
            float _3587 = 0.0;
            float _3588 = 0.0;
            float _3589 = 0.0;
            float _3590 = 0.0;
            float _3591 = 0.0;
            uint _3592 = 0u;
            uint _3601;
            bool _3602;
            for (;;)
            {
                _3601 = texelFetch(g_lightClassification, int((((_3326 << 5u) + (_3312 << 9u)) + (_3592 << 2u)) >> 2u)).x;
                _3602 = _3601 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3602)
                {
                    frontier_phi_68_pred = _3588;
                    frontier_phi_68_pred_1 = _3591;
                    frontier_phi_68_pred_2 = _3590;
                    frontier_phi_68_pred_3 = _3589;
                    frontier_phi_68_pred_4 = _3587;
                    frontier_phi_68_pred_5 = _3586;
                }
                else
                {
                    float _3731;
                    float _3732;
                    float _3733;
                    float _3734;
                    float _3735;
                    float _3736;
                    uint _3737;
                    _3731 = _3586;
                    _3732 = _3587;
                    _3733 = _3588;
                    _3734 = _3589;
                    _3735 = _3590;
                    _3736 = _3591;
                    _3737 = _3601;
                    float _3658;
                    float _3659;
                    float _3660;
                    float _3661;
                    float _3662;
                    float _3663;
                    for (;;)
                    {
                        uint _3741 = uint(findLSB(_3737)) + (_3592 << 5u);
                        uint _3738 = (_3737 + 4294967295u) & _3737;
                        uint _3743 = _3741 * 48u;
                        vec4 _3757 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3743)).x, texelFetch(g_PointLightRenderingBuffer, int(_3743 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3743 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3743 + 3u)).x));
                        uint _3763 = (_3741 * 48u) + 4u;
                        vec4 _3776 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3763)).x, texelFetch(g_PointLightRenderingBuffer, int(_3763 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3763 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3763 + 3u)).x));
                        uint _3782 = (_3741 * 48u) + 8u;
                        vec3 _3793 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3782)).x, texelFetch(g_PointLightRenderingBuffer, int(_3782 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3782 + 2u)).x));
                        float _3797 = _3757.x - _3286;
                        float _3798 = _3757.y - _3287;
                        float _3799 = _3757.z - _3288;
                        float _3800 = dot(vec3(_3797, _3798, _3799), vec3(_3797, _3798, _3799));
                        float _3803 = inversesqrt(_3800);
                        float _3804 = _3803 * _3797;
                        float _3805 = _3803 * _3798;
                        float _3806 = _3803 * _3799;
                        float _3807 = dot(vec3(_1498, _1501, _1504), vec3(_3804, _3805, _3806));
                        float _3812 = 1.0 - (_3800 * _3757.w);
                        float _5431 = isnan(0.0) ? _3812 : (isnan(_3812) ? 0.0 : max(_3812, 0.0));
                        float _3813 = isnan(1.0) ? _5431 : (isnan(_5431) ? 1.0 : min(_5431, 1.0));
                        float _3814 = sqrt(_3800) * _3776.w;
                        float _3816 = 1.39999997615814208984375 / (_3814 + 1.39999997615814208984375);
                        float _3817 = _3816 * _3816;
                        float _3820 = ((1.0 - _3817) * _3807) + _3817;
                        float _3823 = _3814 * _3814;
                        float _3827 = ((isnan(0.0) ? _3820 : (isnan(_3820) ? 0.0 : max(_3820, 0.0))) * _3813) / ((_3823 * 0.699999988079071044921875) + 1.0);
                        float _3831 = (-0.0) - _3286;
                        float _3832 = (-0.0) - _3287;
                        float _3833 = (-0.0) - _3288;
                        float _3837 = inversesqrt(dot(vec3(_3831, _3832, _3833), vec3(_3831, _3832, _3833)));
                        float _3838 = _3837 * _3831;
                        float _3839 = _3837 * _3832;
                        float _3840 = _3837 * _3833;
                        float _3848 = exp2(log2(1.0 / ((_3823 * 3.5) + 5.0)) * 0.25);
                        float _3849 = 1.0 - _1573;
                        float _3856 = sqrt(1.0 - ((1.0 - (_3849 * _3849)) * (1.0 - (_3848 * _3848))));
                        float _3857 = _3856 * _3856;
                        float _3858 = _3857 * _3857;
                        float _3859 = _3838 + _3804;
                        float _3860 = _3839 + _3805;
                        float _3861 = _3840 + _3806;
                        float _3865 = inversesqrt(dot(vec3(_3859, _3860, _3861), vec3(_3859, _3860, _3861)));
                        float _3869 = dot(vec3(_1498, _1501, _1504), vec3(_3838, _3839, _3840));
                        float _5447 = isnan(0.0) ? _3869 : (isnan(_3869) ? 0.0 : max(_3869, 0.0));
                        float _3872 = isnan(1.0) ? _5447 : (isnan(_5447) ? 1.0 : min(_5447, 1.0));
                        float _3873 = dot(vec3(_1498, _1501, _1504), vec3(_3865 * _3859, _3865 * _3860, _3865 * _3861));
                        float _5458 = isnan(0.0) ? _3873 : (isnan(_3873) ? 0.0 : max(_3873, 0.0));
                        float _3876 = isnan(1.0) ? _5458 : (isnan(_5458) ? 1.0 : min(_5458, 1.0));
                        float _3880 = ((_3876 * _3876) * (_3858 + (-1.0))) + 1.0;
                        float _3881 = _3816 * _3857;
                        float _3882 = _3881 * _3881;
                        float _3885 = ((1.0 - _3882) * _3807) + _3882;
                        float _5469 = isnan(0.0) ? _3885 : (isnan(_3885) ? 0.0 : max(_3885, 0.0));
                        float _3886 = isnan(1.0) ? _5469 : (isnan(_5469) ? 1.0 : min(_5469, 1.0));
                        float _3887 = 1.0 - _3857;
                        float _3897 = (0.5 / (((_3886 * ((_3872 * _3887) + _3857)) + 9.9999999392252902907785028219223e-09) + (((_3886 * _3887) + _3857) * _3872))) * _3886;
                        float _5480 = isnan(0.0) ? _3897 : (isnan(_3897) ? 0.0 : max(_3897, 0.0));
                        float _3908 = (((_3858 * 3.1415927410125732421875) * (isnan(1.0) ? _5480 : (isnan(_5480) ? 1.0 : min(_5480, 1.0)))) / ((_3880 * _3880) * ((_3823 * 2.1991131305694580078125) + 3.141590118408203125))) * _3813;
                        _3661 = (_3827 * _3776.x) + _3734;
                        _3662 = (_3827 * _3776.y) + _3735;
                        _3663 = (_3827 * _3776.z) + _3736;
                        _3658 = (_3908 * _3793.x) + _3731;
                        _3659 = (_3908 * _3793.y) + _3732;
                        _3660 = (_3908 * _3793.z) + _3733;
                        if (_3738 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3731 = _3658;
                            _3732 = _3659;
                            _3733 = _3660;
                            _3734 = _3661;
                            _3735 = _3662;
                            _3736 = _3663;
                            _3737 = _3738;
                        }
                    }
                    frontier_phi_68_pred = _3660;
                    frontier_phi_68_pred_1 = _3663;
                    frontier_phi_68_pred_2 = _3662;
                    frontier_phi_68_pred_3 = _3661;
                    frontier_phi_68_pred_4 = _3659;
                    frontier_phi_68_pred_5 = _3658;
                }
                _3439 = frontier_phi_68_pred;
                _3445 = frontier_phi_68_pred_1;
                _3443 = frontier_phi_68_pred_2;
                _3441 = frontier_phi_68_pred_3;
                _3437 = frontier_phi_68_pred_4;
                _3435 = frontier_phi_68_pred_5;
                uint _3593 = _3592 + 1u;
                if (_3593 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3586 = _3435;
                    _3587 = _3437;
                    _3588 = _3439;
                    _3589 = _3441;
                    _3590 = _3443;
                    _3591 = _3445;
                    _3592 = _3593;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3434 = _3435;
            _3436 = _3437;
            _3438 = _3439;
            _3440 = _3441;
            _3442 = _3443;
            _3444 = _3445;
        }
        uvec4 _3448 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3449 = _3448.z;
        uint _3451 = (_3449 >> 8u) & 15u;
        float _3554;
        float _3556;
        float _3558;
        float _3560;
        float _3562;
        float _3564;
        if (((4294967295u << _3451) & _3332) == 0u)
        {
            _3554 = _3434;
            _3556 = _3436;
            _3558 = _3438;
            _3560 = _3440;
            _3562 = _3442;
            _3564 = _3444;
        }
        else
        {
            float _3579 = inversesqrt(dot(vec3(_3286, _3287, _3288), vec3(_3286, _3287, _3288)));
            float _3580 = _3579 * _3286;
            float _3581 = _3579 * _3287;
            float _3582 = _3579 * _3288;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3451 < ((_3449 >> 12u) & 15u))
            {
                float _3555;
                float _3557;
                float _3559;
                float _3561;
                float _3563;
                float _3565;
                float _3714 = _3434;
                float _3715 = _3436;
                float _3716 = _3438;
                float _3717 = _3440;
                float _3718 = _3442;
                float _3719 = _3444;
                uint _3720 = _3451;
                uint _3729;
                bool _3730;
                for (;;)
                {
                    _3729 = texelFetch(g_lightClassification, int((((_3326 << 5u) + (_3312 << 9u)) + (_3720 << 2u)) >> 2u)).x;
                    _3730 = _3729 == 0u;
                    float frontier_phi_79_pred;
                    float frontier_phi_79_pred_1;
                    float frontier_phi_79_pred_2;
                    float frontier_phi_79_pred_3;
                    float frontier_phi_79_pred_4;
                    float frontier_phi_79_pred_5;
                    if (_3730)
                    {
                        frontier_phi_79_pred = _3719;
                        frontier_phi_79_pred_1 = _3718;
                        frontier_phi_79_pred_2 = _3717;
                        frontier_phi_79_pred_3 = _3716;
                        frontier_phi_79_pred_4 = _3715;
                        frontier_phi_79_pred_5 = _3714;
                    }
                    else
                    {
                        float _3922;
                        float _3923;
                        float _3924;
                        float _3925;
                        float _3926;
                        float _3927;
                        float _4215;
                        float _4216;
                        float _4217;
                        float _4218;
                        float _4219;
                        float _4220;
                        float _3935 = _3714;
                        float _3936 = _3715;
                        float _3937 = _3716;
                        float _3938 = _3717;
                        float _3939 = _3718;
                        float _3940 = _3719;
                        uint _3941 = _3729;
                        uint _3942;
                        vec4 _3967;
                        float _3968;
                        vec4 _3983;
                        vec3 _3995;
                        vec4 _4010;
                        vec4 _4025;
                        float _4071;
                        bool _4072;
                        for (;;)
                        {
                            uint _3952 = ((_3720 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3941));
                            _3942 = (_3941 + 4294967295u) & _3941;
                            uint _3954 = _3952 * 40u;
                            _3967 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3954)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3954 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3954 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3954 + 3u)).x));
                            _3968 = _3967.w;
                            uint _3970 = (_3952 * 40u) + 4u;
                            _3983 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3970)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3970 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3970 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3970 + 3u)).x));
                            uint _3985 = (_3952 * 40u) + 8u;
                            _3995 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3985)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3985 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3985 + 2u)).x));
                            uint _3997 = (_3952 * 40u) + 16u;
                            _4010 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3997)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3997 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3997 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3997 + 3u)).x));
                            uint _4012 = (_3952 * 40u) + 20u;
                            _4025 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4012)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4012 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4012 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4012 + 3u)).x));
                            uint _4027 = (_3952 * 40u) + 24u;
                            vec4 _4040 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4027)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4027 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4027 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4027 + 3u)).x));
                            uint _4046 = (_3952 * 40u) + 28u;
                            vec4 _4059 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4046)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4046 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4046 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4046 + 3u)).x));
                            _4071 = fma(_3288, _4059.z, fma(_3287, _4059.y, _4059.x * _3286)) + _4059.w;
                            _4072 = !((fma(_3288, _4040.z, fma(_3287, _4040.y, _4040.x * _3286)) + _4040.w) <= 0.0);
                            float frontier_phi_85_pred;
                            float frontier_phi_85_pred_1;
                            float frontier_phi_85_pred_2;
                            float frontier_phi_85_pred_3;
                            float frontier_phi_85_pred_4;
                            float frontier_phi_85_pred_5;
                            if (_4072)
                            {
                                float _4099 = _3967.x - _3286;
                                float _4100 = _3967.y - _3287;
                                float _4101 = _3967.z - _3288;
                                float _4102 = dot(vec3(_4099, _4100, _4101), vec3(_4099, _4100, _4101));
                                float _4105 = inversesqrt(_4102);
                                float _4106 = _4105 * _4099;
                                float _4107 = _4105 * _4100;
                                float _4108 = _4105 * _4101;
                                float _4112 = 1.0 - (_4102 / (_3968 * _3968));
                                float _5491 = isnan(0.0) ? _4112 : (isnan(_4112) ? 0.0 : max(_4112, 0.0));
                                float _4113 = isnan(1.0) ? _5491 : (isnan(_5491) ? 1.0 : min(_5491, 1.0));
                                float _4117 = sqrt(_4102) * _3983.w;
                                float _4119 = 1.39999997615814208984375 / (_4117 + 1.39999997615814208984375);
                                float _4120 = _4119 * _4119;
                                float _4123 = ((1.0 - _4120) * dot(vec3(_4106, _4107, _4108), vec3(_1498, _1501, _1504))) + _4120;
                                float _4126 = _4117 * _4117;
                                float _4130 = (fma(_3288, _4010.z, fma(_3287, _4010.y, _4010.x * _3286)) + _4010.w) / _4071;
                                float _4131 = (fma(_3288, _4025.z, fma(_3287, _4025.y, _4025.x * _3286)) + _4025.w) / _4071;
                                float _4135 = 1.0 - dot(vec2(_4130, _4131), vec2(_4130, _4131));
                                float _5507 = isnan(0.0) ? _4135 : (isnan(_4135) ? 0.0 : max(_4135, 0.0));
                                float _4136 = isnan(1.0) ? _5507 : (isnan(_5507) ? 1.0 : min(_5507, 1.0));
                                float _4137 = _4136 * (((isnan(0.0) ? _4123 : (isnan(_4123) ? 0.0 : max(_4123, 0.0))) * _4113) / ((_4126 * 0.699999988079071044921875) + 1.0));
                                float _4149 = exp2(log2(1.0 / ((_4126 * 3.5) + 5.0)) * 0.25);
                                float _4150 = 1.0 - _1573;
                                float _4157 = sqrt(1.0 - ((1.0 - (_4150 * _4150)) * (1.0 - (_4149 * _4149))));
                                float _4158 = _4157 * _4157;
                                float _4159 = _4158 * _4158;
                                float _4160 = _4106 - _3580;
                                float _4161 = _4107 - _3581;
                                float _4162 = _4108 - _3582;
                                float _4166 = inversesqrt(dot(vec3(_4160, _4161, _4162), vec3(_4160, _4161, _4162)));
                                float _4170 = dot(vec3(_1498, _1501, _1504), vec3((-0.0) - _3580, (-0.0) - _3581, (-0.0) - _3582));
                                float _5518 = isnan(0.0) ? _4170 : (isnan(_4170) ? 0.0 : max(_4170, 0.0));
                                float _4173 = isnan(1.0) ? _5518 : (isnan(_5518) ? 1.0 : min(_5518, 1.0));
                                float _4174 = dot(vec3(_1498, _1501, _1504), vec3(_4166 * _4160, _4166 * _4161, _4166 * _4162));
                                float _5529 = isnan(0.0) ? _4174 : (isnan(_4174) ? 0.0 : max(_4174, 0.0));
                                float _4177 = isnan(1.0) ? _5529 : (isnan(_5529) ? 1.0 : min(_5529, 1.0));
                                float _4181 = ((_4177 * _4177) * (_4159 + (-1.0))) + 1.0;
                                float _4182 = _4119 * _4158;
                                float _4183 = _4182 * _4182;
                                float _4189 = ((1.0 - _4183) * dot(vec3(_1498, _1501, _1504), vec3(_4106, _4107, _4108))) + _4183;
                                float _5540 = isnan(0.0) ? _4189 : (isnan(_4189) ? 0.0 : max(_4189, 0.0));
                                float _4190 = isnan(1.0) ? _5540 : (isnan(_5540) ? 1.0 : min(_5540, 1.0));
                                float _4191 = 1.0 - _4158;
                                float _4201 = (0.5 / (((_4190 * ((_4173 * _4191) + _4158)) + 9.9999999392252902907785028219223e-09) + (((_4190 * _4191) + _4158) * _4173))) * _4190;
                                float _5551 = isnan(0.0) ? _4201 : (isnan(_4201) ? 0.0 : max(_4201, 0.0));
                                float _4211 = (_4136 * _4113) * (((_4159 * 3.1415927410125732421875) * (isnan(1.0) ? _5551 : (isnan(_5551) ? 1.0 : min(_5551, 1.0)))) / ((_4181 * _4181) * ((_4126 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_85_pred = _4137 * _3983.z;
                                frontier_phi_85_pred_1 = _4137 * _3983.y;
                                frontier_phi_85_pred_2 = _4137 * _3983.x;
                                frontier_phi_85_pred_3 = _4211 * _3995.z;
                                frontier_phi_85_pred_4 = _4211 * _3995.y;
                                frontier_phi_85_pred_5 = _4211 * _3995.x;
                            }
                            else
                            {
                                frontier_phi_85_pred = 0.0;
                                frontier_phi_85_pred_1 = 0.0;
                                frontier_phi_85_pred_2 = 0.0;
                                frontier_phi_85_pred_3 = 0.0;
                                frontier_phi_85_pred_4 = 0.0;
                                frontier_phi_85_pred_5 = 0.0;
                            }
                            _4220 = frontier_phi_85_pred;
                            _4219 = frontier_phi_85_pred_1;
                            _4218 = frontier_phi_85_pred_2;
                            _4217 = frontier_phi_85_pred_3;
                            _4216 = frontier_phi_85_pred_4;
                            _4215 = frontier_phi_85_pred_5;
                            _3925 = _4218 + _3938;
                            _3926 = _4219 + _3939;
                            _3927 = _4220 + _3940;
                            _3922 = _4215 + _3935;
                            _3923 = _4216 + _3936;
                            _3924 = _4217 + _3937;
                            if (_3942 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3935 = _3922;
                                _3936 = _3923;
                                _3937 = _3924;
                                _3938 = _3925;
                                _3939 = _3926;
                                _3940 = _3927;
                                _3941 = _3942;
                                continue;
                            }
                        }
                        frontier_phi_79_pred = _3927;
                        frontier_phi_79_pred_1 = _3926;
                        frontier_phi_79_pred_2 = _3925;
                        frontier_phi_79_pred_3 = _3924;
                        frontier_phi_79_pred_4 = _3923;
                        frontier_phi_79_pred_5 = _3922;
                    }
                    _3565 = frontier_phi_79_pred;
                    _3563 = frontier_phi_79_pred_1;
                    _3561 = frontier_phi_79_pred_2;
                    _3559 = frontier_phi_79_pred_3;
                    _3557 = frontier_phi_79_pred_4;
                    _3555 = frontier_phi_79_pred_5;
                    uint _3721 = _3720 + 1u;
                    if (_3721 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3714 = _3555;
                        _3715 = _3557;
                        _3716 = _3559;
                        _3717 = _3561;
                        _3718 = _3563;
                        _3719 = _3565;
                        _3720 = _3721;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3561;
                frontier_phi_60_61_ladder_1 = _3565;
                frontier_phi_60_61_ladder_2 = _3563;
                frontier_phi_60_61_ladder_3 = _3559;
                frontier_phi_60_61_ladder_4 = _3557;
                frontier_phi_60_61_ladder_5 = _3555;
            }
            else
            {
                frontier_phi_60_61_ladder = _3440;
                frontier_phi_60_61_ladder_1 = _3444;
                frontier_phi_60_61_ladder_2 = _3442;
                frontier_phi_60_61_ladder_3 = _3438;
                frontier_phi_60_61_ladder_4 = _3436;
                frontier_phi_60_61_ladder_5 = _3434;
            }
            _3554 = frontier_phi_60_61_ladder_5;
            _3556 = frontier_phi_60_61_ladder_4;
            _3558 = frontier_phi_60_61_ladder_3;
            _3560 = frontier_phi_60_61_ladder;
            _3562 = frontier_phi_60_61_ladder_2;
            _3564 = frontier_phi_60_61_ladder_1;
        }
        float _3569 = isnan(1.0) ? _1557 : (isnan(_1557) ? 1.0 : min(_1557, 1.0));
        _3344 = (_3569 * _3560) + _2778;
        _3346 = (_3569 * _3562) + _2780;
        _3348 = (_3569 * _3564) + _2782;
        _3350 = ((_3554 * _1542) * _3569) + _3126;
        _3352 = ((_3556 * _1544) * _3569) + _3128;
        _3354 = ((_3558 * _1545) * _3569) + _3130;
    }
    else
    {
        _3344 = _2778;
        _3346 = _2780;
        _3348 = _2782;
        _3350 = _3126;
        _3352 = _3128;
        _3354 = _3130;
    }
    float _5567 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
    float _5578 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
    float _5589 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
    float _5600 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
    float _3372 = ((isnan(1.0) ? _5567 : (isnan(_5567) ? 1.0 : min(_5567, 1.0))) * (_3344 + ((isnan(0.0) ? _2318 : (isnan(_2318) ? 0.0 : max(_2318, 0.0))) * _1557))) + ((_3350 + ((isnan(0.0) ? _2610 : (isnan(_2610) ? 0.0 : max(_2610, 0.0))) * _2397)) * cbPerFrame._m0[3u].x);
    float _3373 = ((isnan(1.0) ? _5578 : (isnan(_5578) ? 1.0 : min(_5578, 1.0))) * (_3346 + ((isnan(0.0) ? _2321 : (isnan(_2321) ? 0.0 : max(_2321, 0.0))) * _1557))) + ((_3352 + ((isnan(0.0) ? _2613 : (isnan(_2613) ? 0.0 : max(_2613, 0.0))) * _2397)) * cbPerFrame._m0[3u].x);
    float _3374 = ((isnan(1.0) ? _5589 : (isnan(_5589) ? 1.0 : min(_5589, 1.0))) * (_3348 + ((isnan(0.0) ? _2324 : (isnan(_2324) ? 0.0 : max(_2324, 0.0))) * _1557))) + ((_3354 + ((isnan(0.0) ? _2616 : (isnan(_2616) ? 0.0 : max(_2616, 0.0))) * _2397)) * cbPerFrame._m0[3u].x);
    float _3379 = cbInstanceData._m0[_1517 + 6u].w * (isnan(1.0) ? _5600 : (isnan(_5600) ? 1.0 : min(_5600, 1.0)));
    float _3384 = _1479 / cbSceneParam._m0[86u].x;
    float _3385 = _1480 / cbSceneParam._m0[86u].y;
    vec4 _3399 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3384, _3385, (log2((isnan(cbSceneParam._m0[77u].w) ? _1402 : (isnan(_1402) ? cbSceneParam._m0[77u].w : min(_1402, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3401 = _3399.x;
    float _3402 = _3399.y;
    float _3403 = _3399.z;
    float _3404 = _3399.w;
    float _3496;
    float _3498;
    float _3500;
    float _3502;
    if (_1402 > cbSceneParam._m0[78u].w)
    {
        float _3459 = isnan(_1402) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1402 : min(cbSceneParam._m0[80u].w, _1402));
        float _3460 = _3459 / _1402;
        float _3471 = _3460 * _1452;
        float _3472 = _1453 * _3460;
        float _3473 = (-0.0) - _3472;
        float _3474 = _3460 * _1454;
        float _3476 = (cbSceneParam._m0[77u].w * _3473) / _3459;
        float _3477 = _3476 + cbSceneParam._m0[79u].w;
        float _3478 = cbSceneParam._m0[79u].w - _3472;
        float _3484 = sqrt(((_3471 * _3471) + (_3472 * _3472)) + (_3474 * _3474));
        float _3487 = (1.0 - (cbSceneParam._m0[77u].w / _3459)) * _3484;
        float _3492 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3494 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3671;
        if (abs((_3473 - _3476) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3671 = ((((_3477 > 0.0) ? exp2(_3492 * _3477) : (2.0 - exp2(_3494 * _3477))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3487;
        }
        else
        {
            float _3615 = 1.0 / cbSceneParam._m0[80u].x;
            float _3616 = isnan(_3478) ? _3477 : (isnan(_3477) ? _3478 : max(_3477, _3478));
            float _3617 = isnan(_3478) ? _3477 : (isnan(_3477) ? _3478 : min(_3477, _3478));
            float _3626 = isnan(0.0) ? _3616 : (isnan(_3616) ? 0.0 : min(_3616, 0.0));
            float _3627 = isnan(0.0) ? _3617 : (isnan(_3617) ? 0.0 : min(_3617, 0.0));
            _3671 = ((abs(_3484 / _3473) * cbSceneParam._m0[80u].y) * ((((_3626 - _3627) * 2.0) - ((exp2(_3492 * (isnan(0.0) ? _3616 : (isnan(_3616) ? 0.0 : max(_3616, 0.0)))) - exp2(_3492 * (isnan(0.0) ? _3617 : (isnan(_3617) ? 0.0 : max(_3617, 0.0))))) * _3615)) - ((exp2(_3494 * _3626) - exp2(_3494 * _3627)) * _3615))) + (_3487 * cbSceneParam._m0[80u].z);
        }
        vec4 _3673 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3384, _3385, 1.0), 0.0);
        float _3682 = exp2((_3671 * (-1.44269502162933349609375)) * (1.0 - _3673.w));
        float _3683 = log2(_3682);
        float _3699 = log2(_3404);
        _3496 = (exp2(_3699 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3683 * cbSceneParam._m0[78u].x)) * _3673.x) / cbSceneParam._m0[78u].x)) + _3401;
        _3498 = (exp2(_3699 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3683 * cbSceneParam._m0[78u].y)) * _3673.y) / cbSceneParam._m0[78u].y)) + _3402;
        _3500 = (exp2(_3699 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3683 * cbSceneParam._m0[78u].z)) * _3673.z) / cbSceneParam._m0[78u].z)) + _3403;
        _3502 = _3682 * _3404;
    }
    else
    {
        _3496 = _3401;
        _3498 = _3402;
        _3500 = _3403;
        _3502 = _3404;
    }
    bool _3709;
    vec4 _3512;
    vec4 _3534;
    float _3536;
    float _3540;
    float _3541;
    float _3542;
    float _3543;
    bool _3553;
    for (;;)
    {
        _3512 = cbMatDynParam._m0[0u];
        float _3514 = roundEven(_3512.y);
        bool _3515 = _3514 == 3.0;
        float _3516 = log2(_3502);
        float _3523 = exp2(_3516 * cbSceneParam._m0[78u].x) * _3372;
        float _3524 = exp2(_3516 * cbSceneParam._m0[78u].y) * _3373;
        float _3525 = exp2(_3516 * cbSceneParam._m0[78u].z) * _3374;
        float _3532 = _1468 + (-0.5);
        _3534 = cbMtdParam._m0[1u];
        _3536 = _3534.y * _3532;
        float _3539 = (_3514 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3540 = _3539 * (_3515 ? _3523 : (_3523 + (cbSceneParam._m0[72u].w * _3496)));
        _3541 = _3539 * (_3515 ? _3524 : (_3524 + (cbSceneParam._m0[72u].w * _3498)));
        _3542 = _3539 * (_3515 ? _3525 : (_3525 + (cbSceneParam._m0[72u].w * _3500)));
        _3543 = _3532 * 0.999000012874603271484375;
        _3553 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3553)
        {
            if ((cbInstanceData._m0[_1517 + 7u].x + _3543) < 0.5)
            {
                _3709 = true;
                break;
            }
        }
        uint _3650 = _1518 + uint(_3512.w);
        if ((cbInstanceData._m0[_3650].w < 1.0) && ((cbInstanceData._m0[_3650].w + _3543) < 0.5))
        {
            _3709 = true;
            break;
        }
        if ((_3536 + _631) < _3534.x)
        {
            _3709 = true;
            break;
        }
        _3709 = false;
        break;
    }
    float _3913;
    if (_3709)
    {
        discard_state = true;
        _3913 = 0.0;
    }
    else
    {
        _3913 = _3379;
    }
    SV_Target.x = _3540;
    SV_Target.y = _3541;
    SV_Target.z = _3542;
    SV_Target.w = _3913;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3379;
    discard_exit();
}


