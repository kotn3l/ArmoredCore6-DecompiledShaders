#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_1;
layout(location = 7) in vec4 TEXCOORD_2;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_4;
layout(location = 6) out vec4 TEXCOORD_5;
layout(location = 7) out vec4 TEXCOORD_9;
layout(location = 8) out vec4 TEXCOORD_14;
layout(location = 9) out vec4 TEXCOORD_15;
layout(location = 10) out vec3 TEXCOORD_16;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_15.x = 0.0;
    TEXCOORD_15.y = 0.0;
    TEXCOORD_15.z = 0.0;
    TEXCOORD_15.w = 0.0;
    TEXCOORD_16.x = 0.0;
    TEXCOORD_16.y = 0.0;
    TEXCOORD_16.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _227 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _229 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _230 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _240 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _241 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _242 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _252 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _253 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _254 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _260 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _262 = texelFetch(g_InstanceIndexBuffer, int(_260));
    uint _263 = _262.x;
    uint _265 = _263 * 13u;
    uint _273 = (floatBitsToUint(cbInstanceData._m0[_265 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _280 = _273 + 1u;
    uint _287 = _273 + 2u;
    precise float _294 = POSITION.x * cbObjMatrix._m0[_273].x;
    precise float _295 = POSITION.y * cbObjMatrix._m0[_273].y;
    precise float _296 = _295 + _294;
    precise float _297 = POSITION.z * cbObjMatrix._m0[_273].z;
    precise float _298 = _297 + _296;
    precise float _299 = 1.0 * cbObjMatrix._m0[_273].w;
    precise float _301 = _299 + _298;
    precise float _302 = POSITION.x * cbObjMatrix._m0[_280].x;
    precise float _303 = POSITION.y * cbObjMatrix._m0[_280].y;
    precise float _304 = _303 + _302;
    precise float _305 = POSITION.z * cbObjMatrix._m0[_280].z;
    precise float _306 = _305 + _304;
    precise float _307 = 1.0 * cbObjMatrix._m0[_280].w;
    precise float _308 = _307 + _306;
    precise float _309 = POSITION.x * cbObjMatrix._m0[_287].x;
    precise float _310 = POSITION.y * cbObjMatrix._m0[_287].y;
    precise float _311 = _310 + _309;
    precise float _312 = POSITION.z * cbObjMatrix._m0[_287].z;
    precise float _313 = _312 + _311;
    precise float _314 = 1.0 * cbObjMatrix._m0[_287].w;
    precise float _315 = _314 + _313;
    float _353 = (fma(POSITION.z, cbPrevObjMatrix._m0[_273].z, fma(POSITION.y, cbPrevObjMatrix._m0[_273].y, cbPrevObjMatrix._m0[_273].x * POSITION.x)) + cbPrevObjMatrix._m0[_273].w) - cbSceneParam._m0[28u].x;
    float _354 = (fma(POSITION.z, cbPrevObjMatrix._m0[_280].z, fma(POSITION.y, cbPrevObjMatrix._m0[_280].y, cbPrevObjMatrix._m0[_280].x * POSITION.x)) + cbPrevObjMatrix._m0[_280].w) - cbSceneParam._m0[28u].y;
    float _355 = (fma(POSITION.z, cbPrevObjMatrix._m0[_287].z, fma(POSITION.y, cbPrevObjMatrix._m0[_287].y, cbPrevObjMatrix._m0[_287].x * POSITION.x)) + cbPrevObjMatrix._m0[_287].w) - cbSceneParam._m0[28u].z;
    float _402 = fma(_230, cbObjMatrix._m0[_273].z, fma(_229, cbObjMatrix._m0[_273].y, cbObjMatrix._m0[_273].x * _227));
    float _405 = fma(_230, cbObjMatrix._m0[_280].z, fma(_229, cbObjMatrix._m0[_280].y, cbObjMatrix._m0[_280].x * _227));
    float _408 = fma(_230, cbObjMatrix._m0[_287].z, fma(_229, cbObjMatrix._m0[_287].y, cbObjMatrix._m0[_287].x * _227));
    precise float _433 = _301 - cbSceneParam._m0[3u].x;
    precise float _434 = _308 - cbSceneParam._m0[3u].y;
    precise float _435 = _315 - cbSceneParam._m0[3u].z;
    precise float _463 = _433 * cbSceneParam._m0[24u].x;
    precise float _464 = _434 * cbSceneParam._m0[24u].y;
    precise float _465 = _464 + _463;
    precise float _466 = _435 * cbSceneParam._m0[24u].z;
    precise float _467 = _466 + _465;
    precise float _468 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _469 = _468 + _467;
    precise float _470 = _433 * cbSceneParam._m0[25u].x;
    precise float _471 = _434 * cbSceneParam._m0[25u].y;
    precise float _472 = _471 + _470;
    precise float _473 = _435 * cbSceneParam._m0[25u].z;
    precise float _474 = _473 + _472;
    precise float _475 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _476 = _475 + _474;
    precise float _477 = _433 * cbSceneParam._m0[26u].x;
    precise float _478 = _434 * cbSceneParam._m0[26u].y;
    precise float _479 = _478 + _477;
    precise float _480 = _435 * cbSceneParam._m0[26u].z;
    precise float _481 = _480 + _479;
    precise float _482 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _483 = _482 + _481;
    precise float _484 = _433 * cbSceneParam._m0[27u].x;
    precise float _485 = _434 * cbSceneParam._m0[27u].y;
    precise float _486 = _485 + _484;
    precise float _487 = _435 * cbSceneParam._m0[27u].z;
    precise float _488 = _487 + _486;
    precise float _489 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _490 = _489 + _488;
    gl_Position.x = _469;
    gl_Position.y = _476;
    gl_Position.z = _483;
    gl_Position.w = _490;
    POSITION_1.x = _469;
    POSITION_1.y = _476;
    POSITION_1.z = _483;
    POSITION_1.w = _490;
    NORMAL_1.x = _402;
    NORMAL_1.y = _405;
    NORMAL_1.z = _408;
    NORMAL_1.w = float(_263);
    TANGENT_1.x = fma(_242, cbObjMatrix._m0[_273].z, fma(_241, cbObjMatrix._m0[_273].y, cbObjMatrix._m0[_273].x * _240));
    TANGENT_1.y = fma(_242, cbObjMatrix._m0[_280].z, fma(_241, cbObjMatrix._m0[_280].y, cbObjMatrix._m0[_280].x * _240));
    TANGENT_1.z = fma(_242, cbObjMatrix._m0[_287].z, fma(_241, cbObjMatrix._m0[_287].y, cbObjMatrix._m0[_287].x * _240));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_254, cbObjMatrix._m0[_273].z, fma(_253, cbObjMatrix._m0[_273].y, cbObjMatrix._m0[_273].x * _252));
    TANGENT_2_1.y = fma(_254, cbObjMatrix._m0[_280].z, fma(_253, cbObjMatrix._m0[_280].y, cbObjMatrix._m0[_280].x * _252));
    TANGENT_2_1.z = fma(_254, cbObjMatrix._m0[_287].z, fma(_253, cbObjMatrix._m0[_287].y, cbObjMatrix._m0[_287].x * _252));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_4.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_2.x;
    TEXCOORD_5.w = TEXCOORD_2.y;
    TEXCOORD_9.x = TEXCOORD_3.x;
    TEXCOORD_9.y = TEXCOORD_3.y;
    TEXCOORD_9.z = TEXCOORD_3.z;
    TEXCOORD_9.w = COLOR_1.x;
    TEXCOORD_14.x = _469;
    TEXCOORD_14.y = _476;
    TEXCOORD_14.z = _483;
    TEXCOORD_14.w = _490;
    TEXCOORD_15.x = fma(_355, cbSceneParam._m0[29u].z, fma(_354, cbSceneParam._m0[29u].y, _353 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_15.y = fma(_355, cbSceneParam._m0[30u].z, fma(_354, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _353)) + cbSceneParam._m0[30u].w;
    TEXCOORD_15.z = fma(_355, cbSceneParam._m0[31u].z, fma(_354, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _353)) + cbSceneParam._m0[31u].w;
    TEXCOORD_15.w = fma(_355, cbSceneParam._m0[32u].z, fma(_354, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _353)) + cbSceneParam._m0[32u].w;
    TEXCOORD_16.x = _402;
    TEXCOORD_16.y = _405;
    TEXCOORD_16.z = _408;
    gl_ClipDistance[0u] = dot(vec4(_469, _476, _483, _490), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_469, _476, _483, _490), vec4(cbInstanceData._m0[_265 + 3u]));
}


