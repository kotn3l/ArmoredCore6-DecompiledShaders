#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_1;
layout(location = 7) in vec4 TEXCOORD_2;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_4;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_9;
layout(location = 7) out float TEXCOORD_17;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_17 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _204 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _219 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _229 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _230 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _231 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _237 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _239 = texelFetch(g_InstanceIndexBuffer, int(_237));
    uint _240 = _239.x;
    uint _242 = _240 * 13u;
    uint _250 = (floatBitsToUint(cbInstanceData._m0[_242 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _257 = _250 + 1u;
    uint _264 = _250 + 2u;
    precise float _271 = POSITION.x * cbObjMatrix._m0[_250].x;
    precise float _272 = POSITION.y * cbObjMatrix._m0[_250].y;
    precise float _273 = _272 + _271;
    precise float _274 = POSITION.z * cbObjMatrix._m0[_250].z;
    precise float _275 = _274 + _273;
    precise float _276 = 1.0 * cbObjMatrix._m0[_250].w;
    precise float _278 = _276 + _275;
    precise float _279 = POSITION.x * cbObjMatrix._m0[_257].x;
    precise float _280 = POSITION.y * cbObjMatrix._m0[_257].y;
    precise float _281 = _280 + _279;
    precise float _282 = POSITION.z * cbObjMatrix._m0[_257].z;
    precise float _283 = _282 + _281;
    precise float _284 = 1.0 * cbObjMatrix._m0[_257].w;
    precise float _285 = _284 + _283;
    precise float _286 = POSITION.x * cbObjMatrix._m0[_264].x;
    precise float _287 = POSITION.y * cbObjMatrix._m0[_264].y;
    precise float _288 = _287 + _286;
    precise float _289 = POSITION.z * cbObjMatrix._m0[_264].z;
    precise float _290 = _289 + _288;
    precise float _291 = 1.0 * cbObjMatrix._m0[_264].w;
    precise float _292 = _291 + _290;
    float _298 = cbSceneParam._m0[3u].x - _278;
    float _299 = cbSceneParam._m0[3u].y - _285;
    float _300 = cbSceneParam._m0[3u].z - _292;
    precise float _336 = _278 - cbSceneParam._m0[3u].x;
    precise float _337 = _285 - cbSceneParam._m0[3u].y;
    precise float _338 = _292 - cbSceneParam._m0[3u].z;
    precise float _366 = _336 * cbSceneParam._m0[24u].x;
    precise float _367 = _337 * cbSceneParam._m0[24u].y;
    precise float _368 = _367 + _366;
    precise float _369 = _338 * cbSceneParam._m0[24u].z;
    precise float _370 = _369 + _368;
    precise float _371 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _372 = _371 + _370;
    precise float _373 = _336 * cbSceneParam._m0[25u].x;
    precise float _374 = _337 * cbSceneParam._m0[25u].y;
    precise float _375 = _374 + _373;
    precise float _376 = _338 * cbSceneParam._m0[25u].z;
    precise float _377 = _376 + _375;
    precise float _378 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _379 = _378 + _377;
    precise float _380 = _336 * cbSceneParam._m0[26u].x;
    precise float _381 = _337 * cbSceneParam._m0[26u].y;
    precise float _382 = _381 + _380;
    precise float _383 = _338 * cbSceneParam._m0[26u].z;
    precise float _384 = _383 + _382;
    precise float _385 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _386 = _385 + _384;
    precise float _387 = _336 * cbSceneParam._m0[27u].x;
    precise float _388 = _337 * cbSceneParam._m0[27u].y;
    precise float _389 = _388 + _387;
    precise float _390 = _338 * cbSceneParam._m0[27u].z;
    precise float _391 = _390 + _389;
    precise float _392 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _393 = _392 + _391;
    gl_Position.x = _372;
    gl_Position.y = _379;
    gl_Position.z = _386;
    gl_Position.w = _393;
    NORMAL_1.x = fma(_207, cbObjMatrix._m0[_250].z, fma(_206, cbObjMatrix._m0[_250].y, cbObjMatrix._m0[_250].x * _204));
    NORMAL_1.y = fma(_207, cbObjMatrix._m0[_257].z, fma(_206, cbObjMatrix._m0[_257].y, cbObjMatrix._m0[_257].x * _204));
    NORMAL_1.z = fma(_207, cbObjMatrix._m0[_264].z, fma(_206, cbObjMatrix._m0[_264].y, cbObjMatrix._m0[_264].x * _204));
    NORMAL_1.w = float(_240);
    TANGENT_1.x = fma(_219, cbObjMatrix._m0[_250].z, fma(_218, cbObjMatrix._m0[_250].y, cbObjMatrix._m0[_250].x * _217));
    TANGENT_1.y = fma(_219, cbObjMatrix._m0[_257].z, fma(_218, cbObjMatrix._m0[_257].y, cbObjMatrix._m0[_257].x * _217));
    TANGENT_1.z = fma(_219, cbObjMatrix._m0[_264].z, fma(_218, cbObjMatrix._m0[_264].y, cbObjMatrix._m0[_264].x * _217));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_231, cbObjMatrix._m0[_250].z, fma(_230, cbObjMatrix._m0[_250].y, cbObjMatrix._m0[_250].x * _229));
    TANGENT_2_1.y = fma(_231, cbObjMatrix._m0[_257].z, fma(_230, cbObjMatrix._m0[_257].y, cbObjMatrix._m0[_257].x * _229));
    TANGENT_2_1.z = fma(_231, cbObjMatrix._m0[_264].z, fma(_230, cbObjMatrix._m0[_264].y, cbObjMatrix._m0[_264].x * _229));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_4.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_2.x;
    TEXCOORD_5.w = TEXCOORD_2.y;
    TEXCOORD_9.x = TEXCOORD_3.x;
    TEXCOORD_9.y = TEXCOORD_3.y;
    TEXCOORD_9.z = TEXCOORD_3.z;
    TEXCOORD_9.w = COLOR_1.x;
    TEXCOORD_17 = sqrt(((_298 * _298) + (_299 * _299)) + (_300 * _300));
    gl_ClipDistance[0u] = dot(vec4(_372, _379, _386, _393), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_372, _379, _386, _393), vec4(cbInstanceData._m0[_242 + 3u]));
}


